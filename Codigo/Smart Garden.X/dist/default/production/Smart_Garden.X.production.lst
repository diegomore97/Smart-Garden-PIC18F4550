

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Jun 21 13:32:45 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    88                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    90                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    91  0000                     
    92                           ; Version 2.10
    93                           ; Generated 31/07/2019 GMT
    94                           ; 
    95                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    96                           ; All rights reserved.
    97                           ; 
    98                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    99                           ; 
   100                           ; Redistribution and use in source and binary forms, with or without modification, are
   101                           ; permitted provided that the following conditions are met:
   102                           ; 
   103                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   104                           ;        conditions and the following disclaimer.
   105                           ; 
   106                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   107                           ;        of conditions and the following disclaimer in the documentation and/or other
   108                           ;        materials provided with the distribution.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC18F4550 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126  0000                     
   127                           	psect	idataBANK0
   128  0032D4                     __pidataBANK0:
   129                           	opt callstack 0
   130                           
   131                           ;initializer for stoa@F1144
   132  0032D4  28                 	db	40
   133  0032D5  6E                 	db	110
   134  0032D6  75                 	db	117
   135  0032D7  6C                 	db	108
   136  0032D8  6C                 	db	108
   137  0032D9  29                 	db	41
   138  0032DA  00                 	db	0
   139                           
   140                           ;initializer for _VALOR_TIMER0
   141  0032DB  6769               	dw	26473
   142                           
   143                           ;initializer for _VALOR_TIMER0UART
   144  0032DD  6769               	dw	26473
   145  0000                     _TMR0	set	4054
   146  0000                     _TRISD	set	3989
   147  0000                     _T0CON	set	4053
   148  0000                     _T0CONbits	set	4053
   149  0000                     _LATD	set	3980
   150  0000                     _PIE1bits	set	3997
   151  0000                     _ADRESL	set	4035
   152  0000                     _ADRESH	set	4036
   153  0000                     _ADCON0bits	set	4034
   154  0000                     _ADCON2	set	4032
   155  0000                     _ADCON1	set	4033
   156  0000                     _INTCONbits	set	4082
   157  0000                     _LATDbits	set	3980
   158  0000                     _TRISDbits	set	3989
   159  0000                     _PORTDbits	set	3971
   160  0000                     _TXREG	set	4013
   161  0000                     _RCREG	set	4014
   162  0000                     _PIR1bits	set	3998
   163  0000                     _RCSTAbits	set	4011
   164  0000                     _TXSTAbits	set	4012
   165  0000                     _SPBRG	set	4015
   166  0000                     _TRISCbits	set	3988
   167  0000                     _SSPBUF	set	4041
   168  0000                     _SSPCON2bits	set	4037
   169  0000                     _SSPADD	set	4040
   170  0000                     _SSPCON2	set	4037
   171  0000                     _SSPCON1	set	4038
   172  0000                     _SSPSTAT	set	4039
   173  0000                     _TRISBbits	set	3987
   174  0000                     _ACKSTAT	set	32302
   175                           
   176                           	psect	mediumconst
   177  007942                     __pmediumconst:
   178                           	opt callstack 0
   179  007942  00                 	db	0
   180  007943                     STR_17:
   181  007943  0D                 	db	13
   182  007944  0A                 	db	10
   183  007945  20                 	db	32
   184  007946  49                 	db	73	;'I'
   185  007947  6E                 	db	110	;'n'
   186  007948  67                 	db	103	;'g'
   187  007949  72                 	db	114	;'r'
   188  00794A  65                 	db	101	;'e'
   189  00794B  73                 	db	115	;'s'
   190  00794C  65                 	db	101	;'e'
   191  00794D  20                 	db	32
   192  00794E  6C                 	db	108	;'l'
   193  00794F  6F                 	db	111	;'o'
   194  007950  73                 	db	115	;'s'
   195  007951  20                 	db	32
   196  007952  6D                 	db	109	;'m'
   197  007953  69                 	db	105	;'i'
   198  007954  6E                 	db	110	;'n'
   199  007955  75                 	db	117	;'u'
   200  007956  74                 	db	116	;'t'
   201  007957  6F                 	db	111	;'o'
   202  007958  73                 	db	115	;'s'
   203  007959  20                 	db	32
   204  00795A  71                 	db	113	;'q'
   205  00795B  75                 	db	117	;'u'
   206  00795C  65                 	db	101	;'e'
   207  00795D  20                 	db	32
   208  00795E  64                 	db	100	;'d'
   209  00795F  65                 	db	101	;'e'
   210  007960  73                 	db	115	;'s'
   211  007961  65                 	db	101	;'e'
   212  007962  65                 	db	101	;'e'
   213  007963  20                 	db	32
   214  007964  71                 	db	113	;'q'
   215  007965  75                 	db	117	;'u'
   216  007966  65                 	db	101	;'e'
   217  007967  20                 	db	32
   218  007968  73                 	db	115	;'s'
   219  007969  65                 	db	101	;'e'
   220  00796A  20                 	db	32
   221  00796B  72                 	db	114	;'r'
   222  00796C  69                 	db	105	;'i'
   223  00796D  65                 	db	101	;'e'
   224  00796E  67                 	db	103	;'g'
   225  00796F  75                 	db	117	;'u'
   226  007970  65                 	db	101	;'e'
   227  007971  20                 	db	32
   228  007972  65                 	db	101	;'e'
   229  007973  6E                 	db	110	;'n'
   230  007974  20                 	db	32
   231  007975  65                 	db	101	;'e'
   232  007976  73                 	db	115	;'s'
   233  007977  65                 	db	101	;'e'
   234  007978  20                 	db	32
   235  007979  68                 	db	104	;'h'
   236  00797A  6F                 	db	111	;'o'
   237  00797B  72                 	db	114	;'r'
   238  00797C  61                 	db	97	;'a'
   239  00797D  72                 	db	114	;'r'
   240  00797E  69                 	db	105	;'i'
   241  00797F  6F                 	db	111	;'o'
   242  007980  20                 	db	32
   243  007981  65                 	db	101	;'e'
   244  007982  6A                 	db	106	;'j'
   245  007983  3A                 	db	58	;':'
   246  007984  20                 	db	32
   247  007985  31                 	db	49	;'1'
   248  007986  35                 	db	53	;'5'
   249  007987  20                 	db	32
   250  007988  0D                 	db	13
   251  007989  0A                 	db	10
   252  00798A  00                 	db	0
   253  00798B                     STR_1:
   254  00798B  0D                 	db	13
   255  00798C  0A                 	db	10
   256  00798D  20                 	db	32
   257  00798E  45                 	db	69	;'E'
   258  00798F  6E                 	db	110	;'n'
   259  007990  76                 	db	118	;'v'
   260  007991  69                 	db	105	;'i'
   261  007992  65                 	db	101	;'e'
   262  007993  20                 	db	32
   263  007994  65                 	db	101	;'e'
   264  007995  6C                 	db	108	;'l'
   265  007996  20                 	db	32
   266  007997  64                 	db	100	;'d'
   267  007998  69                 	db	105	;'i'
   268  007999  61                 	db	97	;'a'
   269  00799A  20                 	db	32
   270  00799B  64                 	db	100	;'d'
   271  00799C  65                 	db	101	;'e'
   272  00799D  20                 	db	32
   273  00799E  6C                 	db	108	;'l'
   274  00799F  61                 	db	97	;'a'
   275  0079A0  20                 	db	32
   276  0079A1  73                 	db	115	;'s'
   277  0079A2  65                 	db	101	;'e'
   278  0079A3  6D                 	db	109	;'m'
   279  0079A4  61                 	db	97	;'a'
   280  0079A5  6E                 	db	110	;'n'
   281  0079A6  61                 	db	97	;'a'
   282  0079A7  20                 	db	32
   283  0079A8  45                 	db	69	;'E'
   284  0079A9  6A                 	db	106	;'j'
   285  0079AA  3A                 	db	58	;':'
   286  0079AB  20                 	db	32
   287  0079AC  30                 	db	48	;'0'
   288  0079AD  31                 	db	49	;'1'
   289  0079AE  20                 	db	32
   290  0079AF  3D                 	db	61	;'='
   291  0079B0  20                 	db	32
   292  0079B1  44                 	db	68	;'D'
   293  0079B2  4F                 	db	79	;'O'
   294  0079B3  4D                 	db	77	;'M'
   295  0079B4  49                 	db	73	;'I'
   296  0079B5  4E                 	db	78	;'N'
   297  0079B6  47                 	db	71	;'G'
   298  0079B7  4F                 	db	79	;'O'
   299  0079B8  20                 	db	32
   300  0079B9  2E                 	db	46
   301  0079BA  2E                 	db	46
   302  0079BB  2E                 	db	46
   303  0079BC  20                 	db	32
   304  0079BD  30                 	db	48	;'0'
   305  0079BE  37                 	db	55	;'7'
   306  0079BF  20                 	db	32
   307  0079C0  3D                 	db	61	;'='
   308  0079C1  20                 	db	32
   309  0079C2  53                 	db	83	;'S'
   310  0079C3  41                 	db	65	;'A'
   311  0079C4  42                 	db	66	;'B'
   312  0079C5  41                 	db	65	;'A'
   313  0079C6  44                 	db	68	;'D'
   314  0079C7  4F                 	db	79	;'O'
   315  0079C8  20                 	db	32
   316  0079C9  0D                 	db	13
   317  0079CA  0A                 	db	10
   318  0079CB  00                 	db	0
   319  0079CC                     STR_9:
   320  0079CC  0D                 	db	13
   321  0079CD  0A                 	db	10
   322  0079CE  20                 	db	32
   323  0079CF  49                 	db	73	;'I'
   324  0079D0  6E                 	db	110	;'n'
   325  0079D1  67                 	db	103	;'g'
   326  0079D2  72                 	db	114	;'r'
   327  0079D3  65                 	db	101	;'e'
   328  0079D4  73                 	db	115	;'s'
   329  0079D5  65                 	db	101	;'e'
   330  0079D6  20                 	db	32
   331  0079D7  31                 	db	49	;'1'
   332  0079D8  20                 	db	32
   333  0079D9  70                 	db	112	;'p'
   334  0079DA  61                 	db	97	;'a'
   335  0079DB  72                 	db	114	;'r'
   336  0079DC  61                 	db	97	;'a'
   337  0079DD  20                 	db	32
   338  0079DE  61                 	db	97	;'a'
   339  0079DF  63                 	db	99	;'c'
   340  0079E0  74                 	db	116	;'t'
   341  0079E1  69                 	db	105	;'i'
   342  0079E2  76                 	db	118	;'v'
   343  0079E3  61                 	db	97	;'a'
   344  0079E4  72                 	db	114	;'r'
   345  0079E5  20                 	db	32
   346  0079E6  7C                 	db	124
   347  0079E7  7C                 	db	124
   348  0079E8  20                 	db	32
   349  0079E9  69                 	db	105	;'i'
   350  0079EA  6E                 	db	110	;'n'
   351  0079EB  67                 	db	103	;'g'
   352  0079EC  72                 	db	114	;'r'
   353  0079ED  65                 	db	101	;'e'
   354  0079EE  73                 	db	115	;'s'
   355  0079EF  65                 	db	101	;'e'
   356  0079F0  20                 	db	32
   357  0079F1  30                 	db	48	;'0'
   358  0079F2  20                 	db	32
   359  0079F3  70                 	db	112	;'p'
   360  0079F4  61                 	db	97	;'a'
   361  0079F5  72                 	db	114	;'r'
   362  0079F6  61                 	db	97	;'a'
   363  0079F7  20                 	db	32
   364  0079F8  64                 	db	100	;'d'
   365  0079F9  65                 	db	101	;'e'
   366  0079FA  73                 	db	115	;'s'
   367  0079FB  61                 	db	97	;'a'
   368  0079FC  63                 	db	99	;'c'
   369  0079FD  74                 	db	116	;'t'
   370  0079FE  69                 	db	105	;'i'
   371  0079FF  76                 	db	118	;'v'
   372  007A00  61                 	db	97	;'a'
   373  007A01  72                 	db	114	;'r'
   374  007A02  3A                 	db	58	;':'
   375  007A03  20                 	db	32
   376  007A04  0D                 	db	13
   377  007A05  0A                 	db	10
   378  007A06  00                 	db	0
   379  007A07                     STR_60:
   380  007A07  0D                 	db	13
   381  007A08  0A                 	db	10
   382  007A09  20                 	db	32
   383  007A0A  59                 	db	89	;'Y'
   384  007A0B  61                 	db	97	;'a'
   385  007A0C  20                 	db	32
   386  007A0D  73                 	db	115	;'s'
   387  007A0E  65                 	db	101	;'e'
   388  007A0F  20                 	db	32
   389  007A10  65                 	db	101	;'e'
   390  007A11  73                 	db	115	;'s'
   391  007A12  74                 	db	116	;'t'
   392  007A13  61                 	db	97	;'a'
   393  007A14  20                 	db	32
   394  007A15  65                 	db	101	;'e'
   395  007A16  66                 	db	102	;'f'
   396  007A17  65                 	db	101	;'e'
   397  007A18  63                 	db	99	;'c'
   398  007A19  74                 	db	116	;'t'
   399  007A1A  75                 	db	117	;'u'
   400  007A1B  61                 	db	97	;'a'
   401  007A1C  6E                 	db	110	;'n'
   402  007A1D  64                 	db	100	;'d'
   403  007A1E  6F                 	db	111	;'o'
   404  007A1F  20                 	db	32
   405  007A20  75                 	db	117	;'u'
   406  007A21  6E                 	db	110	;'n'
   407  007A22  20                 	db	32
   408  007A23  72                 	db	114	;'r'
   409  007A24  69                 	db	105	;'i'
   410  007A25  65                 	db	101	;'e'
   411  007A26  67                 	db	103	;'g'
   412  007A27  6F                 	db	111	;'o'
   413  007A28  2C                 	db	44
   414  007A29  20                 	db	32
   415  007A2A  69                 	db	105	;'i'
   416  007A2B  6E                 	db	110	;'n'
   417  007A2C  74                 	db	116	;'t'
   418  007A2D  65                 	db	101	;'e'
   419  007A2E  6E                 	db	110	;'n'
   420  007A2F  74                 	db	116	;'t'
   421  007A30  65                 	db	101	;'e'
   422  007A31  6C                 	db	108	;'l'
   423  007A32  6F                 	db	111	;'o'
   424  007A33  20                 	db	32
   425  007A34  6D                 	db	109	;'m'
   426  007A35  61                 	db	97	;'a'
   427  007A36  73                 	db	115	;'s'
   428  007A37  20                 	db	32
   429  007A38  74                 	db	116	;'t'
   430  007A39  61                 	db	97	;'a'
   431  007A3A  72                 	db	114	;'r'
   432  007A3B  64                 	db	100	;'d'
   433  007A3C  65                 	db	101	;'e'
   434  007A3D  20                 	db	32
   435  007A3E  0D                 	db	13
   436  007A3F  0A                 	db	10
   437  007A40  00                 	db	0
   438  007A41                     STR_59:
   439  007A41  0D                 	db	13
   440  007A42  0A                 	db	10
   441  007A43  20                 	db	32
   442  007A44  49                 	db	73	;'I'
   443  007A45  6E                 	db	110	;'n'
   444  007A46  67                 	db	103	;'g'
   445  007A47  72                 	db	114	;'r'
   446  007A48  65                 	db	101	;'e'
   447  007A49  73                 	db	115	;'s'
   448  007A4A  65                 	db	101	;'e'
   449  007A4B  20                 	db	32
   450  007A4C  65                 	db	101	;'e'
   451  007A4D  6C                 	db	108	;'l'
   452  007A4E  20                 	db	32
   453  007A4F  6E                 	db	110	;'n'
   454  007A50  75                 	db	117	;'u'
   455  007A51  6D                 	db	109	;'m'
   456  007A52  65                 	db	101	;'e'
   457  007A53  72                 	db	114	;'r'
   458  007A54  6F                 	db	111	;'o'
   459  007A55  20                 	db	32
   460  007A56  64                 	db	100	;'d'
   461  007A57  65                 	db	101	;'e'
   462  007A58  20                 	db	32
   463  007A59  73                 	db	115	;'s'
   464  007A5A  65                 	db	101	;'e'
   465  007A5B  6E                 	db	110	;'n'
   466  007A5C  73                 	db	115	;'s'
   467  007A5D  6F                 	db	111	;'o'
   468  007A5E  72                 	db	114	;'r'
   469  007A5F  20                 	db	32
   470  007A60  64                 	db	100	;'d'
   471  007A61  65                 	db	101	;'e'
   472  007A62  6C                 	db	108	;'l'
   473  007A63  20                 	db	32
   474  007A64  61                 	db	97	;'a'
   475  007A65  72                 	db	114	;'r'
   476  007A66  65                 	db	101	;'e'
   477  007A67  61                 	db	97	;'a'
   478  007A68  20                 	db	32
   479  007A69  61                 	db	97	;'a'
   480  007A6A  20                 	db	32
   481  007A6B  72                 	db	114	;'r'
   482  007A6C  65                 	db	101	;'e'
   483  007A6D  67                 	db	103	;'g'
   484  007A6E  61                 	db	97	;'a'
   485  007A6F  72                 	db	114	;'r'
   486  007A70  20                 	db	32
   487  007A71  65                 	db	101	;'e'
   488  007A72  6A                 	db	106	;'j'
   489  007A73  3A                 	db	58	;':'
   490  007A74  20                 	db	32
   491  007A75  35                 	db	53	;'5'
   492  007A76  20                 	db	32
   493  007A77  0D                 	db	13
   494  007A78  0A                 	db	10
   495  007A79  00                 	db	0
   496  007A7A                     STR_58:
   497  007A7A  0D                 	db	13
   498  007A7B  0A                 	db	10
   499  007A7C  20                 	db	32
   500  007A7D  49                 	db	73	;'I'
   501  007A7E  6E                 	db	110	;'n'
   502  007A7F  67                 	db	103	;'g'
   503  007A80  72                 	db	114	;'r'
   504  007A81  65                 	db	101	;'e'
   505  007A82  73                 	db	115	;'s'
   506  007A83  65                 	db	101	;'e'
   507  007A84  20                 	db	32
   508  007A85  6C                 	db	108	;'l'
   509  007A86  6F                 	db	111	;'o'
   510  007A87  73                 	db	115	;'s'
   511  007A88  20                 	db	32
   512  007A89  6D                 	db	109	;'m'
   513  007A8A  69                 	db	105	;'i'
   514  007A8B  6E                 	db	110	;'n'
   515  007A8C  75                 	db	117	;'u'
   516  007A8D  74                 	db	116	;'t'
   517  007A8E  6F                 	db	111	;'o'
   518  007A8F  73                 	db	115	;'s'
   519  007A90  20                 	db	32
   520  007A91  71                 	db	113	;'q'
   521  007A92  75                 	db	117	;'u'
   522  007A93  65                 	db	101	;'e'
   523  007A94  20                 	db	32
   524  007A95  64                 	db	100	;'d'
   525  007A96  65                 	db	101	;'e'
   526  007A97  73                 	db	115	;'s'
   527  007A98  65                 	db	101	;'e'
   528  007A99  65                 	db	101	;'e'
   529  007A9A  20                 	db	32
   530  007A9B  71                 	db	113	;'q'
   531  007A9C  75                 	db	117	;'u'
   532  007A9D  65                 	db	101	;'e'
   533  007A9E  20                 	db	32
   534  007A9F  73                 	db	115	;'s'
   535  007AA0  65                 	db	101	;'e'
   536  007AA1  20                 	db	32
   537  007AA2  72                 	db	114	;'r'
   538  007AA3  69                 	db	105	;'i'
   539  007AA4  65                 	db	101	;'e'
   540  007AA5  67                 	db	103	;'g'
   541  007AA6  75                 	db	117	;'u'
   542  007AA7  65                 	db	101	;'e'
   543  007AA8  20                 	db	32
   544  007AA9  65                 	db	101	;'e'
   545  007AAA  6A                 	db	106	;'j'
   546  007AAB  3A                 	db	58	;':'
   547  007AAC  20                 	db	32
   548  007AAD  31                 	db	49	;'1'
   549  007AAE  35                 	db	53	;'5'
   550  007AAF  20                 	db	32
   551  007AB0  0D                 	db	13
   552  007AB1  0A                 	db	10
   553  007AB2  00                 	db	0
   554  007AB3                     STR_8:
   555  007AB3  0D                 	db	13
   556  007AB4  0A                 	db	10
   557  007AB5  20                 	db	32
   558  007AB6  49                 	db	73	;'I'
   559  007AB7  6E                 	db	110	;'n'
   560  007AB8  67                 	db	103	;'g'
   561  007AB9  72                 	db	114	;'r'
   562  007ABA  65                 	db	101	;'e'
   563  007ABB  73                 	db	115	;'s'
   564  007ABC  65                 	db	101	;'e'
   565  007ABD  20                 	db	32
   566  007ABE  75                 	db	117	;'u'
   567  007ABF  6E                 	db	110	;'n'
   568  007AC0  61                 	db	97	;'a'
   569  007AC1  20                 	db	32
   570  007AC2  68                 	db	104	;'h'
   571  007AC3  6F                 	db	111	;'o'
   572  007AC4  72                 	db	114	;'r'
   573  007AC5  61                 	db	97	;'a'
   574  007AC6  20                 	db	32
   575  007AC7  65                 	db	101	;'e'
   576  007AC8  6E                 	db	110	;'n'
   577  007AC9  20                 	db	32
   578  007ACA  66                 	db	102	;'f'
   579  007ACB  6F                 	db	111	;'o'
   580  007ACC  72                 	db	114	;'r'
   581  007ACD  6D                 	db	109	;'m'
   582  007ACE  61                 	db	97	;'a'
   583  007ACF  74                 	db	116	;'t'
   584  007AD0  6F                 	db	111	;'o'
   585  007AD1  20                 	db	32
   586  007AD2  64                 	db	100	;'d'
   587  007AD3  65                 	db	101	;'e'
   588  007AD4  20                 	db	32
   589  007AD5  32                 	db	50	;'2'
   590  007AD6  34                 	db	52	;'4'
   591  007AD7  20                 	db	32
   592  007AD8  68                 	db	104	;'h'
   593  007AD9  72                 	db	114	;'r'
   594  007ADA  73                 	db	115	;'s'
   595  007ADB  20                 	db	32
   596  007ADC  65                 	db	101	;'e'
   597  007ADD  6A                 	db	106	;'j'
   598  007ADE  3A                 	db	58	;':'
   599  007ADF  20                 	db	32
   600  007AE0  31                 	db	49	;'1'
   601  007AE1  35                 	db	53	;'5'
   602  007AE2  20                 	db	32
   603  007AE3  0D                 	db	13
   604  007AE4  0A                 	db	10
   605  007AE5  00                 	db	0
   606  007AE6                     STR_20:
   607  007AE6  0D                 	db	13
   608  007AE7  0A                 	db	10
   609  007AE8  49                 	db	73	;'I'
   610  007AE9  6E                 	db	110	;'n'
   611  007AEA  67                 	db	103	;'g'
   612  007AEB  72                 	db	114	;'r'
   613  007AEC  65                 	db	101	;'e'
   614  007AED  73                 	db	115	;'s'
   615  007AEE  65                 	db	101	;'e'
   616  007AEF  20                 	db	32
   617  007AF0  65                 	db	101	;'e'
   618  007AF1  6C                 	db	108	;'l'
   619  007AF2  20                 	db	32
   620  007AF3  70                 	db	112	;'p'
   621  007AF4  6F                 	db	111	;'o'
   622  007AF5  72                 	db	114	;'r'
   623  007AF6  63                 	db	99	;'c'
   624  007AF7  65                 	db	101	;'e'
   625  007AF8  6E                 	db	110	;'n'
   626  007AF9  74                 	db	116	;'t'
   627  007AFA  61                 	db	97	;'a'
   628  007AFB  6A                 	db	106	;'j'
   629  007AFC  65                 	db	101	;'e'
   630  007AFD  20                 	db	32
   631  007AFE  64                 	db	100	;'d'
   632  007AFF  65                 	db	101	;'e'
   633  007B00  20                 	db	32
   634  007B01  68                 	db	104	;'h'
   635  007B02  75                 	db	117	;'u'
   636  007B03  6D                 	db	109	;'m'
   637  007B04  65                 	db	101	;'e'
   638  007B05  64                 	db	100	;'d'
   639  007B06  61                 	db	97	;'a'
   640  007B07  64                 	db	100	;'d'
   641  007B08  20                 	db	32
   642  007B09  64                 	db	100	;'d'
   643  007B0A  65                 	db	101	;'e'
   644  007B0B  6C                 	db	108	;'l'
   645  007B0C  20                 	db	32
   646  007B0D  73                 	db	115	;'s'
   647  007B0E  65                 	db	101	;'e'
   648  007B0F  6E                 	db	110	;'n'
   649  007B10  73                 	db	115	;'s'
   650  007B11  6F                 	db	111	;'o'
   651  007B12  72                 	db	114	;'r'
   652  007B13  20                 	db	32
   653  007B14  25                 	db	37
   654  007B15  64                 	db	100	;'d'
   655  007B16  0D                 	db	13
   656  007B17  0A                 	db	10
   657  007B18  00                 	db	0
   658  007B19                     STR_25:
   659  007B19  0D                 	db	13
   660  007B1A  0A                 	db	10
   661  007B1B  20                 	db	32
   662  007B1C  33                 	db	51	;'3'
   663  007B1D  2E                 	db	46
   664  007B1E  20                 	db	32
   665  007B1F  50                 	db	80	;'P'
   666  007B20  72                 	db	114	;'r'
   667  007B21  6F                 	db	111	;'o'
   668  007B22  67                 	db	103	;'g'
   669  007B23  72                 	db	114	;'r'
   670  007B24  61                 	db	97	;'a'
   671  007B25  6D                 	db	109	;'m'
   672  007B26  61                 	db	97	;'a'
   673  007B27  72                 	db	114	;'r'
   674  007B28  20                 	db	32
   675  007B29  74                 	db	116	;'t'
   676  007B2A  69                 	db	105	;'i'
   677  007B2B  65                 	db	101	;'e'
   678  007B2C  6D                 	db	109	;'m'
   679  007B2D  70                 	db	112	;'p'
   680  007B2E  6F                 	db	111	;'o'
   681  007B2F  20                 	db	32
   682  007B30  64                 	db	100	;'d'
   683  007B31  65                 	db	101	;'e'
   684  007B32  20                 	db	32
   685  007B33  72                 	db	114	;'r'
   686  007B34  69                 	db	105	;'i'
   687  007B35  65                 	db	101	;'e'
   688  007B36  67                 	db	103	;'g'
   689  007B37  6F                 	db	111	;'o'
   690  007B38  20                 	db	32
   691  007B39  65                 	db	101	;'e'
   692  007B3A  6E                 	db	110	;'n'
   693  007B3B  20                 	db	32
   694  007B3C  75                 	db	117	;'u'
   695  007B3D  6E                 	db	110	;'n'
   696  007B3E  20                 	db	32
   697  007B3F  68                 	db	104	;'h'
   698  007B40  6F                 	db	111	;'o'
   699  007B41  72                 	db	114	;'r'
   700  007B42  61                 	db	97	;'a'
   701  007B43  72                 	db	114	;'r'
   702  007B44  69                 	db	105	;'i'
   703  007B45  6F                 	db	111	;'o'
   704  007B46  20                 	db	32
   705  007B47  0D                 	db	13
   706  007B48  0A                 	db	10
   707  007B49  00                 	db	0
   708  007B4A                     STR_49:
   709  007B4A  0D                 	db	13
   710  007B4B  0A                 	db	10
   711  007B4C  0A                 	db	10
   712  007B4D  50                 	db	80	;'P'
   713  007B4E  6F                 	db	111	;'o'
   714  007B4F  72                 	db	114	;'r'
   715  007B50  63                 	db	99	;'c'
   716  007B51  65                 	db	101	;'e'
   717  007B52  6E                 	db	110	;'n'
   718  007B53  74                 	db	116	;'t'
   719  007B54  61                 	db	97	;'a'
   720  007B55  6A                 	db	106	;'j'
   721  007B56  65                 	db	101	;'e'
   722  007B57  20                 	db	32
   723  007B58  48                 	db	72	;'H'
   724  007B59  75                 	db	117	;'u'
   725  007B5A  6D                 	db	109	;'m'
   726  007B5B  65                 	db	101	;'e'
   727  007B5C  64                 	db	100	;'d'
   728  007B5D  61                 	db	97	;'a'
   729  007B5E  64                 	db	100	;'d'
   730  007B5F  20                 	db	32
   731  007B60  64                 	db	100	;'d'
   732  007B61  65                 	db	101	;'e'
   733  007B62  6C                 	db	108	;'l'
   734  007B63  20                 	db	32
   735  007B64  73                 	db	115	;'s'
   736  007B65  65                 	db	101	;'e'
   737  007B66  6E                 	db	110	;'n'
   738  007B67  73                 	db	115	;'s'
   739  007B68  6F                 	db	111	;'o'
   740  007B69  72                 	db	114	;'r'
   741  007B6A  20                 	db	32
   742  007B6B  25                 	db	37
   743  007B6C  64                 	db	100	;'d'
   744  007B6D  3A                 	db	58	;':'
   745  007B6E  20                 	db	32
   746  007B6F  25                 	db	37
   747  007B70  64                 	db	100	;'d'
   748  007B71  20                 	db	32
   749  007B72  25                 	db	37
   750  007B73  63                 	db	99	;'c'
   751  007B74  0D                 	db	13
   752  007B75  0A                 	db	10
   753  007B76  00                 	db	0
   754  007B77                     STR_4:
   755  007B77  0D                 	db	13
   756  007B78  0A                 	db	10
   757  007B79  20                 	db	32
   758  007B7A  45                 	db	69	;'E'
   759  007B7B  6E                 	db	110	;'n'
   760  007B7C  76                 	db	118	;'v'
   761  007B7D  69                 	db	105	;'i'
   762  007B7E  65                 	db	101	;'e'
   763  007B7F  20                 	db	32
   764  007B80  6C                 	db	108	;'l'
   765  007B81  61                 	db	97	;'a'
   766  007B82  73                 	db	115	;'s'
   767  007B83  20                 	db	32
   768  007B84  48                 	db	72	;'H'
   769  007B85  6F                 	db	111	;'o'
   770  007B86  72                 	db	114	;'r'
   771  007B87  61                 	db	97	;'a'
   772  007B88  73                 	db	115	;'s'
   773  007B89  20                 	db	32
   774  007B8A  65                 	db	101	;'e'
   775  007B8B  6E                 	db	110	;'n'
   776  007B8C  20                 	db	32
   777  007B8D  66                 	db	102	;'f'
   778  007B8E  6F                 	db	111	;'o'
   779  007B8F  72                 	db	114	;'r'
   780  007B90  6D                 	db	109	;'m'
   781  007B91  61                 	db	97	;'a'
   782  007B92  74                 	db	116	;'t'
   783  007B93  6F                 	db	111	;'o'
   784  007B94  20                 	db	32
   785  007B95  32                 	db	50	;'2'
   786  007B96  34                 	db	52	;'4'
   787  007B97  20                 	db	32
   788  007B98  45                 	db	69	;'E'
   789  007B99  6A                 	db	106	;'j'
   790  007B9A  3A                 	db	58	;':'
   791  007B9B  20                 	db	32
   792  007B9C  31                 	db	49	;'1'
   793  007B9D  35                 	db	53	;'5'
   794  007B9E  20                 	db	32
   795  007B9F  0D                 	db	13
   796  007BA0  0A                 	db	10
   797  007BA1  00                 	db	0
   798  007BA2                     STR_32:
   799  007BA2  0D                 	db	13
   800  007BA3  0A                 	db	10
   801  007BA4  20                 	db	32
   802  007BA5  53                 	db	83	;'S'
   803  007BA6  6F                 	db	111	;'o'
   804  007BA7  6C                 	db	108	;'l'
   805  007BA8  6F                 	db	111	;'o'
   806  007BA9  20                 	db	32
   807  007BAA  73                 	db	115	;'s'
   808  007BAB  65                 	db	101	;'e'
   809  007BAC  20                 	db	32
   810  007BAD  70                 	db	112	;'p'
   811  007BAE  65                 	db	101	;'e'
   812  007BAF  72                 	db	114	;'r'
   813  007BB0  6D                 	db	109	;'m'
   814  007BB1  69                 	db	105	;'i'
   815  007BB2  74                 	db	116	;'t'
   816  007BB3  65                 	db	101	;'e'
   817  007BB4  6E                 	db	110	;'n'
   818  007BB5  20                 	db	32
   819  007BB6  6E                 	db	110	;'n'
   820  007BB7  75                 	db	117	;'u'
   821  007BB8  6D                 	db	109	;'m'
   822  007BB9  65                 	db	101	;'e'
   823  007BBA  72                 	db	114	;'r'
   824  007BBB  6F                 	db	111	;'o'
   825  007BBC  73                 	db	115	;'s'
   826  007BBD  20                 	db	32
   827  007BBE  64                 	db	100	;'d'
   828  007BBF  65                 	db	101	;'e'
   829  007BC0  6C                 	db	108	;'l'
   830  007BC1  20                 	db	32
   831  007BC2  31                 	db	49	;'1'
   832  007BC3  20                 	db	32
   833  007BC4  61                 	db	97	;'a'
   834  007BC5  6C                 	db	108	;'l'
   835  007BC6  20                 	db	32
   836  007BC7  37                 	db	55	;'7'
   837  007BC8  20                 	db	32
   838  007BC9  0D                 	db	13
   839  007BCA  0A                 	db	10
   840  007BCB  00                 	db	0
   841  007BCC                     STR_19:
   842  007BCC  0D                 	db	13
   843  007BCD  0A                 	db	10
   844  007BCE  53                 	db	83	;'S'
   845  007BCF  6F                 	db	111	;'o'
   846  007BD0  6C                 	db	108	;'l'
   847  007BD1  69                 	db	105	;'i'
   848  007BD2  63                 	db	99	;'c'
   849  007BD3  69                 	db	105	;'i'
   850  007BD4  74                 	db	116	;'t'
   851  007BD5  61                 	db	97	;'a'
   852  007BD6  6E                 	db	110	;'n'
   853  007BD7  64                 	db	100	;'d'
   854  007BD8  6F                 	db	111	;'o'
   855  007BD9  20                 	db	32
   856  007BDA  4D                 	db	77	;'M'
   857  007BDB  75                 	db	117	;'u'
   858  007BDC  65                 	db	101	;'e'
   859  007BDD  73                 	db	115	;'s'
   860  007BDE  74                 	db	116	;'t'
   861  007BDF  72                 	db	114	;'r'
   862  007BE0  65                 	db	101	;'e'
   863  007BE1  6F                 	db	111	;'o'
   864  007BE2  20                 	db	32
   865  007BE3  64                 	db	100	;'d'
   866  007BE4  65                 	db	101	;'e'
   867  007BE5  20                 	db	32
   868  007BE6  73                 	db	115	;'s'
   869  007BE7  65                 	db	101	;'e'
   870  007BE8  6E                 	db	110	;'n'
   871  007BE9  73                 	db	115	;'s'
   872  007BEA  6F                 	db	111	;'o'
   873  007BEB  72                 	db	114	;'r'
   874  007BEC  65                 	db	101	;'e'
   875  007BED  73                 	db	115	;'s'
   876  007BEE  0D                 	db	13
   877  007BEF  0A                 	db	10
   878  007BF0  0A                 	db	10
   879  007BF1  00                 	db	0
   880  007BF2                     STR_36:
   881  007BF2  0D                 	db	13
   882  007BF3  0A                 	db	10
   883  007BF4  44                 	db	68	;'D'
   884  007BF5  20                 	db	32
   885  007BF6  3D                 	db	61	;'='
   886  007BF7  20                 	db	32
   887  007BF8  44                 	db	68	;'D'
   888  007BF9  49                 	db	73	;'I'
   889  007BFA  41                 	db	65	;'A'
   890  007BFB  53                 	db	83	;'S'
   891  007BFC  20                 	db	32
   892  007BFD  51                 	db	81	;'Q'
   893  007BFE  55                 	db	85	;'U'
   894  007BFF  45                 	db	69	;'E'
   895  007C00  20                 	db	32
   896  007C01  45                 	db	69	;'E'
   897  007C02  4E                 	db	78	;'N'
   898  007C03  20                 	db	32
   899  007C04  4C                 	db	76	;'L'
   900  007C05  4F                 	db	79	;'O'
   901  007C06  53                 	db	83	;'S'
   902  007C07  20                 	db	32
   903  007C08  51                 	db	81	;'Q'
   904  007C09  55                 	db	85	;'U'
   905  007C0A  45                 	db	69	;'E'
   906  007C0B  20                 	db	32
   907  007C0C  53                 	db	83	;'S'
   908  007C0D  45                 	db	69	;'E'
   909  007C0E  20                 	db	32
   910  007C0F  52                 	db	82	;'R'
   911  007C10  45                 	db	69	;'E'
   912  007C11  47                 	db	71	;'G'
   913  007C12  41                 	db	65	;'A'
   914  007C13  52                 	db	82	;'R'
   915  007C14  41                 	db	65	;'A'
   916  007C15  0D                 	db	13
   917  007C16  0A                 	db	10
   918  007C17  00                 	db	0
   919  007C18                     STR_18:
   920  007C18  0D                 	db	13
   921  007C19  0A                 	db	10
   922  007C1A  20                 	db	32
   923  007C1B  4D                 	db	77	;'M'
   924  007C1C  69                 	db	105	;'i'
   925  007C1D  6E                 	db	110	;'n'
   926  007C1E  75                 	db	117	;'u'
   927  007C1F  74                 	db	116	;'t'
   928  007C20  6F                 	db	111	;'o'
   929  007C21  73                 	db	115	;'s'
   930  007C22  20                 	db	32
   931  007C23  64                 	db	100	;'d'
   932  007C24  65                 	db	101	;'e'
   933  007C25  20                 	db	32
   934  007C26  72                 	db	114	;'r'
   935  007C27  69                 	db	105	;'i'
   936  007C28  65                 	db	101	;'e'
   937  007C29  67                 	db	103	;'g'
   938  007C2A  6F                 	db	111	;'o'
   939  007C2B  20                 	db	32
   940  007C2C  65                 	db	101	;'e'
   941  007C2D  73                 	db	115	;'s'
   942  007C2E  74                 	db	116	;'t'
   943  007C2F  61                 	db	97	;'a'
   944  007C30  62                 	db	98	;'b'
   945  007C31  6C                 	db	108	;'l'
   946  007C32  65                 	db	101	;'e'
   947  007C33  63                 	db	99	;'c'
   948  007C34  69                 	db	105	;'i'
   949  007C35  64                 	db	100	;'d'
   950  007C36  6F                 	db	111	;'o'
   951  007C37  73                 	db	115	;'s'
   952  007C38  21                 	db	33
   953  007C39  20                 	db	32
   954  007C3A  0D                 	db	13
   955  007C3B  0A                 	db	10
   956  007C3C  00                 	db	0
   957  007C3D                     STR_22:
   958  007C3D  0D                 	db	13
   959  007C3E  0A                 	db	10
   960  007C3F  20                 	db	32
   961  007C40  49                 	db	73	;'I'
   962  007C41  6E                 	db	110	;'n'
   963  007C42  67                 	db	103	;'g'
   964  007C43  72                 	db	114	;'r'
   965  007C44  65                 	db	101	;'e'
   966  007C45  73                 	db	115	;'s'
   967  007C46  61                 	db	97	;'a'
   968  007C47  20                 	db	32
   969  007C48  75                 	db	117	;'u'
   970  007C49  6E                 	db	110	;'n'
   971  007C4A  61                 	db	97	;'a'
   972  007C4B  20                 	db	32
   973  007C4C  6F                 	db	111	;'o'
   974  007C4D  70                 	db	112	;'p'
   975  007C4E  63                 	db	99	;'c'
   976  007C4F  69                 	db	105	;'i'
   977  007C50  6F                 	db	111	;'o'
   978  007C51  6E                 	db	110	;'n'
   979  007C52  20                 	db	32
   980  007C53  61                 	db	97	;'a'
   981  007C54  20                 	db	32
   982  007C55  52                 	db	82	;'R'
   983  007C56  65                 	db	101	;'e'
   984  007C57  61                 	db	97	;'a'
   985  007C58  6C                 	db	108	;'l'
   986  007C59  69                 	db	105	;'i'
   987  007C5A  7A                 	db	122	;'z'
   988  007C5B  61                 	db	97	;'a'
   989  007C5C  72                 	db	114	;'r'
   990  007C5D  3A                 	db	58	;':'
   991  007C5E  20                 	db	32
   992  007C5F  0D                 	db	13
   993  007C60  0A                 	db	10
   994  007C61  00                 	db	0
   995  007C62                     STR_6:
   996  007C62  0D                 	db	13
   997  007C63  0A                 	db	10
   998  007C64  20                 	db	32
   999  007C65  48                 	db	72	;'H'
  1000  007C66  4F                 	db	79	;'O'
  1001  007C67  52                 	db	82	;'R'
  1002  007C68  41                 	db	65	;'A'
  1003  007C69  20                 	db	32
  1004  007C6A  45                 	db	69	;'E'
  1005  007C6B  53                 	db	83	;'S'
  1006  007C6C  54                 	db	84	;'T'
  1007  007C6D  41                 	db	65	;'A'
  1008  007C6E  42                 	db	66	;'B'
  1009  007C6F  4C                 	db	76	;'L'
  1010  007C70  45                 	db	69	;'E'
  1011  007C71  43                 	db	67	;'C'
  1012  007C72  49                 	db	73	;'I'
  1013  007C73  44                 	db	68	;'D'
  1014  007C74  41                 	db	65	;'A'
  1015  007C75  20                 	db	32
  1016  007C76  43                 	db	67	;'C'
  1017  007C77  4F                 	db	79	;'O'
  1018  007C78  52                 	db	82	;'R'
  1019  007C79  52                 	db	82	;'R'
  1020  007C7A  45                 	db	69	;'E'
  1021  007C7B  43                 	db	67	;'C'
  1022  007C7C  54                 	db	84	;'T'
  1023  007C7D  41                 	db	65	;'A'
  1024  007C7E  4D                 	db	77	;'M'
  1025  007C7F  45                 	db	69	;'E'
  1026  007C80  4E                 	db	78	;'N'
  1027  007C81  54                 	db	84	;'T'
  1028  007C82  45                 	db	69	;'E'
  1029  007C83  20                 	db	32
  1030  007C84  0D                 	db	13
  1031  007C85  0A                 	db	10
  1032  007C86  00                 	db	0
  1033  007C87                     STR_11:
  1034  007C87  0D                 	db	13
  1035  007C88  0A                 	db	10
  1036  007C89  20                 	db	32
  1037  007C8A  44                 	db	68	;'D'
  1038  007C8B  4F                 	db	79	;'O'
  1039  007C8C  4D                 	db	77	;'M'
  1040  007C8D  49                 	db	73	;'I'
  1041  007C8E  4E                 	db	78	;'N'
  1042  007C8F  47                 	db	71	;'G'
  1043  007C90  4F                 	db	79	;'O'
  1044  007C91  20                 	db	32
  1045  007C92  3D                 	db	61	;'='
  1046  007C93  20                 	db	32
  1047  007C94  5B                 	db	91	;'['
  1048  007C95  31                 	db	49	;'1'
  1049  007C96  5D                 	db	93	;']'
  1050  007C97  20                 	db	32
  1051  007C98  2E                 	db	46
  1052  007C99  2E                 	db	46
  1053  007C9A  2E                 	db	46
  1054  007C9B  20                 	db	32
  1055  007C9C  53                 	db	83	;'S'
  1056  007C9D  41                 	db	65	;'A'
  1057  007C9E  42                 	db	66	;'B'
  1058  007C9F  41                 	db	65	;'A'
  1059  007CA0  44                 	db	68	;'D'
  1060  007CA1  4F                 	db	79	;'O'
  1061  007CA2  20                 	db	32
  1062  007CA3  3D                 	db	61	;'='
  1063  007CA4  20                 	db	32
  1064  007CA5  5B                 	db	91	;'['
  1065  007CA6  37                 	db	55	;'7'
  1066  007CA7  5D                 	db	93	;']'
  1067  007CA8  20                 	db	32
  1068  007CA9  0D                 	db	13
  1069  007CAA  0A                 	db	10
  1070  007CAB  00                 	db	0
  1071  007CAC                     STR_24:
  1072  007CAC  0D                 	db	13
  1073  007CAD  0A                 	db	10
  1074  007CAE  20                 	db	32
  1075  007CAF  32                 	db	50	;'2'
  1076  007CB0  2E                 	db	46
  1077  007CB1  20                 	db	32
  1078  007CB2  41                 	db	65	;'A'
  1079  007CB3  73                 	db	115	;'s'
  1080  007CB4  69                 	db	105	;'i'
  1081  007CB5  67                 	db	103	;'g'
  1082  007CB6  6E                 	db	110	;'n'
  1083  007CB7  61                 	db	97	;'a'
  1084  007CB8  72                 	db	114	;'r'
  1085  007CB9  20                 	db	32
  1086  007CBA  48                 	db	72	;'H'
  1087  007CBB  6F                 	db	111	;'o'
  1088  007CBC  72                 	db	114	;'r'
  1089  007CBD  61                 	db	97	;'a'
  1090  007CBE  72                 	db	114	;'r'
  1091  007CBF  69                 	db	105	;'i'
  1092  007CC0  6F                 	db	111	;'o'
  1093  007CC1  73                 	db	115	;'s'
  1094  007CC2  20                 	db	32
  1095  007CC3  70                 	db	112	;'p'
  1096  007CC4  61                 	db	97	;'a'
  1097  007CC5  72                 	db	114	;'r'
  1098  007CC6  61                 	db	97	;'a'
  1099  007CC7  20                 	db	32
  1100  007CC8  72                 	db	114	;'r'
  1101  007CC9  65                 	db	101	;'e'
  1102  007CCA  67                 	db	103	;'g'
  1103  007CCB  61                 	db	97	;'a'
  1104  007CCC  72                 	db	114	;'r'
  1105  007CCD  20                 	db	32
  1106  007CCE  0D                 	db	13
  1107  007CCF  0A                 	db	10
  1108  007CD0  00                 	db	0
  1109  007CD1                     STR_2:
  1110  007CD1  0D                 	db	13
  1111  007CD2  0A                 	db	10
  1112  007CD3  20                 	db	32
  1113  007CD4  44                 	db	68	;'D'
  1114  007CD5  49                 	db	73	;'I'
  1115  007CD6  41                 	db	65	;'A'
  1116  007CD7  20                 	db	32
  1117  007CD8  45                 	db	69	;'E'
  1118  007CD9  53                 	db	83	;'S'
  1119  007CDA  54                 	db	84	;'T'
  1120  007CDB  41                 	db	65	;'A'
  1121  007CDC  42                 	db	66	;'B'
  1122  007CDD  4C                 	db	76	;'L'
  1123  007CDE  45                 	db	69	;'E'
  1124  007CDF  43                 	db	67	;'C'
  1125  007CE0  49                 	db	73	;'I'
  1126  007CE1  44                 	db	68	;'D'
  1127  007CE2  4F                 	db	79	;'O'
  1128  007CE3  20                 	db	32
  1129  007CE4  43                 	db	67	;'C'
  1130  007CE5  4F                 	db	79	;'O'
  1131  007CE6  52                 	db	82	;'R'
  1132  007CE7  52                 	db	82	;'R'
  1133  007CE8  45                 	db	69	;'E'
  1134  007CE9  43                 	db	67	;'C'
  1135  007CEA  54                 	db	84	;'T'
  1136  007CEB  41                 	db	65	;'A'
  1137  007CEC  4D                 	db	77	;'M'
  1138  007CED  45                 	db	69	;'E'
  1139  007CEE  4E                 	db	78	;'N'
  1140  007CEF  54                 	db	84	;'T'
  1141  007CF0  45                 	db	69	;'E'
  1142  007CF1  20                 	db	32
  1143  007CF2  0D                 	db	13
  1144  007CF3  0A                 	db	10
  1145  007CF4  00                 	db	0
  1146  007CF5                     STR_35:
  1147  007CF5  0D                 	db	13
  1148  007CF6  0A                 	db	10
  1149  007CF7  54                 	db	84	;'T'
  1150  007CF8  20                 	db	32
  1151  007CF9  3D                 	db	61	;'='
  1152  007CFA  20                 	db	32
  1153  007CFB  4D                 	db	77	;'M'
  1154  007CFC  49                 	db	73	;'I'
  1155  007CFD  4E                 	db	78	;'N'
  1156  007CFE  55                 	db	85	;'U'
  1157  007CFF  54                 	db	84	;'T'
  1158  007D00  4F                 	db	79	;'O'
  1159  007D01  53                 	db	83	;'S'
  1160  007D02  20                 	db	32
  1161  007D03  51                 	db	81	;'Q'
  1162  007D04  55                 	db	85	;'U'
  1163  007D05  45                 	db	69	;'E'
  1164  007D06  20                 	db	32
  1165  007D07  44                 	db	68	;'D'
  1166  007D08  55                 	db	85	;'U'
  1167  007D09  52                 	db	82	;'R'
  1168  007D0A  41                 	db	65	;'A'
  1169  007D0B  52                 	db	82	;'R'
  1170  007D0C  41                 	db	65	;'A'
  1171  007D0D  20                 	db	32
  1172  007D0E  45                 	db	69	;'E'
  1173  007D0F  4C                 	db	76	;'L'
  1174  007D10  20                 	db	32
  1175  007D11  52                 	db	82	;'R'
  1176  007D12  49                 	db	73	;'I'
  1177  007D13  45                 	db	69	;'E'
  1178  007D14  47                 	db	71	;'G'
  1179  007D15  4F                 	db	79	;'O'
  1180  007D16  0D                 	db	13
  1181  007D17  0A                 	db	10
  1182  007D18  00                 	db	0
  1183  007D19                     STR_27:
  1184  007D19  0D                 	db	13
  1185  007D1A  0A                 	db	10
  1186  007D1B  20                 	db	32
  1187  007D1C  35                 	db	53	;'5'
  1188  007D1D  2E                 	db	46
  1189  007D1E  20                 	db	32
  1190  007D1F  4D                 	db	77	;'M'
  1191  007D20  6F                 	db	111	;'o'
  1192  007D21  73                 	db	115	;'s'
  1193  007D22  74                 	db	116	;'t'
  1194  007D23  72                 	db	114	;'r'
  1195  007D24  61                 	db	97	;'a'
  1196  007D25  72                 	db	114	;'r'
  1197  007D26  20                 	db	32
  1198  007D27  76                 	db	118	;'v'
  1199  007D28  61                 	db	97	;'a'
  1200  007D29  6C                 	db	108	;'l'
  1201  007D2A  6F                 	db	111	;'o'
  1202  007D2B  72                 	db	114	;'r'
  1203  007D2C  65                 	db	101	;'e'
  1204  007D2D  73                 	db	115	;'s'
  1205  007D2E  20                 	db	32
  1206  007D2F  73                 	db	115	;'s'
  1207  007D30  65                 	db	101	;'e'
  1208  007D31  6E                 	db	110	;'n'
  1209  007D32  73                 	db	115	;'s'
  1210  007D33  6F                 	db	111	;'o'
  1211  007D34  72                 	db	114	;'r'
  1212  007D35  65                 	db	101	;'e'
  1213  007D36  73                 	db	115	;'s'
  1214  007D37  20                 	db	32
  1215  007D38  0D                 	db	13
  1216  007D39  0A                 	db	10
  1217  007D3A  00                 	db	0
  1218  007D3B                     STR_21:
  1219  007D3B  0D                 	db	13
  1220  007D3C  0A                 	db	10
  1221  007D3D  53                 	db	83	;'S'
  1222  007D3E  65                 	db	101	;'e'
  1223  007D3F  6E                 	db	110	;'n'
  1224  007D40  73                 	db	115	;'s'
  1225  007D41  6F                 	db	111	;'o'
  1226  007D42  72                 	db	114	;'r'
  1227  007D43  65                 	db	101	;'e'
  1228  007D44  73                 	db	115	;'s'
  1229  007D45  20                 	db	32
  1230  007D46  4C                 	db	76	;'L'
  1231  007D47  65                 	db	101	;'e'
  1232  007D48  69                 	db	105	;'i'
  1233  007D49  64                 	db	100	;'d'
  1234  007D4A  6F                 	db	111	;'o'
  1235  007D4B  73                 	db	115	;'s'
  1236  007D4C  20                 	db	32
  1237  007D4D  63                 	db	99	;'c'
  1238  007D4E  6F                 	db	111	;'o'
  1239  007D4F  6E                 	db	110	;'n'
  1240  007D50  20                 	db	32
  1241  007D51  45                 	db	69	;'E'
  1242  007D52  78                 	db	120	;'x'
  1243  007D53  69                 	db	105	;'i'
  1244  007D54  74                 	db	116	;'t'
  1245  007D55  6F                 	db	111	;'o'
  1246  007D56  21                 	db	33
  1247  007D57  0D                 	db	13
  1248  007D58  0A                 	db	10
  1249  007D59  0A                 	db	10
  1250  007D5A  00                 	db	0
  1251  007D5B                     STR_26:
  1252  007D5B  0D                 	db	13
  1253  007D5C  0A                 	db	10
  1254  007D5D  20                 	db	32
  1255  007D5E  34                 	db	52	;'4'
  1256  007D5F  2E                 	db	46
  1257  007D60  20                 	db	32
  1258  007D61  44                 	db	68	;'D'
  1259  007D62  61                 	db	97	;'a'
  1260  007D63  6D                 	db	109	;'m'
  1261  007D64  65                 	db	101	;'e'
  1262  007D65  20                 	db	32
  1263  007D66  64                 	db	100	;'d'
  1264  007D67  61                 	db	97	;'a'
  1265  007D68  74                 	db	116	;'t'
  1266  007D69  6F                 	db	111	;'o'
  1267  007D6A  73                 	db	115	;'s'
  1268  007D6B  20                 	db	32
  1269  007D6C  64                 	db	100	;'d'
  1270  007D6D  65                 	db	101	;'e'
  1271  007D6E  6C                 	db	108	;'l'
  1272  007D6F  20                 	db	32
  1273  007D70  73                 	db	115	;'s'
  1274  007D71  69                 	db	105	;'i'
  1275  007D72  73                 	db	115	;'s'
  1276  007D73  74                 	db	116	;'t'
  1277  007D74  65                 	db	101	;'e'
  1278  007D75  6D                 	db	109	;'m'
  1279  007D76  61                 	db	97	;'a'
  1280  007D77  20                 	db	32
  1281  007D78  0D                 	db	13
  1282  007D79  0A                 	db	10
  1283  007D7A  00                 	db	0
  1284  007D7B                     STR_47:
  1285  007D7B  0D                 	db	13
  1286  007D7C  0A                 	db	10
  1287  007D7D  0A                 	db	10
  1288  007D7E  4C                 	db	76	;'L'
  1289  007D7F  61                 	db	97	;'a'
  1290  007D80  20                 	db	32
  1291  007D81  48                 	db	72	;'H'
  1292  007D82  75                 	db	117	;'u'
  1293  007D83  6D                 	db	109	;'m'
  1294  007D84  65                 	db	101	;'e'
  1295  007D85  64                 	db	100	;'d'
  1296  007D86  61                 	db	97	;'a'
  1297  007D87  64                 	db	100	;'d'
  1298  007D88  20                 	db	32
  1299  007D89  41                 	db	65	;'A'
  1300  007D8A  6D                 	db	109	;'m'
  1301  007D8B  62                 	db	98	;'b'
  1302  007D8C  69                 	db	105	;'i'
  1303  007D8D  65                 	db	101	;'e'
  1304  007D8E  6E                 	db	110	;'n'
  1305  007D8F  74                 	db	116	;'t'
  1306  007D90  65                 	db	101	;'e'
  1307  007D91  20                 	db	32
  1308  007D92  65                 	db	101	;'e'
  1309  007D93  73                 	db	115	;'s'
  1310  007D94  3A                 	db	58	;':'
  1311  007D95  20                 	db	32
  1312  007D96  25                 	db	37
  1313  007D97  64                 	db	100	;'d'
  1314  007D98  0D                 	db	13
  1315  007D99  0A                 	db	10
  1316  007D9A  00                 	db	0
  1317  007D9B                     STR_5:
  1318  007D9B  0D                 	db	13
  1319  007D9C  0A                 	db	10
  1320  007D9D  20                 	db	32
  1321  007D9E  45                 	db	69	;'E'
  1322  007D9F  6E                 	db	110	;'n'
  1323  007DA0  76                 	db	118	;'v'
  1324  007DA1  69                 	db	105	;'i'
  1325  007DA2  65                 	db	101	;'e'
  1326  007DA3  20                 	db	32
  1327  007DA4  6C                 	db	108	;'l'
  1328  007DA5  6F                 	db	111	;'o'
  1329  007DA6  73                 	db	115	;'s'
  1330  007DA7  20                 	db	32
  1331  007DA8  4D                 	db	77	;'M'
  1332  007DA9  69                 	db	105	;'i'
  1333  007DAA  6E                 	db	110	;'n'
  1334  007DAB  75                 	db	117	;'u'
  1335  007DAC  74                 	db	116	;'t'
  1336  007DAD  6F                 	db	111	;'o'
  1337  007DAE  73                 	db	115	;'s'
  1338  007DAF  20                 	db	32
  1339  007DB0  45                 	db	69	;'E'
  1340  007DB1  6A                 	db	106	;'j'
  1341  007DB2  3A                 	db	58	;':'
  1342  007DB3  20                 	db	32
  1343  007DB4  32                 	db	50	;'2'
  1344  007DB5  35                 	db	53	;'5'
  1345  007DB6  20                 	db	32
  1346  007DB7  0D                 	db	13
  1347  007DB8  0A                 	db	10
  1348  007DB9  00                 	db	0
  1349  007DBA                     STR_48:
  1350  007DBA  0D                 	db	13
  1351  007DBB  0A                 	db	10
  1352  007DBC  0A                 	db	10
  1353  007DBD  4C                 	db	76	;'L'
  1354  007DBE  61                 	db	97	;'a'
  1355  007DBF  20                 	db	32
  1356  007DC0  54                 	db	84	;'T'
  1357  007DC1  65                 	db	101	;'e'
  1358  007DC2  6D                 	db	109	;'m'
  1359  007DC3  70                 	db	112	;'p'
  1360  007DC4  65                 	db	101	;'e'
  1361  007DC5  72                 	db	114	;'r'
  1362  007DC6  61                 	db	97	;'a'
  1363  007DC7  74                 	db	116	;'t'
  1364  007DC8  75                 	db	117	;'u'
  1365  007DC9  72                 	db	114	;'r'
  1366  007DCA  61                 	db	97	;'a'
  1367  007DCB  20                 	db	32
  1368  007DCC  65                 	db	101	;'e'
  1369  007DCD  73                 	db	115	;'s'
  1370  007DCE  3A                 	db	58	;':'
  1371  007DCF  20                 	db	32
  1372  007DD0  25                 	db	37
  1373  007DD1  64                 	db	100	;'d'
  1374  007DD2  20                 	db	32
  1375  007DD3  43                 	db	67	;'C'
  1376  007DD4  0D                 	db	13
  1377  007DD5  0A                 	db	10
  1378  007DD6  00                 	db	0
  1379  007DD7                     STR_34:
  1380  007DD7  0D                 	db	13
  1381  007DD8  0A                 	db	10
  1382  007DD9  52                 	db	82	;'R'
  1383  007DDA  20                 	db	32
  1384  007DDB  3D                 	db	61	;'='
  1385  007DDC  20                 	db	32
  1386  007DDD  52                 	db	82	;'R'
  1387  007DDE  45                 	db	69	;'E'
  1388  007DDF  47                 	db	71	;'G'
  1389  007DE0  41                 	db	65	;'A'
  1390  007DE1  52                 	db	82	;'R'
  1391  007DE2  28                 	db	40
  1392  007DE3  20                 	db	32
  1393  007DE4  31                 	db	49	;'1'
  1394  007DE5  20                 	db	32
  1395  007DE6  53                 	db	83	;'S'
  1396  007DE7  49                 	db	73	;'I'
  1397  007DE8  20                 	db	32
  1398  007DE9  7C                 	db	124
  1399  007DEA  20                 	db	32
  1400  007DEB  30                 	db	48	;'0'
  1401  007DEC  20                 	db	32
  1402  007DED  4E                 	db	78	;'N'
  1403  007DEE  4F                 	db	79	;'O'
  1404  007DEF  29                 	db	41
  1405  007DF0  0D                 	db	13
  1406  007DF1  0A                 	db	10
  1407  007DF2  00                 	db	0
  1408  007DF3                     STR_23:
  1409  007DF3  0D                 	db	13
  1410  007DF4  0A                 	db	10
  1411  007DF5  20                 	db	32
  1412  007DF6  31                 	db	49	;'1'
  1413  007DF7  2E                 	db	46
  1414  007DF8  20                 	db	32
  1415  007DF9  46                 	db	70	;'F'
  1416  007DFA  69                 	db	105	;'i'
  1417  007DFB  6A                 	db	106	;'j'
  1418  007DFC  61                 	db	97	;'a'
  1419  007DFD  72                 	db	114	;'r'
  1420  007DFE  20                 	db	32
  1421  007DFF  48                 	db	72	;'H'
  1422  007E00  6F                 	db	111	;'o'
  1423  007E01  72                 	db	114	;'r'
  1424  007E02  61                 	db	97	;'a'
  1425  007E03  20                 	db	32
  1426  007E04  41                 	db	65	;'A'
  1427  007E05  63                 	db	99	;'c'
  1428  007E06  74                 	db	116	;'t'
  1429  007E07  75                 	db	117	;'u'
  1430  007E08  61                 	db	97	;'a'
  1431  007E09  6C                 	db	108	;'l'
  1432  007E0A  20                 	db	32
  1433  007E0B  0D                 	db	13
  1434  007E0C  0A                 	db	10
  1435  007E0D  00                 	db	0
  1436  007E0E                     STR_42:
  1437  007E0E  0D                 	db	13
  1438  007E0F  0A                 	db	10
  1439  007E10  25                 	db	37
  1440  007E11  30                 	db	48	;'0'
  1441  007E12  2E                 	db	46
  1442  007E13  32                 	db	50	;'2'
  1443  007E14  64                 	db	100	;'d'
  1444  007E15  3A                 	db	58	;':'
  1445  007E16  25                 	db	37
  1446  007E17  30                 	db	48	;'0'
  1447  007E18  2E                 	db	46
  1448  007E19  32                 	db	50	;'2'
  1449  007E1A  64                 	db	100	;'d'
  1450  007E1B  7C                 	db	124
  1451  007E1C  20                 	db	32
  1452  007E1D  4D                 	db	77	;'M'
  1453  007E1E  49                 	db	73	;'I'
  1454  007E1F  45                 	db	69	;'E'
  1455  007E20  52                 	db	82	;'R'
  1456  007E21  43                 	db	67	;'C'
  1457  007E22  4F                 	db	79	;'O'
  1458  007E23  4C                 	db	76	;'L'
  1459  007E24  45                 	db	69	;'E'
  1460  007E25  53                 	db	83	;'S'
  1461  007E26  0D                 	db	13
  1462  007E27  0A                 	db	10
  1463  007E28  00                 	db	0
  1464  007E29                     STR_13:
  1465  007E29  0D                 	db	13
  1466  007E2A  0A                 	db	10
  1467  007E2B  20                 	db	32
  1468  007E2C  48                 	db	72	;'H'
  1469  007E2D  6F                 	db	111	;'o'
  1470  007E2E  72                 	db	114	;'r'
  1471  007E2F  61                 	db	97	;'a'
  1472  007E30  72                 	db	114	;'r'
  1473  007E31  69                 	db	105	;'i'
  1474  007E32  6F                 	db	111	;'o'
  1475  007E33  20                 	db	32
  1476  007E34  4D                 	db	77	;'M'
  1477  007E35  6F                 	db	111	;'o'
  1478  007E36  64                 	db	100	;'d'
  1479  007E37  69                 	db	105	;'i'
  1480  007E38  66                 	db	102	;'f'
  1481  007E39  69                 	db	105	;'i'
  1482  007E3A  63                 	db	99	;'c'
  1483  007E3B  61                 	db	97	;'a'
  1484  007E3C  64                 	db	100	;'d'
  1485  007E3D  6F                 	db	111	;'o'
  1486  007E3E  21                 	db	33
  1487  007E3F  20                 	db	32
  1488  007E40  0D                 	db	13
  1489  007E41  0A                 	db	10
  1490  007E42  00                 	db	0
  1491  007E43                     STR_29:
  1492  007E43  0D                 	db	13
  1493  007E44  0A                 	db	10
  1494  007E45  20                 	db	32
  1495  007E46  37                 	db	55	;'7'
  1496  007E47  2E                 	db	46
  1497  007E48  20                 	db	32
  1498  007E49  46                 	db	70	;'F'
  1499  007E4A  69                 	db	105	;'i'
  1500  007E4B  6A                 	db	106	;'j'
  1501  007E4C  61                 	db	97	;'a'
  1502  007E4D  72                 	db	114	;'r'
  1503  007E4E  20                 	db	32
  1504  007E4F  44                 	db	68	;'D'
  1505  007E50  69                 	db	105	;'i'
  1506  007E51  61                 	db	97	;'a'
  1507  007E52  20                 	db	32
  1508  007E53  41                 	db	65	;'A'
  1509  007E54  63                 	db	99	;'c'
  1510  007E55  74                 	db	116	;'t'
  1511  007E56  75                 	db	117	;'u'
  1512  007E57  61                 	db	97	;'a'
  1513  007E58  6C                 	db	108	;'l'
  1514  007E59  20                 	db	32
  1515  007E5A  0D                 	db	13
  1516  007E5B  0A                 	db	10
  1517  007E5C  00                 	db	0
  1518  007E5D                     STR_37:
  1519  007E5D  20                 	db	32
  1520  007E5E  20                 	db	32
  1521  007E5F  20                 	db	32
  1522  007E60  20                 	db	32
  1523  007E61  20                 	db	32
  1524  007E62  20                 	db	32
  1525  007E63  20                 	db	32
  1526  007E64  20                 	db	32
  1527  007E65  20                 	db	32
  1528  007E66  20                 	db	32
  1529  007E67  20                 	db	32
  1530  007E68  20                 	db	32
  1531  007E69  20                 	db	32
  1532  007E6A  20                 	db	32
  1533  007E6B  20                 	db	32
  1534  007E6C  20                 	db	32
  1535  007E6D  44                 	db	68	;'D'
  1536  007E6E  4C                 	db	76	;'L'
  1537  007E6F  4D                 	db	77	;'M'
  1538  007E70  49                 	db	73	;'I'
  1539  007E71  4A                 	db	74	;'J'
  1540  007E72  56                 	db	86	;'V'
  1541  007E73  53                 	db	83	;'S'
  1542  007E74  0D                 	db	13
  1543  007E75  0A                 	db	10
  1544  007E76  00                 	db	0
  1545  007E77                     STR_7:
  1546  007E77  0D                 	db	13
  1547  007E78  0A                 	db	10
  1548  007E79  20                 	db	32
  1549  007E7A  4F                 	db	79	;'O'
  1550  007E7B  50                 	db	80	;'P'
  1551  007E7C  43                 	db	67	;'C'
  1552  007E7D  49                 	db	73	;'I'
  1553  007E7E  4F                 	db	79	;'O'
  1554  007E7F  4E                 	db	78	;'N'
  1555  007E80  45                 	db	69	;'E'
  1556  007E81  53                 	db	83	;'S'
  1557  007E82  20                 	db	32
  1558  007E83  44                 	db	68	;'D'
  1559  007E84  45                 	db	69	;'E'
  1560  007E85  20                 	db	32
  1561  007E86  52                 	db	82	;'R'
  1562  007E87  45                 	db	69	;'E'
  1563  007E88  47                 	db	71	;'G'
  1564  007E89  41                 	db	65	;'A'
  1565  007E8A  44                 	db	68	;'D'
  1566  007E8B  4F                 	db	79	;'O'
  1567  007E8C  20                 	db	32
  1568  007E8D  0D                 	db	13
  1569  007E8E  0A                 	db	10
  1570  007E8F  00                 	db	0
  1571  007E90                     STR_46:
  1572  007E90  45                 	db	69	;'E'
  1573  007E91  72                 	db	114	;'r'
  1574  007E92  72                 	db	114	;'r'
  1575  007E93  6F                 	db	111	;'o'
  1576  007E94  72                 	db	114	;'r'
  1577  007E95  20                 	db	32
  1578  007E96  64                 	db	100	;'d'
  1579  007E97  65                 	db	101	;'e'
  1580  007E98  20                 	db	32
  1581  007E99  6C                 	db	108	;'l'
  1582  007E9A  65                 	db	101	;'e'
  1583  007E9B  63                 	db	99	;'c'
  1584  007E9C  74                 	db	116	;'t'
  1585  007E9D  75                 	db	117	;'u'
  1586  007E9E  72                 	db	114	;'r'
  1587  007E9F  61                 	db	97	;'a'
  1588  007EA0  20                 	db	32
  1589  007EA1  44                 	db	68	;'D'
  1590  007EA2  48                 	db	72	;'H'
  1591  007EA3  54                 	db	84	;'T'
  1592  007EA4  31                 	db	49	;'1'
  1593  007EA5  31                 	db	49	;'1'
  1594  007EA6  0D                 	db	13
  1595  007EA7  0A                 	db	10
  1596  007EA8  00                 	db	0
  1597  007EA9                     STR_39:
  1598  007EA9  0D                 	db	13
  1599  007EAA  0A                 	db	10
  1600  007EAB  25                 	db	37
  1601  007EAC  30                 	db	48	;'0'
  1602  007EAD  2E                 	db	46
  1603  007EAE  32                 	db	50	;'2'
  1604  007EAF  64                 	db	100	;'d'
  1605  007EB0  3A                 	db	58	;':'
  1606  007EB1  25                 	db	37
  1607  007EB2  30                 	db	48	;'0'
  1608  007EB3  2E                 	db	46
  1609  007EB4  32                 	db	50	;'2'
  1610  007EB5  64                 	db	100	;'d'
  1611  007EB6  7C                 	db	124
  1612  007EB7  20                 	db	32
  1613  007EB8  44                 	db	68	;'D'
  1614  007EB9  4F                 	db	79	;'O'
  1615  007EBA  4D                 	db	77	;'M'
  1616  007EBB  49                 	db	73	;'I'
  1617  007EBC  4E                 	db	78	;'N'
  1618  007EBD  47                 	db	71	;'G'
  1619  007EBE  4F                 	db	79	;'O'
  1620  007EBF  0D                 	db	13
  1621  007EC0  0A                 	db	10
  1622  007EC1  00                 	db	0
  1623  007EC2                     STR_44:
  1624  007EC2  0D                 	db	13
  1625  007EC3  0A                 	db	10
  1626  007EC4  25                 	db	37
  1627  007EC5  30                 	db	48	;'0'
  1628  007EC6  2E                 	db	46
  1629  007EC7  32                 	db	50	;'2'
  1630  007EC8  64                 	db	100	;'d'
  1631  007EC9  3A                 	db	58	;':'
  1632  007ECA  25                 	db	37
  1633  007ECB  30                 	db	48	;'0'
  1634  007ECC  2E                 	db	46
  1635  007ECD  32                 	db	50	;'2'
  1636  007ECE  64                 	db	100	;'d'
  1637  007ECF  7C                 	db	124
  1638  007ED0  20                 	db	32
  1639  007ED1  56                 	db	86	;'V'
  1640  007ED2  49                 	db	73	;'I'
  1641  007ED3  45                 	db	69	;'E'
  1642  007ED4  52                 	db	82	;'R'
  1643  007ED5  4E                 	db	78	;'N'
  1644  007ED6  45                 	db	69	;'E'
  1645  007ED7  53                 	db	83	;'S'
  1646  007ED8  0D                 	db	13
  1647  007ED9  0A                 	db	10
  1648  007EDA  00                 	db	0
  1649  007EDB                     STR_45:
  1650  007EDB  0D                 	db	13
  1651  007EDC  0A                 	db	10
  1652  007EDD  25                 	db	37
  1653  007EDE  30                 	db	48	;'0'
  1654  007EDF  2E                 	db	46
  1655  007EE0  32                 	db	50	;'2'
  1656  007EE1  64                 	db	100	;'d'
  1657  007EE2  3A                 	db	58	;':'
  1658  007EE3  25                 	db	37
  1659  007EE4  30                 	db	48	;'0'
  1660  007EE5  2E                 	db	46
  1661  007EE6  32                 	db	50	;'2'
  1662  007EE7  64                 	db	100	;'d'
  1663  007EE8  7C                 	db	124
  1664  007EE9  20                 	db	32
  1665  007EEA  53                 	db	83	;'S'
  1666  007EEB  41                 	db	65	;'A'
  1667  007EEC  42                 	db	66	;'B'
  1668  007EED  41                 	db	65	;'A'
  1669  007EEE  44                 	db	68	;'D'
  1670  007EEF  4F                 	db	79	;'O'
  1671  007EF0  0D                 	db	13
  1672  007EF1  0A                 	db	10
  1673  007EF2  00                 	db	0
  1674  007EF3                     STR_41:
  1675  007EF3  0D                 	db	13
  1676  007EF4  0A                 	db	10
  1677  007EF5  25                 	db	37
  1678  007EF6  30                 	db	48	;'0'
  1679  007EF7  2E                 	db	46
  1680  007EF8  32                 	db	50	;'2'
  1681  007EF9  64                 	db	100	;'d'
  1682  007EFA  3A                 	db	58	;':'
  1683  007EFB  25                 	db	37
  1684  007EFC  30                 	db	48	;'0'
  1685  007EFD  2E                 	db	46
  1686  007EFE  32                 	db	50	;'2'
  1687  007EFF  64                 	db	100	;'d'
  1688  007F00  7C                 	db	124
  1689  007F01  20                 	db	32
  1690  007F02  4D                 	db	77	;'M'
  1691  007F03  41                 	db	65	;'A'
  1692  007F04  52                 	db	82	;'R'
  1693  007F05  54                 	db	84	;'T'
  1694  007F06  45                 	db	69	;'E'
  1695  007F07  53                 	db	83	;'S'
  1696  007F08  0D                 	db	13
  1697  007F09  0A                 	db	10
  1698  007F0A  00                 	db	0
  1699  007F0B                     STR_43:
  1700  007F0B  0D                 	db	13
  1701  007F0C  0A                 	db	10
  1702  007F0D  25                 	db	37
  1703  007F0E  30                 	db	48	;'0'
  1704  007F0F  2E                 	db	46
  1705  007F10  32                 	db	50	;'2'
  1706  007F11  64                 	db	100	;'d'
  1707  007F12  3A                 	db	58	;':'
  1708  007F13  25                 	db	37
  1709  007F14  30                 	db	48	;'0'
  1710  007F15  2E                 	db	46
  1711  007F16  32                 	db	50	;'2'
  1712  007F17  64                 	db	100	;'d'
  1713  007F18  7C                 	db	124
  1714  007F19  20                 	db	32
  1715  007F1A  4A                 	db	74	;'J'
  1716  007F1B  55                 	db	85	;'U'
  1717  007F1C  45                 	db	69	;'E'
  1718  007F1D  56                 	db	86	;'V'
  1719  007F1E  45                 	db	69	;'E'
  1720  007F1F  53                 	db	83	;'S'
  1721  007F20  0D                 	db	13
  1722  007F21  0A                 	db	10
  1723  007F22  00                 	db	0
  1724  007F23                     STR_38:
  1725  007F23  48                 	db	72	;'H'
  1726  007F24  3A                 	db	58	;':'
  1727  007F25  25                 	db	37
  1728  007F26  32                 	db	50	;'2'
  1729  007F27  64                 	db	100	;'d'
  1730  007F28  7C                 	db	124
  1731  007F29  52                 	db	82	;'R'
  1732  007F2A  3A                 	db	58	;':'
  1733  007F2B  25                 	db	37
  1734  007F2C  64                 	db	100	;'d'
  1735  007F2D  7C                 	db	124
  1736  007F2E  54                 	db	84	;'T'
  1737  007F2F  3A                 	db	58	;':'
  1738  007F30  25                 	db	37
  1739  007F31  32                 	db	50	;'2'
  1740  007F32  64                 	db	100	;'d'
  1741  007F33  7C                 	db	124
  1742  007F34  44                 	db	68	;'D'
  1743  007F35  3A                 	db	58	;':'
  1744  007F36  25                 	db	37
  1745  007F37  73                 	db	115	;'s'
  1746  007F38  0D                 	db	13
  1747  007F39  0A                 	db	10
  1748  007F3A  00                 	db	0
  1749  007F3B                     STR_15:
  1750  007F3B  0D                 	db	13
  1751  007F3C  0A                 	db	10
  1752  007F3D  20                 	db	32
  1753  007F3E  54                 	db	84	;'T'
  1754  007F3F  49                 	db	73	;'I'
  1755  007F40  45                 	db	69	;'E'
  1756  007F41  4D                 	db	77	;'M'
  1757  007F42  50                 	db	80	;'P'
  1758  007F43  4F                 	db	79	;'O'
  1759  007F44  20                 	db	32
  1760  007F45  44                 	db	68	;'D'
  1761  007F46  45                 	db	69	;'E'
  1762  007F47  20                 	db	32
  1763  007F48  52                 	db	82	;'R'
  1764  007F49  45                 	db	69	;'E'
  1765  007F4A  47                 	db	71	;'G'
  1766  007F4B  41                 	db	65	;'A'
  1767  007F4C  44                 	db	68	;'D'
  1768  007F4D  4F                 	db	79	;'O'
  1769  007F4E  20                 	db	32
  1770  007F4F  0D                 	db	13
  1771  007F50  0A                 	db	10
  1772  007F51  00                 	db	0
  1773  007F52                     STR_28:
  1774  007F52  0D                 	db	13
  1775  007F53  0A                 	db	10
  1776  007F54  20                 	db	32
  1777  007F55  36                 	db	54	;'6'
  1778  007F56  2E                 	db	46
  1779  007F57  20                 	db	32
  1780  007F58  52                 	db	82	;'R'
  1781  007F59  65                 	db	101	;'e'
  1782  007F5A  67                 	db	103	;'g'
  1783  007F5B  61                 	db	97	;'a'
  1784  007F5C  64                 	db	100	;'d'
  1785  007F5D  6F                 	db	111	;'o'
  1786  007F5E  20                 	db	32
  1787  007F5F  72                 	db	114	;'r'
  1788  007F60  61                 	db	97	;'a'
  1789  007F61  70                 	db	112	;'p'
  1790  007F62  69                 	db	105	;'i'
  1791  007F63  64                 	db	100	;'d'
  1792  007F64  6F                 	db	111	;'o'
  1793  007F65  20                 	db	32
  1794  007F66  0D                 	db	13
  1795  007F67  0A                 	db	10
  1796  007F68  00                 	db	0
  1797  007F69                     STR_40:
  1798  007F69  0D                 	db	13
  1799  007F6A  0A                 	db	10
  1800  007F6B  25                 	db	37
  1801  007F6C  30                 	db	48	;'0'
  1802  007F6D  2E                 	db	46
  1803  007F6E  32                 	db	50	;'2'
  1804  007F6F  64                 	db	100	;'d'
  1805  007F70  3A                 	db	58	;':'
  1806  007F71  25                 	db	37
  1807  007F72  30                 	db	48	;'0'
  1808  007F73  2E                 	db	46
  1809  007F74  32                 	db	50	;'2'
  1810  007F75  64                 	db	100	;'d'
  1811  007F76  7C                 	db	124
  1812  007F77  20                 	db	32
  1813  007F78  4C                 	db	76	;'L'
  1814  007F79  55                 	db	85	;'U'
  1815  007F7A  4E                 	db	78	;'N'
  1816  007F7B  45                 	db	69	;'E'
  1817  007F7C  53                 	db	83	;'S'
  1818  007F7D  0D                 	db	13
  1819  007F7E  0A                 	db	10
  1820  007F7F  00                 	db	0
  1821  007F80                     STR_57:
  1822  007F80  0D                 	db	13
  1823  007F81  0A                 	db	10
  1824  007F82  20                 	db	32
  1825  007F83  52                 	db	82	;'R'
  1826  007F84  45                 	db	69	;'E'
  1827  007F85  47                 	db	71	;'G'
  1828  007F86  41                 	db	65	;'A'
  1829  007F87  44                 	db	68	;'D'
  1830  007F88  4F                 	db	79	;'O'
  1831  007F89  20                 	db	32
  1832  007F8A  52                 	db	82	;'R'
  1833  007F8B  41                 	db	65	;'A'
  1834  007F8C  50                 	db	80	;'P'
  1835  007F8D  49                 	db	73	;'I'
  1836  007F8E  44                 	db	68	;'D'
  1837  007F8F  4F                 	db	79	;'O'
  1838  007F90  20                 	db	32
  1839  007F91  0D                 	db	13
  1840  007F92  0A                 	db	10
  1841  007F93  00                 	db	0
  1842  007F94                     STR_56:
  1843  007F94  0A                 	db	10
  1844  007F95  46                 	db	70	;'F'
  1845  007F96  41                 	db	65	;'A'
  1846  007F97  4C                 	db	76	;'L'
  1847  007F98  4C                 	db	76	;'L'
  1848  007F99  4F                 	db	79	;'O'
  1849  007F9A  20                 	db	32
  1850  007F9B  45                 	db	69	;'E'
  1851  007F9C  4C                 	db	76	;'L'
  1852  007F9D  20                 	db	32
  1853  007F9E  53                 	db	83	;'S'
  1854  007F9F  45                 	db	69	;'E'
  1855  007FA0  54                 	db	84	;'T'
  1856  007FA1  45                 	db	69	;'E'
  1857  007FA2  4F                 	db	79	;'O'
  1858  007FA3  0D                 	db	13
  1859  007FA4  0A                 	db	10
  1860  007FA5  00                 	db	0
  1861  007FA6  41                 	db	65	;'A'
  1862  007FA7  54                 	db	84	;'T'
  1863  007FA8  2B                 	db	43
  1864  007FA9  4E                 	db	78	;'N'
  1865  007FAA  41                 	db	65	;'A'
  1866  007FAB  4D                 	db	77	;'M'
  1867  007FAC  45                 	db	69	;'E'
  1868  007FAD  53                 	db	83	;'S'
  1869  007FAE  4D                 	db	77	;'M'
  1870  007FAF  41                 	db	65	;'A'
  1871  007FB0  52                 	db	82	;'R'
  1872  007FB1  54                 	db	84	;'T'
  1873  007FB2  48                 	db	72	;'H'
  1874  007FB3  4F                 	db	79	;'O'
  1875  007FB4  4D                 	db	77	;'M'
  1876  007FB5  45                 	db	69	;'E'
  1877  007FB6  00                 	db	0
  1878  007FB7                     STR_3:
  1879  007FB7  0D                 	db	13
  1880  007FB8  0A                 	db	10
  1881  007FB9  20                 	db	32
  1882  007FBA  46                 	db	70	;'F'
  1883  007FBB  49                 	db	73	;'I'
  1884  007FBC  4A                 	db	74	;'J'
  1885  007FBD  41                 	db	65	;'A'
  1886  007FBE  20                 	db	32
  1887  007FBF  48                 	db	72	;'H'
  1888  007FC0  4F                 	db	79	;'O'
  1889  007FC1  52                 	db	82	;'R'
  1890  007FC2  41                 	db	65	;'A'
  1891  007FC3  20                 	db	32
  1892  007FC4  0D                 	db	13
  1893  007FC5  0A                 	db	10
  1894  007FC6  00                 	db	0
  1895  007FC7                     STR_30:
  1896  007FC7  0D                 	db	13
  1897  007FC8  0A                 	db	10
  1898  007FC9  20                 	db	32
  1899  007FCA  4F                 	db	79	;'O'
  1900  007FCB  70                 	db	112	;'p'
  1901  007FCC  63                 	db	99	;'c'
  1902  007FCD  69                 	db	105	;'i'
  1903  007FCE  6F                 	db	111	;'o'
  1904  007FCF  6E                 	db	110	;'n'
  1905  007FD0  3A                 	db	58	;':'
  1906  007FD1  20                 	db	32
  1907  007FD2  20                 	db	32
  1908  007FD3  0D                 	db	13
  1909  007FD4  00                 	db	0
  1910  007FD5                     STR_33:
  1911  007FD5  0D                 	db	13
  1912  007FD6  0A                 	db	10
  1913  007FD7  48                 	db	72	;'H'
  1914  007FD8  20                 	db	32
  1915  007FD9  3D                 	db	61	;'='
  1916  007FDA  20                 	db	32
  1917  007FDB  48                 	db	72	;'H'
  1918  007FDC  4F                 	db	79	;'O'
  1919  007FDD  52                 	db	82	;'R'
  1920  007FDE  41                 	db	65	;'A'
  1921  007FDF  0D                 	db	13
  1922  007FE0  0A                 	db	10
  1923  007FE1  00                 	db	0
  1924  007FE2  41                 	db	65	;'A'
  1925  007FE3  54                 	db	84	;'T'
  1926  007FE4  2B                 	db	43
  1927  007FE5  50                 	db	80	;'P'
  1928  007FE6  49                 	db	73	;'I'
  1929  007FE7  4E                 	db	78	;'N'
  1930  007FE8  32                 	db	50	;'2'
  1931  007FE9  35                 	db	53	;'5'
  1932  007FEA  30                 	db	48	;'0'
  1933  007FEB  31                 	db	49	;'1'
  1934  007FEC  00                 	db	0
  1935  007FED                     STR_12:
  1936  007FED  0D                 	db	13
  1937  007FEE  0A                 	db	10
  1938  007FEF  5B                 	db	91	;'['
  1939  007FF0  25                 	db	37
  1940  007FF1  64                 	db	100	;'d'
  1941  007FF2  5D                 	db	93	;']'
  1942  007FF3  3A                 	db	58	;':'
  1943  007FF4  20                 	db	32
  1944  007FF5  00                 	db	0
  1945  007FF6  41                 	db	65	;'A'
  1946  007FF7  54                 	db	84	;'T'
  1947  007FF8  2B                 	db	43
  1948  007FF9  42                 	db	66	;'B'
  1949  007FFA  41                 	db	65	;'A'
  1950  007FFB  55                 	db	85	;'U'
  1951  007FFC  44                 	db	68	;'D'
  1952  007FFD  34                 	db	52	;'4'
  1953  007FFE  00                 	db	0
  1954  0000                     
  1955                           ; #config settings
  1956  007FFF  00                 	db	0	; dummy byte at the end
  1957  0000                     
  1958                           	psect	cinit
  1959  002CEE                     __pcinit:
  1960                           	opt callstack 0
  1961  002CEE                     start_initialization:
  1962                           	opt callstack 0
  1963  002CEE                     __initialization:
  1964                           	opt callstack 0
  1965                           
  1966                           ; Initialize objects allocated to BANK0 (11 bytes)
  1967                           ; load TBLPTR registers with __pidataBANK0
  1968  002CEE  0ED4               	movlw	low __pidataBANK0
  1969  002CF0  6EF6               	movwf	tblptrl,c
  1970  002CF2  0E32               	movlw	high __pidataBANK0
  1971  002CF4  6EF7               	movwf	tblptrh,c
  1972  002CF6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1973  002CF8  6EF8               	movwf	tblptru,c
  1974  002CFA  EE00  F0F4         	lfsr	0,__pdataBANK0
  1975  002CFE  EE10 F00B          	lfsr	1,11
  1976  002D02                     copy_data0:
  1977  002D02  0009               	tblrd		*+
  1978  002D04  CFF5 FFEE          	movff	tablat,postinc0
  1979  002D08  50E5               	movf	postdec1,w,c
  1980  002D0A  50E1               	movf	fsr1l,w,c
  1981  002D0C  E1FA               	bnz	copy_data0
  1982                           
  1983                           ; Clear objects allocated to BIGRAM (288 bytes)
  1984  002D0E  EE01  F032         	lfsr	0,__pbssBIGRAM
  1985  002D12  EE11 F020          	lfsr	1,288
  1986  002D16                     clear_0:
  1987  002D16  6AEE               	clrf	postinc0,c
  1988  002D18  50E5               	movf	postdec1,w,c
  1989  002D1A  50E1               	movf	fsr1l,w,c
  1990  002D1C  E1FC               	bnz	clear_0
  1991  002D1E  50E2               	movf	fsr1h,w,c
  1992  002D20  E1FA               	bnz	clear_0
  1993                           
  1994                           ; Clear objects allocated to BANK1 (50 bytes)
  1995  002D22  EE01  F000         	lfsr	0,__pbssBANK1
  1996  002D26  0E32               	movlw	50
  1997  002D28                     clear_1:
  1998  002D28  6AEE               	clrf	postinc0,c
  1999  002D2A  06E8               	decf	wreg,f,c
  2000  002D2C  E1FD               	bnz	clear_1
  2001                           
  2002                           ; Clear objects allocated to BANK0 (77 bytes)
  2003  002D2E  EE00  F060         	lfsr	0,__pbssBANK0
  2004  002D32  0E4D               	movlw	77
  2005  002D34                     clear_2:
  2006  002D34  6AEE               	clrf	postinc0,c
  2007  002D36  06E8               	decf	wreg,f,c
  2008  002D38  E1FD               	bnz	clear_2
  2009  002D3A                     end_of_initialization:
  2010                           	opt callstack 0
  2011  002D3A                     __end_of__initialization:
  2012                           	opt callstack 0
  2013  002D3A  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2014  002D3C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2015  002D3E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2016  002D40  6EF8               	movwf	tblptru,c
  2017  002D42  0100               	movlb	0
  2018  002D44  EF8D  F013         	goto	_main	;jump to C main() function
  2019                           
  2020                           	psect	bssBANK0
  2021  000060                     __pbssBANK0:
  2022                           	opt callstack 0
  2023  000060                     _sensores:
  2024                           	opt callstack 0
  2025  000060                     	ds	16
  2026  000070                     _nout:
  2027                           	opt callstack 0
  2028  000070                     	ds	2
  2029  000072                     _width:
  2030                           	opt callstack 0
  2031  000072                     	ds	2
  2032  000074                     _prec:
  2033                           	opt callstack 0
  2034  000074                     	ds	2
  2035  000076                     _flags:
  2036                           	opt callstack 0
  2037  000076                     	ds	2
  2038  000078                     _contInterrupciones:
  2039                           	opt callstack 0
  2040  000078                     	ds	2
  2041  00007A                     _peticionLecturaSensores:
  2042                           	opt callstack 0
  2043  00007A                     	ds	1
  2044  00007B                     _regando:
  2045                           	opt callstack 0
  2046  00007B                     	ds	1
  2047  00007C                     _minutosTranscurridos:
  2048                           	opt callstack 0
  2049  00007C                     	ds	1
  2050  00007D                     _minutosRegar:
  2051                           	opt callstack 0
  2052  00007D                     	ds	1
  2053  00007E                     _Humedad:
  2054                           	opt callstack 0
  2055  00007E                     	ds	1
  2056  00007F                     _Temperatura:
  2057                           	opt callstack 0
  2058  00007F                     	ds	1
  2059  000080                     _flagRegado:
  2060                           	opt callstack 0
  2061  000080                     	ds	1
  2062  000081                     _tempHora:
  2063                           	opt callstack 0
  2064  000081                     	ds	1
  2065  000082                     _overflowTimer:
  2066                           	opt callstack 0
  2067  000082                     	ds	1
  2068  000083                     _datoRecibido:
  2069                           	opt callstack 0
  2070  000083                     	ds	1
  2071  000084                     _diaActual:
  2072                           	opt callstack 0
  2073  000084                     	ds	1
  2074  000085                     _segundos:
  2075                           	opt callstack 0
  2076  000085                     	ds	1
  2077  000086                     _minutos:
  2078                           	opt callstack 0
  2079  000086                     	ds	1
  2080  000087                     _hora:
  2081                           	opt callstack 0
  2082  000087                     	ds	1
  2083  000088                     _MODO_COMUNICACION:
  2084                           	opt callstack 0
  2085  000088                     	ds	1
  2086  000089                     _esperandoDatos:
  2087                           	opt callstack 0
  2088  000089                     	ds	1
  2089  00008A                     _esperaDatoConcluida:
  2090                           	opt callstack 0
  2091  00008A                     	ds	1
  2092  00008B                     _byteUart:
  2093                           	opt callstack 0
  2094  00008B                     	ds	1
  2095  00008C                     _tiempoInactividadTrans:
  2096                           	opt callstack 0
  2097  00008C                     	ds	1
  2098  00008D                     _dbuf:
  2099                           	opt callstack 0
  2100  00008D                     	ds	32
  2101                           
  2102                           	psect	dataBANK0
  2103  0000F4                     __pdataBANK0:
  2104                           	opt callstack 0
  2105  0000F4                     stoa@F1144:
  2106                           	opt callstack 0
  2107  0000F4                     	ds	7
  2108  0000FB                     _VALOR_TIMER0:
  2109                           	opt callstack 0
  2110  0000FB                     	ds	2
  2111  0000FD                     _VALOR_TIMER0UART:
  2112                           	opt callstack 0
  2113  0000FD                     	ds	2
  2114                           
  2115                           	psect	bssBANK1
  2116  000100                     __pbssBANK1:
  2117                           	opt callstack 0
  2118  000100                     _buffer:
  2119                           	opt callstack 0
  2120  000100                     	ds	50
  2121                           
  2122                           	psect	bssBIGRAM
  2123  000132                     __pbssBIGRAM:
  2124                           	opt callstack 0
  2125  000132                     _horarios:
  2126                           	opt callstack 0
  2127  000132                     	ds	288
  2128                           
  2129                           	psect	cstackBANK0
  2130  0000AD                     __pcstackBANK0:
  2131                           	opt callstack 0
  2132  0000AD                     ?_vfprintf:
  2133                           	opt callstack 0
  2134  0000AD                     vfprintf@fp:
  2135                           	opt callstack 0
  2136                           
  2137                           ; 2 bytes @ 0x0
  2138  0000AD                     	ds	2
  2139  0000AF                     vfprintf@fmt:
  2140                           	opt callstack 0
  2141                           
  2142                           ; 2 bytes @ 0x2
  2143  0000AF                     	ds	2
  2144  0000B1                     vfprintf@ap:
  2145                           	opt callstack 0
  2146                           
  2147                           ; 2 bytes @ 0x4
  2148  0000B1                     	ds	2
  2149  0000B3                     ?_sprintf:
  2150                           	opt callstack 0
  2151  0000B3                     sprintf@s:
  2152                           	opt callstack 0
  2153                           
  2154                           ; 2 bytes @ 0x6
  2155  0000B3                     	ds	2
  2156  0000B5                     sprintf@fmt:
  2157                           	opt callstack 0
  2158                           
  2159                           ; 2 bytes @ 0x8
  2160  0000B5                     	ds	12
  2161  0000C1                     sprintf@ap:
  2162                           	opt callstack 0
  2163                           
  2164                           ; 2 bytes @ 0x14
  2165  0000C1                     	ds	2
  2166  0000C3                     sprintf@f:
  2167                           	opt callstack 0
  2168                           
  2169                           ; 6 bytes @ 0x16
  2170  0000C3                     	ds	6
  2171  0000C9                     asignarHorarios@diaRegar:
  2172                           	opt callstack 0
  2173  0000C9                     lecturaWifi@Rx:
  2174                           	opt callstack 0
  2175  0000C9                     mostrarDatosSensores@i:
  2176                           	opt callstack 0
  2177  0000C9                     dameDatosSistema@bufferHorario:
  2178                           	opt callstack 0
  2179                           
  2180                           ; 30 bytes @ 0x1C
  2181  0000C9                     	ds	1
  2182  0000CA                     lecturaWifi@humedadMedida:
  2183                           	opt callstack 0
  2184  0000CA                     asignarHorarios@i:
  2185                           	opt callstack 0
  2186                           
  2187                           ; 2 bytes @ 0x1D
  2188  0000CA                     	ds	1
  2189  0000CB                     lecturaWifi@i:
  2190                           	opt callstack 0
  2191                           
  2192                           ; 2 bytes @ 0x1E
  2193  0000CB                     	ds	1
  2194  0000CC                     asignarHorarios@hora:
  2195                           	opt callstack 0
  2196                           
  2197                           ; 1 bytes @ 0x1F
  2198  0000CC                     	ds	1
  2199  0000CD                     asignarHorarios@Rx:
  2200                           	opt callstack 0
  2201  0000CD                     mostrarDatosSensoresWIFI@i:
  2202                           	opt callstack 0
  2203                           
  2204                           ; 2 bytes @ 0x20
  2205  0000CD                     	ds	26
  2206  0000E7                     _dameDatosSistema$1921:
  2207                           	opt callstack 0
  2208                           
  2209                           ; 2 bytes @ 0x3A
  2210  0000E7                     	ds	2
  2211  0000E9                     _dameDatosSistema$1922:
  2212                           	opt callstack 0
  2213                           
  2214                           ; 2 bytes @ 0x3C
  2215  0000E9                     	ds	2
  2216  0000EB                     _dameDatosSistema$1923:
  2217                           	opt callstack 0
  2218                           
  2219                           ; 2 bytes @ 0x3E
  2220  0000EB                     	ds	2
  2221  0000ED                     _dameDatosSistema$1924:
  2222                           	opt callstack 0
  2223                           
  2224                           ; 2 bytes @ 0x40
  2225  0000ED                     	ds	2
  2226  0000EF                     dameDatosSistema@i:
  2227                           	opt callstack 0
  2228                           
  2229                           ; 2 bytes @ 0x42
  2230  0000EF                     	ds	2
  2231  0000F1                     ??_sistemaPrincipal:
  2232                           
  2233                           ; 1 bytes @ 0x44
  2234  0000F1                     	ds	2
  2235  0000F3                     sistemaPrincipal@opcion:
  2236                           	opt callstack 0
  2237                           
  2238                           ; 1 bytes @ 0x46
  2239  0000F3                     	ds	1
  2240                           
  2241                           	psect	cstackCOMRAM
  2242  000001                     __pcstackCOMRAM:
  2243                           	opt callstack 0
  2244  000001                     ??_i2c_espera:
  2245  000001                     ??_convertirDato:
  2246  000001                     ??_DHT11_Start:
  2247  000001                     ?_strlen:
  2248                           	opt callstack 0
  2249  000001                     ?_isdigit:
  2250                           	opt callstack 0
  2251  000001                     ?_isspace:
  2252                           	opt callstack 0
  2253  000001                     ?_horaRegar:
  2254                           	opt callstack 0
  2255  000001                     ?_dameHumedadSuelo:
  2256                           	opt callstack 0
  2257  000001                     ?___wmul:
  2258                           	opt callstack 0
  2259  000001                     ?___awdiv:
  2260                           	opt callstack 0
  2261  000001                     ?___awmod:
  2262                           	opt callstack 0
  2263  000001                     ?___lmul:
  2264                           	opt callstack 0
  2265  000001                     ?___aodiv:
  2266                           	opt callstack 0
  2267  000001                     ?___aomod:
  2268                           	opt callstack 0
  2269  000001                     UART_write@dato:
  2270                           	opt callstack 0
  2271  000001                     DHT11_ReadData@i:
  2272                           	opt callstack 0
  2273  000001                     check_response@respuesta:
  2274                           	opt callstack 0
  2275  000001                     constructorSensor@s:
  2276                           	opt callstack 0
  2277  000001                     limpiarBuffer@i:
  2278                           	opt callstack 0
  2279  000001                     ___wmul@multiplier:
  2280                           	opt callstack 0
  2281  000001                     ___awdiv@dividend:
  2282                           	opt callstack 0
  2283  000001                     ___awmod@dividend:
  2284                           	opt callstack 0
  2285  000001                     isdigit@c:
  2286                           	opt callstack 0
  2287  000001                     isspace@c:
  2288                           	opt callstack 0
  2289  000001                     fputc@c:
  2290                           	opt callstack 0
  2291  000001                     strlen@s:
  2292                           	opt callstack 0
  2293  000001                     ___lmul@multiplier:
  2294                           	opt callstack 0
  2295  000001                     ___aodiv@dividend:
  2296                           	opt callstack 0
  2297  000001                     ___aomod@dividend:
  2298                           	opt callstack 0
  2299                           
  2300                           ; 8 bytes @ 0x0
  2301  000001                     	ds	1
  2302  000002                     i2c_envia_dato@dato:
  2303                           	opt callstack 0
  2304  000002                     i2c_recibe_dato@datoleido:
  2305                           	opt callstack 0
  2306  000002                     convertirDato@dato:
  2307                           	opt callstack 0
  2308  000002                     DHT11_ReadData@data:
  2309                           	opt callstack 0
  2310  000002                     UART_printf@cadena:
  2311                           	opt callstack 0
  2312                           
  2313                           ; 2 bytes @ 0x1
  2314  000002                     	ds	1
  2315  000003                     ??_isdigit:
  2316  000003                     ??_isspace:
  2317  000003                     ??_horaRegar:
  2318  000003                     ??_dameHumedadSuelo:
  2319  000003                     escribe_rtc@dato:
  2320                           	opt callstack 0
  2321  000003                     leer_rtc@direccion:
  2322                           	opt callstack 0
  2323  000003                     convertirDato@datoR:
  2324                           	opt callstack 0
  2325  000003                     constructorSensor@porcientoHumedad:
  2326                           	opt callstack 0
  2327  000003                     leer_eeprom@direccion:
  2328                           	opt callstack 0
  2329  000003                     ___wmul@multiplicand:
  2330                           	opt callstack 0
  2331  000003                     ___awdiv@divisor:
  2332                           	opt callstack 0
  2333  000003                     ___awmod@divisor:
  2334                           	opt callstack 0
  2335  000003                     fputc@fp:
  2336                           	opt callstack 0
  2337  000003                     strlen@a:
  2338                           	opt callstack 0
  2339                           
  2340                           ; 2 bytes @ 0x2
  2341  000003                     	ds	1
  2342  000004                     ??_dameTemperaturaHumedad:
  2343  000004                     escribe_rtc@direccion:
  2344                           	opt callstack 0
  2345  000004                     leer_rtc@dato:
  2346                           	opt callstack 0
  2347  000004                     constructorSensor@pin:
  2348                           	opt callstack 0
  2349  000004                     getValue@numCharacters:
  2350                           	opt callstack 0
  2351                           
  2352                           ; 2 bytes @ 0x3
  2353  000004                     	ds	1
  2354  000005                     ??_fputc:
  2355  000005                     ??_leer_eeprom:
  2356  000005                     dameHumedadSuelo@canalLeer:
  2357                           	opt callstack 0
  2358  000005                     ___awdiv@counter:
  2359                           	opt callstack 0
  2360  000005                     ___awmod@counter:
  2361                           	opt callstack 0
  2362  000005                     restablecerDatosSensor@i:
  2363                           	opt callstack 0
  2364  000005                     ___wmul@product:
  2365                           	opt callstack 0
  2366  000005                     ___lmul@multiplicand:
  2367                           	opt callstack 0
  2368                           
  2369                           ; 4 bytes @ 0x4
  2370  000005                     	ds	1
  2371  000006                     ??_getValue:
  2372  000006                     _horaRegar$806:
  2373                           	opt callstack 0
  2374  000006                     leer_eeprom@dato:
  2375                           	opt callstack 0
  2376  000006                     ___awdiv@sign:
  2377                           	opt callstack 0
  2378  000006                     ___awmod@sign:
  2379                           	opt callstack 0
  2380  000006                     dameTemperaturaHumedad@checkSum:
  2381                           	opt callstack 0
  2382                           
  2383                           ; 2 bytes @ 0x5
  2384  000006                     	ds	1
  2385  000007                     ??_inicializarObjetos:
  2386  000007                     ??_leeHorariosMemoria:
  2387  000007                     _isspace$1587:
  2388                           	opt callstack 0
  2389  000007                     escribe_eeprom@direccion:
  2390                           	opt callstack 0
  2391  000007                     ___awdiv@quotient:
  2392                           	opt callstack 0
  2393                           
  2394                           ; 2 bytes @ 0x6
  2395  000007                     	ds	1
  2396  000008                     ?_atoi:
  2397                           	opt callstack 0
  2398  000008                     dameTemperaturaHumedad@humedadDecimal:
  2399                           	opt callstack 0
  2400  000008                     getValue@datoIncorrecto:
  2401                           	opt callstack 0
  2402  000008                     atoi@s:
  2403                           	opt callstack 0
  2404                           
  2405                           ; 2 bytes @ 0x7
  2406  000008                     	ds	1
  2407  000009                     escribe_eeprom@dato:
  2408                           	opt callstack 0
  2409  000009                     dameTemperaturaHumedad@temperaturaDecimal:
  2410                           	opt callstack 0
  2411  000009                     inicializarObjetos@j:
  2412                           	opt callstack 0
  2413  000009                     leeHorariosMemoria@j:
  2414                           	opt callstack 0
  2415  000009                     getValue@i:
  2416                           	opt callstack 0
  2417  000009                     ___lmul@product:
  2418                           	opt callstack 0
  2419  000009                     ___aodiv@divisor:
  2420                           	opt callstack 0
  2421  000009                     ___aomod@divisor:
  2422                           	opt callstack 0
  2423                           
  2424                           ; 8 bytes @ 0x8
  2425  000009                     	ds	1
  2426  00000A                     ??_atoi:
  2427  00000A                     ??_escribe_eeprom:
  2428  00000A                     ?_stoa:
  2429                           	opt callstack 0
  2430  00000A                     dameTemperaturaHumedad@humedad:
  2431                           	opt callstack 0
  2432  00000A                     stoa@fp:
  2433                           	opt callstack 0
  2434  00000A                     fputs@s:
  2435                           	opt callstack 0
  2436                           
  2437                           ; 2 bytes @ 0x9
  2438  00000A                     	ds	1
  2439  00000B                     ??_escribeHorariosMemoria:
  2440  00000B                     dameTemperaturaHumedad@temperatura:
  2441                           	opt callstack 0
  2442  00000B                     inicializarObjetos@i_809:
  2443                           	opt callstack 0
  2444  00000B                     leeHorariosMemoria@contMemoria:
  2445                           	opt callstack 0
  2446  00000B                     getValue@i_990:
  2447                           	opt callstack 0
  2448                           
  2449                           ; 2 bytes @ 0xA
  2450  00000B                     	ds	1
  2451  00000C                     ?_estaSeco:
  2452                           	opt callstack 0
  2453  00000C                     estaSeco@s:
  2454                           	opt callstack 0
  2455  00000C                     stoa@s:
  2456                           	opt callstack 0
  2457  00000C                     fputs@fp:
  2458                           	opt callstack 0
  2459                           
  2460                           ; 2 bytes @ 0xB
  2461  00000C                     	ds	1
  2462  00000D                     ?___aldiv:
  2463                           	opt callstack 0
  2464  00000D                     getValue@dato:
  2465                           	opt callstack 0
  2466  00000D                     inicializarObjetos@i:
  2467                           	opt callstack 0
  2468  00000D                     escribeHorariosMemoria@j:
  2469                           	opt callstack 0
  2470  00000D                     leeHorariosMemoria@i:
  2471                           	opt callstack 0
  2472  00000D                     ___aldiv@dividend:
  2473                           	opt callstack 0
  2474                           
  2475                           ; 4 bytes @ 0xC
  2476  00000D                     	ds	1
  2477  00000E                     ??_stoa:
  2478  00000E                     _estaSeco$799:
  2479                           	opt callstack 0
  2480  00000E                     getValue@Rx:
  2481                           	opt callstack 0
  2482  00000E                     fputs@c:
  2483                           	opt callstack 0
  2484  00000E                     atoi@neg:
  2485                           	opt callstack 0
  2486                           
  2487                           ; 2 bytes @ 0xD
  2488  00000E                     	ds	1
  2489  00000F                     ??_regadoRapido:
  2490  00000F                     ??_encenderBombas:
  2491  00000F                     setRtc@direccion:
  2492                           	opt callstack 0
  2493  00000F                     escribeHorariosMemoria@contMemoria:
  2494                           	opt callstack 0
  2495  00000F                     fputs@i:
  2496                           	opt callstack 0
  2497  00000F                     stoa@nuls:
  2498                           	opt callstack 0
  2499                           
  2500                           ; 7 bytes @ 0xE
  2501  00000F                     	ds	1
  2502  000010                     setRtc@seteado:
  2503                           	opt callstack 0
  2504  000010                     _atoi$1569:
  2505                           	opt callstack 0
  2506                           
  2507                           ; 2 bytes @ 0xF
  2508  000010                     	ds	1
  2509  000011                     ?_pad:
  2510                           	opt callstack 0
  2511  000011                     setRtc@datoRtc:
  2512                           	opt callstack 0
  2513  000011                     encenderBombas@flagSeco:
  2514                           	opt callstack 0
  2515  000011                     regadoRapido@tiempoRegar:
  2516                           	opt callstack 0
  2517  000011                     ___aodiv@counter:
  2518                           	opt callstack 0
  2519  000011                     ___aomod@counter:
  2520                           	opt callstack 0
  2521  000011                     escribeHorariosMemoria@i:
  2522                           	opt callstack 0
  2523  000011                     pad@fp:
  2524                           	opt callstack 0
  2525  000011                     ___aldiv@divisor:
  2526                           	opt callstack 0
  2527                           
  2528                           ; 4 bytes @ 0x10
  2529  000011                     	ds	1
  2530  000012                     setRtc@dato:
  2531                           	opt callstack 0
  2532  000012                     regadoRapido@areaRegar:
  2533                           	opt callstack 0
  2534  000012                     ___aodiv@sign:
  2535                           	opt callstack 0
  2536  000012                     ___aomod@sign:
  2537                           	opt callstack 0
  2538  000012                     encenderBombas@i:
  2539                           	opt callstack 0
  2540  000012                     _atoi$1571:
  2541                           	opt callstack 0
  2542                           
  2543                           ; 2 bytes @ 0x11
  2544  000012                     	ds	1
  2545  000013                     ?_abs:
  2546                           	opt callstack 0
  2547  000013                     setTiempoRegar@tiempoRegar:
  2548                           	opt callstack 0
  2549  000013                     pad@buf:
  2550                           	opt callstack 0
  2551  000013                     abs@a:
  2552                           	opt callstack 0
  2553  000013                     ___aodiv@quotient:
  2554                           	opt callstack 0
  2555                           
  2556                           ; 8 bytes @ 0x12
  2557  000013                     	ds	1
  2558  000014                     setTiempoRegar@hora:
  2559                           	opt callstack 0
  2560  000014                     _atoi$1570:
  2561                           	opt callstack 0
  2562                           
  2563                           ; 1 bytes @ 0x13
  2564  000014                     	ds	1
  2565  000015                     ??_abs:
  2566  000015                     ___aldiv@counter:
  2567                           	opt callstack 0
  2568  000015                     pad@p:
  2569                           	opt callstack 0
  2570  000015                     atoi@n:
  2571                           	opt callstack 0
  2572                           
  2573                           ; 2 bytes @ 0x14
  2574  000015                     	ds	1
  2575  000016                     ___aldiv@sign:
  2576                           	opt callstack 0
  2577  000016                     stoa@i:
  2578                           	opt callstack 0
  2579                           
  2580                           ; 2 bytes @ 0x15
  2581  000016                     	ds	1
  2582  000017                     ??_pad:
  2583  000017                     ___aldiv@quotient:
  2584                           	opt callstack 0
  2585                           
  2586                           ; 4 bytes @ 0x16
  2587  000017                     	ds	1
  2588  000018                     pad@i:
  2589                           	opt callstack 0
  2590  000018                     stoa@w:
  2591                           	opt callstack 0
  2592                           
  2593                           ; 2 bytes @ 0x17
  2594  000018                     	ds	2
  2595  00001A                     pad@w:
  2596                           	opt callstack 0
  2597  00001A                     stoa@cp:
  2598                           	opt callstack 0
  2599                           
  2600                           ; 2 bytes @ 0x19
  2601  00001A                     	ds	1
  2602  00001B                     ?_map:
  2603                           	opt callstack 0
  2604  00001B                     UART_init@BAUD:
  2605                           	opt callstack 0
  2606  00001B                     map@x:
  2607                           	opt callstack 0
  2608                           
  2609                           ; 4 bytes @ 0x1A
  2610  00001B                     	ds	1
  2611  00001C                     ?_ctoa:
  2612                           	opt callstack 0
  2613  00001C                     ?_dtoa:
  2614                           	opt callstack 0
  2615  00001C                     ctoa@fp:
  2616                           	opt callstack 0
  2617  00001C                     dtoa@fp:
  2618                           	opt callstack 0
  2619  00001C                     stoa@p:
  2620                           	opt callstack 0
  2621                           
  2622                           ; 2 bytes @ 0x1B
  2623  00001C                     	ds	2
  2624  00001E                     ctoa@c:
  2625                           	opt callstack 0
  2626  00001E                     stoa@l:
  2627                           	opt callstack 0
  2628  00001E                     dtoa@d:
  2629                           	opt callstack 0
  2630                           
  2631                           ; 8 bytes @ 0x1D
  2632  00001E                     	ds	1
  2633  00001F                     ctoa@w:
  2634                           	opt callstack 0
  2635  00001F                     map@in_min:
  2636                           	opt callstack 0
  2637                           
  2638                           ; 4 bytes @ 0x1E
  2639  00001F                     	ds	4
  2640  000023                     map@in_max:
  2641                           	opt callstack 0
  2642  000023                     _UART_init$1920:
  2643                           	opt callstack 0
  2644                           
  2645                           ; 4 bytes @ 0x22
  2646  000023                     	ds	3
  2647  000026                     ??_dtoa:
  2648                           
  2649                           ; 1 bytes @ 0x25
  2650  000026                     	ds	1
  2651  000027                     map@out_min:
  2652                           	opt callstack 0
  2653                           
  2654                           ; 4 bytes @ 0x26
  2655  000027                     	ds	4
  2656  00002B                     map@out_max:
  2657                           	opt callstack 0
  2658                           
  2659                           ; 4 bytes @ 0x2A
  2660  00002B                     	ds	3
  2661  00002E                     _dtoa$1084:
  2662                           	opt callstack 0
  2663                           
  2664                           ; 2 bytes @ 0x2D
  2665  00002E                     	ds	1
  2666  00002F                     ??_lecturaAnalogaSensores:
  2667                           
  2668                           ; 1 bytes @ 0x2E
  2669  00002F                     	ds	1
  2670  000030                     lecturaAnalogaSensores@i:
  2671                           	opt callstack 0
  2672  000030                     dtoa@p:
  2673                           	opt callstack 0
  2674                           
  2675                           ; 2 bytes @ 0x2F
  2676  000030                     	ds	2
  2677  000032                     dtoa@w:
  2678                           	opt callstack 0
  2679                           
  2680                           ; 2 bytes @ 0x31
  2681  000032                     	ds	2
  2682  000034                     dtoa@s:
  2683                           	opt callstack 0
  2684                           
  2685                           ; 2 bytes @ 0x33
  2686  000034                     	ds	2
  2687  000036                     dtoa@n:
  2688                           	opt callstack 0
  2689                           
  2690                           ; 8 bytes @ 0x35
  2691  000036                     	ds	8
  2692  00003E                     dtoa@i:
  2693                           	opt callstack 0
  2694                           
  2695                           ; 2 bytes @ 0x3D
  2696  00003E                     	ds	2
  2697  000040                     ?_vfpfcnvrt:
  2698                           	opt callstack 0
  2699  000040                     vfpfcnvrt@fp:
  2700                           	opt callstack 0
  2701                           
  2702                           ; 2 bytes @ 0x3F
  2703  000040                     	ds	2
  2704  000042                     vfpfcnvrt@fmt:
  2705                           	opt callstack 0
  2706                           
  2707                           ; 2 bytes @ 0x41
  2708  000042                     	ds	2
  2709  000044                     vfpfcnvrt@ap:
  2710                           	opt callstack 0
  2711                           
  2712                           ; 2 bytes @ 0x43
  2713  000044                     	ds	2
  2714  000046                     ??_vfpfcnvrt:
  2715                           
  2716                           ; 1 bytes @ 0x45
  2717  000046                     	ds	4
  2718  00004A                     vfpfcnvrt@ll:
  2719                           	opt callstack 0
  2720                           
  2721                           ; 8 bytes @ 0x49
  2722  00004A                     	ds	8
  2723  000052                     vfpfcnvrt@cp:
  2724                           	opt callstack 0
  2725                           
  2726                           ; 2 bytes @ 0x51
  2727  000052                     	ds	2
  2728  000054                     vfpfcnvrt@done:
  2729                           	opt callstack 0
  2730                           
  2731                           ; 2 bytes @ 0x53
  2732  000054                     	ds	2
  2733  000056                     _vfpfcnvrt$1109:
  2734                           	opt callstack 0
  2735                           
  2736                           ; 2 bytes @ 0x55
  2737  000056                     	ds	2
  2738  000058                     _vfpfcnvrt$1110:
  2739                           	opt callstack 0
  2740                           
  2741                           ; 2 bytes @ 0x57
  2742  000058                     	ds	2
  2743  00005A                     vfpfcnvrt@c:
  2744                           	opt callstack 0
  2745                           
  2746                           ; 1 bytes @ 0x59
  2747  00005A                     	ds	1
  2748  00005B                     vfprintf@cfmt:
  2749                           	opt callstack 0
  2750                           
  2751                           ; 2 bytes @ 0x5A
  2752  00005B                     	ds	2
  2753  00005D                     ??_dameDatosSistema:
  2754  00005D                     ??_mostrarDatosSensoresWIFI:
  2755  00005D                     ??_mostrarDatosSensores:
  2756  00005D                     ??_asignarHorarios:
  2757  00005D                     
  2758                           ; 1 bytes @ 0x5C
  2759  00005D                     	ds	2
  2760  00005F                     
  2761                           ; 1 bytes @ 0x5E
  2762 ;;
  2763 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2764 ;;
  2765 ;; *************** function _main *****************
  2766 ;; Defined at:
  2767 ;;		line 1030 in file "main.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;		None
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;		None
  2772 ;; Return value:  Size  Location     Type
  2773 ;;                  1    wreg      void 
  2774 ;; Registers used:
  2775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2781 ;;      Params:         0       0       0       0       0       0       0       0       0
  2782 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2783 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2784 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2785 ;;Total ram usage:        0 bytes
  2786 ;; Hardware stack levels required when called:   12
  2787 ;; This function calls:
  2788 ;;		_UART_init
  2789 ;;		_configurarAdc
  2790 ;;		_i2c_iniciar
  2791 ;;		_inicializarObjetos
  2792 ;;		_leeHorariosMemoria
  2793 ;;		_mostrarMenu
  2794 ;;		_restablecerDatosSensor
  2795 ;;		_sistemaPrincipal
  2796 ;;		_sistemaRegado
  2797 ;; This function is called by:
  2798 ;;		Startup code after reset
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text0
  2803  00271A                     __ptext0:
  2804                           	opt callstack 0
  2805  00271A                     _main:
  2806                           	opt callstack 19
  2807  00271A                     
  2808                           ;main.c: 1032:     INTCONbits.GIE = 1;
  2809  00271A  8EF2               	bsf	242,7,c	;volatile
  2810                           
  2811                           ;main.c: 1033:     INTCONbits.PEIE = 1;
  2812  00271C  8CF2               	bsf	242,6,c	;volatile
  2813                           
  2814                           ;main.c: 1034:     INTCONbits.TMR0IE = 1;
  2815  00271E  8AF2               	bsf	242,5,c	;volatile
  2816                           
  2817                           ;main.c: 1036:     PIE1bits.RCIE = 1;
  2818  002720  8A9D               	bsf	157,5,c	;volatile
  2819  002722                     
  2820                           ;main.c: 1038:     T0CON = 0b00000111;
  2821  002722  0E07               	movlw	7
  2822  002724  6ED5               	movwf	213,c	;volatile
  2823  002726                     
  2824                           ;main.c: 1043:     restablecerDatosSensor();
  2825  002726  EC4D  F017         	call	_restablecerDatosSensor	;wreg free
  2826  00272A                     
  2827                           ;main.c: 1044:     configurarAdc();
  2828  00272A  EC75  F019         	call	_configurarAdc	;wreg free
  2829  00272E                     
  2830                           ;main.c: 1045:     UART_init(9600);
  2831  00272E  0E80               	movlw	128
  2832  002730  6E1B               	movwf	UART_init@BAUD^0,c
  2833  002732  0E25               	movlw	37
  2834  002734  6E1C               	movwf	(UART_init@BAUD+1)^0,c
  2835  002736  0E00               	movlw	0
  2836  002738  6E1D               	movwf	(UART_init@BAUD+2)^0,c
  2837  00273A  0E00               	movlw	0
  2838  00273C  6E1E               	movwf	(UART_init@BAUD+3)^0,c
  2839  00273E  EC17  F015         	call	_UART_init	;wreg free
  2840  002742                     
  2841                           ;main.c: 1046:     i2c_iniciar();
  2842  002742  EC51  F019         	call	_i2c_iniciar	;wreg free
  2843  002746                     
  2844                           ;main.c: 1047:     inicializarObjetos();
  2845  002746  ECDC  F00B         	call	_inicializarObjetos	;wreg free
  2846  00274A                     
  2847                           ;main.c: 1050:     leeHorariosMemoria();
  2848  00274A  ECE4  F00D         	call	_leeHorariosMemoria	;wreg free
  2849  00274E                     
  2850                           ;main.c: 1054:     TRISD = 0;
  2851  00274E  0E00               	movlw	0
  2852  002750  6E95               	movwf	149,c	;volatile
  2853  002752                     
  2854                           ;main.c: 1055:     LATD = 0;
  2855  002752  0E00               	movlw	0
  2856  002754  6E8C               	movwf	140,c	;volatile
  2857  002756                     
  2858                           ;main.c: 1057:     TMR0 = VALOR_TIMER0;
  2859  002756  C0FB  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  2860  00275A  C0FC  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  2861  00275E                     
  2862                           ;main.c: 1059:     INTCONbits.TMR0IF = 1;
  2863  00275E  84F2               	bsf	242,2,c	;volatile
  2864  002760                     
  2865                           ;main.c: 1062:     T0CONbits.TMR0ON = 1;
  2866  002760  8ED5               	bsf	213,7,c	;volatile
  2867  002762                     
  2868                           ;main.c: 1064:     mostrarMenu();
  2869  002762  EC65  F014         	call	_mostrarMenu	;wreg free
  2870  002766                     
  2871                           ;main.c: 1066:     MODO_COMUNICACION = 0;
  2872  002766  0E00               	movlw	0
  2873  002768  0100               	movlb	0	; () banked
  2874  00276A  6F88               	movwf	_MODO_COMUNICACION& (0+255),b
  2875  00276C                     l4901:
  2876                           
  2877                           ;main.c: 1071:         if (datoRecibido) {
  2878  00276C  0100               	movlb	0	; () banked
  2879  00276E  5183               	movf	_datoRecibido& (0+255),w,b
  2880  002770  B4D8               	btfsc	status,2,c
  2881  002772  EFBD  F013         	goto	u3831
  2882  002776  EFBF  F013         	goto	u3830
  2883  00277A                     u3831:
  2884  00277A  EFC6  F013         	goto	l4909
  2885  00277E                     u3830:
  2886  00277E                     
  2887                           ; BSR set to: 0
  2888                           ;main.c: 1073:             datoRecibido = 0;
  2889  00277E  0E00               	movlw	0
  2890  002780  6F83               	movwf	_datoRecibido& (0+255),b
  2891  002782                     
  2892                           ; BSR set to: 0
  2893                           ;main.c: 1074:             byteUart -= 48;
  2894  002782  0E30               	movlw	48
  2895  002784  5F8B               	subwf	_byteUart& (0+255),f,b
  2896  002786                     
  2897                           ; BSR set to: 0
  2898                           ;main.c: 1075:             sistemaPrincipal(byteUart);
  2899  002786  518B               	movf	_byteUart& (0+255),w,b
  2900  002788  EC68  F011         	call	_sistemaPrincipal
  2901  00278C                     l4909:
  2902                           
  2903                           ;main.c: 1079:         if (overflowTimer) {
  2904  00278C  0100               	movlb	0	; () banked
  2905  00278E  5182               	movf	_overflowTimer& (0+255),w,b
  2906  002790  B4D8               	btfsc	status,2,c
  2907  002792  EFCD  F013         	goto	u3841
  2908  002796  EFCF  F013         	goto	u3840
  2909  00279A                     u3841:
  2910  00279A  EFB6  F013         	goto	l4901
  2911  00279E                     u3840:
  2912  00279E                     
  2913                           ; BSR set to: 0
  2914                           ;main.c: 1081:             esperandoDatos = 0;
  2915  00279E  0E00               	movlw	0
  2916  0027A0  6F89               	movwf	_esperandoDatos& (0+255),b
  2917                           
  2918                           ;main.c: 1082:             overflowTimer = 0;
  2919  0027A2  0E00               	movlw	0
  2920  0027A4  6F82               	movwf	_overflowTimer& (0+255),b
  2921  0027A6                     
  2922                           ; BSR set to: 0
  2923                           ;main.c: 1083:             sistemaRegado();
  2924  0027A6  EC26  F00B         	call	_sistemaRegado	;wreg free
  2925  0027AA  EFB6  F013         	goto	l4901
  2926  0027AE  EF07  F000         	goto	start
  2927  0027B2                     __end_of_main:
  2928                           	opt callstack 0
  2929                           
  2930 ;; *************** function _sistemaRegado *****************
  2931 ;; Defined at:
  2932 ;;		line 619 in file "main.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;		None
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;		None
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  1    wreg      void 
  2939 ;; Registers used:
  2940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2946 ;;      Params:         0       0       0       0       0       0       0       0       0
  2947 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2948 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2949 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2950 ;;Total ram usage:        0 bytes
  2951 ;; Hardware stack levels used:    1
  2952 ;; Hardware stack levels required when called:   10
  2953 ;; This function calls:
  2954 ;;		_dameDiaActual
  2955 ;;		_dameHoraActual
  2956 ;;		_encenderBombas
  2957 ;;		_horaRegar
  2958 ;;		_lecturaAnalogaSensores
  2959 ;;		_lecturaWifi
  2960 ;;		_mostrarMenu
  2961 ;; This function is called by:
  2962 ;;		_main
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           	psect	text1
  2967  00164C                     __ptext1:
  2968                           	opt callstack 0
  2969  00164C                     _sistemaRegado:
  2970                           	opt callstack 20
  2971  00164C                     
  2972                           ;main.c: 623:     if (regando) {
  2973  00164C  0100               	movlb	0	; () banked
  2974  00164E  517B               	movf	_regando& (0+255),w,b
  2975  001650  B4D8               	btfsc	status,2,c
  2976  001652  EF2D  F00B         	goto	u3681
  2977  001656  EF2F  F00B         	goto	u3680
  2978  00165A                     u3681:
  2979  00165A  EF5F  F00B         	goto	l4795
  2980  00165E                     u3680:
  2981  00165E                     
  2982                           ; BSR set to: 0
  2983                           ;main.c: 625:         contInterrupciones++;
  2984  00165E  4B78               	infsnz	_contInterrupciones& (0+255),f,b
  2985  001660  2B79               	incf	(_contInterrupciones+1)& (0+255),f,b
  2986  001662                     
  2987                           ; BSR set to: 0
  2988                           ;main.c: 627:         if (contInterrupciones == 6) {
  2989  001662  0E06               	movlw	6
  2990  001664  1978               	xorwf	_contInterrupciones& (0+255),w,b
  2991  001666  1179               	iorwf	(_contInterrupciones+1)& (0+255),w,b
  2992  001668  A4D8               	btfss	status,2,c
  2993  00166A  EF39  F00B         	goto	u3691
  2994  00166E  EF3B  F00B         	goto	u3690
  2995  001672                     u3691:
  2996  001672  EFDB  F00B         	goto	l389
  2997  001676                     u3690:
  2998  001676                     
  2999                           ; BSR set to: 0
  3000                           ;main.c: 628:             contInterrupciones = 0;
  3001  001676  0E00               	movlw	0
  3002  001678  6F79               	movwf	(_contInterrupciones+1)& (0+255),b
  3003  00167A  0E00               	movlw	0
  3004  00167C  6F78               	movwf	_contInterrupciones& (0+255),b
  3005  00167E                     
  3006                           ; BSR set to: 0
  3007                           ;main.c: 629:             minutosTranscurridos++;
  3008  00167E  2B7C               	incf	_minutosTranscurridos& (0+255),f,b
  3009  001680                     
  3010                           ; BSR set to: 0
  3011                           ;main.c: 632:             if (minutosTranscurridos >= minutosRegar) {
  3012  001680  517D               	movf	_minutosRegar& (0+255),w,b
  3013  001682  5D7C               	subwf	_minutosTranscurridos& (0+255),w,b
  3014  001684  A0D8               	btfss	status,0,c
  3015  001686  EF47  F00B         	goto	u3701
  3016  00168A  EF49  F00B         	goto	u3700
  3017  00168E                     u3701:
  3018  00168E  EFDB  F00B         	goto	l389
  3019  001692                     u3700:
  3020  001692                     
  3021                           ; BSR set to: 0
  3022                           ;main.c: 634:                 LATD = 0;
  3023  001692  0E00               	movlw	0
  3024  001694  6E8C               	movwf	140,c	;volatile
  3025                           
  3026                           ;main.c: 635:                 minutosTranscurridos = 0;
  3027  001696  0E00               	movlw	0
  3028  001698  6F7C               	movwf	_minutosTranscurridos& (0+255),b
  3029                           
  3030                           ;main.c: 636:                 regando = 0;
  3031  00169A  0E00               	movlw	0
  3032  00169C  6F7B               	movwf	_regando& (0+255),b
  3033  00169E                     
  3034                           ; BSR set to: 0
  3035                           ;main.c: 637:                 horarios[hora].regado = 1;
  3036  00169E  5187               	movf	_hora& (0+255),w,b
  3037  0016A0  0D0C               	mullw	12
  3038  0016A2  0E3C               	movlw	low (_horarios+10)
  3039  0016A4  24F3               	addwf	243,w,c
  3040  0016A6  6ED9               	movwf	fsr2l,c
  3041  0016A8  0E01               	movlw	high (_horarios+10)
  3042  0016AA  20F4               	addwfc	prodh,w,c
  3043  0016AC  6EDA               	movwf	fsr2h,c
  3044  0016AE  0E01               	movlw	1
  3045  0016B0  6EDF               	movwf	indf2,c
  3046  0016B2                     
  3047                           ; BSR set to: 0
  3048                           ;main.c: 638:                 tempHora = hora;
  3049  0016B2  C087  F081         	movff	_hora,_tempHora
  3050  0016B6                     
  3051                           ; BSR set to: 0
  3052                           ;main.c: 639:                 flagRegado = 0;
  3053  0016B6  0E00               	movlw	0
  3054  0016B8  6F80               	movwf	_flagRegado& (0+255),b
  3055  0016BA  EFDB  F00B         	goto	l389
  3056  0016BE                     l4795:
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;main.c: 645:         dameHoraActual();
  3060  0016BE  ECB9  F018         	call	_dameHoraActual	;wreg free
  3061                           
  3062                           ;main.c: 646:         dameDiaActual();
  3063  0016C2  EC5C  F019         	call	_dameDiaActual	;wreg free
  3064  0016C6                     
  3065                           ;main.c: 648:         if (hora != tempHora && !flagRegado) {
  3066  0016C6  0100               	movlb	0	; () banked
  3067  0016C8  5181               	movf	_tempHora& (0+255),w,b
  3068  0016CA  1987               	xorwf	_hora& (0+255),w,b
  3069  0016CC  B4D8               	btfsc	status,2,c
  3070  0016CE  EF6B  F00B         	goto	u3711
  3071  0016D2  EF6D  F00B         	goto	u3710
  3072  0016D6                     u3711:
  3073  0016D6  EF81  F00B         	goto	l4805
  3074  0016DA                     u3710:
  3075  0016DA                     
  3076                           ; BSR set to: 0
  3077  0016DA  5180               	movf	_flagRegado& (0+255),w,b
  3078  0016DC  A4D8               	btfss	status,2,c
  3079  0016DE  EF73  F00B         	goto	u3721
  3080  0016E2  EF75  F00B         	goto	u3720
  3081  0016E6                     u3721:
  3082  0016E6  EF81  F00B         	goto	l4805
  3083  0016EA                     u3720:
  3084  0016EA                     
  3085                           ; BSR set to: 0
  3086                           ;main.c: 649:             horarios[tempHora].regado = 0;
  3087  0016EA  5181               	movf	_tempHora& (0+255),w,b
  3088  0016EC  0D0C               	mullw	12
  3089  0016EE  0E3C               	movlw	low (_horarios+10)
  3090  0016F0  24F3               	addwf	243,w,c
  3091  0016F2  6ED9               	movwf	fsr2l,c
  3092  0016F4  0E01               	movlw	high (_horarios+10)
  3093  0016F6  20F4               	addwfc	prodh,w,c
  3094  0016F8  6EDA               	movwf	fsr2h,c
  3095  0016FA  0E00               	movlw	0
  3096  0016FC  6EDF               	movwf	indf2,c
  3097  0016FE                     
  3098                           ; BSR set to: 0
  3099                           ;main.c: 650:             flagRegado = 1;
  3100  0016FE  0E01               	movlw	1
  3101  001700  6F80               	movwf	_flagRegado& (0+255),b
  3102  001702                     l4805:
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;main.c: 653:         if ((!MODO_COMUNICACION && horaRegar()) || (MODO_COMUNICACION
  3106  001702  5188               	movf	_MODO_COMUNICACION& (0+255),w,b
  3107  001704  A4D8               	btfss	status,2,c
  3108  001706  EF87  F00B         	goto	u3731
  3109  00170A  EF89  F00B         	goto	u3730
  3110  00170E                     u3731:
  3111  00170E  EF94  F00B         	goto	l4809
  3112  001712                     u3730:
  3113  001712                     
  3114                           ; BSR set to: 0
  3115  001712  EC23  F014         	call	_horaRegar	;wreg free
  3116  001716  5001               	movf	?_horaRegar^0,w,c
  3117  001718  1002               	iorwf	(?_horaRegar+1)^0,w,c
  3118  00171A  A4D8               	btfss	status,2,c
  3119  00171C  EF92  F00B         	goto	u3741
  3120  001720  EF94  F00B         	goto	u3740
  3121  001724                     u3741:
  3122  001724  EFA8  F00B         	goto	l4813
  3123  001728                     u3740:
  3124  001728                     l4809:
  3125  001728  0100               	movlb	0	; () banked
  3126  00172A  5188               	movf	_MODO_COMUNICACION& (0+255),w,b
  3127  00172C  B4D8               	btfsc	status,2,c
  3128  00172E  EF9B  F00B         	goto	u3751
  3129  001732  EF9D  F00B         	goto	u3750
  3130  001736                     u3751:
  3131  001736  EFDB  F00B         	goto	l389
  3132  00173A                     u3750:
  3133  00173A                     
  3134                           ; BSR set to: 0
  3135  00173A  EC23  F014         	call	_horaRegar	;wreg free
  3136  00173E  5001               	movf	?_horaRegar^0,w,c
  3137  001740  1002               	iorwf	(?_horaRegar+1)^0,w,c
  3138  001742  B4D8               	btfsc	status,2,c
  3139  001744  EFA6  F00B         	goto	u3761
  3140  001748  EFA8  F00B         	goto	u3760
  3141  00174C                     u3761:
  3142  00174C  EFDB  F00B         	goto	l389
  3143  001750                     u3760:
  3144  001750                     l4813:
  3145                           
  3146                           ;main.c: 654:                 && horaRegar())) {;main.c: 658:             if (MODO_COMUN
      +                          ICACION) {
  3147  001750  0100               	movlb	0	; () banked
  3148  001752  5188               	movf	_MODO_COMUNICACION& (0+255),w,b
  3149  001754  B4D8               	btfsc	status,2,c
  3150  001756  EFAF  F00B         	goto	u3771
  3151  00175A  EFB1  F00B         	goto	u3770
  3152  00175E                     u3771:
  3153  00175E  EFCC  F00B         	goto	l4825
  3154  001762                     u3770:
  3155  001762                     
  3156                           ; BSR set to: 0
  3157                           ;main.c: 659:                 lecturaWifi();
  3158  001762  ECA2  F00F         	call	_lecturaWifi	;wreg free
  3159  001766                     
  3160                           ;main.c: 660:                 if (peticionLecturaSensores) {
  3161  001766  0100               	movlb	0	; () banked
  3162  001768  517A               	movf	_peticionLecturaSensores& (0+255),w,b
  3163  00176A  B4D8               	btfsc	status,2,c
  3164  00176C  EFBA  F00B         	goto	u3781
  3165  001770  EFBC  F00B         	goto	u3780
  3166  001774                     u3781:
  3167  001774  EFC8  F00B         	goto	l4823
  3168  001778                     u3780:
  3169  001778                     
  3170                           ; BSR set to: 0
  3171                           ;main.c: 661:                     minutosRegar = horarios[hora].tiempoRegar;
  3172  001778  5187               	movf	_hora& (0+255),w,b
  3173  00177A  0D0C               	mullw	12
  3174  00177C  0E3D               	movlw	low (_horarios+11)
  3175  00177E  24F3               	addwf	243,w,c
  3176  001780  6ED9               	movwf	fsr2l,c
  3177  001782  0E01               	movlw	high (_horarios+11)
  3178  001784  20F4               	addwfc	prodh,w,c
  3179  001786  6EDA               	movwf	fsr2h,c
  3180  001788  50DF               	movf	indf2,w,c
  3181  00178A  6F7D               	movwf	_minutosRegar& (0+255),b
  3182  00178C                     
  3183                           ; BSR set to: 0
  3184                           ;main.c: 662:                     encenderBombas();
  3185  00178C  ECB3  F005         	call	_encenderBombas	;wreg free
  3186  001790                     l4823:
  3187                           
  3188                           ;main.c: 664:                 mostrarMenu();
  3189  001790  EC65  F014         	call	_mostrarMenu	;wreg free
  3190                           
  3191                           ;main.c: 665:             } else {
  3192  001794  EFDB  F00B         	goto	l389
  3193  001798                     l4825:
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;main.c: 666:                 lecturaAnalogaSensores();
  3197  001798  ECE8  F012         	call	_lecturaAnalogaSensores	;wreg free
  3198  00179C                     
  3199                           ;main.c: 667:                 minutosRegar = horarios[hora].tiempoRegar;
  3200  00179C  0100               	movlb	0	; () banked
  3201  00179E  5187               	movf	_hora& (0+255),w,b
  3202  0017A0  0D0C               	mullw	12
  3203  0017A2  0E3D               	movlw	low (_horarios+11)
  3204  0017A4  24F3               	addwf	243,w,c
  3205  0017A6  6ED9               	movwf	fsr2l,c
  3206  0017A8  0E01               	movlw	high (_horarios+11)
  3207  0017AA  20F4               	addwfc	prodh,w,c
  3208  0017AC  6EDA               	movwf	fsr2h,c
  3209  0017AE  50DF               	movf	indf2,w,c
  3210  0017B0  6F7D               	movwf	_minutosRegar& (0+255),b
  3211  0017B2                     
  3212                           ; BSR set to: 0
  3213                           ;main.c: 668:                 encenderBombas();
  3214  0017B2  ECB3  F005         	call	_encenderBombas	;wreg free
  3215  0017B6                     l389:
  3216  0017B6  0012               	return		;funcret
  3217  0017B8                     __end_of_sistemaRegado:
  3218                           	opt callstack 0
  3219                           
  3220 ;; *************** function _horaRegar *****************
  3221 ;; Defined at:
  3222 ;;		line 156 in file "main.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;		None
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;		None
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  2    0[COMRAM] int 
  3229 ;; Registers used:
  3230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3236 ;;      Params:         2       0       0       0       0       0       0       0       0
  3237 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3238 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3239 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3240 ;;Total ram usage:        6 bytes
  3241 ;; Hardware stack levels used:    1
  3242 ;; Hardware stack levels required when called:    1
  3243 ;; This function calls:
  3244 ;;		Nothing
  3245 ;; This function is called by:
  3246 ;;		_sistemaRegado
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           	psect	text2
  3251  002846                     __ptext2:
  3252                           	opt callstack 0
  3253  002846                     _horaRegar:
  3254                           	opt callstack 28
  3255  002846                     
  3256                           ;main.c: 158:     return (horarios[hora].regar) && (!horarios[hora].regado) &&
  3257  002846  0E00               	movlw	0
  3258  002848  6E06               	movwf	_horaRegar$806^0,c
  3259  00284A  0100               	movlb	0	; () banked
  3260  00284C  5187               	movf	_hora& (0+255),w,b
  3261  00284E  0D0C               	mullw	12
  3262  002850  0E3B               	movlw	low (_horarios+9)
  3263  002852  24F3               	addwf	243,w,c
  3264  002854  6ED9               	movwf	fsr2l,c
  3265  002856  0E01               	movlw	high (_horarios+9)
  3266  002858  20F4               	addwfc	prodh,w,c
  3267  00285A  6EDA               	movwf	fsr2h,c
  3268  00285C  50DF               	movf	indf2,w,c
  3269  00285E  B4D8               	btfsc	status,2,c
  3270  002860  EF34  F014         	goto	u3311
  3271  002864  EF36  F014         	goto	u3310
  3272  002868                     u3311:
  3273  002868  EF61  F014         	goto	l4295
  3274  00286C                     u3310:
  3275  00286C                     
  3276                           ; BSR set to: 0
  3277  00286C  5187               	movf	_hora& (0+255),w,b
  3278  00286E  0D0C               	mullw	12
  3279  002870  0E3C               	movlw	low (_horarios+10)
  3280  002872  24F3               	addwf	243,w,c
  3281  002874  6ED9               	movwf	fsr2l,c
  3282  002876  0E01               	movlw	high (_horarios+10)
  3283  002878  20F4               	addwfc	prodh,w,c
  3284  00287A  6EDA               	movwf	fsr2h,c
  3285  00287C  50DF               	movf	indf2,w,c
  3286  00287E  A4D8               	btfss	status,2,c
  3287  002880  EF44  F014         	goto	u3321
  3288  002884  EF46  F014         	goto	u3320
  3289  002888                     u3321:
  3290  002888  EF61  F014         	goto	l4295
  3291  00288C                     u3320:
  3292  00288C                     
  3293                           ; BSR set to: 0
  3294  00288C  5187               	movf	_hora& (0+255),w,b
  3295  00288E  0D0C               	mullw	12
  3296  002890  0E32               	movlw	low _horarios
  3297  002892  6E03               	movwf	??_horaRegar^0,c
  3298  002894  0E01               	movlw	high _horarios
  3299  002896  6E04               	movwf	(??_horaRegar+1)^0,c
  3300  002898  50F3               	movf	243,w,c
  3301  00289A  2603               	addwf	??_horaRegar^0,f,c
  3302  00289C  50F4               	movf	244,w,c
  3303  00289E  2204               	addwfc	(??_horaRegar+1)^0,f,c
  3304  0028A0  5184               	movf	_diaActual& (0+255),w,b
  3305  0028A2  2403               	addwf	??_horaRegar^0,w,c
  3306  0028A4  6ED9               	movwf	fsr2l,c
  3307  0028A6  0E00               	movlw	0
  3308  0028A8  2004               	addwfc	(??_horaRegar+1)^0,w,c
  3309  0028AA  6EDA               	movwf	fsr2h,c
  3310  0028AC  0E31               	movlw	49
  3311  0028AE  18DE               	xorwf	postinc2,w,c
  3312  0028B0  A4D8               	btfss	status,2,c
  3313  0028B2  EF5D  F014         	goto	u3331
  3314  0028B6  EF5F  F014         	goto	u3330
  3315  0028BA                     u3331:
  3316  0028BA  EF61  F014         	goto	l4295
  3317  0028BE                     u3330:
  3318  0028BE                     
  3319                           ; BSR set to: 0
  3320  0028BE  0E01               	movlw	1
  3321  0028C0  6E06               	movwf	_horaRegar$806^0,c
  3322  0028C2                     l4295:
  3323                           
  3324                           ; BSR set to: 0
  3325  0028C2  C006  F001         	movff	_horaRegar$806,?_horaRegar
  3326  0028C6  6A02               	clrf	(?_horaRegar+1)^0,c
  3327  0028C8                     
  3328                           ; BSR set to: 0
  3329  0028C8  0012               	return		;funcret
  3330  0028CA                     __end_of_horaRegar:
  3331                           	opt callstack 0
  3332                           
  3333 ;; *************** function _encenderBombas *****************
  3334 ;; Defined at:
  3335 ;;		line 296 in file "main.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;		None
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;  i               2   17[COMRAM] int 
  3340 ;;  flagSeco        1   16[COMRAM] unsigned char 
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      void 
  3343 ;; Registers used:
  3344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3350 ;;      Params:         0       0       0       0       0       0       0       0       0
  3351 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3352 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3353 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3354 ;;Total ram usage:        5 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; Hardware stack levels required when called:    5
  3357 ;; This function calls:
  3358 ;;		_estaSeco
  3359 ;; This function is called by:
  3360 ;;		_sistemaRegado
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           	psect	text3
  3365  000B66                     __ptext3:
  3366                           	opt callstack 0
  3367  000B66                     _encenderBombas:
  3368                           	opt callstack 24
  3369  000B66                     
  3370                           ;main.c: 298:     char flagSeco = 0;
  3371  000B66  0E00               	movlw	0
  3372  000B68  6E11               	movwf	encenderBombas@flagSeco^0,c
  3373                           
  3374                           ;main.c: 300:     for (int i = 0; i < 1; i++) {
  3375  000B6A  0E00               	movlw	0
  3376  000B6C  6E13               	movwf	(encenderBombas@i+1)^0,c
  3377  000B6E  0E00               	movlw	0
  3378  000B70  6E12               	movwf	encenderBombas@i^0,c
  3379  000B72  EF95  F006         	goto	l4373
  3380  000B76                     l4323:
  3381                           
  3382                           ;main.c: 305:                 if (estaSeco(sensores[i])) {
  3383  000B76  90D8               	bcf	status,0,c
  3384  000B78  3412               	rlcf	encenderBombas@i^0,w,c
  3385  000B7A  6ED9               	movwf	fsr2l,c
  3386  000B7C  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3387  000B7E  6EDA               	movwf	fsr2h,c
  3388  000B80  0E60               	movlw	low _sensores
  3389  000B82  26D9               	addwf	fsr2l,f,c
  3390  000B84  0E00               	movlw	high _sensores
  3391  000B86  22DA               	addwfc	fsr2h,f,c
  3392  000B88  CFDE F00C          	movff	postinc2,estaSeco@s
  3393  000B8C  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3394  000B90  EC53  F018         	call	_estaSeco	;wreg free
  3395  000B94  500C               	movf	?_estaSeco^0,w,c
  3396  000B96  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3397  000B98  B4D8               	btfsc	status,2,c
  3398  000B9A  EFD1  F005         	goto	u3351
  3399  000B9E  EFD3  F005         	goto	u3350
  3400  000BA2                     u3351:
  3401  000BA2  EFC3  F006         	goto	l4375
  3402  000BA6                     u3350:
  3403  000BA6                     
  3404                           ;main.c: 306:                     LATDbits.LATD0 = 1;
  3405  000BA6  808C               	bsf	140,0,c	;volatile
  3406  000BA8                     l4327:
  3407                           
  3408                           ;main.c: 307:                     flagSeco = 1;
  3409  000BA8  0E01               	movlw	1
  3410  000BAA  6E11               	movwf	encenderBombas@flagSeco^0,c
  3411  000BAC  EFC3  F006         	goto	l4375
  3412  000BB0                     l4329:
  3413                           
  3414                           ;main.c: 312:                 if (estaSeco(sensores[i])) {
  3415  000BB0  90D8               	bcf	status,0,c
  3416  000BB2  3412               	rlcf	encenderBombas@i^0,w,c
  3417  000BB4  6ED9               	movwf	fsr2l,c
  3418  000BB6  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3419  000BB8  6EDA               	movwf	fsr2h,c
  3420  000BBA  0E60               	movlw	low _sensores
  3421  000BBC  26D9               	addwf	fsr2l,f,c
  3422  000BBE  0E00               	movlw	high _sensores
  3423  000BC0  22DA               	addwfc	fsr2h,f,c
  3424  000BC2  CFDE F00C          	movff	postinc2,estaSeco@s
  3425  000BC6  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3426  000BCA  EC53  F018         	call	_estaSeco	;wreg free
  3427  000BCE  500C               	movf	?_estaSeco^0,w,c
  3428  000BD0  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3429  000BD2  B4D8               	btfsc	status,2,c
  3430  000BD4  EFEE  F005         	goto	u3361
  3431  000BD8  EFF0  F005         	goto	u3360
  3432  000BDC                     u3361:
  3433  000BDC  EFC3  F006         	goto	l4375
  3434  000BE0                     u3360:
  3435  000BE0                     
  3436                           ;main.c: 313:                     LATDbits.LATD1 = 1;
  3437  000BE0  828C               	bsf	140,1,c	;volatile
  3438  000BE2  EFD4  F005         	goto	l4327
  3439  000BE6                     l4335:
  3440                           
  3441                           ;main.c: 319:                 if (estaSeco(sensores[i])) {
  3442  000BE6  90D8               	bcf	status,0,c
  3443  000BE8  3412               	rlcf	encenderBombas@i^0,w,c
  3444  000BEA  6ED9               	movwf	fsr2l,c
  3445  000BEC  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3446  000BEE  6EDA               	movwf	fsr2h,c
  3447  000BF0  0E60               	movlw	low _sensores
  3448  000BF2  26D9               	addwf	fsr2l,f,c
  3449  000BF4  0E00               	movlw	high _sensores
  3450  000BF6  22DA               	addwfc	fsr2h,f,c
  3451  000BF8  CFDE F00C          	movff	postinc2,estaSeco@s
  3452  000BFC  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3453  000C00  EC53  F018         	call	_estaSeco	;wreg free
  3454  000C04  500C               	movf	?_estaSeco^0,w,c
  3455  000C06  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3456  000C08  B4D8               	btfsc	status,2,c
  3457  000C0A  EF09  F006         	goto	u3371
  3458  000C0E  EF0B  F006         	goto	u3370
  3459  000C12                     u3371:
  3460  000C12  EFC3  F006         	goto	l4375
  3461  000C16                     u3370:
  3462  000C16                     
  3463                           ;main.c: 320:                     LATDbits.LATD2 = 1;
  3464  000C16  848C               	bsf	140,2,c	;volatile
  3465  000C18  EFD4  F005         	goto	l4327
  3466  000C1C                     l4341:
  3467                           
  3468                           ;main.c: 326:                 if (estaSeco(sensores[i])) {
  3469  000C1C  90D8               	bcf	status,0,c
  3470  000C1E  3412               	rlcf	encenderBombas@i^0,w,c
  3471  000C20  6ED9               	movwf	fsr2l,c
  3472  000C22  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3473  000C24  6EDA               	movwf	fsr2h,c
  3474  000C26  0E60               	movlw	low _sensores
  3475  000C28  26D9               	addwf	fsr2l,f,c
  3476  000C2A  0E00               	movlw	high _sensores
  3477  000C2C  22DA               	addwfc	fsr2h,f,c
  3478  000C2E  CFDE F00C          	movff	postinc2,estaSeco@s
  3479  000C32  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3480  000C36  EC53  F018         	call	_estaSeco	;wreg free
  3481  000C3A  500C               	movf	?_estaSeco^0,w,c
  3482  000C3C  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3483  000C3E  B4D8               	btfsc	status,2,c
  3484  000C40  EF24  F006         	goto	u3381
  3485  000C44  EF26  F006         	goto	u3380
  3486  000C48                     u3381:
  3487  000C48  EFC3  F006         	goto	l4375
  3488  000C4C                     u3380:
  3489  000C4C                     
  3490                           ;main.c: 327:                     LATDbits.LATD3 = 1;
  3491  000C4C  868C               	bsf	140,3,c	;volatile
  3492  000C4E  EFD4  F005         	goto	l4327
  3493  000C52                     l4347:
  3494                           
  3495                           ;main.c: 333:                 if (estaSeco(sensores[i])) {
  3496  000C52  90D8               	bcf	status,0,c
  3497  000C54  3412               	rlcf	encenderBombas@i^0,w,c
  3498  000C56  6ED9               	movwf	fsr2l,c
  3499  000C58  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3500  000C5A  6EDA               	movwf	fsr2h,c
  3501  000C5C  0E60               	movlw	low _sensores
  3502  000C5E  26D9               	addwf	fsr2l,f,c
  3503  000C60  0E00               	movlw	high _sensores
  3504  000C62  22DA               	addwfc	fsr2h,f,c
  3505  000C64  CFDE F00C          	movff	postinc2,estaSeco@s
  3506  000C68  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3507  000C6C  EC53  F018         	call	_estaSeco	;wreg free
  3508  000C70  500C               	movf	?_estaSeco^0,w,c
  3509  000C72  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3510  000C74  B4D8               	btfsc	status,2,c
  3511  000C76  EF3F  F006         	goto	u3391
  3512  000C7A  EF41  F006         	goto	u3390
  3513  000C7E                     u3391:
  3514  000C7E  EFC3  F006         	goto	l4375
  3515  000C82                     u3390:
  3516  000C82                     
  3517                           ;main.c: 334:                     LATDbits.LATD4 = 1;
  3518  000C82  888C               	bsf	140,4,c	;volatile
  3519  000C84  EFD4  F005         	goto	l4327
  3520  000C88                     l4353:
  3521                           
  3522                           ;main.c: 340:                 if (estaSeco(sensores[i])) {
  3523  000C88  90D8               	bcf	status,0,c
  3524  000C8A  3412               	rlcf	encenderBombas@i^0,w,c
  3525  000C8C  6ED9               	movwf	fsr2l,c
  3526  000C8E  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3527  000C90  6EDA               	movwf	fsr2h,c
  3528  000C92  0E60               	movlw	low _sensores
  3529  000C94  26D9               	addwf	fsr2l,f,c
  3530  000C96  0E00               	movlw	high _sensores
  3531  000C98  22DA               	addwfc	fsr2h,f,c
  3532  000C9A  CFDE F00C          	movff	postinc2,estaSeco@s
  3533  000C9E  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3534  000CA2  EC53  F018         	call	_estaSeco	;wreg free
  3535  000CA6  500C               	movf	?_estaSeco^0,w,c
  3536  000CA8  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3537  000CAA  B4D8               	btfsc	status,2,c
  3538  000CAC  EF5A  F006         	goto	u3401
  3539  000CB0  EF5C  F006         	goto	u3400
  3540  000CB4                     u3401:
  3541  000CB4  EFC3  F006         	goto	l4375
  3542  000CB8                     u3400:
  3543  000CB8                     
  3544                           ;main.c: 341:                     LATDbits.LATD5 = 1;
  3545  000CB8  8A8C               	bsf	140,5,c	;volatile
  3546  000CBA  EFD4  F005         	goto	l4327
  3547  000CBE                     l4359:
  3548                           
  3549                           ;main.c: 347:                 if (estaSeco(sensores[i])) {
  3550  000CBE  90D8               	bcf	status,0,c
  3551  000CC0  3412               	rlcf	encenderBombas@i^0,w,c
  3552  000CC2  6ED9               	movwf	fsr2l,c
  3553  000CC4  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3554  000CC6  6EDA               	movwf	fsr2h,c
  3555  000CC8  0E60               	movlw	low _sensores
  3556  000CCA  26D9               	addwf	fsr2l,f,c
  3557  000CCC  0E00               	movlw	high _sensores
  3558  000CCE  22DA               	addwfc	fsr2h,f,c
  3559  000CD0  CFDE F00C          	movff	postinc2,estaSeco@s
  3560  000CD4  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3561  000CD8  EC53  F018         	call	_estaSeco	;wreg free
  3562  000CDC  500C               	movf	?_estaSeco^0,w,c
  3563  000CDE  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3564  000CE0  B4D8               	btfsc	status,2,c
  3565  000CE2  EF75  F006         	goto	u3411
  3566  000CE6  EF77  F006         	goto	u3410
  3567  000CEA                     u3411:
  3568  000CEA  EFC3  F006         	goto	l4375
  3569  000CEE                     u3410:
  3570  000CEE                     
  3571                           ;main.c: 348:                     LATDbits.LATD6 = 1;
  3572  000CEE  8C8C               	bsf	140,6,c	;volatile
  3573  000CF0  EFD4  F005         	goto	l4327
  3574  000CF4                     l4365:
  3575                           
  3576                           ;main.c: 354:                 if (estaSeco(sensores[i])) {
  3577  000CF4  90D8               	bcf	status,0,c
  3578  000CF6  3412               	rlcf	encenderBombas@i^0,w,c
  3579  000CF8  6ED9               	movwf	fsr2l,c
  3580  000CFA  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3581  000CFC  6EDA               	movwf	fsr2h,c
  3582  000CFE  0E60               	movlw	low _sensores
  3583  000D00  26D9               	addwf	fsr2l,f,c
  3584  000D02  0E00               	movlw	high _sensores
  3585  000D04  22DA               	addwfc	fsr2h,f,c
  3586  000D06  CFDE F00C          	movff	postinc2,estaSeco@s
  3587  000D0A  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3588  000D0E  EC53  F018         	call	_estaSeco	;wreg free
  3589  000D12  500C               	movf	?_estaSeco^0,w,c
  3590  000D14  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3591  000D16  B4D8               	btfsc	status,2,c
  3592  000D18  EF90  F006         	goto	u3421
  3593  000D1C  EF92  F006         	goto	u3420
  3594  000D20                     u3421:
  3595  000D20  EFC3  F006         	goto	l4375
  3596  000D24                     u3420:
  3597  000D24                     
  3598                           ;main.c: 355:                     LATDbits.LATD7 = 1;
  3599  000D24  8E8C               	bsf	140,7,c	;volatile
  3600  000D26  EFD4  F005         	goto	l4327
  3601  000D2A                     l4373:
  3602  000D2A  C012  F00F         	movff	encenderBombas@i,??_encenderBombas
  3603  000D2E  C013  F010         	movff	encenderBombas@i+1,??_encenderBombas+1
  3604                           
  3605                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3606                           ; Switch size 1, requested type "simple"
  3607                           ; Number of cases is 1, Range of values is 0 to 0
  3608                           ; switch strategies available:
  3609                           ; Name         Instructions Cycles
  3610                           ; simple_byte            4     3 (average)
  3611                           ;	Chosen strategy is simple_byte
  3612  000D32  5010               	movf	(??_encenderBombas+1)^0,w,c
  3613  000D34  0A00               	xorlw	0	; case 0
  3614  000D36  B4D8               	btfsc	status,2,c
  3615  000D38  EFA0  F006         	goto	l5125
  3616  000D3C  EFC3  F006         	goto	l4375
  3617  000D40                     l5125:
  3618                           
  3619                           ; Switch size 1, requested type "simple"
  3620                           ; Number of cases is 8, Range of values is 0 to 7
  3621                           ; switch strategies available:
  3622                           ; Name         Instructions Cycles
  3623                           ; simple_byte           25    13 (average)
  3624                           ;	Chosen strategy is simple_byte
  3625  000D40  500F               	movf	??_encenderBombas^0,w,c
  3626  000D42  0A00               	xorlw	0	; case 0
  3627  000D44  B4D8               	btfsc	status,2,c
  3628  000D46  EFBB  F005         	goto	l4323
  3629  000D4A  0A01               	xorlw	1	; case 1
  3630  000D4C  B4D8               	btfsc	status,2,c
  3631  000D4E  EFD8  F005         	goto	l4329
  3632  000D52  0A03               	xorlw	3	; case 2
  3633  000D54  B4D8               	btfsc	status,2,c
  3634  000D56  EFF3  F005         	goto	l4335
  3635  000D5A  0A01               	xorlw	1	; case 3
  3636  000D5C  B4D8               	btfsc	status,2,c
  3637  000D5E  EF0E  F006         	goto	l4341
  3638  000D62  0A07               	xorlw	7	; case 4
  3639  000D64  B4D8               	btfsc	status,2,c
  3640  000D66  EF29  F006         	goto	l4347
  3641  000D6A  0A01               	xorlw	1	; case 5
  3642  000D6C  B4D8               	btfsc	status,2,c
  3643  000D6E  EF44  F006         	goto	l4353
  3644  000D72  0A03               	xorlw	3	; case 6
  3645  000D74  B4D8               	btfsc	status,2,c
  3646  000D76  EF5F  F006         	goto	l4359
  3647  000D7A  0A01               	xorlw	1	; case 7
  3648  000D7C  B4D8               	btfsc	status,2,c
  3649  000D7E  EF7A  F006         	goto	l4365
  3650  000D82  EFC3  F006         	goto	l4375
  3651  000D86                     l4375:
  3652                           
  3653                           ;main.c: 361:     }
  3654  000D86  4A12               	infsnz	encenderBombas@i^0,f,c
  3655  000D88  2A13               	incf	(encenderBombas@i+1)^0,f,c
  3656  000D8A  BE13               	btfsc	(encenderBombas@i+1)^0,7,c
  3657  000D8C  EFD0  F006         	goto	u3431
  3658  000D90  5013               	movf	(encenderBombas@i+1)^0,w,c
  3659  000D92  E108               	bnz	u3430
  3660  000D94  0412               	decf	encenderBombas@i^0,w,c
  3661  000D96  A0D8               	btfss	status,0,c
  3662  000D98  EFD0  F006         	goto	u3431
  3663  000D9C  EFD2  F006         	goto	u3430
  3664  000DA0                     u3431:
  3665  000DA0  EF95  F006         	goto	l4373
  3666  000DA4                     u3430:
  3667  000DA4                     
  3668                           ;main.c: 363:     if (flagSeco) {
  3669  000DA4  5011               	movf	encenderBombas@flagSeco^0,w,c
  3670  000DA6  B4D8               	btfsc	status,2,c
  3671  000DA8  EFD8  F006         	goto	u3441
  3672  000DAC  EFDA  F006         	goto	u3440
  3673  000DB0                     u3441:
  3674  000DB0  EFE7  F006         	goto	l306
  3675  000DB4                     u3440:
  3676  000DB4                     
  3677                           ;main.c: 364:         regando = 1;
  3678  000DB4  0E01               	movlw	1
  3679  000DB6  0100               	movlb	0	; () banked
  3680  000DB8  6F7B               	movwf	_regando& (0+255),b
  3681  000DBA                     
  3682                           ; BSR set to: 0
  3683                           ;main.c: 365:         horarios[hora].regado = 0;
  3684  000DBA  5187               	movf	_hora& (0+255),w,b
  3685  000DBC  0D0C               	mullw	12
  3686  000DBE  0E3C               	movlw	low (_horarios+10)
  3687  000DC0  24F3               	addwf	243,w,c
  3688  000DC2  6ED9               	movwf	fsr2l,c
  3689  000DC4  0E01               	movlw	high (_horarios+10)
  3690  000DC6  20F4               	addwfc	prodh,w,c
  3691  000DC8  6EDA               	movwf	fsr2h,c
  3692  000DCA  0E00               	movlw	0
  3693  000DCC  6EDF               	movwf	indf2,c
  3694  000DCE                     l306:
  3695  000DCE  0012               	return		;funcret
  3696  000DD0                     __end_of_encenderBombas:
  3697                           	opt callstack 0
  3698                           
  3699 ;; *************** function _estaSeco *****************
  3700 ;; Defined at:
  3701 ;;		line 148 in file "main.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;  s               2   11[COMRAM] struct .
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;		None
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  2   11[COMRAM] int 
  3708 ;; Registers used:
  3709 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3715 ;;      Params:         2       0       0       0       0       0       0       0       0
  3716 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3717 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3718 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3719 ;;Total ram usage:        3 bytes
  3720 ;; Hardware stack levels used:    1
  3721 ;; Hardware stack levels required when called:    4
  3722 ;; This function calls:
  3723 ;;		_dameTemperaturaHumedad
  3724 ;; This function is called by:
  3725 ;;		_encenderBombas
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	text4
  3730  0030A6                     __ptext4:
  3731                           	opt callstack 0
  3732  0030A6                     _estaSeco:
  3733                           	opt callstack 24
  3734  0030A6                     
  3735                           ;main.c: 150:     dameTemperaturaHumedad();
  3736  0030A6  ECD9  F013         	call	_dameTemperaturaHumedad	;wreg free
  3737  0030AA                     
  3738                           ;main.c: 153:     return (s.porcientoHumedad < 94) && (Temperatura < 34);
  3739  0030AA  0E00               	movlw	0
  3740  0030AC  6E0E               	movwf	_estaSeco$799^0,c
  3741  0030AE  0E5E               	movlw	94
  3742  0030B0  600C               	cpfslt	estaSeco@s^0,c
  3743  0030B2  EF5D  F018         	goto	u3221
  3744  0030B6  EF5F  F018         	goto	u3220
  3745  0030BA                     u3221:
  3746  0030BA  EF6A  F018         	goto	l4177
  3747  0030BE                     u3220:
  3748  0030BE  0E22               	movlw	34
  3749  0030C0  0100               	movlb	0	; () banked
  3750  0030C2  617F               	cpfslt	_Temperatura& (0+255),b
  3751  0030C4  EF66  F018         	goto	u3231
  3752  0030C8  EF68  F018         	goto	u3230
  3753  0030CC                     u3231:
  3754  0030CC  EF6A  F018         	goto	l4177
  3755  0030D0                     u3230:
  3756  0030D0                     
  3757                           ; BSR set to: 0
  3758  0030D0  0E01               	movlw	1
  3759  0030D2  6E0E               	movwf	_estaSeco$799^0,c
  3760  0030D4                     l4177:
  3761  0030D4  C00E  F00C         	movff	_estaSeco$799,?_estaSeco
  3762  0030D8  6A0D               	clrf	(?_estaSeco+1)^0,c
  3763  0030DA  0012               	return		;funcret
  3764  0030DC                     __end_of_estaSeco:
  3765                           	opt callstack 0
  3766                           
  3767 ;; *************** function _dameHoraActual *****************
  3768 ;; Defined at:
  3769 ;;		line 181 in file "main.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;		None
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;		None
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  1    wreg      void 
  3776 ;; Registers used:
  3777 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3783 ;;      Params:         0       0       0       0       0       0       0       0       0
  3784 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3785 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3786 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3787 ;;Total ram usage:        0 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:    4
  3790 ;; This function calls:
  3791 ;;		_convertirDato
  3792 ;;		_leer_rtc
  3793 ;; This function is called by:
  3794 ;;		_sistemaRegado
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           	psect	text5
  3799  003172                     __ptext5:
  3800                           	opt callstack 0
  3801  003172                     _dameHoraActual:
  3802                           	opt callstack 25
  3803  003172                     
  3804                           ;main.c: 183:     segundos = convertirDato(leer_rtc(0x00));
  3805  003172  0E00               	movlw	0
  3806  003174  ECCF  F018         	call	_leer_rtc
  3807  003178  EC0A  F019         	call	_convertirDato
  3808  00317C  0100               	movlb	0	; () banked
  3809  00317E  6F85               	movwf	_segundos& (0+255),b
  3810                           
  3811                           ;main.c: 184:     minutos = convertirDato(leer_rtc(0x01));
  3812  003180  0E01               	movlw	1
  3813  003182  ECCF  F018         	call	_leer_rtc
  3814  003186  EC0A  F019         	call	_convertirDato
  3815  00318A  0100               	movlb	0	; () banked
  3816  00318C  6F86               	movwf	_minutos& (0+255),b
  3817                           
  3818                           ;main.c: 185:     hora = convertirDato(leer_rtc(0x02));
  3819  00318E  0E02               	movlw	2
  3820  003190  ECCF  F018         	call	_leer_rtc
  3821  003194  EC0A  F019         	call	_convertirDato
  3822  003198  0100               	movlb	0	; () banked
  3823  00319A  6F87               	movwf	_hora& (0+255),b
  3824  00319C                     
  3825                           ; BSR set to: 0
  3826  00319C  0012               	return		;funcret
  3827  00319E                     __end_of_dameHoraActual:
  3828                           	opt callstack 0
  3829                           
  3830 ;; *************** function _dameDiaActual *****************
  3831 ;; Defined at:
  3832 ;;		line 188 in file "main.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;		None
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;		None
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1    wreg      void 
  3839 ;; Registers used:
  3840 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3846 ;;      Params:         0       0       0       0       0       0       0       0       0
  3847 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3848 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3849 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3850 ;;Total ram usage:        0 bytes
  3851 ;; Hardware stack levels used:    1
  3852 ;; Hardware stack levels required when called:    4
  3853 ;; This function calls:
  3854 ;;		_convertirDato
  3855 ;;		_leer_rtc
  3856 ;; This function is called by:
  3857 ;;		_sistemaRegado
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861                           	psect	text6
  3862  0032B8                     __ptext6:
  3863                           	opt callstack 0
  3864  0032B8                     _dameDiaActual:
  3865                           	opt callstack 25
  3866  0032B8                     
  3867                           ;main.c: 190:     diaActual = convertirDato(leer_rtc(0x03));
  3868  0032B8  0E03               	movlw	3
  3869  0032BA  ECCF  F018         	call	_leer_rtc
  3870  0032BE  EC0A  F019         	call	_convertirDato
  3871  0032C2  0100               	movlb	0	; () banked
  3872  0032C4  6F84               	movwf	_diaActual& (0+255),b
  3873  0032C6                     
  3874                           ; BSR set to: 0
  3875  0032C6  0012               	return		;funcret
  3876  0032C8                     __end_of_dameDiaActual:
  3877                           	opt callstack 0
  3878                           
  3879 ;; *************** function _leer_rtc *****************
  3880 ;; Defined at:
  3881 ;;		line 13 in file "./RTC.h"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;  direccion       1    wreg     unsigned char 
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;  direccion       1    2[COMRAM] unsigned char 
  3886 ;;  dato            1    3[COMRAM] unsigned char 
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  1    wreg      unsigned char 
  3889 ;; Registers used:
  3890 ;;		wreg, status,2, status,0, cstack
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3896 ;;      Params:         0       0       0       0       0       0       0       0       0
  3897 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3898 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3899 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3900 ;;Total ram usage:        2 bytes
  3901 ;; Hardware stack levels used:    1
  3902 ;; Hardware stack levels required when called:    3
  3903 ;; This function calls:
  3904 ;;		_i2c_detener
  3905 ;;		_i2c_envia_dato
  3906 ;;		_i2c_inicia_com
  3907 ;;		_i2c_recibe_dato
  3908 ;;		_i2c_reinicia_com
  3909 ;; This function is called by:
  3910 ;;		_dameHoraActual
  3911 ;;		_dameDiaActual
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           	psect	text7
  3916  00319E                     __ptext7:
  3917                           	opt callstack 0
  3918  00319E                     _leer_rtc:
  3919                           	opt callstack 25
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;incstack = 0
  3923                           ;leer_rtc@direccion stored from wreg
  3924  00319E  6E03               	movwf	leer_rtc@direccion^0,c
  3925  0031A0                     
  3926                           ;./RTC.h: 14:     unsigned char dato;;./RTC.h: 15:     i2c_inicia_com();
  3927  0031A0  EC7E  F019         	call	_i2c_inicia_com	;wreg free
  3928                           
  3929                           ;./RTC.h: 16:     i2c_envia_dato(0xD0);
  3930  0031A4  0ED0               	movlw	208
  3931  0031A6  EC64  F019         	call	_i2c_envia_dato
  3932                           
  3933                           ;./RTC.h: 17:     i2c_envia_dato(direccion);
  3934  0031AA  5003               	movf	leer_rtc@direccion^0,w,c
  3935  0031AC  EC64  F019         	call	_i2c_envia_dato
  3936                           
  3937                           ;./RTC.h: 18:     i2c_reinicia_com();
  3938  0031B0  EC7A  F019         	call	_i2c_reinicia_com	;wreg free
  3939                           
  3940                           ;./RTC.h: 19:     i2c_envia_dato(0xD1);
  3941  0031B4  0ED1               	movlw	209
  3942  0031B6  EC64  F019         	call	_i2c_envia_dato
  3943                           
  3944                           ;./RTC.h: 20:     dato = i2c_recibe_dato();
  3945  0031BA  EC39  F019         	call	_i2c_recibe_dato	;wreg free
  3946  0031BE  6E04               	movwf	leer_rtc@dato^0,c
  3947                           
  3948                           ;./RTC.h: 21:     i2c_detener();
  3949  0031C0  EC82  F019         	call	_i2c_detener	;wreg free
  3950  0031C4                     
  3951                           ;./RTC.h: 22:     return dato;
  3952  0031C4  5004               	movf	leer_rtc@dato^0,w,c
  3953  0031C6  0012               	return		;funcret
  3954  0031C8                     __end_of_leer_rtc:
  3955                           	opt callstack 0
  3956                           
  3957 ;; *************** function _convertirDato *****************
  3958 ;; Defined at:
  3959 ;;		line 28 in file "./RTC.h"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;  dato            1    wreg     unsigned char 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  dato            1    1[COMRAM] unsigned char 
  3964 ;;  datoR           1    2[COMRAM] unsigned char 
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  1    wreg      unsigned char 
  3967 ;; Registers used:
  3968 ;;		wreg, status,2, status,0, prodl, prodh
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3974 ;;      Params:         0       0       0       0       0       0       0       0       0
  3975 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3976 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3977 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3978 ;;Total ram usage:        3 bytes
  3979 ;; Hardware stack levels used:    1
  3980 ;; Hardware stack levels required when called:    1
  3981 ;; This function calls:
  3982 ;;		Nothing
  3983 ;; This function is called by:
  3984 ;;		_dameHoraActual
  3985 ;;		_dameDiaActual
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           	psect	text8
  3990  003214                     __ptext8:
  3991                           	opt callstack 0
  3992  003214                     _convertirDato:
  3993                           	opt callstack 27
  3994                           
  3995                           ;incstack = 0
  3996                           ;convertirDato@dato stored from wreg
  3997  003214  6E02               	movwf	convertirDato@dato^0,c
  3998  003216                     
  3999                           ;./RTC.h: 30:     datoR = (dato & 0xF0) >> 4;
  4000  003216  3802               	swapf	convertirDato@dato^0,w,c
  4001  003218  0B0F               	andlw	15
  4002  00321A  0B0F               	andlw	15
  4003  00321C  6E03               	movwf	convertirDato@datoR^0,c
  4004  00321E                     
  4005                           ;./RTC.h: 31:     datoR = (datoR * 10) + (dato & 0x0F);
  4006  00321E  C002  F001         	movff	convertirDato@dato,??_convertirDato
  4007  003222  0E0F               	movlw	15
  4008  003224  1601               	andwf	??_convertirDato^0,f,c
  4009  003226  5003               	movf	convertirDato@datoR^0,w,c
  4010  003228  0D0A               	mullw	10
  4011  00322A  50F3               	movf	243,w,c
  4012  00322C  2401               	addwf	??_convertirDato^0,w,c
  4013  00322E  6E03               	movwf	convertirDato@datoR^0,c
  4014  003230                     
  4015                           ;./RTC.h: 32:     return datoR;
  4016  003230  5003               	movf	convertirDato@datoR^0,w,c
  4017  003232  0012               	return		;funcret
  4018  003234                     __end_of_convertirDato:
  4019                           	opt callstack 0
  4020                           
  4021 ;; *************** function _sistemaPrincipal *****************
  4022 ;; Defined at:
  4023 ;;		line 571 in file "main.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;  opcion          1    wreg     unsigned char 
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;  opcion          1   70[BANK0 ] unsigned char 
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  1    wreg      void 
  4030 ;; Registers used:
  4031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4037 ;;      Params:         0       0       0       0       0       0       0       0       0
  4038 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4039 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4040 ;;      Totals:         0       3       0       0       0       0       0       0       0
  4041 ;;Total ram usage:        3 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; Hardware stack levels required when called:   11
  4044 ;; This function calls:
  4045 ;;		_UART_printf
  4046 ;;		_asignarHorarios
  4047 ;;		_dameDatosSistema
  4048 ;;		_fijaDiaRtc
  4049 ;;		_fijaHoraRtc
  4050 ;;		_mostrarDatosSensores
  4051 ;;		_mostrarDatosSensoresWIFI
  4052 ;;		_mostrarMenu
  4053 ;;		_regadoRapido
  4054 ;;		_setTiempoRegar
  4055 ;; This function is called by:
  4056 ;;		_main
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           	psect	text9
  4061  0022D0                     __ptext9:
  4062                           	opt callstack 0
  4063  0022D0                     _sistemaPrincipal:
  4064                           	opt callstack 19
  4065                           
  4066                           ;incstack = 0
  4067                           ;sistemaPrincipal@opcion stored from wreg
  4068  0022D0  0100               	movlb	0	; () banked
  4069  0022D2  6FF3               	movwf	sistemaPrincipal@opcion& (0+255),b
  4070  0022D4                     
  4071                           ;main.c: 573:     PIE1bits.RCIE = 0;
  4072  0022D4  9A9D               	bcf	157,5,c	;volatile
  4073                           
  4074                           ;main.c: 575:     switch (opcion) {
  4075  0022D6  EF9D  F011         	goto	l4765
  4076  0022DA                     l4743:
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;main.c: 578:             fijaHoraRtc();
  4080  0022DA  EC84  F015         	call	_fijaHoraRtc	;wreg free
  4081                           
  4082                           ;main.c: 579:             break;
  4083  0022DE  EFC7  F011         	goto	l4767
  4084  0022E2                     l4745:
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;main.c: 582:             asignarHorarios();
  4088  0022E2  ECFA  F007         	call	_asignarHorarios	;wreg free
  4089                           
  4090                           ;main.c: 583:             break;
  4091  0022E6  EFC7  F011         	goto	l4767
  4092  0022EA                     l4747:
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;main.c: 586:             setTiempoRegar();
  4096  0022EA  EC3D  F013         	call	_setTiempoRegar	;wreg free
  4097                           
  4098                           ;main.c: 587:             break;
  4099  0022EE  EFC7  F011         	goto	l4767
  4100  0022F2                     l4749:
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;main.c: 590:             dameDatosSistema();
  4104  0022F2  ECCA  F002         	call	_dameDatosSistema	;wreg free
  4105                           
  4106                           ;main.c: 591:             break;
  4107  0022F6  EFC7  F011         	goto	l4767
  4108  0022FA                     l4751:
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;main.c: 594:             if (MODO_COMUNICACION)
  4112  0022FA  5188               	movf	_MODO_COMUNICACION& (0+255),w,b
  4113  0022FC  B4D8               	btfsc	status,2,c
  4114  0022FE  EF83  F011         	goto	u3671
  4115  002302  EF85  F011         	goto	u3670
  4116  002306                     u3671:
  4117  002306  EF89  F011         	goto	l4755
  4118  00230A                     u3670:
  4119  00230A                     
  4120                           ; BSR set to: 0
  4121                           ;main.c: 595:                 mostrarDatosSensoresWIFI();
  4122  00230A  EC1B  F010         	call	_mostrarDatosSensoresWIFI	;wreg free
  4123  00230E  EFC7  F011         	goto	l4767
  4124  002312                     l4755:
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;main.c: 597:                 mostrarDatosSensores();
  4128  002312  EC93  F010         	call	_mostrarDatosSensores	;wreg free
  4129  002316  EFC7  F011         	goto	l4767
  4130  00231A                     l4757:
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;main.c: 602:             regadoRapido();
  4134  00231A  EC81  F00E         	call	_regadoRapido	;wreg free
  4135                           
  4136                           ;main.c: 603:             break;
  4137  00231E  EFC7  F011         	goto	l4767
  4138  002322                     l4759:
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;main.c: 606:             fijaDiaRtc();
  4142  002322  EC89  F018         	call	_fijaDiaRtc	;wreg free
  4143                           
  4144                           ;main.c: 607:             break;
  4145  002326  EFC7  F011         	goto	l4767
  4146  00232A                     l4761:
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;main.c: 610:             UART_printf("\r\n Solo se permiten numeros del 1 al 7 \r\n");
  4150  00232A  0EA2               	movlw	low STR_32
  4151  00232C  6E02               	movwf	UART_printf@cadena^0,c
  4152  00232E  0E7B               	movlw	high STR_32
  4153  002330  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4154  002332  EC1A  F016         	call	_UART_printf	;wreg free
  4155                           
  4156                           ;main.c: 611:             break;
  4157  002336  EFC7  F011         	goto	l4767
  4158  00233A                     l4765:
  4159  00233A  0100               	movlb	0	; () banked
  4160  00233C  51F3               	movf	sistemaPrincipal@opcion& (0+255),w,b
  4161  00233E  6FF1               	movwf	??_sistemaPrincipal& (0+255),b
  4162  002340  6BF2               	clrf	(??_sistemaPrincipal+1)& (0+255),b
  4163                           
  4164                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4165                           ; Switch size 1, requested type "simple"
  4166                           ; Number of cases is 1, Range of values is 0 to 0
  4167                           ; switch strategies available:
  4168                           ; Name         Instructions Cycles
  4169                           ; simple_byte            4     3 (average)
  4170                           ;	Chosen strategy is simple_byte
  4171  002342  51F2               	movf	(??_sistemaPrincipal+1)& (0+255),w,b
  4172  002344  0A00               	xorlw	0	; case 0
  4173  002346  B4D8               	btfsc	status,2,c
  4174  002348  EFA8  F011         	goto	l5127
  4175  00234C  EF95  F011         	goto	l4761
  4176  002350                     l5127:
  4177                           
  4178                           ; BSR set to: 0
  4179                           ; Switch size 1, requested type "simple"
  4180                           ; Number of cases is 7, Range of values is 1 to 7
  4181                           ; switch strategies available:
  4182                           ; Name         Instructions Cycles
  4183                           ; simple_byte           22    12 (average)
  4184                           ;	Chosen strategy is simple_byte
  4185  002350  51F1               	movf	??_sistemaPrincipal& (0+255),w,b
  4186  002352  0A01               	xorlw	1	; case 1
  4187  002354  B4D8               	btfsc	status,2,c
  4188  002356  EF6D  F011         	goto	l4743
  4189  00235A  0A03               	xorlw	3	; case 2
  4190  00235C  B4D8               	btfsc	status,2,c
  4191  00235E  EF71  F011         	goto	l4745
  4192  002362  0A01               	xorlw	1	; case 3
  4193  002364  B4D8               	btfsc	status,2,c
  4194  002366  EF75  F011         	goto	l4747
  4195  00236A  0A07               	xorlw	7	; case 4
  4196  00236C  B4D8               	btfsc	status,2,c
  4197  00236E  EF79  F011         	goto	l4749
  4198  002372  0A01               	xorlw	1	; case 5
  4199  002374  B4D8               	btfsc	status,2,c
  4200  002376  EF7D  F011         	goto	l4751
  4201  00237A  0A03               	xorlw	3	; case 6
  4202  00237C  B4D8               	btfsc	status,2,c
  4203  00237E  EF8D  F011         	goto	l4757
  4204  002382  0A01               	xorlw	1	; case 7
  4205  002384  B4D8               	btfsc	status,2,c
  4206  002386  EF91  F011         	goto	l4759
  4207  00238A  EF95  F011         	goto	l4761
  4208  00238E                     l4767:
  4209                           
  4210                           ;main.c: 614:     mostrarMenu();
  4211  00238E  EC65  F014         	call	_mostrarMenu	;wreg free
  4212  002392                     
  4213                           ;main.c: 615:     PIE1bits.RCIE = 1;
  4214  002392  8A9D               	bsf	157,5,c	;volatile
  4215  002394  0012               	return		;funcret
  4216  002396                     __end_of_sistemaPrincipal:
  4217                           	opt callstack 0
  4218                           
  4219 ;; *************** function _setTiempoRegar *****************
  4220 ;; Defined at:
  4221 ;;		line 451 in file "main.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;		None
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;  hora            1   19[COMRAM] unsigned char 
  4226 ;;  tiempoRegar     1   18[COMRAM] unsigned char 
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  1    wreg      void 
  4229 ;; Registers used:
  4230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4236 ;;      Params:         0       0       0       0       0       0       0       0       0
  4237 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4238 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4239 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4240 ;;Total ram usage:        2 bytes
  4241 ;; Hardware stack levels used:    1
  4242 ;; Hardware stack levels required when called:    5
  4243 ;; This function calls:
  4244 ;;		_UART_printf
  4245 ;;		_escribeHorariosMemoria
  4246 ;;		_getValue
  4247 ;; This function is called by:
  4248 ;;		_sistemaPrincipal
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           	psect	text10
  4253  00267A                     __ptext10:
  4254                           	opt callstack 0
  4255  00267A                     _setTiempoRegar:
  4256                           	opt callstack 24
  4257  00267A                     
  4258                           ;main.c: 453:     unsigned char hora;;main.c: 454:     unsigned char tiempoRegar;;main.c
      +                          : 456:     UART_printf("\r\n TIEMPO DE REGADO \r\n");
  4259  00267A  0E3B               	movlw	low STR_15
  4260  00267C  6E02               	movwf	UART_printf@cadena^0,c
  4261  00267E  0E7F               	movlw	high STR_15
  4262  002680  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4263  002682  EC1A  F016         	call	_UART_printf	;wreg free
  4264                           
  4265                           ;main.c: 458:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  4266  002686  0EB3               	movlw	low STR_8
  4267  002688  6E02               	movwf	UART_printf@cadena^0,c
  4268  00268A  0E7A               	movlw	high STR_8
  4269  00268C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4270  00268E  EC1A  F016         	call	_UART_printf	;wreg free
  4271  002692                     
  4272                           ;main.c: 459:     hora = getValue(2);
  4273  002692  0E00               	movlw	0
  4274  002694  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4275  002696  0E02               	movlw	2
  4276  002698  6E04               	movwf	getValue@numCharacters^0,c
  4277  00269A  ECE8  F006         	call	_getValue	;wreg free
  4278  00269E  6E14               	movwf	setTiempoRegar@hora^0,c
  4279  0026A0                     
  4280                           ;main.c: 461:     if (hora != '@') {
  4281  0026A0  0E40               	movlw	64
  4282  0026A2  1814               	xorwf	setTiempoRegar@hora^0,w,c
  4283  0026A4  B4D8               	btfsc	status,2,c
  4284  0026A6  EF57  F013         	goto	u3521
  4285  0026AA  EF59  F013         	goto	u3520
  4286  0026AE                     u3521:
  4287  0026AE  EF8C  F013         	goto	l330
  4288  0026B2                     u3520:
  4289  0026B2                     
  4290                           ;main.c: 463:         UART_printf("\r\n Ingrese los minutos que desee que se riegue en e
      +                          se horario ej: 15 \r\n");
  4291  0026B2  0E43               	movlw	low STR_17
  4292  0026B4  6E02               	movwf	UART_printf@cadena^0,c
  4293  0026B6  0E79               	movlw	high STR_17
  4294  0026B8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4295  0026BA  EC1A  F016         	call	_UART_printf	;wreg free
  4296  0026BE                     
  4297                           ;main.c: 464:         tiempoRegar = getValue(2);
  4298  0026BE  0E00               	movlw	0
  4299  0026C0  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4300  0026C2  0E02               	movlw	2
  4301  0026C4  6E04               	movwf	getValue@numCharacters^0,c
  4302  0026C6  ECE8  F006         	call	_getValue	;wreg free
  4303  0026CA  6E13               	movwf	setTiempoRegar@tiempoRegar^0,c
  4304  0026CC                     
  4305                           ;main.c: 466:         if (tiempoRegar != '@') {
  4306  0026CC  0E40               	movlw	64
  4307  0026CE  1813               	xorwf	setTiempoRegar@tiempoRegar^0,w,c
  4308  0026D0  B4D8               	btfsc	status,2,c
  4309  0026D2  EF6D  F013         	goto	u3531
  4310  0026D6  EF6F  F013         	goto	u3530
  4311  0026DA                     u3531:
  4312  0026DA  EF8C  F013         	goto	l330
  4313  0026DE                     u3530:
  4314  0026DE                     
  4315                           ;main.c: 470:             UART_printf("\r\n Minutos de riego establecidos! \r\n");
  4316  0026DE  0E18               	movlw	low STR_18
  4317  0026E0  6E02               	movwf	UART_printf@cadena^0,c
  4318  0026E2  0E7C               	movlw	high STR_18
  4319  0026E4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4320  0026E6  EC1A  F016         	call	_UART_printf	;wreg free
  4321  0026EA                     
  4322                           ;main.c: 472:             horarios[hora].tiempoRegar = tiempoRegar;
  4323  0026EA  5014               	movf	setTiempoRegar@hora^0,w,c
  4324  0026EC  0D0C               	mullw	12
  4325  0026EE  0E3D               	movlw	low (_horarios+11)
  4326  0026F0  24F3               	addwf	243,w,c
  4327  0026F2  6ED9               	movwf	fsr2l,c
  4328  0026F4  0E01               	movlw	high (_horarios+11)
  4329  0026F6  20F4               	addwfc	prodh,w,c
  4330  0026F8  6EDA               	movwf	fsr2h,c
  4331  0026FA  C013  FFDF         	movff	setTiempoRegar@tiempoRegar,indf2
  4332  0026FE                     
  4333                           ;main.c: 473:             minutosRegar = horarios[hora].tiempoRegar;
  4334  0026FE  5014               	movf	setTiempoRegar@hora^0,w,c
  4335  002700  0D0C               	mullw	12
  4336  002702  0E3D               	movlw	low (_horarios+11)
  4337  002704  24F3               	addwf	243,w,c
  4338  002706  6ED9               	movwf	fsr2l,c
  4339  002708  0E01               	movlw	high (_horarios+11)
  4340  00270A  20F4               	addwfc	prodh,w,c
  4341  00270C  6EDA               	movwf	fsr2h,c
  4342  00270E  50DF               	movf	indf2,w,c
  4343  002710  0100               	movlb	0	; () banked
  4344  002712  6F7D               	movwf	_minutosRegar& (0+255),b
  4345  002714                     
  4346                           ; BSR set to: 0
  4347                           ;main.c: 475:             escribeHorariosMemoria();
  4348  002714  EC43  F00D         	call	_escribeHorariosMemoria	;wreg free
  4349  002718                     l330:
  4350  002718  0012               	return		;funcret
  4351  00271A                     __end_of_setTiempoRegar:
  4352                           	opt callstack 0
  4353                           
  4354 ;; *************** function _regadoRapido *****************
  4355 ;; Defined at:
  4356 ;;		line 952 in file "main.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;		None
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  areaRegar       1   17[COMRAM] unsigned char 
  4361 ;;  tiempoRegar     1   16[COMRAM] unsigned char 
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  1    wreg      void 
  4364 ;; Registers used:
  4365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4371 ;;      Params:         0       0       0       0       0       0       0       0       0
  4372 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4373 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4374 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4375 ;;Total ram usage:        4 bytes
  4376 ;; Hardware stack levels used:    1
  4377 ;; Hardware stack levels required when called:    4
  4378 ;; This function calls:
  4379 ;;		_UART_printf
  4380 ;;		_getValue
  4381 ;; This function is called by:
  4382 ;;		_sistemaPrincipal
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           	psect	text11
  4387  001D02                     __ptext11:
  4388                           	opt callstack 0
  4389  001D02                     _regadoRapido:
  4390                           	opt callstack 25
  4391  001D02                     
  4392                           ;main.c: 954:     unsigned char tiempoRegar;;main.c: 955:     unsigned char areaRegar;;m
      +                          ain.c: 957:     UART_printf("\r\n REGADO RAPIDO \r\n");
  4393  001D02  0E80               	movlw	low STR_57
  4394  001D04  6E02               	movwf	UART_printf@cadena^0,c
  4395  001D06  0E7F               	movlw	high STR_57
  4396  001D08  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4397  001D0A  EC1A  F016         	call	_UART_printf	;wreg free
  4398  001D0E                     
  4399                           ;main.c: 959:     if (!regando) {
  4400  001D0E  0100               	movlb	0	; () banked
  4401  001D10  517B               	movf	_regando& (0+255),w,b
  4402  001D12  A4D8               	btfss	status,2,c
  4403  001D14  EF8E  F00E         	goto	u3591
  4404  001D18  EF90  F00E         	goto	u3590
  4405  001D1C                     u3591:
  4406  001D1C  EF15  F00F         	goto	l4637
  4407  001D20                     u3590:
  4408  001D20                     
  4409                           ; BSR set to: 0
  4410                           ;main.c: 960:         UART_printf("\r\n Ingrese los minutos que desee que se riegue ej: 
      +                          15 \r\n");
  4411  001D20  0E7A               	movlw	low STR_58
  4412  001D22  6E02               	movwf	UART_printf@cadena^0,c
  4413  001D24  0E7A               	movlw	high STR_58
  4414  001D26  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4415  001D28  EC1A  F016         	call	_UART_printf	;wreg free
  4416  001D2C                     
  4417                           ;main.c: 961:         tiempoRegar = getValue(2);
  4418  001D2C  0E00               	movlw	0
  4419  001D2E  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4420  001D30  0E02               	movlw	2
  4421  001D32  6E04               	movwf	getValue@numCharacters^0,c
  4422  001D34  ECE8  F006         	call	_getValue	;wreg free
  4423  001D38  6E11               	movwf	regadoRapido@tiempoRegar^0,c
  4424  001D3A                     
  4425                           ;main.c: 963:         if (tiempoRegar != '@') {
  4426  001D3A  0E40               	movlw	64
  4427  001D3C  1811               	xorwf	regadoRapido@tiempoRegar^0,w,c
  4428  001D3E  B4D8               	btfsc	status,2,c
  4429  001D40  EFA4  F00E         	goto	u3601
  4430  001D44  EFA6  F00E         	goto	u3600
  4431  001D48                     u3601:
  4432  001D48  EF1B  F00F         	goto	l478
  4433  001D4C                     u3600:
  4434  001D4C                     
  4435                           ;main.c: 965:             UART_printf("\r\n Ingrese el numero de sensor del area a regar
      +                           ej: 5 \r\n");
  4436  001D4C  0E41               	movlw	low STR_59
  4437  001D4E  6E02               	movwf	UART_printf@cadena^0,c
  4438  001D50  0E7A               	movlw	high STR_59
  4439  001D52  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4440  001D54  EC1A  F016         	call	_UART_printf	;wreg free
  4441  001D58                     
  4442                           ;main.c: 966:             areaRegar = getValue(1);
  4443  001D58  0E00               	movlw	0
  4444  001D5A  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4445  001D5C  0E01               	movlw	1
  4446  001D5E  6E04               	movwf	getValue@numCharacters^0,c
  4447  001D60  ECE8  F006         	call	_getValue	;wreg free
  4448  001D64  6E12               	movwf	regadoRapido@areaRegar^0,c
  4449  001D66                     
  4450                           ;main.c: 968:             if (areaRegar != '@') {
  4451  001D66  0E40               	movlw	64
  4452  001D68  1812               	xorwf	regadoRapido@areaRegar^0,w,c
  4453  001D6A  B4D8               	btfsc	status,2,c
  4454  001D6C  EFBA  F00E         	goto	u3611
  4455  001D70  EFBC  F00E         	goto	u3610
  4456  001D74                     u3611:
  4457  001D74  EF1B  F00F         	goto	l478
  4458  001D78                     u3610:
  4459  001D78                     
  4460                           ;main.c: 970:                 areaRegar--;
  4461  001D78  0612               	decf	regadoRapido@areaRegar^0,f,c
  4462                           
  4463                           ;main.c: 972:                 switch (areaRegar) {
  4464  001D7A  EFD7  F00E         	goto	l4629
  4465  001D7E                     l468:
  4466                           
  4467                           ;main.c: 975:                         LATDbits.LATD0 = 1;
  4468  001D7E  808C               	bsf	140,0,c	;volatile
  4469                           
  4470                           ;main.c: 976:                         break;
  4471  001D80  EF04  F00F         	goto	l4631
  4472  001D84                     l470:
  4473                           
  4474                           ;main.c: 979:                         LATDbits.LATD1 = 1;
  4475  001D84  828C               	bsf	140,1,c	;volatile
  4476                           
  4477                           ;main.c: 980:                         break;
  4478  001D86  EF04  F00F         	goto	l4631
  4479  001D8A                     l471:
  4480                           
  4481                           ;main.c: 983:                         LATDbits.LATD2 = 1;
  4482  001D8A  848C               	bsf	140,2,c	;volatile
  4483                           
  4484                           ;main.c: 984:                         break;
  4485  001D8C  EF04  F00F         	goto	l4631
  4486  001D90                     l472:
  4487                           
  4488                           ;main.c: 987:                         LATDbits.LATD3 = 1;
  4489  001D90  868C               	bsf	140,3,c	;volatile
  4490                           
  4491                           ;main.c: 988:                         break;
  4492  001D92  EF04  F00F         	goto	l4631
  4493  001D96                     l473:
  4494                           
  4495                           ;main.c: 991:                         LATDbits.LATD4 = 1;
  4496  001D96  888C               	bsf	140,4,c	;volatile
  4497                           
  4498                           ;main.c: 992:                         break;
  4499  001D98  EF04  F00F         	goto	l4631
  4500  001D9C                     l474:
  4501                           
  4502                           ;main.c: 995:                         LATDbits.LATD5 = 1;
  4503  001D9C  8A8C               	bsf	140,5,c	;volatile
  4504                           
  4505                           ;main.c: 996:                         break;
  4506  001D9E  EF04  F00F         	goto	l4631
  4507  001DA2                     l475:
  4508                           
  4509                           ;main.c: 999:                         LATDbits.LATD6 = 1;
  4510  001DA2  8C8C               	bsf	140,6,c	;volatile
  4511                           
  4512                           ;main.c: 1000:                         break;
  4513  001DA4  EF04  F00F         	goto	l4631
  4514  001DA8                     l476:
  4515                           
  4516                           ;main.c: 1003:                         LATDbits.LATD7 = 1;
  4517  001DA8  8E8C               	bsf	140,7,c	;volatile
  4518                           
  4519                           ;main.c: 1004:                         break;
  4520  001DAA  EF04  F00F         	goto	l4631
  4521  001DAE                     l4629:
  4522  001DAE  5012               	movf	regadoRapido@areaRegar^0,w,c
  4523  001DB0  6E0F               	movwf	??_regadoRapido^0,c
  4524  001DB2  6A10               	clrf	(??_regadoRapido+1)^0,c
  4525                           
  4526                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4527                           ; Switch size 1, requested type "simple"
  4528                           ; Number of cases is 1, Range of values is 0 to 0
  4529                           ; switch strategies available:
  4530                           ; Name         Instructions Cycles
  4531                           ; simple_byte            4     3 (average)
  4532                           ;	Chosen strategy is simple_byte
  4533  001DB4  5010               	movf	(??_regadoRapido+1)^0,w,c
  4534  001DB6  0A00               	xorlw	0	; case 0
  4535  001DB8  B4D8               	btfsc	status,2,c
  4536  001DBA  EFE1  F00E         	goto	l5129
  4537  001DBE  EF04  F00F         	goto	l4631
  4538  001DC2                     l5129:
  4539                           
  4540                           ; Switch size 1, requested type "simple"
  4541                           ; Number of cases is 8, Range of values is 0 to 7
  4542                           ; switch strategies available:
  4543                           ; Name         Instructions Cycles
  4544                           ; simple_byte           25    13 (average)
  4545                           ;	Chosen strategy is simple_byte
  4546  001DC2  500F               	movf	??_regadoRapido^0,w,c
  4547  001DC4  0A00               	xorlw	0	; case 0
  4548  001DC6  B4D8               	btfsc	status,2,c
  4549  001DC8  EFBF  F00E         	goto	l468
  4550  001DCC  0A01               	xorlw	1	; case 1
  4551  001DCE  B4D8               	btfsc	status,2,c
  4552  001DD0  EFC2  F00E         	goto	l470
  4553  001DD4  0A03               	xorlw	3	; case 2
  4554  001DD6  B4D8               	btfsc	status,2,c
  4555  001DD8  EFC5  F00E         	goto	l471
  4556  001DDC  0A01               	xorlw	1	; case 3
  4557  001DDE  B4D8               	btfsc	status,2,c
  4558  001DE0  EFC8  F00E         	goto	l472
  4559  001DE4  0A07               	xorlw	7	; case 4
  4560  001DE6  B4D8               	btfsc	status,2,c
  4561  001DE8  EFCB  F00E         	goto	l473
  4562  001DEC  0A01               	xorlw	1	; case 5
  4563  001DEE  B4D8               	btfsc	status,2,c
  4564  001DF0  EFCE  F00E         	goto	l474
  4565  001DF4  0A03               	xorlw	3	; case 6
  4566  001DF6  B4D8               	btfsc	status,2,c
  4567  001DF8  EFD1  F00E         	goto	l475
  4568  001DFC  0A01               	xorlw	1	; case 7
  4569  001DFE  B4D8               	btfsc	status,2,c
  4570  001E00  EFD4  F00E         	goto	l476
  4571  001E04  EF04  F00F         	goto	l4631
  4572  001E08                     l4631:
  4573                           
  4574                           ;main.c: 1008:                 regando = 1;
  4575  001E08  0E01               	movlw	1
  4576  001E0A  0100               	movlb	0	; () banked
  4577  001E0C  6F7B               	movwf	_regando& (0+255),b
  4578  001E0E                     
  4579                           ; BSR set to: 0
  4580                           ;main.c: 1009:                 horarios[hora].regado = 0;
  4581  001E0E  5187               	movf	_hora& (0+255),w,b
  4582  001E10  0D0C               	mullw	12
  4583  001E12  0E3C               	movlw	low (_horarios+10)
  4584  001E14  24F3               	addwf	243,w,c
  4585  001E16  6ED9               	movwf	fsr2l,c
  4586  001E18  0E01               	movlw	high (_horarios+10)
  4587  001E1A  20F4               	addwfc	prodh,w,c
  4588  001E1C  6EDA               	movwf	fsr2h,c
  4589  001E1E  0E00               	movlw	0
  4590  001E20  6EDF               	movwf	indf2,c
  4591  001E22                     
  4592                           ; BSR set to: 0
  4593                           ;main.c: 1010:                 minutosRegar = tiempoRegar;
  4594  001E22  C011  F07D         	movff	regadoRapido@tiempoRegar,_minutosRegar
  4595  001E26  EF1B  F00F         	goto	l478
  4596  001E2A                     l4637:
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;main.c: 1017:         UART_printf("\r\n Ya se esta efectuando un riego, intentelo mas t
      +                          arde \r\n");
  4600  001E2A  0E07               	movlw	low STR_60
  4601  001E2C  6E02               	movwf	UART_printf@cadena^0,c
  4602  001E2E  0E7A               	movlw	high STR_60
  4603  001E30  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4604  001E32  EC1A  F016         	call	_UART_printf	;wreg free
  4605  001E36                     l478:
  4606  001E36  0012               	return		;funcret
  4607  001E38                     __end_of_regadoRapido:
  4608                           	opt callstack 0
  4609                           
  4610 ;; *************** function _mostrarMenu *****************
  4611 ;; Defined at:
  4612 ;;		line 557 in file "main.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;		None
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;		None
  4617 ;; Return value:  Size  Location     Type
  4618 ;;                  1    wreg      void 
  4619 ;; Registers used:
  4620 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4621 ;; Tracked objects:
  4622 ;;		On entry : 0/0
  4623 ;;		On exit  : 0/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4626 ;;      Params:         0       0       0       0       0       0       0       0       0
  4627 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4628 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4629 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4630 ;;Total ram usage:        0 bytes
  4631 ;; Hardware stack levels used:    1
  4632 ;; Hardware stack levels required when called:    3
  4633 ;; This function calls:
  4634 ;;		_UART_printf
  4635 ;; This function is called by:
  4636 ;;		_sistemaPrincipal
  4637 ;;		_sistemaRegado
  4638 ;;		_main
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           	psect	text12
  4643  0028CA                     __ptext12:
  4644                           	opt callstack 0
  4645  0028CA                     _mostrarMenu:
  4646                           	opt callstack 26
  4647  0028CA                     
  4648                           ;main.c: 559:     UART_printf("\r\n Ingresa una opcion a Realizar: \r\n");
  4649  0028CA  0E3D               	movlw	low STR_22
  4650  0028CC  6E02               	movwf	UART_printf@cadena^0,c
  4651  0028CE  0E7C               	movlw	high STR_22
  4652  0028D0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4653  0028D2  EC1A  F016         	call	_UART_printf	;wreg free
  4654                           
  4655                           ;main.c: 560:     UART_printf("\r\n 1. Fijar Hora Actual \r\n");
  4656  0028D6  0EF3               	movlw	low STR_23
  4657  0028D8  6E02               	movwf	UART_printf@cadena^0,c
  4658  0028DA  0E7D               	movlw	high STR_23
  4659  0028DC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4660  0028DE  EC1A  F016         	call	_UART_printf	;wreg free
  4661                           
  4662                           ;main.c: 561:     UART_printf("\r\n 2. Asignar Horarios para regar \r\n");
  4663  0028E2  0EAC               	movlw	low STR_24
  4664  0028E4  6E02               	movwf	UART_printf@cadena^0,c
  4665  0028E6  0E7C               	movlw	high STR_24
  4666  0028E8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4667  0028EA  EC1A  F016         	call	_UART_printf	;wreg free
  4668                           
  4669                           ;main.c: 562:     UART_printf("\r\n 3. Programar tiempo de riego en un horario \r\n");
  4670  0028EE  0E19               	movlw	low STR_25
  4671  0028F0  6E02               	movwf	UART_printf@cadena^0,c
  4672  0028F2  0E7B               	movlw	high STR_25
  4673  0028F4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4674  0028F6  EC1A  F016         	call	_UART_printf	;wreg free
  4675                           
  4676                           ;main.c: 563:     UART_printf("\r\n 4. Dame datos del sistema \r\n");
  4677  0028FA  0E5B               	movlw	low STR_26
  4678  0028FC  6E02               	movwf	UART_printf@cadena^0,c
  4679  0028FE  0E7D               	movlw	high STR_26
  4680  002900  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4681  002902  EC1A  F016         	call	_UART_printf	;wreg free
  4682                           
  4683                           ;main.c: 564:     UART_printf("\r\n 5. Mostrar valores sensores \r\n");
  4684  002906  0E19               	movlw	low STR_27
  4685  002908  6E02               	movwf	UART_printf@cadena^0,c
  4686  00290A  0E7D               	movlw	high STR_27
  4687  00290C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4688  00290E  EC1A  F016         	call	_UART_printf	;wreg free
  4689                           
  4690                           ;main.c: 565:     UART_printf("\r\n 6. Regado rapido \r\n");
  4691  002912  0E52               	movlw	low STR_28
  4692  002914  6E02               	movwf	UART_printf@cadena^0,c
  4693  002916  0E7F               	movlw	high STR_28
  4694  002918  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4695  00291A  EC1A  F016         	call	_UART_printf	;wreg free
  4696                           
  4697                           ;main.c: 566:     UART_printf("\r\n 7. Fijar Dia Actual \r\n");
  4698  00291E  0E43               	movlw	low STR_29
  4699  002920  6E02               	movwf	UART_printf@cadena^0,c
  4700  002922  0E7E               	movlw	high STR_29
  4701  002924  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4702  002926  EC1A  F016         	call	_UART_printf	;wreg free
  4703                           
  4704                           ;main.c: 567:     UART_printf("\r\n Opcion:  \r");
  4705  00292A  0EC7               	movlw	low STR_30
  4706  00292C  6E02               	movwf	UART_printf@cadena^0,c
  4707  00292E  0E7F               	movlw	high STR_30
  4708  002930  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4709  002932  EC1A  F016         	call	_UART_printf	;wreg free
  4710                           
  4711                           ;main.c: 568:     UART_printf("\r\n");
  4712  002936  0E40               	movlw	low (STR_13+23)
  4713  002938  6E02               	movwf	UART_printf@cadena^0,c
  4714  00293A  0E7E               	movlw	high (STR_13+23)
  4715  00293C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4716  00293E  EC1A  F016         	call	_UART_printf	;wreg free
  4717  002942  0012               	return		;funcret
  4718  002944                     __end_of_mostrarMenu:
  4719                           	opt callstack 0
  4720                           
  4721 ;; *************** function _mostrarDatosSensoresWIFI *****************
  4722 ;; Defined at:
  4723 ;;		line 807 in file "main.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;		None
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;  i               2   32[BANK0 ] int 
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  1    wreg      void 
  4730 ;; Registers used:
  4731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4737 ;;      Params:         0       0       0       0       0       0       0       0       0
  4738 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4739 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4740 ;;      Totals:         1       2       0       0       0       0       0       0       0
  4741 ;;Total ram usage:        3 bytes
  4742 ;; Hardware stack levels used:    1
  4743 ;; Hardware stack levels required when called:   10
  4744 ;; This function calls:
  4745 ;;		_UART_printf
  4746 ;;		_UART_write
  4747 ;;		_dameTemperaturaHumedad
  4748 ;;		_lecturaWifi
  4749 ;;		_limpiarBuffer
  4750 ;;		_sprintf
  4751 ;; This function is called by:
  4752 ;;		_sistemaPrincipal
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           	psect	text13
  4757  002036                     __ptext13:
  4758                           	opt callstack 0
  4759  002036                     _mostrarDatosSensoresWIFI:
  4760                           	opt callstack 19
  4761  002036                     
  4762                           ;main.c: 809:     dameTemperaturaHumedad();
  4763  002036  ECD9  F013         	call	_dameTemperaturaHumedad	;wreg free
  4764  00203A                     
  4765                           ;main.c: 811:     UART_write('I');
  4766  00203A  0E49               	movlw	73
  4767  00203C  EC46  F019         	call	_UART_write
  4768  002040                     
  4769                           ;main.c: 814:     limpiarBuffer();
  4770  002040  ECD9  F017         	call	_limpiarBuffer	;wreg free
  4771  002044                     
  4772                           ;main.c: 816:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", Humedad);
  4773  002044  0E00               	movlw	low _buffer
  4774  002046  0100               	movlb	0	; () banked
  4775  002048  6FB3               	movwf	sprintf@s& (0+255),b
  4776  00204A  0E01               	movlw	high _buffer
  4777  00204C  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  4778  00204E  0E7B               	movlw	low STR_47
  4779  002050  6FB5               	movwf	sprintf@fmt& (0+255),b
  4780  002052  0E7D               	movlw	high STR_47
  4781  002054  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  4782  002056  C07E  F0B7         	movff	_Humedad,?_sprintf+4
  4783  00205A  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  4784  00205C  ECFB  F016         	call	_sprintf	;wreg free
  4785  002060                     
  4786                           ;main.c: 817:     UART_printf(buffer);
  4787  002060  0E00               	movlw	low _buffer
  4788  002062  6E02               	movwf	UART_printf@cadena^0,c
  4789  002064  0E01               	movlw	high _buffer
  4790  002066  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4791  002068  EC1A  F016         	call	_UART_printf	;wreg free
  4792  00206C                     
  4793                           ;main.c: 818:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", Temperatura);
  4794  00206C  0E00               	movlw	low _buffer
  4795  00206E  0100               	movlb	0	; () banked
  4796  002070  6FB3               	movwf	sprintf@s& (0+255),b
  4797  002072  0E01               	movlw	high _buffer
  4798  002074  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  4799  002076  0EBA               	movlw	low STR_48
  4800  002078  6FB5               	movwf	sprintf@fmt& (0+255),b
  4801  00207A  0E7D               	movlw	high STR_48
  4802  00207C  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  4803  00207E  C07F  F0B7         	movff	_Temperatura,?_sprintf+4
  4804  002082  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  4805  002084  ECFB  F016         	call	_sprintf	;wreg free
  4806  002088                     
  4807                           ;main.c: 819:     UART_printf(buffer);
  4808  002088  0E00               	movlw	low _buffer
  4809  00208A  6E02               	movwf	UART_printf@cadena^0,c
  4810  00208C  0E01               	movlw	high _buffer
  4811  00208E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4812  002090  EC1A  F016         	call	_UART_printf	;wreg free
  4813  002094                     
  4814                           ;main.c: 821:     lecturaWifi();
  4815  002094  ECA2  F00F         	call	_lecturaWifi	;wreg free
  4816  002098                     
  4817                           ;main.c: 822:     if (peticionLecturaSensores) {
  4818  002098  0100               	movlb	0	; () banked
  4819  00209A  517A               	movf	_peticionLecturaSensores& (0+255),w,b
  4820  00209C  B4D8               	btfsc	status,2,c
  4821  00209E  EF53  F010         	goto	u3561
  4822  0020A2  EF55  F010         	goto	u3560
  4823  0020A6                     u3561:
  4824  0020A6  EF8F  F010         	goto	l4575
  4825  0020AA                     u3560:
  4826  0020AA                     
  4827                           ; BSR set to: 0
  4828                           ;main.c: 824:         for (int i = 0; i < 1; i++) {
  4829  0020AA  0E00               	movlw	0
  4830  0020AC  6FCE               	movwf	(mostrarDatosSensoresWIFI@i+1)& (0+255),b
  4831  0020AE  0E00               	movlw	0
  4832  0020B0  6FCD               	movwf	mostrarDatosSensoresWIFI@i& (0+255),b
  4833  0020B2                     l4567:
  4834                           
  4835                           ; BSR set to: 0
  4836                           ;main.c: 826:             sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d %c
      +                          \r\n"
  4837  0020B2  0E00               	movlw	low _buffer
  4838  0020B4  6FB3               	movwf	sprintf@s& (0+255),b
  4839  0020B6  0E01               	movlw	high _buffer
  4840  0020B8  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  4841  0020BA  0E4A               	movlw	low STR_49
  4842  0020BC  6FB5               	movwf	sprintf@fmt& (0+255),b
  4843  0020BE  0E7B               	movlw	high STR_49
  4844  0020C0  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  4845  0020C2  C0CD  F0B7         	movff	mostrarDatosSensoresWIFI@i,?_sprintf+4
  4846  0020C6  C0CE  F0B8         	movff	mostrarDatosSensoresWIFI@i+1,?_sprintf+5
  4847  0020CA  90D8               	bcf	status,0,c
  4848  0020CC  35CD               	rlcf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  4849  0020CE  6ED9               	movwf	fsr2l,c
  4850  0020D0  35CE               	rlcf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  4851  0020D2  6EDA               	movwf	fsr2h,c
  4852  0020D4  0E60               	movlw	low _sensores
  4853  0020D6  26D9               	addwf	fsr2l,f,c
  4854  0020D8  0E00               	movlw	high _sensores
  4855  0020DA  22DA               	addwfc	fsr2h,f,c
  4856  0020DC  50DF               	movf	indf2,w,c
  4857  0020DE  6E5D               	movwf	??_mostrarDatosSensoresWIFI^0,c
  4858  0020E0  505D               	movf	??_mostrarDatosSensoresWIFI^0,w,c
  4859  0020E2  6FB9               	movwf	(?_sprintf+6)& (0+255),b
  4860  0020E4  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  4861  0020E6  0E00               	movlw	0
  4862  0020E8  6FBC               	movwf	(?_sprintf+9)& (0+255),b
  4863  0020EA  0E25               	movlw	37
  4864  0020EC  6FBB               	movwf	(?_sprintf+8)& (0+255),b
  4865  0020EE  ECFB  F016         	call	_sprintf	;wreg free
  4866  0020F2                     
  4867                           ;main.c: 828:             UART_printf(buffer);
  4868  0020F2  0E00               	movlw	low _buffer
  4869  0020F4  6E02               	movwf	UART_printf@cadena^0,c
  4870  0020F6  0E01               	movlw	high _buffer
  4871  0020F8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4872  0020FA  EC1A  F016         	call	_UART_printf	;wreg free
  4873  0020FE                     
  4874                           ;main.c: 830:         }
  4875  0020FE  0100               	movlb	0	; () banked
  4876  002100  4BCD               	infsnz	mostrarDatosSensoresWIFI@i& (0+255),f,b
  4877  002102  2BCE               	incf	(mostrarDatosSensoresWIFI@i+1)& (0+255),f,b
  4878  002104                     
  4879                           ; BSR set to: 0
  4880  002104  BFCE               	btfsc	(mostrarDatosSensoresWIFI@i+1)& (0+255),7,b
  4881  002106  EF8D  F010         	goto	u3571
  4882  00210A  51CE               	movf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  4883  00210C  E108               	bnz	u3570
  4884  00210E  05CD               	decf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  4885  002110  A0D8               	btfss	status,0,c
  4886  002112  EF8D  F010         	goto	u3571
  4887  002116  EF8F  F010         	goto	u3570
  4888  00211A                     u3571:
  4889  00211A  EF59  F010         	goto	l4567
  4890  00211E                     u3570:
  4891  00211E                     l4575:
  4892                           
  4893                           ; BSR set to: 0
  4894                           ;main.c: 834:     UART_write('I');
  4895  00211E  0E49               	movlw	73
  4896  002120  EC46  F019         	call	_UART_write
  4897  002124  0012               	return		;funcret
  4898  002126                     __end_of_mostrarDatosSensoresWIFI:
  4899                           	opt callstack 0
  4900                           
  4901 ;; *************** function _lecturaWifi *****************
  4902 ;; Defined at:
  4903 ;;		line 504 in file "main.c"
  4904 ;; Parameters:    Size  Location     Type
  4905 ;;		None
  4906 ;; Auto vars:     Size  Location     Type
  4907 ;;  i               2   30[BANK0 ] int 
  4908 ;;  humedadMedid    1   29[BANK0 ] unsigned char 
  4909 ;;  Rx              1   28[BANK0 ] unsigned char 
  4910 ;; Return value:  Size  Location     Type
  4911 ;;                  1    wreg      void 
  4912 ;; Registers used:
  4913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4919 ;;      Params:         0       0       0       0       0       0       0       0       0
  4920 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4921 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4922 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4923 ;;Total ram usage:        4 bytes
  4924 ;; Hardware stack levels used:    1
  4925 ;; Hardware stack levels required when called:    9
  4926 ;; This function calls:
  4927 ;;		_UART_printf
  4928 ;;		_UART_read
  4929 ;;		_UART_write
  4930 ;;		_getValue
  4931 ;;		_limpiarBuffer
  4932 ;;		_restablecerDatosSensor
  4933 ;;		_sprintf
  4934 ;; This function is called by:
  4935 ;;		_sistemaRegado
  4936 ;;		_mostrarDatosSensoresWIFI
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           	psect	text14
  4941  001F44                     __ptext14:
  4942                           	opt callstack 0
  4943  001F44                     _lecturaWifi:
  4944                           	opt callstack 20
  4945  001F44                     
  4946                           ;main.c: 506:     PIE1bits.RCIE = 0;
  4947  001F44  9A9D               	bcf	157,5,c	;volatile
  4948  001F46                     
  4949                           ;main.c: 510:     restablecerDatosSensor();
  4950  001F46  EC4D  F017         	call	_restablecerDatosSensor	;wreg free
  4951  001F4A                     
  4952                           ;main.c: 512:     UART_write('R');
  4953  001F4A  0E52               	movlw	82
  4954  001F4C  EC46  F019         	call	_UART_write
  4955  001F50                     
  4956                           ;main.c: 514:     UART_printf("\r\nSolicitando Muestreo de sensores\r\n\n");
  4957  001F50  0ECC               	movlw	low STR_19
  4958  001F52  6E02               	movwf	UART_printf@cadena^0,c
  4959  001F54  0E7B               	movlw	high STR_19
  4960  001F56  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4961  001F58  EC1A  F016         	call	_UART_printf	;wreg free
  4962  001F5C                     
  4963                           ;main.c: 516:     Rx = UART_read();
  4964  001F5C  ECD1  F016         	call	_UART_read	;wreg free
  4965  001F60  0100               	movlb	0	; () banked
  4966  001F62  6FC9               	movwf	lecturaWifi@Rx& (0+255),b
  4967  001F64                     
  4968                           ; BSR set to: 0
  4969                           ;main.c: 518:     if (Rx == 'O') {
  4970  001F64  0E4F               	movlw	79
  4971  001F66  19C9               	xorwf	lecturaWifi@Rx& (0+255),w,b
  4972  001F68  A4D8               	btfss	status,2,c
  4973  001F6A  EFB9  F00F         	goto	u3271
  4974  001F6E  EFBB  F00F         	goto	u3270
  4975  001F72                     u3271:
  4976  001F72  EF15  F010         	goto	l4265
  4977  001F76                     u3270:
  4978  001F76                     
  4979                           ; BSR set to: 0
  4980                           ;main.c: 520:         peticionLecturaSensores = 1;
  4981  001F76  0E01               	movlw	1
  4982  001F78  6F7A               	movwf	_peticionLecturaSensores& (0+255),b
  4983                           
  4984                           ;main.c: 522:         for (int i = 0; i < 1; i++) {
  4985  001F7A  0E00               	movlw	0
  4986  001F7C  6FCC               	movwf	(lecturaWifi@i+1)& (0+255),b
  4987  001F7E  0E00               	movlw	0
  4988  001F80  6FCB               	movwf	lecturaWifi@i& (0+255),b
  4989  001F82                     l4247:
  4990                           
  4991                           ; BSR set to: 0
  4992                           ;main.c: 524:             sprintf(buffer, "\r\nIngrese el porcentaje de humedad del sens
      +                          or %d\r\n", i);
  4993  001F82  0E00               	movlw	low _buffer
  4994  001F84  6FB3               	movwf	sprintf@s& (0+255),b
  4995  001F86  0E01               	movlw	high _buffer
  4996  001F88  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  4997  001F8A  0EE6               	movlw	low STR_20
  4998  001F8C  6FB5               	movwf	sprintf@fmt& (0+255),b
  4999  001F8E  0E7A               	movlw	high STR_20
  5000  001F90  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  5001  001F92  C0CB  F0B7         	movff	lecturaWifi@i,?_sprintf+4
  5002  001F96  C0CC  F0B8         	movff	lecturaWifi@i+1,?_sprintf+5
  5003  001F9A  ECFB  F016         	call	_sprintf	;wreg free
  5004  001F9E                     
  5005                           ;main.c: 525:             UART_printf(buffer);
  5006  001F9E  0E00               	movlw	low _buffer
  5007  001FA0  6E02               	movwf	UART_printf@cadena^0,c
  5008  001FA2  0E01               	movlw	high _buffer
  5009  001FA4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5010  001FA6  EC1A  F016         	call	_UART_printf	;wreg free
  5011  001FAA                     
  5012                           ;main.c: 527:             humedadMedida = getValue(3);
  5013  001FAA  0E00               	movlw	0
  5014  001FAC  6E05               	movwf	(getValue@numCharacters+1)^0,c
  5015  001FAE  0E03               	movlw	3
  5016  001FB0  6E04               	movwf	getValue@numCharacters^0,c
  5017  001FB2  ECE8  F006         	call	_getValue	;wreg free
  5018  001FB6  0100               	movlb	0	; () banked
  5019  001FB8  6FCA               	movwf	lecturaWifi@humedadMedida& (0+255),b
  5020  001FBA                     
  5021                           ; BSR set to: 0
  5022                           ;main.c: 529:             if (humedadMedida != '@')
  5023  001FBA  0E40               	movlw	64
  5024  001FBC  19CA               	xorwf	lecturaWifi@humedadMedida& (0+255),w,b
  5025  001FBE  B4D8               	btfsc	status,2,c
  5026  001FC0  EFE4  F00F         	goto	u3281
  5027  001FC4  EFE6  F00F         	goto	u3280
  5028  001FC8                     u3281:
  5029  001FC8  EFF3  F00F         	goto	l4257
  5030  001FCC                     u3280:
  5031  001FCC                     
  5032                           ; BSR set to: 0
  5033                           ;main.c: 530:                 sensores[i].porcientoHumedad = humedadMedida;
  5034  001FCC  90D8               	bcf	status,0,c
  5035  001FCE  35CB               	rlcf	lecturaWifi@i& (0+255),w,b
  5036  001FD0  6ED9               	movwf	fsr2l,c
  5037  001FD2  35CC               	rlcf	(lecturaWifi@i+1)& (0+255),w,b
  5038  001FD4  6EDA               	movwf	fsr2h,c
  5039  001FD6  0E60               	movlw	low _sensores
  5040  001FD8  26D9               	addwf	fsr2l,f,c
  5041  001FDA  0E00               	movlw	high _sensores
  5042  001FDC  22DA               	addwfc	fsr2h,f,c
  5043  001FDE  C0CA  FFDF         	movff	lecturaWifi@humedadMedida,indf2
  5044  001FE2  EFFE  F00F         	goto	l4259
  5045  001FE6                     l4257:
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;main.c: 532:                 sensores[i].porcientoHumedad = 100;
  5049  001FE6  90D8               	bcf	status,0,c
  5050  001FE8  35CB               	rlcf	lecturaWifi@i& (0+255),w,b
  5051  001FEA  6ED9               	movwf	fsr2l,c
  5052  001FEC  35CC               	rlcf	(lecturaWifi@i+1)& (0+255),w,b
  5053  001FEE  6EDA               	movwf	fsr2h,c
  5054  001FF0  0E60               	movlw	low _sensores
  5055  001FF2  26D9               	addwf	fsr2l,f,c
  5056  001FF4  0E00               	movlw	high _sensores
  5057  001FF6  22DA               	addwfc	fsr2h,f,c
  5058  001FF8  0E64               	movlw	100
  5059  001FFA  6EDF               	movwf	indf2,c
  5060  001FFC                     l4259:
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;main.c: 534:         }
  5064  001FFC  4BCB               	infsnz	lecturaWifi@i& (0+255),f,b
  5065  001FFE  2BCC               	incf	(lecturaWifi@i+1)& (0+255),f,b
  5066  002000                     
  5067                           ; BSR set to: 0
  5068  002000  BFCC               	btfsc	(lecturaWifi@i+1)& (0+255),7,b
  5069  002002  EF0B  F010         	goto	u3291
  5070  002006  51CC               	movf	(lecturaWifi@i+1)& (0+255),w,b
  5071  002008  E108               	bnz	u3290
  5072  00200A  05CB               	decf	lecturaWifi@i& (0+255),w,b
  5073  00200C  A0D8               	btfss	status,0,c
  5074  00200E  EF0B  F010         	goto	u3291
  5075  002012  EF0D  F010         	goto	u3290
  5076  002016                     u3291:
  5077  002016  EFC1  F00F         	goto	l4247
  5078  00201A                     u3290:
  5079  00201A                     
  5080                           ; BSR set to: 0
  5081                           ;main.c: 536:         UART_printf("\r\nSensores Leidos con Exito!\r\n\n");
  5082  00201A  0E3B               	movlw	low STR_21
  5083  00201C  6E02               	movwf	UART_printf@cadena^0,c
  5084  00201E  0E7D               	movlw	high STR_21
  5085  002020  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5086  002022  EC1A  F016         	call	_UART_printf	;wreg free
  5087                           
  5088                           ;main.c: 538:     } else {
  5089  002026  EF17  F010         	goto	l4267
  5090  00202A                     l4265:
  5091                           
  5092                           ; BSR set to: 0
  5093                           ;main.c: 539:         peticionLecturaSensores = 0;
  5094  00202A  0E00               	movlw	0
  5095  00202C  6F7A               	movwf	_peticionLecturaSensores& (0+255),b
  5096  00202E                     l4267:
  5097                           
  5098                           ;main.c: 542:     limpiarBuffer();
  5099  00202E  ECD9  F017         	call	_limpiarBuffer	;wreg free
  5100  002032                     
  5101                           ;main.c: 544:     PIE1bits.RCIE = 1;
  5102  002032  8A9D               	bsf	157,5,c	;volatile
  5103  002034  0012               	return		;funcret
  5104  002036                     __end_of_lecturaWifi:
  5105                           	opt callstack 0
  5106                           
  5107 ;; *************** function _restablecerDatosSensor *****************
  5108 ;; Defined at:
  5109 ;;		line 499 in file "main.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;		None
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;  i               2    4[COMRAM] int 
  5114 ;; Return value:  Size  Location     Type
  5115 ;;                  1    wreg      void 
  5116 ;; Registers used:
  5117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5123 ;;      Params:         0       0       0       0       0       0       0       0       0
  5124 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5125 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5126 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5127 ;;Total ram usage:        2 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; Hardware stack levels required when called:    2
  5130 ;; This function calls:
  5131 ;;		_constructorSensor
  5132 ;; This function is called by:
  5133 ;;		_lecturaWifi
  5134 ;;		_main
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           	psect	text15
  5139  002E9A                     __ptext15:
  5140                           	opt callstack 0
  5141  002E9A                     _restablecerDatosSensor:
  5142                           	opt callstack 26
  5143  002E9A                     
  5144                           ;main.c: 500:     for (int i = 0; i < 1; i++)
  5145  002E9A  0E00               	movlw	0
  5146  002E9C  6E06               	movwf	(restablecerDatosSensor@i+1)^0,c
  5147  002E9E  0E00               	movlw	0
  5148  002EA0  6E05               	movwf	restablecerDatosSensor@i^0,c
  5149  002EA2                     l4051:
  5150                           
  5151                           ;main.c: 501:         constructorSensor(sensores[i], 0, i);
  5152  002EA2  90D8               	bcf	status,0,c
  5153  002EA4  3405               	rlcf	restablecerDatosSensor@i^0,w,c
  5154  002EA6  6ED9               	movwf	fsr2l,c
  5155  002EA8  3406               	rlcf	(restablecerDatosSensor@i+1)^0,w,c
  5156  002EAA  6EDA               	movwf	fsr2h,c
  5157  002EAC  0E60               	movlw	low _sensores
  5158  002EAE  26D9               	addwf	fsr2l,f,c
  5159  002EB0  0E00               	movlw	high _sensores
  5160  002EB2  22DA               	addwfc	fsr2h,f,c
  5161  002EB4  CFDE F001          	movff	postinc2,constructorSensor@s
  5162  002EB8  CFDD F002          	movff	postdec2,constructorSensor@s+1
  5163  002EBC  0E00               	movlw	0
  5164  002EBE  6E03               	movwf	constructorSensor@porcientoHumedad^0,c
  5165  002EC0  C005  F004         	movff	restablecerDatosSensor@i,constructorSensor@pin
  5166  002EC4  EC70  F019         	call	_constructorSensor	;wreg free
  5167  002EC8  4A05               	infsnz	restablecerDatosSensor@i^0,f,c
  5168  002ECA  2A06               	incf	(restablecerDatosSensor@i+1)^0,f,c
  5169  002ECC  BE06               	btfsc	(restablecerDatosSensor@i+1)^0,7,c
  5170  002ECE  EF71  F017         	goto	u3081
  5171  002ED2  5006               	movf	(restablecerDatosSensor@i+1)^0,w,c
  5172  002ED4  E108               	bnz	u3080
  5173  002ED6  0405               	decf	restablecerDatosSensor@i^0,w,c
  5174  002ED8  A0D8               	btfss	status,0,c
  5175  002EDA  EF71  F017         	goto	u3081
  5176  002EDE  EF73  F017         	goto	u3080
  5177  002EE2                     u3081:
  5178  002EE2  EF51  F017         	goto	l4051
  5179  002EE6                     u3080:
  5180  002EE6  0012               	return		;funcret
  5181  002EE8                     __end_of_restablecerDatosSensor:
  5182                           	opt callstack 0
  5183                           
  5184 ;; *************** function _constructorSensor *****************
  5185 ;; Defined at:
  5186 ;;		line 138 in file "main.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;  s               2    0[COMRAM] struct .
  5189 ;;  porcientoHum    1    2[COMRAM] unsigned char 
  5190 ;;  pin             1    3[COMRAM] unsigned char 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;		None
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  1    wreg      void 
  5195 ;; Registers used:
  5196 ;;		None
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5202 ;;      Params:         4       0       0       0       0       0       0       0       0
  5203 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5204 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5205 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5206 ;;Total ram usage:        4 bytes
  5207 ;; Hardware stack levels used:    1
  5208 ;; Hardware stack levels required when called:    1
  5209 ;; This function calls:
  5210 ;;		Nothing
  5211 ;; This function is called by:
  5212 ;;		_restablecerDatosSensor
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           	psect	text16
  5217  0032E0                     __ptext16:
  5218                           	opt callstack 0
  5219  0032E0                     _constructorSensor:
  5220                           	opt callstack 26
  5221  0032E0                     
  5222                           ;main.c: 139:     s.porcientoHumedad = porcientoHumedad;
  5223  0032E0  C003  F001         	movff	constructorSensor@porcientoHumedad,constructorSensor@s
  5224                           
  5225                           ;main.c: 140:     s.pinSensor = pin;
  5226  0032E4  C004  F002         	movff	constructorSensor@pin,constructorSensor@s+1
  5227  0032E8  0012               	return		;funcret
  5228  0032EA                     __end_of_constructorSensor:
  5229                           	opt callstack 0
  5230                           
  5231 ;; *************** function _mostrarDatosSensores *****************
  5232 ;; Defined at:
  5233 ;;		line 779 in file "main.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;		None
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;  i               2   28[BANK0 ] int 
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  1    wreg      void 
  5240 ;; Registers used:
  5241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5247 ;;      Params:         0       0       0       0       0       0       0       0       0
  5248 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5249 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5250 ;;      Totals:         1       2       0       0       0       0       0       0       0
  5251 ;;Total ram usage:        3 bytes
  5252 ;; Hardware stack levels used:    1
  5253 ;; Hardware stack levels required when called:    9
  5254 ;; This function calls:
  5255 ;;		_UART_printf
  5256 ;;		_UART_write
  5257 ;;		_dameTemperaturaHumedad
  5258 ;;		_lecturaAnalogaSensores
  5259 ;;		_limpiarBuffer
  5260 ;;		_sprintf
  5261 ;; This function is called by:
  5262 ;;		_sistemaPrincipal
  5263 ;; This function uses a non-reentrant model
  5264 ;;
  5265                           
  5266                           	psect	text17
  5267  002126                     __ptext17:
  5268                           	opt callstack 0
  5269  002126                     _mostrarDatosSensores:
  5270                           	opt callstack 20
  5271  002126                     
  5272                           ;main.c: 781:     dameTemperaturaHumedad();
  5273  002126  ECD9  F013         	call	_dameTemperaturaHumedad	;wreg free
  5274  00212A                     
  5275                           ;main.c: 783:     UART_write('I');
  5276  00212A  0E49               	movlw	73
  5277  00212C  EC46  F019         	call	_UART_write
  5278  002130                     
  5279                           ;main.c: 786:     limpiarBuffer();
  5280  002130  ECD9  F017         	call	_limpiarBuffer	;wreg free
  5281  002134                     
  5282                           ;main.c: 788:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", Humedad);
  5283  002134  0E00               	movlw	low _buffer
  5284  002136  0100               	movlb	0	; () banked
  5285  002138  6FB3               	movwf	sprintf@s& (0+255),b
  5286  00213A  0E01               	movlw	high _buffer
  5287  00213C  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  5288  00213E  0E7B               	movlw	low STR_47
  5289  002140  6FB5               	movwf	sprintf@fmt& (0+255),b
  5290  002142  0E7D               	movlw	high STR_47
  5291  002144  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  5292  002146  C07E  F0B7         	movff	_Humedad,?_sprintf+4
  5293  00214A  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  5294  00214C  ECFB  F016         	call	_sprintf	;wreg free
  5295  002150                     
  5296                           ;main.c: 789:     UART_printf(buffer);
  5297  002150  0E00               	movlw	low _buffer
  5298  002152  6E02               	movwf	UART_printf@cadena^0,c
  5299  002154  0E01               	movlw	high _buffer
  5300  002156  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5301  002158  EC1A  F016         	call	_UART_printf	;wreg free
  5302  00215C                     
  5303                           ;main.c: 790:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", Temperatura);
  5304  00215C  0E00               	movlw	low _buffer
  5305  00215E  0100               	movlb	0	; () banked
  5306  002160  6FB3               	movwf	sprintf@s& (0+255),b
  5307  002162  0E01               	movlw	high _buffer
  5308  002164  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  5309  002166  0EBA               	movlw	low STR_48
  5310  002168  6FB5               	movwf	sprintf@fmt& (0+255),b
  5311  00216A  0E7D               	movlw	high STR_48
  5312  00216C  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  5313  00216E  C07F  F0B7         	movff	_Temperatura,?_sprintf+4
  5314  002172  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  5315  002174  ECFB  F016         	call	_sprintf	;wreg free
  5316  002178                     
  5317                           ;main.c: 791:     UART_printf(buffer);
  5318  002178  0E00               	movlw	low _buffer
  5319  00217A  6E02               	movwf	UART_printf@cadena^0,c
  5320  00217C  0E01               	movlw	high _buffer
  5321  00217E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5322  002180  EC1A  F016         	call	_UART_printf	;wreg free
  5323  002184                     
  5324                           ;main.c: 793:     lecturaAnalogaSensores();
  5325  002184  ECE8  F012         	call	_lecturaAnalogaSensores	;wreg free
  5326  002188                     
  5327                           ;main.c: 796:     for (int i = 0; i < 1; i++) {
  5328  002188  0E00               	movlw	0
  5329  00218A  0100               	movlb	0	; () banked
  5330  00218C  6FCA               	movwf	(mostrarDatosSensores@i+1)& (0+255),b
  5331  00218E  0E00               	movlw	0
  5332  002190  6FC9               	movwf	mostrarDatosSensores@i& (0+255),b
  5333  002192                     l4599:
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;main.c: 798:         sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d %c\r\n
      +                          "
  5337  002192  0E00               	movlw	low _buffer
  5338  002194  6FB3               	movwf	sprintf@s& (0+255),b
  5339  002196  0E01               	movlw	high _buffer
  5340  002198  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  5341  00219A  0E4A               	movlw	low STR_49
  5342  00219C  6FB5               	movwf	sprintf@fmt& (0+255),b
  5343  00219E  0E7B               	movlw	high STR_49
  5344  0021A0  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  5345  0021A2  C0C9  F0B7         	movff	mostrarDatosSensores@i,?_sprintf+4
  5346  0021A6  C0CA  F0B8         	movff	mostrarDatosSensores@i+1,?_sprintf+5
  5347  0021AA  90D8               	bcf	status,0,c
  5348  0021AC  35C9               	rlcf	mostrarDatosSensores@i& (0+255),w,b
  5349  0021AE  6ED9               	movwf	fsr2l,c
  5350  0021B0  35CA               	rlcf	(mostrarDatosSensores@i+1)& (0+255),w,b
  5351  0021B2  6EDA               	movwf	fsr2h,c
  5352  0021B4  0E60               	movlw	low _sensores
  5353  0021B6  26D9               	addwf	fsr2l,f,c
  5354  0021B8  0E00               	movlw	high _sensores
  5355  0021BA  22DA               	addwfc	fsr2h,f,c
  5356  0021BC  50DF               	movf	indf2,w,c
  5357  0021BE  6E5D               	movwf	??_mostrarDatosSensores^0,c
  5358  0021C0  505D               	movf	??_mostrarDatosSensores^0,w,c
  5359  0021C2  6FB9               	movwf	(?_sprintf+6)& (0+255),b
  5360  0021C4  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  5361  0021C6  0E00               	movlw	0
  5362  0021C8  6FBC               	movwf	(?_sprintf+9)& (0+255),b
  5363  0021CA  0E25               	movlw	37
  5364  0021CC  6FBB               	movwf	(?_sprintf+8)& (0+255),b
  5365  0021CE  ECFB  F016         	call	_sprintf	;wreg free
  5366  0021D2                     
  5367                           ;main.c: 800:         UART_printf(buffer);
  5368  0021D2  0E00               	movlw	low _buffer
  5369  0021D4  6E02               	movwf	UART_printf@cadena^0,c
  5370  0021D6  0E01               	movlw	high _buffer
  5371  0021D8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5372  0021DA  EC1A  F016         	call	_UART_printf	;wreg free
  5373  0021DE                     
  5374                           ;main.c: 801:     }
  5375  0021DE  0100               	movlb	0	; () banked
  5376  0021E0  4BC9               	infsnz	mostrarDatosSensores@i& (0+255),f,b
  5377  0021E2  2BCA               	incf	(mostrarDatosSensores@i+1)& (0+255),f,b
  5378  0021E4                     
  5379                           ; BSR set to: 0
  5380  0021E4  BFCA               	btfsc	(mostrarDatosSensores@i+1)& (0+255),7,b
  5381  0021E6  EFFD  F010         	goto	u3581
  5382  0021EA  51CA               	movf	(mostrarDatosSensores@i+1)& (0+255),w,b
  5383  0021EC  E108               	bnz	u3580
  5384  0021EE  05C9               	decf	mostrarDatosSensores@i& (0+255),w,b
  5385  0021F0  A0D8               	btfss	status,0,c
  5386  0021F2  EFFD  F010         	goto	u3581
  5387  0021F6  EFFF  F010         	goto	u3580
  5388  0021FA                     u3581:
  5389  0021FA  EFC9  F010         	goto	l4599
  5390  0021FE                     u3580:
  5391  0021FE                     
  5392                           ; BSR set to: 0
  5393                           ;main.c: 803:     UART_write('I');
  5394  0021FE  0E49               	movlw	73
  5395  002200  EC46  F019         	call	_UART_write
  5396  002204  0012               	return		;funcret
  5397  002206                     __end_of_mostrarDatosSensores:
  5398                           	opt callstack 0
  5399                           
  5400 ;; *************** function _lecturaAnalogaSensores *****************
  5401 ;; Defined at:
  5402 ;;		line 548 in file "main.c"
  5403 ;; Parameters:    Size  Location     Type
  5404 ;;		None
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;  i               2   47[COMRAM] int 
  5407 ;; Return value:  Size  Location     Type
  5408 ;;                  1    wreg      void 
  5409 ;; Registers used:
  5410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5411 ;; Tracked objects:
  5412 ;;		On entry : 0/0
  5413 ;;		On exit  : 0/0
  5414 ;;		Unchanged: 0/0
  5415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5416 ;;      Params:         0       0       0       0       0       0       0       0       0
  5417 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5418 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5419 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5420 ;;Total ram usage:        3 bytes
  5421 ;; Hardware stack levels used:    1
  5422 ;; Hardware stack levels required when called:    3
  5423 ;; This function calls:
  5424 ;;		_dameHumedadSuelo
  5425 ;;		_map
  5426 ;; This function is called by:
  5427 ;;		_sistemaRegado
  5428 ;;		_mostrarDatosSensores
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432                           	psect	text18
  5433  0025D0                     __ptext18:
  5434                           	opt callstack 0
  5435  0025D0                     _lecturaAnalogaSensores:
  5436                           	opt callstack 26
  5437  0025D0                     
  5438                           ;main.c: 550:     for (int i = 0; i < 1; i++) {
  5439  0025D0  0E00               	movlw	0
  5440  0025D2  6E31               	movwf	(lecturaAnalogaSensores@i+1)^0,c
  5441  0025D4  0E00               	movlw	0
  5442  0025D6  6E30               	movwf	lecturaAnalogaSensores@i^0,c
  5443  0025D8                     l4277:
  5444                           
  5445                           ;main.c: 551:         sensores[i].porcientoHumedad = map(dameHumedadSuelo(i), 0, 1023, 1
      +                          00, 0);
  5446  0025D8  90D8               	bcf	status,0,c
  5447  0025DA  3430               	rlcf	lecturaAnalogaSensores@i^0,w,c
  5448  0025DC  6ED9               	movwf	fsr2l,c
  5449  0025DE  3431               	rlcf	(lecturaAnalogaSensores@i+1)^0,w,c
  5450  0025E0  6EDA               	movwf	fsr2h,c
  5451  0025E2  0E60               	movlw	low _sensores
  5452  0025E4  26D9               	addwf	fsr2l,f,c
  5453  0025E6  0E00               	movlw	high _sensores
  5454  0025E8  22DA               	addwfc	fsr2h,f,c
  5455  0025EA  5030               	movf	lecturaAnalogaSensores@i^0,w,c
  5456  0025EC  EC74  F017         	call	_dameHumedadSuelo
  5457  0025F0  C001  F01B         	movff	?_dameHumedadSuelo,map@x
  5458  0025F4  C002  F01C         	movff	?_dameHumedadSuelo+1,map@x+1
  5459  0025F8  0E00               	movlw	0
  5460  0025FA  BE1C               	btfsc	(map@x+1)^0,7,c
  5461  0025FC  0EFF               	movlw	-1
  5462  0025FE  6E1D               	movwf	(map@x+2)^0,c
  5463  002600  6E1E               	movwf	(map@x+3)^0,c
  5464  002602  0E00               	movlw	0
  5465  002604  6E1F               	movwf	map@in_min^0,c
  5466  002606  0E00               	movlw	0
  5467  002608  6E20               	movwf	(map@in_min+1)^0,c
  5468  00260A  0E00               	movlw	0
  5469  00260C  6E21               	movwf	(map@in_min+2)^0,c
  5470  00260E  0E00               	movlw	0
  5471  002610  6E22               	movwf	(map@in_min+3)^0,c
  5472  002612  0EFF               	movlw	255
  5473  002614  6E23               	movwf	map@in_max^0,c
  5474  002616  0E03               	movlw	3
  5475  002618  6E24               	movwf	(map@in_max+1)^0,c
  5476  00261A  0E00               	movlw	0
  5477  00261C  6E25               	movwf	(map@in_max+2)^0,c
  5478  00261E  0E00               	movlw	0
  5479  002620  6E26               	movwf	(map@in_max+3)^0,c
  5480  002622  0E64               	movlw	100
  5481  002624  6E27               	movwf	map@out_min^0,c
  5482  002626  0E00               	movlw	0
  5483  002628  6E28               	movwf	(map@out_min+1)^0,c
  5484  00262A  0E00               	movlw	0
  5485  00262C  6E29               	movwf	(map@out_min+2)^0,c
  5486  00262E  0E00               	movlw	0
  5487  002630  6E2A               	movwf	(map@out_min+3)^0,c
  5488  002632  0E00               	movlw	0
  5489  002634  6E2B               	movwf	map@out_max^0,c
  5490  002636  0E00               	movlw	0
  5491  002638  6E2C               	movwf	(map@out_max+1)^0,c
  5492  00263A  0E00               	movlw	0
  5493  00263C  6E2D               	movwf	(map@out_max+2)^0,c
  5494  00263E  0E00               	movlw	0
  5495  002640  6E2E               	movwf	(map@out_max+3)^0,c
  5496  002642  ECA2  F014         	call	_map	;wreg free
  5497  002646  501B               	movf	?_map^0,w,c
  5498  002648  6EDF               	movwf	indf2,c
  5499  00264A                     
  5500                           ;main.c: 552:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5501  00264A  0E07               	movlw	7
  5502  00264C  6E2F               	movwf	??_lecturaAnalogaSensores^0,c
  5503  00264E  0E7D               	movlw	125
  5504  002650                     u3857:
  5505  002650  2EE8               	decfsz	wreg,f,c
  5506  002652  D7FE               	bra	u3857
  5507  002654  2E2F               	decfsz	??_lecturaAnalogaSensores^0,f,c
  5508  002656  D7FC               	bra	u3857
  5509  002658  F000               	nop	
  5510  00265A                     
  5511                           ;main.c: 553:     }
  5512  00265A  4A30               	infsnz	lecturaAnalogaSensores@i^0,f,c
  5513  00265C  2A31               	incf	(lecturaAnalogaSensores@i+1)^0,f,c
  5514  00265E  BE31               	btfsc	(lecturaAnalogaSensores@i+1)^0,7,c
  5515  002660  EF3A  F013         	goto	u3301
  5516  002664  5031               	movf	(lecturaAnalogaSensores@i+1)^0,w,c
  5517  002666  E108               	bnz	u3300
  5518  002668  0430               	decf	lecturaAnalogaSensores@i^0,w,c
  5519  00266A  A0D8               	btfss	status,0,c
  5520  00266C  EF3A  F013         	goto	u3301
  5521  002670  EF3C  F013         	goto	u3300
  5522  002674                     u3301:
  5523  002674  EFEC  F012         	goto	l4277
  5524  002678                     u3300:
  5525  002678  0012               	return		;funcret
  5526  00267A                     __end_of_lecturaAnalogaSensores:
  5527                           	opt callstack 0
  5528                           
  5529 ;; *************** function _map *****************
  5530 ;; Defined at:
  5531 ;;		line 134 in file "main.c"
  5532 ;; Parameters:    Size  Location     Type
  5533 ;;  x               4   26[COMRAM] long 
  5534 ;;  in_min          4   30[COMRAM] long 
  5535 ;;  in_max          4   34[COMRAM] long 
  5536 ;;  out_min         4   38[COMRAM] long 
  5537 ;;  out_max         4   42[COMRAM] long 
  5538 ;; Auto vars:     Size  Location     Type
  5539 ;;		None
  5540 ;; Return value:  Size  Location     Type
  5541 ;;                  4   26[COMRAM] long 
  5542 ;; Registers used:
  5543 ;;		wreg, status,2, status,0, cstack
  5544 ;; Tracked objects:
  5545 ;;		On entry : 0/0
  5546 ;;		On exit  : 0/0
  5547 ;;		Unchanged: 0/0
  5548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5549 ;;      Params:        20       0       0       0       0       0       0       0       0
  5550 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5551 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5552 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5553 ;;Total ram usage:       20 bytes
  5554 ;; Hardware stack levels used:    1
  5555 ;; Hardware stack levels required when called:    2
  5556 ;; This function calls:
  5557 ;;		___aldiv
  5558 ;;		___lmul
  5559 ;; This function is called by:
  5560 ;;		_lecturaAnalogaSensores
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           	psect	text19
  5565  002944                     __ptext19:
  5566                           	opt callstack 0
  5567  002944                     _map:
  5568                           	opt callstack 26
  5569  002944                     
  5570                           ;main.c: 135:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  5571  002944  501F               	movf	map@in_min^0,w,c
  5572  002946  5C1B               	subwf	map@x^0,w,c
  5573  002948  6E01               	movwf	___lmul@multiplier^0,c
  5574  00294A  5020               	movf	(map@in_min+1)^0,w,c
  5575  00294C  581C               	subwfb	(map@x+1)^0,w,c
  5576  00294E  6E02               	movwf	(___lmul@multiplier+1)^0,c
  5577  002950  5021               	movf	(map@in_min+2)^0,w,c
  5578  002952  581D               	subwfb	(map@x+2)^0,w,c
  5579  002954  6E03               	movwf	(___lmul@multiplier+2)^0,c
  5580  002956  5022               	movf	(map@in_min+3)^0,w,c
  5581  002958  581E               	subwfb	(map@x+3)^0,w,c
  5582  00295A  6E04               	movwf	(___lmul@multiplier+3)^0,c
  5583  00295C  5027               	movf	map@out_min^0,w,c
  5584  00295E  5C2B               	subwf	map@out_max^0,w,c
  5585  002960  6E05               	movwf	___lmul@multiplicand^0,c
  5586  002962  5028               	movf	(map@out_min+1)^0,w,c
  5587  002964  582C               	subwfb	(map@out_max+1)^0,w,c
  5588  002966  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5589  002968  5029               	movf	(map@out_min+2)^0,w,c
  5590  00296A  582D               	subwfb	(map@out_max+2)^0,w,c
  5591  00296C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5592  00296E  502A               	movf	(map@out_min+3)^0,w,c
  5593  002970  582E               	subwfb	(map@out_max+3)^0,w,c
  5594  002972  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5595  002974  EC4F  F015         	call	___lmul	;wreg free
  5596  002978  C001  F00D         	movff	?___lmul,___aldiv@dividend
  5597  00297C  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  5598  002980  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  5599  002984  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  5600  002988  501F               	movf	map@in_min^0,w,c
  5601  00298A  5C23               	subwf	map@in_max^0,w,c
  5602  00298C  6E11               	movwf	___aldiv@divisor^0,c
  5603  00298E  5020               	movf	(map@in_min+1)^0,w,c
  5604  002990  5824               	subwfb	(map@in_max+1)^0,w,c
  5605  002992  6E12               	movwf	(___aldiv@divisor+1)^0,c
  5606  002994  5021               	movf	(map@in_min+2)^0,w,c
  5607  002996  5825               	subwfb	(map@in_max+2)^0,w,c
  5608  002998  6E13               	movwf	(___aldiv@divisor+2)^0,c
  5609  00299A  5022               	movf	(map@in_min+3)^0,w,c
  5610  00299C  5826               	subwfb	(map@in_max+3)^0,w,c
  5611  00299E  6E14               	movwf	(___aldiv@divisor+3)^0,c
  5612  0029A0  EC1C  F00F         	call	___aldiv	;wreg free
  5613  0029A4  5027               	movf	map@out_min^0,w,c
  5614  0029A6  240D               	addwf	?___aldiv^0,w,c
  5615  0029A8  6E1B               	movwf	?_map^0,c
  5616  0029AA  5028               	movf	(map@out_min+1)^0,w,c
  5617  0029AC  200E               	addwfc	(?___aldiv+1)^0,w,c
  5618  0029AE  6E1C               	movwf	(?_map+1)^0,c
  5619  0029B0  5029               	movf	(map@out_min+2)^0,w,c
  5620  0029B2  200F               	addwfc	(?___aldiv+2)^0,w,c
  5621  0029B4  6E1D               	movwf	(?_map+2)^0,c
  5622  0029B6  502A               	movf	(map@out_min+3)^0,w,c
  5623  0029B8  2010               	addwfc	(?___aldiv+3)^0,w,c
  5624  0029BA  6E1E               	movwf	(?_map+3)^0,c
  5625  0029BC  0012               	return		;funcret
  5626  0029BE                     __end_of_map:
  5627                           	opt callstack 0
  5628                           
  5629 ;; *************** function ___lmul *****************
  5630 ;; Defined at:
  5631 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;  multiplier      4    0[COMRAM] unsigned long 
  5634 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;  product         4    8[COMRAM] unsigned long 
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  4    0[COMRAM] unsigned long 
  5639 ;; Registers used:
  5640 ;;		wreg, status,2, status,0
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5646 ;;      Params:         8       0       0       0       0       0       0       0       0
  5647 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5648 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5649 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5650 ;;Total ram usage:       12 bytes
  5651 ;; Hardware stack levels used:    1
  5652 ;; Hardware stack levels required when called:    1
  5653 ;; This function calls:
  5654 ;;		Nothing
  5655 ;; This function is called by:
  5656 ;;		_map
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           	psect	text20
  5661  002A9E                     __ptext20:
  5662                           	opt callstack 0
  5663  002A9E                     ___lmul:
  5664                           	opt callstack 26
  5665  002A9E  0E00               	movlw	0
  5666  002AA0  6E09               	movwf	___lmul@product^0,c
  5667  002AA2  0E00               	movlw	0
  5668  002AA4  6E0A               	movwf	(___lmul@product+1)^0,c
  5669  002AA6  0E00               	movlw	0
  5670  002AA8  6E0B               	movwf	(___lmul@product+2)^0,c
  5671  002AAA  0E00               	movlw	0
  5672  002AAC  6E0C               	movwf	(___lmul@product+3)^0,c
  5673  002AAE                     l3813:
  5674  002AAE  A001               	btfss	___lmul@multiplier^0,0,c
  5675  002AB0  EF5C  F015         	goto	u2871
  5676  002AB4  EF5E  F015         	goto	u2870
  5677  002AB8                     u2871:
  5678  002AB8  EF66  F015         	goto	l3817
  5679  002ABC                     u2870:
  5680  002ABC  5005               	movf	___lmul@multiplicand^0,w,c
  5681  002ABE  2609               	addwf	___lmul@product^0,f,c
  5682  002AC0  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5683  002AC2  220A               	addwfc	(___lmul@product+1)^0,f,c
  5684  002AC4  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5685  002AC6  220B               	addwfc	(___lmul@product+2)^0,f,c
  5686  002AC8  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5687  002ACA  220C               	addwfc	(___lmul@product+3)^0,f,c
  5688  002ACC                     l3817:
  5689  002ACC  90D8               	bcf	status,0,c
  5690  002ACE  3605               	rlcf	___lmul@multiplicand^0,f,c
  5691  002AD0  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5692  002AD2  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5693  002AD4  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5694  002AD6  90D8               	bcf	status,0,c
  5695  002AD8  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5696  002ADA  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5697  002ADC  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5698  002ADE  3201               	rrcf	___lmul@multiplier^0,f,c
  5699  002AE0  5001               	movf	___lmul@multiplier^0,w,c
  5700  002AE2  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5701  002AE4  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5702  002AE6  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5703  002AE8  A4D8               	btfss	status,2,c
  5704  002AEA  EF79  F015         	goto	u2881
  5705  002AEE  EF7B  F015         	goto	u2880
  5706  002AF2                     u2881:
  5707  002AF2  EF57  F015         	goto	l3813
  5708  002AF6                     u2880:
  5709  002AF6  C009  F001         	movff	___lmul@product,?___lmul
  5710  002AFA  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5711  002AFE  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5712  002B02  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5713  002B06  0012               	return		;funcret
  5714  002B08                     __end_of___lmul:
  5715                           	opt callstack 0
  5716                           
  5717 ;; *************** function _dameHumedadSuelo *****************
  5718 ;; Defined at:
  5719 ;;		line 482 in file "main.c"
  5720 ;; Parameters:    Size  Location     Type
  5721 ;;  canalLeer       1    wreg     unsigned char 
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;  canalLeer       1    4[COMRAM] unsigned char 
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  2    0[COMRAM] short 
  5726 ;; Registers used:
  5727 ;;		wreg, status,2, status,0
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5733 ;;      Params:         2       0       0       0       0       0       0       0       0
  5734 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5735 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5736 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5737 ;;Total ram usage:        5 bytes
  5738 ;; Hardware stack levels used:    1
  5739 ;; Hardware stack levels required when called:    1
  5740 ;; This function calls:
  5741 ;;		Nothing
  5742 ;; This function is called by:
  5743 ;;		_lecturaAnalogaSensores
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           	psect	text21
  5748  002EE8                     __ptext21:
  5749                           	opt callstack 0
  5750  002EE8                     _dameHumedadSuelo:
  5751                           	opt callstack 27
  5752                           
  5753                           ;incstack = 0
  5754                           ;dameHumedadSuelo@canalLeer stored from wreg
  5755  002EE8  6E05               	movwf	dameHumedadSuelo@canalLeer^0,c
  5756  002EEA                     
  5757                           ;main.c: 484:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  5758  002EEA  0E06               	movlw	6
  5759  002EEC                     u3867:
  5760  002EEC  2EE8               	decfsz	wreg,f,c
  5761  002EEE  D7FE               	bra	u3867
  5762  002EF0  D000               	nop2	
  5763  002EF2                     
  5764                           ;main.c: 486:     ADCON0bits.ADON = 1;
  5765  002EF2  80C2               	bsf	194,0,c	;volatile
  5766  002EF4                     
  5767                           ;main.c: 487:     ADCON0bits.CHS = canalLeer;
  5768  002EF4  C005  F003         	movff	dameHumedadSuelo@canalLeer,??_dameHumedadSuelo
  5769  002EF8  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  5770  002EFA  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  5771  002EFC  50C2               	movf	194,w,c	;volatile
  5772  002EFE  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  5773  002F00  0BC3               	andlw	-61
  5774  002F02  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  5775  002F04  6EC2               	movwf	194,c	;volatile
  5776  002F06                     
  5777                           ;main.c: 488:     ADCON0bits.GO = 1;
  5778  002F06  82C2               	bsf	194,1,c	;volatile
  5779  002F08                     
  5780                           ;main.c: 489:     ADCON0bits.GO_DONE = 1;
  5781  002F08  82C2               	bsf	194,1,c	;volatile
  5782  002F0A                     l333:
  5783  002F0A  B2C2               	btfsc	194,1,c	;volatile
  5784  002F0C  EF8A  F017         	goto	u3071
  5785  002F10  EF8C  F017         	goto	u3070
  5786  002F14                     u3071:
  5787  002F14  EF85  F017         	goto	l333
  5788  002F18                     u3070:
  5789  002F18                     
  5790                           ;main.c: 493:     ADCON0bits.ADON = 0;
  5791  002F18  90C2               	bcf	194,0,c	;volatile
  5792  002F1A                     
  5793                           ;main.c: 495:     return (ADRESH << 8) +ADRESL;
  5794  002F1A  50C4               	movf	196,w,c	;volatile
  5795  002F1C  6E04               	movwf	(??_dameHumedadSuelo+1)^0,c
  5796  002F1E  6A03               	clrf	??_dameHumedadSuelo^0,c
  5797  002F20  50C3               	movf	195,w,c	;volatile
  5798  002F22  2403               	addwf	??_dameHumedadSuelo^0,w,c
  5799  002F24  6E01               	movwf	?_dameHumedadSuelo^0,c
  5800  002F26  0E00               	movlw	0
  5801  002F28  2004               	addwfc	(??_dameHumedadSuelo+1)^0,w,c
  5802  002F2A  6E02               	movwf	(?_dameHumedadSuelo+1)^0,c
  5803  002F2C  0012               	return		;funcret
  5804  002F2E                     __end_of_dameHumedadSuelo:
  5805                           	opt callstack 0
  5806                           
  5807 ;; *************** function _dameTemperaturaHumedad *****************
  5808 ;; Defined at:
  5809 ;;		line 745 in file "main.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;		None
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;  checkSum        2    5[COMRAM] unsigned int 
  5814 ;;  temperatura     1   10[COMRAM] unsigned char 
  5815 ;;  humedad         1    9[COMRAM] unsigned char 
  5816 ;;  temperaturaD    1    8[COMRAM] unsigned char 
  5817 ;;  humedadDecim    1    7[COMRAM] unsigned char 
  5818 ;; Return value:  Size  Location     Type
  5819 ;;                  1    wreg      void 
  5820 ;; Registers used:
  5821 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5822 ;; Tracked objects:
  5823 ;;		On entry : 0/0
  5824 ;;		On exit  : 0/0
  5825 ;;		Unchanged: 0/0
  5826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5827 ;;      Params:         0       0       0       0       0       0       0       0       0
  5828 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5829 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5830 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5831 ;;Total ram usage:        8 bytes
  5832 ;; Hardware stack levels used:    1
  5833 ;; Hardware stack levels required when called:    3
  5834 ;; This function calls:
  5835 ;;		_DHT11_ReadData
  5836 ;;		_DHT11_Start
  5837 ;;		_UART_printf
  5838 ;;		_check_response
  5839 ;; This function is called by:
  5840 ;;		_estaSeco
  5841 ;;		_mostrarDatosSensores
  5842 ;;		_mostrarDatosSensoresWIFI
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846                           	psect	text22
  5847  0027B2                     __ptext22:
  5848                           	opt callstack 0
  5849  0027B2                     _dameTemperaturaHumedad:
  5850                           	opt callstack 24
  5851  0027B2                     
  5852                           ;main.c: 747:     PIE1bits.RCIE = 0;
  5853  0027B2  9A9D               	bcf	157,5,c	;volatile
  5854                           
  5855                           ;main.c: 748:     T0CONbits.TMR0ON = 0;
  5856  0027B4  9ED5               	bcf	213,7,c	;volatile
  5857  0027B6                     l3893:
  5858                           
  5859                           ;main.c: 754:     DHT11_Start();
  5860  0027B6  EC1A  F019         	call	_DHT11_Start	;wreg free
  5861  0027BA                     
  5862                           ;main.c: 756:     while (!(check_response())) {
  5863  0027BA  ECB9  F017         	call	_check_response	;wreg free
  5864  0027BE  0900               	iorlw	0
  5865  0027C0  B4D8               	btfsc	status,2,c
  5866  0027C2  EFE5  F013         	goto	u2951
  5867  0027C6  EFE7  F013         	goto	u2950
  5868  0027CA                     u2951:
  5869  0027CA  EFDB  F013         	goto	l3893
  5870  0027CE                     u2950:
  5871  0027CE                     
  5872                           ;main.c: 762:     humedad = DHT11_ReadData();
  5873  0027CE  EC49  F016         	call	_DHT11_ReadData	;wreg free
  5874  0027D2  6E0A               	movwf	dameTemperaturaHumedad@humedad^0,c
  5875                           
  5876                           ;main.c: 763:     humedadDecimal = DHT11_ReadData();
  5877  0027D4  EC49  F016         	call	_DHT11_ReadData	;wreg free
  5878  0027D8  6E08               	movwf	dameTemperaturaHumedad@humedadDecimal^0,c
  5879                           
  5880                           ;main.c: 764:     temperatura = DHT11_ReadData();
  5881  0027DA  EC49  F016         	call	_DHT11_ReadData	;wreg free
  5882  0027DE  6E0B               	movwf	dameTemperaturaHumedad@temperatura^0,c
  5883                           
  5884                           ;main.c: 765:     temperaturaDecimal = DHT11_ReadData();
  5885  0027E0  EC49  F016         	call	_DHT11_ReadData	;wreg free
  5886  0027E4  6E09               	movwf	dameTemperaturaHumedad@temperaturaDecimal^0,c
  5887                           
  5888                           ;main.c: 766:     checkSum = DHT11_ReadData();
  5889  0027E6  EC49  F016         	call	_DHT11_ReadData	;wreg free
  5890  0027EA  6E04               	movwf	??_dameTemperaturaHumedad^0,c
  5891  0027EC  5004               	movf	??_dameTemperaturaHumedad^0,w,c
  5892  0027EE  6E06               	movwf	dameTemperaturaHumedad@checkSum^0,c
  5893  0027F0  6A07               	clrf	(dameTemperaturaHumedad@checkSum+1)^0,c
  5894  0027F2                     
  5895                           ;main.c: 768:     if (checkSum != (humedad + humedadDecimal + temperatura + temperaturaD
      +                          ecimal))
  5896  0027F2  5008               	movf	dameTemperaturaHumedad@humedadDecimal^0,w,c
  5897  0027F4  C00A  F004         	movff	dameTemperaturaHumedad@humedad,??_dameTemperaturaHumedad
  5898  0027F8  6A05               	clrf	(??_dameTemperaturaHumedad+1)^0,c
  5899  0027FA  2604               	addwf	??_dameTemperaturaHumedad^0,f,c
  5900  0027FC  0E00               	movlw	0
  5901  0027FE  2205               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  5902  002800  500B               	movf	dameTemperaturaHumedad@temperatura^0,w,c
  5903  002802  2604               	addwf	??_dameTemperaturaHumedad^0,f,c
  5904  002804  0E00               	movlw	0
  5905  002806  2205               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  5906  002808  5009               	movf	dameTemperaturaHumedad@temperaturaDecimal^0,w,c
  5907  00280A  2604               	addwf	??_dameTemperaturaHumedad^0,f,c
  5908  00280C  0E00               	movlw	0
  5909  00280E  2205               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  5910  002810  5006               	movf	dameTemperaturaHumedad@checkSum^0,w,c
  5911  002812  1804               	xorwf	??_dameTemperaturaHumedad^0,w,c
  5912  002814  E109               	bnz	u2960
  5913  002816  5007               	movf	(dameTemperaturaHumedad@checkSum+1)^0,w,c
  5914  002818  1805               	xorwf	(??_dameTemperaturaHumedad+1)^0,w,c
  5915  00281A  B4D8               	btfsc	status,2,c
  5916  00281C  EF12  F014         	goto	u2961
  5917  002820  EF14  F014         	goto	u2960
  5918  002824                     u2961:
  5919  002824  EF1C  F014         	goto	l411
  5920  002828                     u2960:
  5921  002828                     
  5922                           ;main.c: 769:         UART_printf("Error de lectura DHT11\r\n");
  5923  002828  0E90               	movlw	low STR_46
  5924  00282A  6E02               	movwf	UART_printf@cadena^0,c
  5925  00282C  0E7E               	movlw	high STR_46
  5926  00282E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5927  002830  EC1A  F016         	call	_UART_printf	;wreg free
  5928  002834  EF20  F014         	goto	l412
  5929  002838                     l411:
  5930                           
  5931                           ;main.c: 771:         Humedad = humedad;
  5932  002838  C00A  F07E         	movff	dameTemperaturaHumedad@humedad,_Humedad
  5933                           
  5934                           ;main.c: 772:         Temperatura = temperatura;
  5935  00283C  C00B  F07F         	movff	dameTemperaturaHumedad@temperatura,_Temperatura
  5936  002840                     l412:
  5937                           
  5938                           ;main.c: 775:     PIE1bits.RCIE = 1;
  5939  002840  8A9D               	bsf	157,5,c	;volatile
  5940                           
  5941                           ;main.c: 776:     T0CONbits.TMR0ON = 1;
  5942  002842  8ED5               	bsf	213,7,c	;volatile
  5943  002844  0012               	return		;funcret
  5944  002846                     __end_of_dameTemperaturaHumedad:
  5945                           	opt callstack 0
  5946                           
  5947 ;; *************** function _check_response *****************
  5948 ;; Defined at:
  5949 ;;		line 38 in file "./DHT11.h"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;		None
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;  respuesta       1    0[COMRAM] unsigned char 
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  1    wreg      unsigned char 
  5956 ;; Registers used:
  5957 ;;		wreg, status,2
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5963 ;;      Params:         0       0       0       0       0       0       0       0       0
  5964 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5965 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5966 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5967 ;;Total ram usage:        1 bytes
  5968 ;; Hardware stack levels used:    1
  5969 ;; Hardware stack levels required when called:    1
  5970 ;; This function calls:
  5971 ;;		Nothing
  5972 ;; This function is called by:
  5973 ;;		_dameTemperaturaHumedad
  5974 ;; This function uses a non-reentrant model
  5975 ;;
  5976                           
  5977                           	psect	text23
  5978  002F72                     __ptext23:
  5979                           	opt callstack 0
  5980  002F72                     _check_response:
  5981                           	opt callstack 25
  5982  002F72                     
  5983                           ;./DHT11.h: 40:     unsigned char respuesta = 0;
  5984  002F72  0E00               	movlw	0
  5985  002F74  6E01               	movwf	check_response@respuesta^0,c
  5986  002F76                     
  5987                           ;./DHT11.h: 41:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  5988  002F76  0E0D               	movlw	13
  5989  002F78                     u3877:
  5990  002F78  2EE8               	decfsz	wreg,f,c
  5991  002F7A  D7FE               	bra	u3877
  5992  002F7C  F000               	nop	
  5993  002F7E                     
  5994                           ;./DHT11.h: 42:     if (!PORTDbits.RD7) {
  5995  002F7E  BE83               	btfsc	131,7,c	;volatile
  5996  002F80  EFC4  F017         	goto	u2841
  5997  002F84  EFC6  F017         	goto	u2840
  5998  002F88                     u2841:
  5999  002F88  EFD7  F017         	goto	l3797
  6000  002F8C                     u2840:
  6001  002F8C                     
  6002                           ;./DHT11.h: 43:         _delay((unsigned long)((80)*(4000000/4000000.0)));
  6003  002F8C  0E1A               	movlw	26
  6004  002F8E                     u3887:
  6005  002F8E  2EE8               	decfsz	wreg,f,c
  6006  002F90  D7FE               	bra	u3887
  6007  002F92  D000               	nop2	
  6008  002F94                     
  6009                           ;./DHT11.h: 44:         if (PORTDbits.RD7) {
  6010  002F94  AE83               	btfss	131,7,c	;volatile
  6011  002F96  EFCF  F017         	goto	u2851
  6012  002F9A  EFD1  F017         	goto	u2850
  6013  002F9E                     u2851:
  6014  002F9E  EFD7  F017         	goto	l3797
  6015  002FA2                     u2850:
  6016  002FA2                     
  6017                           ;./DHT11.h: 45:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  6018  002FA2  0E10               	movlw	16
  6019  002FA4                     u3897:
  6020  002FA4  2EE8               	decfsz	wreg,f,c
  6021  002FA6  D7FE               	bra	u3897
  6022  002FA8  D000               	nop2	
  6023  002FAA                     
  6024                           ;./DHT11.h: 46:             respuesta = 1;
  6025  002FAA  0E01               	movlw	1
  6026  002FAC  6E01               	movwf	check_response@respuesta^0,c
  6027  002FAE                     l3797:
  6028                           
  6029                           ;./DHT11.h: 50:     return respuesta;
  6030  002FAE  5001               	movf	check_response@respuesta^0,w,c
  6031  002FB0  0012               	return		;funcret
  6032  002FB2                     __end_of_check_response:
  6033                           	opt callstack 0
  6034                           
  6035 ;; *************** function _DHT11_Start *****************
  6036 ;; Defined at:
  6037 ;;		line 23 in file "./DHT11.h"
  6038 ;; Parameters:    Size  Location     Type
  6039 ;;		None
  6040 ;; Auto vars:     Size  Location     Type
  6041 ;;		None
  6042 ;; Return value:  Size  Location     Type
  6043 ;;                  1    wreg      void 
  6044 ;; Registers used:
  6045 ;;		wreg
  6046 ;; Tracked objects:
  6047 ;;		On entry : 0/0
  6048 ;;		On exit  : 0/0
  6049 ;;		Unchanged: 0/0
  6050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6051 ;;      Params:         0       0       0       0       0       0       0       0       0
  6052 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6053 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6054 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6055 ;;Total ram usage:        1 bytes
  6056 ;; Hardware stack levels used:    1
  6057 ;; Hardware stack levels required when called:    1
  6058 ;; This function calls:
  6059 ;;		Nothing
  6060 ;; This function is called by:
  6061 ;;		_dameTemperaturaHumedad
  6062 ;; This function uses a non-reentrant model
  6063 ;;
  6064                           
  6065                           	psect	text24
  6066  003234                     __ptext24:
  6067                           	opt callstack 0
  6068  003234                     _DHT11_Start:
  6069                           	opt callstack 25
  6070  003234                     
  6071                           ;./DHT11.h: 24:     TRISDbits.RD7 = 0;
  6072  003234  9E95               	bcf	149,7,c	;volatile
  6073                           
  6074                           ;./DHT11.h: 26:     LATDbits.LATD7 = 0;
  6075  003236  9E8C               	bcf	140,7,c	;volatile
  6076  003238                     
  6077                           ;./DHT11.h: 28:     _delay((unsigned long)((20)*(4000000/4000.0)));
  6078  003238  0E1A               	movlw	26
  6079  00323A  6E01               	movwf	??_DHT11_Start^0,c
  6080  00323C  0EF8               	movlw	248
  6081  00323E                     u3907:
  6082  00323E  2EE8               	decfsz	wreg,f,c
  6083  003240  D7FE               	bra	u3907
  6084  003242  2E01               	decfsz	??_DHT11_Start^0,f,c
  6085  003244  D7FC               	bra	u3907
  6086  003246  D000               	nop2	
  6087  003248                     
  6088                           ;./DHT11.h: 30:     LATDbits.LATD7 = 1;
  6089  003248  8E8C               	bsf	140,7,c	;volatile
  6090                           
  6091                           ;./DHT11.h: 32:     _delay((unsigned long)((30)*(4000000/4000000.0)));
  6092  00324A  0E0A               	movlw	10
  6093  00324C                     u3917:
  6094  00324C  2EE8               	decfsz	wreg,f,c
  6095  00324E  D7FE               	bra	u3917
  6096  003250                     
  6097                           ;./DHT11.h: 34:     TRISDbits.RD7 = 1;
  6098  003250  8E95               	bsf	149,7,c	;volatile
  6099  003252  0012               	return		;funcret
  6100  003254                     __end_of_DHT11_Start:
  6101                           	opt callstack 0
  6102                           
  6103 ;; *************** function _DHT11_ReadData *****************
  6104 ;; Defined at:
  6105 ;;		line 9 in file "./DHT11.h"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;		None
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;  data            1    1[COMRAM] unsigned char 
  6110 ;;  i               1    0[COMRAM] unsigned char 
  6111 ;; Return value:  Size  Location     Type
  6112 ;;                  1    wreg      unsigned char 
  6113 ;; Registers used:
  6114 ;;		wreg, status,2, status,0
  6115 ;; Tracked objects:
  6116 ;;		On entry : 0/0
  6117 ;;		On exit  : 0/0
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6120 ;;      Params:         0       0       0       0       0       0       0       0       0
  6121 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6123 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6124 ;;Total ram usage:        2 bytes
  6125 ;; Hardware stack levels used:    1
  6126 ;; Hardware stack levels required when called:    1
  6127 ;; This function calls:
  6128 ;;		Nothing
  6129 ;; This function is called by:
  6130 ;;		_dameTemperaturaHumedad
  6131 ;; This function uses a non-reentrant model
  6132 ;;
  6133                           
  6134                           	psect	text25
  6135  002C92                     __ptext25:
  6136                           	opt callstack 0
  6137  002C92                     _DHT11_ReadData:
  6138                           	opt callstack 25
  6139  002C92                     
  6140                           ;./DHT11.h: 10:     char i, data = 0;
  6141  002C92  0E00               	movlw	0
  6142  002C94  6E02               	movwf	DHT11_ReadData@data^0,c
  6143                           
  6144                           ;./DHT11.h: 11:     for (i = 0; i < 8; i++) {
  6145  002C96  0E00               	movlw	0
  6146  002C98  6E01               	movwf	DHT11_ReadData@i^0,c
  6147  002C9A                     l152:
  6148  002C9A  AE83               	btfss	131,7,c	;volatile
  6149  002C9C  EF52  F016         	goto	u2801
  6150  002CA0  EF54  F016         	goto	u2800
  6151  002CA4                     u2801:
  6152  002CA4  EF4D  F016         	goto	l152
  6153  002CA8                     u2800:
  6154  002CA8                     
  6155                           ;./DHT11.h: 13:         _delay((unsigned long)((30)*(4000000/4000000.0)));
  6156  002CA8  0E0A               	movlw	10
  6157  002CAA                     u3927:
  6158  002CAA  2EE8               	decfsz	wreg,f,c
  6159  002CAC  D7FE               	bra	u3927
  6160  002CAE                     
  6161                           ;./DHT11.h: 14:         if (PORTDbits.RD7 & 1)
  6162  002CAE  AE83               	btfss	131,7,c	;volatile
  6163  002CB0  EF5C  F016         	goto	u2811
  6164  002CB4  EF5E  F016         	goto	u2810
  6165  002CB8                     u2811:
  6166  002CB8  EF62  F016         	goto	l3765
  6167  002CBC                     u2810:
  6168  002CBC                     
  6169                           ;./DHT11.h: 15:             data = ((data << 1) | 1);
  6170  002CBC  80D8               	bsf	status,0,c
  6171  002CBE  3602               	rlcf	DHT11_ReadData@data^0,f,c
  6172  002CC0  EF65  F016         	goto	l157
  6173  002CC4                     l3765:
  6174                           
  6175                           ;./DHT11.h: 17:             data = (data << 1);
  6176  002CC4  5002               	movf	DHT11_ReadData@data^0,w,c
  6177  002CC6  2402               	addwf	DHT11_ReadData@data^0,w,c
  6178  002CC8  6E02               	movwf	DHT11_ReadData@data^0,c
  6179  002CCA                     l157:
  6180  002CCA  BE83               	btfsc	131,7,c	;volatile
  6181  002CCC  EF6A  F016         	goto	u2821
  6182  002CD0  EF6C  F016         	goto	u2820
  6183  002CD4                     u2821:
  6184  002CD4  EF65  F016         	goto	l157
  6185  002CD8                     u2820:
  6186  002CD8                     
  6187                           ;./DHT11.h: 19:     }
  6188  002CD8  2A01               	incf	DHT11_ReadData@i^0,f,c
  6189  002CDA  0E07               	movlw	7
  6190  002CDC  6401               	cpfsgt	DHT11_ReadData@i^0,c
  6191  002CDE  EF73  F016         	goto	u2831
  6192  002CE2  EF75  F016         	goto	u2830
  6193  002CE6                     u2831:
  6194  002CE6  EF4D  F016         	goto	l152
  6195  002CEA                     u2830:
  6196  002CEA                     
  6197                           ;./DHT11.h: 20:     return data;
  6198  002CEA  5002               	movf	DHT11_ReadData@data^0,w,c
  6199  002CEC  0012               	return		;funcret
  6200  002CEE                     __end_of_DHT11_ReadData:
  6201                           	opt callstack 0
  6202                           
  6203 ;; *************** function _fijaHoraRtc *****************
  6204 ;; Defined at:
  6205 ;;		line 370 in file "main.c"
  6206 ;; Parameters:    Size  Location     Type
  6207 ;;		None
  6208 ;; Auto vars:     Size  Location     Type
  6209 ;;		None
  6210 ;; Return value:  Size  Location     Type
  6211 ;;                  1    wreg      void 
  6212 ;; Registers used:
  6213 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6214 ;; Tracked objects:
  6215 ;;		On entry : 0/0
  6216 ;;		On exit  : 0/0
  6217 ;;		Unchanged: 0/0
  6218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6219 ;;      Params:         0       0       0       0       0       0       0       0       0
  6220 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6221 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6222 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6223 ;;Total ram usage:        0 bytes
  6224 ;; Hardware stack levels used:    1
  6225 ;; Hardware stack levels required when called:    5
  6226 ;; This function calls:
  6227 ;;		_UART_printf
  6228 ;;		_escribe_rtc
  6229 ;;		_setRtc
  6230 ;; This function is called by:
  6231 ;;		_sistemaPrincipal
  6232 ;; This function uses a non-reentrant model
  6233 ;;
  6234                           
  6235                           	psect	text26
  6236  002B08                     __ptext26:
  6237                           	opt callstack 0
  6238  002B08                     _fijaHoraRtc:
  6239                           	opt callstack 24
  6240  002B08                     
  6241                           ;main.c: 372:     UART_printf("\r\n FIJA HORA \r\n");
  6242  002B08  0EB7               	movlw	low STR_3
  6243  002B0A  6E02               	movwf	UART_printf@cadena^0,c
  6244  002B0C  0E7F               	movlw	high STR_3
  6245  002B0E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6246  002B10  EC1A  F016         	call	_UART_printf	;wreg free
  6247                           
  6248                           ;main.c: 375:     UART_printf("\r\n Envie las Horas en formato 24 Ej: 15 \r\n");
  6249  002B14  0E77               	movlw	low STR_4
  6250  002B16  6E02               	movwf	UART_printf@cadena^0,c
  6251  002B18  0E7B               	movlw	high STR_4
  6252  002B1A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6253  002B1C  EC1A  F016         	call	_UART_printf	;wreg free
  6254  002B20                     
  6255                           ;main.c: 378:     if (setRtc(0x02)) {
  6256  002B20  0E02               	movlw	2
  6257  002B22  ECDF  F014         	call	_setRtc
  6258  002B26  0900               	iorlw	0
  6259  002B28  B4D8               	btfsc	status,2,c
  6260  002B2A  EF99  F015         	goto	u3451
  6261  002B2E  EF9B  F015         	goto	u3450
  6262  002B32                     u3451:
  6263  002B32  EFB7  F015         	goto	l311
  6264  002B36                     u3450:
  6265  002B36                     
  6266                           ;main.c: 379:         UART_printf("\r\n Envie los Minutos Ej: 25 \r\n");
  6267  002B36  0E9B               	movlw	low STR_5
  6268  002B38  6E02               	movwf	UART_printf@cadena^0,c
  6269  002B3A  0E7D               	movlw	high STR_5
  6270  002B3C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6271  002B3E  EC1A  F016         	call	_UART_printf	;wreg free
  6272  002B42                     
  6273                           ;main.c: 380:         if (setRtc(0x01)) {
  6274  002B42  0E01               	movlw	1
  6275  002B44  ECDF  F014         	call	_setRtc
  6276  002B48  0900               	iorlw	0
  6277  002B4A  B4D8               	btfsc	status,2,c
  6278  002B4C  EFAA  F015         	goto	u3461
  6279  002B50  EFAC  F015         	goto	u3460
  6280  002B54                     u3461:
  6281  002B54  EFB7  F015         	goto	l311
  6282  002B58                     u3460:
  6283  002B58                     
  6284                           ;main.c: 381:             UART_printf("\r\n HORA ESTABLECIDA CORRECTAMENTE \r\n");
  6285  002B58  0E62               	movlw	low STR_6
  6286  002B5A  6E02               	movwf	UART_printf@cadena^0,c
  6287  002B5C  0E7C               	movlw	high STR_6
  6288  002B5E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6289  002B60  EC1A  F016         	call	_UART_printf	;wreg free
  6290  002B64                     
  6291                           ;main.c: 382:             escribe_rtc(0x00, 0);
  6292  002B64  0E00               	movlw	0
  6293  002B66  6E03               	movwf	escribe_rtc@dato^0,c
  6294  002B68  0E00               	movlw	0
  6295  002B6A  EC2A  F019         	call	_escribe_rtc
  6296  002B6E                     l311:
  6297  002B6E  0012               	return		;funcret
  6298  002B70                     __end_of_fijaHoraRtc:
  6299                           	opt callstack 0
  6300                           
  6301 ;; *************** function _fijaDiaRtc *****************
  6302 ;; Defined at:
  6303 ;;		line 193 in file "main.c"
  6304 ;; Parameters:    Size  Location     Type
  6305 ;;		None
  6306 ;; Auto vars:     Size  Location     Type
  6307 ;;		None
  6308 ;; Return value:  Size  Location     Type
  6309 ;;                  1    wreg      void 
  6310 ;; Registers used:
  6311 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6312 ;; Tracked objects:
  6313 ;;		On entry : 0/0
  6314 ;;		On exit  : 0/0
  6315 ;;		Unchanged: 0/0
  6316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6317 ;;      Params:         0       0       0       0       0       0       0       0       0
  6318 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6319 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6320 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6321 ;;Total ram usage:        0 bytes
  6322 ;; Hardware stack levels used:    1
  6323 ;; Hardware stack levels required when called:    5
  6324 ;; This function calls:
  6325 ;;		_UART_printf
  6326 ;;		_setRtc
  6327 ;; This function is called by:
  6328 ;;		_sistemaPrincipal
  6329 ;; This function uses a non-reentrant model
  6330 ;;
  6331                           
  6332                           	psect	text27
  6333  003112                     __ptext27:
  6334                           	opt callstack 0
  6335  003112                     _fijaDiaRtc:
  6336                           	opt callstack 24
  6337  003112                     
  6338                           ;main.c: 195:     UART_printf("\r\n Envie el dia de la semana Ej: 01 = DOMINGO ... 07 = 
      +                          SABADO \r\n");
  6339  003112  0E8B               	movlw	low STR_1
  6340  003114  6E02               	movwf	UART_printf@cadena^0,c
  6341  003116  0E79               	movlw	high STR_1
  6342  003118  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6343  00311A  EC1A  F016         	call	_UART_printf	;wreg free
  6344  00311E                     
  6345                           ;main.c: 197:     if (setRtc(0x03)) {
  6346  00311E  0E03               	movlw	3
  6347  003120  ECDF  F014         	call	_setRtc
  6348  003124  0900               	iorlw	0
  6349  003126  B4D8               	btfsc	status,2,c
  6350  003128  EF98  F018         	goto	u3341
  6351  00312C  EF9A  F018         	goto	u3340
  6352  003130                     u3341:
  6353  003130  EFA0  F018         	goto	l255
  6354  003134                     u3340:
  6355  003134                     
  6356                           ;main.c: 198:         UART_printf("\r\n DIA ESTABLECIDO CORRECTAMENTE \r\n");
  6357  003134  0ED1               	movlw	low STR_2
  6358  003136  6E02               	movwf	UART_printf@cadena^0,c
  6359  003138  0E7C               	movlw	high STR_2
  6360  00313A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6361  00313C  EC1A  F016         	call	_UART_printf	;wreg free
  6362  003140                     l255:
  6363  003140  0012               	return		;funcret
  6364  003142                     __end_of_fijaDiaRtc:
  6365                           	opt callstack 0
  6366                           
  6367 ;; *************** function _setRtc *****************
  6368 ;; Defined at:
  6369 ;;		line 203 in file "main.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;  direccion       1    wreg     unsigned char 
  6372 ;; Auto vars:     Size  Location     Type
  6373 ;;  direccion       1   14[COMRAM] unsigned char 
  6374 ;;  dato            1   17[COMRAM] unsigned char 
  6375 ;;  datoRtc         1   16[COMRAM] unsigned char 
  6376 ;;  seteado         1   15[COMRAM] unsigned char 
  6377 ;; Return value:  Size  Location     Type
  6378 ;;                  1    wreg      unsigned char 
  6379 ;; Registers used:
  6380 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6386 ;;      Params:         0       0       0       0       0       0       0       0       0
  6387 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6388 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6389 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6390 ;;Total ram usage:        4 bytes
  6391 ;; Hardware stack levels used:    1
  6392 ;; Hardware stack levels required when called:    4
  6393 ;; This function calls:
  6394 ;;		___awdiv
  6395 ;;		___awmod
  6396 ;;		_escribe_rtc
  6397 ;;		_getValue
  6398 ;; This function is called by:
  6399 ;;		_fijaDiaRtc
  6400 ;;		_fijaHoraRtc
  6401 ;; This function uses a non-reentrant model
  6402 ;;
  6403                           
  6404                           	psect	text28
  6405  0029BE                     __ptext28:
  6406                           	opt callstack 0
  6407  0029BE                     _setRtc:
  6408                           	opt callstack 24
  6409                           
  6410                           ;incstack = 0
  6411                           ;setRtc@direccion stored from wreg
  6412  0029BE  6E0F               	movwf	setRtc@direccion^0,c
  6413  0029C0                     
  6414                           ;main.c: 206:     unsigned char seteado = 0;
  6415  0029C0  0E00               	movlw	0
  6416  0029C2  6E10               	movwf	setRtc@seteado^0,c
  6417                           
  6418                           ;main.c: 207:     unsigned char datoRtc = 0;
  6419  0029C4  0E00               	movlw	0
  6420  0029C6  6E11               	movwf	setRtc@datoRtc^0,c
  6421  0029C8                     
  6422                           ;main.c: 209:     dato = getValue(2);
  6423  0029C8  0E00               	movlw	0
  6424  0029CA  6E05               	movwf	(getValue@numCharacters+1)^0,c
  6425  0029CC  0E02               	movlw	2
  6426  0029CE  6E04               	movwf	getValue@numCharacters^0,c
  6427  0029D0  ECE8  F006         	call	_getValue	;wreg free
  6428  0029D4  6E12               	movwf	setRtc@dato^0,c
  6429  0029D6                     
  6430                           ;main.c: 211:     if (dato != '@') {
  6431  0029D6  0E40               	movlw	64
  6432  0029D8  1812               	xorwf	setRtc@dato^0,w,c
  6433  0029DA  B4D8               	btfsc	status,2,c
  6434  0029DC  EFF2  F014         	goto	u3241
  6435  0029E0  EFF4  F014         	goto	u3240
  6436  0029E4                     u3241:
  6437  0029E4  EF15  F015         	goto	l4191
  6438  0029E8                     u3240:
  6439  0029E8                     
  6440                           ;main.c: 213:         datoRtc = ((dato / 10) & 0x0F) << 4;
  6441  0029E8  C012  F001         	movff	setRtc@dato,___awdiv@dividend
  6442  0029EC  6A02               	clrf	(___awdiv@dividend+1)^0,c
  6443  0029EE  0E00               	movlw	0
  6444  0029F0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6445  0029F2  0E0A               	movlw	10
  6446  0029F4  6E03               	movwf	___awdiv@divisor^0,c
  6447  0029F6  EC2E  F012         	call	___awdiv	;wreg free
  6448  0029FA  0E0F               	movlw	15
  6449  0029FC  1601               	andwf	?___awdiv^0,f,c
  6450  0029FE  3801               	swapf	?___awdiv^0,w,c
  6451  002A00  0BF0               	andlw	240
  6452  002A02  6E11               	movwf	setRtc@datoRtc^0,c
  6453                           
  6454                           ;main.c: 214:         datoRtc |= (dato % 10) & 0x0F;
  6455  002A04  C012  F001         	movff	setRtc@dato,___awmod@dividend
  6456  002A08  6A02               	clrf	(___awmod@dividend+1)^0,c
  6457  002A0A  0E00               	movlw	0
  6458  002A0C  6E04               	movwf	(___awmod@divisor+1)^0,c
  6459  002A0E  0E0A               	movlw	10
  6460  002A10  6E03               	movwf	___awmod@divisor^0,c
  6461  002A12  EC90  F012         	call	___awmod	;wreg free
  6462  002A16  5001               	movf	?___awmod^0,w,c
  6463  002A18  0B0F               	andlw	15
  6464  002A1A  1211               	iorwf	setRtc@datoRtc^0,f,c
  6465                           
  6466                           ;main.c: 215:         escribe_rtc(direccion, datoRtc);
  6467  002A1C  C011  F003         	movff	setRtc@datoRtc,escribe_rtc@dato
  6468  002A20  500F               	movf	setRtc@direccion^0,w,c
  6469  002A22  EC2A  F019         	call	_escribe_rtc
  6470  002A26                     
  6471                           ;main.c: 216:         seteado = 1;
  6472  002A26  0E01               	movlw	1
  6473  002A28  6E10               	movwf	setRtc@seteado^0,c
  6474  002A2A                     l4191:
  6475                           
  6476                           ;main.c: 219:     return seteado;
  6477  002A2A  5010               	movf	setRtc@seteado^0,w,c
  6478  002A2C  0012               	return		;funcret
  6479  002A2E                     __end_of_setRtc:
  6480                           	opt callstack 0
  6481                           
  6482 ;; *************** function _escribe_rtc *****************
  6483 ;; Defined at:
  6484 ;;		line 2 in file "./RTC.h"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;  direccion       1    wreg     unsigned char 
  6487 ;;  dato            1    2[COMRAM] unsigned char 
  6488 ;; Auto vars:     Size  Location     Type
  6489 ;;  direccion       1    3[COMRAM] unsigned char 
  6490 ;; Return value:  Size  Location     Type
  6491 ;;                  1    wreg      void 
  6492 ;; Registers used:
  6493 ;;		wreg, status,2, status,0, cstack
  6494 ;; Tracked objects:
  6495 ;;		On entry : 0/0
  6496 ;;		On exit  : 0/0
  6497 ;;		Unchanged: 0/0
  6498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6499 ;;      Params:         1       0       0       0       0       0       0       0       0
  6500 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6501 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6502 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6503 ;;Total ram usage:        2 bytes
  6504 ;; Hardware stack levels used:    1
  6505 ;; Hardware stack levels required when called:    3
  6506 ;; This function calls:
  6507 ;;		_i2c_detener
  6508 ;;		_i2c_envia_dato
  6509 ;;		_i2c_inicia_com
  6510 ;; This function is called by:
  6511 ;;		_setRtc
  6512 ;;		_fijaHoraRtc
  6513 ;;		_setRtcDefault
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517                           	psect	text29
  6518  003254                     __ptext29:
  6519                           	opt callstack 0
  6520  003254                     _escribe_rtc:
  6521                           	opt callstack 24
  6522                           
  6523                           ;incstack = 0
  6524                           ;escribe_rtc@direccion stored from wreg
  6525  003254  6E04               	movwf	escribe_rtc@direccion^0,c
  6526  003256                     
  6527                           ;./RTC.h: 3:     i2c_inicia_com();
  6528  003256  EC7E  F019         	call	_i2c_inicia_com	;wreg free
  6529                           
  6530                           ;./RTC.h: 4:     i2c_envia_dato(0xD0);
  6531  00325A  0ED0               	movlw	208
  6532  00325C  EC64  F019         	call	_i2c_envia_dato
  6533                           
  6534                           ;./RTC.h: 5:     i2c_envia_dato(direccion);
  6535  003260  5004               	movf	escribe_rtc@direccion^0,w,c
  6536  003262  EC64  F019         	call	_i2c_envia_dato
  6537                           
  6538                           ;./RTC.h: 6:     i2c_envia_dato(dato);
  6539  003266  5003               	movf	escribe_rtc@dato^0,w,c
  6540  003268  EC64  F019         	call	_i2c_envia_dato
  6541                           
  6542                           ;./RTC.h: 7:     i2c_detener();
  6543  00326C  EC82  F019         	call	_i2c_detener	;wreg free
  6544  003270  0012               	return		;funcret
  6545  003272                     __end_of_escribe_rtc:
  6546                           	opt callstack 0
  6547                           
  6548 ;; *************** function ___awmod *****************
  6549 ;; Defined at:
  6550 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  6551 ;; Parameters:    Size  Location     Type
  6552 ;;  dividend        2    0[COMRAM] int 
  6553 ;;  divisor         2    2[COMRAM] int 
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;  sign            1    5[COMRAM] unsigned char 
  6556 ;;  counter         1    4[COMRAM] unsigned char 
  6557 ;; Return value:  Size  Location     Type
  6558 ;;                  2    0[COMRAM] int 
  6559 ;; Registers used:
  6560 ;;		wreg, status,2, status,0
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6566 ;;      Params:         4       0       0       0       0       0       0       0       0
  6567 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6568 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6569 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6570 ;;Total ram usage:        6 bytes
  6571 ;; Hardware stack levels used:    1
  6572 ;; Hardware stack levels required when called:    1
  6573 ;; This function calls:
  6574 ;;		Nothing
  6575 ;; This function is called by:
  6576 ;;		_setRtc
  6577 ;; This function uses a non-reentrant model
  6578 ;;
  6579                           
  6580                           	psect	text30
  6581  002520                     __ptext30:
  6582                           	opt callstack 0
  6583  002520                     ___awmod:
  6584                           	opt callstack 26
  6585  002520  0E00               	movlw	0
  6586  002522  6E06               	movwf	___awmod@sign^0,c
  6587  002524  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6588  002526  EF99  F012         	goto	u3160
  6589  00252A  EF97  F012         	goto	u3161
  6590  00252E                     u3161:
  6591  00252E  EF9F  F012         	goto	l4123
  6592  002532                     u3160:
  6593  002532  6C01               	negf	___awmod@dividend^0,c
  6594  002534  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6595  002536  B0D8               	btfsc	status,0,c
  6596  002538  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6597  00253A  0E01               	movlw	1
  6598  00253C  6E06               	movwf	___awmod@sign^0,c
  6599  00253E                     l4123:
  6600  00253E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6601  002540  EFA6  F012         	goto	u3170
  6602  002544  EFA4  F012         	goto	u3171
  6603  002548                     u3171:
  6604  002548  EFAA  F012         	goto	l4127
  6605  00254C                     u3170:
  6606  00254C  6C03               	negf	___awmod@divisor^0,c
  6607  00254E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6608  002550  B0D8               	btfsc	status,0,c
  6609  002552  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6610  002554                     l4127:
  6611  002554  5003               	movf	___awmod@divisor^0,w,c
  6612  002556  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6613  002558  B4D8               	btfsc	status,2,c
  6614  00255A  EFB1  F012         	goto	u3181
  6615  00255E  EFB3  F012         	goto	u3180
  6616  002562                     u3181:
  6617  002562  EFD7  F012         	goto	l4143
  6618  002566                     u3180:
  6619  002566  0E01               	movlw	1
  6620  002568  6E05               	movwf	___awmod@counter^0,c
  6621  00256A  EFBB  F012         	goto	l4133
  6622  00256E                     l4131:
  6623  00256E  90D8               	bcf	status,0,c
  6624  002570  3603               	rlcf	___awmod@divisor^0,f,c
  6625  002572  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6626  002574  2A05               	incf	___awmod@counter^0,f,c
  6627  002576                     l4133:
  6628  002576  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6629  002578  EFC0  F012         	goto	u3191
  6630  00257C  EFC2  F012         	goto	u3190
  6631  002580                     u3191:
  6632  002580  EFB7  F012         	goto	l4131
  6633  002584                     u3190:
  6634  002584                     l4135:
  6635  002584  5003               	movf	___awmod@divisor^0,w,c
  6636  002586  5C01               	subwf	___awmod@dividend^0,w,c
  6637  002588  5004               	movf	(___awmod@divisor+1)^0,w,c
  6638  00258A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6639  00258C  A0D8               	btfss	status,0,c
  6640  00258E  EFCB  F012         	goto	u3201
  6641  002592  EFCD  F012         	goto	u3200
  6642  002596                     u3201:
  6643  002596  EFD1  F012         	goto	l4139
  6644  00259A                     u3200:
  6645  00259A  5003               	movf	___awmod@divisor^0,w,c
  6646  00259C  5E01               	subwf	___awmod@dividend^0,f,c
  6647  00259E  5004               	movf	(___awmod@divisor+1)^0,w,c
  6648  0025A0  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6649  0025A2                     l4139:
  6650  0025A2  90D8               	bcf	status,0,c
  6651  0025A4  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6652  0025A6  3203               	rrcf	___awmod@divisor^0,f,c
  6653  0025A8  2E05               	decfsz	___awmod@counter^0,f,c
  6654  0025AA  EFC2  F012         	goto	l4135
  6655  0025AE                     l4143:
  6656  0025AE  5006               	movf	___awmod@sign^0,w,c
  6657  0025B0  B4D8               	btfsc	status,2,c
  6658  0025B2  EFDD  F012         	goto	u3211
  6659  0025B6  EFDF  F012         	goto	u3210
  6660  0025BA                     u3211:
  6661  0025BA  EFE3  F012         	goto	l4147
  6662  0025BE                     u3210:
  6663  0025BE  6C01               	negf	___awmod@dividend^0,c
  6664  0025C0  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6665  0025C2  B0D8               	btfsc	status,0,c
  6666  0025C4  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6667  0025C6                     l4147:
  6668  0025C6  C001  F001         	movff	___awmod@dividend,?___awmod
  6669  0025CA  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6670  0025CE  0012               	return		;funcret
  6671  0025D0                     __end_of___awmod:
  6672                           	opt callstack 0
  6673                           
  6674 ;; *************** function ___awdiv *****************
  6675 ;; Defined at:
  6676 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;  dividend        2    0[COMRAM] int 
  6679 ;;  divisor         2    2[COMRAM] int 
  6680 ;; Auto vars:     Size  Location     Type
  6681 ;;  quotient        2    6[COMRAM] int 
  6682 ;;  sign            1    5[COMRAM] unsigned char 
  6683 ;;  counter         1    4[COMRAM] unsigned char 
  6684 ;; Return value:  Size  Location     Type
  6685 ;;                  2    0[COMRAM] int 
  6686 ;; Registers used:
  6687 ;;		wreg, status,2, status,0
  6688 ;; Tracked objects:
  6689 ;;		On entry : 0/0
  6690 ;;		On exit  : 0/0
  6691 ;;		Unchanged: 0/0
  6692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6693 ;;      Params:         4       0       0       0       0       0       0       0       0
  6694 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6695 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6696 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6697 ;;Total ram usage:        8 bytes
  6698 ;; Hardware stack levels used:    1
  6699 ;; Hardware stack levels required when called:    1
  6700 ;; This function calls:
  6701 ;;		Nothing
  6702 ;; This function is called by:
  6703 ;;		_setRtc
  6704 ;; This function uses a non-reentrant model
  6705 ;;
  6706                           
  6707                           	psect	text31
  6708  00245C                     __ptext31:
  6709                           	opt callstack 0
  6710  00245C                     ___awdiv:
  6711                           	opt callstack 26
  6712  00245C  0E00               	movlw	0
  6713  00245E  6E06               	movwf	___awdiv@sign^0,c
  6714  002460  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6715  002462  EF37  F012         	goto	u3100
  6716  002466  EF35  F012         	goto	u3101
  6717  00246A                     u3101:
  6718  00246A  EF3D  F012         	goto	l4079
  6719  00246E                     u3100:
  6720  00246E  6C03               	negf	___awdiv@divisor^0,c
  6721  002470  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6722  002472  B0D8               	btfsc	status,0,c
  6723  002474  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6724  002476  0E01               	movlw	1
  6725  002478  6E06               	movwf	___awdiv@sign^0,c
  6726  00247A                     l4079:
  6727  00247A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6728  00247C  EF44  F012         	goto	u3110
  6729  002480  EF42  F012         	goto	u3111
  6730  002484                     u3111:
  6731  002484  EF4A  F012         	goto	l4085
  6732  002488                     u3110:
  6733  002488  6C01               	negf	___awdiv@dividend^0,c
  6734  00248A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6735  00248C  B0D8               	btfsc	status,0,c
  6736  00248E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6737  002490  0E01               	movlw	1
  6738  002492  1A06               	xorwf	___awdiv@sign^0,f,c
  6739  002494                     l4085:
  6740  002494  0E00               	movlw	0
  6741  002496  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6742  002498  0E00               	movlw	0
  6743  00249A  6E07               	movwf	___awdiv@quotient^0,c
  6744  00249C  5003               	movf	___awdiv@divisor^0,w,c
  6745  00249E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6746  0024A0  B4D8               	btfsc	status,2,c
  6747  0024A2  EF55  F012         	goto	u3121
  6748  0024A6  EF57  F012         	goto	u3120
  6749  0024AA                     u3121:
  6750  0024AA  EF7F  F012         	goto	l4107
  6751  0024AE                     u3120:
  6752  0024AE  0E01               	movlw	1
  6753  0024B0  6E05               	movwf	___awdiv@counter^0,c
  6754  0024B2  EF5F  F012         	goto	l4093
  6755  0024B6                     l4091:
  6756  0024B6  90D8               	bcf	status,0,c
  6757  0024B8  3603               	rlcf	___awdiv@divisor^0,f,c
  6758  0024BA  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6759  0024BC  2A05               	incf	___awdiv@counter^0,f,c
  6760  0024BE                     l4093:
  6761  0024BE  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6762  0024C0  EF64  F012         	goto	u3131
  6763  0024C4  EF66  F012         	goto	u3130
  6764  0024C8                     u3131:
  6765  0024C8  EF5B  F012         	goto	l4091
  6766  0024CC                     u3130:
  6767  0024CC                     l4095:
  6768  0024CC  90D8               	bcf	status,0,c
  6769  0024CE  3607               	rlcf	___awdiv@quotient^0,f,c
  6770  0024D0  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6771  0024D2  5003               	movf	___awdiv@divisor^0,w,c
  6772  0024D4  5C01               	subwf	___awdiv@dividend^0,w,c
  6773  0024D6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6774  0024D8  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6775  0024DA  A0D8               	btfss	status,0,c
  6776  0024DC  EF72  F012         	goto	u3141
  6777  0024E0  EF74  F012         	goto	u3140
  6778  0024E4                     u3141:
  6779  0024E4  EF79  F012         	goto	l4103
  6780  0024E8                     u3140:
  6781  0024E8  5003               	movf	___awdiv@divisor^0,w,c
  6782  0024EA  5E01               	subwf	___awdiv@dividend^0,f,c
  6783  0024EC  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6784  0024EE  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6785  0024F0  8007               	bsf	___awdiv@quotient^0,0,c
  6786  0024F2                     l4103:
  6787  0024F2  90D8               	bcf	status,0,c
  6788  0024F4  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6789  0024F6  3203               	rrcf	___awdiv@divisor^0,f,c
  6790  0024F8  2E05               	decfsz	___awdiv@counter^0,f,c
  6791  0024FA  EF66  F012         	goto	l4095
  6792  0024FE                     l4107:
  6793  0024FE  5006               	movf	___awdiv@sign^0,w,c
  6794  002500  B4D8               	btfsc	status,2,c
  6795  002502  EF85  F012         	goto	u3151
  6796  002506  EF87  F012         	goto	u3150
  6797  00250A                     u3151:
  6798  00250A  EF8B  F012         	goto	l4111
  6799  00250E                     u3150:
  6800  00250E  6C07               	negf	___awdiv@quotient^0,c
  6801  002510  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6802  002512  B0D8               	btfsc	status,0,c
  6803  002514  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6804  002516                     l4111:
  6805  002516  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6806  00251A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6807  00251E  0012               	return		;funcret
  6808  002520                     __end_of___awdiv:
  6809                           	opt callstack 0
  6810                           
  6811 ;; *************** function _dameDatosSistema *****************
  6812 ;; Defined at:
  6813 ;;		line 675 in file "main.c"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;		None
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;  i               2   66[BANK0 ] int 
  6818 ;;  bufferHorari   30   28[BANK0 ] unsigned char [30]
  6819 ;; Return value:  Size  Location     Type
  6820 ;;                  1    wreg      void 
  6821 ;; Registers used:
  6822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6823 ;; Tracked objects:
  6824 ;;		On entry : 0/0
  6825 ;;		On exit  : 0/0
  6826 ;;		Unchanged: 0/0
  6827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6828 ;;      Params:         0       0       0       0       0       0       0       0       0
  6829 ;;      Locals:         0      40       0       0       0       0       0       0       0
  6830 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6831 ;;      Totals:         2      40       0       0       0       0       0       0       0
  6832 ;;Total ram usage:       42 bytes
  6833 ;; Hardware stack levels used:    1
  6834 ;; Hardware stack levels required when called:    9
  6835 ;; This function calls:
  6836 ;;		_UART_printf
  6837 ;;		_UART_write
  6838 ;;		___wmul
  6839 ;;		_limpiarBuffer
  6840 ;;		_sprintf
  6841 ;; This function is called by:
  6842 ;;		_sistemaPrincipal
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           
  6846                           	psect	text32
  6847  000594                     __ptext32:
  6848                           	opt callstack 0
  6849  000594                     _dameDatosSistema:
  6850                           	opt callstack 20
  6851  000594                     
  6852                           ;main.c: 677:     char bufferHorario[30];;main.c: 679:     UART_write('I');
  6853  000594  0E49               	movlw	73
  6854  000596  EC46  F019         	call	_UART_write
  6855  00059A                     
  6856                           ;main.c: 681:     UART_printf("\r\nH = HORA\r\n");
  6857  00059A  0ED5               	movlw	low STR_33
  6858  00059C  6E02               	movwf	UART_printf@cadena^0,c
  6859  00059E  0E7F               	movlw	high STR_33
  6860  0005A0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6861  0005A2  EC1A  F016         	call	_UART_printf	;wreg free
  6862  0005A6                     
  6863                           ;main.c: 682:     UART_printf("\r\nR = REGAR( 1 SI | 0 NO)\r\n");
  6864  0005A6  0ED7               	movlw	low STR_34
  6865  0005A8  6E02               	movwf	UART_printf@cadena^0,c
  6866  0005AA  0E7D               	movlw	high STR_34
  6867  0005AC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6868  0005AE  EC1A  F016         	call	_UART_printf	;wreg free
  6869  0005B2                     
  6870                           ;main.c: 683:     UART_printf("\r\nT = MINUTOS QUE DURARA EL RIEGO\r\n");
  6871  0005B2  0EF5               	movlw	low STR_35
  6872  0005B4  6E02               	movwf	UART_printf@cadena^0,c
  6873  0005B6  0E7C               	movlw	high STR_35
  6874  0005B8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6875  0005BA  EC1A  F016         	call	_UART_printf	;wreg free
  6876  0005BE                     
  6877                           ;main.c: 684:     UART_printf("\r\nD = DIAS QUE EN LOS QUE SE REGARA\r\n");
  6878  0005BE  0EF2               	movlw	low STR_36
  6879  0005C0  6E02               	movwf	UART_printf@cadena^0,c
  6880  0005C2  0E7B               	movlw	high STR_36
  6881  0005C4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6882  0005C6  EC1A  F016         	call	_UART_printf	;wreg free
  6883  0005CA                     
  6884                           ;main.c: 686:     UART_printf("                DLMIJVS\r\n");
  6885  0005CA  0E5D               	movlw	low STR_37
  6886  0005CC  6E02               	movwf	UART_printf@cadena^0,c
  6887  0005CE  0E7E               	movlw	high STR_37
  6888  0005D0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6889  0005D2  EC1A  F016         	call	_UART_printf	;wreg free
  6890  0005D6                     
  6891                           ;main.c: 689:     for (int i = 0; i < 24; i++) {
  6892  0005D6  0E00               	movlw	0
  6893  0005D8  0100               	movlb	0	; () banked
  6894  0005DA  6FF0               	movwf	(dameDatosSistema@i+1)& (0+255),b
  6895  0005DC  0E00               	movlw	0
  6896  0005DE  6FEF               	movwf	dameDatosSistema@i& (0+255),b
  6897  0005E0                     l4501:
  6898                           
  6899                           ; BSR set to: 0
  6900                           ;main.c: 691:         if (horarios[i].regar) {
  6901  0005E0  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6902  0005E4  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6903  0005E8  0E00               	movlw	0
  6904  0005EA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6905  0005EC  0E0C               	movlw	12
  6906  0005EE  6E03               	movwf	___wmul@multiplicand^0,c
  6907  0005F0  ECF7  F018         	call	___wmul	;wreg free
  6908  0005F4  0E3B               	movlw	low (_horarios+9)
  6909  0005F6  2401               	addwf	?___wmul^0,w,c
  6910  0005F8  6ED9               	movwf	fsr2l,c
  6911  0005FA  0E01               	movlw	high (_horarios+9)
  6912  0005FC  2002               	addwfc	(?___wmul+1)^0,w,c
  6913  0005FE  6EDA               	movwf	fsr2h,c
  6914  000600  50DF               	movf	indf2,w,c
  6915  000602  B4D8               	btfsc	status,2,c
  6916  000604  EF06  F003         	goto	u3541
  6917  000608  EF08  F003         	goto	u3540
  6918  00060C                     u3541:
  6919  00060C  EF7B  F003         	goto	l4511
  6920  000610                     u3540:
  6921  000610                     
  6922                           ;main.c: 693:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  6923  000610  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6924  000614  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6925  000618  0E00               	movlw	0
  6926  00061A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6927  00061C  0E0C               	movlw	12
  6928  00061E  6E03               	movwf	___wmul@multiplicand^0,c
  6929  000620  ECF7  F018         	call	___wmul	;wreg free
  6930  000624  0E32               	movlw	low _horarios
  6931  000626  2401               	addwf	?___wmul^0,w,c
  6932  000628  6ED9               	movwf	fsr2l,c
  6933  00062A  0E01               	movlw	high _horarios
  6934  00062C  2002               	addwfc	(?___wmul+1)^0,w,c
  6935  00062E  6EDA               	movwf	fsr2h,c
  6936  000630  50DF               	movf	indf2,w,c
  6937  000632  6E5D               	movwf	??_dameDatosSistema^0,c
  6938  000634  505D               	movf	??_dameDatosSistema^0,w,c
  6939  000636  0100               	movlb	0	; () banked
  6940  000638  6FE7               	movwf	_dameDatosSistema$1921& (0+255),b
  6941  00063A  6BE8               	clrf	(_dameDatosSistema$1921+1)& (0+255),b
  6942                           
  6943                           ;main.c: 693:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  6944  00063C  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6945  000640  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6946  000644  0E00               	movlw	0
  6947  000646  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6948  000648  0E0C               	movlw	12
  6949  00064A  6E03               	movwf	___wmul@multiplicand^0,c
  6950  00064C  ECF7  F018         	call	___wmul	;wreg free
  6951  000650  0E3B               	movlw	low (_horarios+9)
  6952  000652  2401               	addwf	?___wmul^0,w,c
  6953  000654  6ED9               	movwf	fsr2l,c
  6954  000656  0E01               	movlw	high (_horarios+9)
  6955  000658  2002               	addwfc	(?___wmul+1)^0,w,c
  6956  00065A  6EDA               	movwf	fsr2h,c
  6957  00065C  50DF               	movf	indf2,w,c
  6958  00065E  6E5D               	movwf	??_dameDatosSistema^0,c
  6959  000660  505D               	movf	??_dameDatosSistema^0,w,c
  6960  000662  0100               	movlb	0	; () banked
  6961  000664  6FE9               	movwf	_dameDatosSistema$1922& (0+255),b
  6962  000666  6BEA               	clrf	(_dameDatosSistema$1922+1)& (0+255),b
  6963                           
  6964                           ;main.c: 693:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  6965  000668  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6966  00066C  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6967  000670  0E00               	movlw	0
  6968  000672  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6969  000674  0E0C               	movlw	12
  6970  000676  6E03               	movwf	___wmul@multiplicand^0,c
  6971  000678  ECF7  F018         	call	___wmul	;wreg free
  6972  00067C  0E3D               	movlw	low (_horarios+11)
  6973  00067E  2401               	addwf	?___wmul^0,w,c
  6974  000680  6ED9               	movwf	fsr2l,c
  6975  000682  0E01               	movlw	high (_horarios+11)
  6976  000684  2002               	addwfc	(?___wmul+1)^0,w,c
  6977  000686  6EDA               	movwf	fsr2h,c
  6978  000688  50DF               	movf	indf2,w,c
  6979  00068A  6E5D               	movwf	??_dameDatosSistema^0,c
  6980  00068C  505D               	movf	??_dameDatosSistema^0,w,c
  6981  00068E  0100               	movlb	0	; () banked
  6982  000690  6FEB               	movwf	_dameDatosSistema$1923& (0+255),b
  6983  000692  6BEC               	clrf	(_dameDatosSistema$1923+1)& (0+255),b
  6984  000694                     
  6985                           ; BSR set to: 0
  6986                           ;main.c: 693:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  6987  000694  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6988  000698  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6989  00069C  0E00               	movlw	0
  6990  00069E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6991  0006A0  0E0C               	movlw	12
  6992  0006A2  6E03               	movwf	___wmul@multiplicand^0,c
  6993  0006A4  ECF7  F018         	call	___wmul	;wreg free
  6994  0006A8  0E33               	movlw	low (_horarios+1)
  6995  0006AA  2401               	addwf	?___wmul^0,w,c
  6996  0006AC  0100               	movlb	0	; () banked
  6997  0006AE  6FED               	movwf	_dameDatosSistema$1924& (0+255),b
  6998  0006B0  0E01               	movlw	high (_horarios+1)
  6999  0006B2  2002               	addwfc	(?___wmul+1)^0,w,c
  7000  0006B4  6FEE               	movwf	(_dameDatosSistema$1924+1)& (0+255),b
  7001  0006B6                     
  7002                           ; BSR set to: 0
  7003                           ;main.c: 693:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  7004  0006B6  0EC9               	movlw	low dameDatosSistema@bufferHorario
  7005  0006B8  6FB3               	movwf	sprintf@s& (0+255),b
  7006  0006BA  0E00               	movlw	high dameDatosSistema@bufferHorario
  7007  0006BC  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7008  0006BE  0E23               	movlw	low STR_38
  7009  0006C0  6FB5               	movwf	sprintf@fmt& (0+255),b
  7010  0006C2  0E7F               	movlw	high STR_38
  7011  0006C4  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7012  0006C6  C0E7  F0B7         	movff	_dameDatosSistema$1921,?_sprintf+4
  7013  0006CA  C0E8  F0B8         	movff	_dameDatosSistema$1921+1,?_sprintf+5
  7014  0006CE  C0E9  F0B9         	movff	_dameDatosSistema$1922,?_sprintf+6
  7015  0006D2  C0EA  F0BA         	movff	_dameDatosSistema$1922+1,?_sprintf+7
  7016  0006D6  C0EB  F0BB         	movff	_dameDatosSistema$1923,?_sprintf+8
  7017  0006DA  C0EC  F0BC         	movff	_dameDatosSistema$1923+1,?_sprintf+9
  7018  0006DE  C0ED  F0BD         	movff	_dameDatosSistema$1924,?_sprintf+10
  7019  0006E2  C0EE  F0BE         	movff	_dameDatosSistema$1924+1,?_sprintf+11
  7020  0006E6  ECFB  F016         	call	_sprintf	;wreg free
  7021  0006EA                     
  7022                           ;main.c: 697:             UART_printf(bufferHorario);
  7023  0006EA  0EC9               	movlw	low dameDatosSistema@bufferHorario
  7024  0006EC  6E02               	movwf	UART_printf@cadena^0,c
  7025  0006EE  0E00               	movlw	high dameDatosSistema@bufferHorario
  7026  0006F0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7027  0006F2  EC1A  F016         	call	_UART_printf	;wreg free
  7028  0006F6                     l4511:
  7029                           
  7030                           ;main.c: 701:     }
  7031  0006F6  0100               	movlb	0	; () banked
  7032  0006F8  4BEF               	infsnz	dameDatosSistema@i& (0+255),f,b
  7033  0006FA  2BF0               	incf	(dameDatosSistema@i+1)& (0+255),f,b
  7034  0006FC                     
  7035                           ; BSR set to: 0
  7036  0006FC  BFF0               	btfsc	(dameDatosSistema@i+1)& (0+255),7,b
  7037  0006FE  EF8A  F003         	goto	u3551
  7038  000702  51F0               	movf	(dameDatosSistema@i+1)& (0+255),w,b
  7039  000704  E109               	bnz	u3550
  7040  000706  0E18               	movlw	24
  7041  000708  5DEF               	subwf	dameDatosSistema@i& (0+255),w,b
  7042  00070A  A0D8               	btfss	status,0,c
  7043  00070C  EF8A  F003         	goto	u3551
  7044  000710  EF8C  F003         	goto	u3550
  7045  000714                     u3551:
  7046  000714  EFF0  F002         	goto	l4501
  7047  000718                     u3550:
  7048  000718                     
  7049                           ; BSR set to: 0
  7050                           ;main.c: 703:     limpiarBuffer();
  7051  000718  ECD9  F017         	call	_limpiarBuffer	;wreg free
  7052                           
  7053                           ;main.c: 705:     switch (diaActual) {
  7054  00071C  EF0E  F004         	goto	l4533
  7055  000720                     l4517:
  7056                           
  7057                           ; BSR set to: 0
  7058                           ;main.c: 707:             sprintf(buffer, "\r\n%0.2d:%0.2d| DOMINGO\r\n", hora, minutos)
      +                          ;
  7059  000720  0E00               	movlw	low _buffer
  7060  000722  6FB3               	movwf	sprintf@s& (0+255),b
  7061  000724  0E01               	movlw	high _buffer
  7062  000726  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7063  000728  0EA9               	movlw	low STR_39
  7064  00072A  6FB5               	movwf	sprintf@fmt& (0+255),b
  7065  00072C  0E7E               	movlw	high STR_39
  7066  00072E  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7067  000730  C087  F0B7         	movff	_hora,?_sprintf+4
  7068  000734  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  7069  000736  C086  F0B9         	movff	_minutos,?_sprintf+6
  7070  00073A  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  7071  00073C  ECFB  F016         	call	_sprintf	;wreg free
  7072                           
  7073                           ;main.c: 708:             break;
  7074  000740  EF38  F004         	goto	l4535
  7075  000744                     l4519:
  7076                           
  7077                           ; BSR set to: 0
  7078                           ;main.c: 711:             sprintf(buffer, "\r\n%0.2d:%0.2d| LUNES\r\n", hora, minutos);
  7079  000744  0E00               	movlw	low _buffer
  7080  000746  6FB3               	movwf	sprintf@s& (0+255),b
  7081  000748  0E01               	movlw	high _buffer
  7082  00074A  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7083  00074C  0E69               	movlw	low STR_40
  7084  00074E  6FB5               	movwf	sprintf@fmt& (0+255),b
  7085  000750  0E7F               	movlw	high STR_40
  7086  000752  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7087  000754  C087  F0B7         	movff	_hora,?_sprintf+4
  7088  000758  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  7089  00075A  C086  F0B9         	movff	_minutos,?_sprintf+6
  7090  00075E  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  7091  000760  ECFB  F016         	call	_sprintf	;wreg free
  7092                           
  7093                           ;main.c: 712:             break;
  7094  000764  EF38  F004         	goto	l4535
  7095  000768                     l4521:
  7096                           
  7097                           ; BSR set to: 0
  7098                           ;main.c: 715:             sprintf(buffer, "\r\n%0.2d:%0.2d| MARTES\r\n", hora, minutos);
  7099  000768  0E00               	movlw	low _buffer
  7100  00076A  6FB3               	movwf	sprintf@s& (0+255),b
  7101  00076C  0E01               	movlw	high _buffer
  7102  00076E  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7103  000770  0EF3               	movlw	low STR_41
  7104  000772  6FB5               	movwf	sprintf@fmt& (0+255),b
  7105  000774  0E7E               	movlw	high STR_41
  7106  000776  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7107  000778  C087  F0B7         	movff	_hora,?_sprintf+4
  7108  00077C  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  7109  00077E  C086  F0B9         	movff	_minutos,?_sprintf+6
  7110  000782  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  7111  000784  ECFB  F016         	call	_sprintf	;wreg free
  7112                           
  7113                           ;main.c: 716:             break;
  7114  000788  EF38  F004         	goto	l4535
  7115  00078C                     l4523:
  7116                           
  7117                           ; BSR set to: 0
  7118                           ;main.c: 719:             sprintf(buffer, "\r\n%0.2d:%0.2d| MIERCOLES\r\n", hora, minuto
      +                          s);
  7119  00078C  0E00               	movlw	low _buffer
  7120  00078E  6FB3               	movwf	sprintf@s& (0+255),b
  7121  000790  0E01               	movlw	high _buffer
  7122  000792  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7123  000794  0E0E               	movlw	low STR_42
  7124  000796  6FB5               	movwf	sprintf@fmt& (0+255),b
  7125  000798  0E7E               	movlw	high STR_42
  7126  00079A  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7127  00079C  C087  F0B7         	movff	_hora,?_sprintf+4
  7128  0007A0  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  7129  0007A2  C086  F0B9         	movff	_minutos,?_sprintf+6
  7130  0007A6  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  7131  0007A8  ECFB  F016         	call	_sprintf	;wreg free
  7132                           
  7133                           ;main.c: 720:             break;
  7134  0007AC  EF38  F004         	goto	l4535
  7135  0007B0                     l4525:
  7136                           
  7137                           ; BSR set to: 0
  7138                           ;main.c: 723:             sprintf(buffer, "\r\n%0.2d:%0.2d| JUEVES\r\n", hora, minutos);
  7139  0007B0  0E00               	movlw	low _buffer
  7140  0007B2  6FB3               	movwf	sprintf@s& (0+255),b
  7141  0007B4  0E01               	movlw	high _buffer
  7142  0007B6  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7143  0007B8  0E0B               	movlw	low STR_43
  7144  0007BA  6FB5               	movwf	sprintf@fmt& (0+255),b
  7145  0007BC  0E7F               	movlw	high STR_43
  7146  0007BE  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7147  0007C0  C087  F0B7         	movff	_hora,?_sprintf+4
  7148  0007C4  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  7149  0007C6  C086  F0B9         	movff	_minutos,?_sprintf+6
  7150  0007CA  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  7151  0007CC  ECFB  F016         	call	_sprintf	;wreg free
  7152                           
  7153                           ;main.c: 724:             break;
  7154  0007D0  EF38  F004         	goto	l4535
  7155  0007D4                     l4527:
  7156                           
  7157                           ; BSR set to: 0
  7158                           ;main.c: 727:             sprintf(buffer, "\r\n%0.2d:%0.2d| VIERNES\r\n", hora, minutos)
      +                          ;
  7159  0007D4  0E00               	movlw	low _buffer
  7160  0007D6  6FB3               	movwf	sprintf@s& (0+255),b
  7161  0007D8  0E01               	movlw	high _buffer
  7162  0007DA  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7163  0007DC  0EC2               	movlw	low STR_44
  7164  0007DE  6FB5               	movwf	sprintf@fmt& (0+255),b
  7165  0007E0  0E7E               	movlw	high STR_44
  7166  0007E2  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7167  0007E4  C087  F0B7         	movff	_hora,?_sprintf+4
  7168  0007E8  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  7169  0007EA  C086  F0B9         	movff	_minutos,?_sprintf+6
  7170  0007EE  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  7171  0007F0  ECFB  F016         	call	_sprintf	;wreg free
  7172                           
  7173                           ;main.c: 728:             break;
  7174  0007F4  EF38  F004         	goto	l4535
  7175  0007F8                     l4529:
  7176                           
  7177                           ; BSR set to: 0
  7178                           ;main.c: 731:             sprintf(buffer, "\r\n%0.2d:%0.2d| SABADO\r\n", hora, minutos);
  7179  0007F8  0E00               	movlw	low _buffer
  7180  0007FA  6FB3               	movwf	sprintf@s& (0+255),b
  7181  0007FC  0E01               	movlw	high _buffer
  7182  0007FE  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7183  000800  0EDB               	movlw	low STR_45
  7184  000802  6FB5               	movwf	sprintf@fmt& (0+255),b
  7185  000804  0E7E               	movlw	high STR_45
  7186  000806  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7187  000808  C087  F0B7         	movff	_hora,?_sprintf+4
  7188  00080C  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  7189  00080E  C086  F0B9         	movff	_minutos,?_sprintf+6
  7190  000812  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  7191  000814  ECFB  F016         	call	_sprintf	;wreg free
  7192                           
  7193                           ;main.c: 732:             break;
  7194  000818  EF38  F004         	goto	l4535
  7195  00081C                     l4533:
  7196  00081C  0100               	movlb	0	; () banked
  7197  00081E  5184               	movf	_diaActual& (0+255),w,b
  7198  000820  6E5D               	movwf	??_dameDatosSistema^0,c
  7199  000822  6A5E               	clrf	(??_dameDatosSistema+1)^0,c
  7200                           
  7201                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7202                           ; Switch size 1, requested type "simple"
  7203                           ; Number of cases is 1, Range of values is 0 to 0
  7204                           ; switch strategies available:
  7205                           ; Name         Instructions Cycles
  7206                           ; simple_byte            4     3 (average)
  7207                           ;	Chosen strategy is simple_byte
  7208  000824  505E               	movf	(??_dameDatosSistema+1)^0,w,c
  7209  000826  0A00               	xorlw	0	; case 0
  7210  000828  B4D8               	btfsc	status,2,c
  7211  00082A  EF19  F004         	goto	l5131
  7212  00082E  EF38  F004         	goto	l4535
  7213  000832                     l5131:
  7214                           
  7215                           ; BSR set to: 0
  7216                           ; Switch size 1, requested type "simple"
  7217                           ; Number of cases is 7, Range of values is 1 to 7
  7218                           ; switch strategies available:
  7219                           ; Name         Instructions Cycles
  7220                           ; simple_byte           22    12 (average)
  7221                           ;	Chosen strategy is simple_byte
  7222  000832  505D               	movf	??_dameDatosSistema^0,w,c
  7223  000834  0A01               	xorlw	1	; case 1
  7224  000836  B4D8               	btfsc	status,2,c
  7225  000838  EF90  F003         	goto	l4517
  7226  00083C  0A03               	xorlw	3	; case 2
  7227  00083E  B4D8               	btfsc	status,2,c
  7228  000840  EFA2  F003         	goto	l4519
  7229  000844  0A01               	xorlw	1	; case 3
  7230  000846  B4D8               	btfsc	status,2,c
  7231  000848  EFB4  F003         	goto	l4521
  7232  00084C  0A07               	xorlw	7	; case 4
  7233  00084E  B4D8               	btfsc	status,2,c
  7234  000850  EFC6  F003         	goto	l4523
  7235  000854  0A01               	xorlw	1	; case 5
  7236  000856  B4D8               	btfsc	status,2,c
  7237  000858  EFD8  F003         	goto	l4525
  7238  00085C  0A03               	xorlw	3	; case 6
  7239  00085E  B4D8               	btfsc	status,2,c
  7240  000860  EFEA  F003         	goto	l4527
  7241  000864  0A01               	xorlw	1	; case 7
  7242  000866  B4D8               	btfsc	status,2,c
  7243  000868  EFFC  F003         	goto	l4529
  7244  00086C  EF38  F004         	goto	l4535
  7245  000870                     l4535:
  7246                           
  7247                           ;main.c: 739:     UART_printf(buffer);
  7248  000870  0E00               	movlw	low _buffer
  7249  000872  6E02               	movwf	UART_printf@cadena^0,c
  7250  000874  0E01               	movlw	high _buffer
  7251  000876  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7252  000878  EC1A  F016         	call	_UART_printf	;wreg free
  7253  00087C                     
  7254                           ;main.c: 741:     UART_write('I');
  7255  00087C  0E49               	movlw	73
  7256  00087E  EC46  F019         	call	_UART_write
  7257  000882  0012               	return		;funcret
  7258  000884                     __end_of_dameDatosSistema:
  7259                           	opt callstack 0
  7260                           
  7261 ;; *************** function _limpiarBuffer *****************
  7262 ;; Defined at:
  7263 ;;		line 1022 in file "main.c"
  7264 ;; Parameters:    Size  Location     Type
  7265 ;;		None
  7266 ;; Auto vars:     Size  Location     Type
  7267 ;;  i               2    0[COMRAM] int 
  7268 ;; Return value:  Size  Location     Type
  7269 ;;                  1    wreg      void 
  7270 ;; Registers used:
  7271 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7272 ;; Tracked objects:
  7273 ;;		On entry : 0/0
  7274 ;;		On exit  : 0/0
  7275 ;;		Unchanged: 0/0
  7276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7277 ;;      Params:         0       0       0       0       0       0       0       0       0
  7278 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7279 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7280 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7281 ;;Total ram usage:        2 bytes
  7282 ;; Hardware stack levels used:    1
  7283 ;; Hardware stack levels required when called:    1
  7284 ;; This function calls:
  7285 ;;		Nothing
  7286 ;; This function is called by:
  7287 ;;		_lecturaWifi
  7288 ;;		_dameDatosSistema
  7289 ;;		_mostrarDatosSensores
  7290 ;;		_mostrarDatosSensoresWIFI
  7291 ;; This function uses a non-reentrant model
  7292 ;;
  7293                           
  7294                           	psect	text33
  7295  002FB2                     __ptext33:
  7296                           	opt callstack 0
  7297  002FB2                     _limpiarBuffer:
  7298                           	opt callstack 27
  7299  002FB2                     
  7300                           ;main.c: 1023:     for (int i = 0; i < 50; i++) {
  7301  002FB2  0E00               	movlw	0
  7302  002FB4  6E02               	movwf	(limpiarBuffer@i+1)^0,c
  7303  002FB6  0E00               	movlw	0
  7304  002FB8  6E01               	movwf	limpiarBuffer@i^0,c
  7305  002FBA                     l4063:
  7306                           
  7307                           ;main.c: 1024:         buffer[i] = 0;
  7308  002FBA  0E00               	movlw	low _buffer
  7309  002FBC  2401               	addwf	limpiarBuffer@i^0,w,c
  7310  002FBE  6ED9               	movwf	fsr2l,c
  7311  002FC0  0E01               	movlw	high _buffer
  7312  002FC2  2002               	addwfc	(limpiarBuffer@i+1)^0,w,c
  7313  002FC4  6EDA               	movwf	fsr2h,c
  7314  002FC6  0E00               	movlw	0
  7315  002FC8  6EDF               	movwf	indf2,c
  7316  002FCA                     
  7317                           ;main.c: 1025:     }
  7318  002FCA  4A01               	infsnz	limpiarBuffer@i^0,f,c
  7319  002FCC  2A02               	incf	(limpiarBuffer@i+1)^0,f,c
  7320  002FCE  BE02               	btfsc	(limpiarBuffer@i+1)^0,7,c
  7321  002FD0  EFF3  F017         	goto	u3091
  7322  002FD4  5002               	movf	(limpiarBuffer@i+1)^0,w,c
  7323  002FD6  E109               	bnz	u3090
  7324  002FD8  0E32               	movlw	50
  7325  002FDA  5C01               	subwf	limpiarBuffer@i^0,w,c
  7326  002FDC  A0D8               	btfss	status,0,c
  7327  002FDE  EFF3  F017         	goto	u3091
  7328  002FE2  EFF5  F017         	goto	u3090
  7329  002FE6                     u3091:
  7330  002FE6  EFDD  F017         	goto	l4063
  7331  002FEA                     u3090:
  7332  002FEA                     
  7333                           ;main.c: 1027:     buffer[50 - 1] = '\0';
  7334  002FEA  0E00               	movlw	0
  7335  002FEC  0101               	movlb	1	; () banked
  7336  002FEE  6F31               	movwf	(_buffer+49)& (0+255),b
  7337  002FF0                     
  7338                           ; BSR set to: 1
  7339  002FF0  0012               	return		;funcret
  7340  002FF2                     __end_of_limpiarBuffer:
  7341                           	opt callstack 0
  7342                           
  7343 ;; *************** function _asignarHorarios *****************
  7344 ;; Defined at:
  7345 ;;		line 389 in file "main.c"
  7346 ;; Parameters:    Size  Location     Type
  7347 ;;		None
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;  i               2   29[BANK0 ] int 
  7350 ;;  Rx              1   32[BANK0 ] unsigned char 
  7351 ;;  hora            1   31[BANK0 ] unsigned char 
  7352 ;;  diaRegar        1   28[BANK0 ] unsigned char 
  7353 ;; Return value:  Size  Location     Type
  7354 ;;                  1    wreg      void 
  7355 ;; Registers used:
  7356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7357 ;; Tracked objects:
  7358 ;;		On entry : 0/0
  7359 ;;		On exit  : 0/0
  7360 ;;		Unchanged: 0/0
  7361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7362 ;;      Params:         0       0       0       0       0       0       0       0       0
  7363 ;;      Locals:         0       5       0       0       0       0       0       0       0
  7364 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7365 ;;      Totals:         2       5       0       0       0       0       0       0       0
  7366 ;;Total ram usage:        7 bytes
  7367 ;; Hardware stack levels used:    1
  7368 ;; Hardware stack levels required when called:    9
  7369 ;; This function calls:
  7370 ;;		_UART_printf
  7371 ;;		_escribeHorariosMemoria
  7372 ;;		_getValue
  7373 ;;		_sprintf
  7374 ;; This function is called by:
  7375 ;;		_sistemaPrincipal
  7376 ;; This function uses a non-reentrant model
  7377 ;;
  7378                           
  7379                           	psect	text34
  7380  000FF4                     __ptext34:
  7381                           	opt callstack 0
  7382  000FF4                     _asignarHorarios:
  7383                           	opt callstack 20
  7384  000FF4                     
  7385                           ;main.c: 391:     unsigned char hora;;main.c: 392:     unsigned char Rx;;main.c: 393:   
      +                            unsigned char diaRegar;;main.c: 395:     UART_printf("\r\n OPCIONES DE REGADO \r\n");
  7386  000FF4  0E77               	movlw	low STR_7
  7387  000FF6  6E02               	movwf	UART_printf@cadena^0,c
  7388  000FF8  0E7E               	movlw	high STR_7
  7389  000FFA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7390  000FFC  EC1A  F016         	call	_UART_printf	;wreg free
  7391                           
  7392                           ;main.c: 397:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  7393  001000  0EB3               	movlw	low STR_8
  7394  001002  6E02               	movwf	UART_printf@cadena^0,c
  7395  001004  0E7A               	movlw	high STR_8
  7396  001006  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7397  001008  EC1A  F016         	call	_UART_printf	;wreg free
  7398  00100C                     
  7399                           ;main.c: 398:     hora = getValue(2);
  7400  00100C  0E00               	movlw	0
  7401  00100E  6E05               	movwf	(getValue@numCharacters+1)^0,c
  7402  001010  0E02               	movlw	2
  7403  001012  6E04               	movwf	getValue@numCharacters^0,c
  7404  001014  ECE8  F006         	call	_getValue	;wreg free
  7405  001018  0100               	movlb	0	; () banked
  7406  00101A  6FCC               	movwf	asignarHorarios@hora& (0+255),b
  7407  00101C                     
  7408                           ; BSR set to: 0
  7409                           ;main.c: 400:     if (hora != '@') {
  7410  00101C  0E40               	movlw	64
  7411  00101E  19CC               	xorwf	asignarHorarios@hora& (0+255),w,b
  7412  001020  B4D8               	btfsc	status,2,c
  7413  001022  EF15  F008         	goto	u3471
  7414  001026  EF17  F008         	goto	u3470
  7415  00102A                     u3471:
  7416  00102A  EFD6  F008         	goto	l325
  7417  00102E                     u3470:
  7418  00102E                     
  7419                           ; BSR set to: 0
  7420                           ;main.c: 402:         UART_printf("\r\n Ingrese 1 para activar || ingrese 0 para desacti
      +                          var: \r\n");
  7421  00102E  0ECC               	movlw	low STR_9
  7422  001030  6E02               	movwf	UART_printf@cadena^0,c
  7423  001032  0E79               	movlw	high STR_9
  7424  001034  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7425  001036  EC1A  F016         	call	_UART_printf	;wreg free
  7426  00103A                     
  7427                           ;main.c: 404:         Rx = getValue(1);
  7428  00103A  0E00               	movlw	0
  7429  00103C  6E05               	movwf	(getValue@numCharacters+1)^0,c
  7430  00103E  0E01               	movlw	1
  7431  001040  6E04               	movwf	getValue@numCharacters^0,c
  7432  001042  ECE8  F006         	call	_getValue	;wreg free
  7433  001046  0100               	movlb	0	; () banked
  7434  001048  6FCD               	movwf	asignarHorarios@Rx& (0+255),b
  7435  00104A                     
  7436                           ; BSR set to: 0
  7437                           ;main.c: 407:         if (Rx == 1) {
  7438  00104A  05CD               	decf	asignarHorarios@Rx& (0+255),w,b
  7439  00104C  A4D8               	btfss	status,2,c
  7440  00104E  EF2B  F008         	goto	u3481
  7441  001052  EF2D  F008         	goto	u3480
  7442  001056                     u3481:
  7443  001056  EFBE  F008         	goto	l4451
  7444  00105A                     u3480:
  7445  00105A                     
  7446                           ; BSR set to: 0
  7447                           ;main.c: 409:             UART_printf("\r\n Ingrese 1 para activar || ingrese 0 para des
      +                          activar: \r\n");
  7448  00105A  0ECC               	movlw	low STR_9
  7449  00105C  6E02               	movwf	UART_printf@cadena^0,c
  7450  00105E  0E79               	movlw	high STR_9
  7451  001060  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7452  001062  EC1A  F016         	call	_UART_printf	;wreg free
  7453                           
  7454                           ;main.c: 410:             UART_printf("\r\n DOMINGO = [1] ... SABADO = [7] \r\n");
  7455  001066  0E87               	movlw	low STR_11
  7456  001068  6E02               	movwf	UART_printf@cadena^0,c
  7457  00106A  0E7C               	movlw	high STR_11
  7458  00106C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7459  00106E  EC1A  F016         	call	_UART_printf	;wreg free
  7460  001072                     
  7461                           ;main.c: 412:             for (int i = 0; i < 7; i++) {
  7462  001072  0E00               	movlw	0
  7463  001074  0100               	movlb	0	; () banked
  7464  001076  6FCB               	movwf	(asignarHorarios@i+1)& (0+255),b
  7465  001078  0E00               	movlw	0
  7466  00107A  6FCA               	movwf	asignarHorarios@i& (0+255),b
  7467  00107C                     l4421:
  7468                           
  7469                           ; BSR set to: 0
  7470                           ;main.c: 413:                 sprintf(buffer, "\r\n[%d]: ", i + 1);
  7471  00107C  0E00               	movlw	low _buffer
  7472  00107E  6FB3               	movwf	sprintf@s& (0+255),b
  7473  001080  0E01               	movlw	high _buffer
  7474  001082  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7475  001084  0EED               	movlw	low STR_12
  7476  001086  6FB5               	movwf	sprintf@fmt& (0+255),b
  7477  001088  0E7F               	movlw	high STR_12
  7478  00108A  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7479  00108C  0E01               	movlw	1
  7480  00108E  25CA               	addwf	asignarHorarios@i& (0+255),w,b
  7481  001090  6FB7               	movwf	(?_sprintf+4)& (0+255),b
  7482  001092  0E00               	movlw	0
  7483  001094  21CB               	addwfc	(asignarHorarios@i+1)& (0+255),w,b
  7484  001096  6FB8               	movwf	(?_sprintf+5)& (0+255),b
  7485  001098  ECFB  F016         	call	_sprintf	;wreg free
  7486  00109C                     
  7487                           ;main.c: 414:                 UART_printf(buffer);
  7488  00109C  0E00               	movlw	low _buffer
  7489  00109E  6E02               	movwf	UART_printf@cadena^0,c
  7490  0010A0  0E01               	movlw	high _buffer
  7491  0010A2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7492  0010A4  EC1A  F016         	call	_UART_printf	;wreg free
  7493  0010A8                     
  7494                           ;main.c: 415:                 diaRegar = getValue(1);
  7495  0010A8  0E00               	movlw	0
  7496  0010AA  6E05               	movwf	(getValue@numCharacters+1)^0,c
  7497  0010AC  0E01               	movlw	1
  7498  0010AE  6E04               	movwf	getValue@numCharacters^0,c
  7499  0010B0  ECE8  F006         	call	_getValue	;wreg free
  7500  0010B4  0100               	movlb	0	; () banked
  7501  0010B6  6FC9               	movwf	asignarHorarios@diaRegar& (0+255),b
  7502  0010B8                     
  7503                           ; BSR set to: 0
  7504                           ;main.c: 417:                 if (diaRegar != '@') {
  7505  0010B8  0E40               	movlw	64
  7506  0010BA  19C9               	xorwf	asignarHorarios@diaRegar& (0+255),w,b
  7507  0010BC  B4D8               	btfsc	status,2,c
  7508  0010BE  EF63  F008         	goto	u3491
  7509  0010C2  EF65  F008         	goto	u3490
  7510  0010C6                     u3491:
  7511  0010C6  EF9A  F008         	goto	l4441
  7512  0010CA                     u3490:
  7513  0010CA  EF6F  F008         	goto	l4437
  7514  0010CE                     l4431:
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;main.c: 421:                             diaRegar = '0';
  7518  0010CE  0E30               	movlw	48
  7519  0010D0  6FC9               	movwf	asignarHorarios@diaRegar& (0+255),b
  7520                           
  7521                           ;main.c: 422:                             break;
  7522  0010D2  EF84  F008         	goto	l4439
  7523  0010D6                     l4433:
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;main.c: 425:                             diaRegar = '1';
  7527  0010D6  0E31               	movlw	49
  7528  0010D8  6FC9               	movwf	asignarHorarios@diaRegar& (0+255),b
  7529                           
  7530                           ;main.c: 426:                             break;
  7531  0010DA  EF84  F008         	goto	l4439
  7532  0010DE                     l4437:
  7533                           
  7534                           ; BSR set to: 0
  7535  0010DE  51C9               	movf	asignarHorarios@diaRegar& (0+255),w,b
  7536  0010E0  6E5D               	movwf	??_asignarHorarios^0,c
  7537  0010E2  6A5E               	clrf	(??_asignarHorarios+1)^0,c
  7538                           
  7539                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7540                           ; Switch size 1, requested type "simple"
  7541                           ; Number of cases is 1, Range of values is 0 to 0
  7542                           ; switch strategies available:
  7543                           ; Name         Instructions Cycles
  7544                           ; simple_byte            4     3 (average)
  7545                           ;	Chosen strategy is simple_byte
  7546  0010E4  505E               	movf	(??_asignarHorarios+1)^0,w,c
  7547  0010E6  0A00               	xorlw	0	; case 0
  7548  0010E8  B4D8               	btfsc	status,2,c
  7549  0010EA  EF79  F008         	goto	l5133
  7550  0010EE  EF84  F008         	goto	l4439
  7551  0010F2                     l5133:
  7552                           
  7553                           ; BSR set to: 0
  7554                           ; Switch size 1, requested type "simple"
  7555                           ; Number of cases is 2, Range of values is 0 to 1
  7556                           ; switch strategies available:
  7557                           ; Name         Instructions Cycles
  7558                           ; simple_byte            7     4 (average)
  7559                           ;	Chosen strategy is simple_byte
  7560  0010F2  505D               	movf	??_asignarHorarios^0,w,c
  7561  0010F4  0A00               	xorlw	0	; case 0
  7562  0010F6  B4D8               	btfsc	status,2,c
  7563  0010F8  EF67  F008         	goto	l4431
  7564  0010FC  0A01               	xorlw	1	; case 1
  7565  0010FE  B4D8               	btfsc	status,2,c
  7566  001100  EF6B  F008         	goto	l4433
  7567  001104  EF84  F008         	goto	l4439
  7568  001108                     l4439:
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;main.c: 430:                     horarios[hora].dias[i] = diaRegar;
  7572  001108  51CC               	movf	asignarHorarios@hora& (0+255),w,b
  7573  00110A  0D0C               	mullw	12
  7574  00110C  0E32               	movlw	low _horarios
  7575  00110E  6E5D               	movwf	??_asignarHorarios^0,c
  7576  001110  0E01               	movlw	high _horarios
  7577  001112  6E5E               	movwf	(??_asignarHorarios+1)^0,c
  7578  001114  0E01               	movlw	1
  7579  001116  265D               	addwf	??_asignarHorarios^0,f,c
  7580  001118  0E00               	movlw	0
  7581  00111A  225E               	addwfc	(??_asignarHorarios+1)^0,f,c
  7582  00111C  50F3               	movf	243,w,c
  7583  00111E  265D               	addwf	??_asignarHorarios^0,f,c
  7584  001120  50F4               	movf	244,w,c
  7585  001122  225E               	addwfc	(??_asignarHorarios+1)^0,f,c
  7586  001124  51CA               	movf	asignarHorarios@i& (0+255),w,b
  7587  001126  245D               	addwf	??_asignarHorarios^0,w,c
  7588  001128  6ED9               	movwf	fsr2l,c
  7589  00112A  51CB               	movf	(asignarHorarios@i+1)& (0+255),w,b
  7590  00112C  205E               	addwfc	(??_asignarHorarios+1)^0,w,c
  7591  00112E  6EDA               	movwf	fsr2h,c
  7592  001130  C0C9  FFDF         	movff	asignarHorarios@diaRegar,indf2
  7593  001134                     l4441:
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;main.c: 433:             }
  7597  001134  4BCA               	infsnz	asignarHorarios@i& (0+255),f,b
  7598  001136  2BCB               	incf	(asignarHorarios@i+1)& (0+255),f,b
  7599  001138                     
  7600                           ; BSR set to: 0
  7601  001138  BFCB               	btfsc	(asignarHorarios@i+1)& (0+255),7,b
  7602  00113A  EFA8  F008         	goto	u3501
  7603  00113E  51CB               	movf	(asignarHorarios@i+1)& (0+255),w,b
  7604  001140  E109               	bnz	u3500
  7605  001142  0E07               	movlw	7
  7606  001144  5DCA               	subwf	asignarHorarios@i& (0+255),w,b
  7607  001146  A0D8               	btfss	status,0,c
  7608  001148  EFA8  F008         	goto	u3501
  7609  00114C  EFAA  F008         	goto	u3500
  7610  001150                     u3501:
  7611  001150  EF3E  F008         	goto	l4421
  7612  001154                     u3500:
  7613  001154                     
  7614                           ; BSR set to: 0
  7615                           ;main.c: 435:             horarios[hora].regar = Rx;
  7616  001154  51CC               	movf	asignarHorarios@hora& (0+255),w,b
  7617  001156  0D0C               	mullw	12
  7618  001158  0E3B               	movlw	low (_horarios+9)
  7619  00115A  24F3               	addwf	243,w,c
  7620  00115C  6ED9               	movwf	fsr2l,c
  7621  00115E  0E01               	movlw	high (_horarios+9)
  7622  001160  20F4               	addwfc	prodh,w,c
  7623  001162  6EDA               	movwf	fsr2h,c
  7624  001164  C0CD  FFDF         	movff	asignarHorarios@Rx,indf2
  7625  001168                     
  7626                           ; BSR set to: 0
  7627                           ;main.c: 437:             escribeHorariosMemoria();
  7628  001168  EC43  F00D         	call	_escribeHorariosMemoria	;wreg free
  7629  00116C                     
  7630                           ;main.c: 440:             UART_printf("\r\n Horario Modificado! \r\n");
  7631  00116C  0E29               	movlw	low STR_13
  7632  00116E  6E02               	movwf	UART_printf@cadena^0,c
  7633  001170  0E7E               	movlw	high STR_13
  7634  001172  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7635  001174  EC1A  F016         	call	_UART_printf	;wreg free
  7636                           
  7637                           ;main.c: 442:         } else if (Rx == 0) {
  7638  001178  EFD6  F008         	goto	l325
  7639  00117C                     l4451:
  7640                           
  7641                           ; BSR set to: 0
  7642  00117C  51CD               	movf	asignarHorarios@Rx& (0+255),w,b
  7643  00117E  A4D8               	btfss	status,2,c
  7644  001180  EFC4  F008         	goto	u3511
  7645  001184  EFC6  F008         	goto	u3510
  7646  001188                     u3511:
  7647  001188  EFD6  F008         	goto	l325
  7648  00118C                     u3510:
  7649  00118C                     
  7650                           ; BSR set to: 0
  7651                           ;main.c: 443:             horarios[hora].regar = Rx;
  7652  00118C  51CC               	movf	asignarHorarios@hora& (0+255),w,b
  7653  00118E  0D0C               	mullw	12
  7654  001190  0E3B               	movlw	low (_horarios+9)
  7655  001192  24F3               	addwf	243,w,c
  7656  001194  6ED9               	movwf	fsr2l,c
  7657  001196  0E01               	movlw	high (_horarios+9)
  7658  001198  20F4               	addwfc	prodh,w,c
  7659  00119A  6EDA               	movwf	fsr2h,c
  7660  00119C  C0CD  FFDF         	movff	asignarHorarios@Rx,indf2
  7661  0011A0                     
  7662                           ; BSR set to: 0
  7663                           ;main.c: 444:             UART_printf("\r\n Horario Modificado! \r\n");
  7664  0011A0  0E29               	movlw	low STR_13
  7665  0011A2  6E02               	movwf	UART_printf@cadena^0,c
  7666  0011A4  0E7E               	movlw	high STR_13
  7667  0011A6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7668  0011A8  EC1A  F016         	call	_UART_printf	;wreg free
  7669  0011AC                     l325:
  7670  0011AC  0012               	return		;funcret
  7671  0011AE                     __end_of_asignarHorarios:
  7672                           	opt callstack 0
  7673                           
  7674 ;; *************** function _sprintf *****************
  7675 ;; Defined at:
  7676 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  7677 ;; Parameters:    Size  Location     Type
  7678 ;;  s               2    6[BANK0 ] PTR unsigned char 
  7679 ;;		 -> dameDatosSistema@bufferHorario(30), buffer(50), 
  7680 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  7681 ;;		 -> STR_52(45), STR_51(29), STR_50(32), STR_49(45), 
  7682 ;;		 -> STR_48(29), STR_47(32), STR_45(24), STR_44(25), 
  7683 ;;		 -> STR_43(24), STR_42(27), STR_41(24), STR_40(23), 
  7684 ;;		 -> STR_39(25), STR_38(24), STR_20(51), STR_12(9), 
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;  f               6   22[BANK0 ] struct _IO_FILE
  7687 ;;  ap              2   20[BANK0 ] PTR void [1]
  7688 ;;		 -> ?_sprintf(2), 
  7689 ;;  ret             2    0        int 
  7690 ;; Return value:  Size  Location     Type
  7691 ;;                  2    6[BANK0 ] int 
  7692 ;; Registers used:
  7693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7694 ;; Tracked objects:
  7695 ;;		On entry : 0/0
  7696 ;;		On exit  : 0/0
  7697 ;;		Unchanged: 0/0
  7698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7699 ;;      Params:         0      12       0       0       0       0       0       0       0
  7700 ;;      Locals:         0      10       0       0       0       0       0       0       0
  7701 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7702 ;;      Totals:         0      22       0       0       0       0       0       0       0
  7703 ;;Total ram usage:       22 bytes
  7704 ;; Hardware stack levels used:    1
  7705 ;; Hardware stack levels required when called:    8
  7706 ;; This function calls:
  7707 ;;		_vfprintf
  7708 ;; This function is called by:
  7709 ;;		_asignarHorarios
  7710 ;;		_lecturaWifi
  7711 ;;		_dameDatosSistema
  7712 ;;		_mostrarDatosSensores
  7713 ;;		_mostrarDatosSensoresWIFI
  7714 ;; This function uses a non-reentrant model
  7715 ;;
  7716                           
  7717                           	psect	text35
  7718  002DF6                     __ptext35:
  7719                           	opt callstack 0
  7720  002DF6                     _sprintf:
  7721                           	opt callstack 20
  7722  002DF6  0EB7               	movlw	low (?_sprintf+4)
  7723  002DF8  0100               	movlb	0	; () banked
  7724  002DFA  6FC1               	movwf	sprintf@ap& (0+255),b
  7725  002DFC  0E00               	movlw	high (?_sprintf+4)
  7726  002DFE  6FC2               	movwf	(sprintf@ap+1)& (0+255),b
  7727  002E00  C0B3  F0C3         	movff	sprintf@s,sprintf@f
  7728  002E04  C0B4  F0C4         	movff	sprintf@s+1,sprintf@f+1
  7729  002E08                     
  7730                           ; BSR set to: 0
  7731  002E08  0E00               	movlw	0
  7732  002E0A  6FC6               	movwf	(sprintf@f+3)& (0+255),b
  7733  002E0C  0E00               	movlw	0
  7734  002E0E  6FC5               	movwf	(sprintf@f+2)& (0+255),b
  7735  002E10                     
  7736                           ; BSR set to: 0
  7737  002E10  0E00               	movlw	0
  7738  002E12  6FC8               	movwf	(sprintf@f+5)& (0+255),b
  7739  002E14  0E00               	movlw	0
  7740  002E16  6FC7               	movwf	(sprintf@f+4)& (0+255),b
  7741  002E18                     
  7742                           ; BSR set to: 0
  7743  002E18  0EC3               	movlw	low sprintf@f
  7744  002E1A  6FAD               	movwf	vfprintf@fp& (0+255),b
  7745  002E1C  0E00               	movlw	high sprintf@f
  7746  002E1E  6FAE               	movwf	(vfprintf@fp+1)& (0+255),b
  7747  002E20  C0B5  F0AF         	movff	sprintf@fmt,vfprintf@fmt
  7748  002E24  C0B6  F0B0         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7749  002E28  0EC1               	movlw	low sprintf@ap
  7750  002E2A  6FB1               	movwf	vfprintf@ap& (0+255),b
  7751  002E2C  0E00               	movlw	high sprintf@ap
  7752  002E2E  6FB2               	movwf	(vfprintf@ap+1)& (0+255),b
  7753  002E30  ECB8  F015         	call	_vfprintf	;wreg free
  7754  002E34  0100               	movlb	0	; () banked
  7755  002E36  51C5               	movf	(sprintf@f+2)& (0+255),w,b
  7756  002E38  25B3               	addwf	sprintf@s& (0+255),w,b
  7757  002E3A  6ED9               	movwf	fsr2l,c
  7758  002E3C  51C6               	movf	(sprintf@f+3)& (0+255),w,b
  7759  002E3E  21B4               	addwfc	(sprintf@s+1)& (0+255),w,b
  7760  002E40  6EDA               	movwf	fsr2h,c
  7761  002E42  0E00               	movlw	0
  7762  002E44  6EDF               	movwf	indf2,c
  7763  002E46                     
  7764                           ; BSR set to: 0
  7765  002E46  0012               	return		;funcret
  7766  002E48                     __end_of_sprintf:
  7767                           	opt callstack 0
  7768                           
  7769 ;; *************** function _vfprintf *****************
  7770 ;; Defined at:
  7771 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7772 ;; Parameters:    Size  Location     Type
  7773 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7774 ;;		 -> sprintf@f(6), 
  7775 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  7776 ;;		 -> STR_52(45), STR_51(29), STR_50(32), STR_49(45), 
  7777 ;;		 -> STR_48(29), STR_47(32), STR_45(24), STR_44(25), 
  7778 ;;		 -> STR_43(24), STR_42(27), STR_41(24), STR_40(23), 
  7779 ;;		 -> STR_39(25), STR_38(24), STR_20(51), STR_12(9), 
  7780 ;;  ap              2    4[BANK0 ] PTR PTR void 
  7781 ;;		 -> sprintf@ap(2), 
  7782 ;; Auto vars:     Size  Location     Type
  7783 ;;  cfmt            2   90[COMRAM] PTR unsigned char 
  7784 ;;		 -> STR_52(45), STR_51(29), STR_50(32), STR_49(45), 
  7785 ;;		 -> STR_48(29), STR_47(32), STR_45(24), STR_44(25), 
  7786 ;;		 -> STR_43(24), STR_42(27), STR_41(24), STR_40(23), 
  7787 ;;		 -> STR_39(25), STR_38(24), STR_20(51), STR_12(9), 
  7788 ;; Return value:  Size  Location     Type
  7789 ;;                  2    0[BANK0 ] int 
  7790 ;; Registers used:
  7791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7792 ;; Tracked objects:
  7793 ;;		On entry : 0/0
  7794 ;;		On exit  : 0/0
  7795 ;;		Unchanged: 0/0
  7796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7797 ;;      Params:         0       6       0       0       0       0       0       0       0
  7798 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7799 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7800 ;;      Totals:         2       6       0       0       0       0       0       0       0
  7801 ;;Total ram usage:        8 bytes
  7802 ;; Hardware stack levels used:    1
  7803 ;; Hardware stack levels required when called:    7
  7804 ;; This function calls:
  7805 ;;		_vfpfcnvrt
  7806 ;; This function is called by:
  7807 ;;		_sprintf
  7808 ;; This function uses a non-reentrant model
  7809 ;;
  7810                           
  7811                           	psect	text36
  7812  002B70                     __ptext36:
  7813                           	opt callstack 0
  7814  002B70                     _vfprintf:
  7815                           	opt callstack 20
  7816  002B70                     
  7817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  7818  002B70  C0AF  F05B         	movff	vfprintf@fmt,vfprintf@cfmt
  7819  002B74  C0B0  F05C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7820  002B78                     
  7821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  7822  002B78  0E00               	movlw	0
  7823  002B7A  0100               	movlb	0	; () banked
  7824  002B7C  6F71               	movwf	(_nout+1)& (0+255),b
  7825  002B7E  0E00               	movlw	0
  7826  002B80  6F70               	movwf	_nout& (0+255),b
  7827                           
  7828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7829  002B82  EFD6  F015         	goto	l3809
  7830  002B86                     l3807:
  7831                           
  7832                           ; BSR set to: 0
  7833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  7834  002B86  C0AD  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  7835  002B8A  C0AE  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7836  002B8E  0E5B               	movlw	low vfprintf@cfmt
  7837  002B90  6E42               	movwf	vfpfcnvrt@fmt^0,c
  7838  002B92  0E00               	movlw	high vfprintf@cfmt
  7839  002B94  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  7840  002B96  C0B1  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  7841  002B9A  C0B2  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7842  002B9E  EC09  F000         	call	_vfpfcnvrt	;wreg free
  7843  002BA2  5040               	movf	?_vfpfcnvrt^0,w,c
  7844  002BA4  0100               	movlb	0	; () banked
  7845  002BA6  2770               	addwf	_nout& (0+255),f,b
  7846  002BA8  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  7847  002BAA  2371               	addwfc	(_nout+1)& (0+255),f,b
  7848  002BAC                     l3809:
  7849                           
  7850                           ; BSR set to: 0
  7851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7852  002BAC  C05B  FFF6         	movff	vfprintf@cfmt,tblptrl
  7853  002BB0  C05C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7854  002BB4                     	if	0	;tblptru may be non-zero
  7855  002BB4                     	endif
  7856  002BB4                     	if	0	;tblptru may be non-zero
  7857  002BB4                     	endif
  7858  002BB4  0008               	tblrd		*
  7859  002BB6  50F5               	movf	tablat,w,c
  7860  002BB8  0900               	iorlw	0
  7861  002BBA  A4D8               	btfss	status,2,c
  7862  002BBC  EFE2  F015         	goto	u2861
  7863  002BC0  EFE4  F015         	goto	u2860
  7864  002BC4                     u2861:
  7865  002BC4  EFC3  F015         	goto	l3807
  7866  002BC8                     u2860:
  7867  002BC8                     
  7868                           ; BSR set to: 0
  7869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  7870  002BC8  C070  F0AD         	movff	_nout,?_vfprintf
  7871  002BCC  C071  F0AE         	movff	_nout+1,?_vfprintf+1
  7872  002BD0                     
  7873                           ; BSR set to: 0
  7874  002BD0  0012               	return		;funcret
  7875  002BD2                     __end_of_vfprintf:
  7876                           	opt callstack 0
  7877                           
  7878 ;; *************** function _vfpfcnvrt *****************
  7879 ;; Defined at:
  7880 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7881 ;; Parameters:    Size  Location     Type
  7882 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  7883 ;;		 -> sprintf@f(6), 
  7884 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  7885 ;;		 -> vfprintf@cfmt(2), 
  7886 ;;  ap              2   67[COMRAM] PTR PTR void 
  7887 ;;		 -> sprintf@ap(2), 
  7888 ;; Auto vars:     Size  Location     Type
  7889 ;;  ll              8   73[COMRAM] long long 
  7890 ;;  llu             8    0        unsigned long long 
  7891 ;;  f               4    0        unsigned long long 
  7892 ;;  vp              3    0        PTR void 
  7893 ;;  ct              3    0        unsigned char [3]
  7894 ;;  done            2   83[COMRAM] int 
  7895 ;;  cp              2   81[COMRAM] PTR unsigned char 
  7896 ;;		 -> ?_sprintf(2), horarios(288), 
  7897 ;;  i               2    0        int 
  7898 ;;  c               1   89[COMRAM] unsigned char 
  7899 ;; Return value:  Size  Location     Type
  7900 ;;                  2   63[COMRAM] int 
  7901 ;; Registers used:
  7902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7903 ;; Tracked objects:
  7904 ;;		On entry : 0/0
  7905 ;;		On exit  : 0/0
  7906 ;;		Unchanged: 0/0
  7907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7908 ;;      Params:         6       0       0       0       0       0       0       0       0
  7909 ;;      Locals:        17       0       0       0       0       0       0       0       0
  7910 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7911 ;;      Totals:        27       0       0       0       0       0       0       0       0
  7912 ;;Total ram usage:       27 bytes
  7913 ;; Hardware stack levels used:    1
  7914 ;; Hardware stack levels required when called:    6
  7915 ;; This function calls:
  7916 ;;		_atoi
  7917 ;;		_ctoa
  7918 ;;		_dtoa
  7919 ;;		_fputc
  7920 ;;		_isdigit
  7921 ;;		_stoa
  7922 ;; This function is called by:
  7923 ;;		_vfprintf
  7924 ;; This function uses a non-reentrant model
  7925 ;;
  7926                           
  7927                           	psect	text37
  7928  000012                     __ptext37:
  7929                           	opt callstack 0
  7930  000012                     _vfpfcnvrt:
  7931                           	opt callstack 20
  7932  000012                     
  7933                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  7934  000012  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7935  000016  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7936  00001A  CFDE FFF6          	movff	postinc2,tblptrl
  7937  00001E  CFDD FFF7          	movff	postdec2,tblptrh
  7938  000022                     	if	0	;tblptru may be non-zero
  7939  000022                     	endif
  7940  000022                     	if	0	;tblptru may be non-zero
  7941  000022                     	endif
  7942  000022  0008               	tblrd		*
  7943  000024  50F5               	movf	tablat,w,c
  7944  000026  0A25               	xorlw	37
  7945  000028  A4D8               	btfss	status,2,c
  7946  00002A  EF19  F000         	goto	u2561
  7947  00002E  EF1B  F000         	goto	u2560
  7948  000032                     u2561:
  7949  000032  EFAE  F002         	goto	l3703
  7950  000036                     u2560:
  7951  000036                     
  7952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  7953  000036  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7954  00003A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7955  00003E  2ADE               	incf	postinc2,f,c
  7956  000040  0E00               	movlw	0
  7957  000042  22DD               	addwfc	postdec2,f,c
  7958  000044                     
  7959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  7960  000044  0E00               	movlw	0
  7961  000046  0100               	movlb	0	; () banked
  7962  000048  6F73               	movwf	(_width+1)& (0+255),b
  7963  00004A  0E00               	movlw	0
  7964  00004C  6F72               	movwf	_width& (0+255),b
  7965  00004E  C072  F076         	movff	_width,_flags
  7966  000052  C073  F077         	movff	_width+1,_flags+1
  7967  000056                     
  7968                           ; BSR set to: 0
  7969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  7970  000056  6974               	setf	_prec& (0+255),b
  7971  000058  6975               	setf	(_prec+1)& (0+255),b
  7972  00005A                     
  7973                           ; BSR set to: 0
  7974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  7975  00005A  0E00               	movlw	0
  7976  00005C  6E55               	movwf	(vfpfcnvrt@done+1)^0,c
  7977  00005E  0E00               	movlw	0
  7978  000060  6E54               	movwf	vfpfcnvrt@done^0,c
  7979                           
  7980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  7981  000062  EF7E  F000         	goto	l3619
  7982  000066                     l3593:
  7983                           
  7984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  7985  000066  0100               	movlb	0	; () banked
  7986  000068  8176               	bsf	_flags& (0+255),0,b
  7987  00006A                     l3595:
  7988                           
  7989                           ; BSR set to: 0
  7990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  7991  00006A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7992  00006E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7993  000072  2ADE               	incf	postinc2,f,c
  7994  000074  0E00               	movlw	0
  7995  000076  22DD               	addwfc	postdec2,f,c
  7996                           
  7997                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  7998  000078  EF7E  F000         	goto	l3619
  7999  00007C                     l3597:
  8000                           
  8001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  8002  00007C  0100               	movlb	0	; () banked
  8003  00007E  8376               	bsf	_flags& (0+255),1,b
  8004  000080  EF35  F000         	goto	l3595
  8005  000084                     l3601:
  8006                           
  8007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  8008  000084  0100               	movlb	0	; () banked
  8009  000086  8576               	bsf	_flags& (0+255),2,b
  8010  000088  EF35  F000         	goto	l3595
  8011  00008C                     l3605:
  8012                           
  8013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  8014  00008C  0100               	movlb	0	; () banked
  8015  00008E  8776               	bsf	_flags& (0+255),3,b
  8016  000090  EF35  F000         	goto	l3595
  8017  000094                     l3609:
  8018                           
  8019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  8020  000094  0100               	movlb	0	; () banked
  8021  000096  8976               	bsf	_flags& (0+255),4,b
  8022  000098  EF35  F000         	goto	l3595
  8023  00009C                     l3613:
  8024                           
  8025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  8026  00009C  0E00               	movlw	0
  8027  00009E  6E55               	movwf	(vfpfcnvrt@done+1)^0,c
  8028  0000A0  0E01               	movlw	1
  8029  0000A2  6E54               	movwf	vfpfcnvrt@done^0,c
  8030                           
  8031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  8032  0000A4  EF7E  F000         	goto	l3619
  8033  0000A8                     l3617:
  8034  0000A8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8035  0000AC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8036  0000B0  CFDE FFF6          	movff	postinc2,tblptrl
  8037  0000B4  CFDD FFF7          	movff	postdec2,tblptrh
  8038  0000B8                     	if	0	;tblptru may be non-zero
  8039  0000B8                     	endif
  8040  0000B8                     	if	0	;tblptru may be non-zero
  8041  0000B8                     	endif
  8042  0000B8  0008               	tblrd		*
  8043  0000BA  50F5               	movf	tablat,w,c
  8044  0000BC  6E46               	movwf	??_vfpfcnvrt^0,c
  8045  0000BE  6A47               	clrf	(??_vfpfcnvrt+1)^0,c
  8046                           
  8047                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8048                           ; Switch size 1, requested type "simple"
  8049                           ; Number of cases is 1, Range of values is 0 to 0
  8050                           ; switch strategies available:
  8051                           ; Name         Instructions Cycles
  8052                           ; simple_byte            4     3 (average)
  8053                           ;	Chosen strategy is simple_byte
  8054  0000C0  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  8055  0000C2  0A00               	xorlw	0	; case 0
  8056  0000C4  B4D8               	btfsc	status,2,c
  8057  0000C6  EF67  F000         	goto	l5135
  8058  0000CA  EF4E  F000         	goto	l3613
  8059  0000CE                     l5135:
  8060                           
  8061                           ; Switch size 1, requested type "simple"
  8062                           ; Number of cases is 5, Range of values is 32 to 48
  8063                           ; switch strategies available:
  8064                           ; Name         Instructions Cycles
  8065                           ; simple_byte           16     9 (average)
  8066                           ;	Chosen strategy is simple_byte
  8067  0000CE  5046               	movf	??_vfpfcnvrt^0,w,c
  8068  0000D0  0A20               	xorlw	32	; case 32
  8069  0000D2  B4D8               	btfsc	status,2,c
  8070  0000D4  EF46  F000         	goto	l3605
  8071  0000D8  0A03               	xorlw	3	; case 35
  8072  0000DA  B4D8               	btfsc	status,2,c
  8073  0000DC  EF4A  F000         	goto	l3609
  8074  0000E0  0A08               	xorlw	8	; case 43
  8075  0000E2  B4D8               	btfsc	status,2,c
  8076  0000E4  EF42  F000         	goto	l3601
  8077  0000E8  0A06               	xorlw	6	; case 45
  8078  0000EA  B4D8               	btfsc	status,2,c
  8079  0000EC  EF33  F000         	goto	l3593
  8080  0000F0  0A1D               	xorlw	29	; case 48
  8081  0000F2  B4D8               	btfsc	status,2,c
  8082  0000F4  EF3E  F000         	goto	l3597
  8083  0000F8  EF4E  F000         	goto	l3613
  8084  0000FC                     l3619:
  8085                           
  8086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  8087  0000FC  5054               	movf	vfpfcnvrt@done^0,w,c
  8088  0000FE  1055               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  8089  000100  B4D8               	btfsc	status,2,c
  8090  000102  EF85  F000         	goto	u2571
  8091  000106  EF87  F000         	goto	u2570
  8092  00010A                     u2571:
  8093  00010A  EF54  F000         	goto	l3617
  8094  00010E                     u2570:
  8095  00010E                     
  8096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  8097  00010E  0100               	movlb	0	; () banked
  8098  000110  A176               	btfss	_flags& (0+255),0,b
  8099  000112  EF8D  F000         	goto	u2581
  8100  000116  EF8F  F000         	goto	u2580
  8101  00011A                     u2581:
  8102  00011A  EF90  F000         	goto	l3623
  8103  00011E                     u2580:
  8104  00011E                     
  8105                           ; BSR set to: 0
  8106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  8107  00011E  9376               	bcf	_flags& (0+255),1,b
  8108  000120                     l3623:
  8109                           
  8110                           ; BSR set to: 0
  8111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  8112  000120  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8113  000124  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8114  000128  CFDE FFF6          	movff	postinc2,tblptrl
  8115  00012C  CFDD FFF7          	movff	postdec2,tblptrh
  8116  000130                     	if	0	;tblptru may be non-zero
  8117  000130                     	endif
  8118  000130                     	if	0	;tblptru may be non-zero
  8119  000130                     	endif
  8120  000130  0008               	tblrd		*
  8121  000132  50F5               	movf	tablat,w,c
  8122  000134  0A2A               	xorlw	42
  8123  000136  A4D8               	btfss	status,2,c
  8124  000138  EFA0  F000         	goto	u2591
  8125  00013C  EFA2  F000         	goto	u2590
  8126  000140                     u2591:
  8127  000140  EFCB  F000         	goto	l3631
  8128  000144                     u2590:
  8129  000144                     
  8130                           ; BSR set to: 0
  8131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  8132  000144  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8133  000148  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8134  00014C  2ADE               	incf	postinc2,f,c
  8135  00014E  0E00               	movlw	0
  8136  000150  22DD               	addwfc	postdec2,f,c
  8137                           
  8138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  8139  000152  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8140  000156  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8141  00015A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  8142  00015E  0E02               	movlw	2
  8143  000160  26DE               	addwf	postinc2,f,c
  8144  000162  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  8145  000166  0E00               	movlw	0
  8146  000168  22DD               	addwfc	postdec2,f,c
  8147  00016A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8148  00016E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8149  000172  CFDE F072          	movff	postinc2,_width
  8150  000176  CFDD F073          	movff	postdec2,_width+1
  8151  00017A                     
  8152                           ; BSR set to: 0
  8153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  8154  00017A  BF73               	btfsc	(_width+1)& (0+255),7,b
  8155  00017C  EFC4  F000         	goto	u2600
  8156  000180  EFC2  F000         	goto	u2601
  8157  000184                     u2601:
  8158  000184  EF0E  F001         	goto	l3641
  8159  000188                     u2600:
  8160  000188                     
  8161                           ; BSR set to: 0
  8162                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  8163  000188  8176               	bsf	_flags& (0+255),0,b
  8164                           
  8165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  8166  00018A  6D72               	negf	_width& (0+255),b
  8167  00018C  1F73               	comf	(_width+1)& (0+255),f,b
  8168  00018E  B0D8               	btfsc	status,0,c
  8169  000190  2B73               	incf	(_width+1)& (0+255),f,b
  8170  000192  EF0E  F001         	goto	l3641
  8171  000196                     l3631:
  8172                           
  8173                           ; BSR set to: 0
  8174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  8175  000196  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8176  00019A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8177  00019E  CFDE F008          	movff	postinc2,atoi@s
  8178  0001A2  CFDD F009          	movff	postdec2,atoi@s+1
  8179  0001A6  ECD7  F008         	call	_atoi	;wreg free
  8180  0001AA  C008  F072         	movff	?_atoi,_width
  8181  0001AE  C009  F073         	movff	?_atoi+1,_width+1
  8182                           
  8183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8184  0001B2  EFE2  F000         	goto	l3635
  8185  0001B6                     l3633:
  8186                           
  8187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  8188  0001B6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8189  0001BA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8190  0001BE  2ADE               	incf	postinc2,f,c
  8191  0001C0  0E00               	movlw	0
  8192  0001C2  22DD               	addwfc	postdec2,f,c
  8193  0001C4                     l3635:
  8194  0001C4  0ED0               	movlw	208
  8195  0001C6  6E46               	movwf	??_vfpfcnvrt^0,c
  8196  0001C8  0EFF               	movlw	255
  8197  0001CA  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  8198  0001CC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8199  0001D0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8200  0001D4  CFDE FFF6          	movff	postinc2,tblptrl
  8201  0001D8  CFDD FFF7          	movff	postdec2,tblptrh
  8202  0001DC                     	if	0	;tblptru may be non-zero
  8203  0001DC                     	endif
  8204  0001DC                     	if	0	;tblptru may be non-zero
  8205  0001DC                     	endif
  8206  0001DC  0008               	tblrd		*
  8207  0001DE  50F5               	movf	tablat,w,c
  8208  0001E0  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  8209  0001E2  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  8210  0001E4  5046               	movf	??_vfpfcnvrt^0,w,c
  8211  0001E6  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  8212  0001E8  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  8213  0001EA  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  8214  0001EC  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  8215  0001EE  E10A               	bnz	u2610
  8216  0001F0  0E0A               	movlw	10
  8217  0001F2  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  8218  0001F4  A0D8               	btfss	status,0,c
  8219  0001F6  EFFF  F000         	goto	u2611
  8220  0001FA  EF02  F001         	goto	u2610
  8221  0001FE                     u2611:
  8222  0001FE  0E01               	movlw	1
  8223  000200  EF03  F001         	goto	u2620
  8224  000204                     u2610:
  8225  000204  0E00               	movlw	0
  8226  000206                     u2620:
  8227  000206  6E56               	movwf	_vfpfcnvrt$1109^0,c
  8228  000208  6A57               	clrf	(_vfpfcnvrt$1109+1)^0,c
  8229  00020A  5056               	movf	_vfpfcnvrt$1109^0,w,c
  8230  00020C  1057               	iorwf	(_vfpfcnvrt$1109+1)^0,w,c
  8231  00020E  A4D8               	btfss	status,2,c
  8232  000210  EF0C  F001         	goto	u2631
  8233  000214  EF0E  F001         	goto	u2630
  8234  000218                     u2631:
  8235  000218  EFDB  F000         	goto	l3633
  8236  00021C                     u2630:
  8237  00021C                     l3641:
  8238                           
  8239                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  8240  00021C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8241  000220  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8242  000224  CFDE FFF6          	movff	postinc2,tblptrl
  8243  000228  CFDD FFF7          	movff	postdec2,tblptrh
  8244  00022C                     	if	0	;tblptru may be non-zero
  8245  00022C                     	endif
  8246  00022C                     	if	0	;tblptru may be non-zero
  8247  00022C                     	endif
  8248  00022C  0008               	tblrd		*
  8249  00022E  50F5               	movf	tablat,w,c
  8250  000230  0A2E               	xorlw	46
  8251  000232  A4D8               	btfss	status,2,c
  8252  000234  EF1E  F001         	goto	u2641
  8253  000238  EF20  F001         	goto	u2640
  8254  00023C                     u2641:
  8255  00023C  EF9E  F001         	goto	l3661
  8256  000240                     u2640:
  8257  000240                     
  8258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  8259  000240  0E00               	movlw	0
  8260  000242  0100               	movlb	0	; () banked
  8261  000244  6F75               	movwf	(_prec+1)& (0+255),b
  8262  000246  0E00               	movlw	0
  8263  000248  6F74               	movwf	_prec& (0+255),b
  8264  00024A                     
  8265                           ; BSR set to: 0
  8266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  8267  00024A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8268  00024E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8269  000252  2ADE               	incf	postinc2,f,c
  8270  000254  0E00               	movlw	0
  8271  000256  22DD               	addwfc	postdec2,f,c
  8272  000258                     
  8273                           ; BSR set to: 0
  8274                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  8275  000258  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8276  00025C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8277  000260  CFDE FFF6          	movff	postinc2,tblptrl
  8278  000264  CFDD FFF7          	movff	postdec2,tblptrh
  8279  000268                     	if	0	;tblptru may be non-zero
  8280  000268                     	endif
  8281  000268                     	if	0	;tblptru may be non-zero
  8282  000268                     	endif
  8283  000268  0008               	tblrd		*
  8284  00026A  50F5               	movf	tablat,w,c
  8285  00026C  0A2A               	xorlw	42
  8286  00026E  A4D8               	btfss	status,2,c
  8287  000270  EF3C  F001         	goto	u2651
  8288  000274  EF3E  F001         	goto	u2650
  8289  000278                     u2651:
  8290  000278  EF5B  F001         	goto	l3651
  8291  00027C                     u2650:
  8292  00027C                     
  8293                           ; BSR set to: 0
  8294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  8295  00027C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8296  000280  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8297  000284  2ADE               	incf	postinc2,f,c
  8298  000286  0E00               	movlw	0
  8299  000288  22DD               	addwfc	postdec2,f,c
  8300                           
  8301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  8302  00028A  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8303  00028E  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8304  000292  CFDF F046          	movff	indf2,??_vfpfcnvrt
  8305  000296  0E02               	movlw	2
  8306  000298  26DE               	addwf	postinc2,f,c
  8307  00029A  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  8308  00029E  0E00               	movlw	0
  8309  0002A0  22DD               	addwfc	postdec2,f,c
  8310  0002A2  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8311  0002A6  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8312  0002AA  CFDE F074          	movff	postinc2,_prec
  8313  0002AE  CFDD F075          	movff	postdec2,_prec+1
  8314                           
  8315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  8316  0002B2  EF9E  F001         	goto	l3661
  8317  0002B6                     l3651:
  8318                           
  8319                           ; BSR set to: 0
  8320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  8321  0002B6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8322  0002BA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8323  0002BE  CFDE F008          	movff	postinc2,atoi@s
  8324  0002C2  CFDD F009          	movff	postdec2,atoi@s+1
  8325  0002C6  ECD7  F008         	call	_atoi	;wreg free
  8326  0002CA  C008  F074         	movff	?_atoi,_prec
  8327  0002CE  C009  F075         	movff	?_atoi+1,_prec+1
  8328                           
  8329                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8330  0002D2  EF72  F001         	goto	l3655
  8331  0002D6                     l3653:
  8332                           
  8333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  8334  0002D6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8335  0002DA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8336  0002DE  2ADE               	incf	postinc2,f,c
  8337  0002E0  0E00               	movlw	0
  8338  0002E2  22DD               	addwfc	postdec2,f,c
  8339  0002E4                     l3655:
  8340  0002E4  0ED0               	movlw	208
  8341  0002E6  6E46               	movwf	??_vfpfcnvrt^0,c
  8342  0002E8  0EFF               	movlw	255
  8343  0002EA  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  8344  0002EC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8345  0002F0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8346  0002F4  CFDE FFF6          	movff	postinc2,tblptrl
  8347  0002F8  CFDD FFF7          	movff	postdec2,tblptrh
  8348  0002FC                     	if	0	;tblptru may be non-zero
  8349  0002FC                     	endif
  8350  0002FC                     	if	0	;tblptru may be non-zero
  8351  0002FC                     	endif
  8352  0002FC  0008               	tblrd		*
  8353  0002FE  50F5               	movf	tablat,w,c
  8354  000300  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  8355  000302  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  8356  000304  5046               	movf	??_vfpfcnvrt^0,w,c
  8357  000306  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  8358  000308  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  8359  00030A  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  8360  00030C  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  8361  00030E  E10A               	bnz	u2660
  8362  000310  0E0A               	movlw	10
  8363  000312  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  8364  000314  A0D8               	btfss	status,0,c
  8365  000316  EF8F  F001         	goto	u2661
  8366  00031A  EF92  F001         	goto	u2660
  8367  00031E                     u2661:
  8368  00031E  0E01               	movlw	1
  8369  000320  EF93  F001         	goto	u2670
  8370  000324                     u2660:
  8371  000324  0E00               	movlw	0
  8372  000326                     u2670:
  8373  000326  6E58               	movwf	_vfpfcnvrt$1110^0,c
  8374  000328  6A59               	clrf	(_vfpfcnvrt$1110+1)^0,c
  8375  00032A  5058               	movf	_vfpfcnvrt$1110^0,w,c
  8376  00032C  1059               	iorwf	(_vfpfcnvrt$1110+1)^0,w,c
  8377  00032E  A4D8               	btfss	status,2,c
  8378  000330  EF9C  F001         	goto	u2681
  8379  000334  EF9E  F001         	goto	u2680
  8380  000338                     u2681:
  8381  000338  EF6B  F001         	goto	l3653
  8382  00033C                     u2680:
  8383  00033C                     l3661:
  8384                           
  8385                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  8386  00033C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8387  000340  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8388  000344  CFDE FFF6          	movff	postinc2,tblptrl
  8389  000348  CFDD FFF7          	movff	postdec2,tblptrh
  8390  00034C                     	if	0	;tblptru may be non-zero
  8391  00034C                     	endif
  8392  00034C                     	if	0	;tblptru may be non-zero
  8393  00034C                     	endif
  8394  00034C  0008               	tblrd		*
  8395  00034E  50F5               	movf	tablat,w,c
  8396  000350  0A63               	xorlw	99
  8397  000352  A4D8               	btfss	status,2,c
  8398  000354  EFAE  F001         	goto	u2691
  8399  000358  EFB0  F001         	goto	u2690
  8400  00035C                     u2691:
  8401  00035C  EFD7  F001         	goto	l3669
  8402  000360                     u2690:
  8403  000360                     
  8404                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  8405  000360  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8406  000364  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8407  000368  2ADE               	incf	postinc2,f,c
  8408  00036A  0E00               	movlw	0
  8409  00036C  22DD               	addwfc	postdec2,f,c
  8410                           
  8411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8412  00036E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8413  000372  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8414  000376  CFDF F046          	movff	indf2,??_vfpfcnvrt
  8415  00037A  0E02               	movlw	2
  8416  00037C  26DE               	addwf	postinc2,f,c
  8417  00037E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  8418  000382  0E00               	movlw	0
  8419  000384  22DD               	addwfc	postdec2,f,c
  8420  000386  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8421  00038A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8422  00038E  50DF               	movf	indf2,w,c
  8423  000390  6E5A               	movwf	vfpfcnvrt@c^0,c
  8424  000392                     
  8425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  8426  000392  C040  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  8427  000396  C041  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  8428  00039A  C05A  F01E         	movff	vfpfcnvrt@c,ctoa@c
  8429  00039E  ECA4  F016         	call	_ctoa	;wreg free
  8430  0003A2  C01C  F040         	movff	?_ctoa,?_vfpfcnvrt
  8431  0003A6  C01D  F041         	movff	?_ctoa+1,?_vfpfcnvrt+1
  8432  0003AA  EFC9  F002         	goto	l622
  8433  0003AE                     l3669:
  8434                           
  8435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8436  0003AE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8437  0003B2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8438  0003B6  CFDE FFF6          	movff	postinc2,tblptrl
  8439  0003BA  CFDD FFF7          	movff	postdec2,tblptrh
  8440  0003BE                     	if	0	;tblptru may be non-zero
  8441  0003BE                     	endif
  8442  0003BE                     	if	0	;tblptru may be non-zero
  8443  0003BE                     	endif
  8444  0003BE  0008               	tblrd		*
  8445  0003C0  50F5               	movf	tablat,w,c
  8446  0003C2  0A64               	xorlw	100
  8447  0003C4  B4D8               	btfsc	status,2,c
  8448  0003C6  EFE7  F001         	goto	u2701
  8449  0003CA  EFE9  F001         	goto	u2700
  8450  0003CE                     u2701:
  8451  0003CE  EFFB  F001         	goto	l3673
  8452  0003D2                     u2700:
  8453  0003D2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8454  0003D6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8455  0003DA  CFDE FFF6          	movff	postinc2,tblptrl
  8456  0003DE  CFDD FFF7          	movff	postdec2,tblptrh
  8457  0003E2                     	if	0	;tblptru may be non-zero
  8458  0003E2                     	endif
  8459  0003E2                     	if	0	;tblptru may be non-zero
  8460  0003E2                     	endif
  8461  0003E2  0008               	tblrd		*
  8462  0003E4  50F5               	movf	tablat,w,c
  8463  0003E6  0A69               	xorlw	105
  8464  0003E8  A4D8               	btfss	status,2,c
  8465  0003EA  EFF9  F001         	goto	u2711
  8466  0003EE  EFFB  F001         	goto	u2710
  8467  0003F2                     u2711:
  8468  0003F2  EF3B  F002         	goto	l3679
  8469  0003F6                     u2710:
  8470  0003F6                     l3673:
  8471                           
  8472                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  8473  0003F6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8474  0003FA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8475  0003FE  2ADE               	incf	postinc2,f,c
  8476  000400  0E00               	movlw	0
  8477  000402  22DD               	addwfc	postdec2,f,c
  8478                           
  8479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8480  000404  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8481  000408  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8482  00040C  CFDF F046          	movff	indf2,??_vfpfcnvrt
  8483  000410  0E02               	movlw	2
  8484  000412  26DE               	addwf	postinc2,f,c
  8485  000414  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  8486  000418  0E00               	movlw	0
  8487  00041A  22DD               	addwfc	postdec2,f,c
  8488  00041C  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8489  000420  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8490  000424  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  8491  000428  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  8492  00042C  0E00               	movlw	0
  8493  00042E  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  8494  000430  0EFF               	movlw	-1
  8495  000432  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  8496  000434  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  8497  000436  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  8498  000438  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  8499  00043A  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  8500  00043C  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  8501  00043E                     
  8502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  8503  00043E  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  8504  000442  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8505  000446  C04A  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  8506  00044A  C04B  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  8507  00044E  C04C  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  8508  000452  C04D  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  8509  000456  C04E  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  8510  00045A  C04F  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  8511  00045E  C050  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  8512  000462  C051  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  8513  000466  EC42  F004         	call	_dtoa	;wreg free
  8514  00046A  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  8515  00046E  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  8516  000472  EFC9  F002         	goto	l622
  8517  000476                     l3679:
  8518                           
  8519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  8520  000476  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8521  00047A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8522  00047E  CFDE FFF6          	movff	postinc2,tblptrl
  8523  000482  CFDD FFF7          	movff	postdec2,tblptrh
  8524  000486                     	if	0	;tblptru may be non-zero
  8525  000486                     	endif
  8526  000486                     	if	0	;tblptru may be non-zero
  8527  000486                     	endif
  8528  000486  0008               	tblrd		*
  8529  000488  50F5               	movf	tablat,w,c
  8530  00048A  0A73               	xorlw	115
  8531  00048C  A4D8               	btfss	status,2,c
  8532  00048E  EF4B  F002         	goto	u2721
  8533  000492  EF4D  F002         	goto	u2720
  8534  000496                     u2721:
  8535  000496  EF78  F002         	goto	l3687
  8536  00049A                     u2720:
  8537  00049A                     
  8538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  8539  00049A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8540  00049E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8541  0004A2  2ADE               	incf	postinc2,f,c
  8542  0004A4  0E00               	movlw	0
  8543  0004A6  22DD               	addwfc	postdec2,f,c
  8544                           
  8545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  8546  0004A8  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8547  0004AC  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8548  0004B0  CFDF F046          	movff	indf2,??_vfpfcnvrt
  8549  0004B4  0E02               	movlw	2
  8550  0004B6  26DE               	addwf	postinc2,f,c
  8551  0004B8  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  8552  0004BC  0E00               	movlw	0
  8553  0004BE  22DD               	addwfc	postdec2,f,c
  8554  0004C0  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8555  0004C4  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8556  0004C8  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  8557  0004CC  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  8558  0004D0                     
  8559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  8560  0004D0  C040  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  8561  0004D4  C041  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  8562  0004D8  C052  F00C         	movff	vfpfcnvrt@cp,stoa@s
  8563  0004DC  C053  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  8564  0004E0  EC63  F00A         	call	_stoa	;wreg free
  8565  0004E4  C00A  F040         	movff	?_stoa,?_vfpfcnvrt
  8566  0004E8  C00B  F041         	movff	?_stoa+1,?_vfpfcnvrt+1
  8567  0004EC  EFC9  F002         	goto	l622
  8568  0004F0                     l3687:
  8569                           
  8570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  8571  0004F0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8572  0004F4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8573  0004F8  CFDE FFF6          	movff	postinc2,tblptrl
  8574  0004FC  CFDD FFF7          	movff	postdec2,tblptrh
  8575  000500                     	if	0	;tblptru may be non-zero
  8576  000500                     	endif
  8577  000500                     	if	0	;tblptru may be non-zero
  8578  000500                     	endif
  8579  000500  0008               	tblrd		*
  8580  000502  50F5               	movf	tablat,w,c
  8581  000504  0A25               	xorlw	37
  8582  000506  A4D8               	btfss	status,2,c
  8583  000508  EF88  F002         	goto	u2731
  8584  00050C  EF8A  F002         	goto	u2730
  8585  000510                     u2731:
  8586  000510  EFA1  F002         	goto	l3697
  8587  000514                     u2730:
  8588  000514                     
  8589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  8590  000514  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8591  000518  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8592  00051C  2ADE               	incf	postinc2,f,c
  8593  00051E  0E00               	movlw	0
  8594  000520  22DD               	addwfc	postdec2,f,c
  8595  000522                     
  8596                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  8597  000522  0E00               	movlw	0
  8598  000524  6E02               	movwf	(fputc@c+1)^0,c
  8599  000526  0E25               	movlw	37
  8600  000528  6E01               	movwf	fputc@c^0,c
  8601  00052A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  8602  00052E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8603  000532  EC03  F011         	call	_fputc	;wreg free
  8604  000536                     l3693:
  8605                           
  8606                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  8607  000536  0E00               	movlw	0
  8608  000538  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  8609  00053A  0E01               	movlw	1
  8610  00053C  6E40               	movwf	?_vfpfcnvrt^0,c
  8611  00053E  EFC9  F002         	goto	l622
  8612  000542                     l3697:
  8613                           
  8614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  8615  000542  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8616  000546  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8617  00054A  2ADE               	incf	postinc2,f,c
  8618  00054C  0E00               	movlw	0
  8619  00054E  22DD               	addwfc	postdec2,f,c
  8620  000550                     
  8621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  8622  000550  0E00               	movlw	0
  8623  000552  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  8624  000554  0E00               	movlw	0
  8625  000556  6E40               	movwf	?_vfpfcnvrt^0,c
  8626  000558  EFC9  F002         	goto	l622
  8627  00055C                     l3703:
  8628                           
  8629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  8630  00055C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8631  000560  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8632  000564  CFDE FFF6          	movff	postinc2,tblptrl
  8633  000568  CFDD FFF7          	movff	postdec2,tblptrh
  8634  00056C                     	if	0	;tblptru may be non-zero
  8635  00056C                     	endif
  8636  00056C                     	if	0	;tblptru may be non-zero
  8637  00056C                     	endif
  8638  00056C  0008               	tblrd		*
  8639  00056E  50F5               	movf	tablat,w,c
  8640  000570  6E01               	movwf	fputc@c^0,c
  8641  000572  6A02               	clrf	(fputc@c+1)^0,c
  8642  000574  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  8643  000578  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8644  00057C  EC03  F011         	call	_fputc	;wreg free
  8645  000580                     
  8646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  8647  000580  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8648  000584  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8649  000588  2ADE               	incf	postinc2,f,c
  8650  00058A  0E00               	movlw	0
  8651  00058C  22DD               	addwfc	postdec2,f,c
  8652  00058E  EF9B  F002         	goto	l3693
  8653  000592                     l622:
  8654  000592  0012               	return		;funcret
  8655  000594                     __end_of_vfpfcnvrt:
  8656                           	opt callstack 0
  8657                           
  8658 ;; *************** function _stoa *****************
  8659 ;; Defined at:
  8660 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8661 ;; Parameters:    Size  Location     Type
  8662 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  8663 ;;		 -> sprintf@f(6), 
  8664 ;;  s               2   11[COMRAM] PTR unsigned char 
  8665 ;;		 -> ?_sprintf(2), horarios(288), 
  8666 ;; Auto vars:     Size  Location     Type
  8667 ;;  nuls            7   14[COMRAM] unsigned char [7]
  8668 ;;  l               2   29[COMRAM] int 
  8669 ;;  p               2   27[COMRAM] int 
  8670 ;;  cp              2   25[COMRAM] PTR unsigned char 
  8671 ;;		 -> ?_sprintf(2), stoa@nuls(7), horarios(288), 
  8672 ;;  w               2   23[COMRAM] int 
  8673 ;;  i               2   21[COMRAM] int 
  8674 ;; Return value:  Size  Location     Type
  8675 ;;                  2    9[COMRAM] int 
  8676 ;; Registers used:
  8677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8678 ;; Tracked objects:
  8679 ;;		On entry : 0/0
  8680 ;;		On exit  : 0/0
  8681 ;;		Unchanged: 0/0
  8682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8683 ;;      Params:         4       0       0       0       0       0       0       0       0
  8684 ;;      Locals:        17       0       0       0       0       0       0       0       0
  8685 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8686 ;;      Totals:        22       0       0       0       0       0       0       0       0
  8687 ;;Total ram usage:       22 bytes
  8688 ;; Hardware stack levels used:    1
  8689 ;; Hardware stack levels required when called:    3
  8690 ;; This function calls:
  8691 ;;		_fputc
  8692 ;;		_strlen
  8693 ;; This function is called by:
  8694 ;;		_vfpfcnvrt
  8695 ;; This function uses a non-reentrant model
  8696 ;;
  8697                           
  8698                           	psect	text38
  8699  0014C6                     __ptext38:
  8700                           	opt callstack 0
  8701  0014C6                     _stoa:
  8702                           	opt callstack 22
  8703  0014C6                     
  8704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8705  0014C6  EE20  F0F4         	lfsr	2,stoa@F1144
  8706  0014CA  EE10  F00F         	lfsr	1,stoa@nuls
  8707  0014CE  0E06               	movlw	6
  8708  0014D0                     u2371:
  8709  0014D0  CFDB FFE3          	movff	plusw2,plusw1
  8710  0014D4  06E8               	decf	wreg,f,c
  8711  0014D6  E2FC               	bc	u2371
  8712  0014D8                     
  8713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8714  0014D8  C00C  F01A         	movff	stoa@s,stoa@cp
  8715  0014DC  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  8716  0014E0                     
  8717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8718  0014E0  501A               	movf	stoa@cp^0,w,c
  8719  0014E2  101B               	iorwf	(stoa@cp+1)^0,w,c
  8720  0014E4  A4D8               	btfss	status,2,c
  8721  0014E6  EF77  F00A         	goto	u2381
  8722  0014EA  EF79  F00A         	goto	u2380
  8723  0014EE                     u2381:
  8724  0014EE  EF7D  F00A         	goto	l3499
  8725  0014F2                     u2380:
  8726  0014F2                     
  8727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8728  0014F2  0E0F               	movlw	low stoa@nuls
  8729  0014F4  6E1A               	movwf	stoa@cp^0,c
  8730  0014F6  0E00               	movlw	high stoa@nuls
  8731  0014F8  6E1B               	movwf	(stoa@cp+1)^0,c
  8732  0014FA                     l3499:
  8733                           
  8734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8735  0014FA  C01A  F001         	movff	stoa@cp,strlen@s
  8736  0014FE  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  8737  001502  EC6E  F018         	call	_strlen	;wreg free
  8738  001506  C001  F01E         	movff	?_strlen,stoa@l
  8739  00150A  C002  F01F         	movff	?_strlen+1,stoa@l+1
  8740  00150E                     
  8741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8742  00150E  C074  F01C         	movff	_prec,stoa@p
  8743  001512  C075  F01D         	movff	_prec+1,stoa@p+1
  8744  001516                     
  8745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8746  001516  BE1D               	btfsc	(stoa@p+1)^0,7,c
  8747  001518  EF90  F00A         	goto	u2391
  8748  00151C  EF92  F00A         	goto	u2390
  8749  001520                     u2391:
  8750  001520  EFA7  F00A         	goto	l571
  8751  001524                     u2390:
  8752  001524  501E               	movf	stoa@l^0,w,c
  8753  001526  5C1C               	subwf	stoa@p^0,w,c
  8754  001528  501D               	movf	(stoa@p+1)^0,w,c
  8755  00152A  0A80               	xorlw	128
  8756  00152C  6E0E               	movwf	??_stoa^0,c
  8757  00152E  501F               	movf	(stoa@l+1)^0,w,c
  8758  001530  0A80               	xorlw	128
  8759  001532  580E               	subwfb	??_stoa^0,w,c
  8760  001534  A0D8               	btfss	status,0,c
  8761  001536  EF9F  F00A         	goto	u2401
  8762  00153A  EFA1  F00A         	goto	u2400
  8763  00153E                     u2401:
  8764  00153E  EFA3  F00A         	goto	l569
  8765  001542                     u2400:
  8766  001542  EFA7  F00A         	goto	l571
  8767  001546                     l569:
  8768  001546  C01C  F01E         	movff	stoa@p,stoa@l
  8769  00154A  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  8770  00154E                     l571:
  8771                           
  8772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8773  00154E  C01E  F01C         	movff	stoa@l,stoa@p
  8774  001552  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  8775                           
  8776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8777  001556  C072  F018         	movff	_width,stoa@w
  8778  00155A  C073  F019         	movff	_width+1,stoa@w+1
  8779                           
  8780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8781  00155E  0100               	movlb	0	; () banked
  8782  001560  B176               	btfsc	_flags& (0+255),0,b
  8783  001562  EFB5  F00A         	goto	u2411
  8784  001566  EFB7  F00A         	goto	u2410
  8785  00156A                     u2411:
  8786  00156A  EFD4  F00A         	goto	l3515
  8787  00156E                     u2410:
  8788  00156E  EFC5  F00A         	goto	l3513
  8789  001572                     l3509:
  8790                           
  8791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8792  001572  0E00               	movlw	0
  8793  001574  6E02               	movwf	(fputc@c+1)^0,c
  8794  001576  0E20               	movlw	32
  8795  001578  6E01               	movwf	fputc@c^0,c
  8796  00157A  C00A  F003         	movff	stoa@fp,fputc@fp
  8797  00157E  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8798  001582  EC03  F011         	call	_fputc	;wreg free
  8799  001586                     
  8800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8801  001586  4A1E               	infsnz	stoa@l^0,f,c
  8802  001588  2A1F               	incf	(stoa@l+1)^0,f,c
  8803  00158A                     l3513:
  8804                           
  8805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8806  00158A  5018               	movf	stoa@w^0,w,c
  8807  00158C  5C1E               	subwf	stoa@l^0,w,c
  8808  00158E  501F               	movf	(stoa@l+1)^0,w,c
  8809  001590  0A80               	xorlw	128
  8810  001592  6E0E               	movwf	??_stoa^0,c
  8811  001594  5019               	movf	(stoa@w+1)^0,w,c
  8812  001596  0A80               	xorlw	128
  8813  001598  580E               	subwfb	??_stoa^0,w,c
  8814  00159A  A0D8               	btfss	status,0,c
  8815  00159C  EFD2  F00A         	goto	u2421
  8816  0015A0  EFD4  F00A         	goto	u2420
  8817  0015A4                     u2421:
  8818  0015A4  EFB9  F00A         	goto	l3509
  8819  0015A8                     u2420:
  8820  0015A8                     l3515:
  8821                           
  8822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8823  0015A8  0E00               	movlw	0
  8824  0015AA  6E17               	movwf	(stoa@i+1)^0,c
  8825  0015AC  0E00               	movlw	0
  8826  0015AE  6E16               	movwf	stoa@i^0,c
  8827                           
  8828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8829  0015B0  EFED  F00A         	goto	l3523
  8830  0015B4                     l3517:
  8831                           
  8832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8833  0015B4  C01A  FFD9         	movff	stoa@cp,fsr2l
  8834  0015B8  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  8835  0015BC  50DF               	movf	indf2,w,c
  8836  0015BE  6E0E               	movwf	??_stoa^0,c
  8837  0015C0  500E               	movf	??_stoa^0,w,c
  8838  0015C2  6E01               	movwf	fputc@c^0,c
  8839  0015C4  6A02               	clrf	(fputc@c+1)^0,c
  8840  0015C6  C00A  F003         	movff	stoa@fp,fputc@fp
  8841  0015CA  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8842  0015CE  EC03  F011         	call	_fputc	;wreg free
  8843  0015D2                     
  8844                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8845  0015D2  4A1A               	infsnz	stoa@cp^0,f,c
  8846  0015D4  2A1B               	incf	(stoa@cp+1)^0,f,c
  8847  0015D6                     
  8848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8849  0015D6  4A16               	infsnz	stoa@i^0,f,c
  8850  0015D8  2A17               	incf	(stoa@i+1)^0,f,c
  8851  0015DA                     l3523:
  8852                           
  8853                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8854  0015DA  501C               	movf	stoa@p^0,w,c
  8855  0015DC  5C16               	subwf	stoa@i^0,w,c
  8856  0015DE  5017               	movf	(stoa@i+1)^0,w,c
  8857  0015E0  0A80               	xorlw	128
  8858  0015E2  6E0E               	movwf	??_stoa^0,c
  8859  0015E4  501D               	movf	(stoa@p+1)^0,w,c
  8860  0015E6  0A80               	xorlw	128
  8861  0015E8  580E               	subwfb	??_stoa^0,w,c
  8862  0015EA  A0D8               	btfss	status,0,c
  8863  0015EC  EFFA  F00A         	goto	u2431
  8864  0015F0  EFFC  F00A         	goto	u2430
  8865  0015F4                     u2431:
  8866  0015F4  EFDA  F00A         	goto	l3517
  8867  0015F8                     u2430:
  8868  0015F8                     
  8869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8870  0015F8  0100               	movlb	0	; () banked
  8871  0015FA  A176               	btfss	_flags& (0+255),0,b
  8872  0015FC  EF02  F00B         	goto	u2441
  8873  001600  EF04  F00B         	goto	u2440
  8874  001604                     u2441:
  8875  001604  EF21  F00B         	goto	l581
  8876  001608                     u2440:
  8877  001608  EF12  F00B         	goto	l3531
  8878  00160C                     l3527:
  8879                           
  8880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8881  00160C  0E00               	movlw	0
  8882  00160E  6E02               	movwf	(fputc@c+1)^0,c
  8883  001610  0E20               	movlw	32
  8884  001612  6E01               	movwf	fputc@c^0,c
  8885  001614  C00A  F003         	movff	stoa@fp,fputc@fp
  8886  001618  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8887  00161C  EC03  F011         	call	_fputc	;wreg free
  8888  001620                     
  8889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8890  001620  4A1E               	infsnz	stoa@l^0,f,c
  8891  001622  2A1F               	incf	(stoa@l+1)^0,f,c
  8892  001624                     l3531:
  8893                           
  8894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8895  001624  5018               	movf	stoa@w^0,w,c
  8896  001626  5C1E               	subwf	stoa@l^0,w,c
  8897  001628  501F               	movf	(stoa@l+1)^0,w,c
  8898  00162A  0A80               	xorlw	128
  8899  00162C  6E0E               	movwf	??_stoa^0,c
  8900  00162E  5019               	movf	(stoa@w+1)^0,w,c
  8901  001630  0A80               	xorlw	128
  8902  001632  580E               	subwfb	??_stoa^0,w,c
  8903  001634  A0D8               	btfss	status,0,c
  8904  001636  EF1F  F00B         	goto	u2451
  8905  00163A  EF21  F00B         	goto	u2450
  8906  00163E                     u2451:
  8907  00163E  EF06  F00B         	goto	l3527
  8908  001642                     u2450:
  8909  001642                     l581:
  8910                           
  8911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8912  001642  C01E  F00A         	movff	stoa@l,?_stoa
  8913  001646  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  8914  00164A  0012               	return		;funcret
  8915  00164C                     __end_of_stoa:
  8916                           	opt callstack 0
  8917                           
  8918 ;; *************** function _dtoa *****************
  8919 ;; Defined at:
  8920 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8921 ;; Parameters:    Size  Location     Type
  8922 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8923 ;;		 -> sprintf@f(6), 
  8924 ;;  d               8   29[COMRAM] long long 
  8925 ;; Auto vars:     Size  Location     Type
  8926 ;;  n               8   53[COMRAM] long long 
  8927 ;;  i               2   61[COMRAM] int 
  8928 ;;  s               2   51[COMRAM] int 
  8929 ;;  w               2   49[COMRAM] int 
  8930 ;;  p               2   47[COMRAM] int 
  8931 ;; Return value:  Size  Location     Type
  8932 ;;                  2   27[COMRAM] int 
  8933 ;; Registers used:
  8934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8935 ;; Tracked objects:
  8936 ;;		On entry : 0/0
  8937 ;;		On exit  : 0/0
  8938 ;;		Unchanged: 0/0
  8939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8940 ;;      Params:        10       0       0       0       0       0       0       0       0
  8941 ;;      Locals:        18       0       0       0       0       0       0       0       0
  8942 ;;      Temps:          8       0       0       0       0       0       0       0       0
  8943 ;;      Totals:        36       0       0       0       0       0       0       0       0
  8944 ;;Total ram usage:       36 bytes
  8945 ;; Hardware stack levels used:    1
  8946 ;; Hardware stack levels required when called:    5
  8947 ;; This function calls:
  8948 ;;		___aodiv
  8949 ;;		___aomod
  8950 ;;		_abs
  8951 ;;		_pad
  8952 ;; This function is called by:
  8953 ;;		_vfpfcnvrt
  8954 ;; This function uses a non-reentrant model
  8955 ;;
  8956                           
  8957                           	psect	text39
  8958  000884                     __ptext39:
  8959                           	opt callstack 0
  8960  000884                     _dtoa:
  8961                           	opt callstack 20
  8962  000884                     
  8963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8964  000884  C01E  F036         	movff	dtoa@d,dtoa@n
  8965  000888  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  8966  00088C  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  8967  000890  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  8968  000894  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  8969  000898  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  8970  00089C  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  8971  0008A0  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  8972  0008A4                     
  8973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  8974  0008A4  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  8975  0008A6  EF57  F004         	goto	u2221
  8976  0008AA  EF5A  F004         	goto	u2220
  8977  0008AE                     u2221:
  8978  0008AE  0E01               	movlw	1
  8979  0008B0  EF5B  F004         	goto	u2230
  8980  0008B4                     u2220:
  8981  0008B4  0E00               	movlw	0
  8982  0008B6                     u2230:
  8983  0008B6  6E34               	movwf	dtoa@s^0,c
  8984  0008B8  6A35               	clrf	(dtoa@s+1)^0,c
  8985                           
  8986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  8987  0008BA  5034               	movf	dtoa@s^0,w,c
  8988  0008BC  1035               	iorwf	(dtoa@s+1)^0,w,c
  8989  0008BE  B4D8               	btfsc	status,2,c
  8990  0008C0  EF64  F004         	goto	u2241
  8991  0008C4  EF66  F004         	goto	u2240
  8992  0008C8                     u2241:
  8993  0008C8  EF76  F004         	goto	l3435
  8994  0008CC                     u2240:
  8995  0008CC                     
  8996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  8997  0008CC  1E3D               	comf	(dtoa@n+7)^0,f,c
  8998  0008CE  1E3C               	comf	(dtoa@n+6)^0,f,c
  8999  0008D0  1E3B               	comf	(dtoa@n+5)^0,f,c
  9000  0008D2  1E3A               	comf	(dtoa@n+4)^0,f,c
  9001  0008D4  1E39               	comf	(dtoa@n+3)^0,f,c
  9002  0008D6  1E38               	comf	(dtoa@n+2)^0,f,c
  9003  0008D8  1E37               	comf	(dtoa@n+1)^0,f,c
  9004  0008DA  6C36               	negf	dtoa@n^0,c
  9005  0008DC  0E00               	movlw	0
  9006  0008DE  2237               	addwfc	(dtoa@n+1)^0,f,c
  9007  0008E0  2238               	addwfc	(dtoa@n+2)^0,f,c
  9008  0008E2  2239               	addwfc	(dtoa@n+3)^0,f,c
  9009  0008E4  223A               	addwfc	(dtoa@n+4)^0,f,c
  9010  0008E6  223B               	addwfc	(dtoa@n+5)^0,f,c
  9011  0008E8  223C               	addwfc	(dtoa@n+6)^0,f,c
  9012  0008EA  223D               	addwfc	(dtoa@n+7)^0,f,c
  9013  0008EC                     l3435:
  9014                           
  9015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  9016  0008EC  0100               	movlb	0	; () banked
  9017  0008EE  BF75               	btfsc	(_prec+1)& (0+255),7,b
  9018  0008F0  EF7C  F004         	goto	u2251
  9019  0008F4  EF7E  F004         	goto	u2250
  9020  0008F8                     u2251:
  9021  0008F8  EF7F  F004         	goto	l3439
  9022  0008FC                     u2250:
  9023  0008FC                     
  9024                           ; BSR set to: 0
  9025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  9026  0008FC  9376               	bcf	_flags& (0+255),1,b
  9027  0008FE                     l3439:
  9028                           
  9029                           ; BSR set to: 0
  9030                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  9031  0008FE  BF75               	btfsc	(_prec+1)& (0+255),7,b
  9032  000900  EF8C  F004         	goto	u2260
  9033  000904  5175               	movf	(_prec+1)& (0+255),w,b
  9034  000906  E106               	bnz	u2261
  9035  000908  0574               	decf	_prec& (0+255),w,b
  9036  00090A  B0D8               	btfsc	status,0,c
  9037  00090C  EF8A  F004         	goto	u2261
  9038  000910  EF8C  F004         	goto	u2260
  9039  000914                     u2261:
  9040  000914  EF92  F004         	goto	l542
  9041  000918                     u2260:
  9042  000918                     
  9043                           ; BSR set to: 0
  9044  000918  0E00               	movlw	0
  9045  00091A  6E31               	movwf	(dtoa@p+1)^0,c
  9046  00091C  0E01               	movlw	1
  9047  00091E  6E30               	movwf	dtoa@p^0,c
  9048  000920  EF96  F004         	goto	l544
  9049  000924                     l542:
  9050                           
  9051                           ; BSR set to: 0
  9052  000924  C074  F030         	movff	_prec,dtoa@p
  9053  000928  C075  F031         	movff	_prec+1,dtoa@p+1
  9054  00092C                     l544:
  9055                           
  9056                           ; BSR set to: 0
  9057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  9058  00092C  C072  F032         	movff	_width,dtoa@w
  9059  000930  C073  F033         	movff	_width+1,dtoa@w+1
  9060  000934                     
  9061                           ; BSR set to: 0
  9062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  9063  000934  5034               	movf	dtoa@s^0,w,c
  9064  000936  1035               	iorwf	(dtoa@s+1)^0,w,c
  9065  000938  A4D8               	btfss	status,2,c
  9066  00093A  EFA1  F004         	goto	u2271
  9067  00093E  EFA3  F004         	goto	u2270
  9068  000942                     u2271:
  9069  000942  EFAA  F004         	goto	l3447
  9070  000946                     u2270:
  9071  000946                     
  9072                           ; BSR set to: 0
  9073  000946  A576               	btfss	_flags& (0+255),2,b
  9074  000948  EFA8  F004         	goto	u2281
  9075  00094C  EFAA  F004         	goto	u2280
  9076  000950                     u2281:
  9077  000950  EFAD  F004         	goto	l3449
  9078  000954                     u2280:
  9079  000954                     l3447:
  9080                           
  9081                           ; BSR set to: 0
  9082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  9083  000954  0632               	decf	dtoa@w^0,f,c
  9084  000956  A0D8               	btfss	status,0,c
  9085  000958  0633               	decf	(dtoa@w+1)^0,f,c
  9086  00095A                     l3449:
  9087                           
  9088                           ; BSR set to: 0
  9089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  9090  00095A  0E00               	movlw	0
  9091  00095C  6E3F               	movwf	(dtoa@i+1)^0,c
  9092  00095E  0E1F               	movlw	31
  9093  000960  6E3E               	movwf	dtoa@i^0,c
  9094  000962                     
  9095                           ; BSR set to: 0
  9096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  9097  000962  0E00               	movlw	0
  9098  000964  6FAC               	movwf	(_dbuf+31)& (0+255),b
  9099                           
  9100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9101  000966  EF31  F005         	goto	l3463
  9102  00096A                     l3453:
  9103                           
  9104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  9105  00096A  063E               	decf	dtoa@i^0,f,c
  9106  00096C  A0D8               	btfss	status,0,c
  9107  00096E  063F               	decf	(dtoa@i+1)^0,f,c
  9108  000970                     
  9109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  9110  000970  0E8D               	movlw	low _dbuf
  9111  000972  243E               	addwf	dtoa@i^0,w,c
  9112  000974  6ED9               	movwf	fsr2l,c
  9113  000976  0E00               	movlw	high _dbuf
  9114  000978  203F               	addwfc	(dtoa@i+1)^0,w,c
  9115  00097A  6EDA               	movwf	fsr2h,c
  9116  00097C  C036  F001         	movff	dtoa@n,___aomod@dividend
  9117  000980  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  9118  000984  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  9119  000988  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  9120  00098C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  9121  000990  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  9122  000994  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  9123  000998  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  9124  00099C  0E0A               	movlw	10
  9125  00099E  6E09               	movwf	___aomod@divisor^0,c
  9126  0009A0  0E00               	movlw	0
  9127  0009A2  6E0A               	movwf	(___aomod@divisor+1)^0,c
  9128  0009A4  0E00               	movlw	0
  9129  0009A6  6E0B               	movwf	(___aomod@divisor+2)^0,c
  9130  0009A8  0E00               	movlw	0
  9131  0009AA  6E0C               	movwf	(___aomod@divisor+3)^0,c
  9132  0009AC  0E00               	movlw	0
  9133  0009AE  6E0D               	movwf	(___aomod@divisor+4)^0,c
  9134  0009B0  0E00               	movlw	0
  9135  0009B2  6E0E               	movwf	(___aomod@divisor+5)^0,c
  9136  0009B4  0E00               	movlw	0
  9137  0009B6  6E0F               	movwf	(___aomod@divisor+6)^0,c
  9138  0009B8  0E00               	movlw	0
  9139  0009BA  6E10               	movwf	(___aomod@divisor+7)^0,c
  9140  0009BC  EC91  F00C         	call	___aomod	;wreg free
  9141  0009C0  C001  F026         	movff	?___aomod,??_dtoa
  9142  0009C4  C002  F027         	movff	?___aomod+1,??_dtoa+1
  9143  0009C8  C003  F028         	movff	?___aomod+2,??_dtoa+2
  9144  0009CC  C004  F029         	movff	?___aomod+3,??_dtoa+3
  9145  0009D0  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  9146  0009D4  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  9147  0009D8  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  9148  0009DC  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  9149  0009E0  C026  F013         	movff	??_dtoa,abs@a
  9150  0009E4  C028  F014         	movff	??_dtoa+2,abs@a+1
  9151  0009E8  ECF9  F017         	call	_abs	;wreg free
  9152  0009EC  5013               	movf	?_abs^0,w,c
  9153  0009EE  0F30               	addlw	48
  9154  0009F0  6EDF               	movwf	indf2,c
  9155  0009F2                     
  9156                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  9157  0009F2  0630               	decf	dtoa@p^0,f,c
  9158  0009F4  A0D8               	btfss	status,0,c
  9159  0009F6  0631               	decf	(dtoa@p+1)^0,f,c
  9160  0009F8                     
  9161                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  9162  0009F8  0632               	decf	dtoa@w^0,f,c
  9163  0009FA  A0D8               	btfss	status,0,c
  9164  0009FC  0633               	decf	(dtoa@w+1)^0,f,c
  9165  0009FE                     
  9166                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  9167  0009FE  C036  F001         	movff	dtoa@n,___aodiv@dividend
  9168  000A02  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  9169  000A06  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  9170  000A0A  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  9171  000A0E  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  9172  000A12  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  9173  000A16  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  9174  000A1A  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  9175  000A1E  0E0A               	movlw	10
  9176  000A20  6E09               	movwf	___aodiv@divisor^0,c
  9177  000A22  0E00               	movlw	0
  9178  000A24  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  9179  000A26  0E00               	movlw	0
  9180  000A28  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  9181  000A2A  0E00               	movlw	0
  9182  000A2C  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  9183  000A2E  0E00               	movlw	0
  9184  000A30  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  9185  000A32  0E00               	movlw	0
  9186  000A34  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  9187  000A36  0E00               	movlw	0
  9188  000A38  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  9189  000A3A  0E00               	movlw	0
  9190  000A3C  6E10               	movwf	(___aodiv@divisor+7)^0,c
  9191  000A3E  EC9F  F009         	call	___aodiv	;wreg free
  9192  000A42  C001  F036         	movff	?___aodiv,dtoa@n
  9193  000A46  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  9194  000A4A  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  9195  000A4E  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  9196  000A52  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  9197  000A56  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  9198  000A5A  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  9199  000A5E  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  9200  000A62                     l3463:
  9201                           
  9202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9203  000A62  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  9204  000A64  EF3C  F005         	goto	u2291
  9205  000A68  503F               	movf	(dtoa@i+1)^0,w,c
  9206  000A6A  E108               	bnz	u2290
  9207  000A6C  043E               	decf	dtoa@i^0,w,c
  9208  000A6E  A0D8               	btfss	status,0,c
  9209  000A70  EF3C  F005         	goto	u2291
  9210  000A74  EF3E  F005         	goto	u2290
  9211  000A78                     u2291:
  9212  000A78  EF6F  F005         	goto	l3473
  9213  000A7C                     u2290:
  9214  000A7C  5036               	movf	dtoa@n^0,w,c
  9215  000A7E  1037               	iorwf	(dtoa@n+1)^0,w,c
  9216  000A80  1038               	iorwf	(dtoa@n+2)^0,w,c
  9217  000A82  1039               	iorwf	(dtoa@n+3)^0,w,c
  9218  000A84  103A               	iorwf	(dtoa@n+4)^0,w,c
  9219  000A86  103B               	iorwf	(dtoa@n+5)^0,w,c
  9220  000A88  103C               	iorwf	(dtoa@n+6)^0,w,c
  9221  000A8A  103D               	iorwf	(dtoa@n+7)^0,w,c
  9222  000A8C  A4D8               	btfss	status,2,c
  9223  000A8E  EF4B  F005         	goto	u2301
  9224  000A92  EF4D  F005         	goto	u2300
  9225  000A96                     u2301:
  9226  000A96  EFB5  F004         	goto	l3453
  9227  000A9A                     u2300:
  9228  000A9A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  9229  000A9C  EF5A  F005         	goto	u2310
  9230  000AA0  5031               	movf	(dtoa@p+1)^0,w,c
  9231  000AA2  E106               	bnz	u2311
  9232  000AA4  0430               	decf	dtoa@p^0,w,c
  9233  000AA6  B0D8               	btfsc	status,0,c
  9234  000AA8  EF58  F005         	goto	u2311
  9235  000AAC  EF5A  F005         	goto	u2310
  9236  000AB0                     u2311:
  9237  000AB0  EFB5  F004         	goto	l3453
  9238  000AB4                     u2310:
  9239  000AB4  BE33               	btfsc	(dtoa@w+1)^0,7,c
  9240  000AB6  EF65  F005         	goto	u2321
  9241  000ABA  5033               	movf	(dtoa@w+1)^0,w,c
  9242  000ABC  E108               	bnz	u2320
  9243  000ABE  0432               	decf	dtoa@w^0,w,c
  9244  000AC0  A0D8               	btfss	status,0,c
  9245  000AC2  EF65  F005         	goto	u2321
  9246  000AC6  EF67  F005         	goto	u2320
  9247  000ACA                     u2321:
  9248  000ACA  EF6F  F005         	goto	l3473
  9249  000ACE                     u2320:
  9250  000ACE  0100               	movlb	0	; () banked
  9251  000AD0  B376               	btfsc	_flags& (0+255),1,b
  9252  000AD2  EF6D  F005         	goto	u2331
  9253  000AD6  EF6F  F005         	goto	u2330
  9254  000ADA                     u2331:
  9255  000ADA  EFB5  F004         	goto	l3453
  9256  000ADE                     u2330:
  9257  000ADE                     l3473:
  9258                           
  9259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  9260  000ADE  5034               	movf	dtoa@s^0,w,c
  9261  000AE0  1035               	iorwf	(dtoa@s+1)^0,w,c
  9262  000AE2  A4D8               	btfss	status,2,c
  9263  000AE4  EF76  F005         	goto	u2341
  9264  000AE8  EF78  F005         	goto	u2340
  9265  000AEC                     u2341:
  9266  000AEC  EF80  F005         	goto	l3477
  9267  000AF0                     u2340:
  9268  000AF0  0100               	movlb	0	; () banked
  9269  000AF2  A576               	btfss	_flags& (0+255),2,b
  9270  000AF4  EF7E  F005         	goto	u2351
  9271  000AF8  EF80  F005         	goto	u2350
  9272  000AFC                     u2351:
  9273  000AFC  EF9E  F005         	goto	l3487
  9274  000B00                     u2350:
  9275  000B00                     l3477:
  9276                           
  9277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  9278  000B00  063E               	decf	dtoa@i^0,f,c
  9279  000B02  A0D8               	btfss	status,0,c
  9280  000B04  063F               	decf	(dtoa@i+1)^0,f,c
  9281  000B06                     
  9282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9283  000B06  5034               	movf	dtoa@s^0,w,c
  9284  000B08  1035               	iorwf	(dtoa@s+1)^0,w,c
  9285  000B0A  A4D8               	btfss	status,2,c
  9286  000B0C  EF8A  F005         	goto	u2361
  9287  000B10  EF8C  F005         	goto	u2360
  9288  000B14                     u2361:
  9289  000B14  EF92  F005         	goto	l3483
  9290  000B18                     u2360:
  9291  000B18  0E00               	movlw	0
  9292  000B1A  6E2F               	movwf	(_dtoa$1084+1)^0,c
  9293  000B1C  0E2B               	movlw	43
  9294  000B1E  6E2E               	movwf	_dtoa$1084^0,c
  9295  000B20  EF96  F005         	goto	l3485
  9296  000B24                     l3483:
  9297  000B24  0E00               	movlw	0
  9298  000B26  6E2F               	movwf	(_dtoa$1084+1)^0,c
  9299  000B28  0E2D               	movlw	45
  9300  000B2A  6E2E               	movwf	_dtoa$1084^0,c
  9301  000B2C                     l3485:
  9302  000B2C  0E8D               	movlw	low _dbuf
  9303  000B2E  243E               	addwf	dtoa@i^0,w,c
  9304  000B30  6ED9               	movwf	fsr2l,c
  9305  000B32  0E00               	movlw	high _dbuf
  9306  000B34  203F               	addwfc	(dtoa@i+1)^0,w,c
  9307  000B36  6EDA               	movwf	fsr2h,c
  9308  000B38  C02E  FFDF         	movff	_dtoa$1084,indf2
  9309  000B3C                     l3487:
  9310                           
  9311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9312  000B3C  C01C  F011         	movff	dtoa@fp,pad@fp
  9313  000B40  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  9314  000B44  0E8D               	movlw	low _dbuf
  9315  000B46  243E               	addwf	dtoa@i^0,w,c
  9316  000B48  6E13               	movwf	pad@buf^0,c
  9317  000B4A  0E00               	movlw	high _dbuf
  9318  000B4C  203F               	addwfc	(dtoa@i+1)^0,w,c
  9319  000B4E  6E14               	movwf	(pad@buf+1)^0,c
  9320  000B50  C032  F015         	movff	dtoa@w,pad@p
  9321  000B54  C033  F016         	movff	dtoa@w+1,pad@p+1
  9322  000B58  ECCB  F011         	call	_pad	;wreg free
  9323  000B5C  C011  F01C         	movff	?_pad,?_dtoa
  9324  000B60  C012  F01D         	movff	?_pad+1,?_dtoa+1
  9325  000B64  0012               	return		;funcret
  9326  000B66                     __end_of_dtoa:
  9327                           	opt callstack 0
  9328                           
  9329 ;; *************** function _abs *****************
  9330 ;; Defined at:
  9331 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  9332 ;; Parameters:    Size  Location     Type
  9333 ;;  a               2   18[COMRAM] int 
  9334 ;; Auto vars:     Size  Location     Type
  9335 ;;		None
  9336 ;; Return value:  Size  Location     Type
  9337 ;;                  2   18[COMRAM] int 
  9338 ;; Registers used:
  9339 ;;		wreg, status,2, status,0
  9340 ;; Tracked objects:
  9341 ;;		On entry : 0/0
  9342 ;;		On exit  : 0/0
  9343 ;;		Unchanged: 0/0
  9344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9345 ;;      Params:         2       0       0       0       0       0       0       0       0
  9346 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9347 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9348 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9349 ;;Total ram usage:        4 bytes
  9350 ;; Hardware stack levels used:    1
  9351 ;; Hardware stack levels required when called:    1
  9352 ;; This function calls:
  9353 ;;		Nothing
  9354 ;; This function is called by:
  9355 ;;		_dtoa
  9356 ;; This function uses a non-reentrant model
  9357 ;;
  9358                           
  9359                           	psect	text40
  9360  002FF2                     __ptext40:
  9361                           	opt callstack 0
  9362  002FF2                     _abs:
  9363                           	opt callstack 23
  9364  002FF2  BE14               	btfsc	(abs@a+1)^0,7,c
  9365  002FF4  EF06  F018         	goto	u2030
  9366  002FF8  5014               	movf	(abs@a+1)^0,w,c
  9367  002FFA  E106               	bnz	u2031
  9368  002FFC  0413               	decf	abs@a^0,w,c
  9369  002FFE  B0D8               	btfsc	status,0,c
  9370  003000  EF04  F018         	goto	u2031
  9371  003004  EF06  F018         	goto	u2030
  9372  003008                     u2031:
  9373  003008  EF14  F018         	goto	l1311
  9374  00300C                     u2030:
  9375  00300C  C013  F015         	movff	abs@a,??_abs
  9376  003010  C014  F016         	movff	abs@a+1,??_abs+1
  9377  003014  1E15               	comf	??_abs^0,f,c
  9378  003016  1E16               	comf	(??_abs+1)^0,f,c
  9379  003018  4A15               	infsnz	??_abs^0,f,c
  9380  00301A  2A16               	incf	(??_abs+1)^0,f,c
  9381  00301C  C015  F013         	movff	??_abs,?_abs
  9382  003020  C016  F014         	movff	??_abs+1,?_abs+1
  9383  003024  EF18  F018         	goto	l1314
  9384  003028                     l1311:
  9385  003028  C013  F013         	movff	abs@a,?_abs
  9386  00302C  C014  F014         	movff	abs@a+1,?_abs+1
  9387  003030                     l1314:
  9388  003030  0012               	return		;funcret
  9389  003032                     __end_of_abs:
  9390                           	opt callstack 0
  9391                           
  9392 ;; *************** function ___aomod *****************
  9393 ;; Defined at:
  9394 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  9395 ;; Parameters:    Size  Location     Type
  9396 ;;  dividend        8    0[COMRAM] long long 
  9397 ;;  divisor         8    8[COMRAM] long long 
  9398 ;; Auto vars:     Size  Location     Type
  9399 ;;  sign            1   17[COMRAM] unsigned char 
  9400 ;;  counter         1   16[COMRAM] unsigned char 
  9401 ;; Return value:  Size  Location     Type
  9402 ;;                  8    0[COMRAM] long long 
  9403 ;; Registers used:
  9404 ;;		wreg, status,2, status,0
  9405 ;; Tracked objects:
  9406 ;;		On entry : 0/0
  9407 ;;		On exit  : 0/0
  9408 ;;		Unchanged: 0/0
  9409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9410 ;;      Params:        16       0       0       0       0       0       0       0       0
  9411 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9412 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9413 ;;      Totals:        18       0       0       0       0       0       0       0       0
  9414 ;;Total ram usage:       18 bytes
  9415 ;; Hardware stack levels used:    1
  9416 ;; Hardware stack levels required when called:    1
  9417 ;; This function calls:
  9418 ;;		Nothing
  9419 ;; This function is called by:
  9420 ;;		_dtoa
  9421 ;; This function uses a non-reentrant model
  9422 ;;
  9423                           
  9424                           	psect	text41
  9425  001922                     __ptext41:
  9426                           	opt callstack 0
  9427  001922                     ___aomod:
  9428                           	opt callstack 23
  9429  001922  0E00               	movlw	0
  9430  001924  6E12               	movwf	___aomod@sign^0,c
  9431  001926  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  9432  001928  EF9A  F00C         	goto	u2130
  9433  00192C  EF98  F00C         	goto	u2131
  9434  001930                     u2131:
  9435  001930  EFAC  F00C         	goto	l3375
  9436  001934                     u2130:
  9437  001934  1E08               	comf	(___aomod@dividend+7)^0,f,c
  9438  001936  1E07               	comf	(___aomod@dividend+6)^0,f,c
  9439  001938  1E06               	comf	(___aomod@dividend+5)^0,f,c
  9440  00193A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  9441  00193C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  9442  00193E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  9443  001940  1E02               	comf	(___aomod@dividend+1)^0,f,c
  9444  001942  6C01               	negf	___aomod@dividend^0,c
  9445  001944  0E00               	movlw	0
  9446  001946  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  9447  001948  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  9448  00194A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  9449  00194C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  9450  00194E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  9451  001950  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  9452  001952  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  9453  001954  0E01               	movlw	1
  9454  001956  6E12               	movwf	___aomod@sign^0,c
  9455  001958                     l3375:
  9456  001958  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  9457  00195A  EFB3  F00C         	goto	u2140
  9458  00195E  EFB1  F00C         	goto	u2141
  9459  001962                     u2141:
  9460  001962  EFC3  F00C         	goto	l3379
  9461  001966                     u2140:
  9462  001966  1E10               	comf	(___aomod@divisor+7)^0,f,c
  9463  001968  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  9464  00196A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  9465  00196C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  9466  00196E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  9467  001970  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  9468  001972  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  9469  001974  6C09               	negf	___aomod@divisor^0,c
  9470  001976  0E00               	movlw	0
  9471  001978  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  9472  00197A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  9473  00197C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  9474  00197E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  9475  001980  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  9476  001982  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  9477  001984  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  9478  001986                     l3379:
  9479  001986  5009               	movf	___aomod@divisor^0,w,c
  9480  001988  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  9481  00198A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  9482  00198C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  9483  00198E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  9484  001990  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  9485  001992  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  9486  001994  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  9487  001996  B4D8               	btfsc	status,2,c
  9488  001998  EFD0  F00C         	goto	u2151
  9489  00199C  EFD2  F00C         	goto	u2150
  9490  0019A0                     u2151:
  9491  0019A0  EF1A  F00D         	goto	l3395
  9492  0019A4                     u2150:
  9493  0019A4  0E01               	movlw	1
  9494  0019A6  6E11               	movwf	___aomod@counter^0,c
  9495  0019A8  EFE0  F00C         	goto	l3385
  9496  0019AC                     l3383:
  9497  0019AC  90D8               	bcf	status,0,c
  9498  0019AE  3609               	rlcf	___aomod@divisor^0,f,c
  9499  0019B0  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  9500  0019B2  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  9501  0019B4  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  9502  0019B6  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  9503  0019B8  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  9504  0019BA  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  9505  0019BC  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  9506  0019BE  2A11               	incf	___aomod@counter^0,f,c
  9507  0019C0                     l3385:
  9508  0019C0  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  9509  0019C2  EFE5  F00C         	goto	u2161
  9510  0019C6  EFE7  F00C         	goto	u2160
  9511  0019CA                     u2161:
  9512  0019CA  EFD6  F00C         	goto	l3383
  9513  0019CE                     u2160:
  9514  0019CE                     l3387:
  9515  0019CE  5009               	movf	___aomod@divisor^0,w,c
  9516  0019D0  5C01               	subwf	___aomod@dividend^0,w,c
  9517  0019D2  500A               	movf	(___aomod@divisor+1)^0,w,c
  9518  0019D4  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  9519  0019D6  500B               	movf	(___aomod@divisor+2)^0,w,c
  9520  0019D8  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  9521  0019DA  500C               	movf	(___aomod@divisor+3)^0,w,c
  9522  0019DC  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  9523  0019DE  500D               	movf	(___aomod@divisor+4)^0,w,c
  9524  0019E0  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  9525  0019E2  500E               	movf	(___aomod@divisor+5)^0,w,c
  9526  0019E4  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  9527  0019E6  500F               	movf	(___aomod@divisor+6)^0,w,c
  9528  0019E8  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  9529  0019EA  5010               	movf	(___aomod@divisor+7)^0,w,c
  9530  0019EC  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  9531  0019EE  A0D8               	btfss	status,0,c
  9532  0019F0  EFFC  F00C         	goto	u2171
  9533  0019F4  EFFE  F00C         	goto	u2170
  9534  0019F8                     u2171:
  9535  0019F8  EF0E  F00D         	goto	l3391
  9536  0019FC                     u2170:
  9537  0019FC  5009               	movf	___aomod@divisor^0,w,c
  9538  0019FE  5E01               	subwf	___aomod@dividend^0,f,c
  9539  001A00  500A               	movf	(___aomod@divisor+1)^0,w,c
  9540  001A02  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  9541  001A04  500B               	movf	(___aomod@divisor+2)^0,w,c
  9542  001A06  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  9543  001A08  500C               	movf	(___aomod@divisor+3)^0,w,c
  9544  001A0A  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  9545  001A0C  500D               	movf	(___aomod@divisor+4)^0,w,c
  9546  001A0E  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  9547  001A10  500E               	movf	(___aomod@divisor+5)^0,w,c
  9548  001A12  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  9549  001A14  500F               	movf	(___aomod@divisor+6)^0,w,c
  9550  001A16  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  9551  001A18  5010               	movf	(___aomod@divisor+7)^0,w,c
  9552  001A1A  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  9553  001A1C                     l3391:
  9554  001A1C  90D8               	bcf	status,0,c
  9555  001A1E  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  9556  001A20  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  9557  001A22  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  9558  001A24  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  9559  001A26  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  9560  001A28  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  9561  001A2A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  9562  001A2C  3209               	rrcf	___aomod@divisor^0,f,c
  9563  001A2E  2E11               	decfsz	___aomod@counter^0,f,c
  9564  001A30  EFE7  F00C         	goto	l3387
  9565  001A34                     l3395:
  9566  001A34  5012               	movf	___aomod@sign^0,w,c
  9567  001A36  B4D8               	btfsc	status,2,c
  9568  001A38  EF20  F00D         	goto	u2181
  9569  001A3C  EF22  F00D         	goto	u2180
  9570  001A40                     u2181:
  9571  001A40  EF32  F00D         	goto	l3399
  9572  001A44                     u2180:
  9573  001A44  1E08               	comf	(___aomod@dividend+7)^0,f,c
  9574  001A46  1E07               	comf	(___aomod@dividend+6)^0,f,c
  9575  001A48  1E06               	comf	(___aomod@dividend+5)^0,f,c
  9576  001A4A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  9577  001A4C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  9578  001A4E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  9579  001A50  1E02               	comf	(___aomod@dividend+1)^0,f,c
  9580  001A52  6C01               	negf	___aomod@dividend^0,c
  9581  001A54  0E00               	movlw	0
  9582  001A56  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  9583  001A58  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  9584  001A5A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  9585  001A5C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  9586  001A5E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  9587  001A60  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  9588  001A62  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  9589  001A64                     l3399:
  9590  001A64  C001  F001         	movff	___aomod@dividend,?___aomod
  9591  001A68  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  9592  001A6C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  9593  001A70  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  9594  001A74  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  9595  001A78  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  9596  001A7C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  9597  001A80  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  9598  001A84  0012               	return		;funcret
  9599  001A86                     __end_of___aomod:
  9600                           	opt callstack 0
  9601                           
  9602 ;; *************** function ___aodiv *****************
  9603 ;; Defined at:
  9604 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  9605 ;; Parameters:    Size  Location     Type
  9606 ;;  dividend        8    0[COMRAM] long long 
  9607 ;;  divisor         8    8[COMRAM] long long 
  9608 ;; Auto vars:     Size  Location     Type
  9609 ;;  quotient        8   18[COMRAM] long long 
  9610 ;;  sign            1   17[COMRAM] unsigned char 
  9611 ;;  counter         1   16[COMRAM] unsigned char 
  9612 ;; Return value:  Size  Location     Type
  9613 ;;                  8    0[COMRAM] long long 
  9614 ;; Registers used:
  9615 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9616 ;; Tracked objects:
  9617 ;;		On entry : 0/0
  9618 ;;		On exit  : 0/0
  9619 ;;		Unchanged: 0/0
  9620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9621 ;;      Params:        16       0       0       0       0       0       0       0       0
  9622 ;;      Locals:        10       0       0       0       0       0       0       0       0
  9623 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9624 ;;      Totals:        26       0       0       0       0       0       0       0       0
  9625 ;;Total ram usage:       26 bytes
  9626 ;; Hardware stack levels used:    1
  9627 ;; Hardware stack levels required when called:    1
  9628 ;; This function calls:
  9629 ;;		Nothing
  9630 ;; This function is called by:
  9631 ;;		_dtoa
  9632 ;; This function uses a non-reentrant model
  9633 ;;
  9634                           
  9635                           	psect	text42
  9636  00133E                     __ptext42:
  9637                           	opt callstack 0
  9638  00133E                     ___aodiv:
  9639                           	opt callstack 23
  9640  00133E  0E00               	movlw	0
  9641  001340  6E12               	movwf	___aodiv@sign^0,c
  9642  001342  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  9643  001344  EFA8  F009         	goto	u2060
  9644  001348  EFA6  F009         	goto	u2061
  9645  00134C                     u2061:
  9646  00134C  EFBA  F009         	goto	l3331
  9647  001350                     u2060:
  9648  001350  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  9649  001352  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  9650  001354  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  9651  001356  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  9652  001358  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  9653  00135A  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  9654  00135C  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  9655  00135E  6C09               	negf	___aodiv@divisor^0,c
  9656  001360  0E00               	movlw	0
  9657  001362  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  9658  001364  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  9659  001366  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  9660  001368  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  9661  00136A  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  9662  00136C  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  9663  00136E  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  9664  001370  0E01               	movlw	1
  9665  001372  6E12               	movwf	___aodiv@sign^0,c
  9666  001374                     l3331:
  9667  001374  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  9668  001376  EFC1  F009         	goto	u2070
  9669  00137A  EFBF  F009         	goto	u2071
  9670  00137E                     u2071:
  9671  00137E  EFD3  F009         	goto	l3337
  9672  001382                     u2070:
  9673  001382  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  9674  001384  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  9675  001386  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  9676  001388  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  9677  00138A  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  9678  00138C  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  9679  00138E  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  9680  001390  6C01               	negf	___aodiv@dividend^0,c
  9681  001392  0E00               	movlw	0
  9682  001394  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  9683  001396  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  9684  001398  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  9685  00139A  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  9686  00139C  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  9687  00139E  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  9688  0013A0  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  9689  0013A2  0E01               	movlw	1
  9690  0013A4  1A12               	xorwf	___aodiv@sign^0,f,c
  9691  0013A6                     l3337:
  9692  0013A6  EE20  F013         	lfsr	2,___aodiv@quotient
  9693  0013AA  0E07               	movlw	7
  9694  0013AC                     u2081:
  9695  0013AC  6ADE               	clrf	postinc2,c
  9696  0013AE  06E8               	decf	wreg,f,c
  9697  0013B0  E2FD               	bc	u2081
  9698  0013B2  5009               	movf	___aodiv@divisor^0,w,c
  9699  0013B4  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  9700  0013B6  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  9701  0013B8  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  9702  0013BA  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  9703  0013BC  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  9704  0013BE  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  9705  0013C0  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  9706  0013C2  B4D8               	btfsc	status,2,c
  9707  0013C4  EFE6  F009         	goto	u2091
  9708  0013C8  EFE8  F009         	goto	u2090
  9709  0013CC                     u2091:
  9710  0013CC  EF3A  F00A         	goto	l3359
  9711  0013D0                     u2090:
  9712  0013D0  0E01               	movlw	1
  9713  0013D2  6E11               	movwf	___aodiv@counter^0,c
  9714  0013D4  EFF6  F009         	goto	l3345
  9715  0013D8                     l3343:
  9716  0013D8  90D8               	bcf	status,0,c
  9717  0013DA  3609               	rlcf	___aodiv@divisor^0,f,c
  9718  0013DC  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  9719  0013DE  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  9720  0013E0  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  9721  0013E2  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  9722  0013E4  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  9723  0013E6  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  9724  0013E8  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  9725  0013EA  2A11               	incf	___aodiv@counter^0,f,c
  9726  0013EC                     l3345:
  9727  0013EC  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  9728  0013EE  EFFB  F009         	goto	u2101
  9729  0013F2  EFFD  F009         	goto	u2100
  9730  0013F6                     u2101:
  9731  0013F6  EFEC  F009         	goto	l3343
  9732  0013FA                     u2100:
  9733  0013FA                     l3347:
  9734  0013FA  90D8               	bcf	status,0,c
  9735  0013FC  3613               	rlcf	___aodiv@quotient^0,f,c
  9736  0013FE  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  9737  001400  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  9738  001402  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  9739  001404  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  9740  001406  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  9741  001408  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  9742  00140A  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  9743  00140C  5009               	movf	___aodiv@divisor^0,w,c
  9744  00140E  5C01               	subwf	___aodiv@dividend^0,w,c
  9745  001410  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9746  001412  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  9747  001414  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9748  001416  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  9749  001418  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9750  00141A  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  9751  00141C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9752  00141E  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  9753  001420  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9754  001422  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  9755  001424  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9756  001426  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  9757  001428  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9758  00142A  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  9759  00142C  A0D8               	btfss	status,0,c
  9760  00142E  EF1B  F00A         	goto	u2111
  9761  001432  EF1D  F00A         	goto	u2110
  9762  001436                     u2111:
  9763  001436  EF2E  F00A         	goto	l3355
  9764  00143A                     u2110:
  9765  00143A  5009               	movf	___aodiv@divisor^0,w,c
  9766  00143C  5E01               	subwf	___aodiv@dividend^0,f,c
  9767  00143E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9768  001440  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  9769  001442  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9770  001444  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  9771  001446  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9772  001448  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  9773  00144A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9774  00144C  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  9775  00144E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9776  001450  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  9777  001452  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9778  001454  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  9779  001456  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9780  001458  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  9781  00145A  8013               	bsf	___aodiv@quotient^0,0,c
  9782  00145C                     l3355:
  9783  00145C  90D8               	bcf	status,0,c
  9784  00145E  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  9785  001460  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  9786  001462  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  9787  001464  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  9788  001466  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  9789  001468  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  9790  00146A  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  9791  00146C  3209               	rrcf	___aodiv@divisor^0,f,c
  9792  00146E  2E11               	decfsz	___aodiv@counter^0,f,c
  9793  001470  EFFD  F009         	goto	l3347
  9794  001474                     l3359:
  9795  001474  5012               	movf	___aodiv@sign^0,w,c
  9796  001476  B4D8               	btfsc	status,2,c
  9797  001478  EF40  F00A         	goto	u2121
  9798  00147C  EF42  F00A         	goto	u2120
  9799  001480                     u2121:
  9800  001480  EF52  F00A         	goto	l3363
  9801  001484                     u2120:
  9802  001484  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  9803  001486  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  9804  001488  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  9805  00148A  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  9806  00148C  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  9807  00148E  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  9808  001490  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  9809  001492  6C13               	negf	___aodiv@quotient^0,c
  9810  001494  0E00               	movlw	0
  9811  001496  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  9812  001498  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  9813  00149A  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  9814  00149C  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  9815  00149E  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  9816  0014A0  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  9817  0014A2  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  9818  0014A4                     l3363:
  9819  0014A4  C013  F001         	movff	___aodiv@quotient,?___aodiv
  9820  0014A8  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  9821  0014AC  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  9822  0014B0  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  9823  0014B4  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  9824  0014B8  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  9825  0014BC  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  9826  0014C0  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  9827  0014C4  0012               	return		;funcret
  9828  0014C6                     __end_of___aodiv:
  9829                           	opt callstack 0
  9830                           
  9831 ;; *************** function _ctoa *****************
  9832 ;; Defined at:
  9833 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9834 ;; Parameters:    Size  Location     Type
  9835 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9836 ;;		 -> sprintf@f(6), 
  9837 ;;  c               1   29[COMRAM] unsigned char 
  9838 ;; Auto vars:     Size  Location     Type
  9839 ;;  w               2   30[COMRAM] int 
  9840 ;;  l               2    0        int 
  9841 ;; Return value:  Size  Location     Type
  9842 ;;                  2   27[COMRAM] int 
  9843 ;; Registers used:
  9844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9845 ;; Tracked objects:
  9846 ;;		On entry : 0/0
  9847 ;;		On exit  : 0/0
  9848 ;;		Unchanged: 0/0
  9849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9850 ;;      Params:         3       0       0       0       0       0       0       0       0
  9851 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9852 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9853 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9854 ;;Total ram usage:        5 bytes
  9855 ;; Hardware stack levels used:    1
  9856 ;; Hardware stack levels required when called:    5
  9857 ;; This function calls:
  9858 ;;		_pad
  9859 ;; This function is called by:
  9860 ;;		_vfpfcnvrt
  9861 ;; This function uses a non-reentrant model
  9862 ;;
  9863                           
  9864                           	psect	text43
  9865  002D48                     __ptext43:
  9866                           	opt callstack 0
  9867  002D48                     _ctoa:
  9868                           	opt callstack 20
  9869  002D48                     
  9870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  9871  002D48  0100               	movlb	0	; () banked
  9872  002D4A  5172               	movf	_width& (0+255),w,b
  9873  002D4C  1173               	iorwf	(_width+1)& (0+255),w,b
  9874  002D4E  A4D8               	btfss	status,2,c
  9875  002D50  EFAC  F016         	goto	u2211
  9876  002D54  EFAE  F016         	goto	u2210
  9877  002D58                     u2211:
  9878  002D58  EFB4  F016         	goto	l3419
  9879  002D5C                     u2210:
  9880  002D5C                     
  9881                           ; BSR set to: 0
  9882  002D5C  C072  F01F         	movff	_width,ctoa@w
  9883  002D60  C073  F020         	movff	_width+1,ctoa@w+1
  9884  002D64  EFBA  F016         	goto	l3421
  9885  002D68                     l3419:
  9886                           
  9887                           ; BSR set to: 0
  9888  002D68  0EFF               	movlw	255
  9889  002D6A  2572               	addwf	_width& (0+255),w,b
  9890  002D6C  6E1F               	movwf	ctoa@w^0,c
  9891  002D6E  0EFF               	movlw	255
  9892  002D70  2173               	addwfc	(_width+1)& (0+255),w,b
  9893  002D72  6E20               	movwf	(ctoa@w+1)^0,c
  9894  002D74                     l3421:
  9895                           
  9896                           ; BSR set to: 0
  9897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  9898  002D74  C01E  F08D         	movff	ctoa@c,_dbuf
  9899  002D78                     
  9900                           ; BSR set to: 0
  9901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  9902  002D78  0E00               	movlw	0
  9903  002D7A  6F8E               	movwf	(_dbuf+1)& (0+255),b
  9904  002D7C                     
  9905                           ; BSR set to: 0
  9906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  9907  002D7C  C01C  F011         	movff	ctoa@fp,pad@fp
  9908  002D80  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  9909  002D84  0E8D               	movlw	low _dbuf
  9910  002D86  6E13               	movwf	pad@buf^0,c
  9911  002D88  0E00               	movlw	high _dbuf
  9912  002D8A  6E14               	movwf	(pad@buf+1)^0,c
  9913  002D8C  C01F  F015         	movff	ctoa@w,pad@p
  9914  002D90  C020  F016         	movff	ctoa@w+1,pad@p+1
  9915  002D94  ECCB  F011         	call	_pad	;wreg free
  9916  002D98  C011  F01C         	movff	?_pad,?_ctoa
  9917  002D9C  C012  F01D         	movff	?_pad+1,?_ctoa+1
  9918  002DA0  0012               	return		;funcret
  9919  002DA2                     __end_of_ctoa:
  9920                           	opt callstack 0
  9921                           
  9922 ;; *************** function _pad *****************
  9923 ;; Defined at:
  9924 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9925 ;; Parameters:    Size  Location     Type
  9926 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9927 ;;		 -> sprintf@f(6), 
  9928 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9929 ;;		 -> dbuf(32), 
  9930 ;;  p               2   20[COMRAM] int 
  9931 ;; Auto vars:     Size  Location     Type
  9932 ;;  w               2   25[COMRAM] int 
  9933 ;;  i               2   23[COMRAM] int 
  9934 ;; Return value:  Size  Location     Type
  9935 ;;                  2   16[COMRAM] int 
  9936 ;; Registers used:
  9937 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9938 ;; Tracked objects:
  9939 ;;		On entry : 0/0
  9940 ;;		On exit  : 0/0
  9941 ;;		Unchanged: 0/0
  9942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9943 ;;      Params:         6       0       0       0       0       0       0       0       0
  9944 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9945 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9946 ;;      Totals:        11       0       0       0       0       0       0       0       0
  9947 ;;Total ram usage:       11 bytes
  9948 ;; Hardware stack levels used:    1
  9949 ;; Hardware stack levels required when called:    4
  9950 ;; This function calls:
  9951 ;;		_fputc
  9952 ;;		_fputs
  9953 ;;		_strlen
  9954 ;; This function is called by:
  9955 ;;		_ctoa
  9956 ;;		_dtoa
  9957 ;; This function uses a non-reentrant model
  9958 ;;
  9959                           
  9960                           	psect	text44
  9961  002396                     __ptext44:
  9962                           	opt callstack 0
  9963  002396                     _pad:
  9964                           	opt callstack 20
  9965  002396                     
  9966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9967  002396  0100               	movlb	0	; () banked
  9968  002398  A176               	btfss	_flags& (0+255),0,b
  9969  00239A  EFD1  F011         	goto	u1991
  9970  00239E  EFD3  F011         	goto	u1990
  9971  0023A2                     u1991:
  9972  0023A2  EFDD  F011         	goto	l3291
  9973  0023A6                     u1990:
  9974  0023A6                     
  9975                           ; BSR set to: 0
  9976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9977  0023A6  C013  F00A         	movff	pad@buf,fputs@s
  9978  0023AA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9979  0023AE  C011  F00C         	movff	pad@fp,fputs@fp
  9980  0023B2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9981  0023B6  EC97  F017         	call	_fputs	;wreg free
  9982  0023BA                     l3291:
  9983                           
  9984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9985  0023BA  BE16               	btfsc	(pad@p+1)^0,7,c
  9986  0023BC  EFE2  F011         	goto	u2001
  9987  0023C0  EFE4  F011         	goto	u2000
  9988  0023C4                     u2001:
  9989  0023C4  EFEA  F011         	goto	l3295
  9990  0023C8                     u2000:
  9991  0023C8  C015  F01A         	movff	pad@p,pad@w
  9992  0023CC  C016  F01B         	movff	pad@p+1,pad@w+1
  9993  0023D0  EFEE  F011         	goto	l524
  9994  0023D4                     l3295:
  9995  0023D4  0E00               	movlw	0
  9996  0023D6  6E1B               	movwf	(pad@w+1)^0,c
  9997  0023D8  0E00               	movlw	0
  9998  0023DA  6E1A               	movwf	pad@w^0,c
  9999  0023DC                     l524:
 10000                           
 10001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 10002  0023DC  0E00               	movlw	0
 10003  0023DE  6E19               	movwf	(pad@i+1)^0,c
 10004  0023E0  0E00               	movlw	0
 10005  0023E2  6E18               	movwf	pad@i^0,c
 10006                           
 10007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10008  0023E4  EF00  F012         	goto	l3301
 10009  0023E8                     l3297:
 10010                           
 10011                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 10012  0023E8  0E00               	movlw	0
 10013  0023EA  6E02               	movwf	(fputc@c+1)^0,c
 10014  0023EC  0E20               	movlw	32
 10015  0023EE  6E01               	movwf	fputc@c^0,c
 10016  0023F0  C011  F003         	movff	pad@fp,fputc@fp
 10017  0023F4  C012  F004         	movff	pad@fp+1,fputc@fp+1
 10018  0023F8  EC03  F011         	call	_fputc	;wreg free
 10019  0023FC                     
 10020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 10021  0023FC  4A18               	infsnz	pad@i^0,f,c
 10022  0023FE  2A19               	incf	(pad@i+1)^0,f,c
 10023  002400                     l3301:
 10024                           
 10025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10026  002400  501A               	movf	pad@w^0,w,c
 10027  002402  5C18               	subwf	pad@i^0,w,c
 10028  002404  5019               	movf	(pad@i+1)^0,w,c
 10029  002406  0A80               	xorlw	128
 10030  002408  6E17               	movwf	??_pad^0,c
 10031  00240A  501B               	movf	(pad@w+1)^0,w,c
 10032  00240C  0A80               	xorlw	128
 10033  00240E  5817               	subwfb	??_pad^0,w,c
 10034  002410  A0D8               	btfss	status,0,c
 10035  002412  EF0D  F012         	goto	u2011
 10036  002416  EF0F  F012         	goto	u2010
 10037  00241A                     u2011:
 10038  00241A  EFF4  F011         	goto	l3297
 10039  00241E                     u2010:
 10040  00241E                     
 10041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 10042  00241E  0100               	movlb	0	; () banked
 10043  002420  B176               	btfsc	_flags& (0+255),0,b
 10044  002422  EF15  F012         	goto	u2021
 10045  002426  EF17  F012         	goto	u2020
 10046  00242A                     u2021:
 10047  00242A  EF21  F012         	goto	l3305
 10048  00242E                     u2020:
 10049  00242E                     
 10050                           ; BSR set to: 0
 10051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 10052  00242E  C013  F00A         	movff	pad@buf,fputs@s
 10053  002432  C014  F00B         	movff	pad@buf+1,fputs@s+1
 10054  002436  C011  F00C         	movff	pad@fp,fputs@fp
 10055  00243A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 10056  00243E  EC97  F017         	call	_fputs	;wreg free
 10057  002442                     l3305:
 10058                           
 10059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10060  002442  C013  F001         	movff	pad@buf,strlen@s
 10061  002446  C014  F002         	movff	pad@buf+1,strlen@s+1
 10062  00244A  EC6E  F018         	call	_strlen	;wreg free
 10063  00244E  501A               	movf	pad@w^0,w,c
 10064  002450  2401               	addwf	?_strlen^0,w,c
 10065  002452  6E11               	movwf	?_pad^0,c
 10066  002454  501B               	movf	(pad@w+1)^0,w,c
 10067  002456  2002               	addwfc	(?_strlen+1)^0,w,c
 10068  002458  6E12               	movwf	(?_pad+1)^0,c
 10069  00245A  0012               	return		;funcret
 10070  00245C                     __end_of_pad:
 10071                           	opt callstack 0
 10072                           
 10073 ;; *************** function _strlen *****************
 10074 ;; Defined at:
 10075 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 10076 ;; Parameters:    Size  Location     Type
 10077 ;;  s               2    0[COMRAM] PTR const unsigned char 
 10078 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), horarios(288), 
 10079 ;; Auto vars:     Size  Location     Type
 10080 ;;  a               2    2[COMRAM] PTR const unsigned char 
 10081 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), horarios(288), 
 10082 ;; Return value:  Size  Location     Type
 10083 ;;                  2    0[COMRAM] unsigned int 
 10084 ;; Registers used:
 10085 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10086 ;; Tracked objects:
 10087 ;;		On entry : 0/0
 10088 ;;		On exit  : 0/0
 10089 ;;		Unchanged: 0/0
 10090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10091 ;;      Params:         2       0       0       0       0       0       0       0       0
 10092 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10093 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10094 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10095 ;;Total ram usage:        4 bytes
 10096 ;; Hardware stack levels used:    1
 10097 ;; Hardware stack levels required when called:    1
 10098 ;; This function calls:
 10099 ;;		Nothing
 10100 ;; This function is called by:
 10101 ;;		_pad
 10102 ;;		_stoa
 10103 ;; This function uses a non-reentrant model
 10104 ;;
 10105                           
 10106                           	psect	text45
 10107  0030DC                     __ptext45:
 10108                           	opt callstack 0
 10109  0030DC                     _strlen:
 10110                           	opt callstack 23
 10111  0030DC  C001  F003         	movff	strlen@s,strlen@a
 10112  0030E0  C002  F004         	movff	strlen@s+1,strlen@a+1
 10113  0030E4  EF76  F018         	goto	l3281
 10114  0030E8                     l3279:
 10115  0030E8  4A01               	infsnz	strlen@s^0,f,c
 10116  0030EA  2A02               	incf	(strlen@s+1)^0,f,c
 10117  0030EC                     l3281:
 10118  0030EC  C001  FFD9         	movff	strlen@s,fsr2l
 10119  0030F0  C002  FFDA         	movff	strlen@s+1,fsr2h
 10120  0030F4  50DF               	movf	indf2,w,c
 10121  0030F6  A4D8               	btfss	status,2,c
 10122  0030F8  EF80  F018         	goto	u1981
 10123  0030FC  EF82  F018         	goto	u1980
 10124  003100                     u1981:
 10125  003100  EF74  F018         	goto	l3279
 10126  003104                     u1980:
 10127  003104  5003               	movf	strlen@a^0,w,c
 10128  003106  5C01               	subwf	strlen@s^0,w,c
 10129  003108  6E01               	movwf	?_strlen^0,c
 10130  00310A  5004               	movf	(strlen@a+1)^0,w,c
 10131  00310C  5802               	subwfb	(strlen@s+1)^0,w,c
 10132  00310E  6E02               	movwf	(?_strlen+1)^0,c
 10133  003110  0012               	return		;funcret
 10134  003112                     __end_of_strlen:
 10135                           	opt callstack 0
 10136                           
 10137 ;; *************** function _fputs *****************
 10138 ;; Defined at:
 10139 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 10140 ;; Parameters:    Size  Location     Type
 10141 ;;  s               2    9[COMRAM] PTR const unsigned char 
 10142 ;;		 -> dbuf(32), 
 10143 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 10144 ;;		 -> sprintf@f(6), 
 10145 ;; Auto vars:     Size  Location     Type
 10146 ;;  i               2   14[COMRAM] int 
 10147 ;;  c               1   13[COMRAM] unsigned char 
 10148 ;; Return value:  Size  Location     Type
 10149 ;;                  2    9[COMRAM] int 
 10150 ;; Registers used:
 10151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10152 ;; Tracked objects:
 10153 ;;		On entry : 0/0
 10154 ;;		On exit  : 0/0
 10155 ;;		Unchanged: 0/0
 10156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10157 ;;      Params:         4       0       0       0       0       0       0       0       0
 10158 ;;      Locals:         3       0       0       0       0       0       0       0       0
 10159 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10160 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10161 ;;Total ram usage:        7 bytes
 10162 ;; Hardware stack levels used:    1
 10163 ;; Hardware stack levels required when called:    3
 10164 ;; This function calls:
 10165 ;;		_fputc
 10166 ;; This function is called by:
 10167 ;;		_pad
 10168 ;; This function uses a non-reentrant model
 10169 ;;
 10170                           
 10171                           	psect	text46
 10172  002F2E                     __ptext46:
 10173                           	opt callstack 0
 10174  002F2E                     _fputs:
 10175                           	opt callstack 20
 10176  002F2E  0E00               	movlw	0
 10177  002F30  6E10               	movwf	(fputs@i+1)^0,c
 10178  002F32  0E00               	movlw	0
 10179  002F34  6E0F               	movwf	fputs@i^0,c
 10180  002F36  EFA8  F017         	goto	l3275
 10181  002F3A                     l3271:
 10182  002F3A  C00E  F001         	movff	fputs@c,fputc@c
 10183  002F3E  6A02               	clrf	(fputc@c+1)^0,c
 10184  002F40  C00C  F003         	movff	fputs@fp,fputc@fp
 10185  002F44  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 10186  002F48  EC03  F011         	call	_fputc	;wreg free
 10187  002F4C  4A0F               	infsnz	fputs@i^0,f,c
 10188  002F4E  2A10               	incf	(fputs@i+1)^0,f,c
 10189  002F50                     l3275:
 10190  002F50  500F               	movf	fputs@i^0,w,c
 10191  002F52  240A               	addwf	fputs@s^0,w,c
 10192  002F54  6ED9               	movwf	fsr2l,c
 10193  002F56  5010               	movf	(fputs@i+1)^0,w,c
 10194  002F58  200B               	addwfc	(fputs@s+1)^0,w,c
 10195  002F5A  6EDA               	movwf	fsr2h,c
 10196  002F5C  50DF               	movf	indf2,w,c
 10197  002F5E  6E0E               	movwf	fputs@c^0,c
 10198  002F60  500E               	movf	fputs@c^0,w,c
 10199  002F62  A4D8               	btfss	status,2,c
 10200  002F64  EFB6  F017         	goto	u1971
 10201  002F68  EFB8  F017         	goto	u1970
 10202  002F6C                     u1971:
 10203  002F6C  EF9D  F017         	goto	l3271
 10204  002F70                     u1970:
 10205  002F70  0012               	return		;funcret
 10206  002F72                     __end_of_fputs:
 10207                           	opt callstack 0
 10208                           
 10209 ;; *************** function _fputc *****************
 10210 ;; Defined at:
 10211 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 10212 ;; Parameters:    Size  Location     Type
 10213 ;;  c               2    0[COMRAM] int 
 10214 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 10215 ;;		 -> sprintf@f(6), 
 10216 ;; Auto vars:     Size  Location     Type
 10217 ;;		None
 10218 ;; Return value:  Size  Location     Type
 10219 ;;                  2    0[COMRAM] int 
 10220 ;; Registers used:
 10221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10222 ;; Tracked objects:
 10223 ;;		On entry : 0/0
 10224 ;;		On exit  : 0/0
 10225 ;;		Unchanged: 0/0
 10226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10227 ;;      Params:         4       0       0       0       0       0       0       0       0
 10228 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10229 ;;      Temps:          5       0       0       0       0       0       0       0       0
 10230 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10231 ;;Total ram usage:        9 bytes
 10232 ;; Hardware stack levels used:    1
 10233 ;; Hardware stack levels required when called:    2
 10234 ;; This function calls:
 10235 ;;		_putch
 10236 ;; This function is called by:
 10237 ;;		_pad
 10238 ;;		_stoa
 10239 ;;		_vfpfcnvrt
 10240 ;;		_fputs
 10241 ;; This function uses a non-reentrant model
 10242 ;;
 10243                           
 10244                           	psect	text47
 10245  002206                     __ptext47:
 10246                           	opt callstack 0
 10247  002206                     _fputc:
 10248                           	opt callstack 22
 10249  002206  5003               	movf	fputc@fp^0,w,c
 10250  002208  1004               	iorwf	(fputc@fp+1)^0,w,c
 10251  00220A  B4D8               	btfsc	status,2,c
 10252  00220C  EF0A  F011         	goto	u1931
 10253  002210  EF0C  F011         	goto	u1930
 10254  002214                     u1931:
 10255  002214  EF15  F011         	goto	l3259
 10256  002218                     u1930:
 10257  002218  5003               	movf	fputc@fp^0,w,c
 10258  00221A  1004               	iorwf	(fputc@fp+1)^0,w,c
 10259  00221C  A4D8               	btfss	status,2,c
 10260  00221E  EF13  F011         	goto	u1941
 10261  002222  EF15  F011         	goto	u1940
 10262  002226                     u1941:
 10263  002226  EF1A  F011         	goto	l3261
 10264  00222A                     u1940:
 10265  00222A                     l3259:
 10266  00222A  5001               	movf	fputc@c^0,w,c
 10267  00222C  EC86  F019         	call	_putch
 10268  002230  EF67  F011         	goto	l1371
 10269  002234                     l3261:
 10270  002234  EE20 F004          	lfsr	2,4
 10271  002238  5003               	movf	fputc@fp^0,w,c
 10272  00223A  26D9               	addwf	fsr2l,f,c
 10273  00223C  5004               	movf	(fputc@fp+1)^0,w,c
 10274  00223E  22DA               	addwfc	fsr2h,f,c
 10275  002240  50DE               	movf	postinc2,w,c
 10276  002242  10DE               	iorwf	postinc2,w,c
 10277  002244  B4D8               	btfsc	status,2,c
 10278  002246  EF27  F011         	goto	u1951
 10279  00224A  EF29  F011         	goto	u1950
 10280  00224E                     u1951:
 10281  00224E  EF44  F011         	goto	l3265
 10282  002252                     u1950:
 10283  002252  EE20 F004          	lfsr	2,4
 10284  002256  5003               	movf	fputc@fp^0,w,c
 10285  002258  26D9               	addwf	fsr2l,f,c
 10286  00225A  5004               	movf	(fputc@fp+1)^0,w,c
 10287  00225C  22DA               	addwfc	fsr2h,f,c
 10288  00225E  EE10 F002          	lfsr	1,2
 10289  002262  5003               	movf	fputc@fp^0,w,c
 10290  002264  26E1               	addwf	fsr1l,f,c
 10291  002266  5004               	movf	(fputc@fp+1)^0,w,c
 10292  002268  22E2               	addwfc	fsr1h,f,c
 10293  00226A  50DE               	movf	postinc2,w,c
 10294  00226C  5CE6               	subwf	postinc1,w,c
 10295  00226E  50E6               	movf	postinc1,w,c
 10296  002270  0A80               	xorlw	128
 10297  002272  6E09               	movwf	(??_fputc+4)^0,c
 10298  002274  50DE               	movf	postinc2,w,c
 10299  002276  0A80               	xorlw	128
 10300  002278  5809               	subwfb	(??_fputc+4)^0,w,c
 10301  00227A  B0D8               	btfsc	status,0,c
 10302  00227C  EF42  F011         	goto	u1961
 10303  002280  EF44  F011         	goto	u1960
 10304  002284                     u1961:
 10305  002284  EF67  F011         	goto	l1371
 10306  002288                     u1960:
 10307  002288                     l3265:
 10308  002288  EE20 F002          	lfsr	2,2
 10309  00228C  5003               	movf	fputc@fp^0,w,c
 10310  00228E  26D9               	addwf	fsr2l,f,c
 10311  002290  5004               	movf	(fputc@fp+1)^0,w,c
 10312  002292  22DA               	addwfc	fsr2h,f,c
 10313  002294  CFDE F005          	movff	postinc2,??_fputc
 10314  002298  CFDD F006          	movff	postdec2,??_fputc+1
 10315  00229C  C003  FFD9         	movff	fputc@fp,fsr2l
 10316  0022A0  C004  FFDA         	movff	fputc@fp+1,fsr2h
 10317  0022A4  CFDE F007          	movff	postinc2,??_fputc+2
 10318  0022A8  CFDD F008          	movff	postdec2,??_fputc+3
 10319  0022AC  5005               	movf	??_fputc^0,w,c
 10320  0022AE  2407               	addwf	(??_fputc+2)^0,w,c
 10321  0022B0  6ED9               	movwf	fsr2l,c
 10322  0022B2  5006               	movf	(??_fputc+1)^0,w,c
 10323  0022B4  2008               	addwfc	(??_fputc+3)^0,w,c
 10324  0022B6  6EDA               	movwf	fsr2h,c
 10325  0022B8  C001  FFDF         	movff	fputc@c,indf2
 10326  0022BC  EE20 F002          	lfsr	2,2
 10327  0022C0  5003               	movf	fputc@fp^0,w,c
 10328  0022C2  26D9               	addwf	fsr2l,f,c
 10329  0022C4  5004               	movf	(fputc@fp+1)^0,w,c
 10330  0022C6  22DA               	addwfc	fsr2h,f,c
 10331  0022C8  2ADE               	incf	postinc2,f,c
 10332  0022CA  0E00               	movlw	0
 10333  0022CC  22DD               	addwfc	postdec2,f,c
 10334  0022CE                     l1371:
 10335  0022CE  0012               	return		;funcret
 10336  0022D0                     __end_of_fputc:
 10337                           	opt callstack 0
 10338                           
 10339 ;; *************** function _putch *****************
 10340 ;; Defined at:
 10341 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
 10342 ;; Parameters:    Size  Location     Type
 10343 ;;  c               1    wreg     unsigned char 
 10344 ;; Auto vars:     Size  Location     Type
 10345 ;;  c               1    0[COMRAM] unsigned char 
 10346 ;; Return value:  Size  Location     Type
 10347 ;;                  1    wreg      void 
 10348 ;; Registers used:
 10349 ;;		wreg
 10350 ;; Tracked objects:
 10351 ;;		On entry : 0/0
 10352 ;;		On exit  : 0/0
 10353 ;;		Unchanged: 0/0
 10354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10355 ;;      Params:         0       0       0       0       0       0       0       0       0
 10356 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10357 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10358 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10359 ;;Total ram usage:        0 bytes
 10360 ;; Hardware stack levels used:    1
 10361 ;; Hardware stack levels required when called:    1
 10362 ;; This function calls:
 10363 ;;		Nothing
 10364 ;; This function is called by:
 10365 ;;		_fputc
 10366 ;; This function uses a non-reentrant model
 10367 ;;
 10368                           
 10369                           	psect	text48
 10370  00330C                     __ptext48:
 10371                           	opt callstack 0
 10372  00330C                     _putch:
 10373                           	opt callstack 22
 10374  00330C  0012               	return		;funcret
 10375  00330E                     __end_of_putch:
 10376                           	opt callstack 0
 10377                           
 10378 ;; *************** function _atoi *****************
 10379 ;; Defined at:
 10380 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 10381 ;; Parameters:    Size  Location     Type
 10382 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10383 ;;		 -> STR_52(45), STR_51(29), STR_50(32), STR_49(45), 
 10384 ;;		 -> STR_48(29), STR_47(32), STR_45(24), STR_44(25), 
 10385 ;;		 -> STR_43(24), STR_42(27), STR_41(24), STR_40(23), 
 10386 ;;		 -> STR_39(25), STR_38(24), STR_20(51), STR_12(9), 
 10387 ;; Auto vars:     Size  Location     Type
 10388 ;;  n               2   20[COMRAM] int 
 10389 ;;  neg             2   13[COMRAM] int 
 10390 ;; Return value:  Size  Location     Type
 10391 ;;                  2    7[COMRAM] int 
 10392 ;; Registers used:
 10393 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10394 ;; Tracked objects:
 10395 ;;		On entry : 0/0
 10396 ;;		On exit  : 0/0
 10397 ;;		Unchanged: 0/0
 10398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10399 ;;      Params:         2       0       0       0       0       0       0       0       0
 10400 ;;      Locals:         9       0       0       0       0       0       0       0       0
 10401 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10402 ;;      Totals:        15       0       0       0       0       0       0       0       0
 10403 ;;Total ram usage:       15 bytes
 10404 ;; Hardware stack levels used:    1
 10405 ;; Hardware stack levels required when called:    2
 10406 ;; This function calls:
 10407 ;;		___wmul
 10408 ;;		_isdigit
 10409 ;;		_isspace
 10410 ;; This function is called by:
 10411 ;;		_vfpfcnvrt
 10412 ;; This function uses a non-reentrant model
 10413 ;;
 10414                           
 10415                           	psect	text49
 10416  0011AE                     __ptext49:
 10417                           	opt callstack 0
 10418  0011AE                     _atoi:
 10419                           	opt callstack 23
 10420  0011AE  0E00               	movlw	0
 10421  0011B0  6E16               	movwf	(atoi@n+1)^0,c
 10422  0011B2  0E00               	movlw	0
 10423  0011B4  6E15               	movwf	atoi@n^0,c
 10424  0011B6  0E00               	movlw	0
 10425  0011B8  6E0F               	movwf	(atoi@neg+1)^0,c
 10426  0011BA  0E00               	movlw	0
 10427  0011BC  6E0E               	movwf	atoi@neg^0,c
 10428  0011BE  EFE3  F008         	goto	l3537
 10429  0011C2                     l3535:
 10430  0011C2  4A08               	infsnz	atoi@s^0,f,c
 10431  0011C4  2A09               	incf	(atoi@s+1)^0,f,c
 10432  0011C6                     l3537:
 10433  0011C6  0E01               	movlw	1
 10434  0011C8  6E14               	movwf	_atoi$1570^0,c
 10435  0011CA  C008  FFF6         	movff	atoi@s,tblptrl
 10436  0011CE  C009  FFF7         	movff	atoi@s+1,tblptrh
 10437  0011D2                     	if	0	;tblptru may be non-zero
 10438  0011D2                     	endif
 10439  0011D2                     	if	0	;tblptru may be non-zero
 10440  0011D2                     	endif
 10441  0011D2  0008               	tblrd		*
 10442  0011D4  50F5               	movf	tablat,w,c
 10443  0011D6  0A20               	xorlw	32
 10444  0011D8  B4D8               	btfsc	status,2,c
 10445  0011DA  EFF1  F008         	goto	u2461
 10446  0011DE  EFF3  F008         	goto	u2460
 10447  0011E2                     u2461:
 10448  0011E2  EF10  F009         	goto	l3545
 10449  0011E6                     u2460:
 10450  0011E6  0EF7               	movlw	247
 10451  0011E8  6E0A               	movwf	??_atoi^0,c
 10452  0011EA  0EFF               	movlw	255
 10453  0011EC  6E0B               	movwf	(??_atoi+1)^0,c
 10454  0011EE  C008  FFF6         	movff	atoi@s,tblptrl
 10455  0011F2  C009  FFF7         	movff	atoi@s+1,tblptrh
 10456  0011F6                     	if	0	;tblptru may be non-zero
 10457  0011F6                     	endif
 10458  0011F6                     	if	0	;tblptru may be non-zero
 10459  0011F6                     	endif
 10460  0011F6  0008               	tblrd		*
 10461  0011F8  50F5               	movf	tablat,w,c
 10462  0011FA  6E0C               	movwf	(??_atoi+2)^0,c
 10463  0011FC  6A0D               	clrf	(??_atoi+3)^0,c
 10464  0011FE  500A               	movf	??_atoi^0,w,c
 10465  001200  260C               	addwf	(??_atoi+2)^0,f,c
 10466  001202  500B               	movf	(??_atoi+1)^0,w,c
 10467  001204  220D               	addwfc	(??_atoi+3)^0,f,c
 10468  001206  500D               	movf	(??_atoi+3)^0,w,c
 10469  001208  E109               	bnz	u2470
 10470  00120A  0E05               	movlw	5
 10471  00120C  5C0C               	subwf	(??_atoi+2)^0,w,c
 10472  00120E  A0D8               	btfss	status,0,c
 10473  001210  EF0C  F009         	goto	u2471
 10474  001214  EF0E  F009         	goto	u2470
 10475  001218                     u2471:
 10476  001218  EF10  F009         	goto	l3545
 10477  00121C                     u2470:
 10478  00121C  0E00               	movlw	0
 10479  00121E  6E14               	movwf	_atoi$1570^0,c
 10480  001220                     l3545:
 10481  001220  C014  F010         	movff	_atoi$1570,_atoi$1569
 10482  001224  6A11               	clrf	(_atoi$1569+1)^0,c
 10483  001226  5010               	movf	_atoi$1569^0,w,c
 10484  001228  1011               	iorwf	(_atoi$1569+1)^0,w,c
 10485  00122A  A4D8               	btfss	status,2,c
 10486  00122C  EF1A  F009         	goto	u2481
 10487  001230  EF1C  F009         	goto	u2480
 10488  001234                     u2481:
 10489  001234  EFE1  F008         	goto	l3535
 10490  001238                     u2480:
 10491  001238  EF26  F009         	goto	l3555
 10492  00123C                     l3551:
 10493  00123C  0E00               	movlw	0
 10494  00123E  6E0F               	movwf	(atoi@neg+1)^0,c
 10495  001240  0E01               	movlw	1
 10496  001242  6E0E               	movwf	atoi@neg^0,c
 10497  001244                     l3553:
 10498  001244  4A08               	infsnz	atoi@s^0,f,c
 10499  001246  2A09               	incf	(atoi@s+1)^0,f,c
 10500  001248  EF5B  F009         	goto	l3561
 10501  00124C                     l3555:
 10502  00124C  C008  FFF6         	movff	atoi@s,tblptrl
 10503  001250  C009  FFF7         	movff	atoi@s+1,tblptrh
 10504  001254                     	if	0	;tblptru may be non-zero
 10505  001254                     	endif
 10506  001254                     	if	0	;tblptru may be non-zero
 10507  001254                     	endif
 10508  001254  0008               	tblrd		*
 10509  001256  50F5               	movf	tablat,w,c
 10510  001258  6E0A               	movwf	??_atoi^0,c
 10511  00125A  6A0B               	clrf	(??_atoi+1)^0,c
 10512                           
 10513                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10514                           ; Switch size 1, requested type "simple"
 10515                           ; Number of cases is 1, Range of values is 0 to 0
 10516                           ; switch strategies available:
 10517                           ; Name         Instructions Cycles
 10518                           ; simple_byte            4     3 (average)
 10519                           ;	Chosen strategy is simple_byte
 10520  00125C  500B               	movf	(??_atoi+1)^0,w,c
 10521  00125E  0A00               	xorlw	0	; case 0
 10522  001260  B4D8               	btfsc	status,2,c
 10523  001262  EF35  F009         	goto	l5137
 10524  001266  EF5B  F009         	goto	l3561
 10525  00126A                     l5137:
 10526                           
 10527                           ; Switch size 1, requested type "simple"
 10528                           ; Number of cases is 2, Range of values is 43 to 45
 10529                           ; switch strategies available:
 10530                           ; Name         Instructions Cycles
 10531                           ; simple_byte            7     4 (average)
 10532                           ;	Chosen strategy is simple_byte
 10533  00126A  500A               	movf	??_atoi^0,w,c
 10534  00126C  0A2B               	xorlw	43	; case 43
 10535  00126E  B4D8               	btfsc	status,2,c
 10536  001270  EF22  F009         	goto	l3553
 10537  001274  0A06               	xorlw	6	; case 45
 10538  001276  B4D8               	btfsc	status,2,c
 10539  001278  EF1E  F009         	goto	l3551
 10540  00127C  EF5B  F009         	goto	l3561
 10541  001280                     l3557:
 10542  001280  C015  F001         	movff	atoi@n,___wmul@multiplier
 10543  001284  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 10544  001288  0E00               	movlw	0
 10545  00128A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10546  00128C  0E0A               	movlw	10
 10547  00128E  6E03               	movwf	___wmul@multiplicand^0,c
 10548  001290  ECF7  F018         	call	___wmul	;wreg free
 10549  001294  C008  FFF6         	movff	atoi@s,tblptrl
 10550  001298  C009  FFF7         	movff	atoi@s+1,tblptrh
 10551  00129C                     	if	0	;tblptru may be non-zero
 10552  00129C                     	endif
 10553  00129C                     	if	0	;tblptru may be non-zero
 10554  00129C                     	endif
 10555  00129C  0008               	tblrd		*
 10556  00129E  50F5               	movf	tablat,w,c
 10557  0012A0  5E01               	subwf	?___wmul^0,f,c
 10558  0012A2  0E00               	movlw	0
 10559  0012A4  5A02               	subwfb	(?___wmul+1)^0,f,c
 10560  0012A6  0E30               	movlw	48
 10561  0012A8  2401               	addwf	?___wmul^0,w,c
 10562  0012AA  6E15               	movwf	atoi@n^0,c
 10563  0012AC  0E00               	movlw	0
 10564  0012AE  2002               	addwfc	(?___wmul+1)^0,w,c
 10565  0012B0  6E16               	movwf	(atoi@n+1)^0,c
 10566  0012B2  EF22  F009         	goto	l3553
 10567  0012B6                     l3561:
 10568  0012B6  0ED0               	movlw	208
 10569  0012B8  6E0A               	movwf	??_atoi^0,c
 10570  0012BA  0EFF               	movlw	255
 10571  0012BC  6E0B               	movwf	(??_atoi+1)^0,c
 10572  0012BE  C008  FFF6         	movff	atoi@s,tblptrl
 10573  0012C2  C009  FFF7         	movff	atoi@s+1,tblptrh
 10574  0012C6                     	if	0	;tblptru may be non-zero
 10575  0012C6                     	endif
 10576  0012C6                     	if	0	;tblptru may be non-zero
 10577  0012C6                     	endif
 10578  0012C6  0008               	tblrd		*
 10579  0012C8  50F5               	movf	tablat,w,c
 10580  0012CA  6E0C               	movwf	(??_atoi+2)^0,c
 10581  0012CC  6A0D               	clrf	(??_atoi+3)^0,c
 10582  0012CE  500A               	movf	??_atoi^0,w,c
 10583  0012D0  260C               	addwf	(??_atoi+2)^0,f,c
 10584  0012D2  500B               	movf	(??_atoi+1)^0,w,c
 10585  0012D4  220D               	addwfc	(??_atoi+3)^0,f,c
 10586  0012D6  500D               	movf	(??_atoi+3)^0,w,c
 10587  0012D8  E10A               	bnz	u2490
 10588  0012DA  0E0A               	movlw	10
 10589  0012DC  5C0C               	subwf	(??_atoi+2)^0,w,c
 10590  0012DE  A0D8               	btfss	status,0,c
 10591  0012E0  EF74  F009         	goto	u2491
 10592  0012E4  EF77  F009         	goto	u2490
 10593  0012E8                     u2491:
 10594  0012E8  0E01               	movlw	1
 10595  0012EA  EF78  F009         	goto	u2500
 10596  0012EE                     u2490:
 10597  0012EE  0E00               	movlw	0
 10598  0012F0                     u2500:
 10599  0012F0  6E12               	movwf	_atoi$1571^0,c
 10600  0012F2  6A13               	clrf	(_atoi$1571+1)^0,c
 10601  0012F4  5012               	movf	_atoi$1571^0,w,c
 10602  0012F6  1013               	iorwf	(_atoi$1571+1)^0,w,c
 10603  0012F8  A4D8               	btfss	status,2,c
 10604  0012FA  EF81  F009         	goto	u2511
 10605  0012FE  EF83  F009         	goto	u2510
 10606  001302                     u2511:
 10607  001302  EF40  F009         	goto	l3557
 10608  001306                     u2510:
 10609  001306  500E               	movf	atoi@neg^0,w,c
 10610  001308  100F               	iorwf	(atoi@neg+1)^0,w,c
 10611  00130A  A4D8               	btfss	status,2,c
 10612  00130C  EF8A  F009         	goto	u2521
 10613  001310  EF8C  F009         	goto	u2520
 10614  001314                     u2521:
 10615  001314  EF9A  F009         	goto	l1342
 10616  001318                     u2520:
 10617  001318  C015  F00A         	movff	atoi@n,??_atoi
 10618  00131C  C016  F00B         	movff	atoi@n+1,??_atoi+1
 10619  001320  1E0A               	comf	??_atoi^0,f,c
 10620  001322  1E0B               	comf	(??_atoi+1)^0,f,c
 10621  001324  4A0A               	infsnz	??_atoi^0,f,c
 10622  001326  2A0B               	incf	(??_atoi+1)^0,f,c
 10623  001328  C00A  F008         	movff	??_atoi,?_atoi
 10624  00132C  C00B  F009         	movff	??_atoi+1,?_atoi+1
 10625  001330  EF9E  F009         	goto	l1345
 10626  001334                     l1342:
 10627  001334  C015  F008         	movff	atoi@n,?_atoi
 10628  001338  C016  F009         	movff	atoi@n+1,?_atoi+1
 10629  00133C                     l1345:
 10630  00133C  0012               	return		;funcret
 10631  00133E                     __end_of_atoi:
 10632                           	opt callstack 0
 10633                           
 10634 ;; *************** function _isspace *****************
 10635 ;; Defined at:
 10636 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 10637 ;; Parameters:    Size  Location     Type
 10638 ;;  c               2    0[COMRAM] int 
 10639 ;; Auto vars:     Size  Location     Type
 10640 ;;		None
 10641 ;; Return value:  Size  Location     Type
 10642 ;;                  2    0[COMRAM] int 
 10643 ;; Registers used:
 10644 ;;		wreg, status,2, status,0
 10645 ;; Tracked objects:
 10646 ;;		On entry : 0/0
 10647 ;;		On exit  : 0/0
 10648 ;;		Unchanged: 0/0
 10649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10650 ;;      Params:         2       0       0       0       0       0       0       0       0
 10651 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10652 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10653 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10654 ;;Total ram usage:        7 bytes
 10655 ;; Hardware stack levels used:    1
 10656 ;; Hardware stack levels required when called:    1
 10657 ;; This function calls:
 10658 ;;		Nothing
 10659 ;; This function is called by:
 10660 ;;		_atoi
 10661 ;; This function uses a non-reentrant model
 10662 ;;
 10663                           
 10664                           	psect	text50
 10665  002E48                     __ptext50:
 10666                           	opt callstack 0
 10667  002E48                     _isspace:
 10668                           	opt callstack 23
 10669  002E48  0E01               	movlw	1
 10670  002E4A  6E07               	movwf	_isspace$1587^0,c
 10671  002E4C  0E20               	movlw	32
 10672  002E4E  1801               	xorwf	isspace@c^0,w,c
 10673  002E50  1002               	iorwf	(isspace@c+1)^0,w,c
 10674  002E52  B4D8               	btfsc	status,2,c
 10675  002E54  EF2E  F017         	goto	u2191
 10676  002E58  EF30  F017         	goto	u2190
 10677  002E5C                     u2191:
 10678  002E5C  EF49  F017         	goto	l3411
 10679  002E60                     u2190:
 10680  002E60  0EF7               	movlw	247
 10681  002E62  6E03               	movwf	??_isspace^0,c
 10682  002E64  0EFF               	movlw	255
 10683  002E66  6E04               	movwf	(??_isspace+1)^0,c
 10684  002E68  C001  F005         	movff	isspace@c,??_isspace+2
 10685  002E6C  C002  F006         	movff	isspace@c+1,??_isspace+3
 10686  002E70  5003               	movf	??_isspace^0,w,c
 10687  002E72  2605               	addwf	(??_isspace+2)^0,f,c
 10688  002E74  5004               	movf	(??_isspace+1)^0,w,c
 10689  002E76  2206               	addwfc	(??_isspace+3)^0,f,c
 10690  002E78  5006               	movf	(??_isspace+3)^0,w,c
 10691  002E7A  E109               	bnz	u2200
 10692  002E7C  0E05               	movlw	5
 10693  002E7E  5C05               	subwf	(??_isspace+2)^0,w,c
 10694  002E80  A0D8               	btfss	status,0,c
 10695  002E82  EF45  F017         	goto	u2201
 10696  002E86  EF47  F017         	goto	u2200
 10697  002E8A                     u2201:
 10698  002E8A  EF49  F017         	goto	l3411
 10699  002E8E                     u2200:
 10700  002E8E  0E00               	movlw	0
 10701  002E90  6E07               	movwf	_isspace$1587^0,c
 10702  002E92                     l3411:
 10703  002E92  C007  F001         	movff	_isspace$1587,?_isspace
 10704  002E96  6A02               	clrf	(?_isspace+1)^0,c
 10705  002E98  0012               	return		;funcret
 10706  002E9A                     __end_of_isspace:
 10707                           	opt callstack 0
 10708                           
 10709 ;; *************** function _isdigit *****************
 10710 ;; Defined at:
 10711 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 10712 ;; Parameters:    Size  Location     Type
 10713 ;;  c               2    0[COMRAM] int 
 10714 ;; Auto vars:     Size  Location     Type
 10715 ;;		None
 10716 ;; Return value:  Size  Location     Type
 10717 ;;                  2    0[COMRAM] int 
 10718 ;; Registers used:
 10719 ;;		wreg, status,2, status,0
 10720 ;; Tracked objects:
 10721 ;;		On entry : 0/0
 10722 ;;		On exit  : 0/0
 10723 ;;		Unchanged: 0/0
 10724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10725 ;;      Params:         2       0       0       0       0       0       0       0       0
 10726 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10727 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10728 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10729 ;;Total ram usage:        6 bytes
 10730 ;; Hardware stack levels used:    1
 10731 ;; Hardware stack levels required when called:    1
 10732 ;; This function calls:
 10733 ;;		Nothing
 10734 ;; This function is called by:
 10735 ;;		_vfpfcnvrt
 10736 ;;		_atoi
 10737 ;; This function uses a non-reentrant model
 10738 ;;
 10739                           
 10740                           	psect	text51
 10741  00306E                     __ptext51:
 10742                           	opt callstack 0
 10743  00306E                     _isdigit:
 10744                           	opt callstack 24
 10745  00306E  0ED0               	movlw	208
 10746  003070  6E03               	movwf	??_isdigit^0,c
 10747  003072  0EFF               	movlw	255
 10748  003074  6E04               	movwf	(??_isdigit+1)^0,c
 10749  003076  C001  F005         	movff	isdigit@c,??_isdigit+2
 10750  00307A  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10751  00307E  5003               	movf	??_isdigit^0,w,c
 10752  003080  2605               	addwf	(??_isdigit+2)^0,f,c
 10753  003082  5004               	movf	(??_isdigit+1)^0,w,c
 10754  003084  2206               	addwfc	(??_isdigit+3)^0,f,c
 10755  003086  5006               	movf	(??_isdigit+3)^0,w,c
 10756  003088  E10A               	bnz	u2040
 10757  00308A  0E0A               	movlw	10
 10758  00308C  5C05               	subwf	(??_isdigit+2)^0,w,c
 10759  00308E  A0D8               	btfss	status,0,c
 10760  003090  EF4C  F018         	goto	u2041
 10761  003094  EF4F  F018         	goto	u2040
 10762  003098                     u2041:
 10763  003098  0E01               	movlw	1
 10764  00309A  EF50  F018         	goto	u2050
 10765  00309E                     u2040:
 10766  00309E  0E00               	movlw	0
 10767  0030A0                     u2050:
 10768  0030A0  6E01               	movwf	?_isdigit^0,c
 10769  0030A2  6A02               	clrf	(?_isdigit+1)^0,c
 10770  0030A4  0012               	return		;funcret
 10771  0030A6                     __end_of_isdigit:
 10772                           	opt callstack 0
 10773                           
 10774 ;; *************** function _getValue *****************
 10775 ;; Defined at:
 10776 ;;		line 848 in file "main.c"
 10777 ;; Parameters:    Size  Location     Type
 10778 ;;  numCharacter    2    3[COMRAM] short 
 10779 ;; Auto vars:     Size  Location     Type
 10780 ;;  i               2   10[COMRAM] int 
 10781 ;;  i               2    8[COMRAM] int 
 10782 ;;  Rx              1   13[COMRAM] unsigned char 
 10783 ;;  dato            1   12[COMRAM] unsigned char 
 10784 ;;  datoIncorrec    1    7[COMRAM] unsigned char 
 10785 ;; Return value:  Size  Location     Type
 10786 ;;                  1    wreg      unsigned char 
 10787 ;; Registers used:
 10788 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10789 ;; Tracked objects:
 10790 ;;		On entry : 0/0
 10791 ;;		On exit  : 0/0
 10792 ;;		Unchanged: 0/0
 10793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10794 ;;      Params:         2       0       0       0       0       0       0       0       0
 10795 ;;      Locals:         7       0       0       0       0       0       0       0       0
 10796 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10797 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10798 ;;Total ram usage:       11 bytes
 10799 ;; Hardware stack levels used:    1
 10800 ;; Hardware stack levels required when called:    3
 10801 ;; This function calls:
 10802 ;;		_UART_printf
 10803 ;;		_UART_read
 10804 ;;		_UART_write
 10805 ;; This function is called by:
 10806 ;;		_setRtc
 10807 ;;		_asignarHorarios
 10808 ;;		_setTiempoRegar
 10809 ;;		_lecturaWifi
 10810 ;;		_regadoRapido
 10811 ;; This function uses a non-reentrant model
 10812 ;;
 10813                           
 10814                           	psect	text52
 10815  000DD0                     __ptext52:
 10816                           	opt callstack 0
 10817  000DD0                     _getValue:
 10818                           	opt callstack 25
 10819  000DD0                     
 10820                           ;main.c: 851:     unsigned char datoIncorrecto = 0;
 10821  000DD0  0E00               	movlw	0
 10822  000DD2  6E08               	movwf	getValue@datoIncorrecto^0,c
 10823                           
 10824                           ;main.c: 852:     unsigned char dato = 0;
 10825  000DD4  0E00               	movlw	0
 10826  000DD6  6E0D               	movwf	getValue@dato^0,c
 10827                           
 10828                           ;main.c: 854:     switch (numCharacters) {
 10829  000DD8  EFC4  F007         	goto	l3985
 10830  000DDC                     l3907:
 10831                           
 10832                           ;main.c: 857:             Rx = UART_read();
 10833  000DDC  ECD1  F016         	call	_UART_read	;wreg free
 10834  000DE0  6E0E               	movwf	getValue@Rx^0,c
 10835  000DE2                     
 10836                           ;main.c: 859:             if (Rx >= 48 && Rx <= 57) {
 10837  000DE2  0E2F               	movlw	47
 10838  000DE4  640E               	cpfsgt	getValue@Rx^0,c
 10839  000DE6  EFF7  F006         	goto	u2971
 10840  000DEA  EFF9  F006         	goto	u2970
 10841  000DEE                     u2971:
 10842  000DEE  EF07  F007         	goto	l3917
 10843  000DF2                     u2970:
 10844  000DF2  0E3A               	movlw	58
 10845  000DF4  600E               	cpfslt	getValue@Rx^0,c
 10846  000DF6  EFFF  F006         	goto	u2981
 10847  000DFA  EF01  F007         	goto	u2980
 10848  000DFE                     u2981:
 10849  000DFE  EF07  F007         	goto	l3917
 10850  000E02                     u2980:
 10851  000E02                     
 10852                           ;main.c: 860:                 Rx -= 48;
 10853  000E02  0E30               	movlw	48
 10854  000E04  5E0E               	subwf	getValue@Rx^0,f,c
 10855  000E06                     
 10856                           ;main.c: 861:                 dato = Rx;
 10857  000E06  C00E  F00D         	movff	getValue@Rx,getValue@dato
 10858                           
 10859                           ;main.c: 862:             } else {
 10860  000E0A  EFDE  F007         	goto	l3987
 10861  000E0E                     l3917:
 10862                           
 10863                           ;main.c: 863:                 UART_write('@');
 10864  000E0E  0E40               	movlw	64
 10865  000E10  EC46  F019         	call	_UART_write
 10866  000E14                     
 10867                           ;main.c: 864:                 datoIncorrecto = 1;
 10868  000E14  0E01               	movlw	1
 10869  000E16  6E08               	movwf	getValue@datoIncorrecto^0,c
 10870  000E18  EFDE  F007         	goto	l3987
 10871  000E1C                     l3921:
 10872                           
 10873                           ;main.c: 870:             for (int i = 0; i < 2; i++) {
 10874  000E1C  0E00               	movlw	0
 10875  000E1E  6E0A               	movwf	(getValue@i+1)^0,c
 10876  000E20  0E00               	movlw	0
 10877  000E22  6E09               	movwf	getValue@i^0,c
 10878  000E24                     l3927:
 10879                           
 10880                           ;main.c: 872:                 Rx = UART_read();
 10881  000E24  ECD1  F016         	call	_UART_read	;wreg free
 10882  000E28  6E0E               	movwf	getValue@Rx^0,c
 10883  000E2A                     
 10884                           ;main.c: 874:                 if (Rx >= 48 && Rx <= 57) {
 10885  000E2A  0E2F               	movlw	47
 10886  000E2C  640E               	cpfsgt	getValue@Rx^0,c
 10887  000E2E  EF1B  F007         	goto	u2991
 10888  000E32  EF1D  F007         	goto	u2990
 10889  000E36                     u2991:
 10890  000E36  EF4B  F007         	goto	l3943
 10891  000E3A                     u2990:
 10892  000E3A  0E3A               	movlw	58
 10893  000E3C  600E               	cpfslt	getValue@Rx^0,c
 10894  000E3E  EF23  F007         	goto	u3001
 10895  000E42  EF25  F007         	goto	u3000
 10896  000E46                     u3001:
 10897  000E46  EF4B  F007         	goto	l3943
 10898  000E4A                     u3000:
 10899  000E4A                     
 10900                           ;main.c: 876:                     Rx -= 48;
 10901  000E4A  0E30               	movlw	48
 10902  000E4C  5E0E               	subwf	getValue@Rx^0,f,c
 10903                           
 10904                           ;main.c: 878:                     switch (i) {
 10905  000E4E  EF35  F007         	goto	l3941
 10906  000E52                     l440:
 10907                           
 10908                           ;main.c: 880:                             dato = Rx;
 10909  000E52  C00E  F00D         	movff	getValue@Rx,getValue@dato
 10910  000E56                     
 10911                           ;main.c: 881:                             dato *= 10;
 10912  000E56  0E0A               	movlw	10
 10913  000E58  020D               	mulwf	getValue@dato^0,c
 10914  000E5A  50F3               	movf	prodl,w,c
 10915  000E5C  6E0D               	movwf	getValue@dato^0,c
 10916                           
 10917                           ;main.c: 882:                             break;
 10918  000E5E  EF52  F007         	goto	l3947
 10919  000E62                     l3937:
 10920                           
 10921                           ;main.c: 885:                             dato += Rx;
 10922  000E62  500E               	movf	getValue@Rx^0,w,c
 10923  000E64  260D               	addwf	getValue@dato^0,f,c
 10924                           
 10925                           ;main.c: 886:                             break;
 10926  000E66  EF52  F007         	goto	l3947
 10927  000E6A                     l3941:
 10928  000E6A  C009  F006         	movff	getValue@i,??_getValue
 10929  000E6E  C00A  F007         	movff	getValue@i+1,??_getValue+1
 10930                           
 10931                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10932                           ; Switch size 1, requested type "simple"
 10933                           ; Number of cases is 1, Range of values is 0 to 0
 10934                           ; switch strategies available:
 10935                           ; Name         Instructions Cycles
 10936                           ; simple_byte            4     3 (average)
 10937                           ;	Chosen strategy is simple_byte
 10938  000E72  5007               	movf	(??_getValue+1)^0,w,c
 10939  000E74  0A00               	xorlw	0	; case 0
 10940  000E76  B4D8               	btfsc	status,2,c
 10941  000E78  EF40  F007         	goto	l5139
 10942  000E7C  EF52  F007         	goto	l3947
 10943  000E80                     l5139:
 10944                           
 10945                           ; Switch size 1, requested type "simple"
 10946                           ; Number of cases is 2, Range of values is 0 to 1
 10947                           ; switch strategies available:
 10948                           ; Name         Instructions Cycles
 10949                           ; simple_byte            7     4 (average)
 10950                           ;	Chosen strategy is simple_byte
 10951  000E80  5006               	movf	??_getValue^0,w,c
 10952  000E82  0A00               	xorlw	0	; case 0
 10953  000E84  B4D8               	btfsc	status,2,c
 10954  000E86  EF29  F007         	goto	l440
 10955  000E8A  0A01               	xorlw	1	; case 1
 10956  000E8C  B4D8               	btfsc	status,2,c
 10957  000E8E  EF31  F007         	goto	l3937
 10958  000E92  EF52  F007         	goto	l3947
 10959  000E96                     l3943:
 10960                           
 10961                           ;main.c: 894:                     datoIncorrecto = 1;
 10962  000E96  0E01               	movlw	1
 10963  000E98  6E08               	movwf	getValue@datoIncorrecto^0,c
 10964  000E9A                     
 10965                           ;main.c: 895:                     UART_write('@');
 10966  000E9A  0E40               	movlw	64
 10967  000E9C  EC46  F019         	call	_UART_write
 10968                           
 10969                           ;main.c: 896:                     break;
 10970  000EA0  EFDE  F007         	goto	l3987
 10971  000EA4                     l3947:
 10972                           
 10973                           ;main.c: 898:             }
 10974  000EA4  4A09               	infsnz	getValue@i^0,f,c
 10975  000EA6  2A0A               	incf	(getValue@i+1)^0,f,c
 10976  000EA8  BE0A               	btfsc	(getValue@i+1)^0,7,c
 10977  000EAA  EF60  F007         	goto	u3011
 10978  000EAE  500A               	movf	(getValue@i+1)^0,w,c
 10979  000EB0  E109               	bnz	u3010
 10980  000EB2  0E02               	movlw	2
 10981  000EB4  5C09               	subwf	getValue@i^0,w,c
 10982  000EB6  A0D8               	btfss	status,0,c
 10983  000EB8  EF60  F007         	goto	u3011
 10984  000EBC  EF62  F007         	goto	u3010
 10985  000EC0                     u3011:
 10986  000EC0  EF12  F007         	goto	l3927
 10987  000EC4                     u3010:
 10988  000EC4  EFDE  F007         	goto	l3987
 10989  000EC8                     l3951:
 10990                           
 10991                           ;main.c: 902:             for (int i = 0; i < 3; i++) {
 10992  000EC8  0E00               	movlw	0
 10993  000ECA  6E0C               	movwf	(getValue@i_990+1)^0,c
 10994  000ECC  0E00               	movlw	0
 10995  000ECE  6E0B               	movwf	getValue@i_990^0,c
 10996  000ED0                     l3957:
 10997                           
 10998                           ;main.c: 904:                 Rx = UART_read();
 10999  000ED0  ECD1  F016         	call	_UART_read	;wreg free
 11000  000ED4  6E0E               	movwf	getValue@Rx^0,c
 11001  000ED6                     
 11002                           ;main.c: 906:                 if (Rx >= 48 && Rx <= 57) {
 11003  000ED6  0E2F               	movlw	47
 11004  000ED8  640E               	cpfsgt	getValue@Rx^0,c
 11005  000EDA  EF71  F007         	goto	u3021
 11006  000EDE  EF73  F007         	goto	u3020
 11007  000EE2                     u3021:
 11008  000EE2  EFAB  F007         	goto	l3975
 11009  000EE6                     u3020:
 11010  000EE6  0E3A               	movlw	58
 11011  000EE8  600E               	cpfslt	getValue@Rx^0,c
 11012  000EEA  EF79  F007         	goto	u3031
 11013  000EEE  EF7B  F007         	goto	u3030
 11014  000EF2                     u3031:
 11015  000EF2  EFAB  F007         	goto	l3975
 11016  000EF6                     u3030:
 11017  000EF6                     
 11018                           ;main.c: 908:                     Rx -= 48;
 11019  000EF6  0E30               	movlw	48
 11020  000EF8  5E0E               	subwf	getValue@Rx^0,f,c
 11021                           
 11022                           ;main.c: 910:                     switch (i) {
 11023  000EFA  EF91  F007         	goto	l3973
 11024  000EFE                     l450:
 11025                           
 11026                           ;main.c: 912:                             dato = Rx;
 11027  000EFE  C00E  F00D         	movff	getValue@Rx,getValue@dato
 11028  000F02                     
 11029                           ;main.c: 913:                             dato *= 100;
 11030  000F02  0E64               	movlw	100
 11031  000F04  020D               	mulwf	getValue@dato^0,c
 11032  000F06  50F3               	movf	prodl,w,c
 11033  000F08  6E0D               	movwf	getValue@dato^0,c
 11034                           
 11035                           ;main.c: 914:                             break;
 11036  000F0A  EFB2  F007         	goto	l3979
 11037  000F0E                     l3967:
 11038                           
 11039                           ;main.c: 917:                             dato += (Rx * 10);
 11040  000F0E  500E               	movf	getValue@Rx^0,w,c
 11041  000F10  0D0A               	mullw	10
 11042  000F12  50F3               	movf	243,w,c
 11043  000F14  260D               	addwf	getValue@dato^0,f,c
 11044                           
 11045                           ;main.c: 918:                             break;
 11046  000F16  EFB2  F007         	goto	l3979
 11047  000F1A                     l3969:
 11048                           
 11049                           ;main.c: 921:                             dato += Rx;
 11050  000F1A  500E               	movf	getValue@Rx^0,w,c
 11051  000F1C  260D               	addwf	getValue@dato^0,f,c
 11052                           
 11053                           ;main.c: 922:                             break;
 11054  000F1E  EFB2  F007         	goto	l3979
 11055  000F22                     l3973:
 11056  000F22  C00B  F006         	movff	getValue@i_990,??_getValue
 11057  000F26  C00C  F007         	movff	getValue@i_990+1,??_getValue+1
 11058                           
 11059                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11060                           ; Switch size 1, requested type "simple"
 11061                           ; Number of cases is 1, Range of values is 0 to 0
 11062                           ; switch strategies available:
 11063                           ; Name         Instructions Cycles
 11064                           ; simple_byte            4     3 (average)
 11065                           ;	Chosen strategy is simple_byte
 11066  000F2A  5007               	movf	(??_getValue+1)^0,w,c
 11067  000F2C  0A00               	xorlw	0	; case 0
 11068  000F2E  B4D8               	btfsc	status,2,c
 11069  000F30  EF9C  F007         	goto	l5141
 11070  000F34  EFB2  F007         	goto	l3979
 11071  000F38                     l5141:
 11072                           
 11073                           ; Switch size 1, requested type "simple"
 11074                           ; Number of cases is 3, Range of values is 0 to 2
 11075                           ; switch strategies available:
 11076                           ; Name         Instructions Cycles
 11077                           ; simple_byte           10     6 (average)
 11078                           ;	Chosen strategy is simple_byte
 11079  000F38  5006               	movf	??_getValue^0,w,c
 11080  000F3A  0A00               	xorlw	0	; case 0
 11081  000F3C  B4D8               	btfsc	status,2,c
 11082  000F3E  EF7F  F007         	goto	l450
 11083  000F42  0A01               	xorlw	1	; case 1
 11084  000F44  B4D8               	btfsc	status,2,c
 11085  000F46  EF87  F007         	goto	l3967
 11086  000F4A  0A03               	xorlw	3	; case 2
 11087  000F4C  B4D8               	btfsc	status,2,c
 11088  000F4E  EF8D  F007         	goto	l3969
 11089  000F52  EFB2  F007         	goto	l3979
 11090  000F56                     l3975:
 11091                           
 11092                           ;main.c: 930:                     datoIncorrecto = 1;
 11093  000F56  0E01               	movlw	1
 11094  000F58  6E08               	movwf	getValue@datoIncorrecto^0,c
 11095  000F5A                     
 11096                           ;main.c: 931:                     UART_write('@');
 11097  000F5A  0E40               	movlw	64
 11098  000F5C  EC46  F019         	call	_UART_write
 11099                           
 11100                           ;main.c: 932:                     break;
 11101  000F60  EFDE  F007         	goto	l3987
 11102  000F64                     l3979:
 11103                           
 11104                           ;main.c: 934:             }
 11105  000F64  4A0B               	infsnz	getValue@i_990^0,f,c
 11106  000F66  2A0C               	incf	(getValue@i_990+1)^0,f,c
 11107  000F68  BE0C               	btfsc	(getValue@i_990+1)^0,7,c
 11108  000F6A  EFC0  F007         	goto	u3041
 11109  000F6E  500C               	movf	(getValue@i_990+1)^0,w,c
 11110  000F70  E109               	bnz	u3040
 11111  000F72  0E03               	movlw	3
 11112  000F74  5C0B               	subwf	getValue@i_990^0,w,c
 11113  000F76  A0D8               	btfss	status,0,c
 11114  000F78  EFC0  F007         	goto	u3041
 11115  000F7C  EFC2  F007         	goto	u3040
 11116  000F80                     u3041:
 11117  000F80  EF68  F007         	goto	l3957
 11118  000F84                     u3040:
 11119  000F84  EFDE  F007         	goto	l3987
 11120  000F88                     l3985:
 11121  000F88  C004  F006         	movff	getValue@numCharacters,??_getValue
 11122  000F8C  C005  F007         	movff	getValue@numCharacters+1,??_getValue+1
 11123                           
 11124                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11125                           ; Switch size 1, requested type "simple"
 11126                           ; Number of cases is 1, Range of values is 0 to 0
 11127                           ; switch strategies available:
 11128                           ; Name         Instructions Cycles
 11129                           ; simple_byte            4     3 (average)
 11130                           ;	Chosen strategy is simple_byte
 11131  000F90  5007               	movf	(??_getValue+1)^0,w,c
 11132  000F92  0A00               	xorlw	0	; case 0
 11133  000F94  B4D8               	btfsc	status,2,c
 11134  000F96  EFCF  F007         	goto	l5143
 11135  000F9A  EFDE  F007         	goto	l3987
 11136  000F9E                     l5143:
 11137                           
 11138                           ; Switch size 1, requested type "simple"
 11139                           ; Number of cases is 3, Range of values is 1 to 3
 11140                           ; switch strategies available:
 11141                           ; Name         Instructions Cycles
 11142                           ; simple_byte           10     6 (average)
 11143                           ;	Chosen strategy is simple_byte
 11144  000F9E  5006               	movf	??_getValue^0,w,c
 11145  000FA0  0A01               	xorlw	1	; case 1
 11146  000FA2  B4D8               	btfsc	status,2,c
 11147  000FA4  EFEE  F006         	goto	l3907
 11148  000FA8  0A03               	xorlw	3	; case 2
 11149  000FAA  B4D8               	btfsc	status,2,c
 11150  000FAC  EF0E  F007         	goto	l3921
 11151  000FB0  0A01               	xorlw	1	; case 3
 11152  000FB2  B4D8               	btfsc	status,2,c
 11153  000FB4  EF64  F007         	goto	l3951
 11154  000FB8  EFDE  F007         	goto	l3987
 11155  000FBC                     l3987:
 11156                           
 11157                           ;main.c: 943:     if (esperandoDatos || datoIncorrecto) {
 11158  000FBC  0100               	movlb	0	; () banked
 11159  000FBE  5189               	movf	_esperandoDatos& (0+255),w,b
 11160  000FC0  A4D8               	btfss	status,2,c
 11161  000FC2  EFE5  F007         	goto	u3051
 11162  000FC6  EFE7  F007         	goto	u3050
 11163  000FCA                     u3051:
 11164  000FCA  EFEF  F007         	goto	l3991
 11165  000FCE                     u3050:
 11166  000FCE                     
 11167                           ; BSR set to: 0
 11168  000FCE  5008               	movf	getValue@datoIncorrecto^0,w,c
 11169  000FD0  B4D8               	btfsc	status,2,c
 11170  000FD2  EFED  F007         	goto	u3061
 11171  000FD6  EFEF  F007         	goto	u3060
 11172  000FDA                     u3061:
 11173  000FDA  EFF8  F007         	goto	l3999
 11174  000FDE                     u3060:
 11175  000FDE                     l3991:
 11176                           
 11177                           ; BSR set to: 0
 11178                           ;main.c: 945:         UART_printf("\nFALLO EL SETEO\r\n");
 11179  000FDE  0E94               	movlw	low STR_56
 11180  000FE0  6E02               	movwf	UART_printf@cadena^0,c
 11181  000FE2  0E7F               	movlw	high STR_56
 11182  000FE4  6E03               	movwf	(UART_printf@cadena+1)^0,c
 11183  000FE6  EC1A  F016         	call	_UART_printf	;wreg free
 11184  000FEA                     
 11185                           ;main.c: 946:         return '@';
 11186  000FEA  0E40               	movlw	64
 11187  000FEC  EFF9  F007         	goto	l460
 11188  000FF0                     l3999:
 11189                           
 11190                           ; BSR set to: 0
 11191                           ;main.c: 948:         return dato;
 11192  000FF0  500D               	movf	getValue@dato^0,w,c
 11193  000FF2                     l460:
 11194  000FF2  0012               	return		;funcret
 11195  000FF4                     __end_of_getValue:
 11196                           	opt callstack 0
 11197                           
 11198 ;; *************** function _UART_read *****************
 11199 ;; Defined at:
 11200 ;;		line 34 in file "./UART.h"
 11201 ;; Parameters:    Size  Location     Type
 11202 ;;		None
 11203 ;; Auto vars:     Size  Location     Type
 11204 ;;		None
 11205 ;; Return value:  Size  Location     Type
 11206 ;;                  1    wreg      unsigned char 
 11207 ;; Registers used:
 11208 ;;		wreg, status,2
 11209 ;; Tracked objects:
 11210 ;;		On entry : 0/0
 11211 ;;		On exit  : 0/0
 11212 ;;		Unchanged: 0/0
 11213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11214 ;;      Params:         0       0       0       0       0       0       0       0       0
 11215 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11216 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11217 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11218 ;;Total ram usage:        0 bytes
 11219 ;; Hardware stack levels used:    1
 11220 ;; Hardware stack levels required when called:    1
 11221 ;; This function calls:
 11222 ;;		Nothing
 11223 ;; This function is called by:
 11224 ;;		_lecturaWifi
 11225 ;;		_getValue
 11226 ;; This function uses a non-reentrant model
 11227 ;;
 11228                           
 11229                           	psect	text53
 11230  002DA2                     __ptext53:
 11231                           	opt callstack 0
 11232  002DA2                     _UART_read:
 11233                           	opt callstack 26
 11234  002DA2                     
 11235                           ;./UART.h: 36:     TMR0 = VALOR_TIMER0UART;
 11236  002DA2  0E67               	movlw	103
 11237  002DA4  6ED7               	movwf	215,c	;volatile
 11238  002DA6  0E69               	movlw	105
 11239  002DA8  6ED6               	movwf	214,c	;volatile
 11240                           
 11241                           ;./UART.h: 37:     esperaDatoConcluida = 0;
 11242  002DAA  0E00               	movlw	0
 11243  002DAC  0100               	movlb	0	; () banked
 11244  002DAE  6F8A               	movwf	_esperaDatoConcluida& (0+255),b
 11245                           
 11246                           ;./UART.h: 38:     esperandoDatos = 1;
 11247  002DB0  0E01               	movlw	1
 11248  002DB2  6F89               	movwf	_esperandoDatos& (0+255),b
 11249                           
 11250                           ;./UART.h: 39:     byteUart = 0;
 11251  002DB4  0E00               	movlw	0
 11252  002DB6  6F8B               	movwf	_byteUart& (0+255),b
 11253                           
 11254                           ;./UART.h: 40:     tiempoInactividadTrans = 0;
 11255  002DB8  0E00               	movlw	0
 11256  002DBA  6F8C               	movwf	_tiempoInactividadTrans& (0+255),b
 11257  002DBC                     l129:
 11258                           
 11259                           ; BSR set to: 0
 11260  002DBC  BA9E               	btfsc	158,5,c	;volatile
 11261  002DBE  EFE3  F016         	goto	u2741
 11262  002DC2  EFE5  F016         	goto	u2740
 11263  002DC6                     u2741:
 11264  002DC6  EFED  F016         	goto	l3737
 11265  002DCA                     u2740:
 11266  002DCA                     
 11267                           ; BSR set to: 0
 11268  002DCA  518A               	movf	_esperaDatoConcluida& (0+255),w,b
 11269  002DCC  B4D8               	btfsc	status,2,c
 11270  002DCE  EFEB  F016         	goto	u2751
 11271  002DD2  EFED  F016         	goto	u2750
 11272  002DD6                     u2751:
 11273  002DD6  EFDE  F016         	goto	l129
 11274  002DDA                     u2750:
 11275  002DDA                     l3737:
 11276                           
 11277                           ; BSR set to: 0
 11278                           ;./UART.h: 44:     if (!esperaDatoConcluida) {
 11279  002DDA  518A               	movf	_esperaDatoConcluida& (0+255),w,b
 11280  002DDC  A4D8               	btfss	status,2,c
 11281  002DDE  EFF3  F016         	goto	u2761
 11282  002DE2  EFF5  F016         	goto	u2760
 11283  002DE6                     u2761:
 11284  002DE6  EFF9  F016         	goto	l134
 11285  002DEA                     u2760:
 11286  002DEA                     
 11287                           ; BSR set to: 0
 11288                           ;./UART.h: 45:         byteUart = RCREG;
 11289  002DEA  CFAE F08B          	movff	4014,_byteUart	;volatile
 11290  002DEE                     
 11291                           ; BSR set to: 0
 11292                           ;./UART.h: 46:         esperandoDatos = 0;
 11293  002DEE  0E00               	movlw	0
 11294  002DF0  6F89               	movwf	_esperandoDatos& (0+255),b
 11295  002DF2                     l134:
 11296                           
 11297                           ; BSR set to: 0
 11298                           ;./UART.h: 49:     return byteUart;
 11299  002DF2  518B               	movf	_byteUart& (0+255),w,b
 11300  002DF4                     
 11301                           ; BSR set to: 0
 11302  002DF4  0012               	return		;funcret
 11303  002DF6                     __end_of_UART_read:
 11304                           	opt callstack 0
 11305                           
 11306 ;; *************** function _UART_printf *****************
 11307 ;; Defined at:
 11308 ;;		line 57 in file "./UART.h"
 11309 ;; Parameters:    Size  Location     Type
 11310 ;;  cadena          2    1[COMRAM] PTR unsigned char 
 11311 ;;		 -> STR_60(58), STR_59(57), STR_58(57), STR_57(20), 
 11312 ;;		 -> STR_56(18), STR_55(11), STR_54(9), STR_53(17), 
 11313 ;;		 -> STR_46(25), dameDatosSistema@bufferHorario(30), STR_37(26), STR_36(38), 
 11314 ;;		 -> STR_35(36), STR_34(28), STR_33(13), STR_32(42), 
 11315 ;;		 -> STR_31(3), STR_30(14), STR_29(26), STR_28(23), 
 11316 ;;		 -> STR_27(34), STR_26(32), STR_25(49), STR_24(37), 
 11317 ;;		 -> STR_23(27), STR_22(37), STR_21(32), STR_19(38), 
 11318 ;;		 -> STR_18(37), STR_17(72), STR_16(51), STR_15(23), 
 11319 ;;		 -> STR_14(26), STR_13(26), buffer(50), STR_11(37), 
 11320 ;;		 -> STR_10(59), STR_9(59), STR_8(51), STR_7(25), 
 11321 ;;		 -> STR_6(37), STR_5(31), STR_4(43), STR_3(16), 
 11322 ;;		 -> STR_2(36), STR_1(65), 
 11323 ;; Auto vars:     Size  Location     Type
 11324 ;;		None
 11325 ;; Return value:  Size  Location     Type
 11326 ;;                  1    wreg      void 
 11327 ;; Registers used:
 11328 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11329 ;; Tracked objects:
 11330 ;;		On entry : 0/0
 11331 ;;		On exit  : 0/0
 11332 ;;		Unchanged: 0/0
 11333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11334 ;;      Params:         2       0       0       0       0       0       0       0       0
 11335 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11336 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11337 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11338 ;;Total ram usage:        2 bytes
 11339 ;; Hardware stack levels used:    1
 11340 ;; Hardware stack levels required when called:    2
 11341 ;; This function calls:
 11342 ;;		_UART_write
 11343 ;; This function is called by:
 11344 ;;		_fijaDiaRtc
 11345 ;;		_fijaHoraRtc
 11346 ;;		_asignarHorarios
 11347 ;;		_setTiempoRegar
 11348 ;;		_lecturaWifi
 11349 ;;		_mostrarMenu
 11350 ;;		_sistemaPrincipal
 11351 ;;		_dameDatosSistema
 11352 ;;		_dameTemperaturaHumedad
 11353 ;;		_mostrarDatosSensores
 11354 ;;		_mostrarDatosSensoresWIFI
 11355 ;;		_getValue
 11356 ;;		_regadoRapido
 11357 ;;		_configBluetoothHC_06
 11358 ;; This function uses a non-reentrant model
 11359 ;;
 11360                           
 11361                           	psect	text54
 11362  002C34                     __ptext54:
 11363                           	opt callstack 0
 11364  002C34                     _UART_printf:
 11365                           	opt callstack 26
 11366  002C34                     
 11367                           ;./UART.h: 58:     while (*cadena) {
 11368  002C34  EF30  F016         	goto	l3751
 11369  002C38                     l3747:
 11370                           
 11371                           ;./UART.h: 59:         UART_write(*cadena++);
 11372  002C38  C002  FFF6         	movff	UART_printf@cadena,tblptrl
 11373  002C3C  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
 11374  002C40  6AF8               	clrf	tblptru,c
 11375  002C42  0E07               	movlw	(high __ramtop+-1)
 11376  002C44  64F7               	cpfsgt	tblptrh,c
 11377  002C46  D003               	bra	u2777
 11378  002C48  0008               	tblrd		*
 11379  002C4A  50F5               	movf	tablat,w,c
 11380  002C4C  D005               	bra	u2770
 11381  002C4E                     u2777:
 11382  002C4E  CFF6 FFE1          	movff	tblptrl,fsr1l
 11383  002C52  CFF7 FFE2          	movff	tblptrh,fsr1h
 11384  002C56  50E7               	movf	indf1,w,c
 11385  002C58                     u2770:
 11386  002C58  EC46  F019         	call	_UART_write
 11387  002C5C  4A02               	infsnz	UART_printf@cadena^0,f,c
 11388  002C5E  2A03               	incf	(UART_printf@cadena+1)^0,f,c
 11389  002C60                     l3751:
 11390                           
 11391                           ;./UART.h: 58:     while (*cadena) {
 11392  002C60  C002  FFF6         	movff	UART_printf@cadena,tblptrl
 11393  002C64  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
 11394  002C68  6AF8               	clrf	tblptru,c
 11395  002C6A  0E07               	movlw	(high __ramtop+-1)
 11396  002C6C  64F7               	cpfsgt	tblptrh,c
 11397  002C6E  D003               	bra	u2787
 11398  002C70  0008               	tblrd		*
 11399  002C72  50F5               	movf	tablat,w,c
 11400  002C74  D005               	bra	u2780
 11401  002C76                     u2787:
 11402  002C76  CFF6 FFE1          	movff	tblptrl,fsr1l
 11403  002C7A  CFF7 FFE2          	movff	tblptrh,fsr1h
 11404  002C7E  50E7               	movf	indf1,w,c
 11405  002C80                     u2780:
 11406  002C80  0900               	iorlw	0
 11407  002C82  A4D8               	btfss	status,2,c
 11408  002C84  EF46  F016         	goto	u2791
 11409  002C88  EF48  F016         	goto	u2790
 11410  002C8C                     u2791:
 11411  002C8C  EF1C  F016         	goto	l3747
 11412  002C90                     u2790:
 11413  002C90  0012               	return		;funcret
 11414  002C92                     __end_of_UART_printf:
 11415                           	opt callstack 0
 11416                           
 11417 ;; *************** function _UART_write *****************
 11418 ;; Defined at:
 11419 ;;		line 52 in file "./UART.h"
 11420 ;; Parameters:    Size  Location     Type
 11421 ;;  dato            1    wreg     unsigned char 
 11422 ;; Auto vars:     Size  Location     Type
 11423 ;;  dato            1    0[COMRAM] unsigned char 
 11424 ;; Return value:  Size  Location     Type
 11425 ;;                  1    wreg      void 
 11426 ;; Registers used:
 11427 ;;		wreg
 11428 ;; Tracked objects:
 11429 ;;		On entry : 0/0
 11430 ;;		On exit  : 0/0
 11431 ;;		Unchanged: 0/0
 11432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11433 ;;      Params:         0       0       0       0       0       0       0       0       0
 11434 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11435 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11436 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11437 ;;Total ram usage:        1 bytes
 11438 ;; Hardware stack levels used:    1
 11439 ;; Hardware stack levels required when called:    1
 11440 ;; This function calls:
 11441 ;;		Nothing
 11442 ;; This function is called by:
 11443 ;;		_UART_printf
 11444 ;;		_lecturaWifi
 11445 ;;		_dameDatosSistema
 11446 ;;		_mostrarDatosSensores
 11447 ;;		_mostrarDatosSensoresWIFI
 11448 ;;		_getValue
 11449 ;; This function uses a non-reentrant model
 11450 ;;
 11451                           
 11452                           	psect	text55
 11453  00328C                     __ptext55:
 11454                           	opt callstack 0
 11455  00328C                     _UART_write:
 11456                           	opt callstack 26
 11457                           
 11458                           ;incstack = 0
 11459                           ;UART_write@dato stored from wreg
 11460  00328C  6E01               	movwf	UART_write@dato^0,c
 11461  00328E                     
 11462                           ;./UART.h: 53:     TXREG = dato;
 11463  00328E  C001  FFAD         	movff	UART_write@dato,4013	;volatile
 11464  003292                     l138:
 11465  003292  A2AC               	btfss	172,1,c	;volatile
 11466  003294  EF4E  F019         	goto	u2551
 11467  003298  EF50  F019         	goto	u2550
 11468  00329C                     u2551:
 11469  00329C  EF49  F019         	goto	l138
 11470  0032A0                     u2550:
 11471  0032A0  0012               	return		;funcret
 11472  0032A2                     __end_of_UART_write:
 11473                           	opt callstack 0
 11474                           
 11475 ;; *************** function _escribeHorariosMemoria *****************
 11476 ;; Defined at:
 11477 ;;		line 251 in file "main.c"
 11478 ;; Parameters:    Size  Location     Type
 11479 ;;		None
 11480 ;; Auto vars:     Size  Location     Type
 11481 ;;  j               2   12[COMRAM] int 
 11482 ;;  i               2   16[COMRAM] int 
 11483 ;;  contMemoria     2   14[COMRAM] int 
 11484 ;; Return value:  Size  Location     Type
 11485 ;;                  1    wreg      void 
 11486 ;; Registers used:
 11487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11488 ;; Tracked objects:
 11489 ;;		On entry : 0/0
 11490 ;;		On exit  : 0/0
 11491 ;;		Unchanged: 0/0
 11492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11493 ;;      Params:         0       0       0       0       0       0       0       0       0
 11494 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11495 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11496 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11497 ;;Total ram usage:        8 bytes
 11498 ;; Hardware stack levels used:    1
 11499 ;; Hardware stack levels required when called:    4
 11500 ;; This function calls:
 11501 ;;		___wmul
 11502 ;;		_escribe_eeprom
 11503 ;; This function is called by:
 11504 ;;		_asignarHorarios
 11505 ;;		_setTiempoRegar
 11506 ;; This function uses a non-reentrant model
 11507 ;;
 11508                           
 11509                           	psect	text56
 11510  001A86                     __ptext56:
 11511                           	opt callstack 0
 11512  001A86                     _escribeHorariosMemoria:
 11513                           	opt callstack 24
 11514  001A86                     
 11515                           ;main.c: 253:     int contMemoria = 0;
 11516  001A86  0E00               	movlw	0
 11517  001A88  6E10               	movwf	(escribeHorariosMemoria@contMemoria+1)^0,c
 11518  001A8A  0E00               	movlw	0
 11519  001A8C  6E0F               	movwf	escribeHorariosMemoria@contMemoria^0,c
 11520                           
 11521                           ;main.c: 254:     for (int i = 0; i < 24; i++) {
 11522  001A8E  0E00               	movlw	0
 11523  001A90  6E12               	movwf	(escribeHorariosMemoria@i+1)^0,c
 11524  001A92  0E00               	movlw	0
 11525  001A94  6E11               	movwf	escribeHorariosMemoria@i^0,c
 11526  001A96                     l4201:
 11527                           
 11528                           ;main.c: 255:         escribe_eeprom(contMemoria++, horarios[i].hora);
 11529  001A96  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 11530  001A9A  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 11531  001A9E  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 11532  001AA2  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 11533  001AA6  0E00               	movlw	0
 11534  001AA8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11535  001AAA  0E0C               	movlw	12
 11536  001AAC  6E03               	movwf	___wmul@multiplicand^0,c
 11537  001AAE  ECF7  F018         	call	___wmul	;wreg free
 11538  001AB2  0E32               	movlw	low _horarios
 11539  001AB4  2401               	addwf	?___wmul^0,w,c
 11540  001AB6  6ED9               	movwf	fsr2l,c
 11541  001AB8  0E01               	movlw	high _horarios
 11542  001ABA  2002               	addwfc	(?___wmul+1)^0,w,c
 11543  001ABC  6EDA               	movwf	fsr2h,c
 11544  001ABE  50DF               	movf	indf2,w,c
 11545  001AC0  6E09               	movwf	escribe_eeprom@dato^0,c
 11546  001AC2  ECA1  F018         	call	_escribe_eeprom	;wreg free
 11547  001AC6  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 11548  001AC8  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 11549  001ACA                     
 11550                           ;main.c: 257:         for (int j = 0; j < 7; j++) {
 11551  001ACA  0E00               	movlw	0
 11552  001ACC  6E0E               	movwf	(escribeHorariosMemoria@j+1)^0,c
 11553  001ACE  0E00               	movlw	0
 11554  001AD0  6E0D               	movwf	escribeHorariosMemoria@j^0,c
 11555  001AD2                     l4211:
 11556                           
 11557                           ;main.c: 258:             escribe_eeprom(contMemoria++, horarios[i].dias[j]);
 11558  001AD2  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 11559  001AD6  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 11560  001ADA  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 11561  001ADE  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 11562  001AE2  0E00               	movlw	0
 11563  001AE4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11564  001AE6  0E0C               	movlw	12
 11565  001AE8  6E03               	movwf	___wmul@multiplicand^0,c
 11566  001AEA  ECF7  F018         	call	___wmul	;wreg free
 11567  001AEE  0E32               	movlw	low _horarios
 11568  001AF0  6E0B               	movwf	??_escribeHorariosMemoria^0,c
 11569  001AF2  0E01               	movlw	high _horarios
 11570  001AF4  6E0C               	movwf	(??_escribeHorariosMemoria+1)^0,c
 11571  001AF6  0E01               	movlw	1
 11572  001AF8  260B               	addwf	??_escribeHorariosMemoria^0,f,c
 11573  001AFA  0E00               	movlw	0
 11574  001AFC  220C               	addwfc	(??_escribeHorariosMemoria+1)^0,f,c
 11575  001AFE  5001               	movf	?___wmul^0,w,c
 11576  001B00  260B               	addwf	??_escribeHorariosMemoria^0,f,c
 11577  001B02  5002               	movf	(?___wmul+1)^0,w,c
 11578  001B04  220C               	addwfc	(??_escribeHorariosMemoria+1)^0,f,c
 11579  001B06  500D               	movf	escribeHorariosMemoria@j^0,w,c
 11580  001B08  240B               	addwf	??_escribeHorariosMemoria^0,w,c
 11581  001B0A  6ED9               	movwf	fsr2l,c
 11582  001B0C  500E               	movf	(escribeHorariosMemoria@j+1)^0,w,c
 11583  001B0E  200C               	addwfc	(??_escribeHorariosMemoria+1)^0,w,c
 11584  001B10  6EDA               	movwf	fsr2h,c
 11585  001B12  50DF               	movf	indf2,w,c
 11586  001B14  6E09               	movwf	escribe_eeprom@dato^0,c
 11587  001B16  ECA1  F018         	call	_escribe_eeprom	;wreg free
 11588  001B1A  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 11589  001B1C  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 11590  001B1E                     
 11591                           ;main.c: 259:         }
 11592  001B1E  4A0D               	infsnz	escribeHorariosMemoria@j^0,f,c
 11593  001B20  2A0E               	incf	(escribeHorariosMemoria@j+1)^0,f,c
 11594  001B22  BE0E               	btfsc	(escribeHorariosMemoria@j+1)^0,7,c
 11595  001B24  EF9D  F00D         	goto	u3251
 11596  001B28  500E               	movf	(escribeHorariosMemoria@j+1)^0,w,c
 11597  001B2A  E109               	bnz	u3250
 11598  001B2C  0E07               	movlw	7
 11599  001B2E  5C0D               	subwf	escribeHorariosMemoria@j^0,w,c
 11600  001B30  A0D8               	btfss	status,0,c
 11601  001B32  EF9D  F00D         	goto	u3251
 11602  001B36  EF9F  F00D         	goto	u3250
 11603  001B3A                     u3251:
 11604  001B3A  EF69  F00D         	goto	l4211
 11605  001B3E                     u3250:
 11606  001B3E                     
 11607                           ;main.c: 261:         escribe_eeprom(contMemoria++, horarios[i].regar);
 11608  001B3E  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 11609  001B42  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 11610  001B46  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 11611  001B4A  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 11612  001B4E  0E00               	movlw	0
 11613  001B50  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11614  001B52  0E0C               	movlw	12
 11615  001B54  6E03               	movwf	___wmul@multiplicand^0,c
 11616  001B56  ECF7  F018         	call	___wmul	;wreg free
 11617  001B5A  0E3B               	movlw	low (_horarios+9)
 11618  001B5C  2401               	addwf	?___wmul^0,w,c
 11619  001B5E  6ED9               	movwf	fsr2l,c
 11620  001B60  0E01               	movlw	high (_horarios+9)
 11621  001B62  2002               	addwfc	(?___wmul+1)^0,w,c
 11622  001B64  6EDA               	movwf	fsr2h,c
 11623  001B66  50DF               	movf	indf2,w,c
 11624  001B68  6E09               	movwf	escribe_eeprom@dato^0,c
 11625  001B6A  ECA1  F018         	call	_escribe_eeprom	;wreg free
 11626  001B6E  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 11627  001B70  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 11628  001B72                     
 11629                           ;main.c: 262:         escribe_eeprom(contMemoria++, horarios[i].tiempoRegar);
 11630  001B72  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 11631  001B76  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 11632  001B7A  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 11633  001B7E  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 11634  001B82  0E00               	movlw	0
 11635  001B84  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11636  001B86  0E0C               	movlw	12
 11637  001B88  6E03               	movwf	___wmul@multiplicand^0,c
 11638  001B8A  ECF7  F018         	call	___wmul	;wreg free
 11639  001B8E  0E3D               	movlw	low (_horarios+11)
 11640  001B90  2401               	addwf	?___wmul^0,w,c
 11641  001B92  6ED9               	movwf	fsr2l,c
 11642  001B94  0E01               	movlw	high (_horarios+11)
 11643  001B96  2002               	addwfc	(?___wmul+1)^0,w,c
 11644  001B98  6EDA               	movwf	fsr2h,c
 11645  001B9A  50DF               	movf	indf2,w,c
 11646  001B9C  6E09               	movwf	escribe_eeprom@dato^0,c
 11647  001B9E  ECA1  F018         	call	_escribe_eeprom	;wreg free
 11648  001BA2  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 11649  001BA4  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 11650                           
 11651                           ;main.c: 263:     }
 11652  001BA6  4A11               	infsnz	escribeHorariosMemoria@i^0,f,c
 11653  001BA8  2A12               	incf	(escribeHorariosMemoria@i+1)^0,f,c
 11654  001BAA  BE12               	btfsc	(escribeHorariosMemoria@i+1)^0,7,c
 11655  001BAC  EFE1  F00D         	goto	u3261
 11656  001BB0  5012               	movf	(escribeHorariosMemoria@i+1)^0,w,c
 11657  001BB2  E109               	bnz	u3260
 11658  001BB4  0E18               	movlw	24
 11659  001BB6  5C11               	subwf	escribeHorariosMemoria@i^0,w,c
 11660  001BB8  A0D8               	btfss	status,0,c
 11661  001BBA  EFE1  F00D         	goto	u3261
 11662  001BBE  EFE3  F00D         	goto	u3260
 11663  001BC2                     u3261:
 11664  001BC2  EF4B  F00D         	goto	l4201
 11665  001BC6                     u3260:
 11666  001BC6  0012               	return		;funcret
 11667  001BC8                     __end_of_escribeHorariosMemoria:
 11668                           	opt callstack 0
 11669                           
 11670 ;; *************** function _escribe_eeprom *****************
 11671 ;; Defined at:
 11672 ;;		line 222 in file "main.c"
 11673 ;; Parameters:    Size  Location     Type
 11674 ;;  direccion       2    6[COMRAM] unsigned short 
 11675 ;;  dato            1    8[COMRAM] unsigned char 
 11676 ;; Auto vars:     Size  Location     Type
 11677 ;;		None
 11678 ;; Return value:  Size  Location     Type
 11679 ;;                  1    wreg      void 
 11680 ;; Registers used:
 11681 ;;		wreg, status,2, status,0, cstack
 11682 ;; Tracked objects:
 11683 ;;		On entry : 0/0
 11684 ;;		On exit  : 0/0
 11685 ;;		Unchanged: 0/0
 11686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11687 ;;      Params:         3       0       0       0       0       0       0       0       0
 11688 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11689 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11690 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11691 ;;Total ram usage:        4 bytes
 11692 ;; Hardware stack levels used:    1
 11693 ;; Hardware stack levels required when called:    3
 11694 ;; This function calls:
 11695 ;;		_i2c_detener
 11696 ;;		_i2c_envia_dato
 11697 ;;		_i2c_inicia_com
 11698 ;; This function is called by:
 11699 ;;		_escribeHorariosMemoria
 11700 ;; This function uses a non-reentrant model
 11701 ;;
 11702                           
 11703                           	psect	text57
 11704  003142                     __ptext57:
 11705                           	opt callstack 0
 11706  003142                     _escribe_eeprom:
 11707                           	opt callstack 24
 11708  003142                     
 11709                           ;main.c: 223:     i2c_inicia_com();
 11710  003142  EC7E  F019         	call	_i2c_inicia_com	;wreg free
 11711                           
 11712                           ;main.c: 224:     i2c_envia_dato(0xAE);
 11713  003146  0EAE               	movlw	174
 11714  003148  EC64  F019         	call	_i2c_envia_dato
 11715                           
 11716                           ;main.c: 225:     i2c_envia_dato(direccion >> 8);
 11717  00314C  5008               	movf	(escribe_eeprom@direccion+1)^0,w,c
 11718  00314E  EC64  F019         	call	_i2c_envia_dato
 11719                           
 11720                           ;main.c: 227:     i2c_envia_dato(direccion);
 11721  003152  5007               	movf	escribe_eeprom@direccion^0,w,c
 11722  003154  EC64  F019         	call	_i2c_envia_dato
 11723                           
 11724                           ;main.c: 229:     i2c_envia_dato(dato);
 11725  003158  5009               	movf	escribe_eeprom@dato^0,w,c
 11726  00315A  EC64  F019         	call	_i2c_envia_dato
 11727                           
 11728                           ;main.c: 230:     i2c_detener();
 11729  00315E  EC82  F019         	call	_i2c_detener	;wreg free
 11730  003162                     
 11731                           ;main.c: 231:     _delay((unsigned long)((10)*(4000000/4000.0)));
 11732  003162  0E0D               	movlw	13
 11733  003164  6E0A               	movwf	??_escribe_eeprom^0,c
 11734  003166  0EFC               	movlw	252
 11735  003168                     u3937:
 11736  003168  2EE8               	decfsz	wreg,f,c
 11737  00316A  D7FE               	bra	u3937
 11738  00316C  2E0A               	decfsz	??_escribe_eeprom^0,f,c
 11739  00316E  D7FC               	bra	u3937
 11740  003170  0012               	return		;funcret
 11741  003172                     __end_of_escribe_eeprom:
 11742                           	opt callstack 0
 11743                           
 11744 ;; *************** function _leeHorariosMemoria *****************
 11745 ;; Defined at:
 11746 ;;		line 266 in file "main.c"
 11747 ;; Parameters:    Size  Location     Type
 11748 ;;		None
 11749 ;; Auto vars:     Size  Location     Type
 11750 ;;  j               2    8[COMRAM] int 
 11751 ;;  i               2   12[COMRAM] int 
 11752 ;;  contMemoria     2   10[COMRAM] int 
 11753 ;; Return value:  Size  Location     Type
 11754 ;;                  1    wreg      void 
 11755 ;; Registers used:
 11756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11757 ;; Tracked objects:
 11758 ;;		On entry : 0/0
 11759 ;;		On exit  : 0/0
 11760 ;;		Unchanged: 0/0
 11761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11762 ;;      Params:         0       0       0       0       0       0       0       0       0
 11763 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11764 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11765 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11766 ;;Total ram usage:        8 bytes
 11767 ;; Hardware stack levels used:    1
 11768 ;; Hardware stack levels required when called:    4
 11769 ;; This function calls:
 11770 ;;		___wmul
 11771 ;;		_leer_eeprom
 11772 ;; This function is called by:
 11773 ;;		_main
 11774 ;; This function uses a non-reentrant model
 11775 ;;
 11776                           
 11777                           	psect	text58
 11778  001BC8                     __ptext58:
 11779                           	opt callstack 0
 11780  001BC8                     _leeHorariosMemoria:
 11781                           	opt callstack 26
 11782  001BC8                     
 11783                           ;main.c: 268:     int contMemoria = 0;
 11784  001BC8  0E00               	movlw	0
 11785  001BCA  6E0C               	movwf	(leeHorariosMemoria@contMemoria+1)^0,c
 11786  001BCC  0E00               	movlw	0
 11787  001BCE  6E0B               	movwf	leeHorariosMemoria@contMemoria^0,c
 11788                           
 11789                           ;main.c: 270:     for (int i = 0; i < 24; i++) {
 11790  001BD0  0E00               	movlw	0
 11791  001BD2  6E0E               	movwf	(leeHorariosMemoria@i+1)^0,c
 11792  001BD4  0E00               	movlw	0
 11793  001BD6  6E0D               	movwf	leeHorariosMemoria@i^0,c
 11794  001BD8                     l4715:
 11795                           
 11796                           ;main.c: 271:         horarios[i].hora = leer_eeprom(contMemoria++);
 11797  001BD8  C00D  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
 11798  001BDC  C00E  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
 11799  001BE0  0E00               	movlw	0
 11800  001BE2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11801  001BE4  0E0C               	movlw	12
 11802  001BE6  6E03               	movwf	___wmul@multiplicand^0,c
 11803  001BE8  ECF7  F018         	call	___wmul	;wreg free
 11804  001BEC  0E32               	movlw	low _horarios
 11805  001BEE  2401               	addwf	?___wmul^0,w,c
 11806  001BF0  6ED9               	movwf	fsr2l,c
 11807  001BF2  0E01               	movlw	high _horarios
 11808  001BF4  2002               	addwfc	(?___wmul+1)^0,w,c
 11809  001BF6  6EDA               	movwf	fsr2h,c
 11810  001BF8  C00B  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
 11811  001BFC  C00C  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
 11812  001C00  EC19  F018         	call	_leer_eeprom	;wreg free
 11813  001C04  6EDF               	movwf	indf2,c
 11814  001C06  4A0B               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
 11815  001C08  2A0C               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
 11816  001C0A                     
 11817                           ;main.c: 273:         for (int j = 0; j < 7; j++) {
 11818  001C0A  0E00               	movlw	0
 11819  001C0C  6E0A               	movwf	(leeHorariosMemoria@j+1)^0,c
 11820  001C0E  0E00               	movlw	0
 11821  001C10  6E09               	movwf	leeHorariosMemoria@j^0,c
 11822  001C12                     l4725:
 11823                           
 11824                           ;main.c: 274:             horarios[i].dias[j] = leer_eeprom(contMemoria++);
 11825  001C12  C00D  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
 11826  001C16  C00E  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
 11827  001C1A  0E00               	movlw	0
 11828  001C1C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11829  001C1E  0E0C               	movlw	12
 11830  001C20  6E03               	movwf	___wmul@multiplicand^0,c
 11831  001C22  ECF7  F018         	call	___wmul	;wreg free
 11832  001C26  0E32               	movlw	low _horarios
 11833  001C28  6E07               	movwf	??_leeHorariosMemoria^0,c
 11834  001C2A  0E01               	movlw	high _horarios
 11835  001C2C  6E08               	movwf	(??_leeHorariosMemoria+1)^0,c
 11836  001C2E  0E01               	movlw	1
 11837  001C30  2607               	addwf	??_leeHorariosMemoria^0,f,c
 11838  001C32  0E00               	movlw	0
 11839  001C34  2208               	addwfc	(??_leeHorariosMemoria+1)^0,f,c
 11840  001C36  5001               	movf	?___wmul^0,w,c
 11841  001C38  2607               	addwf	??_leeHorariosMemoria^0,f,c
 11842  001C3A  5002               	movf	(?___wmul+1)^0,w,c
 11843  001C3C  2208               	addwfc	(??_leeHorariosMemoria+1)^0,f,c
 11844  001C3E  5009               	movf	leeHorariosMemoria@j^0,w,c
 11845  001C40  2407               	addwf	??_leeHorariosMemoria^0,w,c
 11846  001C42  6ED9               	movwf	fsr2l,c
 11847  001C44  500A               	movf	(leeHorariosMemoria@j+1)^0,w,c
 11848  001C46  2008               	addwfc	(??_leeHorariosMemoria+1)^0,w,c
 11849  001C48  6EDA               	movwf	fsr2h,c
 11850  001C4A  C00B  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
 11851  001C4E  C00C  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
 11852  001C52  EC19  F018         	call	_leer_eeprom	;wreg free
 11853  001C56  6EDF               	movwf	indf2,c
 11854  001C58  4A0B               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
 11855  001C5A  2A0C               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
 11856  001C5C                     
 11857                           ;main.c: 275:         }
 11858  001C5C  4A09               	infsnz	leeHorariosMemoria@j^0,f,c
 11859  001C5E  2A0A               	incf	(leeHorariosMemoria@j+1)^0,f,c
 11860  001C60  BE0A               	btfsc	(leeHorariosMemoria@j+1)^0,7,c
 11861  001C62  EF3C  F00E         	goto	u3651
 11862  001C66  500A               	movf	(leeHorariosMemoria@j+1)^0,w,c
 11863  001C68  E109               	bnz	u3650
 11864  001C6A  0E07               	movlw	7
 11865  001C6C  5C09               	subwf	leeHorariosMemoria@j^0,w,c
 11866  001C6E  A0D8               	btfss	status,0,c
 11867  001C70  EF3C  F00E         	goto	u3651
 11868  001C74  EF3E  F00E         	goto	u3650
 11869  001C78                     u3651:
 11870  001C78  EF09  F00E         	goto	l4725
 11871  001C7C                     u3650:
 11872  001C7C                     
 11873                           ;main.c: 277:         horarios[i].regar = leer_eeprom(contMemoria++);
 11874  001C7C  C00D  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
 11875  001C80  C00E  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
 11876  001C84  0E00               	movlw	0
 11877  001C86  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11878  001C88  0E0C               	movlw	12
 11879  001C8A  6E03               	movwf	___wmul@multiplicand^0,c
 11880  001C8C  ECF7  F018         	call	___wmul	;wreg free
 11881  001C90  0E3B               	movlw	low (_horarios+9)
 11882  001C92  2401               	addwf	?___wmul^0,w,c
 11883  001C94  6ED9               	movwf	fsr2l,c
 11884  001C96  0E01               	movlw	high (_horarios+9)
 11885  001C98  2002               	addwfc	(?___wmul+1)^0,w,c
 11886  001C9A  6EDA               	movwf	fsr2h,c
 11887  001C9C  C00B  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
 11888  001CA0  C00C  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
 11889  001CA4  EC19  F018         	call	_leer_eeprom	;wreg free
 11890  001CA8  6EDF               	movwf	indf2,c
 11891  001CAA  4A0B               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
 11892  001CAC  2A0C               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
 11893  001CAE                     
 11894                           ;main.c: 278:         horarios[i].tiempoRegar = leer_eeprom(contMemoria++);
 11895  001CAE  C00D  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
 11896  001CB2  C00E  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
 11897  001CB6  0E00               	movlw	0
 11898  001CB8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11899  001CBA  0E0C               	movlw	12
 11900  001CBC  6E03               	movwf	___wmul@multiplicand^0,c
 11901  001CBE  ECF7  F018         	call	___wmul	;wreg free
 11902  001CC2  0E3D               	movlw	low (_horarios+11)
 11903  001CC4  2401               	addwf	?___wmul^0,w,c
 11904  001CC6  6ED9               	movwf	fsr2l,c
 11905  001CC8  0E01               	movlw	high (_horarios+11)
 11906  001CCA  2002               	addwfc	(?___wmul+1)^0,w,c
 11907  001CCC  6EDA               	movwf	fsr2h,c
 11908  001CCE  C00B  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
 11909  001CD2  C00C  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
 11910  001CD6  EC19  F018         	call	_leer_eeprom	;wreg free
 11911  001CDA  6EDF               	movwf	indf2,c
 11912  001CDC  4A0B               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
 11913  001CDE  2A0C               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
 11914                           
 11915                           ;main.c: 279:     }
 11916  001CE0  4A0D               	infsnz	leeHorariosMemoria@i^0,f,c
 11917  001CE2  2A0E               	incf	(leeHorariosMemoria@i+1)^0,f,c
 11918  001CE4  BE0E               	btfsc	(leeHorariosMemoria@i+1)^0,7,c
 11919  001CE6  EF7E  F00E         	goto	u3661
 11920  001CEA  500E               	movf	(leeHorariosMemoria@i+1)^0,w,c
 11921  001CEC  E109               	bnz	u3660
 11922  001CEE  0E18               	movlw	24
 11923  001CF0  5C0D               	subwf	leeHorariosMemoria@i^0,w,c
 11924  001CF2  A0D8               	btfss	status,0,c
 11925  001CF4  EF7E  F00E         	goto	u3661
 11926  001CF8  EF80  F00E         	goto	u3660
 11927  001CFC                     u3661:
 11928  001CFC  EFEC  F00D         	goto	l4715
 11929  001D00                     u3660:
 11930  001D00  0012               	return		;funcret
 11931  001D02                     __end_of_leeHorariosMemoria:
 11932                           	opt callstack 0
 11933                           
 11934 ;; *************** function _leer_eeprom *****************
 11935 ;; Defined at:
 11936 ;;		line 234 in file "main.c"
 11937 ;; Parameters:    Size  Location     Type
 11938 ;;  direccion       2    2[COMRAM] unsigned short 
 11939 ;; Auto vars:     Size  Location     Type
 11940 ;;  dato            1    5[COMRAM] unsigned char 
 11941 ;; Return value:  Size  Location     Type
 11942 ;;                  1    wreg      unsigned char 
 11943 ;; Registers used:
 11944 ;;		wreg, status,2, status,0, cstack
 11945 ;; Tracked objects:
 11946 ;;		On entry : 0/0
 11947 ;;		On exit  : 0/0
 11948 ;;		Unchanged: 0/0
 11949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11950 ;;      Params:         2       0       0       0       0       0       0       0       0
 11951 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11952 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11953 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11954 ;;Total ram usage:        4 bytes
 11955 ;; Hardware stack levels used:    1
 11956 ;; Hardware stack levels required when called:    3
 11957 ;; This function calls:
 11958 ;;		_i2c_detener
 11959 ;;		_i2c_envia_dato
 11960 ;;		_i2c_inicia_com
 11961 ;;		_i2c_recibe_dato
 11962 ;;		_i2c_reinicia_com
 11963 ;; This function is called by:
 11964 ;;		_leeHorariosMemoria
 11965 ;; This function uses a non-reentrant model
 11966 ;;
 11967                           
 11968                           	psect	text59
 11969  003032                     __ptext59:
 11970                           	opt callstack 0
 11971  003032                     _leer_eeprom:
 11972                           	opt callstack 26
 11973  003032                     
 11974                           ;main.c: 236:     unsigned char dato;;main.c: 238:     i2c_inicia_com();
 11975  003032  EC7E  F019         	call	_i2c_inicia_com	;wreg free
 11976                           
 11977                           ;main.c: 239:     i2c_envia_dato(0xAE);
 11978  003036  0EAE               	movlw	174
 11979  003038  EC64  F019         	call	_i2c_envia_dato
 11980                           
 11981                           ;main.c: 240:     i2c_envia_dato(direccion >> 8);
 11982  00303C  5004               	movf	(leer_eeprom@direccion+1)^0,w,c
 11983  00303E  EC64  F019         	call	_i2c_envia_dato
 11984                           
 11985                           ;main.c: 241:     i2c_envia_dato(direccion);
 11986  003042  5003               	movf	leer_eeprom@direccion^0,w,c
 11987  003044  EC64  F019         	call	_i2c_envia_dato
 11988                           
 11989                           ;main.c: 242:     i2c_reinicia_com();
 11990  003048  EC7A  F019         	call	_i2c_reinicia_com	;wreg free
 11991                           
 11992                           ;main.c: 243:     i2c_envia_dato(0xAF);
 11993  00304C  0EAF               	movlw	175
 11994  00304E  EC64  F019         	call	_i2c_envia_dato
 11995                           
 11996                           ;main.c: 244:     dato = i2c_recibe_dato();
 11997  003052  EC39  F019         	call	_i2c_recibe_dato	;wreg free
 11998  003056  6E06               	movwf	leer_eeprom@dato^0,c
 11999                           
 12000                           ;main.c: 245:     i2c_detener();
 12001  003058  EC82  F019         	call	_i2c_detener	;wreg free
 12002  00305C                     
 12003                           ;main.c: 246:     _delay((unsigned long)((10)*(4000000/4000.0)));
 12004  00305C  0E0D               	movlw	13
 12005  00305E  6E05               	movwf	??_leer_eeprom^0,c
 12006  003060  0EFC               	movlw	252
 12007  003062                     u3947:
 12008  003062  2EE8               	decfsz	wreg,f,c
 12009  003064  D7FE               	bra	u3947
 12010  003066  2E05               	decfsz	??_leer_eeprom^0,f,c
 12011  003068  D7FC               	bra	u3947
 12012  00306A                     
 12013                           ;main.c: 248:     return dato;
 12014  00306A  5006               	movf	leer_eeprom@dato^0,w,c
 12015  00306C  0012               	return		;funcret
 12016  00306E                     __end_of_leer_eeprom:
 12017                           	opt callstack 0
 12018                           
 12019 ;; *************** function _i2c_reinicia_com *****************
 12020 ;; Defined at:
 12021 ;;		line 37 in file "./I2C.h"
 12022 ;; Parameters:    Size  Location     Type
 12023 ;;		None
 12024 ;; Auto vars:     Size  Location     Type
 12025 ;;		None
 12026 ;; Return value:  Size  Location     Type
 12027 ;;                  1    wreg      void 
 12028 ;; Registers used:
 12029 ;;		wreg, status,2, status,0, cstack
 12030 ;; Tracked objects:
 12031 ;;		On entry : 0/0
 12032 ;;		On exit  : 0/0
 12033 ;;		Unchanged: 0/0
 12034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12035 ;;      Params:         0       0       0       0       0       0       0       0       0
 12036 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12037 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12038 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12039 ;;Total ram usage:        0 bytes
 12040 ;; Hardware stack levels used:    1
 12041 ;; Hardware stack levels required when called:    2
 12042 ;; This function calls:
 12043 ;;		_i2c_espera
 12044 ;; This function is called by:
 12045 ;;		_leer_rtc
 12046 ;;		_leer_eeprom
 12047 ;; This function uses a non-reentrant model
 12048 ;;
 12049                           
 12050                           	psect	text60
 12051  0032F4                     __ptext60:
 12052                           	opt callstack 0
 12053  0032F4                     _i2c_reinicia_com:
 12054                           	opt callstack 25
 12055  0032F4                     
 12056                           ;./I2C.h: 38:     i2c_espera();
 12057  0032F4  ECE4  F018         	call	_i2c_espera	;wreg free
 12058  0032F8                     
 12059                           ;./I2C.h: 39:     SSPCON2bits.RSEN = 1;
 12060  0032F8  82C5               	bsf	197,1,c	;volatile
 12061  0032FA  0012               	return		;funcret
 12062  0032FC                     __end_of_i2c_reinicia_com:
 12063                           	opt callstack 0
 12064                           
 12065 ;; *************** function _i2c_recibe_dato *****************
 12066 ;; Defined at:
 12067 ;;		line 68 in file "./I2C.h"
 12068 ;; Parameters:    Size  Location     Type
 12069 ;;		None
 12070 ;; Auto vars:     Size  Location     Type
 12071 ;;  datoleido       1    1[COMRAM] unsigned char 
 12072 ;; Return value:  Size  Location     Type
 12073 ;;                  1    wreg      unsigned char 
 12074 ;; Registers used:
 12075 ;;		wreg, status,2, status,0, cstack
 12076 ;; Tracked objects:
 12077 ;;		On entry : 0/0
 12078 ;;		On exit  : 0/0
 12079 ;;		Unchanged: 0/0
 12080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12081 ;;      Params:         0       0       0       0       0       0       0       0       0
 12082 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12083 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12084 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12085 ;;Total ram usage:        1 bytes
 12086 ;; Hardware stack levels used:    1
 12087 ;; Hardware stack levels required when called:    2
 12088 ;; This function calls:
 12089 ;;		_i2c_espera
 12090 ;; This function is called by:
 12091 ;;		_leer_rtc
 12092 ;;		_leer_eeprom
 12093 ;; This function uses a non-reentrant model
 12094 ;;
 12095                           
 12096                           	psect	text61
 12097  003272                     __ptext61:
 12098                           	opt callstack 0
 12099  003272                     _i2c_recibe_dato:
 12100                           	opt callstack 25
 12101  003272                     
 12102                           ;./I2C.h: 70:     unsigned char datoleido;;./I2C.h: 73:     i2c_espera();
 12103  003272  ECE4  F018         	call	_i2c_espera	;wreg free
 12104  003276                     
 12105                           ;./I2C.h: 74:     SSPCON2bits.RCEN = 1;
 12106  003276  86C5               	bsf	197,3,c	;volatile
 12107                           
 12108                           ;./I2C.h: 76:     i2c_espera();
 12109  003278  ECE4  F018         	call	_i2c_espera	;wreg free
 12110  00327C                     
 12111                           ;./I2C.h: 77:     datoleido = SSPBUF;
 12112  00327C  CFC9 F002          	movff	4041,i2c_recibe_dato@datoleido	;volatile
 12113                           
 12114                           ;./I2C.h: 80:     i2c_espera();
 12115  003280  ECE4  F018         	call	_i2c_espera	;wreg free
 12116  003284                     
 12117                           ;./I2C.h: 82:     SSPCON2bits.ACKDT = 1;
 12118  003284  8AC5               	bsf	197,5,c	;volatile
 12119  003286                     
 12120                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
 12121  003286  88C5               	bsf	197,4,c	;volatile
 12122  003288                     
 12123                           ;./I2C.h: 91:     return datoleido;
 12124  003288  5002               	movf	i2c_recibe_dato@datoleido^0,w,c
 12125  00328A  0012               	return		;funcret
 12126  00328C                     __end_of_i2c_recibe_dato:
 12127                           	opt callstack 0
 12128                           
 12129 ;; *************** function _i2c_inicia_com *****************
 12130 ;; Defined at:
 12131 ;;		line 28 in file "./I2C.h"
 12132 ;; Parameters:    Size  Location     Type
 12133 ;;		None
 12134 ;; Auto vars:     Size  Location     Type
 12135 ;;		None
 12136 ;; Return value:  Size  Location     Type
 12137 ;;                  1    wreg      void 
 12138 ;; Registers used:
 12139 ;;		wreg, status,2, status,0, cstack
 12140 ;; Tracked objects:
 12141 ;;		On entry : 0/0
 12142 ;;		On exit  : 0/0
 12143 ;;		Unchanged: 0/0
 12144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12145 ;;      Params:         0       0       0       0       0       0       0       0       0
 12146 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12147 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12148 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12149 ;;Total ram usage:        0 bytes
 12150 ;; Hardware stack levels used:    1
 12151 ;; Hardware stack levels required when called:    2
 12152 ;; This function calls:
 12153 ;;		_i2c_espera
 12154 ;; This function is called by:
 12155 ;;		_escribe_rtc
 12156 ;;		_leer_rtc
 12157 ;;		_escribe_eeprom
 12158 ;;		_leer_eeprom
 12159 ;; This function uses a non-reentrant model
 12160 ;;
 12161                           
 12162                           	psect	text62
 12163  0032FC                     __ptext62:
 12164                           	opt callstack 0
 12165  0032FC                     _i2c_inicia_com:
 12166                           	opt callstack 25
 12167  0032FC                     
 12168                           ;./I2C.h: 29:     i2c_espera();
 12169  0032FC  ECE4  F018         	call	_i2c_espera	;wreg free
 12170  003300                     
 12171                           ;./I2C.h: 30:     SSPCON2bits.SEN = 1;
 12172  003300  80C5               	bsf	197,0,c	;volatile
 12173  003302  0012               	return		;funcret
 12174  003304                     __end_of_i2c_inicia_com:
 12175                           	opt callstack 0
 12176                           
 12177 ;; *************** function _i2c_envia_dato *****************
 12178 ;; Defined at:
 12179 ;;		line 57 in file "./I2C.h"
 12180 ;; Parameters:    Size  Location     Type
 12181 ;;  dato            1    wreg     unsigned char 
 12182 ;; Auto vars:     Size  Location     Type
 12183 ;;  dato            1    1[COMRAM] unsigned char 
 12184 ;; Return value:  Size  Location     Type
 12185 ;;                  1    wreg      unsigned char 
 12186 ;; Registers used:
 12187 ;;		wreg, status,2, status,0, cstack
 12188 ;; Tracked objects:
 12189 ;;		On entry : 0/0
 12190 ;;		On exit  : 0/0
 12191 ;;		Unchanged: 0/0
 12192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12193 ;;      Params:         0       0       0       0       0       0       0       0       0
 12194 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12195 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12196 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12197 ;;Total ram usage:        1 bytes
 12198 ;; Hardware stack levels used:    1
 12199 ;; Hardware stack levels required when called:    2
 12200 ;; This function calls:
 12201 ;;		_i2c_espera
 12202 ;; This function is called by:
 12203 ;;		_escribe_rtc
 12204 ;;		_leer_rtc
 12205 ;;		_escribe_eeprom
 12206 ;;		_leer_eeprom
 12207 ;; This function uses a non-reentrant model
 12208 ;;
 12209                           
 12210                           	psect	text63
 12211  0032C8                     __ptext63:
 12212                           	opt callstack 0
 12213  0032C8                     _i2c_envia_dato:
 12214                           	opt callstack 25
 12215                           
 12216                           ;incstack = 0
 12217                           ;i2c_envia_dato@dato stored from wreg
 12218  0032C8  6E02               	movwf	i2c_envia_dato@dato^0,c
 12219  0032CA                     
 12220                           ;./I2C.h: 58:     i2c_espera();
 12221  0032CA  ECE4  F018         	call	_i2c_espera	;wreg free
 12222  0032CE                     
 12223                           ;./I2C.h: 59:     SSPBUF = dato;
 12224  0032CE  C002  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
 12225  0032D2  0012               	return		;funcret
 12226  0032D4                     __end_of_i2c_envia_dato:
 12227                           	opt callstack 0
 12228                           
 12229 ;; *************** function _i2c_detener *****************
 12230 ;; Defined at:
 12231 ;;		line 46 in file "./I2C.h"
 12232 ;; Parameters:    Size  Location     Type
 12233 ;;		None
 12234 ;; Auto vars:     Size  Location     Type
 12235 ;;		None
 12236 ;; Return value:  Size  Location     Type
 12237 ;;                  1    wreg      void 
 12238 ;; Registers used:
 12239 ;;		wreg, status,2, status,0, cstack
 12240 ;; Tracked objects:
 12241 ;;		On entry : 0/0
 12242 ;;		On exit  : 0/0
 12243 ;;		Unchanged: 0/0
 12244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12245 ;;      Params:         0       0       0       0       0       0       0       0       0
 12246 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12247 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12248 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12249 ;;Total ram usage:        0 bytes
 12250 ;; Hardware stack levels used:    1
 12251 ;; Hardware stack levels required when called:    2
 12252 ;; This function calls:
 12253 ;;		_i2c_espera
 12254 ;; This function is called by:
 12255 ;;		_escribe_rtc
 12256 ;;		_leer_rtc
 12257 ;;		_escribe_eeprom
 12258 ;;		_leer_eeprom
 12259 ;; This function uses a non-reentrant model
 12260 ;;
 12261                           
 12262                           	psect	text64
 12263  003304                     __ptext64:
 12264                           	opt callstack 0
 12265  003304                     _i2c_detener:
 12266                           	opt callstack 25
 12267  003304                     
 12268                           ;./I2C.h: 47:     i2c_espera();
 12269  003304  ECE4  F018         	call	_i2c_espera	;wreg free
 12270  003308                     
 12271                           ;./I2C.h: 48:     SSPCON2bits.PEN = 1;
 12272  003308  84C5               	bsf	197,2,c	;volatile
 12273  00330A  0012               	return		;funcret
 12274  00330C                     __end_of_i2c_detener:
 12275                           	opt callstack 0
 12276                           
 12277 ;; *************** function _i2c_espera *****************
 12278 ;; Defined at:
 12279 ;;		line 20 in file "./I2C.h"
 12280 ;; Parameters:    Size  Location     Type
 12281 ;;		None
 12282 ;; Auto vars:     Size  Location     Type
 12283 ;;		None
 12284 ;; Return value:  Size  Location     Type
 12285 ;;                  1    wreg      void 
 12286 ;; Registers used:
 12287 ;;		wreg, status,2, status,0
 12288 ;; Tracked objects:
 12289 ;;		On entry : 0/0
 12290 ;;		On exit  : 0/0
 12291 ;;		Unchanged: 0/0
 12292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12293 ;;      Params:         0       0       0       0       0       0       0       0       0
 12294 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12295 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12296 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12297 ;;Total ram usage:        1 bytes
 12298 ;; Hardware stack levels used:    1
 12299 ;; Hardware stack levels required when called:    1
 12300 ;; This function calls:
 12301 ;;		Nothing
 12302 ;; This function is called by:
 12303 ;;		_i2c_inicia_com
 12304 ;;		_i2c_reinicia_com
 12305 ;;		_i2c_detener
 12306 ;;		_i2c_envia_dato
 12307 ;;		_i2c_recibe_dato
 12308 ;; This function uses a non-reentrant model
 12309 ;;
 12310                           
 12311                           	psect	text65
 12312  0031C8                     __ptext65:
 12313                           	opt callstack 0
 12314  0031C8                     _i2c_espera:
 12315                           	opt callstack 25
 12316  0031C8                     l3577:
 12317  0031C8  CFC5 F001          	movff	4037,??_i2c_espera	;volatile
 12318  0031CC  0E1F               	movlw	31
 12319  0031CE  1601               	andwf	??_i2c_espera^0,f,c
 12320  0031D0  A4D8               	btfss	status,2,c
 12321  0031D2  EFED  F018         	goto	u2531
 12322  0031D6  EFEF  F018         	goto	u2530
 12323  0031DA                     u2531:
 12324  0031DA  EFE4  F018         	goto	l3577
 12325  0031DE                     u2530:
 12326  0031DE  B4C7               	btfsc	199,2,c	;volatile
 12327  0031E0  EFF4  F018         	goto	u2541
 12328  0031E4  EFF6  F018         	goto	u2540
 12329  0031E8                     u2541:
 12330  0031E8  EFE4  F018         	goto	l3577
 12331  0031EC                     u2540:
 12332  0031EC  0012               	return		;funcret
 12333  0031EE                     __end_of_i2c_espera:
 12334                           	opt callstack 0
 12335                           
 12336 ;; *************** function _inicializarObjetos *****************
 12337 ;; Defined at:
 12338 ;;		line 162 in file "main.c"
 12339 ;; Parameters:    Size  Location     Type
 12340 ;;		None
 12341 ;; Auto vars:     Size  Location     Type
 12342 ;;  j               2    8[COMRAM] int 
 12343 ;;  i               2   10[COMRAM] int 
 12344 ;;  i               2   12[COMRAM] int 
 12345 ;; Return value:  Size  Location     Type
 12346 ;;                  1    wreg      void 
 12347 ;; Registers used:
 12348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12349 ;; Tracked objects:
 12350 ;;		On entry : 0/0
 12351 ;;		On exit  : 0/0
 12352 ;;		Unchanged: 0/0
 12353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12354 ;;      Params:         0       0       0       0       0       0       0       0       0
 12355 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12356 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12357 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12358 ;;Total ram usage:        8 bytes
 12359 ;; Hardware stack levels used:    1
 12360 ;; Hardware stack levels required when called:    2
 12361 ;; This function calls:
 12362 ;;		___wmul
 12363 ;; This function is called by:
 12364 ;;		_main
 12365 ;; This function uses a non-reentrant model
 12366 ;;
 12367                           
 12368                           	psect	text66
 12369  0017B8                     __ptext66:
 12370                           	opt callstack 0
 12371  0017B8                     _inicializarObjetos:
 12372                           	opt callstack 28
 12373  0017B8                     
 12374                           ;main.c: 164:     for (int i = 0; i < 24; i++) {
 12375  0017B8  0E00               	movlw	0
 12376  0017BA  6E0E               	movwf	(inicializarObjetos@i+1)^0,c
 12377  0017BC  0E00               	movlw	0
 12378  0017BE  6E0D               	movwf	inicializarObjetos@i^0,c
 12379  0017C0                     l4679:
 12380                           
 12381                           ;main.c: 165:         horarios[i].hora = i;
 12382  0017C0  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 12383  0017C4  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 12384  0017C8  0E00               	movlw	0
 12385  0017CA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12386  0017CC  0E0C               	movlw	12
 12387  0017CE  6E03               	movwf	___wmul@multiplicand^0,c
 12388  0017D0  ECF7  F018         	call	___wmul	;wreg free
 12389  0017D4  0E32               	movlw	low _horarios
 12390  0017D6  2401               	addwf	?___wmul^0,w,c
 12391  0017D8  6ED9               	movwf	fsr2l,c
 12392  0017DA  0E01               	movlw	high _horarios
 12393  0017DC  2002               	addwfc	(?___wmul+1)^0,w,c
 12394  0017DE  6EDA               	movwf	fsr2h,c
 12395  0017E0  C00D  FFDF         	movff	inicializarObjetos@i,indf2
 12396                           
 12397                           ;main.c: 166:         horarios[i].regar = 0;
 12398  0017E4  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 12399  0017E8  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 12400  0017EC  0E00               	movlw	0
 12401  0017EE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12402  0017F0  0E0C               	movlw	12
 12403  0017F2  6E03               	movwf	___wmul@multiplicand^0,c
 12404  0017F4  ECF7  F018         	call	___wmul	;wreg free
 12405  0017F8  0E3B               	movlw	low (_horarios+9)
 12406  0017FA  2401               	addwf	?___wmul^0,w,c
 12407  0017FC  6ED9               	movwf	fsr2l,c
 12408  0017FE  0E01               	movlw	high (_horarios+9)
 12409  001800  2002               	addwfc	(?___wmul+1)^0,w,c
 12410  001802  6EDA               	movwf	fsr2h,c
 12411  001804  0E00               	movlw	0
 12412  001806  6EDF               	movwf	indf2,c
 12413                           
 12414                           ;main.c: 167:         horarios[i].regado = 0;
 12415  001808  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 12416  00180C  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 12417  001810  0E00               	movlw	0
 12418  001812  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12419  001814  0E0C               	movlw	12
 12420  001816  6E03               	movwf	___wmul@multiplicand^0,c
 12421  001818  ECF7  F018         	call	___wmul	;wreg free
 12422  00181C  0E3C               	movlw	low (_horarios+10)
 12423  00181E  2401               	addwf	?___wmul^0,w,c
 12424  001820  6ED9               	movwf	fsr2l,c
 12425  001822  0E01               	movlw	high (_horarios+10)
 12426  001824  2002               	addwfc	(?___wmul+1)^0,w,c
 12427  001826  6EDA               	movwf	fsr2h,c
 12428  001828  0E00               	movlw	0
 12429  00182A  6EDF               	movwf	indf2,c
 12430                           
 12431                           ;main.c: 168:         horarios[i].tiempoRegar = 15;
 12432  00182C  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 12433  001830  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 12434  001834  0E00               	movlw	0
 12435  001836  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12436  001838  0E0C               	movlw	12
 12437  00183A  6E03               	movwf	___wmul@multiplicand^0,c
 12438  00183C  ECF7  F018         	call	___wmul	;wreg free
 12439  001840  0E3D               	movlw	low (_horarios+11)
 12440  001842  2401               	addwf	?___wmul^0,w,c
 12441  001844  6ED9               	movwf	fsr2l,c
 12442  001846  0E01               	movlw	high (_horarios+11)
 12443  001848  2002               	addwfc	(?___wmul+1)^0,w,c
 12444  00184A  6EDA               	movwf	fsr2h,c
 12445  00184C  0E0F               	movlw	15
 12446  00184E  6EDF               	movwf	indf2,c
 12447  001850                     
 12448                           ;main.c: 169:     }
 12449  001850  4A0D               	infsnz	inicializarObjetos@i^0,f,c
 12450  001852  2A0E               	incf	(inicializarObjetos@i+1)^0,f,c
 12451  001854  BE0E               	btfsc	(inicializarObjetos@i+1)^0,7,c
 12452  001856  EF36  F00C         	goto	u3621
 12453  00185A  500E               	movf	(inicializarObjetos@i+1)^0,w,c
 12454  00185C  E109               	bnz	u3620
 12455  00185E  0E18               	movlw	24
 12456  001860  5C0D               	subwf	inicializarObjetos@i^0,w,c
 12457  001862  A0D8               	btfss	status,0,c
 12458  001864  EF36  F00C         	goto	u3621
 12459  001868  EF38  F00C         	goto	u3620
 12460  00186C                     u3621:
 12461  00186C  EFE0  F00B         	goto	l4679
 12462  001870                     u3620:
 12463  001870                     
 12464                           ;main.c: 171:     for (int i = 0; i < 24; i++) {
 12465  001870  0E00               	movlw	0
 12466  001872  6E0C               	movwf	(inicializarObjetos@i_809+1)^0,c
 12467  001874  0E00               	movlw	0
 12468  001876  6E0B               	movwf	inicializarObjetos@i_809^0,c
 12469  001878                     l4691:
 12470                           
 12471                           ;main.c: 173:         for (int j = 0; j < 7; j++)
 12472  001878  0E00               	movlw	0
 12473  00187A  6E0A               	movwf	(inicializarObjetos@j+1)^0,c
 12474  00187C  0E00               	movlw	0
 12475  00187E  6E09               	movwf	inicializarObjetos@j^0,c
 12476  001880                     l4697:
 12477                           
 12478                           ;main.c: 174:             horarios[i].dias[j] = 0;
 12479  001880  C00B  F001         	movff	inicializarObjetos@i_809,___wmul@multiplier
 12480  001884  C00C  F002         	movff	inicializarObjetos@i_809+1,___wmul@multiplier+1
 12481  001888  0E00               	movlw	0
 12482  00188A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12483  00188C  0E0C               	movlw	12
 12484  00188E  6E03               	movwf	___wmul@multiplicand^0,c
 12485  001890  ECF7  F018         	call	___wmul	;wreg free
 12486  001894  0E32               	movlw	low _horarios
 12487  001896  6E07               	movwf	??_inicializarObjetos^0,c
 12488  001898  0E01               	movlw	high _horarios
 12489  00189A  6E08               	movwf	(??_inicializarObjetos+1)^0,c
 12490  00189C  0E01               	movlw	1
 12491  00189E  2607               	addwf	??_inicializarObjetos^0,f,c
 12492  0018A0  0E00               	movlw	0
 12493  0018A2  2208               	addwfc	(??_inicializarObjetos+1)^0,f,c
 12494  0018A4  5001               	movf	?___wmul^0,w,c
 12495  0018A6  2607               	addwf	??_inicializarObjetos^0,f,c
 12496  0018A8  5002               	movf	(?___wmul+1)^0,w,c
 12497  0018AA  2208               	addwfc	(??_inicializarObjetos+1)^0,f,c
 12498  0018AC  5009               	movf	inicializarObjetos@j^0,w,c
 12499  0018AE  2407               	addwf	??_inicializarObjetos^0,w,c
 12500  0018B0  6ED9               	movwf	fsr2l,c
 12501  0018B2  500A               	movf	(inicializarObjetos@j+1)^0,w,c
 12502  0018B4  2008               	addwfc	(??_inicializarObjetos+1)^0,w,c
 12503  0018B6  6EDA               	movwf	fsr2h,c
 12504  0018B8  0E00               	movlw	0
 12505  0018BA  6EDF               	movwf	indf2,c
 12506  0018BC  4A09               	infsnz	inicializarObjetos@j^0,f,c
 12507  0018BE  2A0A               	incf	(inicializarObjetos@j+1)^0,f,c
 12508  0018C0  BE0A               	btfsc	(inicializarObjetos@j+1)^0,7,c
 12509  0018C2  EF6C  F00C         	goto	u3631
 12510  0018C6  500A               	movf	(inicializarObjetos@j+1)^0,w,c
 12511  0018C8  E109               	bnz	u3630
 12512  0018CA  0E07               	movlw	7
 12513  0018CC  5C09               	subwf	inicializarObjetos@j^0,w,c
 12514  0018CE  A0D8               	btfss	status,0,c
 12515  0018D0  EF6C  F00C         	goto	u3631
 12516  0018D4  EF6E  F00C         	goto	u3630
 12517  0018D8                     u3631:
 12518  0018D8  EF40  F00C         	goto	l4697
 12519  0018DC                     u3630:
 12520  0018DC                     
 12521                           ;main.c: 176:         horarios[i].dias[7 - 1] = '\0';
 12522  0018DC  C00B  F001         	movff	inicializarObjetos@i_809,___wmul@multiplier
 12523  0018E0  C00C  F002         	movff	inicializarObjetos@i_809+1,___wmul@multiplier+1
 12524  0018E4  0E00               	movlw	0
 12525  0018E6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12526  0018E8  0E0C               	movlw	12
 12527  0018EA  6E03               	movwf	___wmul@multiplicand^0,c
 12528  0018EC  ECF7  F018         	call	___wmul	;wreg free
 12529  0018F0  0E39               	movlw	low (_horarios+7)
 12530  0018F2  2401               	addwf	?___wmul^0,w,c
 12531  0018F4  6ED9               	movwf	fsr2l,c
 12532  0018F6  0E01               	movlw	high (_horarios+7)
 12533  0018F8  2002               	addwfc	(?___wmul+1)^0,w,c
 12534  0018FA  6EDA               	movwf	fsr2h,c
 12535  0018FC  0E00               	movlw	0
 12536  0018FE  6EDF               	movwf	indf2,c
 12537  001900                     
 12538                           ;main.c: 177:     }
 12539  001900  4A0B               	infsnz	inicializarObjetos@i_809^0,f,c
 12540  001902  2A0C               	incf	(inicializarObjetos@i_809+1)^0,f,c
 12541  001904  BE0C               	btfsc	(inicializarObjetos@i_809+1)^0,7,c
 12542  001906  EF8E  F00C         	goto	u3641
 12543  00190A  500C               	movf	(inicializarObjetos@i_809+1)^0,w,c
 12544  00190C  E109               	bnz	u3640
 12545  00190E  0E18               	movlw	24
 12546  001910  5C0B               	subwf	inicializarObjetos@i_809^0,w,c
 12547  001912  A0D8               	btfss	status,0,c
 12548  001914  EF8E  F00C         	goto	u3641
 12549  001918  EF90  F00C         	goto	u3640
 12550  00191C                     u3641:
 12551  00191C  EF3C  F00C         	goto	l4691
 12552  001920                     u3640:
 12553  001920  0012               	return		;funcret
 12554  001922                     __end_of_inicializarObjetos:
 12555                           	opt callstack 0
 12556                           
 12557 ;; *************** function ___wmul *****************
 12558 ;; Defined at:
 12559 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 12560 ;; Parameters:    Size  Location     Type
 12561 ;;  multiplier      2    0[COMRAM] unsigned int 
 12562 ;;  multiplicand    2    2[COMRAM] unsigned int 
 12563 ;; Auto vars:     Size  Location     Type
 12564 ;;  product         2    4[COMRAM] unsigned int 
 12565 ;; Return value:  Size  Location     Type
 12566 ;;                  2    0[COMRAM] unsigned int 
 12567 ;; Registers used:
 12568 ;;		wreg, status,2, status,0, prodl, prodh
 12569 ;; Tracked objects:
 12570 ;;		On entry : 0/0
 12571 ;;		On exit  : 0/0
 12572 ;;		Unchanged: 0/0
 12573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12574 ;;      Params:         4       0       0       0       0       0       0       0       0
 12575 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12576 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12577 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12578 ;;Total ram usage:        6 bytes
 12579 ;; Hardware stack levels used:    1
 12580 ;; Hardware stack levels required when called:    1
 12581 ;; This function calls:
 12582 ;;		Nothing
 12583 ;; This function is called by:
 12584 ;;		_inicializarObjetos
 12585 ;;		_escribeHorariosMemoria
 12586 ;;		_leeHorariosMemoria
 12587 ;;		_dameDatosSistema
 12588 ;;		_atoi
 12589 ;; This function uses a non-reentrant model
 12590 ;;
 12591                           
 12592                           	psect	text67
 12593  0031EE                     __ptext67:
 12594                           	opt callstack 0
 12595  0031EE                     ___wmul:
 12596                           	opt callstack 23
 12597  0031EE  5001               	movf	___wmul@multiplier^0,w,c
 12598  0031F0  0203               	mulwf	___wmul@multiplicand^0,c
 12599  0031F2  CFF3 F005          	movff	prodl,___wmul@product
 12600  0031F6  CFF4 F006          	movff	prodh,___wmul@product+1
 12601  0031FA  5001               	movf	___wmul@multiplier^0,w,c
 12602  0031FC  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 12603  0031FE  50F3               	movf	243,w,c
 12604  003200  2606               	addwf	(___wmul@product+1)^0,f,c
 12605  003202  5002               	movf	(___wmul@multiplier+1)^0,w,c
 12606  003204  0203               	mulwf	___wmul@multiplicand^0,c
 12607  003206  50F3               	movf	243,w,c
 12608  003208  2606               	addwf	(___wmul@product+1)^0,f,c
 12609  00320A  C005  F001         	movff	___wmul@product,?___wmul
 12610  00320E  C006  F002         	movff	___wmul@product+1,?___wmul+1
 12611  003212  0012               	return		;funcret
 12612  003214                     __end_of___wmul:
 12613                           	opt callstack 0
 12614                           
 12615 ;; *************** function _i2c_iniciar *****************
 12616 ;; Defined at:
 12617 ;;		line 4 in file "./I2C.h"
 12618 ;; Parameters:    Size  Location     Type
 12619 ;;		None
 12620 ;; Auto vars:     Size  Location     Type
 12621 ;;		None
 12622 ;; Return value:  Size  Location     Type
 12623 ;;                  1    wreg      void 
 12624 ;; Registers used:
 12625 ;;		wreg, status,2
 12626 ;; Tracked objects:
 12627 ;;		On entry : 0/0
 12628 ;;		On exit  : 0/0
 12629 ;;		Unchanged: 0/0
 12630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12631 ;;      Params:         0       0       0       0       0       0       0       0       0
 12632 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12633 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12634 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12635 ;;Total ram usage:        0 bytes
 12636 ;; Hardware stack levels used:    1
 12637 ;; Hardware stack levels required when called:    1
 12638 ;; This function calls:
 12639 ;;		Nothing
 12640 ;; This function is called by:
 12641 ;;		_main
 12642 ;; This function uses a non-reentrant model
 12643 ;;
 12644                           
 12645                           	psect	text68
 12646  0032A2                     __ptext68:
 12647                           	opt callstack 0
 12648  0032A2                     _i2c_iniciar:
 12649                           	opt callstack 29
 12650  0032A2                     
 12651                           ;./I2C.h: 5:     TRISBbits.RB0 = 1;
 12652  0032A2  8093               	bsf	147,0,c	;volatile
 12653                           
 12654                           ;./I2C.h: 6:     TRISBbits.RB1 = 1;
 12655  0032A4  8293               	bsf	147,1,c	;volatile
 12656  0032A6                     
 12657                           ;./I2C.h: 7:     SSPSTAT = 0b10000000;
 12658  0032A6  0E80               	movlw	128
 12659  0032A8  6EC7               	movwf	199,c	;volatile
 12660                           
 12661                           ;./I2C.h: 8:     SSPCON1 = 0b00101000;
 12662  0032AA  0E28               	movlw	40
 12663  0032AC  6EC6               	movwf	198,c	;volatile
 12664                           
 12665                           ;./I2C.h: 9:     SSPCON2 = 0b00000000;
 12666  0032AE  0E00               	movlw	0
 12667  0032B0  6EC5               	movwf	197,c	;volatile
 12668                           
 12669                           ;./I2C.h: 10:     SSPADD = 9;
 12670  0032B2  0E09               	movlw	9
 12671  0032B4  6EC8               	movwf	200,c	;volatile
 12672  0032B6  0012               	return		;funcret
 12673  0032B8                     __end_of_i2c_iniciar:
 12674                           	opt callstack 0
 12675                           
 12676 ;; *************** function _configurarAdc *****************
 12677 ;; Defined at:
 12678 ;;		line 143 in file "main.c"
 12679 ;; Parameters:    Size  Location     Type
 12680 ;;		None
 12681 ;; Auto vars:     Size  Location     Type
 12682 ;;		None
 12683 ;; Return value:  Size  Location     Type
 12684 ;;                  1    wreg      void 
 12685 ;; Registers used:
 12686 ;;		wreg, status,2
 12687 ;; Tracked objects:
 12688 ;;		On entry : 0/0
 12689 ;;		On exit  : 0/0
 12690 ;;		Unchanged: 0/0
 12691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12692 ;;      Params:         0       0       0       0       0       0       0       0       0
 12693 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12694 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12695 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12696 ;;Total ram usage:        0 bytes
 12697 ;; Hardware stack levels used:    1
 12698 ;; Hardware stack levels required when called:    1
 12699 ;; This function calls:
 12700 ;;		Nothing
 12701 ;; This function is called by:
 12702 ;;		_main
 12703 ;; This function uses a non-reentrant model
 12704 ;;
 12705                           
 12706                           	psect	text69
 12707  0032EA                     __ptext69:
 12708                           	opt callstack 0
 12709  0032EA                     _configurarAdc:
 12710                           	opt callstack 29
 12711  0032EA                     
 12712                           ;main.c: 144:     ADCON1 = 0b00000110;
 12713  0032EA  0E06               	movlw	6
 12714  0032EC  6EC1               	movwf	193,c	;volatile
 12715                           
 12716                           ;main.c: 145:     ADCON2 = 0b10100101;
 12717  0032EE  0EA5               	movlw	165
 12718  0032F0  6EC0               	movwf	192,c	;volatile
 12719  0032F2  0012               	return		;funcret
 12720  0032F4                     __end_of_configurarAdc:
 12721                           	opt callstack 0
 12722                           
 12723 ;; *************** function _UART_init *****************
 12724 ;; Defined at:
 12725 ;;		line 12 in file "./UART.h"
 12726 ;; Parameters:    Size  Location     Type
 12727 ;;  BAUD            4   26[COMRAM] long 
 12728 ;; Auto vars:     Size  Location     Type
 12729 ;;  frecuenciaCr    4    0        long 
 12730 ;; Return value:  Size  Location     Type
 12731 ;;                  1    wreg      void 
 12732 ;; Registers used:
 12733 ;;		wreg, status,2, status,0, cstack
 12734 ;; Tracked objects:
 12735 ;;		On entry : 0/0
 12736 ;;		On exit  : 0/0
 12737 ;;		Unchanged: 0/0
 12738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12739 ;;      Params:         4       0       0       0       0       0       0       0       0
 12740 ;;      Locals:         8       0       0       0       0       0       0       0       0
 12741 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12742 ;;      Totals:        12       0       0       0       0       0       0       0       0
 12743 ;;Total ram usage:       12 bytes
 12744 ;; Hardware stack levels used:    1
 12745 ;; Hardware stack levels required when called:    2
 12746 ;; This function calls:
 12747 ;;		___aldiv
 12748 ;; This function is called by:
 12749 ;;		_main
 12750 ;; This function uses a non-reentrant model
 12751 ;;
 12752                           
 12753                           	psect	text70
 12754  002A2E                     __ptext70:
 12755                           	opt callstack 0
 12756  002A2E                     _UART_init:
 12757                           	opt callstack 28
 12758  002A2E                     
 12759                           ;./UART.h: 14:     TRISCbits.TRISC6 = 0;
 12760  002A2E  9C94               	bcf	148,6,c	;volatile
 12761  002A30                     
 12762                           ;./UART.h: 15:     TRISCbits.TRISC7 = 1;
 12763  002A30  8E94               	bsf	148,7,c	;volatile
 12764  002A32                     
 12765                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 12766  002A32  0E10               	movlw	16
 12767  002A34  6E11               	movwf	___aldiv@divisor^0,c
 12768  002A36  0E00               	movlw	0
 12769  002A38  6E12               	movwf	(___aldiv@divisor+1)^0,c
 12770  002A3A  0E00               	movlw	0
 12771  002A3C  6E13               	movwf	(___aldiv@divisor+2)^0,c
 12772  002A3E  0E00               	movlw	0
 12773  002A40  6E14               	movwf	(___aldiv@divisor+3)^0,c
 12774  002A42  0E00               	movlw	0
 12775  002A44  6E0D               	movwf	___aldiv@dividend^0,c
 12776  002A46  0E09               	movlw	9
 12777  002A48  6E0E               	movwf	(___aldiv@dividend+1)^0,c
 12778  002A4A  0E3D               	movlw	61
 12779  002A4C  6E0F               	movwf	(___aldiv@dividend+2)^0,c
 12780  002A4E  0E00               	movlw	0
 12781  002A50  6E10               	movwf	(___aldiv@dividend+3)^0,c
 12782  002A52  EC1C  F00F         	call	___aldiv	;wreg free
 12783  002A56  C00D  F023         	movff	?___aldiv,_UART_init$1920
 12784  002A5A  C00E  F024         	movff	?___aldiv+1,_UART_init$1920+1
 12785  002A5E  C00F  F025         	movff	?___aldiv+2,_UART_init$1920+2
 12786  002A62  C010  F026         	movff	?___aldiv+3,_UART_init$1920+3
 12787  002A66                     
 12788                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 12789  002A66  C023  F00D         	movff	_UART_init$1920,___aldiv@dividend
 12790  002A6A  C024  F00E         	movff	_UART_init$1920+1,___aldiv@dividend+1
 12791  002A6E  C025  F00F         	movff	_UART_init$1920+2,___aldiv@dividend+2
 12792  002A72  C026  F010         	movff	_UART_init$1920+3,___aldiv@dividend+3
 12793  002A76  C01B  F011         	movff	UART_init@BAUD,___aldiv@divisor
 12794  002A7A  C01C  F012         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 12795  002A7E  C01D  F013         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 12796  002A82  C01E  F014         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 12797  002A86  EC1C  F00F         	call	___aldiv	;wreg free
 12798  002A8A  040D               	decf	?___aldiv^0,w,c
 12799  002A8C  6EAF               	movwf	175,c	;volatile
 12800  002A8E                     
 12801                           ;./UART.h: 21:     TXSTAbits.BRGH = 1;
 12802  002A8E  84AC               	bsf	172,2,c	;volatile
 12803  002A90                     
 12804                           ;./UART.h: 22:     TXSTAbits.SYNC = 0;
 12805  002A90  98AC               	bcf	172,4,c	;volatile
 12806  002A92                     
 12807                           ;./UART.h: 23:     RCSTAbits.SPEN = 1;
 12808  002A92  8EAB               	bsf	171,7,c	;volatile
 12809  002A94                     
 12810                           ;./UART.h: 26:     TXSTAbits.TX9 = 0;
 12811  002A94  9CAC               	bcf	172,6,c	;volatile
 12812  002A96                     
 12813                           ;./UART.h: 27:     TXSTAbits.TXEN = 1;
 12814  002A96  8AAC               	bsf	172,5,c	;volatile
 12815  002A98                     
 12816                           ;./UART.h: 30:     RCSTAbits.RC9 = 0;
 12817  002A98  9CAB               	bcf	171,6,c	;volatile
 12818  002A9A                     
 12819                           ;./UART.h: 31:     RCSTAbits.CREN = 1;
 12820  002A9A  88AB               	bsf	171,4,c	;volatile
 12821  002A9C  0012               	return		;funcret
 12822  002A9E                     __end_of_UART_init:
 12823                           	opt callstack 0
 12824                           
 12825 ;; *************** function ___aldiv *****************
 12826 ;; Defined at:
 12827 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 12828 ;; Parameters:    Size  Location     Type
 12829 ;;  dividend        4   12[COMRAM] long 
 12830 ;;  divisor         4   16[COMRAM] long 
 12831 ;; Auto vars:     Size  Location     Type
 12832 ;;  quotient        4   22[COMRAM] long 
 12833 ;;  sign            1   21[COMRAM] unsigned char 
 12834 ;;  counter         1   20[COMRAM] unsigned char 
 12835 ;; Return value:  Size  Location     Type
 12836 ;;                  4   12[COMRAM] long 
 12837 ;; Registers used:
 12838 ;;		wreg, status,2, status,0
 12839 ;; Tracked objects:
 12840 ;;		On entry : 0/0
 12841 ;;		On exit  : 0/0
 12842 ;;		Unchanged: 0/0
 12843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12844 ;;      Params:         8       0       0       0       0       0       0       0       0
 12845 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12846 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12847 ;;      Totals:        14       0       0       0       0       0       0       0       0
 12848 ;;Total ram usage:       14 bytes
 12849 ;; Hardware stack levels used:    1
 12850 ;; Hardware stack levels required when called:    1
 12851 ;; This function calls:
 12852 ;;		Nothing
 12853 ;; This function is called by:
 12854 ;;		_UART_init
 12855 ;;		_map
 12856 ;; This function uses a non-reentrant model
 12857 ;;
 12858                           
 12859                           	psect	text71
 12860  001E38                     __ptext71:
 12861                           	opt callstack 0
 12862  001E38                     ___aldiv:
 12863                           	opt callstack 26
 12864  001E38  0E00               	movlw	0
 12865  001E3A  6E16               	movwf	___aldiv@sign^0,c
 12866  001E3C  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
 12867  001E3E  EF25  F00F         	goto	u2890
 12868  001E42  EF23  F00F         	goto	u2891
 12869  001E46                     u2891:
 12870  001E46  EF2F  F00F         	goto	l3829
 12871  001E4A                     u2890:
 12872  001E4A  1E14               	comf	(___aldiv@divisor+3)^0,f,c
 12873  001E4C  1E13               	comf	(___aldiv@divisor+2)^0,f,c
 12874  001E4E  1E12               	comf	(___aldiv@divisor+1)^0,f,c
 12875  001E50  6C11               	negf	___aldiv@divisor^0,c
 12876  001E52  0E00               	movlw	0
 12877  001E54  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
 12878  001E56  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
 12879  001E58  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
 12880  001E5A  0E01               	movlw	1
 12881  001E5C  6E16               	movwf	___aldiv@sign^0,c
 12882  001E5E                     l3829:
 12883  001E5E  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
 12884  001E60  EF36  F00F         	goto	u2900
 12885  001E64  EF34  F00F         	goto	u2901
 12886  001E68                     u2901:
 12887  001E68  EF40  F00F         	goto	l3835
 12888  001E6C                     u2900:
 12889  001E6C  1E10               	comf	(___aldiv@dividend+3)^0,f,c
 12890  001E6E  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
 12891  001E70  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
 12892  001E72  6C0D               	negf	___aldiv@dividend^0,c
 12893  001E74  0E00               	movlw	0
 12894  001E76  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
 12895  001E78  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
 12896  001E7A  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
 12897  001E7C  0E01               	movlw	1
 12898  001E7E  1A16               	xorwf	___aldiv@sign^0,f,c
 12899  001E80                     l3835:
 12900  001E80  0E00               	movlw	0
 12901  001E82  6E17               	movwf	___aldiv@quotient^0,c
 12902  001E84  0E00               	movlw	0
 12903  001E86  6E18               	movwf	(___aldiv@quotient+1)^0,c
 12904  001E88  0E00               	movlw	0
 12905  001E8A  6E19               	movwf	(___aldiv@quotient+2)^0,c
 12906  001E8C  0E00               	movlw	0
 12907  001E8E  6E1A               	movwf	(___aldiv@quotient+3)^0,c
 12908  001E90  5011               	movf	___aldiv@divisor^0,w,c
 12909  001E92  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
 12910  001E94  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
 12911  001E96  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
 12912  001E98  B4D8               	btfsc	status,2,c
 12913  001E9A  EF51  F00F         	goto	u2911
 12914  001E9E  EF53  F00F         	goto	u2910
 12915  001EA2                     u2911:
 12916  001EA2  EF89  F00F         	goto	l3857
 12917  001EA6                     u2910:
 12918  001EA6  0E01               	movlw	1
 12919  001EA8  6E15               	movwf	___aldiv@counter^0,c
 12920  001EAA  EF5D  F00F         	goto	l3843
 12921  001EAE                     l3841:
 12922  001EAE  90D8               	bcf	status,0,c
 12923  001EB0  3611               	rlcf	___aldiv@divisor^0,f,c
 12924  001EB2  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
 12925  001EB4  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
 12926  001EB6  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
 12927  001EB8  2A15               	incf	___aldiv@counter^0,f,c
 12928  001EBA                     l3843:
 12929  001EBA  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
 12930  001EBC  EF62  F00F         	goto	u2921
 12931  001EC0  EF64  F00F         	goto	u2920
 12932  001EC4                     u2921:
 12933  001EC4  EF57  F00F         	goto	l3841
 12934  001EC8                     u2920:
 12935  001EC8                     l3845:
 12936  001EC8  90D8               	bcf	status,0,c
 12937  001ECA  3617               	rlcf	___aldiv@quotient^0,f,c
 12938  001ECC  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
 12939  001ECE  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
 12940  001ED0  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
 12941  001ED2  5011               	movf	___aldiv@divisor^0,w,c
 12942  001ED4  5C0D               	subwf	___aldiv@dividend^0,w,c
 12943  001ED6  5012               	movf	(___aldiv@divisor+1)^0,w,c
 12944  001ED8  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
 12945  001EDA  5013               	movf	(___aldiv@divisor+2)^0,w,c
 12946  001EDC  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
 12947  001EDE  5014               	movf	(___aldiv@divisor+3)^0,w,c
 12948  001EE0  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
 12949  001EE2  A0D8               	btfss	status,0,c
 12950  001EE4  EF76  F00F         	goto	u2931
 12951  001EE8  EF78  F00F         	goto	u2930
 12952  001EEC                     u2931:
 12953  001EEC  EF81  F00F         	goto	l3853
 12954  001EF0                     u2930:
 12955  001EF0  5011               	movf	___aldiv@divisor^0,w,c
 12956  001EF2  5E0D               	subwf	___aldiv@dividend^0,f,c
 12957  001EF4  5012               	movf	(___aldiv@divisor+1)^0,w,c
 12958  001EF6  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
 12959  001EF8  5013               	movf	(___aldiv@divisor+2)^0,w,c
 12960  001EFA  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
 12961  001EFC  5014               	movf	(___aldiv@divisor+3)^0,w,c
 12962  001EFE  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
 12963  001F00  8017               	bsf	___aldiv@quotient^0,0,c
 12964  001F02                     l3853:
 12965  001F02  90D8               	bcf	status,0,c
 12966  001F04  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
 12967  001F06  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
 12968  001F08  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
 12969  001F0A  3211               	rrcf	___aldiv@divisor^0,f,c
 12970  001F0C  2E15               	decfsz	___aldiv@counter^0,f,c
 12971  001F0E  EF64  F00F         	goto	l3845
 12972  001F12                     l3857:
 12973  001F12  5016               	movf	___aldiv@sign^0,w,c
 12974  001F14  B4D8               	btfsc	status,2,c
 12975  001F16  EF8F  F00F         	goto	u2941
 12976  001F1A  EF91  F00F         	goto	u2940
 12977  001F1E                     u2941:
 12978  001F1E  EF99  F00F         	goto	l3861
 12979  001F22                     u2940:
 12980  001F22  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
 12981  001F24  1E19               	comf	(___aldiv@quotient+2)^0,f,c
 12982  001F26  1E18               	comf	(___aldiv@quotient+1)^0,f,c
 12983  001F28  6C17               	negf	___aldiv@quotient^0,c
 12984  001F2A  0E00               	movlw	0
 12985  001F2C  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
 12986  001F2E  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
 12987  001F30  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
 12988  001F32                     l3861:
 12989  001F32  C017  F00D         	movff	___aldiv@quotient,?___aldiv
 12990  001F36  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
 12991  001F3A  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
 12992  001F3E  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
 12993  001F42  0012               	return		;funcret
 12994  001F44                     __end_of___aldiv:
 12995                           	opt callstack 0
 12996                           
 12997 ;; *************** function _desbordamiento *****************
 12998 ;; Defined at:
 12999 ;;		line 105 in file "main.c"
 13000 ;; Parameters:    Size  Location     Type
 13001 ;;		None
 13002 ;; Auto vars:     Size  Location     Type
 13003 ;;		None
 13004 ;; Return value:  Size  Location     Type
 13005 ;;                  1    wreg      void 
 13006 ;; Registers used:
 13007 ;;		wreg, status,2, status,0
 13008 ;; Tracked objects:
 13009 ;;		On entry : 0/0
 13010 ;;		On exit  : 0/0
 13011 ;;		Unchanged: 0/0
 13012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13013 ;;      Params:         0       0       0       0       0       0       0       0       0
 13014 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13015 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13016 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13017 ;;Total ram usage:        0 bytes
 13018 ;; Hardware stack levels used:    1
 13019 ;; This function calls:
 13020 ;;		Nothing
 13021 ;; This function is called by:
 13022 ;;		Interrupt level 2
 13023 ;; This function uses a non-reentrant model
 13024 ;;
 13025                           
 13026                           	psect	intcode
 13027  000008                     __pintcode:
 13028                           	opt callstack 0
 13029  000008                     _desbordamiento:
 13030                           	opt callstack 19
 13031                           
 13032                           ;incstack = 0
 13033  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13034  00000A  EDE9  F015         	call	int_func,f	;refresh shadow registers
 13035                           
 13036                           	psect	intcode_body
 13037  002BD2                     __pintcode_body:
 13038                           	opt callstack 19
 13039  002BD2                     int_func:
 13040                           	opt callstack 19
 13041  002BD2  0006               	pop		; remove dummy address from shadow register refresh
 13042  002BD4                     
 13043                           ;main.c: 107:     if (INTCONbits.TMR0IF) {
 13044  002BD4  A4F2               	btfss	242,2,c	;volatile
 13045  002BD6  EFEF  F015         	goto	i2u379_41
 13046  002BDA  EFF1  F015         	goto	i2u379_40
 13047  002BDE                     i2u379_41:
 13048  002BDE  EF0C  F016         	goto	i2l4845
 13049  002BE2                     i2u379_40:
 13050  002BE2                     
 13051                           ;main.c: 109:         if (esperandoDatos) {
 13052  002BE2  0100               	movlb	0	; () banked
 13053  002BE4  5189               	movf	_esperandoDatos& (0+255),w,b
 13054  002BE6  B4D8               	btfsc	status,2,c
 13055  002BE8  EFF8  F015         	goto	i2u380_41
 13056  002BEC  EFFA  F015         	goto	i2u380_40
 13057  002BF0                     i2u380_41:
 13058  002BF0  EF05  F016         	goto	i2l4841
 13059  002BF4                     i2u380_40:
 13060  002BF4                     
 13061                           ; BSR set to: 0
 13062                           ;main.c: 111:             tiempoInactividadTrans++;
 13063  002BF4  2B8C               	incf	_tiempoInactividadTrans& (0+255),f,b
 13064  002BF6                     
 13065                           ; BSR set to: 0
 13066                           ;main.c: 113:             if (tiempoInactividadTrans == 1)
 13067  002BF6  058C               	decf	_tiempoInactividadTrans& (0+255),w,b
 13068  002BF8  A4D8               	btfss	status,2,c
 13069  002BFA  EF01  F016         	goto	i2u381_41
 13070  002BFE  EF03  F016         	goto	i2u381_40
 13071  002C02                     i2u381_41:
 13072  002C02  EF05  F016         	goto	i2l4841
 13073  002C06                     i2u381_40:
 13074  002C06                     
 13075                           ; BSR set to: 0
 13076                           ;main.c: 114:                 esperaDatoConcluida = 1;
 13077  002C06  0E01               	movlw	1
 13078  002C08  6F8A               	movwf	_esperaDatoConcluida& (0+255),b
 13079  002C0A                     i2l4841:
 13080                           
 13081                           ; BSR set to: 0
 13082                           ;main.c: 119:         INTCONbits.TMR0IF = 0;
 13083  002C0A  94F2               	bcf	242,2,c	;volatile
 13084  002C0C                     
 13085                           ; BSR set to: 0
 13086                           ;main.c: 120:         TMR0 = VALOR_TIMER0;
 13087  002C0C  C0FB  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
 13088  002C10  C0FC  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
 13089                           
 13090                           ;main.c: 121:         overflowTimer = 1;
 13091  002C14  0E01               	movlw	1
 13092  002C16  6F82               	movwf	_overflowTimer& (0+255),b
 13093  002C18                     i2l4845:
 13094                           
 13095                           ;main.c: 125:     if (PIR1bits.RCIF) {
 13096  002C18  AA9E               	btfss	158,5,c	;volatile
 13097  002C1A  EF11  F016         	goto	i2u382_41
 13098  002C1E  EF13  F016         	goto	i2u382_40
 13099  002C22                     i2u382_41:
 13100  002C22  EF18  F016         	goto	i2l217
 13101  002C26                     i2u382_40:
 13102  002C26                     
 13103                           ;main.c: 127:         byteUart = RCREG;
 13104  002C26  CFAE F08B          	movff	4014,_byteUart	;volatile
 13105  002C2A                     
 13106                           ;main.c: 128:         datoRecibido = 1;
 13107  002C2A  0E01               	movlw	1
 13108  002C2C  0100               	movlb	0	; () banked
 13109  002C2E  6F83               	movwf	_datoRecibido& (0+255),b
 13110  002C30                     i2l217:
 13111  002C30  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13112  002C32  0011               	retfie		f
 13113  002C34                     __end_of_desbordamiento:
 13114                           	opt callstack 0
 13115                           
 13116                           	psect	rparam
 13117  0000                     
 13118                           	psect	temp
 13119  00005F                     btemp:
 13120                           	opt callstack 0
 13121  00005F                     	ds	1
 13122  0000                     int$flags	set	btemp
 13123  0000                     wtemp8	set	btemp+1
 13124  0000                     ttemp5	set	btemp+1
 13125  0000                     ttemp6	set	btemp+4
 13126  0000                     ttemp7	set	btemp+8
 13127                           tosu	equ	0xFFF
 13128                           tosh	equ	0xFFE
 13129                           tosl	equ	0xFFD
 13130                           stkptr	equ	0xFFC
 13131                           pclatu	equ	0xFFB
 13132                           pclath	equ	0xFFA
 13133                           pcl	equ	0xFF9
 13134                           tblptru	equ	0xFF8
 13135                           tblptrh	equ	0xFF7
 13136                           tblptrl	equ	0xFF6
 13137                           tablat	equ	0xFF5
 13138                           prodh	equ	0xFF4
 13139                           prodl	equ	0xFF3
 13140                           indf0	equ	0xFEF
 13141                           postinc0	equ	0xFEE
 13142                           postdec0	equ	0xFED
 13143                           preinc0	equ	0xFEC
 13144                           plusw0	equ	0xFEB
 13145                           fsr0h	equ	0xFEA
 13146                           fsr0l	equ	0xFE9
 13147                           wreg	equ	0xFE8
 13148                           indf1	equ	0xFE7
 13149                           postinc1	equ	0xFE6
 13150                           postdec1	equ	0xFE5
 13151                           preinc1	equ	0xFE4
 13152                           plusw1	equ	0xFE3
 13153                           fsr1h	equ	0xFE2
 13154                           fsr1l	equ	0xFE1
 13155                           bsr	equ	0xFE0
 13156                           indf2	equ	0xFDF
 13157                           postinc2	equ	0xFDE
 13158                           postdec2	equ	0xFDD
 13159                           preinc2	equ	0xFDC
 13160                           plusw2	equ	0xFDB
 13161                           fsr2h	equ	0xFDA
 13162                           fsr2l	equ	0xFD9
 13163                           status	equ	0xFD8


Data Sizes:
    Strings     1724
    Constant    0
    Data        11
    BSS         415
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     71     159
    BANK1           256      0      50
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    dameDatosSistema$1924	PTR unsigned char [8] size(2) Largest target is 288
		 -> horarios(BIGRAM[288]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), horarios(BIGRAM[288]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), horarios(BIGRAM[288]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_52(CODE[45]), STR_51(CODE[29]), STR_50(CODE[32]), STR_49(CODE[45]), 
		 -> STR_48(CODE[29]), STR_47(CODE[32]), STR_45(CODE[24]), STR_44(CODE[25]), 
		 -> STR_43(CODE[24]), STR_42(CODE[27]), STR_41(CODE[24]), STR_40(CODE[23]), 
		 -> STR_39(CODE[25]), STR_38(CODE[24]), STR_20(CODE[51]), STR_12(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> dameDatosSistema@bufferHorario(BANK0[30]), buffer(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> dameDatosSistema@bufferHorario(BANK0[30]), buffer(BANK1[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1591_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> dameDatosSistema@bufferHorario(BANK0[30]), buffer(BANK1[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> dameDatosSistema@bufferHorario(BANK0[30]), buffer(BANK1[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_52(CODE[45]), STR_51(CODE[29]), STR_50(CODE[32]), STR_49(CODE[45]), 
		 -> STR_48(CODE[29]), STR_47(CODE[32]), STR_45(CODE[24]), STR_44(CODE[25]), 
		 -> STR_43(CODE[24]), STR_42(CODE[27]), STR_41(CODE[24]), STR_40(CODE[23]), 
		 -> STR_39(CODE[25]), STR_38(CODE[24]), STR_20(CODE[51]), STR_12(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_52(CODE[45]), STR_51(CODE[29]), STR_50(CODE[32]), STR_49(CODE[45]), 
		 -> STR_48(CODE[29]), STR_47(CODE[32]), STR_45(CODE[24]), STR_44(CODE[25]), 
		 -> STR_43(CODE[24]), STR_42(CODE[27]), STR_41(CODE[24]), STR_40(CODE[23]), 
		 -> STR_39(CODE[25]), STR_38(CODE[24]), STR_20(CODE[51]), STR_12(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 51
		 -> STR_52(CODE[45]), STR_51(CODE[29]), STR_50(CODE[32]), STR_49(CODE[45]), 
		 -> STR_48(CODE[29]), STR_47(CODE[32]), STR_45(CODE[24]), STR_44(CODE[25]), 
		 -> STR_43(CODE[24]), STR_42(CODE[27]), STR_41(CODE[24]), STR_40(CODE[23]), 
		 -> STR_39(CODE[25]), STR_38(CODE[24]), STR_20(CODE[51]), STR_12(CODE[9]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), horarios(BIGRAM[288]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), horarios(BIGRAM[288]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), horarios(BIGRAM[288]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 72
		 -> STR_60(CODE[58]), STR_59(CODE[57]), STR_58(CODE[57]), STR_57(CODE[20]), 
		 -> STR_56(CODE[18]), STR_55(CODE[11]), STR_54(CODE[9]), STR_53(CODE[17]), 
		 -> STR_46(CODE[25]), dameDatosSistema@bufferHorario(BANK0[30]), STR_37(CODE[26]), STR_36(CODE[38]), 
		 -> STR_35(CODE[36]), STR_34(CODE[28]), STR_33(CODE[13]), STR_32(CODE[42]), 
		 -> STR_31(CODE[3]), STR_30(CODE[14]), STR_29(CODE[26]), STR_28(CODE[23]), 
		 -> STR_27(CODE[34]), STR_26(CODE[32]), STR_25(CODE[49]), STR_24(CODE[37]), 
		 -> STR_23(CODE[27]), STR_22(CODE[37]), STR_21(CODE[32]), STR_19(CODE[38]), 
		 -> STR_18(CODE[37]), STR_17(CODE[72]), STR_16(CODE[51]), STR_15(CODE[23]), 
		 -> STR_14(CODE[26]), STR_13(CODE[26]), buffer(BANK1[50]), STR_11(CODE[37]), 
		 -> STR_10(CODE[59]), STR_9(CODE[59]), STR_8(CODE[51]), STR_7(CODE[25]), 
		 -> STR_6(CODE[37]), STR_5(CODE[31]), STR_4(CODE[43]), STR_3(CODE[16]), 
		 -> STR_2(CODE[36]), STR_1(CODE[65]), 


Critical Paths under _main in COMRAM

    _encenderBombas->_estaSeco
    _estaSeco->_dameTemperaturaHumedad
    _dameHoraActual->_leer_rtc
    _dameDiaActual->_leer_rtc
    _leer_rtc->_i2c_envia_dato
    _leer_rtc->_i2c_recibe_dato
    _sistemaPrincipal->_asignarHorarios
    _sistemaPrincipal->_dameDatosSistema
    _setTiempoRegar->_escribeHorariosMemoria
    _regadoRapido->_getValue
    _mostrarMenu->_UART_printf
    _restablecerDatosSensor->_constructorSensor
    _lecturaAnalogaSensores->_map
    _map->___aldiv
    _dameTemperaturaHumedad->_UART_printf
    _fijaHoraRtc->_setRtc
    _fijaDiaRtc->_setRtc
    _setRtc->_getValue
    _escribe_rtc->_i2c_envia_dato
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _getValue->_UART_printf
    _UART_printf->_UART_write
    _escribeHorariosMemoria->_escribe_eeprom
    _escribe_eeprom->___wmul
    _leeHorariosMemoria->___wmul
    _leeHorariosMemoria->_leer_eeprom
    _leer_eeprom->_i2c_envia_dato
    _leer_eeprom->_i2c_recibe_dato
    _i2c_reinicia_com->_i2c_espera
    _i2c_recibe_dato->_i2c_espera
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera
    _inicializarObjetos->___wmul
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _desbordamiento in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sistemaPrincipal
    _sistemaRegado->_lecturaWifi
    _sistemaPrincipal->_dameDatosSistema
    _mostrarDatosSensoresWIFI->_lecturaWifi
    _lecturaWifi->_sprintf
    _mostrarDatosSensores->_sprintf
    _dameDatosSistema->_sprintf
    _asignarHorarios->_sprintf
    _sprintf->_vfprintf

Critical Paths under _desbordamiento in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _desbordamiento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _desbordamiento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _desbordamiento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _desbordamiento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _desbordamiento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _desbordamiento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _desbordamiento in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  274673
                          _UART_init
                      _configurarAdc
                        _i2c_iniciar
                 _inicializarObjetos
                 _leeHorariosMemoria
                        _mostrarMenu
             _restablecerDatosSensor
                   _sistemaPrincipal
                      _sistemaRegado
 ---------------------------------------------------------------------------------
 (1) _sistemaRegado                                        0     0      0   44123
                      _dameDiaActual
                     _dameHoraActual
                     _encenderBombas
                          _horaRegar
             _lecturaAnalogaSensores
                        _lecturaWifi
                        _mostrarMenu
 ---------------------------------------------------------------------------------
 (2) _horaRegar                                            6     4      2      24
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _encenderBombas                                       5     5      0    5399
                                             14 COMRAM     5     5      0
                           _estaSeco
 ---------------------------------------------------------------------------------
 (3) _estaSeco                                             3     1      2    5124
                                             11 COMRAM     3     1      2
             _dameTemperaturaHumedad
 ---------------------------------------------------------------------------------
 (2) _dameHoraActual                                       0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (2) _dameDiaActual                                        0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (3) _leer_rtc                                             2     2      0      90
                                              2 COMRAM     2     2      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (3) _convertirDato                                        3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _sistemaPrincipal                                     3     3      0  217301
                                             68 BANK0      3     3      0
                        _UART_printf
                    _asignarHorarios
                   _dameDatosSistema
                         _fijaDiaRtc
                        _fijaHoraRtc
               _mostrarDatosSensores
           _mostrarDatosSensoresWIFI
                        _mostrarMenu
                       _regadoRapido
                     _setTiempoRegar
 ---------------------------------------------------------------------------------
 (2) _setTiempoRegar                                       2     2      0   14020
                                             18 COMRAM     2     2      0
                        _UART_printf
             _escribeHorariosMemoria
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _regadoRapido                                         4     4      0    9625
                                             14 COMRAM     4     4      0
                        _UART_printf
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _mostrarMenu                                          0     0      0    4171
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensoresWIFI                             3     3      0   63419
                                             92 COMRAM     1     1      0
                                             32 BANK0      2     2      0
                        _UART_printf
                         _UART_write
             _dameTemperaturaHumedad
                        _lecturaWifi
                      _limpiarBuffer
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaWifi                                          4     4      0   32395
                                             28 BANK0      4     4      0
                        _UART_printf
                          _UART_read
                         _UART_write
                           _getValue
                      _limpiarBuffer
             _restablecerDatosSensor
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _restablecerDatosSensor                               2     2      0     387
                                              4 COMRAM     2     2      0
                  _constructorSensor
 ---------------------------------------------------------------------------------
 (4) _constructorSensor                                    4     0      4     297
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensores                                 3     3      0   32796
                                             92 COMRAM     1     1      0
                                             28 BANK0      2     2      0
                        _UART_printf
                         _UART_write
             _dameTemperaturaHumedad
             _lecturaAnalogaSensores
                      _limpiarBuffer
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaAnalogaSensores                               3     3      0    1772
                                             46 COMRAM     3     3      0
                   _dameHumedadSuelo
                                _map
 ---------------------------------------------------------------------------------
 (3) _map                                                 20     0     20    1660
                                             26 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
                   _dameHumedadSuelo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _dameHumedadSuelo                                     5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _dameTemperaturaHumedad                               8     8      0    4470
                                              3 COMRAM     8     8      0
                     _DHT11_ReadData
                        _DHT11_Start
                        _UART_printf
                     _check_response
 ---------------------------------------------------------------------------------
 (5) _check_response                                       1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fijaHoraRtc                                          0     0      0   11465
                        _UART_printf
                        _escribe_rtc
                             _setRtc
 ---------------------------------------------------------------------------------
 (2) _fijaDiaRtc                                           0     0      0   11019
                        _UART_printf
                             _setRtc
 ---------------------------------------------------------------------------------
 (3) _setRtc                                               4     4      0    6848
                                             14 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                        _escribe_rtc
                           _getValue
 ---------------------------------------------------------------------------------
 (4) _escribe_rtc                                          2     1      1     446
                                              2 COMRAM     2     1      1
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _dameDatosSistema                                    42    42      0   30145
                                             92 COMRAM     2     2      0
                                             28 BANK0     40    40      0
                        _UART_printf
                         _UART_write
                             ___wmul
                      _limpiarBuffer
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _limpiarBuffer                                        2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _asignarHorarios                                      7     7      0   36448
                                             92 COMRAM     2     2      0
                                             28 BANK0      5     5      0
                        _UART_printf
             _escribeHorariosMemoria
                           _getValue
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             22    10     12   22203
                                              6 BANK0     22    10     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   19564
                                             90 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           47    41      6   19174
                                             63 COMRAM    27    21      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5574
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 7     4      3    4145
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3925
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    4376
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _getValue                                            11     9      2    5363
                                              3 COMRAM    11     9      2
                        _UART_printf
                          _UART_read
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2    4171
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _escribeHorariosMemoria                               8     8      0    4374
                                             10 COMRAM     8     8      0
                             ___wmul
                     _escribe_eeprom
 ---------------------------------------------------------------------------------
 (4) _escribe_eeprom                                       4     1      3     696
                                              6 COMRAM     4     1      3
                             ___wmul (ARG)
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (1) _leeHorariosMemoria                                   8     8      0    4094
                                              6 COMRAM     8     8      0
                             ___wmul
                        _leer_eeprom
 ---------------------------------------------------------------------------------
 (2) _leer_eeprom                                          4     2      2     416
                                              2 COMRAM     4     2      2
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_recibe_dato                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializarObjetos                                   8     8      0    3697
                                              6 COMRAM     8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    3383
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     900
                                             26 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     756
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _desbordamiento                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _configurarAdc
   _i2c_iniciar
   _inicializarObjetos
     ___wmul
   _leeHorariosMemoria
     ___wmul
     _leer_eeprom
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
       _i2c_recibe_dato
         _i2c_espera
       _i2c_reinicia_com
         _i2c_espera
   _mostrarMenu
     _UART_printf
       _UART_write
   _restablecerDatosSensor
     _constructorSensor
   _sistemaPrincipal
     _UART_printf
       _UART_write
     _asignarHorarios
       _UART_printf
         _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _dameDatosSistema
       _UART_printf
         _UART_write
       _UART_write
       ___wmul
       _limpiarBuffer
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _fijaDiaRtc
       _UART_printf
         _UART_write
       _setRtc
         ___awdiv
         ___awmod
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
     _fijaHoraRtc
       _UART_printf
         _UART_write
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
       _setRtc
         ___awdiv
         ___awmod
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
     _mostrarDatosSensores
       _UART_printf
         _UART_write
       _UART_write
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaAnalogaSensores
         _dameHumedadSuelo
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
           _dameHumedadSuelo (ARG)
       _limpiarBuffer
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _mostrarDatosSensoresWIFI
       _UART_printf
         _UART_write
       _UART_write
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaWifi
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
         _limpiarBuffer
         _restablecerDatosSensor
           _constructorSensor
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _stoa
                 _fputc
                   _putch
                 _strlen
       _limpiarBuffer
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _mostrarMenu
       _UART_printf
         _UART_write
     _regadoRapido
       _UART_printf
         _UART_write
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
     _setTiempoRegar
       _UART_printf
         _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
   _sistemaRegado
     _dameDiaActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _dameHoraActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _encenderBombas
       _estaSeco
         _dameTemperaturaHumedad
           _DHT11_ReadData
           _DHT11_Start
           _UART_printf
             _UART_write
           _check_response
     _horaRegar
     _lecturaAnalogaSensores
       _dameHumedadSuelo
       _map
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _dameHumedadSuelo (ARG)
     _lecturaWifi
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
       _limpiarBuffer
       _restablecerDatosSensor
         _constructorSensor
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _mostrarMenu
       _UART_printf
         _UART_write

 _desbordamiento (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     120      21       14.1%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      32       7       19.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     47      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12F      20        0.0%
DATA                 0      0     24F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Jun 21 13:32:45 2020

                 __size_of_escribe_eeprom 0030                                        l83 32B6  
                                      l92 3302                                        l95 32FA  
                                      l89 31EC                                        l98 330A  
                            ___awdiv@sign 0006                            ?_configurarAdc 0001  
                     ___wmul@multiplicand 0003                               __CFG_BORV$3 000000  
          __end_of_dameTemperaturaHumedad 2846                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                   regadoRapido@tiempoRegar 0011  
                                     l101 32D2                                       l110 31C6  
                                     l104 328A                                       l113 3232  
                                     l107 3270                                       l220 29BC  
                                     l141 32A0                                       l126 2A9C  
                                     l134 2DF2                                       l135 2DF4  
                                     l311 2B6E                                       l223 32E8  
                                     l231 30DA                                       l160 2CEC  
                                     l152 2C9A                                       l129 2DBC  
                                     l226 32F2                                       l138 3292  
                                     l330 2718                                       l306 0DCE  
                                     l147 2C90                                       l163 3252  
                                     l411 2838                                       l251 32C6  
                                     l412 2840                                       l236 28C8  
                                     l245 1920                                       l325 11AC  
                                     l405 0882                                       l157 2CCA  
                                     l413 2844                                       l333 2F0A  
                                     l341 2EE6                                       l262 3170  
                                     l350 2034                                       l255 3140  
                                     l335 2F18                                       l272 1BC6  
                                     l440 0E52                                       l168 2FB0  
                                     l336 2F2C                                       l424 2124  
                                     l248 319C                                       l265 306C  
                                     l450 0EFE                                       l418 2204  
                                     l259 2A2C                                       l355 2678  
                                     l460 0FF2                                       l524 23DC  
                                     l373 2394                                       l542 0924  
                                     l622 0592                                       l358 2942  
                                     l470 1D84                                       l279 1D00  
                                     l527 241E                                       l471 1D8A  
                                     l536 2DA0                                       l544 092C  
                                     l632 2BC8                                       l472 1D90  
                                     l529 245A                                       l633 2BD0  
                                     l473 1D96                                       l562 0B64  
                                     l474 1D9C                                       l715 1F42  
                                     l571 154E                                       l483 2FF0  
                                     l475 1DA2                                       l636 3212  
                                     l580 15F8                                       l476 1DA8  
                                     l468 1D7E                                       l581 1642  
                                     l389 17B6                                       l750 14C4  
                                     l478 1E36                                       l647 2AF6  
                                     l648 2B06                                       l585 164A  
                                     l569 1546                                       l763 1A84  
                                     l599 010E                                       l880 25CE  
                                     l867 251E                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                              __CFG_BOR$OFF 000000  
                                     _abs 2FF2                                       _pad 2396  
                                     _map 2944                              ___awmod@sign 0006  
                                     prod 000FF3                                       wreg 000FE8  
                __end_of_dameDatosSistema 0884                              __CFG_LVP$OFF 000000  
                       ?_i2c_reinicia_com 0001                              ?_escribe_rtc 0003  
                            __CFG_WDT$OFF 000000                                      ?_abs 0013  
                                    l1311 3028                                      l1314 3030  
                                    l1342 1334                                      l1345 133C  
                                    l1371 22CE                                      l1348 30A4  
                                    l1356 2E98                                      l3301 2400  
                                    l4021 2E08                                      l4101 24F0  
                                    l4015 3142                                      l3303 242E  
                                    l3311 300C                                      l4023 2E10  
                                    l4111 2516                                      l4103 24F2  
                                    l4031 2EEA                                      l4017 3162  
                                    l4201 1A96                                      l3313 306E  
                                    l3305 2442                                      l4025 2E18  
                                    l4105 24F8                                      l4121 253A  
                                    l4041 2F1A                                      l4033 2EF2  
                                    l1386 2E46                                      l4211 1AD2  
                                    l4203 1AC6                                      l3411 2E92  
                                    l3403 2E48                                      l1379 2F70  
                                    l1395 3110                                      l3331 1374  
                                    l3323 133E                                      l4027 2E34  
                                    l4019 2DF6                                      l4107 24FE  
                                    l4131 256E                                      l4123 253E  
                                    l4115 2520                                      l4035 2EF4  
                                    l4051 2EA2                                      l3317 31EE  
                                    l4221 1B6E                                      l4213 1B1A  
                                    l4205 1ACA                                      l3405 2E4C  
                                    l1389 330C                                      l3261 2234  
                                    l3421 2D74                                      l3341 13D0  
                                    l3333 1382                                      l3325 1342  
                                    l3309 2FF2                                      l3501 150E  
                                    l4109 250E                                      l4141 25A8  
                                    l4133 2576                                      l4125 254C  
                                    l4117 2524                                      l4037 2F06  
                                    l4053 2EC8                                      l4045 2E9A  
                                    l4301 32B8                                      l3319 320A  
                                    l4311 305C                                      l4223 1B72  
                                    l4215 1B1E                                      l3407 2E60  
                                    l3263 2252                                      l3255 2206  
                                    l3271 2F3A                                      l3423 2D78  
                                    l3415 2D48                                      l3351 143A  
                                    l3343 13D8                                      l3335 13A2  
                                    l3327 1350                                      l3431 08A4  
                                    l3511 1586                                      l3503 1516  
                                    l4063 2FBA                                      l4071 245C  
                                    l4135 2584                                      l4143 25AE  
                                    l4127 2554                                      l4119 2532  
                                    l4303 3112                                      l4039 2F08  
                                    l4055 2ECC                                      l4231 1F46  
                                    l4151 31A0                                      l4313 306A  
                                    l4225 1BAA                                      l4217 1B22  
                                    l3409 2E8E                                      l3265 2288  
                                    l3257 2218                                      l3273 2F4C  
                                    l3281 30EC                                      l3425 2D7C  
                                    l3417 2D5C                                      l3361 1484  
                                    l3353 145A                                      l3345 13EC  
                                    l3337 13A6                                      l3329 1370  
                                    l3441 0918                                      l3433 08CC  
                                    l3521 15D6                                      l3513 158A  
                                    l3505 1524                                      l3601 0084  
                                    l4401 0FF4                                      l4065 2FCA  
                                    l4057 2FB2                                      l4081 2488  
                                    l4073 2460                                      l4145 25BE  
                                    l4137 259A                                      l4129 2566  
                                    l4305 311E                                      l4241 1F76  
                                    l4233 1F4A                                      l4161 321E  
                                    l4153 31C4                                      l4219 1B3E  
                                    l3259 222A                                      l3275 2F50  
                                    l3283 3104                                      l3291 23BA  
                                    l3419 2D68                                      l3363 14A4  
                                    l3355 145C                                      l3347 13FA  
                                    l3339 13B2                                      l3371 1934  
                                    l3451 0962                                      l3443 0934  
                                    l3435 08EC                                      l3531 1624  
                                    l3523 15DA                                      l3515 15A8  
                                    l4411 104A                                      l4403 100C  
                                    l4067 2FCE                                      l5131 0832  
                                    l4091 24B6                                      l4083 2490  
                                    l4075 246E                                      l4147 25C6  
                                    l4139 25A2                                      l4307 3134  
                                    l4251 1FAA                                      l4235 1F50  
                                    l4227 1F44                                      l4163 3230  
                                    l4171 30AE                                      l4331 0BE0  
                                    l4323 0B76                                      l4309 3032  
                                    l5141 0F38                                      l3541 11E6  
                                    l3533 11AE                                      l3269 2F2E  
                                    l3277 30DC                                      l3293 23C8  
                                    l3357 146E                                      l3349 140C  
                                    l3381 19A4                                      l3373 1954  
                                    l3461 09FE                                      l3453 096A  
                                    l3445 0946                                      l3437 08FC  
                                    l3429 0884                                      l3517 15B4  
                                    l3509 1572                                      l3621 011E  
                                    l3613 009C                                      l3605 008C  
                                    l5133 10F2                                      l4421 107C  
                                    l4413 105A                                      l4405 101C  
                                    l4069 2FEA                                      l4501 05E0  
                                    l4093 24BE                                      l4085 2494  
                                    l4077 2476                                      l4181 29C0  
                                    l4261 2000                                      l4253 1FBA  
                                    l4237 1F5C                                      l4229 1F46  
                                    l4157 3216                                      l4173 30BE  
                                    l5125 0D40                                      l4341 0C1C  
                                    l4325 0BA6                                      l4317 0B66  
                                    l5143 0F9E                                      l3551 123C  
                                    l3543 121C                                      l3535 11C2  
                                    l3279 30E8                                      l3295 23D4  
                                    l3287 2396                                      l3359 1474  
                                    l3391 1A1C                                      l3383 19AC  
                                    l3375 1958                                      l3367 1922  
                                    l3471 0ACE                                      l3455 0970  
                                    l3463 0A62                                      l3447 0954  
                                    l3439 08FE                                      l3527 160C  
                                    l3519 15D2                                      l3631 0196  
                                    l3623 0120                                      l5135 00CE  
                                    l3703 055C                                      l4431 10CE  
                                    l4423 109C                                      l4415 1072  
                                    l4407 102E                                      l4503 0610  
                                    l4511 06F6                                      l4095 24CC  
                                    l4087 249C                                      l4079 247A  
                                    l4191 2A2A                                      l4183 29C8  
                                    l4271 25D0                                      l4263 201A  
                                    l4255 1FCC                                      l4247 1F82  
                                    l4239 1F64                                      l5127 2350  
                                    l4159 3216                                      l4175 30D0  
                                    l4167 30A6                                      l4343 0C4C  
                                    l4335 0BE6                                      l4327 0BA8  
                                    l3721 3304                                      l5137 126A  
                                    l3561 12B6                                      l3553 1244  
                                    l3545 1220                                      l3537 11C6  
                                    l3297 23E8                                      l3289 23A6  
                                    l3393 1A2E                                      l3385 19C0  
                                    l3377 1966                                      l3369 1926  
                                    l3481 0B18                                      l3465 0A7C  
                                    l3473 0ADE                                      l3457 09F2  
                                    l3449 095A                                      l3529 1620  
                                    l3705 0580                                      l3633 01B6  
                                    l3641 021C                                      l3625 0144  
                                    l3617 00A8                                      l3609 0094  
                                    l4433 10D6                                      l4441 1134  
                                    l4425 10A8                                      l4409 103A  
                                    l4521 0768                                      l4513 06FC  
                                    l4505 0694                                      l4097 24D2  
                                    l4089 24AE                                      l4185 29D6  
                                    l4281 265A                                      l4601 21D2  
                                    l3801 32E0                                      l4257 1FE6  
                                    l4249 1F9E                                      l4265 202A  
                                    l5129 1DC2                                      l4177 30D4  
                                    l4169 30AA                                      l4361 0CEE  
                                    l4353 0C88                                      l4337 0C16  
                                    l4329 0BB0                                      l3723 3308  
                                    l4195 1A86                                      l5139 0E80  
                                    l3555 124C                                      l3539 11CA  
                                    l3299 23FC                                      l3387 19CE  
                                    l3395 1A34                                      l3379 1986  
                                    l3483 0B24                                      l3475 0AF0  
                                    l3467 0A9A                                      l3459 09F8  
                                    l3491 14C6                                      l3651 02B6  
                                    l3643 0240                                      l3635 01C4  
                                    l3627 017A                                      l3619 00FC  
                                    l3803 2B70                                      l4443 1138  
                                    l4427 10B8                                      l4451 117C  
                                    l4523 078C                                      l4515 0718  
                                    l4507 06B6                                      l4099 24E8  
                                    l4187 29E8                                      l3811 2A9E  
                                    l4283 265E                                      l4603 21DE  
                                    l4267 202E                                      l4259 1FFC  
                                    l4611 1D0E                                      l4355 0CB8  
                                    l4347 0C52                                      l4291 288C  
                                    l3821 1E38                                      l4701 18C0  
                                    l3725 32CA                                      l3717 32FC  
                                    l3581 328E                                      l3741 2DEE  
                                    l3733 2DA2                                      l3565 12F4  
                                    l3557 1280                                      l3549 1226  
                                    l3397 1A44                                      l3389 19FC  
                                    l3485 0B2C                                      l3477 0B00  
                                    l3469 0AB4                                      l3493 14D8  
                                    l3653 02D6                                      l3645 024A  
                                    l3661 033C                                      l3629 0188  
                                    l3805 2B78                                      l4453 118C  
                                    l4445 1154                                      l4437 10DE  
                                    l4525 07B0                                      l4517 0720  
                                    l4533 081C                                      l4509 06EA  
                                    l4189 2A26                                      l3901 27F2  
                                    l3813 2AAE                                      l4277 25D8  
                                    l4605 21E4                                      l4269 2032  
                                    l4621 1D58                                      l4613 1D20  
                                    l4461 267A                                      l4381 0DB4  
                                    l4365 0CF4                                      l4349 0C82  
                                    l4373 0D2A                                      l4293 28BE  
                                    l4285 2846                                      ?_map 001B  
                                    ?_pad 0011                                      l3831 1E6C  
                                    l3823 1E3C                                      l4703 18DC  
                                    l3575 31C8                                      l3727 32CE  
                                    l3719 3300                                      l3751 2C60  
                                    l3735 2DCA                                      l3911 0DF2  
                                    l3567 1306                                      l3399 1A64  
                                    l3479 0B06                                      l3487 0B3C  
                                    l3495 14E0                                      l3671 03D2  
                                    l3663 0360                                      l3655 02E4  
                                    l3647 0258                                      l3639 020A  
                                    l3591 005A                                      l3583 0012  
                                    l3807 2B86                                      l4455 11A0  
                                    l4447 1168                                      l4439 1108  
                                    l4527 07D4                                      l4519 0744  
                                    l4535 0870                                      l4391 2B20  
                                    l3903 2828                                      l3815 2ABC  
                                    l4279 264A                                      l4607 21FE  
                                    l4551 2060                                      l4543 2036  
                                    l4631 1E08                                      l4623 1D66  
                                    l4615 1D2C                                      l4471 26CC  
                                    l4463 2692                                      l4383 0DBA  
                                    l4367 0D24                                      l4359 0CBE  
                                    l4375 0D86                                      l4295 28C2  
                                    l4287 284A                                      l3841 1EAE  
                                    l3833 1E7C                                      l3825 1E4A  
                                    l4705 1900                                      l3577 31C8  
                                    l3729 32D2                                      l3745 2C34  
                                    l3737 2DDA                                      l3921 0E1C  
                                    l3913 0E02                                      l3905 0DD0  
                                    l3569 1318                                      l3497 14F2  
                                    l3681 049A                                      l3673 03F6  
                                    l3665 0392                                      l3649 027C  
                                    l3593 0066                                      l3585 0036  
                                    l3809 2BAC                                      l4449 116C  
                                    l4537 087C                                      l4529 07F8  
                                    l4393 2B36                                      l3761 2CAE  
                                    l3753 2C92                                      l3817 2ACC  
                                    l4561 20AA                                      l4553 206C  
                                    l4545 203A                                      l4481 28CA  
                                    l4633 1E0E                                      l4625 1D78  
                                    l4617 1D3A                                      l4609 1D02  
                                    l4473 26DE                                      l4465 26A0  
                                    l4377 0D8A                                      l4289 286C  
                                    l4801 16EA                                      l3851 1F00  
                                    l3843 1EBA                                      l3835 1E80  
                                    l3827 1E5A                                      l4651 2A30  
                                    l4643 32A2                                      l4707 1904  
                                    l3579 31DE                                      l4731 1C60  
                                    l4715 1BD8                                      l3747 2C38  
                                    l3739 2DEA                                      l3931 0E3A  
                                    l3915 0E06                                      l3907 0DDC  
                                    l3499 14FA                                      l3691 0522  
                                    l3683 04D0                                      l3675 043E  
                                    l3659 032A                                      l3595 006A  
                                    l3587 0044                                      l4491 05BE  
                                    l4483 0594                                      l4395 2B42  
                                    l3771 2CEA                                      l3763 2CBC  
                                    l3819 2AD6                                      l4571 20FE  
                                    l4555 2088                                      l4547 2040  
                                    l4635 1E22                                      l4619 1D4C  
                                    l4475 26EA                                      l4467 26B2  
                                    l4299 3172                                      l4379 0DA4  
                                    l4811 173A                                      l4803 16FE  
                                    l3861 1F32                                      l3853 1F02  
                                    l3845 1EC8                                      l3837 1E90  
                                    l3829 1E5E                                      l4661 2A92  
                                    l4653 2A32                                      l4645 32A6  
                                    l4733 1C7C                                      l4725 1C12  
                                    l4717 1C06                                      l4709 1BC8  
                                    l3749 2C5C                                      l3941 0E6A  
                                    l3933 0E4A                                      l3917 0E0E  
                                    l3909 0DE2                                      l3693 0536  
                                    l3669 03AE                                      l3597 007C  
                                    l3589 0056                                      l4493 05CA  
                                    l4485 059A                                      l4397 2B58  
                                    l4389 2B08                                      l3765 2CC4  
                                    l3781 3250                                      l4581 2130  
                                    l4573 2104                                      l4557 2094  
                                    l4549 2044                                      l4629 1DAE  
                                    l4637 1E2A                                      l4477 26FE  
                                    l4469 26BE                                      l4741 22D4  
                                    l4821 178C                                      l4813 1750  
                                    l4805 1702                                      l4901 276C  
                                    l3855 1F0C                                      l3847 1ED2  
                                    l3839 1EA6                                      l4663 2A94  
                                    l4655 2A66                                      l4647 2A2E  
                                    l4671 32EA                                      l3871 3276  
                                    l4735 1CAA                                      l4727 1C58  
                                    l4719 1C0A                                      l3951 0EC8  
                                    l3935 0E56                                      l3943 0E96  
                                    l3927 0E24                                      l3919 0E14  
                                    l3687 04F0                                      l3679 0476  
                                    l4495 05D6                                      l4487 05A6  
                                    l4399 2B64                                      l3767 2CD8  
                                    l3759 2CA8                                      l3775 3234  
                                    l3791 2F94                                      l3783 2F72  
                                    l4591 2184                                      l4583 2134  
                                    l4567 20B2                                      l4575 211E  
                                    l4559 2098                                      l4479 2714  
                                    l4751 22FA                                      l4743 22DA  
                                    l4823 1790                                      l4815 1762  
                                    l4807 1712                                      l4911 279E  
                                    l4903 277E                                      l3849 1EF0  
                                    l3857 1F12                                      l4665 2A96  
                                    l4657 2A8E                                      l4649 2A2E  
                                    l4681 1850                                      l4673 17B8  
                                    l3873 327C                                      l3865 32F4  
                                    l4737 1CAE                                      l4729 1C5C  
                                    l3961 0EE6                                      l3945 0E9A  
                                    l3937 0E62                                      l3929 0E2A  
                                    l3689 0514                                      l3697 0542  
                                    l4489 05B2                                      l3769 2CDA  
                                    l3777 3238                                      l3793 2FA2  
                                    l3785 2F76                                      l4593 2188  
                                    l4585 2150                                      l4577 2126  
                                    l4569 20F2                                      l4761 232A  
                                    l4753 230A                                      l4745 22E2  
                                    l4817 1766                                      l4825 1798  
                                    l4809 1728                                      l4913 27A6  
                                    l4905 2782                                      l3859 1F22  
                                    l4667 2A98                                      l4659 2A90  
                                    l4691 1878                                      l4683 1854  
                                    l3875 3284                                      l3867 32F8  
                                    l4739 1CE4                                      l3963 0EF6  
                                    l3947 0EA4                                      l3699 0550  
                                    l3883 3256                                      l3779 3248  
                                    l3795 2FAA                                      l3787 2F7E  
                                    l3891 27B6                                      l4587 215C  
                                    l4579 212A                                      l4755 2312  
                                    l4747 22EA                                      l4827 179C  
                                    l4819 1778                                      l4907 2786  
                                    l4669 2A9A                                      l4685 1870  
                                    l3877 3286                                      l3869 3272  
                                    l3981 0F68                                      l3965 0F02  
                                    l3973 0F22                                      l3957 0ED0  
                                    l3949 0EA8                                      l3789 2F8C  
                                    l3797 2FAE                                      l3893 27B6  
                                    l3885 2944                                      l4589 2178  
                                    l4757 231A                                      l4749 22F2  
                                    l4765 233A                                      l4829 17B2  
                                    l4781 1676                                      l4909 278C  
                                    l4679 17C0                                      l3879 3288  
                                    l3991 0FDE                                      l3967 0F0E  
                                    l3975 0F56                                      l3959 0ED6  
                                    l4599 2192                                      l4759 2322  
                                    l4767 238E                                      l4791 16B2  
                                    l4783 167E                                      l4775 164C  
                                    l4871 271A                                      l4697 1880  
                                    l3993 0FEA                                      l3977 0F5A  
                                    l3969 0F1A                                      l3985 0F88  
                                    l3897 27BA                                      l3889 27B2  
                                    l4769 2392                                      l4793 16B6  
                                    l4785 1680                                      l4777 165E  
                                    l4881 2742                                      l4873 2722  
                                    l4699 18BC                                      l3979 0F64  
                                    l3987 0FBC                                      l3899 27CE  
                                    l4787 1692                                      l4779 1662  
                                    l4795 16BE                                      l4891 2756  
                                    l4883 2746                                      l4875 2726  
                                    l3989 0FCE                                      l4797 16C6  
                                    l4789 169E                                      l4893 275E  
                                    l4885 274A                                      l4877 272A  
                                    l3999 0FF0                                      l4799 16DA  
                                    l4895 2760                                      l4887 274E  
                                    l4879 272E                                      l4897 2762  
                                    l4889 2752                                      l4899 2766  
                            ?_leer_eeprom 0003                                      STR_1 798B  
                                    STR_2 7CD1                                      STR_3 7FB7  
                                    STR_4 7B77                                      STR_5 7D9B  
                                    STR_6 7C62                                      STR_7 7E77  
                                    STR_8 7AB3                                      STR_9 79CC  
                                    u2000 23C8                                      u2001 23C4  
                                    u2010 241E                                      u2011 241A  
                                    u2020 242E                                      u2100 13FA  
                                    u2021 242A                                      u2101 13F6  
                                    u2110 143A                                      u2030 300C  
                                    u2111 1436                                      u2031 3008  
                                    u3000 0E4A                                      u2040 309E  
                                    u2200 2E8E                                      u2120 1484  
                                    u3001 0E46                                      u2041 3098  
                                    u2201 2E8A                                      u2121 1480  
                                    u3010 0EC4                                      u2050 30A0  
                                    u2210 2D5C                                      u2130 1934  
                                    u3011 0EC0                                      u2211 2D58  
                                    u2131 1930                                      u3020 0EE6  
                                    u2060 1350                                      u2140 1966  
                                    u2300 0A9A                                      u2220 08B4  
                                    u3100 246E                                      u3021 0EE2  
                                    u2061 134C                                      u2141 1962  
                                    u2301 0A96                                      u2221 08AE  
                                    u3101 246A                                      u3030 0EF6  
                                    u2070 1382                                      u2150 19A4  
                                    u2310 0AB4                                      u2230 08B6  
                                    u3110 2488                                      u3031 0EF2  
                                    u2071 137E                                      u2151 19A0  
                                    u2311 0AB0                                      u3111 2484  
                                    u3040 0F84                                      u2160 19CE  
                                    u2320 0ACE                                      u2240 08CC  
                                    u2400 1542                                      u3120 24AE  
                                    u3200 259A                                      _LATD 000F8C  
                                    u3041 0F80                                      u2081 13AC  
                                    u2161 19CA                                      u2321 0ACA  
                                    u2241 08C8                                      u2401 153E  
                                    u3121 24AA                                      u3201 2596  
                                    u3050 0FCE                                      u2090 13D0  
                                    u2170 19FC                                      u2330 0ADE  
                                    u2250 08FC                                      u2410 156E  
                                    u3130 24CC                                      u3210 25BE  
                                    u3051 0FCA                                      u2091 13CC  
                                    u2171 19F8                                      u2331 0ADA  
                                    u2251 08F8                                      u2411 156A  
                                    u3131 24C8                                      u3211 25BA  
                                    u3060 0FDE                                      u2500 12F0  
                                    u2180 1A44                                      u2340 0AF0  
                                    u2260 0918                                      u2420 15A8  
                                    u3140 24E8                                      u3300 2678  
                                    u3220 30BE                                      u3061 0FDA  
                                    u2181 1A40                                      u2341 0AEC  
                                    u2261 0914                                      u2421 15A4  
                                    u3141 24E4                                      u3301 2674  
                                    u3221 30BA                                      u2190 2E60  
                                    u2510 1306                                      u2350 0B00  
                                    u2270 0946                                      u2430 15F8  
                                    u3150 250E                                      u3070 2F18  
                                    u3230 30D0                                      u3310 286C  
                                    u2191 2E5C                                      u2511 1302  
                                    u2351 0AFC                                      u2271 0942  
                                    u2431 15F4                                      u3151 250A  
                                    u3071 2F14                                      u3231 30CC  
                                    u3311 2868                                      u2520 1318  
                                    u2360 0B18                                      u2280 0954  
                                    u2440 1608                                      u2600 0188  
                                    u3160 2532                                      u3240 29E8  
                                    u3080 2EE6                                      u3400 0CB8  
                                    u3320 288C                                      u2521 1314  
                                    u2361 0B14                                      u2281 0950  
                                    u2441 1604                                      u2601 0184  
                                    u3161 252E                                      u3241 29E4  
                                    u3081 2EE2                                      u3401 0CB4  
                                    u3321 2888                                      u2530 31DE  
                                    u3250 1B3E                                      u2290 0A7C  
                                    u2450 1642                                      u2610 0204  
                                    u3090 2FEA                                      u3170 254C  
                                    u3410 0CEE                                      u3330 28BE  
                                    u2531 31DA                                      u3251 1B3A  
                                    u2291 0A78                                      u2451 163E  
                                    u2371 14D0                                      u2611 01FE  
                                    u3091 2FE6                                      u3171 2548  
                                    u3411 0CEA                                      u3331 28BA  
                                    u2540 31EC                                      u3260 1BC6  
                                    u2460 11E6                                      u2380 14F2  
                                    u2700 03D2                                      u2620 0206  
                                    u3500 1154                                      u3180 2566  
                                    u3340 3134                                      u3420 0D24  
                                    u2541 31E8                                      u3261 1BC2  
                                    u2461 11E2                                      u2381 14EE  
                                    u2701 03CE                                      u3501 1150  
                                    u3181 2562                                      u3341 3130  
                                    u3421 0D20                                      u2550 32A0  
                                    u2470 121C                                      u2390 1524  
                                    u2710 03F6                                      u2630 021C  
                                    u3510 118C                                      u3190 2584  
                                    u3270 1F76                                      u3430 0DA4  
                                    u3350 0BA6                                      u2551 329C  
                                    u2471 1218                                      u2391 1520  
                                    u2711 03F2                                      u2631 0218  
                                    u3511 1188                                      u3191 2580  
                                    u3271 1F72                                      u3431 0DA0  
                                    u3351 0BA2                                      u2480 1238  
                                    u2720 049A                                      u2640 0240  
                                    u2560 0036                                      u2800 2CA8  
                                    u3280 1FCC                                      u3600 1D4C  
                                    u3520 26B2                                      u3440 0DB4  
                                    u3360 0BE0                                      u2481 1234  
                                    u2721 0496                                      u2641 023C  
                                    u2561 0032                                      u2801 2CA4  
                                    u3281 1FC8                                      u3601 1D48  
                                    u3521 26AE                                      u3441 0DB0  
                                    u3361 0BDC                                      u2490 12EE  
                                    u1930 2218                                      u2730 0514  
                                    u2650 027C                                      u2570 010E  
                                    u3450 2B36                                      u2810 2CBC  
                                    u3290 201A                                      u3610 1D78  
                                    u3530 26DE                                      u3370 0C16  
                                    u2491 12E8                                      u1931 2214  
                                    u2731 0510                                      u2651 0278  
                                    u2571 010A                                      u3451 2B32  
                                    u2811 2CB8                                      u3291 2016  
                                    u3611 1D74                                      u3531 26DA  
                                    u3371 0C12                                      u2900 1E6C  
                                    u3620 1870                                      u2740 2DCA  
                                    u1940 222A                                      u2660 0324  
                                    u2580 011E                                      u3540 0610  
                                    u3460 2B58                                      u2820 2CD8  
                                    u3380 0C4C                                      u3700 1692  
                                    u2901 1E68                                      u3621 186C  
                                    u2741 2DC6                                      u1941 2226  
                                    u2661 031E                                      u2581 011A  
                                    u3541 060C                                      u3461 2B54  
                                    u2821 2CD4                                      u3381 0C48  
                                    u3701 168E                                      u2910 1EA6  
                                    u3630 18DC                                      u2750 2DDA  
                                    u1950 2252                                      u2670 0326  
                                    u2590 0144                                      u3470 102E  
                                    u3550 0718                                      u2830 2CEA  
                                    u3390 0C82                                      u3710 16DA  
                                    u2911 1EA2                                      u3631 18D8  
                                    u2751 2DD6                                      u1951 224E  
                                    u2591 0140                                      u3471 102A  
                                    u3551 0714                                      u2831 2CE6  
                                    u3391 0C7E                                      u3711 16D6  
                                    u2920 1EC8                                      u3640 1920  
                                    u2760 2DEA                                      u1960 2288  
                                    u2680 033C                                      u3480 105A  
                                    u2840 2F8C                                      u3560 20AA  
                                    u3720 16EA                                      u2921 1EC4  
                                    u3641 191C                                      u2761 2DE6  
                                    u1961 2284                                      u2681 0338  
                                    u3481 1056                                      u2841 2F88  
                                    u3561 20A6                                      u3721 16E6  
                                    u2930 1EF0                                      u3650 1C7C  
                                    u2770 2C58                                      u1970 2F70  
                                    u2690 0360                                      u3490 10CA  
                                    u2850 2FA2                                      u3570 211E  
                                    u3730 1712                                      u2931 1EEC  
                                    u3651 1C78                                      u1971 2F6C  
                                    u2691 035C                                      u3491 10C6  
                                    u2851 2F9E                                      u3571 211A  
                                    u3731 170E                                      u2940 1F22  
                                    u3660 1D00                                      u2780 2C80  
                                    u1980 3104                                      u2860 2BC8  
                                    u3580 21FE                                      u3740 1728  
                                    u2941 1F1E                                      u3661 1CFC  
                                    u1981 3100                                      u2861 2BC4  
                                    u3581 21FA                                      u3741 1724  
                                    u2790 2C90                                      u1990 23A6  
                                    u2950 27CE                                      u2870 2ABC  
                                    u3590 1D20                                      u3670 230A  
                                    u3750 173A                                      u3830 277E  
                                    u2791 2C8C                                      u1991 23A2  
                                    u2951 27CA                                      u2871 2AB8  
                                    u3591 1D1C                                      u3671 2306  
                                    u3751 1736                                      u3831 277A  
                                    u2960 2828                                      u2880 2AF6  
                                    u3760 1750                                      u3680 165E  
                                    u3840 279E                                      u2777 2C4E  
                                    u2961 2824                                      u2881 2AF2  
                                    u3761 174C                                      u3681 165A  
                                    u3841 279A                                      u2890 1E4A  
                                    u2970 0DF2                                      u3770 1762  
                                    u3690 1676                                      u2891 1E46  
                                    u2787 2C76                                      u2971 0DEE  
                                    u3907 323E                                      u3771 175E  
                                    u3691 1672                                      u2980 0E02  
                                    u3780 1778                                      u2981 0DFE  
                                    u3917 324C                                      u3781 1774  
                                    u2990 0E3A                                      u2991 0E36  
                                    u3927 2CAA                                      u3937 3168  
                                    u3857 2650                                      u3947 3062  
                                    u3867 2EEC                                      u3877 2F78  
                                    u3887 2F8E                                      u3897 2FA4  
                                    _TMR0 000FD6                      _minutosTranscurridos 007C  
                      ??_i2c_reinicia_com 0002                            _check_response 2F72  
                 escribeHorariosMemoria@i 0011                   escribeHorariosMemoria@j 000D  
                           ??_i2c_detener 0002                                      abs@a 0013  
                                    _dbuf 008D                                      _atoi 11AE  
                                    _ctoa 2D48                                      _main 271A  
                                    _dtoa 0884                                      _hora 0087  
                                    _prec 0074                                      _nout 0070  
                                    pad@i 0018                                      pad@p 0015  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    indf1 000FE7                                      indf2 000FDF  
                                    fsr1l 000FE1                                      pad@w 001A  
                                    map@x 001B                                      fsr2l 000FD9  
                                    _stoa 14C6                                      btemp 005F  
                          ?_sistemaRegado 0001                  __size_of_asignarHorarios 01BA  
                           ??_i2c_iniciar 0001                                      prodh 000FF4  
                                    prodl 000FF3                                      start 000E  
                ??_restablecerDatosSensor 0005                             __CFG_IESO$OFF 000000  
                        ??_DHT11_ReadData 0001                         _constructorSensor 32E0  
                    __size_of_DHT11_Start 0020                              ?_lecturaWifi 0001  
                 __size_of_setTiempoRegar 00A0                             __CFG_MCLRE$ON 000000  
                            ___param_bank 000000                        ?_constructorSensor 0001  
                      setTiempoRegar@hora 0014                        _leeHorariosMemoria 1BC8  
                        ??_encenderBombas 000F                                     ??_abs 0015  
                                   ??_map 002F                                     ??_pad 0017  
                          _i2c_envia_dato 32C8                             __CFG_PLLDIV$1 000000  
                          _i2c_inicia_com 32FC                           __end_of___aldiv 1F44  
                         __end_of___aodiv 14C6                                     ?_atoi 0008  
                                   ?_ctoa 001C                                     ?_main 0001  
                                   ?_dtoa 001C                           __end_of___aomod 1A86  
                           _convertirDato 3214                           __end_of___awdiv 2520  
                                   STR_10 79CC                                     STR_11 7C87  
                                   STR_12 7FED                                     STR_20 7AE6  
                                   STR_13 7E29                                     STR_21 7D3B  
                                   STR_14 7E29                                     STR_30 7FC7  
                                   STR_22 7C3D                                     STR_31 7E40  
                                   STR_15 7F3B                                     STR_23 7DF3  
                                   STR_16 7AB3                                     STR_40 7F69  
                                   STR_24 7CAC                                     STR_32 7BA2  
                                   STR_33 7FD5                                     STR_41 7EF3  
                                   STR_25 7B19                                     STR_17 7943  
                                   STR_50 7D7B                                     STR_42 7E0E  
                                   STR_34 7DD7                                     STR_26 7D5B  
                                   STR_18 7C18                                     STR_51 7DBA  
                                   STR_43 7F0B                                     STR_27 7D19  
                                   STR_35 7CF5                                     STR_19 7BCC  
                                   STR_52 7B4A                                     STR_28 7F52  
                                   STR_44 7EC2                                     STR_36 7BF2  
                                   STR_60 7A07                           __end_of___awmod 25D0  
                                   STR_53 7FA6                                     STR_45 7EDB  
                                   STR_37 7E5D                                     STR_29 7E43  
                                   STR_54 7FF6                                     STR_38 7F23  
                                   STR_46 7E90                                     STR_55 7FE2  
                                   STR_39 7EA9                                     STR_47 7D7B  
                                   STR_56 7F94                                     STR_48 7DBA  
                                   STR_57 7F80                                     STR_49 7B4A  
                                   STR_58 7A7A                                     STR_59 7A41  
                     ??_constructorSensor 0005                                     ?_stoa 000A  
                       convertirDato@dato 0002                                     _T0CON 000FD5  
                         ___awdiv@divisor 0003                                     i2l217 2C30  
                     ?_leeHorariosMemoria 0001                           ___awdiv@counter 0005  
                                   _RCREG 000FAE                              vfpfcnvrt@fmt 0042  
                                   _SPBRG 000FAF                             __CFG_USBDIV$1 000000  
                                   _TRISD 000F95                            limpiarBuffer@i 0001  
                                   _TXREG 000FAD                             __CFG_PWRT$OFF 000000  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                       ___lmul@multiplicand 0005  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                      __size_of_UART_init 0070                        __size_of_UART_read 0054  
                                   _flags 0076                                     _fputc 2206  
                                   _fputs 2F2E                           __end_of_isdigit 30A6  
                  __end_of_check_response 2FB2                               ?_UART_write 0001  
                                   atoi@n 0015                                     pad@fp 0011  
                                   atoi@s 0008                                     _width 0072  
                                   ctoa@c 001E                                     _putch 330C  
                                   ctoa@w 001F                                     dtoa@d 001E  
                                   dtoa@i 003E                                     dtoa@n 0036  
                                   dtoa@p 0030                                     dtoa@s 0034  
                                   dtoa@w 0032                           __end_of_isspace 2E9A  
                                   tablat 000FF5                                     plusw1 000FE3  
                                   plusw2 000FDB                                     stoa@i 0016  
                                   stoa@l 001E                                     stoa@p 001C  
                                   stoa@s 000C         __size_of_mostrarDatosSensoresWIFI 00F0  
                                   stoa@w 0018                                     ttemp5 0060  
                                   ttemp6 0063                                     ttemp7 0067  
                                   status 000FD8                 ?_mostrarDatosSensoresWIFI 0001  
                                   wtemp8 0060                           __end_of_sprintf 2E48  
                      escribe_eeprom@dato 0009                 __end_of_constructorSensor 32EA  
                    ??_leeHorariosMemoria 0007                            __CFG_ICPRT$OFF 000000  
                              _i2c_espera 31C8                          ??_dameHoraActual 0005  
                         __initialization 2CEE                       __end_of_i2c_detener 330C  
         __size_of_lecturaAnalogaSensores 00AA                    __end_of_i2c_envia_dato 32D4  
                            __end_of_atoi 133E                              __end_of_ctoa 2DA2  
                            __end_of_main 27B2                              __end_of_dtoa 0B66  
                ??_escribeHorariosMemoria 000B                           ??_configurarAdc 0001  
                            __end_of_stoa 164C                    __end_of_i2c_inicia_com 3304  
                      _inicializarObjetos 17B8                       __end_of_i2c_iniciar 32B8  
                  sistemaPrincipal@opcion 00F3                          _dameHumedadSuelo 2EE8  
                          ?_convertirDato 0001                      __size_of_fijaHoraRtc 0068  
                                  ??_atoi 000A                                    ??_ctoa 001F  
                                  ??_main 005F                                    ??_dtoa 0026  
                                  ??_stoa 000E                 setTiempoRegar@tiempoRegar 0013  
                           __activetblptr 000002                       ?_inicializarObjetos 0001  
                      i2c_envia_dato@dato 0002                           __CFG_CCP2MX$OFF 000000  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  ?_fputc 0001                                    ?_fputs 000A  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                         ?_check_response 0001                          ___awdiv@dividend 0001  
                  encenderBombas@flagSeco 0011                                    ?_putch 0001  
                      convertirDato@datoR 0003                             _horaRegar$806 0006  
                                  i2l4831 2BD4                                    i2l4841 2C0A  
                                  i2l4833 2BE2                                    i2l4843 2C0C  
                                  i2l4835 2BF4                                    i2l4837 2BF6  
                                  i2l4845 2C18                                    i2l4847 2C26  
                                  i2l4839 2C06                                    i2l4849 2C2A  
                         ??_sistemaRegado 005D                             vfpfcnvrt@done 0054  
                                  _SSPADD 000FC8                                    _SSPBUF 000FC9  
                    ??_inicializarObjetos 0007           __size_of_restablecerDatosSensor 004E  
                          __CFG_XINST$OFF 000000                          __end_of_getValue 0FF4  
                            vfprintf@cfmt 005B                  __end_of_sistemaPrincipal 2396  
                          _escribe_eeprom 3142                                    ___lmul 2A9E  
                         ?_i2c_envia_dato 0001                                 ??___aldiv 0015  
                               ??___aodiv 0011                                 ??___aomod 0011  
                                  ___wmul 31EE                         __end_of_UART_init 2A9E  
                       __end_of_UART_read 2DF6                                 ??___awdiv 0005  
                               ??___awmod 0005                         ??_asignarHorarios 005D  
                        __end_of_leer_rtc 31C8                           ?_i2c_inicia_com 0001  
                        __end_of_estaSeco 30DC                                    _buffer 0100  
                     __size_of_UART_write 0016                              ?_UART_printf 0002  
                                  clear_0 2D16                                    clear_1 2D28  
                                  clear_2 2D34                          ___awdiv@quotient 0007  
                         ___awmod@divisor 0003                                    _setRtc 29BE  
                         ___awmod@counter 0005                                    pad@buf 0013  
                                  ctoa@fp 001C                                    dtoa@fp 001C  
                                  _strlen 30DC                           _i2c_recibe_dato 3272  
                  __size_of_dameDiaActual 0010                              ?_mostrarMenu 0001  
                                  fputc@c 0001                                    fputs@c 000E  
                                  fputs@i 000F                                    fputs@s 000A  
                               ??_isdigit 0003                      escribe_rtc@direccion 0004  
                            __mediumconst 7942                                 ??_isspace 0003  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                    _lecturaAnalogaSensores 25D0  
            __end_of_mostrarDatosSensores 2206                                    stoa@cp 001A  
                                  stoa@fp 000A                                    putch@c 0001  
                        __end_of_vfprintf 2BD2                                 ??_sprintf 005D  
                           ?_regadoRapido 0001                                __accesstop 0060  
                 __end_of__initialization 2D3A                      __size_of_escribe_rtc 001E  
                         __CFG_PBADEN$OFF 000000                      __size_of_leer_eeprom 003C  
                         __CFG_FOSC$XT_XT 000000                               _i2c_detener 3304  
              __size_of_constructorSensor 000A                             ___rparam_used 000001  
                             _i2c_iniciar 32A2                    __end_of_escribe_eeprom 3172  
                             ?_i2c_espera 0001                            _setTiempoRegar 267A  
                          __pcstackCOMRAM 0001                              leer_rtc@dato 0004  
                            __pidataBANK0 32D4                      __size_of_lecturaWifi 00F2  
         __size_of_escribeHorariosMemoria 0142                           ??_convertirDato 0001  
                           __end_of_fputc 22D0                             __end_of_fputs 2F72  
                           __end_of_putch 330E                    __size_of_limpiarBuffer 0040  
                  _restablecerDatosSensor 2E9A                              _datoRecibido 0083  
                       ?_dameDatosSistema 0001                            ??_regadoRapido 000F  
                                 ??_fputc 0005                                   ??_fputs 000E  
                                 ??_putch 0001                                __pbssBANK0 0060  
                              __pbssBANK1 0100                        ??_dameDatosSistema 005D  
                 __size_of_desbordamiento 2C2C                        __size_of_horaRegar 0084  
                  __end_of_setTiempoRegar 271A                             _dameDiaActual 32B8  
       constructorSensor@porcientoHumedad 0003                              lecturaWifi@i 00CB  
                         ?_escribe_eeprom 0007                                _fijaDiaRtc 3112  
                      _contInterrupciones 0078                 __size_of_i2c_reinicia_com 0008  
                                 ?___lmul 0001                                   ?___wmul 0001  
                              _flagRegado 0080                   __end_of_i2c_recibe_dato 328C  
                                 _ACKSTAT 007E2E                            ___lmul@product 0009  
                                 ?_setRtc 0001                                   ?_strlen 0001  
           dameTemperaturaHumedad@humedad 000A                        __size_of_vfpfcnvrt 0582  
                     __size_of_i2c_espera 0026                                 ?_getValue 0004  
                  _escribeHorariosMemoria 1A86                                   _SSPCON1 000FC6  
                                 _SSPCON2 000FC5                              ??_UART_write 0001  
                                 _SSPSTAT 000FC7                  __end_of_dameHumedadSuelo 2F2E  
                               ?_leer_rtc 0001                                 ?_estaSeco 000C  
                         __CFG_VREGEN$OFF 000000                            ?_dameDiaActual 0001  
                           ??_DHT11_Start 0001                             _limpiarBuffer 2FB2  
                         ?_setTiempoRegar 0001                                   _Humedad 007E  
                                 __Hparam 0000                                   __Lparam 0000  
                                 ___aldiv 1E38                                   ___aodiv 133E  
                                 ___aomod 1922                                   ___awdiv 245C  
                         __size_of___lmul 006A                      _mostrarDatosSensores 2126  
                                 ___awmod 2520                           __size_of___wmul 0026  
                               ?_vfprintf 00AD                           __CFG_STVREN$OFF 000000  
                             _Temperatura 007F                                   __pcinit 2CEE  
                                 __ramtop 0800                        __end_of_UART_write 32A2  
                         __size_of_setRtc 0070                                   __ptext0 271A  
                                 __ptext1 164C                                   __ptext2 2846  
                                 __ptext3 0B66                                   __ptext4 30A6  
                                 __ptext5 3172                                   __ptext6 32B8  
                                 __ptext7 319E                                   __ptext8 3214  
                                 __ptext9 22D0                   check_response@respuesta 0001  
                       __end_of_horaRegar 28CA                                 _T0CONbits 000FD5  
                         __size_of_strlen 0036                      __size_of_UART_printf 005E  
                            __size_of_abs 0040                              __size_of_pad 00C6  
                            __size_of_map 007A                          ??_check_response 0001  
                                 _isdigit 306E                          ___awmod@dividend 0001  
                                 _regando 007B                     regadoRapido@areaRegar 0012  
                        ___aldiv@dividend 000D                                   _isspace 2E48  
                                 _minutos 0086                      __size_of_mostrarMenu 007A  
                                 atoi@neg 000E                                ??_getValue 0006  
                                 _sprintf 2DF6                            __pintcode_body 2BD2  
                    end_of_initialization 2D3A                                ??_leer_rtc 0003  
                              ??_estaSeco 000E                                   fputc@fp 0003  
                          ?_limpiarBuffer 0001                           _asignarHorarios 0FF4  
                           __Lmediumconst 7942                                   int_func 2BD2  
                                 fputs@fp 000C                          ??_i2c_envia_dato 0002  
             __size_of_leeHorariosMemoria 013A                          ??_i2c_inicia_com 0002  
                             ?_fijaDiaRtc 0001                          _VALOR_TIMER0UART 00FD  
                       __end_of_vfpfcnvrt 0594                  ??_dameTemperaturaHumedad 0004  
                               _RCSTAbits 000FAB                          ___aldiv@quotient 0017  
                   ?_mostrarDatosSensores 0001                       __end_of_DHT11_Start 3254  
                                 postdec1 000FE5                                   postdec2 000FDD  
                       ?_sistemaPrincipal 0001                   _peticionLecturaSensores 007A  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                             ??_fijaHoraRtc 0013  
                    __end_of_regadoRapido 1E38                          ?_i2c_recibe_dato 0001  
                              ??_vfprintf 005B                             setRtc@datoRtc 0011  
                   __end_of_configurarAdc 32F4                        ??_sistemaPrincipal 00F1  
                                 strlen@a 0003                                   strlen@s 0001  
                               _UART_init 2A2E                                getValue@Rx 000E  
                               _UART_read 2DA2                                 _PORTDbits 000F83  
                 __size_of_DHT11_ReadData 005C                   ?_lecturaAnalogaSensores 0001  
                           setRtc@seteado 0010                 dameHumedadSuelo@canalLeer 0005  
                 lecturaAnalogaSensores@i 0030                                 _TRISBbits 000F93  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                 __size_of_encenderBombas 026A                  _mostrarDatosSensoresWIFI 2036  
                         ??_dameDiaActual 0005                                map@out_max 002B  
                              map@out_min 0027                            _desbordamiento 0008  
                          _esperandoDatos 0089                            _UART_init$1920 0023  
                            ?_i2c_detener 0001                     __end_of_sistemaRegado 17B8  
                               _TXSTAbits 000FAC                         dameDatosSistema@i 00EF  
             __size_of_inicializarObjetos 016A                              ?_i2c_iniciar 0001  
                            ??_i2c_espera 0001                         _MODO_COMUNICACION 0088  
                      DHT11_ReadData@data 0002                          _i2c_reinicia_com 32F4  
                          __end_of___lmul 2B08                               vfpfcnvrt@ap 0044  
                             vfpfcnvrt@cp 0052                               vfpfcnvrt@fp 0040  
                             vfpfcnvrt@ll 004A                            __end_of___wmul 3214  
                 ?_restablecerDatosSensor 0001            __end_of_lecturaAnalogaSensores 267A  
                              ?_UART_init 001B                                ?_UART_read 0001  
                 __size_of_dameHoraActual 002C                            __end_of_setRtc 2A2E  
                     __end_of_fijaHoraRtc 2B70                            __end_of_strlen 3112  
                     start_initialization 2CEE                              _estaSeco$799 000E  
                             __end_of_abs 3032                               __end_of_pad 245C  
                 __end_of_asignarHorarios 11AE                               __end_of_map 29BE  
                     __size_of_fijaDiaRtc 0030         escribeHorariosMemoria@contMemoria 000F  
                  __end_of_desbordamiento 2C34                        __end_of_i2c_espera 31EE  
                           ??_escribe_rtc 0004                             ??_leer_eeprom 0005  
                         ??_limpiarBuffer 0001                          ??_escribe_eeprom 000A  
                     leeHorariosMemoria@i 000D                       leeHorariosMemoria@j 0009  
                    constructorSensor@pin 0004                               _DHT11_Start 3234  
                   _dameDatosSistema$1921 00E7                     _dameDatosSistema$1922 00E9  
                   _dameDatosSistema$1923 00EB                     _dameDatosSistema$1924 00ED  
                           ??_lecturaWifi 005D                    ??_mostrarDatosSensores 005D  
                             vfprintf@fmt 00AF                 __size_of_dameDatosSistema 02F0  
         __size_of_dameTemperaturaHumedad 0094                                  ??___lmul 0009  
                                ??___wmul 0005            __end_of_restablecerDatosSensor 2EE8  
                             __pdataBANK0 00F4                          __CFG_LPT1OSC$OFF 000000  
                       leer_rtc@direccion 0003                                  ??_setRtc 000F  
                   __end_of_convertirDato 3234                                  ??_strlen 0003  
                             __pbssBIGRAM 0132                   ?_escribeHorariosMemoria 0001  
                           __pcstackBANK0 00AD                          ___aodiv@dividend 0001  
           dameDatosSistema@bufferHorario 00C9                           ?_desbordamiento 0001  
                        ??_setTiempoRegar 0013                                 _diaActual 0084  
                 inicializarObjetos@i_809 000B                         __size_of_getValue 0224  
                       ?_dameHumedadSuelo 0001                    getValue@datoIncorrecto 0008  
                       UART_printf@cadena 0002                             lecturaWifi@Rx 00C9  
                               _atoi$1570 0014                                 _atoi$1571 0012  
                               _atoi$1569 0010                        ??_dameHumedadSuelo 0003  
                       __size_of_leer_rtc 002A                         __size_of_estaSeco 0036  
                     __end_of_escribe_rtc 3272                       __end_of_leer_eeprom 306E  
                   __size_of_regadoRapido 0136                                 _dtoa$1084 002E  
                               __pintcode 0008                             __pmediumconst 7942  
                                ?___aldiv 000D                                  ?___aodiv 0001  
                                ?___aomod 0001                                  ?___awdiv 0001  
                        ___aodiv@quotient 0013                                  ?___awmod 0001  
                             _fijaHoraRtc 2B08                       __end_of_lecturaWifi 2036  
                          _DHT11_ReadData 2C92                                setRtc@dato 0012  
                             ??_UART_init 001F                               ??_UART_read 0001  
                       __size_of_vfprintf 0062            __end_of_escribeHorariosMemoria 1BC8  
                                ?_isdigit 0001                            _encenderBombas 0B66  
                                ?_isspace 0001                                 _horaRegar 2846  
          dameTemperaturaHumedad@checkSum 0006                    _dameTemperaturaHumedad 27B2  
                        ?_asignarHorarios 0001                                  ?_sprintf 00B3  
                          __size_of_fputc 00CA                            __size_of_fputs 0044  
                            _regadoRapido 1D02                            __size_of_putch 0002  
                         ___aldiv@divisor 0011                           ___aldiv@counter 0015  
                          ___wmul@product 0005                                  _LATDbits 000F8C  
                                _PIE1bits 000F9D                      __size_of_i2c_detener 0008  
                            ??_fijaDiaRtc 0013                                  _PIR1bits 000F9E  
                                i2u380_40 2BF4                                  i2u380_41 2BF0  
                                i2u381_40 2C06                                  i2u381_41 2C02  
                                i2u382_40 2C26                                  i2u382_41 2C22  
                                i2u379_40 2BE2                                  i2u379_41 2BDE  
                 restablecerDatosSensor@i 0005                      __size_of_i2c_iniciar 0016  
                        __CFG_WDTPS$32768 000000                    _tiempoInactividadTrans 008C  
           leeHorariosMemoria@contMemoria 000B                       asignarHorarios@hora 00CC  
                  __end_of_DHT11_ReadData 2CEE                                 getValue@i 0009  
                           ??_UART_printf 0004                                 _vfpfcnvrt 0012  
                               map@in_max 0023                                 map@in_min 001F  
                              _ADCON0bits 000FC2                            _dameHoraActual 3172  
                       ___wmul@multiplier 0001                ??_mostrarDatosSensoresWIFI 005D  
                  __end_of_encenderBombas 0DD0                             ??_mostrarMenu 0004  
                          UART_write@dato 0001                                ?_horaRegar 0001  
                   mostrarDatosSensores@i 00C9                              _isspace$1587 0007  
               __size_of_sistemaPrincipal 00C6                  __end_of_i2c_reinicia_com 32FC  
                              vfpfcnvrt@c 005A                        __end_of_fijaDiaRtc 3142  
                       ___lmul@multiplier 0001                                 copy_data0 2D02  
                             _escribe_rtc 3254                               _leer_eeprom 3032  
                            _VALOR_TIMER0 00FB                __end_of_leeHorariosMemoria 1D02  
                               estaSeco@s 000C                   asignarHorarios@diaRegar 00C9  
                                __Hrparam 0000                     getValue@numCharacters 0004  
                            _minutosRegar 007D                               _lecturaWifi 1F44  
                           UART_init@BAUD 001B                                vfprintf@ap 00B1  
                                __Lrparam 0000                                vfprintf@fp 00AD  
                        _dameDatosSistema 0594  dameTemperaturaHumedad@temperaturaDecimal 0009  
                     _esperaDatoConcluida 008A                          __size_of___aldiv 010C  
                         ?_DHT11_ReadData 0001                          __size_of___aodiv 0188  
                        __size_of___aomod 0164                          __size_of___awdiv 00C4  
                  __end_of_dameHoraActual 319E                          __size_of___awmod 00B0  
                              ?_vfpfcnvrt 0040                           DHT11_ReadData@i 0001  
                         ___aodiv@divisor 0009                           ___aodiv@counter 0011  
                         ?_encenderBombas 0001                                sprintf@fmt 00B5  
                __size_of_i2c_recibe_dato 001A                       __end_of_UART_printf 2C92  
                        __size_of_isdigit 0038                          __size_of_isspace 0052  
                                __ptext10 267A                                  __ptext11 1D02  
                                __ptext20 2A9E                                  __ptext12 28CA  
                                __ptext21 2EE8                                  __ptext13 2036  
                                __ptext30 2520                                  __ptext22 27B2  
                                __ptext14 1F44                                  __ptext31 245C  
                                __ptext23 2F72                                  __ptext15 2E9A  
                                __ptext40 2FF2                                  __ptext32 0594  
                                __ptext24 3234                                  __ptext16 32E0  
                                __ptext41 1922                                  __ptext33 2FB2  
                                __ptext25 2C92                                  __ptext17 2126  
                                __ptext50 2E48                                  __ptext42 133E  
                                __ptext34 0FF4                                  __ptext26 2B08  
                                __ptext18 25D0                                  __ptext51 306E  
                                __ptext43 2D48                                  __ptext35 2DF6  
                                __ptext27 3112                                  __ptext19 2944  
                                __ptext60 32F4                                  __ptext52 0DD0  
                                __ptext44 2396                                  __ptext36 2B70  
                                __ptext28 29BE                                  __ptext61 3272  
                                __ptext53 2DA2                                  __ptext45 30DC  
                                __ptext37 0012                                  __ptext29 3254  
                                __ptext70 2A2E                                  __ptext62 32FC  
                                __ptext54 2C34                                  __ptext46 2F2E  
                                __ptext38 14C6                                  __ptext71 1E38  
                                __ptext63 32C8                                  __ptext55 328C  
                                __ptext47 2206                                  __ptext39 0884  
                                __ptext64 3304                                  __ptext56 1A86  
                                __ptext48 330C                                  __ptext65 31C8  
                                __ptext57 3142                                  __ptext49 11AE  
                                __ptext66 17B8                                  __ptext58 1BC8  
                                __ptext67 31EE                                  __ptext59 3032  
                                __ptext68 32A2                                  __ptext69 32EA  
                                _getValue 0DD0                       __end_of_mostrarMenu 2944  
                        __size_of_sprintf 0052                                  _leer_rtc 319E  
                                _estaSeco 30A6                __end_of_inicializarObjetos 1922  
                                _byteUart 008B                    __size_of_configurarAdc 000A  
                lecturaWifi@humedadMedida 00CA                   __size_of_check_response 0040  
                   __end_of_dameDiaActual 32C8                       inicializarObjetos@i 000D  
                     inicializarObjetos@j 0009                             __size_of_atoi 0190  
                           __size_of_ctoa 005A                             __size_of_main 0098  
                           __size_of_dtoa 02E2                                  _horarios 0132  
                            ?_DHT11_Start 0001                             __size_of_stoa 0186  
    dameTemperaturaHumedad@humedadDecimal 0008                                  _tempHora 0081  
                                _segundos 0085                                 stoa@F1144 00F4  
                         encenderBombas@i 0012                                  _sensores 0060  
               mostrarDatosSensoresWIFI@i 00CD                                  int$flags 005F  
                                _vfprintf 2B70                           ?_dameHoraActual 0001  
                 __size_of_i2c_envia_dato 000C                             getValue@i_990 000B  
                 __size_of_i2c_inicia_com 0008                  i2c_recibe_dato@datoleido 0002  
                        ___aomod@dividend 0001                     __CFG_CPUDIV$OSC1_PLL2 000000  
                        ??_desbordamiento 0001                            _vfpfcnvrt$1110 0058  
                          _vfpfcnvrt$1109 0056                    __size_of_sistemaRegado 016C  
                              _INTCONbits 000FF2                        constructorSensor@s 0001  
                             ??_horaRegar 0003                   escribe_eeprom@direccion 0007  
                                isdigit@c 0001                                  intlevel2 0000  
                               sprintf@ap 00C1                           escribe_rtc@dato 0003  
                   __end_of_limpiarBuffer 2FF2                                  isspace@c 0001  
                         setRtc@direccion 000F                         asignarHorarios@Rx 00CD  
           __size_of_mostrarDatosSensores 00E0                             _overflowTimer 0082  
                            ?_fijaHoraRtc 0001         dameTemperaturaHumedad@temperatura 000B  
                         ___aomod@divisor 0009                              getValue@dato 000D  
               __size_of_dameHumedadSuelo 0046                               ??_vfpfcnvrt 0046  
                                stoa@nuls 000F                           ___aomod@counter 0011  
                             _UART_printf 2C34                             _configurarAdc 32EA  
        __end_of_mostrarDatosSensoresWIFI 2126                                  sprintf@f 00C3  
                                sprintf@s 00B3                   ?_dameTemperaturaHumedad 0001  
                             _mostrarMenu 28CA                              ___aldiv@sign 0016  
                        asignarHorarios@i 00CA                          _sistemaPrincipal 22D0  
                         leer_eeprom@dato 0006                               _SSPCON2bits 000FC5  
                              _UART_write 328C                              ___aodiv@sign 0012  
                       ??_i2c_recibe_dato 0002                    __size_of_convertirDato 0020  
                    leer_eeprom@direccion 0003                             _sistemaRegado 164C  
                            ___aomod@sign 0012                  ??_lecturaAnalogaSensores 002F  
