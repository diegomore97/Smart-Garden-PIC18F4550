

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Apr 21 15:41:45 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           ; Version 2.10
    57                           ; Generated 31/07/2019 GMT
    58                           ; 
    59                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4550 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	idataCOMRAM
    92  001050                     __pidataCOMRAM:
    93                           	opt callstack 0
    94                           
    95                           ;initializer for _VALOR_TIMER0
    96  001050  6769               	dw	26473
    97                           
    98                           ;initializer for _VALOR_TIMER0UART
    99  001052  6769               	dw	26473
   100                           
   101                           ;initializer for _esperandoDatos
   102  001054  01                 	db	1
   103  0000                     _TMR0	set	4054
   104  0000                     _T0CONbits	set	4053
   105  0000                     _TRISD	set	3989
   106  0000                     _T0CON	set	4053
   107  0000                     _LATD	set	3980
   108  0000                     _PIE1bits	set	3997
   109  0000                     _ADRESL	set	4035
   110  0000                     _ADCON0bits	set	4034
   111  0000                     _LATDbits	set	3980
   112  0000                     _PORTE	set	3972
   113  0000                     _PORTA	set	3968
   114  0000                     _TRISE	set	3990
   115  0000                     _TRISA	set	3986
   116  0000                     _ADCON2	set	4032
   117  0000                     _ADCON1	set	4033
   118  0000                     _INTCONbits	set	4082
   119  0000                     _TXREG	set	4013
   120  0000                     _RCREG	set	4014
   121  0000                     _PIR1bits	set	3998
   122  0000                     _RCSTAbits	set	4011
   123  0000                     _TXSTAbits	set	4012
   124  0000                     _SPBRG	set	4015
   125  0000                     _TRISCbits	set	3988
   126  0000                     _SSPBUF	set	4041
   127  0000                     _SSPCON2bits	set	4037
   128  0000                     _SSPADD	set	4040
   129  0000                     _SSPCON2	set	4037
   130  0000                     _SSPCON1	set	4038
   131  0000                     _SSPSTAT	set	4039
   132  0000                     _TRISBbits	set	3987
   133  0000                     _ACKSTAT	set	32302
   134                           
   135                           	psect	mediumconst
   136  007D78                     __pmediumconst:
   137                           	opt callstack 0
   138  007D78  00                 	db	0
   139  007D79                     STR_15:
   140  007D79  0D                 	db	13
   141  007D7A  0A                 	db	10
   142  007D7B  20                 	db	32
   143  007D7C  49                 	db	73	;'I'
   144  007D7D  6E                 	db	110	;'n'
   145  007D7E  67                 	db	103	;'g'
   146  007D7F  72                 	db	114	;'r'
   147  007D80  65                 	db	101	;'e'
   148  007D81  73                 	db	115	;'s'
   149  007D82  65                 	db	101	;'e'
   150  007D83  20                 	db	32
   151  007D84  6C                 	db	108	;'l'
   152  007D85  6F                 	db	111	;'o'
   153  007D86  73                 	db	115	;'s'
   154  007D87  20                 	db	32
   155  007D88  6D                 	db	109	;'m'
   156  007D89  69                 	db	105	;'i'
   157  007D8A  6E                 	db	110	;'n'
   158  007D8B  75                 	db	117	;'u'
   159  007D8C  74                 	db	116	;'t'
   160  007D8D  6F                 	db	111	;'o'
   161  007D8E  73                 	db	115	;'s'
   162  007D8F  20                 	db	32
   163  007D90  71                 	db	113	;'q'
   164  007D91  75                 	db	117	;'u'
   165  007D92  65                 	db	101	;'e'
   166  007D93  20                 	db	32
   167  007D94  64                 	db	100	;'d'
   168  007D95  65                 	db	101	;'e'
   169  007D96  73                 	db	115	;'s'
   170  007D97  65                 	db	101	;'e'
   171  007D98  65                 	db	101	;'e'
   172  007D99  20                 	db	32
   173  007D9A  71                 	db	113	;'q'
   174  007D9B  75                 	db	117	;'u'
   175  007D9C  65                 	db	101	;'e'
   176  007D9D  20                 	db	32
   177  007D9E  73                 	db	115	;'s'
   178  007D9F  65                 	db	101	;'e'
   179  007DA0  20                 	db	32
   180  007DA1  72                 	db	114	;'r'
   181  007DA2  69                 	db	105	;'i'
   182  007DA3  65                 	db	101	;'e'
   183  007DA4  67                 	db	103	;'g'
   184  007DA5  75                 	db	117	;'u'
   185  007DA6  65                 	db	101	;'e'
   186  007DA7  20                 	db	32
   187  007DA8  65                 	db	101	;'e'
   188  007DA9  6E                 	db	110	;'n'
   189  007DAA  20                 	db	32
   190  007DAB  65                 	db	101	;'e'
   191  007DAC  73                 	db	115	;'s'
   192  007DAD  65                 	db	101	;'e'
   193  007DAE  20                 	db	32
   194  007DAF  68                 	db	104	;'h'
   195  007DB0  6F                 	db	111	;'o'
   196  007DB1  72                 	db	114	;'r'
   197  007DB2  61                 	db	97	;'a'
   198  007DB3  72                 	db	114	;'r'
   199  007DB4  69                 	db	105	;'i'
   200  007DB5  6F                 	db	111	;'o'
   201  007DB6  20                 	db	32
   202  007DB7  65                 	db	101	;'e'
   203  007DB8  6A                 	db	106	;'j'
   204  007DB9  3A                 	db	58	;':'
   205  007DBA  20                 	db	32
   206  007DBB  31                 	db	49	;'1'
   207  007DBC  35                 	db	53	;'5'
   208  007DBD  20                 	db	32
   209  007DBE  0D                 	db	13
   210  007DBF  0A                 	db	10
   211  007DC0  00                 	db	0
   212  007DC1                     STR_9:
   213  007DC1  0D                 	db	13
   214  007DC2  0A                 	db	10
   215  007DC3  20                 	db	32
   216  007DC4  49                 	db	73	;'I'
   217  007DC5  6E                 	db	110	;'n'
   218  007DC6  67                 	db	103	;'g'
   219  007DC7  72                 	db	114	;'r'
   220  007DC8  65                 	db	101	;'e'
   221  007DC9  73                 	db	115	;'s'
   222  007DCA  65                 	db	101	;'e'
   223  007DCB  20                 	db	32
   224  007DCC  31                 	db	49	;'1'
   225  007DCD  20                 	db	32
   226  007DCE  70                 	db	112	;'p'
   227  007DCF  61                 	db	97	;'a'
   228  007DD0  72                 	db	114	;'r'
   229  007DD1  61                 	db	97	;'a'
   230  007DD2  20                 	db	32
   231  007DD3  72                 	db	114	;'r'
   232  007DD4  65                 	db	101	;'e'
   233  007DD5  67                 	db	103	;'g'
   234  007DD6  61                 	db	97	;'a'
   235  007DD7  72                 	db	114	;'r'
   236  007DD8  20                 	db	32
   237  007DD9  7C                 	db	124
   238  007DDA  7C                 	db	124
   239  007DDB  20                 	db	32
   240  007DDC  69                 	db	105	;'i'
   241  007DDD  6E                 	db	110	;'n'
   242  007DDE  67                 	db	103	;'g'
   243  007DDF  72                 	db	114	;'r'
   244  007DE0  65                 	db	101	;'e'
   245  007DE1  73                 	db	115	;'s'
   246  007DE2  65                 	db	101	;'e'
   247  007DE3  20                 	db	32
   248  007DE4  30                 	db	48	;'0'
   249  007DE5  20                 	db	32
   250  007DE6  70                 	db	112	;'p'
   251  007DE7  61                 	db	97	;'a'
   252  007DE8  72                 	db	114	;'r'
   253  007DE9  61                 	db	97	;'a'
   254  007DEA  20                 	db	32
   255  007DEB  6E                 	db	110	;'n'
   256  007DEC  6F                 	db	111	;'o'
   257  007DED  20                 	db	32
   258  007DEE  72                 	db	114	;'r'
   259  007DEF  65                 	db	101	;'e'
   260  007DF0  67                 	db	103	;'g'
   261  007DF1  61                 	db	97	;'a'
   262  007DF2  72                 	db	114	;'r'
   263  007DF3  3A                 	db	58	;':'
   264  007DF4  20                 	db	32
   265  007DF5  0D                 	db	13
   266  007DF6  0A                 	db	10
   267  007DF7  00                 	db	0
   268  007DF8                     STR_7:
   269  007DF8  0D                 	db	13
   270  007DF9  0A                 	db	10
   271  007DFA  20                 	db	32
   272  007DFB  49                 	db	73	;'I'
   273  007DFC  6E                 	db	110	;'n'
   274  007DFD  67                 	db	103	;'g'
   275  007DFE  72                 	db	114	;'r'
   276  007DFF  65                 	db	101	;'e'
   277  007E00  73                 	db	115	;'s'
   278  007E01  65                 	db	101	;'e'
   279  007E02  20                 	db	32
   280  007E03  75                 	db	117	;'u'
   281  007E04  6E                 	db	110	;'n'
   282  007E05  61                 	db	97	;'a'
   283  007E06  20                 	db	32
   284  007E07  68                 	db	104	;'h'
   285  007E08  6F                 	db	111	;'o'
   286  007E09  72                 	db	114	;'r'
   287  007E0A  61                 	db	97	;'a'
   288  007E0B  20                 	db	32
   289  007E0C  65                 	db	101	;'e'
   290  007E0D  6E                 	db	110	;'n'
   291  007E0E  20                 	db	32
   292  007E0F  66                 	db	102	;'f'
   293  007E10  6F                 	db	111	;'o'
   294  007E11  72                 	db	114	;'r'
   295  007E12  6D                 	db	109	;'m'
   296  007E13  61                 	db	97	;'a'
   297  007E14  74                 	db	116	;'t'
   298  007E15  6F                 	db	111	;'o'
   299  007E16  20                 	db	32
   300  007E17  64                 	db	100	;'d'
   301  007E18  65                 	db	101	;'e'
   302  007E19  20                 	db	32
   303  007E1A  32                 	db	50	;'2'
   304  007E1B  34                 	db	52	;'4'
   305  007E1C  20                 	db	32
   306  007E1D  68                 	db	104	;'h'
   307  007E1E  72                 	db	114	;'r'
   308  007E1F  73                 	db	115	;'s'
   309  007E20  20                 	db	32
   310  007E21  65                 	db	101	;'e'
   311  007E22  6A                 	db	106	;'j'
   312  007E23  3A                 	db	58	;':'
   313  007E24  20                 	db	32
   314  007E25  31                 	db	49	;'1'
   315  007E26  35                 	db	53	;'5'
   316  007E27  20                 	db	32
   317  007E28  0D                 	db	13
   318  007E29  0A                 	db	10
   319  007E2A  00                 	db	0
   320  007E2B                     STR_21:
   321  007E2B  0D                 	db	13
   322  007E2C  0A                 	db	10
   323  007E2D  20                 	db	32
   324  007E2E  33                 	db	51	;'3'
   325  007E2F  2E                 	db	46
   326  007E30  20                 	db	32
   327  007E31  50                 	db	80	;'P'
   328  007E32  72                 	db	114	;'r'
   329  007E33  6F                 	db	111	;'o'
   330  007E34  67                 	db	103	;'g'
   331  007E35  72                 	db	114	;'r'
   332  007E36  61                 	db	97	;'a'
   333  007E37  6D                 	db	109	;'m'
   334  007E38  61                 	db	97	;'a'
   335  007E39  72                 	db	114	;'r'
   336  007E3A  20                 	db	32
   337  007E3B  74                 	db	116	;'t'
   338  007E3C  69                 	db	105	;'i'
   339  007E3D  65                 	db	101	;'e'
   340  007E3E  6D                 	db	109	;'m'
   341  007E3F  70                 	db	112	;'p'
   342  007E40  6F                 	db	111	;'o'
   343  007E41  20                 	db	32
   344  007E42  64                 	db	100	;'d'
   345  007E43  65                 	db	101	;'e'
   346  007E44  20                 	db	32
   347  007E45  72                 	db	114	;'r'
   348  007E46  69                 	db	105	;'i'
   349  007E47  65                 	db	101	;'e'
   350  007E48  67                 	db	103	;'g'
   351  007E49  6F                 	db	111	;'o'
   352  007E4A  20                 	db	32
   353  007E4B  65                 	db	101	;'e'
   354  007E4C  6E                 	db	110	;'n'
   355  007E4D  20                 	db	32
   356  007E4E  75                 	db	117	;'u'
   357  007E4F  6E                 	db	110	;'n'
   358  007E50  20                 	db	32
   359  007E51  68                 	db	104	;'h'
   360  007E52  6F                 	db	111	;'o'
   361  007E53  72                 	db	114	;'r'
   362  007E54  61                 	db	97	;'a'
   363  007E55  72                 	db	114	;'r'
   364  007E56  69                 	db	105	;'i'
   365  007E57  6F                 	db	111	;'o'
   366  007E58  20                 	db	32
   367  007E59  0D                 	db	13
   368  007E5A  0A                 	db	10
   369  007E5B  00                 	db	0
   370  007E5C                     STR_3:
   371  007E5C  0D                 	db	13
   372  007E5D  0A                 	db	10
   373  007E5E  20                 	db	32
   374  007E5F  45                 	db	69	;'E'
   375  007E60  6E                 	db	110	;'n'
   376  007E61  76                 	db	118	;'v'
   377  007E62  69                 	db	105	;'i'
   378  007E63  65                 	db	101	;'e'
   379  007E64  20                 	db	32
   380  007E65  6C                 	db	108	;'l'
   381  007E66  61                 	db	97	;'a'
   382  007E67  73                 	db	115	;'s'
   383  007E68  20                 	db	32
   384  007E69  48                 	db	72	;'H'
   385  007E6A  6F                 	db	111	;'o'
   386  007E6B  72                 	db	114	;'r'
   387  007E6C  61                 	db	97	;'a'
   388  007E6D  73                 	db	115	;'s'
   389  007E6E  20                 	db	32
   390  007E6F  65                 	db	101	;'e'
   391  007E70  6E                 	db	110	;'n'
   392  007E71  20                 	db	32
   393  007E72  66                 	db	102	;'f'
   394  007E73  6F                 	db	111	;'o'
   395  007E74  72                 	db	114	;'r'
   396  007E75  6D                 	db	109	;'m'
   397  007E76  61                 	db	97	;'a'
   398  007E77  74                 	db	116	;'t'
   399  007E78  6F                 	db	111	;'o'
   400  007E79  20                 	db	32
   401  007E7A  32                 	db	50	;'2'
   402  007E7B  34                 	db	52	;'4'
   403  007E7C  20                 	db	32
   404  007E7D  45                 	db	69	;'E'
   405  007E7E  6A                 	db	106	;'j'
   406  007E7F  3A                 	db	58	;':'
   407  007E80  20                 	db	32
   408  007E81  31                 	db	49	;'1'
   409  007E82  35                 	db	53	;'5'
   410  007E83  20                 	db	32
   411  007E84  0D                 	db	13
   412  007E85  0A                 	db	10
   413  007E86  00                 	db	0
   414  007E87                     STR_24:
   415  007E87  0D                 	db	13
   416  007E88  0A                 	db	10
   417  007E89  20                 	db	32
   418  007E8A  53                 	db	83	;'S'
   419  007E8B  6F                 	db	111	;'o'
   420  007E8C  6C                 	db	108	;'l'
   421  007E8D  6F                 	db	111	;'o'
   422  007E8E  20                 	db	32
   423  007E8F  73                 	db	115	;'s'
   424  007E90  65                 	db	101	;'e'
   425  007E91  20                 	db	32
   426  007E92  70                 	db	112	;'p'
   427  007E93  65                 	db	101	;'e'
   428  007E94  72                 	db	114	;'r'
   429  007E95  6D                 	db	109	;'m'
   430  007E96  69                 	db	105	;'i'
   431  007E97  74                 	db	116	;'t'
   432  007E98  65                 	db	101	;'e'
   433  007E99  6E                 	db	110	;'n'
   434  007E9A  20                 	db	32
   435  007E9B  6E                 	db	110	;'n'
   436  007E9C  75                 	db	117	;'u'
   437  007E9D  6D                 	db	109	;'m'
   438  007E9E  65                 	db	101	;'e'
   439  007E9F  72                 	db	114	;'r'
   440  007EA0  6F                 	db	111	;'o'
   441  007EA1  73                 	db	115	;'s'
   442  007EA2  20                 	db	32
   443  007EA3  64                 	db	100	;'d'
   444  007EA4  65                 	db	101	;'e'
   445  007EA5  6C                 	db	108	;'l'
   446  007EA6  20                 	db	32
   447  007EA7  31                 	db	49	;'1'
   448  007EA8  20                 	db	32
   449  007EA9  61                 	db	97	;'a'
   450  007EAA  6C                 	db	108	;'l'
   451  007EAB  20                 	db	32
   452  007EAC  33                 	db	51	;'3'
   453  007EAD  20                 	db	32
   454  007EAE  0D                 	db	13
   455  007EAF  0A                 	db	10
   456  007EB0  00                 	db	0
   457  007EB1                     STR_17:
   458  007EB1  0D                 	db	13
   459  007EB2  0A                 	db	10
   460  007EB3  20                 	db	32
   461  007EB4  4D                 	db	77	;'M'
   462  007EB5  69                 	db	105	;'i'
   463  007EB6  6E                 	db	110	;'n'
   464  007EB7  75                 	db	117	;'u'
   465  007EB8  74                 	db	116	;'t'
   466  007EB9  6F                 	db	111	;'o'
   467  007EBA  73                 	db	115	;'s'
   468  007EBB  20                 	db	32
   469  007EBC  64                 	db	100	;'d'
   470  007EBD  65                 	db	101	;'e'
   471  007EBE  20                 	db	32
   472  007EBF  72                 	db	114	;'r'
   473  007EC0  69                 	db	105	;'i'
   474  007EC1  65                 	db	101	;'e'
   475  007EC2  67                 	db	103	;'g'
   476  007EC3  6F                 	db	111	;'o'
   477  007EC4  20                 	db	32
   478  007EC5  65                 	db	101	;'e'
   479  007EC6  73                 	db	115	;'s'
   480  007EC7  74                 	db	116	;'t'
   481  007EC8  61                 	db	97	;'a'
   482  007EC9  62                 	db	98	;'b'
   483  007ECA  6C                 	db	108	;'l'
   484  007ECB  65                 	db	101	;'e'
   485  007ECC  63                 	db	99	;'c'
   486  007ECD  69                 	db	105	;'i'
   487  007ECE  64                 	db	100	;'d'
   488  007ECF  6F                 	db	111	;'o'
   489  007ED0  73                 	db	115	;'s'
   490  007ED1  21                 	db	33
   491  007ED2  20                 	db	32
   492  007ED3  0D                 	db	13
   493  007ED4  0A                 	db	10
   494  007ED5  00                 	db	0
   495  007ED6                     STR_18:
   496  007ED6  0D                 	db	13
   497  007ED7  0A                 	db	10
   498  007ED8  20                 	db	32
   499  007ED9  49                 	db	73	;'I'
   500  007EDA  6E                 	db	110	;'n'
   501  007EDB  67                 	db	103	;'g'
   502  007EDC  72                 	db	114	;'r'
   503  007EDD  65                 	db	101	;'e'
   504  007EDE  73                 	db	115	;'s'
   505  007EDF  61                 	db	97	;'a'
   506  007EE0  20                 	db	32
   507  007EE1  75                 	db	117	;'u'
   508  007EE2  6E                 	db	110	;'n'
   509  007EE3  61                 	db	97	;'a'
   510  007EE4  20                 	db	32
   511  007EE5  6F                 	db	111	;'o'
   512  007EE6  70                 	db	112	;'p'
   513  007EE7  63                 	db	99	;'c'
   514  007EE8  69                 	db	105	;'i'
   515  007EE9  6F                 	db	111	;'o'
   516  007EEA  6E                 	db	110	;'n'
   517  007EEB  20                 	db	32
   518  007EEC  61                 	db	97	;'a'
   519  007EED  20                 	db	32
   520  007EEE  52                 	db	82	;'R'
   521  007EEF  65                 	db	101	;'e'
   522  007EF0  61                 	db	97	;'a'
   523  007EF1  6C                 	db	108	;'l'
   524  007EF2  69                 	db	105	;'i'
   525  007EF3  7A                 	db	122	;'z'
   526  007EF4  61                 	db	97	;'a'
   527  007EF5  72                 	db	114	;'r'
   528  007EF6  3A                 	db	58	;':'
   529  007EF7  20                 	db	32
   530  007EF8  0D                 	db	13
   531  007EF9  0A                 	db	10
   532  007EFA  00                 	db	0
   533  007EFB                     STR_5:
   534  007EFB  0D                 	db	13
   535  007EFC  0A                 	db	10
   536  007EFD  20                 	db	32
   537  007EFE  48                 	db	72	;'H'
   538  007EFF  4F                 	db	79	;'O'
   539  007F00  52                 	db	82	;'R'
   540  007F01  41                 	db	65	;'A'
   541  007F02  20                 	db	32
   542  007F03  45                 	db	69	;'E'
   543  007F04  53                 	db	83	;'S'
   544  007F05  54                 	db	84	;'T'
   545  007F06  41                 	db	65	;'A'
   546  007F07  42                 	db	66	;'B'
   547  007F08  4C                 	db	76	;'L'
   548  007F09  45                 	db	69	;'E'
   549  007F0A  43                 	db	67	;'C'
   550  007F0B  49                 	db	73	;'I'
   551  007F0C  44                 	db	68	;'D'
   552  007F0D  41                 	db	65	;'A'
   553  007F0E  20                 	db	32
   554  007F0F  43                 	db	67	;'C'
   555  007F10  4F                 	db	79	;'O'
   556  007F11  52                 	db	82	;'R'
   557  007F12  52                 	db	82	;'R'
   558  007F13  45                 	db	69	;'E'
   559  007F14  43                 	db	67	;'C'
   560  007F15  54                 	db	84	;'T'
   561  007F16  41                 	db	65	;'A'
   562  007F17  4D                 	db	77	;'M'
   563  007F18  45                 	db	69	;'E'
   564  007F19  4E                 	db	78	;'N'
   565  007F1A  54                 	db	84	;'T'
   566  007F1B  45                 	db	69	;'E'
   567  007F1C  20                 	db	32
   568  007F1D  0D                 	db	13
   569  007F1E  0A                 	db	10
   570  007F1F  00                 	db	0
   571  007F20                     STR_20:
   572  007F20  0D                 	db	13
   573  007F21  0A                 	db	10
   574  007F22  20                 	db	32
   575  007F23  32                 	db	50	;'2'
   576  007F24  2E                 	db	46
   577  007F25  20                 	db	32
   578  007F26  41                 	db	65	;'A'
   579  007F27  73                 	db	115	;'s'
   580  007F28  69                 	db	105	;'i'
   581  007F29  67                 	db	103	;'g'
   582  007F2A  6E                 	db	110	;'n'
   583  007F2B  61                 	db	97	;'a'
   584  007F2C  72                 	db	114	;'r'
   585  007F2D  20                 	db	32
   586  007F2E  48                 	db	72	;'H'
   587  007F2F  6F                 	db	111	;'o'
   588  007F30  72                 	db	114	;'r'
   589  007F31  61                 	db	97	;'a'
   590  007F32  72                 	db	114	;'r'
   591  007F33  69                 	db	105	;'i'
   592  007F34  6F                 	db	111	;'o'
   593  007F35  73                 	db	115	;'s'
   594  007F36  20                 	db	32
   595  007F37  70                 	db	112	;'p'
   596  007F38  61                 	db	97	;'a'
   597  007F39  72                 	db	114	;'r'
   598  007F3A  61                 	db	97	;'a'
   599  007F3B  20                 	db	32
   600  007F3C  72                 	db	114	;'r'
   601  007F3D  65                 	db	101	;'e'
   602  007F3E  67                 	db	103	;'g'
   603  007F3F  61                 	db	97	;'a'
   604  007F40  72                 	db	114	;'r'
   605  007F41  20                 	db	32
   606  007F42  0D                 	db	13
   607  007F43  0A                 	db	10
   608  007F44  00                 	db	0
   609  007F45                     STR_4:
   610  007F45  0D                 	db	13
   611  007F46  0A                 	db	10
   612  007F47  20                 	db	32
   613  007F48  45                 	db	69	;'E'
   614  007F49  6E                 	db	110	;'n'
   615  007F4A  76                 	db	118	;'v'
   616  007F4B  69                 	db	105	;'i'
   617  007F4C  65                 	db	101	;'e'
   618  007F4D  20                 	db	32
   619  007F4E  6C                 	db	108	;'l'
   620  007F4F  6F                 	db	111	;'o'
   621  007F50  73                 	db	115	;'s'
   622  007F51  20                 	db	32
   623  007F52  4D                 	db	77	;'M'
   624  007F53  69                 	db	105	;'i'
   625  007F54  6E                 	db	110	;'n'
   626  007F55  75                 	db	117	;'u'
   627  007F56  74                 	db	116	;'t'
   628  007F57  6F                 	db	111	;'o'
   629  007F58  73                 	db	115	;'s'
   630  007F59  20                 	db	32
   631  007F5A  45                 	db	69	;'E'
   632  007F5B  6A                 	db	106	;'j'
   633  007F5C  3A                 	db	58	;':'
   634  007F5D  20                 	db	32
   635  007F5E  32                 	db	50	;'2'
   636  007F5F  35                 	db	53	;'5'
   637  007F60  20                 	db	32
   638  007F61  0D                 	db	13
   639  007F62  0A                 	db	10
   640  007F63  00                 	db	0
   641  007F64                     STR_19:
   642  007F64  0D                 	db	13
   643  007F65  0A                 	db	10
   644  007F66  20                 	db	32
   645  007F67  31                 	db	49	;'1'
   646  007F68  2E                 	db	46
   647  007F69  20                 	db	32
   648  007F6A  46                 	db	70	;'F'
   649  007F6B  69                 	db	105	;'i'
   650  007F6C  6A                 	db	106	;'j'
   651  007F6D  61                 	db	97	;'a'
   652  007F6E  72                 	db	114	;'r'
   653  007F6F  20                 	db	32
   654  007F70  48                 	db	72	;'H'
   655  007F71  6F                 	db	111	;'o'
   656  007F72  72                 	db	114	;'r'
   657  007F73  61                 	db	97	;'a'
   658  007F74  20                 	db	32
   659  007F75  41                 	db	65	;'A'
   660  007F76  63                 	db	99	;'c'
   661  007F77  74                 	db	116	;'t'
   662  007F78  75                 	db	117	;'u'
   663  007F79  61                 	db	97	;'a'
   664  007F7A  6C                 	db	108	;'l'
   665  007F7B  20                 	db	32
   666  007F7C  0D                 	db	13
   667  007F7D  0A                 	db	10
   668  007F7E  00                 	db	0
   669  007F7F                     STR_10:
   670  007F7F  0D                 	db	13
   671  007F80  0A                 	db	10
   672  007F81  20                 	db	32
   673  007F82  48                 	db	72	;'H'
   674  007F83  6F                 	db	111	;'o'
   675  007F84  72                 	db	114	;'r'
   676  007F85  61                 	db	97	;'a'
   677  007F86  72                 	db	114	;'r'
   678  007F87  69                 	db	105	;'i'
   679  007F88  6F                 	db	111	;'o'
   680  007F89  20                 	db	32
   681  007F8A  4D                 	db	77	;'M'
   682  007F8B  6F                 	db	111	;'o'
   683  007F8C  64                 	db	100	;'d'
   684  007F8D  69                 	db	105	;'i'
   685  007F8E  66                 	db	102	;'f'
   686  007F8F  69                 	db	105	;'i'
   687  007F90  63                 	db	99	;'c'
   688  007F91  61                 	db	97	;'a'
   689  007F92  64                 	db	100	;'d'
   690  007F93  6F                 	db	111	;'o'
   691  007F94  21                 	db	33
   692  007F95  20                 	db	32
   693  007F96  0D                 	db	13
   694  007F97  0A                 	db	10
   695  007F98  00                 	db	0
   696  007F99                     STR_6:
   697  007F99  0D                 	db	13
   698  007F9A  0A                 	db	10
   699  007F9B  20                 	db	32
   700  007F9C  4F                 	db	79	;'O'
   701  007F9D  50                 	db	80	;'P'
   702  007F9E  43                 	db	67	;'C'
   703  007F9F  49                 	db	73	;'I'
   704  007FA0  4F                 	db	79	;'O'
   705  007FA1  4E                 	db	78	;'N'
   706  007FA2  45                 	db	69	;'E'
   707  007FA3  53                 	db	83	;'S'
   708  007FA4  20                 	db	32
   709  007FA5  44                 	db	68	;'D'
   710  007FA6  45                 	db	69	;'E'
   711  007FA7  20                 	db	32
   712  007FA8  52                 	db	82	;'R'
   713  007FA9  45                 	db	69	;'E'
   714  007FAA  47                 	db	71	;'G'
   715  007FAB  41                 	db	65	;'A'
   716  007FAC  44                 	db	68	;'D'
   717  007FAD  4F                 	db	79	;'O'
   718  007FAE  20                 	db	32
   719  007FAF  0D                 	db	13
   720  007FB0  0A                 	db	10
   721  007FB1  00                 	db	0
   722  007FB2                     STR_12:
   723  007FB2  0D                 	db	13
   724  007FB3  0A                 	db	10
   725  007FB4  20                 	db	32
   726  007FB5  54                 	db	84	;'T'
   727  007FB6  49                 	db	73	;'I'
   728  007FB7  45                 	db	69	;'E'
   729  007FB8  4D                 	db	77	;'M'
   730  007FB9  50                 	db	80	;'P'
   731  007FBA  4F                 	db	79	;'O'
   732  007FBB  20                 	db	32
   733  007FBC  44                 	db	68	;'D'
   734  007FBD  45                 	db	69	;'E'
   735  007FBE  20                 	db	32
   736  007FBF  52                 	db	82	;'R'
   737  007FC0  45                 	db	69	;'E'
   738  007FC1  47                 	db	71	;'G'
   739  007FC2  41                 	db	65	;'A'
   740  007FC3  44                 	db	68	;'D'
   741  007FC4  4F                 	db	79	;'O'
   742  007FC5  20                 	db	32
   743  007FC6  0D                 	db	13
   744  007FC7  0A                 	db	10
   745  007FC8  00                 	db	0
   746  007FC9                     STR_1:
   747  007FC9  0D                 	db	13
   748  007FCA  0A                 	db	10
   749  007FCB  20                 	db	32
   750  007FCC  44                 	db	68	;'D'
   751  007FCD  41                 	db	65	;'A'
   752  007FCE  54                 	db	84	;'T'
   753  007FCF  4F                 	db	79	;'O'
   754  007FD0  20                 	db	32
   755  007FD1  4E                 	db	78	;'N'
   756  007FD2  4F                 	db	79	;'O'
   757  007FD3  20                 	db	32
   758  007FD4  52                 	db	82	;'R'
   759  007FD5  45                 	db	69	;'E'
   760  007FD6  43                 	db	67	;'C'
   761  007FD7  49                 	db	73	;'I'
   762  007FD8  42                 	db	66	;'B'
   763  007FD9  49                 	db	73	;'I'
   764  007FDA  44                 	db	68	;'D'
   765  007FDB  4F                 	db	79	;'O'
   766  007FDC  20                 	db	32
   767  007FDD  0D                 	db	13
   768  007FDE  0A                 	db	10
   769  007FDF  00                 	db	0
   770  007FE0                     STR_2:
   771  007FE0  0D                 	db	13
   772  007FE1  0A                 	db	10
   773  007FE2  20                 	db	32
   774  007FE3  46                 	db	70	;'F'
   775  007FE4  49                 	db	73	;'I'
   776  007FE5  4A                 	db	74	;'J'
   777  007FE6  41                 	db	65	;'A'
   778  007FE7  20                 	db	32
   779  007FE8  48                 	db	72	;'H'
   780  007FE9  4F                 	db	79	;'O'
   781  007FEA  52                 	db	82	;'R'
   782  007FEB  41                 	db	65	;'A'
   783  007FEC  20                 	db	32
   784  007FED  0D                 	db	13
   785  007FEE  0A                 	db	10
   786  007FEF  00                 	db	0
   787  007FF0                     STR_22:
   788  007FF0  0D                 	db	13
   789  007FF1  0A                 	db	10
   790  007FF2  20                 	db	32
   791  007FF3  4F                 	db	79	;'O'
   792  007FF4  70                 	db	112	;'p'
   793  007FF5  63                 	db	99	;'c'
   794  007FF6  69                 	db	105	;'i'
   795  007FF7  6F                 	db	111	;'o'
   796  007FF8  6E                 	db	110	;'n'
   797  007FF9  3A                 	db	58	;':'
   798  007FFA  20                 	db	32
   799  007FFB  20                 	db	32
   800  007FFC  0D                 	db	13
   801  007FFD  00                 	db	0
   802  0000                     
   803                           ; #config settings
   804  007FFE  00                 	db	0	; dummy byte at the end
   805  0000                     
   806                           	psect	cinit
   807  000D86                     __pcinit:
   808                           	opt callstack 0
   809  000D86                     start_initialization:
   810                           	opt callstack 0
   811  000D86                     __initialization:
   812                           	opt callstack 0
   813                           
   814                           ; Initialize objects allocated to COMRAM (5 bytes)
   815                           ; load TBLPTR registers with __pidataCOMRAM
   816  000D86  0E50               	movlw	low __pidataCOMRAM
   817  000D88  6EF6               	movwf	tblptrl,c
   818  000D8A  0E10               	movlw	high __pidataCOMRAM
   819  000D8C  6EF7               	movwf	tblptrh,c
   820  000D8E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   821  000D90  6EF8               	movwf	tblptru,c
   822  000D92  EE00  F037         	lfsr	0,__pdataCOMRAM
   823  000D96  EE10 F005          	lfsr	1,5
   824  000D9A                     copy_data0:
   825  000D9A  0009               	tblrd		*+
   826  000D9C  CFF5 FFEE          	movff	tablat,postinc0
   827  000DA0  50E5               	movf	postdec1,w,c
   828  000DA2  50E1               	movf	fsr1l,w,c
   829  000DA4  E1FA               	bnz	copy_data0
   830                           
   831                           ; Clear objects allocated to BANK0 (72 bytes)
   832  000DA6  EE00  F060         	lfsr	0,__pbssBANK0
   833  000DAA  0E48               	movlw	72
   834  000DAC                     clear_0:
   835  000DAC  6AEE               	clrf	postinc0,c
   836  000DAE  06E8               	decf	wreg,f,c
   837  000DB0  E1FD               	bnz	clear_0
   838                           
   839                           ; Clear objects allocated to COMRAM (28 bytes)
   840  000DB2  EE00  F001         	lfsr	0,__pbssCOMRAM
   841  000DB6  0E1C               	movlw	28
   842  000DB8                     clear_1:
   843  000DB8  6AEE               	clrf	postinc0,c
   844  000DBA  06E8               	decf	wreg,f,c
   845  000DBC  E1FD               	bnz	clear_1
   846  000DBE                     end_of_initialization:
   847                           	opt callstack 0
   848  000DBE                     __end_of__initialization:
   849                           	opt callstack 0
   850  000DBE  903C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   851  000DC0  923C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   852  000DC2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   853  000DC4  6EF8               	movwf	tblptru,c
   854  000DC6  0100               	movlb	0
   855  000DC8  EF17  F005         	goto	_main	;jump to C main() function
   856                           
   857                           	psect	bssCOMRAM
   858  000001                     __pbssCOMRAM:
   859                           	opt callstack 0
   860  000001                     _sensores:
   861                           	opt callstack 0
   862  000001                     	ds	16
   863  000011                     _contInterrupciones:
   864                           	opt callstack 0
   865  000011                     	ds	2
   866  000013                     _regando:
   867                           	opt callstack 0
   868  000013                     	ds	1
   869  000014                     _minutosTranscurridos:
   870                           	opt callstack 0
   871  000014                     	ds	1
   872  000015                     _minutosRegar:
   873                           	opt callstack 0
   874  000015                     	ds	1
   875  000016                     _overflowTimer:
   876                           	opt callstack 0
   877  000016                     	ds	1
   878  000017                     _datoRecibido:
   879                           	opt callstack 0
   880  000017                     	ds	1
   881  000018                     _segundos:
   882                           	opt callstack 0
   883  000018                     	ds	1
   884  000019                     _minutos:
   885                           	opt callstack 0
   886  000019                     	ds	1
   887  00001A                     _hora:
   888                           	opt callstack 0
   889  00001A                     	ds	1
   890  00001B                     _esperaDatoConcluida:
   891                           	opt callstack 0
   892  00001B                     	ds	1
   893  00001C                     _byteUart:
   894                           	opt callstack 0
   895  00001C                     	ds	1
   896                           
   897                           	psect	dataCOMRAM
   898  000037                     __pdataCOMRAM:
   899                           	opt callstack 0
   900  000037                     _VALOR_TIMER0:
   901                           	opt callstack 0
   902  000037                     	ds	2
   903  000039                     _VALOR_TIMER0UART:
   904                           	opt callstack 0
   905  000039                     	ds	2
   906  00003B                     _esperandoDatos:
   907                           	opt callstack 0
   908  00003B                     	ds	1
   909                           
   910                           	psect	bssBANK0
   911  000060                     __pbssBANK0:
   912                           	opt callstack 0
   913  000060                     _horarios:
   914                           	opt callstack 0
   915  000060                     	ds	72
   916                           
   917                           	psect	cstackCOMRAM
   918  00001D                     __pcstackCOMRAM:
   919                           	opt callstack 0
   920  00001D                     ??_i2c_espera:
   921  00001D                     ??_convertirDato:
   922  00001D                     ??_dameHumedadSuelo:
   923  00001D                     ?_estaSeco:
   924                           	opt callstack 0
   925  00001D                     ?_horaRegar:
   926                           	opt callstack 0
   927  00001D                     ?___wmul:
   928                           	opt callstack 0
   929  00001D                     ?___aldiv:
   930                           	opt callstack 0
   931  00001D                     UART_write@dato:
   932                           	opt callstack 0
   933  00001D                     constructorSensor@s:
   934                           	opt callstack 0
   935  00001D                     estaSeco@s:
   936                           	opt callstack 0
   937  00001D                     ___wmul@multiplier:
   938                           	opt callstack 0
   939  00001D                     ___aldiv@dividend:
   940                           	opt callstack 0
   941                           
   942                           ; 4 bytes @ 0x0
   943  00001D                     	ds	1
   944  00001E                     i2c_envia_dato@dato:
   945                           	opt callstack 0
   946  00001E                     i2c_recibe_dato@datoleido:
   947                           	opt callstack 0
   948  00001E                     convertirDato@dato:
   949                           	opt callstack 0
   950  00001E                     dameHumedadSuelo@canalLeer:
   951                           	opt callstack 0
   952  00001E                     UART_printf@cadena:
   953                           	opt callstack 0
   954                           
   955                           ; 2 bytes @ 0x1
   956  00001E                     	ds	1
   957  00001F                     ??_encenderBombas:
   958  00001F                     ??_lecturaAnalogaSensores:
   959  00001F                     escribe_rtc@dato:
   960                           	opt callstack 0
   961  00001F                     leer_rtc@direccion:
   962                           	opt callstack 0
   963  00001F                     convertirDato@datoR:
   964                           	opt callstack 0
   965  00001F                     constructorSensor@humedad:
   966                           	opt callstack 0
   967  00001F                     leer_eeprom@direccion:
   968                           	opt callstack 0
   969  00001F                     ___wmul@multiplicand:
   970                           	opt callstack 0
   971                           
   972                           ; 2 bytes @ 0x2
   973  00001F                     	ds	1
   974  000020                     escribe_rtc@direccion:
   975                           	opt callstack 0
   976  000020                     leer_rtc@dato:
   977                           	opt callstack 0
   978  000020                     constructorSensor@pin:
   979                           	opt callstack 0
   980  000020                     lecturaAnalogaSensores@i:
   981                           	opt callstack 0
   982                           
   983                           ; 2 bytes @ 0x3
   984  000020                     	ds	1
   985  000021                     ??_setRtc:
   986  000021                     ??_leer_eeprom:
   987  000021                     encenderBombas@flagSeco:
   988                           	opt callstack 0
   989  000021                     restablecerDatosSensor@i:
   990                           	opt callstack 0
   991  000021                     ___wmul@product:
   992                           	opt callstack 0
   993  000021                     ___aldiv@divisor:
   994                           	opt callstack 0
   995                           
   996                           ; 4 bytes @ 0x4
   997  000021                     	ds	1
   998  000022                     setRtc@direccion:
   999                           	opt callstack 0
  1000  000022                     leer_eeprom@dato:
  1001                           	opt callstack 0
  1002  000022                     encenderBombas@i:
  1003                           	opt callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x5
  1006  000022                     	ds	1
  1007  000023                     setRtc@dato:
  1008                           	opt callstack 0
  1009  000023                     inicializarObjetos@i:
  1010                           	opt callstack 0
  1011  000023                     escribe_eeprom@direccion:
  1012                           	opt callstack 0
  1013  000023                     leeHorariosMemoria@contMemoria:
  1014                           	opt callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x6
  1017  000023                     	ds	1
  1018  000024                     setRtc@datoCapturado:
  1019                           	opt callstack 0
  1020                           
  1021                           ; 1 bytes @ 0x7
  1022  000024                     	ds	1
  1023  000025                     escribe_eeprom@dato:
  1024                           	opt callstack 0
  1025  000025                     ___aldiv@counter:
  1026                           	opt callstack 0
  1027  000025                     setRtc@i:
  1028                           	opt callstack 0
  1029  000025                     leeHorariosMemoria@i:
  1030                           	opt callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x8
  1033  000025                     	ds	1
  1034  000026                     ??_escribe_eeprom:
  1035  000026                     ___aldiv@sign:
  1036                           	opt callstack 0
  1037                           
  1038                           ; 1 bytes @ 0x9
  1039  000026                     	ds	1
  1040  000027                     setRtc@Rx:
  1041                           	opt callstack 0
  1042  000027                     escribeHorariosMemoria@contMemoria:
  1043                           	opt callstack 0
  1044  000027                     ___aldiv@quotient:
  1045                           	opt callstack 0
  1046                           
  1047                           ; 4 bytes @ 0xA
  1048  000027                     	ds	1
  1049  000028                     
  1050                           ; 1 bytes @ 0xB
  1051  000028                     	ds	1
  1052  000029                     escribeHorariosMemoria@i:
  1053                           	opt callstack 0
  1054                           
  1055                           ; 2 bytes @ 0xC
  1056  000029                     	ds	2
  1057  00002B                     asignarHorarios@hora:
  1058                           	opt callstack 0
  1059  00002B                     setTiempoRegar@tiempoRegar:
  1060                           	opt callstack 0
  1061  00002B                     UART_init@BAUD:
  1062                           	opt callstack 0
  1063                           
  1064                           ; 4 bytes @ 0xE
  1065  00002B                     	ds	1
  1066  00002C                     asignarHorarios@datoCapturado:
  1067                           	opt callstack 0
  1068  00002C                     setTiempoRegar@hora:
  1069                           	opt callstack 0
  1070                           
  1071                           ; 1 bytes @ 0xF
  1072  00002C                     	ds	1
  1073  00002D                     asignarHorarios@i:
  1074                           	opt callstack 0
  1075  00002D                     setTiempoRegar@i:
  1076                           	opt callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x10
  1079  00002D                     	ds	2
  1080  00002F                     asignarHorarios@Rx:
  1081                           	opt callstack 0
  1082  00002F                     setTiempoRegar@i_705:
  1083                           	opt callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x12
  1086  00002F                     	ds	2
  1087  000031                     setTiempoRegar@datoCapturado:
  1088                           	opt callstack 0
  1089                           
  1090                           ; 1 bytes @ 0x14
  1091  000031                     	ds	1
  1092  000032                     setTiempoRegar@Rx:
  1093                           	opt callstack 0
  1094                           
  1095                           ; 1 bytes @ 0x15
  1096  000032                     	ds	1
  1097  000033                     ??_sistemaPrincipal:
  1098  000033                     _UART_init$1471:
  1099                           	opt callstack 0
  1100                           
  1101                           ; 4 bytes @ 0x16
  1102  000033                     	ds	2
  1103  000035                     sistemaPrincipal@opcion:
  1104                           	opt callstack 0
  1105                           
  1106                           ; 1 bytes @ 0x18
  1107  000035                     	ds	2
  1108  000037                     
  1109                           ; 1 bytes @ 0x1A
  1110 ;;
  1111 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1112 ;;
  1113 ;; *************** function _main *****************
  1114 ;; Defined at:
  1115 ;;		line 567 in file "main.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;		None
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;		None
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  1    wreg      void 
  1122 ;; Registers used:
  1123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1129 ;;      Params:         0       0       0       0       0       0       0       0       0
  1130 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1131 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1132 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1133 ;;Total ram usage:        0 bytes
  1134 ;; Hardware stack levels required when called:    7
  1135 ;; This function calls:
  1136 ;;		_UART_init
  1137 ;;		_configurarAdc
  1138 ;;		_i2c_iniciar
  1139 ;;		_inicializarObjetos
  1140 ;;		_leeHorariosMemoria
  1141 ;;		_mostrarMenu
  1142 ;;		_restablecerDatosSensor
  1143 ;;		_sistemaPrincipal
  1144 ;;		_sistemaRegado
  1145 ;; This function is called by:
  1146 ;;		Startup code after reset
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           	psect	text0
  1151  000A2E                     __ptext0:
  1152                           	opt callstack 0
  1153  000A2E                     _main:
  1154                           	opt callstack 24
  1155  000A2E                     
  1156                           ;main.c: 569:     INTCONbits.GIE = 1;
  1157  000A2E  8EF2               	bsf	242,7,c	;volatile
  1158                           
  1159                           ;main.c: 570:     INTCONbits.PEIE = 1;
  1160  000A30  8CF2               	bsf	242,6,c	;volatile
  1161                           
  1162                           ;main.c: 571:     INTCONbits.TMR0IE = 0;
  1163  000A32  9AF2               	bcf	242,5,c	;volatile
  1164                           
  1165                           ;main.c: 572:     INTCONbits.TMR0IF = 0;
  1166  000A34  94F2               	bcf	242,2,c	;volatile
  1167                           
  1168                           ;main.c: 573:     PIE1bits.RCIE = 1;
  1169  000A36  8A9D               	bsf	157,5,c	;volatile
  1170  000A38                     
  1171                           ;main.c: 575:     T0CON = 0b00000111;
  1172  000A38  0E07               	movlw	7
  1173  000A3A  6ED5               	movwf	213,c	;volatile
  1174  000A3C                     
  1175                           ;main.c: 577:     INTCONbits.TMR0IE = 1;
  1176  000A3C  8AF2               	bsf	242,5,c	;volatile
  1177  000A3E                     
  1178                           ;main.c: 582:     restablecerDatosSensor();
  1179  000A3E  EC29  F006         	call	_restablecerDatosSensor	;wreg free
  1180  000A42                     
  1181                           ;main.c: 584:     UART_init(9600);
  1182  000A42  0E80               	movlw	128
  1183  000A44  6E2B               	movwf	UART_init@BAUD^0,c
  1184  000A46  0E25               	movlw	37
  1185  000A48  6E2C               	movwf	(UART_init@BAUD+1)^0,c
  1186  000A4A  0E00               	movlw	0
  1187  000A4C  6E2D               	movwf	(UART_init@BAUD+2)^0,c
  1188  000A4E  0E00               	movlw	0
  1189  000A50  6E2E               	movwf	(UART_init@BAUD+3)^0,c
  1190  000A52  EC5E  F005         	call	_UART_init	;wreg free
  1191  000A56                     
  1192                           ;main.c: 585:     i2c_iniciar();
  1193  000A56  EC06  F008         	call	_i2c_iniciar	;wreg free
  1194  000A5A                     
  1195                           ;main.c: 586:     configurarAdc();
  1196  000A5A  ECEE  F007         	call	_configurarAdc	;wreg free
  1197  000A5E                     
  1198                           ;main.c: 587:     inicializarObjetos();
  1199  000A5E  ECCC  F004         	call	_inicializarObjetos	;wreg free
  1200  000A62                     
  1201                           ;main.c: 589:     leeHorariosMemoria();
  1202  000A62  EC1A  F004         	call	_leeHorariosMemoria	;wreg free
  1203  000A66                     
  1204                           ;main.c: 592:     TRISD = 0;
  1205  000A66  0E00               	movlw	0
  1206  000A68  6E95               	movwf	149,c	;volatile
  1207  000A6A                     
  1208                           ;main.c: 593:     LATD = 0;
  1209  000A6A  0E00               	movlw	0
  1210  000A6C  6E8C               	movwf	140,c	;volatile
  1211  000A6E                     
  1212                           ;main.c: 595:     TMR0 = VALOR_TIMER0;
  1213  000A6E  C037  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  1214  000A72  C038  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  1215  000A76                     
  1216                           ;main.c: 597:     INTCONbits.TMR0IF = 1;
  1217  000A76  84F2               	bsf	242,2,c	;volatile
  1218  000A78                     
  1219                           ;main.c: 599:     T0CONbits.TMR0ON = 1;
  1220  000A78  8ED5               	bsf	213,7,c	;volatile
  1221  000A7A                     
  1222                           ;main.c: 601:     mostrarMenu();
  1223  000A7A  EC9E  F006         	call	_mostrarMenu	;wreg free
  1224  000A7E                     l2354:
  1225                           
  1226                           ;main.c: 605:         if (datoRecibido) {
  1227  000A7E  5017               	movf	_datoRecibido^0,w,c
  1228  000A80  B4D8               	btfsc	status,2,c
  1229  000A82  EF45  F005         	goto	u1441
  1230  000A86  EF47  F005         	goto	u1440
  1231  000A8A                     u1441:
  1232  000A8A  EF4E  F005         	goto	l2362
  1233  000A8E                     u1440:
  1234  000A8E                     
  1235                           ;main.c: 607:             datoRecibido = 0;
  1236  000A8E  0E00               	movlw	0
  1237  000A90  6E17               	movwf	_datoRecibido^0,c
  1238  000A92                     
  1239                           ;main.c: 609:             byteUart -= 48;
  1240  000A92  0E30               	movlw	48
  1241  000A94  5E1C               	subwf	_byteUart^0,f,c
  1242  000A96                     
  1243                           ;main.c: 611:             sistemaPrincipal(byteUart);
  1244  000A96  501C               	movf	_byteUart^0,w,c
  1245  000A98  EC96  F005         	call	_sistemaPrincipal
  1246  000A9C                     l2362:
  1247                           
  1248                           ;main.c: 615:         if (overflowTimer) {
  1249  000A9C  5016               	movf	_overflowTimer^0,w,c
  1250  000A9E  B4D8               	btfsc	status,2,c
  1251  000AA0  EF54  F005         	goto	u1451
  1252  000AA4  EF56  F005         	goto	u1450
  1253  000AA8                     u1451:
  1254  000AA8  EF3F  F005         	goto	l2354
  1255  000AAC                     u1450:
  1256  000AAC                     
  1257                           ;main.c: 617:             overflowTimer = 0;
  1258  000AAC  0E00               	movlw	0
  1259  000AAE  6E16               	movwf	_overflowTimer^0,c
  1260  000AB0                     
  1261                           ;main.c: 618:             sistemaRegado();
  1262  000AB0  EC7E  F004         	call	_sistemaRegado	;wreg free
  1263  000AB4  EF3F  F005         	goto	l2354
  1264  000AB8  EF07  F000         	goto	start
  1265  000ABC                     __end_of_main:
  1266                           	opt callstack 0
  1267                           
  1268 ;; *************** function _sistemaRegado *****************
  1269 ;; Defined at:
  1270 ;;		line 529 in file "main.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;		None
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;		None
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      void 
  1277 ;; Registers used:
  1278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1284 ;;      Params:         0       0       0       0       0       0       0       0       0
  1285 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1286 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1287 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1288 ;;Total ram usage:        0 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; Hardware stack levels required when called:    5
  1291 ;; This function calls:
  1292 ;;		_dameHoraActual
  1293 ;;		_encenderBombas
  1294 ;;		_horaRegar
  1295 ;;		_lecturaAnalogaSensores
  1296 ;; This function is called by:
  1297 ;;		_main
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           	psect	text1
  1302  0008FC                     __ptext1:
  1303                           	opt callstack 0
  1304  0008FC                     _sistemaRegado:
  1305                           	opt callstack 25
  1306  0008FC                     
  1307                           ;main.c: 533:     if (regando) {
  1308  0008FC  5013               	movf	_regando^0,w,c
  1309  0008FE  B4D8               	btfsc	status,2,c
  1310  000900  EF84  F004         	goto	u1371
  1311  000904  EF86  F004         	goto	u1370
  1312  000908                     u1371:
  1313  000908  EFA8  F004         	goto	l2280
  1314  00090C                     u1370:
  1315  00090C                     
  1316                           ;main.c: 534:         contInterrupciones++;
  1317  00090C  4A11               	infsnz	_contInterrupciones^0,f,c
  1318  00090E  2A12               	incf	(_contInterrupciones+1)^0,f,c
  1319  000910                     
  1320                           ;main.c: 536:         if (contInterrupciones == 6) {
  1321  000910  0E06               	movlw	6
  1322  000912  1811               	xorwf	_contInterrupciones^0,w,c
  1323  000914  1012               	iorwf	(_contInterrupciones+1)^0,w,c
  1324  000916  A4D8               	btfss	status,2,c
  1325  000918  EF90  F004         	goto	u1381
  1326  00091C  EF92  F004         	goto	u1380
  1327  000920                     u1381:
  1328  000920  EFCB  F004         	goto	l314
  1329  000924                     u1380:
  1330  000924                     
  1331                           ;main.c: 537:             contInterrupciones = 0;
  1332  000924  0E00               	movlw	0
  1333  000926  6E12               	movwf	(_contInterrupciones+1)^0,c
  1334  000928  0E00               	movlw	0
  1335  00092A  6E11               	movwf	_contInterrupciones^0,c
  1336  00092C                     
  1337                           ;main.c: 538:             minutosTranscurridos++;
  1338  00092C  2A14               	incf	_minutosTranscurridos^0,f,c
  1339  00092E                     
  1340                           ;main.c: 541:             if (minutosTranscurridos >= minutosRegar) {
  1341  00092E  5015               	movf	_minutosRegar^0,w,c
  1342  000930  5C14               	subwf	_minutosTranscurridos^0,w,c
  1343  000932  A0D8               	btfss	status,0,c
  1344  000934  EF9E  F004         	goto	u1391
  1345  000938  EFA0  F004         	goto	u1390
  1346  00093C                     u1391:
  1347  00093C  EFCB  F004         	goto	l314
  1348  000940                     u1390:
  1349  000940                     
  1350                           ;main.c: 543:                 LATD = 0;
  1351  000940  0E00               	movlw	0
  1352  000942  6E8C               	movwf	140,c	;volatile
  1353                           
  1354                           ;main.c: 544:                 minutosTranscurridos = 0;
  1355  000944  0E00               	movlw	0
  1356  000946  6E14               	movwf	_minutosTranscurridos^0,c
  1357                           
  1358                           ;main.c: 545:                 regando = 0;
  1359  000948  0E00               	movlw	0
  1360  00094A  6E13               	movwf	_regando^0,c
  1361  00094C  EFCB  F004         	goto	l314
  1362  000950                     l2280:
  1363                           
  1364                           ;main.c: 551:         dameHoraActual();
  1365  000950  EC7C  F007         	call	_dameHoraActual	;wreg free
  1366  000954                     
  1367                           ;main.c: 553:         if (horaRegar() && !minutos) {
  1368  000954  EC52  F007         	call	_horaRegar	;wreg free
  1369  000958  501D               	movf	?_horaRegar^0,w,c
  1370  00095A  101E               	iorwf	(?_horaRegar+1)^0,w,c
  1371  00095C  B4D8               	btfsc	status,2,c
  1372  00095E  EFB3  F004         	goto	u1401
  1373  000962  EFB5  F004         	goto	u1400
  1374  000966                     u1401:
  1375  000966  EFCB  F004         	goto	l314
  1376  00096A                     u1400:
  1377  00096A  5019               	movf	_minutos^0,w,c
  1378  00096C  A4D8               	btfss	status,2,c
  1379  00096E  EFBB  F004         	goto	u1411
  1380  000972  EFBD  F004         	goto	u1410
  1381  000976                     u1411:
  1382  000976  EFCB  F004         	goto	l314
  1383  00097A                     u1410:
  1384  00097A                     
  1385                           ;main.c: 558:             lecturaAnalogaSensores();
  1386  00097A  ECFF  F005         	call	_lecturaAnalogaSensores	;wreg free
  1387  00097E                     
  1388                           ;main.c: 560:             minutosRegar = horarios[hora].tiempoRegar;
  1389  00097E  501A               	movf	_hora^0,w,c
  1390  000980  0D03               	mullw	3
  1391  000982  0E62               	movlw	low (_horarios+2)
  1392  000984  24F3               	addwf	243,w,c
  1393  000986  6ED9               	movwf	fsr2l,c
  1394  000988  0E00               	movlw	high (_horarios+2)
  1395  00098A  20F4               	addwfc	prodh,w,c
  1396  00098C  6EDA               	movwf	fsr2h,c
  1397  00098E  50DF               	movf	indf2,w,c
  1398  000990  6E15               	movwf	_minutosRegar^0,c
  1399  000992                     
  1400                           ;main.c: 561:             encenderBombas();
  1401  000992  EC09  F000         	call	_encenderBombas	;wreg free
  1402  000996                     l314:
  1403  000996  0012               	return		;funcret
  1404  000998                     __end_of_sistemaRegado:
  1405                           	opt callstack 0
  1406                           
  1407 ;; *************** function _lecturaAnalogaSensores *****************
  1408 ;; Defined at:
  1409 ;;		line 481 in file "main.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;		None
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;  i               2    3[COMRAM] int 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1423 ;;      Params:         0       0       0       0       0       0       0       0       0
  1424 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1425 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1426 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1427 ;;Total ram usage:        3 bytes
  1428 ;; Hardware stack levels used:    1
  1429 ;; Hardware stack levels required when called:    2
  1430 ;; This function calls:
  1431 ;;		_dameHumedadSuelo
  1432 ;; This function is called by:
  1433 ;;		_sistemaRegado
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           	psect	text2
  1438  000BFE                     __ptext2:
  1439                           	opt callstack 0
  1440  000BFE                     _lecturaAnalogaSensores:
  1441                           	opt callstack 27
  1442  000BFE                     
  1443                           ;main.c: 483:     for (int i = 0; i < 3; i++) {
  1444  000BFE  0E00               	movlw	0
  1445  000C00  6E21               	movwf	(lecturaAnalogaSensores@i+1)^0,c
  1446  000C02  0E00               	movlw	0
  1447  000C04  6E20               	movwf	lecturaAnalogaSensores@i^0,c
  1448  000C06                     l2122:
  1449                           
  1450                           ;main.c: 484:         sensores[i].humedadMedida = dameHumedadSuelo(i);
  1451  000C06  90D8               	bcf	status,0,c
  1452  000C08  3420               	rlcf	lecturaAnalogaSensores@i^0,w,c
  1453  000C0A  6ED9               	movwf	fsr2l,c
  1454  000C0C  3421               	rlcf	(lecturaAnalogaSensores@i+1)^0,w,c
  1455  000C0E  6EDA               	movwf	fsr2h,c
  1456  000C10  0E01               	movlw	low _sensores
  1457  000C12  26D9               	addwf	fsr2l,f,c
  1458  000C14  0E00               	movlw	high _sensores
  1459  000C16  22DA               	addwfc	fsr2h,f,c
  1460  000C18  5020               	movf	lecturaAnalogaSensores@i^0,w,c
  1461  000C1A  EC04  F007         	call	_dameHumedadSuelo
  1462  000C1E  6EDF               	movwf	indf2,c
  1463  000C20                     
  1464                           ;main.c: 485:         _delay((unsigned long)((5)*(4000000/4000.0)));
  1465  000C20  0E07               	movlw	7
  1466  000C22  6E1F               	movwf	??_lecturaAnalogaSensores^0,c
  1467  000C24  0E7D               	movlw	125
  1468  000C26                     u1467:
  1469  000C26  2EE8               	decfsz	wreg,f,c
  1470  000C28  D7FE               	bra	u1467
  1471  000C2A  2E1F               	decfsz	??_lecturaAnalogaSensores^0,f,c
  1472  000C2C  D7FC               	bra	u1467
  1473  000C2E  F000               	nop	
  1474  000C30                     
  1475                           ;main.c: 486:     }
  1476  000C30  4A20               	infsnz	lecturaAnalogaSensores@i^0,f,c
  1477  000C32  2A21               	incf	(lecturaAnalogaSensores@i+1)^0,f,c
  1478  000C34  BE21               	btfsc	(lecturaAnalogaSensores@i+1)^0,7,c
  1479  000C36  EF26  F006         	goto	u1271
  1480  000C3A  5021               	movf	(lecturaAnalogaSensores@i+1)^0,w,c
  1481  000C3C  E109               	bnz	u1270
  1482  000C3E  0E03               	movlw	3
  1483  000C40  5C20               	subwf	lecturaAnalogaSensores@i^0,w,c
  1484  000C42  A0D8               	btfss	status,0,c
  1485  000C44  EF26  F006         	goto	u1271
  1486  000C48  EF28  F006         	goto	u1270
  1487  000C4C                     u1271:
  1488  000C4C  EF03  F006         	goto	l2122
  1489  000C50                     u1270:
  1490  000C50  0012               	return		;funcret
  1491  000C52                     __end_of_lecturaAnalogaSensores:
  1492                           	opt callstack 0
  1493                           
  1494 ;; *************** function _dameHumedadSuelo *****************
  1495 ;; Defined at:
  1496 ;;		line 440 in file "main.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  canalLeer       1    wreg     unsigned char 
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;  canalLeer       1    1[COMRAM] unsigned char 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  1    wreg      unsigned char 
  1503 ;; Registers used:
  1504 ;;		wreg, status,2, status,0
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1510 ;;      Params:         0       0       0       0       0       0       0       0       0
  1511 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1512 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1513 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1514 ;;Total ram usage:        2 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; Hardware stack levels required when called:    1
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_lecturaAnalogaSensores
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           	psect	text3
  1525  000E08                     __ptext3:
  1526                           	opt callstack 0
  1527  000E08                     _dameHumedadSuelo:
  1528                           	opt callstack 27
  1529                           
  1530                           ;incstack = 0
  1531                           ;dameHumedadSuelo@canalLeer stored from wreg
  1532  000E08  6E1E               	movwf	dameHumedadSuelo@canalLeer^0,c
  1533  000E0A                     
  1534                           ;main.c: 442:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  1535  000E0A  0E06               	movlw	6
  1536  000E0C                     u1477:
  1537  000E0C  2EE8               	decfsz	wreg,f,c
  1538  000E0E  D7FE               	bra	u1477
  1539  000E10  D000               	nop2	
  1540  000E12                     
  1541                           ;main.c: 444:     ADCON0bits.ADON = 1;
  1542  000E12  80C2               	bsf	194,0,c	;volatile
  1543  000E14                     
  1544                           ;main.c: 445:     ADCON0bits.CHS = canalLeer;
  1545  000E14  C01E  F01D         	movff	dameHumedadSuelo@canalLeer,??_dameHumedadSuelo
  1546  000E18  461D               	rlncf	??_dameHumedadSuelo^0,f,c
  1547  000E1A  461D               	rlncf	??_dameHumedadSuelo^0,f,c
  1548  000E1C  50C2               	movf	194,w,c	;volatile
  1549  000E1E  181D               	xorwf	??_dameHumedadSuelo^0,w,c
  1550  000E20  0BC3               	andlw	-61
  1551  000E22  181D               	xorwf	??_dameHumedadSuelo^0,w,c
  1552  000E24  6EC2               	movwf	194,c	;volatile
  1553  000E26                     
  1554                           ;main.c: 446:     ADCON0bits.GO = 1;
  1555  000E26  82C2               	bsf	194,1,c	;volatile
  1556  000E28                     
  1557                           ;main.c: 447:     ADCON0bits.GO_DONE = 1;
  1558  000E28  82C2               	bsf	194,1,c	;volatile
  1559  000E2A                     l274:
  1560  000E2A  B2C2               	btfsc	194,1,c	;volatile
  1561  000E2C  EF1A  F007         	goto	u911
  1562  000E30  EF1C  F007         	goto	u910
  1563  000E34                     u911:
  1564  000E34  EF15  F007         	goto	l274
  1565  000E38                     u910:
  1566  000E38                     
  1567                           ;main.c: 451:     ADCON0bits.ADON = 0;
  1568  000E38  90C2               	bcf	194,0,c	;volatile
  1569  000E3A                     
  1570                           ;main.c: 453:     return (ADRESH << 8) +ADRESL;
  1571  000E3A  50C3               	movf	195,w,c	;volatile
  1572  000E3C  0012               	return		;funcret
  1573  000E3E                     __end_of_dameHumedadSuelo:
  1574                           	opt callstack 0
  1575                           
  1576 ;; *************** function _horaRegar *****************
  1577 ;; Defined at:
  1578 ;;		line 110 in file "main.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;		None
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  2    0[COMRAM] int 
  1585 ;; Registers used:
  1586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1592 ;;      Params:         2       0       0       0       0       0       0       0       0
  1593 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1594 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1595 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1596 ;;Total ram usage:        3 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; Hardware stack levels required when called:    1
  1599 ;; This function calls:
  1600 ;;		Nothing
  1601 ;; This function is called by:
  1602 ;;		_sistemaRegado
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text4
  1607  000EA4                     __ptext4:
  1608                           	opt callstack 0
  1609  000EA4                     _horaRegar:
  1610                           	opt callstack 28
  1611  000EA4                     
  1612                           ;main.c: 112:     return horarios[hora].regar == 1;
  1613  000EA4  501A               	movf	_hora^0,w,c
  1614  000EA6  0D03               	mullw	3
  1615  000EA8  0E61               	movlw	low (_horarios+1)
  1616  000EAA  24F3               	addwf	243,w,c
  1617  000EAC  6ED9               	movwf	fsr2l,c
  1618  000EAE  0E00               	movlw	high (_horarios+1)
  1619  000EB0  20F4               	addwfc	prodh,w,c
  1620  000EB2  6EDA               	movwf	fsr2h,c
  1621  000EB4  04DE               	decf	postinc2,w,c
  1622  000EB6  B4D8               	btfsc	status,2,c
  1623  000EB8  EF60  F007         	goto	u921
  1624  000EBC  EF63  F007         	goto	u920
  1625  000EC0                     u921:
  1626  000EC0  0E01               	movlw	1
  1627  000EC2  EF64  F007         	goto	u930
  1628  000EC6                     u920:
  1629  000EC6  0E00               	movlw	0
  1630  000EC8                     u930:
  1631  000EC8  6E1D               	movwf	?_horaRegar^0,c
  1632  000ECA  6A1E               	clrf	(?_horaRegar+1)^0,c
  1633  000ECC  0012               	return		;funcret
  1634  000ECE                     __end_of_horaRegar:
  1635                           	opt callstack 0
  1636                           
  1637 ;; *************** function _encenderBombas *****************
  1638 ;; Defined at:
  1639 ;;		line 220 in file "main.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;		None
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  i               2    5[COMRAM] int 
  1644 ;;  flagSeco        1    4[COMRAM] unsigned char 
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  1    wreg      void 
  1647 ;; Registers used:
  1648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1654 ;;      Params:         0       0       0       0       0       0       0       0       0
  1655 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1656 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1657 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1658 ;;Total ram usage:        5 bytes
  1659 ;; Hardware stack levels used:    1
  1660 ;; Hardware stack levels required when called:    2
  1661 ;; This function calls:
  1662 ;;		_estaSeco
  1663 ;; This function is called by:
  1664 ;;		_sistemaRegado
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           	psect	text5
  1669  000012                     __ptext5:
  1670                           	opt callstack 0
  1671  000012                     _encenderBombas:
  1672                           	opt callstack 27
  1673  000012                     
  1674                           ;main.c: 222:     char flagSeco = 0;
  1675  000012  0E00               	movlw	0
  1676  000014  6E21               	movwf	encenderBombas@flagSeco^0,c
  1677                           
  1678                           ;main.c: 224:     for (int i = 0; i < 3; i++) {
  1679  000016  0E00               	movlw	0
  1680  000018  6E23               	movwf	(encenderBombas@i+1)^0,c
  1681  00001A  0E00               	movlw	0
  1682  00001C  6E22               	movwf	encenderBombas@i^0,c
  1683  00001E  EFEB  F000         	goto	l1932
  1684  000022                     l1882:
  1685                           
  1686                           ;main.c: 229:                 if (estaSeco(sensores[i])) {
  1687  000022  90D8               	bcf	status,0,c
  1688  000024  3422               	rlcf	encenderBombas@i^0,w,c
  1689  000026  6ED9               	movwf	fsr2l,c
  1690  000028  3423               	rlcf	(encenderBombas@i+1)^0,w,c
  1691  00002A  6EDA               	movwf	fsr2h,c
  1692  00002C  0E01               	movlw	low _sensores
  1693  00002E  26D9               	addwf	fsr2l,f,c
  1694  000030  0E00               	movlw	high _sensores
  1695  000032  22DA               	addwfc	fsr2h,f,c
  1696  000034  CFDE F01D          	movff	postinc2,estaSeco@s
  1697  000038  CFDD F01E          	movff	postdec2,estaSeco@s+1
  1698  00003C  ECD4  F007         	call	_estaSeco	;wreg free
  1699  000040  501D               	movf	?_estaSeco^0,w,c
  1700  000042  101E               	iorwf	(?_estaSeco+1)^0,w,c
  1701  000044  B4D8               	btfsc	status,2,c
  1702  000046  EF27  F000         	goto	u941
  1703  00004A  EF29  F000         	goto	u940
  1704  00004E                     u941:
  1705  00004E  EF19  F001         	goto	l1934
  1706  000052                     u940:
  1707  000052                     
  1708                           ;main.c: 230:                     LATDbits.LATD0 = 1;
  1709  000052  808C               	bsf	140,0,c	;volatile
  1710  000054                     l1886:
  1711                           
  1712                           ;main.c: 231:                     flagSeco = 1;
  1713  000054  0E01               	movlw	1
  1714  000056  6E21               	movwf	encenderBombas@flagSeco^0,c
  1715  000058  EF19  F001         	goto	l1934
  1716  00005C                     l1888:
  1717                           
  1718                           ;main.c: 236:                 if (estaSeco(sensores[i])) {
  1719  00005C  90D8               	bcf	status,0,c
  1720  00005E  3422               	rlcf	encenderBombas@i^0,w,c
  1721  000060  6ED9               	movwf	fsr2l,c
  1722  000062  3423               	rlcf	(encenderBombas@i+1)^0,w,c
  1723  000064  6EDA               	movwf	fsr2h,c
  1724  000066  0E01               	movlw	low _sensores
  1725  000068  26D9               	addwf	fsr2l,f,c
  1726  00006A  0E00               	movlw	high _sensores
  1727  00006C  22DA               	addwfc	fsr2h,f,c
  1728  00006E  CFDE F01D          	movff	postinc2,estaSeco@s
  1729  000072  CFDD F01E          	movff	postdec2,estaSeco@s+1
  1730  000076  ECD4  F007         	call	_estaSeco	;wreg free
  1731  00007A  501D               	movf	?_estaSeco^0,w,c
  1732  00007C  101E               	iorwf	(?_estaSeco+1)^0,w,c
  1733  00007E  B4D8               	btfsc	status,2,c
  1734  000080  EF44  F000         	goto	u951
  1735  000084  EF46  F000         	goto	u950
  1736  000088                     u951:
  1737  000088  EF19  F001         	goto	l1934
  1738  00008C                     u950:
  1739  00008C                     
  1740                           ;main.c: 237:                     LATDbits.LATD1 = 1;
  1741  00008C  828C               	bsf	140,1,c	;volatile
  1742  00008E  EF2A  F000         	goto	l1886
  1743  000092                     l1894:
  1744                           
  1745                           ;main.c: 243:                 if (estaSeco(sensores[i])) {
  1746  000092  90D8               	bcf	status,0,c
  1747  000094  3422               	rlcf	encenderBombas@i^0,w,c
  1748  000096  6ED9               	movwf	fsr2l,c
  1749  000098  3423               	rlcf	(encenderBombas@i+1)^0,w,c
  1750  00009A  6EDA               	movwf	fsr2h,c
  1751  00009C  0E01               	movlw	low _sensores
  1752  00009E  26D9               	addwf	fsr2l,f,c
  1753  0000A0  0E00               	movlw	high _sensores
  1754  0000A2  22DA               	addwfc	fsr2h,f,c
  1755  0000A4  CFDE F01D          	movff	postinc2,estaSeco@s
  1756  0000A8  CFDD F01E          	movff	postdec2,estaSeco@s+1
  1757  0000AC  ECD4  F007         	call	_estaSeco	;wreg free
  1758  0000B0  501D               	movf	?_estaSeco^0,w,c
  1759  0000B2  101E               	iorwf	(?_estaSeco+1)^0,w,c
  1760  0000B4  B4D8               	btfsc	status,2,c
  1761  0000B6  EF5F  F000         	goto	u961
  1762  0000BA  EF61  F000         	goto	u960
  1763  0000BE                     u961:
  1764  0000BE  EF19  F001         	goto	l1934
  1765  0000C2                     u960:
  1766  0000C2                     
  1767                           ;main.c: 244:                     LATDbits.LATD2 = 1;
  1768  0000C2  848C               	bsf	140,2,c	;volatile
  1769  0000C4  EF2A  F000         	goto	l1886
  1770  0000C8                     l1900:
  1771                           
  1772                           ;main.c: 250:                 if (estaSeco(sensores[i])) {
  1773  0000C8  90D8               	bcf	status,0,c
  1774  0000CA  3422               	rlcf	encenderBombas@i^0,w,c
  1775  0000CC  6ED9               	movwf	fsr2l,c
  1776  0000CE  3423               	rlcf	(encenderBombas@i+1)^0,w,c
  1777  0000D0  6EDA               	movwf	fsr2h,c
  1778  0000D2  0E01               	movlw	low _sensores
  1779  0000D4  26D9               	addwf	fsr2l,f,c
  1780  0000D6  0E00               	movlw	high _sensores
  1781  0000D8  22DA               	addwfc	fsr2h,f,c
  1782  0000DA  CFDE F01D          	movff	postinc2,estaSeco@s
  1783  0000DE  CFDD F01E          	movff	postdec2,estaSeco@s+1
  1784  0000E2  ECD4  F007         	call	_estaSeco	;wreg free
  1785  0000E6  501D               	movf	?_estaSeco^0,w,c
  1786  0000E8  101E               	iorwf	(?_estaSeco+1)^0,w,c
  1787  0000EA  B4D8               	btfsc	status,2,c
  1788  0000EC  EF7A  F000         	goto	u971
  1789  0000F0  EF7C  F000         	goto	u970
  1790  0000F4                     u971:
  1791  0000F4  EF19  F001         	goto	l1934
  1792  0000F8                     u970:
  1793  0000F8                     
  1794                           ;main.c: 251:                     LATDbits.LATD3 = 1;
  1795  0000F8  868C               	bsf	140,3,c	;volatile
  1796  0000FA  EF2A  F000         	goto	l1886
  1797  0000FE                     l1906:
  1798                           
  1799                           ;main.c: 257:                 if (estaSeco(sensores[i])) {
  1800  0000FE  90D8               	bcf	status,0,c
  1801  000100  3422               	rlcf	encenderBombas@i^0,w,c
  1802  000102  6ED9               	movwf	fsr2l,c
  1803  000104  3423               	rlcf	(encenderBombas@i+1)^0,w,c
  1804  000106  6EDA               	movwf	fsr2h,c
  1805  000108  0E01               	movlw	low _sensores
  1806  00010A  26D9               	addwf	fsr2l,f,c
  1807  00010C  0E00               	movlw	high _sensores
  1808  00010E  22DA               	addwfc	fsr2h,f,c
  1809  000110  CFDE F01D          	movff	postinc2,estaSeco@s
  1810  000114  CFDD F01E          	movff	postdec2,estaSeco@s+1
  1811  000118  ECD4  F007         	call	_estaSeco	;wreg free
  1812  00011C  501D               	movf	?_estaSeco^0,w,c
  1813  00011E  101E               	iorwf	(?_estaSeco+1)^0,w,c
  1814  000120  B4D8               	btfsc	status,2,c
  1815  000122  EF95  F000         	goto	u981
  1816  000126  EF97  F000         	goto	u980
  1817  00012A                     u981:
  1818  00012A  EF19  F001         	goto	l1934
  1819  00012E                     u980:
  1820  00012E                     
  1821                           ;main.c: 258:                     LATDbits.LATD4 = 1;
  1822  00012E  888C               	bsf	140,4,c	;volatile
  1823  000130  EF2A  F000         	goto	l1886
  1824  000134                     l1912:
  1825                           
  1826                           ;main.c: 264:                 if (estaSeco(sensores[i])) {
  1827  000134  90D8               	bcf	status,0,c
  1828  000136  3422               	rlcf	encenderBombas@i^0,w,c
  1829  000138  6ED9               	movwf	fsr2l,c
  1830  00013A  3423               	rlcf	(encenderBombas@i+1)^0,w,c
  1831  00013C  6EDA               	movwf	fsr2h,c
  1832  00013E  0E01               	movlw	low _sensores
  1833  000140  26D9               	addwf	fsr2l,f,c
  1834  000142  0E00               	movlw	high _sensores
  1835  000144  22DA               	addwfc	fsr2h,f,c
  1836  000146  CFDE F01D          	movff	postinc2,estaSeco@s
  1837  00014A  CFDD F01E          	movff	postdec2,estaSeco@s+1
  1838  00014E  ECD4  F007         	call	_estaSeco	;wreg free
  1839  000152  501D               	movf	?_estaSeco^0,w,c
  1840  000154  101E               	iorwf	(?_estaSeco+1)^0,w,c
  1841  000156  B4D8               	btfsc	status,2,c
  1842  000158  EFB0  F000         	goto	u991
  1843  00015C  EFB2  F000         	goto	u990
  1844  000160                     u991:
  1845  000160  EF19  F001         	goto	l1934
  1846  000164                     u990:
  1847  000164                     
  1848                           ;main.c: 265:                     LATDbits.LATD5 = 1;
  1849  000164  8A8C               	bsf	140,5,c	;volatile
  1850  000166  EF2A  F000         	goto	l1886
  1851  00016A                     l1918:
  1852                           
  1853                           ;main.c: 271:                 if (estaSeco(sensores[i])) {
  1854  00016A  90D8               	bcf	status,0,c
  1855  00016C  3422               	rlcf	encenderBombas@i^0,w,c
  1856  00016E  6ED9               	movwf	fsr2l,c
  1857  000170  3423               	rlcf	(encenderBombas@i+1)^0,w,c
  1858  000172  6EDA               	movwf	fsr2h,c
  1859  000174  0E01               	movlw	low _sensores
  1860  000176  26D9               	addwf	fsr2l,f,c
  1861  000178  0E00               	movlw	high _sensores
  1862  00017A  22DA               	addwfc	fsr2h,f,c
  1863  00017C  CFDE F01D          	movff	postinc2,estaSeco@s
  1864  000180  CFDD F01E          	movff	postdec2,estaSeco@s+1
  1865  000184  ECD4  F007         	call	_estaSeco	;wreg free
  1866  000188  501D               	movf	?_estaSeco^0,w,c
  1867  00018A  101E               	iorwf	(?_estaSeco+1)^0,w,c
  1868  00018C  B4D8               	btfsc	status,2,c
  1869  00018E  EFCB  F000         	goto	u1001
  1870  000192  EFCD  F000         	goto	u1000
  1871  000196                     u1001:
  1872  000196  EF19  F001         	goto	l1934
  1873  00019A                     u1000:
  1874  00019A                     
  1875                           ;main.c: 272:                     LATDbits.LATD6 = 1;
  1876  00019A  8C8C               	bsf	140,6,c	;volatile
  1877  00019C  EF2A  F000         	goto	l1886
  1878  0001A0                     l1924:
  1879                           
  1880                           ;main.c: 278:                 if (estaSeco(sensores[i])) {
  1881  0001A0  90D8               	bcf	status,0,c
  1882  0001A2  3422               	rlcf	encenderBombas@i^0,w,c
  1883  0001A4  6ED9               	movwf	fsr2l,c
  1884  0001A6  3423               	rlcf	(encenderBombas@i+1)^0,w,c
  1885  0001A8  6EDA               	movwf	fsr2h,c
  1886  0001AA  0E01               	movlw	low _sensores
  1887  0001AC  26D9               	addwf	fsr2l,f,c
  1888  0001AE  0E00               	movlw	high _sensores
  1889  0001B0  22DA               	addwfc	fsr2h,f,c
  1890  0001B2  CFDE F01D          	movff	postinc2,estaSeco@s
  1891  0001B6  CFDD F01E          	movff	postdec2,estaSeco@s+1
  1892  0001BA  ECD4  F007         	call	_estaSeco	;wreg free
  1893  0001BE  501D               	movf	?_estaSeco^0,w,c
  1894  0001C0  101E               	iorwf	(?_estaSeco+1)^0,w,c
  1895  0001C2  B4D8               	btfsc	status,2,c
  1896  0001C4  EFE6  F000         	goto	u1011
  1897  0001C8  EFE8  F000         	goto	u1010
  1898  0001CC                     u1011:
  1899  0001CC  EF19  F001         	goto	l1934
  1900  0001D0                     u1010:
  1901  0001D0                     
  1902                           ;main.c: 279:                     LATDbits.LATD7 = 1;
  1903  0001D0  8E8C               	bsf	140,7,c	;volatile
  1904  0001D2  EF2A  F000         	goto	l1886
  1905  0001D6                     l1932:
  1906  0001D6  C022  F01F         	movff	encenderBombas@i,??_encenderBombas
  1907  0001DA  C023  F020         	movff	encenderBombas@i+1,??_encenderBombas+1
  1908                           
  1909                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1910                           ; Switch size 1, requested type "simple"
  1911                           ; Number of cases is 1, Range of values is 0 to 0
  1912                           ; switch strategies available:
  1913                           ; Name         Instructions Cycles
  1914                           ; simple_byte            4     3 (average)
  1915                           ;	Chosen strategy is simple_byte
  1916  0001DE  5020               	movf	(??_encenderBombas+1)^0,w,c
  1917  0001E0  0A00               	xorlw	0	; case 0
  1918  0001E2  B4D8               	btfsc	status,2,c
  1919  0001E4  EFF6  F000         	goto	l2376
  1920  0001E8  EF19  F001         	goto	l1934
  1921  0001EC                     l2376:
  1922                           
  1923                           ; Switch size 1, requested type "simple"
  1924                           ; Number of cases is 8, Range of values is 0 to 7
  1925                           ; switch strategies available:
  1926                           ; Name         Instructions Cycles
  1927                           ; simple_byte           25    13 (average)
  1928                           ;	Chosen strategy is simple_byte
  1929  0001EC  501F               	movf	??_encenderBombas^0,w,c
  1930  0001EE  0A00               	xorlw	0	; case 0
  1931  0001F0  B4D8               	btfsc	status,2,c
  1932  0001F2  EF11  F000         	goto	l1882
  1933  0001F6  0A01               	xorlw	1	; case 1
  1934  0001F8  B4D8               	btfsc	status,2,c
  1935  0001FA  EF2E  F000         	goto	l1888
  1936  0001FE  0A03               	xorlw	3	; case 2
  1937  000200  B4D8               	btfsc	status,2,c
  1938  000202  EF49  F000         	goto	l1894
  1939  000206  0A01               	xorlw	1	; case 3
  1940  000208  B4D8               	btfsc	status,2,c
  1941  00020A  EF64  F000         	goto	l1900
  1942  00020E  0A07               	xorlw	7	; case 4
  1943  000210  B4D8               	btfsc	status,2,c
  1944  000212  EF7F  F000         	goto	l1906
  1945  000216  0A01               	xorlw	1	; case 5
  1946  000218  B4D8               	btfsc	status,2,c
  1947  00021A  EF9A  F000         	goto	l1912
  1948  00021E  0A03               	xorlw	3	; case 6
  1949  000220  B4D8               	btfsc	status,2,c
  1950  000222  EFB5  F000         	goto	l1918
  1951  000226  0A01               	xorlw	1	; case 7
  1952  000228  B4D8               	btfsc	status,2,c
  1953  00022A  EFD0  F000         	goto	l1924
  1954  00022E  EF19  F001         	goto	l1934
  1955  000232                     l1934:
  1956                           
  1957                           ;main.c: 285:     }
  1958  000232  4A22               	infsnz	encenderBombas@i^0,f,c
  1959  000234  2A23               	incf	(encenderBombas@i+1)^0,f,c
  1960  000236  BE23               	btfsc	(encenderBombas@i+1)^0,7,c
  1961  000238  EF27  F001         	goto	u1021
  1962  00023C  5023               	movf	(encenderBombas@i+1)^0,w,c
  1963  00023E  E109               	bnz	u1020
  1964  000240  0E03               	movlw	3
  1965  000242  5C22               	subwf	encenderBombas@i^0,w,c
  1966  000244  A0D8               	btfss	status,0,c
  1967  000246  EF27  F001         	goto	u1021
  1968  00024A  EF29  F001         	goto	u1020
  1969  00024E                     u1021:
  1970  00024E  EFEB  F000         	goto	l1932
  1971  000252                     u1020:
  1972  000252                     
  1973                           ;main.c: 287:     if (flagSeco)
  1974  000252  5021               	movf	encenderBombas@flagSeco^0,w,c
  1975  000254  B4D8               	btfsc	status,2,c
  1976  000256  EF2F  F001         	goto	u1031
  1977  00025A  EF31  F001         	goto	u1030
  1978  00025E                     u1031:
  1979  00025E  EF33  F001         	goto	l236
  1980  000262                     u1030:
  1981  000262                     
  1982                           ;main.c: 288:         regando = 1;
  1983  000262  0E01               	movlw	1
  1984  000264  6E13               	movwf	_regando^0,c
  1985  000266                     l236:
  1986  000266  0012               	return		;funcret
  1987  000268                     __end_of_encenderBombas:
  1988                           	opt callstack 0
  1989                           
  1990 ;; *************** function _estaSeco *****************
  1991 ;; Defined at:
  1992 ;;		line 106 in file "main.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  s               2    0[COMRAM] struct .
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;		None
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  2    0[COMRAM] int 
  1999 ;; Registers used:
  2000 ;;		wreg, status,2, status,0
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2006 ;;      Params:         2       0       0       0       0       0       0       0       0
  2007 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2008 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2009 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2010 ;;Total ram usage:        2 bytes
  2011 ;; Hardware stack levels used:    1
  2012 ;; Hardware stack levels required when called:    1
  2013 ;; This function calls:
  2014 ;;		Nothing
  2015 ;; This function is called by:
  2016 ;;		_encenderBombas
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           	psect	text6
  2021  000FA8                     __ptext6:
  2022                           	opt callstack 0
  2023  000FA8                     _estaSeco:
  2024                           	opt callstack 27
  2025  000FA8                     
  2026                           ;main.c: 107:     return s.humedadMedida >= 60;
  2027  000FA8  0E3C               	movlw	60
  2028  000FAA  601D               	cpfslt	estaSeco@s^0,c
  2029  000FAC  EFDA  F007         	goto	u821
  2030  000FB0  EFDD  F007         	goto	u820
  2031  000FB4                     u821:
  2032  000FB4  0E01               	movlw	1
  2033  000FB6  EFDE  F007         	goto	u830
  2034  000FBA                     u820:
  2035  000FBA  0E00               	movlw	0
  2036  000FBC                     u830:
  2037  000FBC  6E1D               	movwf	?_estaSeco^0,c
  2038  000FBE  6A1E               	clrf	(?_estaSeco+1)^0,c
  2039  000FC0  0012               	return		;funcret
  2040  000FC2                     __end_of_estaSeco:
  2041                           	opt callstack 0
  2042                           
  2043 ;; *************** function _dameHoraActual *****************
  2044 ;; Defined at:
  2045 ;;		line 125 in file "main.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;		None
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;		None
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2059 ;;      Params:         0       0       0       0       0       0       0       0       0
  2060 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2061 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2062 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2063 ;;Total ram usage:        0 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; Hardware stack levels required when called:    4
  2066 ;; This function calls:
  2067 ;;		_convertirDato
  2068 ;;		_leer_rtc
  2069 ;; This function is called by:
  2070 ;;		_sistemaRegado
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           	psect	text7
  2075  000EF8                     __ptext7:
  2076                           	opt callstack 0
  2077  000EF8                     _dameHoraActual:
  2078                           	opt callstack 25
  2079  000EF8                     
  2080                           ;main.c: 127:     segundos = convertirDato(leer_rtc(0x00));
  2081  000EF8  0E00               	movlw	0
  2082  000EFA  EC67  F007         	call	_leer_rtc
  2083  000EFE  ECB5  F007         	call	_convertirDato
  2084  000F02  6E18               	movwf	_segundos^0,c
  2085                           
  2086                           ;main.c: 128:     minutos = convertirDato(leer_rtc(0x01));
  2087  000F04  0E01               	movlw	1
  2088  000F06  EC67  F007         	call	_leer_rtc
  2089  000F0A  ECB5  F007         	call	_convertirDato
  2090  000F0E  6E19               	movwf	_minutos^0,c
  2091                           
  2092                           ;main.c: 129:     hora = convertirDato(leer_rtc(0x02));
  2093  000F10  0E02               	movlw	2
  2094  000F12  EC67  F007         	call	_leer_rtc
  2095  000F16  ECB5  F007         	call	_convertirDato
  2096  000F1A  6E1A               	movwf	_hora^0,c
  2097  000F1C  0012               	return		;funcret
  2098  000F1E                     __end_of_dameHoraActual:
  2099                           	opt callstack 0
  2100                           
  2101 ;; *************** function _leer_rtc *****************
  2102 ;; Defined at:
  2103 ;;		line 13 in file "./RTC.h"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  direccion       1    wreg     unsigned char 
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  direccion       1    2[COMRAM] unsigned char 
  2108 ;;  dato            1    3[COMRAM] unsigned char 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      unsigned char 
  2111 ;; Registers used:
  2112 ;;		wreg, status,2, status,0, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2118 ;;      Params:         0       0       0       0       0       0       0       0       0
  2119 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2121 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2122 ;;Total ram usage:        2 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    3
  2125 ;; This function calls:
  2126 ;;		_i2c_detener
  2127 ;;		_i2c_envia_dato
  2128 ;;		_i2c_inicia_com
  2129 ;;		_i2c_recibe_dato
  2130 ;;		_i2c_reinicia_com
  2131 ;; This function is called by:
  2132 ;;		_dameHoraActual
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text8
  2137  000ECE                     __ptext8:
  2138                           	opt callstack 0
  2139  000ECE                     _leer_rtc:
  2140                           	opt callstack 25
  2141                           
  2142                           ;incstack = 0
  2143                           ;leer_rtc@direccion stored from wreg
  2144  000ECE  6E1F               	movwf	leer_rtc@direccion^0,c
  2145  000ED0                     
  2146                           ;./RTC.h: 14:     unsigned char dato;;./RTC.h: 15:     i2c_inicia_com();
  2147  000ED0  EC20  F008         	call	_i2c_inicia_com	;wreg free
  2148                           
  2149                           ;./RTC.h: 16:     i2c_envia_dato(0xD0);
  2150  000ED4  0ED0               	movlw	208
  2151  000ED6  EC11  F008         	call	_i2c_envia_dato
  2152                           
  2153                           ;./RTC.h: 17:     i2c_envia_dato(direccion);
  2154  000EDA  501F               	movf	leer_rtc@direccion^0,w,c
  2155  000EDC  EC11  F008         	call	_i2c_envia_dato
  2156                           
  2157                           ;./RTC.h: 18:     i2c_reinicia_com();
  2158  000EE0  EC1C  F008         	call	_i2c_reinicia_com	;wreg free
  2159                           
  2160                           ;./RTC.h: 19:     i2c_envia_dato(0xD1);
  2161  000EE4  0ED1               	movlw	209
  2162  000EE6  EC11  F008         	call	_i2c_envia_dato
  2163                           
  2164                           ;./RTC.h: 20:     dato = i2c_recibe_dato();
  2165  000EEA  ECE1  F007         	call	_i2c_recibe_dato	;wreg free
  2166  000EEE  6E20               	movwf	leer_rtc@dato^0,c
  2167                           
  2168                           ;./RTC.h: 21:     i2c_detener();
  2169  000EF0  EC24  F008         	call	_i2c_detener	;wreg free
  2170  000EF4                     
  2171                           ;./RTC.h: 22:     return dato;
  2172  000EF4  5020               	movf	leer_rtc@dato^0,w,c
  2173  000EF6  0012               	return		;funcret
  2174  000EF8                     __end_of_leer_rtc:
  2175                           	opt callstack 0
  2176                           
  2177 ;; *************** function _convertirDato *****************
  2178 ;; Defined at:
  2179 ;;		line 28 in file "./RTC.h"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;  dato            1    wreg     unsigned char 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  dato            1    1[COMRAM] unsigned char 
  2184 ;;  datoR           1    2[COMRAM] unsigned char 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      unsigned char 
  2187 ;; Registers used:
  2188 ;;		wreg, status,2, status,0, prodl, prodh
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2194 ;;      Params:         0       0       0       0       0       0       0       0       0
  2195 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2196 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2197 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2198 ;;Total ram usage:        3 bytes
  2199 ;; Hardware stack levels used:    1
  2200 ;; Hardware stack levels required when called:    1
  2201 ;; This function calls:
  2202 ;;		Nothing
  2203 ;; This function is called by:
  2204 ;;		_dameHoraActual
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text9
  2209  000F6A                     __ptext9:
  2210                           	opt callstack 0
  2211  000F6A                     _convertirDato:
  2212                           	opt callstack 27
  2213                           
  2214                           ;incstack = 0
  2215                           ;convertirDato@dato stored from wreg
  2216  000F6A  6E1E               	movwf	convertirDato@dato^0,c
  2217  000F6C                     
  2218                           ;./RTC.h: 30:     datoR = (dato & 0xF0) >> 4;
  2219  000F6C  381E               	swapf	convertirDato@dato^0,w,c
  2220  000F6E  0B0F               	andlw	15
  2221  000F70  0B0F               	andlw	15
  2222  000F72  6E1F               	movwf	convertirDato@datoR^0,c
  2223  000F74                     
  2224                           ;./RTC.h: 31:     datoR = (datoR * 10) + (dato & 0x0F);
  2225  000F74  C01E  F01D         	movff	convertirDato@dato,??_convertirDato
  2226  000F78  0E0F               	movlw	15
  2227  000F7A  161D               	andwf	??_convertirDato^0,f,c
  2228  000F7C  501F               	movf	convertirDato@datoR^0,w,c
  2229  000F7E  0D0A               	mullw	10
  2230  000F80  50F3               	movf	243,w,c
  2231  000F82  241D               	addwf	??_convertirDato^0,w,c
  2232  000F84  6E1F               	movwf	convertirDato@datoR^0,c
  2233  000F86                     
  2234                           ;./RTC.h: 32:     return datoR;
  2235  000F86  501F               	movf	convertirDato@datoR^0,w,c
  2236  000F88  0012               	return		;funcret
  2237  000F8A                     __end_of_convertirDato:
  2238                           	opt callstack 0
  2239                           
  2240 ;; *************** function _sistemaPrincipal *****************
  2241 ;; Defined at:
  2242 ;;		line 500 in file "main.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;  opcion          1    wreg     unsigned char 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  opcion          1   24[COMRAM] unsigned char 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      void 
  2249 ;; Registers used:
  2250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2256 ;;      Params:         0       0       0       0       0       0       0       0       0
  2257 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2258 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2259 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2260 ;;Total ram usage:        3 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    6
  2263 ;; This function calls:
  2264 ;;		_UART_printf
  2265 ;;		_asignarHorarios
  2266 ;;		_fijaHoraRtc
  2267 ;;		_mostrarMenu
  2268 ;;		_setTiempoRegar
  2269 ;; This function is called by:
  2270 ;;		_main
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text10
  2275  000B2C                     __ptext10:
  2276                           	opt callstack 0
  2277  000B2C                     _sistemaPrincipal:
  2278                           	opt callstack 24
  2279                           
  2280                           ;incstack = 0
  2281                           ;sistemaPrincipal@opcion stored from wreg
  2282  000B2C  6E35               	movwf	sistemaPrincipal@opcion^0,c
  2283  000B2E                     
  2284                           ;main.c: 502:     PIE1bits.RCIE = 0;
  2285  000B2E  9A9D               	bcf	157,5,c	;volatile
  2286                           
  2287                           ;main.c: 504:     switch (opcion) {
  2288  000B30  EFAE  F005         	goto	l2256
  2289  000B34                     l2246:
  2290                           
  2291                           ;main.c: 507:             fijaHoraRtc();
  2292  000B34  ECCB  F005         	call	_fijaHoraRtc	;wreg free
  2293                           
  2294                           ;main.c: 508:             break;
  2295  000B38  EFC7  F005         	goto	l2258
  2296  000B3C                     l2248:
  2297                           
  2298                           ;main.c: 511:             asignarHorarios();
  2299  000B3C  EC1D  F002         	call	_asignarHorarios	;wreg free
  2300                           
  2301                           ;main.c: 512:             break;
  2302  000B40  EFC7  F005         	goto	l2258
  2303  000B44                     l2250:
  2304                           
  2305                           ;main.c: 515:             setTiempoRegar();
  2306  000B44  EC34  F001         	call	_setTiempoRegar	;wreg free
  2307                           
  2308                           ;main.c: 516:             break;
  2309  000B48  EFC7  F005         	goto	l2258
  2310  000B4C                     l2252:
  2311                           
  2312                           ;main.c: 520:             UART_printf("\r\n Solo se permiten numeros del 1 al 3 \r\n");
  2313  000B4C  0E87               	movlw	low STR_24
  2314  000B4E  6E1E               	movwf	UART_printf@cadena^0,c
  2315  000B50  0E7E               	movlw	high STR_24
  2316  000B52  6E1F               	movwf	(UART_printf@cadena+1)^0,c
  2317  000B54  EC1F  F007         	call	_UART_printf	;wreg free
  2318                           
  2319                           ;main.c: 521:             break;
  2320  000B58  EFC7  F005         	goto	l2258
  2321  000B5C                     l2256:
  2322  000B5C  5035               	movf	sistemaPrincipal@opcion^0,w,c
  2323  000B5E  6E33               	movwf	??_sistemaPrincipal^0,c
  2324  000B60  6A34               	clrf	(??_sistemaPrincipal+1)^0,c
  2325                           
  2326                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2327                           ; Switch size 1, requested type "simple"
  2328                           ; Number of cases is 1, Range of values is 0 to 0
  2329                           ; switch strategies available:
  2330                           ; Name         Instructions Cycles
  2331                           ; simple_byte            4     3 (average)
  2332                           ;	Chosen strategy is simple_byte
  2333  000B62  5034               	movf	(??_sistemaPrincipal+1)^0,w,c
  2334  000B64  0A00               	xorlw	0	; case 0
  2335  000B66  B4D8               	btfsc	status,2,c
  2336  000B68  EFB8  F005         	goto	l2378
  2337  000B6C  EFA6  F005         	goto	l2252
  2338  000B70                     l2378:
  2339                           
  2340                           ; Switch size 1, requested type "simple"
  2341                           ; Number of cases is 3, Range of values is 1 to 3
  2342                           ; switch strategies available:
  2343                           ; Name         Instructions Cycles
  2344                           ; simple_byte           10     6 (average)
  2345                           ;	Chosen strategy is simple_byte
  2346  000B70  5033               	movf	??_sistemaPrincipal^0,w,c
  2347  000B72  0A01               	xorlw	1	; case 1
  2348  000B74  B4D8               	btfsc	status,2,c
  2349  000B76  EF9A  F005         	goto	l2246
  2350  000B7A  0A03               	xorlw	3	; case 2
  2351  000B7C  B4D8               	btfsc	status,2,c
  2352  000B7E  EF9E  F005         	goto	l2248
  2353  000B82  0A01               	xorlw	1	; case 3
  2354  000B84  B4D8               	btfsc	status,2,c
  2355  000B86  EFA2  F005         	goto	l2250
  2356  000B8A  EFA6  F005         	goto	l2252
  2357  000B8E                     l2258:
  2358                           
  2359                           ;main.c: 524:     mostrarMenu();
  2360  000B8E  EC9E  F006         	call	_mostrarMenu	;wreg free
  2361  000B92                     
  2362                           ;main.c: 525:     PIE1bits.RCIE = 1;
  2363  000B92  8A9D               	bsf	157,5,c	;volatile
  2364  000B94  0012               	return		;funcret
  2365  000B96                     __end_of_sistemaPrincipal:
  2366                           	opt callstack 0
  2367                           
  2368 ;; *************** function _setTiempoRegar *****************
  2369 ;; Defined at:
  2370 ;;		line 373 in file "main.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;		None
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  i               2   18[COMRAM] int 
  2375 ;;  i               2   16[COMRAM] int 
  2376 ;;  Rx              1   21[COMRAM] unsigned char 
  2377 ;;  datoCapturad    1   20[COMRAM] unsigned char 
  2378 ;;  hora            1   15[COMRAM] unsigned char 
  2379 ;;  tiempoRegar     1   14[COMRAM] unsigned char 
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      void 
  2382 ;; Registers used:
  2383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2389 ;;      Params:         0       0       0       0       0       0       0       0       0
  2390 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2391 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2392 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2393 ;;Total ram usage:        8 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    5
  2396 ;; This function calls:
  2397 ;;		_UART_printf
  2398 ;;		_UART_read
  2399 ;;		_escribeHorariosMemoria
  2400 ;; This function is called by:
  2401 ;;		_sistemaPrincipal
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           	psect	text11
  2406  000268                     __ptext11:
  2407                           	opt callstack 0
  2408  000268                     _setTiempoRegar:
  2409                           	opt callstack 24
  2410  000268                     
  2411                           ;main.c: 375:     unsigned char hora;;main.c: 376:     unsigned char tiempoRegar;;main.c
      +                          : 377:     unsigned char Rx;;main.c: 378:     char datoCapturado = 0;
  2412  000268  0E00               	movlw	0
  2413  00026A  6E31               	movwf	setTiempoRegar@datoCapturado^0,c
  2414  00026C                     
  2415                           ;main.c: 380:     UART_printf("\r\n TIEMPO DE REGADO \r\n");
  2416  00026C  0EB2               	movlw	low STR_12
  2417  00026E  6E1E               	movwf	UART_printf@cadena^0,c
  2418  000270  0E7F               	movlw	high STR_12
  2419  000272  6E1F               	movwf	(UART_printf@cadena+1)^0,c
  2420  000274  EC1F  F007         	call	_UART_printf	;wreg free
  2421  000278                     
  2422                           ;main.c: 381:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  2423  000278  0EF8               	movlw	low STR_7
  2424  00027A  6E1E               	movwf	UART_printf@cadena^0,c
  2425  00027C  0E7D               	movlw	high STR_7
  2426  00027E  6E1F               	movwf	(UART_printf@cadena+1)^0,c
  2427  000280  EC1F  F007         	call	_UART_printf	;wreg free
  2428                           
  2429                           ;main.c: 383:     for (int i = 0; i < 2; i++) {
  2430  000284  0E00               	movlw	0
  2431  000286  6E2E               	movwf	(setTiempoRegar@i+1)^0,c
  2432  000288  0E00               	movlw	0
  2433  00028A  6E2D               	movwf	setTiempoRegar@i^0,c
  2434  00028C                     l2036:
  2435                           
  2436                           ;main.c: 384:         Rx = UART_read();
  2437  00028C  EC51  F006         	call	_UART_read	;wreg free
  2438  000290  6E32               	movwf	setTiempoRegar@Rx^0,c
  2439  000292                     
  2440                           ;main.c: 385:         if (Rx >= 48 && Rx <= 57) {
  2441  000292  0E2F               	movlw	47
  2442  000294  6432               	cpfsgt	setTiempoRegar@Rx^0,c
  2443  000296  EF4F  F001         	goto	u1151
  2444  00029A  EF51  F001         	goto	u1150
  2445  00029E                     u1151:
  2446  00029E  EF74  F001         	goto	l2056
  2447  0002A2                     u1150:
  2448  0002A2  0E3A               	movlw	58
  2449  0002A4  6032               	cpfslt	setTiempoRegar@Rx^0,c
  2450  0002A6  EF57  F001         	goto	u1161
  2451  0002AA  EF59  F001         	goto	u1160
  2452  0002AE                     u1161:
  2453  0002AE  EF74  F001         	goto	l2056
  2454  0002B2                     u1160:
  2455  0002B2                     
  2456                           ;main.c: 386:             if (!i) {
  2457  0002B2  502D               	movf	setTiempoRegar@i^0,w,c
  2458  0002B4  102E               	iorwf	(setTiempoRegar@i+1)^0,w,c
  2459  0002B6  A4D8               	btfss	status,2,c
  2460  0002B8  EF60  F001         	goto	u1171
  2461  0002BC  EF62  F001         	goto	u1170
  2462  0002C0                     u1171:
  2463  0002C0  EF6C  F001         	goto	l2050
  2464  0002C4                     u1170:
  2465  0002C4                     
  2466                           ;main.c: 387:                 Rx -= 48;
  2467  0002C4  0E30               	movlw	48
  2468  0002C6  5E32               	subwf	setTiempoRegar@Rx^0,f,c
  2469  0002C8                     
  2470                           ;main.c: 388:                 hora = Rx;
  2471  0002C8  C032  F02C         	movff	setTiempoRegar@Rx,setTiempoRegar@hora
  2472  0002CC                     
  2473                           ;main.c: 389:                 hora *= 10;
  2474  0002CC  0E0A               	movlw	10
  2475  0002CE  022C               	mulwf	setTiempoRegar@hora^0,c
  2476  0002D0  50F3               	movf	prodl,w,c
  2477  0002D2  6E2C               	movwf	setTiempoRegar@hora^0,c
  2478                           
  2479                           ;main.c: 390:             } else {
  2480  0002D4  EF7E  F001         	goto	l2060
  2481  0002D8                     l2050:
  2482                           
  2483                           ;main.c: 391:                 datoCapturado = 1;
  2484  0002D8  0E01               	movlw	1
  2485  0002DA  6E31               	movwf	setTiempoRegar@datoCapturado^0,c
  2486  0002DC                     
  2487                           ;main.c: 392:                 Rx -= 48;
  2488  0002DC  0E30               	movlw	48
  2489  0002DE  5E32               	subwf	setTiempoRegar@Rx^0,f,c
  2490  0002E0                     
  2491                           ;main.c: 393:                 hora += Rx;
  2492  0002E0  5032               	movf	setTiempoRegar@Rx^0,w,c
  2493  0002E2  262C               	addwf	setTiempoRegar@hora^0,f,c
  2494  0002E4  EF7E  F001         	goto	l2060
  2495  0002E8                     l2056:
  2496                           
  2497                           ;main.c: 396:             datoCapturado = 0;
  2498  0002E8  0E00               	movlw	0
  2499  0002EA  6E31               	movwf	setTiempoRegar@datoCapturado^0,c
  2500  0002EC                     
  2501                           ;main.c: 397:             UART_printf("\r\n DATO NO RECIBIDO \r\n");
  2502  0002EC  0EC9               	movlw	low STR_1
  2503  0002EE  6E1E               	movwf	UART_printf@cadena^0,c
  2504  0002F0  0E7F               	movlw	high STR_1
  2505  0002F2  6E1F               	movwf	(UART_printf@cadena+1)^0,c
  2506  0002F4  EC1F  F007         	call	_UART_printf	;wreg free
  2507                           
  2508                           ;main.c: 398:             break;
  2509  0002F8  EF8E  F001         	goto	l2064
  2510  0002FC                     l2060:
  2511                           
  2512                           ;main.c: 400:     }
  2513  0002FC  4A2D               	infsnz	setTiempoRegar@i^0,f,c
  2514  0002FE  2A2E               	incf	(setTiempoRegar@i+1)^0,f,c
  2515  000300  BE2E               	btfsc	(setTiempoRegar@i+1)^0,7,c
  2516  000302  EF8C  F001         	goto	u1181
  2517  000306  502E               	movf	(setTiempoRegar@i+1)^0,w,c
  2518  000308  E109               	bnz	u1180
  2519  00030A  0E02               	movlw	2
  2520  00030C  5C2D               	subwf	setTiempoRegar@i^0,w,c
  2521  00030E  A0D8               	btfss	status,0,c
  2522  000310  EF8C  F001         	goto	u1181
  2523  000314  EF8E  F001         	goto	u1180
  2524  000318                     u1181:
  2525  000318  EF46  F001         	goto	l2036
  2526  00031C                     u1180:
  2527  00031C                     l2064:
  2528                           
  2529                           ;main.c: 402:     if (datoCapturado && !esperandoDatos) {
  2530  00031C  5031               	movf	setTiempoRegar@datoCapturado^0,w,c
  2531  00031E  B4D8               	btfsc	status,2,c
  2532  000320  EF94  F001         	goto	u1191
  2533  000324  EF96  F001         	goto	u1190
  2534  000328                     u1191:
  2535  000328  EF1C  F002         	goto	l271
  2536  00032C                     u1190:
  2537  00032C  503B               	movf	_esperandoDatos^0,w,c
  2538  00032E  A4D8               	btfss	status,2,c
  2539  000330  EF9C  F001         	goto	u1201
  2540  000334  EF9E  F001         	goto	u1200
  2541  000338                     u1201:
  2542  000338  EF1C  F002         	goto	l271
  2543  00033C                     u1200:
  2544  00033C                     
  2545                           ;main.c: 404:         UART_printf("\r\n Ingrese los minutos que desee que se riegue en e
      +                          se horario ej: 15 \r\n");
  2546  00033C  0E79               	movlw	low STR_15
  2547  00033E  6E1E               	movwf	UART_printf@cadena^0,c
  2548  000340  0E7D               	movlw	high STR_15
  2549  000342  6E1F               	movwf	(UART_printf@cadena+1)^0,c
  2550  000344  EC1F  F007         	call	_UART_printf	;wreg free
  2551  000348                     
  2552                           ;main.c: 406:         for (int i = 0; i < 2; i++) {
  2553  000348  0E00               	movlw	0
  2554  00034A  6E30               	movwf	(setTiempoRegar@i_705+1)^0,c
  2555  00034C  0E00               	movlw	0
  2556  00034E  6E2F               	movwf	setTiempoRegar@i_705^0,c
  2557  000350                     l2076:
  2558                           
  2559                           ;main.c: 407:             Rx = UART_read();
  2560  000350  EC51  F006         	call	_UART_read	;wreg free
  2561  000354  6E32               	movwf	setTiempoRegar@Rx^0,c
  2562  000356                     
  2563                           ;main.c: 408:             if (Rx >= 48 && Rx <= 57) {
  2564  000356  0E2F               	movlw	47
  2565  000358  6432               	cpfsgt	setTiempoRegar@Rx^0,c
  2566  00035A  EFB1  F001         	goto	u1211
  2567  00035E  EFB3  F001         	goto	u1210
  2568  000362                     u1211:
  2569  000362  EFD6  F001         	goto	l2096
  2570  000366                     u1210:
  2571  000366  0E3A               	movlw	58
  2572  000368  6032               	cpfslt	setTiempoRegar@Rx^0,c
  2573  00036A  EFB9  F001         	goto	u1221
  2574  00036E  EFBB  F001         	goto	u1220
  2575  000372                     u1221:
  2576  000372  EFD6  F001         	goto	l2096
  2577  000376                     u1220:
  2578  000376                     
  2579                           ;main.c: 409:                 if (!i) {
  2580  000376  502F               	movf	setTiempoRegar@i_705^0,w,c
  2581  000378  1030               	iorwf	(setTiempoRegar@i_705+1)^0,w,c
  2582  00037A  A4D8               	btfss	status,2,c
  2583  00037C  EFC2  F001         	goto	u1231
  2584  000380  EFC4  F001         	goto	u1230
  2585  000384                     u1231:
  2586  000384  EFCE  F001         	goto	l2090
  2587  000388                     u1230:
  2588  000388                     
  2589                           ;main.c: 410:                     Rx -= 48;
  2590  000388  0E30               	movlw	48
  2591  00038A  5E32               	subwf	setTiempoRegar@Rx^0,f,c
  2592  00038C                     
  2593                           ;main.c: 411:                     tiempoRegar = Rx;
  2594  00038C  C032  F02B         	movff	setTiempoRegar@Rx,setTiempoRegar@tiempoRegar
  2595  000390                     
  2596                           ;main.c: 412:                     tiempoRegar *= 10;
  2597  000390  0E0A               	movlw	10
  2598  000392  022B               	mulwf	setTiempoRegar@tiempoRegar^0,c
  2599  000394  50F3               	movf	prodl,w,c
  2600  000396  6E2B               	movwf	setTiempoRegar@tiempoRegar^0,c
  2601                           
  2602                           ;main.c: 413:                 } else {
  2603  000398  EFE0  F001         	goto	l2100
  2604  00039C                     l2090:
  2605                           
  2606                           ;main.c: 414:                     datoCapturado = 1;
  2607  00039C  0E01               	movlw	1
  2608  00039E  6E31               	movwf	setTiempoRegar@datoCapturado^0,c
  2609  0003A0                     
  2610                           ;main.c: 415:                     Rx -= 48;
  2611  0003A0  0E30               	movlw	48
  2612  0003A2  5E32               	subwf	setTiempoRegar@Rx^0,f,c
  2613  0003A4                     
  2614                           ;main.c: 416:                     tiempoRegar += Rx;
  2615  0003A4  5032               	movf	setTiempoRegar@Rx^0,w,c
  2616  0003A6  262B               	addwf	setTiempoRegar@tiempoRegar^0,f,c
  2617  0003A8  EFE0  F001         	goto	l2100
  2618  0003AC                     l2096:
  2619                           
  2620                           ;main.c: 419:                 datoCapturado = 0;
  2621  0003AC  0E00               	movlw	0
  2622  0003AE  6E31               	movwf	setTiempoRegar@datoCapturado^0,c
  2623  0003B0                     
  2624                           ;main.c: 420:                 UART_printf("\r\n DATO NO RECIBIDO \r\n");
  2625  0003B0  0EC9               	movlw	low STR_1
  2626  0003B2  6E1E               	movwf	UART_printf@cadena^0,c
  2627  0003B4  0E7F               	movlw	high STR_1
  2628  0003B6  6E1F               	movwf	(UART_printf@cadena+1)^0,c
  2629  0003B8  EC1F  F007         	call	_UART_printf	;wreg free
  2630                           
  2631                           ;main.c: 421:                 break;
  2632  0003BC  EFF0  F001         	goto	l2104
  2633  0003C0                     l2100:
  2634                           
  2635                           ;main.c: 423:         }
  2636  0003C0  4A2F               	infsnz	setTiempoRegar@i_705^0,f,c
  2637  0003C2  2A30               	incf	(setTiempoRegar@i_705+1)^0,f,c
  2638  0003C4  BE30               	btfsc	(setTiempoRegar@i_705+1)^0,7,c
  2639  0003C6  EFEE  F001         	goto	u1241
  2640  0003CA  5030               	movf	(setTiempoRegar@i_705+1)^0,w,c
  2641  0003CC  E109               	bnz	u1240
  2642  0003CE  0E02               	movlw	2
  2643  0003D0  5C2F               	subwf	setTiempoRegar@i_705^0,w,c
  2644  0003D2  A0D8               	btfss	status,0,c
  2645  0003D4  EFEE  F001         	goto	u1241
  2646  0003D8  EFF0  F001         	goto	u1240
  2647  0003DC                     u1241:
  2648  0003DC  EFA8  F001         	goto	l2076
  2649  0003E0                     u1240:
  2650  0003E0                     l2104:
  2651                           
  2652                           ;main.c: 425:         if (datoCapturado && !esperandoDatos) {
  2653  0003E0  5031               	movf	setTiempoRegar@datoCapturado^0,w,c
  2654  0003E2  B4D8               	btfsc	status,2,c
  2655  0003E4  EFF6  F001         	goto	u1251
  2656  0003E8  EFF8  F001         	goto	u1250
  2657  0003EC                     u1251:
  2658  0003EC  EF1C  F002         	goto	l271
  2659  0003F0                     u1250:
  2660  0003F0  503B               	movf	_esperandoDatos^0,w,c
  2661  0003F2  A4D8               	btfss	status,2,c
  2662  0003F4  EFFE  F001         	goto	u1261
  2663  0003F8  EF00  F002         	goto	u1260
  2664  0003FC                     u1261:
  2665  0003FC  EF1C  F002         	goto	l271
  2666  000400                     u1260:
  2667  000400                     
  2668                           ;main.c: 427:             UART_printf("\r\n Minutos de riego establecidos! \r\n");
  2669  000400  0EB1               	movlw	low STR_17
  2670  000402  6E1E               	movwf	UART_printf@cadena^0,c
  2671  000404  0E7E               	movlw	high STR_17
  2672  000406  6E1F               	movwf	(UART_printf@cadena+1)^0,c
  2673  000408  EC1F  F007         	call	_UART_printf	;wreg free
  2674  00040C                     
  2675                           ;main.c: 429:             horarios[hora].tiempoRegar = tiempoRegar;
  2676  00040C  502C               	movf	setTiempoRegar@hora^0,w,c
  2677  00040E  0D03               	mullw	3
  2678  000410  0E62               	movlw	low (_horarios+2)
  2679  000412  24F3               	addwf	243,w,c
  2680  000414  6ED9               	movwf	fsr2l,c
  2681  000416  0E00               	movlw	high (_horarios+2)
  2682  000418  20F4               	addwfc	prodh,w,c
  2683  00041A  6EDA               	movwf	fsr2h,c
  2684  00041C  C02B  FFDF         	movff	setTiempoRegar@tiempoRegar,indf2
  2685  000420                     
  2686                           ;main.c: 430:             minutosRegar = horarios[hora].tiempoRegar;
  2687  000420  502C               	movf	setTiempoRegar@hora^0,w,c
  2688  000422  0D03               	mullw	3
  2689  000424  0E62               	movlw	low (_horarios+2)
  2690  000426  24F3               	addwf	243,w,c
  2691  000428  6ED9               	movwf	fsr2l,c
  2692  00042A  0E00               	movlw	high (_horarios+2)
  2693  00042C  20F4               	addwfc	prodh,w,c
  2694  00042E  6EDA               	movwf	fsr2h,c
  2695  000430  50DF               	movf	indf2,w,c
  2696  000432  6E15               	movwf	_minutosRegar^0,c
  2697  000434                     
  2698                           ;main.c: 432:             escribeHorariosMemoria();
  2699  000434  EC4D  F003         	call	_escribeHorariosMemoria	;wreg free
  2700  000438                     l271:
  2701  000438  0012               	return		;funcret
  2702  00043A                     __end_of_setTiempoRegar:
  2703                           	opt callstack 0
  2704                           
  2705 ;; *************** function _mostrarMenu *****************
  2706 ;; Defined at:
  2707 ;;		line 490 in file "main.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;		None
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;		None
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  1    wreg      void 
  2714 ;; Registers used:
  2715 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2721 ;;      Params:         0       0       0       0       0       0       0       0       0
  2722 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2723 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2724 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2725 ;;Total ram usage:        0 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    3
  2728 ;; This function calls:
  2729 ;;		_UART_printf
  2730 ;; This function is called by:
  2731 ;;		_sistemaPrincipal
  2732 ;;		_main
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text12
  2737  000D3C                     __ptext12:
  2738                           	opt callstack 0
  2739  000D3C                     _mostrarMenu:
  2740                           	opt callstack 26
  2741  000D3C                     
  2742                           ;main.c: 492:     UART_printf("\r\n Ingresa una opcion a Realizar: \r\n");
  2743  000D3C  0ED6               	movlw	low STR_18
  2744  000D3E  6E1E               	movwf	UART_printf@cadena^0,c
  2745  000D40  0E7E               	movlw	high STR_18
  2746  000D42  6E1F               	movwf	(UART_printf@cadena+1)^0,c
  2747  000D44  EC1F  F007         	call	_UART_printf	;wreg free
  2748                           
  2749                           ;main.c: 493:     UART_printf("\r\n 1. Fijar Hora Actual \r\n");
  2750  000D48  0E64               	movlw	low STR_19
  2751  000D4A  6E1E               	movwf	UART_printf@cadena^0,c
  2752  000D4C  0E7F               	movlw	high STR_19
  2753  000D4E  6E1F               	movwf	(UART_printf@cadena+1)^0,c
  2754  000D50  EC1F  F007         	call	_UART_printf	;wreg free
  2755                           
  2756                           ;main.c: 494:     UART_printf("\r\n 2. Asignar Horarios para regar \r\n");
  2757  000D54  0E20               	movlw	low STR_20
  2758  000D56  6E1E               	movwf	UART_printf@cadena^0,c
  2759  000D58  0E7F               	movlw	high STR_20
  2760  000D5A  6E1F               	movwf	(UART_printf@cadena+1)^0,c
  2761  000D5C  EC1F  F007         	call	_UART_printf	;wreg free
  2762                           
  2763                           ;main.c: 495:     UART_printf("\r\n 3. Programar tiempo de riego en un horario \r\n");
  2764  000D60  0E2B               	movlw	low STR_21
  2765  000D62  6E1E               	movwf	UART_printf@cadena^0,c
  2766  000D64  0E7E               	movlw	high STR_21
  2767  000D66  6E1F               	movwf	(UART_printf@cadena+1)^0,c
  2768  000D68  EC1F  F007         	call	_UART_printf	;wreg free
  2769                           
  2770                           ;main.c: 496:     UART_printf("\r\n Opcion:  \r");
  2771  000D6C  0EF0               	movlw	low STR_22
  2772  000D6E  6E1E               	movwf	UART_printf@cadena^0,c
  2773  000D70  0E7F               	movlw	high STR_22
  2774  000D72  6E1F               	movwf	(UART_printf@cadena+1)^0,c
  2775  000D74  EC1F  F007         	call	_UART_printf	;wreg free
  2776                           
  2777                           ;main.c: 497:     UART_printf("\r\n");
  2778  000D78  0E96               	movlw	low (STR_10+23)
  2779  000D7A  6E1E               	movwf	UART_printf@cadena^0,c
  2780  000D7C  0E7F               	movlw	high (STR_10+23)
  2781  000D7E  6E1F               	movwf	(UART_printf@cadena+1)^0,c
  2782  000D80  EC1F  F007         	call	_UART_printf	;wreg free
  2783  000D84  0012               	return		;funcret
  2784  000D86                     __end_of_mostrarMenu:
  2785                           	opt callstack 0
  2786                           
  2787 ;; *************** function _fijaHoraRtc *****************
  2788 ;; Defined at:
  2789 ;;		line 292 in file "main.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;		None
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;  dato            1    0        unsigned char 
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  1    wreg      void 
  2796 ;; Registers used:
  2797 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2803 ;;      Params:         0       0       0       0       0       0       0       0       0
  2804 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2805 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2806 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2807 ;;Total ram usage:        1 bytes
  2808 ;; Hardware stack levels used:    1
  2809 ;; Hardware stack levels required when called:    5
  2810 ;; This function calls:
  2811 ;;		_UART_printf
  2812 ;;		_escribe_rtc
  2813 ;;		_setRtc
  2814 ;; This function is called by:
  2815 ;;		_sistemaPrincipal
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text13
  2820  000B96                     __ptext13:
  2821                           	opt callstack 0
  2822  000B96                     _fijaHoraRtc:
  2823                           	opt callstack 24
  2824  000B96                     
  2825                           ;main.c: 296:     UART_printf("\r\n FIJA HORA \r\n");
  2826  000B96  0EE0               	movlw	low STR_2
  2827  000B98  6E1E               	movwf	UART_printf@cadena^0,c
  2828  000B9A  0E7F               	movlw	high STR_2
  2829  000B9C  6E1F               	movwf	(UART_printf@cadena+1)^0,c
  2830  000B9E  EC1F  F007         	call	_UART_printf	;wreg free
  2831  000BA2                     
  2832                           ;main.c: 299:     UART_printf("\r\n Envie las Horas en formato 24 Ej: 15 \r\n");
  2833  000BA2  0E5C               	movlw	low STR_3
  2834  000BA4  6E1E               	movwf	UART_printf@cadena^0,c
  2835  000BA6  0E7E               	movlw	high STR_3
  2836  000BA8  6E1F               	movwf	(UART_printf@cadena+1)^0,c
  2837  000BAA  EC1F  F007         	call	_UART_printf	;wreg free
  2838  000BAE                     
  2839                           ;main.c: 300:     setRtc(0x02);
  2840  000BAE  0E02               	movlw	2
  2841  000BB0  ECB4  F003         	call	_setRtc
  2842  000BB4                     
  2843                           ;main.c: 303:     if (!esperandoDatos) {
  2844  000BB4  503B               	movf	_esperandoDatos^0,w,c
  2845  000BB6  A4D8               	btfss	status,2,c
  2846  000BB8  EFE0  F005         	goto	u1041
  2847  000BBC  EFE2  F005         	goto	u1040
  2848  000BC0                     u1041:
  2849  000BC0  EFEB  F005         	goto	l1958
  2850  000BC4                     u1040:
  2851  000BC4                     
  2852                           ;main.c: 304:         UART_printf("\r\n Envie los Minutos Ej: 25 \r\n");
  2853  000BC4  0E45               	movlw	low STR_4
  2854  000BC6  6E1E               	movwf	UART_printf@cadena^0,c
  2855  000BC8  0E7F               	movlw	high STR_4
  2856  000BCA  6E1F               	movwf	(UART_printf@cadena+1)^0,c
  2857  000BCC  EC1F  F007         	call	_UART_printf	;wreg free
  2858                           
  2859                           ;main.c: 305:         setRtc(0x01);
  2860  000BD0  0E01               	movlw	1
  2861  000BD2  ECB4  F003         	call	_setRtc
  2862  000BD6                     l1958:
  2863                           
  2864                           ;main.c: 309:     if (!esperandoDatos) {
  2865  000BD6  503B               	movf	_esperandoDatos^0,w,c
  2866  000BD8  A4D8               	btfss	status,2,c
  2867  000BDA  EFF1  F005         	goto	u1051
  2868  000BDE  EFF3  F005         	goto	u1050
  2869  000BE2                     u1051:
  2870  000BE2  EFFE  F005         	goto	l241
  2871  000BE6                     u1050:
  2872  000BE6                     
  2873                           ;main.c: 311:         UART_printf("\r\n HORA ESTABLECIDA CORRECTAMENTE \r\n");
  2874  000BE6  0EFB               	movlw	low STR_5
  2875  000BE8  6E1E               	movwf	UART_printf@cadena^0,c
  2876  000BEA  0E7E               	movlw	high STR_5
  2877  000BEC  6E1F               	movwf	(UART_printf@cadena+1)^0,c
  2878  000BEE  EC1F  F007         	call	_UART_printf	;wreg free
  2879  000BF2                     
  2880                           ;main.c: 312:         escribe_rtc(0x00, 0);
  2881  000BF2  0E00               	movlw	0
  2882  000BF4  6E1F               	movwf	escribe_rtc@dato^0,c
  2883  000BF6  0E00               	movlw	0
  2884  000BF8  ECC5  F007         	call	_escribe_rtc
  2885  000BFC                     l241:
  2886  000BFC  0012               	return		;funcret
  2887  000BFE                     __end_of_fijaHoraRtc:
  2888                           	opt callstack 0
  2889                           
  2890 ;; *************** function _setRtc *****************
  2891 ;; Defined at:
  2892 ;;		line 132 in file "main.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;  direccion       1    wreg     unsigned char 
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;  direccion       1    5[COMRAM] unsigned char 
  2897 ;;  Rx              1   10[COMRAM] unsigned char 
  2898 ;;  i               2    8[COMRAM] int 
  2899 ;;  datoCapturad    1    7[COMRAM] unsigned char 
  2900 ;;  dato            1    6[COMRAM] unsigned char 
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  1    wreg      void 
  2903 ;; Registers used:
  2904 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2910 ;;      Params:         0       0       0       0       0       0       0       0       0
  2911 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2912 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2913 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2914 ;;Total ram usage:        7 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; Hardware stack levels required when called:    4
  2917 ;; This function calls:
  2918 ;;		_UART_printf
  2919 ;;		_UART_read
  2920 ;;		_escribe_rtc
  2921 ;; This function is called by:
  2922 ;;		_fijaHoraRtc
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text14
  2927  000768                     __ptext14:
  2928                           	opt callstack 0
  2929  000768                     _setRtc:
  2930                           	opt callstack 24
  2931                           
  2932                           ;incstack = 0
  2933                           ;setRtc@direccion stored from wreg
  2934  000768  6E22               	movwf	setRtc@direccion^0,c
  2935  00076A                     
  2936                           ;main.c: 133:     unsigned char dato;;main.c: 134:     char datoCapturado = 0;
  2937  00076A  0E00               	movlw	0
  2938  00076C  6E24               	movwf	setRtc@datoCapturado^0,c
  2939                           
  2940                           ;main.c: 136:     for (int i = 0; i < 2; i++) {
  2941  00076E  0E00               	movlw	0
  2942  000770  6E26               	movwf	(setRtc@i+1)^0,c
  2943  000772  0E00               	movlw	0
  2944  000774  6E25               	movwf	setRtc@i^0,c
  2945  000776                     l1798:
  2946                           
  2947                           ;main.c: 137:         char Rx = UART_read();
  2948  000776  EC51  F006         	call	_UART_read	;wreg free
  2949  00077A  6E27               	movwf	setRtc@Rx^0,c
  2950  00077C                     
  2951                           ;main.c: 138:         if (Rx >= 48 && Rx <= 57) {
  2952  00077C  0E2F               	movlw	47
  2953  00077E  6427               	cpfsgt	setRtc@Rx^0,c
  2954  000780  EFC4  F003         	goto	u841
  2955  000784  EFC6  F003         	goto	u840
  2956  000788                     u841:
  2957  000788  EFEA  F003         	goto	l1812
  2958  00078C                     u840:
  2959  00078C  0E3A               	movlw	58
  2960  00078E  6027               	cpfslt	setRtc@Rx^0,c
  2961  000790  EFCC  F003         	goto	u851
  2962  000794  EFCE  F003         	goto	u850
  2963  000798                     u851:
  2964  000798  EFEA  F003         	goto	l1812
  2965  00079C                     u850:
  2966  00079C                     
  2967                           ;main.c: 139:             if (!i) {
  2968  00079C  5025               	movf	setRtc@i^0,w,c
  2969  00079E  1026               	iorwf	(setRtc@i+1)^0,w,c
  2970  0007A0  A4D8               	btfss	status,2,c
  2971  0007A2  EFD5  F003         	goto	u861
  2972  0007A6  EFD7  F003         	goto	u860
  2973  0007AA                     u861:
  2974  0007AA  EFE2  F003         	goto	l1808
  2975  0007AE                     u860:
  2976  0007AE                     
  2977                           ;main.c: 140:                 dato = ((Rx - 48) & 0x0F) << 4;
  2978  0007AE  C027  F021         	movff	setRtc@Rx,??_setRtc
  2979  0007B2  0ED0               	movlw	208
  2980  0007B4  2621               	addwf	??_setRtc^0,f,c
  2981  0007B6  0E0F               	movlw	15
  2982  0007B8  1621               	andwf	??_setRtc^0,f,c
  2983  0007BA  3821               	swapf	??_setRtc^0,w,c
  2984  0007BC  0BF0               	andlw	240
  2985  0007BE  6E23               	movwf	setRtc@dato^0,c
  2986                           
  2987                           ;main.c: 141:             } else {
  2988  0007C0  EFF4  F003         	goto	l1816
  2989  0007C4                     l1808:
  2990                           
  2991                           ;main.c: 142:                 dato |= (Rx - 48) & 0x0F;
  2992  0007C4  5027               	movf	setRtc@Rx^0,w,c
  2993  0007C6  0FD0               	addlw	208
  2994  0007C8  0B0F               	andlw	15
  2995  0007CA  1223               	iorwf	setRtc@dato^0,f,c
  2996  0007CC                     
  2997                           ;main.c: 143:                 datoCapturado = 1;
  2998  0007CC  0E01               	movlw	1
  2999  0007CE  6E24               	movwf	setRtc@datoCapturado^0,c
  3000  0007D0  EFF4  F003         	goto	l1816
  3001  0007D4                     l1812:
  3002                           
  3003                           ;main.c: 146:             datoCapturado = 0;
  3004  0007D4  0E00               	movlw	0
  3005  0007D6  6E24               	movwf	setRtc@datoCapturado^0,c
  3006  0007D8                     
  3007                           ;main.c: 147:             UART_printf("\r\n DATO NO RECIBIDO \r\n");
  3008  0007D8  0EC9               	movlw	low STR_1
  3009  0007DA  6E1E               	movwf	UART_printf@cadena^0,c
  3010  0007DC  0E7F               	movlw	high STR_1
  3011  0007DE  6E1F               	movwf	(UART_printf@cadena+1)^0,c
  3012  0007E0  EC1F  F007         	call	_UART_printf	;wreg free
  3013                           
  3014                           ;main.c: 148:             break;
  3015  0007E4  EF04  F004         	goto	l1820
  3016  0007E8                     l1816:
  3017                           
  3018                           ;main.c: 150:     }
  3019  0007E8  4A25               	infsnz	setRtc@i^0,f,c
  3020  0007EA  2A26               	incf	(setRtc@i+1)^0,f,c
  3021  0007EC  BE26               	btfsc	(setRtc@i+1)^0,7,c
  3022  0007EE  EF02  F004         	goto	u871
  3023  0007F2  5026               	movf	(setRtc@i+1)^0,w,c
  3024  0007F4  E109               	bnz	u870
  3025  0007F6  0E02               	movlw	2
  3026  0007F8  5C25               	subwf	setRtc@i^0,w,c
  3027  0007FA  A0D8               	btfss	status,0,c
  3028  0007FC  EF02  F004         	goto	u871
  3029  000800  EF04  F004         	goto	u870
  3030  000804                     u871:
  3031  000804  EFBB  F003         	goto	l1798
  3032  000808                     u870:
  3033  000808                     l1820:
  3034                           
  3035                           ;main.c: 152:     if (datoCapturado && !esperandoDatos)
  3036  000808  5024               	movf	setRtc@datoCapturado^0,w,c
  3037  00080A  B4D8               	btfsc	status,2,c
  3038  00080C  EF0A  F004         	goto	u881
  3039  000810  EF0C  F004         	goto	u880
  3040  000814                     u881:
  3041  000814  EF19  F004         	goto	l193
  3042  000818                     u880:
  3043  000818  503B               	movf	_esperandoDatos^0,w,c
  3044  00081A  A4D8               	btfss	status,2,c
  3045  00081C  EF12  F004         	goto	u891
  3046  000820  EF14  F004         	goto	u890
  3047  000824                     u891:
  3048  000824  EF19  F004         	goto	l193
  3049  000828                     u890:
  3050  000828                     
  3051                           ;main.c: 153:         escribe_rtc(direccion, dato);
  3052  000828  C023  F01F         	movff	setRtc@dato,escribe_rtc@dato
  3053  00082C  5022               	movf	setRtc@direccion^0,w,c
  3054  00082E  ECC5  F007         	call	_escribe_rtc
  3055  000832                     l193:
  3056  000832  0012               	return		;funcret
  3057  000834                     __end_of_setRtc:
  3058                           	opt callstack 0
  3059                           
  3060 ;; *************** function _escribe_rtc *****************
  3061 ;; Defined at:
  3062 ;;		line 2 in file "./RTC.h"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;  direccion       1    wreg     unsigned char 
  3065 ;;  dato            1    2[COMRAM] unsigned char 
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;  direccion       1    3[COMRAM] unsigned char 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      void 
  3070 ;; Registers used:
  3071 ;;		wreg, status,2, status,0, cstack
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3077 ;;      Params:         1       0       0       0       0       0       0       0       0
  3078 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3079 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3080 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3081 ;;Total ram usage:        2 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:    3
  3084 ;; This function calls:
  3085 ;;		_i2c_detener
  3086 ;;		_i2c_envia_dato
  3087 ;;		_i2c_inicia_com
  3088 ;; This function is called by:
  3089 ;;		_setRtc
  3090 ;;		_fijaHoraRtc
  3091 ;;		_setRtcDefault
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           	psect	text15
  3096  000F8A                     __ptext15:
  3097                           	opt callstack 0
  3098  000F8A                     _escribe_rtc:
  3099                           	opt callstack 24
  3100                           
  3101                           ;incstack = 0
  3102                           ;escribe_rtc@direccion stored from wreg
  3103  000F8A  6E20               	movwf	escribe_rtc@direccion^0,c
  3104  000F8C                     
  3105                           ;./RTC.h: 3:     i2c_inicia_com();
  3106  000F8C  EC20  F008         	call	_i2c_inicia_com	;wreg free
  3107                           
  3108                           ;./RTC.h: 4:     i2c_envia_dato(0xD0);
  3109  000F90  0ED0               	movlw	208
  3110  000F92  EC11  F008         	call	_i2c_envia_dato
  3111                           
  3112                           ;./RTC.h: 5:     i2c_envia_dato(direccion);
  3113  000F96  5020               	movf	escribe_rtc@direccion^0,w,c
  3114  000F98  EC11  F008         	call	_i2c_envia_dato
  3115                           
  3116                           ;./RTC.h: 6:     i2c_envia_dato(dato);
  3117  000F9C  501F               	movf	escribe_rtc@dato^0,w,c
  3118  000F9E  EC11  F008         	call	_i2c_envia_dato
  3119                           
  3120                           ;./RTC.h: 7:     i2c_detener();
  3121  000FA2  EC24  F008         	call	_i2c_detener	;wreg free
  3122  000FA6  0012               	return		;funcret
  3123  000FA8                     __end_of_escribe_rtc:
  3124                           	opt callstack 0
  3125                           
  3126 ;; *************** function _asignarHorarios *****************
  3127 ;; Defined at:
  3128 ;;		line 318 in file "main.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;		None
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;  i               2   16[COMRAM] int 
  3133 ;;  Rx              1   18[COMRAM] unsigned char 
  3134 ;;  datoCapturad    1   15[COMRAM] unsigned char 
  3135 ;;  hora            1   14[COMRAM] unsigned char 
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  1    wreg      void 
  3138 ;; Registers used:
  3139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3145 ;;      Params:         0       0       0       0       0       0       0       0       0
  3146 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3147 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3148 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3149 ;;Total ram usage:        5 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; Hardware stack levels required when called:    5
  3152 ;; This function calls:
  3153 ;;		_UART_printf
  3154 ;;		_UART_read
  3155 ;;		_escribeHorariosMemoria
  3156 ;; This function is called by:
  3157 ;;		_sistemaPrincipal
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161                           	psect	text16
  3162  00043A                     __ptext16:
  3163                           	opt callstack 0
  3164  00043A                     _asignarHorarios:
  3165                           	opt callstack 24
  3166  00043A                     
  3167                           ;main.c: 320:     unsigned char hora;;main.c: 321:     unsigned char Rx;;main.c: 322:   
      +                            char datoCapturado = 0;
  3168  00043A  0E00               	movlw	0
  3169  00043C  6E2C               	movwf	asignarHorarios@datoCapturado^0,c
  3170  00043E                     
  3171                           ;main.c: 324:     UART_printf("\r\n OPCIONES DE REGADO \r\n");
  3172  00043E  0E99               	movlw	low STR_6
  3173  000440  6E1E               	movwf	UART_printf@cadena^0,c
  3174  000442  0E7F               	movlw	high STR_6
  3175  000444  6E1F               	movwf	(UART_printf@cadena+1)^0,c
  3176  000446  EC1F  F007         	call	_UART_printf	;wreg free
  3177  00044A                     
  3178                           ;main.c: 325:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  3179  00044A  0EF8               	movlw	low STR_7
  3180  00044C  6E1E               	movwf	UART_printf@cadena^0,c
  3181  00044E  0E7D               	movlw	high STR_7
  3182  000450  6E1F               	movwf	(UART_printf@cadena+1)^0,c
  3183  000452  EC1F  F007         	call	_UART_printf	;wreg free
  3184                           
  3185                           ;main.c: 327:     for (int i = 0; i < 2; i++) {
  3186  000456  0E00               	movlw	0
  3187  000458  6E2E               	movwf	(asignarHorarios@i+1)^0,c
  3188  00045A  0E00               	movlw	0
  3189  00045C  6E2D               	movwf	asignarHorarios@i^0,c
  3190  00045E                     l1974:
  3191                           
  3192                           ;main.c: 328:         Rx = UART_read();
  3193  00045E  EC51  F006         	call	_UART_read	;wreg free
  3194  000462  6E2F               	movwf	asignarHorarios@Rx^0,c
  3195  000464                     
  3196                           ;main.c: 329:         if (Rx >= 48 && Rx <= 57) {
  3197  000464  0E2F               	movlw	47
  3198  000466  642F               	cpfsgt	asignarHorarios@Rx^0,c
  3199  000468  EF38  F002         	goto	u1061
  3200  00046C  EF3A  F002         	goto	u1060
  3201  000470                     u1061:
  3202  000470  EF5D  F002         	goto	l1994
  3203  000474                     u1060:
  3204  000474  0E3A               	movlw	58
  3205  000476  602F               	cpfslt	asignarHorarios@Rx^0,c
  3206  000478  EF40  F002         	goto	u1071
  3207  00047C  EF42  F002         	goto	u1070
  3208  000480                     u1071:
  3209  000480  EF5D  F002         	goto	l1994
  3210  000484                     u1070:
  3211  000484                     
  3212                           ;main.c: 330:             if (!i) {
  3213  000484  502D               	movf	asignarHorarios@i^0,w,c
  3214  000486  102E               	iorwf	(asignarHorarios@i+1)^0,w,c
  3215  000488  A4D8               	btfss	status,2,c
  3216  00048A  EF49  F002         	goto	u1081
  3217  00048E  EF4B  F002         	goto	u1080
  3218  000492                     u1081:
  3219  000492  EF55  F002         	goto	l1988
  3220  000496                     u1080:
  3221  000496                     
  3222                           ;main.c: 331:                 Rx -= 48;
  3223  000496  0E30               	movlw	48
  3224  000498  5E2F               	subwf	asignarHorarios@Rx^0,f,c
  3225  00049A                     
  3226                           ;main.c: 332:                 hora = Rx;
  3227  00049A  C02F  F02B         	movff	asignarHorarios@Rx,asignarHorarios@hora
  3228  00049E                     
  3229                           ;main.c: 333:                 hora *= 10;
  3230  00049E  0E0A               	movlw	10
  3231  0004A0  022B               	mulwf	asignarHorarios@hora^0,c
  3232  0004A2  50F3               	movf	prodl,w,c
  3233  0004A4  6E2B               	movwf	asignarHorarios@hora^0,c
  3234                           
  3235                           ;main.c: 334:             } else {
  3236  0004A6  EF67  F002         	goto	l1998
  3237  0004AA                     l1988:
  3238                           
  3239                           ;main.c: 335:                 datoCapturado = 1;
  3240  0004AA  0E01               	movlw	1
  3241  0004AC  6E2C               	movwf	asignarHorarios@datoCapturado^0,c
  3242  0004AE                     
  3243                           ;main.c: 336:                 Rx -= 48;
  3244  0004AE  0E30               	movlw	48
  3245  0004B0  5E2F               	subwf	asignarHorarios@Rx^0,f,c
  3246  0004B2                     
  3247                           ;main.c: 337:                 hora += Rx;
  3248  0004B2  502F               	movf	asignarHorarios@Rx^0,w,c
  3249  0004B4  262B               	addwf	asignarHorarios@hora^0,f,c
  3250  0004B6  EF67  F002         	goto	l1998
  3251  0004BA                     l1994:
  3252                           
  3253                           ;main.c: 340:             datoCapturado = 0;
  3254  0004BA  0E00               	movlw	0
  3255  0004BC  6E2C               	movwf	asignarHorarios@datoCapturado^0,c
  3256  0004BE                     
  3257                           ;main.c: 341:             UART_printf("\r\n DATO NO RECIBIDO \r\n");
  3258  0004BE  0EC9               	movlw	low STR_1
  3259  0004C0  6E1E               	movwf	UART_printf@cadena^0,c
  3260  0004C2  0E7F               	movlw	high STR_1
  3261  0004C4  6E1F               	movwf	(UART_printf@cadena+1)^0,c
  3262  0004C6  EC1F  F007         	call	_UART_printf	;wreg free
  3263                           
  3264                           ;main.c: 342:             break;
  3265  0004CA  EF77  F002         	goto	l2002
  3266  0004CE                     l1998:
  3267                           
  3268                           ;main.c: 344:     }
  3269  0004CE  4A2D               	infsnz	asignarHorarios@i^0,f,c
  3270  0004D0  2A2E               	incf	(asignarHorarios@i+1)^0,f,c
  3271  0004D2  BE2E               	btfsc	(asignarHorarios@i+1)^0,7,c
  3272  0004D4  EF75  F002         	goto	u1091
  3273  0004D8  502E               	movf	(asignarHorarios@i+1)^0,w,c
  3274  0004DA  E109               	bnz	u1090
  3275  0004DC  0E02               	movlw	2
  3276  0004DE  5C2D               	subwf	asignarHorarios@i^0,w,c
  3277  0004E0  A0D8               	btfss	status,0,c
  3278  0004E2  EF75  F002         	goto	u1091
  3279  0004E6  EF77  F002         	goto	u1090
  3280  0004EA                     u1091:
  3281  0004EA  EF2F  F002         	goto	l1974
  3282  0004EE                     u1090:
  3283  0004EE                     l2002:
  3284                           
  3285                           ;main.c: 346:     if (datoCapturado && !esperandoDatos) {
  3286  0004EE  502C               	movf	asignarHorarios@datoCapturado^0,w,c
  3287  0004F0  B4D8               	btfsc	status,2,c
  3288  0004F2  EF7D  F002         	goto	u1101
  3289  0004F6  EF7F  F002         	goto	u1100
  3290  0004FA                     u1101:
  3291  0004FA  EFC6  F002         	goto	l254
  3292  0004FE                     u1100:
  3293  0004FE  503B               	movf	_esperandoDatos^0,w,c
  3294  000500  A4D8               	btfss	status,2,c
  3295  000502  EF85  F002         	goto	u1111
  3296  000506  EF87  F002         	goto	u1110
  3297  00050A                     u1111:
  3298  00050A  EFC6  F002         	goto	l254
  3299  00050E                     u1110:
  3300  00050E                     
  3301                           ;main.c: 348:         UART_printf("\r\n Ingrese 1 para regar || ingrese 0 para no regar:
      +                           \r\n");
  3302  00050E  0EC1               	movlw	low STR_9
  3303  000510  6E1E               	movwf	UART_printf@cadena^0,c
  3304  000512  0E7D               	movlw	high STR_9
  3305  000514  6E1F               	movwf	(UART_printf@cadena+1)^0,c
  3306  000516  EC1F  F007         	call	_UART_printf	;wreg free
  3307  00051A                     
  3308                           ;main.c: 350:         Rx = UART_read();
  3309  00051A  EC51  F006         	call	_UART_read	;wreg free
  3310  00051E  6E2F               	movwf	asignarHorarios@Rx^0,c
  3311  000520                     
  3312                           ;main.c: 351:         Rx -= 48;
  3313  000520  0E30               	movlw	48
  3314  000522  5E2F               	subwf	asignarHorarios@Rx^0,f,c
  3315  000524                     
  3316                           ;main.c: 353:         if (Rx != 1 && Rx != 0)
  3317  000524  042F               	decf	asignarHorarios@Rx^0,w,c
  3318  000526  B4D8               	btfsc	status,2,c
  3319  000528  EF98  F002         	goto	u1121
  3320  00052C  EF9A  F002         	goto	u1120
  3321  000530                     u1121:
  3322  000530  EFA4  F002         	goto	l251
  3323  000534                     u1120:
  3324  000534  502F               	movf	asignarHorarios@Rx^0,w,c
  3325  000536  B4D8               	btfsc	status,2,c
  3326  000538  EFA0  F002         	goto	u1131
  3327  00053C  EFA2  F002         	goto	u1130
  3328  000540                     u1131:
  3329  000540  EFA4  F002         	goto	l251
  3330  000544                     u1130:
  3331  000544                     
  3332                           ;main.c: 354:             Rx = 0;
  3333  000544  0E00               	movlw	0
  3334  000546  6E2F               	movwf	asignarHorarios@Rx^0,c
  3335  000548                     l251:
  3336                           
  3337                           ;main.c: 356:         if (!esperandoDatos) {
  3338  000548  503B               	movf	_esperandoDatos^0,w,c
  3339  00054A  A4D8               	btfss	status,2,c
  3340  00054C  EFAA  F002         	goto	u1141
  3341  000550  EFAC  F002         	goto	u1140
  3342  000554                     u1141:
  3343  000554  EFC0  F002         	goto	l2024
  3344  000558                     u1140:
  3345  000558                     
  3346                           ;main.c: 357:             UART_printf("\r\n Horario Modificado! \r\n");
  3347  000558  0E7F               	movlw	low STR_10
  3348  00055A  6E1E               	movwf	UART_printf@cadena^0,c
  3349  00055C  0E7F               	movlw	high STR_10
  3350  00055E  6E1F               	movwf	(UART_printf@cadena+1)^0,c
  3351  000560  EC1F  F007         	call	_UART_printf	;wreg free
  3352  000564                     
  3353                           ;main.c: 359:             horarios[hora].regar = Rx;
  3354  000564  502B               	movf	asignarHorarios@hora^0,w,c
  3355  000566  0D03               	mullw	3
  3356  000568  0E61               	movlw	low (_horarios+1)
  3357  00056A  24F3               	addwf	243,w,c
  3358  00056C  6ED9               	movwf	fsr2l,c
  3359  00056E  0E00               	movlw	high (_horarios+1)
  3360  000570  20F4               	addwfc	prodh,w,c
  3361  000572  6EDA               	movwf	fsr2h,c
  3362  000574  C02F  FFDF         	movff	asignarHorarios@Rx,indf2
  3363  000578                     
  3364                           ;main.c: 361:             escribeHorariosMemoria();
  3365  000578  EC4D  F003         	call	_escribeHorariosMemoria	;wreg free
  3366                           
  3367                           ;main.c: 364:         }
  3368  00057C  EFC6  F002         	goto	l254
  3369  000580                     l2024:
  3370                           
  3371                           ;main.c: 366:             UART_printf("\r\n DATO NO RECIBIDO \r\n");
  3372  000580  0EC9               	movlw	low STR_1
  3373  000582  6E1E               	movwf	UART_printf@cadena^0,c
  3374  000584  0E7F               	movlw	high STR_1
  3375  000586  6E1F               	movwf	(UART_printf@cadena+1)^0,c
  3376  000588  EC1F  F007         	call	_UART_printf	;wreg free
  3377  00058C                     l254:
  3378  00058C  0012               	return		;funcret
  3379  00058E                     __end_of_asignarHorarios:
  3380                           	opt callstack 0
  3381                           
  3382 ;; *************** function _escribeHorariosMemoria *****************
  3383 ;; Defined at:
  3384 ;;		line 185 in file "main.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;		None
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;  i               2   12[COMRAM] int 
  3389 ;;  contMemoria     2   10[COMRAM] int 
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3399 ;;      Params:         0       0       0       0       0       0       0       0       0
  3400 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3401 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3402 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3403 ;;Total ram usage:        4 bytes
  3404 ;; Hardware stack levels used:    1
  3405 ;; Hardware stack levels required when called:    4
  3406 ;; This function calls:
  3407 ;;		___wmul
  3408 ;;		_escribe_eeprom
  3409 ;; This function is called by:
  3410 ;;		_asignarHorarios
  3411 ;;		_setTiempoRegar
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text17
  3416  00069A                     __ptext17:
  3417                           	opt callstack 0
  3418  00069A                     _escribeHorariosMemoria:
  3419                           	opt callstack 24
  3420  00069A                     
  3421                           ;main.c: 187:     int contMemoria = 0;
  3422  00069A  0E00               	movlw	0
  3423  00069C  6E28               	movwf	(escribeHorariosMemoria@contMemoria+1)^0,c
  3424  00069E  0E00               	movlw	0
  3425  0006A0  6E27               	movwf	escribeHorariosMemoria@contMemoria^0,c
  3426                           
  3427                           ;main.c: 188:     for (int i = 0; i < 24; i++) {
  3428  0006A2  0E00               	movlw	0
  3429  0006A4  6E2A               	movwf	(escribeHorariosMemoria@i+1)^0,c
  3430  0006A6  0E00               	movlw	0
  3431  0006A8  6E29               	movwf	escribeHorariosMemoria@i^0,c
  3432  0006AA                     l1832:
  3433                           
  3434                           ;main.c: 189:         escribe_eeprom(contMemoria++, horarios[i].hora);
  3435  0006AA  C027  F023         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  3436  0006AE  C028  F024         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  3437  0006B2  C029  F01D         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  3438  0006B6  C02A  F01E         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  3439  0006BA  0E00               	movlw	0
  3440  0006BC  6E20               	movwf	(___wmul@multiplicand+1)^0,c
  3441  0006BE  0E03               	movlw	3
  3442  0006C0  6E1F               	movwf	___wmul@multiplicand^0,c
  3443  0006C2  ECA2  F007         	call	___wmul	;wreg free
  3444  0006C6  0E60               	movlw	low _horarios
  3445  0006C8  241D               	addwf	?___wmul^0,w,c
  3446  0006CA  6ED9               	movwf	fsr2l,c
  3447  0006CC  0E00               	movlw	high _horarios
  3448  0006CE  201E               	addwfc	(?___wmul+1)^0,w,c
  3449  0006D0  6EDA               	movwf	fsr2h,c
  3450  0006D2  50DF               	movf	indf2,w,c
  3451  0006D4  6E25               	movwf	escribe_eeprom@dato^0,c
  3452  0006D6  EC3A  F007         	call	_escribe_eeprom	;wreg free
  3453  0006DA  4A27               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  3454  0006DC  2A28               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  3455  0006DE                     
  3456                           ;main.c: 190:         escribe_eeprom(contMemoria++, horarios[i].regar);
  3457  0006DE  C027  F023         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  3458  0006E2  C028  F024         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  3459  0006E6  C029  F01D         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  3460  0006EA  C02A  F01E         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  3461  0006EE  0E00               	movlw	0
  3462  0006F0  6E20               	movwf	(___wmul@multiplicand+1)^0,c
  3463  0006F2  0E03               	movlw	3
  3464  0006F4  6E1F               	movwf	___wmul@multiplicand^0,c
  3465  0006F6  ECA2  F007         	call	___wmul	;wreg free
  3466  0006FA  0E61               	movlw	low (_horarios+1)
  3467  0006FC  241D               	addwf	?___wmul^0,w,c
  3468  0006FE  6ED9               	movwf	fsr2l,c
  3469  000700  0E00               	movlw	high (_horarios+1)
  3470  000702  201E               	addwfc	(?___wmul+1)^0,w,c
  3471  000704  6EDA               	movwf	fsr2h,c
  3472  000706  50DF               	movf	indf2,w,c
  3473  000708  6E25               	movwf	escribe_eeprom@dato^0,c
  3474  00070A  EC3A  F007         	call	_escribe_eeprom	;wreg free
  3475  00070E  4A27               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  3476  000710  2A28               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  3477  000712                     
  3478                           ;main.c: 191:         escribe_eeprom(contMemoria++, horarios[i].tiempoRegar);
  3479  000712  C027  F023         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  3480  000716  C028  F024         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  3481  00071A  C029  F01D         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  3482  00071E  C02A  F01E         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  3483  000722  0E00               	movlw	0
  3484  000724  6E20               	movwf	(___wmul@multiplicand+1)^0,c
  3485  000726  0E03               	movlw	3
  3486  000728  6E1F               	movwf	___wmul@multiplicand^0,c
  3487  00072A  ECA2  F007         	call	___wmul	;wreg free
  3488  00072E  0E62               	movlw	low (_horarios+2)
  3489  000730  241D               	addwf	?___wmul^0,w,c
  3490  000732  6ED9               	movwf	fsr2l,c
  3491  000734  0E00               	movlw	high (_horarios+2)
  3492  000736  201E               	addwfc	(?___wmul+1)^0,w,c
  3493  000738  6EDA               	movwf	fsr2h,c
  3494  00073A  50DF               	movf	indf2,w,c
  3495  00073C  6E25               	movwf	escribe_eeprom@dato^0,c
  3496  00073E  EC3A  F007         	call	_escribe_eeprom	;wreg free
  3497  000742  4A27               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  3498  000744  2A28               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  3499  000746                     
  3500                           ;main.c: 192:     }
  3501  000746  4A29               	infsnz	escribeHorariosMemoria@i^0,f,c
  3502  000748  2A2A               	incf	(escribeHorariosMemoria@i+1)^0,f,c
  3503  00074A  BE2A               	btfsc	(escribeHorariosMemoria@i+1)^0,7,c
  3504  00074C  EFB1  F003         	goto	u901
  3505  000750  502A               	movf	(escribeHorariosMemoria@i+1)^0,w,c
  3506  000752  E109               	bnz	u900
  3507  000754  0E18               	movlw	24
  3508  000756  5C29               	subwf	escribeHorariosMemoria@i^0,w,c
  3509  000758  A0D8               	btfss	status,0,c
  3510  00075A  EFB1  F003         	goto	u901
  3511  00075E  EFB3  F003         	goto	u900
  3512  000762                     u901:
  3513  000762  EF55  F003         	goto	l1832
  3514  000766                     u900:
  3515  000766  0012               	return		;funcret
  3516  000768                     __end_of_escribeHorariosMemoria:
  3517                           	opt callstack 0
  3518                           
  3519 ;; *************** function _escribe_eeprom *****************
  3520 ;; Defined at:
  3521 ;;		line 156 in file "main.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;  direccion       2    6[COMRAM] unsigned short 
  3524 ;;  dato            1    8[COMRAM] unsigned char 
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;		None
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  1    wreg      void 
  3529 ;; Registers used:
  3530 ;;		wreg, status,2, status,0, cstack
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3536 ;;      Params:         3       0       0       0       0       0       0       0       0
  3537 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3538 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3539 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3540 ;;Total ram usage:        4 bytes
  3541 ;; Hardware stack levels used:    1
  3542 ;; Hardware stack levels required when called:    3
  3543 ;; This function calls:
  3544 ;;		_i2c_detener
  3545 ;;		_i2c_envia_dato
  3546 ;;		_i2c_inicia_com
  3547 ;; This function is called by:
  3548 ;;		_escribeHorariosMemoria
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           	psect	text18
  3553  000E74                     __ptext18:
  3554                           	opt callstack 0
  3555  000E74                     _escribe_eeprom:
  3556                           	opt callstack 24
  3557  000E74                     
  3558                           ;main.c: 157:     i2c_inicia_com();
  3559  000E74  EC20  F008         	call	_i2c_inicia_com	;wreg free
  3560                           
  3561                           ;main.c: 158:     i2c_envia_dato(0xAE);
  3562  000E78  0EAE               	movlw	174
  3563  000E7A  EC11  F008         	call	_i2c_envia_dato
  3564                           
  3565                           ;main.c: 159:     i2c_envia_dato(direccion >> 8);
  3566  000E7E  5024               	movf	(escribe_eeprom@direccion+1)^0,w,c
  3567  000E80  EC11  F008         	call	_i2c_envia_dato
  3568                           
  3569                           ;main.c: 161:     i2c_envia_dato(direccion);
  3570  000E84  5023               	movf	escribe_eeprom@direccion^0,w,c
  3571  000E86  EC11  F008         	call	_i2c_envia_dato
  3572                           
  3573                           ;main.c: 163:     i2c_envia_dato(dato);
  3574  000E8A  5025               	movf	escribe_eeprom@dato^0,w,c
  3575  000E8C  EC11  F008         	call	_i2c_envia_dato
  3576                           
  3577                           ;main.c: 164:     i2c_detener();
  3578  000E90  EC24  F008         	call	_i2c_detener	;wreg free
  3579  000E94                     
  3580                           ;main.c: 165:     _delay((unsigned long)((10)*(4000000/4000.0)));
  3581  000E94  0E0D               	movlw	13
  3582  000E96  6E26               	movwf	??_escribe_eeprom^0,c
  3583  000E98  0EFC               	movlw	252
  3584  000E9A                     u1487:
  3585  000E9A  2EE8               	decfsz	wreg,f,c
  3586  000E9C  D7FE               	bra	u1487
  3587  000E9E  2E26               	decfsz	??_escribe_eeprom^0,f,c
  3588  000EA0  D7FC               	bra	u1487
  3589  000EA2  0012               	return		;funcret
  3590  000EA4                     __end_of_escribe_eeprom:
  3591                           	opt callstack 0
  3592                           
  3593 ;; *************** function _UART_read *****************
  3594 ;; Defined at:
  3595 ;;		line 33 in file "./UART.h"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;		None
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;		None
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  1    wreg      unsigned char 
  3602 ;; Registers used:
  3603 ;;		wreg, status,2
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3609 ;;      Params:         0       0       0       0       0       0       0       0       0
  3610 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3611 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3612 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3613 ;;Total ram usage:        0 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; Hardware stack levels required when called:    1
  3616 ;; This function calls:
  3617 ;;		Nothing
  3618 ;; This function is called by:
  3619 ;;		_setRtc
  3620 ;;		_asignarHorarios
  3621 ;;		_setTiempoRegar
  3622 ;;		_lecturaWifi
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text19
  3627  000CA2                     __ptext19:
  3628                           	opt callstack 0
  3629  000CA2                     _UART_read:
  3630                           	opt callstack 27
  3631  000CA2                     
  3632                           ;./UART.h: 35:     TMR0 = VALOR_TIMER0UART;
  3633  000CA2  0E67               	movlw	103
  3634  000CA4  6ED7               	movwf	215,c	;volatile
  3635  000CA6  0E69               	movlw	105
  3636  000CA8  6ED6               	movwf	214,c	;volatile
  3637                           
  3638                           ;./UART.h: 36:     esperaDatoConcluida = 0;
  3639  000CAA  0E00               	movlw	0
  3640  000CAC  6E1B               	movwf	_esperaDatoConcluida^0,c
  3641                           
  3642                           ;./UART.h: 37:     esperandoDatos = 1;
  3643  000CAE  0E01               	movlw	1
  3644  000CB0  6E3B               	movwf	_esperandoDatos^0,c
  3645                           
  3646                           ;./UART.h: 38:     byteUart = 0;
  3647  000CB2  0E00               	movlw	0
  3648  000CB4  6E1C               	movwf	_byteUart^0,c
  3649  000CB6                     l113:
  3650  000CB6  BA9E               	btfsc	158,5,c	;volatile
  3651  000CB8  EF60  F006         	goto	u781
  3652  000CBC  EF62  F006         	goto	u780
  3653  000CC0                     u781:
  3654  000CC0  EF6A  F006         	goto	l1746
  3655  000CC4                     u780:
  3656  000CC4  501B               	movf	_esperaDatoConcluida^0,w,c
  3657  000CC6  B4D8               	btfsc	status,2,c
  3658  000CC8  EF68  F006         	goto	u791
  3659  000CCC  EF6A  F006         	goto	u790
  3660  000CD0                     u791:
  3661  000CD0  EF5B  F006         	goto	l113
  3662  000CD4                     u790:
  3663  000CD4                     l1746:
  3664                           
  3665                           ;./UART.h: 42:     if (!esperaDatoConcluida) {
  3666  000CD4  501B               	movf	_esperaDatoConcluida^0,w,c
  3667  000CD6  A4D8               	btfss	status,2,c
  3668  000CD8  EF70  F006         	goto	u801
  3669  000CDC  EF72  F006         	goto	u800
  3670  000CE0                     u801:
  3671  000CE0  EF76  F006         	goto	l118
  3672  000CE4                     u800:
  3673  000CE4                     
  3674                           ;./UART.h: 43:         byteUart = RCREG;
  3675  000CE4  CFAE F01C          	movff	4014,_byteUart	;volatile
  3676  000CE8                     
  3677                           ;./UART.h: 44:         esperandoDatos = 0;
  3678  000CE8  0E00               	movlw	0
  3679  000CEA  6E3B               	movwf	_esperandoDatos^0,c
  3680  000CEC                     l118:
  3681                           
  3682                           ;./UART.h: 47:     return byteUart;
  3683  000CEC  501C               	movf	_byteUart^0,w,c
  3684  000CEE  0012               	return		;funcret
  3685  000CF0                     __end_of_UART_read:
  3686                           	opt callstack 0
  3687                           
  3688 ;; *************** function _UART_printf *****************
  3689 ;; Defined at:
  3690 ;;		line 55 in file "./UART.h"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;  cadena          2    1[COMRAM] PTR unsigned char 
  3693 ;;		 -> STR_24(42), STR_23(3), STR_22(14), STR_21(49), 
  3694 ;;		 -> STR_20(37), STR_19(27), STR_18(37), STR_17(37), 
  3695 ;;		 -> STR_16(23), STR_15(72), STR_14(23), STR_13(51), 
  3696 ;;		 -> STR_12(23), STR_11(23), STR_10(26), STR_9(55), 
  3697 ;;		 -> STR_8(23), STR_7(51), STR_6(25), STR_5(37), 
  3698 ;;		 -> STR_4(31), STR_3(43), STR_2(16), STR_1(23), 
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;		None
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      void 
  3703 ;; Registers used:
  3704 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3710 ;;      Params:         2       0       0       0       0       0       0       0       0
  3711 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3712 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3713 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3714 ;;Total ram usage:        2 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; Hardware stack levels required when called:    2
  3717 ;; This function calls:
  3718 ;;		_UART_write
  3719 ;; This function is called by:
  3720 ;;		_setRtc
  3721 ;;		_fijaHoraRtc
  3722 ;;		_asignarHorarios
  3723 ;;		_setTiempoRegar
  3724 ;;		_mostrarMenu
  3725 ;;		_sistemaPrincipal
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	text20
  3730  000E3E                     __ptext20:
  3731                           	opt callstack 0
  3732  000E3E                     _UART_printf:
  3733                           	opt callstack 26
  3734  000E3E                     
  3735                           ;./UART.h: 56:     while (*cadena) {
  3736  000E3E  EF2B  F007         	goto	l1760
  3737  000E42                     l1756:
  3738                           
  3739                           ;./UART.h: 57:         UART_write(*cadena++);
  3740  000E42  C01E  FFF6         	movff	UART_printf@cadena,tblptrl
  3741  000E46  C01F  FFF7         	movff	UART_printf@cadena+1,tblptrh
  3742  000E4A                     	if	0	;tblptru may be non-zero
  3743  000E4A                     	endif
  3744  000E4A                     	if	0	;tblptru may be non-zero
  3745  000E4A                     	endif
  3746  000E4A  0008               	tblrd		*
  3747  000E4C  50F5               	movf	tablat,w,c
  3748  000E4E  ECFB  F007         	call	_UART_write
  3749  000E52  4A1E               	infsnz	UART_printf@cadena^0,f,c
  3750  000E54  2A1F               	incf	(UART_printf@cadena+1)^0,f,c
  3751  000E56                     l1760:
  3752                           
  3753                           ;./UART.h: 56:     while (*cadena) {
  3754  000E56  C01E  FFF6         	movff	UART_printf@cadena,tblptrl
  3755  000E5A  C01F  FFF7         	movff	UART_printf@cadena+1,tblptrh
  3756  000E5E                     	if	0	;tblptru may be non-zero
  3757  000E5E                     	endif
  3758  000E5E                     	if	0	;tblptru may be non-zero
  3759  000E5E                     	endif
  3760  000E5E  0008               	tblrd		*
  3761  000E60  50F5               	movf	tablat,w,c
  3762  000E62  0900               	iorlw	0
  3763  000E64  A4D8               	btfss	status,2,c
  3764  000E66  EF37  F007         	goto	u811
  3765  000E6A  EF39  F007         	goto	u810
  3766  000E6E                     u811:
  3767  000E6E  EF21  F007         	goto	l1756
  3768  000E72                     u810:
  3769  000E72  0012               	return		;funcret
  3770  000E74                     __end_of_UART_printf:
  3771                           	opt callstack 0
  3772                           
  3773 ;; *************** function _UART_write *****************
  3774 ;; Defined at:
  3775 ;;		line 50 in file "./UART.h"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;  dato            1    wreg     unsigned char 
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;  dato            1    0[COMRAM] unsigned char 
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      void 
  3782 ;; Registers used:
  3783 ;;		wreg
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3789 ;;      Params:         0       0       0       0       0       0       0       0       0
  3790 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3791 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3792 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3793 ;;Total ram usage:        1 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; Hardware stack levels required when called:    1
  3796 ;; This function calls:
  3797 ;;		Nothing
  3798 ;; This function is called by:
  3799 ;;		_UART_printf
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           	psect	text21
  3804  000FF6                     __ptext21:
  3805                           	opt callstack 0
  3806  000FF6                     _UART_write:
  3807                           	opt callstack 26
  3808                           
  3809                           ;incstack = 0
  3810                           ;UART_write@dato stored from wreg
  3811  000FF6  6E1D               	movwf	UART_write@dato^0,c
  3812  000FF8                     
  3813                           ;./UART.h: 51:     TXREG = dato;
  3814  000FF8  C01D  FFAD         	movff	UART_write@dato,4013	;volatile
  3815  000FFC                     l122:
  3816  000FFC  A2AC               	btfss	172,1,c	;volatile
  3817  000FFE  EF03  F008         	goto	u771
  3818  001002  EF05  F008         	goto	u770
  3819  001006                     u771:
  3820  001006  EFFE  F007         	goto	l122
  3821  00100A                     u770:
  3822  00100A  0012               	return		;funcret
  3823  00100C                     __end_of_UART_write:
  3824                           	opt callstack 0
  3825                           
  3826 ;; *************** function _restablecerDatosSensor *****************
  3827 ;; Defined at:
  3828 ;;		line 457 in file "main.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;		None
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;  i               2    4[COMRAM] int 
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  1    wreg      void 
  3835 ;; Registers used:
  3836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3842 ;;      Params:         0       0       0       0       0       0       0       0       0
  3843 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3844 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3845 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3846 ;;Total ram usage:        2 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; Hardware stack levels required when called:    2
  3849 ;; This function calls:
  3850 ;;		_constructorSensor
  3851 ;; This function is called by:
  3852 ;;		_main
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           	psect	text22
  3857  000C52                     __ptext22:
  3858                           	opt callstack 0
  3859  000C52                     _restablecerDatosSensor:
  3860                           	opt callstack 28
  3861  000C52                     
  3862                           ;main.c: 458:     for (int i = 0; i < 3; i++)
  3863  000C52  0E00               	movlw	0
  3864  000C54  6E22               	movwf	(restablecerDatosSensor@i+1)^0,c
  3865  000C56  0E00               	movlw	0
  3866  000C58  6E21               	movwf	restablecerDatosSensor@i^0,c
  3867  000C5A                     l2238:
  3868                           
  3869                           ;main.c: 459:         constructorSensor(sensores[i], 0, i);
  3870  000C5A  90D8               	bcf	status,0,c
  3871  000C5C  3421               	rlcf	restablecerDatosSensor@i^0,w,c
  3872  000C5E  6ED9               	movwf	fsr2l,c
  3873  000C60  3422               	rlcf	(restablecerDatosSensor@i+1)^0,w,c
  3874  000C62  6EDA               	movwf	fsr2h,c
  3875  000C64  0E01               	movlw	low _sensores
  3876  000C66  26D9               	addwf	fsr2l,f,c
  3877  000C68  0E00               	movlw	high _sensores
  3878  000C6A  22DA               	addwfc	fsr2h,f,c
  3879  000C6C  CFDE F01D          	movff	postinc2,constructorSensor@s
  3880  000C70  CFDD F01E          	movff	postdec2,constructorSensor@s+1
  3881  000C74  0E00               	movlw	0
  3882  000C76  6E1F               	movwf	constructorSensor@humedad^0,c
  3883  000C78  C021  F020         	movff	restablecerDatosSensor@i,constructorSensor@pin
  3884  000C7C  EC17  F008         	call	_constructorSensor	;wreg free
  3885  000C80  4A21               	infsnz	restablecerDatosSensor@i^0,f,c
  3886  000C82  2A22               	incf	(restablecerDatosSensor@i+1)^0,f,c
  3887  000C84  BE22               	btfsc	(restablecerDatosSensor@i+1)^0,7,c
  3888  000C86  EF4E  F006         	goto	u1361
  3889  000C8A  5022               	movf	(restablecerDatosSensor@i+1)^0,w,c
  3890  000C8C  E109               	bnz	u1360
  3891  000C8E  0E03               	movlw	3
  3892  000C90  5C21               	subwf	restablecerDatosSensor@i^0,w,c
  3893  000C92  A0D8               	btfss	status,0,c
  3894  000C94  EF4E  F006         	goto	u1361
  3895  000C98  EF50  F006         	goto	u1360
  3896  000C9C                     u1361:
  3897  000C9C  EF2D  F006         	goto	l2238
  3898  000CA0                     u1360:
  3899  000CA0  0012               	return		;funcret
  3900  000CA2                     __end_of_restablecerDatosSensor:
  3901                           	opt callstack 0
  3902                           
  3903 ;; *************** function _constructorSensor *****************
  3904 ;; Defined at:
  3905 ;;		line 90 in file "main.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;  s               2    0[COMRAM] struct .
  3908 ;;  humedad         1    2[COMRAM] unsigned char 
  3909 ;;  pin             1    3[COMRAM] unsigned char 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;		None
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      void 
  3914 ;; Registers used:
  3915 ;;		None
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3921 ;;      Params:         4       0       0       0       0       0       0       0       0
  3922 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3923 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3924 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3925 ;;Total ram usage:        4 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    1
  3928 ;; This function calls:
  3929 ;;		Nothing
  3930 ;; This function is called by:
  3931 ;;		_restablecerDatosSensor
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           	psect	text23
  3936  00102E                     __ptext23:
  3937                           	opt callstack 0
  3938  00102E                     _constructorSensor:
  3939                           	opt callstack 28
  3940  00102E                     
  3941                           ;main.c: 92:     s.humedadMedida = humedad;
  3942  00102E  C01F  F01D         	movff	constructorSensor@humedad,constructorSensor@s
  3943                           
  3944                           ;main.c: 93:     s.pinSensor = pin;
  3945  001032  C020  F01E         	movff	constructorSensor@pin,constructorSensor@s+1
  3946  001036  0012               	return		;funcret
  3947  001038                     __end_of_constructorSensor:
  3948                           	opt callstack 0
  3949                           
  3950 ;; *************** function _leeHorariosMemoria *****************
  3951 ;; Defined at:
  3952 ;;		line 195 in file "main.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;		None
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;  i               2    8[COMRAM] int 
  3957 ;;  contMemoria     2    6[COMRAM] int 
  3958 ;; Return value:  Size  Location     Type
  3959 ;;                  1    wreg      void 
  3960 ;; Registers used:
  3961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3962 ;; Tracked objects:
  3963 ;;		On entry : 0/0
  3964 ;;		On exit  : 0/0
  3965 ;;		Unchanged: 0/0
  3966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3967 ;;      Params:         0       0       0       0       0       0       0       0       0
  3968 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3969 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3970 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3971 ;;Total ram usage:        4 bytes
  3972 ;; Hardware stack levels used:    1
  3973 ;; Hardware stack levels required when called:    4
  3974 ;; This function calls:
  3975 ;;		___wmul
  3976 ;;		_leer_eeprom
  3977 ;; This function is called by:
  3978 ;;		_main
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982                           	psect	text24
  3983  000834                     __ptext24:
  3984                           	opt callstack 0
  3985  000834                     _leeHorariosMemoria:
  3986                           	opt callstack 26
  3987  000834                     
  3988                           ;main.c: 197:     int contMemoria = 0;
  3989  000834  0E00               	movlw	0
  3990  000836  6E24               	movwf	(leeHorariosMemoria@contMemoria+1)^0,c
  3991  000838  0E00               	movlw	0
  3992  00083A  6E23               	movwf	leeHorariosMemoria@contMemoria^0,c
  3993                           
  3994                           ;main.c: 199:     for (int i = 0; i < 24; i++) {
  3995  00083C  0E00               	movlw	0
  3996  00083E  6E26               	movwf	(leeHorariosMemoria@i+1)^0,c
  3997  000840  0E00               	movlw	0
  3998  000842  6E25               	movwf	leeHorariosMemoria@i^0,c
  3999  000844                     l2218:
  4000                           
  4001                           ;main.c: 200:         horarios[i].hora = leer_eeprom(contMemoria++);
  4002  000844  C025  F01D         	movff	leeHorariosMemoria@i,___wmul@multiplier
  4003  000848  C026  F01E         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  4004  00084C  0E00               	movlw	0
  4005  00084E  6E20               	movwf	(___wmul@multiplicand+1)^0,c
  4006  000850  0E03               	movlw	3
  4007  000852  6E1F               	movwf	___wmul@multiplicand^0,c
  4008  000854  ECA2  F007         	call	___wmul	;wreg free
  4009  000858  0E60               	movlw	low _horarios
  4010  00085A  241D               	addwf	?___wmul^0,w,c
  4011  00085C  6ED9               	movwf	fsr2l,c
  4012  00085E  0E00               	movlw	high _horarios
  4013  000860  201E               	addwfc	(?___wmul+1)^0,w,c
  4014  000862  6EDA               	movwf	fsr2h,c
  4015  000864  C023  F01F         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  4016  000868  C024  F020         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  4017  00086C  ECE6  F006         	call	_leer_eeprom	;wreg free
  4018  000870  6EDF               	movwf	indf2,c
  4019  000872  4A23               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  4020  000874  2A24               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  4021  000876                     
  4022                           ;main.c: 201:         horarios[i].regar = leer_eeprom(contMemoria++);
  4023  000876  C025  F01D         	movff	leeHorariosMemoria@i,___wmul@multiplier
  4024  00087A  C026  F01E         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  4025  00087E  0E00               	movlw	0
  4026  000880  6E20               	movwf	(___wmul@multiplicand+1)^0,c
  4027  000882  0E03               	movlw	3
  4028  000884  6E1F               	movwf	___wmul@multiplicand^0,c
  4029  000886  ECA2  F007         	call	___wmul	;wreg free
  4030  00088A  0E61               	movlw	low (_horarios+1)
  4031  00088C  241D               	addwf	?___wmul^0,w,c
  4032  00088E  6ED9               	movwf	fsr2l,c
  4033  000890  0E00               	movlw	high (_horarios+1)
  4034  000892  201E               	addwfc	(?___wmul+1)^0,w,c
  4035  000894  6EDA               	movwf	fsr2h,c
  4036  000896  C023  F01F         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  4037  00089A  C024  F020         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  4038  00089E  ECE6  F006         	call	_leer_eeprom	;wreg free
  4039  0008A2  6EDF               	movwf	indf2,c
  4040  0008A4  4A23               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  4041  0008A6  2A24               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  4042  0008A8                     
  4043                           ;main.c: 202:         horarios[i].tiempoRegar = leer_eeprom(contMemoria++);
  4044  0008A8  C025  F01D         	movff	leeHorariosMemoria@i,___wmul@multiplier
  4045  0008AC  C026  F01E         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  4046  0008B0  0E00               	movlw	0
  4047  0008B2  6E20               	movwf	(___wmul@multiplicand+1)^0,c
  4048  0008B4  0E03               	movlw	3
  4049  0008B6  6E1F               	movwf	___wmul@multiplicand^0,c
  4050  0008B8  ECA2  F007         	call	___wmul	;wreg free
  4051  0008BC  0E62               	movlw	low (_horarios+2)
  4052  0008BE  241D               	addwf	?___wmul^0,w,c
  4053  0008C0  6ED9               	movwf	fsr2l,c
  4054  0008C2  0E00               	movlw	high (_horarios+2)
  4055  0008C4  201E               	addwfc	(?___wmul+1)^0,w,c
  4056  0008C6  6EDA               	movwf	fsr2h,c
  4057  0008C8  C023  F01F         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  4058  0008CC  C024  F020         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  4059  0008D0  ECE6  F006         	call	_leer_eeprom	;wreg free
  4060  0008D4  6EDF               	movwf	indf2,c
  4061  0008D6  4A23               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  4062  0008D8  2A24               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  4063  0008DA                     
  4064                           ;main.c: 203:     }
  4065  0008DA  4A25               	infsnz	leeHorariosMemoria@i^0,f,c
  4066  0008DC  2A26               	incf	(leeHorariosMemoria@i+1)^0,f,c
  4067  0008DE  BE26               	btfsc	(leeHorariosMemoria@i+1)^0,7,c
  4068  0008E0  EF7B  F004         	goto	u1351
  4069  0008E4  5026               	movf	(leeHorariosMemoria@i+1)^0,w,c
  4070  0008E6  E109               	bnz	u1350
  4071  0008E8  0E18               	movlw	24
  4072  0008EA  5C25               	subwf	leeHorariosMemoria@i^0,w,c
  4073  0008EC  A0D8               	btfss	status,0,c
  4074  0008EE  EF7B  F004         	goto	u1351
  4075  0008F2  EF7D  F004         	goto	u1350
  4076  0008F6                     u1351:
  4077  0008F6  EF22  F004         	goto	l2218
  4078  0008FA                     u1350:
  4079  0008FA  0012               	return		;funcret
  4080  0008FC                     __end_of_leeHorariosMemoria:
  4081                           	opt callstack 0
  4082                           
  4083 ;; *************** function _leer_eeprom *****************
  4084 ;; Defined at:
  4085 ;;		line 168 in file "main.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;  direccion       2    2[COMRAM] unsigned short 
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;  dato            1    5[COMRAM] unsigned char 
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  1    wreg      unsigned char 
  4092 ;; Registers used:
  4093 ;;		wreg, status,2, status,0, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4099 ;;      Params:         2       0       0       0       0       0       0       0       0
  4100 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4101 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4102 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4103 ;;Total ram usage:        4 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:    3
  4106 ;; This function calls:
  4107 ;;		_i2c_detener
  4108 ;;		_i2c_envia_dato
  4109 ;;		_i2c_inicia_com
  4110 ;;		_i2c_recibe_dato
  4111 ;;		_i2c_reinicia_com
  4112 ;; This function is called by:
  4113 ;;		_leeHorariosMemoria
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117                           	psect	text25
  4118  000DCC                     __ptext25:
  4119                           	opt callstack 0
  4120  000DCC                     _leer_eeprom:
  4121                           	opt callstack 26
  4122  000DCC                     
  4123                           ;main.c: 170:     unsigned char dato;;main.c: 172:     i2c_inicia_com();
  4124  000DCC  EC20  F008         	call	_i2c_inicia_com	;wreg free
  4125                           
  4126                           ;main.c: 173:     i2c_envia_dato(0xAE);
  4127  000DD0  0EAE               	movlw	174
  4128  000DD2  EC11  F008         	call	_i2c_envia_dato
  4129                           
  4130                           ;main.c: 174:     i2c_envia_dato(direccion >> 8);
  4131  000DD6  5020               	movf	(leer_eeprom@direccion+1)^0,w,c
  4132  000DD8  EC11  F008         	call	_i2c_envia_dato
  4133                           
  4134                           ;main.c: 175:     i2c_envia_dato(direccion);
  4135  000DDC  501F               	movf	leer_eeprom@direccion^0,w,c
  4136  000DDE  EC11  F008         	call	_i2c_envia_dato
  4137                           
  4138                           ;main.c: 176:     i2c_reinicia_com();
  4139  000DE2  EC1C  F008         	call	_i2c_reinicia_com	;wreg free
  4140                           
  4141                           ;main.c: 177:     i2c_envia_dato(0xAF);
  4142  000DE6  0EAF               	movlw	175
  4143  000DE8  EC11  F008         	call	_i2c_envia_dato
  4144                           
  4145                           ;main.c: 178:     dato = i2c_recibe_dato();
  4146  000DEC  ECE1  F007         	call	_i2c_recibe_dato	;wreg free
  4147  000DF0  6E22               	movwf	leer_eeprom@dato^0,c
  4148                           
  4149                           ;main.c: 179:     i2c_detener();
  4150  000DF2  EC24  F008         	call	_i2c_detener	;wreg free
  4151  000DF6                     
  4152                           ;main.c: 180:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4153  000DF6  0E0D               	movlw	13
  4154  000DF8  6E21               	movwf	??_leer_eeprom^0,c
  4155  000DFA  0EFC               	movlw	252
  4156  000DFC                     u1497:
  4157  000DFC  2EE8               	decfsz	wreg,f,c
  4158  000DFE  D7FE               	bra	u1497
  4159  000E00  2E21               	decfsz	??_leer_eeprom^0,f,c
  4160  000E02  D7FC               	bra	u1497
  4161  000E04                     
  4162                           ;main.c: 182:     return dato;
  4163  000E04  5022               	movf	leer_eeprom@dato^0,w,c
  4164  000E06  0012               	return		;funcret
  4165  000E08                     __end_of_leer_eeprom:
  4166                           	opt callstack 0
  4167                           
  4168 ;; *************** function _i2c_reinicia_com *****************
  4169 ;; Defined at:
  4170 ;;		line 37 in file "./I2C.h"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;		None
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;		None
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  1    wreg      void 
  4177 ;; Registers used:
  4178 ;;		wreg, status,2, status,0, cstack
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4184 ;;      Params:         0       0       0       0       0       0       0       0       0
  4185 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4186 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4187 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4188 ;;Total ram usage:        0 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:    2
  4191 ;; This function calls:
  4192 ;;		_i2c_espera
  4193 ;; This function is called by:
  4194 ;;		_leer_rtc
  4195 ;;		_leer_eeprom
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           	psect	text26
  4200  001038                     __ptext26:
  4201                           	opt callstack 0
  4202  001038                     _i2c_reinicia_com:
  4203                           	opt callstack 25
  4204  001038                     
  4205                           ;./I2C.h: 38:     i2c_espera();
  4206  001038  EC8F  F007         	call	_i2c_espera	;wreg free
  4207  00103C                     
  4208                           ;./I2C.h: 39:     SSPCON2bits.RSEN = 1;
  4209  00103C  82C5               	bsf	197,1,c	;volatile
  4210  00103E  0012               	return		;funcret
  4211  001040                     __end_of_i2c_reinicia_com:
  4212                           	opt callstack 0
  4213                           
  4214 ;; *************** function _i2c_recibe_dato *****************
  4215 ;; Defined at:
  4216 ;;		line 68 in file "./I2C.h"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;		None
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;  datoleido       1    1[COMRAM] unsigned char 
  4221 ;; Return value:  Size  Location     Type
  4222 ;;                  1    wreg      unsigned char 
  4223 ;; Registers used:
  4224 ;;		wreg, status,2, status,0, cstack
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4230 ;;      Params:         0       0       0       0       0       0       0       0       0
  4231 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4232 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4233 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4234 ;;Total ram usage:        1 bytes
  4235 ;; Hardware stack levels used:    1
  4236 ;; Hardware stack levels required when called:    2
  4237 ;; This function calls:
  4238 ;;		_i2c_espera
  4239 ;; This function is called by:
  4240 ;;		_leer_rtc
  4241 ;;		_leer_eeprom
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           	psect	text27
  4246  000FC2                     __ptext27:
  4247                           	opt callstack 0
  4248  000FC2                     _i2c_recibe_dato:
  4249                           	opt callstack 25
  4250  000FC2                     
  4251                           ;./I2C.h: 70:     unsigned char datoleido;;./I2C.h: 73:     i2c_espera();
  4252  000FC2  EC8F  F007         	call	_i2c_espera	;wreg free
  4253  000FC6                     
  4254                           ;./I2C.h: 74:     SSPCON2bits.RCEN = 1;
  4255  000FC6  86C5               	bsf	197,3,c	;volatile
  4256                           
  4257                           ;./I2C.h: 76:     i2c_espera();
  4258  000FC8  EC8F  F007         	call	_i2c_espera	;wreg free
  4259  000FCC                     
  4260                           ;./I2C.h: 77:     datoleido = SSPBUF;
  4261  000FCC  CFC9 F01E          	movff	4041,i2c_recibe_dato@datoleido	;volatile
  4262                           
  4263                           ;./I2C.h: 80:     i2c_espera();
  4264  000FD0  EC8F  F007         	call	_i2c_espera	;wreg free
  4265  000FD4                     
  4266                           ;./I2C.h: 82:     SSPCON2bits.ACKDT = 1;
  4267  000FD4  8AC5               	bsf	197,5,c	;volatile
  4268  000FD6                     
  4269                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
  4270  000FD6  88C5               	bsf	197,4,c	;volatile
  4271  000FD8                     
  4272                           ;./I2C.h: 91:     return datoleido;
  4273  000FD8  501E               	movf	i2c_recibe_dato@datoleido^0,w,c
  4274  000FDA  0012               	return		;funcret
  4275  000FDC                     __end_of_i2c_recibe_dato:
  4276                           	opt callstack 0
  4277                           
  4278 ;; *************** function _i2c_inicia_com *****************
  4279 ;; Defined at:
  4280 ;;		line 28 in file "./I2C.h"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;		None
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;		None
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  1    wreg      void 
  4287 ;; Registers used:
  4288 ;;		wreg, status,2, status,0, cstack
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4294 ;;      Params:         0       0       0       0       0       0       0       0       0
  4295 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4296 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4297 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4298 ;;Total ram usage:        0 bytes
  4299 ;; Hardware stack levels used:    1
  4300 ;; Hardware stack levels required when called:    2
  4301 ;; This function calls:
  4302 ;;		_i2c_espera
  4303 ;; This function is called by:
  4304 ;;		_escribe_rtc
  4305 ;;		_leer_rtc
  4306 ;;		_escribe_eeprom
  4307 ;;		_leer_eeprom
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           	psect	text28
  4312  001040                     __ptext28:
  4313                           	opt callstack 0
  4314  001040                     _i2c_inicia_com:
  4315                           	opt callstack 25
  4316  001040                     
  4317                           ;./I2C.h: 29:     i2c_espera();
  4318  001040  EC8F  F007         	call	_i2c_espera	;wreg free
  4319  001044                     
  4320                           ;./I2C.h: 30:     SSPCON2bits.SEN = 1;
  4321  001044  80C5               	bsf	197,0,c	;volatile
  4322  001046  0012               	return		;funcret
  4323  001048                     __end_of_i2c_inicia_com:
  4324                           	opt callstack 0
  4325                           
  4326 ;; *************** function _i2c_envia_dato *****************
  4327 ;; Defined at:
  4328 ;;		line 57 in file "./I2C.h"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  dato            1    wreg     unsigned char 
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;  dato            1    1[COMRAM] unsigned char 
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  1    wreg      unsigned char 
  4335 ;; Registers used:
  4336 ;;		wreg, status,2, status,0, cstack
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4342 ;;      Params:         0       0       0       0       0       0       0       0       0
  4343 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4345 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4346 ;;Total ram usage:        1 bytes
  4347 ;; Hardware stack levels used:    1
  4348 ;; Hardware stack levels required when called:    2
  4349 ;; This function calls:
  4350 ;;		_i2c_espera
  4351 ;; This function is called by:
  4352 ;;		_escribe_rtc
  4353 ;;		_leer_rtc
  4354 ;;		_escribe_eeprom
  4355 ;;		_leer_eeprom
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           	psect	text29
  4360  001022                     __ptext29:
  4361                           	opt callstack 0
  4362  001022                     _i2c_envia_dato:
  4363                           	opt callstack 25
  4364                           
  4365                           ;incstack = 0
  4366                           ;i2c_envia_dato@dato stored from wreg
  4367  001022  6E1E               	movwf	i2c_envia_dato@dato^0,c
  4368  001024                     
  4369                           ;./I2C.h: 58:     i2c_espera();
  4370  001024  EC8F  F007         	call	_i2c_espera	;wreg free
  4371  001028                     
  4372                           ;./I2C.h: 59:     SSPBUF = dato;
  4373  001028  C01E  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
  4374  00102C  0012               	return		;funcret
  4375  00102E                     __end_of_i2c_envia_dato:
  4376                           	opt callstack 0
  4377                           
  4378 ;; *************** function _i2c_detener *****************
  4379 ;; Defined at:
  4380 ;;		line 46 in file "./I2C.h"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;		None
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;		None
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      void 
  4387 ;; Registers used:
  4388 ;;		wreg, status,2, status,0, cstack
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4394 ;;      Params:         0       0       0       0       0       0       0       0       0
  4395 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4396 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4397 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4398 ;;Total ram usage:        0 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; Hardware stack levels required when called:    2
  4401 ;; This function calls:
  4402 ;;		_i2c_espera
  4403 ;; This function is called by:
  4404 ;;		_escribe_rtc
  4405 ;;		_leer_rtc
  4406 ;;		_escribe_eeprom
  4407 ;;		_leer_eeprom
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           	psect	text30
  4412  001048                     __ptext30:
  4413                           	opt callstack 0
  4414  001048                     _i2c_detener:
  4415                           	opt callstack 25
  4416  001048                     
  4417                           ;./I2C.h: 47:     i2c_espera();
  4418  001048  EC8F  F007         	call	_i2c_espera	;wreg free
  4419  00104C                     
  4420                           ;./I2C.h: 48:     SSPCON2bits.PEN = 1;
  4421  00104C  84C5               	bsf	197,2,c	;volatile
  4422  00104E  0012               	return		;funcret
  4423  001050                     __end_of_i2c_detener:
  4424                           	opt callstack 0
  4425                           
  4426 ;; *************** function _i2c_espera *****************
  4427 ;; Defined at:
  4428 ;;		line 20 in file "./I2C.h"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;		None
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;		None
  4433 ;; Return value:  Size  Location     Type
  4434 ;;                  1    wreg      void 
  4435 ;; Registers used:
  4436 ;;		wreg, status,2, status,0
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4442 ;;      Params:         0       0       0       0       0       0       0       0       0
  4443 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4444 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4445 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4446 ;;Total ram usage:        1 bytes
  4447 ;; Hardware stack levels used:    1
  4448 ;; Hardware stack levels required when called:    1
  4449 ;; This function calls:
  4450 ;;		Nothing
  4451 ;; This function is called by:
  4452 ;;		_i2c_inicia_com
  4453 ;;		_i2c_reinicia_com
  4454 ;;		_i2c_detener
  4455 ;;		_i2c_envia_dato
  4456 ;;		_i2c_recibe_dato
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           	psect	text31
  4461  000F1E                     __ptext31:
  4462                           	opt callstack 0
  4463  000F1E                     _i2c_espera:
  4464                           	opt callstack 25
  4465  000F1E                     l1700:
  4466  000F1E  CFC5 F01D          	movff	4037,??_i2c_espera	;volatile
  4467  000F22  0E1F               	movlw	31
  4468  000F24  161D               	andwf	??_i2c_espera^0,f,c
  4469  000F26  A4D8               	btfss	status,2,c
  4470  000F28  EF98  F007         	goto	u751
  4471  000F2C  EF9A  F007         	goto	u750
  4472  000F30                     u751:
  4473  000F30  EF8F  F007         	goto	l1700
  4474  000F34                     u750:
  4475  000F34  B4C7               	btfsc	199,2,c	;volatile
  4476  000F36  EF9F  F007         	goto	u761
  4477  000F3A  EFA1  F007         	goto	u760
  4478  000F3E                     u761:
  4479  000F3E  EF8F  F007         	goto	l1700
  4480  000F42                     u760:
  4481  000F42  0012               	return		;funcret
  4482  000F44                     __end_of_i2c_espera:
  4483                           	opt callstack 0
  4484                           
  4485 ;; *************** function _inicializarObjetos *****************
  4486 ;; Defined at:
  4487 ;;		line 115 in file "main.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;		None
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;  i               2    6[COMRAM] int 
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      void 
  4494 ;; Registers used:
  4495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4501 ;;      Params:         0       0       0       0       0       0       0       0       0
  4502 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4503 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4504 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4505 ;;Total ram usage:        2 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    2
  4508 ;; This function calls:
  4509 ;;		___wmul
  4510 ;; This function is called by:
  4511 ;;		_main
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text32
  4516  000998                     __ptext32:
  4517                           	opt callstack 0
  4518  000998                     _inicializarObjetos:
  4519                           	opt callstack 28
  4520  000998                     
  4521                           ;main.c: 117:     for (int i = 0; i < 24; i++) {
  4522  000998  0E00               	movlw	0
  4523  00099A  6E24               	movwf	(inicializarObjetos@i+1)^0,c
  4524  00099C  0E00               	movlw	0
  4525  00099E  6E23               	movwf	inicializarObjetos@i^0,c
  4526  0009A0                     l2206:
  4527                           
  4528                           ;main.c: 118:         horarios[i].hora = i;
  4529  0009A0  C023  F01D         	movff	inicializarObjetos@i,___wmul@multiplier
  4530  0009A4  C024  F01E         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  4531  0009A8  0E00               	movlw	0
  4532  0009AA  6E20               	movwf	(___wmul@multiplicand+1)^0,c
  4533  0009AC  0E03               	movlw	3
  4534  0009AE  6E1F               	movwf	___wmul@multiplicand^0,c
  4535  0009B0  ECA2  F007         	call	___wmul	;wreg free
  4536  0009B4  0E60               	movlw	low _horarios
  4537  0009B6  241D               	addwf	?___wmul^0,w,c
  4538  0009B8  6ED9               	movwf	fsr2l,c
  4539  0009BA  0E00               	movlw	high _horarios
  4540  0009BC  201E               	addwfc	(?___wmul+1)^0,w,c
  4541  0009BE  6EDA               	movwf	fsr2h,c
  4542  0009C0  C023  FFDF         	movff	inicializarObjetos@i,indf2
  4543                           
  4544                           ;main.c: 119:         horarios[i].regar = 0;
  4545  0009C4  C023  F01D         	movff	inicializarObjetos@i,___wmul@multiplier
  4546  0009C8  C024  F01E         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  4547  0009CC  0E00               	movlw	0
  4548  0009CE  6E20               	movwf	(___wmul@multiplicand+1)^0,c
  4549  0009D0  0E03               	movlw	3
  4550  0009D2  6E1F               	movwf	___wmul@multiplicand^0,c
  4551  0009D4  ECA2  F007         	call	___wmul	;wreg free
  4552  0009D8  0E61               	movlw	low (_horarios+1)
  4553  0009DA  241D               	addwf	?___wmul^0,w,c
  4554  0009DC  6ED9               	movwf	fsr2l,c
  4555  0009DE  0E00               	movlw	high (_horarios+1)
  4556  0009E0  201E               	addwfc	(?___wmul+1)^0,w,c
  4557  0009E2  6EDA               	movwf	fsr2h,c
  4558  0009E4  0E00               	movlw	0
  4559  0009E6  6EDF               	movwf	indf2,c
  4560                           
  4561                           ;main.c: 120:         horarios[i].tiempoRegar = 15;
  4562  0009E8  C023  F01D         	movff	inicializarObjetos@i,___wmul@multiplier
  4563  0009EC  C024  F01E         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  4564  0009F0  0E00               	movlw	0
  4565  0009F2  6E20               	movwf	(___wmul@multiplicand+1)^0,c
  4566  0009F4  0E03               	movlw	3
  4567  0009F6  6E1F               	movwf	___wmul@multiplicand^0,c
  4568  0009F8  ECA2  F007         	call	___wmul	;wreg free
  4569  0009FC  0E62               	movlw	low (_horarios+2)
  4570  0009FE  241D               	addwf	?___wmul^0,w,c
  4571  000A00  6ED9               	movwf	fsr2l,c
  4572  000A02  0E00               	movlw	high (_horarios+2)
  4573  000A04  201E               	addwfc	(?___wmul+1)^0,w,c
  4574  000A06  6EDA               	movwf	fsr2h,c
  4575  000A08  0E0F               	movlw	15
  4576  000A0A  6EDF               	movwf	indf2,c
  4577  000A0C                     
  4578                           ;main.c: 121:     }
  4579  000A0C  4A23               	infsnz	inicializarObjetos@i^0,f,c
  4580  000A0E  2A24               	incf	(inicializarObjetos@i+1)^0,f,c
  4581  000A10  BE24               	btfsc	(inicializarObjetos@i+1)^0,7,c
  4582  000A12  EF14  F005         	goto	u1341
  4583  000A16  5024               	movf	(inicializarObjetos@i+1)^0,w,c
  4584  000A18  E109               	bnz	u1340
  4585  000A1A  0E18               	movlw	24
  4586  000A1C  5C23               	subwf	inicializarObjetos@i^0,w,c
  4587  000A1E  A0D8               	btfss	status,0,c
  4588  000A20  EF14  F005         	goto	u1341
  4589  000A24  EF16  F005         	goto	u1340
  4590  000A28                     u1341:
  4591  000A28  EFD0  F004         	goto	l2206
  4592  000A2C                     u1340:
  4593  000A2C  0012               	return		;funcret
  4594  000A2E                     __end_of_inicializarObjetos:
  4595                           	opt callstack 0
  4596                           
  4597 ;; *************** function ___wmul *****************
  4598 ;; Defined at:
  4599 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;  multiplier      2    0[COMRAM] unsigned int 
  4602 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;  product         2    4[COMRAM] unsigned int 
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  2    0[COMRAM] unsigned int 
  4607 ;; Registers used:
  4608 ;;		wreg, status,2, status,0, prodl, prodh
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4614 ;;      Params:         4       0       0       0       0       0       0       0       0
  4615 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4616 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4617 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4618 ;;Total ram usage:        6 bytes
  4619 ;; Hardware stack levels used:    1
  4620 ;; Hardware stack levels required when called:    1
  4621 ;; This function calls:
  4622 ;;		Nothing
  4623 ;; This function is called by:
  4624 ;;		_inicializarObjetos
  4625 ;;		_escribeHorariosMemoria
  4626 ;;		_leeHorariosMemoria
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           
  4630                           	psect	text33
  4631  000F44                     __ptext33:
  4632                           	opt callstack 0
  4633  000F44                     ___wmul:
  4634                           	opt callstack 26
  4635  000F44  501D               	movf	___wmul@multiplier^0,w,c
  4636  000F46  021F               	mulwf	___wmul@multiplicand^0,c
  4637  000F48  CFF3 F021          	movff	prodl,___wmul@product
  4638  000F4C  CFF4 F022          	movff	prodh,___wmul@product+1
  4639  000F50  501D               	movf	___wmul@multiplier^0,w,c
  4640  000F52  0220               	mulwf	(___wmul@multiplicand+1)^0,c
  4641  000F54  50F3               	movf	243,w,c
  4642  000F56  2622               	addwf	(___wmul@product+1)^0,f,c
  4643  000F58  501E               	movf	(___wmul@multiplier+1)^0,w,c
  4644  000F5A  021F               	mulwf	___wmul@multiplicand^0,c
  4645  000F5C  50F3               	movf	243,w,c
  4646  000F5E  2622               	addwf	(___wmul@product+1)^0,f,c
  4647  000F60  C021  F01D         	movff	___wmul@product,?___wmul
  4648  000F64  C022  F01E         	movff	___wmul@product+1,?___wmul+1
  4649  000F68  0012               	return		;funcret
  4650  000F6A                     __end_of___wmul:
  4651                           	opt callstack 0
  4652                           
  4653 ;; *************** function _i2c_iniciar *****************
  4654 ;; Defined at:
  4655 ;;		line 4 in file "./I2C.h"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;		None
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;		None
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  1    wreg      void 
  4662 ;; Registers used:
  4663 ;;		wreg, status,2
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4669 ;;      Params:         0       0       0       0       0       0       0       0       0
  4670 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4671 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4672 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4673 ;;Total ram usage:        0 bytes
  4674 ;; Hardware stack levels used:    1
  4675 ;; Hardware stack levels required when called:    1
  4676 ;; This function calls:
  4677 ;;		Nothing
  4678 ;; This function is called by:
  4679 ;;		_main
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682                           
  4683                           	psect	text34
  4684  00100C                     __ptext34:
  4685                           	opt callstack 0
  4686  00100C                     _i2c_iniciar:
  4687                           	opt callstack 29
  4688  00100C                     
  4689                           ;./I2C.h: 5:     TRISBbits.RB0 = 1;
  4690  00100C  8093               	bsf	147,0,c	;volatile
  4691                           
  4692                           ;./I2C.h: 6:     TRISBbits.RB1 = 1;
  4693  00100E  8293               	bsf	147,1,c	;volatile
  4694  001010                     
  4695                           ;./I2C.h: 7:     SSPSTAT = 0b10000000;
  4696  001010  0E80               	movlw	128
  4697  001012  6EC7               	movwf	199,c	;volatile
  4698                           
  4699                           ;./I2C.h: 8:     SSPCON1 = 0b00101000;
  4700  001014  0E28               	movlw	40
  4701  001016  6EC6               	movwf	198,c	;volatile
  4702                           
  4703                           ;./I2C.h: 9:     SSPCON2 = 0b00000000;
  4704  001018  0E00               	movlw	0
  4705  00101A  6EC5               	movwf	197,c	;volatile
  4706                           
  4707                           ;./I2C.h: 10:     SSPADD = 9;
  4708  00101C  0E09               	movlw	9
  4709  00101E  6EC8               	movwf	200,c	;volatile
  4710  001020  0012               	return		;funcret
  4711  001022                     __end_of_i2c_iniciar:
  4712                           	opt callstack 0
  4713                           
  4714 ;; *************** function _configurarAdc *****************
  4715 ;; Defined at:
  4716 ;;		line 96 in file "main.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;		None
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;		None
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      void 
  4723 ;; Registers used:
  4724 ;;		wreg, status,2
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4730 ;;      Params:         0       0       0       0       0       0       0       0       0
  4731 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4732 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4733 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4734 ;;Total ram usage:        0 bytes
  4735 ;; Hardware stack levels used:    1
  4736 ;; Hardware stack levels required when called:    1
  4737 ;; This function calls:
  4738 ;;		Nothing
  4739 ;; This function is called by:
  4740 ;;		_main
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           	psect	text35
  4745  000FDC                     __ptext35:
  4746                           	opt callstack 0
  4747  000FDC                     _configurarAdc:
  4748                           	opt callstack 29
  4749  000FDC                     
  4750                           ;main.c: 97:     ADCON1 = 0b00000001;
  4751  000FDC  0E01               	movlw	1
  4752  000FDE  6EC1               	movwf	193,c	;volatile
  4753                           
  4754                           ;main.c: 98:     ADCON2 = 0b10100101;
  4755  000FE0  0EA5               	movlw	165
  4756  000FE2  6EC0               	movwf	192,c	;volatile
  4757                           
  4758                           ;main.c: 99:     TRISA = 1;
  4759  000FE4  0E01               	movlw	1
  4760  000FE6  6E92               	movwf	146,c	;volatile
  4761                           
  4762                           ;main.c: 100:     TRISE = 1;
  4763  000FE8  0E01               	movlw	1
  4764  000FEA  6E96               	movwf	150,c	;volatile
  4765                           
  4766                           ;main.c: 102:     PORTA = 0;
  4767  000FEC  0E00               	movlw	0
  4768  000FEE  6E80               	movwf	128,c	;volatile
  4769                           
  4770                           ;main.c: 103:     PORTE = 0;
  4771  000FF0  0E00               	movlw	0
  4772  000FF2  6E84               	movwf	132,c	;volatile
  4773  000FF4  0012               	return		;funcret
  4774  000FF6                     __end_of_configurarAdc:
  4775                           	opt callstack 0
  4776                           
  4777 ;; *************** function _UART_init *****************
  4778 ;; Defined at:
  4779 ;;		line 11 in file "./UART.h"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;  BAUD            4   14[COMRAM] long 
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;  frecuenciaCr    4    0        long 
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  1    wreg      void 
  4786 ;; Registers used:
  4787 ;;		wreg, status,2, status,0, cstack
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4793 ;;      Params:         4       0       0       0       0       0       0       0       0
  4794 ;;      Locals:         8       0       0       0       0       0       0       0       0
  4795 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4796 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4797 ;;Total ram usage:       12 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; Hardware stack levels required when called:    2
  4800 ;; This function calls:
  4801 ;;		___aldiv
  4802 ;; This function is called by:
  4803 ;;		_main
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           	psect	text36
  4808  000ABC                     __ptext36:
  4809                           	opt callstack 0
  4810  000ABC                     _UART_init:
  4811                           	opt callstack 28
  4812  000ABC                     
  4813                           ;./UART.h: 13:     TRISCbits.TRISC6 = 0;
  4814  000ABC  9C94               	bcf	148,6,c	;volatile
  4815  000ABE                     
  4816                           ;./UART.h: 14:     TRISCbits.TRISC7 = 1;
  4817  000ABE  8E94               	bsf	148,7,c	;volatile
  4818  000AC0                     
  4819                           ;./UART.h: 17:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  4820  000AC0  0E10               	movlw	16
  4821  000AC2  6E21               	movwf	___aldiv@divisor^0,c
  4822  000AC4  0E00               	movlw	0
  4823  000AC6  6E22               	movwf	(___aldiv@divisor+1)^0,c
  4824  000AC8  0E00               	movlw	0
  4825  000ACA  6E23               	movwf	(___aldiv@divisor+2)^0,c
  4826  000ACC  0E00               	movlw	0
  4827  000ACE  6E24               	movwf	(___aldiv@divisor+3)^0,c
  4828  000AD0  0E00               	movlw	0
  4829  000AD2  6E1D               	movwf	___aldiv@dividend^0,c
  4830  000AD4  0E09               	movlw	9
  4831  000AD6  6E1E               	movwf	(___aldiv@dividend+1)^0,c
  4832  000AD8  0E3D               	movlw	61
  4833  000ADA  6E1F               	movwf	(___aldiv@dividend+2)^0,c
  4834  000ADC  0E00               	movlw	0
  4835  000ADE  6E20               	movwf	(___aldiv@dividend+3)^0,c
  4836  000AE0  ECC7  F002         	call	___aldiv	;wreg free
  4837  000AE4  C01D  F033         	movff	?___aldiv,_UART_init$1471
  4838  000AE8  C01E  F034         	movff	?___aldiv+1,_UART_init$1471+1
  4839  000AEC  C01F  F035         	movff	?___aldiv+2,_UART_init$1471+2
  4840  000AF0  C020  F036         	movff	?___aldiv+3,_UART_init$1471+3
  4841  000AF4                     
  4842                           ;./UART.h: 17:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  4843  000AF4  C033  F01D         	movff	_UART_init$1471,___aldiv@dividend
  4844  000AF8  C034  F01E         	movff	_UART_init$1471+1,___aldiv@dividend+1
  4845  000AFC  C035  F01F         	movff	_UART_init$1471+2,___aldiv@dividend+2
  4846  000B00  C036  F020         	movff	_UART_init$1471+3,___aldiv@dividend+3
  4847  000B04  C02B  F021         	movff	UART_init@BAUD,___aldiv@divisor
  4848  000B08  C02C  F022         	movff	UART_init@BAUD+1,___aldiv@divisor+1
  4849  000B0C  C02D  F023         	movff	UART_init@BAUD+2,___aldiv@divisor+2
  4850  000B10  C02E  F024         	movff	UART_init@BAUD+3,___aldiv@divisor+3
  4851  000B14  ECC7  F002         	call	___aldiv	;wreg free
  4852  000B18  041D               	decf	?___aldiv^0,w,c
  4853  000B1A  6EAF               	movwf	175,c	;volatile
  4854  000B1C                     
  4855                           ;./UART.h: 20:     TXSTAbits.BRGH = 1;
  4856  000B1C  84AC               	bsf	172,2,c	;volatile
  4857  000B1E                     
  4858                           ;./UART.h: 21:     TXSTAbits.SYNC = 0;
  4859  000B1E  98AC               	bcf	172,4,c	;volatile
  4860  000B20                     
  4861                           ;./UART.h: 22:     RCSTAbits.SPEN = 1;
  4862  000B20  8EAB               	bsf	171,7,c	;volatile
  4863  000B22                     
  4864                           ;./UART.h: 25:     TXSTAbits.TX9 = 0;
  4865  000B22  9CAC               	bcf	172,6,c	;volatile
  4866  000B24                     
  4867                           ;./UART.h: 26:     TXSTAbits.TXEN = 1;
  4868  000B24  8AAC               	bsf	172,5,c	;volatile
  4869  000B26                     
  4870                           ;./UART.h: 29:     RCSTAbits.RC9 = 0;
  4871  000B26  9CAB               	bcf	171,6,c	;volatile
  4872  000B28                     
  4873                           ;./UART.h: 30:     RCSTAbits.CREN = 1;
  4874  000B28  88AB               	bsf	171,4,c	;volatile
  4875  000B2A  0012               	return		;funcret
  4876  000B2C                     __end_of_UART_init:
  4877                           	opt callstack 0
  4878                           
  4879 ;; *************** function ___aldiv *****************
  4880 ;; Defined at:
  4881 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;  dividend        4    0[COMRAM] long 
  4884 ;;  divisor         4    4[COMRAM] long 
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;  quotient        4   10[COMRAM] long 
  4887 ;;  sign            1    9[COMRAM] unsigned char 
  4888 ;;  counter         1    8[COMRAM] unsigned char 
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  4    0[COMRAM] long 
  4891 ;; Registers used:
  4892 ;;		wreg, status,2, status,0
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4898 ;;      Params:         8       0       0       0       0       0       0       0       0
  4899 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4900 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4901 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4902 ;;Total ram usage:       14 bytes
  4903 ;; Hardware stack levels used:    1
  4904 ;; Hardware stack levels required when called:    1
  4905 ;; This function calls:
  4906 ;;		Nothing
  4907 ;; This function is called by:
  4908 ;;		_UART_init
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           	psect	text37
  4913  00058E                     __ptext37:
  4914                           	opt callstack 0
  4915  00058E                     ___aldiv:
  4916                           	opt callstack 28
  4917  00058E  0E00               	movlw	0
  4918  000590  6E26               	movwf	___aldiv@sign^0,c
  4919  000592  BE24               	btfsc	(___aldiv@divisor+3)^0,7,c
  4920  000594  EFD0  F002         	goto	u1280
  4921  000598  EFCE  F002         	goto	u1281
  4922  00059C                     u1281:
  4923  00059C  EFDA  F002         	goto	l2140
  4924  0005A0                     u1280:
  4925  0005A0  1E24               	comf	(___aldiv@divisor+3)^0,f,c
  4926  0005A2  1E23               	comf	(___aldiv@divisor+2)^0,f,c
  4927  0005A4  1E22               	comf	(___aldiv@divisor+1)^0,f,c
  4928  0005A6  6C21               	negf	___aldiv@divisor^0,c
  4929  0005A8  0E00               	movlw	0
  4930  0005AA  2222               	addwfc	(___aldiv@divisor+1)^0,f,c
  4931  0005AC  2223               	addwfc	(___aldiv@divisor+2)^0,f,c
  4932  0005AE  2224               	addwfc	(___aldiv@divisor+3)^0,f,c
  4933  0005B0  0E01               	movlw	1
  4934  0005B2  6E26               	movwf	___aldiv@sign^0,c
  4935  0005B4                     l2140:
  4936  0005B4  BE20               	btfsc	(___aldiv@dividend+3)^0,7,c
  4937  0005B6  EFE1  F002         	goto	u1290
  4938  0005BA  EFDF  F002         	goto	u1291
  4939  0005BE                     u1291:
  4940  0005BE  EFEB  F002         	goto	l2146
  4941  0005C2                     u1290:
  4942  0005C2  1E20               	comf	(___aldiv@dividend+3)^0,f,c
  4943  0005C4  1E1F               	comf	(___aldiv@dividend+2)^0,f,c
  4944  0005C6  1E1E               	comf	(___aldiv@dividend+1)^0,f,c
  4945  0005C8  6C1D               	negf	___aldiv@dividend^0,c
  4946  0005CA  0E00               	movlw	0
  4947  0005CC  221E               	addwfc	(___aldiv@dividend+1)^0,f,c
  4948  0005CE  221F               	addwfc	(___aldiv@dividend+2)^0,f,c
  4949  0005D0  2220               	addwfc	(___aldiv@dividend+3)^0,f,c
  4950  0005D2  0E01               	movlw	1
  4951  0005D4  1A26               	xorwf	___aldiv@sign^0,f,c
  4952  0005D6                     l2146:
  4953  0005D6  0E00               	movlw	0
  4954  0005D8  6E27               	movwf	___aldiv@quotient^0,c
  4955  0005DA  0E00               	movlw	0
  4956  0005DC  6E28               	movwf	(___aldiv@quotient+1)^0,c
  4957  0005DE  0E00               	movlw	0
  4958  0005E0  6E29               	movwf	(___aldiv@quotient+2)^0,c
  4959  0005E2  0E00               	movlw	0
  4960  0005E4  6E2A               	movwf	(___aldiv@quotient+3)^0,c
  4961  0005E6  5021               	movf	___aldiv@divisor^0,w,c
  4962  0005E8  1022               	iorwf	(___aldiv@divisor+1)^0,w,c
  4963  0005EA  1023               	iorwf	(___aldiv@divisor+2)^0,w,c
  4964  0005EC  1024               	iorwf	(___aldiv@divisor+3)^0,w,c
  4965  0005EE  B4D8               	btfsc	status,2,c
  4966  0005F0  EFFC  F002         	goto	u1301
  4967  0005F4  EFFE  F002         	goto	u1300
  4968  0005F8                     u1301:
  4969  0005F8  EF34  F003         	goto	l2168
  4970  0005FC                     u1300:
  4971  0005FC  0E01               	movlw	1
  4972  0005FE  6E25               	movwf	___aldiv@counter^0,c
  4973  000600  EF08  F003         	goto	l2154
  4974  000604                     l2152:
  4975  000604  90D8               	bcf	status,0,c
  4976  000606  3621               	rlcf	___aldiv@divisor^0,f,c
  4977  000608  3622               	rlcf	(___aldiv@divisor+1)^0,f,c
  4978  00060A  3623               	rlcf	(___aldiv@divisor+2)^0,f,c
  4979  00060C  3624               	rlcf	(___aldiv@divisor+3)^0,f,c
  4980  00060E  2A25               	incf	___aldiv@counter^0,f,c
  4981  000610                     l2154:
  4982  000610  AE24               	btfss	(___aldiv@divisor+3)^0,7,c
  4983  000612  EF0D  F003         	goto	u1311
  4984  000616  EF0F  F003         	goto	u1310
  4985  00061A                     u1311:
  4986  00061A  EF02  F003         	goto	l2152
  4987  00061E                     u1310:
  4988  00061E                     l2156:
  4989  00061E  90D8               	bcf	status,0,c
  4990  000620  3627               	rlcf	___aldiv@quotient^0,f,c
  4991  000622  3628               	rlcf	(___aldiv@quotient+1)^0,f,c
  4992  000624  3629               	rlcf	(___aldiv@quotient+2)^0,f,c
  4993  000626  362A               	rlcf	(___aldiv@quotient+3)^0,f,c
  4994  000628  5021               	movf	___aldiv@divisor^0,w,c
  4995  00062A  5C1D               	subwf	___aldiv@dividend^0,w,c
  4996  00062C  5022               	movf	(___aldiv@divisor+1)^0,w,c
  4997  00062E  581E               	subwfb	(___aldiv@dividend+1)^0,w,c
  4998  000630  5023               	movf	(___aldiv@divisor+2)^0,w,c
  4999  000632  581F               	subwfb	(___aldiv@dividend+2)^0,w,c
  5000  000634  5024               	movf	(___aldiv@divisor+3)^0,w,c
  5001  000636  5820               	subwfb	(___aldiv@dividend+3)^0,w,c
  5002  000638  A0D8               	btfss	status,0,c
  5003  00063A  EF21  F003         	goto	u1321
  5004  00063E  EF23  F003         	goto	u1320
  5005  000642                     u1321:
  5006  000642  EF2C  F003         	goto	l2164
  5007  000646                     u1320:
  5008  000646  5021               	movf	___aldiv@divisor^0,w,c
  5009  000648  5E1D               	subwf	___aldiv@dividend^0,f,c
  5010  00064A  5022               	movf	(___aldiv@divisor+1)^0,w,c
  5011  00064C  5A1E               	subwfb	(___aldiv@dividend+1)^0,f,c
  5012  00064E  5023               	movf	(___aldiv@divisor+2)^0,w,c
  5013  000650  5A1F               	subwfb	(___aldiv@dividend+2)^0,f,c
  5014  000652  5024               	movf	(___aldiv@divisor+3)^0,w,c
  5015  000654  5A20               	subwfb	(___aldiv@dividend+3)^0,f,c
  5016  000656  8027               	bsf	___aldiv@quotient^0,0,c
  5017  000658                     l2164:
  5018  000658  90D8               	bcf	status,0,c
  5019  00065A  3224               	rrcf	(___aldiv@divisor+3)^0,f,c
  5020  00065C  3223               	rrcf	(___aldiv@divisor+2)^0,f,c
  5021  00065E  3222               	rrcf	(___aldiv@divisor+1)^0,f,c
  5022  000660  3221               	rrcf	___aldiv@divisor^0,f,c
  5023  000662  2E25               	decfsz	___aldiv@counter^0,f,c
  5024  000664  EF0F  F003         	goto	l2156
  5025  000668                     l2168:
  5026  000668  5026               	movf	___aldiv@sign^0,w,c
  5027  00066A  B4D8               	btfsc	status,2,c
  5028  00066C  EF3A  F003         	goto	u1331
  5029  000670  EF3C  F003         	goto	u1330
  5030  000674                     u1331:
  5031  000674  EF44  F003         	goto	l2172
  5032  000678                     u1330:
  5033  000678  1E2A               	comf	(___aldiv@quotient+3)^0,f,c
  5034  00067A  1E29               	comf	(___aldiv@quotient+2)^0,f,c
  5035  00067C  1E28               	comf	(___aldiv@quotient+1)^0,f,c
  5036  00067E  6C27               	negf	___aldiv@quotient^0,c
  5037  000680  0E00               	movlw	0
  5038  000682  2228               	addwfc	(___aldiv@quotient+1)^0,f,c
  5039  000684  2229               	addwfc	(___aldiv@quotient+2)^0,f,c
  5040  000686  222A               	addwfc	(___aldiv@quotient+3)^0,f,c
  5041  000688                     l2172:
  5042  000688  C027  F01D         	movff	___aldiv@quotient,?___aldiv
  5043  00068C  C028  F01E         	movff	___aldiv@quotient+1,?___aldiv+1
  5044  000690  C029  F01F         	movff	___aldiv@quotient+2,?___aldiv+2
  5045  000694  C02A  F020         	movff	___aldiv@quotient+3,?___aldiv+3
  5046  000698  0012               	return		;funcret
  5047  00069A                     __end_of___aldiv:
  5048                           	opt callstack 0
  5049                           
  5050 ;; *************** function _desbordamiento *****************
  5051 ;; Defined at:
  5052 ;;		line 65 in file "main.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;		None
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;		None
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      void 
  5059 ;; Registers used:
  5060 ;;		wreg, status,2
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5066 ;;      Params:         0       0       0       0       0       0       0       0       0
  5067 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5068 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5069 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5070 ;;Total ram usage:        0 bytes
  5071 ;; Hardware stack levels used:    1
  5072 ;; This function calls:
  5073 ;;		Nothing
  5074 ;; This function is called by:
  5075 ;;		Interrupt level 2
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           
  5079                           	psect	intcode
  5080  000008                     __pintcode:
  5081                           	opt callstack 0
  5082  000008                     _desbordamiento:
  5083                           	opt callstack 24
  5084                           
  5085                           ;incstack = 0
  5086  000008  823C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5087  00000A  ED78  F006         	call	int_func,f	;refresh shadow registers
  5088                           
  5089                           	psect	intcode_body
  5090  000CF0                     __pintcode_body:
  5091                           	opt callstack 24
  5092  000CF0                     int_func:
  5093                           	opt callstack 24
  5094  000CF0  0006               	pop		; remove dummy address from shadow register refresh
  5095  000CF2                     
  5096                           ;main.c: 67:     if (INTCONbits.TMR0IF) {
  5097  000CF2  A4F2               	btfss	242,2,c	;volatile
  5098  000CF4  EF7E  F006         	goto	i2u68_41
  5099  000CF8  EF80  F006         	goto	i2u68_40
  5100  000CFC                     i2u68_41:
  5101  000CFC  EF91  F006         	goto	i2l1608
  5102  000D00                     i2u68_40:
  5103  000D00                     
  5104                           ;main.c: 69:         INTCONbits.TMR0IF = 0;
  5105  000D00  94F2               	bcf	242,2,c	;volatile
  5106                           
  5107                           ;main.c: 71:         TMR0 = VALOR_TIMER0;
  5108  000D02  C037  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  5109  000D06  C038  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  5110  000D0A                     
  5111                           ;main.c: 73:         if (esperandoDatos) {
  5112  000D0A  503B               	movf	_esperandoDatos^0,w,c
  5113  000D0C  B4D8               	btfsc	status,2,c
  5114  000D0E  EF8B  F006         	goto	i2u69_41
  5115  000D12  EF8D  F006         	goto	i2u69_40
  5116  000D16                     i2u69_41:
  5117  000D16  EF8F  F006         	goto	i2l161
  5118  000D1A                     i2u69_40:
  5119  000D1A                     
  5120                           ;main.c: 74:             esperaDatoConcluida = 1;
  5121  000D1A  0E01               	movlw	1
  5122  000D1C  6E1B               	movwf	_esperaDatoConcluida^0,c
  5123  000D1E                     i2l161:
  5124                           
  5125                           ;main.c: 77:         overflowTimer = 1;
  5126  000D1E  0E01               	movlw	1
  5127  000D20  6E16               	movwf	_overflowTimer^0,c
  5128  000D22                     i2l1608:
  5129                           
  5130                           ;main.c: 81:     if (PIR1bits.RCIF) {
  5131  000D22  AA9E               	btfss	158,5,c	;volatile
  5132  000D24  EF96  F006         	goto	i2u70_41
  5133  000D28  EF98  F006         	goto	i2u70_40
  5134  000D2C                     i2u70_41:
  5135  000D2C  EF9C  F006         	goto	i2l163
  5136  000D30                     i2u70_40:
  5137  000D30                     
  5138                           ;main.c: 83:         byteUart = RCREG;
  5139  000D30  CFAE F01C          	movff	4014,_byteUart	;volatile
  5140  000D34                     
  5141                           ;main.c: 84:         datoRecibido = 1;
  5142  000D34  0E01               	movlw	1
  5143  000D36  6E17               	movwf	_datoRecibido^0,c
  5144  000D38                     i2l163:
  5145  000D38  923C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5146  000D3A  0011               	retfie		f
  5147  000D3C                     __end_of_desbordamiento:
  5148                           	opt callstack 0
  5149                           
  5150                           	psect	rparam
  5151  0000                     
  5152                           	psect	temp
  5153  00003C                     btemp:
  5154                           	opt callstack 0
  5155  00003C                     	ds	1
  5156  0000                     int$flags	set	btemp
  5157  0000                     wtemp8	set	btemp+1
  5158  0000                     ttemp5	set	btemp+1
  5159  0000                     ttemp6	set	btemp+4
  5160  0000                     ttemp7	set	btemp+8
  5161                           tosu	equ	0xFFF
  5162                           tosh	equ	0xFFE
  5163                           tosl	equ	0xFFD
  5164                           stkptr	equ	0xFFC
  5165                           pclatu	equ	0xFFB
  5166                           pclath	equ	0xFFA
  5167                           pcl	equ	0xFF9
  5168                           tblptru	equ	0xFF8
  5169                           tblptrh	equ	0xFF7
  5170                           tblptrl	equ	0xFF6
  5171                           tablat	equ	0xFF5
  5172                           prodh	equ	0xFF4
  5173                           prodl	equ	0xFF3
  5174                           indf0	equ	0xFEF
  5175                           postinc0	equ	0xFEE
  5176                           postdec0	equ	0xFED
  5177                           preinc0	equ	0xFEC
  5178                           plusw0	equ	0xFEB
  5179                           fsr0h	equ	0xFEA
  5180                           fsr0l	equ	0xFE9
  5181                           wreg	equ	0xFE8
  5182                           indf1	equ	0xFE7
  5183                           postinc1	equ	0xFE6
  5184                           postdec1	equ	0xFE5
  5185                           preinc1	equ	0xFE4
  5186                           plusw1	equ	0xFE3
  5187                           fsr1h	equ	0xFE2
  5188                           fsr1l	equ	0xFE1
  5189                           bsr	equ	0xFE0
  5190                           indf2	equ	0xFDF
  5191                           postinc2	equ	0xFDE
  5192                           postdec2	equ	0xFDD
  5193                           preinc2	equ	0xFDC
  5194                           plusw2	equ	0xFDB
  5195                           fsr2h	equ	0xFDA
  5196                           fsr2l	equ	0xFD9
  5197                           status	equ	0xFD8


Data Sizes:
    Strings     645
    Constant    0
    Data        5
    BSS         100
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      59
    BANK0           160      0      72
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 72
		 -> STR_24(CODE[42]), STR_23(CODE[3]), STR_22(CODE[14]), STR_21(CODE[49]), 
		 -> STR_20(CODE[37]), STR_19(CODE[27]), STR_18(CODE[37]), STR_17(CODE[37]), 
		 -> STR_16(CODE[23]), STR_15(CODE[72]), STR_14(CODE[23]), STR_13(CODE[51]), 
		 -> STR_12(CODE[23]), STR_11(CODE[23]), STR_10(CODE[26]), STR_9(CODE[55]), 
		 -> STR_8(CODE[23]), STR_7(CODE[51]), STR_6(CODE[25]), STR_5(CODE[37]), 
		 -> STR_4(CODE[31]), STR_3(CODE[43]), STR_2(CODE[16]), STR_1(CODE[23]), 


Critical Paths under _main in COMRAM

    _main->_UART_init
    _sistemaRegado->_encenderBombas
    _lecturaAnalogaSensores->_dameHumedadSuelo
    _encenderBombas->_estaSeco
    _dameHoraActual->_leer_rtc
    _leer_rtc->_i2c_envia_dato
    _leer_rtc->_i2c_recibe_dato
    _sistemaPrincipal->_setTiempoRegar
    _setTiempoRegar->_escribeHorariosMemoria
    _mostrarMenu->_UART_printf
    _fijaHoraRtc->_setRtc
    _setRtc->_escribe_rtc
    _escribe_rtc->_i2c_envia_dato
    _asignarHorarios->_escribeHorariosMemoria
    _escribeHorariosMemoria->_escribe_eeprom
    _escribe_eeprom->___wmul
    _UART_printf->_UART_write
    _restablecerDatosSensor->_constructorSensor
    _leeHorariosMemoria->___wmul
    _leeHorariosMemoria->_leer_eeprom
    _leer_eeprom->_i2c_envia_dato
    _leer_eeprom->_i2c_recibe_dato
    _i2c_reinicia_com->_i2c_espera
    _i2c_recibe_dato->_i2c_espera
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera
    _inicializarObjetos->___wmul
    _UART_init->___aldiv

Critical Paths under _desbordamiento in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _desbordamiento in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _desbordamiento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _desbordamiento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _desbordamiento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _desbordamiento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _desbordamiento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _desbordamiento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _desbordamiento in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   25646
                          _UART_init
                      _configurarAdc
                        _i2c_iniciar
                 _inicializarObjetos
                 _leeHorariosMemoria
                        _mostrarMenu
             _restablecerDatosSensor
                   _sistemaPrincipal
                      _sistemaRegado
 ---------------------------------------------------------------------------------
 (1) _sistemaRegado                                        0     0      0    1198
                     _dameHoraActual
                     _encenderBombas
                          _horaRegar
             _lecturaAnalogaSensores
 ---------------------------------------------------------------------------------
 (2) _lecturaAnalogaSensores                               3     3      0     112
                                              2 COMRAM     3     3      0
                   _dameHumedadSuelo
 ---------------------------------------------------------------------------------
 (3) _dameHumedadSuelo                                     2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _horaRegar                                            3     1      2       0
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _encenderBombas                                       5     5      0     905
                                              2 COMRAM     5     5      0
                           _estaSeco
 ---------------------------------------------------------------------------------
 (3) _estaSeco                                             2     0      2     630
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _dameHoraActual                                       0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (3) _leer_rtc                                             2     2      0      90
                                              2 COMRAM     2     2      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (3) _convertirDato                                        3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _sistemaPrincipal                                     3     3      0   17712
                                             22 COMRAM     3     3      0
                        _UART_printf
                    _asignarHorarios
                        _fijaHoraRtc
                        _mostrarMenu
                     _setTiempoRegar
 ---------------------------------------------------------------------------------
 (2) _setTiempoRegar                                       8     8      0    4583
                                             14 COMRAM     8     8      0
                        _UART_printf
                          _UART_read
             _escribeHorariosMemoria
 ---------------------------------------------------------------------------------
 (2) _mostrarMenu                                          0     0      0    1891
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _fijaHoraRtc                                          1     1      0    4903
                                             11 COMRAM     1     1      0
                        _UART_printf
                        _escribe_rtc
                             _setRtc
 ---------------------------------------------------------------------------------
 (3) _setRtc                                               7     7      0    2565
                                              4 COMRAM     7     7      0
                        _UART_printf
                          _UART_read
                        _escribe_rtc
 ---------------------------------------------------------------------------------
 (4) _escribe_rtc                                          2     1      1     446
                                              2 COMRAM     2     1      1
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (2) _asignarHorarios                                      5     5      0    4422
                                             14 COMRAM     5     5      0
                        _UART_printf
                          _UART_read
             _escribeHorariosMemoria
 ---------------------------------------------------------------------------------
 (3) _escribeHorariosMemoria                               4     4      0    2253
                                             10 COMRAM     4     4      0
                             ___wmul
                     _escribe_eeprom
 ---------------------------------------------------------------------------------
 (4) _escribe_eeprom                                       4     1      3     544
                                              6 COMRAM     4     1      3
                             ___wmul (ARG)
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (3) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2    1891
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _restablecerDatosSensor                               2     2      0     387
                                              4 COMRAM     2     2      0
                  _constructorSensor
 ---------------------------------------------------------------------------------
 (2) _constructorSensor                                    4     0      4     297
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _leeHorariosMemoria                                   4     4      0    2049
                                              6 COMRAM     4     4      0
                             ___wmul
                        _leer_eeprom
 ---------------------------------------------------------------------------------
 (2) _leer_eeprom                                          4     2      2     340
                                              2 COMRAM     4     2      2
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_recibe_dato                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializarObjetos                                   2     2      0    1661
                                              6 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1527
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     748
                                             14 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _desbordamiento                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
   _configurarAdc
   _i2c_iniciar
   _inicializarObjetos
     ___wmul
   _leeHorariosMemoria
     ___wmul
     _leer_eeprom
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
       _i2c_recibe_dato
         _i2c_espera
       _i2c_reinicia_com
         _i2c_espera
   _mostrarMenu
     _UART_printf
       _UART_write
   _restablecerDatosSensor
     _constructorSensor
   _sistemaPrincipal
     _UART_printf
       _UART_write
     _asignarHorarios
       _UART_printf
         _UART_write
       _UART_read
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
     _fijaHoraRtc
       _UART_printf
         _UART_write
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
       _setRtc
         _UART_printf
           _UART_write
         _UART_read
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
     _mostrarMenu
       _UART_printf
         _UART_write
     _setTiempoRegar
       _UART_printf
         _UART_write
       _UART_read
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
   _sistemaRegado
     _dameHoraActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _encenderBombas
       _estaSeco
     _horaRegar
     _lecturaAnalogaSensores
       _dameHumedadSuelo

 _desbordamiento (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      48       5       45.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      3B       1       62.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      83      20        0.0%
DATA                 0      0      83       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Apr 21 15:41:45 2020

          __size_of_escribe_eeprom 0030                                 l81 103E  
                               l90 0FDA                                 l75 0F42  
                               l84 104E                                 l69 1020  
                               l93 0FA6                                 l78 1046  
                               l87 102C                                 l96 0EF6  
                               l99 0F88                     ?_configurarAdc 001D  
              ___wmul@multiplicand 001F                        __CFG_BORV$3 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                              l110 0B2A                                l113 0CB6  
                              l122 0FFC                                l131 0E72  
                              l204 0766                                l125 100A  
                              l118 0CEC                                l119 0CEE  
                              l209 08FA                                l241 0BFC  
                              l306 0B94                                l314 0996  
                              l251 0548                                l180 0A2C  
                              l172 0FC0                                l236 0266  
                              l406 0698                                l166 1036  
                              l254 058C                                l327 0F68  
                              l271 0438                                l183 0F1C  
                              l175 0ECC                                l169 0FF4  
                              l193 0832                                l282 0CA0  
                              l274 0E2A                                l196 0EA2  
                              l276 0E38                                l277 0E3C  
                              l294 0C50                                l199 0E06  
                              l297 0D84                       __CFG_CPB$OFF 000000  
                     __CFG_CPD$OFF 000000                                u800 0CE4  
                              u801 0CE0                                u810 0E72  
                              u811 0E6E                                u900 0766  
                              u820 0FBA                                u901 0762  
                              u821 0FB4                                u750 0F34  
                              u830 0FBC                                u910 0E38  
                              u751 0F30                                u911 0E34  
                              u760 0F42                                u840 078C  
                              u920 0EC6                                u761 0F3E  
                              u841 0788                                u921 0EC0  
                              u770 100A                                u850 079C  
                              u930 0EC8                                u771 1006  
                              u851 0798                                u780 0CC4  
                              u860 07AE                                u940 0052  
                              u781 0CC0                                u861 07AA  
                              u941 004E                                u790 0CD4  
                              u870 0808                                u950 008C  
                              u791 0CD0                                u871 0804  
                              u951 0088                                u880 0818  
                              u960 00C2                                u881 0814  
                              u961 00BE                                u890 0828  
                              u970 00F8                                u891 0824  
                              u971 00F4                                u980 012E  
                              u981 012A                                u990 0164  
                              u991 0160                       __CFG_BOR$OFF 000000  
                              prod 000FF3                                wreg 000FE8  
                     __CFG_LVP$OFF 000000                  ?_i2c_reinicia_com 001D  
                     ?_escribe_rtc 001F                       __CFG_WDT$OFF 000000  
                             l2000 04D2                               l2010 0520  
                             l2002 04EE                               l2020 0564  
                             l2012 0524                               l2004 04FE  
                             l2100 03C0                               l2022 0578  
                             l2014 0534                               l2006 050E  
                             l2110 040C                               l2102 03C4  
                             l2030 0278                               l2200 0998  
                             l2024 0580                               l2016 0544  
                             l2008 051A                               l2112 0420  
                             l2104 03E0                               l2040 02A2  
                             l2210 0A10                               l2018 0558  
                             l2130 0D3C                               l2114 0434  
                             l2106 03F0                               l2050 02D8  
                             l2042 02B2                               l2026 0268  
                             l2122 0C06                               l2140 05B4  
                             l2132 058E                               l2220 0872  
                             l2212 0834                               l2108 0400  
                             l2052 02DC                               l2060 02FC  
                             l2044 02C4                               l2036 028C  
                             l2028 026C                               l2124 0C20  
                             l2116 0BFE                               l2150 05FC  
                             l2142 05C2                               l2134 0592  
                             l2206 09A0                               l2230 08DE  
                             l2222 0876                               l2070 0348  
                             l2062 0300                               l2054 02E0  
                             l2046 02C8                               l2038 0292  
                             l2126 0C30                               l2160 0646  
                             l2152 0604                               l2144 05D2  
                             l2136 05A0                               l2208 0A0C  
                             l2224 08A8                               l2240 0C80  
                             l2232 0C52                               l2080 0366  
                             l2064 031C                               l2048 02CC  
                             l2056 02E8                               l2128 0C34  
                             l2170 0678                               l2162 0656  
                             l2154 0610                               l2146 05D6  
                             l2138 05B0                               l1506 0FDC  
                             l2226 08D6                               l2218 0844  
                             l2242 0C84                               l2090 039C  
                             l2082 0376                               l2066 032C  
                             l2058 02EC                               l2250 0B44  
                             l2330 0A3E                               l2172 0688  
                             l2164 0658                               l2156 061E  
                             l2148 05E6                               l2180 0ABE  
                             l1700 0F1E                               l2228 08DA  
                             l2092 03A0                               l2084 0388  
                             l2076 0350                               l2068 033C  
                             l2260 0B92                               l2252 0B4C  
                             l2244 0B2E                               l2340 0A62  
                             l2332 0A42                               l2324 0A2E  
                             l2166 0662                               l2158 0628  
                             l2190 0B20                               l2182 0AC0  
                             l1702 0F34                               l1710 104C  
                             l2238 0C5A                               l2094 03A4  
                             l2086 038C                               l2078 0356  
                             l2246 0B34                               l2270 0910  
                             l2350 0A78                               l2342 0A66  
                             l2334 0A56                               l2326 0A38  
                             l2168 0668                               l2192 0B22  
                             l2184 0AF4                               l2176 0ABC  
                             l1480 1010                               l1712 1024  
                             l1704 1040                               l1720 0FF8  
                             l1800 077C                               l2088 0390  
                             l2096 03AC                               l2248 0B3C  
                             l2256 0B5C                               l2272 0924  
                             l2280 0950                               l2360 0A96  
                             l2352 0A7A                               l2344 0A6A  
                             l2336 0A5A                               l2328 0A3C  
                             l2194 0B24                               l2186 0B1C  
                             l2178 0ABC                               l1714 1028  
                             l1706 1044                               l1730 0FCC  
                             l1722 1038                               l1810 07CC  
                             l1802 078C                               l2098 03B0  
                             l2258 0B8E                               l2290 0992  
                             l2282 0954                               l2274 092C  
                             l2266 08FC                               l2362 0A9C  
                             l2354 0A7E                               l2346 0A6E  
                             l2338 0A5E                               l2196 0B26  
                             l2188 0B1E                               l1708 1048  
                             l1716 102C                               l1732 0FD4  
                             l1724 103C                               l1740 0F8C  
                             l1820 0808                               l1804 079C  
                             l1812 07D4                               l1900 00C8  
                             l2284 096A                               l2276 092E  
                             l2268 090C                               l2364 0AAC  
                             l2356 0A8E                               l2348 0A76  
                             l2198 0B28                               l1478 100C  
                             l1734 0FD6                               l1726 0FC2  
                             l1750 0CE8                               l1742 0CA2  
                             l1822 0818                               l1814 07D8  
                             l1806 07AE                               l1902 00F8  
                             l2286 097A                               l2278 0940  
                             l2366 0AB0                               l2358 0A92  
                             l1736 0FD8                               l1728 0FC6  
                             l1760 0E56                               l1744 0CC4  
                             l1840 0742                               l1832 06AA  
                             l1824 0828                               l1816 07E8  
                             l1808 07C4                               l2376 01EC  
                             l1920 019A                               l1912 0134  
                             l2288 097E                               l1754 0E3E  
                             l1746 0CD4                               l1762 0E74  
                             l1842 0746                               l1834 06DA  
                             l1826 069A                               l1818 07EC  
                             l2378 0B70                               l1914 0164  
                             l1906 00FE                               l1850 0E14  
                             l1860 102E                               l1756 0E42  
                             l1748 0CE4                               l1764 0E94  
                             l1844 074A                               l1836 06DE  
                             l1780 0F6C                               l1772 0ED0  
                             l1940 0262                               l1924 01A0  
                             l1908 012E                               l1932 01D6  
                             l1852 0E26                               l1766 0F44  
                             l1870 0DF6                               l1758 0E52  
                             l1838 0712                               l1950 0BA2  
                             l1782 0F74                               l1774 0EF4  
                             l1926 01D0                               l1918 016A  
                             l1934 0232                               l1862 0EA4  
                             l1854 0E28                               l1846 0E0A  
                             l1768 0F60                               l1872 0E04  
                             l1792 076A                               l1960 0BE6  
                             l1952 0BAE                               l1784 0F86  
                             l1936 0236                               l1856 0E3A  
                             l1848 0E12                               l1698 0F1E  
                             l1962 0BF2                               l1954 0BB4  
                             l1946 0B96                               l1778 0F6C  
                             l1866 0EF8                               l1938 0252  
                             l1890 008C                               l1882 0022  
                             l1868 0DCC                               l1980 0484  
                             l1964 043A                               l1956 0BC4  
                             l1948 0B96                               l1788 0FA8  
                             l1884 0052                               l1876 0012  
                             l1990 04AE                               l1982 0496  
                             l1974 045E                               l1966 043E  
                             l1798 0776                               l1958 0BD6  
                             l1894 0092                               l1886 0054  
                             l1992 04B2                               l1984 049A  
                             l1976 0464                               l1968 044A  
                             l1896 00C2                               l1888 005C  
                             l1986 049E                               l1978 0474  
                             l1994 04BA                               l1996 04BE  
                             l1988 04AA                               l1998 04CE  
                     ?_leer_eeprom 001F                               STR_1 7FC9  
                             STR_2 7FE0                               STR_3 7E5C  
                             STR_4 7F45                               STR_5 7EFB  
                             STR_6 7F99                               STR_7 7DF8  
                             STR_8 7FC9                               STR_9 7DC1  
                             u1000 019A                               u1001 0196  
                             u1010 01D0                               u1011 01CC  
                             u1100 04FE                               u1020 0252  
                             u1101 04FA                               u1021 024E  
                             u1110 050E                               u1030 0262  
                             u1111 050A                               u1031 025E  
                             u1120 0534                               u1040 0BC4  
                             u1200 033C                               u1121 0530  
                             u1041 0BC0                               u1201 0338  
                             u1130 0544                               u1050 0BE6  
                             u1210 0366                               u1131 0540  
                             u1051 0BE2                               u1211 0362  
                             u1300 05FC                               u1140 0558  
                             u1060 0474                               u1220 0376  
                             u1301 05F8                               u1141 0554  
                             u1061 0470                               u1221 0372  
                             u1310 061E                               u1070 0484  
                             u1230 0388                               u1150 02A2  
                             u1311 061A                               u1071 0480  
                             u1231 0384                               u1151 029E  
                             u1320 0646                               u1080 0496  
                             u1240 03E0                               u1160 02B2  
                             u1400 096A                               u1321 0642  
                             u1081 0492                               u1241 03DC  
                             u1161 02AE                               u1401 0966  
                             u1330 0678                               u1090 04EE  
                             u1250 03F0                               u1170 02C4  
                             u1410 097A                               u1331 0674  
                             u1091 04EA                               u1251 03EC  
                             u1171 02C0                               u1411 0976  
                             u1340 0A2C                               u1260 0400  
                             u1180 031C                               u1341 0A28  
                             u1261 03FC                               u1181 0318  
                             u1350 08FA                               u1190 032C  
                             u1270 0C50                               u1351 08F6  
                             u1191 0328                               u1271 0C4C  
                             u1280 05A0                               u1360 0CA0  
                             u1440 0A8E                               _LATD 000F8C  
                             u1281 059C                               u1361 0C9C  
                             u1441 0A8A                               u1290 05C2  
                             u1370 090C                               u1450 0AAC  
                             u1291 05BE                               u1371 0908  
                             u1451 0AA8                               u1380 0924  
                             u1381 0920                               u1390 0940  
                             u1391 093C                               u1467 0C26  
                             u1477 0E0C                               u1487 0E9A  
                             u1497 0DFC                               _TMR0 000FD6  
             _minutosTranscurridos 0014                 ??_i2c_reinicia_com 001E  
          escribeHorariosMemoria@i 0029                      ??_i2c_detener 001E  
                             _main 0A2E                               _hora 001A  
                             fsr2h 000FDA                               indf2 000FDF  
                             fsr1l 000FE1                               fsr2l 000FD9  
                             btemp 003C                     ?_sistemaRegado 001D  
         __size_of_asignarHorarios 0154                      ??_i2c_iniciar 001D  
                             prodh 000FF4                               prodl 000FF3  
                             start 000E           ??_restablecerDatosSensor 0021  
                    __CFG_IESO$OFF 000000                  _constructorSensor 102E  
          __size_of_setTiempoRegar 01D2                       ___param_bank 000000  
               ?_constructorSensor 001D                 setTiempoRegar@hora 002C  
               _leeHorariosMemoria 0834                   ??_encenderBombas 001F  
                   _i2c_envia_dato 1022                      __CFG_PLLDIV$1 000000  
                   _i2c_inicia_com 1040                    __end_of___aldiv 069A  
                            ?_main 001D                      _convertirDato 0F6A  
                            STR_10 7F7F                              STR_11 7FC9  
                            STR_12 7FB2                              STR_20 7F20  
                            STR_13 7DF8                              STR_21 7E2B  
                            STR_14 7FC9                              STR_22 7FF0  
                            STR_23 7F96                              STR_15 7D79  
                            STR_16 7FC9                              STR_24 7E87  
                            STR_17 7EB1                              STR_18 7ED6  
                            STR_19 7F64                ??_constructorSensor 0021  
                convertirDato@dato 001E                              _T0CON 000FD5  
                            i2l161 0D1E                              i2l163 0D38  
              ?_leeHorariosMemoria 001D                              _RCREG 000FAE  
                            _SPBRG 000FAF                              _PORTA 000F80  
                            _PORTE 000F84                      __CFG_USBDIV$1 000000  
                            _TRISA 000F92                              _TRISD 000F95  
                            _TRISE 000F96                              _TXREG 000FAD  
                    __CFG_PWRT$OFF 000000                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                      __CFG_WRT2$OFF 000000  
                    __CFG_WRT3$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
                   __CFG_EBTR2$OFF 000000                     __CFG_EBTR3$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                     __CFG_EBTRB$OFF 000000  
               __size_of_UART_init 0070                 __size_of_UART_read 004E  
                      ?_UART_write 001D                              tablat 000FF5  
                            ttemp5 003D                              ttemp6 0040  
                            ttemp7 0044                              status 000FD8  
                            wtemp8 003D                 escribe_eeprom@dato 0025  
        __end_of_constructorSensor 1038               ??_leeHorariosMemoria 0023  
                   __CFG_ICPRT$OFF 000000                         _i2c_espera 0F1E  
                 ??_dameHoraActual 0021                     __CFG_MCLRE$OFF 000000  
                  __initialization 0D86                    setTiempoRegar@i 002D  
              __end_of_i2c_detener 1050    __size_of_lecturaAnalogaSensores 0054  
           __end_of_i2c_envia_dato 102E                       __end_of_main 0ABC  
         ??_escribeHorariosMemoria 0027                    ??_configurarAdc 001D  
              setTiempoRegar@i_705 002F             __end_of_i2c_inicia_com 1048  
               _inicializarObjetos 0998                __end_of_i2c_iniciar 1022  
           sistemaPrincipal@opcion 0035                   _dameHumedadSuelo 0E08  
                   ?_convertirDato 001D               __size_of_fijaHoraRtc 0068  
                           ??_main 0037          setTiempoRegar@tiempoRegar 002B  
                    __activetblptr 000002                ?_inicializarObjetos 001D  
               i2c_envia_dato@dato 001E                    __CFG_CCP2MX$OFF 000000  
                           _ADCON1 000FC1                             _ADCON2 000FC0  
                           _ADRESL 000FC3             encenderBombas@flagSeco 0021  
               convertirDato@datoR 001F                             i2l1600 0CF2  
                           i2l1610 0D30                             i2l1602 0D00  
                           i2l1612 0D34                             i2l1604 0D0A  
                           i2l1606 0D1A                             i2l1608 0D22  
                  ??_sistemaRegado 0024                             _SSPADD 000FC8  
                           _SSPBUF 000FC9               ??_inicializarObjetos 0023  
  __size_of_restablecerDatosSensor 0050                     __CFG_XINST$OFF 000000  
         __end_of_sistemaPrincipal 0B96                     _escribe_eeprom 0E74  
                  ?_i2c_envia_dato 001D                          ??___aldiv 0025  
                           ___wmul 0F44                  __end_of_UART_init 0B2C  
                __end_of_UART_read 0CF0                  ??_asignarHorarios 002B  
                 __end_of_leer_rtc 0EF8                    ?_i2c_inicia_com 001D  
                 __end_of_estaSeco 0FC2                __size_of_UART_write 0016  
                     ?_UART_printf 001E                             clear_0 0DAC  
                           clear_1 0DB8                             _setRtc 0768  
                  _i2c_recibe_dato 0FC2                       ?_mostrarMenu 001D  
                     __pdataCOMRAM 0037               escribe_rtc@direccion 0020  
                     __mediumconst 7D78                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
           _lecturaAnalogaSensores 0BFE                         __accesstop 0060  
          __end_of__initialization 0DBE               __size_of_escribe_rtc 001E  
                  __CFG_PBADEN$OFF 000000               __size_of_leer_eeprom 003C  
                  __CFG_FOSC$XT_XT 000000                        _i2c_detener 1048  
       __size_of_constructorSensor 000A                      ___rparam_used 000001  
                      _i2c_iniciar 100C             __end_of_escribe_eeprom 0EA4  
                      ?_i2c_espera 001D                     _setTiempoRegar 0268  
                 setTiempoRegar@Rx 0032                     __pcstackCOMRAM 001D  
                     leer_rtc@dato 0020    __size_of_escribeHorariosMemoria 00CE  
                  ??_convertirDato 001D             _restablecerDatosSensor 0C52  
                     _datoRecibido 0017                         __pbssBANK0 0060  
          __size_of_desbordamiento 0D34                 __size_of_horaRegar 002A  
           __end_of_setTiempoRegar 043A                    ?_escribe_eeprom 0023  
               _contInterrupciones 0011          __size_of_i2c_reinicia_com 0008  
                          ?___wmul 001D            __end_of_i2c_recibe_dato 0FDC  
                          _ACKSTAT 007E2E                            ?_setRtc 001D  
                          i2u70_40 0D30                            i2u70_41 0D2C  
              __size_of_i2c_espera 0026                            i2u68_40 0D00  
                          i2u68_41 0CFC                            i2u69_40 0D1A  
                          i2u69_41 0D16             _escribeHorariosMemoria 069A  
                          _SSPCON1 000FC6                            _SSPCON2 000FC5  
                     ??_UART_write 001D                            _SSPSTAT 000FC7  
         __end_of_dameHumedadSuelo 0E3E                          ?_leer_rtc 001D  
                        ?_estaSeco 001D                    __CFG_VREGEN$OFF 000000  
                  ?_setTiempoRegar 001D                            __Hparam 0000  
                          __Lparam 0000                            ___aldiv 058E  
                  __size_of___wmul 0026           constructorSensor@humedad 001F  
                  __CFG_STVREN$OFF 000000                            __pcinit 0D86  
                          __ramtop 0800                 __end_of_UART_write 100C  
                  __size_of_setRtc 00CC                            __ptext0 0A2E  
                          __ptext1 08FC                            __ptext2 0BFE  
                          __ptext3 0E08                            __ptext4 0EA4  
                          __ptext5 0012                            __ptext6 0FA8  
                          __ptext7 0EF8                            __ptext8 0ECE  
                          __ptext9 0F6A                  __end_of_horaRegar 0ECE  
                        _T0CONbits 000FD5               __size_of_UART_printf 0036  
                          _regando 0013                   ___aldiv@dividend 001D  
                          _minutos 0019               __size_of_mostrarMenu 004A  
                   __pintcode_body 0CF0               end_of_initialization 0DBE  
                       ??_leer_rtc 001F                         ??_estaSeco 001F  
                  _asignarHorarios 043A                      __Lmediumconst 7D78  
                          int_func 0CF0                   ??_i2c_envia_dato 001E  
      __size_of_leeHorariosMemoria 00C8                            setRtc@i 0025  
                 ??_i2c_inicia_com 001E                   _VALOR_TIMER0UART 0039  
                        _RCSTAbits 000FAB                   ___aldiv@quotient 0027  
                          postdec1 000FE5                            postdec2 000FDD  
                ?_sistemaPrincipal 001D                            postinc0 000FEE  
                          postinc2 000FDE                      ??_fijaHoraRtc 0028  
                 ?_i2c_recibe_dato 001D              __end_of_configurarAdc 0FF6  
               ??_sistemaPrincipal 0033                          _UART_init 0ABC  
                        _UART_read 0CA2            ?_lecturaAnalogaSensores 001D  
        dameHumedadSuelo@canalLeer 001E            lecturaAnalogaSensores@i 0020  
                        _TRISBbits 000F93                          _TRISCbits 000F94  
          __size_of_encenderBombas 0256                     _desbordamiento 0008  
                   _esperandoDatos 003B                     _UART_init$1471 0033  
                     ?_i2c_detener 001D              __end_of_sistemaRegado 0998  
                        _TXSTAbits 000FAC        __size_of_inicializarObjetos 0096  
                     ?_i2c_iniciar 001D                       ??_i2c_espera 001D  
                 _i2c_reinicia_com 1038        setTiempoRegar@datoCapturado 0031  
                   __end_of___wmul 0F6A                      __pidataCOMRAM 1050  
          ?_restablecerDatosSensor 001D     __end_of_lecturaAnalogaSensores 0C52  
                       ?_UART_init 002B                         ?_UART_read 001D  
              setRtc@datoCapturado 0024            __size_of_dameHoraActual 0026  
                   __end_of_setRtc 0834                __end_of_fijaHoraRtc 0BFE  
              start_initialization 0D86            __end_of_asignarHorarios 058E  
escribeHorariosMemoria@contMemoria 0027             __end_of_desbordamiento 0D3C  
               __end_of_i2c_espera 0F44                      ??_escribe_rtc 0020  
                    ??_leer_eeprom 0021                   ??_escribe_eeprom 0026  
              leeHorariosMemoria@i 0025               constructorSensor@pin 0020  
                         ??___wmul 0021     __end_of_restablecerDatosSensor 0CA2  
                 __CFG_LPT1OSC$OFF 000000                  leer_rtc@direccion 001F  
                         ??_setRtc 0021              __end_of_convertirDato 0F8A  
     asignarHorarios@datoCapturado 002C            ?_escribeHorariosMemoria 001D  
                      __pbssCOMRAM 0001                    ?_desbordamiento 001D  
                 ??_setTiempoRegar 002B                  ?_dameHumedadSuelo 001D  
                UART_printf@cadena 001E                 ??_dameHumedadSuelo 001D  
                __size_of_leer_rtc 002A                  __size_of_estaSeco 001A  
              __end_of_escribe_rtc 0FA8                __end_of_leer_eeprom 0E08  
                        __pintcode 0008                      __pmediumconst 7D78  
                         ?___aldiv 001D                        _fijaHoraRtc 0B96  
                       setRtc@dato 0023                        ??_UART_init 002F  
                      ??_UART_read 001D     __end_of_escribeHorariosMemoria 0768  
                   _encenderBombas 0012                          _horaRegar 0EA4  
                 ?_asignarHorarios 001D                    ___aldiv@divisor 0021  
                  ___aldiv@counter 0025                     ___wmul@product 0021  
                         _LATDbits 000F8C                           _PIE1bits 000F9D  
             __size_of_i2c_detener 0008                           _PIR1bits 000F9E  
          restablecerDatosSensor@i 0021               __size_of_i2c_iniciar 0016  
                 __CFG_WDTPS$32768 000000      leeHorariosMemoria@contMemoria 0023  
              asignarHorarios@hora 002B                      ??_UART_printf 0020  
                       _ADCON0bits 000FC2                     _dameHoraActual 0EF8  
                ___wmul@multiplier 001D             __end_of_encenderBombas 0268  
                    ??_mostrarMenu 0020                     UART_write@dato 001D  
                       ?_horaRegar 001D          __size_of_sistemaPrincipal 006A  
         __end_of_i2c_reinicia_com 1040                          copy_data0 0D9A  
                      _escribe_rtc 0F8A                        _leer_eeprom 0DCC  
                     _VALOR_TIMER0 0037         __end_of_leeHorariosMemoria 08FC  
                        estaSeco@s 001D                           __Hrparam 0000  
                     _minutosRegar 0015                      UART_init@BAUD 002B  
                         __Lrparam 0000                _esperaDatoConcluida 001B  
                 __size_of___aldiv 010C             __end_of_dameHoraActual 0F1E  
                  ?_encenderBombas 001D           __size_of_i2c_recibe_dato 001A  
              __end_of_UART_printf 0E74                           __ptext10 0B2C  
                         __ptext11 0268                           __ptext20 0E3E  
                         __ptext12 0D3C                           __ptext21 0FF6  
                         __ptext13 0B96                           __ptext30 1048  
                         __ptext22 0C52                           __ptext14 0768  
                         __ptext31 0F1E                           __ptext23 102E  
                         __ptext15 0F8A                           __ptext32 0998  
                         __ptext24 0834                           __ptext16 043A  
                         __ptext33 0F44                           __ptext25 0DCC  
                         __ptext17 069A                           __ptext34 100C  
                         __ptext26 1038                           __ptext18 0E74  
                         __ptext35 0FDC                           __ptext27 0FC2  
                         __ptext19 0CA2                           __ptext36 0ABC  
                         __ptext28 1040                           __ptext37 058E  
                         __ptext29 1022                __end_of_mostrarMenu 0D86  
                         _leer_rtc 0ECE                           _estaSeco 0FA8  
       __end_of_inicializarObjetos 0A2E                           _byteUart 001C  
           __size_of_configurarAdc 001A                inicializarObjetos@i 0023  
                    __size_of_main 008E                           _horarios 0060  
                         _segundos 0018                    encenderBombas@i 0022  
                         _sensores 0001                           int$flags 003C  
                  ?_dameHoraActual 001D            __size_of_i2c_envia_dato 000C  
          __size_of_i2c_inicia_com 0008           i2c_recibe_dato@datoleido 001E  
            __CFG_CPUDIV$OSC1_PLL2 000000                   ??_desbordamiento 001D  
           __size_of_sistemaRegado 009C                         _INTCONbits 000FF2  
               constructorSensor@s 001D                        ??_horaRegar 001F  
          escribe_eeprom@direccion 0023                           intlevel2 0000  
                  escribe_rtc@dato 001F                           setRtc@Rx 0027  
                  setRtc@direccion 0022                  asignarHorarios@Rx 002F  
                    _overflowTimer 0016                       ?_fijaHoraRtc 001D  
        __size_of_dameHumedadSuelo 0036                        _UART_printf 0E3E  
                    _configurarAdc 0FDC                        _mostrarMenu 0D3C  
                     ___aldiv@sign 0026                   asignarHorarios@i 002D  
                 _sistemaPrincipal 0B2C                    leer_eeprom@dato 0022  
                      _SSPCON2bits 000FC5                         _UART_write 0FF6  
                ??_i2c_recibe_dato 001E             __size_of_convertirDato 0020  
             leer_eeprom@direccion 001F                      _sistemaRegado 08FC  
         ??_lecturaAnalogaSensores 001F  
