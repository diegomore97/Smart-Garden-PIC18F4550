

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Apr 29 15:50:39 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           ; Version 2.10
    80                           ; Generated 31/07/2019 GMT
    81                           ; 
    82                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F4550 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataBANK0
   115  002300                     __pidataBANK0:
   116                           	opt callstack 0
   117                           
   118                           ;initializer for _VALOR_TIMER0
   119  002300  6769               	dw	26473
   120                           
   121                           ;initializer for _VALOR_TIMER0UART
   122  002302  6769               	dw	26473
   123  0000                     _TMR0	set	4054
   124  0000                     _TRISD	set	3989
   125  0000                     _T0CON	set	4053
   126  0000                     _T0CONbits	set	4053
   127  0000                     _LATD	set	3980
   128  0000                     _PIE1bits	set	3997
   129  0000                     _ADRESL	set	4035
   130  0000                     _ADRESH	set	4036
   131  0000                     _ADCON0bits	set	4034
   132  0000                     _ADCON2	set	4032
   133  0000                     _ADCON1	set	4033
   134  0000                     _INTCONbits	set	4082
   135  0000                     _LATDbits	set	3980
   136  0000                     _TRISDbits	set	3989
   137  0000                     _PORTDbits	set	3971
   138  0000                     _TXREG	set	4013
   139  0000                     _RCREG	set	4014
   140  0000                     _PIR1bits	set	3998
   141  0000                     _RCSTAbits	set	4011
   142  0000                     _TXSTAbits	set	4012
   143  0000                     _SPBRG	set	4015
   144  0000                     _TRISCbits	set	3988
   145  0000                     _SSPBUF	set	4041
   146  0000                     _SSPCON2bits	set	4037
   147  0000                     _SSPADD	set	4040
   148  0000                     _SSPCON2	set	4037
   149  0000                     _SSPCON1	set	4038
   150  0000                     _SSPSTAT	set	4039
   151  0000                     _TRISBbits	set	3987
   152  0000                     _ACKSTAT	set	32302
   153                           
   154                           	psect	mediumconst
   155  007BC6                     __pmediumconst:
   156                           	opt callstack 0
   157  007BC6  00                 	db	0
   158  007BC7                     STR_11:
   159  007BC7  0D                 	db	13
   160  007BC8  0A                 	db	10
   161  007BC9  20                 	db	32
   162  007BCA  49                 	db	73	;'I'
   163  007BCB  6E                 	db	110	;'n'
   164  007BCC  67                 	db	103	;'g'
   165  007BCD  72                 	db	114	;'r'
   166  007BCE  65                 	db	101	;'e'
   167  007BCF  73                 	db	115	;'s'
   168  007BD0  65                 	db	101	;'e'
   169  007BD1  20                 	db	32
   170  007BD2  6C                 	db	108	;'l'
   171  007BD3  6F                 	db	111	;'o'
   172  007BD4  73                 	db	115	;'s'
   173  007BD5  20                 	db	32
   174  007BD6  6D                 	db	109	;'m'
   175  007BD7  69                 	db	105	;'i'
   176  007BD8  6E                 	db	110	;'n'
   177  007BD9  75                 	db	117	;'u'
   178  007BDA  74                 	db	116	;'t'
   179  007BDB  6F                 	db	111	;'o'
   180  007BDC  73                 	db	115	;'s'
   181  007BDD  20                 	db	32
   182  007BDE  71                 	db	113	;'q'
   183  007BDF  75                 	db	117	;'u'
   184  007BE0  65                 	db	101	;'e'
   185  007BE1  20                 	db	32
   186  007BE2  64                 	db	100	;'d'
   187  007BE3  65                 	db	101	;'e'
   188  007BE4  73                 	db	115	;'s'
   189  007BE5  65                 	db	101	;'e'
   190  007BE6  65                 	db	101	;'e'
   191  007BE7  20                 	db	32
   192  007BE8  71                 	db	113	;'q'
   193  007BE9  75                 	db	117	;'u'
   194  007BEA  65                 	db	101	;'e'
   195  007BEB  20                 	db	32
   196  007BEC  73                 	db	115	;'s'
   197  007BED  65                 	db	101	;'e'
   198  007BEE  20                 	db	32
   199  007BEF  72                 	db	114	;'r'
   200  007BF0  69                 	db	105	;'i'
   201  007BF1  65                 	db	101	;'e'
   202  007BF2  67                 	db	103	;'g'
   203  007BF3  75                 	db	117	;'u'
   204  007BF4  65                 	db	101	;'e'
   205  007BF5  20                 	db	32
   206  007BF6  65                 	db	101	;'e'
   207  007BF7  6E                 	db	110	;'n'
   208  007BF8  20                 	db	32
   209  007BF9  65                 	db	101	;'e'
   210  007BFA  73                 	db	115	;'s'
   211  007BFB  65                 	db	101	;'e'
   212  007BFC  20                 	db	32
   213  007BFD  68                 	db	104	;'h'
   214  007BFE  6F                 	db	111	;'o'
   215  007BFF  72                 	db	114	;'r'
   216  007C00  61                 	db	97	;'a'
   217  007C01  72                 	db	114	;'r'
   218  007C02  69                 	db	105	;'i'
   219  007C03  6F                 	db	111	;'o'
   220  007C04  20                 	db	32
   221  007C05  65                 	db	101	;'e'
   222  007C06  6A                 	db	106	;'j'
   223  007C07  3A                 	db	58	;':'
   224  007C08  20                 	db	32
   225  007C09  31                 	db	49	;'1'
   226  007C0A  35                 	db	53	;'5'
   227  007C0B  20                 	db	32
   228  007C0C  0D                 	db	13
   229  007C0D  0A                 	db	10
   230  007C0E  00                 	db	0
   231  007C0F                     STR_7:
   232  007C0F  0D                 	db	13
   233  007C10  0A                 	db	10
   234  007C11  20                 	db	32
   235  007C12  49                 	db	73	;'I'
   236  007C13  6E                 	db	110	;'n'
   237  007C14  67                 	db	103	;'g'
   238  007C15  72                 	db	114	;'r'
   239  007C16  65                 	db	101	;'e'
   240  007C17  73                 	db	115	;'s'
   241  007C18  65                 	db	101	;'e'
   242  007C19  20                 	db	32
   243  007C1A  31                 	db	49	;'1'
   244  007C1B  20                 	db	32
   245  007C1C  70                 	db	112	;'p'
   246  007C1D  61                 	db	97	;'a'
   247  007C1E  72                 	db	114	;'r'
   248  007C1F  61                 	db	97	;'a'
   249  007C20  20                 	db	32
   250  007C21  72                 	db	114	;'r'
   251  007C22  65                 	db	101	;'e'
   252  007C23  67                 	db	103	;'g'
   253  007C24  61                 	db	97	;'a'
   254  007C25  72                 	db	114	;'r'
   255  007C26  20                 	db	32
   256  007C27  7C                 	db	124
   257  007C28  7C                 	db	124
   258  007C29  20                 	db	32
   259  007C2A  69                 	db	105	;'i'
   260  007C2B  6E                 	db	110	;'n'
   261  007C2C  67                 	db	103	;'g'
   262  007C2D  72                 	db	114	;'r'
   263  007C2E  65                 	db	101	;'e'
   264  007C2F  73                 	db	115	;'s'
   265  007C30  65                 	db	101	;'e'
   266  007C31  20                 	db	32
   267  007C32  30                 	db	48	;'0'
   268  007C33  20                 	db	32
   269  007C34  70                 	db	112	;'p'
   270  007C35  61                 	db	97	;'a'
   271  007C36  72                 	db	114	;'r'
   272  007C37  61                 	db	97	;'a'
   273  007C38  20                 	db	32
   274  007C39  6E                 	db	110	;'n'
   275  007C3A  6F                 	db	111	;'o'
   276  007C3B  20                 	db	32
   277  007C3C  72                 	db	114	;'r'
   278  007C3D  65                 	db	101	;'e'
   279  007C3E  67                 	db	103	;'g'
   280  007C3F  61                 	db	97	;'a'
   281  007C40  72                 	db	114	;'r'
   282  007C41  3A                 	db	58	;':'
   283  007C42  20                 	db	32
   284  007C43  0D                 	db	13
   285  007C44  0A                 	db	10
   286  007C45  00                 	db	0
   287  007C46                     STR_6:
   288  007C46  0D                 	db	13
   289  007C47  0A                 	db	10
   290  007C48  20                 	db	32
   291  007C49  49                 	db	73	;'I'
   292  007C4A  6E                 	db	110	;'n'
   293  007C4B  67                 	db	103	;'g'
   294  007C4C  72                 	db	114	;'r'
   295  007C4D  65                 	db	101	;'e'
   296  007C4E  73                 	db	115	;'s'
   297  007C4F  65                 	db	101	;'e'
   298  007C50  20                 	db	32
   299  007C51  75                 	db	117	;'u'
   300  007C52  6E                 	db	110	;'n'
   301  007C53  61                 	db	97	;'a'
   302  007C54  20                 	db	32
   303  007C55  68                 	db	104	;'h'
   304  007C56  6F                 	db	111	;'o'
   305  007C57  72                 	db	114	;'r'
   306  007C58  61                 	db	97	;'a'
   307  007C59  20                 	db	32
   308  007C5A  65                 	db	101	;'e'
   309  007C5B  6E                 	db	110	;'n'
   310  007C5C  20                 	db	32
   311  007C5D  66                 	db	102	;'f'
   312  007C5E  6F                 	db	111	;'o'
   313  007C5F  72                 	db	114	;'r'
   314  007C60  6D                 	db	109	;'m'
   315  007C61  61                 	db	97	;'a'
   316  007C62  74                 	db	116	;'t'
   317  007C63  6F                 	db	111	;'o'
   318  007C64  20                 	db	32
   319  007C65  64                 	db	100	;'d'
   320  007C66  65                 	db	101	;'e'
   321  007C67  20                 	db	32
   322  007C68  32                 	db	50	;'2'
   323  007C69  34                 	db	52	;'4'
   324  007C6A  20                 	db	32
   325  007C6B  68                 	db	104	;'h'
   326  007C6C  72                 	db	114	;'r'
   327  007C6D  73                 	db	115	;'s'
   328  007C6E  20                 	db	32
   329  007C6F  65                 	db	101	;'e'
   330  007C70  6A                 	db	106	;'j'
   331  007C71  3A                 	db	58	;':'
   332  007C72  20                 	db	32
   333  007C73  31                 	db	49	;'1'
   334  007C74  35                 	db	53	;'5'
   335  007C75  20                 	db	32
   336  007C76  0D                 	db	13
   337  007C77  0A                 	db	10
   338  007C78  00                 	db	0
   339  007C79                     STR_25:
   340  007C79  0D                 	db	13
   341  007C7A  0A                 	db	10
   342  007C7B  0A                 	db	10
   343  007C7C  48                 	db	72	;'H'
   344  007C7D  6F                 	db	111	;'o'
   345  007C7E  72                 	db	114	;'r'
   346  007C7F  61                 	db	97	;'a'
   347  007C80  20                 	db	32
   348  007C81  7C                 	db	124
   349  007C82  20                 	db	32
   350  007C83  52                 	db	82	;'R'
   351  007C84  65                 	db	101	;'e'
   352  007C85  67                 	db	103	;'g'
   353  007C86  61                 	db	97	;'a'
   354  007C87  72                 	db	114	;'r'
   355  007C88  28                 	db	40
   356  007C89  31                 	db	49	;'1'
   357  007C8A  20                 	db	32
   358  007C8B  73                 	db	115	;'s'
   359  007C8C  69                 	db	105	;'i'
   360  007C8D  20                 	db	32
   361  007C8E  30                 	db	48	;'0'
   362  007C8F  20                 	db	32
   363  007C90  6E                 	db	110	;'n'
   364  007C91  6F                 	db	111	;'o'
   365  007C92  29                 	db	41
   366  007C93  20                 	db	32
   367  007C94  7C                 	db	124
   368  007C95  20                 	db	32
   369  007C96  4D                 	db	77	;'M'
   370  007C97  69                 	db	105	;'i'
   371  007C98  6E                 	db	110	;'n'
   372  007C99  75                 	db	117	;'u'
   373  007C9A  74                 	db	116	;'t'
   374  007C9B  6F                 	db	111	;'o'
   375  007C9C  73                 	db	115	;'s'
   376  007C9D  20                 	db	32
   377  007C9E  64                 	db	100	;'d'
   378  007C9F  65                 	db	101	;'e'
   379  007CA0  20                 	db	32
   380  007CA1  72                 	db	114	;'r'
   381  007CA2  69                 	db	105	;'i'
   382  007CA3  65                 	db	101	;'e'
   383  007CA4  67                 	db	103	;'g'
   384  007CA5  6F                 	db	111	;'o'
   385  007CA6  20                 	db	32
   386  007CA7  0D                 	db	13
   387  007CA8  0A                 	db	10
   388  007CA9  0A                 	db	10
   389  007CAA  00                 	db	0
   390  007CAB                     STR_19:
   391  007CAB  0D                 	db	13
   392  007CAC  0A                 	db	10
   393  007CAD  20                 	db	32
   394  007CAE  33                 	db	51	;'3'
   395  007CAF  2E                 	db	46
   396  007CB0  20                 	db	32
   397  007CB1  50                 	db	80	;'P'
   398  007CB2  72                 	db	114	;'r'
   399  007CB3  6F                 	db	111	;'o'
   400  007CB4  67                 	db	103	;'g'
   401  007CB5  72                 	db	114	;'r'
   402  007CB6  61                 	db	97	;'a'
   403  007CB7  6D                 	db	109	;'m'
   404  007CB8  61                 	db	97	;'a'
   405  007CB9  72                 	db	114	;'r'
   406  007CBA  20                 	db	32
   407  007CBB  74                 	db	116	;'t'
   408  007CBC  69                 	db	105	;'i'
   409  007CBD  65                 	db	101	;'e'
   410  007CBE  6D                 	db	109	;'m'
   411  007CBF  70                 	db	112	;'p'
   412  007CC0  6F                 	db	111	;'o'
   413  007CC1  20                 	db	32
   414  007CC2  64                 	db	100	;'d'
   415  007CC3  65                 	db	101	;'e'
   416  007CC4  20                 	db	32
   417  007CC5  72                 	db	114	;'r'
   418  007CC6  69                 	db	105	;'i'
   419  007CC7  65                 	db	101	;'e'
   420  007CC8  67                 	db	103	;'g'
   421  007CC9  6F                 	db	111	;'o'
   422  007CCA  20                 	db	32
   423  007CCB  65                 	db	101	;'e'
   424  007CCC  6E                 	db	110	;'n'
   425  007CCD  20                 	db	32
   426  007CCE  75                 	db	117	;'u'
   427  007CCF  6E                 	db	110	;'n'
   428  007CD0  20                 	db	32
   429  007CD1  68                 	db	104	;'h'
   430  007CD2  6F                 	db	111	;'o'
   431  007CD3  72                 	db	114	;'r'
   432  007CD4  61                 	db	97	;'a'
   433  007CD5  72                 	db	114	;'r'
   434  007CD6  69                 	db	105	;'i'
   435  007CD7  6F                 	db	111	;'o'
   436  007CD8  20                 	db	32
   437  007CD9  0D                 	db	13
   438  007CDA  0A                 	db	10
   439  007CDB  00                 	db	0
   440  007CDC                     STR_2:
   441  007CDC  0D                 	db	13
   442  007CDD  0A                 	db	10
   443  007CDE  20                 	db	32
   444  007CDF  45                 	db	69	;'E'
   445  007CE0  6E                 	db	110	;'n'
   446  007CE1  76                 	db	118	;'v'
   447  007CE2  69                 	db	105	;'i'
   448  007CE3  65                 	db	101	;'e'
   449  007CE4  20                 	db	32
   450  007CE5  6C                 	db	108	;'l'
   451  007CE6  61                 	db	97	;'a'
   452  007CE7  73                 	db	115	;'s'
   453  007CE8  20                 	db	32
   454  007CE9  48                 	db	72	;'H'
   455  007CEA  6F                 	db	111	;'o'
   456  007CEB  72                 	db	114	;'r'
   457  007CEC  61                 	db	97	;'a'
   458  007CED  73                 	db	115	;'s'
   459  007CEE  20                 	db	32
   460  007CEF  65                 	db	101	;'e'
   461  007CF0  6E                 	db	110	;'n'
   462  007CF1  20                 	db	32
   463  007CF2  66                 	db	102	;'f'
   464  007CF3  6F                 	db	111	;'o'
   465  007CF4  72                 	db	114	;'r'
   466  007CF5  6D                 	db	109	;'m'
   467  007CF6  61                 	db	97	;'a'
   468  007CF7  74                 	db	116	;'t'
   469  007CF8  6F                 	db	111	;'o'
   470  007CF9  20                 	db	32
   471  007CFA  32                 	db	50	;'2'
   472  007CFB  34                 	db	52	;'4'
   473  007CFC  20                 	db	32
   474  007CFD  45                 	db	69	;'E'
   475  007CFE  6A                 	db	106	;'j'
   476  007CFF  3A                 	db	58	;':'
   477  007D00  20                 	db	32
   478  007D01  31                 	db	49	;'1'
   479  007D02  35                 	db	53	;'5'
   480  007D03  20                 	db	32
   481  007D04  0D                 	db	13
   482  007D05  0A                 	db	10
   483  007D06  00                 	db	0
   484  007D07                     STR_24:
   485  007D07  0D                 	db	13
   486  007D08  0A                 	db	10
   487  007D09  20                 	db	32
   488  007D0A  53                 	db	83	;'S'
   489  007D0B  6F                 	db	111	;'o'
   490  007D0C  6C                 	db	108	;'l'
   491  007D0D  6F                 	db	111	;'o'
   492  007D0E  20                 	db	32
   493  007D0F  73                 	db	115	;'s'
   494  007D10  65                 	db	101	;'e'
   495  007D11  20                 	db	32
   496  007D12  70                 	db	112	;'p'
   497  007D13  65                 	db	101	;'e'
   498  007D14  72                 	db	114	;'r'
   499  007D15  6D                 	db	109	;'m'
   500  007D16  69                 	db	105	;'i'
   501  007D17  74                 	db	116	;'t'
   502  007D18  65                 	db	101	;'e'
   503  007D19  6E                 	db	110	;'n'
   504  007D1A  20                 	db	32
   505  007D1B  6E                 	db	110	;'n'
   506  007D1C  75                 	db	117	;'u'
   507  007D1D  6D                 	db	109	;'m'
   508  007D1E  65                 	db	101	;'e'
   509  007D1F  72                 	db	114	;'r'
   510  007D20  6F                 	db	111	;'o'
   511  007D21  73                 	db	115	;'s'
   512  007D22  20                 	db	32
   513  007D23  64                 	db	100	;'d'
   514  007D24  65                 	db	101	;'e'
   515  007D25  6C                 	db	108	;'l'
   516  007D26  20                 	db	32
   517  007D27  31                 	db	49	;'1'
   518  007D28  20                 	db	32
   519  007D29  61                 	db	97	;'a'
   520  007D2A  6C                 	db	108	;'l'
   521  007D2B  20                 	db	32
   522  007D2C  33                 	db	51	;'3'
   523  007D2D  20                 	db	32
   524  007D2E  0D                 	db	13
   525  007D2F  0A                 	db	10
   526  007D30  00                 	db	0
   527  007D31                     STR_31:
   528  007D31  0D                 	db	13
   529  007D32  0A                 	db	10
   530  007D33  0A                 	db	10
   531  007D34  50                 	db	80	;'P'
   532  007D35  6F                 	db	111	;'o'
   533  007D36  72                 	db	114	;'r'
   534  007D37  63                 	db	99	;'c'
   535  007D38  65                 	db	101	;'e'
   536  007D39  6E                 	db	110	;'n'
   537  007D3A  74                 	db	116	;'t'
   538  007D3B  61                 	db	97	;'a'
   539  007D3C  6A                 	db	106	;'j'
   540  007D3D  65                 	db	101	;'e'
   541  007D3E  20                 	db	32
   542  007D3F  48                 	db	72	;'H'
   543  007D40  75                 	db	117	;'u'
   544  007D41  6D                 	db	109	;'m'
   545  007D42  65                 	db	101	;'e'
   546  007D43  64                 	db	100	;'d'
   547  007D44  61                 	db	97	;'a'
   548  007D45  64                 	db	100	;'d'
   549  007D46  20                 	db	32
   550  007D47  64                 	db	100	;'d'
   551  007D48  65                 	db	101	;'e'
   552  007D49  6C                 	db	108	;'l'
   553  007D4A  20                 	db	32
   554  007D4B  73                 	db	115	;'s'
   555  007D4C  65                 	db	101	;'e'
   556  007D4D  6E                 	db	110	;'n'
   557  007D4E  73                 	db	115	;'s'
   558  007D4F  6F                 	db	111	;'o'
   559  007D50  72                 	db	114	;'r'
   560  007D51  20                 	db	32
   561  007D52  25                 	db	37
   562  007D53  64                 	db	100	;'d'
   563  007D54  3A                 	db	58	;':'
   564  007D55  20                 	db	32
   565  007D56  25                 	db	37
   566  007D57  64                 	db	100	;'d'
   567  007D58  0D                 	db	13
   568  007D59  0A                 	db	10
   569  007D5A  00                 	db	0
   570  007D5B                     STR_33:
   571  007D5B  0D                 	db	13
   572  007D5C  0A                 	db	10
   573  007D5D  0A                 	db	10
   574  007D5E  45                 	db	69	;'E'
   575  007D5F  6C                 	db	108	;'l'
   576  007D60  20                 	db	32
   577  007D61  73                 	db	115	;'s'
   578  007D62  65                 	db	101	;'e'
   579  007D63  6E                 	db	110	;'n'
   580  007D64  73                 	db	115	;'s'
   581  007D65  6F                 	db	111	;'o'
   582  007D66  72                 	db	114	;'r'
   583  007D67  20                 	db	32
   584  007D68  25                 	db	37
   585  007D69  64                 	db	100	;'d'
   586  007D6A  20                 	db	32
   587  007D6B  64                 	db	100	;'d'
   588  007D6C  65                 	db	101	;'e'
   589  007D6D  74                 	db	116	;'t'
   590  007D6E  65                 	db	101	;'e'
   591  007D6F  63                 	db	99	;'c'
   592  007D70  74                 	db	116	;'t'
   593  007D71  61                 	db	97	;'a'
   594  007D72  20                 	db	32
   595  007D73  74                 	db	116	;'t'
   596  007D74  69                 	db	105	;'i'
   597  007D75  65                 	db	101	;'e'
   598  007D76  72                 	db	114	;'r'
   599  007D77  72                 	db	114	;'r'
   600  007D78  61                 	db	97	;'a'
   601  007D79  20                 	db	32
   602  007D7A  68                 	db	104	;'h'
   603  007D7B  75                 	db	117	;'u'
   604  007D7C  6D                 	db	109	;'m'
   605  007D7D  65                 	db	101	;'e'
   606  007D7E  64                 	db	100	;'d'
   607  007D7F  61                 	db	97	;'a'
   608  007D80  0D                 	db	13
   609  007D81  0A                 	db	10
   610  007D82  00                 	db	0
   611  007D83                     STR_13:
   612  007D83  0D                 	db	13
   613  007D84  0A                 	db	10
   614  007D85  53                 	db	83	;'S'
   615  007D86  6F                 	db	111	;'o'
   616  007D87  6C                 	db	108	;'l'
   617  007D88  69                 	db	105	;'i'
   618  007D89  63                 	db	99	;'c'
   619  007D8A  69                 	db	105	;'i'
   620  007D8B  74                 	db	116	;'t'
   621  007D8C  61                 	db	97	;'a'
   622  007D8D  6E                 	db	110	;'n'
   623  007D8E  64                 	db	100	;'d'
   624  007D8F  6F                 	db	111	;'o'
   625  007D90  20                 	db	32
   626  007D91  4D                 	db	77	;'M'
   627  007D92  75                 	db	117	;'u'
   628  007D93  65                 	db	101	;'e'
   629  007D94  73                 	db	115	;'s'
   630  007D95  74                 	db	116	;'t'
   631  007D96  72                 	db	114	;'r'
   632  007D97  65                 	db	101	;'e'
   633  007D98  6F                 	db	111	;'o'
   634  007D99  20                 	db	32
   635  007D9A  64                 	db	100	;'d'
   636  007D9B  65                 	db	101	;'e'
   637  007D9C  20                 	db	32
   638  007D9D  73                 	db	115	;'s'
   639  007D9E  65                 	db	101	;'e'
   640  007D9F  6E                 	db	110	;'n'
   641  007DA0  73                 	db	115	;'s'
   642  007DA1  6F                 	db	111	;'o'
   643  007DA2  72                 	db	114	;'r'
   644  007DA3  65                 	db	101	;'e'
   645  007DA4  73                 	db	115	;'s'
   646  007DA5  0D                 	db	13
   647  007DA6  0A                 	db	10
   648  007DA7  0A                 	db	10
   649  007DA8  00                 	db	0
   650  007DA9                     STR_32:
   651  007DA9  0D                 	db	13
   652  007DAA  0A                 	db	10
   653  007DAB  0A                 	db	10
   654  007DAC  45                 	db	69	;'E'
   655  007DAD  6C                 	db	108	;'l'
   656  007DAE  20                 	db	32
   657  007DAF  73                 	db	115	;'s'
   658  007DB0  65                 	db	101	;'e'
   659  007DB1  6E                 	db	110	;'n'
   660  007DB2  73                 	db	115	;'s'
   661  007DB3  6F                 	db	111	;'o'
   662  007DB4  72                 	db	114	;'r'
   663  007DB5  20                 	db	32
   664  007DB6  25                 	db	37
   665  007DB7  64                 	db	100	;'d'
   666  007DB8  20                 	db	32
   667  007DB9  64                 	db	100	;'d'
   668  007DBA  65                 	db	101	;'e'
   669  007DBB  74                 	db	116	;'t'
   670  007DBC  65                 	db	101	;'e'
   671  007DBD  63                 	db	99	;'c'
   672  007DBE  74                 	db	116	;'t'
   673  007DBF  61                 	db	97	;'a'
   674  007DC0  20                 	db	32
   675  007DC1  74                 	db	116	;'t'
   676  007DC2  69                 	db	105	;'i'
   677  007DC3  65                 	db	101	;'e'
   678  007DC4  72                 	db	114	;'r'
   679  007DC5  72                 	db	114	;'r'
   680  007DC6  61                 	db	97	;'a'
   681  007DC7  20                 	db	32
   682  007DC8  73                 	db	115	;'s'
   683  007DC9  65                 	db	101	;'e'
   684  007DCA  63                 	db	99	;'c'
   685  007DCB  61                 	db	97	;'a'
   686  007DCC  0D                 	db	13
   687  007DCD  0A                 	db	10
   688  007DCE  00                 	db	0
   689  007DCF                     STR_12:
   690  007DCF  0D                 	db	13
   691  007DD0  0A                 	db	10
   692  007DD1  20                 	db	32
   693  007DD2  4D                 	db	77	;'M'
   694  007DD3  69                 	db	105	;'i'
   695  007DD4  6E                 	db	110	;'n'
   696  007DD5  75                 	db	117	;'u'
   697  007DD6  74                 	db	116	;'t'
   698  007DD7  6F                 	db	111	;'o'
   699  007DD8  73                 	db	115	;'s'
   700  007DD9  20                 	db	32
   701  007DDA  64                 	db	100	;'d'
   702  007DDB  65                 	db	101	;'e'
   703  007DDC  20                 	db	32
   704  007DDD  72                 	db	114	;'r'
   705  007DDE  69                 	db	105	;'i'
   706  007DDF  65                 	db	101	;'e'
   707  007DE0  67                 	db	103	;'g'
   708  007DE1  6F                 	db	111	;'o'
   709  007DE2  20                 	db	32
   710  007DE3  65                 	db	101	;'e'
   711  007DE4  73                 	db	115	;'s'
   712  007DE5  74                 	db	116	;'t'
   713  007DE6  61                 	db	97	;'a'
   714  007DE7  62                 	db	98	;'b'
   715  007DE8  6C                 	db	108	;'l'
   716  007DE9  65                 	db	101	;'e'
   717  007DEA  63                 	db	99	;'c'
   718  007DEB  69                 	db	105	;'i'
   719  007DEC  64                 	db	100	;'d'
   720  007DED  6F                 	db	111	;'o'
   721  007DEE  73                 	db	115	;'s'
   722  007DEF  21                 	db	33
   723  007DF0  20                 	db	32
   724  007DF1  0D                 	db	13
   725  007DF2  0A                 	db	10
   726  007DF3  00                 	db	0
   727  007DF4                     STR_16:
   728  007DF4  0D                 	db	13
   729  007DF5  0A                 	db	10
   730  007DF6  20                 	db	32
   731  007DF7  49                 	db	73	;'I'
   732  007DF8  6E                 	db	110	;'n'
   733  007DF9  67                 	db	103	;'g'
   734  007DFA  72                 	db	114	;'r'
   735  007DFB  65                 	db	101	;'e'
   736  007DFC  73                 	db	115	;'s'
   737  007DFD  61                 	db	97	;'a'
   738  007DFE  20                 	db	32
   739  007DFF  75                 	db	117	;'u'
   740  007E00  6E                 	db	110	;'n'
   741  007E01  61                 	db	97	;'a'
   742  007E02  20                 	db	32
   743  007E03  6F                 	db	111	;'o'
   744  007E04  70                 	db	112	;'p'
   745  007E05  63                 	db	99	;'c'
   746  007E06  69                 	db	105	;'i'
   747  007E07  6F                 	db	111	;'o'
   748  007E08  6E                 	db	110	;'n'
   749  007E09  20                 	db	32
   750  007E0A  61                 	db	97	;'a'
   751  007E0B  20                 	db	32
   752  007E0C  52                 	db	82	;'R'
   753  007E0D  65                 	db	101	;'e'
   754  007E0E  61                 	db	97	;'a'
   755  007E0F  6C                 	db	108	;'l'
   756  007E10  69                 	db	105	;'i'
   757  007E11  7A                 	db	122	;'z'
   758  007E12  61                 	db	97	;'a'
   759  007E13  72                 	db	114	;'r'
   760  007E14  3A                 	db	58	;':'
   761  007E15  20                 	db	32
   762  007E16  0D                 	db	13
   763  007E17  0A                 	db	10
   764  007E18  00                 	db	0
   765  007E19                     STR_4:
   766  007E19  0D                 	db	13
   767  007E1A  0A                 	db	10
   768  007E1B  20                 	db	32
   769  007E1C  48                 	db	72	;'H'
   770  007E1D  4F                 	db	79	;'O'
   771  007E1E  52                 	db	82	;'R'
   772  007E1F  41                 	db	65	;'A'
   773  007E20  20                 	db	32
   774  007E21  45                 	db	69	;'E'
   775  007E22  53                 	db	83	;'S'
   776  007E23  54                 	db	84	;'T'
   777  007E24  41                 	db	65	;'A'
   778  007E25  42                 	db	66	;'B'
   779  007E26  4C                 	db	76	;'L'
   780  007E27  45                 	db	69	;'E'
   781  007E28  43                 	db	67	;'C'
   782  007E29  49                 	db	73	;'I'
   783  007E2A  44                 	db	68	;'D'
   784  007E2B  41                 	db	65	;'A'
   785  007E2C  20                 	db	32
   786  007E2D  43                 	db	67	;'C'
   787  007E2E  4F                 	db	79	;'O'
   788  007E2F  52                 	db	82	;'R'
   789  007E30  52                 	db	82	;'R'
   790  007E31  45                 	db	69	;'E'
   791  007E32  43                 	db	67	;'C'
   792  007E33  54                 	db	84	;'T'
   793  007E34  41                 	db	65	;'A'
   794  007E35  4D                 	db	77	;'M'
   795  007E36  45                 	db	69	;'E'
   796  007E37  4E                 	db	78	;'N'
   797  007E38  54                 	db	84	;'T'
   798  007E39  45                 	db	69	;'E'
   799  007E3A  20                 	db	32
   800  007E3B  0D                 	db	13
   801  007E3C  0A                 	db	10
   802  007E3D  00                 	db	0
   803  007E3E                     STR_18:
   804  007E3E  0D                 	db	13
   805  007E3F  0A                 	db	10
   806  007E40  20                 	db	32
   807  007E41  32                 	db	50	;'2'
   808  007E42  2E                 	db	46
   809  007E43  20                 	db	32
   810  007E44  41                 	db	65	;'A'
   811  007E45  73                 	db	115	;'s'
   812  007E46  69                 	db	105	;'i'
   813  007E47  67                 	db	103	;'g'
   814  007E48  6E                 	db	110	;'n'
   815  007E49  61                 	db	97	;'a'
   816  007E4A  72                 	db	114	;'r'
   817  007E4B  20                 	db	32
   818  007E4C  48                 	db	72	;'H'
   819  007E4D  6F                 	db	111	;'o'
   820  007E4E  72                 	db	114	;'r'
   821  007E4F  61                 	db	97	;'a'
   822  007E50  72                 	db	114	;'r'
   823  007E51  69                 	db	105	;'i'
   824  007E52  6F                 	db	111	;'o'
   825  007E53  73                 	db	115	;'s'
   826  007E54  20                 	db	32
   827  007E55  70                 	db	112	;'p'
   828  007E56  61                 	db	97	;'a'
   829  007E57  72                 	db	114	;'r'
   830  007E58  61                 	db	97	;'a'
   831  007E59  20                 	db	32
   832  007E5A  72                 	db	114	;'r'
   833  007E5B  65                 	db	101	;'e'
   834  007E5C  67                 	db	103	;'g'
   835  007E5D  61                 	db	97	;'a'
   836  007E5E  72                 	db	114	;'r'
   837  007E5F  20                 	db	32
   838  007E60  0D                 	db	13
   839  007E61  0A                 	db	10
   840  007E62  00                 	db	0
   841  007E63                     STR_21:
   842  007E63  0D                 	db	13
   843  007E64  0A                 	db	10
   844  007E65  20                 	db	32
   845  007E66  35                 	db	53	;'5'
   846  007E67  2E                 	db	46
   847  007E68  20                 	db	32
   848  007E69  4D                 	db	77	;'M'
   849  007E6A  6F                 	db	111	;'o'
   850  007E6B  73                 	db	115	;'s'
   851  007E6C  74                 	db	116	;'t'
   852  007E6D  72                 	db	114	;'r'
   853  007E6E  61                 	db	97	;'a'
   854  007E6F  72                 	db	114	;'r'
   855  007E70  20                 	db	32
   856  007E71  76                 	db	118	;'v'
   857  007E72  61                 	db	97	;'a'
   858  007E73  6C                 	db	108	;'l'
   859  007E74  6F                 	db	111	;'o'
   860  007E75  72                 	db	114	;'r'
   861  007E76  65                 	db	101	;'e'
   862  007E77  73                 	db	115	;'s'
   863  007E78  20                 	db	32
   864  007E79  73                 	db	115	;'s'
   865  007E7A  65                 	db	101	;'e'
   866  007E7B  6E                 	db	110	;'n'
   867  007E7C  73                 	db	115	;'s'
   868  007E7D  6F                 	db	111	;'o'
   869  007E7E  72                 	db	114	;'r'
   870  007E7F  65                 	db	101	;'e'
   871  007E80  73                 	db	115	;'s'
   872  007E81  20                 	db	32
   873  007E82  0D                 	db	13
   874  007E83  0A                 	db	10
   875  007E84  00                 	db	0
   876  007E85                     STR_15:
   877  007E85  0D                 	db	13
   878  007E86  0A                 	db	10
   879  007E87  53                 	db	83	;'S'
   880  007E88  65                 	db	101	;'e'
   881  007E89  6E                 	db	110	;'n'
   882  007E8A  73                 	db	115	;'s'
   883  007E8B  6F                 	db	111	;'o'
   884  007E8C  72                 	db	114	;'r'
   885  007E8D  65                 	db	101	;'e'
   886  007E8E  73                 	db	115	;'s'
   887  007E8F  20                 	db	32
   888  007E90  4C                 	db	76	;'L'
   889  007E91  65                 	db	101	;'e'
   890  007E92  69                 	db	105	;'i'
   891  007E93  64                 	db	100	;'d'
   892  007E94  6F                 	db	111	;'o'
   893  007E95  73                 	db	115	;'s'
   894  007E96  20                 	db	32
   895  007E97  63                 	db	99	;'c'
   896  007E98  6F                 	db	111	;'o'
   897  007E99  6E                 	db	110	;'n'
   898  007E9A  20                 	db	32
   899  007E9B  45                 	db	69	;'E'
   900  007E9C  78                 	db	120	;'x'
   901  007E9D  69                 	db	105	;'i'
   902  007E9E  74                 	db	116	;'t'
   903  007E9F  6F                 	db	111	;'o'
   904  007EA0  21                 	db	33
   905  007EA1  0D                 	db	13
   906  007EA2  0A                 	db	10
   907  007EA3  0A                 	db	10
   908  007EA4  00                 	db	0
   909  007EA5                     STR_20:
   910  007EA5  0D                 	db	13
   911  007EA6  0A                 	db	10
   912  007EA7  20                 	db	32
   913  007EA8  34                 	db	52	;'4'
   914  007EA9  2E                 	db	46
   915  007EAA  20                 	db	32
   916  007EAB  44                 	db	68	;'D'
   917  007EAC  61                 	db	97	;'a'
   918  007EAD  6D                 	db	109	;'m'
   919  007EAE  65                 	db	101	;'e'
   920  007EAF  20                 	db	32
   921  007EB0  64                 	db	100	;'d'
   922  007EB1  61                 	db	97	;'a'
   923  007EB2  74                 	db	116	;'t'
   924  007EB3  6F                 	db	111	;'o'
   925  007EB4  73                 	db	115	;'s'
   926  007EB5  20                 	db	32
   927  007EB6  64                 	db	100	;'d'
   928  007EB7  65                 	db	101	;'e'
   929  007EB8  6C                 	db	108	;'l'
   930  007EB9  20                 	db	32
   931  007EBA  73                 	db	115	;'s'
   932  007EBB  69                 	db	105	;'i'
   933  007EBC  73                 	db	115	;'s'
   934  007EBD  74                 	db	116	;'t'
   935  007EBE  65                 	db	101	;'e'
   936  007EBF  6D                 	db	109	;'m'
   937  007EC0  61                 	db	97	;'a'
   938  007EC1  20                 	db	32
   939  007EC2  0D                 	db	13
   940  007EC3  0A                 	db	10
   941  007EC4  00                 	db	0
   942  007EC5                     STR_29:
   943  007EC5  0D                 	db	13
   944  007EC6  0A                 	db	10
   945  007EC7  0A                 	db	10
   946  007EC8  4C                 	db	76	;'L'
   947  007EC9  61                 	db	97	;'a'
   948  007ECA  20                 	db	32
   949  007ECB  48                 	db	72	;'H'
   950  007ECC  75                 	db	117	;'u'
   951  007ECD  6D                 	db	109	;'m'
   952  007ECE  65                 	db	101	;'e'
   953  007ECF  64                 	db	100	;'d'
   954  007ED0  61                 	db	97	;'a'
   955  007ED1  64                 	db	100	;'d'
   956  007ED2  20                 	db	32
   957  007ED3  41                 	db	65	;'A'
   958  007ED4  6D                 	db	109	;'m'
   959  007ED5  62                 	db	98	;'b'
   960  007ED6  69                 	db	105	;'i'
   961  007ED7  65                 	db	101	;'e'
   962  007ED8  6E                 	db	110	;'n'
   963  007ED9  74                 	db	116	;'t'
   964  007EDA  65                 	db	101	;'e'
   965  007EDB  20                 	db	32
   966  007EDC  65                 	db	101	;'e'
   967  007EDD  73                 	db	115	;'s'
   968  007EDE  3A                 	db	58	;':'
   969  007EDF  20                 	db	32
   970  007EE0  25                 	db	37
   971  007EE1  64                 	db	100	;'d'
   972  007EE2  0D                 	db	13
   973  007EE3  0A                 	db	10
   974  007EE4  00                 	db	0
   975  007EE5                     STR_3:
   976  007EE5  0D                 	db	13
   977  007EE6  0A                 	db	10
   978  007EE7  20                 	db	32
   979  007EE8  45                 	db	69	;'E'
   980  007EE9  6E                 	db	110	;'n'
   981  007EEA  76                 	db	118	;'v'
   982  007EEB  69                 	db	105	;'i'
   983  007EEC  65                 	db	101	;'e'
   984  007EED  20                 	db	32
   985  007EEE  6C                 	db	108	;'l'
   986  007EEF  6F                 	db	111	;'o'
   987  007EF0  73                 	db	115	;'s'
   988  007EF1  20                 	db	32
   989  007EF2  4D                 	db	77	;'M'
   990  007EF3  69                 	db	105	;'i'
   991  007EF4  6E                 	db	110	;'n'
   992  007EF5  75                 	db	117	;'u'
   993  007EF6  74                 	db	116	;'t'
   994  007EF7  6F                 	db	111	;'o'
   995  007EF8  73                 	db	115	;'s'
   996  007EF9  20                 	db	32
   997  007EFA  45                 	db	69	;'E'
   998  007EFB  6A                 	db	106	;'j'
   999  007EFC  3A                 	db	58	;':'
  1000  007EFD  20                 	db	32
  1001  007EFE  32                 	db	50	;'2'
  1002  007EFF  35                 	db	53	;'5'
  1003  007F00  20                 	db	32
  1004  007F01  0D                 	db	13
  1005  007F02  0A                 	db	10
  1006  007F03  00                 	db	0
  1007  007F04                     STR_30:
  1008  007F04  0D                 	db	13
  1009  007F05  0A                 	db	10
  1010  007F06  0A                 	db	10
  1011  007F07  4C                 	db	76	;'L'
  1012  007F08  61                 	db	97	;'a'
  1013  007F09  20                 	db	32
  1014  007F0A  54                 	db	84	;'T'
  1015  007F0B  65                 	db	101	;'e'
  1016  007F0C  6D                 	db	109	;'m'
  1017  007F0D  70                 	db	112	;'p'
  1018  007F0E  65                 	db	101	;'e'
  1019  007F0F  72                 	db	114	;'r'
  1020  007F10  61                 	db	97	;'a'
  1021  007F11  74                 	db	116	;'t'
  1022  007F12  75                 	db	117	;'u'
  1023  007F13  72                 	db	114	;'r'
  1024  007F14  61                 	db	97	;'a'
  1025  007F15  20                 	db	32
  1026  007F16  65                 	db	101	;'e'
  1027  007F17  73                 	db	115	;'s'
  1028  007F18  3A                 	db	58	;':'
  1029  007F19  20                 	db	32
  1030  007F1A  25                 	db	37
  1031  007F1B  64                 	db	100	;'d'
  1032  007F1C  20                 	db	32
  1033  007F1D  43                 	db	67	;'C'
  1034  007F1E  0D                 	db	13
  1035  007F1F  0A                 	db	10
  1036  007F20  00                 	db	0
  1037  007F21                     STR_14:
  1038  007F21  0D                 	db	13
  1039  007F22  0A                 	db	10
  1040  007F23  44                 	db	68	;'D'
  1041  007F24  61                 	db	97	;'a'
  1042  007F25  6D                 	db	109	;'m'
  1043  007F26  65                 	db	101	;'e'
  1044  007F27  20                 	db	32
  1045  007F28  44                 	db	68	;'D'
  1046  007F29  41                 	db	65	;'A'
  1047  007F2A  54                 	db	84	;'T'
  1048  007F2B  4F                 	db	79	;'O'
  1049  007F2C  53                 	db	83	;'S'
  1050  007F2D  20                 	db	32
  1051  007F2E  44                 	db	68	;'D'
  1052  007F2F  45                 	db	69	;'E'
  1053  007F30  4C                 	db	76	;'L'
  1054  007F31  20                 	db	32
  1055  007F32  53                 	db	83	;'S'
  1056  007F33  45                 	db	69	;'E'
  1057  007F34  4E                 	db	78	;'N'
  1058  007F35  53                 	db	83	;'S'
  1059  007F36  4F                 	db	79	;'O'
  1060  007F37  52                 	db	82	;'R'
  1061  007F38  20                 	db	32
  1062  007F39  3A                 	db	58	;':'
  1063  007F3A  0D                 	db	13
  1064  007F3B  0A                 	db	10
  1065  007F3C  00                 	db	0
  1066  007F3D                     STR_17:
  1067  007F3D  0D                 	db	13
  1068  007F3E  0A                 	db	10
  1069  007F3F  20                 	db	32
  1070  007F40  31                 	db	49	;'1'
  1071  007F41  2E                 	db	46
  1072  007F42  20                 	db	32
  1073  007F43  46                 	db	70	;'F'
  1074  007F44  69                 	db	105	;'i'
  1075  007F45  6A                 	db	106	;'j'
  1076  007F46  61                 	db	97	;'a'
  1077  007F47  72                 	db	114	;'r'
  1078  007F48  20                 	db	32
  1079  007F49  48                 	db	72	;'H'
  1080  007F4A  6F                 	db	111	;'o'
  1081  007F4B  72                 	db	114	;'r'
  1082  007F4C  61                 	db	97	;'a'
  1083  007F4D  20                 	db	32
  1084  007F4E  41                 	db	65	;'A'
  1085  007F4F  63                 	db	99	;'c'
  1086  007F50  74                 	db	116	;'t'
  1087  007F51  75                 	db	117	;'u'
  1088  007F52  61                 	db	97	;'a'
  1089  007F53  6C                 	db	108	;'l'
  1090  007F54  20                 	db	32
  1091  007F55  0D                 	db	13
  1092  007F56  0A                 	db	10
  1093  007F57  00                 	db	0
  1094  007F58                     STR_8:
  1095  007F58  0D                 	db	13
  1096  007F59  0A                 	db	10
  1097  007F5A  20                 	db	32
  1098  007F5B  48                 	db	72	;'H'
  1099  007F5C  6F                 	db	111	;'o'
  1100  007F5D  72                 	db	114	;'r'
  1101  007F5E  61                 	db	97	;'a'
  1102  007F5F  72                 	db	114	;'r'
  1103  007F60  69                 	db	105	;'i'
  1104  007F61  6F                 	db	111	;'o'
  1105  007F62  20                 	db	32
  1106  007F63  4D                 	db	77	;'M'
  1107  007F64  6F                 	db	111	;'o'
  1108  007F65  64                 	db	100	;'d'
  1109  007F66  69                 	db	105	;'i'
  1110  007F67  66                 	db	102	;'f'
  1111  007F68  69                 	db	105	;'i'
  1112  007F69  63                 	db	99	;'c'
  1113  007F6A  61                 	db	97	;'a'
  1114  007F6B  64                 	db	100	;'d'
  1115  007F6C  6F                 	db	111	;'o'
  1116  007F6D  21                 	db	33
  1117  007F6E  20                 	db	32
  1118  007F6F  0D                 	db	13
  1119  007F70  0A                 	db	10
  1120  007F71  00                 	db	0
  1121  007F72                     STR_5:
  1122  007F72  0D                 	db	13
  1123  007F73  0A                 	db	10
  1124  007F74  20                 	db	32
  1125  007F75  4F                 	db	79	;'O'
  1126  007F76  50                 	db	80	;'P'
  1127  007F77  43                 	db	67	;'C'
  1128  007F78  49                 	db	73	;'I'
  1129  007F79  4F                 	db	79	;'O'
  1130  007F7A  4E                 	db	78	;'N'
  1131  007F7B  45                 	db	69	;'E'
  1132  007F7C  53                 	db	83	;'S'
  1133  007F7D  20                 	db	32
  1134  007F7E  44                 	db	68	;'D'
  1135  007F7F  45                 	db	69	;'E'
  1136  007F80  20                 	db	32
  1137  007F81  52                 	db	82	;'R'
  1138  007F82  45                 	db	69	;'E'
  1139  007F83  47                 	db	71	;'G'
  1140  007F84  41                 	db	65	;'A'
  1141  007F85  44                 	db	68	;'D'
  1142  007F86  4F                 	db	79	;'O'
  1143  007F87  20                 	db	32
  1144  007F88  0D                 	db	13
  1145  007F89  0A                 	db	10
  1146  007F8A  00                 	db	0
  1147  007F8B                     STR_27:
  1148  007F8B  45                 	db	69	;'E'
  1149  007F8C  72                 	db	114	;'r'
  1150  007F8D  72                 	db	114	;'r'
  1151  007F8E  6F                 	db	111	;'o'
  1152  007F8F  72                 	db	114	;'r'
  1153  007F90  20                 	db	32
  1154  007F91  64                 	db	100	;'d'
  1155  007F92  65                 	db	101	;'e'
  1156  007F93  20                 	db	32
  1157  007F94  6C                 	db	108	;'l'
  1158  007F95  65                 	db	101	;'e'
  1159  007F96  63                 	db	99	;'c'
  1160  007F97  74                 	db	116	;'t'
  1161  007F98  75                 	db	117	;'u'
  1162  007F99  72                 	db	114	;'r'
  1163  007F9A  61                 	db	97	;'a'
  1164  007F9B  20                 	db	32
  1165  007F9C  44                 	db	68	;'D'
  1166  007F9D  48                 	db	72	;'H'
  1167  007F9E  54                 	db	84	;'T'
  1168  007F9F  31                 	db	49	;'1'
  1169  007FA0  31                 	db	49	;'1'
  1170  007FA1  0D                 	db	13
  1171  007FA2  0A                 	db	10
  1172  007FA3  00                 	db	0
  1173  007FA4                     STR_9:
  1174  007FA4  0D                 	db	13
  1175  007FA5  0A                 	db	10
  1176  007FA6  20                 	db	32
  1177  007FA7  54                 	db	84	;'T'
  1178  007FA8  49                 	db	73	;'I'
  1179  007FA9  45                 	db	69	;'E'
  1180  007FAA  4D                 	db	77	;'M'
  1181  007FAB  50                 	db	80	;'P'
  1182  007FAC  4F                 	db	79	;'O'
  1183  007FAD  20                 	db	32
  1184  007FAE  44                 	db	68	;'D'
  1185  007FAF  45                 	db	69	;'E'
  1186  007FB0  20                 	db	32
  1187  007FB1  52                 	db	82	;'R'
  1188  007FB2  45                 	db	69	;'E'
  1189  007FB3  47                 	db	71	;'G'
  1190  007FB4  41                 	db	65	;'A'
  1191  007FB5  44                 	db	68	;'D'
  1192  007FB6  4F                 	db	79	;'O'
  1193  007FB7  20                 	db	32
  1194  007FB8  0D                 	db	13
  1195  007FB9  0A                 	db	10
  1196  007FBA  00                 	db	0
  1197  007FBB                     STR_28:
  1198  007FBB  44                 	db	68	;'D'
  1199  007FBC  48                 	db	72	;'H'
  1200  007FBD  54                 	db	84	;'T'
  1201  007FBE  31                 	db	49	;'1'
  1202  007FBF  31                 	db	49	;'1'
  1203  007FC0  20                 	db	32
  1204  007FC1  4E                 	db	78	;'N'
  1205  007FC2  4F                 	db	79	;'O'
  1206  007FC3  20                 	db	32
  1207  007FC4  52                 	db	82	;'R'
  1208  007FC5  45                 	db	69	;'E'
  1209  007FC6  53                 	db	83	;'S'
  1210  007FC7  50                 	db	80	;'P'
  1211  007FC8  4F                 	db	79	;'O'
  1212  007FC9  4E                 	db	78	;'N'
  1213  007FCA  44                 	db	68	;'D'
  1214  007FCB  49                 	db	73	;'I'
  1215  007FCC  4F                 	db	79	;'O'
  1216  007FCD  0D                 	db	13
  1217  007FCE  0A                 	db	10
  1218  007FCF  00                 	db	0
  1219  007FD0                     STR_1:
  1220  007FD0  0D                 	db	13
  1221  007FD1  0A                 	db	10
  1222  007FD2  20                 	db	32
  1223  007FD3  46                 	db	70	;'F'
  1224  007FD4  49                 	db	73	;'I'
  1225  007FD5  4A                 	db	74	;'J'
  1226  007FD6  41                 	db	65	;'A'
  1227  007FD7  20                 	db	32
  1228  007FD8  48                 	db	72	;'H'
  1229  007FD9  4F                 	db	79	;'O'
  1230  007FDA  52                 	db	82	;'R'
  1231  007FDB  41                 	db	65	;'A'
  1232  007FDC  20                 	db	32
  1233  007FDD  0D                 	db	13
  1234  007FDE  0A                 	db	10
  1235  007FDF  00                 	db	0
  1236  007FE0                     STR_26:
  1237  007FE0  25                 	db	37
  1238  007FE1  64                 	db	100	;'d'
  1239  007FE2  20                 	db	32
  1240  007FE3  7C                 	db	124
  1241  007FE4  20                 	db	32
  1242  007FE5  25                 	db	37
  1243  007FE6  64                 	db	100	;'d'
  1244  007FE7  20                 	db	32
  1245  007FE8  7C                 	db	124
  1246  007FE9  20                 	db	32
  1247  007FEA  25                 	db	37
  1248  007FEB  64                 	db	100	;'d'
  1249  007FEC  20                 	db	32
  1250  007FED  0D                 	db	13
  1251  007FEE  0A                 	db	10
  1252  007FEF  00                 	db	0
  1253  007FF0                     STR_22:
  1254  007FF0  0D                 	db	13
  1255  007FF1  0A                 	db	10
  1256  007FF2  20                 	db	32
  1257  007FF3  4F                 	db	79	;'O'
  1258  007FF4  70                 	db	112	;'p'
  1259  007FF5  63                 	db	99	;'c'
  1260  007FF6  69                 	db	105	;'i'
  1261  007FF7  6F                 	db	111	;'o'
  1262  007FF8  6E                 	db	110	;'n'
  1263  007FF9  3A                 	db	58	;':'
  1264  007FFA  20                 	db	32
  1265  007FFB  20                 	db	32
  1266  007FFC  0D                 	db	13
  1267  007FFD  00                 	db	0
  1268  0000                     
  1269                           ; #config settings
  1270  007FFE  00                 	db	0	; dummy byte at the end
  1271  0000                     
  1272                           	psect	cinit
  1273  001F60                     __pcinit:
  1274                           	opt callstack 0
  1275  001F60                     start_initialization:
  1276                           	opt callstack 0
  1277  001F60                     __initialization:
  1278                           	opt callstack 0
  1279                           
  1280                           ; Initialize objects allocated to BANK0 (4 bytes)
  1281                           ; load TBLPTR registers with __pidataBANK0
  1282  001F60  0E00               	movlw	low __pidataBANK0
  1283  001F62  6EF6               	movwf	tblptrl,c
  1284  001F64  0E23               	movlw	high __pidataBANK0
  1285  001F66  6EF7               	movwf	tblptrh,c
  1286  001F68  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1287  001F6A  6EF8               	movwf	tblptru,c
  1288  001F6C  EE00  F0FA         	lfsr	0,__pdataBANK0
  1289  001F70  EE10 F004          	lfsr	1,4
  1290  001F74                     copy_data0:
  1291  001F74  0009               	tblrd		*+
  1292  001F76  CFF5 FFEE          	movff	tablat,postinc0
  1293  001F7A  50E5               	movf	postdec1,w,c
  1294  001F7C  50E1               	movf	fsr1l,w,c
  1295  001F7E  E1FA               	bnz	copy_data0
  1296                           
  1297                           ; Clear objects allocated to BANK1 (72 bytes)
  1298  001F80  EE01  F000         	lfsr	0,__pbssBANK1
  1299  001F84  0E48               	movlw	72
  1300  001F86                     clear_0:
  1301  001F86  6AEE               	clrf	postinc0,c
  1302  001F88  06E8               	decf	wreg,f,c
  1303  001F8A  E1FD               	bnz	clear_0
  1304                           
  1305                           ; Clear objects allocated to BANK0 (78 bytes)
  1306  001F8C  EE00  F060         	lfsr	0,__pbssBANK0
  1307  001F90  0E4E               	movlw	78
  1308  001F92                     clear_1:
  1309  001F92  6AEE               	clrf	postinc0,c
  1310  001F94  06E8               	decf	wreg,f,c
  1311  001F96  E1FD               	bnz	clear_1
  1312                           
  1313                           ; Clear objects allocated to COMRAM (1 bytes)
  1314  001F98  6A5E               	clrf	__pbssCOMRAM& (0+255),c
  1315  001F9A                     end_of_initialization:
  1316                           	opt callstack 0
  1317  001F9A                     __end_of__initialization:
  1318                           	opt callstack 0
  1319  001F9A  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1320  001F9C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1321  001F9E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1322  001FA0  6EF8               	movwf	tblptru,c
  1323  001FA2  0100               	movlb	0
  1324  001FA4  EF97  F00C         	goto	_main	;jump to C main() function
  1325                           
  1326                           	psect	bssCOMRAM
  1327  00005E                     __pbssCOMRAM:
  1328                           	opt callstack 0
  1329  00005E                     _esperandoDatos:
  1330                           	opt callstack 0
  1331  00005E                     	ds	1
  1332                           
  1333                           	psect	bssBANK0
  1334  000060                     __pbssBANK0:
  1335                           	opt callstack 0
  1336  000060                     _sensores:
  1337                           	opt callstack 0
  1338  000060                     	ds	24
  1339  000078                     _nout:
  1340                           	opt callstack 0
  1341  000078                     	ds	2
  1342  00007A                     _width:
  1343                           	opt callstack 0
  1344  00007A                     	ds	2
  1345  00007C                     _prec:
  1346                           	opt callstack 0
  1347  00007C                     	ds	2
  1348  00007E                     _flags:
  1349                           	opt callstack 0
  1350  00007E                     	ds	2
  1351  000080                     _contInterrupciones:
  1352                           	opt callstack 0
  1353  000080                     	ds	2
  1354  000082                     _peticionLecturaSensores:
  1355                           	opt callstack 0
  1356  000082                     	ds	1
  1357  000083                     _regando:
  1358                           	opt callstack 0
  1359  000083                     	ds	1
  1360  000084                     _minutosTranscurridos:
  1361                           	opt callstack 0
  1362  000084                     	ds	1
  1363  000085                     _minutosRegar:
  1364                           	opt callstack 0
  1365  000085                     	ds	1
  1366  000086                     _overflowTimer:
  1367                           	opt callstack 0
  1368  000086                     	ds	1
  1369  000087                     _datoRecibido:
  1370                           	opt callstack 0
  1371  000087                     	ds	1
  1372  000088                     _segundos:
  1373                           	opt callstack 0
  1374  000088                     	ds	1
  1375  000089                     _minutos:
  1376                           	opt callstack 0
  1377  000089                     	ds	1
  1378  00008A                     _hora:
  1379                           	opt callstack 0
  1380  00008A                     	ds	1
  1381  00008B                     _esperaDatoConcluida:
  1382                           	opt callstack 0
  1383  00008B                     	ds	1
  1384  00008C                     _byteUart:
  1385                           	opt callstack 0
  1386  00008C                     	ds	1
  1387  00008D                     _tiempoInactividadTrans:
  1388                           	opt callstack 0
  1389  00008D                     	ds	1
  1390  00008E                     _dbuf:
  1391                           	opt callstack 0
  1392  00008E                     	ds	32
  1393                           
  1394                           	psect	dataBANK0
  1395  0000FA                     __pdataBANK0:
  1396                           	opt callstack 0
  1397  0000FA                     _VALOR_TIMER0:
  1398                           	opt callstack 0
  1399  0000FA                     	ds	2
  1400  0000FC                     _VALOR_TIMER0UART:
  1401                           	opt callstack 0
  1402  0000FC                     	ds	2
  1403                           
  1404                           	psect	bssBANK1
  1405  000100                     __pbssBANK1:
  1406                           	opt callstack 0
  1407  000100                     _horarios:
  1408                           	opt callstack 0
  1409  000100                     	ds	72
  1410                           
  1411                           	psect	cstackBANK0
  1412  0000AE                     __pcstackBANK0:
  1413                           	opt callstack 0
  1414  0000AE                     ?_sprintf:
  1415                           	opt callstack 0
  1416  0000AE                     sprintf@s:
  1417                           	opt callstack 0
  1418                           
  1419                           ; 2 bytes @ 0x0
  1420  0000AE                     	ds	2
  1421  0000B0                     sprintf@fmt:
  1422                           	opt callstack 0
  1423                           
  1424                           ; 2 bytes @ 0x2
  1425  0000B0                     	ds	10
  1426  0000BA                     sprintf@ap:
  1427                           	opt callstack 0
  1428                           
  1429                           ; 2 bytes @ 0xC
  1430  0000BA                     	ds	2
  1431  0000BC                     sprintf@f:
  1432                           	opt callstack 0
  1433                           
  1434                           ; 6 bytes @ 0xE
  1435  0000BC                     	ds	6
  1436  0000C2                     dameDatosSistema@buffer:
  1437                           	opt callstack 0
  1438  0000C2                     mostrarDatosSensores@buffer:
  1439                           	opt callstack 0
  1440  0000C2                     mostrarDatosSensoresWIFI@buffer:
  1441                           	opt callstack 0
  1442                           
  1443                           ; 50 bytes @ 0x14
  1444  0000C2                     	ds	50
  1445  0000F4                     mostrarDatosSensores@temperatura:
  1446                           	opt callstack 0
  1447  0000F4                     mostrarDatosSensoresWIFI@temperatura:
  1448                           	opt callstack 0
  1449  0000F4                     dameDatosSistema@i:
  1450                           	opt callstack 0
  1451                           
  1452                           ; 2 bytes @ 0x46
  1453  0000F4                     	ds	1
  1454  0000F5                     mostrarDatosSensores@humedad:
  1455                           	opt callstack 0
  1456  0000F5                     mostrarDatosSensoresWIFI@humedad:
  1457                           	opt callstack 0
  1458                           
  1459                           ; 1 bytes @ 0x47
  1460  0000F5                     	ds	1
  1461  0000F6                     mostrarDatosSensores@i:
  1462                           	opt callstack 0
  1463  0000F6                     mostrarDatosSensoresWIFI@i:
  1464                           	opt callstack 0
  1465                           
  1466                           ; 2 bytes @ 0x48
  1467  0000F6                     	ds	2
  1468  0000F8                     mostrarDatosSensores@porcentajeHumedad:
  1469                           	opt callstack 0
  1470                           
  1471                           ; 2 bytes @ 0x4A
  1472  0000F8                     	ds	2
  1473                           
  1474                           	psect	cstackCOMRAM
  1475  000001                     __pcstackCOMRAM:
  1476                           	opt callstack 0
  1477  000001                     ??_i2c_espera:
  1478  000001                     ??_convertirDato:
  1479  000001                     ??_DHT11_Start:
  1480  000001                     ?_strlen:
  1481                           	opt callstack 0
  1482  000001                     ?_horaRegar:
  1483                           	opt callstack 0
  1484  000001                     ?_dameHumedadSuelo:
  1485                           	opt callstack 0
  1486  000001                     ?___wmul:
  1487                           	opt callstack 0
  1488  000001                     ?___awdiv:
  1489                           	opt callstack 0
  1490  000001                     ?___aldiv:
  1491                           	opt callstack 0
  1492  000001                     ?___aodiv:
  1493                           	opt callstack 0
  1494  000001                     ?___aomod:
  1495                           	opt callstack 0
  1496  000001                     UART_write@dato:
  1497                           	opt callstack 0
  1498  000001                     DHT11_ReadData@i:
  1499                           	opt callstack 0
  1500  000001                     check_response@respuesta:
  1501                           	opt callstack 0
  1502  000001                     ___wmul@multiplier:
  1503                           	opt callstack 0
  1504  000001                     ___awdiv@dividend:
  1505                           	opt callstack 0
  1506  000001                     fputc@c:
  1507                           	opt callstack 0
  1508  000001                     strlen@s:
  1509                           	opt callstack 0
  1510  000001                     ___aldiv@dividend:
  1511                           	opt callstack 0
  1512  000001                     ___aodiv@dividend:
  1513                           	opt callstack 0
  1514  000001                     ___aomod@dividend:
  1515                           	opt callstack 0
  1516                           
  1517                           ; 8 bytes @ 0x0
  1518  000001                     	ds	1
  1519  000002                     i2c_envia_dato@dato:
  1520                           	opt callstack 0
  1521  000002                     i2c_recibe_dato@datoleido:
  1522                           	opt callstack 0
  1523  000002                     convertirDato@dato:
  1524                           	opt callstack 0
  1525  000002                     DHT11_ReadData@data:
  1526                           	opt callstack 0
  1527  000002                     UART_printf@cadena:
  1528                           	opt callstack 0
  1529                           
  1530                           ; 2 bytes @ 0x1
  1531  000002                     	ds	1
  1532  000003                     ??_dameHumedadSuelo:
  1533  000003                     escribe_rtc@dato:
  1534                           	opt callstack 0
  1535  000003                     leer_rtc@direccion:
  1536                           	opt callstack 0
  1537  000003                     convertirDato@datoR:
  1538                           	opt callstack 0
  1539  000003                     leer_eeprom@direccion:
  1540                           	opt callstack 0
  1541  000003                     ___wmul@multiplicand:
  1542                           	opt callstack 0
  1543  000003                     ___awdiv@divisor:
  1544                           	opt callstack 0
  1545  000003                     fputc@fp:
  1546                           	opt callstack 0
  1547  000003                     strlen@a:
  1548                           	opt callstack 0
  1549                           
  1550                           ; 2 bytes @ 0x2
  1551  000003                     	ds	1
  1552  000004                     escribe_rtc@direccion:
  1553                           	opt callstack 0
  1554  000004                     leer_rtc@dato:
  1555                           	opt callstack 0
  1556  000004                     dameTemperaturaHumedad@Humedad:
  1557                           	opt callstack 0
  1558                           
  1559                           ; 2 bytes @ 0x3
  1560  000004                     	ds	1
  1561  000005                     ??_fputc:
  1562  000005                     ??_setRtc:
  1563  000005                     ??_leer_eeprom:
  1564  000005                     dameHumedadSuelo@canalLeer:
  1565                           	opt callstack 0
  1566  000005                     ___awdiv@counter:
  1567                           	opt callstack 0
  1568  000005                     ___wmul@product:
  1569                           	opt callstack 0
  1570  000005                     ___aldiv@divisor:
  1571                           	opt callstack 0
  1572                           
  1573                           ; 4 bytes @ 0x4
  1574  000005                     	ds	1
  1575  000006                     setRtc@direccion:
  1576                           	opt callstack 0
  1577  000006                     leer_eeprom@dato:
  1578                           	opt callstack 0
  1579  000006                     ___awdiv@sign:
  1580                           	opt callstack 0
  1581  000006                     dameTemperaturaHumedad@Temperatura:
  1582                           	opt callstack 0
  1583                           
  1584                           ; 2 bytes @ 0x5
  1585  000006                     	ds	1
  1586  000007                     ??_lecturaAnalogaSensores:
  1587  000007                     setRtc@dato:
  1588                           	opt callstack 0
  1589  000007                     inicializarObjetos@i:
  1590                           	opt callstack 0
  1591  000007                     escribe_eeprom@direccion:
  1592                           	opt callstack 0
  1593  000007                     leeHorariosMemoria@contMemoria:
  1594                           	opt callstack 0
  1595  000007                     ___awdiv@quotient:
  1596                           	opt callstack 0
  1597  000007                     constructorSensor@s:
  1598                           	opt callstack 0
  1599                           
  1600                           ; 3 bytes @ 0x6
  1601  000007                     	ds	1
  1602  000008                     ??_dameTemperaturaHumedad:
  1603  000008                     setRtc@datoCapturado:
  1604                           	opt callstack 0
  1605  000008                     lecturaAnalogaSensores@i:
  1606                           	opt callstack 0
  1607                           
  1608                           ; 2 bytes @ 0x7
  1609  000008                     	ds	1
  1610  000009                     escribe_eeprom@dato:
  1611                           	opt callstack 0
  1612  000009                     ___aldiv@counter:
  1613                           	opt callstack 0
  1614  000009                     setRtc@i:
  1615                           	opt callstack 0
  1616  000009                     leeHorariosMemoria@i:
  1617                           	opt callstack 0
  1618  000009                     ___aodiv@divisor:
  1619                           	opt callstack 0
  1620  000009                     ___aomod@divisor:
  1621                           	opt callstack 0
  1622                           
  1623                           ; 8 bytes @ 0x8
  1624  000009                     	ds	1
  1625  00000A                     ??_escribe_eeprom:
  1626  00000A                     constructorSensor@humedad:
  1627                           	opt callstack 0
  1628  00000A                     ___aldiv@sign:
  1629                           	opt callstack 0
  1630  00000A                     dameTemperaturaHumedad@checkSum:
  1631                           	opt callstack 0
  1632  00000A                     fputs@s:
  1633                           	opt callstack 0
  1634                           
  1635                           ; 2 bytes @ 0x9
  1636  00000A                     	ds	1
  1637  00000B                     constructorSensor@pin:
  1638                           	opt callstack 0
  1639  00000B                     setRtc@Rx:
  1640                           	opt callstack 0
  1641  00000B                     escribeHorariosMemoria@contMemoria:
  1642                           	opt callstack 0
  1643  00000B                     ___aldiv@quotient:
  1644                           	opt callstack 0
  1645                           
  1646                           ; 4 bytes @ 0xA
  1647  00000B                     	ds	1
  1648  00000C                     dameTemperaturaHumedad@humedadDecimal:
  1649                           	opt callstack 0
  1650  00000C                     restablecerDatosSensor@i:
  1651                           	opt callstack 0
  1652  00000C                     fputs@fp:
  1653                           	opt callstack 0
  1654                           
  1655                           ; 2 bytes @ 0xB
  1656  00000C                     	ds	1
  1657  00000D                     dameTemperaturaHumedad@temperaturaDecimal:
  1658                           	opt callstack 0
  1659  00000D                     escribeHorariosMemoria@i:
  1660                           	opt callstack 0
  1661                           
  1662                           ; 2 bytes @ 0xC
  1663  00000D                     	ds	1
  1664  00000E                     lecturaWifi@Rx:
  1665                           	opt callstack 0
  1666  00000E                     dameTemperaturaHumedad@humedad:
  1667                           	opt callstack 0
  1668  00000E                     fputs@c:
  1669                           	opt callstack 0
  1670                           
  1671                           ; 1 bytes @ 0xD
  1672  00000E                     	ds	1
  1673  00000F                     asignarHorarios@hora:
  1674                           	opt callstack 0
  1675  00000F                     setTiempoRegar@tiempoRegar:
  1676                           	opt callstack 0
  1677  00000F                     dameTemperaturaHumedad@temperatura:
  1678                           	opt callstack 0
  1679  00000F                     lecturaWifi@i:
  1680                           	opt callstack 0
  1681  00000F                     fputs@i:
  1682                           	opt callstack 0
  1683  00000F                     UART_init@BAUD:
  1684                           	opt callstack 0
  1685                           
  1686                           ; 4 bytes @ 0xE
  1687  00000F                     	ds	1
  1688  000010                     ?_estaSeco:
  1689                           	opt callstack 0
  1690  000010                     asignarHorarios@datoCapturado:
  1691                           	opt callstack 0
  1692  000010                     setTiempoRegar@hora:
  1693                           	opt callstack 0
  1694  000010                     estaSeco@s:
  1695                           	opt callstack 0
  1696                           
  1697                           ; 3 bytes @ 0xF
  1698  000010                     	ds	1
  1699  000011                     ?_pad:
  1700                           	opt callstack 0
  1701  000011                     ___aodiv@counter:
  1702                           	opt callstack 0
  1703  000011                     ___aomod@counter:
  1704                           	opt callstack 0
  1705  000011                     asignarHorarios@i:
  1706                           	opt callstack 0
  1707  000011                     setTiempoRegar@i:
  1708                           	opt callstack 0
  1709  000011                     pad@fp:
  1710                           	opt callstack 0
  1711                           
  1712                           ; 2 bytes @ 0x10
  1713  000011                     	ds	1
  1714  000012                     ___aodiv@sign:
  1715                           	opt callstack 0
  1716  000012                     ___aomod@sign:
  1717                           	opt callstack 0
  1718                           
  1719                           ; 1 bytes @ 0x11
  1720  000012                     	ds	1
  1721  000013                     ?_abs:
  1722                           	opt callstack 0
  1723  000013                     _estaSeco$770:
  1724                           	opt callstack 0
  1725  000013                     asignarHorarios@Rx:
  1726                           	opt callstack 0
  1727  000013                     setTiempoRegar@i_834:
  1728                           	opt callstack 0
  1729  000013                     pad@buf:
  1730                           	opt callstack 0
  1731  000013                     abs@a:
  1732                           	opt callstack 0
  1733  000013                     ___aodiv@quotient:
  1734                           	opt callstack 0
  1735                           
  1736                           ; 8 bytes @ 0x12
  1737  000013                     	ds	1
  1738  000014                     estaSeco@temperatura:
  1739                           	opt callstack 0
  1740                           
  1741                           ; 1 bytes @ 0x13
  1742  000014                     	ds	1
  1743  000015                     ??_abs:
  1744  000015                     ??_encenderBombas:
  1745  000015                     setTiempoRegar@datoCapturado:
  1746                           	opt callstack 0
  1747  000015                     pad@p:
  1748                           	opt callstack 0
  1749                           
  1750                           ; 2 bytes @ 0x14
  1751  000015                     	ds	1
  1752  000016                     setTiempoRegar@Rx:
  1753                           	opt callstack 0
  1754                           
  1755                           ; 1 bytes @ 0x15
  1756  000016                     	ds	1
  1757  000017                     ??_pad:
  1758  000017                     encenderBombas@flagSeco:
  1759                           	opt callstack 0
  1760  000017                     _UART_init$1778:
  1761                           	opt callstack 0
  1762                           
  1763                           ; 4 bytes @ 0x16
  1764  000017                     	ds	1
  1765  000018                     encenderBombas@i:
  1766                           	opt callstack 0
  1767  000018                     pad@i:
  1768                           	opt callstack 0
  1769                           
  1770                           ; 2 bytes @ 0x17
  1771  000018                     	ds	2
  1772  00001A                     pad@w:
  1773                           	opt callstack 0
  1774                           
  1775                           ; 2 bytes @ 0x19
  1776  00001A                     	ds	2
  1777  00001C                     ?_dtoa:
  1778                           	opt callstack 0
  1779  00001C                     dtoa@fp:
  1780                           	opt callstack 0
  1781                           
  1782                           ; 2 bytes @ 0x1B
  1783  00001C                     	ds	2
  1784  00001E                     dtoa@d:
  1785                           	opt callstack 0
  1786                           
  1787                           ; 8 bytes @ 0x1D
  1788  00001E                     	ds	8
  1789  000026                     ??_dtoa:
  1790                           
  1791                           ; 1 bytes @ 0x25
  1792  000026                     	ds	8
  1793  00002E                     _dtoa$1005:
  1794                           	opt callstack 0
  1795                           
  1796                           ; 2 bytes @ 0x2D
  1797  00002E                     	ds	2
  1798  000030                     dtoa@p:
  1799                           	opt callstack 0
  1800                           
  1801                           ; 2 bytes @ 0x2F
  1802  000030                     	ds	2
  1803  000032                     dtoa@w:
  1804                           	opt callstack 0
  1805                           
  1806                           ; 2 bytes @ 0x31
  1807  000032                     	ds	2
  1808  000034                     dtoa@s:
  1809                           	opt callstack 0
  1810                           
  1811                           ; 2 bytes @ 0x33
  1812  000034                     	ds	2
  1813  000036                     dtoa@n:
  1814                           	opt callstack 0
  1815                           
  1816                           ; 8 bytes @ 0x35
  1817  000036                     	ds	8
  1818  00003E                     dtoa@i:
  1819                           	opt callstack 0
  1820                           
  1821                           ; 2 bytes @ 0x3D
  1822  00003E                     	ds	2
  1823  000040                     ?_vfpfcnvrt:
  1824                           	opt callstack 0
  1825  000040                     vfpfcnvrt@fp:
  1826                           	opt callstack 0
  1827                           
  1828                           ; 2 bytes @ 0x3F
  1829  000040                     	ds	2
  1830  000042                     vfpfcnvrt@fmt:
  1831                           	opt callstack 0
  1832                           
  1833                           ; 2 bytes @ 0x41
  1834  000042                     	ds	2
  1835  000044                     vfpfcnvrt@ap:
  1836                           	opt callstack 0
  1837                           
  1838                           ; 2 bytes @ 0x43
  1839  000044                     	ds	2
  1840  000046                     ??_vfpfcnvrt:
  1841                           
  1842                           ; 1 bytes @ 0x45
  1843  000046                     	ds	2
  1844  000048                     vfpfcnvrt@ll:
  1845                           	opt callstack 0
  1846                           
  1847                           ; 8 bytes @ 0x47
  1848  000048                     	ds	8
  1849  000050                     ?_vfprintf:
  1850                           	opt callstack 0
  1851  000050                     vfprintf@fp:
  1852                           	opt callstack 0
  1853                           
  1854                           ; 2 bytes @ 0x4F
  1855  000050                     	ds	2
  1856  000052                     vfprintf@fmt:
  1857                           	opt callstack 0
  1858                           
  1859                           ; 2 bytes @ 0x51
  1860  000052                     	ds	2
  1861  000054                     vfprintf@ap:
  1862                           	opt callstack 0
  1863                           
  1864                           ; 2 bytes @ 0x53
  1865  000054                     	ds	2
  1866  000056                     vfprintf@cfmt:
  1867                           	opt callstack 0
  1868                           
  1869                           ; 2 bytes @ 0x55
  1870  000056                     	ds	2
  1871  000058                     ??_dameDatosSistema:
  1872  000058                     
  1873                           ; 1 bytes @ 0x57
  1874  000058                     	ds	3
  1875  00005B                     ??_sistemaPrincipal:
  1876                           
  1877                           ; 1 bytes @ 0x5A
  1878  00005B                     	ds	2
  1879  00005D                     sistemaPrincipal@opcion:
  1880                           	opt callstack 0
  1881                           
  1882                           ; 1 bytes @ 0x5C
  1883  00005D                     	ds	1
  1884  00005E                     
  1885                           ; 1 bytes @ 0x5D
  1886 ;;
  1887 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1888 ;;
  1889 ;; *************** function _main *****************
  1890 ;; Defined at:
  1891 ;;		line 773 in file "main.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;		None
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;  temperatura     1    0        unsigned char 
  1896 ;;  humedad         1    0        unsigned char 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1906 ;;      Params:         0       0       0       0       0       0       0       0       0
  1907 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1908 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1909 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1910 ;;Total ram usage:        0 bytes
  1911 ;; Hardware stack levels required when called:   11
  1912 ;; This function calls:
  1913 ;;		_UART_init
  1914 ;;		_configurarAdc
  1915 ;;		_i2c_iniciar
  1916 ;;		_inicializarObjetos
  1917 ;;		_leeHorariosMemoria
  1918 ;;		_mostrarMenu
  1919 ;;		_restablecerDatosSensor
  1920 ;;		_sistemaPrincipal
  1921 ;;		_sistemaRegado
  1922 ;; This function is called by:
  1923 ;;		Startup code after reset
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text0
  1928  00192E                     __ptext0:
  1929                           	opt callstack 0
  1930  00192E                     _main:
  1931                           	opt callstack 20
  1932  00192E                     
  1933                           ;main.c: 775:     unsigned char humedad, temperatura;;main.c: 777:     INTCONbits.GIE = 
      +                          1;
  1934  00192E  8EF2               	bsf	242,7,c	;volatile
  1935                           
  1936                           ;main.c: 778:     INTCONbits.PEIE = 1;
  1937  001930  8CF2               	bsf	242,6,c	;volatile
  1938                           
  1939                           ;main.c: 779:     INTCONbits.TMR0IE = 0;
  1940  001932  9AF2               	bcf	242,5,c	;volatile
  1941                           
  1942                           ;main.c: 780:     INTCONbits.TMR0IF = 0;
  1943  001934  94F2               	bcf	242,2,c	;volatile
  1944                           
  1945                           ;main.c: 781:     PIE1bits.RCIE = 1;
  1946  001936  8A9D               	bsf	157,5,c	;volatile
  1947  001938                     
  1948                           ;main.c: 783:     T0CON = 0b00000111;
  1949  001938  0E07               	movlw	7
  1950  00193A  6ED5               	movwf	213,c	;volatile
  1951  00193C                     
  1952                           ;main.c: 785:     INTCONbits.TMR0IE = 1;
  1953  00193C  8AF2               	bsf	242,5,c	;volatile
  1954  00193E                     
  1955                           ;main.c: 790:     restablecerDatosSensor();
  1956  00193E  EC76  F00E         	call	_restablecerDatosSensor	;wreg free
  1957  001942                     
  1958                           ;main.c: 792:     UART_init(9600);
  1959  001942  0E80               	movlw	128
  1960  001944  6E0F               	movwf	UART_init@BAUD^0,c
  1961  001946  0E25               	movlw	37
  1962  001948  6E10               	movwf	(UART_init@BAUD+1)^0,c
  1963  00194A  0E00               	movlw	0
  1964  00194C  6E11               	movwf	(UART_init@BAUD+2)^0,c
  1965  00194E  0E00               	movlw	0
  1966  001950  6E12               	movwf	(UART_init@BAUD+3)^0,c
  1967  001952  EC72  F00D         	call	_UART_init	;wreg free
  1968  001956                     
  1969                           ;main.c: 793:     i2c_iniciar();
  1970  001956  EC58  F011         	call	_i2c_iniciar	;wreg free
  1971  00195A                     
  1972                           ;main.c: 794:     configurarAdc();
  1973  00195A  EC6F  F011         	call	_configurarAdc	;wreg free
  1974  00195E                     
  1975                           ;main.c: 795:     inicializarObjetos();
  1976  00195E  ECE2  F00C         	call	_inicializarObjetos	;wreg free
  1977  001962                     
  1978                           ;main.c: 797:     leeHorariosMemoria();
  1979  001962  EC60  F00A         	call	_leeHorariosMemoria	;wreg free
  1980  001966                     
  1981                           ;main.c: 800:     TRISD = 0;
  1982  001966  0E00               	movlw	0
  1983  001968  6E95               	movwf	149,c	;volatile
  1984  00196A                     
  1985                           ;main.c: 801:     LATD = 0;
  1986  00196A  0E00               	movlw	0
  1987  00196C  6E8C               	movwf	140,c	;volatile
  1988  00196E                     
  1989                           ;main.c: 803:     TMR0 = VALOR_TIMER0;
  1990  00196E  C0FA  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  1991  001972  C0FB  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  1992  001976                     
  1993                           ;main.c: 805:     INTCONbits.TMR0IF = 1;
  1994  001976  84F2               	bsf	242,2,c	;volatile
  1995  001978                     
  1996                           ;main.c: 807:     T0CONbits.TMR0ON = 1;
  1997  001978  8ED5               	bsf	213,7,c	;volatile
  1998  00197A                     
  1999                           ;main.c: 809:     mostrarMenu();
  2000  00197A  EC45  F00E         	call	_mostrarMenu	;wreg free
  2001  00197E                     l3641:
  2002                           
  2003                           ;main.c: 814:         if (datoRecibido) {
  2004  00197E  0100               	movlb	0	; () banked
  2005  001980  5187               	movf	_datoRecibido& (0+255),w,b
  2006  001982  B4D8               	btfsc	status,2,c
  2007  001984  EFC6  F00C         	goto	u2811
  2008  001988  EFC8  F00C         	goto	u2810
  2009  00198C                     u2811:
  2010  00198C  EFCF  F00C         	goto	l3649
  2011  001990                     u2810:
  2012  001990                     
  2013                           ; BSR set to: 0
  2014                           ;main.c: 816:             datoRecibido = 0;
  2015  001990  0E00               	movlw	0
  2016  001992  6F87               	movwf	_datoRecibido& (0+255),b
  2017  001994                     
  2018                           ; BSR set to: 0
  2019                           ;main.c: 817:             byteUart -= 48;
  2020  001994  0E30               	movlw	48
  2021  001996  5F8C               	subwf	_byteUart& (0+255),f,b
  2022  001998                     
  2023                           ; BSR set to: 0
  2024                           ;main.c: 818:             sistemaPrincipal(byteUart);
  2025  001998  518C               	movf	_byteUart& (0+255),w,b
  2026  00199A  EC2D  F00D         	call	_sistemaPrincipal
  2027  00199E                     l3649:
  2028                           
  2029                           ;main.c: 822:         if (overflowTimer) {
  2030  00199E  0100               	movlb	0	; () banked
  2031  0019A0  5186               	movf	_overflowTimer& (0+255),w,b
  2032  0019A2  B4D8               	btfsc	status,2,c
  2033  0019A4  EFD6  F00C         	goto	u2821
  2034  0019A8  EFD8  F00C         	goto	u2820
  2035  0019AC                     u2821:
  2036  0019AC  EFBF  F00C         	goto	l3641
  2037  0019B0                     u2820:
  2038  0019B0                     
  2039                           ; BSR set to: 0
  2040                           ;main.c: 824:             esperandoDatos = 0;
  2041  0019B0  0E00               	movlw	0
  2042  0019B2  6E5E               	movwf	_esperandoDatos^0,c
  2043                           
  2044                           ;main.c: 825:             overflowTimer = 0;
  2045  0019B4  0E00               	movlw	0
  2046  0019B6  6F86               	movwf	_overflowTimer& (0+255),b
  2047  0019B8                     
  2048                           ; BSR set to: 0
  2049                           ;main.c: 826:             sistemaRegado();
  2050  0019B8  EC46  F00C         	call	_sistemaRegado	;wreg free
  2051  0019BC  EFBF  F00C         	goto	l3641
  2052  0019C0  EF07  F000         	goto	start
  2053  0019C4                     __end_of_main:
  2054                           	opt callstack 0
  2055                           
  2056 ;; *************** function _sistemaRegado *****************
  2057 ;; Defined at:
  2058 ;;		line 592 in file "main.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;		None
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;		None
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  1    wreg      void 
  2065 ;; Registers used:
  2066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2072 ;;      Params:         0       0       0       0       0       0       0       0       0
  2073 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2074 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2075 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2076 ;;Total ram usage:        0 bytes
  2077 ;; Hardware stack levels used:    1
  2078 ;; Hardware stack levels required when called:    6
  2079 ;; This function calls:
  2080 ;;		_dameHoraActual
  2081 ;;		_encenderBombas
  2082 ;;		_horaRegar
  2083 ;;		_lecturaAnalogaSensores
  2084 ;;		_lecturaWifi
  2085 ;;		_mostrarMenu
  2086 ;; This function is called by:
  2087 ;;		_main
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text1
  2092  00188C                     __ptext1:
  2093                           	opt callstack 0
  2094  00188C                     _sistemaRegado:
  2095                           	opt callstack 24
  2096  00188C                     
  2097                           ;main.c: 596:     if (regando) {
  2098  00188C  0100               	movlb	0	; () banked
  2099  00188E  5183               	movf	_regando& (0+255),w,b
  2100  001890  B4D8               	btfsc	status,2,c
  2101  001892  EF4D  F00C         	goto	u2721
  2102  001896  EF4F  F00C         	goto	u2720
  2103  00189A                     u2721:
  2104  00189A  EF71  F00C         	goto	l3557
  2105  00189E                     u2720:
  2106  00189E                     
  2107                           ; BSR set to: 0
  2108                           ;main.c: 597:         contInterrupciones++;
  2109  00189E  4B80               	infsnz	_contInterrupciones& (0+255),f,b
  2110  0018A0  2B81               	incf	(_contInterrupciones+1)& (0+255),f,b
  2111  0018A2                     
  2112                           ; BSR set to: 0
  2113                           ;main.c: 599:         if (contInterrupciones == 6) {
  2114  0018A2  0E06               	movlw	6
  2115  0018A4  1980               	xorwf	_contInterrupciones& (0+255),w,b
  2116  0018A6  1181               	iorwf	(_contInterrupciones+1)& (0+255),w,b
  2117  0018A8  A4D8               	btfss	status,2,c
  2118  0018AA  EF59  F00C         	goto	u2731
  2119  0018AE  EF5B  F00C         	goto	u2730
  2120  0018B2                     u2731:
  2121  0018B2  EF96  F00C         	goto	l357
  2122  0018B6                     u2730:
  2123  0018B6                     
  2124                           ; BSR set to: 0
  2125                           ;main.c: 600:             contInterrupciones = 0;
  2126  0018B6  0E00               	movlw	0
  2127  0018B8  6F81               	movwf	(_contInterrupciones+1)& (0+255),b
  2128  0018BA  0E00               	movlw	0
  2129  0018BC  6F80               	movwf	_contInterrupciones& (0+255),b
  2130  0018BE                     
  2131                           ; BSR set to: 0
  2132                           ;main.c: 601:             minutosTranscurridos++;
  2133  0018BE  2B84               	incf	_minutosTranscurridos& (0+255),f,b
  2134  0018C0                     
  2135                           ; BSR set to: 0
  2136                           ;main.c: 604:             if (minutosTranscurridos >= minutosRegar) {
  2137  0018C0  5185               	movf	_minutosRegar& (0+255),w,b
  2138  0018C2  5D84               	subwf	_minutosTranscurridos& (0+255),w,b
  2139  0018C4  A0D8               	btfss	status,0,c
  2140  0018C6  EF67  F00C         	goto	u2741
  2141  0018CA  EF69  F00C         	goto	u2740
  2142  0018CE                     u2741:
  2143  0018CE  EF96  F00C         	goto	l357
  2144  0018D2                     u2740:
  2145  0018D2                     
  2146                           ; BSR set to: 0
  2147                           ;main.c: 606:                 LATD = 0;
  2148  0018D2  0E00               	movlw	0
  2149  0018D4  6E8C               	movwf	140,c	;volatile
  2150                           
  2151                           ;main.c: 607:                 minutosTranscurridos = 0;
  2152  0018D6  0E00               	movlw	0
  2153  0018D8  6F84               	movwf	_minutosTranscurridos& (0+255),b
  2154                           
  2155                           ;main.c: 608:                 regando = 0;
  2156  0018DA  0E00               	movlw	0
  2157  0018DC  6F83               	movwf	_regando& (0+255),b
  2158  0018DE  EF96  F00C         	goto	l357
  2159  0018E2                     l3557:
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;main.c: 614:         dameHoraActual();
  2163  0018E2  ECC0  F010         	call	_dameHoraActual	;wreg free
  2164  0018E6                     
  2165                           ;main.c: 616:         if (horaRegar() && !minutos) {
  2166  0018E6  ECAA  F010         	call	_horaRegar	;wreg free
  2167  0018EA  5001               	movf	?_horaRegar^0,w,c
  2168  0018EC  1002               	iorwf	(?_horaRegar+1)^0,w,c
  2169  0018EE  B4D8               	btfsc	status,2,c
  2170  0018F0  EF7C  F00C         	goto	u2751
  2171  0018F4  EF7E  F00C         	goto	u2750
  2172  0018F8                     u2751:
  2173  0018F8  EF96  F00C         	goto	l357
  2174  0018FC                     u2750:
  2175  0018FC  0100               	movlb	0	; () banked
  2176  0018FE  5189               	movf	_minutos& (0+255),w,b
  2177  001900  A4D8               	btfss	status,2,c
  2178  001902  EF85  F00C         	goto	u2761
  2179  001906  EF87  F00C         	goto	u2760
  2180  00190A                     u2761:
  2181  00190A  EF96  F00C         	goto	l357
  2182  00190E                     u2760:
  2183  00190E                     
  2184                           ; BSR set to: 0
  2185                           ;main.c: 628:                 lecturaAnalogaSensores();
  2186  00190E  ECAA  F00D         	call	_lecturaAnalogaSensores	;wreg free
  2187  001912                     
  2188                           ;main.c: 629:                 minutosRegar = horarios[hora].tiempoRegar;
  2189  001912  0100               	movlb	0	; () banked
  2190  001914  518A               	movf	_hora& (0+255),w,b
  2191  001916  0D03               	mullw	3
  2192  001918  0E02               	movlw	low (_horarios+2)
  2193  00191A  24F3               	addwf	243,w,c
  2194  00191C  6ED9               	movwf	fsr2l,c
  2195  00191E  0E01               	movlw	high (_horarios+2)
  2196  001920  20F4               	addwfc	prodh,w,c
  2197  001922  6EDA               	movwf	fsr2h,c
  2198  001924  50DF               	movf	indf2,w,c
  2199  001926  6F85               	movwf	_minutosRegar& (0+255),b
  2200  001928                     
  2201                           ; BSR set to: 0
  2202                           ;main.c: 630:                 encenderBombas();
  2203  001928  EC09  F000         	call	_encenderBombas	;wreg free
  2204  00192C                     l357:
  2205  00192C  0012               	return		;funcret
  2206  00192E                     __end_of_sistemaRegado:
  2207                           	opt callstack 0
  2208                           
  2209 ;; *************** function _horaRegar *****************
  2210 ;; Defined at:
  2211 ;;		line 135 in file "main.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;		None
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  2    0[COMRAM] int 
  2218 ;; Registers used:
  2219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2225 ;;      Params:         2       0       0       0       0       0       0       0       0
  2226 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2227 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2228 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2229 ;;Total ram usage:        3 bytes
  2230 ;; Hardware stack levels used:    1
  2231 ;; Hardware stack levels required when called:    1
  2232 ;; This function calls:
  2233 ;;		Nothing
  2234 ;; This function is called by:
  2235 ;;		_sistemaRegado
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text2
  2240  002154                     __ptext2:
  2241                           	opt callstack 0
  2242  002154                     _horaRegar:
  2243                           	opt callstack 28
  2244  002154                     
  2245                           ;main.c: 137:     return horarios[hora].regar == 1;
  2246  002154  0100               	movlb	0	; () banked
  2247  002156  518A               	movf	_hora& (0+255),w,b
  2248  002158  0D03               	mullw	3
  2249  00215A  0E01               	movlw	low (_horarios+1)
  2250  00215C  24F3               	addwf	243,w,c
  2251  00215E  6ED9               	movwf	fsr2l,c
  2252  002160  0E01               	movlw	high (_horarios+1)
  2253  002162  20F4               	addwfc	prodh,w,c
  2254  002164  6EDA               	movwf	fsr2h,c
  2255  002166  04DE               	decf	postinc2,w,c
  2256  002168  B4D8               	btfsc	status,2,c
  2257  00216A  EFB9  F010         	goto	u2241
  2258  00216E  EFBC  F010         	goto	u2240
  2259  002172                     u2241:
  2260  002172  0E01               	movlw	1
  2261  002174  EFBD  F010         	goto	u2250
  2262  002178                     u2240:
  2263  002178  0E00               	movlw	0
  2264  00217A                     u2250:
  2265  00217A  6E01               	movwf	?_horaRegar^0,c
  2266  00217C  6A02               	clrf	(?_horaRegar+1)^0,c
  2267  00217E                     
  2268                           ; BSR set to: 0
  2269  00217E  0012               	return		;funcret
  2270  002180                     __end_of_horaRegar:
  2271                           	opt callstack 0
  2272                           
  2273 ;; *************** function _encenderBombas *****************
  2274 ;; Defined at:
  2275 ;;		line 246 in file "main.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;		None
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  i               2   23[COMRAM] int 
  2280 ;;  flagSeco        1   22[COMRAM] unsigned char 
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2290 ;;      Params:         0       0       0       0       0       0       0       0       0
  2291 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2292 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2293 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2294 ;;Total ram usage:        5 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; Hardware stack levels required when called:    5
  2297 ;; This function calls:
  2298 ;;		___wmul
  2299 ;;		_estaSeco
  2300 ;; This function is called by:
  2301 ;;		_sistemaRegado
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text3
  2306  000012                     __ptext3:
  2307                           	opt callstack 0
  2308  000012                     _encenderBombas:
  2309                           	opt callstack 24
  2310  000012                     
  2311                           ;main.c: 248:     char flagSeco = 0;
  2312  000012  0E00               	movlw	0
  2313  000014  6E17               	movwf	encenderBombas@flagSeco^0,c
  2314                           
  2315                           ;main.c: 250:     for (int i = 0; i < 3; i++) {
  2316  000016  0E00               	movlw	0
  2317  000018  6E19               	movwf	(encenderBombas@i+1)^0,c
  2318  00001A  0E00               	movlw	0
  2319  00001C  6E18               	movwf	encenderBombas@i^0,c
  2320  00001E  EF33  F001         	goto	l3127
  2321  000022                     l3077:
  2322                           
  2323                           ;main.c: 255:                 if (estaSeco(sensores[i])) {
  2324  000022  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2325  000026  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2326  00002A  0E00               	movlw	0
  2327  00002C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2328  00002E  0E03               	movlw	3
  2329  000030  6E03               	movwf	___wmul@multiplicand^0,c
  2330  000032  ECFE  F010         	call	___wmul	;wreg free
  2331  000036  0E60               	movlw	low _sensores
  2332  000038  2401               	addwf	?___wmul^0,w,c
  2333  00003A  6ED9               	movwf	fsr2l,c
  2334  00003C  0E00               	movlw	high _sensores
  2335  00003E  2002               	addwfc	(?___wmul+1)^0,w,c
  2336  000040  6EDA               	movwf	fsr2h,c
  2337  000042  CFDE F010          	movff	postinc2,estaSeco@s
  2338  000046  CFDE F011          	movff	postinc2,estaSeco@s+1
  2339  00004A  CFDD F012          	movff	postdec2,estaSeco@s+2
  2340  00004E  EC88  F00F         	call	_estaSeco	;wreg free
  2341  000052  5010               	movf	?_estaSeco^0,w,c
  2342  000054  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2343  000056  B4D8               	btfsc	status,2,c
  2344  000058  EF30  F000         	goto	u2261
  2345  00005C  EF32  F000         	goto	u2260
  2346  000060                     u2261:
  2347  000060  EF61  F001         	goto	l3129
  2348  000064                     u2260:
  2349  000064                     
  2350                           ;main.c: 256:                     LATDbits.LATD0 = 1;
  2351  000064  808C               	bsf	140,0,c	;volatile
  2352  000066                     l3081:
  2353                           
  2354                           ;main.c: 257:                     flagSeco = 1;
  2355  000066  0E01               	movlw	1
  2356  000068  6E17               	movwf	encenderBombas@flagSeco^0,c
  2357  00006A  EF61  F001         	goto	l3129
  2358  00006E                     l3083:
  2359                           
  2360                           ;main.c: 262:                 if (estaSeco(sensores[i])) {
  2361  00006E  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2362  000072  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2363  000076  0E00               	movlw	0
  2364  000078  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2365  00007A  0E03               	movlw	3
  2366  00007C  6E03               	movwf	___wmul@multiplicand^0,c
  2367  00007E  ECFE  F010         	call	___wmul	;wreg free
  2368  000082  0E60               	movlw	low _sensores
  2369  000084  2401               	addwf	?___wmul^0,w,c
  2370  000086  6ED9               	movwf	fsr2l,c
  2371  000088  0E00               	movlw	high _sensores
  2372  00008A  2002               	addwfc	(?___wmul+1)^0,w,c
  2373  00008C  6EDA               	movwf	fsr2h,c
  2374  00008E  CFDE F010          	movff	postinc2,estaSeco@s
  2375  000092  CFDE F011          	movff	postinc2,estaSeco@s+1
  2376  000096  CFDD F012          	movff	postdec2,estaSeco@s+2
  2377  00009A  EC88  F00F         	call	_estaSeco	;wreg free
  2378  00009E  5010               	movf	?_estaSeco^0,w,c
  2379  0000A0  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2380  0000A2  B4D8               	btfsc	status,2,c
  2381  0000A4  EF56  F000         	goto	u2271
  2382  0000A8  EF58  F000         	goto	u2270
  2383  0000AC                     u2271:
  2384  0000AC  EF61  F001         	goto	l3129
  2385  0000B0                     u2270:
  2386  0000B0                     
  2387                           ;main.c: 263:                     LATDbits.LATD1 = 1;
  2388  0000B0  828C               	bsf	140,1,c	;volatile
  2389  0000B2  EF33  F000         	goto	l3081
  2390  0000B6                     l3089:
  2391                           
  2392                           ;main.c: 269:                 if (estaSeco(sensores[i])) {
  2393  0000B6  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2394  0000BA  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2395  0000BE  0E00               	movlw	0
  2396  0000C0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2397  0000C2  0E03               	movlw	3
  2398  0000C4  6E03               	movwf	___wmul@multiplicand^0,c
  2399  0000C6  ECFE  F010         	call	___wmul	;wreg free
  2400  0000CA  0E60               	movlw	low _sensores
  2401  0000CC  2401               	addwf	?___wmul^0,w,c
  2402  0000CE  6ED9               	movwf	fsr2l,c
  2403  0000D0  0E00               	movlw	high _sensores
  2404  0000D2  2002               	addwfc	(?___wmul+1)^0,w,c
  2405  0000D4  6EDA               	movwf	fsr2h,c
  2406  0000D6  CFDE F010          	movff	postinc2,estaSeco@s
  2407  0000DA  CFDE F011          	movff	postinc2,estaSeco@s+1
  2408  0000DE  CFDD F012          	movff	postdec2,estaSeco@s+2
  2409  0000E2  EC88  F00F         	call	_estaSeco	;wreg free
  2410  0000E6  5010               	movf	?_estaSeco^0,w,c
  2411  0000E8  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2412  0000EA  B4D8               	btfsc	status,2,c
  2413  0000EC  EF7A  F000         	goto	u2281
  2414  0000F0  EF7C  F000         	goto	u2280
  2415  0000F4                     u2281:
  2416  0000F4  EF61  F001         	goto	l3129
  2417  0000F8                     u2280:
  2418  0000F8                     
  2419                           ;main.c: 270:                     LATDbits.LATD2 = 1;
  2420  0000F8  848C               	bsf	140,2,c	;volatile
  2421  0000FA  EF33  F000         	goto	l3081
  2422  0000FE                     l3095:
  2423                           
  2424                           ;main.c: 276:                 if (estaSeco(sensores[i])) {
  2425  0000FE  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2426  000102  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2427  000106  0E00               	movlw	0
  2428  000108  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2429  00010A  0E03               	movlw	3
  2430  00010C  6E03               	movwf	___wmul@multiplicand^0,c
  2431  00010E  ECFE  F010         	call	___wmul	;wreg free
  2432  000112  0E60               	movlw	low _sensores
  2433  000114  2401               	addwf	?___wmul^0,w,c
  2434  000116  6ED9               	movwf	fsr2l,c
  2435  000118  0E00               	movlw	high _sensores
  2436  00011A  2002               	addwfc	(?___wmul+1)^0,w,c
  2437  00011C  6EDA               	movwf	fsr2h,c
  2438  00011E  CFDE F010          	movff	postinc2,estaSeco@s
  2439  000122  CFDE F011          	movff	postinc2,estaSeco@s+1
  2440  000126  CFDD F012          	movff	postdec2,estaSeco@s+2
  2441  00012A  EC88  F00F         	call	_estaSeco	;wreg free
  2442  00012E  5010               	movf	?_estaSeco^0,w,c
  2443  000130  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2444  000132  B4D8               	btfsc	status,2,c
  2445  000134  EF9E  F000         	goto	u2291
  2446  000138  EFA0  F000         	goto	u2290
  2447  00013C                     u2291:
  2448  00013C  EF61  F001         	goto	l3129
  2449  000140                     u2290:
  2450  000140                     
  2451                           ;main.c: 277:                     LATDbits.LATD3 = 1;
  2452  000140  868C               	bsf	140,3,c	;volatile
  2453  000142  EF33  F000         	goto	l3081
  2454  000146                     l3101:
  2455                           
  2456                           ;main.c: 283:                 if (estaSeco(sensores[i])) {
  2457  000146  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2458  00014A  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2459  00014E  0E00               	movlw	0
  2460  000150  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2461  000152  0E03               	movlw	3
  2462  000154  6E03               	movwf	___wmul@multiplicand^0,c
  2463  000156  ECFE  F010         	call	___wmul	;wreg free
  2464  00015A  0E60               	movlw	low _sensores
  2465  00015C  2401               	addwf	?___wmul^0,w,c
  2466  00015E  6ED9               	movwf	fsr2l,c
  2467  000160  0E00               	movlw	high _sensores
  2468  000162  2002               	addwfc	(?___wmul+1)^0,w,c
  2469  000164  6EDA               	movwf	fsr2h,c
  2470  000166  CFDE F010          	movff	postinc2,estaSeco@s
  2471  00016A  CFDE F011          	movff	postinc2,estaSeco@s+1
  2472  00016E  CFDD F012          	movff	postdec2,estaSeco@s+2
  2473  000172  EC88  F00F         	call	_estaSeco	;wreg free
  2474  000176  5010               	movf	?_estaSeco^0,w,c
  2475  000178  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2476  00017A  B4D8               	btfsc	status,2,c
  2477  00017C  EFC2  F000         	goto	u2301
  2478  000180  EFC4  F000         	goto	u2300
  2479  000184                     u2301:
  2480  000184  EF61  F001         	goto	l3129
  2481  000188                     u2300:
  2482  000188                     
  2483                           ;main.c: 284:                     LATDbits.LATD4 = 1;
  2484  000188  888C               	bsf	140,4,c	;volatile
  2485  00018A  EF33  F000         	goto	l3081
  2486  00018E                     l3107:
  2487                           
  2488                           ;main.c: 290:                 if (estaSeco(sensores[i])) {
  2489  00018E  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2490  000192  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2491  000196  0E00               	movlw	0
  2492  000198  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2493  00019A  0E03               	movlw	3
  2494  00019C  6E03               	movwf	___wmul@multiplicand^0,c
  2495  00019E  ECFE  F010         	call	___wmul	;wreg free
  2496  0001A2  0E60               	movlw	low _sensores
  2497  0001A4  2401               	addwf	?___wmul^0,w,c
  2498  0001A6  6ED9               	movwf	fsr2l,c
  2499  0001A8  0E00               	movlw	high _sensores
  2500  0001AA  2002               	addwfc	(?___wmul+1)^0,w,c
  2501  0001AC  6EDA               	movwf	fsr2h,c
  2502  0001AE  CFDE F010          	movff	postinc2,estaSeco@s
  2503  0001B2  CFDE F011          	movff	postinc2,estaSeco@s+1
  2504  0001B6  CFDD F012          	movff	postdec2,estaSeco@s+2
  2505  0001BA  EC88  F00F         	call	_estaSeco	;wreg free
  2506  0001BE  5010               	movf	?_estaSeco^0,w,c
  2507  0001C0  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2508  0001C2  B4D8               	btfsc	status,2,c
  2509  0001C4  EFE6  F000         	goto	u2311
  2510  0001C8  EFE8  F000         	goto	u2310
  2511  0001CC                     u2311:
  2512  0001CC  EF61  F001         	goto	l3129
  2513  0001D0                     u2310:
  2514  0001D0                     
  2515                           ;main.c: 291:                     LATDbits.LATD5 = 1;
  2516  0001D0  8A8C               	bsf	140,5,c	;volatile
  2517  0001D2  EF33  F000         	goto	l3081
  2518  0001D6                     l3113:
  2519                           
  2520                           ;main.c: 297:                 if (estaSeco(sensores[i])) {
  2521  0001D6  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2522  0001DA  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2523  0001DE  0E00               	movlw	0
  2524  0001E0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2525  0001E2  0E03               	movlw	3
  2526  0001E4  6E03               	movwf	___wmul@multiplicand^0,c
  2527  0001E6  ECFE  F010         	call	___wmul	;wreg free
  2528  0001EA  0E60               	movlw	low _sensores
  2529  0001EC  2401               	addwf	?___wmul^0,w,c
  2530  0001EE  6ED9               	movwf	fsr2l,c
  2531  0001F0  0E00               	movlw	high _sensores
  2532  0001F2  2002               	addwfc	(?___wmul+1)^0,w,c
  2533  0001F4  6EDA               	movwf	fsr2h,c
  2534  0001F6  CFDE F010          	movff	postinc2,estaSeco@s
  2535  0001FA  CFDE F011          	movff	postinc2,estaSeco@s+1
  2536  0001FE  CFDD F012          	movff	postdec2,estaSeco@s+2
  2537  000202  EC88  F00F         	call	_estaSeco	;wreg free
  2538  000206  5010               	movf	?_estaSeco^0,w,c
  2539  000208  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2540  00020A  B4D8               	btfsc	status,2,c
  2541  00020C  EF0A  F001         	goto	u2321
  2542  000210  EF0C  F001         	goto	u2320
  2543  000214                     u2321:
  2544  000214  EF61  F001         	goto	l3129
  2545  000218                     u2320:
  2546  000218                     
  2547                           ;main.c: 298:                     LATDbits.LATD6 = 1;
  2548  000218  8C8C               	bsf	140,6,c	;volatile
  2549  00021A  EF33  F000         	goto	l3081
  2550  00021E                     l3119:
  2551                           
  2552                           ;main.c: 304:                 if (estaSeco(sensores[i])) {
  2553  00021E  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2554  000222  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2555  000226  0E00               	movlw	0
  2556  000228  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2557  00022A  0E03               	movlw	3
  2558  00022C  6E03               	movwf	___wmul@multiplicand^0,c
  2559  00022E  ECFE  F010         	call	___wmul	;wreg free
  2560  000232  0E60               	movlw	low _sensores
  2561  000234  2401               	addwf	?___wmul^0,w,c
  2562  000236  6ED9               	movwf	fsr2l,c
  2563  000238  0E00               	movlw	high _sensores
  2564  00023A  2002               	addwfc	(?___wmul+1)^0,w,c
  2565  00023C  6EDA               	movwf	fsr2h,c
  2566  00023E  CFDE F010          	movff	postinc2,estaSeco@s
  2567  000242  CFDE F011          	movff	postinc2,estaSeco@s+1
  2568  000246  CFDD F012          	movff	postdec2,estaSeco@s+2
  2569  00024A  EC88  F00F         	call	_estaSeco	;wreg free
  2570  00024E  5010               	movf	?_estaSeco^0,w,c
  2571  000250  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2572  000252  B4D8               	btfsc	status,2,c
  2573  000254  EF2E  F001         	goto	u2331
  2574  000258  EF30  F001         	goto	u2330
  2575  00025C                     u2331:
  2576  00025C  EF61  F001         	goto	l3129
  2577  000260                     u2330:
  2578  000260                     
  2579                           ;main.c: 305:                     LATDbits.LATD7 = 1;
  2580  000260  8E8C               	bsf	140,7,c	;volatile
  2581  000262  EF33  F000         	goto	l3081
  2582  000266                     l3127:
  2583  000266  C018  F015         	movff	encenderBombas@i,??_encenderBombas
  2584  00026A  C019  F016         	movff	encenderBombas@i+1,??_encenderBombas+1
  2585                           
  2586                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2587                           ; Switch size 1, requested type "simple"
  2588                           ; Number of cases is 1, Range of values is 0 to 0
  2589                           ; switch strategies available:
  2590                           ; Name         Instructions Cycles
  2591                           ; simple_byte            4     3 (average)
  2592                           ;	Chosen strategy is simple_byte
  2593  00026E  5016               	movf	(??_encenderBombas+1)^0,w,c
  2594  000270  0A00               	xorlw	0	; case 0
  2595  000272  B4D8               	btfsc	status,2,c
  2596  000274  EF3E  F001         	goto	l3695
  2597  000278  EF61  F001         	goto	l3129
  2598  00027C                     l3695:
  2599                           
  2600                           ; Switch size 1, requested type "simple"
  2601                           ; Number of cases is 8, Range of values is 0 to 7
  2602                           ; switch strategies available:
  2603                           ; Name         Instructions Cycles
  2604                           ; simple_byte           25    13 (average)
  2605                           ;	Chosen strategy is simple_byte
  2606  00027C  5015               	movf	??_encenderBombas^0,w,c
  2607  00027E  0A00               	xorlw	0	; case 0
  2608  000280  B4D8               	btfsc	status,2,c
  2609  000282  EF11  F000         	goto	l3077
  2610  000286  0A01               	xorlw	1	; case 1
  2611  000288  B4D8               	btfsc	status,2,c
  2612  00028A  EF37  F000         	goto	l3083
  2613  00028E  0A03               	xorlw	3	; case 2
  2614  000290  B4D8               	btfsc	status,2,c
  2615  000292  EF5B  F000         	goto	l3089
  2616  000296  0A01               	xorlw	1	; case 3
  2617  000298  B4D8               	btfsc	status,2,c
  2618  00029A  EF7F  F000         	goto	l3095
  2619  00029E  0A07               	xorlw	7	; case 4
  2620  0002A0  B4D8               	btfsc	status,2,c
  2621  0002A2  EFA3  F000         	goto	l3101
  2622  0002A6  0A01               	xorlw	1	; case 5
  2623  0002A8  B4D8               	btfsc	status,2,c
  2624  0002AA  EFC7  F000         	goto	l3107
  2625  0002AE  0A03               	xorlw	3	; case 6
  2626  0002B0  B4D8               	btfsc	status,2,c
  2627  0002B2  EFEB  F000         	goto	l3113
  2628  0002B6  0A01               	xorlw	1	; case 7
  2629  0002B8  B4D8               	btfsc	status,2,c
  2630  0002BA  EF0F  F001         	goto	l3119
  2631  0002BE  EF61  F001         	goto	l3129
  2632  0002C2                     l3129:
  2633                           
  2634                           ;main.c: 311:     }
  2635  0002C2  4A18               	infsnz	encenderBombas@i^0,f,c
  2636  0002C4  2A19               	incf	(encenderBombas@i+1)^0,f,c
  2637  0002C6  BE19               	btfsc	(encenderBombas@i+1)^0,7,c
  2638  0002C8  EF6F  F001         	goto	u2341
  2639  0002CC  5019               	movf	(encenderBombas@i+1)^0,w,c
  2640  0002CE  E109               	bnz	u2340
  2641  0002D0  0E03               	movlw	3
  2642  0002D2  5C18               	subwf	encenderBombas@i^0,w,c
  2643  0002D4  A0D8               	btfss	status,0,c
  2644  0002D6  EF6F  F001         	goto	u2341
  2645  0002DA  EF71  F001         	goto	u2340
  2646  0002DE                     u2341:
  2647  0002DE  EF33  F001         	goto	l3127
  2648  0002E2                     u2340:
  2649  0002E2                     
  2650                           ;main.c: 313:     if (flagSeco)
  2651  0002E2  5017               	movf	encenderBombas@flagSeco^0,w,c
  2652  0002E4  B4D8               	btfsc	status,2,c
  2653  0002E6  EF77  F001         	goto	u2351
  2654  0002EA  EF79  F001         	goto	u2350
  2655  0002EE                     u2351:
  2656  0002EE  EF7C  F001         	goto	l270
  2657  0002F2                     u2350:
  2658  0002F2                     
  2659                           ;main.c: 314:         regando = 1;
  2660  0002F2  0E01               	movlw	1
  2661  0002F4  0100               	movlb	0	; () banked
  2662  0002F6  6F83               	movwf	_regando& (0+255),b
  2663  0002F8                     l270:
  2664  0002F8  0012               	return		;funcret
  2665  0002FA                     __end_of_encenderBombas:
  2666                           	opt callstack 0
  2667                           
  2668 ;; *************** function _estaSeco *****************
  2669 ;; Defined at:
  2670 ;;		line 126 in file "main.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;  s               3   15[COMRAM] struct .
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  temperatura     1   19[COMRAM] unsigned char 
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  2   15[COMRAM] int 
  2677 ;; Registers used:
  2678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2684 ;;      Params:         3       0       0       0       0       0       0       0       0
  2685 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2686 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2687 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2688 ;;Total ram usage:        5 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; Hardware stack levels required when called:    4
  2691 ;; This function calls:
  2692 ;;		_dameTemperaturaHumedad
  2693 ;; This function is called by:
  2694 ;;		_encenderBombas
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           	psect	text4
  2699  001F10                     __ptext4:
  2700                           	opt callstack 0
  2701  001F10                     _estaSeco:
  2702                           	opt callstack 24
  2703  001F10                     
  2704                           ;main.c: 127:     unsigned char temperatura;;main.c: 129:     dameTemperaturaHumedad(((v
      +                          oid*)0), &temperatura);
  2705  001F10  0E00               	movlw	0
  2706  001F12  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  2707  001F14  0E00               	movlw	0
  2708  001F16  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  2709  001F18  0E14               	movlw	low estaSeco@temperatura
  2710  001F1A  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  2711  001F1C  0E00               	movlw	high estaSeco@temperatura
  2712  001F1E  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  2713  001F20  ECEC  F00B         	call	_dameTemperaturaHumedad	;wreg free
  2714  001F24                     
  2715                           ;main.c: 132:     return (s.humedadMedida >= 60) && (temperatura < 34);
  2716  001F24  0E00               	movlw	0
  2717  001F26  6E13               	movwf	_estaSeco$770^0,c
  2718  001F28  BE11               	btfsc	(estaSeco@s+1)^0,7,c
  2719  001F2A  EFA0  F00F         	goto	u2051
  2720  001F2E  5011               	movf	(estaSeco@s+1)^0,w,c
  2721  001F30  E109               	bnz	u2050
  2722  001F32  0E3C               	movlw	60
  2723  001F34  5C10               	subwf	estaSeco@s^0,w,c
  2724  001F36  A0D8               	btfss	status,0,c
  2725  001F38  EFA0  F00F         	goto	u2051
  2726  001F3C  EFA2  F00F         	goto	u2050
  2727  001F40                     u2051:
  2728  001F40  EFAC  F00F         	goto	l2887
  2729  001F44                     u2050:
  2730  001F44  0E22               	movlw	34
  2731  001F46  6014               	cpfslt	estaSeco@temperatura^0,c
  2732  001F48  EFA8  F00F         	goto	u2061
  2733  001F4C  EFAA  F00F         	goto	u2060
  2734  001F50                     u2061:
  2735  001F50  EFAC  F00F         	goto	l2887
  2736  001F54                     u2060:
  2737  001F54  0E01               	movlw	1
  2738  001F56  6E13               	movwf	_estaSeco$770^0,c
  2739  001F58                     l2887:
  2740  001F58  C013  F010         	movff	_estaSeco$770,?_estaSeco
  2741  001F5C  6A11               	clrf	(?_estaSeco+1)^0,c
  2742  001F5E  0012               	return		;funcret
  2743  001F60                     __end_of_estaSeco:
  2744                           	opt callstack 0
  2745                           
  2746 ;; *************** function _dameHoraActual *****************
  2747 ;; Defined at:
  2748 ;;		line 150 in file "main.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;		None
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;		None
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      void 
  2755 ;; Registers used:
  2756 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2762 ;;      Params:         0       0       0       0       0       0       0       0       0
  2763 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2764 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2765 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2766 ;;Total ram usage:        0 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    4
  2769 ;; This function calls:
  2770 ;;		_convertirDato
  2771 ;;		_leer_rtc
  2772 ;; This function is called by:
  2773 ;;		_sistemaRegado
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text5
  2778  002180                     __ptext5:
  2779                           	opt callstack 0
  2780  002180                     _dameHoraActual:
  2781                           	opt callstack 25
  2782  002180                     
  2783                           ;main.c: 152:     segundos = convertirDato(leer_rtc(0x00));
  2784  002180  0E00               	movlw	0
  2785  002182  ECD6  F010         	call	_leer_rtc
  2786  002186  EC11  F011         	call	_convertirDato
  2787  00218A  0100               	movlb	0	; () banked
  2788  00218C  6F88               	movwf	_segundos& (0+255),b
  2789                           
  2790                           ;main.c: 153:     minutos = convertirDato(leer_rtc(0x01));
  2791  00218E  0E01               	movlw	1
  2792  002190  ECD6  F010         	call	_leer_rtc
  2793  002194  EC11  F011         	call	_convertirDato
  2794  002198  0100               	movlb	0	; () banked
  2795  00219A  6F89               	movwf	_minutos& (0+255),b
  2796                           
  2797                           ;main.c: 154:     hora = convertirDato(leer_rtc(0x02));
  2798  00219C  0E02               	movlw	2
  2799  00219E  ECD6  F010         	call	_leer_rtc
  2800  0021A2  EC11  F011         	call	_convertirDato
  2801  0021A6  0100               	movlb	0	; () banked
  2802  0021A8  6F8A               	movwf	_hora& (0+255),b
  2803  0021AA                     
  2804                           ; BSR set to: 0
  2805  0021AA  0012               	return		;funcret
  2806  0021AC                     __end_of_dameHoraActual:
  2807                           	opt callstack 0
  2808                           
  2809 ;; *************** function _leer_rtc *****************
  2810 ;; Defined at:
  2811 ;;		line 13 in file "./RTC.h"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;  direccion       1    wreg     unsigned char 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;  direccion       1    2[COMRAM] unsigned char 
  2816 ;;  dato            1    3[COMRAM] unsigned char 
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  1    wreg      unsigned char 
  2819 ;; Registers used:
  2820 ;;		wreg, status,2, status,0, cstack
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2826 ;;      Params:         0       0       0       0       0       0       0       0       0
  2827 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2828 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2829 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2830 ;;Total ram usage:        2 bytes
  2831 ;; Hardware stack levels used:    1
  2832 ;; Hardware stack levels required when called:    3
  2833 ;; This function calls:
  2834 ;;		_i2c_detener
  2835 ;;		_i2c_envia_dato
  2836 ;;		_i2c_inicia_com
  2837 ;;		_i2c_recibe_dato
  2838 ;;		_i2c_reinicia_com
  2839 ;; This function is called by:
  2840 ;;		_dameHoraActual
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           	psect	text6
  2845  0021AC                     __ptext6:
  2846                           	opt callstack 0
  2847  0021AC                     _leer_rtc:
  2848                           	opt callstack 25
  2849                           
  2850                           ; BSR set to: 0
  2851                           ;incstack = 0
  2852                           ;leer_rtc@direccion stored from wreg
  2853  0021AC  6E03               	movwf	leer_rtc@direccion^0,c
  2854  0021AE                     
  2855                           ;./RTC.h: 14:     unsigned char dato;;./RTC.h: 15:     i2c_inicia_com();
  2856  0021AE  EC78  F011         	call	_i2c_inicia_com	;wreg free
  2857                           
  2858                           ;./RTC.h: 16:     i2c_envia_dato(0xD0);
  2859  0021B2  0ED0               	movlw	208
  2860  0021B4  EC69  F011         	call	_i2c_envia_dato
  2861                           
  2862                           ;./RTC.h: 17:     i2c_envia_dato(direccion);
  2863  0021B8  5003               	movf	leer_rtc@direccion^0,w,c
  2864  0021BA  EC69  F011         	call	_i2c_envia_dato
  2865                           
  2866                           ;./RTC.h: 18:     i2c_reinicia_com();
  2867  0021BE  EC74  F011         	call	_i2c_reinicia_com	;wreg free
  2868                           
  2869                           ;./RTC.h: 19:     i2c_envia_dato(0xD1);
  2870  0021C2  0ED1               	movlw	209
  2871  0021C4  EC69  F011         	call	_i2c_envia_dato
  2872                           
  2873                           ;./RTC.h: 20:     dato = i2c_recibe_dato();
  2874  0021C8  EC40  F011         	call	_i2c_recibe_dato	;wreg free
  2875  0021CC  6E04               	movwf	leer_rtc@dato^0,c
  2876                           
  2877                           ;./RTC.h: 21:     i2c_detener();
  2878  0021CE  EC7C  F011         	call	_i2c_detener	;wreg free
  2879  0021D2                     
  2880                           ;./RTC.h: 22:     return dato;
  2881  0021D2  5004               	movf	leer_rtc@dato^0,w,c
  2882  0021D4  0012               	return		;funcret
  2883  0021D6                     __end_of_leer_rtc:
  2884                           	opt callstack 0
  2885                           
  2886 ;; *************** function _convertirDato *****************
  2887 ;; Defined at:
  2888 ;;		line 28 in file "./RTC.h"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;  dato            1    wreg     unsigned char 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;  dato            1    1[COMRAM] unsigned char 
  2893 ;;  datoR           1    2[COMRAM] unsigned char 
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  1    wreg      unsigned char 
  2896 ;; Registers used:
  2897 ;;		wreg, status,2, status,0, prodl, prodh
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2903 ;;      Params:         0       0       0       0       0       0       0       0       0
  2904 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2905 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2906 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2907 ;;Total ram usage:        3 bytes
  2908 ;; Hardware stack levels used:    1
  2909 ;; Hardware stack levels required when called:    1
  2910 ;; This function calls:
  2911 ;;		Nothing
  2912 ;; This function is called by:
  2913 ;;		_dameHoraActual
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text7
  2918  002222                     __ptext7:
  2919                           	opt callstack 0
  2920  002222                     _convertirDato:
  2921                           	opt callstack 27
  2922                           
  2923                           ;incstack = 0
  2924                           ;convertirDato@dato stored from wreg
  2925  002222  6E02               	movwf	convertirDato@dato^0,c
  2926  002224                     
  2927                           ;./RTC.h: 30:     datoR = (dato & 0xF0) >> 4;
  2928  002224  3802               	swapf	convertirDato@dato^0,w,c
  2929  002226  0B0F               	andlw	15
  2930  002228  0B0F               	andlw	15
  2931  00222A  6E03               	movwf	convertirDato@datoR^0,c
  2932  00222C                     
  2933                           ;./RTC.h: 31:     datoR = (datoR * 10) + (dato & 0x0F);
  2934  00222C  C002  F001         	movff	convertirDato@dato,??_convertirDato
  2935  002230  0E0F               	movlw	15
  2936  002232  1601               	andwf	??_convertirDato^0,f,c
  2937  002234  5003               	movf	convertirDato@datoR^0,w,c
  2938  002236  0D0A               	mullw	10
  2939  002238  50F3               	movf	243,w,c
  2940  00223A  2401               	addwf	??_convertirDato^0,w,c
  2941  00223C  6E03               	movwf	convertirDato@datoR^0,c
  2942  00223E                     
  2943                           ;./RTC.h: 32:     return datoR;
  2944  00223E  5003               	movf	convertirDato@datoR^0,w,c
  2945  002240  0012               	return		;funcret
  2946  002242                     __end_of_convertirDato:
  2947                           	opt callstack 0
  2948                           
  2949 ;; *************** function _sistemaPrincipal *****************
  2950 ;; Defined at:
  2951 ;;		line 552 in file "main.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  opcion          1    wreg     unsigned char 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  opcion          1   92[COMRAM] unsigned char 
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      void 
  2958 ;; Registers used:
  2959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2965 ;;      Params:         0       0       0       0       0       0       0       0       0
  2966 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2967 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2968 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2969 ;;Total ram usage:        3 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; Hardware stack levels required when called:   10
  2972 ;; This function calls:
  2973 ;;		_UART_printf
  2974 ;;		_asignarHorarios
  2975 ;;		_dameDatosSistema
  2976 ;;		_fijaHoraRtc
  2977 ;;		_mostrarDatosSensores
  2978 ;;		_mostrarDatosSensoresWIFI
  2979 ;;		_mostrarMenu
  2980 ;;		_setTiempoRegar
  2981 ;; This function is called by:
  2982 ;;		_main
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text8
  2987  001A5A                     __ptext8:
  2988                           	opt callstack 0
  2989  001A5A                     _sistemaPrincipal:
  2990                           	opt callstack 20
  2991                           
  2992                           ;incstack = 0
  2993                           ;sistemaPrincipal@opcion stored from wreg
  2994  001A5A  6E5D               	movwf	sistemaPrincipal@opcion^0,c
  2995  001A5C                     
  2996                           ;main.c: 554:     PIE1bits.RCIE = 0;
  2997  001A5C  9A9D               	bcf	157,5,c	;volatile
  2998                           
  2999                           ;main.c: 556:     switch (opcion) {
  3000  001A5E  EF4D  F00D         	goto	l3533
  3001  001A62                     l3517:
  3002                           
  3003                           ;main.c: 559:             fijaHoraRtc();
  3004  001A62  ECDE  F00D         	call	_fijaHoraRtc	;wreg free
  3005                           
  3006                           ;main.c: 560:             break;
  3007  001A66  EF6E  F00D         	goto	l3535
  3008  001A6A                     l3519:
  3009                           
  3010                           ;main.c: 563:             asignarHorarios();
  3011  001A6A  ECDB  F006         	call	_asignarHorarios	;wreg free
  3012                           
  3013                           ;main.c: 564:             break;
  3014  001A6E  EF6E  F00D         	goto	l3535
  3015  001A72                     l3521:
  3016                           
  3017                           ;main.c: 567:             setTiempoRegar();
  3018  001A72  ECEE  F002         	call	_setTiempoRegar	;wreg free
  3019                           
  3020                           ;main.c: 568:             break;
  3021  001A76  EF6E  F00D         	goto	l3535
  3022  001A7A                     l3523:
  3023                           
  3024                           ;main.c: 571:             dameDatosSistema();
  3025  001A7A  EC1F  F009         	call	_dameDatosSistema	;wreg free
  3026                           
  3027                           ;main.c: 572:             break;
  3028  001A7E  EF6E  F00D         	goto	l3535
  3029  001A82                     l3527:
  3030                           
  3031                           ;main.c: 578:                 mostrarDatosSensores();
  3032  001A82  EC70  F005         	call	_mostrarDatosSensores	;wreg free
  3033  001A86  EF6E  F00D         	goto	l3535
  3034  001A8A                     l3529:
  3035                           
  3036                           ;main.c: 583:             UART_printf("\r\n Solo se permiten numeros del 1 al 3 \r\n");
  3037  001A8A  0E07               	movlw	low STR_24
  3038  001A8C  6E02               	movwf	UART_printf@cadena^0,c
  3039  001A8E  0E7D               	movlw	high STR_24
  3040  001A90  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3041  001A92  ECD8  F00E         	call	_UART_printf	;wreg free
  3042                           
  3043                           ;main.c: 584:             break;
  3044  001A96  EF6E  F00D         	goto	l3535
  3045  001A9A                     l3533:
  3046  001A9A  505D               	movf	sistemaPrincipal@opcion^0,w,c
  3047  001A9C  6E5B               	movwf	??_sistemaPrincipal^0,c
  3048  001A9E  6A5C               	clrf	(??_sistemaPrincipal+1)^0,c
  3049                           
  3050                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3051                           ; Switch size 1, requested type "simple"
  3052                           ; Number of cases is 1, Range of values is 0 to 0
  3053                           ; switch strategies available:
  3054                           ; Name         Instructions Cycles
  3055                           ; simple_byte            4     3 (average)
  3056                           ;	Chosen strategy is simple_byte
  3057  001AA0  505C               	movf	(??_sistemaPrincipal+1)^0,w,c
  3058  001AA2  0A00               	xorlw	0	; case 0
  3059  001AA4  B4D8               	btfsc	status,2,c
  3060  001AA6  EF57  F00D         	goto	l3697
  3061  001AAA  EF45  F00D         	goto	l3529
  3062  001AAE                     l3697:
  3063                           
  3064                           ; Switch size 1, requested type "simple"
  3065                           ; Number of cases is 5, Range of values is 1 to 5
  3066                           ; switch strategies available:
  3067                           ; Name         Instructions Cycles
  3068                           ; simple_byte           16     9 (average)
  3069                           ;	Chosen strategy is simple_byte
  3070  001AAE  505B               	movf	??_sistemaPrincipal^0,w,c
  3071  001AB0  0A01               	xorlw	1	; case 1
  3072  001AB2  B4D8               	btfsc	status,2,c
  3073  001AB4  EF31  F00D         	goto	l3517
  3074  001AB8  0A03               	xorlw	3	; case 2
  3075  001ABA  B4D8               	btfsc	status,2,c
  3076  001ABC  EF35  F00D         	goto	l3519
  3077  001AC0  0A01               	xorlw	1	; case 3
  3078  001AC2  B4D8               	btfsc	status,2,c
  3079  001AC4  EF39  F00D         	goto	l3521
  3080  001AC8  0A07               	xorlw	7	; case 4
  3081  001ACA  B4D8               	btfsc	status,2,c
  3082  001ACC  EF3D  F00D         	goto	l3523
  3083  001AD0  0A01               	xorlw	1	; case 5
  3084  001AD2  B4D8               	btfsc	status,2,c
  3085  001AD4  EF41  F00D         	goto	l3527
  3086  001AD8  EF45  F00D         	goto	l3529
  3087  001ADC                     l3535:
  3088                           
  3089                           ;main.c: 587:     mostrarMenu();
  3090  001ADC  EC45  F00E         	call	_mostrarMenu	;wreg free
  3091  001AE0                     
  3092                           ;main.c: 588:     PIE1bits.RCIE = 1;
  3093  001AE0  8A9D               	bsf	157,5,c	;volatile
  3094  001AE2  0012               	return		;funcret
  3095  001AE4                     __end_of_sistemaPrincipal:
  3096                           	opt callstack 0
  3097                           
  3098 ;; *************** function _setTiempoRegar *****************
  3099 ;; Defined at:
  3100 ;;		line 398 in file "main.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;		None
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;  i               2   18[COMRAM] int 
  3105 ;;  i               2   16[COMRAM] int 
  3106 ;;  Rx              1   21[COMRAM] unsigned char 
  3107 ;;  datoCapturad    1   20[COMRAM] unsigned char 
  3108 ;;  hora            1   15[COMRAM] unsigned char 
  3109 ;;  tiempoRegar     1   14[COMRAM] unsigned char 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  1    wreg      void 
  3112 ;; Registers used:
  3113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3119 ;;      Params:         0       0       0       0       0       0       0       0       0
  3120 ;;      Locals:         8       0       0       0       0       0       0       0       0
  3121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3122 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3123 ;;Total ram usage:        8 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; Hardware stack levels required when called:    5
  3126 ;; This function calls:
  3127 ;;		_UART_printf
  3128 ;;		_UART_read
  3129 ;;		_UART_write
  3130 ;;		_escribeHorariosMemoria
  3131 ;; This function is called by:
  3132 ;;		_sistemaPrincipal
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           	psect	text9
  3137  0005DC                     __ptext9:
  3138                           	opt callstack 0
  3139  0005DC                     _setTiempoRegar:
  3140                           	opt callstack 24
  3141  0005DC                     
  3142                           ;main.c: 400:     unsigned char hora;;main.c: 401:     unsigned char tiempoRegar;;main.c
      +                          : 402:     unsigned char Rx;;main.c: 403:     char datoCapturado = 0;
  3143  0005DC  0E00               	movlw	0
  3144  0005DE  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3145  0005E0                     
  3146                           ;main.c: 405:     UART_printf("\r\n TIEMPO DE REGADO \r\n");
  3147  0005E0  0EA4               	movlw	low STR_9
  3148  0005E2  6E02               	movwf	UART_printf@cadena^0,c
  3149  0005E4  0E7F               	movlw	high STR_9
  3150  0005E6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3151  0005E8  ECD8  F00E         	call	_UART_printf	;wreg free
  3152  0005EC                     
  3153                           ;main.c: 406:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  3154  0005EC  0E46               	movlw	low STR_6
  3155  0005EE  6E02               	movwf	UART_printf@cadena^0,c
  3156  0005F0  0E7C               	movlw	high STR_6
  3157  0005F2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3158  0005F4  ECD8  F00E         	call	_UART_printf	;wreg free
  3159                           
  3160                           ;main.c: 408:     for (int i = 0; i < 2; i++) {
  3161  0005F8  0E00               	movlw	0
  3162  0005FA  6E12               	movwf	(setTiempoRegar@i+1)^0,c
  3163  0005FC  0E00               	movlw	0
  3164  0005FE  6E11               	movwf	setTiempoRegar@i^0,c
  3165  000600                     l3229:
  3166                           
  3167                           ;main.c: 409:         Rx = UART_read();
  3168  000600  EC35  F00F         	call	_UART_read	;wreg free
  3169  000604  6E16               	movwf	setTiempoRegar@Rx^0,c
  3170  000606                     
  3171                           ;main.c: 410:         if (Rx >= 48 && Rx <= 57) {
  3172  000606  0E2F               	movlw	47
  3173  000608  6416               	cpfsgt	setTiempoRegar@Rx^0,c
  3174  00060A  EF09  F003         	goto	u2471
  3175  00060E  EF0B  F003         	goto	u2470
  3176  000612                     u2471:
  3177  000612  EF2E  F003         	goto	l3249
  3178  000616                     u2470:
  3179  000616  0E3A               	movlw	58
  3180  000618  6016               	cpfslt	setTiempoRegar@Rx^0,c
  3181  00061A  EF11  F003         	goto	u2481
  3182  00061E  EF13  F003         	goto	u2480
  3183  000622                     u2481:
  3184  000622  EF2E  F003         	goto	l3249
  3185  000626                     u2480:
  3186  000626                     
  3187                           ;main.c: 411:             if (!i) {
  3188  000626  5011               	movf	setTiempoRegar@i^0,w,c
  3189  000628  1012               	iorwf	(setTiempoRegar@i+1)^0,w,c
  3190  00062A  A4D8               	btfss	status,2,c
  3191  00062C  EF1A  F003         	goto	u2491
  3192  000630  EF1C  F003         	goto	u2490
  3193  000634                     u2491:
  3194  000634  EF26  F003         	goto	l3243
  3195  000638                     u2490:
  3196  000638                     
  3197                           ;main.c: 412:                 Rx -= 48;
  3198  000638  0E30               	movlw	48
  3199  00063A  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  3200  00063C                     
  3201                           ;main.c: 413:                 hora = Rx;
  3202  00063C  C016  F010         	movff	setTiempoRegar@Rx,setTiempoRegar@hora
  3203  000640                     
  3204                           ;main.c: 414:                 hora *= 10;
  3205  000640  0E0A               	movlw	10
  3206  000642  0210               	mulwf	setTiempoRegar@hora^0,c
  3207  000644  50F3               	movf	prodl,w,c
  3208  000646  6E10               	movwf	setTiempoRegar@hora^0,c
  3209                           
  3210                           ;main.c: 415:             } else {
  3211  000648  EF35  F003         	goto	l3253
  3212  00064C                     l3243:
  3213                           
  3214                           ;main.c: 416:                 datoCapturado = 1;
  3215  00064C  0E01               	movlw	1
  3216  00064E  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3217  000650                     
  3218                           ;main.c: 417:                 Rx -= 48;
  3219  000650  0E30               	movlw	48
  3220  000652  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  3221  000654                     
  3222                           ;main.c: 418:                 hora += Rx;
  3223  000654  5016               	movf	setTiempoRegar@Rx^0,w,c
  3224  000656  2610               	addwf	setTiempoRegar@hora^0,f,c
  3225  000658  EF35  F003         	goto	l3253
  3226  00065C                     l3249:
  3227                           
  3228                           ;main.c: 421:             datoCapturado = 0;
  3229  00065C  0E00               	movlw	0
  3230  00065E  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3231  000660                     
  3232                           ;main.c: 423:             UART_write('F');
  3233  000660  0E46               	movlw	70
  3234  000662  EC4D  F011         	call	_UART_write
  3235                           
  3236                           ;main.c: 424:             break;
  3237  000666  EF45  F003         	goto	l3257
  3238  00066A                     l3253:
  3239                           
  3240                           ;main.c: 426:     }
  3241  00066A  4A11               	infsnz	setTiempoRegar@i^0,f,c
  3242  00066C  2A12               	incf	(setTiempoRegar@i+1)^0,f,c
  3243  00066E  BE12               	btfsc	(setTiempoRegar@i+1)^0,7,c
  3244  000670  EF43  F003         	goto	u2501
  3245  000674  5012               	movf	(setTiempoRegar@i+1)^0,w,c
  3246  000676  E109               	bnz	u2500
  3247  000678  0E02               	movlw	2
  3248  00067A  5C11               	subwf	setTiempoRegar@i^0,w,c
  3249  00067C  A0D8               	btfss	status,0,c
  3250  00067E  EF43  F003         	goto	u2501
  3251  000682  EF45  F003         	goto	u2500
  3252  000686                     u2501:
  3253  000686  EF00  F003         	goto	l3229
  3254  00068A                     u2500:
  3255  00068A                     l3257:
  3256                           
  3257                           ;main.c: 428:     if (datoCapturado && !esperandoDatos) {
  3258  00068A  5015               	movf	setTiempoRegar@datoCapturado^0,w,c
  3259  00068C  B4D8               	btfsc	status,2,c
  3260  00068E  EF4B  F003         	goto	u2511
  3261  000692  EF4D  F003         	goto	u2510
  3262  000696                     u2511:
  3263  000696  EFD1  F003         	goto	l305
  3264  00069A                     u2510:
  3265  00069A  505E               	movf	_esperandoDatos^0,w,c
  3266  00069C  A4D8               	btfss	status,2,c
  3267  00069E  EF53  F003         	goto	u2521
  3268  0006A2  EF55  F003         	goto	u2520
  3269  0006A6                     u2521:
  3270  0006A6  EFD1  F003         	goto	l305
  3271  0006AA                     u2520:
  3272  0006AA                     
  3273                           ;main.c: 430:         UART_printf("\r\n Ingrese los minutos que desee que se riegue en e
      +                          se horario ej: 15 \r\n");
  3274  0006AA  0EC7               	movlw	low STR_11
  3275  0006AC  6E02               	movwf	UART_printf@cadena^0,c
  3276  0006AE  0E7B               	movlw	high STR_11
  3277  0006B0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3278  0006B2  ECD8  F00E         	call	_UART_printf	;wreg free
  3279  0006B6                     
  3280                           ;main.c: 432:         for (int i = 0; i < 2; i++) {
  3281  0006B6  0E00               	movlw	0
  3282  0006B8  6E14               	movwf	(setTiempoRegar@i_834+1)^0,c
  3283  0006BA  0E00               	movlw	0
  3284  0006BC  6E13               	movwf	setTiempoRegar@i_834^0,c
  3285  0006BE                     l3269:
  3286                           
  3287                           ;main.c: 433:             Rx = UART_read();
  3288  0006BE  EC35  F00F         	call	_UART_read	;wreg free
  3289  0006C2  6E16               	movwf	setTiempoRegar@Rx^0,c
  3290  0006C4                     
  3291                           ;main.c: 434:             if (Rx >= 48 && Rx <= 57) {
  3292  0006C4  0E2F               	movlw	47
  3293  0006C6  6416               	cpfsgt	setTiempoRegar@Rx^0,c
  3294  0006C8  EF68  F003         	goto	u2531
  3295  0006CC  EF6A  F003         	goto	u2530
  3296  0006D0                     u2531:
  3297  0006D0  EF8D  F003         	goto	l3289
  3298  0006D4                     u2530:
  3299  0006D4  0E3A               	movlw	58
  3300  0006D6  6016               	cpfslt	setTiempoRegar@Rx^0,c
  3301  0006D8  EF70  F003         	goto	u2541
  3302  0006DC  EF72  F003         	goto	u2540
  3303  0006E0                     u2541:
  3304  0006E0  EF8D  F003         	goto	l3289
  3305  0006E4                     u2540:
  3306  0006E4                     
  3307                           ;main.c: 435:                 if (!i) {
  3308  0006E4  5013               	movf	setTiempoRegar@i_834^0,w,c
  3309  0006E6  1014               	iorwf	(setTiempoRegar@i_834+1)^0,w,c
  3310  0006E8  A4D8               	btfss	status,2,c
  3311  0006EA  EF79  F003         	goto	u2551
  3312  0006EE  EF7B  F003         	goto	u2550
  3313  0006F2                     u2551:
  3314  0006F2  EF85  F003         	goto	l3283
  3315  0006F6                     u2550:
  3316  0006F6                     
  3317                           ;main.c: 436:                     Rx -= 48;
  3318  0006F6  0E30               	movlw	48
  3319  0006F8  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  3320  0006FA                     
  3321                           ;main.c: 437:                     tiempoRegar = Rx;
  3322  0006FA  C016  F00F         	movff	setTiempoRegar@Rx,setTiempoRegar@tiempoRegar
  3323  0006FE                     
  3324                           ;main.c: 438:                     tiempoRegar *= 10;
  3325  0006FE  0E0A               	movlw	10
  3326  000700  020F               	mulwf	setTiempoRegar@tiempoRegar^0,c
  3327  000702  50F3               	movf	prodl,w,c
  3328  000704  6E0F               	movwf	setTiempoRegar@tiempoRegar^0,c
  3329                           
  3330                           ;main.c: 439:                 } else {
  3331  000706  EF94  F003         	goto	l3293
  3332  00070A                     l3283:
  3333                           
  3334                           ;main.c: 440:                     datoCapturado = 1;
  3335  00070A  0E01               	movlw	1
  3336  00070C  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3337  00070E                     
  3338                           ;main.c: 441:                     Rx -= 48;
  3339  00070E  0E30               	movlw	48
  3340  000710  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  3341  000712                     
  3342                           ;main.c: 442:                     tiempoRegar += Rx;
  3343  000712  5016               	movf	setTiempoRegar@Rx^0,w,c
  3344  000714  260F               	addwf	setTiempoRegar@tiempoRegar^0,f,c
  3345  000716  EF94  F003         	goto	l3293
  3346  00071A                     l3289:
  3347                           
  3348                           ;main.c: 445:                 datoCapturado = 0;
  3349  00071A  0E00               	movlw	0
  3350  00071C  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3351  00071E                     
  3352                           ;main.c: 447:                 UART_write('F');
  3353  00071E  0E46               	movlw	70
  3354  000720  EC4D  F011         	call	_UART_write
  3355                           
  3356                           ;main.c: 448:                 break;
  3357  000724  EFA4  F003         	goto	l3297
  3358  000728                     l3293:
  3359                           
  3360                           ;main.c: 450:         }
  3361  000728  4A13               	infsnz	setTiempoRegar@i_834^0,f,c
  3362  00072A  2A14               	incf	(setTiempoRegar@i_834+1)^0,f,c
  3363  00072C  BE14               	btfsc	(setTiempoRegar@i_834+1)^0,7,c
  3364  00072E  EFA2  F003         	goto	u2561
  3365  000732  5014               	movf	(setTiempoRegar@i_834+1)^0,w,c
  3366  000734  E109               	bnz	u2560
  3367  000736  0E02               	movlw	2
  3368  000738  5C13               	subwf	setTiempoRegar@i_834^0,w,c
  3369  00073A  A0D8               	btfss	status,0,c
  3370  00073C  EFA2  F003         	goto	u2561
  3371  000740  EFA4  F003         	goto	u2560
  3372  000744                     u2561:
  3373  000744  EF5F  F003         	goto	l3269
  3374  000748                     u2560:
  3375  000748                     l3297:
  3376                           
  3377                           ;main.c: 452:         if (datoCapturado && !esperandoDatos) {
  3378  000748  5015               	movf	setTiempoRegar@datoCapturado^0,w,c
  3379  00074A  B4D8               	btfsc	status,2,c
  3380  00074C  EFAA  F003         	goto	u2571
  3381  000750  EFAC  F003         	goto	u2570
  3382  000754                     u2571:
  3383  000754  EFD1  F003         	goto	l305
  3384  000758                     u2570:
  3385  000758  505E               	movf	_esperandoDatos^0,w,c
  3386  00075A  A4D8               	btfss	status,2,c
  3387  00075C  EFB2  F003         	goto	u2581
  3388  000760  EFB4  F003         	goto	u2580
  3389  000764                     u2581:
  3390  000764  EFD1  F003         	goto	l305
  3391  000768                     u2580:
  3392  000768                     
  3393                           ;main.c: 454:             UART_printf("\r\n Minutos de riego establecidos! \r\n");
  3394  000768  0ECF               	movlw	low STR_12
  3395  00076A  6E02               	movwf	UART_printf@cadena^0,c
  3396  00076C  0E7D               	movlw	high STR_12
  3397  00076E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3398  000770  ECD8  F00E         	call	_UART_printf	;wreg free
  3399  000774                     
  3400                           ;main.c: 456:             horarios[hora].tiempoRegar = tiempoRegar;
  3401  000774  5010               	movf	setTiempoRegar@hora^0,w,c
  3402  000776  0D03               	mullw	3
  3403  000778  0E02               	movlw	low (_horarios+2)
  3404  00077A  24F3               	addwf	243,w,c
  3405  00077C  6ED9               	movwf	fsr2l,c
  3406  00077E  0E01               	movlw	high (_horarios+2)
  3407  000780  20F4               	addwfc	prodh,w,c
  3408  000782  6EDA               	movwf	fsr2h,c
  3409  000784  C00F  FFDF         	movff	setTiempoRegar@tiempoRegar,indf2
  3410  000788                     
  3411                           ;main.c: 457:             minutosRegar = horarios[hora].tiempoRegar;
  3412  000788  5010               	movf	setTiempoRegar@hora^0,w,c
  3413  00078A  0D03               	mullw	3
  3414  00078C  0E02               	movlw	low (_horarios+2)
  3415  00078E  24F3               	addwf	243,w,c
  3416  000790  6ED9               	movwf	fsr2l,c
  3417  000792  0E01               	movlw	high (_horarios+2)
  3418  000794  20F4               	addwfc	prodh,w,c
  3419  000796  6EDA               	movwf	fsr2h,c
  3420  000798  50DF               	movf	indf2,w,c
  3421  00079A  0100               	movlb	0	; () banked
  3422  00079C  6F85               	movwf	_minutosRegar& (0+255),b
  3423  00079E                     
  3424                           ; BSR set to: 0
  3425                           ;main.c: 459:             escribeHorariosMemoria();
  3426  00079E  EC94  F009         	call	_escribeHorariosMemoria	;wreg free
  3427  0007A2                     l305:
  3428  0007A2  0012               	return		;funcret
  3429  0007A4                     __end_of_setTiempoRegar:
  3430                           	opt callstack 0
  3431                           
  3432 ;; *************** function _mostrarMenu *****************
  3433 ;; Defined at:
  3434 ;;		line 540 in file "main.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;		None
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;		None
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  1    wreg      void 
  3441 ;; Registers used:
  3442 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3448 ;;      Params:         0       0       0       0       0       0       0       0       0
  3449 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3450 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3451 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3452 ;;Total ram usage:        0 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; Hardware stack levels required when called:    3
  3455 ;; This function calls:
  3456 ;;		_UART_printf
  3457 ;; This function is called by:
  3458 ;;		_sistemaPrincipal
  3459 ;;		_sistemaRegado
  3460 ;;		_main
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           	psect	text10
  3465  001C8A                     __ptext10:
  3466                           	opt callstack 0
  3467  001C8A                     _mostrarMenu:
  3468                           	opt callstack 26
  3469  001C8A                     
  3470                           ;main.c: 542:     UART_printf("\r\n Ingresa una opcion a Realizar: \r\n");
  3471  001C8A  0EF4               	movlw	low STR_16
  3472  001C8C  6E02               	movwf	UART_printf@cadena^0,c
  3473  001C8E  0E7D               	movlw	high STR_16
  3474  001C90  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3475  001C92  ECD8  F00E         	call	_UART_printf	;wreg free
  3476                           
  3477                           ;main.c: 543:     UART_printf("\r\n 1. Fijar Hora Actual \r\n");
  3478  001C96  0E3D               	movlw	low STR_17
  3479  001C98  6E02               	movwf	UART_printf@cadena^0,c
  3480  001C9A  0E7F               	movlw	high STR_17
  3481  001C9C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3482  001C9E  ECD8  F00E         	call	_UART_printf	;wreg free
  3483                           
  3484                           ;main.c: 544:     UART_printf("\r\n 2. Asignar Horarios para regar \r\n");
  3485  001CA2  0E3E               	movlw	low STR_18
  3486  001CA4  6E02               	movwf	UART_printf@cadena^0,c
  3487  001CA6  0E7E               	movlw	high STR_18
  3488  001CA8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3489  001CAA  ECD8  F00E         	call	_UART_printf	;wreg free
  3490                           
  3491                           ;main.c: 545:     UART_printf("\r\n 3. Programar tiempo de riego en un horario \r\n");
  3492  001CAE  0EAB               	movlw	low STR_19
  3493  001CB0  6E02               	movwf	UART_printf@cadena^0,c
  3494  001CB2  0E7C               	movlw	high STR_19
  3495  001CB4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3496  001CB6  ECD8  F00E         	call	_UART_printf	;wreg free
  3497                           
  3498                           ;main.c: 546:     UART_printf("\r\n 4. Dame datos del sistema \r\n");
  3499  001CBA  0EA5               	movlw	low STR_20
  3500  001CBC  6E02               	movwf	UART_printf@cadena^0,c
  3501  001CBE  0E7E               	movlw	high STR_20
  3502  001CC0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3503  001CC2  ECD8  F00E         	call	_UART_printf	;wreg free
  3504                           
  3505                           ;main.c: 547:     UART_printf("\r\n 5. Mostrar valores sensores \r\n");
  3506  001CC6  0E63               	movlw	low STR_21
  3507  001CC8  6E02               	movwf	UART_printf@cadena^0,c
  3508  001CCA  0E7E               	movlw	high STR_21
  3509  001CCC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3510  001CCE  ECD8  F00E         	call	_UART_printf	;wreg free
  3511                           
  3512                           ;main.c: 548:     UART_printf("\r\n Opcion:  \r");
  3513  001CD2  0EF0               	movlw	low STR_22
  3514  001CD4  6E02               	movwf	UART_printf@cadena^0,c
  3515  001CD6  0E7F               	movlw	high STR_22
  3516  001CD8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3517  001CDA  ECD8  F00E         	call	_UART_printf	;wreg free
  3518                           
  3519                           ;main.c: 549:     UART_printf("\r\n");
  3520  001CDE  0E6F               	movlw	low (STR_8+23)
  3521  001CE0  6E02               	movwf	UART_printf@cadena^0,c
  3522  001CE2  0E7F               	movlw	high (STR_8+23)
  3523  001CE4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3524  001CE6  ECD8  F00E         	call	_UART_printf	;wreg free
  3525  001CEA  0012               	return		;funcret
  3526  001CEC                     __end_of_mostrarMenu:
  3527                           	opt callstack 0
  3528                           
  3529 ;; *************** function _mostrarDatosSensoresWIFI *****************
  3530 ;; Defined at:
  3531 ;;		line 733 in file "main.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;		None
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;  i               2   72[BANK0 ] int 
  3536 ;;  buffer         50   20[BANK0 ] unsigned char [50]
  3537 ;;  humedad         1   71[BANK0 ] unsigned char 
  3538 ;;  temperatura     1   70[BANK0 ] unsigned char 
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  1    wreg      void 
  3541 ;; Registers used:
  3542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3548 ;;      Params:         0       0       0       0       0       0       0       0       0
  3549 ;;      Locals:         0      54       0       0       0       0       0       0       0
  3550 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3551 ;;      Totals:         2      54       0       0       0       0       0       0       0
  3552 ;;Total ram usage:       56 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:    9
  3555 ;; This function calls:
  3556 ;;		_UART_printf
  3557 ;;		_UART_write
  3558 ;;		___wmul
  3559 ;;		_dameTemperaturaHumedad
  3560 ;;		_lecturaWifi
  3561 ;;		_sprintf
  3562 ;; This function is called by:
  3563 ;;		_sistemaPrincipal
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           	psect	text11
  3568  000EFE                     __ptext11:
  3569                           	opt callstack 0
  3570  000EFE                     _mostrarDatosSensoresWIFI:
  3571                           	opt callstack 20
  3572  000EFE                     
  3573                           ;main.c: 736:     char buffer[50];;main.c: 737:     unsigned char temperatura, humedad;;
      +                          main.c: 739:     lecturaWifi();
  3574  000EFE  ECA6  F008         	call	_lecturaWifi	;wreg free
  3575  000F02                     
  3576                           ;main.c: 741:     UART_write('I');
  3577  000F02  0E49               	movlw	73
  3578  000F04  EC4D  F011         	call	_UART_write
  3579  000F08                     
  3580                           ;main.c: 744:     if (peticionLecturaSensores) {
  3581  000F08  0100               	movlb	0	; () banked
  3582  000F0A  5182               	movf	_peticionLecturaSensores& (0+255),w,b
  3583  000F0C  B4D8               	btfsc	status,2,c
  3584  000F0E  EF8B  F007         	goto	u2601
  3585  000F12  EF8D  F007         	goto	u2600
  3586  000F16                     u2601:
  3587  000F16  EFEA  F007         	goto	l3357
  3588  000F1A                     u2600:
  3589  000F1A                     
  3590                           ; BSR set to: 0
  3591                           ;main.c: 746:         for (int i = 0; i < 3; i++) {
  3592  000F1A  0E00               	movlw	0
  3593  000F1C  6FF7               	movwf	(mostrarDatosSensoresWIFI@i+1)& (0+255),b
  3594  000F1E  0E00               	movlw	0
  3595  000F20  6FF6               	movwf	mostrarDatosSensoresWIFI@i& (0+255),b
  3596  000F22                     l3343:
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;main.c: 748:             if (sensores[i].humedadMedida >= 60) {
  3600  000F22  C0F6  F001         	movff	mostrarDatosSensoresWIFI@i,___wmul@multiplier
  3601  000F26  C0F7  F002         	movff	mostrarDatosSensoresWIFI@i+1,___wmul@multiplier+1
  3602  000F2A  0E00               	movlw	0
  3603  000F2C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3604  000F2E  0E03               	movlw	3
  3605  000F30  6E03               	movwf	___wmul@multiplicand^0,c
  3606  000F32  ECFE  F010         	call	___wmul	;wreg free
  3607  000F36  0E60               	movlw	low _sensores
  3608  000F38  2401               	addwf	?___wmul^0,w,c
  3609  000F3A  6ED9               	movwf	fsr2l,c
  3610  000F3C  0E00               	movlw	high _sensores
  3611  000F3E  2002               	addwfc	(?___wmul+1)^0,w,c
  3612  000F40  6EDA               	movwf	fsr2h,c
  3613  000F42  0E01               	movlw	1
  3614  000F44  BEDB               	btfsc	plusw2,7,c
  3615  000F46  EFAF  F007         	goto	u2611
  3616  000F4A  0E01               	movlw	1
  3617  000F4C  50DB               	movf	plusw2,w,c
  3618  000F4E  E109               	bnz	u2610
  3619  000F50  0E3C               	movlw	60
  3620  000F52  5CDE               	subwf	postinc2,w,c
  3621  000F54  A0D8               	btfss	status,0,c
  3622  000F56  EFAF  F007         	goto	u2611
  3623  000F5A  EFB1  F007         	goto	u2610
  3624  000F5E                     u2611:
  3625  000F5E  EFC8  F007         	goto	l3349
  3626  000F62                     u2610:
  3627  000F62                     
  3628                           ;main.c: 749:                 sprintf(buffer, "\r\n\nEl sensor %d detecta tierra seca\r\
      +                          n", i);
  3629  000F62  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3630  000F64  0100               	movlb	0	; () banked
  3631  000F66  6FAE               	movwf	sprintf@s& (0+255),b
  3632  000F68  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3633  000F6A  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3634  000F6C  0EA9               	movlw	low STR_32
  3635  000F6E  6FB0               	movwf	sprintf@fmt& (0+255),b
  3636  000F70  0E7D               	movlw	high STR_32
  3637  000F72  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3638  000F74  C0F6  F0B2         	movff	mostrarDatosSensoresWIFI@i,?_sprintf+4
  3639  000F78  C0F7  F0B3         	movff	mostrarDatosSensoresWIFI@i+1,?_sprintf+5
  3640  000F7C  EC5F  F00F         	call	_sprintf	;wreg free
  3641  000F80                     l3347:
  3642                           
  3643                           ;main.c: 750:                 UART_printf(buffer);
  3644  000F80  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3645  000F82  6E02               	movwf	UART_printf@cadena^0,c
  3646  000F84  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3647  000F86  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3648  000F88  ECD8  F00E         	call	_UART_printf	;wreg free
  3649                           
  3650                           ;main.c: 753:             } else {
  3651  000F8C  EFD9  F007         	goto	l3353
  3652  000F90                     l3349:
  3653                           
  3654                           ;main.c: 754:                 sprintf(buffer, "\r\n\nEl sensor %d detecta tierra humeda\
      +                          r\n", i);
  3655  000F90  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3656  000F92  0100               	movlb	0	; () banked
  3657  000F94  6FAE               	movwf	sprintf@s& (0+255),b
  3658  000F96  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3659  000F98  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3660  000F9A  0E5B               	movlw	low STR_33
  3661  000F9C  6FB0               	movwf	sprintf@fmt& (0+255),b
  3662  000F9E  0E7D               	movlw	high STR_33
  3663  000FA0  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3664  000FA2  C0F6  F0B2         	movff	mostrarDatosSensoresWIFI@i,?_sprintf+4
  3665  000FA6  C0F7  F0B3         	movff	mostrarDatosSensoresWIFI@i+1,?_sprintf+5
  3666  000FAA  EC5F  F00F         	call	_sprintf	;wreg free
  3667  000FAE  EFC0  F007         	goto	l3347
  3668  000FB2                     l3353:
  3669                           
  3670                           ;main.c: 758:         }
  3671  000FB2  0100               	movlb	0	; () banked
  3672  000FB4  4BF6               	infsnz	mostrarDatosSensoresWIFI@i& (0+255),f,b
  3673  000FB6  2BF7               	incf	(mostrarDatosSensoresWIFI@i+1)& (0+255),f,b
  3674  000FB8                     
  3675                           ; BSR set to: 0
  3676  000FB8  BFF7               	btfsc	(mostrarDatosSensoresWIFI@i+1)& (0+255),7,b
  3677  000FBA  EFE8  F007         	goto	u2621
  3678  000FBE  51F7               	movf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  3679  000FC0  E109               	bnz	u2620
  3680  000FC2  0E03               	movlw	3
  3681  000FC4  5DF6               	subwf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  3682  000FC6  A0D8               	btfss	status,0,c
  3683  000FC8  EFE8  F007         	goto	u2621
  3684  000FCC  EFEA  F007         	goto	u2620
  3685  000FD0                     u2621:
  3686  000FD0  EF91  F007         	goto	l3343
  3687  000FD4                     u2620:
  3688  000FD4                     l3357:
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;main.c: 762:     dameTemperaturaHumedad(&humedad, &temperatura);
  3692  000FD4  0EF5               	movlw	low mostrarDatosSensoresWIFI@humedad
  3693  000FD6  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  3694  000FD8  0E00               	movlw	high mostrarDatosSensoresWIFI@humedad
  3695  000FDA  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  3696  000FDC  0EF4               	movlw	low mostrarDatosSensoresWIFI@temperatura
  3697  000FDE  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  3698  000FE0  0E00               	movlw	high mostrarDatosSensoresWIFI@temperatura
  3699  000FE2  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  3700  000FE4  ECEC  F00B         	call	_dameTemperaturaHumedad	;wreg free
  3701                           
  3702                           ;main.c: 764:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", humedad);
  3703  000FE8  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3704  000FEA  0100               	movlb	0	; () banked
  3705  000FEC  6FAE               	movwf	sprintf@s& (0+255),b
  3706  000FEE  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3707  000FF0  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3708  000FF2  0EC5               	movlw	low STR_29
  3709  000FF4  6FB0               	movwf	sprintf@fmt& (0+255),b
  3710  000FF6  0E7E               	movlw	high STR_29
  3711  000FF8  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3712  000FFA  C0F5  F0B2         	movff	mostrarDatosSensoresWIFI@humedad,?_sprintf+4
  3713  000FFE  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  3714  001000  EC5F  F00F         	call	_sprintf	;wreg free
  3715  001004                     
  3716                           ;main.c: 765:     UART_printf(buffer);
  3717  001004  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3718  001006  6E02               	movwf	UART_printf@cadena^0,c
  3719  001008  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3720  00100A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3721  00100C  ECD8  F00E         	call	_UART_printf	;wreg free
  3722  001010                     
  3723                           ;main.c: 766:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", temperatura);
  3724  001010  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3725  001012  0100               	movlb	0	; () banked
  3726  001014  6FAE               	movwf	sprintf@s& (0+255),b
  3727  001016  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3728  001018  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3729  00101A  0E04               	movlw	low STR_30
  3730  00101C  6FB0               	movwf	sprintf@fmt& (0+255),b
  3731  00101E  0E7F               	movlw	high STR_30
  3732  001020  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3733  001022  C0F4  F0B2         	movff	mostrarDatosSensoresWIFI@temperatura,?_sprintf+4
  3734  001026  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  3735  001028  EC5F  F00F         	call	_sprintf	;wreg free
  3736                           
  3737                           ;main.c: 767:     UART_printf(buffer);
  3738  00102C  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3739  00102E  6E02               	movwf	UART_printf@cadena^0,c
  3740  001030  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3741  001032  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3742  001034  ECD8  F00E         	call	_UART_printf	;wreg free
  3743  001038                     
  3744                           ;main.c: 769:     UART_write('I');
  3745  001038  0E49               	movlw	73
  3746  00103A  EC4D  F011         	call	_UART_write
  3747  00103E  0012               	return		;funcret
  3748  001040                     __end_of_mostrarDatosSensoresWIFI:
  3749                           	opt callstack 0
  3750                           
  3751 ;; *************** function _lecturaWifi *****************
  3752 ;; Defined at:
  3753 ;;		line 489 in file "main.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;		None
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;  i               2   14[COMRAM] int 
  3758 ;;  Rx              1   13[COMRAM] unsigned char 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  1    wreg      void 
  3761 ;; Registers used:
  3762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3768 ;;      Params:         0       0       0       0       0       0       0       0       0
  3769 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3770 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3771 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3772 ;;Total ram usage:        3 bytes
  3773 ;; Hardware stack levels used:    1
  3774 ;; Hardware stack levels required when called:    3
  3775 ;; This function calls:
  3776 ;;		_UART_printf
  3777 ;;		_UART_read
  3778 ;;		_UART_write
  3779 ;;		___wmul
  3780 ;;		_restablecerDatosSensor
  3781 ;; This function is called by:
  3782 ;;		_sistemaRegado
  3783 ;;		_mostrarDatosSensoresWIFI
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           	psect	text12
  3788  00114C                     __ptext12:
  3789                           	opt callstack 0
  3790  00114C                     _lecturaWifi:
  3791                           	opt callstack 26
  3792  00114C                     
  3793                           ;main.c: 491:     PIE1bits.RCIE = 0;
  3794  00114C  9A9D               	bcf	157,5,c	;volatile
  3795  00114E                     
  3796                           ;main.c: 495:     restablecerDatosSensor();
  3797  00114E  EC76  F00E         	call	_restablecerDatosSensor	;wreg free
  3798  001152                     
  3799                           ;main.c: 497:     UART_write('R');
  3800  001152  0E52               	movlw	82
  3801  001154  EC4D  F011         	call	_UART_write
  3802  001158                     
  3803                           ;main.c: 499:     UART_printf("\r\nSolicitando Muestreo de sensores\r\n\n");
  3804  001158  0E83               	movlw	low STR_13
  3805  00115A  6E02               	movwf	UART_printf@cadena^0,c
  3806  00115C  0E7D               	movlw	high STR_13
  3807  00115E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3808  001160  ECD8  F00E         	call	_UART_printf	;wreg free
  3809  001164                     
  3810                           ;main.c: 501:     Rx = UART_read();
  3811  001164  EC35  F00F         	call	_UART_read	;wreg free
  3812  001168  6E0E               	movwf	lecturaWifi@Rx^0,c
  3813  00116A                     
  3814                           ;main.c: 503:     if (Rx == 'O') {
  3815  00116A  0E4F               	movlw	79
  3816  00116C  180E               	xorwf	lecturaWifi@Rx^0,w,c
  3817  00116E  A4D8               	btfss	status,2,c
  3818  001170  EFBC  F008         	goto	u2141
  3819  001174  EFBE  F008         	goto	u2140
  3820  001178                     u2141:
  3821  001178  EF1A  F009         	goto	l2983
  3822  00117C                     u2140:
  3823  00117C                     
  3824                           ;main.c: 505:         peticionLecturaSensores = 1;
  3825  00117C  0E01               	movlw	1
  3826  00117E  0100               	movlb	0	; () banked
  3827  001180  6F82               	movwf	_peticionLecturaSensores& (0+255),b
  3828                           
  3829                           ;main.c: 507:         for (int i = 0; i < 3; i++) {
  3830  001182  0E00               	movlw	0
  3831  001184  6E10               	movwf	(lecturaWifi@i+1)^0,c
  3832  001186  0E00               	movlw	0
  3833  001188  6E0F               	movwf	lecturaWifi@i^0,c
  3834  00118A                     l2965:
  3835                           
  3836                           ;main.c: 509:             UART_printf("\r\nDame DATOS DEL SENSOR :\r\n");
  3837  00118A  0E21               	movlw	low STR_14
  3838  00118C  6E02               	movwf	UART_printf@cadena^0,c
  3839  00118E  0E7F               	movlw	high STR_14
  3840  001190  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3841  001192  ECD8  F00E         	call	_UART_printf	;wreg free
  3842  001196                     
  3843                           ;main.c: 511:             Rx = UART_read();
  3844  001196  EC35  F00F         	call	_UART_read	;wreg free
  3845  00119A  6E0E               	movwf	lecturaWifi@Rx^0,c
  3846  00119C                     
  3847                           ;main.c: 512:             Rx -= 48;
  3848  00119C  0E30               	movlw	48
  3849  00119E  5E0E               	subwf	lecturaWifi@Rx^0,f,c
  3850  0011A0                     
  3851                           ;main.c: 514:             if (Rx == 1)
  3852  0011A0  040E               	decf	lecturaWifi@Rx^0,w,c
  3853  0011A2  A4D8               	btfss	status,2,c
  3854  0011A4  EFD6  F008         	goto	u2151
  3855  0011A8  EFD8  F008         	goto	u2150
  3856  0011AC                     u2151:
  3857  0011AC  EFEE  F008         	goto	l2975
  3858  0011B0                     u2150:
  3859  0011B0                     
  3860                           ;main.c: 515:                 sensores[i].humedadMedida = 60;
  3861  0011B0  C00F  F001         	movff	lecturaWifi@i,___wmul@multiplier
  3862  0011B4  C010  F002         	movff	lecturaWifi@i+1,___wmul@multiplier+1
  3863  0011B8  0E00               	movlw	0
  3864  0011BA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3865  0011BC  0E03               	movlw	3
  3866  0011BE  6E03               	movwf	___wmul@multiplicand^0,c
  3867  0011C0  ECFE  F010         	call	___wmul	;wreg free
  3868  0011C4  0E60               	movlw	low _sensores
  3869  0011C6  2401               	addwf	?___wmul^0,w,c
  3870  0011C8  6ED9               	movwf	fsr2l,c
  3871  0011CA  0E00               	movlw	high _sensores
  3872  0011CC  2002               	addwfc	(?___wmul+1)^0,w,c
  3873  0011CE  6EDA               	movwf	fsr2h,c
  3874  0011D0  0E3C               	movlw	60
  3875  0011D2  6EDE               	movwf	postinc2,c
  3876  0011D4  0E00               	movlw	0
  3877  0011D6  6EDD               	movwf	postdec2,c
  3878  0011D8  EF02  F009         	goto	l2977
  3879  0011DC                     l2975:
  3880                           
  3881                           ;main.c: 517:                 sensores[i].humedadMedida = 0;
  3882  0011DC  C00F  F001         	movff	lecturaWifi@i,___wmul@multiplier
  3883  0011E0  C010  F002         	movff	lecturaWifi@i+1,___wmul@multiplier+1
  3884  0011E4  0E00               	movlw	0
  3885  0011E6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3886  0011E8  0E03               	movlw	3
  3887  0011EA  6E03               	movwf	___wmul@multiplicand^0,c
  3888  0011EC  ECFE  F010         	call	___wmul	;wreg free
  3889  0011F0  0E60               	movlw	low _sensores
  3890  0011F2  2401               	addwf	?___wmul^0,w,c
  3891  0011F4  6ED9               	movwf	fsr2l,c
  3892  0011F6  0E00               	movlw	high _sensores
  3893  0011F8  2002               	addwfc	(?___wmul+1)^0,w,c
  3894  0011FA  6EDA               	movwf	fsr2h,c
  3895  0011FC  0E00               	movlw	0
  3896  0011FE  6EDE               	movwf	postinc2,c
  3897  001200  0E00               	movlw	0
  3898  001202  6EDD               	movwf	postdec2,c
  3899  001204                     l2977:
  3900                           
  3901                           ;main.c: 519:         }
  3902  001204  4A0F               	infsnz	lecturaWifi@i^0,f,c
  3903  001206  2A10               	incf	(lecturaWifi@i+1)^0,f,c
  3904  001208  BE10               	btfsc	(lecturaWifi@i+1)^0,7,c
  3905  00120A  EF10  F009         	goto	u2161
  3906  00120E  5010               	movf	(lecturaWifi@i+1)^0,w,c
  3907  001210  E109               	bnz	u2160
  3908  001212  0E03               	movlw	3
  3909  001214  5C0F               	subwf	lecturaWifi@i^0,w,c
  3910  001216  A0D8               	btfss	status,0,c
  3911  001218  EF10  F009         	goto	u2161
  3912  00121C  EF12  F009         	goto	u2160
  3913  001220                     u2161:
  3914  001220  EFC5  F008         	goto	l2965
  3915  001224                     u2160:
  3916  001224                     
  3917                           ;main.c: 521:         UART_printf("\r\nSensores Leidos con Exito!\r\n\n");
  3918  001224  0E85               	movlw	low STR_15
  3919  001226  6E02               	movwf	UART_printf@cadena^0,c
  3920  001228  0E7E               	movlw	high STR_15
  3921  00122A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3922  00122C  ECD8  F00E         	call	_UART_printf	;wreg free
  3923                           
  3924                           ;main.c: 523:     } else {
  3925  001230  EF1D  F009         	goto	l2985
  3926  001234                     l2983:
  3927                           
  3928                           ;main.c: 524:         peticionLecturaSensores = 0;
  3929  001234  0E00               	movlw	0
  3930  001236  0100               	movlb	0	; () banked
  3931  001238  6F82               	movwf	_peticionLecturaSensores& (0+255),b
  3932  00123A                     l2985:
  3933                           
  3934                           ;main.c: 527:     PIE1bits.RCIE = 1;
  3935  00123A  8A9D               	bsf	157,5,c	;volatile
  3936  00123C  0012               	return		;funcret
  3937  00123E                     __end_of_lecturaWifi:
  3938                           	opt callstack 0
  3939                           
  3940 ;; *************** function _restablecerDatosSensor *****************
  3941 ;; Defined at:
  3942 ;;		line 484 in file "main.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;		None
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;  i               2   11[COMRAM] int 
  3947 ;; Return value:  Size  Location     Type
  3948 ;;                  1    wreg      void 
  3949 ;; Registers used:
  3950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3956 ;;      Params:         0       0       0       0       0       0       0       0       0
  3957 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3958 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3959 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3960 ;;Total ram usage:        2 bytes
  3961 ;; Hardware stack levels used:    1
  3962 ;; Hardware stack levels required when called:    2
  3963 ;; This function calls:
  3964 ;;		___wmul
  3965 ;;		_constructorSensor
  3966 ;; This function is called by:
  3967 ;;		_lecturaWifi
  3968 ;;		_main
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text13
  3973  001CEC                     __ptext13:
  3974                           	opt callstack 0
  3975  001CEC                     _restablecerDatosSensor:
  3976                           	opt callstack 26
  3977  001CEC                     
  3978                           ;main.c: 485:     for (int i = 0; i < 3; i++)
  3979  001CEC  0E00               	movlw	0
  3980  001CEE  6E0D               	movwf	(restablecerDatosSensor@i+1)^0,c
  3981  001CF0  0E00               	movlw	0
  3982  001CF2  6E0C               	movwf	restablecerDatosSensor@i^0,c
  3983  001CF4                     l2847:
  3984                           
  3985                           ;main.c: 486:         constructorSensor(sensores[i], 0, i);
  3986  001CF4  C00C  F001         	movff	restablecerDatosSensor@i,___wmul@multiplier
  3987  001CF8  C00D  F002         	movff	restablecerDatosSensor@i+1,___wmul@multiplier+1
  3988  001CFC  0E00               	movlw	0
  3989  001CFE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3990  001D00  0E03               	movlw	3
  3991  001D02  6E03               	movwf	___wmul@multiplicand^0,c
  3992  001D04  ECFE  F010         	call	___wmul	;wreg free
  3993  001D08  0E60               	movlw	low _sensores
  3994  001D0A  2401               	addwf	?___wmul^0,w,c
  3995  001D0C  6ED9               	movwf	fsr2l,c
  3996  001D0E  0E00               	movlw	high _sensores
  3997  001D10  2002               	addwfc	(?___wmul+1)^0,w,c
  3998  001D12  6EDA               	movwf	fsr2h,c
  3999  001D14  CFDE F007          	movff	postinc2,constructorSensor@s
  4000  001D18  CFDE F008          	movff	postinc2,constructorSensor@s+1
  4001  001D1C  CFDD F009          	movff	postdec2,constructorSensor@s+2
  4002  001D20  0E00               	movlw	0
  4003  001D22  6E0A               	movwf	constructorSensor@humedad^0,c
  4004  001D24  C00C  F00B         	movff	restablecerDatosSensor@i,constructorSensor@pin
  4005  001D28  EC63  F011         	call	_constructorSensor	;wreg free
  4006  001D2C  4A0C               	infsnz	restablecerDatosSensor@i^0,f,c
  4007  001D2E  2A0D               	incf	(restablecerDatosSensor@i+1)^0,f,c
  4008  001D30  BE0D               	btfsc	(restablecerDatosSensor@i+1)^0,7,c
  4009  001D32  EFA4  F00E         	goto	u2031
  4010  001D36  500D               	movf	(restablecerDatosSensor@i+1)^0,w,c
  4011  001D38  E109               	bnz	u2030
  4012  001D3A  0E03               	movlw	3
  4013  001D3C  5C0C               	subwf	restablecerDatosSensor@i^0,w,c
  4014  001D3E  A0D8               	btfss	status,0,c
  4015  001D40  EFA4  F00E         	goto	u2031
  4016  001D44  EFA6  F00E         	goto	u2030
  4017  001D48                     u2031:
  4018  001D48  EF7A  F00E         	goto	l2847
  4019  001D4C                     u2030:
  4020  001D4C  0012               	return		;funcret
  4021  001D4E                     __end_of_restablecerDatosSensor:
  4022                           	opt callstack 0
  4023                           
  4024 ;; *************** function _constructorSensor *****************
  4025 ;; Defined at:
  4026 ;;		line 115 in file "main.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;  s               3    6[COMRAM] struct .
  4029 ;;  humedad         1    9[COMRAM] unsigned char 
  4030 ;;  pin             1   10[COMRAM] unsigned char 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      void 
  4035 ;; Registers used:
  4036 ;;		None
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4042 ;;      Params:         5       0       0       0       0       0       0       0       0
  4043 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4045 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4046 ;;Total ram usage:        5 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:    1
  4049 ;; This function calls:
  4050 ;;		Nothing
  4051 ;; This function is called by:
  4052 ;;		_restablecerDatosSensor
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           	psect	text14
  4057  0022C6                     __ptext14:
  4058                           	opt callstack 0
  4059  0022C6                     _constructorSensor:
  4060                           	opt callstack 26
  4061  0022C6                     
  4062                           ;main.c: 117:     s.humedadMedida = humedad;
  4063  0022C6  C00A  F007         	movff	constructorSensor@humedad,constructorSensor@s
  4064  0022CA  6A08               	clrf	(constructorSensor@s+1)^0,c
  4065                           
  4066                           ;main.c: 118:     s.pinSensor = pin;
  4067  0022CC  C00B  F009         	movff	constructorSensor@pin,constructorSensor@s+2
  4068  0022D0  0012               	return		;funcret
  4069  0022D2                     __end_of_constructorSensor:
  4070                           	opt callstack 0
  4071                           
  4072 ;; *************** function _mostrarDatosSensores *****************
  4073 ;; Defined at:
  4074 ;;		line 693 in file "main.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;		None
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;  i               2   72[BANK0 ] int 
  4079 ;;  buffer         50   20[BANK0 ] unsigned char [50]
  4080 ;;  porcentajeHu    2   74[BANK0 ] int 
  4081 ;;  humedad         1   71[BANK0 ] unsigned char 
  4082 ;;  temperatura     1   70[BANK0 ] unsigned char 
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      void 
  4085 ;; Registers used:
  4086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4092 ;;      Params:         0       0       0       0       0       0       0       0       0
  4093 ;;      Locals:         0      56       0       0       0       0       0       0       0
  4094 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4095 ;;      Totals:         0      56       0       0       0       0       0       0       0
  4096 ;;Total ram usage:       56 bytes
  4097 ;; Hardware stack levels used:    1
  4098 ;; Hardware stack levels required when called:    9
  4099 ;; This function calls:
  4100 ;;		_UART_printf
  4101 ;;		_UART_write
  4102 ;;		___awdiv
  4103 ;;		___wmul
  4104 ;;		_dameTemperaturaHumedad
  4105 ;;		_lecturaAnalogaSensores
  4106 ;;		_sprintf
  4107 ;; This function is called by:
  4108 ;;		_sistemaPrincipal
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text15
  4113  000AE0                     __ptext15:
  4114                           	opt callstack 0
  4115  000AE0                     _mostrarDatosSensores:
  4116                           	opt callstack 20
  4117  000AE0                     
  4118                           ;main.c: 697:     unsigned char temperatura, humedad;;main.c: 699:     dameTemperaturaHu
      +                          medad(&humedad, &temperatura);
  4119  000AE0  0EF5               	movlw	low mostrarDatosSensores@humedad
  4120  000AE2  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  4121  000AE4  0E00               	movlw	high mostrarDatosSensores@humedad
  4122  000AE6  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  4123  000AE8  0EF4               	movlw	low mostrarDatosSensores@temperatura
  4124  000AEA  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  4125  000AEC  0E00               	movlw	high mostrarDatosSensores@temperatura
  4126  000AEE  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  4127  000AF0  ECEC  F00B         	call	_dameTemperaturaHumedad	;wreg free
  4128  000AF4                     
  4129                           ;main.c: 701:     UART_write('I');
  4130  000AF4  0E49               	movlw	73
  4131  000AF6  EC4D  F011         	call	_UART_write
  4132  000AFA                     
  4133                           ;main.c: 704:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", humedad);
  4134  000AFA  0EC2               	movlw	low mostrarDatosSensores@buffer
  4135  000AFC  0100               	movlb	0	; () banked
  4136  000AFE  6FAE               	movwf	sprintf@s& (0+255),b
  4137  000B00  0E00               	movlw	high mostrarDatosSensores@buffer
  4138  000B02  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  4139  000B04  0EC5               	movlw	low STR_29
  4140  000B06  6FB0               	movwf	sprintf@fmt& (0+255),b
  4141  000B08  0E7E               	movlw	high STR_29
  4142  000B0A  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  4143  000B0C  C0F5  F0B2         	movff	mostrarDatosSensores@humedad,?_sprintf+4
  4144  000B10  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  4145  000B12  EC5F  F00F         	call	_sprintf	;wreg free
  4146  000B16                     
  4147                           ;main.c: 705:     UART_printf(buffer);
  4148  000B16  0EC2               	movlw	low mostrarDatosSensores@buffer
  4149  000B18  6E02               	movwf	UART_printf@cadena^0,c
  4150  000B1A  0E00               	movlw	high mostrarDatosSensores@buffer
  4151  000B1C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4152  000B1E  ECD8  F00E         	call	_UART_printf	;wreg free
  4153  000B22                     
  4154                           ;main.c: 706:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", temperatura);
  4155  000B22  0EC2               	movlw	low mostrarDatosSensores@buffer
  4156  000B24  0100               	movlb	0	; () banked
  4157  000B26  6FAE               	movwf	sprintf@s& (0+255),b
  4158  000B28  0E00               	movlw	high mostrarDatosSensores@buffer
  4159  000B2A  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  4160  000B2C  0E04               	movlw	low STR_30
  4161  000B2E  6FB0               	movwf	sprintf@fmt& (0+255),b
  4162  000B30  0E7F               	movlw	high STR_30
  4163  000B32  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  4164  000B34  C0F4  F0B2         	movff	mostrarDatosSensores@temperatura,?_sprintf+4
  4165  000B38  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  4166  000B3A  EC5F  F00F         	call	_sprintf	;wreg free
  4167  000B3E                     
  4168                           ;main.c: 707:     UART_printf(buffer);
  4169  000B3E  0EC2               	movlw	low mostrarDatosSensores@buffer
  4170  000B40  6E02               	movwf	UART_printf@cadena^0,c
  4171  000B42  0E00               	movlw	high mostrarDatosSensores@buffer
  4172  000B44  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4173  000B46  ECD8  F00E         	call	_UART_printf	;wreg free
  4174  000B4A                     
  4175                           ;main.c: 709:     lecturaAnalogaSensores();
  4176  000B4A  ECAA  F00D         	call	_lecturaAnalogaSensores	;wreg free
  4177  000B4E                     
  4178                           ;main.c: 712:     for (int i = 0; i < 3; i++) {
  4179  000B4E  0E00               	movlw	0
  4180  000B50  0100               	movlb	0	; () banked
  4181  000B52  6FF7               	movwf	(mostrarDatosSensores@i+1)& (0+255),b
  4182  000B54  0E00               	movlw	0
  4183  000B56  6FF6               	movwf	mostrarDatosSensores@i& (0+255),b
  4184  000B58                     l3387:
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;main.c: 714:         porcentajeHumedad = (sensores[i].humedadMedida);
  4188  000B58  C0F6  F001         	movff	mostrarDatosSensores@i,___wmul@multiplier
  4189  000B5C  C0F7  F002         	movff	mostrarDatosSensores@i+1,___wmul@multiplier+1
  4190  000B60  0E00               	movlw	0
  4191  000B62  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4192  000B64  0E03               	movlw	3
  4193  000B66  6E03               	movwf	___wmul@multiplicand^0,c
  4194  000B68  ECFE  F010         	call	___wmul	;wreg free
  4195  000B6C  0E60               	movlw	low _sensores
  4196  000B6E  2401               	addwf	?___wmul^0,w,c
  4197  000B70  6ED9               	movwf	fsr2l,c
  4198  000B72  0E00               	movlw	high _sensores
  4199  000B74  2002               	addwfc	(?___wmul+1)^0,w,c
  4200  000B76  6EDA               	movwf	fsr2h,c
  4201  000B78  CFDE F0F8          	movff	postinc2,mostrarDatosSensores@porcentajeHumedad
  4202  000B7C  CFDD F0F9          	movff	postdec2,mostrarDatosSensores@porcentajeHumedad+1
  4203  000B80                     
  4204                           ;main.c: 715:         porcentajeHumedad *= 10;
  4205  000B80  C0F8  F001         	movff	mostrarDatosSensores@porcentajeHumedad,___wmul@multiplier
  4206  000B84  C0F9  F002         	movff	mostrarDatosSensores@porcentajeHumedad+1,___wmul@multiplier+1
  4207  000B88  0E00               	movlw	0
  4208  000B8A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4209  000B8C  0E0A               	movlw	10
  4210  000B8E  6E03               	movwf	___wmul@multiplicand^0,c
  4211  000B90  ECFE  F010         	call	___wmul	;wreg free
  4212  000B94  C001  F0F8         	movff	?___wmul,mostrarDatosSensores@porcentajeHumedad
  4213  000B98  C002  F0F9         	movff	?___wmul+1,mostrarDatosSensores@porcentajeHumedad+1
  4214  000B9C                     
  4215                           ;main.c: 716:         porcentajeHumedad /= 1023;
  4216  000B9C  C0F8  F001         	movff	mostrarDatosSensores@porcentajeHumedad,___awdiv@dividend
  4217  000BA0  C0F9  F002         	movff	mostrarDatosSensores@porcentajeHumedad+1,___awdiv@dividend+1
  4218  000BA4  0E03               	movlw	3
  4219  000BA6  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4220  000BA8  6803               	setf	___awdiv@divisor^0,c
  4221  000BAA  EC8A  F00B         	call	___awdiv	;wreg free
  4222  000BAE  C001  F0F8         	movff	?___awdiv,mostrarDatosSensores@porcentajeHumedad
  4223  000BB2  C002  F0F9         	movff	?___awdiv+1,mostrarDatosSensores@porcentajeHumedad+1
  4224  000BB6                     
  4225                           ;main.c: 717:         porcentajeHumedad *= 10;
  4226  000BB6  C0F8  F001         	movff	mostrarDatosSensores@porcentajeHumedad,___wmul@multiplier
  4227  000BBA  C0F9  F002         	movff	mostrarDatosSensores@porcentajeHumedad+1,___wmul@multiplier+1
  4228  000BBE  0E00               	movlw	0
  4229  000BC0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4230  000BC2  0E0A               	movlw	10
  4231  000BC4  6E03               	movwf	___wmul@multiplicand^0,c
  4232  000BC6  ECFE  F010         	call	___wmul	;wreg free
  4233  000BCA  C001  F0F8         	movff	?___wmul,mostrarDatosSensores@porcentajeHumedad
  4234  000BCE  C002  F0F9         	movff	?___wmul+1,mostrarDatosSensores@porcentajeHumedad+1
  4235  000BD2                     
  4236                           ;main.c: 719:         porcentajeHumedad -=100;
  4237  000BD2  0100               	movlb	0	; () banked
  4238  000BD4  0E9C               	movlw	156
  4239  000BD6  27F8               	addwf	mostrarDatosSensores@porcentajeHumedad& (0+255),f,b
  4240  000BD8  0EFF               	movlw	255
  4241  000BDA  23F9               	addwfc	(mostrarDatosSensores@porcentajeHumedad+1)& (0+255),f,b
  4242  000BDC                     
  4243                           ; BSR set to: 0
  4244                           ;main.c: 720:         porcentajeHumedad *= -1;
  4245  000BDC  C0F8  F001         	movff	mostrarDatosSensores@porcentajeHumedad,___wmul@multiplier
  4246  000BE0  C0F9  F002         	movff	mostrarDatosSensores@porcentajeHumedad+1,___wmul@multiplier+1
  4247  000BE4  0EFF               	movlw	255
  4248  000BE6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4249  000BE8  6803               	setf	___wmul@multiplicand^0,c
  4250  000BEA  ECFE  F010         	call	___wmul	;wreg free
  4251  000BEE  C001  F0F8         	movff	?___wmul,mostrarDatosSensores@porcentajeHumedad
  4252  000BF2  C002  F0F9         	movff	?___wmul+1,mostrarDatosSensores@porcentajeHumedad+1
  4253  000BF6                     
  4254                           ;main.c: 722:         sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d\r\n"
  4255  000BF6  0EC2               	movlw	low mostrarDatosSensores@buffer
  4256  000BF8  0100               	movlb	0	; () banked
  4257  000BFA  6FAE               	movwf	sprintf@s& (0+255),b
  4258  000BFC  0E00               	movlw	high mostrarDatosSensores@buffer
  4259  000BFE  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  4260  000C00  0E31               	movlw	low STR_31
  4261  000C02  6FB0               	movwf	sprintf@fmt& (0+255),b
  4262  000C04  0E7D               	movlw	high STR_31
  4263  000C06  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  4264  000C08  C0F6  F0B2         	movff	mostrarDatosSensores@i,?_sprintf+4
  4265  000C0C  C0F7  F0B3         	movff	mostrarDatosSensores@i+1,?_sprintf+5
  4266  000C10  C0F8  F0B4         	movff	mostrarDatosSensores@porcentajeHumedad,?_sprintf+6
  4267  000C14  C0F9  F0B5         	movff	mostrarDatosSensores@porcentajeHumedad+1,?_sprintf+7
  4268  000C18  EC5F  F00F         	call	_sprintf	;wreg free
  4269  000C1C                     
  4270                           ;main.c: 724:         UART_printf(buffer);
  4271  000C1C  0EC2               	movlw	low mostrarDatosSensores@buffer
  4272  000C1E  6E02               	movwf	UART_printf@cadena^0,c
  4273  000C20  0E00               	movlw	high mostrarDatosSensores@buffer
  4274  000C22  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4275  000C24  ECD8  F00E         	call	_UART_printf	;wreg free
  4276  000C28                     
  4277                           ;main.c: 727:     }
  4278  000C28  0100               	movlb	0	; () banked
  4279  000C2A  4BF6               	infsnz	mostrarDatosSensores@i& (0+255),f,b
  4280  000C2C  2BF7               	incf	(mostrarDatosSensores@i+1)& (0+255),f,b
  4281  000C2E                     
  4282                           ; BSR set to: 0
  4283  000C2E  BFF7               	btfsc	(mostrarDatosSensores@i+1)& (0+255),7,b
  4284  000C30  EF23  F006         	goto	u2631
  4285  000C34  51F7               	movf	(mostrarDatosSensores@i+1)& (0+255),w,b
  4286  000C36  E109               	bnz	u2630
  4287  000C38  0E03               	movlw	3
  4288  000C3A  5DF6               	subwf	mostrarDatosSensores@i& (0+255),w,b
  4289  000C3C  A0D8               	btfss	status,0,c
  4290  000C3E  EF23  F006         	goto	u2631
  4291  000C42  EF25  F006         	goto	u2630
  4292  000C46                     u2631:
  4293  000C46  EFAC  F005         	goto	l3387
  4294  000C4A                     u2630:
  4295  000C4A                     
  4296                           ; BSR set to: 0
  4297                           ;main.c: 729:     UART_write('I');
  4298  000C4A  0E49               	movlw	73
  4299  000C4C  EC4D  F011         	call	_UART_write
  4300  000C50  0012               	return		;funcret
  4301  000C52                     __end_of_mostrarDatosSensores:
  4302                           	opt callstack 0
  4303                           
  4304 ;; *************** function _lecturaAnalogaSensores *****************
  4305 ;; Defined at:
  4306 ;;		line 531 in file "main.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;		None
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;  i               2    7[COMRAM] int 
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      void 
  4313 ;; Registers used:
  4314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4320 ;;      Params:         0       0       0       0       0       0       0       0       0
  4321 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4322 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4323 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4324 ;;Total ram usage:        3 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; Hardware stack levels required when called:    2
  4327 ;; This function calls:
  4328 ;;		___wmul
  4329 ;;		_dameHumedadSuelo
  4330 ;; This function is called by:
  4331 ;;		_sistemaRegado
  4332 ;;		_mostrarDatosSensores
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text16
  4337  001B54                     __ptext16:
  4338                           	opt callstack 0
  4339  001B54                     _lecturaAnalogaSensores:
  4340                           	opt callstack 27
  4341  001B54                     
  4342                           ;main.c: 533:     for (int i = 0; i < 3; i++) {
  4343  001B54  0E00               	movlw	0
  4344  001B56  6E09               	movwf	(lecturaAnalogaSensores@i+1)^0,c
  4345  001B58  0E00               	movlw	0
  4346  001B5A  6E08               	movwf	lecturaAnalogaSensores@i^0,c
  4347  001B5C                     l2993:
  4348                           
  4349                           ;main.c: 534:         sensores[i].humedadMedida = dameHumedadSuelo(i);
  4350  001B5C  C008  F001         	movff	lecturaAnalogaSensores@i,___wmul@multiplier
  4351  001B60  C009  F002         	movff	lecturaAnalogaSensores@i+1,___wmul@multiplier+1
  4352  001B64  0E00               	movlw	0
  4353  001B66  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4354  001B68  0E03               	movlw	3
  4355  001B6A  6E03               	movwf	___wmul@multiplicand^0,c
  4356  001B6C  ECFE  F010         	call	___wmul	;wreg free
  4357  001B70  0E60               	movlw	low _sensores
  4358  001B72  2401               	addwf	?___wmul^0,w,c
  4359  001B74  6ED9               	movwf	fsr2l,c
  4360  001B76  0E00               	movlw	high _sensores
  4361  001B78  2002               	addwfc	(?___wmul+1)^0,w,c
  4362  001B7A  6EDA               	movwf	fsr2h,c
  4363  001B7C  5008               	movf	lecturaAnalogaSensores@i^0,w,c
  4364  001B7E  ECD4  F00F         	call	_dameHumedadSuelo
  4365  001B82  C001  FFDE         	movff	?_dameHumedadSuelo,postinc2
  4366  001B86  C002  FFDD         	movff	?_dameHumedadSuelo+1,postdec2
  4367  001B8A                     
  4368                           ;main.c: 535:         _delay((unsigned long)((5)*(4000000/4000.0)));
  4369  001B8A  0E07               	movlw	7
  4370  001B8C  6E07               	movwf	??_lecturaAnalogaSensores^0,c
  4371  001B8E  0E7D               	movlw	125
  4372  001B90                     u2837:
  4373  001B90  2EE8               	decfsz	wreg,f,c
  4374  001B92  D7FE               	bra	u2837
  4375  001B94  2E07               	decfsz	??_lecturaAnalogaSensores^0,f,c
  4376  001B96  D7FC               	bra	u2837
  4377  001B98  F000               	nop	
  4378  001B9A                     
  4379                           ;main.c: 536:     }
  4380  001B9A  4A08               	infsnz	lecturaAnalogaSensores@i^0,f,c
  4381  001B9C  2A09               	incf	(lecturaAnalogaSensores@i+1)^0,f,c
  4382  001B9E  BE09               	btfsc	(lecturaAnalogaSensores@i+1)^0,7,c
  4383  001BA0  EFDB  F00D         	goto	u2171
  4384  001BA4  5009               	movf	(lecturaAnalogaSensores@i+1)^0,w,c
  4385  001BA6  E109               	bnz	u2170
  4386  001BA8  0E03               	movlw	3
  4387  001BAA  5C08               	subwf	lecturaAnalogaSensores@i^0,w,c
  4388  001BAC  A0D8               	btfss	status,0,c
  4389  001BAE  EFDB  F00D         	goto	u2171
  4390  001BB2  EFDD  F00D         	goto	u2170
  4391  001BB6                     u2171:
  4392  001BB6  EFAE  F00D         	goto	l2993
  4393  001BBA                     u2170:
  4394  001BBA  0012               	return		;funcret
  4395  001BBC                     __end_of_lecturaAnalogaSensores:
  4396                           	opt callstack 0
  4397                           
  4398 ;; *************** function _dameHumedadSuelo *****************
  4399 ;; Defined at:
  4400 ;;		line 467 in file "main.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;  canalLeer       1    wreg     unsigned char 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;  canalLeer       1    4[COMRAM] unsigned char 
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  2    0[COMRAM] short 
  4407 ;; Registers used:
  4408 ;;		wreg, status,2, status,0
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4414 ;;      Params:         2       0       0       0       0       0       0       0       0
  4415 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4416 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4417 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4418 ;;Total ram usage:        5 bytes
  4419 ;; Hardware stack levels used:    1
  4420 ;; Hardware stack levels required when called:    1
  4421 ;; This function calls:
  4422 ;;		Nothing
  4423 ;; This function is called by:
  4424 ;;		_lecturaAnalogaSensores
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           	psect	text17
  4429  001FA8                     __ptext17:
  4430                           	opt callstack 0
  4431  001FA8                     _dameHumedadSuelo:
  4432                           	opt callstack 27
  4433                           
  4434                           ;incstack = 0
  4435                           ;dameHumedadSuelo@canalLeer stored from wreg
  4436  001FA8  6E05               	movwf	dameHumedadSuelo@canalLeer^0,c
  4437  001FAA                     
  4438                           ;main.c: 469:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  4439  001FAA  0E06               	movlw	6
  4440  001FAC                     u2847:
  4441  001FAC  2EE8               	decfsz	wreg,f,c
  4442  001FAE  D7FE               	bra	u2847
  4443  001FB0  D000               	nop2	
  4444  001FB2                     
  4445                           ;main.c: 471:     ADCON0bits.ADON = 1;
  4446  001FB2  80C2               	bsf	194,0,c	;volatile
  4447  001FB4                     
  4448                           ;main.c: 472:     ADCON0bits.CHS = canalLeer;
  4449  001FB4  C005  F003         	movff	dameHumedadSuelo@canalLeer,??_dameHumedadSuelo
  4450  001FB8  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  4451  001FBA  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  4452  001FBC  50C2               	movf	194,w,c	;volatile
  4453  001FBE  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  4454  001FC0  0BC3               	andlw	-61
  4455  001FC2  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  4456  001FC4  6EC2               	movwf	194,c	;volatile
  4457  001FC6                     
  4458                           ;main.c: 473:     ADCON0bits.GO = 1;
  4459  001FC6  82C2               	bsf	194,1,c	;volatile
  4460  001FC8                     
  4461                           ;main.c: 474:     ADCON0bits.GO_DONE = 1;
  4462  001FC8  82C2               	bsf	194,1,c	;volatile
  4463  001FCA                     l308:
  4464  001FCA  B2C2               	btfsc	194,1,c	;volatile
  4465  001FCC  EFEA  F00F         	goto	u2021
  4466  001FD0  EFEC  F00F         	goto	u2020
  4467  001FD4                     u2021:
  4468  001FD4  EFE5  F00F         	goto	l308
  4469  001FD8                     u2020:
  4470  001FD8                     
  4471                           ;main.c: 478:     ADCON0bits.ADON = 0;
  4472  001FD8  90C2               	bcf	194,0,c	;volatile
  4473  001FDA                     
  4474                           ;main.c: 480:     return (ADRESH << 8) +ADRESL;
  4475  001FDA  50C4               	movf	196,w,c	;volatile
  4476  001FDC  6E04               	movwf	(??_dameHumedadSuelo+1)^0,c
  4477  001FDE  6A03               	clrf	??_dameHumedadSuelo^0,c
  4478  001FE0  50C3               	movf	195,w,c	;volatile
  4479  001FE2  2403               	addwf	??_dameHumedadSuelo^0,w,c
  4480  001FE4  6E01               	movwf	?_dameHumedadSuelo^0,c
  4481  001FE6  0E00               	movlw	0
  4482  001FE8  2004               	addwfc	(??_dameHumedadSuelo+1)^0,w,c
  4483  001FEA  6E02               	movwf	(?_dameHumedadSuelo+1)^0,c
  4484  001FEC  0012               	return		;funcret
  4485  001FEE                     __end_of_dameHumedadSuelo:
  4486                           	opt callstack 0
  4487                           
  4488 ;; *************** function _dameTemperaturaHumedad *****************
  4489 ;; Defined at:
  4490 ;;		line 658 in file "main.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;  Humedad         2    3[COMRAM] PTR unsigned char 
  4493 ;;		 -> mostrarDatosSensoresWIFI@humedad(1), mostrarDatosSensores@humedad(1), NULL(0), 
  4494 ;;  Temperatura     2    5[COMRAM] PTR unsigned char 
  4495 ;;		 -> mostrarDatosSensoresWIFI@temperatura(1), mostrarDatosSensores@temperatura(1), estaSeco@temperatura(1), 
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;  checkSum        2    9[COMRAM] unsigned int 
  4498 ;;  temperatura     1   14[COMRAM] unsigned char 
  4499 ;;  humedad         1   13[COMRAM] unsigned char 
  4500 ;;  temperaturaD    1   12[COMRAM] unsigned char 
  4501 ;;  humedadDecim    1   11[COMRAM] unsigned char 
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  1    wreg      void 
  4504 ;; Registers used:
  4505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4511 ;;      Params:         4       0       0       0       0       0       0       0       0
  4512 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4513 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4514 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4515 ;;Total ram usage:       12 bytes
  4516 ;; Hardware stack levels used:    1
  4517 ;; Hardware stack levels required when called:    3
  4518 ;; This function calls:
  4519 ;;		_DHT11_ReadData
  4520 ;;		_DHT11_Start
  4521 ;;		_UART_printf
  4522 ;;		_check_response
  4523 ;; This function is called by:
  4524 ;;		_estaSeco
  4525 ;;		_mostrarDatosSensores
  4526 ;;		_mostrarDatosSensoresWIFI
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529                           
  4530                           	psect	text18
  4531  0017D8                     __ptext18:
  4532                           	opt callstack 0
  4533  0017D8                     _dameTemperaturaHumedad:
  4534                           	opt callstack 24
  4535  0017D8                     
  4536                           ;main.c: 660:     PIE1bits.RCIE = 0;
  4537  0017D8  9A9D               	bcf	157,5,c	;volatile
  4538                           
  4539                           ;main.c: 661:     T0CONbits.TMR0ON = 0;
  4540  0017DA  9ED5               	bcf	213,7,c	;volatile
  4541  0017DC                     
  4542                           ;main.c: 667:     DHT11_Start();
  4543  0017DC  EC21  F011         	call	_DHT11_Start	;wreg free
  4544  0017E0                     
  4545                           ;main.c: 669:     if (check_response()) {
  4546  0017E0  EC19  F010         	call	_check_response	;wreg free
  4547  0017E4  0900               	iorlw	0
  4548  0017E6  B4D8               	btfsc	status,2,c
  4549  0017E8  EFF8  F00B         	goto	u2001
  4550  0017EC  EFFA  F00B         	goto	u2000
  4551  0017F0                     u2001:
  4552  0017F0  EF3D  F00C         	goto	l2817
  4553  0017F4                     u2000:
  4554  0017F4                     
  4555                           ;main.c: 672:         humedad = DHT11_ReadData();
  4556  0017F4  EC07  F00F         	call	_DHT11_ReadData	;wreg free
  4557  0017F8  6E0E               	movwf	dameTemperaturaHumedad@humedad^0,c
  4558                           
  4559                           ;main.c: 673:         humedadDecimal = DHT11_ReadData();
  4560  0017FA  EC07  F00F         	call	_DHT11_ReadData	;wreg free
  4561  0017FE  6E0C               	movwf	dameTemperaturaHumedad@humedadDecimal^0,c
  4562                           
  4563                           ;main.c: 674:         temperatura = DHT11_ReadData();
  4564  001800  EC07  F00F         	call	_DHT11_ReadData	;wreg free
  4565  001804  6E0F               	movwf	dameTemperaturaHumedad@temperatura^0,c
  4566                           
  4567                           ;main.c: 675:         temperaturaDecimal = DHT11_ReadData();
  4568  001806  EC07  F00F         	call	_DHT11_ReadData	;wreg free
  4569  00180A  6E0D               	movwf	dameTemperaturaHumedad@temperaturaDecimal^0,c
  4570                           
  4571                           ;main.c: 676:         checkSum = DHT11_ReadData();
  4572  00180C  EC07  F00F         	call	_DHT11_ReadData	;wreg free
  4573  001810  6E08               	movwf	??_dameTemperaturaHumedad^0,c
  4574  001812  5008               	movf	??_dameTemperaturaHumedad^0,w,c
  4575  001814  6E0A               	movwf	dameTemperaturaHumedad@checkSum^0,c
  4576  001816  6A0B               	clrf	(dameTemperaturaHumedad@checkSum+1)^0,c
  4577  001818                     
  4578                           ;main.c: 678:         if (checkSum != (humedad + humedadDecimal + temperatura + temperat
      +                          uraDecimal))
  4579  001818  500C               	movf	dameTemperaturaHumedad@humedadDecimal^0,w,c
  4580  00181A  C00E  F008         	movff	dameTemperaturaHumedad@humedad,??_dameTemperaturaHumedad
  4581  00181E  6A09               	clrf	(??_dameTemperaturaHumedad+1)^0,c
  4582  001820  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  4583  001822  0E00               	movlw	0
  4584  001824  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  4585  001826  500F               	movf	dameTemperaturaHumedad@temperatura^0,w,c
  4586  001828  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  4587  00182A  0E00               	movlw	0
  4588  00182C  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  4589  00182E  500D               	movf	dameTemperaturaHumedad@temperaturaDecimal^0,w,c
  4590  001830  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  4591  001832  0E00               	movlw	0
  4592  001834  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  4593  001836  500A               	movf	dameTemperaturaHumedad@checkSum^0,w,c
  4594  001838  1808               	xorwf	??_dameTemperaturaHumedad^0,w,c
  4595  00183A  E109               	bnz	u2010
  4596  00183C  500B               	movf	(dameTemperaturaHumedad@checkSum+1)^0,w,c
  4597  00183E  1809               	xorwf	(??_dameTemperaturaHumedad+1)^0,w,c
  4598  001840  B4D8               	btfsc	status,2,c
  4599  001842  EF25  F00C         	goto	u2011
  4600  001846  EF27  F00C         	goto	u2010
  4601  00184A                     u2011:
  4602  00184A  EF2F  F00C         	goto	l2815
  4603  00184E                     u2010:
  4604  00184E                     
  4605                           ;main.c: 679:             UART_printf("Error de lectura DHT11\r\n");
  4606  00184E  0E8B               	movlw	low STR_27
  4607  001850  6E02               	movwf	UART_printf@cadena^0,c
  4608  001852  0E7F               	movlw	high STR_27
  4609  001854  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4610  001856  ECD8  F00E         	call	_UART_printf	;wreg free
  4611  00185A  EF43  F00C         	goto	l2819
  4612  00185E                     l2815:
  4613                           
  4614                           ;main.c: 681:             *Humedad = humedad;
  4615  00185E  C004  FFD9         	movff	dameTemperaturaHumedad@Humedad,fsr2l
  4616  001862  C005  FFDA         	movff	dameTemperaturaHumedad@Humedad+1,fsr2h
  4617  001866  C00E  FFDF         	movff	dameTemperaturaHumedad@humedad,indf2
  4618                           
  4619                           ;main.c: 682:             *Temperatura = temperatura;
  4620  00186A  C006  FFD9         	movff	dameTemperaturaHumedad@Temperatura,fsr2l
  4621  00186E  C007  FFDA         	movff	dameTemperaturaHumedad@Temperatura+1,fsr2h
  4622  001872  C00F  FFDF         	movff	dameTemperaturaHumedad@temperatura,indf2
  4623  001876  EF43  F00C         	goto	l2819
  4624  00187A                     l2817:
  4625                           
  4626                           ;main.c: 686:         UART_printf("DHT11 NO RESPONDIO\r\n");
  4627  00187A  0EBB               	movlw	low STR_28
  4628  00187C  6E02               	movwf	UART_printf@cadena^0,c
  4629  00187E  0E7F               	movlw	high STR_28
  4630  001880  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4631  001882  ECD8  F00E         	call	_UART_printf	;wreg free
  4632  001886                     l2819:
  4633                           
  4634                           ;main.c: 689:     PIE1bits.RCIE = 1;
  4635  001886  8A9D               	bsf	157,5,c	;volatile
  4636  001888                     
  4637                           ;main.c: 690:     T0CONbits.TMR0ON = 1;
  4638  001888  8ED5               	bsf	213,7,c	;volatile
  4639  00188A  0012               	return		;funcret
  4640  00188C                     __end_of_dameTemperaturaHumedad:
  4641                           	opt callstack 0
  4642                           
  4643 ;; *************** function _check_response *****************
  4644 ;; Defined at:
  4645 ;;		line 38 in file "./DHT11.h"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;		None
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;  respuesta       1    0[COMRAM] unsigned char 
  4650 ;; Return value:  Size  Location     Type
  4651 ;;                  1    wreg      unsigned char 
  4652 ;; Registers used:
  4653 ;;		wreg, status,2
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4659 ;;      Params:         0       0       0       0       0       0       0       0       0
  4660 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4661 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4662 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4663 ;;Total ram usage:        1 bytes
  4664 ;; Hardware stack levels used:    1
  4665 ;; Hardware stack levels required when called:    1
  4666 ;; This function calls:
  4667 ;;		Nothing
  4668 ;; This function is called by:
  4669 ;;		_dameTemperaturaHumedad
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           	psect	text19
  4674  002032                     __ptext19:
  4675                           	opt callstack 0
  4676  002032                     _check_response:
  4677                           	opt callstack 25
  4678  002032                     
  4679                           ;./DHT11.h: 40:     unsigned char respuesta = 0;
  4680  002032  0E00               	movlw	0
  4681  002034  6E01               	movwf	check_response@respuesta^0,c
  4682  002036                     
  4683                           ;./DHT11.h: 41:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4684  002036  0E0D               	movlw	13
  4685  002038                     u2857:
  4686  002038  2EE8               	decfsz	wreg,f,c
  4687  00203A  D7FE               	bra	u2857
  4688  00203C  F000               	nop	
  4689  00203E                     
  4690                           ;./DHT11.h: 42:     if (!PORTDbits.RD7) {
  4691  00203E  BE83               	btfsc	131,7,c	;volatile
  4692  002040  EF24  F010         	goto	u1911
  4693  002044  EF26  F010         	goto	u1910
  4694  002048                     u1911:
  4695  002048  EF37  F010         	goto	l2715
  4696  00204C                     u1910:
  4697  00204C                     
  4698                           ;./DHT11.h: 43:         _delay((unsigned long)((80)*(4000000/4000000.0)));
  4699  00204C  0E1A               	movlw	26
  4700  00204E                     u2867:
  4701  00204E  2EE8               	decfsz	wreg,f,c
  4702  002050  D7FE               	bra	u2867
  4703  002052  D000               	nop2	
  4704  002054                     
  4705                           ;./DHT11.h: 44:         if (PORTDbits.RD7) {
  4706  002054  AE83               	btfss	131,7,c	;volatile
  4707  002056  EF2F  F010         	goto	u1921
  4708  00205A  EF31  F010         	goto	u1920
  4709  00205E                     u1921:
  4710  00205E  EF37  F010         	goto	l2715
  4711  002062                     u1920:
  4712  002062                     
  4713                           ;./DHT11.h: 45:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  4714  002062  0E10               	movlw	16
  4715  002064                     u2877:
  4716  002064  2EE8               	decfsz	wreg,f,c
  4717  002066  D7FE               	bra	u2877
  4718  002068  D000               	nop2	
  4719  00206A                     
  4720                           ;./DHT11.h: 46:             respuesta = 1;
  4721  00206A  0E01               	movlw	1
  4722  00206C  6E01               	movwf	check_response@respuesta^0,c
  4723  00206E                     l2715:
  4724                           
  4725                           ;./DHT11.h: 50:     return respuesta;
  4726  00206E  5001               	movf	check_response@respuesta^0,w,c
  4727  002070  0012               	return		;funcret
  4728  002072                     __end_of_check_response:
  4729                           	opt callstack 0
  4730                           
  4731 ;; *************** function _DHT11_Start *****************
  4732 ;; Defined at:
  4733 ;;		line 23 in file "./DHT11.h"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;		None
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;		None
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  1    wreg      void 
  4740 ;; Registers used:
  4741 ;;		wreg
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4747 ;;      Params:         0       0       0       0       0       0       0       0       0
  4748 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4749 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4750 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4751 ;;Total ram usage:        1 bytes
  4752 ;; Hardware stack levels used:    1
  4753 ;; Hardware stack levels required when called:    1
  4754 ;; This function calls:
  4755 ;;		Nothing
  4756 ;; This function is called by:
  4757 ;;		_dameTemperaturaHumedad
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           	psect	text20
  4762  002242                     __ptext20:
  4763                           	opt callstack 0
  4764  002242                     _DHT11_Start:
  4765                           	opt callstack 25
  4766  002242                     
  4767                           ;./DHT11.h: 24:     TRISDbits.RD7 = 0;
  4768  002242  9E95               	bcf	149,7,c	;volatile
  4769                           
  4770                           ;./DHT11.h: 26:     LATDbits.LATD7 = 0;
  4771  002244  9E8C               	bcf	140,7,c	;volatile
  4772  002246                     
  4773                           ;./DHT11.h: 28:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4774  002246  0E1A               	movlw	26
  4775  002248  6E01               	movwf	??_DHT11_Start^0,c
  4776  00224A  0EF8               	movlw	248
  4777  00224C                     u2887:
  4778  00224C  2EE8               	decfsz	wreg,f,c
  4779  00224E  D7FE               	bra	u2887
  4780  002250  2E01               	decfsz	??_DHT11_Start^0,f,c
  4781  002252  D7FC               	bra	u2887
  4782  002254  D000               	nop2	
  4783  002256                     
  4784                           ;./DHT11.h: 30:     LATDbits.LATD7 = 1;
  4785  002256  8E8C               	bsf	140,7,c	;volatile
  4786                           
  4787                           ;./DHT11.h: 32:     _delay((unsigned long)((30)*(4000000/4000000.0)));
  4788  002258  0E0A               	movlw	10
  4789  00225A                     u2897:
  4790  00225A  2EE8               	decfsz	wreg,f,c
  4791  00225C  D7FE               	bra	u2897
  4792  00225E                     
  4793                           ;./DHT11.h: 34:     TRISDbits.RD7 = 1;
  4794  00225E  8E95               	bsf	149,7,c	;volatile
  4795  002260  0012               	return		;funcret
  4796  002262                     __end_of_DHT11_Start:
  4797                           	opt callstack 0
  4798                           
  4799 ;; *************** function _DHT11_ReadData *****************
  4800 ;; Defined at:
  4801 ;;		line 9 in file "./DHT11.h"
  4802 ;; Parameters:    Size  Location     Type
  4803 ;;		None
  4804 ;; Auto vars:     Size  Location     Type
  4805 ;;  data            1    1[COMRAM] unsigned char 
  4806 ;;  i               1    0[COMRAM] unsigned char 
  4807 ;; Return value:  Size  Location     Type
  4808 ;;                  1    wreg      unsigned char 
  4809 ;; Registers used:
  4810 ;;		wreg, status,2, status,0
  4811 ;; Tracked objects:
  4812 ;;		On entry : 0/0
  4813 ;;		On exit  : 0/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4816 ;;      Params:         0       0       0       0       0       0       0       0       0
  4817 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4818 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4819 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4820 ;;Total ram usage:        2 bytes
  4821 ;; Hardware stack levels used:    1
  4822 ;; Hardware stack levels required when called:    1
  4823 ;; This function calls:
  4824 ;;		Nothing
  4825 ;; This function is called by:
  4826 ;;		_dameTemperaturaHumedad
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           
  4830                           	psect	text21
  4831  001E0E                     __ptext21:
  4832                           	opt callstack 0
  4833  001E0E                     _DHT11_ReadData:
  4834                           	opt callstack 25
  4835  001E0E                     
  4836                           ;./DHT11.h: 10:     char i, data = 0;
  4837  001E0E  0E00               	movlw	0
  4838  001E10  6E02               	movwf	DHT11_ReadData@data^0,c
  4839                           
  4840                           ;./DHT11.h: 11:     for (i = 0; i < 8; i++) {
  4841  001E12  0E00               	movlw	0
  4842  001E14  6E01               	movwf	DHT11_ReadData@i^0,c
  4843  001E16                     l144:
  4844  001E16  AE83               	btfss	131,7,c	;volatile
  4845  001E18  EF10  F00F         	goto	u1871
  4846  001E1C  EF12  F00F         	goto	u1870
  4847  001E20                     u1871:
  4848  001E20  EF0B  F00F         	goto	l144
  4849  001E24                     u1870:
  4850  001E24                     
  4851                           ;./DHT11.h: 13:         _delay((unsigned long)((30)*(4000000/4000000.0)));
  4852  001E24  0E0A               	movlw	10
  4853  001E26                     u2907:
  4854  001E26  2EE8               	decfsz	wreg,f,c
  4855  001E28  D7FE               	bra	u2907
  4856  001E2A                     
  4857                           ;./DHT11.h: 14:         if (PORTDbits.RD7 & 1)
  4858  001E2A  AE83               	btfss	131,7,c	;volatile
  4859  001E2C  EF1A  F00F         	goto	u1881
  4860  001E30  EF1C  F00F         	goto	u1880
  4861  001E34                     u1881:
  4862  001E34  EF20  F00F         	goto	l2683
  4863  001E38                     u1880:
  4864  001E38                     
  4865                           ;./DHT11.h: 15:             data = ((data << 1) | 1);
  4866  001E38  80D8               	bsf	status,0,c
  4867  001E3A  3602               	rlcf	DHT11_ReadData@data^0,f,c
  4868  001E3C  EF23  F00F         	goto	l149
  4869  001E40                     l2683:
  4870                           
  4871                           ;./DHT11.h: 17:             data = (data << 1);
  4872  001E40  5002               	movf	DHT11_ReadData@data^0,w,c
  4873  001E42  2402               	addwf	DHT11_ReadData@data^0,w,c
  4874  001E44  6E02               	movwf	DHT11_ReadData@data^0,c
  4875  001E46                     l149:
  4876  001E46  BE83               	btfsc	131,7,c	;volatile
  4877  001E48  EF28  F00F         	goto	u1891
  4878  001E4C  EF2A  F00F         	goto	u1890
  4879  001E50                     u1891:
  4880  001E50  EF23  F00F         	goto	l149
  4881  001E54                     u1890:
  4882  001E54                     
  4883                           ;./DHT11.h: 19:     }
  4884  001E54  2A01               	incf	DHT11_ReadData@i^0,f,c
  4885  001E56  0E07               	movlw	7
  4886  001E58  6401               	cpfsgt	DHT11_ReadData@i^0,c
  4887  001E5A  EF31  F00F         	goto	u1901
  4888  001E5E  EF33  F00F         	goto	u1900
  4889  001E62                     u1901:
  4890  001E62  EF0B  F00F         	goto	l144
  4891  001E66                     u1900:
  4892  001E66                     
  4893                           ;./DHT11.h: 20:     return data;
  4894  001E66  5002               	movf	DHT11_ReadData@data^0,w,c
  4895  001E68  0012               	return		;funcret
  4896  001E6A                     __end_of_DHT11_ReadData:
  4897                           	opt callstack 0
  4898                           
  4899 ;; *************** function ___awdiv *****************
  4900 ;; Defined at:
  4901 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;  dividend        2    0[COMRAM] int 
  4904 ;;  divisor         2    2[COMRAM] int 
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;  quotient        2    6[COMRAM] int 
  4907 ;;  sign            1    5[COMRAM] unsigned char 
  4908 ;;  counter         1    4[COMRAM] unsigned char 
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  2    0[COMRAM] int 
  4911 ;; Registers used:
  4912 ;;		wreg, status,2, status,0
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4918 ;;      Params:         4       0       0       0       0       0       0       0       0
  4919 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4920 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4921 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4922 ;;Total ram usage:        8 bytes
  4923 ;; Hardware stack levels used:    1
  4924 ;; Hardware stack levels required when called:    1
  4925 ;; This function calls:
  4926 ;;		Nothing
  4927 ;; This function is called by:
  4928 ;;		_mostrarDatosSensores
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932                           	psect	text22
  4933  001714                     __ptext22:
  4934                           	opt callstack 0
  4935  001714                     ___awdiv:
  4936                           	opt callstack 27
  4937  001714  0E00               	movlw	0
  4938  001716  6E06               	movwf	___awdiv@sign^0,c
  4939  001718  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4940  00171A  EF93  F00B         	goto	u2180
  4941  00171E  EF91  F00B         	goto	u2181
  4942  001722                     u2181:
  4943  001722  EF99  F00B         	goto	l3021
  4944  001726                     u2180:
  4945  001726  6C03               	negf	___awdiv@divisor^0,c
  4946  001728  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4947  00172A  B0D8               	btfsc	status,0,c
  4948  00172C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4949  00172E  0E01               	movlw	1
  4950  001730  6E06               	movwf	___awdiv@sign^0,c
  4951  001732                     l3021:
  4952  001732  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4953  001734  EFA0  F00B         	goto	u2190
  4954  001738  EF9E  F00B         	goto	u2191
  4955  00173C                     u2191:
  4956  00173C  EFA6  F00B         	goto	l3027
  4957  001740                     u2190:
  4958  001740  6C01               	negf	___awdiv@dividend^0,c
  4959  001742  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4960  001744  B0D8               	btfsc	status,0,c
  4961  001746  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4962  001748  0E01               	movlw	1
  4963  00174A  1A06               	xorwf	___awdiv@sign^0,f,c
  4964  00174C                     l3027:
  4965  00174C  0E00               	movlw	0
  4966  00174E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4967  001750  0E00               	movlw	0
  4968  001752  6E07               	movwf	___awdiv@quotient^0,c
  4969  001754  5003               	movf	___awdiv@divisor^0,w,c
  4970  001756  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4971  001758  B4D8               	btfsc	status,2,c
  4972  00175A  EFB1  F00B         	goto	u2201
  4973  00175E  EFB3  F00B         	goto	u2200
  4974  001762                     u2201:
  4975  001762  EFDB  F00B         	goto	l3049
  4976  001766                     u2200:
  4977  001766  0E01               	movlw	1
  4978  001768  6E05               	movwf	___awdiv@counter^0,c
  4979  00176A  EFBB  F00B         	goto	l3035
  4980  00176E                     l3033:
  4981  00176E  90D8               	bcf	status,0,c
  4982  001770  3603               	rlcf	___awdiv@divisor^0,f,c
  4983  001772  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4984  001774  2A05               	incf	___awdiv@counter^0,f,c
  4985  001776                     l3035:
  4986  001776  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4987  001778  EFC0  F00B         	goto	u2211
  4988  00177C  EFC2  F00B         	goto	u2210
  4989  001780                     u2211:
  4990  001780  EFB7  F00B         	goto	l3033
  4991  001784                     u2210:
  4992  001784                     l3037:
  4993  001784  90D8               	bcf	status,0,c
  4994  001786  3607               	rlcf	___awdiv@quotient^0,f,c
  4995  001788  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4996  00178A  5003               	movf	___awdiv@divisor^0,w,c
  4997  00178C  5C01               	subwf	___awdiv@dividend^0,w,c
  4998  00178E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4999  001790  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5000  001792  A0D8               	btfss	status,0,c
  5001  001794  EFCE  F00B         	goto	u2221
  5002  001798  EFD0  F00B         	goto	u2220
  5003  00179C                     u2221:
  5004  00179C  EFD5  F00B         	goto	l3045
  5005  0017A0                     u2220:
  5006  0017A0  5003               	movf	___awdiv@divisor^0,w,c
  5007  0017A2  5E01               	subwf	___awdiv@dividend^0,f,c
  5008  0017A4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5009  0017A6  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5010  0017A8  8007               	bsf	___awdiv@quotient^0,0,c
  5011  0017AA                     l3045:
  5012  0017AA  90D8               	bcf	status,0,c
  5013  0017AC  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5014  0017AE  3203               	rrcf	___awdiv@divisor^0,f,c
  5015  0017B0  2E05               	decfsz	___awdiv@counter^0,f,c
  5016  0017B2  EFC2  F00B         	goto	l3037
  5017  0017B6                     l3049:
  5018  0017B6  5006               	movf	___awdiv@sign^0,w,c
  5019  0017B8  B4D8               	btfsc	status,2,c
  5020  0017BA  EFE1  F00B         	goto	u2231
  5021  0017BE  EFE3  F00B         	goto	u2230
  5022  0017C2                     u2231:
  5023  0017C2  EFE7  F00B         	goto	l3053
  5024  0017C6                     u2230:
  5025  0017C6  6C07               	negf	___awdiv@quotient^0,c
  5026  0017C8  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5027  0017CA  B0D8               	btfsc	status,0,c
  5028  0017CC  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5029  0017CE                     l3053:
  5030  0017CE  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5031  0017D2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5032  0017D6  0012               	return		;funcret
  5033  0017D8                     __end_of___awdiv:
  5034                           	opt callstack 0
  5035                           
  5036 ;; *************** function _fijaHoraRtc *****************
  5037 ;; Defined at:
  5038 ;;		line 318 in file "main.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;		None
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;		None
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  1    wreg      void 
  5045 ;; Registers used:
  5046 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5052 ;;      Params:         0       0       0       0       0       0       0       0       0
  5053 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5055 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5056 ;;Total ram usage:        0 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; Hardware stack levels required when called:    5
  5059 ;; This function calls:
  5060 ;;		_UART_printf
  5061 ;;		_escribe_rtc
  5062 ;;		_setRtc
  5063 ;; This function is called by:
  5064 ;;		_sistemaPrincipal
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           	psect	text23
  5069  001BBC                     __ptext23:
  5070                           	opt callstack 0
  5071  001BBC                     _fijaHoraRtc:
  5072                           	opt callstack 24
  5073  001BBC                     
  5074                           ;main.c: 320:     UART_printf("\r\n FIJA HORA \r\n");
  5075  001BBC  0ED0               	movlw	low STR_1
  5076  001BBE  6E02               	movwf	UART_printf@cadena^0,c
  5077  001BC0  0E7F               	movlw	high STR_1
  5078  001BC2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5079  001BC4  ECD8  F00E         	call	_UART_printf	;wreg free
  5080                           
  5081                           ;main.c: 323:     UART_printf("\r\n Envie las Horas en formato 24 Ej: 15 \r\n");
  5082  001BC8  0EDC               	movlw	low STR_2
  5083  001BCA  6E02               	movwf	UART_printf@cadena^0,c
  5084  001BCC  0E7C               	movlw	high STR_2
  5085  001BCE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5086  001BD0  ECD8  F00E         	call	_UART_printf	;wreg free
  5087  001BD4                     
  5088                           ;main.c: 324:     setRtc(0x02);
  5089  001BD4  0E02               	movlw	2
  5090  001BD6  ECC4  F00A         	call	_setRtc
  5091  001BDA                     
  5092                           ;main.c: 327:     if (!esperandoDatos) {
  5093  001BDA  505E               	movf	_esperandoDatos^0,w,c
  5094  001BDC  A4D8               	btfss	status,2,c
  5095  001BDE  EFF3  F00D         	goto	u2361
  5096  001BE2  EFF5  F00D         	goto	u2360
  5097  001BE6                     u2361:
  5098  001BE6  EFFE  F00D         	goto	l3151
  5099  001BEA                     u2360:
  5100  001BEA                     
  5101                           ;main.c: 328:         UART_printf("\r\n Envie los Minutos Ej: 25 \r\n");
  5102  001BEA  0EE5               	movlw	low STR_3
  5103  001BEC  6E02               	movwf	UART_printf@cadena^0,c
  5104  001BEE  0E7E               	movlw	high STR_3
  5105  001BF0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5106  001BF2  ECD8  F00E         	call	_UART_printf	;wreg free
  5107  001BF6                     
  5108                           ;main.c: 329:         setRtc(0x01);
  5109  001BF6  0E01               	movlw	1
  5110  001BF8  ECC4  F00A         	call	_setRtc
  5111  001BFC                     l3151:
  5112                           
  5113                           ;main.c: 333:     if (!esperandoDatos) {
  5114  001BFC  505E               	movf	_esperandoDatos^0,w,c
  5115  001BFE  A4D8               	btfss	status,2,c
  5116  001C00  EF04  F00E         	goto	u2371
  5117  001C04  EF06  F00E         	goto	u2370
  5118  001C08                     u2371:
  5119  001C08  EF11  F00E         	goto	l275
  5120  001C0C                     u2370:
  5121  001C0C                     
  5122                           ;main.c: 335:         UART_printf("\r\n HORA ESTABLECIDA CORRECTAMENTE \r\n");
  5123  001C0C  0E19               	movlw	low STR_4
  5124  001C0E  6E02               	movwf	UART_printf@cadena^0,c
  5125  001C10  0E7E               	movlw	high STR_4
  5126  001C12  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5127  001C14  ECD8  F00E         	call	_UART_printf	;wreg free
  5128  001C18                     
  5129                           ;main.c: 336:         escribe_rtc(0x00, 0);
  5130  001C18  0E00               	movlw	0
  5131  001C1A  6E03               	movwf	escribe_rtc@dato^0,c
  5132  001C1C  0E00               	movlw	0
  5133  001C1E  EC31  F011         	call	_escribe_rtc
  5134  001C22                     l275:
  5135  001C22  0012               	return		;funcret
  5136  001C24                     __end_of_fijaHoraRtc:
  5137                           	opt callstack 0
  5138                           
  5139 ;; *************** function _setRtc *****************
  5140 ;; Defined at:
  5141 ;;		line 157 in file "main.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  direccion       1    wreg     unsigned char 
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;  direccion       1    5[COMRAM] unsigned char 
  5146 ;;  Rx              1   10[COMRAM] unsigned char 
  5147 ;;  i               2    8[COMRAM] int 
  5148 ;;  datoCapturad    1    7[COMRAM] unsigned char 
  5149 ;;  dato            1    6[COMRAM] unsigned char 
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  1    wreg      void 
  5152 ;; Registers used:
  5153 ;;		wreg, status,2, status,0, cstack
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5159 ;;      Params:         0       0       0       0       0       0       0       0       0
  5160 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5161 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5162 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5163 ;;Total ram usage:        7 bytes
  5164 ;; Hardware stack levels used:    1
  5165 ;; Hardware stack levels required when called:    4
  5166 ;; This function calls:
  5167 ;;		_UART_read
  5168 ;;		_UART_write
  5169 ;;		_escribe_rtc
  5170 ;; This function is called by:
  5171 ;;		_fijaHoraRtc
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           
  5175                           	psect	text24
  5176  001588                     __ptext24:
  5177                           	opt callstack 0
  5178  001588                     _setRtc:
  5179                           	opt callstack 24
  5180                           
  5181                           ;incstack = 0
  5182                           ;setRtc@direccion stored from wreg
  5183  001588  6E06               	movwf	setRtc@direccion^0,c
  5184  00158A                     
  5185                           ;main.c: 158:     unsigned char dato;;main.c: 159:     char datoCapturado = 0;
  5186  00158A  0E00               	movlw	0
  5187  00158C  6E08               	movwf	setRtc@datoCapturado^0,c
  5188                           
  5189                           ;main.c: 161:     for (int i = 0; i < 2; i++) {
  5190  00158E  0E00               	movlw	0
  5191  001590  6E0A               	movwf	(setRtc@i+1)^0,c
  5192  001592  0E00               	movlw	0
  5193  001594  6E09               	movwf	setRtc@i^0,c
  5194  001596                     l2897:
  5195                           
  5196                           ;main.c: 162:         char Rx = UART_read();
  5197  001596  EC35  F00F         	call	_UART_read	;wreg free
  5198  00159A  6E0B               	movwf	setRtc@Rx^0,c
  5199  00159C                     
  5200                           ;main.c: 163:         if (Rx >= 48 && Rx <= 57) {
  5201  00159C  0E2F               	movlw	47
  5202  00159E  640B               	cpfsgt	setRtc@Rx^0,c
  5203  0015A0  EFD4  F00A         	goto	u2071
  5204  0015A4  EFD6  F00A         	goto	u2070
  5205  0015A8                     u2071:
  5206  0015A8  EFFA  F00A         	goto	l2911
  5207  0015AC                     u2070:
  5208  0015AC  0E3A               	movlw	58
  5209  0015AE  600B               	cpfslt	setRtc@Rx^0,c
  5210  0015B0  EFDC  F00A         	goto	u2081
  5211  0015B4  EFDE  F00A         	goto	u2080
  5212  0015B8                     u2081:
  5213  0015B8  EFFA  F00A         	goto	l2911
  5214  0015BC                     u2080:
  5215  0015BC                     
  5216                           ;main.c: 164:             if (!i) {
  5217  0015BC  5009               	movf	setRtc@i^0,w,c
  5218  0015BE  100A               	iorwf	(setRtc@i+1)^0,w,c
  5219  0015C0  A4D8               	btfss	status,2,c
  5220  0015C2  EFE5  F00A         	goto	u2091
  5221  0015C6  EFE7  F00A         	goto	u2090
  5222  0015CA                     u2091:
  5223  0015CA  EFF2  F00A         	goto	l2907
  5224  0015CE                     u2090:
  5225  0015CE                     
  5226                           ;main.c: 165:                 dato = ((Rx - 48) & 0x0F) << 4;
  5227  0015CE  C00B  F005         	movff	setRtc@Rx,??_setRtc
  5228  0015D2  0ED0               	movlw	208
  5229  0015D4  2605               	addwf	??_setRtc^0,f,c
  5230  0015D6  0E0F               	movlw	15
  5231  0015D8  1605               	andwf	??_setRtc^0,f,c
  5232  0015DA  3805               	swapf	??_setRtc^0,w,c
  5233  0015DC  0BF0               	andlw	240
  5234  0015DE  6E07               	movwf	setRtc@dato^0,c
  5235                           
  5236                           ;main.c: 166:             } else {
  5237  0015E0  EF01  F00B         	goto	l2915
  5238  0015E4                     l2907:
  5239                           
  5240                           ;main.c: 167:                 dato |= (Rx - 48) & 0x0F;
  5241  0015E4  500B               	movf	setRtc@Rx^0,w,c
  5242  0015E6  0FD0               	addlw	208
  5243  0015E8  0B0F               	andlw	15
  5244  0015EA  1207               	iorwf	setRtc@dato^0,f,c
  5245  0015EC                     
  5246                           ;main.c: 168:                 datoCapturado = 1;
  5247  0015EC  0E01               	movlw	1
  5248  0015EE  6E08               	movwf	setRtc@datoCapturado^0,c
  5249  0015F0  EF01  F00B         	goto	l2915
  5250  0015F4                     l2911:
  5251                           
  5252                           ;main.c: 171:             datoCapturado = 0;
  5253  0015F4  0E00               	movlw	0
  5254  0015F6  6E08               	movwf	setRtc@datoCapturado^0,c
  5255  0015F8                     
  5256                           ;main.c: 173:             UART_write('F');
  5257  0015F8  0E46               	movlw	70
  5258  0015FA  EC4D  F011         	call	_UART_write
  5259                           
  5260                           ;main.c: 174:             break;
  5261  0015FE  EF11  F00B         	goto	l2919
  5262  001602                     l2915:
  5263                           
  5264                           ;main.c: 176:     }
  5265  001602  4A09               	infsnz	setRtc@i^0,f,c
  5266  001604  2A0A               	incf	(setRtc@i+1)^0,f,c
  5267  001606  BE0A               	btfsc	(setRtc@i+1)^0,7,c
  5268  001608  EF0F  F00B         	goto	u2101
  5269  00160C  500A               	movf	(setRtc@i+1)^0,w,c
  5270  00160E  E109               	bnz	u2100
  5271  001610  0E02               	movlw	2
  5272  001612  5C09               	subwf	setRtc@i^0,w,c
  5273  001614  A0D8               	btfss	status,0,c
  5274  001616  EF0F  F00B         	goto	u2101
  5275  00161A  EF11  F00B         	goto	u2100
  5276  00161E                     u2101:
  5277  00161E  EFCB  F00A         	goto	l2897
  5278  001622                     u2100:
  5279  001622                     l2919:
  5280                           
  5281                           ;main.c: 178:     if (datoCapturado && !esperandoDatos)
  5282  001622  5008               	movf	setRtc@datoCapturado^0,w,c
  5283  001624  B4D8               	btfsc	status,2,c
  5284  001626  EF17  F00B         	goto	u2111
  5285  00162A  EF19  F00B         	goto	u2110
  5286  00162E                     u2111:
  5287  00162E  EF26  F00B         	goto	l227
  5288  001632                     u2110:
  5289  001632  505E               	movf	_esperandoDatos^0,w,c
  5290  001634  A4D8               	btfss	status,2,c
  5291  001636  EF1F  F00B         	goto	u2121
  5292  00163A  EF21  F00B         	goto	u2120
  5293  00163E                     u2121:
  5294  00163E  EF26  F00B         	goto	l227
  5295  001642                     u2120:
  5296  001642                     
  5297                           ;main.c: 179:         escribe_rtc(direccion, dato);
  5298  001642  C007  F003         	movff	setRtc@dato,escribe_rtc@dato
  5299  001646  5006               	movf	setRtc@direccion^0,w,c
  5300  001648  EC31  F011         	call	_escribe_rtc
  5301  00164C                     l227:
  5302  00164C  0012               	return		;funcret
  5303  00164E                     __end_of_setRtc:
  5304                           	opt callstack 0
  5305                           
  5306 ;; *************** function _escribe_rtc *****************
  5307 ;; Defined at:
  5308 ;;		line 2 in file "./RTC.h"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  direccion       1    wreg     unsigned char 
  5311 ;;  dato            1    2[COMRAM] unsigned char 
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;  direccion       1    3[COMRAM] unsigned char 
  5314 ;; Return value:  Size  Location     Type
  5315 ;;                  1    wreg      void 
  5316 ;; Registers used:
  5317 ;;		wreg, status,2, status,0, cstack
  5318 ;; Tracked objects:
  5319 ;;		On entry : 0/0
  5320 ;;		On exit  : 0/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5323 ;;      Params:         1       0       0       0       0       0       0       0       0
  5324 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5325 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5326 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5327 ;;Total ram usage:        2 bytes
  5328 ;; Hardware stack levels used:    1
  5329 ;; Hardware stack levels required when called:    3
  5330 ;; This function calls:
  5331 ;;		_i2c_detener
  5332 ;;		_i2c_envia_dato
  5333 ;;		_i2c_inicia_com
  5334 ;; This function is called by:
  5335 ;;		_setRtc
  5336 ;;		_fijaHoraRtc
  5337 ;;		_setRtcDefault
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341                           	psect	text25
  5342  002262                     __ptext25:
  5343                           	opt callstack 0
  5344  002262                     _escribe_rtc:
  5345                           	opt callstack 24
  5346                           
  5347                           ;incstack = 0
  5348                           ;escribe_rtc@direccion stored from wreg
  5349  002262  6E04               	movwf	escribe_rtc@direccion^0,c
  5350  002264                     
  5351                           ;./RTC.h: 3:     i2c_inicia_com();
  5352  002264  EC78  F011         	call	_i2c_inicia_com	;wreg free
  5353                           
  5354                           ;./RTC.h: 4:     i2c_envia_dato(0xD0);
  5355  002268  0ED0               	movlw	208
  5356  00226A  EC69  F011         	call	_i2c_envia_dato
  5357                           
  5358                           ;./RTC.h: 5:     i2c_envia_dato(direccion);
  5359  00226E  5004               	movf	escribe_rtc@direccion^0,w,c
  5360  002270  EC69  F011         	call	_i2c_envia_dato
  5361                           
  5362                           ;./RTC.h: 6:     i2c_envia_dato(dato);
  5363  002274  5003               	movf	escribe_rtc@dato^0,w,c
  5364  002276  EC69  F011         	call	_i2c_envia_dato
  5365                           
  5366                           ;./RTC.h: 7:     i2c_detener();
  5367  00227A  EC7C  F011         	call	_i2c_detener	;wreg free
  5368  00227E  0012               	return		;funcret
  5369  002280                     __end_of_escribe_rtc:
  5370                           	opt callstack 0
  5371                           
  5372 ;; *************** function _dameDatosSistema *****************
  5373 ;; Defined at:
  5374 ;;		line 637 in file "main.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;		None
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;  i               2   70[BANK0 ] int 
  5379 ;;  buffer         50   20[BANK0 ] unsigned char [50]
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  1    wreg      void 
  5382 ;; Registers used:
  5383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5389 ;;      Params:         0       0       0       0       0       0       0       0       0
  5390 ;;      Locals:         0      52       0       0       0       0       0       0       0
  5391 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5392 ;;      Totals:         3      52       0       0       0       0       0       0       0
  5393 ;;Total ram usage:       55 bytes
  5394 ;; Hardware stack levels used:    1
  5395 ;; Hardware stack levels required when called:    9
  5396 ;; This function calls:
  5397 ;;		_UART_printf
  5398 ;;		_UART_write
  5399 ;;		___wmul
  5400 ;;		_sprintf
  5401 ;; This function is called by:
  5402 ;;		_sistemaPrincipal
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           	psect	text26
  5407  00123E                     __ptext26:
  5408                           	opt callstack 0
  5409  00123E                     _dameDatosSistema:
  5410                           	opt callstack 20
  5411  00123E                     
  5412                           ;main.c: 639:     char buffer[50];;main.c: 641:     UART_write('I');
  5413  00123E  0E49               	movlw	73
  5414  001240  EC4D  F011         	call	_UART_write
  5415  001244                     
  5416                           ;main.c: 643:     UART_printf("\r\n\nHora | Regar(1 si 0 no) | Minutos de riego \r\n\n")
      +                          ;
  5417  001244  0E79               	movlw	low STR_25
  5418  001246  6E02               	movwf	UART_printf@cadena^0,c
  5419  001248  0E7C               	movlw	high STR_25
  5420  00124A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5421  00124C  ECD8  F00E         	call	_UART_printf	;wreg free
  5422  001250                     
  5423                           ;main.c: 645:     for (int i = 0; i < 24; i++) {
  5424  001250  0E00               	movlw	0
  5425  001252  0100               	movlb	0	; () banked
  5426  001254  6FF5               	movwf	(dameDatosSistema@i+1)& (0+255),b
  5427  001256  0E00               	movlw	0
  5428  001258  6FF4               	movwf	dameDatosSistema@i& (0+255),b
  5429  00125A                     l3321:
  5430                           
  5431                           ; BSR set to: 0
  5432                           ;main.c: 647:         sprintf(buffer, "%d | %d | %d \r\n", horarios[i].hora, horarios[i]
      +                          .regar,
  5433  00125A  0EC2               	movlw	low dameDatosSistema@buffer
  5434  00125C  6FAE               	movwf	sprintf@s& (0+255),b
  5435  00125E  0E00               	movlw	high dameDatosSistema@buffer
  5436  001260  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  5437  001262  0EE0               	movlw	low STR_26
  5438  001264  6FB0               	movwf	sprintf@fmt& (0+255),b
  5439  001266  0E7F               	movlw	high STR_26
  5440  001268  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  5441  00126A  C0F4  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  5442  00126E  C0F5  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  5443  001272  0E00               	movlw	0
  5444  001274  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5445  001276  0E03               	movlw	3
  5446  001278  6E03               	movwf	___wmul@multiplicand^0,c
  5447  00127A  ECFE  F010         	call	___wmul	;wreg free
  5448  00127E  0E00               	movlw	low _horarios
  5449  001280  2401               	addwf	?___wmul^0,w,c
  5450  001282  6ED9               	movwf	fsr2l,c
  5451  001284  0E01               	movlw	high _horarios
  5452  001286  2002               	addwfc	(?___wmul+1)^0,w,c
  5453  001288  6EDA               	movwf	fsr2h,c
  5454  00128A  50DF               	movf	indf2,w,c
  5455  00128C  6E58               	movwf	??_dameDatosSistema^0,c
  5456  00128E  5058               	movf	??_dameDatosSistema^0,w,c
  5457  001290  0100               	movlb	0	; () banked
  5458  001292  6FB2               	movwf	(?_sprintf+4)& (0+255),b
  5459  001294  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  5460  001296  C0F4  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  5461  00129A  C0F5  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  5462  00129E  0E00               	movlw	0
  5463  0012A0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5464  0012A2  0E03               	movlw	3
  5465  0012A4  6E03               	movwf	___wmul@multiplicand^0,c
  5466  0012A6  ECFE  F010         	call	___wmul	;wreg free
  5467  0012AA  0E01               	movlw	low (_horarios+1)
  5468  0012AC  2401               	addwf	?___wmul^0,w,c
  5469  0012AE  6ED9               	movwf	fsr2l,c
  5470  0012B0  0E01               	movlw	high (_horarios+1)
  5471  0012B2  2002               	addwfc	(?___wmul+1)^0,w,c
  5472  0012B4  6EDA               	movwf	fsr2h,c
  5473  0012B6  50DF               	movf	indf2,w,c
  5474  0012B8  6E59               	movwf	(??_dameDatosSistema+1)^0,c
  5475  0012BA  5059               	movf	(??_dameDatosSistema+1)^0,w,c
  5476  0012BC  0100               	movlb	0	; () banked
  5477  0012BE  6FB4               	movwf	(?_sprintf+6)& (0+255),b
  5478  0012C0  6BB5               	clrf	(?_sprintf+7)& (0+255),b
  5479  0012C2  C0F4  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  5480  0012C6  C0F5  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  5481  0012CA  0E00               	movlw	0
  5482  0012CC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5483  0012CE  0E03               	movlw	3
  5484  0012D0  6E03               	movwf	___wmul@multiplicand^0,c
  5485  0012D2  ECFE  F010         	call	___wmul	;wreg free
  5486  0012D6  0E02               	movlw	low (_horarios+2)
  5487  0012D8  2401               	addwf	?___wmul^0,w,c
  5488  0012DA  6ED9               	movwf	fsr2l,c
  5489  0012DC  0E01               	movlw	high (_horarios+2)
  5490  0012DE  2002               	addwfc	(?___wmul+1)^0,w,c
  5491  0012E0  6EDA               	movwf	fsr2h,c
  5492  0012E2  50DF               	movf	indf2,w,c
  5493  0012E4  6E5A               	movwf	(??_dameDatosSistema+2)^0,c
  5494  0012E6  505A               	movf	(??_dameDatosSistema+2)^0,w,c
  5495  0012E8  0100               	movlb	0	; () banked
  5496  0012EA  6FB6               	movwf	(?_sprintf+8)& (0+255),b
  5497  0012EC  6BB7               	clrf	(?_sprintf+9)& (0+255),b
  5498  0012EE  EC5F  F00F         	call	_sprintf	;wreg free
  5499  0012F2                     
  5500                           ;main.c: 650:         UART_printf(buffer);
  5501  0012F2  0EC2               	movlw	low dameDatosSistema@buffer
  5502  0012F4  6E02               	movwf	UART_printf@cadena^0,c
  5503  0012F6  0E00               	movlw	high dameDatosSistema@buffer
  5504  0012F8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5505  0012FA  ECD8  F00E         	call	_UART_printf	;wreg free
  5506  0012FE                     
  5507                           ;main.c: 652:     }
  5508  0012FE  0100               	movlb	0	; () banked
  5509  001300  4BF4               	infsnz	dameDatosSistema@i& (0+255),f,b
  5510  001302  2BF5               	incf	(dameDatosSistema@i+1)& (0+255),f,b
  5511  001304                     
  5512                           ; BSR set to: 0
  5513  001304  BFF5               	btfsc	(dameDatosSistema@i+1)& (0+255),7,b
  5514  001306  EF8E  F009         	goto	u2591
  5515  00130A  51F5               	movf	(dameDatosSistema@i+1)& (0+255),w,b
  5516  00130C  E109               	bnz	u2590
  5517  00130E  0E18               	movlw	24
  5518  001310  5DF4               	subwf	dameDatosSistema@i& (0+255),w,b
  5519  001312  A0D8               	btfss	status,0,c
  5520  001314  EF8E  F009         	goto	u2591
  5521  001318  EF90  F009         	goto	u2590
  5522  00131C                     u2591:
  5523  00131C  EF2D  F009         	goto	l3321
  5524  001320                     u2590:
  5525  001320                     
  5526                           ; BSR set to: 0
  5527                           ;main.c: 654:     UART_write('I');
  5528  001320  0E49               	movlw	73
  5529  001322  EC4D  F011         	call	_UART_write
  5530  001326  0012               	return		;funcret
  5531  001328                     __end_of_dameDatosSistema:
  5532                           	opt callstack 0
  5533                           
  5534 ;; *************** function _sprintf *****************
  5535 ;; Defined at:
  5536 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;  s               2    0[BANK0 ] PTR unsigned char 
  5539 ;;		 -> mostrarDatosSensoresWIFI@buffer(50), mostrarDatosSensores@buffer(50), dameDatosSistema@buffer(50), 
  5540 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  5541 ;;		 -> STR_35(29), STR_34(32), STR_33(40), STR_32(38), 
  5542 ;;		 -> STR_31(42), STR_30(29), STR_29(32), STR_26(16), 
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;  f               6   14[BANK0 ] struct _IO_FILE
  5545 ;;  ap              2   12[BANK0 ] PTR void [1]
  5546 ;;		 -> ?_sprintf(2), 
  5547 ;;  ret             2    0        int 
  5548 ;; Return value:  Size  Location     Type
  5549 ;;                  2    0[BANK0 ] int 
  5550 ;; Registers used:
  5551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5552 ;; Tracked objects:
  5553 ;;		On entry : 0/0
  5554 ;;		On exit  : 0/0
  5555 ;;		Unchanged: 0/0
  5556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5557 ;;      Params:         0      10       0       0       0       0       0       0       0
  5558 ;;      Locals:         0      10       0       0       0       0       0       0       0
  5559 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5560 ;;      Totals:         0      20       0       0       0       0       0       0       0
  5561 ;;Total ram usage:       20 bytes
  5562 ;; Hardware stack levels used:    1
  5563 ;; Hardware stack levels required when called:    8
  5564 ;; This function calls:
  5565 ;;		_vfprintf
  5566 ;; This function is called by:
  5567 ;;		_dameDatosSistema
  5568 ;;		_mostrarDatosSensores
  5569 ;;		_mostrarDatosSensoresWIFI
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           	psect	text27
  5574  001EBE                     __ptext27:
  5575                           	opt callstack 0
  5576  001EBE                     _sprintf:
  5577                           	opt callstack 20
  5578  001EBE  0EB2               	movlw	low (?_sprintf+4)
  5579  001EC0  0100               	movlb	0	; () banked
  5580  001EC2  6FBA               	movwf	sprintf@ap& (0+255),b
  5581  001EC4  0E00               	movlw	high (?_sprintf+4)
  5582  001EC6  6FBB               	movwf	(sprintf@ap+1)& (0+255),b
  5583  001EC8  C0AE  F0BC         	movff	sprintf@s,sprintf@f
  5584  001ECC  C0AF  F0BD         	movff	sprintf@s+1,sprintf@f+1
  5585  001ED0                     
  5586                           ; BSR set to: 0
  5587  001ED0  0E00               	movlw	0
  5588  001ED2  6FBF               	movwf	(sprintf@f+3)& (0+255),b
  5589  001ED4  0E00               	movlw	0
  5590  001ED6  6FBE               	movwf	(sprintf@f+2)& (0+255),b
  5591  001ED8                     
  5592                           ; BSR set to: 0
  5593  001ED8  0E00               	movlw	0
  5594  001EDA  6FC1               	movwf	(sprintf@f+5)& (0+255),b
  5595  001EDC  0E00               	movlw	0
  5596  001EDE  6FC0               	movwf	(sprintf@f+4)& (0+255),b
  5597  001EE0                     
  5598                           ; BSR set to: 0
  5599  001EE0  0EBC               	movlw	low sprintf@f
  5600  001EE2  6E50               	movwf	vfprintf@fp^0,c
  5601  001EE4  0E00               	movlw	high sprintf@f
  5602  001EE6  6E51               	movwf	(vfprintf@fp+1)^0,c
  5603  001EE8  C0B0  F052         	movff	sprintf@fmt,vfprintf@fmt
  5604  001EEC  C0B1  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5605  001EF0  0EBA               	movlw	low sprintf@ap
  5606  001EF2  6E54               	movwf	vfprintf@ap^0,c
  5607  001EF4  0E00               	movlw	high sprintf@ap
  5608  001EF6  6E55               	movwf	(vfprintf@ap+1)^0,c
  5609  001EF8  ECA7  F00E         	call	_vfprintf	;wreg free
  5610  001EFC  0100               	movlb	0	; () banked
  5611  001EFE  51BE               	movf	(sprintf@f+2)& (0+255),w,b
  5612  001F00  25AE               	addwf	sprintf@s& (0+255),w,b
  5613  001F02  6ED9               	movwf	fsr2l,c
  5614  001F04  51BF               	movf	(sprintf@f+3)& (0+255),w,b
  5615  001F06  21AF               	addwfc	(sprintf@s+1)& (0+255),w,b
  5616  001F08  6EDA               	movwf	fsr2h,c
  5617  001F0A  0E00               	movlw	0
  5618  001F0C  6EDF               	movwf	indf2,c
  5619  001F0E                     
  5620                           ; BSR set to: 0
  5621  001F0E  0012               	return		;funcret
  5622  001F10                     __end_of_sprintf:
  5623                           	opt callstack 0
  5624                           
  5625 ;; *************** function _vfprintf *****************
  5626 ;; Defined at:
  5627 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  5630 ;;		 -> sprintf@f(6), 
  5631 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  5632 ;;		 -> STR_35(29), STR_34(32), STR_33(40), STR_32(38), 
  5633 ;;		 -> STR_31(42), STR_30(29), STR_29(32), STR_26(16), 
  5634 ;;  ap              2   83[COMRAM] PTR PTR void 
  5635 ;;		 -> sprintf@ap(2), 
  5636 ;; Auto vars:     Size  Location     Type
  5637 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  5638 ;;		 -> STR_35(29), STR_34(32), STR_33(40), STR_32(38), 
  5639 ;;		 -> STR_31(42), STR_30(29), STR_29(32), STR_26(16), 
  5640 ;; Return value:  Size  Location     Type
  5641 ;;                  2   79[COMRAM] int 
  5642 ;; Registers used:
  5643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5644 ;; Tracked objects:
  5645 ;;		On entry : 0/0
  5646 ;;		On exit  : 0/0
  5647 ;;		Unchanged: 0/0
  5648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5649 ;;      Params:         6       0       0       0       0       0       0       0       0
  5650 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5651 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5652 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5653 ;;Total ram usage:        8 bytes
  5654 ;; Hardware stack levels used:    1
  5655 ;; Hardware stack levels required when called:    7
  5656 ;; This function calls:
  5657 ;;		_vfpfcnvrt
  5658 ;; This function is called by:
  5659 ;;		_sprintf
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           	psect	text28
  5664  001D4E                     __ptext28:
  5665                           	opt callstack 0
  5666  001D4E                     _vfprintf:
  5667                           	opt callstack 20
  5668  001D4E                     
  5669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5670  001D4E  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  5671  001D52  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5672  001D56                     
  5673                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5674  001D56  0E00               	movlw	0
  5675  001D58  0100               	movlb	0	; () banked
  5676  001D5A  6F79               	movwf	(_nout+1)& (0+255),b
  5677  001D5C  0E00               	movlw	0
  5678  001D5E  6F78               	movwf	_nout& (0+255),b
  5679                           
  5680                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5681  001D60  EFC5  F00E         	goto	l2859
  5682  001D64                     l2857:
  5683                           
  5684                           ; BSR set to: 0
  5685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5686  001D64  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  5687  001D68  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5688  001D6C  0E56               	movlw	low vfprintf@cfmt
  5689  001D6E  6E42               	movwf	vfpfcnvrt@fmt^0,c
  5690  001D70  0E00               	movlw	high vfprintf@cfmt
  5691  001D72  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5692  001D74  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  5693  001D78  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5694  001D7C  ECD2  F003         	call	_vfpfcnvrt	;wreg free
  5695  001D80  5040               	movf	?_vfpfcnvrt^0,w,c
  5696  001D82  0100               	movlb	0	; () banked
  5697  001D84  2778               	addwf	_nout& (0+255),f,b
  5698  001D86  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  5699  001D88  2379               	addwfc	(_nout+1)& (0+255),f,b
  5700  001D8A                     l2859:
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5704  001D8A  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  5705  001D8E  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5706  001D92                     	if	0	;tblptru may be non-zero
  5707  001D92                     	endif
  5708  001D92                     	if	0	;tblptru may be non-zero
  5709  001D92                     	endif
  5710  001D92  0008               	tblrd		*
  5711  001D94  50F5               	movf	tablat,w,c
  5712  001D96  0900               	iorlw	0
  5713  001D98  A4D8               	btfss	status,2,c
  5714  001D9A  EFD1  F00E         	goto	u2041
  5715  001D9E  EFD3  F00E         	goto	u2040
  5716  001DA2                     u2041:
  5717  001DA2  EFB2  F00E         	goto	l2857
  5718  001DA6                     u2040:
  5719  001DA6                     
  5720                           ; BSR set to: 0
  5721                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5722  001DA6  C078  F050         	movff	_nout,?_vfprintf
  5723  001DAA  C079  F051         	movff	_nout+1,?_vfprintf+1
  5724  001DAE                     
  5725                           ; BSR set to: 0
  5726  001DAE  0012               	return		;funcret
  5727  001DB0                     __end_of_vfprintf:
  5728                           	opt callstack 0
  5729                           
  5730 ;; *************** function _vfpfcnvrt *****************
  5731 ;; Defined at:
  5732 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  5735 ;;		 -> sprintf@f(6), 
  5736 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  5737 ;;		 -> vfprintf@cfmt(2), 
  5738 ;;  ap              2   67[COMRAM] PTR PTR void 
  5739 ;;		 -> sprintf@ap(2), 
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;  ll              8   71[COMRAM] long long 
  5742 ;;  llu             8    0        unsigned long long 
  5743 ;;  f               4    0        unsigned long long 
  5744 ;;  vp              3    0        PTR void 
  5745 ;;  ct              3    0        unsigned char [3]
  5746 ;;  cp              3    0        PTR unsigned char 
  5747 ;;  i               2    0        int 
  5748 ;;  done            2    0        int 
  5749 ;;  c               1    0        unsigned char 
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  2   63[COMRAM] int 
  5752 ;; Registers used:
  5753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5759 ;;      Params:         6       0       0       0       0       0       0       0       0
  5760 ;;      Locals:         8       0       0       0       0       0       0       0       0
  5761 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5762 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5763 ;;Total ram usage:       16 bytes
  5764 ;; Hardware stack levels used:    1
  5765 ;; Hardware stack levels required when called:    6
  5766 ;; This function calls:
  5767 ;;		_dtoa
  5768 ;;		_fputc
  5769 ;; This function is called by:
  5770 ;;		_vfprintf
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774                           	psect	text29
  5775  0007A4                     __ptext29:
  5776                           	opt callstack 0
  5777  0007A4                     _vfpfcnvrt:
  5778                           	opt callstack 20
  5779  0007A4                     
  5780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5781  0007A4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5782  0007A8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5783  0007AC  CFDE FFF6          	movff	postinc2,tblptrl
  5784  0007B0  CFDD FFF7          	movff	postdec2,tblptrh
  5785  0007B4                     	if	0	;tblptru may be non-zero
  5786  0007B4                     	endif
  5787  0007B4                     	if	0	;tblptru may be non-zero
  5788  0007B4                     	endif
  5789  0007B4  0008               	tblrd		*
  5790  0007B6  50F5               	movf	tablat,w,c
  5791  0007B8  0A25               	xorlw	37
  5792  0007BA  A4D8               	btfss	status,2,c
  5793  0007BC  EFE2  F003         	goto	u1931
  5794  0007C0  EFE4  F003         	goto	u1930
  5795  0007C4                     u1931:
  5796  0007C4  EF90  F004         	goto	l2755
  5797  0007C8                     u1930:
  5798  0007C8                     
  5799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5800  0007C8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5801  0007CC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5802  0007D0  2ADE               	incf	postinc2,f,c
  5803  0007D2  0E00               	movlw	0
  5804  0007D4  22DD               	addwfc	postdec2,f,c
  5805  0007D6                     
  5806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5807  0007D6  0E00               	movlw	0
  5808  0007D8  0100               	movlb	0	; () banked
  5809  0007DA  6F7B               	movwf	(_width+1)& (0+255),b
  5810  0007DC  0E00               	movlw	0
  5811  0007DE  6F7A               	movwf	_width& (0+255),b
  5812  0007E0  C07A  F07E         	movff	_width,_flags
  5813  0007E4  C07B  F07F         	movff	_width+1,_flags+1
  5814  0007E8                     
  5815                           ; BSR set to: 0
  5816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5817  0007E8  697C               	setf	_prec& (0+255),b
  5818  0007EA  697D               	setf	(_prec+1)& (0+255),b
  5819  0007EC                     
  5820                           ; BSR set to: 0
  5821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5822  0007EC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5823  0007F0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5824  0007F4  CFDE FFF6          	movff	postinc2,tblptrl
  5825  0007F8  CFDD FFF7          	movff	postdec2,tblptrh
  5826  0007FC                     	if	0	;tblptru may be non-zero
  5827  0007FC                     	endif
  5828  0007FC                     	if	0	;tblptru may be non-zero
  5829  0007FC                     	endif
  5830  0007FC  0008               	tblrd		*
  5831  0007FE  50F5               	movf	tablat,w,c
  5832  000800  0A64               	xorlw	100
  5833  000802  B4D8               	btfsc	status,2,c
  5834  000804  EF06  F004         	goto	u1941
  5835  000808  EF08  F004         	goto	u1940
  5836  00080C                     u1941:
  5837  00080C  EF1A  F004         	goto	l2733
  5838  000810                     u1940:
  5839  000810                     
  5840                           ; BSR set to: 0
  5841  000810  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5842  000814  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5843  000818  CFDE FFF6          	movff	postinc2,tblptrl
  5844  00081C  CFDD FFF7          	movff	postdec2,tblptrh
  5845  000820                     	if	0	;tblptru may be non-zero
  5846  000820                     	endif
  5847  000820                     	if	0	;tblptru may be non-zero
  5848  000820                     	endif
  5849  000820  0008               	tblrd		*
  5850  000822  50F5               	movf	tablat,w,c
  5851  000824  0A69               	xorlw	105
  5852  000826  A4D8               	btfss	status,2,c
  5853  000828  EF18  F004         	goto	u1951
  5854  00082C  EF1A  F004         	goto	u1950
  5855  000830                     u1951:
  5856  000830  EF5A  F004         	goto	l2739
  5857  000834                     u1950:
  5858  000834                     l2733:
  5859                           
  5860                           ; BSR set to: 0
  5861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5862  000834  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5863  000838  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5864  00083C  2ADE               	incf	postinc2,f,c
  5865  00083E  0E00               	movlw	0
  5866  000840  22DD               	addwfc	postdec2,f,c
  5867                           
  5868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5869  000842  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5870  000846  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5871  00084A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  5872  00084E  0E02               	movlw	2
  5873  000850  26DE               	addwf	postinc2,f,c
  5874  000852  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  5875  000856  0E00               	movlw	0
  5876  000858  22DD               	addwfc	postdec2,f,c
  5877  00085A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5878  00085E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5879  000862  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  5880  000866  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  5881  00086A  0E00               	movlw	0
  5882  00086C  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  5883  00086E  0EFF               	movlw	-1
  5884  000870  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  5885  000872  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  5886  000874  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  5887  000876  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  5888  000878  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  5889  00087A  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  5890  00087C                     
  5891                           ; BSR set to: 0
  5892                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  5893  00087C  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5894  000880  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5895  000884  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  5896  000888  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5897  00088C  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5898  000890  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5899  000894  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5900  000898  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5901  00089C  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5902  0008A0  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5903  0008A4  EC7D  F001         	call	_dtoa	;wreg free
  5904  0008A8  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  5905  0008AC  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5906  0008B0  EFAB  F004         	goto	l457
  5907  0008B4                     l2739:
  5908                           
  5909                           ; BSR set to: 0
  5910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5911  0008B4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5912  0008B8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5913  0008BC  CFDE FFF6          	movff	postinc2,tblptrl
  5914  0008C0  CFDD FFF7          	movff	postdec2,tblptrh
  5915  0008C4                     	if	0	;tblptru may be non-zero
  5916  0008C4                     	endif
  5917  0008C4                     	if	0	;tblptru may be non-zero
  5918  0008C4                     	endif
  5919  0008C4  0008               	tblrd		*
  5920  0008C6  50F5               	movf	tablat,w,c
  5921  0008C8  0A25               	xorlw	37
  5922  0008CA  A4D8               	btfss	status,2,c
  5923  0008CC  EF6A  F004         	goto	u1961
  5924  0008D0  EF6C  F004         	goto	u1960
  5925  0008D4                     u1961:
  5926  0008D4  EF83  F004         	goto	l2749
  5927  0008D8                     u1960:
  5928  0008D8                     
  5929                           ; BSR set to: 0
  5930                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5931  0008D8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5932  0008DC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5933  0008E0  2ADE               	incf	postinc2,f,c
  5934  0008E2  0E00               	movlw	0
  5935  0008E4  22DD               	addwfc	postdec2,f,c
  5936  0008E6                     
  5937                           ; BSR set to: 0
  5938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5939  0008E6  0E00               	movlw	0
  5940  0008E8  6E02               	movwf	(fputc@c+1)^0,c
  5941  0008EA  0E25               	movlw	37
  5942  0008EC  6E01               	movwf	fputc@c^0,c
  5943  0008EE  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5944  0008F2  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5945  0008F6  ECFB  F009         	call	_fputc	;wreg free
  5946  0008FA                     l2745:
  5947                           
  5948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5949  0008FA  0E00               	movlw	0
  5950  0008FC  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5951  0008FE  0E01               	movlw	1
  5952  000900  6E40               	movwf	?_vfpfcnvrt^0,c
  5953  000902  EFAB  F004         	goto	l457
  5954  000906                     l2749:
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5958  000906  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5959  00090A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5960  00090E  2ADE               	incf	postinc2,f,c
  5961  000910  0E00               	movlw	0
  5962  000912  22DD               	addwfc	postdec2,f,c
  5963  000914                     
  5964                           ; BSR set to: 0
  5965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  5966  000914  0E00               	movlw	0
  5967  000916  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5968  000918  0E00               	movlw	0
  5969  00091A  6E40               	movwf	?_vfpfcnvrt^0,c
  5970  00091C  EFAB  F004         	goto	l457
  5971  000920                     l2755:
  5972                           
  5973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5974  000920  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5975  000924  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5976  000928  CFDE FFF6          	movff	postinc2,tblptrl
  5977  00092C  CFDD FFF7          	movff	postdec2,tblptrh
  5978  000930                     	if	0	;tblptru may be non-zero
  5979  000930                     	endif
  5980  000930                     	if	0	;tblptru may be non-zero
  5981  000930                     	endif
  5982  000930  0008               	tblrd		*
  5983  000932  50F5               	movf	tablat,w,c
  5984  000934  6E01               	movwf	fputc@c^0,c
  5985  000936  6A02               	clrf	(fputc@c+1)^0,c
  5986  000938  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5987  00093C  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5988  000940  ECFB  F009         	call	_fputc	;wreg free
  5989  000944                     
  5990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5991  000944  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5992  000948  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5993  00094C  2ADE               	incf	postinc2,f,c
  5994  00094E  0E00               	movlw	0
  5995  000950  22DD               	addwfc	postdec2,f,c
  5996  000952  EF7D  F004         	goto	l2745
  5997  000956                     l457:
  5998  000956  0012               	return		;funcret
  5999  000958                     __end_of_vfpfcnvrt:
  6000                           	opt callstack 0
  6001                           
  6002 ;; *************** function _dtoa *****************
  6003 ;; Defined at:
  6004 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6007 ;;		 -> sprintf@f(6), 
  6008 ;;  d               8   29[COMRAM] long long 
  6009 ;; Auto vars:     Size  Location     Type
  6010 ;;  n               8   53[COMRAM] long long 
  6011 ;;  i               2   61[COMRAM] int 
  6012 ;;  s               2   51[COMRAM] int 
  6013 ;;  w               2   49[COMRAM] int 
  6014 ;;  p               2   47[COMRAM] int 
  6015 ;; Return value:  Size  Location     Type
  6016 ;;                  2   27[COMRAM] int 
  6017 ;; Registers used:
  6018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6019 ;; Tracked objects:
  6020 ;;		On entry : 0/0
  6021 ;;		On exit  : 0/0
  6022 ;;		Unchanged: 0/0
  6023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6024 ;;      Params:        10       0       0       0       0       0       0       0       0
  6025 ;;      Locals:        18       0       0       0       0       0       0       0       0
  6026 ;;      Temps:          8       0       0       0       0       0       0       0       0
  6027 ;;      Totals:        36       0       0       0       0       0       0       0       0
  6028 ;;Total ram usage:       36 bytes
  6029 ;; Hardware stack levels used:    1
  6030 ;; Hardware stack levels required when called:    5
  6031 ;; This function calls:
  6032 ;;		___aodiv
  6033 ;;		___aomod
  6034 ;;		_abs
  6035 ;;		_pad
  6036 ;; This function is called by:
  6037 ;;		_vfpfcnvrt
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           	psect	text30
  6042  0002FA                     __ptext30:
  6043                           	opt callstack 0
  6044  0002FA                     _dtoa:
  6045                           	opt callstack 20
  6046  0002FA                     
  6047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  6048  0002FA  C01E  F036         	movff	dtoa@d,dtoa@n
  6049  0002FE  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  6050  000302  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  6051  000306  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  6052  00030A  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  6053  00030E  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  6054  000312  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  6055  000316  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  6056  00031A                     
  6057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  6058  00031A  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  6059  00031C  EF92  F001         	goto	u1691
  6060  000320  EF95  F001         	goto	u1690
  6061  000324                     u1691:
  6062  000324  0E01               	movlw	1
  6063  000326  EF96  F001         	goto	u1700
  6064  00032A                     u1690:
  6065  00032A  0E00               	movlw	0
  6066  00032C                     u1700:
  6067  00032C  6E34               	movwf	dtoa@s^0,c
  6068  00032E  6A35               	clrf	(dtoa@s+1)^0,c
  6069                           
  6070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  6071  000330  5034               	movf	dtoa@s^0,w,c
  6072  000332  1035               	iorwf	(dtoa@s+1)^0,w,c
  6073  000334  B4D8               	btfsc	status,2,c
  6074  000336  EF9F  F001         	goto	u1711
  6075  00033A  EFA1  F001         	goto	u1710
  6076  00033E                     u1711:
  6077  00033E  EFB1  F001         	goto	l2591
  6078  000342                     u1710:
  6079  000342                     
  6080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  6081  000342  1E3D               	comf	(dtoa@n+7)^0,f,c
  6082  000344  1E3C               	comf	(dtoa@n+6)^0,f,c
  6083  000346  1E3B               	comf	(dtoa@n+5)^0,f,c
  6084  000348  1E3A               	comf	(dtoa@n+4)^0,f,c
  6085  00034A  1E39               	comf	(dtoa@n+3)^0,f,c
  6086  00034C  1E38               	comf	(dtoa@n+2)^0,f,c
  6087  00034E  1E37               	comf	(dtoa@n+1)^0,f,c
  6088  000350  6C36               	negf	dtoa@n^0,c
  6089  000352  0E00               	movlw	0
  6090  000354  2237               	addwfc	(dtoa@n+1)^0,f,c
  6091  000356  2238               	addwfc	(dtoa@n+2)^0,f,c
  6092  000358  2239               	addwfc	(dtoa@n+3)^0,f,c
  6093  00035A  223A               	addwfc	(dtoa@n+4)^0,f,c
  6094  00035C  223B               	addwfc	(dtoa@n+5)^0,f,c
  6095  00035E  223C               	addwfc	(dtoa@n+6)^0,f,c
  6096  000360  223D               	addwfc	(dtoa@n+7)^0,f,c
  6097  000362                     l2591:
  6098                           
  6099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  6100  000362  0100               	movlb	0	; () banked
  6101  000364  BF7D               	btfsc	(_prec+1)& (0+255),7,b
  6102  000366  EFB7  F001         	goto	u1721
  6103  00036A  EFB9  F001         	goto	u1720
  6104  00036E                     u1721:
  6105  00036E  EFBA  F001         	goto	l2595
  6106  000372                     u1720:
  6107  000372                     
  6108                           ; BSR set to: 0
  6109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  6110  000372  937E               	bcf	_flags& (0+255),1,b
  6111  000374                     l2595:
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  6115  000374  BF7D               	btfsc	(_prec+1)& (0+255),7,b
  6116  000376  EFC7  F001         	goto	u1730
  6117  00037A  517D               	movf	(_prec+1)& (0+255),w,b
  6118  00037C  E106               	bnz	u1731
  6119  00037E  057C               	decf	_prec& (0+255),w,b
  6120  000380  B0D8               	btfsc	status,0,c
  6121  000382  EFC5  F001         	goto	u1731
  6122  000386  EFC7  F001         	goto	u1730
  6123  00038A                     u1731:
  6124  00038A  EFCD  F001         	goto	l430
  6125  00038E                     u1730:
  6126  00038E                     
  6127                           ; BSR set to: 0
  6128  00038E  0E00               	movlw	0
  6129  000390  6E31               	movwf	(dtoa@p+1)^0,c
  6130  000392  0E01               	movlw	1
  6131  000394  6E30               	movwf	dtoa@p^0,c
  6132  000396  EFD1  F001         	goto	l432
  6133  00039A                     l430:
  6134                           
  6135                           ; BSR set to: 0
  6136  00039A  C07C  F030         	movff	_prec,dtoa@p
  6137  00039E  C07D  F031         	movff	_prec+1,dtoa@p+1
  6138  0003A2                     l432:
  6139                           
  6140                           ; BSR set to: 0
  6141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  6142  0003A2  C07A  F032         	movff	_width,dtoa@w
  6143  0003A6  C07B  F033         	movff	_width+1,dtoa@w+1
  6144  0003AA                     
  6145                           ; BSR set to: 0
  6146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  6147  0003AA  5034               	movf	dtoa@s^0,w,c
  6148  0003AC  1035               	iorwf	(dtoa@s+1)^0,w,c
  6149  0003AE  A4D8               	btfss	status,2,c
  6150  0003B0  EFDC  F001         	goto	u1741
  6151  0003B4  EFDE  F001         	goto	u1740
  6152  0003B8                     u1741:
  6153  0003B8  EFE5  F001         	goto	l2603
  6154  0003BC                     u1740:
  6155  0003BC                     
  6156                           ; BSR set to: 0
  6157  0003BC  A57E               	btfss	_flags& (0+255),2,b
  6158  0003BE  EFE3  F001         	goto	u1751
  6159  0003C2  EFE5  F001         	goto	u1750
  6160  0003C6                     u1751:
  6161  0003C6  EFE8  F001         	goto	l2605
  6162  0003CA                     u1750:
  6163  0003CA                     l2603:
  6164                           
  6165                           ; BSR set to: 0
  6166                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  6167  0003CA  0632               	decf	dtoa@w^0,f,c
  6168  0003CC  A0D8               	btfss	status,0,c
  6169  0003CE  0633               	decf	(dtoa@w+1)^0,f,c
  6170  0003D0                     l2605:
  6171                           
  6172                           ; BSR set to: 0
  6173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  6174  0003D0  0E00               	movlw	0
  6175  0003D2  6E3F               	movwf	(dtoa@i+1)^0,c
  6176  0003D4  0E1F               	movlw	31
  6177  0003D6  6E3E               	movwf	dtoa@i^0,c
  6178  0003D8                     
  6179                           ; BSR set to: 0
  6180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  6181  0003D8  0E00               	movlw	0
  6182  0003DA  6FAD               	movwf	(_dbuf+31)& (0+255),b
  6183                           
  6184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6185  0003DC  EF6C  F002         	goto	l2619
  6186  0003E0                     l2609:
  6187                           
  6188                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  6189  0003E0  063E               	decf	dtoa@i^0,f,c
  6190  0003E2  A0D8               	btfss	status,0,c
  6191  0003E4  063F               	decf	(dtoa@i+1)^0,f,c
  6192  0003E6                     
  6193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  6194  0003E6  0E8E               	movlw	low _dbuf
  6195  0003E8  243E               	addwf	dtoa@i^0,w,c
  6196  0003EA  6ED9               	movwf	fsr2l,c
  6197  0003EC  0E00               	movlw	high _dbuf
  6198  0003EE  203F               	addwfc	(dtoa@i+1)^0,w,c
  6199  0003F0  6EDA               	movwf	fsr2h,c
  6200  0003F2  C036  F001         	movff	dtoa@n,___aomod@dividend
  6201  0003F6  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6202  0003FA  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6203  0003FE  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6204  000402  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6205  000406  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6206  00040A  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6207  00040E  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6208  000412  0E0A               	movlw	10
  6209  000414  6E09               	movwf	___aomod@divisor^0,c
  6210  000416  0E00               	movlw	0
  6211  000418  6E0A               	movwf	(___aomod@divisor+1)^0,c
  6212  00041A  0E00               	movlw	0
  6213  00041C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  6214  00041E  0E00               	movlw	0
  6215  000420  6E0C               	movwf	(___aomod@divisor+3)^0,c
  6216  000422  0E00               	movlw	0
  6217  000424  6E0D               	movwf	(___aomod@divisor+4)^0,c
  6218  000426  0E00               	movlw	0
  6219  000428  6E0E               	movwf	(___aomod@divisor+5)^0,c
  6220  00042A  0E00               	movlw	0
  6221  00042C  6E0F               	movwf	(___aomod@divisor+6)^0,c
  6222  00042E  0E00               	movlw	0
  6223  000430  6E10               	movwf	(___aomod@divisor+7)^0,c
  6224  000432  EC29  F006         	call	___aomod	;wreg free
  6225  000436  C001  F026         	movff	?___aomod,??_dtoa
  6226  00043A  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6227  00043E  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6228  000442  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6229  000446  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6230  00044A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6231  00044E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6232  000452  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6233  000456  C026  F013         	movff	??_dtoa,abs@a
  6234  00045A  C028  F014         	movff	??_dtoa+2,abs@a+1
  6235  00045E  EC39  F010         	call	_abs	;wreg free
  6236  000462  5013               	movf	?_abs^0,w,c
  6237  000464  0F30               	addlw	48
  6238  000466  6EDF               	movwf	indf2,c
  6239  000468                     
  6240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  6241  000468  0630               	decf	dtoa@p^0,f,c
  6242  00046A  A0D8               	btfss	status,0,c
  6243  00046C  0631               	decf	(dtoa@p+1)^0,f,c
  6244  00046E                     
  6245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  6246  00046E  0632               	decf	dtoa@w^0,f,c
  6247  000470  A0D8               	btfss	status,0,c
  6248  000472  0633               	decf	(dtoa@w+1)^0,f,c
  6249  000474                     
  6250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  6251  000474  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6252  000478  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6253  00047C  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6254  000480  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6255  000484  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6256  000488  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6257  00048C  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6258  000490  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6259  000494  0E0A               	movlw	10
  6260  000496  6E09               	movwf	___aodiv@divisor^0,c
  6261  000498  0E00               	movlw	0
  6262  00049A  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  6263  00049C  0E00               	movlw	0
  6264  00049E  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  6265  0004A0  0E00               	movlw	0
  6266  0004A2  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  6267  0004A4  0E00               	movlw	0
  6268  0004A6  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  6269  0004A8  0E00               	movlw	0
  6270  0004AA  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  6271  0004AC  0E00               	movlw	0
  6272  0004AE  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  6273  0004B0  0E00               	movlw	0
  6274  0004B2  6E10               	movwf	(___aodiv@divisor+7)^0,c
  6275  0004B4  ECAC  F004         	call	___aodiv	;wreg free
  6276  0004B8  C001  F036         	movff	?___aodiv,dtoa@n
  6277  0004BC  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6278  0004C0  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6279  0004C4  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6280  0004C8  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6281  0004CC  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6282  0004D0  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6283  0004D4  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6284  0004D8                     l2619:
  6285                           
  6286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6287  0004D8  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  6288  0004DA  EF77  F002         	goto	u1761
  6289  0004DE  503F               	movf	(dtoa@i+1)^0,w,c
  6290  0004E0  E108               	bnz	u1760
  6291  0004E2  043E               	decf	dtoa@i^0,w,c
  6292  0004E4  A0D8               	btfss	status,0,c
  6293  0004E6  EF77  F002         	goto	u1761
  6294  0004EA  EF79  F002         	goto	u1760
  6295  0004EE                     u1761:
  6296  0004EE  EFAA  F002         	goto	l2629
  6297  0004F2                     u1760:
  6298  0004F2  5036               	movf	dtoa@n^0,w,c
  6299  0004F4  1037               	iorwf	(dtoa@n+1)^0,w,c
  6300  0004F6  1038               	iorwf	(dtoa@n+2)^0,w,c
  6301  0004F8  1039               	iorwf	(dtoa@n+3)^0,w,c
  6302  0004FA  103A               	iorwf	(dtoa@n+4)^0,w,c
  6303  0004FC  103B               	iorwf	(dtoa@n+5)^0,w,c
  6304  0004FE  103C               	iorwf	(dtoa@n+6)^0,w,c
  6305  000500  103D               	iorwf	(dtoa@n+7)^0,w,c
  6306  000502  A4D8               	btfss	status,2,c
  6307  000504  EF86  F002         	goto	u1771
  6308  000508  EF88  F002         	goto	u1770
  6309  00050C                     u1771:
  6310  00050C  EFF0  F001         	goto	l2609
  6311  000510                     u1770:
  6312  000510  BE31               	btfsc	(dtoa@p+1)^0,7,c
  6313  000512  EF95  F002         	goto	u1780
  6314  000516  5031               	movf	(dtoa@p+1)^0,w,c
  6315  000518  E106               	bnz	u1781
  6316  00051A  0430               	decf	dtoa@p^0,w,c
  6317  00051C  B0D8               	btfsc	status,0,c
  6318  00051E  EF93  F002         	goto	u1781
  6319  000522  EF95  F002         	goto	u1780
  6320  000526                     u1781:
  6321  000526  EFF0  F001         	goto	l2609
  6322  00052A                     u1780:
  6323  00052A  BE33               	btfsc	(dtoa@w+1)^0,7,c
  6324  00052C  EFA0  F002         	goto	u1791
  6325  000530  5033               	movf	(dtoa@w+1)^0,w,c
  6326  000532  E108               	bnz	u1790
  6327  000534  0432               	decf	dtoa@w^0,w,c
  6328  000536  A0D8               	btfss	status,0,c
  6329  000538  EFA0  F002         	goto	u1791
  6330  00053C  EFA2  F002         	goto	u1790
  6331  000540                     u1791:
  6332  000540  EFAA  F002         	goto	l2629
  6333  000544                     u1790:
  6334  000544  0100               	movlb	0	; () banked
  6335  000546  B37E               	btfsc	_flags& (0+255),1,b
  6336  000548  EFA8  F002         	goto	u1801
  6337  00054C  EFAA  F002         	goto	u1800
  6338  000550                     u1801:
  6339  000550  EFF0  F001         	goto	l2609
  6340  000554                     u1800:
  6341  000554                     l2629:
  6342                           
  6343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6344  000554  5034               	movf	dtoa@s^0,w,c
  6345  000556  1035               	iorwf	(dtoa@s+1)^0,w,c
  6346  000558  A4D8               	btfss	status,2,c
  6347  00055A  EFB1  F002         	goto	u1811
  6348  00055E  EFB3  F002         	goto	u1810
  6349  000562                     u1811:
  6350  000562  EFBB  F002         	goto	l2633
  6351  000566                     u1810:
  6352  000566  0100               	movlb	0	; () banked
  6353  000568  A57E               	btfss	_flags& (0+255),2,b
  6354  00056A  EFB9  F002         	goto	u1821
  6355  00056E  EFBB  F002         	goto	u1820
  6356  000572                     u1821:
  6357  000572  EFD9  F002         	goto	l2643
  6358  000576                     u1820:
  6359  000576                     l2633:
  6360                           
  6361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6362  000576  063E               	decf	dtoa@i^0,f,c
  6363  000578  A0D8               	btfss	status,0,c
  6364  00057A  063F               	decf	(dtoa@i+1)^0,f,c
  6365  00057C                     
  6366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6367  00057C  5034               	movf	dtoa@s^0,w,c
  6368  00057E  1035               	iorwf	(dtoa@s+1)^0,w,c
  6369  000580  A4D8               	btfss	status,2,c
  6370  000582  EFC5  F002         	goto	u1831
  6371  000586  EFC7  F002         	goto	u1830
  6372  00058A                     u1831:
  6373  00058A  EFCD  F002         	goto	l2639
  6374  00058E                     u1830:
  6375  00058E  0E00               	movlw	0
  6376  000590  6E2F               	movwf	(_dtoa$1005+1)^0,c
  6377  000592  0E2B               	movlw	43
  6378  000594  6E2E               	movwf	_dtoa$1005^0,c
  6379  000596  EFD1  F002         	goto	l2641
  6380  00059A                     l2639:
  6381  00059A  0E00               	movlw	0
  6382  00059C  6E2F               	movwf	(_dtoa$1005+1)^0,c
  6383  00059E  0E2D               	movlw	45
  6384  0005A0  6E2E               	movwf	_dtoa$1005^0,c
  6385  0005A2                     l2641:
  6386  0005A2  0E8E               	movlw	low _dbuf
  6387  0005A4  243E               	addwf	dtoa@i^0,w,c
  6388  0005A6  6ED9               	movwf	fsr2l,c
  6389  0005A8  0E00               	movlw	high _dbuf
  6390  0005AA  203F               	addwfc	(dtoa@i+1)^0,w,c
  6391  0005AC  6EDA               	movwf	fsr2h,c
  6392  0005AE  C02E  FFDF         	movff	_dtoa$1005,indf2
  6393  0005B2                     l2643:
  6394                           
  6395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6396  0005B2  C01C  F011         	movff	dtoa@fp,pad@fp
  6397  0005B6  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6398  0005BA  0E8E               	movlw	low _dbuf
  6399  0005BC  243E               	addwf	dtoa@i^0,w,c
  6400  0005BE  6E13               	movwf	pad@buf^0,c
  6401  0005C0  0E00               	movlw	high _dbuf
  6402  0005C2  203F               	addwfc	(dtoa@i+1)^0,w,c
  6403  0005C4  6E14               	movwf	(pad@buf+1)^0,c
  6404  0005C6  C032  F015         	movff	dtoa@w,pad@p
  6405  0005CA  C033  F016         	movff	dtoa@w+1,pad@p+1
  6406  0005CE  EC27  F00B         	call	_pad	;wreg free
  6407  0005D2  C011  F01C         	movff	?_pad,?_dtoa
  6408  0005D6  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6409  0005DA  0012               	return		;funcret
  6410  0005DC                     __end_of_dtoa:
  6411                           	opt callstack 0
  6412                           
  6413 ;; *************** function _pad *****************
  6414 ;; Defined at:
  6415 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6418 ;;		 -> sprintf@f(6), 
  6419 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6420 ;;		 -> dbuf(32), 
  6421 ;;  p               2   20[COMRAM] int 
  6422 ;; Auto vars:     Size  Location     Type
  6423 ;;  w               2   25[COMRAM] int 
  6424 ;;  i               2   23[COMRAM] int 
  6425 ;; Return value:  Size  Location     Type
  6426 ;;                  2   16[COMRAM] int 
  6427 ;; Registers used:
  6428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6429 ;; Tracked objects:
  6430 ;;		On entry : 0/0
  6431 ;;		On exit  : 0/0
  6432 ;;		Unchanged: 0/0
  6433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6434 ;;      Params:         6       0       0       0       0       0       0       0       0
  6435 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6436 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6437 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6438 ;;Total ram usage:       11 bytes
  6439 ;; Hardware stack levels used:    1
  6440 ;; Hardware stack levels required when called:    4
  6441 ;; This function calls:
  6442 ;;		_fputc
  6443 ;;		_fputs
  6444 ;;		_strlen
  6445 ;; This function is called by:
  6446 ;;		_dtoa
  6447 ;; This function uses a non-reentrant model
  6448 ;;
  6449                           
  6450                           	psect	text31
  6451  00164E                     __ptext31:
  6452                           	opt callstack 0
  6453  00164E                     _pad:
  6454                           	opt callstack 20
  6455  00164E                     
  6456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6457  00164E  0100               	movlb	0	; () banked
  6458  001650  A17E               	btfss	_flags& (0+255),0,b
  6459  001652  EF2D  F00B         	goto	u1481
  6460  001656  EF2F  F00B         	goto	u1480
  6461  00165A                     u1481:
  6462  00165A  EF39  F00B         	goto	l2475
  6463  00165E                     u1480:
  6464  00165E                     
  6465                           ; BSR set to: 0
  6466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6467  00165E  C013  F00A         	movff	pad@buf,fputs@s
  6468  001662  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6469  001666  C011  F00C         	movff	pad@fp,fputs@fp
  6470  00166A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6471  00166E  ECF7  F00F         	call	_fputs	;wreg free
  6472  001672                     l2475:
  6473                           
  6474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6475  001672  BE16               	btfsc	(pad@p+1)^0,7,c
  6476  001674  EF3E  F00B         	goto	u1491
  6477  001678  EF40  F00B         	goto	u1490
  6478  00167C                     u1491:
  6479  00167C  EF46  F00B         	goto	l2479
  6480  001680                     u1490:
  6481  001680  C015  F01A         	movff	pad@p,pad@w
  6482  001684  C016  F01B         	movff	pad@p+1,pad@w+1
  6483  001688  EF4A  F00B         	goto	l419
  6484  00168C                     l2479:
  6485  00168C  0E00               	movlw	0
  6486  00168E  6E1B               	movwf	(pad@w+1)^0,c
  6487  001690  0E00               	movlw	0
  6488  001692  6E1A               	movwf	pad@w^0,c
  6489  001694                     l419:
  6490                           
  6491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6492  001694  0E00               	movlw	0
  6493  001696  6E19               	movwf	(pad@i+1)^0,c
  6494  001698  0E00               	movlw	0
  6495  00169A  6E18               	movwf	pad@i^0,c
  6496                           
  6497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6498  00169C  EF5C  F00B         	goto	l2485
  6499  0016A0                     l2481:
  6500                           
  6501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6502  0016A0  0E00               	movlw	0
  6503  0016A2  6E02               	movwf	(fputc@c+1)^0,c
  6504  0016A4  0E20               	movlw	32
  6505  0016A6  6E01               	movwf	fputc@c^0,c
  6506  0016A8  C011  F003         	movff	pad@fp,fputc@fp
  6507  0016AC  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6508  0016B0  ECFB  F009         	call	_fputc	;wreg free
  6509  0016B4                     
  6510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6511  0016B4  4A18               	infsnz	pad@i^0,f,c
  6512  0016B6  2A19               	incf	(pad@i+1)^0,f,c
  6513  0016B8                     l2485:
  6514                           
  6515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6516  0016B8  501A               	movf	pad@w^0,w,c
  6517  0016BA  5C18               	subwf	pad@i^0,w,c
  6518  0016BC  5019               	movf	(pad@i+1)^0,w,c
  6519  0016BE  0A80               	xorlw	128
  6520  0016C0  6E17               	movwf	??_pad^0,c
  6521  0016C2  501B               	movf	(pad@w+1)^0,w,c
  6522  0016C4  0A80               	xorlw	128
  6523  0016C6  5817               	subwfb	??_pad^0,w,c
  6524  0016C8  A0D8               	btfss	status,0,c
  6525  0016CA  EF69  F00B         	goto	u1501
  6526  0016CE  EF6B  F00B         	goto	u1500
  6527  0016D2                     u1501:
  6528  0016D2  EF50  F00B         	goto	l2481
  6529  0016D6                     u1500:
  6530  0016D6                     
  6531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6532  0016D6  0100               	movlb	0	; () banked
  6533  0016D8  B17E               	btfsc	_flags& (0+255),0,b
  6534  0016DA  EF71  F00B         	goto	u1511
  6535  0016DE  EF73  F00B         	goto	u1510
  6536  0016E2                     u1511:
  6537  0016E2  EF7D  F00B         	goto	l2489
  6538  0016E6                     u1510:
  6539  0016E6                     
  6540                           ; BSR set to: 0
  6541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6542  0016E6  C013  F00A         	movff	pad@buf,fputs@s
  6543  0016EA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6544  0016EE  C011  F00C         	movff	pad@fp,fputs@fp
  6545  0016F2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6546  0016F6  ECF7  F00F         	call	_fputs	;wreg free
  6547  0016FA                     l2489:
  6548                           
  6549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6550  0016FA  C013  F001         	movff	pad@buf,strlen@s
  6551  0016FE  C014  F002         	movff	pad@buf+1,strlen@s+1
  6552  001702  EC77  F010         	call	_strlen	;wreg free
  6553  001706  501A               	movf	pad@w^0,w,c
  6554  001708  2401               	addwf	?_strlen^0,w,c
  6555  00170A  6E11               	movwf	?_pad^0,c
  6556  00170C  501B               	movf	(pad@w+1)^0,w,c
  6557  00170E  2002               	addwfc	(?_strlen+1)^0,w,c
  6558  001710  6E12               	movwf	(?_pad+1)^0,c
  6559  001712  0012               	return		;funcret
  6560  001714                     __end_of_pad:
  6561                           	opt callstack 0
  6562                           
  6563 ;; *************** function _strlen *****************
  6564 ;; Defined at:
  6565 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  6566 ;; Parameters:    Size  Location     Type
  6567 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6568 ;;		 -> dbuf(32), 
  6569 ;; Auto vars:     Size  Location     Type
  6570 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6571 ;;		 -> dbuf(32), 
  6572 ;; Return value:  Size  Location     Type
  6573 ;;                  2    0[COMRAM] unsigned int 
  6574 ;; Registers used:
  6575 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6576 ;; Tracked objects:
  6577 ;;		On entry : 0/0
  6578 ;;		On exit  : 0/0
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6581 ;;      Params:         2       0       0       0       0       0       0       0       0
  6582 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6583 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6584 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6585 ;;Total ram usage:        4 bytes
  6586 ;; Hardware stack levels used:    1
  6587 ;; Hardware stack levels required when called:    1
  6588 ;; This function calls:
  6589 ;;		Nothing
  6590 ;; This function is called by:
  6591 ;;		_pad
  6592 ;; This function uses a non-reentrant model
  6593 ;;
  6594                           
  6595                           	psect	text32
  6596  0020EE                     __ptext32:
  6597                           	opt callstack 0
  6598  0020EE                     _strlen:
  6599                           	opt callstack 22
  6600  0020EE  C001  F003         	movff	strlen@s,strlen@a
  6601  0020F2  C002  F004         	movff	strlen@s+1,strlen@a+1
  6602  0020F6  EF7F  F010         	goto	l2465
  6603  0020FA                     l2463:
  6604  0020FA  4A01               	infsnz	strlen@s^0,f,c
  6605  0020FC  2A02               	incf	(strlen@s+1)^0,f,c
  6606  0020FE                     l2465:
  6607  0020FE  C001  FFD9         	movff	strlen@s,fsr2l
  6608  002102  C002  FFDA         	movff	strlen@s+1,fsr2h
  6609  002106  50DF               	movf	indf2,w,c
  6610  002108  A4D8               	btfss	status,2,c
  6611  00210A  EF89  F010         	goto	u1471
  6612  00210E  EF8B  F010         	goto	u1470
  6613  002112                     u1471:
  6614  002112  EF7D  F010         	goto	l2463
  6615  002116                     u1470:
  6616  002116  5003               	movf	strlen@a^0,w,c
  6617  002118  5C01               	subwf	strlen@s^0,w,c
  6618  00211A  6E01               	movwf	?_strlen^0,c
  6619  00211C  5004               	movf	(strlen@a+1)^0,w,c
  6620  00211E  5802               	subwfb	(strlen@s+1)^0,w,c
  6621  002120  6E02               	movwf	(?_strlen+1)^0,c
  6622  002122  0012               	return		;funcret
  6623  002124                     __end_of_strlen:
  6624                           	opt callstack 0
  6625                           
  6626 ;; *************** function _fputs *****************
  6627 ;; Defined at:
  6628 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  6629 ;; Parameters:    Size  Location     Type
  6630 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6631 ;;		 -> dbuf(32), 
  6632 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6633 ;;		 -> sprintf@f(6), 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;  i               2   14[COMRAM] int 
  6636 ;;  c               1   13[COMRAM] unsigned char 
  6637 ;; Return value:  Size  Location     Type
  6638 ;;                  2    9[COMRAM] int 
  6639 ;; Registers used:
  6640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6641 ;; Tracked objects:
  6642 ;;		On entry : 0/0
  6643 ;;		On exit  : 0/0
  6644 ;;		Unchanged: 0/0
  6645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6646 ;;      Params:         4       0       0       0       0       0       0       0       0
  6647 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6648 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6649 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6650 ;;Total ram usage:        7 bytes
  6651 ;; Hardware stack levels used:    1
  6652 ;; Hardware stack levels required when called:    3
  6653 ;; This function calls:
  6654 ;;		_fputc
  6655 ;; This function is called by:
  6656 ;;		_pad
  6657 ;; This function uses a non-reentrant model
  6658 ;;
  6659                           
  6660                           	psect	text33
  6661  001FEE                     __ptext33:
  6662                           	opt callstack 0
  6663  001FEE                     _fputs:
  6664                           	opt callstack 20
  6665  001FEE  0E00               	movlw	0
  6666  001FF0  6E10               	movwf	(fputs@i+1)^0,c
  6667  001FF2  0E00               	movlw	0
  6668  001FF4  6E0F               	movwf	fputs@i^0,c
  6669  001FF6  EF08  F010         	goto	l2459
  6670  001FFA                     l2455:
  6671  001FFA  C00E  F001         	movff	fputs@c,fputc@c
  6672  001FFE  6A02               	clrf	(fputc@c+1)^0,c
  6673  002000  C00C  F003         	movff	fputs@fp,fputc@fp
  6674  002004  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6675  002008  ECFB  F009         	call	_fputc	;wreg free
  6676  00200C  4A0F               	infsnz	fputs@i^0,f,c
  6677  00200E  2A10               	incf	(fputs@i+1)^0,f,c
  6678  002010                     l2459:
  6679  002010  500F               	movf	fputs@i^0,w,c
  6680  002012  240A               	addwf	fputs@s^0,w,c
  6681  002014  6ED9               	movwf	fsr2l,c
  6682  002016  5010               	movf	(fputs@i+1)^0,w,c
  6683  002018  200B               	addwfc	(fputs@s+1)^0,w,c
  6684  00201A  6EDA               	movwf	fsr2h,c
  6685  00201C  50DF               	movf	indf2,w,c
  6686  00201E  6E0E               	movwf	fputs@c^0,c
  6687  002020  500E               	movf	fputs@c^0,w,c
  6688  002022  A4D8               	btfss	status,2,c
  6689  002024  EF16  F010         	goto	u1461
  6690  002028  EF18  F010         	goto	u1460
  6691  00202C                     u1461:
  6692  00202C  EFFD  F00F         	goto	l2455
  6693  002030                     u1460:
  6694  002030  0012               	return		;funcret
  6695  002032                     __end_of_fputs:
  6696                           	opt callstack 0
  6697                           
  6698 ;; *************** function _fputc *****************
  6699 ;; Defined at:
  6700 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6701 ;; Parameters:    Size  Location     Type
  6702 ;;  c               2    0[COMRAM] int 
  6703 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6704 ;;		 -> sprintf@f(6), 
  6705 ;; Auto vars:     Size  Location     Type
  6706 ;;		None
  6707 ;; Return value:  Size  Location     Type
  6708 ;;                  2    0[COMRAM] int 
  6709 ;; Registers used:
  6710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6711 ;; Tracked objects:
  6712 ;;		On entry : 0/0
  6713 ;;		On exit  : 0/0
  6714 ;;		Unchanged: 0/0
  6715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6716 ;;      Params:         4       0       0       0       0       0       0       0       0
  6717 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6718 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6719 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6720 ;;Total ram usage:        9 bytes
  6721 ;; Hardware stack levels used:    1
  6722 ;; Hardware stack levels required when called:    2
  6723 ;; This function calls:
  6724 ;;		_putch
  6725 ;; This function is called by:
  6726 ;;		_pad
  6727 ;;		_vfpfcnvrt
  6728 ;;		_fputs
  6729 ;; This function uses a non-reentrant model
  6730 ;;
  6731                           
  6732                           	psect	text34
  6733  0013F6                     __ptext34:
  6734                           	opt callstack 0
  6735  0013F6                     _fputc:
  6736                           	opt callstack 23
  6737  0013F6  5003               	movf	fputc@fp^0,w,c
  6738  0013F8  1004               	iorwf	(fputc@fp+1)^0,w,c
  6739  0013FA  B4D8               	btfsc	status,2,c
  6740  0013FC  EF02  F00A         	goto	u1421
  6741  001400  EF04  F00A         	goto	u1420
  6742  001404                     u1421:
  6743  001404  EF0D  F00A         	goto	l2443
  6744  001408                     u1420:
  6745  001408  5003               	movf	fputc@fp^0,w,c
  6746  00140A  1004               	iorwf	(fputc@fp+1)^0,w,c
  6747  00140C  A4D8               	btfss	status,2,c
  6748  00140E  EF0B  F00A         	goto	u1431
  6749  001412  EF0D  F00A         	goto	u1430
  6750  001416                     u1431:
  6751  001416  EF12  F00A         	goto	l2445
  6752  00141A                     u1430:
  6753  00141A                     l2443:
  6754  00141A  5001               	movf	fputc@c^0,w,c
  6755  00141C  EC82  F011         	call	_putch
  6756  001420  EF5F  F00A         	goto	l1157
  6757  001424                     l2445:
  6758  001424  EE20 F004          	lfsr	2,4
  6759  001428  5003               	movf	fputc@fp^0,w,c
  6760  00142A  26D9               	addwf	fsr2l,f,c
  6761  00142C  5004               	movf	(fputc@fp+1)^0,w,c
  6762  00142E  22DA               	addwfc	fsr2h,f,c
  6763  001430  50DE               	movf	postinc2,w,c
  6764  001432  10DE               	iorwf	postinc2,w,c
  6765  001434  B4D8               	btfsc	status,2,c
  6766  001436  EF1F  F00A         	goto	u1441
  6767  00143A  EF21  F00A         	goto	u1440
  6768  00143E                     u1441:
  6769  00143E  EF3C  F00A         	goto	l2449
  6770  001442                     u1440:
  6771  001442  EE20 F004          	lfsr	2,4
  6772  001446  5003               	movf	fputc@fp^0,w,c
  6773  001448  26D9               	addwf	fsr2l,f,c
  6774  00144A  5004               	movf	(fputc@fp+1)^0,w,c
  6775  00144C  22DA               	addwfc	fsr2h,f,c
  6776  00144E  EE10 F002          	lfsr	1,2
  6777  001452  5003               	movf	fputc@fp^0,w,c
  6778  001454  26E1               	addwf	fsr1l,f,c
  6779  001456  5004               	movf	(fputc@fp+1)^0,w,c
  6780  001458  22E2               	addwfc	fsr1h,f,c
  6781  00145A  50DE               	movf	postinc2,w,c
  6782  00145C  5CE6               	subwf	postinc1,w,c
  6783  00145E  50E6               	movf	postinc1,w,c
  6784  001460  0A80               	xorlw	128
  6785  001462  6E09               	movwf	(??_fputc+4)^0,c
  6786  001464  50DE               	movf	postinc2,w,c
  6787  001466  0A80               	xorlw	128
  6788  001468  5809               	subwfb	(??_fputc+4)^0,w,c
  6789  00146A  B0D8               	btfsc	status,0,c
  6790  00146C  EF3A  F00A         	goto	u1451
  6791  001470  EF3C  F00A         	goto	u1450
  6792  001474                     u1451:
  6793  001474  EF5F  F00A         	goto	l1157
  6794  001478                     u1450:
  6795  001478                     l2449:
  6796  001478  EE20 F002          	lfsr	2,2
  6797  00147C  5003               	movf	fputc@fp^0,w,c
  6798  00147E  26D9               	addwf	fsr2l,f,c
  6799  001480  5004               	movf	(fputc@fp+1)^0,w,c
  6800  001482  22DA               	addwfc	fsr2h,f,c
  6801  001484  CFDE F005          	movff	postinc2,??_fputc
  6802  001488  CFDD F006          	movff	postdec2,??_fputc+1
  6803  00148C  C003  FFD9         	movff	fputc@fp,fsr2l
  6804  001490  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6805  001494  CFDE F007          	movff	postinc2,??_fputc+2
  6806  001498  CFDD F008          	movff	postdec2,??_fputc+3
  6807  00149C  5005               	movf	??_fputc^0,w,c
  6808  00149E  2407               	addwf	(??_fputc+2)^0,w,c
  6809  0014A0  6ED9               	movwf	fsr2l,c
  6810  0014A2  5006               	movf	(??_fputc+1)^0,w,c
  6811  0014A4  2008               	addwfc	(??_fputc+3)^0,w,c
  6812  0014A6  6EDA               	movwf	fsr2h,c
  6813  0014A8  C001  FFDF         	movff	fputc@c,indf2
  6814  0014AC  EE20 F002          	lfsr	2,2
  6815  0014B0  5003               	movf	fputc@fp^0,w,c
  6816  0014B2  26D9               	addwf	fsr2l,f,c
  6817  0014B4  5004               	movf	(fputc@fp+1)^0,w,c
  6818  0014B6  22DA               	addwfc	fsr2h,f,c
  6819  0014B8  2ADE               	incf	postinc2,f,c
  6820  0014BA  0E00               	movlw	0
  6821  0014BC  22DD               	addwfc	postdec2,f,c
  6822  0014BE                     l1157:
  6823  0014BE  0012               	return		;funcret
  6824  0014C0                     __end_of_fputc:
  6825                           	opt callstack 0
  6826                           
  6827 ;; *************** function _putch *****************
  6828 ;; Defined at:
  6829 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  6830 ;; Parameters:    Size  Location     Type
  6831 ;;  c               1    wreg     unsigned char 
  6832 ;; Auto vars:     Size  Location     Type
  6833 ;;  c               1    0[COMRAM] unsigned char 
  6834 ;; Return value:  Size  Location     Type
  6835 ;;                  1    wreg      void 
  6836 ;; Registers used:
  6837 ;;		wreg
  6838 ;; Tracked objects:
  6839 ;;		On entry : 0/0
  6840 ;;		On exit  : 0/0
  6841 ;;		Unchanged: 0/0
  6842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6843 ;;      Params:         0       0       0       0       0       0       0       0       0
  6844 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6845 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6846 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6847 ;;Total ram usage:        0 bytes
  6848 ;; Hardware stack levels used:    1
  6849 ;; Hardware stack levels required when called:    1
  6850 ;; This function calls:
  6851 ;;		Nothing
  6852 ;; This function is called by:
  6853 ;;		_fputc
  6854 ;; This function uses a non-reentrant model
  6855 ;;
  6856                           
  6857                           	psect	text35
  6858  002304                     __ptext35:
  6859                           	opt callstack 0
  6860  002304                     _putch:
  6861                           	opt callstack 23
  6862  002304  0012               	return		;funcret
  6863  002306                     __end_of_putch:
  6864                           	opt callstack 0
  6865                           
  6866 ;; *************** function _abs *****************
  6867 ;; Defined at:
  6868 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  6869 ;; Parameters:    Size  Location     Type
  6870 ;;  a               2   18[COMRAM] int 
  6871 ;; Auto vars:     Size  Location     Type
  6872 ;;		None
  6873 ;; Return value:  Size  Location     Type
  6874 ;;                  2   18[COMRAM] int 
  6875 ;; Registers used:
  6876 ;;		wreg, status,2, status,0
  6877 ;; Tracked objects:
  6878 ;;		On entry : 0/0
  6879 ;;		On exit  : 0/0
  6880 ;;		Unchanged: 0/0
  6881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6882 ;;      Params:         2       0       0       0       0       0       0       0       0
  6883 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6884 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6885 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6886 ;;Total ram usage:        4 bytes
  6887 ;; Hardware stack levels used:    1
  6888 ;; Hardware stack levels required when called:    1
  6889 ;; This function calls:
  6890 ;;		Nothing
  6891 ;; This function is called by:
  6892 ;;		_dtoa
  6893 ;; This function uses a non-reentrant model
  6894 ;;
  6895                           
  6896                           	psect	text36
  6897  002072                     __ptext36:
  6898                           	opt callstack 0
  6899  002072                     _abs:
  6900                           	opt callstack 23
  6901  002072  BE14               	btfsc	(abs@a+1)^0,7,c
  6902  002074  EF46  F010         	goto	u1520
  6903  002078  5014               	movf	(abs@a+1)^0,w,c
  6904  00207A  E106               	bnz	u1521
  6905  00207C  0413               	decf	abs@a^0,w,c
  6906  00207E  B0D8               	btfsc	status,0,c
  6907  002080  EF44  F010         	goto	u1521
  6908  002084  EF46  F010         	goto	u1520
  6909  002088                     u1521:
  6910  002088  EF54  F010         	goto	l1142
  6911  00208C                     u1520:
  6912  00208C  C013  F015         	movff	abs@a,??_abs
  6913  002090  C014  F016         	movff	abs@a+1,??_abs+1
  6914  002094  1E15               	comf	??_abs^0,f,c
  6915  002096  1E16               	comf	(??_abs+1)^0,f,c
  6916  002098  4A15               	infsnz	??_abs^0,f,c
  6917  00209A  2A16               	incf	(??_abs+1)^0,f,c
  6918  00209C  C015  F013         	movff	??_abs,?_abs
  6919  0020A0  C016  F014         	movff	??_abs+1,?_abs+1
  6920  0020A4  EF58  F010         	goto	l1145
  6921  0020A8                     l1142:
  6922  0020A8  C013  F013         	movff	abs@a,?_abs
  6923  0020AC  C014  F014         	movff	abs@a+1,?_abs+1
  6924  0020B0                     l1145:
  6925  0020B0  0012               	return		;funcret
  6926  0020B2                     __end_of_abs:
  6927                           	opt callstack 0
  6928                           
  6929 ;; *************** function ___aomod *****************
  6930 ;; Defined at:
  6931 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;  dividend        8    0[COMRAM] long long 
  6934 ;;  divisor         8    8[COMRAM] long long 
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;  sign            1   17[COMRAM] unsigned char 
  6937 ;;  counter         1   16[COMRAM] unsigned char 
  6938 ;; Return value:  Size  Location     Type
  6939 ;;                  8    0[COMRAM] long long 
  6940 ;; Registers used:
  6941 ;;		wreg, status,2, status,0
  6942 ;; Tracked objects:
  6943 ;;		On entry : 0/0
  6944 ;;		On exit  : 0/0
  6945 ;;		Unchanged: 0/0
  6946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6947 ;;      Params:        16       0       0       0       0       0       0       0       0
  6948 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6949 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6950 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6951 ;;Total ram usage:       18 bytes
  6952 ;; Hardware stack levels used:    1
  6953 ;; Hardware stack levels required when called:    1
  6954 ;; This function calls:
  6955 ;;		Nothing
  6956 ;; This function is called by:
  6957 ;;		_dtoa
  6958 ;; This function uses a non-reentrant model
  6959 ;;
  6960                           
  6961                           	psect	text37
  6962  000C52                     __ptext37:
  6963                           	opt callstack 0
  6964  000C52                     ___aomod:
  6965                           	opt callstack 23
  6966  000C52  0E00               	movlw	0
  6967  000C54  6E12               	movwf	___aomod@sign^0,c
  6968  000C56  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6969  000C58  EF32  F006         	goto	u1600
  6970  000C5C  EF30  F006         	goto	u1601
  6971  000C60                     u1601:
  6972  000C60  EF44  F006         	goto	l2549
  6973  000C64                     u1600:
  6974  000C64  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6975  000C66  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6976  000C68  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6977  000C6A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6978  000C6C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6979  000C6E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6980  000C70  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6981  000C72  6C01               	negf	___aomod@dividend^0,c
  6982  000C74  0E00               	movlw	0
  6983  000C76  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6984  000C78  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6985  000C7A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6986  000C7C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6987  000C7E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6988  000C80  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6989  000C82  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6990  000C84  0E01               	movlw	1
  6991  000C86  6E12               	movwf	___aomod@sign^0,c
  6992  000C88                     l2549:
  6993  000C88  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6994  000C8A  EF4B  F006         	goto	u1610
  6995  000C8E  EF49  F006         	goto	u1611
  6996  000C92                     u1611:
  6997  000C92  EF5B  F006         	goto	l2553
  6998  000C96                     u1610:
  6999  000C96  1E10               	comf	(___aomod@divisor+7)^0,f,c
  7000  000C98  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  7001  000C9A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  7002  000C9C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  7003  000C9E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  7004  000CA0  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  7005  000CA2  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  7006  000CA4  6C09               	negf	___aomod@divisor^0,c
  7007  000CA6  0E00               	movlw	0
  7008  000CA8  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  7009  000CAA  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  7010  000CAC  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  7011  000CAE  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  7012  000CB0  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  7013  000CB2  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  7014  000CB4  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  7015  000CB6                     l2553:
  7016  000CB6  5009               	movf	___aomod@divisor^0,w,c
  7017  000CB8  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  7018  000CBA  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  7019  000CBC  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  7020  000CBE  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  7021  000CC0  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  7022  000CC2  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  7023  000CC4  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  7024  000CC6  B4D8               	btfsc	status,2,c
  7025  000CC8  EF68  F006         	goto	u1621
  7026  000CCC  EF6A  F006         	goto	u1620
  7027  000CD0                     u1621:
  7028  000CD0  EFB2  F006         	goto	l2569
  7029  000CD4                     u1620:
  7030  000CD4  0E01               	movlw	1
  7031  000CD6  6E11               	movwf	___aomod@counter^0,c
  7032  000CD8  EF78  F006         	goto	l2559
  7033  000CDC                     l2557:
  7034  000CDC  90D8               	bcf	status,0,c
  7035  000CDE  3609               	rlcf	___aomod@divisor^0,f,c
  7036  000CE0  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  7037  000CE2  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  7038  000CE4  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  7039  000CE6  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  7040  000CE8  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  7041  000CEA  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  7042  000CEC  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  7043  000CEE  2A11               	incf	___aomod@counter^0,f,c
  7044  000CF0                     l2559:
  7045  000CF0  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  7046  000CF2  EF7D  F006         	goto	u1631
  7047  000CF6  EF7F  F006         	goto	u1630
  7048  000CFA                     u1631:
  7049  000CFA  EF6E  F006         	goto	l2557
  7050  000CFE                     u1630:
  7051  000CFE                     l2561:
  7052  000CFE  5009               	movf	___aomod@divisor^0,w,c
  7053  000D00  5C01               	subwf	___aomod@dividend^0,w,c
  7054  000D02  500A               	movf	(___aomod@divisor+1)^0,w,c
  7055  000D04  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  7056  000D06  500B               	movf	(___aomod@divisor+2)^0,w,c
  7057  000D08  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  7058  000D0A  500C               	movf	(___aomod@divisor+3)^0,w,c
  7059  000D0C  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  7060  000D0E  500D               	movf	(___aomod@divisor+4)^0,w,c
  7061  000D10  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  7062  000D12  500E               	movf	(___aomod@divisor+5)^0,w,c
  7063  000D14  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  7064  000D16  500F               	movf	(___aomod@divisor+6)^0,w,c
  7065  000D18  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  7066  000D1A  5010               	movf	(___aomod@divisor+7)^0,w,c
  7067  000D1C  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  7068  000D1E  A0D8               	btfss	status,0,c
  7069  000D20  EF94  F006         	goto	u1641
  7070  000D24  EF96  F006         	goto	u1640
  7071  000D28                     u1641:
  7072  000D28  EFA6  F006         	goto	l2565
  7073  000D2C                     u1640:
  7074  000D2C  5009               	movf	___aomod@divisor^0,w,c
  7075  000D2E  5E01               	subwf	___aomod@dividend^0,f,c
  7076  000D30  500A               	movf	(___aomod@divisor+1)^0,w,c
  7077  000D32  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  7078  000D34  500B               	movf	(___aomod@divisor+2)^0,w,c
  7079  000D36  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  7080  000D38  500C               	movf	(___aomod@divisor+3)^0,w,c
  7081  000D3A  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  7082  000D3C  500D               	movf	(___aomod@divisor+4)^0,w,c
  7083  000D3E  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  7084  000D40  500E               	movf	(___aomod@divisor+5)^0,w,c
  7085  000D42  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  7086  000D44  500F               	movf	(___aomod@divisor+6)^0,w,c
  7087  000D46  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  7088  000D48  5010               	movf	(___aomod@divisor+7)^0,w,c
  7089  000D4A  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  7090  000D4C                     l2565:
  7091  000D4C  90D8               	bcf	status,0,c
  7092  000D4E  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  7093  000D50  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  7094  000D52  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  7095  000D54  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  7096  000D56  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  7097  000D58  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  7098  000D5A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  7099  000D5C  3209               	rrcf	___aomod@divisor^0,f,c
  7100  000D5E  2E11               	decfsz	___aomod@counter^0,f,c
  7101  000D60  EF7F  F006         	goto	l2561
  7102  000D64                     l2569:
  7103  000D64  5012               	movf	___aomod@sign^0,w,c
  7104  000D66  B4D8               	btfsc	status,2,c
  7105  000D68  EFB8  F006         	goto	u1651
  7106  000D6C  EFBA  F006         	goto	u1650
  7107  000D70                     u1651:
  7108  000D70  EFCA  F006         	goto	l2573
  7109  000D74                     u1650:
  7110  000D74  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7111  000D76  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7112  000D78  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7113  000D7A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7114  000D7C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7115  000D7E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7116  000D80  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7117  000D82  6C01               	negf	___aomod@dividend^0,c
  7118  000D84  0E00               	movlw	0
  7119  000D86  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7120  000D88  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7121  000D8A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7122  000D8C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7123  000D8E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7124  000D90  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7125  000D92  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7126  000D94                     l2573:
  7127  000D94  C001  F001         	movff	___aomod@dividend,?___aomod
  7128  000D98  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  7129  000D9C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  7130  000DA0  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  7131  000DA4  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  7132  000DA8  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  7133  000DAC  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  7134  000DB0  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  7135  000DB4  0012               	return		;funcret
  7136  000DB6                     __end_of___aomod:
  7137                           	opt callstack 0
  7138                           
  7139 ;; *************** function ___aodiv *****************
  7140 ;; Defined at:
  7141 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;  dividend        8    0[COMRAM] long long 
  7144 ;;  divisor         8    8[COMRAM] long long 
  7145 ;; Auto vars:     Size  Location     Type
  7146 ;;  quotient        8   18[COMRAM] long long 
  7147 ;;  sign            1   17[COMRAM] unsigned char 
  7148 ;;  counter         1   16[COMRAM] unsigned char 
  7149 ;; Return value:  Size  Location     Type
  7150 ;;                  8    0[COMRAM] long long 
  7151 ;; Registers used:
  7152 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7153 ;; Tracked objects:
  7154 ;;		On entry : 0/0
  7155 ;;		On exit  : 0/0
  7156 ;;		Unchanged: 0/0
  7157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7158 ;;      Params:        16       0       0       0       0       0       0       0       0
  7159 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7160 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7161 ;;      Totals:        26       0       0       0       0       0       0       0       0
  7162 ;;Total ram usage:       26 bytes
  7163 ;; Hardware stack levels used:    1
  7164 ;; Hardware stack levels required when called:    1
  7165 ;; This function calls:
  7166 ;;		Nothing
  7167 ;; This function is called by:
  7168 ;;		_dtoa
  7169 ;; This function uses a non-reentrant model
  7170 ;;
  7171                           
  7172                           	psect	text38
  7173  000958                     __ptext38:
  7174                           	opt callstack 0
  7175  000958                     ___aodiv:
  7176                           	opt callstack 23
  7177  000958  0E00               	movlw	0
  7178  00095A  6E12               	movwf	___aodiv@sign^0,c
  7179  00095C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  7180  00095E  EFB5  F004         	goto	u1530
  7181  000962  EFB3  F004         	goto	u1531
  7182  000966                     u1531:
  7183  000966  EFC7  F004         	goto	l2505
  7184  00096A                     u1530:
  7185  00096A  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  7186  00096C  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  7187  00096E  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  7188  000970  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  7189  000972  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  7190  000974  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  7191  000976  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  7192  000978  6C09               	negf	___aodiv@divisor^0,c
  7193  00097A  0E00               	movlw	0
  7194  00097C  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  7195  00097E  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  7196  000980  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  7197  000982  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  7198  000984  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  7199  000986  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  7200  000988  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  7201  00098A  0E01               	movlw	1
  7202  00098C  6E12               	movwf	___aodiv@sign^0,c
  7203  00098E                     l2505:
  7204  00098E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  7205  000990  EFCE  F004         	goto	u1540
  7206  000994  EFCC  F004         	goto	u1541
  7207  000998                     u1541:
  7208  000998  EFE0  F004         	goto	l2511
  7209  00099C                     u1540:
  7210  00099C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  7211  00099E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  7212  0009A0  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  7213  0009A2  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  7214  0009A4  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  7215  0009A6  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  7216  0009A8  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  7217  0009AA  6C01               	negf	___aodiv@dividend^0,c
  7218  0009AC  0E00               	movlw	0
  7219  0009AE  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  7220  0009B0  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  7221  0009B2  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  7222  0009B4  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  7223  0009B6  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  7224  0009B8  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  7225  0009BA  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  7226  0009BC  0E01               	movlw	1
  7227  0009BE  1A12               	xorwf	___aodiv@sign^0,f,c
  7228  0009C0                     l2511:
  7229  0009C0  EE20  F013         	lfsr	2,___aodiv@quotient
  7230  0009C4  0E07               	movlw	7
  7231  0009C6                     u1551:
  7232  0009C6  6ADE               	clrf	postinc2,c
  7233  0009C8  06E8               	decf	wreg,f,c
  7234  0009CA  E2FD               	bc	u1551
  7235  0009CC  5009               	movf	___aodiv@divisor^0,w,c
  7236  0009CE  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  7237  0009D0  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  7238  0009D2  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  7239  0009D4  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  7240  0009D6  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  7241  0009D8  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  7242  0009DA  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  7243  0009DC  B4D8               	btfsc	status,2,c
  7244  0009DE  EFF3  F004         	goto	u1561
  7245  0009E2  EFF5  F004         	goto	u1560
  7246  0009E6                     u1561:
  7247  0009E6  EF47  F005         	goto	l2533
  7248  0009EA                     u1560:
  7249  0009EA  0E01               	movlw	1
  7250  0009EC  6E11               	movwf	___aodiv@counter^0,c
  7251  0009EE  EF03  F005         	goto	l2519
  7252  0009F2                     l2517:
  7253  0009F2  90D8               	bcf	status,0,c
  7254  0009F4  3609               	rlcf	___aodiv@divisor^0,f,c
  7255  0009F6  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  7256  0009F8  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  7257  0009FA  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  7258  0009FC  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  7259  0009FE  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  7260  000A00  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  7261  000A02  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  7262  000A04  2A11               	incf	___aodiv@counter^0,f,c
  7263  000A06                     l2519:
  7264  000A06  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  7265  000A08  EF08  F005         	goto	u1571
  7266  000A0C  EF0A  F005         	goto	u1570
  7267  000A10                     u1571:
  7268  000A10  EFF9  F004         	goto	l2517
  7269  000A14                     u1570:
  7270  000A14                     l2521:
  7271  000A14  90D8               	bcf	status,0,c
  7272  000A16  3613               	rlcf	___aodiv@quotient^0,f,c
  7273  000A18  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  7274  000A1A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  7275  000A1C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  7276  000A1E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  7277  000A20  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  7278  000A22  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  7279  000A24  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  7280  000A26  5009               	movf	___aodiv@divisor^0,w,c
  7281  000A28  5C01               	subwf	___aodiv@dividend^0,w,c
  7282  000A2A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7283  000A2C  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  7284  000A2E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7285  000A30  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  7286  000A32  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7287  000A34  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  7288  000A36  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7289  000A38  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  7290  000A3A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7291  000A3C  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  7292  000A3E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7293  000A40  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  7294  000A42  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7295  000A44  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  7296  000A46  A0D8               	btfss	status,0,c
  7297  000A48  EF28  F005         	goto	u1581
  7298  000A4C  EF2A  F005         	goto	u1580
  7299  000A50                     u1581:
  7300  000A50  EF3B  F005         	goto	l2529
  7301  000A54                     u1580:
  7302  000A54  5009               	movf	___aodiv@divisor^0,w,c
  7303  000A56  5E01               	subwf	___aodiv@dividend^0,f,c
  7304  000A58  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7305  000A5A  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  7306  000A5C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7307  000A5E  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  7308  000A60  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7309  000A62  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  7310  000A64  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7311  000A66  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  7312  000A68  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7313  000A6A  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  7314  000A6C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7315  000A6E  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  7316  000A70  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7317  000A72  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  7318  000A74  8013               	bsf	___aodiv@quotient^0,0,c
  7319  000A76                     l2529:
  7320  000A76  90D8               	bcf	status,0,c
  7321  000A78  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  7322  000A7A  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  7323  000A7C  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  7324  000A7E  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  7325  000A80  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  7326  000A82  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  7327  000A84  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  7328  000A86  3209               	rrcf	___aodiv@divisor^0,f,c
  7329  000A88  2E11               	decfsz	___aodiv@counter^0,f,c
  7330  000A8A  EF0A  F005         	goto	l2521
  7331  000A8E                     l2533:
  7332  000A8E  5012               	movf	___aodiv@sign^0,w,c
  7333  000A90  B4D8               	btfsc	status,2,c
  7334  000A92  EF4D  F005         	goto	u1591
  7335  000A96  EF4F  F005         	goto	u1590
  7336  000A9A                     u1591:
  7337  000A9A  EF5F  F005         	goto	l2537
  7338  000A9E                     u1590:
  7339  000A9E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  7340  000AA0  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  7341  000AA2  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  7342  000AA4  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  7343  000AA6  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  7344  000AA8  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  7345  000AAA  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  7346  000AAC  6C13               	negf	___aodiv@quotient^0,c
  7347  000AAE  0E00               	movlw	0
  7348  000AB0  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  7349  000AB2  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  7350  000AB4  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  7351  000AB6  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  7352  000AB8  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  7353  000ABA  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  7354  000ABC  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  7355  000ABE                     l2537:
  7356  000ABE  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7357  000AC2  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7358  000AC6  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7359  000ACA  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7360  000ACE  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7361  000AD2  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7362  000AD6  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7363  000ADA  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7364  000ADE  0012               	return		;funcret
  7365  000AE0                     __end_of___aodiv:
  7366                           	opt callstack 0
  7367                           
  7368 ;; *************** function _asignarHorarios *****************
  7369 ;; Defined at:
  7370 ;;		line 342 in file "main.c"
  7371 ;; Parameters:    Size  Location     Type
  7372 ;;		None
  7373 ;; Auto vars:     Size  Location     Type
  7374 ;;  i               2   16[COMRAM] int 
  7375 ;;  Rx              1   18[COMRAM] unsigned char 
  7376 ;;  datoCapturad    1   15[COMRAM] unsigned char 
  7377 ;;  hora            1   14[COMRAM] unsigned char 
  7378 ;; Return value:  Size  Location     Type
  7379 ;;                  1    wreg      void 
  7380 ;; Registers used:
  7381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7382 ;; Tracked objects:
  7383 ;;		On entry : 0/0
  7384 ;;		On exit  : 0/0
  7385 ;;		Unchanged: 0/0
  7386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7387 ;;      Params:         0       0       0       0       0       0       0       0       0
  7388 ;;      Locals:         5       0       0       0       0       0       0       0       0
  7389 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7390 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7391 ;;Total ram usage:        5 bytes
  7392 ;; Hardware stack levels used:    1
  7393 ;; Hardware stack levels required when called:    5
  7394 ;; This function calls:
  7395 ;;		_UART_printf
  7396 ;;		_UART_read
  7397 ;;		_UART_write
  7398 ;;		_escribeHorariosMemoria
  7399 ;; This function is called by:
  7400 ;;		_sistemaPrincipal
  7401 ;; This function uses a non-reentrant model
  7402 ;;
  7403                           
  7404                           	psect	text39
  7405  000DB6                     __ptext39:
  7406                           	opt callstack 0
  7407  000DB6                     _asignarHorarios:
  7408                           	opt callstack 24
  7409  000DB6                     
  7410                           ;main.c: 344:     unsigned char hora;;main.c: 345:     unsigned char Rx;;main.c: 346:   
      +                            char datoCapturado = 0;
  7411  000DB6  0E00               	movlw	0
  7412  000DB8  6E10               	movwf	asignarHorarios@datoCapturado^0,c
  7413  000DBA                     
  7414                           ;main.c: 348:     UART_printf("\r\n OPCIONES DE REGADO \r\n");
  7415  000DBA  0E72               	movlw	low STR_5
  7416  000DBC  6E02               	movwf	UART_printf@cadena^0,c
  7417  000DBE  0E7F               	movlw	high STR_5
  7418  000DC0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7419  000DC2  ECD8  F00E         	call	_UART_printf	;wreg free
  7420  000DC6                     
  7421                           ;main.c: 349:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  7422  000DC6  0E46               	movlw	low STR_6
  7423  000DC8  6E02               	movwf	UART_printf@cadena^0,c
  7424  000DCA  0E7C               	movlw	high STR_6
  7425  000DCC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7426  000DCE  ECD8  F00E         	call	_UART_printf	;wreg free
  7427                           
  7428                           ;main.c: 351:     for (int i = 0; i < 2; i++) {
  7429  000DD2  0E00               	movlw	0
  7430  000DD4  6E12               	movwf	(asignarHorarios@i+1)^0,c
  7431  000DD6  0E00               	movlw	0
  7432  000DD8  6E11               	movwf	asignarHorarios@i^0,c
  7433  000DDA                     l3167:
  7434                           
  7435                           ;main.c: 352:         Rx = UART_read();
  7436  000DDA  EC35  F00F         	call	_UART_read	;wreg free
  7437  000DDE  6E13               	movwf	asignarHorarios@Rx^0,c
  7438  000DE0                     
  7439                           ;main.c: 353:         if (Rx >= 48 && Rx <= 57) {
  7440  000DE0  0E2F               	movlw	47
  7441  000DE2  6413               	cpfsgt	asignarHorarios@Rx^0,c
  7442  000DE4  EFF6  F006         	goto	u2381
  7443  000DE8  EFF8  F006         	goto	u2380
  7444  000DEC                     u2381:
  7445  000DEC  EF1B  F007         	goto	l3187
  7446  000DF0                     u2380:
  7447  000DF0  0E3A               	movlw	58
  7448  000DF2  6013               	cpfslt	asignarHorarios@Rx^0,c
  7449  000DF4  EFFE  F006         	goto	u2391
  7450  000DF8  EF00  F007         	goto	u2390
  7451  000DFC                     u2391:
  7452  000DFC  EF1B  F007         	goto	l3187
  7453  000E00                     u2390:
  7454  000E00                     
  7455                           ;main.c: 354:             if (!i) {
  7456  000E00  5011               	movf	asignarHorarios@i^0,w,c
  7457  000E02  1012               	iorwf	(asignarHorarios@i+1)^0,w,c
  7458  000E04  A4D8               	btfss	status,2,c
  7459  000E06  EF07  F007         	goto	u2401
  7460  000E0A  EF09  F007         	goto	u2400
  7461  000E0E                     u2401:
  7462  000E0E  EF13  F007         	goto	l3181
  7463  000E12                     u2400:
  7464  000E12                     
  7465                           ;main.c: 355:                 Rx -= 48;
  7466  000E12  0E30               	movlw	48
  7467  000E14  5E13               	subwf	asignarHorarios@Rx^0,f,c
  7468  000E16                     
  7469                           ;main.c: 356:                 hora = Rx;
  7470  000E16  C013  F00F         	movff	asignarHorarios@Rx,asignarHorarios@hora
  7471  000E1A                     
  7472                           ;main.c: 357:                 hora *= 10;
  7473  000E1A  0E0A               	movlw	10
  7474  000E1C  020F               	mulwf	asignarHorarios@hora^0,c
  7475  000E1E  50F3               	movf	prodl,w,c
  7476  000E20  6E0F               	movwf	asignarHorarios@hora^0,c
  7477                           
  7478                           ;main.c: 358:             } else {
  7479  000E22  EF22  F007         	goto	l3191
  7480  000E26                     l3181:
  7481                           
  7482                           ;main.c: 359:                 datoCapturado = 1;
  7483  000E26  0E01               	movlw	1
  7484  000E28  6E10               	movwf	asignarHorarios@datoCapturado^0,c
  7485  000E2A                     
  7486                           ;main.c: 360:                 Rx -= 48;
  7487  000E2A  0E30               	movlw	48
  7488  000E2C  5E13               	subwf	asignarHorarios@Rx^0,f,c
  7489  000E2E                     
  7490                           ;main.c: 361:                 hora += Rx;
  7491  000E2E  5013               	movf	asignarHorarios@Rx^0,w,c
  7492  000E30  260F               	addwf	asignarHorarios@hora^0,f,c
  7493  000E32  EF22  F007         	goto	l3191
  7494  000E36                     l3187:
  7495                           
  7496                           ;main.c: 364:             datoCapturado = 0;
  7497  000E36  0E00               	movlw	0
  7498  000E38  6E10               	movwf	asignarHorarios@datoCapturado^0,c
  7499  000E3A                     
  7500                           ;main.c: 366:             UART_write('F');
  7501  000E3A  0E46               	movlw	70
  7502  000E3C  EC4D  F011         	call	_UART_write
  7503                           
  7504                           ;main.c: 367:             break;
  7505  000E40  EF32  F007         	goto	l3195
  7506  000E44                     l3191:
  7507                           
  7508                           ;main.c: 369:     }
  7509  000E44  4A11               	infsnz	asignarHorarios@i^0,f,c
  7510  000E46  2A12               	incf	(asignarHorarios@i+1)^0,f,c
  7511  000E48  BE12               	btfsc	(asignarHorarios@i+1)^0,7,c
  7512  000E4A  EF30  F007         	goto	u2411
  7513  000E4E  5012               	movf	(asignarHorarios@i+1)^0,w,c
  7514  000E50  E109               	bnz	u2410
  7515  000E52  0E02               	movlw	2
  7516  000E54  5C11               	subwf	asignarHorarios@i^0,w,c
  7517  000E56  A0D8               	btfss	status,0,c
  7518  000E58  EF30  F007         	goto	u2411
  7519  000E5C  EF32  F007         	goto	u2410
  7520  000E60                     u2411:
  7521  000E60  EFED  F006         	goto	l3167
  7522  000E64                     u2410:
  7523  000E64                     l3195:
  7524                           
  7525                           ;main.c: 371:     if (datoCapturado && !esperandoDatos) {
  7526  000E64  5010               	movf	asignarHorarios@datoCapturado^0,w,c
  7527  000E66  B4D8               	btfsc	status,2,c
  7528  000E68  EF38  F007         	goto	u2421
  7529  000E6C  EF3A  F007         	goto	u2420
  7530  000E70                     u2421:
  7531  000E70  EF7E  F007         	goto	l288
  7532  000E74                     u2420:
  7533  000E74  505E               	movf	_esperandoDatos^0,w,c
  7534  000E76  A4D8               	btfss	status,2,c
  7535  000E78  EF40  F007         	goto	u2431
  7536  000E7C  EF42  F007         	goto	u2430
  7537  000E80                     u2431:
  7538  000E80  EF7E  F007         	goto	l288
  7539  000E84                     u2430:
  7540  000E84                     
  7541                           ;main.c: 373:         UART_printf("\r\n Ingrese 1 para regar || ingrese 0 para no regar:
      +                           \r\n");
  7542  000E84  0E0F               	movlw	low STR_7
  7543  000E86  6E02               	movwf	UART_printf@cadena^0,c
  7544  000E88  0E7C               	movlw	high STR_7
  7545  000E8A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7546  000E8C  ECD8  F00E         	call	_UART_printf	;wreg free
  7547  000E90                     
  7548                           ;main.c: 375:         Rx = UART_read();
  7549  000E90  EC35  F00F         	call	_UART_read	;wreg free
  7550  000E94  6E13               	movwf	asignarHorarios@Rx^0,c
  7551  000E96                     
  7552                           ;main.c: 376:         Rx -= 48;
  7553  000E96  0E30               	movlw	48
  7554  000E98  5E13               	subwf	asignarHorarios@Rx^0,f,c
  7555  000E9A                     
  7556                           ;main.c: 378:         if (Rx != 1 && Rx != 0)
  7557  000E9A  0413               	decf	asignarHorarios@Rx^0,w,c
  7558  000E9C  B4D8               	btfsc	status,2,c
  7559  000E9E  EF53  F007         	goto	u2441
  7560  000EA2  EF55  F007         	goto	u2440
  7561  000EA6                     u2441:
  7562  000EA6  EF5F  F007         	goto	l285
  7563  000EAA                     u2440:
  7564  000EAA  5013               	movf	asignarHorarios@Rx^0,w,c
  7565  000EAC  B4D8               	btfsc	status,2,c
  7566  000EAE  EF5B  F007         	goto	u2451
  7567  000EB2  EF5D  F007         	goto	u2450
  7568  000EB6                     u2451:
  7569  000EB6  EF5F  F007         	goto	l285
  7570  000EBA                     u2450:
  7571  000EBA                     
  7572                           ;main.c: 379:             Rx = 0;
  7573  000EBA  0E00               	movlw	0
  7574  000EBC  6E13               	movwf	asignarHorarios@Rx^0,c
  7575  000EBE                     l285:
  7576                           
  7577                           ;main.c: 381:         if (!esperandoDatos) {
  7578  000EBE  505E               	movf	_esperandoDatos^0,w,c
  7579  000EC0  A4D8               	btfss	status,2,c
  7580  000EC2  EF65  F007         	goto	u2461
  7581  000EC6  EF67  F007         	goto	u2460
  7582  000ECA                     u2461:
  7583  000ECA  EF7B  F007         	goto	l3217
  7584  000ECE                     u2460:
  7585  000ECE                     
  7586                           ;main.c: 382:             UART_printf("\r\n Horario Modificado! \r\n");
  7587  000ECE  0E58               	movlw	low STR_8
  7588  000ED0  6E02               	movwf	UART_printf@cadena^0,c
  7589  000ED2  0E7F               	movlw	high STR_8
  7590  000ED4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7591  000ED6  ECD8  F00E         	call	_UART_printf	;wreg free
  7592  000EDA                     
  7593                           ;main.c: 384:             horarios[hora].regar = Rx;
  7594  000EDA  500F               	movf	asignarHorarios@hora^0,w,c
  7595  000EDC  0D03               	mullw	3
  7596  000EDE  0E01               	movlw	low (_horarios+1)
  7597  000EE0  24F3               	addwf	243,w,c
  7598  000EE2  6ED9               	movwf	fsr2l,c
  7599  000EE4  0E01               	movlw	high (_horarios+1)
  7600  000EE6  20F4               	addwfc	prodh,w,c
  7601  000EE8  6EDA               	movwf	fsr2h,c
  7602  000EEA  C013  FFDF         	movff	asignarHorarios@Rx,indf2
  7603  000EEE                     
  7604                           ;main.c: 386:             escribeHorariosMemoria();
  7605  000EEE  EC94  F009         	call	_escribeHorariosMemoria	;wreg free
  7606                           
  7607                           ;main.c: 389:         } else {
  7608  000EF2  EF7E  F007         	goto	l288
  7609  000EF6                     l3217:
  7610                           
  7611                           ;main.c: 391:             UART_write('F');
  7612  000EF6  0E46               	movlw	70
  7613  000EF8  EC4D  F011         	call	_UART_write
  7614  000EFC                     l288:
  7615  000EFC  0012               	return		;funcret
  7616  000EFE                     __end_of_asignarHorarios:
  7617                           	opt callstack 0
  7618                           
  7619 ;; *************** function _escribeHorariosMemoria *****************
  7620 ;; Defined at:
  7621 ;;		line 211 in file "main.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;		None
  7624 ;; Auto vars:     Size  Location     Type
  7625 ;;  i               2   12[COMRAM] int 
  7626 ;;  contMemoria     2   10[COMRAM] int 
  7627 ;; Return value:  Size  Location     Type
  7628 ;;                  1    wreg      void 
  7629 ;; Registers used:
  7630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7631 ;; Tracked objects:
  7632 ;;		On entry : 0/0
  7633 ;;		On exit  : 0/0
  7634 ;;		Unchanged: 0/0
  7635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7636 ;;      Params:         0       0       0       0       0       0       0       0       0
  7637 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7638 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7639 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7640 ;;Total ram usage:        4 bytes
  7641 ;; Hardware stack levels used:    1
  7642 ;; Hardware stack levels required when called:    4
  7643 ;; This function calls:
  7644 ;;		___wmul
  7645 ;;		_escribe_eeprom
  7646 ;; This function is called by:
  7647 ;;		_asignarHorarios
  7648 ;;		_setTiempoRegar
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           	psect	text40
  7653  001328                     __ptext40:
  7654                           	opt callstack 0
  7655  001328                     _escribeHorariosMemoria:
  7656                           	opt callstack 24
  7657  001328                     
  7658                           ;main.c: 213:     int contMemoria = 0;
  7659  001328  0E00               	movlw	0
  7660  00132A  6E0C               	movwf	(escribeHorariosMemoria@contMemoria+1)^0,c
  7661  00132C  0E00               	movlw	0
  7662  00132E  6E0B               	movwf	escribeHorariosMemoria@contMemoria^0,c
  7663                           
  7664                           ;main.c: 214:     for (int i = 0; i < 24; i++) {
  7665  001330  0E00               	movlw	0
  7666  001332  6E0E               	movwf	(escribeHorariosMemoria@i+1)^0,c
  7667  001334  0E00               	movlw	0
  7668  001336  6E0D               	movwf	escribeHorariosMemoria@i^0,c
  7669  001338                     l2931:
  7670                           
  7671                           ;main.c: 215:         escribe_eeprom(contMemoria++, horarios[i].hora);
  7672  001338  C00B  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  7673  00133C  C00C  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  7674  001340  C00D  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  7675  001344  C00E  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  7676  001348  0E00               	movlw	0
  7677  00134A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7678  00134C  0E03               	movlw	3
  7679  00134E  6E03               	movwf	___wmul@multiplicand^0,c
  7680  001350  ECFE  F010         	call	___wmul	;wreg free
  7681  001354  0E00               	movlw	low _horarios
  7682  001356  2401               	addwf	?___wmul^0,w,c
  7683  001358  6ED9               	movwf	fsr2l,c
  7684  00135A  0E01               	movlw	high _horarios
  7685  00135C  2002               	addwfc	(?___wmul+1)^0,w,c
  7686  00135E  6EDA               	movwf	fsr2h,c
  7687  001360  50DF               	movf	indf2,w,c
  7688  001362  6E09               	movwf	escribe_eeprom@dato^0,c
  7689  001364  EC92  F010         	call	_escribe_eeprom	;wreg free
  7690  001368  4A0B               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  7691  00136A  2A0C               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  7692  00136C                     
  7693                           ;main.c: 216:         escribe_eeprom(contMemoria++, horarios[i].regar);
  7694  00136C  C00B  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  7695  001370  C00C  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  7696  001374  C00D  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  7697  001378  C00E  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  7698  00137C  0E00               	movlw	0
  7699  00137E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7700  001380  0E03               	movlw	3
  7701  001382  6E03               	movwf	___wmul@multiplicand^0,c
  7702  001384  ECFE  F010         	call	___wmul	;wreg free
  7703  001388  0E01               	movlw	low (_horarios+1)
  7704  00138A  2401               	addwf	?___wmul^0,w,c
  7705  00138C  6ED9               	movwf	fsr2l,c
  7706  00138E  0E01               	movlw	high (_horarios+1)
  7707  001390  2002               	addwfc	(?___wmul+1)^0,w,c
  7708  001392  6EDA               	movwf	fsr2h,c
  7709  001394  50DF               	movf	indf2,w,c
  7710  001396  6E09               	movwf	escribe_eeprom@dato^0,c
  7711  001398  EC92  F010         	call	_escribe_eeprom	;wreg free
  7712  00139C  4A0B               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  7713  00139E  2A0C               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  7714  0013A0                     
  7715                           ;main.c: 217:         escribe_eeprom(contMemoria++, horarios[i].tiempoRegar);
  7716  0013A0  C00B  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  7717  0013A4  C00C  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  7718  0013A8  C00D  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  7719  0013AC  C00E  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  7720  0013B0  0E00               	movlw	0
  7721  0013B2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7722  0013B4  0E03               	movlw	3
  7723  0013B6  6E03               	movwf	___wmul@multiplicand^0,c
  7724  0013B8  ECFE  F010         	call	___wmul	;wreg free
  7725  0013BC  0E02               	movlw	low (_horarios+2)
  7726  0013BE  2401               	addwf	?___wmul^0,w,c
  7727  0013C0  6ED9               	movwf	fsr2l,c
  7728  0013C2  0E01               	movlw	high (_horarios+2)
  7729  0013C4  2002               	addwfc	(?___wmul+1)^0,w,c
  7730  0013C6  6EDA               	movwf	fsr2h,c
  7731  0013C8  50DF               	movf	indf2,w,c
  7732  0013CA  6E09               	movwf	escribe_eeprom@dato^0,c
  7733  0013CC  EC92  F010         	call	_escribe_eeprom	;wreg free
  7734  0013D0  4A0B               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  7735  0013D2  2A0C               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  7736  0013D4                     
  7737                           ;main.c: 218:     }
  7738  0013D4  4A0D               	infsnz	escribeHorariosMemoria@i^0,f,c
  7739  0013D6  2A0E               	incf	(escribeHorariosMemoria@i+1)^0,f,c
  7740  0013D8  BE0E               	btfsc	(escribeHorariosMemoria@i+1)^0,7,c
  7741  0013DA  EFF8  F009         	goto	u2131
  7742  0013DE  500E               	movf	(escribeHorariosMemoria@i+1)^0,w,c
  7743  0013E0  E109               	bnz	u2130
  7744  0013E2  0E18               	movlw	24
  7745  0013E4  5C0D               	subwf	escribeHorariosMemoria@i^0,w,c
  7746  0013E6  A0D8               	btfss	status,0,c
  7747  0013E8  EFF8  F009         	goto	u2131
  7748  0013EC  EFFA  F009         	goto	u2130
  7749  0013F0                     u2131:
  7750  0013F0  EF9C  F009         	goto	l2931
  7751  0013F4                     u2130:
  7752  0013F4  0012               	return		;funcret
  7753  0013F6                     __end_of_escribeHorariosMemoria:
  7754                           	opt callstack 0
  7755                           
  7756 ;; *************** function _escribe_eeprom *****************
  7757 ;; Defined at:
  7758 ;;		line 182 in file "main.c"
  7759 ;; Parameters:    Size  Location     Type
  7760 ;;  direccion       2    6[COMRAM] unsigned short 
  7761 ;;  dato            1    8[COMRAM] unsigned char 
  7762 ;; Auto vars:     Size  Location     Type
  7763 ;;		None
  7764 ;; Return value:  Size  Location     Type
  7765 ;;                  1    wreg      void 
  7766 ;; Registers used:
  7767 ;;		wreg, status,2, status,0, cstack
  7768 ;; Tracked objects:
  7769 ;;		On entry : 0/0
  7770 ;;		On exit  : 0/0
  7771 ;;		Unchanged: 0/0
  7772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7773 ;;      Params:         3       0       0       0       0       0       0       0       0
  7774 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7775 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7776 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7777 ;;Total ram usage:        4 bytes
  7778 ;; Hardware stack levels used:    1
  7779 ;; Hardware stack levels required when called:    3
  7780 ;; This function calls:
  7781 ;;		_i2c_detener
  7782 ;;		_i2c_envia_dato
  7783 ;;		_i2c_inicia_com
  7784 ;; This function is called by:
  7785 ;;		_escribeHorariosMemoria
  7786 ;; This function uses a non-reentrant model
  7787 ;;
  7788                           
  7789                           	psect	text41
  7790  002124                     __ptext41:
  7791                           	opt callstack 0
  7792  002124                     _escribe_eeprom:
  7793                           	opt callstack 24
  7794  002124                     
  7795                           ;main.c: 183:     i2c_inicia_com();
  7796  002124  EC78  F011         	call	_i2c_inicia_com	;wreg free
  7797                           
  7798                           ;main.c: 184:     i2c_envia_dato(0xAE);
  7799  002128  0EAE               	movlw	174
  7800  00212A  EC69  F011         	call	_i2c_envia_dato
  7801                           
  7802                           ;main.c: 185:     i2c_envia_dato(direccion >> 8);
  7803  00212E  5008               	movf	(escribe_eeprom@direccion+1)^0,w,c
  7804  002130  EC69  F011         	call	_i2c_envia_dato
  7805                           
  7806                           ;main.c: 187:     i2c_envia_dato(direccion);
  7807  002134  5007               	movf	escribe_eeprom@direccion^0,w,c
  7808  002136  EC69  F011         	call	_i2c_envia_dato
  7809                           
  7810                           ;main.c: 189:     i2c_envia_dato(dato);
  7811  00213A  5009               	movf	escribe_eeprom@dato^0,w,c
  7812  00213C  EC69  F011         	call	_i2c_envia_dato
  7813                           
  7814                           ;main.c: 190:     i2c_detener();
  7815  002140  EC7C  F011         	call	_i2c_detener	;wreg free
  7816  002144                     
  7817                           ;main.c: 191:     _delay((unsigned long)((10)*(4000000/4000.0)));
  7818  002144  0E0D               	movlw	13
  7819  002146  6E0A               	movwf	??_escribe_eeprom^0,c
  7820  002148  0EFC               	movlw	252
  7821  00214A                     u2917:
  7822  00214A  2EE8               	decfsz	wreg,f,c
  7823  00214C  D7FE               	bra	u2917
  7824  00214E  2E0A               	decfsz	??_escribe_eeprom^0,f,c
  7825  002150  D7FC               	bra	u2917
  7826  002152  0012               	return		;funcret
  7827  002154                     __end_of_escribe_eeprom:
  7828                           	opt callstack 0
  7829                           
  7830 ;; *************** function _UART_read *****************
  7831 ;; Defined at:
  7832 ;;		line 34 in file "./UART.h"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;		None
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;		None
  7837 ;; Return value:  Size  Location     Type
  7838 ;;                  1    wreg      unsigned char 
  7839 ;; Registers used:
  7840 ;;		wreg, status,2
  7841 ;; Tracked objects:
  7842 ;;		On entry : 0/0
  7843 ;;		On exit  : 0/0
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7846 ;;      Params:         0       0       0       0       0       0       0       0       0
  7847 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7848 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7849 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7850 ;;Total ram usage:        0 bytes
  7851 ;; Hardware stack levels used:    1
  7852 ;; Hardware stack levels required when called:    1
  7853 ;; This function calls:
  7854 ;;		Nothing
  7855 ;; This function is called by:
  7856 ;;		_setRtc
  7857 ;;		_asignarHorarios
  7858 ;;		_setTiempoRegar
  7859 ;;		_lecturaWifi
  7860 ;; This function uses a non-reentrant model
  7861 ;;
  7862                           
  7863                           	psect	text42
  7864  001E6A                     __ptext42:
  7865                           	opt callstack 0
  7866  001E6A                     _UART_read:
  7867                           	opt callstack 27
  7868  001E6A                     
  7869                           ;./UART.h: 36:     TMR0 = VALOR_TIMER0UART;
  7870  001E6A  0E67               	movlw	103
  7871  001E6C  6ED7               	movwf	215,c	;volatile
  7872  001E6E  0E69               	movlw	105
  7873  001E70  6ED6               	movwf	214,c	;volatile
  7874                           
  7875                           ;./UART.h: 37:     esperaDatoConcluida = 0;
  7876  001E72  0E00               	movlw	0
  7877  001E74  0100               	movlb	0	; () banked
  7878  001E76  6F8B               	movwf	_esperaDatoConcluida& (0+255),b
  7879                           
  7880                           ;./UART.h: 38:     esperandoDatos = 1;
  7881  001E78  0E01               	movlw	1
  7882  001E7A  6E5E               	movwf	_esperandoDatos^0,c
  7883                           
  7884                           ;./UART.h: 39:     byteUart = 0;
  7885  001E7C  0E00               	movlw	0
  7886  001E7E  6F8C               	movwf	_byteUart& (0+255),b
  7887                           
  7888                           ;./UART.h: 40:     tiempoInactividadTrans = 0;
  7889  001E80  0E00               	movlw	0
  7890  001E82  6F8D               	movwf	_tiempoInactividadTrans& (0+255),b
  7891  001E84                     l121:
  7892                           
  7893                           ; BSR set to: 0
  7894  001E84  BA9E               	btfsc	158,5,c	;volatile
  7895  001E86  EF47  F00F         	goto	u1971
  7896  001E8A  EF49  F00F         	goto	u1970
  7897  001E8E                     u1971:
  7898  001E8E  EF51  F00F         	goto	l2793
  7899  001E92                     u1970:
  7900  001E92                     
  7901                           ; BSR set to: 0
  7902  001E92  518B               	movf	_esperaDatoConcluida& (0+255),w,b
  7903  001E94  B4D8               	btfsc	status,2,c
  7904  001E96  EF4F  F00F         	goto	u1981
  7905  001E9A  EF51  F00F         	goto	u1980
  7906  001E9E                     u1981:
  7907  001E9E  EF42  F00F         	goto	l121
  7908  001EA2                     u1980:
  7909  001EA2                     l2793:
  7910                           
  7911                           ; BSR set to: 0
  7912                           ;./UART.h: 44:     if (!esperaDatoConcluida) {
  7913  001EA2  518B               	movf	_esperaDatoConcluida& (0+255),w,b
  7914  001EA4  A4D8               	btfss	status,2,c
  7915  001EA6  EF57  F00F         	goto	u1991
  7916  001EAA  EF59  F00F         	goto	u1990
  7917  001EAE                     u1991:
  7918  001EAE  EF5D  F00F         	goto	l126
  7919  001EB2                     u1990:
  7920  001EB2                     
  7921                           ; BSR set to: 0
  7922                           ;./UART.h: 45:         byteUart = RCREG;
  7923  001EB2  CFAE F08C          	movff	4014,_byteUart	;volatile
  7924  001EB6                     
  7925                           ; BSR set to: 0
  7926                           ;./UART.h: 46:         esperandoDatos = 0;
  7927  001EB6  0E00               	movlw	0
  7928  001EB8  6E5E               	movwf	_esperandoDatos^0,c
  7929  001EBA                     l126:
  7930                           
  7931                           ; BSR set to: 0
  7932                           ;./UART.h: 49:     return byteUart;
  7933  001EBA  518C               	movf	_byteUart& (0+255),w,b
  7934  001EBC                     
  7935                           ; BSR set to: 0
  7936  001EBC  0012               	return		;funcret
  7937  001EBE                     __end_of_UART_read:
  7938                           	opt callstack 0
  7939                           
  7940 ;; *************** function _UART_printf *****************
  7941 ;; Defined at:
  7942 ;;		line 57 in file "./UART.h"
  7943 ;; Parameters:    Size  Location     Type
  7944 ;;  cadena          2    1[COMRAM] PTR unsigned char 
  7945 ;;		 -> mostrarDatosSensoresWIFI@buffer(50), mostrarDatosSensores@buffer(50), STR_28(21), STR_27(25), 
  7946 ;;		 -> dameDatosSistema@buffer(50), STR_25(50), STR_24(42), STR_23(3), 
  7947 ;;		 -> STR_22(14), STR_21(34), STR_20(32), STR_19(49), 
  7948 ;;		 -> STR_18(37), STR_17(27), STR_16(37), STR_15(32), 
  7949 ;;		 -> STR_14(28), STR_13(38), STR_12(37), STR_11(72), 
  7950 ;;		 -> STR_10(51), STR_9(23), STR_8(26), STR_7(55), 
  7951 ;;		 -> STR_6(51), STR_5(25), STR_4(37), STR_3(31), 
  7952 ;;		 -> STR_2(43), STR_1(16), 
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;		None
  7955 ;; Return value:  Size  Location     Type
  7956 ;;                  1    wreg      void 
  7957 ;; Registers used:
  7958 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7959 ;; Tracked objects:
  7960 ;;		On entry : 0/0
  7961 ;;		On exit  : 0/0
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7964 ;;      Params:         2       0       0       0       0       0       0       0       0
  7965 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7966 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7967 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7968 ;;Total ram usage:        2 bytes
  7969 ;; Hardware stack levels used:    1
  7970 ;; Hardware stack levels required when called:    2
  7971 ;; This function calls:
  7972 ;;		_UART_write
  7973 ;; This function is called by:
  7974 ;;		_fijaHoraRtc
  7975 ;;		_asignarHorarios
  7976 ;;		_setTiempoRegar
  7977 ;;		_lecturaWifi
  7978 ;;		_mostrarMenu
  7979 ;;		_sistemaPrincipal
  7980 ;;		_dameDatosSistema
  7981 ;;		_dameTemperaturaHumedad
  7982 ;;		_mostrarDatosSensores
  7983 ;;		_mostrarDatosSensoresWIFI
  7984 ;; This function uses a non-reentrant model
  7985 ;;
  7986                           
  7987                           	psect	text43
  7988  001DB0                     __ptext43:
  7989                           	opt callstack 0
  7990  001DB0                     _UART_printf:
  7991                           	opt callstack 26
  7992  001DB0                     
  7993                           ;./UART.h: 58:     while (*cadena) {
  7994  001DB0  EFEE  F00E         	goto	l2669
  7995  001DB4                     l2665:
  7996                           
  7997                           ;./UART.h: 59:         UART_write(*cadena++);
  7998  001DB4  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  7999  001DB8  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  8000  001DBC  6AF8               	clrf	tblptru,c
  8001  001DBE  0E07               	movlw	(high __ramtop+-1)
  8002  001DC0  64F7               	cpfsgt	tblptrh,c
  8003  001DC2  D003               	bra	u1847
  8004  001DC4  0008               	tblrd		*
  8005  001DC6  50F5               	movf	tablat,w,c
  8006  001DC8  D005               	bra	u1840
  8007  001DCA                     u1847:
  8008  001DCA  CFF6 FFE1          	movff	tblptrl,fsr1l
  8009  001DCE  CFF7 FFE2          	movff	tblptrh,fsr1h
  8010  001DD2  50E7               	movf	indf1,w,c
  8011  001DD4                     u1840:
  8012  001DD4  EC4D  F011         	call	_UART_write
  8013  001DD8  4A02               	infsnz	UART_printf@cadena^0,f,c
  8014  001DDA  2A03               	incf	(UART_printf@cadena+1)^0,f,c
  8015  001DDC                     l2669:
  8016                           
  8017                           ;./UART.h: 58:     while (*cadena) {
  8018  001DDC  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  8019  001DE0  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  8020  001DE4  6AF8               	clrf	tblptru,c
  8021  001DE6  0E07               	movlw	(high __ramtop+-1)
  8022  001DE8  64F7               	cpfsgt	tblptrh,c
  8023  001DEA  D003               	bra	u1857
  8024  001DEC  0008               	tblrd		*
  8025  001DEE  50F5               	movf	tablat,w,c
  8026  001DF0  D005               	bra	u1850
  8027  001DF2                     u1857:
  8028  001DF2  CFF6 FFE1          	movff	tblptrl,fsr1l
  8029  001DF6  CFF7 FFE2          	movff	tblptrh,fsr1h
  8030  001DFA  50E7               	movf	indf1,w,c
  8031  001DFC                     u1850:
  8032  001DFC  0900               	iorlw	0
  8033  001DFE  A4D8               	btfss	status,2,c
  8034  001E00  EF04  F00F         	goto	u1861
  8035  001E04  EF06  F00F         	goto	u1860
  8036  001E08                     u1861:
  8037  001E08  EFDA  F00E         	goto	l2665
  8038  001E0C                     u1860:
  8039  001E0C  0012               	return		;funcret
  8040  001E0E                     __end_of_UART_printf:
  8041                           	opt callstack 0
  8042                           
  8043 ;; *************** function _UART_write *****************
  8044 ;; Defined at:
  8045 ;;		line 52 in file "./UART.h"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;  dato            1    wreg     unsigned char 
  8048 ;; Auto vars:     Size  Location     Type
  8049 ;;  dato            1    0[COMRAM] unsigned char 
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  1    wreg      void 
  8052 ;; Registers used:
  8053 ;;		wreg
  8054 ;; Tracked objects:
  8055 ;;		On entry : 0/0
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8059 ;;      Params:         0       0       0       0       0       0       0       0       0
  8060 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8061 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8062 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8063 ;;Total ram usage:        1 bytes
  8064 ;; Hardware stack levels used:    1
  8065 ;; Hardware stack levels required when called:    1
  8066 ;; This function calls:
  8067 ;;		Nothing
  8068 ;; This function is called by:
  8069 ;;		_UART_printf
  8070 ;;		_setRtc
  8071 ;;		_asignarHorarios
  8072 ;;		_setTiempoRegar
  8073 ;;		_lecturaWifi
  8074 ;;		_dameDatosSistema
  8075 ;;		_mostrarDatosSensores
  8076 ;;		_mostrarDatosSensoresWIFI
  8077 ;; This function uses a non-reentrant model
  8078 ;;
  8079                           
  8080                           	psect	text44
  8081  00229A                     __ptext44:
  8082                           	opt callstack 0
  8083  00229A                     _UART_write:
  8084                           	opt callstack 26
  8085                           
  8086                           ;incstack = 0
  8087                           ;UART_write@dato stored from wreg
  8088  00229A  6E01               	movwf	UART_write@dato^0,c
  8089  00229C                     
  8090                           ;./UART.h: 53:     TXREG = dato;
  8091  00229C  C001  FFAD         	movff	UART_write@dato,4013	;volatile
  8092  0022A0                     l130:
  8093  0022A0  A2AC               	btfss	172,1,c	;volatile
  8094  0022A2  EF55  F011         	goto	u1681
  8095  0022A6  EF57  F011         	goto	u1680
  8096  0022AA                     u1681:
  8097  0022AA  EF50  F011         	goto	l130
  8098  0022AE                     u1680:
  8099  0022AE  0012               	return		;funcret
  8100  0022B0                     __end_of_UART_write:
  8101                           	opt callstack 0
  8102                           
  8103 ;; *************** function _leeHorariosMemoria *****************
  8104 ;; Defined at:
  8105 ;;		line 221 in file "main.c"
  8106 ;; Parameters:    Size  Location     Type
  8107 ;;		None
  8108 ;; Auto vars:     Size  Location     Type
  8109 ;;  i               2    8[COMRAM] int 
  8110 ;;  contMemoria     2    6[COMRAM] int 
  8111 ;; Return value:  Size  Location     Type
  8112 ;;                  1    wreg      void 
  8113 ;; Registers used:
  8114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8115 ;; Tracked objects:
  8116 ;;		On entry : 0/0
  8117 ;;		On exit  : 0/0
  8118 ;;		Unchanged: 0/0
  8119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8120 ;;      Params:         0       0       0       0       0       0       0       0       0
  8121 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8123 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8124 ;;Total ram usage:        4 bytes
  8125 ;; Hardware stack levels used:    1
  8126 ;; Hardware stack levels required when called:    4
  8127 ;; This function calls:
  8128 ;;		___wmul
  8129 ;;		_leer_eeprom
  8130 ;; This function is called by:
  8131 ;;		_main
  8132 ;; This function uses a non-reentrant model
  8133 ;;
  8134                           
  8135                           	psect	text45
  8136  0014C0                     __ptext45:
  8137                           	opt callstack 0
  8138  0014C0                     _leeHorariosMemoria:
  8139                           	opt callstack 26
  8140  0014C0                     
  8141                           ;main.c: 223:     int contMemoria = 0;
  8142  0014C0  0E00               	movlw	0
  8143  0014C2  6E08               	movwf	(leeHorariosMemoria@contMemoria+1)^0,c
  8144  0014C4  0E00               	movlw	0
  8145  0014C6  6E07               	movwf	leeHorariosMemoria@contMemoria^0,c
  8146                           
  8147                           ;main.c: 225:     for (int i = 0; i < 24; i++) {
  8148  0014C8  0E00               	movlw	0
  8149  0014CA  6E0A               	movwf	(leeHorariosMemoria@i+1)^0,c
  8150  0014CC  0E00               	movlw	0
  8151  0014CE  6E09               	movwf	leeHorariosMemoria@i^0,c
  8152  0014D0                     l3501:
  8153                           
  8154                           ;main.c: 226:         horarios[i].hora = leer_eeprom(contMemoria++);
  8155  0014D0  C009  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  8156  0014D4  C00A  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  8157  0014D8  0E00               	movlw	0
  8158  0014DA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8159  0014DC  0E03               	movlw	3
  8160  0014DE  6E03               	movwf	___wmul@multiplicand^0,c
  8161  0014E0  ECFE  F010         	call	___wmul	;wreg free
  8162  0014E4  0E00               	movlw	low _horarios
  8163  0014E6  2401               	addwf	?___wmul^0,w,c
  8164  0014E8  6ED9               	movwf	fsr2l,c
  8165  0014EA  0E01               	movlw	high _horarios
  8166  0014EC  2002               	addwfc	(?___wmul+1)^0,w,c
  8167  0014EE  6EDA               	movwf	fsr2h,c
  8168  0014F0  C007  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  8169  0014F4  C008  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  8170  0014F8  EC59  F010         	call	_leer_eeprom	;wreg free
  8171  0014FC  6EDF               	movwf	indf2,c
  8172  0014FE  4A07               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  8173  001500  2A08               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  8174  001502                     
  8175                           ;main.c: 227:         horarios[i].regar = leer_eeprom(contMemoria++);
  8176  001502  C009  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  8177  001506  C00A  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  8178  00150A  0E00               	movlw	0
  8179  00150C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8180  00150E  0E03               	movlw	3
  8181  001510  6E03               	movwf	___wmul@multiplicand^0,c
  8182  001512  ECFE  F010         	call	___wmul	;wreg free
  8183  001516  0E01               	movlw	low (_horarios+1)
  8184  001518  2401               	addwf	?___wmul^0,w,c
  8185  00151A  6ED9               	movwf	fsr2l,c
  8186  00151C  0E01               	movlw	high (_horarios+1)
  8187  00151E  2002               	addwfc	(?___wmul+1)^0,w,c
  8188  001520  6EDA               	movwf	fsr2h,c
  8189  001522  C007  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  8190  001526  C008  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  8191  00152A  EC59  F010         	call	_leer_eeprom	;wreg free
  8192  00152E  6EDF               	movwf	indf2,c
  8193  001530  4A07               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  8194  001532  2A08               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  8195  001534                     
  8196                           ;main.c: 228:         horarios[i].tiempoRegar = leer_eeprom(contMemoria++);
  8197  001534  C009  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  8198  001538  C00A  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  8199  00153C  0E00               	movlw	0
  8200  00153E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8201  001540  0E03               	movlw	3
  8202  001542  6E03               	movwf	___wmul@multiplicand^0,c
  8203  001544  ECFE  F010         	call	___wmul	;wreg free
  8204  001548  0E02               	movlw	low (_horarios+2)
  8205  00154A  2401               	addwf	?___wmul^0,w,c
  8206  00154C  6ED9               	movwf	fsr2l,c
  8207  00154E  0E01               	movlw	high (_horarios+2)
  8208  001550  2002               	addwfc	(?___wmul+1)^0,w,c
  8209  001552  6EDA               	movwf	fsr2h,c
  8210  001554  C007  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  8211  001558  C008  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  8212  00155C  EC59  F010         	call	_leer_eeprom	;wreg free
  8213  001560  6EDF               	movwf	indf2,c
  8214  001562  4A07               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  8215  001564  2A08               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  8216  001566                     
  8217                           ;main.c: 229:     }
  8218  001566  4A09               	infsnz	leeHorariosMemoria@i^0,f,c
  8219  001568  2A0A               	incf	(leeHorariosMemoria@i+1)^0,f,c
  8220  00156A  BE0A               	btfsc	(leeHorariosMemoria@i+1)^0,7,c
  8221  00156C  EFC1  F00A         	goto	u2711
  8222  001570  500A               	movf	(leeHorariosMemoria@i+1)^0,w,c
  8223  001572  E109               	bnz	u2710
  8224  001574  0E18               	movlw	24
  8225  001576  5C09               	subwf	leeHorariosMemoria@i^0,w,c
  8226  001578  A0D8               	btfss	status,0,c
  8227  00157A  EFC1  F00A         	goto	u2711
  8228  00157E  EFC3  F00A         	goto	u2710
  8229  001582                     u2711:
  8230  001582  EF68  F00A         	goto	l3501
  8231  001586                     u2710:
  8232  001586  0012               	return		;funcret
  8233  001588                     __end_of_leeHorariosMemoria:
  8234                           	opt callstack 0
  8235                           
  8236 ;; *************** function _leer_eeprom *****************
  8237 ;; Defined at:
  8238 ;;		line 194 in file "main.c"
  8239 ;; Parameters:    Size  Location     Type
  8240 ;;  direccion       2    2[COMRAM] unsigned short 
  8241 ;; Auto vars:     Size  Location     Type
  8242 ;;  dato            1    5[COMRAM] unsigned char 
  8243 ;; Return value:  Size  Location     Type
  8244 ;;                  1    wreg      unsigned char 
  8245 ;; Registers used:
  8246 ;;		wreg, status,2, status,0, cstack
  8247 ;; Tracked objects:
  8248 ;;		On entry : 0/0
  8249 ;;		On exit  : 0/0
  8250 ;;		Unchanged: 0/0
  8251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8252 ;;      Params:         2       0       0       0       0       0       0       0       0
  8253 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8254 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8255 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8256 ;;Total ram usage:        4 bytes
  8257 ;; Hardware stack levels used:    1
  8258 ;; Hardware stack levels required when called:    3
  8259 ;; This function calls:
  8260 ;;		_i2c_detener
  8261 ;;		_i2c_envia_dato
  8262 ;;		_i2c_inicia_com
  8263 ;;		_i2c_recibe_dato
  8264 ;;		_i2c_reinicia_com
  8265 ;; This function is called by:
  8266 ;;		_leeHorariosMemoria
  8267 ;; This function uses a non-reentrant model
  8268 ;;
  8269                           
  8270                           	psect	text46
  8271  0020B2                     __ptext46:
  8272                           	opt callstack 0
  8273  0020B2                     _leer_eeprom:
  8274                           	opt callstack 26
  8275  0020B2                     
  8276                           ;main.c: 196:     unsigned char dato;;main.c: 198:     i2c_inicia_com();
  8277  0020B2  EC78  F011         	call	_i2c_inicia_com	;wreg free
  8278                           
  8279                           ;main.c: 199:     i2c_envia_dato(0xAE);
  8280  0020B6  0EAE               	movlw	174
  8281  0020B8  EC69  F011         	call	_i2c_envia_dato
  8282                           
  8283                           ;main.c: 200:     i2c_envia_dato(direccion >> 8);
  8284  0020BC  5004               	movf	(leer_eeprom@direccion+1)^0,w,c
  8285  0020BE  EC69  F011         	call	_i2c_envia_dato
  8286                           
  8287                           ;main.c: 201:     i2c_envia_dato(direccion);
  8288  0020C2  5003               	movf	leer_eeprom@direccion^0,w,c
  8289  0020C4  EC69  F011         	call	_i2c_envia_dato
  8290                           
  8291                           ;main.c: 202:     i2c_reinicia_com();
  8292  0020C8  EC74  F011         	call	_i2c_reinicia_com	;wreg free
  8293                           
  8294                           ;main.c: 203:     i2c_envia_dato(0xAF);
  8295  0020CC  0EAF               	movlw	175
  8296  0020CE  EC69  F011         	call	_i2c_envia_dato
  8297                           
  8298                           ;main.c: 204:     dato = i2c_recibe_dato();
  8299  0020D2  EC40  F011         	call	_i2c_recibe_dato	;wreg free
  8300  0020D6  6E06               	movwf	leer_eeprom@dato^0,c
  8301                           
  8302                           ;main.c: 205:     i2c_detener();
  8303  0020D8  EC7C  F011         	call	_i2c_detener	;wreg free
  8304  0020DC                     
  8305                           ;main.c: 206:     _delay((unsigned long)((10)*(4000000/4000.0)));
  8306  0020DC  0E0D               	movlw	13
  8307  0020DE  6E05               	movwf	??_leer_eeprom^0,c
  8308  0020E0  0EFC               	movlw	252
  8309  0020E2                     u2927:
  8310  0020E2  2EE8               	decfsz	wreg,f,c
  8311  0020E4  D7FE               	bra	u2927
  8312  0020E6  2E05               	decfsz	??_leer_eeprom^0,f,c
  8313  0020E8  D7FC               	bra	u2927
  8314  0020EA                     
  8315                           ;main.c: 208:     return dato;
  8316  0020EA  5006               	movf	leer_eeprom@dato^0,w,c
  8317  0020EC  0012               	return		;funcret
  8318  0020EE                     __end_of_leer_eeprom:
  8319                           	opt callstack 0
  8320                           
  8321 ;; *************** function _i2c_reinicia_com *****************
  8322 ;; Defined at:
  8323 ;;		line 37 in file "./I2C.h"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;		None
  8326 ;; Auto vars:     Size  Location     Type
  8327 ;;		None
  8328 ;; Return value:  Size  Location     Type
  8329 ;;                  1    wreg      void 
  8330 ;; Registers used:
  8331 ;;		wreg, status,2, status,0, cstack
  8332 ;; Tracked objects:
  8333 ;;		On entry : 0/0
  8334 ;;		On exit  : 0/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8337 ;;      Params:         0       0       0       0       0       0       0       0       0
  8338 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8339 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8340 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8341 ;;Total ram usage:        0 bytes
  8342 ;; Hardware stack levels used:    1
  8343 ;; Hardware stack levels required when called:    2
  8344 ;; This function calls:
  8345 ;;		_i2c_espera
  8346 ;; This function is called by:
  8347 ;;		_leer_rtc
  8348 ;;		_leer_eeprom
  8349 ;; This function uses a non-reentrant model
  8350 ;;
  8351                           
  8352                           	psect	text47
  8353  0022E8                     __ptext47:
  8354                           	opt callstack 0
  8355  0022E8                     _i2c_reinicia_com:
  8356                           	opt callstack 25
  8357  0022E8                     
  8358                           ;./I2C.h: 38:     i2c_espera();
  8359  0022E8  ECEB  F010         	call	_i2c_espera	;wreg free
  8360  0022EC                     
  8361                           ;./I2C.h: 39:     SSPCON2bits.RSEN = 1;
  8362  0022EC  82C5               	bsf	197,1,c	;volatile
  8363  0022EE  0012               	return		;funcret
  8364  0022F0                     __end_of_i2c_reinicia_com:
  8365                           	opt callstack 0
  8366                           
  8367 ;; *************** function _i2c_recibe_dato *****************
  8368 ;; Defined at:
  8369 ;;		line 68 in file "./I2C.h"
  8370 ;; Parameters:    Size  Location     Type
  8371 ;;		None
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;  datoleido       1    1[COMRAM] unsigned char 
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  1    wreg      unsigned char 
  8376 ;; Registers used:
  8377 ;;		wreg, status,2, status,0, cstack
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8383 ;;      Params:         0       0       0       0       0       0       0       0       0
  8384 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8386 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8387 ;;Total ram usage:        1 bytes
  8388 ;; Hardware stack levels used:    1
  8389 ;; Hardware stack levels required when called:    2
  8390 ;; This function calls:
  8391 ;;		_i2c_espera
  8392 ;; This function is called by:
  8393 ;;		_leer_rtc
  8394 ;;		_leer_eeprom
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           	psect	text48
  8399  002280                     __ptext48:
  8400                           	opt callstack 0
  8401  002280                     _i2c_recibe_dato:
  8402                           	opt callstack 25
  8403  002280                     
  8404                           ;./I2C.h: 70:     unsigned char datoleido;;./I2C.h: 73:     i2c_espera();
  8405  002280  ECEB  F010         	call	_i2c_espera	;wreg free
  8406  002284                     
  8407                           ;./I2C.h: 74:     SSPCON2bits.RCEN = 1;
  8408  002284  86C5               	bsf	197,3,c	;volatile
  8409                           
  8410                           ;./I2C.h: 76:     i2c_espera();
  8411  002286  ECEB  F010         	call	_i2c_espera	;wreg free
  8412  00228A                     
  8413                           ;./I2C.h: 77:     datoleido = SSPBUF;
  8414  00228A  CFC9 F002          	movff	4041,i2c_recibe_dato@datoleido	;volatile
  8415                           
  8416                           ;./I2C.h: 80:     i2c_espera();
  8417  00228E  ECEB  F010         	call	_i2c_espera	;wreg free
  8418  002292                     
  8419                           ;./I2C.h: 82:     SSPCON2bits.ACKDT = 1;
  8420  002292  8AC5               	bsf	197,5,c	;volatile
  8421  002294                     
  8422                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
  8423  002294  88C5               	bsf	197,4,c	;volatile
  8424  002296                     
  8425                           ;./I2C.h: 91:     return datoleido;
  8426  002296  5002               	movf	i2c_recibe_dato@datoleido^0,w,c
  8427  002298  0012               	return		;funcret
  8428  00229A                     __end_of_i2c_recibe_dato:
  8429                           	opt callstack 0
  8430                           
  8431 ;; *************** function _i2c_inicia_com *****************
  8432 ;; Defined at:
  8433 ;;		line 28 in file "./I2C.h"
  8434 ;; Parameters:    Size  Location     Type
  8435 ;;		None
  8436 ;; Auto vars:     Size  Location     Type
  8437 ;;		None
  8438 ;; Return value:  Size  Location     Type
  8439 ;;                  1    wreg      void 
  8440 ;; Registers used:
  8441 ;;		wreg, status,2, status,0, cstack
  8442 ;; Tracked objects:
  8443 ;;		On entry : 0/0
  8444 ;;		On exit  : 0/0
  8445 ;;		Unchanged: 0/0
  8446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8447 ;;      Params:         0       0       0       0       0       0       0       0       0
  8448 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8449 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8450 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8451 ;;Total ram usage:        0 bytes
  8452 ;; Hardware stack levels used:    1
  8453 ;; Hardware stack levels required when called:    2
  8454 ;; This function calls:
  8455 ;;		_i2c_espera
  8456 ;; This function is called by:
  8457 ;;		_escribe_rtc
  8458 ;;		_leer_rtc
  8459 ;;		_escribe_eeprom
  8460 ;;		_leer_eeprom
  8461 ;; This function uses a non-reentrant model
  8462 ;;
  8463                           
  8464                           	psect	text49
  8465  0022F0                     __ptext49:
  8466                           	opt callstack 0
  8467  0022F0                     _i2c_inicia_com:
  8468                           	opt callstack 25
  8469  0022F0                     
  8470                           ;./I2C.h: 29:     i2c_espera();
  8471  0022F0  ECEB  F010         	call	_i2c_espera	;wreg free
  8472  0022F4                     
  8473                           ;./I2C.h: 30:     SSPCON2bits.SEN = 1;
  8474  0022F4  80C5               	bsf	197,0,c	;volatile
  8475  0022F6  0012               	return		;funcret
  8476  0022F8                     __end_of_i2c_inicia_com:
  8477                           	opt callstack 0
  8478                           
  8479 ;; *************** function _i2c_envia_dato *****************
  8480 ;; Defined at:
  8481 ;;		line 57 in file "./I2C.h"
  8482 ;; Parameters:    Size  Location     Type
  8483 ;;  dato            1    wreg     unsigned char 
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;  dato            1    1[COMRAM] unsigned char 
  8486 ;; Return value:  Size  Location     Type
  8487 ;;                  1    wreg      unsigned char 
  8488 ;; Registers used:
  8489 ;;		wreg, status,2, status,0, cstack
  8490 ;; Tracked objects:
  8491 ;;		On entry : 0/0
  8492 ;;		On exit  : 0/0
  8493 ;;		Unchanged: 0/0
  8494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8495 ;;      Params:         0       0       0       0       0       0       0       0       0
  8496 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8498 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8499 ;;Total ram usage:        1 bytes
  8500 ;; Hardware stack levels used:    1
  8501 ;; Hardware stack levels required when called:    2
  8502 ;; This function calls:
  8503 ;;		_i2c_espera
  8504 ;; This function is called by:
  8505 ;;		_escribe_rtc
  8506 ;;		_leer_rtc
  8507 ;;		_escribe_eeprom
  8508 ;;		_leer_eeprom
  8509 ;; This function uses a non-reentrant model
  8510 ;;
  8511                           
  8512                           	psect	text50
  8513  0022D2                     __ptext50:
  8514                           	opt callstack 0
  8515  0022D2                     _i2c_envia_dato:
  8516                           	opt callstack 25
  8517                           
  8518                           ;incstack = 0
  8519                           ;i2c_envia_dato@dato stored from wreg
  8520  0022D2  6E02               	movwf	i2c_envia_dato@dato^0,c
  8521  0022D4                     
  8522                           ;./I2C.h: 58:     i2c_espera();
  8523  0022D4  ECEB  F010         	call	_i2c_espera	;wreg free
  8524  0022D8                     
  8525                           ;./I2C.h: 59:     SSPBUF = dato;
  8526  0022D8  C002  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
  8527  0022DC  0012               	return		;funcret
  8528  0022DE                     __end_of_i2c_envia_dato:
  8529                           	opt callstack 0
  8530                           
  8531 ;; *************** function _i2c_detener *****************
  8532 ;; Defined at:
  8533 ;;		line 46 in file "./I2C.h"
  8534 ;; Parameters:    Size  Location     Type
  8535 ;;		None
  8536 ;; Auto vars:     Size  Location     Type
  8537 ;;		None
  8538 ;; Return value:  Size  Location     Type
  8539 ;;                  1    wreg      void 
  8540 ;; Registers used:
  8541 ;;		wreg, status,2, status,0, cstack
  8542 ;; Tracked objects:
  8543 ;;		On entry : 0/0
  8544 ;;		On exit  : 0/0
  8545 ;;		Unchanged: 0/0
  8546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8547 ;;      Params:         0       0       0       0       0       0       0       0       0
  8548 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8549 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8550 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8551 ;;Total ram usage:        0 bytes
  8552 ;; Hardware stack levels used:    1
  8553 ;; Hardware stack levels required when called:    2
  8554 ;; This function calls:
  8555 ;;		_i2c_espera
  8556 ;; This function is called by:
  8557 ;;		_escribe_rtc
  8558 ;;		_leer_rtc
  8559 ;;		_escribe_eeprom
  8560 ;;		_leer_eeprom
  8561 ;; This function uses a non-reentrant model
  8562 ;;
  8563                           
  8564                           	psect	text51
  8565  0022F8                     __ptext51:
  8566                           	opt callstack 0
  8567  0022F8                     _i2c_detener:
  8568                           	opt callstack 25
  8569  0022F8                     
  8570                           ;./I2C.h: 47:     i2c_espera();
  8571  0022F8  ECEB  F010         	call	_i2c_espera	;wreg free
  8572  0022FC                     
  8573                           ;./I2C.h: 48:     SSPCON2bits.PEN = 1;
  8574  0022FC  84C5               	bsf	197,2,c	;volatile
  8575  0022FE  0012               	return		;funcret
  8576  002300                     __end_of_i2c_detener:
  8577                           	opt callstack 0
  8578                           
  8579 ;; *************** function _i2c_espera *****************
  8580 ;; Defined at:
  8581 ;;		line 20 in file "./I2C.h"
  8582 ;; Parameters:    Size  Location     Type
  8583 ;;		None
  8584 ;; Auto vars:     Size  Location     Type
  8585 ;;		None
  8586 ;; Return value:  Size  Location     Type
  8587 ;;                  1    wreg      void 
  8588 ;; Registers used:
  8589 ;;		wreg, status,2, status,0
  8590 ;; Tracked objects:
  8591 ;;		On entry : 0/0
  8592 ;;		On exit  : 0/0
  8593 ;;		Unchanged: 0/0
  8594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8595 ;;      Params:         0       0       0       0       0       0       0       0       0
  8596 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8597 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8598 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8599 ;;Total ram usage:        1 bytes
  8600 ;; Hardware stack levels used:    1
  8601 ;; Hardware stack levels required when called:    1
  8602 ;; This function calls:
  8603 ;;		Nothing
  8604 ;; This function is called by:
  8605 ;;		_i2c_inicia_com
  8606 ;;		_i2c_reinicia_com
  8607 ;;		_i2c_detener
  8608 ;;		_i2c_envia_dato
  8609 ;;		_i2c_recibe_dato
  8610 ;; This function uses a non-reentrant model
  8611 ;;
  8612                           
  8613                           	psect	text52
  8614  0021D6                     __ptext52:
  8615                           	opt callstack 0
  8616  0021D6                     _i2c_espera:
  8617                           	opt callstack 25
  8618  0021D6                     l2579:
  8619  0021D6  CFC5 F001          	movff	4037,??_i2c_espera	;volatile
  8620  0021DA  0E1F               	movlw	31
  8621  0021DC  1601               	andwf	??_i2c_espera^0,f,c
  8622  0021DE  A4D8               	btfss	status,2,c
  8623  0021E0  EFF4  F010         	goto	u1661
  8624  0021E4  EFF6  F010         	goto	u1660
  8625  0021E8                     u1661:
  8626  0021E8  EFEB  F010         	goto	l2579
  8627  0021EC                     u1660:
  8628  0021EC  B4C7               	btfsc	199,2,c	;volatile
  8629  0021EE  EFFB  F010         	goto	u1671
  8630  0021F2  EFFD  F010         	goto	u1670
  8631  0021F6                     u1671:
  8632  0021F6  EFEB  F010         	goto	l2579
  8633  0021FA                     u1670:
  8634  0021FA  0012               	return		;funcret
  8635  0021FC                     __end_of_i2c_espera:
  8636                           	opt callstack 0
  8637                           
  8638 ;; *************** function _inicializarObjetos *****************
  8639 ;; Defined at:
  8640 ;;		line 140 in file "main.c"
  8641 ;; Parameters:    Size  Location     Type
  8642 ;;		None
  8643 ;; Auto vars:     Size  Location     Type
  8644 ;;  i               2    6[COMRAM] int 
  8645 ;; Return value:  Size  Location     Type
  8646 ;;                  1    wreg      void 
  8647 ;; Registers used:
  8648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8649 ;; Tracked objects:
  8650 ;;		On entry : 0/0
  8651 ;;		On exit  : 0/0
  8652 ;;		Unchanged: 0/0
  8653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8654 ;;      Params:         0       0       0       0       0       0       0       0       0
  8655 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8656 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8657 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8658 ;;Total ram usage:        2 bytes
  8659 ;; Hardware stack levels used:    1
  8660 ;; Hardware stack levels required when called:    2
  8661 ;; This function calls:
  8662 ;;		___wmul
  8663 ;; This function is called by:
  8664 ;;		_main
  8665 ;; This function uses a non-reentrant model
  8666 ;;
  8667                           
  8668                           	psect	text53
  8669  0019C4                     __ptext53:
  8670                           	opt callstack 0
  8671  0019C4                     _inicializarObjetos:
  8672                           	opt callstack 28
  8673  0019C4                     
  8674                           ;main.c: 142:     for (int i = 0; i < 24; i++) {
  8675  0019C4  0E00               	movlw	0
  8676  0019C6  6E08               	movwf	(inicializarObjetos@i+1)^0,c
  8677  0019C8  0E00               	movlw	0
  8678  0019CA  6E07               	movwf	inicializarObjetos@i^0,c
  8679  0019CC                     l3489:
  8680                           
  8681                           ;main.c: 143:         horarios[i].hora = i;
  8682  0019CC  C007  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  8683  0019D0  C008  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  8684  0019D4  0E00               	movlw	0
  8685  0019D6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8686  0019D8  0E03               	movlw	3
  8687  0019DA  6E03               	movwf	___wmul@multiplicand^0,c
  8688  0019DC  ECFE  F010         	call	___wmul	;wreg free
  8689  0019E0  0E00               	movlw	low _horarios
  8690  0019E2  2401               	addwf	?___wmul^0,w,c
  8691  0019E4  6ED9               	movwf	fsr2l,c
  8692  0019E6  0E01               	movlw	high _horarios
  8693  0019E8  2002               	addwfc	(?___wmul+1)^0,w,c
  8694  0019EA  6EDA               	movwf	fsr2h,c
  8695  0019EC  C007  FFDF         	movff	inicializarObjetos@i,indf2
  8696                           
  8697                           ;main.c: 144:         horarios[i].regar = 0;
  8698  0019F0  C007  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  8699  0019F4  C008  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  8700  0019F8  0E00               	movlw	0
  8701  0019FA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8702  0019FC  0E03               	movlw	3
  8703  0019FE  6E03               	movwf	___wmul@multiplicand^0,c
  8704  001A00  ECFE  F010         	call	___wmul	;wreg free
  8705  001A04  0E01               	movlw	low (_horarios+1)
  8706  001A06  2401               	addwf	?___wmul^0,w,c
  8707  001A08  6ED9               	movwf	fsr2l,c
  8708  001A0A  0E01               	movlw	high (_horarios+1)
  8709  001A0C  2002               	addwfc	(?___wmul+1)^0,w,c
  8710  001A0E  6EDA               	movwf	fsr2h,c
  8711  001A10  0E00               	movlw	0
  8712  001A12  6EDF               	movwf	indf2,c
  8713                           
  8714                           ;main.c: 145:         horarios[i].tiempoRegar = 15;
  8715  001A14  C007  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  8716  001A18  C008  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  8717  001A1C  0E00               	movlw	0
  8718  001A1E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8719  001A20  0E03               	movlw	3
  8720  001A22  6E03               	movwf	___wmul@multiplicand^0,c
  8721  001A24  ECFE  F010         	call	___wmul	;wreg free
  8722  001A28  0E02               	movlw	low (_horarios+2)
  8723  001A2A  2401               	addwf	?___wmul^0,w,c
  8724  001A2C  6ED9               	movwf	fsr2l,c
  8725  001A2E  0E01               	movlw	high (_horarios+2)
  8726  001A30  2002               	addwfc	(?___wmul+1)^0,w,c
  8727  001A32  6EDA               	movwf	fsr2h,c
  8728  001A34  0E0F               	movlw	15
  8729  001A36  6EDF               	movwf	indf2,c
  8730  001A38                     
  8731                           ;main.c: 146:     }
  8732  001A38  4A07               	infsnz	inicializarObjetos@i^0,f,c
  8733  001A3A  2A08               	incf	(inicializarObjetos@i+1)^0,f,c
  8734  001A3C  BE08               	btfsc	(inicializarObjetos@i+1)^0,7,c
  8735  001A3E  EF2A  F00D         	goto	u2701
  8736  001A42  5008               	movf	(inicializarObjetos@i+1)^0,w,c
  8737  001A44  E109               	bnz	u2700
  8738  001A46  0E18               	movlw	24
  8739  001A48  5C07               	subwf	inicializarObjetos@i^0,w,c
  8740  001A4A  A0D8               	btfss	status,0,c
  8741  001A4C  EF2A  F00D         	goto	u2701
  8742  001A50  EF2C  F00D         	goto	u2700
  8743  001A54                     u2701:
  8744  001A54  EFE6  F00C         	goto	l3489
  8745  001A58                     u2700:
  8746  001A58  0012               	return		;funcret
  8747  001A5A                     __end_of_inicializarObjetos:
  8748                           	opt callstack 0
  8749                           
  8750 ;; *************** function ___wmul *****************
  8751 ;; Defined at:
  8752 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  8753 ;; Parameters:    Size  Location     Type
  8754 ;;  multiplier      2    0[COMRAM] unsigned int 
  8755 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8756 ;; Auto vars:     Size  Location     Type
  8757 ;;  product         2    4[COMRAM] unsigned int 
  8758 ;; Return value:  Size  Location     Type
  8759 ;;                  2    0[COMRAM] unsigned int 
  8760 ;; Registers used:
  8761 ;;		wreg, status,2, status,0, prodl, prodh
  8762 ;; Tracked objects:
  8763 ;;		On entry : 0/0
  8764 ;;		On exit  : 0/0
  8765 ;;		Unchanged: 0/0
  8766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8767 ;;      Params:         4       0       0       0       0       0       0       0       0
  8768 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8769 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8770 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8771 ;;Total ram usage:        6 bytes
  8772 ;; Hardware stack levels used:    1
  8773 ;; Hardware stack levels required when called:    1
  8774 ;; This function calls:
  8775 ;;		Nothing
  8776 ;; This function is called by:
  8777 ;;		_inicializarObjetos
  8778 ;;		_escribeHorariosMemoria
  8779 ;;		_leeHorariosMemoria
  8780 ;;		_encenderBombas
  8781 ;;		_restablecerDatosSensor
  8782 ;;		_lecturaWifi
  8783 ;;		_lecturaAnalogaSensores
  8784 ;;		_dameDatosSistema
  8785 ;;		_mostrarDatosSensores
  8786 ;;		_mostrarDatosSensoresWIFI
  8787 ;; This function uses a non-reentrant model
  8788 ;;
  8789                           
  8790                           	psect	text54
  8791  0021FC                     __ptext54:
  8792                           	opt callstack 0
  8793  0021FC                     ___wmul:
  8794                           	opt callstack 26
  8795  0021FC  5001               	movf	___wmul@multiplier^0,w,c
  8796  0021FE  0203               	mulwf	___wmul@multiplicand^0,c
  8797  002200  CFF3 F005          	movff	prodl,___wmul@product
  8798  002204  CFF4 F006          	movff	prodh,___wmul@product+1
  8799  002208  5001               	movf	___wmul@multiplier^0,w,c
  8800  00220A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8801  00220C  50F3               	movf	243,w,c
  8802  00220E  2606               	addwf	(___wmul@product+1)^0,f,c
  8803  002210  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8804  002212  0203               	mulwf	___wmul@multiplicand^0,c
  8805  002214  50F3               	movf	243,w,c
  8806  002216  2606               	addwf	(___wmul@product+1)^0,f,c
  8807  002218  C005  F001         	movff	___wmul@product,?___wmul
  8808  00221C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8809  002220  0012               	return		;funcret
  8810  002222                     __end_of___wmul:
  8811                           	opt callstack 0
  8812                           
  8813 ;; *************** function _i2c_iniciar *****************
  8814 ;; Defined at:
  8815 ;;		line 4 in file "./I2C.h"
  8816 ;; Parameters:    Size  Location     Type
  8817 ;;		None
  8818 ;; Auto vars:     Size  Location     Type
  8819 ;;		None
  8820 ;; Return value:  Size  Location     Type
  8821 ;;                  1    wreg      void 
  8822 ;; Registers used:
  8823 ;;		wreg, status,2
  8824 ;; Tracked objects:
  8825 ;;		On entry : 0/0
  8826 ;;		On exit  : 0/0
  8827 ;;		Unchanged: 0/0
  8828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8829 ;;      Params:         0       0       0       0       0       0       0       0       0
  8830 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8831 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8832 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8833 ;;Total ram usage:        0 bytes
  8834 ;; Hardware stack levels used:    1
  8835 ;; Hardware stack levels required when called:    1
  8836 ;; This function calls:
  8837 ;;		Nothing
  8838 ;; This function is called by:
  8839 ;;		_main
  8840 ;; This function uses a non-reentrant model
  8841 ;;
  8842                           
  8843                           	psect	text55
  8844  0022B0                     __ptext55:
  8845                           	opt callstack 0
  8846  0022B0                     _i2c_iniciar:
  8847                           	opt callstack 29
  8848  0022B0                     
  8849                           ;./I2C.h: 5:     TRISBbits.RB0 = 1;
  8850  0022B0  8093               	bsf	147,0,c	;volatile
  8851                           
  8852                           ;./I2C.h: 6:     TRISBbits.RB1 = 1;
  8853  0022B2  8293               	bsf	147,1,c	;volatile
  8854  0022B4                     
  8855                           ;./I2C.h: 7:     SSPSTAT = 0b10000000;
  8856  0022B4  0E80               	movlw	128
  8857  0022B6  6EC7               	movwf	199,c	;volatile
  8858                           
  8859                           ;./I2C.h: 8:     SSPCON1 = 0b00101000;
  8860  0022B8  0E28               	movlw	40
  8861  0022BA  6EC6               	movwf	198,c	;volatile
  8862                           
  8863                           ;./I2C.h: 9:     SSPCON2 = 0b00000000;
  8864  0022BC  0E00               	movlw	0
  8865  0022BE  6EC5               	movwf	197,c	;volatile
  8866                           
  8867                           ;./I2C.h: 10:     SSPADD = 9;
  8868  0022C0  0E09               	movlw	9
  8869  0022C2  6EC8               	movwf	200,c	;volatile
  8870  0022C4  0012               	return		;funcret
  8871  0022C6                     __end_of_i2c_iniciar:
  8872                           	opt callstack 0
  8873                           
  8874 ;; *************** function _configurarAdc *****************
  8875 ;; Defined at:
  8876 ;;		line 121 in file "main.c"
  8877 ;; Parameters:    Size  Location     Type
  8878 ;;		None
  8879 ;; Auto vars:     Size  Location     Type
  8880 ;;		None
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  1    wreg      void 
  8883 ;; Registers used:
  8884 ;;		wreg, status,2
  8885 ;; Tracked objects:
  8886 ;;		On entry : 0/0
  8887 ;;		On exit  : 0/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8890 ;;      Params:         0       0       0       0       0       0       0       0       0
  8891 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8892 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8893 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8894 ;;Total ram usage:        0 bytes
  8895 ;; Hardware stack levels used:    1
  8896 ;; Hardware stack levels required when called:    1
  8897 ;; This function calls:
  8898 ;;		Nothing
  8899 ;; This function is called by:
  8900 ;;		_main
  8901 ;; This function uses a non-reentrant model
  8902 ;;
  8903                           
  8904                           	psect	text56
  8905  0022DE                     __ptext56:
  8906                           	opt callstack 0
  8907  0022DE                     _configurarAdc:
  8908                           	opt callstack 29
  8909  0022DE                     
  8910                           ;main.c: 122:     ADCON1 = 0b00000000;
  8911  0022DE  0E00               	movlw	0
  8912  0022E0  6EC1               	movwf	193,c	;volatile
  8913                           
  8914                           ;main.c: 123:     ADCON2 = 0b10100101;
  8915  0022E2  0EA5               	movlw	165
  8916  0022E4  6EC0               	movwf	192,c	;volatile
  8917  0022E6  0012               	return		;funcret
  8918  0022E8                     __end_of_configurarAdc:
  8919                           	opt callstack 0
  8920                           
  8921 ;; *************** function _UART_init *****************
  8922 ;; Defined at:
  8923 ;;		line 12 in file "./UART.h"
  8924 ;; Parameters:    Size  Location     Type
  8925 ;;  BAUD            4   14[COMRAM] long 
  8926 ;; Auto vars:     Size  Location     Type
  8927 ;;  frecuenciaCr    4    0        long 
  8928 ;; Return value:  Size  Location     Type
  8929 ;;                  1    wreg      void 
  8930 ;; Registers used:
  8931 ;;		wreg, status,2, status,0, cstack
  8932 ;; Tracked objects:
  8933 ;;		On entry : 0/0
  8934 ;;		On exit  : 0/0
  8935 ;;		Unchanged: 0/0
  8936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8937 ;;      Params:         4       0       0       0       0       0       0       0       0
  8938 ;;      Locals:         8       0       0       0       0       0       0       0       0
  8939 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8940 ;;      Totals:        12       0       0       0       0       0       0       0       0
  8941 ;;Total ram usage:       12 bytes
  8942 ;; Hardware stack levels used:    1
  8943 ;; Hardware stack levels required when called:    2
  8944 ;; This function calls:
  8945 ;;		___aldiv
  8946 ;; This function is called by:
  8947 ;;		_main
  8948 ;; This function uses a non-reentrant model
  8949 ;;
  8950                           
  8951                           	psect	text57
  8952  001AE4                     __ptext57:
  8953                           	opt callstack 0
  8954  001AE4                     _UART_init:
  8955                           	opt callstack 28
  8956  001AE4                     
  8957                           ;./UART.h: 14:     TRISCbits.TRISC6 = 0;
  8958  001AE4  9C94               	bcf	148,6,c	;volatile
  8959  001AE6                     
  8960                           ;./UART.h: 15:     TRISCbits.TRISC7 = 1;
  8961  001AE6  8E94               	bsf	148,7,c	;volatile
  8962  001AE8                     
  8963                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  8964  001AE8  0E10               	movlw	16
  8965  001AEA  6E05               	movwf	___aldiv@divisor^0,c
  8966  001AEC  0E00               	movlw	0
  8967  001AEE  6E06               	movwf	(___aldiv@divisor+1)^0,c
  8968  001AF0  0E00               	movlw	0
  8969  001AF2  6E07               	movwf	(___aldiv@divisor+2)^0,c
  8970  001AF4  0E00               	movlw	0
  8971  001AF6  6E08               	movwf	(___aldiv@divisor+3)^0,c
  8972  001AF8  0E00               	movlw	0
  8973  001AFA  6E01               	movwf	___aldiv@dividend^0,c
  8974  001AFC  0E09               	movlw	9
  8975  001AFE  6E02               	movwf	(___aldiv@dividend+1)^0,c
  8976  001B00  0E3D               	movlw	61
  8977  001B02  6E03               	movwf	(___aldiv@dividend+2)^0,c
  8978  001B04  0E00               	movlw	0
  8979  001B06  6E04               	movwf	(___aldiv@dividend+3)^0,c
  8980  001B08  EC20  F008         	call	___aldiv	;wreg free
  8981  001B0C  C001  F017         	movff	?___aldiv,_UART_init$1778
  8982  001B10  C002  F018         	movff	?___aldiv+1,_UART_init$1778+1
  8983  001B14  C003  F019         	movff	?___aldiv+2,_UART_init$1778+2
  8984  001B18  C004  F01A         	movff	?___aldiv+3,_UART_init$1778+3
  8985  001B1C                     
  8986                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  8987  001B1C  C017  F001         	movff	_UART_init$1778,___aldiv@dividend
  8988  001B20  C018  F002         	movff	_UART_init$1778+1,___aldiv@dividend+1
  8989  001B24  C019  F003         	movff	_UART_init$1778+2,___aldiv@dividend+2
  8990  001B28  C01A  F004         	movff	_UART_init$1778+3,___aldiv@dividend+3
  8991  001B2C  C00F  F005         	movff	UART_init@BAUD,___aldiv@divisor
  8992  001B30  C010  F006         	movff	UART_init@BAUD+1,___aldiv@divisor+1
  8993  001B34  C011  F007         	movff	UART_init@BAUD+2,___aldiv@divisor+2
  8994  001B38  C012  F008         	movff	UART_init@BAUD+3,___aldiv@divisor+3
  8995  001B3C  EC20  F008         	call	___aldiv	;wreg free
  8996  001B40  0401               	decf	?___aldiv^0,w,c
  8997  001B42  6EAF               	movwf	175,c	;volatile
  8998  001B44                     
  8999                           ;./UART.h: 21:     TXSTAbits.BRGH = 1;
  9000  001B44  84AC               	bsf	172,2,c	;volatile
  9001  001B46                     
  9002                           ;./UART.h: 22:     TXSTAbits.SYNC = 0;
  9003  001B46  98AC               	bcf	172,4,c	;volatile
  9004  001B48                     
  9005                           ;./UART.h: 23:     RCSTAbits.SPEN = 1;
  9006  001B48  8EAB               	bsf	171,7,c	;volatile
  9007  001B4A                     
  9008                           ;./UART.h: 26:     TXSTAbits.TX9 = 0;
  9009  001B4A  9CAC               	bcf	172,6,c	;volatile
  9010  001B4C                     
  9011                           ;./UART.h: 27:     TXSTAbits.TXEN = 1;
  9012  001B4C  8AAC               	bsf	172,5,c	;volatile
  9013  001B4E                     
  9014                           ;./UART.h: 30:     RCSTAbits.RC9 = 0;
  9015  001B4E  9CAB               	bcf	171,6,c	;volatile
  9016  001B50                     
  9017                           ;./UART.h: 31:     RCSTAbits.CREN = 1;
  9018  001B50  88AB               	bsf	171,4,c	;volatile
  9019  001B52  0012               	return		;funcret
  9020  001B54                     __end_of_UART_init:
  9021                           	opt callstack 0
  9022                           
  9023 ;; *************** function ___aldiv *****************
  9024 ;; Defined at:
  9025 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  9026 ;; Parameters:    Size  Location     Type
  9027 ;;  dividend        4    0[COMRAM] long 
  9028 ;;  divisor         4    4[COMRAM] long 
  9029 ;; Auto vars:     Size  Location     Type
  9030 ;;  quotient        4   10[COMRAM] long 
  9031 ;;  sign            1    9[COMRAM] unsigned char 
  9032 ;;  counter         1    8[COMRAM] unsigned char 
  9033 ;; Return value:  Size  Location     Type
  9034 ;;                  4    0[COMRAM] long 
  9035 ;; Registers used:
  9036 ;;		wreg, status,2, status,0
  9037 ;; Tracked objects:
  9038 ;;		On entry : 0/0
  9039 ;;		On exit  : 0/0
  9040 ;;		Unchanged: 0/0
  9041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9042 ;;      Params:         8       0       0       0       0       0       0       0       0
  9043 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9045 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9046 ;;Total ram usage:       14 bytes
  9047 ;; Hardware stack levels used:    1
  9048 ;; Hardware stack levels required when called:    1
  9049 ;; This function calls:
  9050 ;;		Nothing
  9051 ;; This function is called by:
  9052 ;;		_UART_init
  9053 ;; This function uses a non-reentrant model
  9054 ;;
  9055                           
  9056                           	psect	text58
  9057  001040                     __ptext58:
  9058                           	opt callstack 0
  9059  001040                     ___aldiv:
  9060                           	opt callstack 28
  9061  001040  0E00               	movlw	0
  9062  001042  6E0A               	movwf	___aldiv@sign^0,c
  9063  001044  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  9064  001046  EF29  F008         	goto	u2640
  9065  00104A  EF27  F008         	goto	u2641
  9066  00104E                     u2641:
  9067  00104E  EF33  F008         	goto	l3417
  9068  001052                     u2640:
  9069  001052  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  9070  001054  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  9071  001056  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  9072  001058  6C05               	negf	___aldiv@divisor^0,c
  9073  00105A  0E00               	movlw	0
  9074  00105C  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  9075  00105E  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  9076  001060  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  9077  001062  0E01               	movlw	1
  9078  001064  6E0A               	movwf	___aldiv@sign^0,c
  9079  001066                     l3417:
  9080  001066  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  9081  001068  EF3A  F008         	goto	u2650
  9082  00106C  EF38  F008         	goto	u2651
  9083  001070                     u2651:
  9084  001070  EF44  F008         	goto	l3423
  9085  001074                     u2650:
  9086  001074  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  9087  001076  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  9088  001078  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  9089  00107A  6C01               	negf	___aldiv@dividend^0,c
  9090  00107C  0E00               	movlw	0
  9091  00107E  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  9092  001080  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  9093  001082  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  9094  001084  0E01               	movlw	1
  9095  001086  1A0A               	xorwf	___aldiv@sign^0,f,c
  9096  001088                     l3423:
  9097  001088  0E00               	movlw	0
  9098  00108A  6E0B               	movwf	___aldiv@quotient^0,c
  9099  00108C  0E00               	movlw	0
  9100  00108E  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  9101  001090  0E00               	movlw	0
  9102  001092  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  9103  001094  0E00               	movlw	0
  9104  001096  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  9105  001098  5005               	movf	___aldiv@divisor^0,w,c
  9106  00109A  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  9107  00109C  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  9108  00109E  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  9109  0010A0  B4D8               	btfsc	status,2,c
  9110  0010A2  EF55  F008         	goto	u2661
  9111  0010A6  EF57  F008         	goto	u2660
  9112  0010AA                     u2661:
  9113  0010AA  EF8D  F008         	goto	l3445
  9114  0010AE                     u2660:
  9115  0010AE  0E01               	movlw	1
  9116  0010B0  6E09               	movwf	___aldiv@counter^0,c
  9117  0010B2  EF61  F008         	goto	l3431
  9118  0010B6                     l3429:
  9119  0010B6  90D8               	bcf	status,0,c
  9120  0010B8  3605               	rlcf	___aldiv@divisor^0,f,c
  9121  0010BA  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  9122  0010BC  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  9123  0010BE  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  9124  0010C0  2A09               	incf	___aldiv@counter^0,f,c
  9125  0010C2                     l3431:
  9126  0010C2  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  9127  0010C4  EF66  F008         	goto	u2671
  9128  0010C8  EF68  F008         	goto	u2670
  9129  0010CC                     u2671:
  9130  0010CC  EF5B  F008         	goto	l3429
  9131  0010D0                     u2670:
  9132  0010D0                     l3433:
  9133  0010D0  90D8               	bcf	status,0,c
  9134  0010D2  360B               	rlcf	___aldiv@quotient^0,f,c
  9135  0010D4  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  9136  0010D6  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  9137  0010D8  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  9138  0010DA  5005               	movf	___aldiv@divisor^0,w,c
  9139  0010DC  5C01               	subwf	___aldiv@dividend^0,w,c
  9140  0010DE  5006               	movf	(___aldiv@divisor+1)^0,w,c
  9141  0010E0  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  9142  0010E2  5007               	movf	(___aldiv@divisor+2)^0,w,c
  9143  0010E4  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  9144  0010E6  5008               	movf	(___aldiv@divisor+3)^0,w,c
  9145  0010E8  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  9146  0010EA  A0D8               	btfss	status,0,c
  9147  0010EC  EF7A  F008         	goto	u2681
  9148  0010F0  EF7C  F008         	goto	u2680
  9149  0010F4                     u2681:
  9150  0010F4  EF85  F008         	goto	l3441
  9151  0010F8                     u2680:
  9152  0010F8  5005               	movf	___aldiv@divisor^0,w,c
  9153  0010FA  5E01               	subwf	___aldiv@dividend^0,f,c
  9154  0010FC  5006               	movf	(___aldiv@divisor+1)^0,w,c
  9155  0010FE  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  9156  001100  5007               	movf	(___aldiv@divisor+2)^0,w,c
  9157  001102  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  9158  001104  5008               	movf	(___aldiv@divisor+3)^0,w,c
  9159  001106  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  9160  001108  800B               	bsf	___aldiv@quotient^0,0,c
  9161  00110A                     l3441:
  9162  00110A  90D8               	bcf	status,0,c
  9163  00110C  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  9164  00110E  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  9165  001110  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  9166  001112  3205               	rrcf	___aldiv@divisor^0,f,c
  9167  001114  2E09               	decfsz	___aldiv@counter^0,f,c
  9168  001116  EF68  F008         	goto	l3433
  9169  00111A                     l3445:
  9170  00111A  500A               	movf	___aldiv@sign^0,w,c
  9171  00111C  B4D8               	btfsc	status,2,c
  9172  00111E  EF93  F008         	goto	u2691
  9173  001122  EF95  F008         	goto	u2690
  9174  001126                     u2691:
  9175  001126  EF9D  F008         	goto	l3449
  9176  00112A                     u2690:
  9177  00112A  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  9178  00112C  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  9179  00112E  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  9180  001130  6C0B               	negf	___aldiv@quotient^0,c
  9181  001132  0E00               	movlw	0
  9182  001134  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  9183  001136  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  9184  001138  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  9185  00113A                     l3449:
  9186  00113A  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  9187  00113E  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  9188  001142  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  9189  001146  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  9190  00114A  0012               	return		;funcret
  9191  00114C                     __end_of___aldiv:
  9192                           	opt callstack 0
  9193                           
  9194 ;; *************** function _desbordamiento *****************
  9195 ;; Defined at:
  9196 ;;		line 86 in file "main.c"
  9197 ;; Parameters:    Size  Location     Type
  9198 ;;		None
  9199 ;; Auto vars:     Size  Location     Type
  9200 ;;		None
  9201 ;; Return value:  Size  Location     Type
  9202 ;;                  1    wreg      void 
  9203 ;; Registers used:
  9204 ;;		wreg, status,2, status,0
  9205 ;; Tracked objects:
  9206 ;;		On entry : 0/0
  9207 ;;		On exit  : 0/0
  9208 ;;		Unchanged: 0/0
  9209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9210 ;;      Params:         0       0       0       0       0       0       0       0       0
  9211 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9212 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9213 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9214 ;;Total ram usage:        0 bytes
  9215 ;; Hardware stack levels used:    1
  9216 ;; This function calls:
  9217 ;;		Nothing
  9218 ;; This function is called by:
  9219 ;;		Interrupt level 2
  9220 ;; This function uses a non-reentrant model
  9221 ;;
  9222                           
  9223                           	psect	intcode
  9224  000008                     __pintcode:
  9225                           	opt callstack 0
  9226  000008                     _desbordamiento:
  9227                           	opt callstack 20
  9228                           
  9229                           ;incstack = 0
  9230  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9231  00000A  ED12  F00E         	call	int_func,f	;refresh shadow registers
  9232                           
  9233                           	psect	intcode_body
  9234  001C24                     __pintcode_body:
  9235                           	opt callstack 20
  9236  001C24                     int_func:
  9237                           	opt callstack 20
  9238  001C24  0006               	pop		; remove dummy address from shadow register refresh
  9239  001C26                     
  9240                           ;main.c: 88:     if (INTCONbits.TMR0IF) {
  9241  001C26  A4F2               	btfss	242,2,c	;volatile
  9242  001C28  EF18  F00E         	goto	i2u277_41
  9243  001C2C  EF1A  F00E         	goto	i2u277_40
  9244  001C30                     i2u277_41:
  9245  001C30  EF37  F00E         	goto	i2l3595
  9246  001C34                     i2u277_40:
  9247  001C34                     
  9248                           ;main.c: 90:         if (esperandoDatos) {
  9249  001C34  505E               	movf	_esperandoDatos^0,w,c
  9250  001C36  B4D8               	btfsc	status,2,c
  9251  001C38  EF20  F00E         	goto	i2u278_41
  9252  001C3C  EF22  F00E         	goto	i2u278_40
  9253  001C40                     i2u278_41:
  9254  001C40  EF2F  F00E         	goto	i2l3591
  9255  001C44                     i2u278_40:
  9256  001C44                     
  9257                           ;main.c: 92:             tiempoInactividadTrans++;
  9258  001C44  0100               	movlb	0	; () banked
  9259  001C46  2B8D               	incf	_tiempoInactividadTrans& (0+255),f,b
  9260  001C48                     
  9261                           ; BSR set to: 0
  9262                           ;main.c: 94:             if (tiempoInactividadTrans == 2)
  9263  001C48  0E02               	movlw	2
  9264  001C4A  198D               	xorwf	_tiempoInactividadTrans& (0+255),w,b
  9265  001C4C  A4D8               	btfss	status,2,c
  9266  001C4E  EF2B  F00E         	goto	i2u279_41
  9267  001C52  EF2D  F00E         	goto	i2u279_40
  9268  001C56                     i2u279_41:
  9269  001C56  EF2F  F00E         	goto	i2l3591
  9270  001C5A                     i2u279_40:
  9271  001C5A                     
  9272                           ; BSR set to: 0
  9273                           ;main.c: 95:                 esperaDatoConcluida = 1;
  9274  001C5A  0E01               	movlw	1
  9275  001C5C  6F8B               	movwf	_esperaDatoConcluida& (0+255),b
  9276  001C5E                     i2l3591:
  9277                           
  9278                           ;main.c: 100:         INTCONbits.TMR0IF = 0;
  9279  001C5E  94F2               	bcf	242,2,c	;volatile
  9280  001C60                     
  9281                           ;main.c: 101:         TMR0 = VALOR_TIMER0;
  9282  001C60  C0FA  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  9283  001C64  C0FB  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  9284                           
  9285                           ;main.c: 102:         overflowTimer = 1;
  9286  001C68  0E01               	movlw	1
  9287  001C6A  0100               	movlb	0	; () banked
  9288  001C6C  6F86               	movwf	_overflowTimer& (0+255),b
  9289  001C6E                     i2l3595:
  9290                           
  9291                           ;main.c: 106:     if (PIR1bits.RCIF) {
  9292  001C6E  AA9E               	btfss	158,5,c	;volatile
  9293  001C70  EF3C  F00E         	goto	i2u280_41
  9294  001C74  EF3E  F00E         	goto	i2u280_40
  9295  001C78                     i2u280_41:
  9296  001C78  EF43  F00E         	goto	i2l195
  9297  001C7C                     i2u280_40:
  9298  001C7C                     
  9299                           ;main.c: 108:         byteUart = RCREG;
  9300  001C7C  CFAE F08C          	movff	4014,_byteUart	;volatile
  9301  001C80                     
  9302                           ;main.c: 109:         datoRecibido = 1;
  9303  001C80  0E01               	movlw	1
  9304  001C82  0100               	movlb	0	; () banked
  9305  001C84  6F87               	movwf	_datoRecibido& (0+255),b
  9306  001C86                     i2l195:
  9307  001C86  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9308  001C88  0011               	retfie		f
  9309  001C8A                     __end_of_desbordamiento:
  9310                           	opt callstack 0
  9311                           
  9312                           	psect	rparam
  9313  0000                     
  9314                           	psect	temp
  9315  00005F                     btemp:
  9316                           	opt callstack 0
  9317  00005F                     	ds	1
  9318  0000                     int$flags	set	btemp
  9319  0000                     wtemp8	set	btemp+1
  9320  0000                     ttemp5	set	btemp+1
  9321  0000                     ttemp6	set	btemp+4
  9322  0000                     ttemp7	set	btemp+8
  9323                           tosu	equ	0xFFF
  9324                           tosh	equ	0xFFE
  9325                           tosl	equ	0xFFD
  9326                           stkptr	equ	0xFFC
  9327                           pclatu	equ	0xFFB
  9328                           pclath	equ	0xFFA
  9329                           pcl	equ	0xFF9
  9330                           tblptru	equ	0xFF8
  9331                           tblptrh	equ	0xFF7
  9332                           tblptrl	equ	0xFF6
  9333                           tablat	equ	0xFF5
  9334                           prodh	equ	0xFF4
  9335                           prodl	equ	0xFF3
  9336                           indf0	equ	0xFEF
  9337                           postinc0	equ	0xFEE
  9338                           postdec0	equ	0xFED
  9339                           preinc0	equ	0xFEC
  9340                           plusw0	equ	0xFEB
  9341                           fsr0h	equ	0xFEA
  9342                           fsr0l	equ	0xFE9
  9343                           wreg	equ	0xFE8
  9344                           indf1	equ	0xFE7
  9345                           postinc1	equ	0xFE6
  9346                           postdec1	equ	0xFE5
  9347                           preinc1	equ	0xFE4
  9348                           plusw1	equ	0xFE3
  9349                           fsr1h	equ	0xFE2
  9350                           fsr1l	equ	0xFE1
  9351                           bsr	equ	0xFE0
  9352                           indf2	equ	0xFDF
  9353                           postinc2	equ	0xFDE
  9354                           postdec2	equ	0xFDD
  9355                           preinc2	equ	0xFDC
  9356                           plusw2	equ	0xFDB
  9357                           fsr2h	equ	0xFDA
  9358                           fsr2l	equ	0xFD9
  9359                           status	equ	0xFD8


Data Sizes:
    Strings     1079
    Constant    0
    Data        4
    BSS         151
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160     76     158
    BANK1           256      0      72
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_35(CODE[29]), STR_34(CODE[32]), STR_33(CODE[40]), STR_32(CODE[38]), 
		 -> STR_31(CODE[42]), STR_30(CODE[29]), STR_29(CODE[32]), STR_26(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1466_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_35(CODE[29]), STR_34(CODE[32]), STR_33(CODE[40]), STR_32(CODE[38]), 
		 -> STR_31(CODE[42]), STR_30(CODE[29]), STR_29(CODE[32]), STR_26(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 42
		 -> STR_35(CODE[29]), STR_34(CODE[32]), STR_33(CODE[40]), STR_32(CODE[38]), 
		 -> STR_31(CODE[42]), STR_30(CODE[29]), STR_29(CODE[32]), STR_26(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    dameTemperaturaHumedad@Temperatura	PTR unsigned char  size(2) Largest target is 1
		 -> mostrarDatosSensoresWIFI@temperatura(BANK0[1]), mostrarDatosSensores@temperatura(BANK0[1]), estaSeco@temperatura(COMRAM[1]), 

    dameTemperaturaHumedad@Humedad	PTR unsigned char  size(2) Largest target is 1
		 -> mostrarDatosSensoresWIFI@humedad(BANK0[1]), mostrarDatosSensores@humedad(BANK0[1]), NULL(NULL[0]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 72
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), STR_28(CODE[21]), STR_27(CODE[25]), 
		 -> dameDatosSistema@buffer(BANK0[50]), STR_25(CODE[50]), STR_24(CODE[42]), STR_23(CODE[3]), 
		 -> STR_22(CODE[14]), STR_21(CODE[34]), STR_20(CODE[32]), STR_19(CODE[49]), 
		 -> STR_18(CODE[37]), STR_17(CODE[27]), STR_16(CODE[37]), STR_15(CODE[32]), 
		 -> STR_14(CODE[28]), STR_13(CODE[38]), STR_12(CODE[37]), STR_11(CODE[72]), 
		 -> STR_10(CODE[51]), STR_9(CODE[23]), STR_8(CODE[26]), STR_7(CODE[55]), 
		 -> STR_6(CODE[51]), STR_5(CODE[25]), STR_4(CODE[37]), STR_3(CODE[31]), 
		 -> STR_2(CODE[43]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_sistemaPrincipal
    _sistemaRegado->_encenderBombas
    _encenderBombas->_estaSeco
    _estaSeco->_dameTemperaturaHumedad
    _dameHoraActual->_leer_rtc
    _leer_rtc->_i2c_envia_dato
    _leer_rtc->_i2c_recibe_dato
    _sistemaPrincipal->_dameDatosSistema
    _setTiempoRegar->_escribeHorariosMemoria
    _mostrarMenu->_UART_printf
    _lecturaWifi->_restablecerDatosSensor
    _restablecerDatosSensor->_constructorSensor
    _constructorSensor->___wmul
    _lecturaAnalogaSensores->___wmul
    _dameTemperaturaHumedad->_UART_printf
    _fijaHoraRtc->_setRtc
    _setRtc->_escribe_rtc
    _escribe_rtc->_i2c_envia_dato
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _asignarHorarios->_escribeHorariosMemoria
    _escribeHorariosMemoria->_escribe_eeprom
    _escribe_eeprom->___wmul
    _UART_printf->_UART_write
    _leeHorariosMemoria->___wmul
    _leeHorariosMemoria->_leer_eeprom
    _leer_eeprom->_i2c_envia_dato
    _leer_eeprom->_i2c_recibe_dato
    _i2c_reinicia_com->_i2c_espera
    _i2c_recibe_dato->_i2c_espera
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera
    _inicializarObjetos->___wmul
    _UART_init->___aldiv

Critical Paths under _desbordamiento in COMRAM

    None.

Critical Paths under _main in BANK0

    _sistemaPrincipal->_mostrarDatosSensores
    _mostrarDatosSensoresWIFI->_sprintf
    _mostrarDatosSensores->_sprintf
    _dameDatosSistema->_sprintf

Critical Paths under _desbordamiento in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _desbordamiento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _desbordamiento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _desbordamiento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _desbordamiento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _desbordamiento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _desbordamiento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _desbordamiento in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  144892
                          _UART_init
                      _configurarAdc
                        _i2c_iniciar
                 _inicializarObjetos
                 _leeHorariosMemoria
                        _mostrarMenu
             _restablecerDatosSensor
                   _sistemaPrincipal
                      _sistemaRegado
 ---------------------------------------------------------------------------------
 (1) _sistemaRegado                                        0     0      0   29431
                     _dameHoraActual
                     _encenderBombas
                          _horaRegar
             _lecturaAnalogaSensores
                        _lecturaWifi
                        _mostrarMenu
 ---------------------------------------------------------------------------------
 (2) _horaRegar                                            3     1      2       0
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _encenderBombas                                       5     5      0    9160
                                             20 COMRAM     5     5      0
                             ___wmul
                           _estaSeco
 ---------------------------------------------------------------------------------
 (3) _estaSeco                                             5     2      3    4226
                                             15 COMRAM     5     2      3
                             ___wmul (ARG)
             _dameTemperaturaHumedad
 ---------------------------------------------------------------------------------
 (2) _dameHoraActual                                       0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (3) _leer_rtc                                             2     2      0      90
                                              2 COMRAM     2     2      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (3) _convertirDato                                        3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _sistemaPrincipal                                     3     3      0   96966
                                             90 COMRAM     3     3      0
                        _UART_printf
                    _asignarHorarios
                   _dameDatosSistema
                        _fijaHoraRtc
               _mostrarDatosSensores
           _mostrarDatosSensoresWIFI
                        _mostrarMenu
                     _setTiempoRegar
 ---------------------------------------------------------------------------------
 (2) _setTiempoRegar                                       8     8      0    8573
                                             14 COMRAM     8     8      0
                        _UART_printf
                          _UART_read
                         _UART_write
             _escribeHorariosMemoria
 ---------------------------------------------------------------------------------
 (2) _mostrarMenu                                          0     0      0    2727
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensoresWIFI                            56    56      0   31432
                                             87 COMRAM     2     2      0
                                             20 BANK0     54    54      0
                        _UART_printf
                         _UART_write
                             ___wmul
             _dameTemperaturaHumedad
                        _lecturaWifi
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaWifi                                          3     3      0   12592
                                             13 COMRAM     3     3      0
                        _UART_printf
                          _UART_read
                         _UART_write
                             ___wmul
             _restablecerDatosSensor
 ---------------------------------------------------------------------------------
 (3) _restablecerDatosSensor                               2     2      0    5046
                                             11 COMRAM     2     2      0
                             ___wmul
                  _constructorSensor
 ---------------------------------------------------------------------------------
 (4) _constructorSensor                                    5     0      5     297
                                              6 COMRAM     5     0      5
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensores                                56    56      0   24114
                                             20 BANK0     56    56      0
                        _UART_printf
                         _UART_write
                            ___awdiv
                             ___wmul
             _dameTemperaturaHumedad
             _lecturaAnalogaSensores
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaAnalogaSensores                               3     3      0    4771
                                              6 COMRAM     3     3      0
                             ___wmul
                   _dameHumedadSuelo
 ---------------------------------------------------------------------------------
 (3) _dameHumedadSuelo                                     5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _dameTemperaturaHumedad                              12     8      4    3526
                                              3 COMRAM    12     8      4
                     _DHT11_ReadData
                        _DHT11_Start
                        _UART_printf
                     _check_response
 ---------------------------------------------------------------------------------
 (5) _check_response                                       1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _fijaHoraRtc                                          0     0      0    3869
                        _UART_printf
                        _escribe_rtc
                             _setRtc
 ---------------------------------------------------------------------------------
 (3) _setRtc                                               7     7      0     696
                                              4 COMRAM     7     7      0
                          _UART_read
                         _UART_write
                        _escribe_rtc
 ---------------------------------------------------------------------------------
 (4) _escribe_rtc                                          2     1      1     446
                                              2 COMRAM     2     1      1
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (2) _dameDatosSistema                                    55    55      0   15090
                                             87 COMRAM     3     3      0
                                             20 BANK0     52    52      0
                        _UART_printf
                         _UART_write
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             20    10     10    7520
                                              0 BANK0     20    10     10
                             ___wmul (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _asignarHorarios                                      5     5      0    8412
                                             14 COMRAM     5     5      0
                        _UART_printf
                          _UART_read
                         _UART_write
             _escribeHorariosMemoria
 ---------------------------------------------------------------------------------
 (3) _escribeHorariosMemoria                               4     4      0    5385
                                             10 COMRAM     4     4      0
                             ___wmul
                     _escribe_eeprom
 ---------------------------------------------------------------------------------
 (4) _escribe_eeprom                                       4     1      3     544
                                              6 COMRAM     4     1      3
                             ___wmul (ARG)
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (3) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2    2727
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _leeHorariosMemoria                                   4     4      0    5181
                                              6 COMRAM     4     4      0
                             ___wmul
                        _leer_eeprom
 ---------------------------------------------------------------------------------
 (2) _leer_eeprom                                          4     2      2     340
                                              2 COMRAM     4     2      2
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_recibe_dato                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializarObjetos                                   2     2      0    4793
                                              6 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    4659
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     748
                                             14 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _desbordamiento                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
   _configurarAdc
   _i2c_iniciar
   _inicializarObjetos
     ___wmul
   _leeHorariosMemoria
     ___wmul
     _leer_eeprom
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
       _i2c_recibe_dato
         _i2c_espera
       _i2c_reinicia_com
         _i2c_espera
   _mostrarMenu
     _UART_printf
       _UART_write
   _restablecerDatosSensor
     ___wmul
     _constructorSensor
       ___wmul (ARG)
   _sistemaPrincipal
     _UART_printf
       _UART_write
     _asignarHorarios
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
     _dameDatosSistema
       _UART_printf
         _UART_write
       _UART_write
       ___wmul
       _sprintf
         ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _fijaHoraRtc
       _UART_printf
         _UART_write
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
       _setRtc
         _UART_read
         _UART_write
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
     _mostrarDatosSensores
       _UART_printf
         _UART_write
       _UART_write
       ___awdiv
       ___wmul
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaAnalogaSensores
         ___wmul
         _dameHumedadSuelo
       _sprintf
         ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _mostrarDatosSensoresWIFI
       _UART_printf
         _UART_write
       _UART_write
       ___wmul
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaWifi
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
         ___wmul
         _restablecerDatosSensor
           ___wmul
           _constructorSensor
             ___wmul (ARG)
       _sprintf
         ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _mostrarMenu
       _UART_printf
         _UART_write
     _setTiempoRegar
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
   _sistemaRegado
     _dameHoraActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _encenderBombas
       ___wmul
       _estaSeco
         ___wmul (ARG)
         _dameTemperaturaHumedad (ARG)
           _DHT11_ReadData
           _DHT11_Start
           _UART_printf
             _UART_write
           _check_response
     _horaRegar
     _lecturaAnalogaSensores
       ___wmul
       _dameHumedadSuelo
     _lecturaWifi
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       ___wmul
       _restablecerDatosSensor
         ___wmul
         _constructorSensor
           ___wmul (ARG)
     _mostrarMenu
       _UART_printf
         _UART_write

 _desbordamiento (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      48       7       28.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4C      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     144      20        0.0%
DATA                 0      0     144       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Apr 29 15:50:39 2020

                 __size_of_escribe_eeprom 0030                                        l81 21FA  
                                      l90 22FE                                        l75 22C4  
                                      l84 22F6                                        l93 22DC  
                                      l87 22EE                                        l96 2298  
                                      l99 227E                              ___awdiv@sign 0006  
                          ?_configurarAdc 0001                       ___wmul@multiplicand 0003  
                             __CFG_BORV$3 000000            __end_of_dameTemperaturaHumedad 188C  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                                     l102 21D4                                       l201 22E6  
                                     l121 1E84                                       l105 2240  
                                     l130 22A0                                       l133 22AE  
                                     l118 1B52                                       l214 1A58  
                                     l126 1EBA                                       l230 2152  
                                     l310 1FD8                                       l206 1F5E  
                                     l127 1EBC                                       l311 1FEC  
                                     l152 1E68                                       l144 1E16  
                                     l160 2070                                       l233 20EC  
                                     l305 07A2                                       l217 21AA  
                                     l209 217E                                       l330 1BBA  
                                     l243 1586                                       l139 1E0C  
                                     l227 164C                                       l155 2260  
                                     l308 1FCA                                       l316 1D4C  
                                     l149 1E46                                       l325 123C  
                                     l333 1CEA                                       l238 13F4  
                                     l422 16D6                                       l430 039A  
                                     l270 02F8                                       l424 1712  
                                     l432 03A2                                       l450 05DA  
                                     l362 1326                                       l346 1AE2  
                                     l419 1694                                       l275 1C22  
                                     l285 0EBE                                       l357 192C  
                                     l374 0C50                                       l198 22D0  
                                     l382 103E                                       l463 1DA6  
                                     l288 0EFC                                       l464 1DAE  
                                     l457 0956                                       l369 188A  
                                     l546 114A                                       l467 2220  
                                     l581 0ADE                                       l594 0DB4  
                                     l698 17D6                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                              __CFG_BOR$OFF 000000  
                                     _abs 2072                                       _pad 164E  
                                     prod 000FF3                                       wreg 000FE8  
                __end_of_dameDatosSistema 1328                              __CFG_LVP$OFF 000000  
                       ?_i2c_reinicia_com 0001                              ?_escribe_rtc 0003  
                            __CFG_WDT$OFF 000000                                      ?_abs 0013  
                                    l1142 20A8                                      l1145 20B0  
                                    l3001 1EBE                                      l3003 1ED0  
                                    l1172 1F0E                                      l1157 14BE  
                                    l1165 2030                                      l1181 2122  
                                    l3005 1ED8                                      l3021 1732  
                                    l3013 1714                                      l3101 0146  
                                    l1175 2304                                      l3007 1EE0  
                                    l3031 1766                                      l3023 1740  
                                    l3015 1718                                      l3103 0188  
                                    l3201 0E90                                      l3009 1EFC  
                                    l3041 17A0                                      l3033 176E  
                                    l3025 1748                                      l3017 1726  
                                    l3121 0260                                      l3113 01D6  
                                    l3211 0ECE                                      l3203 0E96  
                                    l3051 17C6                                      l3043 17A8  
                                    l3035 1776                                      l3027 174C  
                                    l3019 172E                                      l3131 02C6  
                                    l3115 0218                                      l3107 018E  
                                    l3213 0EDA                                      l3205 0E9A  
                                    l2501 096A                                      l3141 1BBC  
                                    l3053 17CE                                      l3045 17AA  
                                    l3037 1784                                      l3029 1754  
                                    l3301 0768                                      l3221 05E0  
                                    l3061 2180                                      l3133 02E2  
                                    l3109 01D0                                      l3063 20B2  
                                    l3215 0EEE                                      l3207 0EAA  
                                    l2511 09C0                                      l2503 098A  
                                    l3311 123E                                      l3151 1BFC  
                                    l3143 1BD4                                      l3047 17B0  
                                    l3039 178A                                      l3303 0774  
                                    l3231 0606                                      l3223 05EC  
                                    l3135 02F2                                      l3119 021E  
                                    l3127 0266                                      l3071 0012  
                                    l3065 20DC                                      l3217 0EF6  
                                    l3209 0EBA                                      l3161 0DC6  
                                    l2521 0A14                                      l2513 09CC  
                                    l2505 098E                                      l2441 1408  
                                    l2601 03BC                                      l3321 125A  
                                    l3313 1244                                      l3153 1C0C  
                                    l3145 1BDA                                      l3049 17B6  
                                    l3401 0C1C                                      l3305 0788  
                                    l3241 0640                                      l3233 0616  
                                    l3081 0066                                      l3129 02C2  
                                    l3057 2154                                      l3411 1044  
                                    l3067 20EA                                      l3171 0DF0  
                                    l2531 0A88                                      l2523 0A26  
                                    l2515 09EA                                      l2507 099C  
                                    l2443 141A                                      l2611 03E6  
                                    l2603 03CA                                      l3323 12F2  
                                    l3315 1250                                      l3155 1C18  
                                    l3147 1BEA                                      l3403 0C28  
                                    l3331 0EFE                                      l3307 079E  
                                    l3251 0660                                      l3243 064C  
                                    l3235 0626                                      l3219 05DC  
                                    l3091 00F8                                      l3083 006E  
                                    l3421 1084                                      l3413 1052  
                                    l3501 14D0                                      l3181 0E26  
                                    l3173 0E00                                      l3157 0DB6  
                                    l2525 0A54                                      l2517 09F2  
                                    l2533 0A8E                                      l2509 09BC  
                                    l2541 0C52                                      l2445 1424  
                                    l2453 1FEE                                      l2461 20EE  
                                    l2621 04F2                                      l2613 0468  
                                    l2605 03D0                                      l3325 12FE  
                                    l3149 1BF6                                      l2701 2032  
                                    l3405 0C2E                                      l3333 0F02  
                                    l3309 1C8A                                      l3261 06AA  
                                    l3245 0650                                      l3253 066A  
                                    l3237 0638                                      l3229 0600  
                                    l3085 00B0                                      l3077 0022  
                                    l3431 10C2                                      l3423 1088  
                                    l3415 1062                                      l3511 1566  
                                    l3503 14FE                                      l3183 0E2A  
                                    l3191 0E44                                      l3175 0E12  
                                    l3167 0DDA                                      l3159 0DBA  
                                    l2535 0A9E                                      l2527 0A74  
                                    l2519 0A06                                      l2551 0C96  
                                    l2543 0C56                                      l2447 1442  
                                    l2439 13F6                                      l2455 1FFA  
                                    l2463 20FA                                      l2471 164E  
                                    l2631 0566                                      l2623 0510  
                                    l2615 046E                                      l2607 03D8  
                                    l3327 1304                                      l2711 2062  
                                    l2703 2036                                      l3407 0C4A  
                                    l3343 0F22                                      l3335 0F08  
                                    l3271 06C4                                      l3263 06B6  
                                    l3255 066E                                      l3247 0654  
                                    l3239 063C                                      l3095 00FE  
                                    l3079 0064                                      l3441 110A  
                                    l3433 10D0                                      l3425 1098  
                                    l3417 1066                                      l3409 1040  
                                    l3513 156A                                      l3505 1502  
                                    l3193 0E48                                      l3185 0E2E  
                                    l3177 0E16                                      l3169 0DE0  
                                    l2537 0ABE                                      l2529 0A76  
                                    l2561 0CFE                                      l2553 0CB6  
                                    l2545 0C64                                      l2449 1478  
                                    l2457 200C                                      l2465 20FE  
                                    l2481 16A0                                      l2473 165E  
                                    l2641 05A2                                      l2633 0576  
                                    l2625 052A                                      l2617 0474  
                                    l2609 03E0                                      l2721 07A4  
                                    l3329 1320                                      l2713 206A  
                                    l2705 203E                                      l2801 17D8  
                                    l3361 1010                                      l3353 0FB2  
                                    l3345 0F62                                      l3337 0F1A  
                                    l3281 06FE                                      l3273 06D4  
                                    l3257 068A                                      l3249 065C  
                                    l3521 1A72                                      l3097 0140  
                                    l3089 00B6                                      l3443 1114  
                                    l3435 10DA                                      l3427 10AE  
                                    l3419 1074                                      l2651 22F8  
                                    l3507 1534                                      l3195 0E64  
                                    l3179 0E1A                                      l3187 0E36  
                                    l2571 0D74                                      l2563 0D2C  
                                    l2555 0CD4                                      l2547 0C84  
                                    l2459 2010                                      l2467 2116  
                                    l2483 16B4                                      l2475 1672  
                                    l2635 057C                                      l2643 05B2  
                                    l2627 0544                                      l2619 04D8  
                                    l2731 0810                                      l2723 07C8  
                                    l2707 204C                                      l2715 206E  
                                    l2811 1818                                      l2803 17DC  
                                    l3371 0AFA                                      l3363 1038  
                                    l3355 0FB8                                      l3347 0F80  
                                    l3291 071E                                      l3283 070A  
                                    l3275 06E4                                      l3259 069A  
                                    l3523 1A7A                                      l3515 1A5C  
                                    l3611 192E                                      l3437 10F8  
                                    l3429 10B6                                      l3445 111A  
                                    l3461 1AE6                                      l3453 22B0  
                                    l2581 21EC                                      l2653 22FC  
                                    l3509 1562                                      l3197 0E74  
                                    l3189 0E3A                                      l2573 0D94  
                                    l2565 0D4C                                      l2557 0CDC  
                                    l2549 0C88                                      l2493 2072  
                                    l2485 16B8                                      l2477 1680  
                                    l2637 058E                                      l2629 0554  
                                    l2741 08D8                                      l2733 0834  
                                    l2725 07D6                                      l2901 15AC  
                                    l2709 2054                                      l2821 1888  
                                    l2813 184E                                      l2805 17DC  
                                    l3381 0B4E                                      l3373 0B16  
                                    l3365 0AE0                                      l3349 0F90  
                                    l3357 0FD4                                      l3285 070E  
                                    l3293 0728                                      l3277 06F6  
                                    l3269 06BE                                      l3517 1A62  
                                    l3533 1A9A                                      l3621 1956  
                                    l3613 1938                                      l3447 112A  
                                    l3439 1108                                      l3471 1B48  
                                    l3463 1AE8                                      l3455 22B4  
                                    l2655 22D4                                      l2647 22F0  
                                    l2583 229C                                      l2663 1DB0  
                                    l2823 2124                                      l3199 0E84  
                                    l2567 0D5E                                      l2559 0CF0  
                                    l2495 208C                                      l2487 16E6  
                                    l2479 168C                                      l2639 059A  
                                    l2591 0362                                      l2751 0914  
                                    l2743 08E6                                      l2735 087C  
                                    l2727 07E8                                      l2903 15BC  
                                    l2911 15F4                                      l2671 1E0E  
                                    l2815 185E                                      l2807 17E0  
                                    l2831 1FB4                                      l3391 0B9C  
                                    l3375 0B22                                      l3367 0AE0  
                                    l2719 22C6                                      l3359 1004  
                                    l3295 072C                                      l3287 0712  
                                    l3279 06FA                                      l3527 1A82  
                                    l3519 1A6A                                      l3535 1ADC  
                                    l3551 18BE                                      l3543 188C  
                                    l3631 196A                                      l3623 195A  
                                    l3615 193C                                      l3449 113A  
                                    l3473 1B4A                                      l3465 1B1C  
                                    l3457 1AE4                                      l3481 22DE  
                                    l2577 21D6                                      l2657 22D8  
                                    l2649 22F4                                      l2665 1DB4  
                                    l2825 2144                                      l2497 0958  
                                    l2569 0D64                                      l2489 16FA  
                                    l2593 0372                                      l2585 02FA  
                                    l2745 08FA                                      l2729 07EC  
                                    l2921 1632                                      l2913 15F8  
                                    l2905 15CE                                      l2681 1E38  
                                    l2809 17F4                                      l2817 187A  
                                    l2833 1FC6                                      l3393 0BB6  
                                    l3377 0B3E                                      l3369 0AF4  
                                    l2841 1CEC                                      l3297 0748  
                                    l3289 071A                                      l3537 1AE0  
                                    l3529 1A8A                                      l3561 18FC  
                                    l3553 18C0                                      l3545 189E  
                                    l3641 197E                                      l3633 196E  
                                    l3625 195E                                      l3617 193E  
                                    l3475 1B4C                                      l3467 1B44  
                                    l3459 1AE4                                      l2763 21FC  
                                    l3491 1A38                                      l3483 19C4  
                                    l2579 21D6                                      l2659 22DC  
                                    l2771 22EC                                      l2667 1DD8  
                                    l2931 1338                                      l2499 095C  
                                    l2595 0374                                      l2587 031A  
                                    l2739 08B4                                      l2755 0920  
                                    l2923 1642                                      l2915 1602  
                                    l2907 15E4                                      l2683 1E40  
                                    l2819 1886                                      l2835 1FC8  
                                    l2827 1FAA                                      l3395 0BD2  
                                    l3387 0B58                                      l3379 0B4A  
                                    l2851 1D30                                      l3299 0758  
                                    l3555 18D2                                      l3547 18A2  
                                    l3651 19B0                                      l3643 1990  
                                    l3635 1976                                      l3627 1962  
                                    l3619 1942                                      l3477 1B4E  
                                    l3469 1B46                                      l2765 2218  
                                    l3493 1A3C                                      l2781 2294  
                                    l2773 2280                                      l2669 1DDC  
                                    l2941 13D4                                      l2933 1368  
                                    l2925 1328                                      l2597 038E  
                                    l2589 0342                                      l2757 0944  
                                    l2749 0906                                      l2853 1D4E  
                                    l2917 1606                                      l2909 15EC  
                                    l2685 1E54                                      l2677 1E24  
                                    l2693 2242                                      l2837 1FDA  
                                    l2829 1FB2                                      l3397 0BDC  
                                    l3389 0B80                                      l2861 21AE  
                                    l3549 18B6                                      l3557 18E2  
                                    l3653 19B8                                      l3645 1994  
                                    l3637 1978                                      l3629 1966  
                                    ?_pad 0011                                      l3479 1B50  
                                    l2783 2296                                      l2775 2284  
                                    l3495 14C0                                      l2791 1E92  
                                    l2943 13D8                                      l2935 136C  
                                    l2599 03AA                                      l2855 1D56  
                                    l2919 1622                                      l2687 1E56  
                                    l2679 1E2A                                      l2695 2246  
                                    l3399 0BF6                                      l2847 1CF4  
                                    l2951 1152                                      l2871 222C  
                                    l2863 21D2                                      l3575 190E  
                                    l3559 18E6                                      l3647 1998  
                                    l3639 197A                                      l3489 19CC  
                                    l2777 228A                                      l2769 22E8  
                                    l2793 1EA2                                      l2937 13A0  
                                    l2857 1D64                                      l2689 1E66  
                                    l2697 2256                                      l2849 1D2C  
                                    l2953 1158                                      l2945 114C  
                                    l2873 223E                                      l2881 1F28  
                                    l3577 1912                                      l3649 199E  
                                    l2779 2292                                      l2795 1EB2  
                                    l2939 13D0                                      l2859 1D8A  
                                    l2787 2264                                      l2891 158A  
                                    l2699 225E                                      l2971 11A0  
                                    l2955 1164                                      l2947 114E  
                                    l2867 2224                                      l2883 1F44  
                                    l3579 1928                                      l2797 1EB6  
                                    l2789 1E6A                                      l2981 1224  
                                    l2973 11B0                                      l2965 118A  
                                    l2957 116A                                      l2949 114E  
                                    l2869 2224                                      l2885 1F54  
                                    l2877 1F10                                      l2975 11DC  
                                    l2967 1196                                      l2959 117C  
                                    l2983 1234                                      l2887 1F58  
                                    l2879 1F24                                      l3695 027C  
                                    l2897 1596                                      l2993 1B5C  
                                    l2985 123A                                      l2977 1204  
                                    l2969 119C                                      l3697 1AAE  
                                    l2899 159C                                      l2995 1B8A  
                                    l2987 1B54                                      l2979 1208  
                                    l2997 1B9A                                      l2999 1B9E  
                            ?_leer_eeprom 0003                                      STR_1 7FD0  
                                    STR_2 7CDC                                      STR_3 7EE5  
                                    STR_4 7E19                                      STR_5 7F72  
                                    STR_6 7C46                                      STR_7 7C0F  
                                    STR_8 7F58                                      STR_9 7FA4  
                                    u2000 17F4                                      u2001 17F0  
                                    u2010 184E                                      u2011 184A  
                                    u2100 1622                                      u2020 1FD8  
                                    u2101 161E                                      u2021 1FD4  
                                    u2110 1632                                      u2030 1D4C  
                                    u2111 162E                                      u2031 1D48  
                                    u2040 1DA6                                      u2120 1642  
                                    u2200 1766                                      u2041 1DA2  
                                    u2121 163E                                      u2201 1762  
                                    u2130 13F4                                      u2210 1784  
                                    u2050 1F44                                      u2131 13F0  
                                    u2211 1780                                      u2051 1F40  
                                    u1420 1408                                      u1500 16D6  
                                    u2220 17A0                                      u2140 117C  
                                    u2060 1F54                                      u2300 0188  
                                    u1421 1404                                      u1501 16D2  
                                    u2221 179C                                      u2141 1178  
                                    u2061 1F50                                      u2301 0184  
                                    u1430 141A                                      u1510 16E6  
                                    u2070 15AC                                      u2230 17C6  
                                    u2150 11B0                                      u2310 01D0  
                                    u1431 1416                                      u1511 16E2  
                                    u2071 15A8                                      u2231 17C2  
                                    u2151 11AC                                      u2311 01CC  
                                    u2400 0E12                                      u1600 0C64  
                                    u1520 208C                                      u1440 1442  
                                    u2080 15BC                                      u2160 1224  
                                    u2320 0218                                      u2240 2178  
                                    _LATD 000F8C                                      u2401 0E0E  
                                    u1601 0C60                                      u1521 2088  
                                    u1441 143E                                      u2081 15B8  
                                    u2161 1220                                      u2321 0214  
                                    u2241 2172                                      u2410 0E64  
                                    u1530 096A                                      u1610 0C96  
                                    u1450 1478                                      u2090 15CE  
                                    u2170 1BBA                                      u2330 0260  
                                    u2250 217A                                      u2411 0E60  
                                    u1531 0966                                      u1611 0C92  
                                    u1451 1474                                      u2091 15CA  
                                    u2171 1BB6                                      u2331 025C  
                                    u2420 0E74                                      u1540 099C  
                                    u1620 0CD4                                      u1460 2030  
                                    u1700 032C                                      u2180 1726  
                                    u2500 068A                                      u2340 02E2  
                                    u2260 0064                                      u2421 0E70  
                                    u1541 0998                                      u1621 0CD0  
                                    u1461 202C                                      u2181 1722  
                                    u2501 0686                                      u2341 02DE  
                                    u2261 0060                                      u2430 0E84  
                                    u1630 0CFE                                      u1470 2116  
                                    u1710 0342                                      u2190 1740  
                                    u2510 069A                                      u2350 02F2  
                                    u2270 00B0                                      u2431 0E80  
                                    u1551 09C6                                      u1631 0CFA  
                                    u1471 2112                                      u1711 033E  
                                    u2191 173C                                      u2511 0696  
                                    u2351 02EE                                      u2271 00AC  
                                    u2440 0EAA                                      u1560 09EA  
                                    u1640 0D2C                                      u1480 165E  
                                    u1800 0554                                      u1720 0372  
                                    u2360 1BEA                                      u2600 0F1A  
                                    u2520 06AA                                      u2280 00F8  
                                    u2441 0EA6                                      u1561 09E6  
                                    u1641 0D28                                      u1481 165A  
                                    u1801 0550                                      u1721 036E  
                                    u2361 1BE6                                      u2601 0F16  
                                    u2521 06A6                                      u2281 00F4  
                                    u2450 0EBA                                      u1570 0A14  
                                    u1650 0D74                                      u1490 1680  
                                    u1810 0566                                      u1730 038E  
                                    u2370 1C0C                                      u2610 0F62  
                                    u2530 06D4                                      u2290 0140  
                                    u2451 0EB6                                      u1571 0A10  
                                    u1651 0D70                                      u1491 167C  
                                    u1811 0562                                      u1731 038A  
                                    u2371 1C08                                      u2611 0F5E  
                                    u2531 06D0                                      u2291 013C  
                                    u2700 1A58                                      u1660 21EC  
                                    u2460 0ECE                                      u2380 0DF0  
                                    u1580 0A54                                      u1820 0576  
                                    u1740 03BC                                      u1900 1E66  
                                    u2620 0FD4                                      u2540 06E4  
                                    u2701 1A54                                      u1661 21E8  
                                    u2461 0ECA                                      u2381 0DEC  
                                    u1581 0A50                                      u1821 0572  
                                    u1741 03B8                                      u1901 1E62  
                                    u2621 0FD0                                      u2541 06E0  
                                    u1670 21FA                                      u2710 1586  
                                    u2390 0E00                                      u1590 0A9E  
                                    u1830 058E                                      u1750 03CA  
                                    u1910 204C                                      u2630 0C4A  
                                    u2550 06F6                                      u2470 0616  
                                    u1671 21F6                                      u2711 1582  
                                    u2391 0DFC                                      u1591 0A9A  
                                    u1831 058A                                      u1751 03C6  
                                    u1911 2048                                      u2631 0C46  
                                    u2551 06F2                                      u2471 0612  
                                    u2640 1052                                      u1680 22AE  
                                    u1840 1DD4                                      u1760 04F2  
                                    u1920 2062                                      u2560 0748  
                                    u2480 0626                                      u2720 189E  
                                    u2641 104E                                      u1681 22AA  
                                    u1761 04EE                                      u1921 205E  
                                    u2561 0744                                      u2481 0622  
                                    u2721 189A                                      u2650 1074  
                                    u1850 1DFC                                      u1770 0510  
                                    u1690 032A                                      u1930 07C8  
                                    u2570 0758                                      u2490 0638  
                                    u2730 18B6                                      u2810 1990  
                                    u2651 1070                                      u1771 050C  
                                    u1691 0324                                      u1931 07C4  
                                    u2571 0754                                      u2491 0634  
                                    u2731 18B2                                      u2811 198C  
                                    u2660 10AE                                      u1860 1E0C  
                                    u1780 052A                                      u1940 0810  
                                    u2580 0768                                      u2740 18D2  
                                    u2820 19B0                                      u2661 10AA  
                                    u1861 1E08                                      u1781 0526  
                                    u1941 080C                                      u2581 0764  
                                    u2741 18CE                                      u2821 19AC  
                                    u2670 10D0                                      u1790 0544  
                                    u1950 0834                                      u2590 1320  
                                    u1870 1E24                                      u2750 18FC  
                                    u2671 10CC                                      u1847 1DCA  
                                    u1791 0540                                      u1951 0830  
                                    u2591 131C                                      u1871 1E20  
                                    u2751 18F8                                      u2680 10F8  
                                    u1960 08D8                                      u1880 1E38  
                                    u2760 190E                                      u2681 10F4  
                                    u1857 1DF2                                      u1961 08D4  
                                    u1881 1E34                                      u2761 190A  
                                    u2690 112A                                      u1970 1E92  
                                    u1890 1E54                                      u2691 1126  
                                    u1971 1E8E                                      u1891 1E50  
                                    u2907 1E26                                      u1980 1EA2  
                                    u1981 1E9E                                      u2917 214A  
                                    u2837 1B90                                      u1990 1EB2  
                                    u2927 20E2                                      u1991 1EAE  
                                    u2847 1FAC                                      u2857 2038  
                                    u2867 204E                                      u2877 2064  
                                    u2887 224C                                      u2897 225A  
                                    _TMR0 000FD6                      _minutosTranscurridos 0084  
                      ??_i2c_reinicia_com 0002                            _check_response 2032  
                 escribeHorariosMemoria@i 000D                             ??_i2c_detener 0002  
                                    abs@a 0013                                      _dbuf 008E  
                                    _main 192E                                      _dtoa 02FA  
                                    _hora 008A                                      _prec 007C  
                                    _nout 0078                                      pad@i 0018  
                                    pad@p 0015                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    pad@w 001A                                      fsr2l 000FD9  
                                    btemp 005F                            ?_sistemaRegado 0001  
                __size_of_asignarHorarios 0148                             ??_i2c_iniciar 0001  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 000E                  ??_restablecerDatosSensor 000C  
                           __CFG_IESO$OFF 000000                          ??_DHT11_ReadData 0001  
                       _constructorSensor 22C6                      __size_of_DHT11_Start 0020  
                            ?_lecturaWifi 0001                   __size_of_setTiempoRegar 01C8  
                            ___param_bank 000000                        ?_constructorSensor 0007  
                      setTiempoRegar@hora 0010                        _leeHorariosMemoria 14C0  
                        ??_encenderBombas 0015                                     ??_abs 0015  
                                   ??_pad 0017                            _i2c_envia_dato 22D2  
                           __CFG_PLLDIV$1 000000                            _i2c_inicia_com 22F0  
                         __end_of___aldiv 114C                           __end_of___aodiv 0AE0  
                                   ?_main 0001                                     ?_dtoa 001C  
                         __end_of___aomod 0DB6                             _convertirDato 2222  
                         __end_of___awdiv 17D8                                     STR_10 7C46  
                                   STR_11 7BC7                                     STR_20 7EA5  
                                   STR_12 7DCF                                     STR_21 7E63  
                                   STR_13 7D83                                     STR_22 7FF0  
                                   STR_14 7F21                                     STR_30 7F04  
                                   STR_23 7F6F                                     STR_15 7E85  
                                   STR_31 7D31                                     STR_16 7DF4  
                                   STR_32 7DA9                                     STR_24 7D07  
                                   STR_17 7F3D                                     STR_33 7D5B  
                                   STR_25 7C79                                     STR_34 7EC5  
                                   STR_26 7FE0                                     STR_18 7E3E  
                                   STR_35 7F04                                     STR_27 7F8B  
                                   STR_19 7CAB                                     STR_28 7FBB  
                                   STR_29 7EC5                       ??_constructorSensor 000C  
                       convertirDato@dato 0002                                     _T0CON 000FD5  
                         ___awdiv@divisor 0003                       ?_leeHorariosMemoria 0001  
                                   i2l195 1C86                           ___awdiv@counter 0005  
                                   _RCREG 000FAE                              vfpfcnvrt@fmt 0042  
                                   _SPBRG 000FAF                             __CFG_USBDIV$1 000000  
                                   _TRISD 000F95                                     _TXREG 000FAD  
                           __CFG_PWRT$OFF 000000                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                      __size_of_UART_init 0070                        __size_of_UART_read 0054  
                                   _flags 007E                                     _fputc 13F6  
                                   _fputs 1FEE                    __end_of_check_response 2072  
                             ?_UART_write 0001                                     pad@fp 0011  
                                   _width 007A                                     _putch 2304  
                                   dtoa@d 001E                                     dtoa@i 003E  
                                   dtoa@n 0036                                     dtoa@p 0030  
                                   dtoa@s 0034                                     dtoa@w 0032  
                                   tablat 000FF5                                     plusw2 000FDB  
       __size_of_mostrarDatosSensoresWIFI 0142                                     ttemp5 0060  
                                   ttemp6 0063                                     ttemp7 0067  
                                   status 000FD8                 ?_mostrarDatosSensoresWIFI 0001  
                                   wtemp8 0060                           __end_of_sprintf 1F10  
                      escribe_eeprom@dato 0009                 __end_of_constructorSensor 22D2  
                    ??_leeHorariosMemoria 0007                            __CFG_ICPRT$OFF 000000  
                              _i2c_espera 21D6                          ??_dameHoraActual 0005  
                          __CFG_MCLRE$OFF 000000                           __initialization 1F60  
                         setTiempoRegar@i 0011                       __end_of_i2c_detener 2300  
         __size_of_lecturaAnalogaSensores 0068                    __end_of_i2c_envia_dato 22DE  
                            __end_of_main 19C4                              __end_of_dtoa 05DC  
                ??_escribeHorariosMemoria 000B                           ??_configurarAdc 0001  
                     setTiempoRegar@i_834 0013                    __end_of_i2c_inicia_com 22F8  
                      _inicializarObjetos 19C4                       __end_of_i2c_iniciar 22C6  
                  sistemaPrincipal@opcion 005D                          _dameHumedadSuelo 1FA8  
                          ?_convertirDato 0001                      __size_of_fijaHoraRtc 0068  
                                  ??_main 005E                                    ??_dtoa 0026  
               setTiempoRegar@tiempoRegar 000F                             __activetblptr 000002  
                     ?_inicializarObjetos 0001                        i2c_envia_dato@dato 0002  
                         __CFG_CCP2MX$OFF 000000                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    ?_fputc 0001  
                                  ?_fputs 000A                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                           ?_check_response 0001  
                        ___awdiv@dividend 0001                    encenderBombas@flagSeco 0017  
                                  ?_putch 0001                        convertirDato@datoR 0003  
                                  i2l3581 1C26                                    i2l3591 1C5E  
                                  i2l3583 1C34                                    i2l3593 1C60  
                                  i2l3585 1C44                                    i2l3587 1C48  
                                  i2l3595 1C6E                                    i2l3597 1C7C  
                                  i2l3589 1C5A                                    i2l3599 1C80  
                         ??_sistemaRegado 001A     mostrarDatosSensores@porcentajeHumedad 00F8  
                                  _SSPADD 000FC8                                    _SSPBUF 000FC9  
                    ??_inicializarObjetos 0007           __size_of_restablecerDatosSensor 0062  
                          __CFG_XINST$OFF 000000                              vfprintf@cfmt 0056  
                __end_of_sistemaPrincipal 1AE4                            _escribe_eeprom 2124  
                         ?_i2c_envia_dato 0001                                 ??___aldiv 0009  
                               ??___aodiv 0011                                 ??___aomod 0011  
                                  ___wmul 21FC                         __end_of_UART_init 1B54  
                       __end_of_UART_read 1EBE                                 ??___awdiv 0005  
                       ??_asignarHorarios 000F                          __end_of_leer_rtc 21D6  
                         ?_i2c_inicia_com 0001                          __end_of_estaSeco 1F60  
                     __size_of_UART_write 0016                              ?_UART_printf 0002  
                                  clear_0 1F86                                    clear_1 1F92  
                        ___awdiv@quotient 0007                                    _setRtc 1588  
                                  pad@buf 0013       mostrarDatosSensoresWIFI@temperatura 00F4  
                                  dtoa@fp 001C                                    _strlen 20EE  
                         _i2c_recibe_dato 2280                              ?_mostrarMenu 0001  
                                  fputc@c 0001                                    fputs@c 000E  
                                  fputs@i 000F                                    fputs@s 000A  
                    escribe_rtc@direccion 0004                              __mediumconst 7BC6  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                    _lecturaAnalogaSensores 1B54  
            __end_of_mostrarDatosSensores 0C52                                    putch@c 0001  
                        __end_of_vfprintf 1DB0                                 ??_sprintf 0058  
                              __accesstop 0060                   __end_of__initialization 1F9A  
                    __size_of_escribe_rtc 001E                           __CFG_PBADEN$OFF 000000  
                    __size_of_leer_eeprom 003C                           __CFG_FOSC$XT_XT 000000  
                             _i2c_detener 22F8                __size_of_constructorSensor 000C  
                           ___rparam_used 000001                               _i2c_iniciar 22B0  
                  __end_of_escribe_eeprom 2154                               ?_i2c_espera 0001  
                          _setTiempoRegar 05DC                          setTiempoRegar@Rx 0016  
                          __pcstackCOMRAM 0001                              leer_rtc@dato 0004  
                            __pidataBANK0 2300                      __size_of_lecturaWifi 00F2  
         __size_of_escribeHorariosMemoria 00CE                           ??_convertirDato 0001  
                           __end_of_fputc 14C0                             __end_of_fputs 2032  
                     estaSeco@temperatura 0014                             __end_of_putch 2306  
                  _restablecerDatosSensor 1CEC                              _datoRecibido 0087  
                       ?_dameDatosSistema 0001                                   ??_fputc 0005  
                                 ??_fputs 000E                                   ??_putch 0001  
                              __pbssBANK0 0060                                __pbssBANK1 0100  
                      ??_dameDatosSistema 0058                   __size_of_desbordamiento 1C82  
                      __size_of_horaRegar 002C                    __end_of_setTiempoRegar 07A4  
                            lecturaWifi@i 000F                           ?_escribe_eeprom 0007  
           dameTemperaturaHumedad@Humedad 0004                        _contInterrupciones 0080  
               __size_of_i2c_reinicia_com 0008                                   ?___wmul 0001  
              mostrarDatosSensores@buffer 00C2                   __end_of_i2c_recibe_dato 229A  
                                 _ACKSTAT 007E2E                                   ?_setRtc 0001  
                                 ?_strlen 0001           mostrarDatosSensores@temperatura 00F4  
           dameTemperaturaHumedad@humedad 000E                        __size_of_vfpfcnvrt 01B4  
                     __size_of_i2c_espera 0026                    _escribeHorariosMemoria 1328  
                                 _SSPCON1 000FC6                                   _SSPCON2 000FC5  
                            ??_UART_write 0001                                   _SSPSTAT 000FC7  
                __end_of_dameHumedadSuelo 1FEE                                 ?_leer_rtc 0001  
                               ?_estaSeco 0010                           __CFG_VREGEN$OFF 000000  
                           ??_DHT11_Start 0001                           ?_setTiempoRegar 0001  
                                 __Hparam 0000                                   __Lparam 0000  
       dameTemperaturaHumedad@Temperatura 0006                                   ___aldiv 1040  
                                 ___aodiv 0958                                   ___aomod 0C52  
                                 ___awdiv 1714                      _mostrarDatosSensores 0AE0  
                         __size_of___wmul 0026                  constructorSensor@humedad 000A  
                               ?_vfprintf 0050                           __CFG_STVREN$OFF 000000  
                                 __pcinit 1F60                                   __ramtop 0800  
                      __end_of_UART_write 22B0                           __size_of_setRtc 00C6  
                                 __ptext0 192E                                   __ptext1 188C  
                                 __ptext2 2154                                   __ptext3 0012  
                                 __ptext4 1F10                                   __ptext5 2180  
                                 __ptext6 21AC                                   __ptext7 2222  
                                 __ptext8 1A5A                                   __ptext9 05DC  
                 check_response@respuesta 0001                         __end_of_horaRegar 2180  
                               _T0CONbits 000FD5                           __size_of_strlen 0036  
                    __size_of_UART_printf 005E                              __size_of_abs 0040  
                            __size_of_pad 00C6                          ??_check_response 0001  
                                 _regando 0083                          ___aldiv@dividend 0001  
                                 _minutos 0089                      __size_of_mostrarMenu 0062  
                                 _sprintf 1EBE                            __pintcode_body 1C24  
                    end_of_initialization 1F9A            mostrarDatosSensoresWIFI@buffer 00C2  
                              ??_leer_rtc 0003                                ??_estaSeco 0013  
                                 fputc@fp 0003                           _asignarHorarios 0DB6  
                           __Lmediumconst 7BC6                                   int_func 1C24  
                                 fputs@fp 000C                          ??_i2c_envia_dato 0002  
             __size_of_leeHorariosMemoria 00C8                                   setRtc@i 0009  
                        ??_i2c_inicia_com 0002                          _VALOR_TIMER0UART 00FC  
                       __end_of_vfpfcnvrt 0958                  ??_dameTemperaturaHumedad 0008  
                               _RCSTAbits 000FAB                          ___aldiv@quotient 000B  
                   ?_mostrarDatosSensores 0001                       __end_of_DHT11_Start 2262  
                                 postdec1 000FE5                                   postdec2 000FDD  
                       ?_sistemaPrincipal 0001                   _peticionLecturaSensores 0082  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                             ??_fijaHoraRtc 000C  
                        ?_i2c_recibe_dato 0001                                ??_vfprintf 0056  
                   __end_of_configurarAdc 22E8                        ??_sistemaPrincipal 005B  
                                 strlen@a 0003                                   strlen@s 0001  
                               _UART_init 1AE4                                 _UART_read 1E6A  
                               _PORTDbits 000F83                   __size_of_DHT11_ReadData 005C  
                 ?_lecturaAnalogaSensores 0001                 dameHumedadSuelo@canalLeer 0005  
                 lecturaAnalogaSensores@i 0008                                 _TRISBbits 000F93  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                 __size_of_encenderBombas 02E8                  _mostrarDatosSensoresWIFI 0EFE  
                          _desbordamiento 0008                            _esperandoDatos 005E  
                          _UART_init$1778 0017                              ?_i2c_detener 0001  
                   __end_of_sistemaRegado 192E                                 _TXSTAbits 000FAC  
                       dameDatosSistema@i 00F4               __size_of_inicializarObjetos 0096  
                            ?_i2c_iniciar 0001                              ??_i2c_espera 0001  
                      DHT11_ReadData@data 0002                          _i2c_reinicia_com 22E8  
             setTiempoRegar@datoCapturado 0015                               vfpfcnvrt@ap 0044  
                             vfpfcnvrt@fp 0040                               vfpfcnvrt@ll 0048  
                          __end_of___wmul 2222                   ?_restablecerDatosSensor 0001  
          __end_of_lecturaAnalogaSensores 1BBC                                ?_UART_init 000F  
                              ?_UART_read 0001                       setRtc@datoCapturado 0008  
                 __size_of_dameHoraActual 002C                            __end_of_setRtc 164E  
                     __end_of_fijaHoraRtc 1C24                            __end_of_strlen 2124  
                     start_initialization 1F60                              _estaSeco$770 0013  
                             __end_of_abs 20B2                   __end_of_asignarHorarios 0EFE  
                             __end_of_pad 1714         escribeHorariosMemoria@contMemoria 000B  
                  __end_of_desbordamiento 1C8A                        __end_of_i2c_espera 21FC  
                           ??_escribe_rtc 0004                             ??_leer_eeprom 0005  
                        ??_escribe_eeprom 000A                       leeHorariosMemoria@i 0009  
                    constructorSensor@pin 000B                               _DHT11_Start 2242  
                           ??_lecturaWifi 000E                    ??_mostrarDatosSensores 0058  
                             vfprintf@fmt 0052                 __size_of_dameDatosSistema 00EA  
         __size_of_dameTemperaturaHumedad 00B4                                  ??___wmul 0005  
          __end_of_restablecerDatosSensor 1D4E                               __pdataBANK0 00FA  
                        __CFG_LPT1OSC$OFF 000000                         leer_rtc@direccion 0003  
                                ??_setRtc 0005                     __end_of_convertirDato 2242  
            asignarHorarios@datoCapturado 0010                                  ??_strlen 0003  
                 ?_escribeHorariosMemoria 0001                               __pbssCOMRAM 005E  
                           __pcstackBANK0 00AE                          ___aodiv@dividend 0001  
                         ?_desbordamiento 0001                          ??_setTiempoRegar 000F  
                       ?_dameHumedadSuelo 0001                         UART_printf@cadena 0002  
                           lecturaWifi@Rx 000E                        ??_dameHumedadSuelo 0003  
                       __size_of_leer_rtc 002A                         __size_of_estaSeco 0050  
                     __end_of_escribe_rtc 2280                       __end_of_leer_eeprom 20EE  
                               _dtoa$1005 002E                                 __pintcode 0008  
                           __pmediumconst 7BC6                                  ?___aldiv 0001  
                                ?___aodiv 0001                                  ?___aomod 0001  
                                ?___awdiv 0001                          ___aodiv@quotient 0013  
                             _fijaHoraRtc 1BBC                       __end_of_lecturaWifi 123E  
                          _DHT11_ReadData 1E0E                                setRtc@dato 0007  
                             ??_UART_init 0013                               ??_UART_read 0001  
                       __size_of_vfprintf 0062               mostrarDatosSensores@humedad 00F5  
          __end_of_escribeHorariosMemoria 13F6                            _encenderBombas 0012  
                               _horaRegar 2154            dameTemperaturaHumedad@checkSum 000A  
                  _dameTemperaturaHumedad 17D8                          ?_asignarHorarios 0001  
                                ?_sprintf 00AE                            __size_of_fputc 00CA  
                          __size_of_fputs 0044                            __size_of_putch 0002  
                         ___aldiv@divisor 0005                           ___aldiv@counter 0009  
                          ___wmul@product 0005                                  _LATDbits 000F8C  
                                _PIE1bits 000F9D                      __size_of_i2c_detener 0008  
                                i2u280_40 1C7C                                  i2u280_41 1C78  
                                _PIR1bits 000F9E                                  i2u277_40 1C34  
                                i2u277_41 1C30                                  i2u278_40 1C44  
                                i2u278_41 1C40                                  i2u279_40 1C5A  
                                i2u279_41 1C56                   restablecerDatosSensor@i 000C  
                    __size_of_i2c_iniciar 0016                          __CFG_WDTPS$32768 000000  
                  _tiempoInactividadTrans 008D             leeHorariosMemoria@contMemoria 0007  
                     asignarHorarios@hora 000F                    __end_of_DHT11_ReadData 1E6A  
                           ??_UART_printf 0004                    dameDatosSistema@buffer 00C2  
                               _vfpfcnvrt 07A4                                _ADCON0bits 000FC2  
                          _dameHoraActual 2180                         ___wmul@multiplier 0001  
              ??_mostrarDatosSensoresWIFI 0058                    __end_of_encenderBombas 02FA  
                           ??_mostrarMenu 0004                            UART_write@dato 0001  
                              ?_horaRegar 0001                     mostrarDatosSensores@i 00F6  
               __size_of_sistemaPrincipal 008A                  __end_of_i2c_reinicia_com 22F0  
                               copy_data0 1F74                               _escribe_rtc 2262  
                             _leer_eeprom 20B2                              _VALOR_TIMER0 00FA  
              __end_of_leeHorariosMemoria 1588                                 estaSeco@s 0010  
                                __Hrparam 0000                              _minutosRegar 0085  
                             _lecturaWifi 114C                             UART_init@BAUD 000F  
                              vfprintf@ap 0054                                  __Lrparam 0000  
                              vfprintf@fp 0050                          _dameDatosSistema 123E  
dameTemperaturaHumedad@temperaturaDecimal 000D                       _esperaDatoConcluida 008B  
                        __size_of___aldiv 010C                           ?_DHT11_ReadData 0001  
                        __size_of___aodiv 0188                          __size_of___aomod 0164  
                        __size_of___awdiv 00C4                    __end_of_dameHoraActual 21AC  
                              ?_vfpfcnvrt 0040                           DHT11_ReadData@i 0001  
                         ___aodiv@divisor 0009                           ___aodiv@counter 0011  
                         ?_encenderBombas 0001                                sprintf@fmt 00B0  
                __size_of_i2c_recibe_dato 001A                       __end_of_UART_printf 1E0E  
                                __ptext10 1C8A                                  __ptext11 0EFE  
                                __ptext20 2242                                  __ptext12 114C  
                                __ptext21 1E0E                                  __ptext13 1CEC  
                                __ptext30 02FA                                  __ptext22 1714  
                                __ptext14 22C6                                  __ptext31 164E  
                                __ptext23 1BBC                                  __ptext15 0AE0  
                                __ptext40 1328                                  __ptext32 20EE  
                                __ptext24 1588                                  __ptext16 1B54  
                                __ptext41 2124                                  __ptext33 1FEE  
                                __ptext25 2262                                  __ptext17 1FA8  
                                __ptext50 22D2                                  __ptext42 1E6A  
                                __ptext34 13F6                                  __ptext26 123E  
                                __ptext18 17D8                                  __ptext51 22F8  
                                __ptext43 1DB0                                  __ptext35 2304  
                                __ptext27 1EBE                                  __ptext19 2032  
                                __ptext52 21D6                                  __ptext44 229A  
                                __ptext36 2072                                  __ptext28 1D4E  
                                __ptext53 19C4                                  __ptext45 14C0  
                                __ptext37 0C52                                  __ptext29 07A4  
                                __ptext54 21FC                                  __ptext46 20B2  
                                __ptext38 0958                                  __ptext55 22B0  
                                __ptext47 22E8                                  __ptext39 0DB6  
                                __ptext56 22DE                                  __ptext48 2280  
                                __ptext57 1AE4                                  __ptext49 22F0  
                                __ptext58 1040                       __end_of_mostrarMenu 1CEC  
                        __size_of_sprintf 0052                                  _leer_rtc 21AC  
                                _estaSeco 1F10                __end_of_inicializarObjetos 1A5A  
                                _byteUart 008C                    __size_of_configurarAdc 000A  
                 __size_of_check_response 0040                       inicializarObjetos@i 0007  
                           __size_of_main 0096                             __size_of_dtoa 02E2  
                                _horarios 0100                              ?_DHT11_Start 0001  
    dameTemperaturaHumedad@humedadDecimal 000C                                  _segundos 0088  
                         encenderBombas@i 0018                                  _sensores 0060  
               mostrarDatosSensoresWIFI@i 00F6                                  int$flags 005F  
                                _vfprintf 1D4E                           ?_dameHoraActual 0001  
                 __size_of_i2c_envia_dato 000C                   __size_of_i2c_inicia_com 0008  
                i2c_recibe_dato@datoleido 0002                          ___aomod@dividend 0001  
                   __CFG_CPUDIV$OSC1_PLL2 000000                          ??_desbordamiento 0001  
                  __size_of_sistemaRegado 00A2                                _INTCONbits 000FF2  
                      constructorSensor@s 0007                               ??_horaRegar 0003  
         mostrarDatosSensoresWIFI@humedad 00F5                   escribe_eeprom@direccion 0007  
                                intlevel2 0000                                 sprintf@ap 00BA  
                         escribe_rtc@dato 0003                                  setRtc@Rx 000B  
                         setRtc@direccion 0006                         asignarHorarios@Rx 0013  
           __size_of_mostrarDatosSensores 0172                             _overflowTimer 0086  
                            ?_fijaHoraRtc 0001         dameTemperaturaHumedad@temperatura 000F  
                         ___aomod@divisor 0009                 __size_of_dameHumedadSuelo 0046  
                             ??_vfpfcnvrt 0046                           ___aomod@counter 0011  
                             _UART_printf 1DB0                             _configurarAdc 22DE  
        __end_of_mostrarDatosSensoresWIFI 1040                                  sprintf@f 00BC  
                                sprintf@s 00AE                   ?_dameTemperaturaHumedad 0004  
                             _mostrarMenu 1C8A                              ___aldiv@sign 000A  
                        asignarHorarios@i 0011                          _sistemaPrincipal 1A5A  
                         leer_eeprom@dato 0006                               _SSPCON2bits 000FC5  
                              _UART_write 229A                              ___aodiv@sign 0012  
                       ??_i2c_recibe_dato 0002                    __size_of_convertirDato 0020  
                    leer_eeprom@direccion 0003                             _sistemaRegado 188C  
                            ___aomod@sign 0012                  ??_lecturaAnalogaSensores 0007  
