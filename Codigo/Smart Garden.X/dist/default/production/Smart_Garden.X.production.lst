

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jun 22 16:14:00 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    88                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    90                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    91  0000                     
    92                           ; Version 2.10
    93                           ; Generated 31/07/2019 GMT
    94                           ; 
    95                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    96                           ; All rights reserved.
    97                           ; 
    98                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    99                           ; 
   100                           ; Redistribution and use in source and binary forms, with or without modification, are
   101                           ; permitted provided that the following conditions are met:
   102                           ; 
   103                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   104                           ;        conditions and the following disclaimer.
   105                           ; 
   106                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   107                           ;        of conditions and the following disclaimer in the documentation and/or other
   108                           ;        materials provided with the distribution.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC18F4550 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126  0000                     
   127                           	psect	idataBANK0
   128  0032F8                     __pidataBANK0:
   129                           	opt callstack 0
   130                           
   131                           ;initializer for stoa@F1144
   132  0032F8  28                 	db	40
   133  0032F9  6E                 	db	110
   134  0032FA  75                 	db	117
   135  0032FB  6C                 	db	108
   136  0032FC  6C                 	db	108
   137  0032FD  29                 	db	41
   138  0032FE  00                 	db	0
   139                           
   140                           ;initializer for _VALOR_TIMER0
   141  0032FF  6769               	dw	26473
   142                           
   143                           ;initializer for _VALOR_TIMER0UART
   144  003301  6769               	dw	26473
   145  0000                     _TMR0	set	4054
   146  0000                     _TRISD	set	3989
   147  0000                     _T0CON	set	4053
   148  0000                     _T0CONbits	set	4053
   149  0000                     _LATD	set	3980
   150  0000                     _PIE1bits	set	3997
   151  0000                     _ADRESL	set	4035
   152  0000                     _ADRESH	set	4036
   153  0000                     _ADCON0bits	set	4034
   154  0000                     _ADCON2	set	4032
   155  0000                     _ADCON1	set	4033
   156  0000                     _INTCONbits	set	4082
   157  0000                     _LATDbits	set	3980
   158  0000                     _TRISDbits	set	3989
   159  0000                     _PORTDbits	set	3971
   160  0000                     _TXREG	set	4013
   161  0000                     _RCREG	set	4014
   162  0000                     _PIR1bits	set	3998
   163  0000                     _RCSTAbits	set	4011
   164  0000                     _TXSTAbits	set	4012
   165  0000                     _SPBRG	set	4015
   166  0000                     _TRISCbits	set	3988
   167  0000                     _SSPBUF	set	4041
   168  0000                     _SSPCON2bits	set	4037
   169  0000                     _SSPADD	set	4040
   170  0000                     _SSPCON2	set	4037
   171  0000                     _SSPCON1	set	4038
   172  0000                     _SSPSTAT	set	4039
   173  0000                     _TRISBbits	set	3987
   174  0000                     _ACKSTAT	set	32302
   175                           
   176                           	psect	mediumconst
   177  0078FC                     __pmediumconst:
   178                           	opt callstack 0
   179  0078FC  00                 	db	0
   180  0078FD                     STR_17:
   181  0078FD  0D                 	db	13
   182  0078FE  0A                 	db	10
   183  0078FF  20                 	db	32
   184  007900  49                 	db	73	;'I'
   185  007901  6E                 	db	110	;'n'
   186  007902  67                 	db	103	;'g'
   187  007903  72                 	db	114	;'r'
   188  007904  65                 	db	101	;'e'
   189  007905  73                 	db	115	;'s'
   190  007906  65                 	db	101	;'e'
   191  007907  20                 	db	32
   192  007908  6C                 	db	108	;'l'
   193  007909  6F                 	db	111	;'o'
   194  00790A  73                 	db	115	;'s'
   195  00790B  20                 	db	32
   196  00790C  6D                 	db	109	;'m'
   197  00790D  69                 	db	105	;'i'
   198  00790E  6E                 	db	110	;'n'
   199  00790F  75                 	db	117	;'u'
   200  007910  74                 	db	116	;'t'
   201  007911  6F                 	db	111	;'o'
   202  007912  73                 	db	115	;'s'
   203  007913  20                 	db	32
   204  007914  71                 	db	113	;'q'
   205  007915  75                 	db	117	;'u'
   206  007916  65                 	db	101	;'e'
   207  007917  20                 	db	32
   208  007918  64                 	db	100	;'d'
   209  007919  65                 	db	101	;'e'
   210  00791A  73                 	db	115	;'s'
   211  00791B  65                 	db	101	;'e'
   212  00791C  65                 	db	101	;'e'
   213  00791D  20                 	db	32
   214  00791E  71                 	db	113	;'q'
   215  00791F  75                 	db	117	;'u'
   216  007920  65                 	db	101	;'e'
   217  007921  20                 	db	32
   218  007922  73                 	db	115	;'s'
   219  007923  65                 	db	101	;'e'
   220  007924  20                 	db	32
   221  007925  72                 	db	114	;'r'
   222  007926  69                 	db	105	;'i'
   223  007927  65                 	db	101	;'e'
   224  007928  67                 	db	103	;'g'
   225  007929  75                 	db	117	;'u'
   226  00792A  65                 	db	101	;'e'
   227  00792B  20                 	db	32
   228  00792C  65                 	db	101	;'e'
   229  00792D  6E                 	db	110	;'n'
   230  00792E  20                 	db	32
   231  00792F  65                 	db	101	;'e'
   232  007930  73                 	db	115	;'s'
   233  007931  65                 	db	101	;'e'
   234  007932  20                 	db	32
   235  007933  68                 	db	104	;'h'
   236  007934  6F                 	db	111	;'o'
   237  007935  72                 	db	114	;'r'
   238  007936  61                 	db	97	;'a'
   239  007937  72                 	db	114	;'r'
   240  007938  69                 	db	105	;'i'
   241  007939  6F                 	db	111	;'o'
   242  00793A  20                 	db	32
   243  00793B  65                 	db	101	;'e'
   244  00793C  6A                 	db	106	;'j'
   245  00793D  3A                 	db	58	;':'
   246  00793E  20                 	db	32
   247  00793F  31                 	db	49	;'1'
   248  007940  35                 	db	53	;'5'
   249  007941  20                 	db	32
   250  007942  0D                 	db	13
   251  007943  0A                 	db	10
   252  007944  00                 	db	0
   253  007945                     STR_1:
   254  007945  0D                 	db	13
   255  007946  0A                 	db	10
   256  007947  20                 	db	32
   257  007948  45                 	db	69	;'E'
   258  007949  6E                 	db	110	;'n'
   259  00794A  76                 	db	118	;'v'
   260  00794B  69                 	db	105	;'i'
   261  00794C  65                 	db	101	;'e'
   262  00794D  20                 	db	32
   263  00794E  65                 	db	101	;'e'
   264  00794F  6C                 	db	108	;'l'
   265  007950  20                 	db	32
   266  007951  64                 	db	100	;'d'
   267  007952  69                 	db	105	;'i'
   268  007953  61                 	db	97	;'a'
   269  007954  20                 	db	32
   270  007955  64                 	db	100	;'d'
   271  007956  65                 	db	101	;'e'
   272  007957  20                 	db	32
   273  007958  6C                 	db	108	;'l'
   274  007959  61                 	db	97	;'a'
   275  00795A  20                 	db	32
   276  00795B  73                 	db	115	;'s'
   277  00795C  65                 	db	101	;'e'
   278  00795D  6D                 	db	109	;'m'
   279  00795E  61                 	db	97	;'a'
   280  00795F  6E                 	db	110	;'n'
   281  007960  61                 	db	97	;'a'
   282  007961  20                 	db	32
   283  007962  45                 	db	69	;'E'
   284  007963  6A                 	db	106	;'j'
   285  007964  3A                 	db	58	;':'
   286  007965  20                 	db	32
   287  007966  30                 	db	48	;'0'
   288  007967  31                 	db	49	;'1'
   289  007968  20                 	db	32
   290  007969  3D                 	db	61	;'='
   291  00796A  20                 	db	32
   292  00796B  44                 	db	68	;'D'
   293  00796C  4F                 	db	79	;'O'
   294  00796D  4D                 	db	77	;'M'
   295  00796E  49                 	db	73	;'I'
   296  00796F  4E                 	db	78	;'N'
   297  007970  47                 	db	71	;'G'
   298  007971  4F                 	db	79	;'O'
   299  007972  20                 	db	32
   300  007973  2E                 	db	46
   301  007974  2E                 	db	46
   302  007975  2E                 	db	46
   303  007976  20                 	db	32
   304  007977  30                 	db	48	;'0'
   305  007978  37                 	db	55	;'7'
   306  007979  20                 	db	32
   307  00797A  3D                 	db	61	;'='
   308  00797B  20                 	db	32
   309  00797C  53                 	db	83	;'S'
   310  00797D  41                 	db	65	;'A'
   311  00797E  42                 	db	66	;'B'
   312  00797F  41                 	db	65	;'A'
   313  007980  44                 	db	68	;'D'
   314  007981  4F                 	db	79	;'O'
   315  007982  20                 	db	32
   316  007983  0D                 	db	13
   317  007984  0A                 	db	10
   318  007985  00                 	db	0
   319  007986                     STR_9:
   320  007986  0D                 	db	13
   321  007987  0A                 	db	10
   322  007988  20                 	db	32
   323  007989  49                 	db	73	;'I'
   324  00798A  6E                 	db	110	;'n'
   325  00798B  67                 	db	103	;'g'
   326  00798C  72                 	db	114	;'r'
   327  00798D  65                 	db	101	;'e'
   328  00798E  73                 	db	115	;'s'
   329  00798F  65                 	db	101	;'e'
   330  007990  20                 	db	32
   331  007991  31                 	db	49	;'1'
   332  007992  20                 	db	32
   333  007993  70                 	db	112	;'p'
   334  007994  61                 	db	97	;'a'
   335  007995  72                 	db	114	;'r'
   336  007996  61                 	db	97	;'a'
   337  007997  20                 	db	32
   338  007998  61                 	db	97	;'a'
   339  007999  63                 	db	99	;'c'
   340  00799A  74                 	db	116	;'t'
   341  00799B  69                 	db	105	;'i'
   342  00799C  76                 	db	118	;'v'
   343  00799D  61                 	db	97	;'a'
   344  00799E  72                 	db	114	;'r'
   345  00799F  20                 	db	32
   346  0079A0  7C                 	db	124
   347  0079A1  7C                 	db	124
   348  0079A2  20                 	db	32
   349  0079A3  69                 	db	105	;'i'
   350  0079A4  6E                 	db	110	;'n'
   351  0079A5  67                 	db	103	;'g'
   352  0079A6  72                 	db	114	;'r'
   353  0079A7  65                 	db	101	;'e'
   354  0079A8  73                 	db	115	;'s'
   355  0079A9  65                 	db	101	;'e'
   356  0079AA  20                 	db	32
   357  0079AB  30                 	db	48	;'0'
   358  0079AC  20                 	db	32
   359  0079AD  70                 	db	112	;'p'
   360  0079AE  61                 	db	97	;'a'
   361  0079AF  72                 	db	114	;'r'
   362  0079B0  61                 	db	97	;'a'
   363  0079B1  20                 	db	32
   364  0079B2  64                 	db	100	;'d'
   365  0079B3  65                 	db	101	;'e'
   366  0079B4  73                 	db	115	;'s'
   367  0079B5  61                 	db	97	;'a'
   368  0079B6  63                 	db	99	;'c'
   369  0079B7  74                 	db	116	;'t'
   370  0079B8  69                 	db	105	;'i'
   371  0079B9  76                 	db	118	;'v'
   372  0079BA  61                 	db	97	;'a'
   373  0079BB  72                 	db	114	;'r'
   374  0079BC  3A                 	db	58	;':'
   375  0079BD  20                 	db	32
   376  0079BE  0D                 	db	13
   377  0079BF  0A                 	db	10
   378  0079C0  00                 	db	0
   379  0079C1                     STR_62:
   380  0079C1  0D                 	db	13
   381  0079C2  0A                 	db	10
   382  0079C3  20                 	db	32
   383  0079C4  59                 	db	89	;'Y'
   384  0079C5  61                 	db	97	;'a'
   385  0079C6  20                 	db	32
   386  0079C7  73                 	db	115	;'s'
   387  0079C8  65                 	db	101	;'e'
   388  0079C9  20                 	db	32
   389  0079CA  65                 	db	101	;'e'
   390  0079CB  73                 	db	115	;'s'
   391  0079CC  74                 	db	116	;'t'
   392  0079CD  61                 	db	97	;'a'
   393  0079CE  20                 	db	32
   394  0079CF  65                 	db	101	;'e'
   395  0079D0  66                 	db	102	;'f'
   396  0079D1  65                 	db	101	;'e'
   397  0079D2  63                 	db	99	;'c'
   398  0079D3  74                 	db	116	;'t'
   399  0079D4  75                 	db	117	;'u'
   400  0079D5  61                 	db	97	;'a'
   401  0079D6  6E                 	db	110	;'n'
   402  0079D7  64                 	db	100	;'d'
   403  0079D8  6F                 	db	111	;'o'
   404  0079D9  20                 	db	32
   405  0079DA  75                 	db	117	;'u'
   406  0079DB  6E                 	db	110	;'n'
   407  0079DC  20                 	db	32
   408  0079DD  72                 	db	114	;'r'
   409  0079DE  69                 	db	105	;'i'
   410  0079DF  65                 	db	101	;'e'
   411  0079E0  67                 	db	103	;'g'
   412  0079E1  6F                 	db	111	;'o'
   413  0079E2  2C                 	db	44
   414  0079E3  20                 	db	32
   415  0079E4  69                 	db	105	;'i'
   416  0079E5  6E                 	db	110	;'n'
   417  0079E6  74                 	db	116	;'t'
   418  0079E7  65                 	db	101	;'e'
   419  0079E8  6E                 	db	110	;'n'
   420  0079E9  74                 	db	116	;'t'
   421  0079EA  65                 	db	101	;'e'
   422  0079EB  6C                 	db	108	;'l'
   423  0079EC  6F                 	db	111	;'o'
   424  0079ED  20                 	db	32
   425  0079EE  6D                 	db	109	;'m'
   426  0079EF  61                 	db	97	;'a'
   427  0079F0  73                 	db	115	;'s'
   428  0079F1  20                 	db	32
   429  0079F2  74                 	db	116	;'t'
   430  0079F3  61                 	db	97	;'a'
   431  0079F4  72                 	db	114	;'r'
   432  0079F5  64                 	db	100	;'d'
   433  0079F6  65                 	db	101	;'e'
   434  0079F7  20                 	db	32
   435  0079F8  0D                 	db	13
   436  0079F9  0A                 	db	10
   437  0079FA  00                 	db	0
   438  0079FB                     STR_61:
   439  0079FB  0D                 	db	13
   440  0079FC  0A                 	db	10
   441  0079FD  20                 	db	32
   442  0079FE  49                 	db	73	;'I'
   443  0079FF  6E                 	db	110	;'n'
   444  007A00  67                 	db	103	;'g'
   445  007A01  72                 	db	114	;'r'
   446  007A02  65                 	db	101	;'e'
   447  007A03  73                 	db	115	;'s'
   448  007A04  65                 	db	101	;'e'
   449  007A05  20                 	db	32
   450  007A06  65                 	db	101	;'e'
   451  007A07  6C                 	db	108	;'l'
   452  007A08  20                 	db	32
   453  007A09  6E                 	db	110	;'n'
   454  007A0A  75                 	db	117	;'u'
   455  007A0B  6D                 	db	109	;'m'
   456  007A0C  65                 	db	101	;'e'
   457  007A0D  72                 	db	114	;'r'
   458  007A0E  6F                 	db	111	;'o'
   459  007A0F  20                 	db	32
   460  007A10  64                 	db	100	;'d'
   461  007A11  65                 	db	101	;'e'
   462  007A12  20                 	db	32
   463  007A13  73                 	db	115	;'s'
   464  007A14  65                 	db	101	;'e'
   465  007A15  6E                 	db	110	;'n'
   466  007A16  73                 	db	115	;'s'
   467  007A17  6F                 	db	111	;'o'
   468  007A18  72                 	db	114	;'r'
   469  007A19  20                 	db	32
   470  007A1A  64                 	db	100	;'d'
   471  007A1B  65                 	db	101	;'e'
   472  007A1C  6C                 	db	108	;'l'
   473  007A1D  20                 	db	32
   474  007A1E  61                 	db	97	;'a'
   475  007A1F  72                 	db	114	;'r'
   476  007A20  65                 	db	101	;'e'
   477  007A21  61                 	db	97	;'a'
   478  007A22  20                 	db	32
   479  007A23  61                 	db	97	;'a'
   480  007A24  20                 	db	32
   481  007A25  72                 	db	114	;'r'
   482  007A26  65                 	db	101	;'e'
   483  007A27  67                 	db	103	;'g'
   484  007A28  61                 	db	97	;'a'
   485  007A29  72                 	db	114	;'r'
   486  007A2A  20                 	db	32
   487  007A2B  65                 	db	101	;'e'
   488  007A2C  6A                 	db	106	;'j'
   489  007A2D  3A                 	db	58	;':'
   490  007A2E  20                 	db	32
   491  007A2F  35                 	db	53	;'5'
   492  007A30  20                 	db	32
   493  007A31  0D                 	db	13
   494  007A32  0A                 	db	10
   495  007A33  00                 	db	0
   496  007A34                     STR_60:
   497  007A34  0D                 	db	13
   498  007A35  0A                 	db	10
   499  007A36  20                 	db	32
   500  007A37  49                 	db	73	;'I'
   501  007A38  6E                 	db	110	;'n'
   502  007A39  67                 	db	103	;'g'
   503  007A3A  72                 	db	114	;'r'
   504  007A3B  65                 	db	101	;'e'
   505  007A3C  73                 	db	115	;'s'
   506  007A3D  65                 	db	101	;'e'
   507  007A3E  20                 	db	32
   508  007A3F  6C                 	db	108	;'l'
   509  007A40  6F                 	db	111	;'o'
   510  007A41  73                 	db	115	;'s'
   511  007A42  20                 	db	32
   512  007A43  6D                 	db	109	;'m'
   513  007A44  69                 	db	105	;'i'
   514  007A45  6E                 	db	110	;'n'
   515  007A46  75                 	db	117	;'u'
   516  007A47  74                 	db	116	;'t'
   517  007A48  6F                 	db	111	;'o'
   518  007A49  73                 	db	115	;'s'
   519  007A4A  20                 	db	32
   520  007A4B  71                 	db	113	;'q'
   521  007A4C  75                 	db	117	;'u'
   522  007A4D  65                 	db	101	;'e'
   523  007A4E  20                 	db	32
   524  007A4F  64                 	db	100	;'d'
   525  007A50  65                 	db	101	;'e'
   526  007A51  73                 	db	115	;'s'
   527  007A52  65                 	db	101	;'e'
   528  007A53  65                 	db	101	;'e'
   529  007A54  20                 	db	32
   530  007A55  71                 	db	113	;'q'
   531  007A56  75                 	db	117	;'u'
   532  007A57  65                 	db	101	;'e'
   533  007A58  20                 	db	32
   534  007A59  73                 	db	115	;'s'
   535  007A5A  65                 	db	101	;'e'
   536  007A5B  20                 	db	32
   537  007A5C  72                 	db	114	;'r'
   538  007A5D  69                 	db	105	;'i'
   539  007A5E  65                 	db	101	;'e'
   540  007A5F  67                 	db	103	;'g'
   541  007A60  75                 	db	117	;'u'
   542  007A61  65                 	db	101	;'e'
   543  007A62  20                 	db	32
   544  007A63  65                 	db	101	;'e'
   545  007A64  6A                 	db	106	;'j'
   546  007A65  3A                 	db	58	;':'
   547  007A66  20                 	db	32
   548  007A67  31                 	db	49	;'1'
   549  007A68  35                 	db	53	;'5'
   550  007A69  20                 	db	32
   551  007A6A  0D                 	db	13
   552  007A6B  0A                 	db	10
   553  007A6C  00                 	db	0
   554  007A6D                     STR_8:
   555  007A6D  0D                 	db	13
   556  007A6E  0A                 	db	10
   557  007A6F  20                 	db	32
   558  007A70  49                 	db	73	;'I'
   559  007A71  6E                 	db	110	;'n'
   560  007A72  67                 	db	103	;'g'
   561  007A73  72                 	db	114	;'r'
   562  007A74  65                 	db	101	;'e'
   563  007A75  73                 	db	115	;'s'
   564  007A76  65                 	db	101	;'e'
   565  007A77  20                 	db	32
   566  007A78  75                 	db	117	;'u'
   567  007A79  6E                 	db	110	;'n'
   568  007A7A  61                 	db	97	;'a'
   569  007A7B  20                 	db	32
   570  007A7C  68                 	db	104	;'h'
   571  007A7D  6F                 	db	111	;'o'
   572  007A7E  72                 	db	114	;'r'
   573  007A7F  61                 	db	97	;'a'
   574  007A80  20                 	db	32
   575  007A81  65                 	db	101	;'e'
   576  007A82  6E                 	db	110	;'n'
   577  007A83  20                 	db	32
   578  007A84  66                 	db	102	;'f'
   579  007A85  6F                 	db	111	;'o'
   580  007A86  72                 	db	114	;'r'
   581  007A87  6D                 	db	109	;'m'
   582  007A88  61                 	db	97	;'a'
   583  007A89  74                 	db	116	;'t'
   584  007A8A  6F                 	db	111	;'o'
   585  007A8B  20                 	db	32
   586  007A8C  64                 	db	100	;'d'
   587  007A8D  65                 	db	101	;'e'
   588  007A8E  20                 	db	32
   589  007A8F  32                 	db	50	;'2'
   590  007A90  34                 	db	52	;'4'
   591  007A91  20                 	db	32
   592  007A92  68                 	db	104	;'h'
   593  007A93  72                 	db	114	;'r'
   594  007A94  73                 	db	115	;'s'
   595  007A95  20                 	db	32
   596  007A96  65                 	db	101	;'e'
   597  007A97  6A                 	db	106	;'j'
   598  007A98  3A                 	db	58	;':'
   599  007A99  20                 	db	32
   600  007A9A  31                 	db	49	;'1'
   601  007A9B  35                 	db	53	;'5'
   602  007A9C  20                 	db	32
   603  007A9D  0D                 	db	13
   604  007A9E  0A                 	db	10
   605  007A9F  00                 	db	0
   606  007AA0                     STR_20:
   607  007AA0  0D                 	db	13
   608  007AA1  0A                 	db	10
   609  007AA2  49                 	db	73	;'I'
   610  007AA3  6E                 	db	110	;'n'
   611  007AA4  67                 	db	103	;'g'
   612  007AA5  72                 	db	114	;'r'
   613  007AA6  65                 	db	101	;'e'
   614  007AA7  73                 	db	115	;'s'
   615  007AA8  65                 	db	101	;'e'
   616  007AA9  20                 	db	32
   617  007AAA  65                 	db	101	;'e'
   618  007AAB  6C                 	db	108	;'l'
   619  007AAC  20                 	db	32
   620  007AAD  70                 	db	112	;'p'
   621  007AAE  6F                 	db	111	;'o'
   622  007AAF  72                 	db	114	;'r'
   623  007AB0  63                 	db	99	;'c'
   624  007AB1  65                 	db	101	;'e'
   625  007AB2  6E                 	db	110	;'n'
   626  007AB3  74                 	db	116	;'t'
   627  007AB4  61                 	db	97	;'a'
   628  007AB5  6A                 	db	106	;'j'
   629  007AB6  65                 	db	101	;'e'
   630  007AB7  20                 	db	32
   631  007AB8  64                 	db	100	;'d'
   632  007AB9  65                 	db	101	;'e'
   633  007ABA  20                 	db	32
   634  007ABB  68                 	db	104	;'h'
   635  007ABC  75                 	db	117	;'u'
   636  007ABD  6D                 	db	109	;'m'
   637  007ABE  65                 	db	101	;'e'
   638  007ABF  64                 	db	100	;'d'
   639  007AC0  61                 	db	97	;'a'
   640  007AC1  64                 	db	100	;'d'
   641  007AC2  20                 	db	32
   642  007AC3  64                 	db	100	;'d'
   643  007AC4  65                 	db	101	;'e'
   644  007AC5  6C                 	db	108	;'l'
   645  007AC6  20                 	db	32
   646  007AC7  73                 	db	115	;'s'
   647  007AC8  65                 	db	101	;'e'
   648  007AC9  6E                 	db	110	;'n'
   649  007ACA  73                 	db	115	;'s'
   650  007ACB  6F                 	db	111	;'o'
   651  007ACC  72                 	db	114	;'r'
   652  007ACD  20                 	db	32
   653  007ACE  25                 	db	37
   654  007ACF  64                 	db	100	;'d'
   655  007AD0  0D                 	db	13
   656  007AD1  0A                 	db	10
   657  007AD2  00                 	db	0
   658  007AD3                     STR_25:
   659  007AD3  0D                 	db	13
   660  007AD4  0A                 	db	10
   661  007AD5  20                 	db	32
   662  007AD6  33                 	db	51	;'3'
   663  007AD7  2E                 	db	46
   664  007AD8  20                 	db	32
   665  007AD9  50                 	db	80	;'P'
   666  007ADA  72                 	db	114	;'r'
   667  007ADB  6F                 	db	111	;'o'
   668  007ADC  67                 	db	103	;'g'
   669  007ADD  72                 	db	114	;'r'
   670  007ADE  61                 	db	97	;'a'
   671  007ADF  6D                 	db	109	;'m'
   672  007AE0  61                 	db	97	;'a'
   673  007AE1  72                 	db	114	;'r'
   674  007AE2  20                 	db	32
   675  007AE3  74                 	db	116	;'t'
   676  007AE4  69                 	db	105	;'i'
   677  007AE5  65                 	db	101	;'e'
   678  007AE6  6D                 	db	109	;'m'
   679  007AE7  70                 	db	112	;'p'
   680  007AE8  6F                 	db	111	;'o'
   681  007AE9  20                 	db	32
   682  007AEA  64                 	db	100	;'d'
   683  007AEB  65                 	db	101	;'e'
   684  007AEC  20                 	db	32
   685  007AED  72                 	db	114	;'r'
   686  007AEE  69                 	db	105	;'i'
   687  007AEF  65                 	db	101	;'e'
   688  007AF0  67                 	db	103	;'g'
   689  007AF1  6F                 	db	111	;'o'
   690  007AF2  20                 	db	32
   691  007AF3  65                 	db	101	;'e'
   692  007AF4  6E                 	db	110	;'n'
   693  007AF5  20                 	db	32
   694  007AF6  75                 	db	117	;'u'
   695  007AF7  6E                 	db	110	;'n'
   696  007AF8  20                 	db	32
   697  007AF9  68                 	db	104	;'h'
   698  007AFA  6F                 	db	111	;'o'
   699  007AFB  72                 	db	114	;'r'
   700  007AFC  61                 	db	97	;'a'
   701  007AFD  72                 	db	114	;'r'
   702  007AFE  69                 	db	105	;'i'
   703  007AFF  6F                 	db	111	;'o'
   704  007B00  20                 	db	32
   705  007B01  0D                 	db	13
   706  007B02  0A                 	db	10
   707  007B03  00                 	db	0
   708  007B04                     STR_51:
   709  007B04  0D                 	db	13
   710  007B05  0A                 	db	10
   711  007B06  0A                 	db	10
   712  007B07  50                 	db	80	;'P'
   713  007B08  6F                 	db	111	;'o'
   714  007B09  72                 	db	114	;'r'
   715  007B0A  63                 	db	99	;'c'
   716  007B0B  65                 	db	101	;'e'
   717  007B0C  6E                 	db	110	;'n'
   718  007B0D  74                 	db	116	;'t'
   719  007B0E  61                 	db	97	;'a'
   720  007B0F  6A                 	db	106	;'j'
   721  007B10  65                 	db	101	;'e'
   722  007B11  20                 	db	32
   723  007B12  48                 	db	72	;'H'
   724  007B13  75                 	db	117	;'u'
   725  007B14  6D                 	db	109	;'m'
   726  007B15  65                 	db	101	;'e'
   727  007B16  64                 	db	100	;'d'
   728  007B17  61                 	db	97	;'a'
   729  007B18  64                 	db	100	;'d'
   730  007B19  20                 	db	32
   731  007B1A  64                 	db	100	;'d'
   732  007B1B  65                 	db	101	;'e'
   733  007B1C  6C                 	db	108	;'l'
   734  007B1D  20                 	db	32
   735  007B1E  73                 	db	115	;'s'
   736  007B1F  65                 	db	101	;'e'
   737  007B20  6E                 	db	110	;'n'
   738  007B21  73                 	db	115	;'s'
   739  007B22  6F                 	db	111	;'o'
   740  007B23  72                 	db	114	;'r'
   741  007B24  20                 	db	32
   742  007B25  25                 	db	37
   743  007B26  64                 	db	100	;'d'
   744  007B27  3A                 	db	58	;':'
   745  007B28  20                 	db	32
   746  007B29  25                 	db	37
   747  007B2A  64                 	db	100	;'d'
   748  007B2B  20                 	db	32
   749  007B2C  25                 	db	37
   750  007B2D  63                 	db	99	;'c'
   751  007B2E  0D                 	db	13
   752  007B2F  0A                 	db	10
   753  007B30  00                 	db	0
   754  007B31                     STR_4:
   755  007B31  0D                 	db	13
   756  007B32  0A                 	db	10
   757  007B33  20                 	db	32
   758  007B34  45                 	db	69	;'E'
   759  007B35  6E                 	db	110	;'n'
   760  007B36  76                 	db	118	;'v'
   761  007B37  69                 	db	105	;'i'
   762  007B38  65                 	db	101	;'e'
   763  007B39  20                 	db	32
   764  007B3A  6C                 	db	108	;'l'
   765  007B3B  61                 	db	97	;'a'
   766  007B3C  73                 	db	115	;'s'
   767  007B3D  20                 	db	32
   768  007B3E  48                 	db	72	;'H'
   769  007B3F  6F                 	db	111	;'o'
   770  007B40  72                 	db	114	;'r'
   771  007B41  61                 	db	97	;'a'
   772  007B42  73                 	db	115	;'s'
   773  007B43  20                 	db	32
   774  007B44  65                 	db	101	;'e'
   775  007B45  6E                 	db	110	;'n'
   776  007B46  20                 	db	32
   777  007B47  66                 	db	102	;'f'
   778  007B48  6F                 	db	111	;'o'
   779  007B49  72                 	db	114	;'r'
   780  007B4A  6D                 	db	109	;'m'
   781  007B4B  61                 	db	97	;'a'
   782  007B4C  74                 	db	116	;'t'
   783  007B4D  6F                 	db	111	;'o'
   784  007B4E  20                 	db	32
   785  007B4F  32                 	db	50	;'2'
   786  007B50  34                 	db	52	;'4'
   787  007B51  20                 	db	32
   788  007B52  45                 	db	69	;'E'
   789  007B53  6A                 	db	106	;'j'
   790  007B54  3A                 	db	58	;':'
   791  007B55  20                 	db	32
   792  007B56  31                 	db	49	;'1'
   793  007B57  35                 	db	53	;'5'
   794  007B58  20                 	db	32
   795  007B59  0D                 	db	13
   796  007B5A  0A                 	db	10
   797  007B5B  00                 	db	0
   798  007B5C                     STR_34:
   799  007B5C  0D                 	db	13
   800  007B5D  0A                 	db	10
   801  007B5E  20                 	db	32
   802  007B5F  53                 	db	83	;'S'
   803  007B60  6F                 	db	111	;'o'
   804  007B61  6C                 	db	108	;'l'
   805  007B62  6F                 	db	111	;'o'
   806  007B63  20                 	db	32
   807  007B64  73                 	db	115	;'s'
   808  007B65  65                 	db	101	;'e'
   809  007B66  20                 	db	32
   810  007B67  70                 	db	112	;'p'
   811  007B68  65                 	db	101	;'e'
   812  007B69  72                 	db	114	;'r'
   813  007B6A  6D                 	db	109	;'m'
   814  007B6B  69                 	db	105	;'i'
   815  007B6C  74                 	db	116	;'t'
   816  007B6D  65                 	db	101	;'e'
   817  007B6E  6E                 	db	110	;'n'
   818  007B6F  20                 	db	32
   819  007B70  6E                 	db	110	;'n'
   820  007B71  75                 	db	117	;'u'
   821  007B72  6D                 	db	109	;'m'
   822  007B73  65                 	db	101	;'e'
   823  007B74  72                 	db	114	;'r'
   824  007B75  6F                 	db	111	;'o'
   825  007B76  73                 	db	115	;'s'
   826  007B77  20                 	db	32
   827  007B78  64                 	db	100	;'d'
   828  007B79  65                 	db	101	;'e'
   829  007B7A  6C                 	db	108	;'l'
   830  007B7B  20                 	db	32
   831  007B7C  31                 	db	49	;'1'
   832  007B7D  20                 	db	32
   833  007B7E  61                 	db	97	;'a'
   834  007B7F  6C                 	db	108	;'l'
   835  007B80  20                 	db	32
   836  007B81  38                 	db	56	;'8'
   837  007B82  20                 	db	32
   838  007B83  0D                 	db	13
   839  007B84  0A                 	db	10
   840  007B85  00                 	db	0
   841  007B86                     STR_19:
   842  007B86  0D                 	db	13
   843  007B87  0A                 	db	10
   844  007B88  53                 	db	83	;'S'
   845  007B89  6F                 	db	111	;'o'
   846  007B8A  6C                 	db	108	;'l'
   847  007B8B  69                 	db	105	;'i'
   848  007B8C  63                 	db	99	;'c'
   849  007B8D  69                 	db	105	;'i'
   850  007B8E  74                 	db	116	;'t'
   851  007B8F  61                 	db	97	;'a'
   852  007B90  6E                 	db	110	;'n'
   853  007B91  64                 	db	100	;'d'
   854  007B92  6F                 	db	111	;'o'
   855  007B93  20                 	db	32
   856  007B94  4D                 	db	77	;'M'
   857  007B95  75                 	db	117	;'u'
   858  007B96  65                 	db	101	;'e'
   859  007B97  73                 	db	115	;'s'
   860  007B98  74                 	db	116	;'t'
   861  007B99  72                 	db	114	;'r'
   862  007B9A  65                 	db	101	;'e'
   863  007B9B  6F                 	db	111	;'o'
   864  007B9C  20                 	db	32
   865  007B9D  64                 	db	100	;'d'
   866  007B9E  65                 	db	101	;'e'
   867  007B9F  20                 	db	32
   868  007BA0  73                 	db	115	;'s'
   869  007BA1  65                 	db	101	;'e'
   870  007BA2  6E                 	db	110	;'n'
   871  007BA3  73                 	db	115	;'s'
   872  007BA4  6F                 	db	111	;'o'
   873  007BA5  72                 	db	114	;'r'
   874  007BA6  65                 	db	101	;'e'
   875  007BA7  73                 	db	115	;'s'
   876  007BA8  0D                 	db	13
   877  007BA9  0A                 	db	10
   878  007BAA  0A                 	db	10
   879  007BAB  00                 	db	0
   880  007BAC                     STR_38:
   881  007BAC  0D                 	db	13
   882  007BAD  0A                 	db	10
   883  007BAE  44                 	db	68	;'D'
   884  007BAF  20                 	db	32
   885  007BB0  3D                 	db	61	;'='
   886  007BB1  20                 	db	32
   887  007BB2  44                 	db	68	;'D'
   888  007BB3  49                 	db	73	;'I'
   889  007BB4  41                 	db	65	;'A'
   890  007BB5  53                 	db	83	;'S'
   891  007BB6  20                 	db	32
   892  007BB7  51                 	db	81	;'Q'
   893  007BB8  55                 	db	85	;'U'
   894  007BB9  45                 	db	69	;'E'
   895  007BBA  20                 	db	32
   896  007BBB  45                 	db	69	;'E'
   897  007BBC  4E                 	db	78	;'N'
   898  007BBD  20                 	db	32
   899  007BBE  4C                 	db	76	;'L'
   900  007BBF  4F                 	db	79	;'O'
   901  007BC0  53                 	db	83	;'S'
   902  007BC1  20                 	db	32
   903  007BC2  51                 	db	81	;'Q'
   904  007BC3  55                 	db	85	;'U'
   905  007BC4  45                 	db	69	;'E'
   906  007BC5  20                 	db	32
   907  007BC6  53                 	db	83	;'S'
   908  007BC7  45                 	db	69	;'E'
   909  007BC8  20                 	db	32
   910  007BC9  52                 	db	82	;'R'
   911  007BCA  45                 	db	69	;'E'
   912  007BCB  47                 	db	71	;'G'
   913  007BCC  41                 	db	65	;'A'
   914  007BCD  52                 	db	82	;'R'
   915  007BCE  41                 	db	65	;'A'
   916  007BCF  0D                 	db	13
   917  007BD0  0A                 	db	10
   918  007BD1  00                 	db	0
   919  007BD2                     STR_18:
   920  007BD2  0D                 	db	13
   921  007BD3  0A                 	db	10
   922  007BD4  20                 	db	32
   923  007BD5  4D                 	db	77	;'M'
   924  007BD6  69                 	db	105	;'i'
   925  007BD7  6E                 	db	110	;'n'
   926  007BD8  75                 	db	117	;'u'
   927  007BD9  74                 	db	116	;'t'
   928  007BDA  6F                 	db	111	;'o'
   929  007BDB  73                 	db	115	;'s'
   930  007BDC  20                 	db	32
   931  007BDD  64                 	db	100	;'d'
   932  007BDE  65                 	db	101	;'e'
   933  007BDF  20                 	db	32
   934  007BE0  72                 	db	114	;'r'
   935  007BE1  69                 	db	105	;'i'
   936  007BE2  65                 	db	101	;'e'
   937  007BE3  67                 	db	103	;'g'
   938  007BE4  6F                 	db	111	;'o'
   939  007BE5  20                 	db	32
   940  007BE6  65                 	db	101	;'e'
   941  007BE7  73                 	db	115	;'s'
   942  007BE8  74                 	db	116	;'t'
   943  007BE9  61                 	db	97	;'a'
   944  007BEA  62                 	db	98	;'b'
   945  007BEB  6C                 	db	108	;'l'
   946  007BEC  65                 	db	101	;'e'
   947  007BED  63                 	db	99	;'c'
   948  007BEE  69                 	db	105	;'i'
   949  007BEF  64                 	db	100	;'d'
   950  007BF0  6F                 	db	111	;'o'
   951  007BF1  73                 	db	115	;'s'
   952  007BF2  21                 	db	33
   953  007BF3  20                 	db	32
   954  007BF4  0D                 	db	13
   955  007BF5  0A                 	db	10
   956  007BF6  00                 	db	0
   957  007BF7                     STR_22:
   958  007BF7  0D                 	db	13
   959  007BF8  0A                 	db	10
   960  007BF9  20                 	db	32
   961  007BFA  49                 	db	73	;'I'
   962  007BFB  6E                 	db	110	;'n'
   963  007BFC  67                 	db	103	;'g'
   964  007BFD  72                 	db	114	;'r'
   965  007BFE  65                 	db	101	;'e'
   966  007BFF  73                 	db	115	;'s'
   967  007C00  61                 	db	97	;'a'
   968  007C01  20                 	db	32
   969  007C02  75                 	db	117	;'u'
   970  007C03  6E                 	db	110	;'n'
   971  007C04  61                 	db	97	;'a'
   972  007C05  20                 	db	32
   973  007C06  6F                 	db	111	;'o'
   974  007C07  70                 	db	112	;'p'
   975  007C08  63                 	db	99	;'c'
   976  007C09  69                 	db	105	;'i'
   977  007C0A  6F                 	db	111	;'o'
   978  007C0B  6E                 	db	110	;'n'
   979  007C0C  20                 	db	32
   980  007C0D  61                 	db	97	;'a'
   981  007C0E  20                 	db	32
   982  007C0F  52                 	db	82	;'R'
   983  007C10  65                 	db	101	;'e'
   984  007C11  61                 	db	97	;'a'
   985  007C12  6C                 	db	108	;'l'
   986  007C13  69                 	db	105	;'i'
   987  007C14  7A                 	db	122	;'z'
   988  007C15  61                 	db	97	;'a'
   989  007C16  72                 	db	114	;'r'
   990  007C17  3A                 	db	58	;':'
   991  007C18  20                 	db	32
   992  007C19  0D                 	db	13
   993  007C1A  0A                 	db	10
   994  007C1B  00                 	db	0
   995  007C1C                     STR_6:
   996  007C1C  0D                 	db	13
   997  007C1D  0A                 	db	10
   998  007C1E  20                 	db	32
   999  007C1F  48                 	db	72	;'H'
  1000  007C20  4F                 	db	79	;'O'
  1001  007C21  52                 	db	82	;'R'
  1002  007C22  41                 	db	65	;'A'
  1003  007C23  20                 	db	32
  1004  007C24  45                 	db	69	;'E'
  1005  007C25  53                 	db	83	;'S'
  1006  007C26  54                 	db	84	;'T'
  1007  007C27  41                 	db	65	;'A'
  1008  007C28  42                 	db	66	;'B'
  1009  007C29  4C                 	db	76	;'L'
  1010  007C2A  45                 	db	69	;'E'
  1011  007C2B  43                 	db	67	;'C'
  1012  007C2C  49                 	db	73	;'I'
  1013  007C2D  44                 	db	68	;'D'
  1014  007C2E  41                 	db	65	;'A'
  1015  007C2F  20                 	db	32
  1016  007C30  43                 	db	67	;'C'
  1017  007C31  4F                 	db	79	;'O'
  1018  007C32  52                 	db	82	;'R'
  1019  007C33  52                 	db	82	;'R'
  1020  007C34  45                 	db	69	;'E'
  1021  007C35  43                 	db	67	;'C'
  1022  007C36  54                 	db	84	;'T'
  1023  007C37  41                 	db	65	;'A'
  1024  007C38  4D                 	db	77	;'M'
  1025  007C39  45                 	db	69	;'E'
  1026  007C3A  4E                 	db	78	;'N'
  1027  007C3B  54                 	db	84	;'T'
  1028  007C3C  45                 	db	69	;'E'
  1029  007C3D  20                 	db	32
  1030  007C3E  0D                 	db	13
  1031  007C3F  0A                 	db	10
  1032  007C40  00                 	db	0
  1033  007C41                     STR_11:
  1034  007C41  0D                 	db	13
  1035  007C42  0A                 	db	10
  1036  007C43  20                 	db	32
  1037  007C44  44                 	db	68	;'D'
  1038  007C45  4F                 	db	79	;'O'
  1039  007C46  4D                 	db	77	;'M'
  1040  007C47  49                 	db	73	;'I'
  1041  007C48  4E                 	db	78	;'N'
  1042  007C49  47                 	db	71	;'G'
  1043  007C4A  4F                 	db	79	;'O'
  1044  007C4B  20                 	db	32
  1045  007C4C  3D                 	db	61	;'='
  1046  007C4D  20                 	db	32
  1047  007C4E  5B                 	db	91	;'['
  1048  007C4F  31                 	db	49	;'1'
  1049  007C50  5D                 	db	93	;']'
  1050  007C51  20                 	db	32
  1051  007C52  2E                 	db	46
  1052  007C53  2E                 	db	46
  1053  007C54  2E                 	db	46
  1054  007C55  20                 	db	32
  1055  007C56  53                 	db	83	;'S'
  1056  007C57  41                 	db	65	;'A'
  1057  007C58  42                 	db	66	;'B'
  1058  007C59  41                 	db	65	;'A'
  1059  007C5A  44                 	db	68	;'D'
  1060  007C5B  4F                 	db	79	;'O'
  1061  007C5C  20                 	db	32
  1062  007C5D  3D                 	db	61	;'='
  1063  007C5E  20                 	db	32
  1064  007C5F  5B                 	db	91	;'['
  1065  007C60  37                 	db	55	;'7'
  1066  007C61  5D                 	db	93	;']'
  1067  007C62  20                 	db	32
  1068  007C63  0D                 	db	13
  1069  007C64  0A                 	db	10
  1070  007C65  00                 	db	0
  1071  007C66                     STR_24:
  1072  007C66  0D                 	db	13
  1073  007C67  0A                 	db	10
  1074  007C68  20                 	db	32
  1075  007C69  32                 	db	50	;'2'
  1076  007C6A  2E                 	db	46
  1077  007C6B  20                 	db	32
  1078  007C6C  41                 	db	65	;'A'
  1079  007C6D  73                 	db	115	;'s'
  1080  007C6E  69                 	db	105	;'i'
  1081  007C6F  67                 	db	103	;'g'
  1082  007C70  6E                 	db	110	;'n'
  1083  007C71  61                 	db	97	;'a'
  1084  007C72  72                 	db	114	;'r'
  1085  007C73  20                 	db	32
  1086  007C74  48                 	db	72	;'H'
  1087  007C75  6F                 	db	111	;'o'
  1088  007C76  72                 	db	114	;'r'
  1089  007C77  61                 	db	97	;'a'
  1090  007C78  72                 	db	114	;'r'
  1091  007C79  69                 	db	105	;'i'
  1092  007C7A  6F                 	db	111	;'o'
  1093  007C7B  73                 	db	115	;'s'
  1094  007C7C  20                 	db	32
  1095  007C7D  70                 	db	112	;'p'
  1096  007C7E  61                 	db	97	;'a'
  1097  007C7F  72                 	db	114	;'r'
  1098  007C80  61                 	db	97	;'a'
  1099  007C81  20                 	db	32
  1100  007C82  72                 	db	114	;'r'
  1101  007C83  65                 	db	101	;'e'
  1102  007C84  67                 	db	103	;'g'
  1103  007C85  61                 	db	97	;'a'
  1104  007C86  72                 	db	114	;'r'
  1105  007C87  20                 	db	32
  1106  007C88  0D                 	db	13
  1107  007C89  0A                 	db	10
  1108  007C8A  00                 	db	0
  1109  007C8B                     STR_2:
  1110  007C8B  0D                 	db	13
  1111  007C8C  0A                 	db	10
  1112  007C8D  20                 	db	32
  1113  007C8E  44                 	db	68	;'D'
  1114  007C8F  49                 	db	73	;'I'
  1115  007C90  41                 	db	65	;'A'
  1116  007C91  20                 	db	32
  1117  007C92  45                 	db	69	;'E'
  1118  007C93  53                 	db	83	;'S'
  1119  007C94  54                 	db	84	;'T'
  1120  007C95  41                 	db	65	;'A'
  1121  007C96  42                 	db	66	;'B'
  1122  007C97  4C                 	db	76	;'L'
  1123  007C98  45                 	db	69	;'E'
  1124  007C99  43                 	db	67	;'C'
  1125  007C9A  49                 	db	73	;'I'
  1126  007C9B  44                 	db	68	;'D'
  1127  007C9C  4F                 	db	79	;'O'
  1128  007C9D  20                 	db	32
  1129  007C9E  43                 	db	67	;'C'
  1130  007C9F  4F                 	db	79	;'O'
  1131  007CA0  52                 	db	82	;'R'
  1132  007CA1  52                 	db	82	;'R'
  1133  007CA2  45                 	db	69	;'E'
  1134  007CA3  43                 	db	67	;'C'
  1135  007CA4  54                 	db	84	;'T'
  1136  007CA5  41                 	db	65	;'A'
  1137  007CA6  4D                 	db	77	;'M'
  1138  007CA7  45                 	db	69	;'E'
  1139  007CA8  4E                 	db	78	;'N'
  1140  007CA9  54                 	db	84	;'T'
  1141  007CAA  45                 	db	69	;'E'
  1142  007CAB  20                 	db	32
  1143  007CAC  0D                 	db	13
  1144  007CAD  0A                 	db	10
  1145  007CAE  00                 	db	0
  1146  007CAF                     STR_30:
  1147  007CAF  0D                 	db	13
  1148  007CB0  0A                 	db	10
  1149  007CB1  20                 	db	32
  1150  007CB2  38                 	db	56	;'8'
  1151  007CB3  2E                 	db	46
  1152  007CB4  20                 	db	32
  1153  007CB5  43                 	db	67	;'C'
  1154  007CB6  61                 	db	97	;'a'
  1155  007CB7  72                 	db	114	;'r'
  1156  007CB8  67                 	db	103	;'g'
  1157  007CB9  61                 	db	97	;'a'
  1158  007CBA  72                 	db	114	;'r'
  1159  007CBB  20                 	db	32
  1160  007CBC  64                 	db	100	;'d'
  1161  007CBD  61                 	db	97	;'a'
  1162  007CBE  74                 	db	116	;'t'
  1163  007CBF  6F                 	db	111	;'o'
  1164  007CC0  73                 	db	115	;'s'
  1165  007CC1  20                 	db	32
  1166  007CC2  64                 	db	100	;'d'
  1167  007CC3  65                 	db	101	;'e'
  1168  007CC4  20                 	db	32
  1169  007CC5  6C                 	db	108	;'l'
  1170  007CC6  61                 	db	97	;'a'
  1171  007CC7  20                 	db	32
  1172  007CC8  6D                 	db	109	;'m'
  1173  007CC9  65                 	db	101	;'e'
  1174  007CCA  6D                 	db	109	;'m'
  1175  007CCB  6F                 	db	111	;'o'
  1176  007CCC  72                 	db	114	;'r'
  1177  007CCD  69                 	db	105	;'i'
  1178  007CCE  61                 	db	97	;'a'
  1179  007CCF  20                 	db	32
  1180  007CD0  0D                 	db	13
  1181  007CD1  0A                 	db	10
  1182  007CD2  00                 	db	0
  1183  007CD3                     STR_37:
  1184  007CD3  0D                 	db	13
  1185  007CD4  0A                 	db	10
  1186  007CD5  54                 	db	84	;'T'
  1187  007CD6  20                 	db	32
  1188  007CD7  3D                 	db	61	;'='
  1189  007CD8  20                 	db	32
  1190  007CD9  4D                 	db	77	;'M'
  1191  007CDA  49                 	db	73	;'I'
  1192  007CDB  4E                 	db	78	;'N'
  1193  007CDC  55                 	db	85	;'U'
  1194  007CDD  54                 	db	84	;'T'
  1195  007CDE  4F                 	db	79	;'O'
  1196  007CDF  53                 	db	83	;'S'
  1197  007CE0  20                 	db	32
  1198  007CE1  51                 	db	81	;'Q'
  1199  007CE2  55                 	db	85	;'U'
  1200  007CE3  45                 	db	69	;'E'
  1201  007CE4  20                 	db	32
  1202  007CE5  44                 	db	68	;'D'
  1203  007CE6  55                 	db	85	;'U'
  1204  007CE7  52                 	db	82	;'R'
  1205  007CE8  41                 	db	65	;'A'
  1206  007CE9  52                 	db	82	;'R'
  1207  007CEA  41                 	db	65	;'A'
  1208  007CEB  20                 	db	32
  1209  007CEC  45                 	db	69	;'E'
  1210  007CED  4C                 	db	76	;'L'
  1211  007CEE  20                 	db	32
  1212  007CEF  52                 	db	82	;'R'
  1213  007CF0  49                 	db	73	;'I'
  1214  007CF1  45                 	db	69	;'E'
  1215  007CF2  47                 	db	71	;'G'
  1216  007CF3  4F                 	db	79	;'O'
  1217  007CF4  0D                 	db	13
  1218  007CF5  0A                 	db	10
  1219  007CF6  00                 	db	0
  1220  007CF7                     STR_27:
  1221  007CF7  0D                 	db	13
  1222  007CF8  0A                 	db	10
  1223  007CF9  20                 	db	32
  1224  007CFA  35                 	db	53	;'5'
  1225  007CFB  2E                 	db	46
  1226  007CFC  20                 	db	32
  1227  007CFD  4D                 	db	77	;'M'
  1228  007CFE  6F                 	db	111	;'o'
  1229  007CFF  73                 	db	115	;'s'
  1230  007D00  74                 	db	116	;'t'
  1231  007D01  72                 	db	114	;'r'
  1232  007D02  61                 	db	97	;'a'
  1233  007D03  72                 	db	114	;'r'
  1234  007D04  20                 	db	32
  1235  007D05  76                 	db	118	;'v'
  1236  007D06  61                 	db	97	;'a'
  1237  007D07  6C                 	db	108	;'l'
  1238  007D08  6F                 	db	111	;'o'
  1239  007D09  72                 	db	114	;'r'
  1240  007D0A  65                 	db	101	;'e'
  1241  007D0B  73                 	db	115	;'s'
  1242  007D0C  20                 	db	32
  1243  007D0D  73                 	db	115	;'s'
  1244  007D0E  65                 	db	101	;'e'
  1245  007D0F  6E                 	db	110	;'n'
  1246  007D10  73                 	db	115	;'s'
  1247  007D11  6F                 	db	111	;'o'
  1248  007D12  72                 	db	114	;'r'
  1249  007D13  65                 	db	101	;'e'
  1250  007D14  73                 	db	115	;'s'
  1251  007D15  20                 	db	32
  1252  007D16  0D                 	db	13
  1253  007D17  0A                 	db	10
  1254  007D18  00                 	db	0
  1255  007D19                     STR_33:
  1256  007D19  0D                 	db	13
  1257  007D1A  0A                 	db	10
  1258  007D1B  20                 	db	32
  1259  007D1C  48                 	db	72	;'H'
  1260  007D1D  4F                 	db	79	;'O'
  1261  007D1E  52                 	db	82	;'R'
  1262  007D1F  41                 	db	65	;'A'
  1263  007D20  52                 	db	82	;'R'
  1264  007D21  49                 	db	73	;'I'
  1265  007D22  4F                 	db	79	;'O'
  1266  007D23  53                 	db	83	;'S'
  1267  007D24  20                 	db	32
  1268  007D25  43                 	db	67	;'C'
  1269  007D26  41                 	db	65	;'A'
  1270  007D27  52                 	db	82	;'R'
  1271  007D28  47                 	db	71	;'G'
  1272  007D29  41                 	db	65	;'A'
  1273  007D2A  44                 	db	68	;'D'
  1274  007D2B  4F                 	db	79	;'O'
  1275  007D2C  53                 	db	83	;'S'
  1276  007D2D  20                 	db	32
  1277  007D2E  43                 	db	67	;'C'
  1278  007D2F  4F                 	db	79	;'O'
  1279  007D30  4E                 	db	78	;'N'
  1280  007D31  20                 	db	32
  1281  007D32  45                 	db	69	;'E'
  1282  007D33  58                 	db	88	;'X'
  1283  007D34  49                 	db	73	;'I'
  1284  007D35  54                 	db	84	;'T'
  1285  007D36  4F                 	db	79	;'O'
  1286  007D37  21                 	db	33
  1287  007D38  0D                 	db	13
  1288  007D39  0A                 	db	10
  1289  007D3A  00                 	db	0
  1290  007D3B                     STR_21:
  1291  007D3B  0D                 	db	13
  1292  007D3C  0A                 	db	10
  1293  007D3D  53                 	db	83	;'S'
  1294  007D3E  65                 	db	101	;'e'
  1295  007D3F  6E                 	db	110	;'n'
  1296  007D40  73                 	db	115	;'s'
  1297  007D41  6F                 	db	111	;'o'
  1298  007D42  72                 	db	114	;'r'
  1299  007D43  65                 	db	101	;'e'
  1300  007D44  73                 	db	115	;'s'
  1301  007D45  20                 	db	32
  1302  007D46  4C                 	db	76	;'L'
  1303  007D47  65                 	db	101	;'e'
  1304  007D48  69                 	db	105	;'i'
  1305  007D49  64                 	db	100	;'d'
  1306  007D4A  6F                 	db	111	;'o'
  1307  007D4B  73                 	db	115	;'s'
  1308  007D4C  20                 	db	32
  1309  007D4D  63                 	db	99	;'c'
  1310  007D4E  6F                 	db	111	;'o'
  1311  007D4F  6E                 	db	110	;'n'
  1312  007D50  20                 	db	32
  1313  007D51  45                 	db	69	;'E'
  1314  007D52  78                 	db	120	;'x'
  1315  007D53  69                 	db	105	;'i'
  1316  007D54  74                 	db	116	;'t'
  1317  007D55  6F                 	db	111	;'o'
  1318  007D56  21                 	db	33
  1319  007D57  0D                 	db	13
  1320  007D58  0A                 	db	10
  1321  007D59  0A                 	db	10
  1322  007D5A  00                 	db	0
  1323  007D5B                     STR_26:
  1324  007D5B  0D                 	db	13
  1325  007D5C  0A                 	db	10
  1326  007D5D  20                 	db	32
  1327  007D5E  34                 	db	52	;'4'
  1328  007D5F  2E                 	db	46
  1329  007D60  20                 	db	32
  1330  007D61  44                 	db	68	;'D'
  1331  007D62  61                 	db	97	;'a'
  1332  007D63  6D                 	db	109	;'m'
  1333  007D64  65                 	db	101	;'e'
  1334  007D65  20                 	db	32
  1335  007D66  64                 	db	100	;'d'
  1336  007D67  61                 	db	97	;'a'
  1337  007D68  74                 	db	116	;'t'
  1338  007D69  6F                 	db	111	;'o'
  1339  007D6A  73                 	db	115	;'s'
  1340  007D6B  20                 	db	32
  1341  007D6C  64                 	db	100	;'d'
  1342  007D6D  65                 	db	101	;'e'
  1343  007D6E  6C                 	db	108	;'l'
  1344  007D6F  20                 	db	32
  1345  007D70  73                 	db	115	;'s'
  1346  007D71  69                 	db	105	;'i'
  1347  007D72  73                 	db	115	;'s'
  1348  007D73  74                 	db	116	;'t'
  1349  007D74  65                 	db	101	;'e'
  1350  007D75  6D                 	db	109	;'m'
  1351  007D76  61                 	db	97	;'a'
  1352  007D77  20                 	db	32
  1353  007D78  0D                 	db	13
  1354  007D79  0A                 	db	10
  1355  007D7A  00                 	db	0
  1356  007D7B                     STR_49:
  1357  007D7B  0D                 	db	13
  1358  007D7C  0A                 	db	10
  1359  007D7D  0A                 	db	10
  1360  007D7E  4C                 	db	76	;'L'
  1361  007D7F  61                 	db	97	;'a'
  1362  007D80  20                 	db	32
  1363  007D81  48                 	db	72	;'H'
  1364  007D82  75                 	db	117	;'u'
  1365  007D83  6D                 	db	109	;'m'
  1366  007D84  65                 	db	101	;'e'
  1367  007D85  64                 	db	100	;'d'
  1368  007D86  61                 	db	97	;'a'
  1369  007D87  64                 	db	100	;'d'
  1370  007D88  20                 	db	32
  1371  007D89  41                 	db	65	;'A'
  1372  007D8A  6D                 	db	109	;'m'
  1373  007D8B  62                 	db	98	;'b'
  1374  007D8C  69                 	db	105	;'i'
  1375  007D8D  65                 	db	101	;'e'
  1376  007D8E  6E                 	db	110	;'n'
  1377  007D8F  74                 	db	116	;'t'
  1378  007D90  65                 	db	101	;'e'
  1379  007D91  20                 	db	32
  1380  007D92  65                 	db	101	;'e'
  1381  007D93  73                 	db	115	;'s'
  1382  007D94  3A                 	db	58	;':'
  1383  007D95  20                 	db	32
  1384  007D96  25                 	db	37
  1385  007D97  64                 	db	100	;'d'
  1386  007D98  0D                 	db	13
  1387  007D99  0A                 	db	10
  1388  007D9A  00                 	db	0
  1389  007D9B                     STR_5:
  1390  007D9B  0D                 	db	13
  1391  007D9C  0A                 	db	10
  1392  007D9D  20                 	db	32
  1393  007D9E  45                 	db	69	;'E'
  1394  007D9F  6E                 	db	110	;'n'
  1395  007DA0  76                 	db	118	;'v'
  1396  007DA1  69                 	db	105	;'i'
  1397  007DA2  65                 	db	101	;'e'
  1398  007DA3  20                 	db	32
  1399  007DA4  6C                 	db	108	;'l'
  1400  007DA5  6F                 	db	111	;'o'
  1401  007DA6  73                 	db	115	;'s'
  1402  007DA7  20                 	db	32
  1403  007DA8  4D                 	db	77	;'M'
  1404  007DA9  69                 	db	105	;'i'
  1405  007DAA  6E                 	db	110	;'n'
  1406  007DAB  75                 	db	117	;'u'
  1407  007DAC  74                 	db	116	;'t'
  1408  007DAD  6F                 	db	111	;'o'
  1409  007DAE  73                 	db	115	;'s'
  1410  007DAF  20                 	db	32
  1411  007DB0  45                 	db	69	;'E'
  1412  007DB1  6A                 	db	106	;'j'
  1413  007DB2  3A                 	db	58	;':'
  1414  007DB3  20                 	db	32
  1415  007DB4  32                 	db	50	;'2'
  1416  007DB5  35                 	db	53	;'5'
  1417  007DB6  20                 	db	32
  1418  007DB7  0D                 	db	13
  1419  007DB8  0A                 	db	10
  1420  007DB9  00                 	db	0
  1421  007DBA                     STR_50:
  1422  007DBA  0D                 	db	13
  1423  007DBB  0A                 	db	10
  1424  007DBC  0A                 	db	10
  1425  007DBD  4C                 	db	76	;'L'
  1426  007DBE  61                 	db	97	;'a'
  1427  007DBF  20                 	db	32
  1428  007DC0  54                 	db	84	;'T'
  1429  007DC1  65                 	db	101	;'e'
  1430  007DC2  6D                 	db	109	;'m'
  1431  007DC3  70                 	db	112	;'p'
  1432  007DC4  65                 	db	101	;'e'
  1433  007DC5  72                 	db	114	;'r'
  1434  007DC6  61                 	db	97	;'a'
  1435  007DC7  74                 	db	116	;'t'
  1436  007DC8  75                 	db	117	;'u'
  1437  007DC9  72                 	db	114	;'r'
  1438  007DCA  61                 	db	97	;'a'
  1439  007DCB  20                 	db	32
  1440  007DCC  65                 	db	101	;'e'
  1441  007DCD  73                 	db	115	;'s'
  1442  007DCE  3A                 	db	58	;':'
  1443  007DCF  20                 	db	32
  1444  007DD0  25                 	db	37
  1445  007DD1  64                 	db	100	;'d'
  1446  007DD2  20                 	db	32
  1447  007DD3  43                 	db	67	;'C'
  1448  007DD4  0D                 	db	13
  1449  007DD5  0A                 	db	10
  1450  007DD6  00                 	db	0
  1451  007DD7                     STR_36:
  1452  007DD7  0D                 	db	13
  1453  007DD8  0A                 	db	10
  1454  007DD9  52                 	db	82	;'R'
  1455  007DDA  20                 	db	32
  1456  007DDB  3D                 	db	61	;'='
  1457  007DDC  20                 	db	32
  1458  007DDD  52                 	db	82	;'R'
  1459  007DDE  45                 	db	69	;'E'
  1460  007DDF  47                 	db	71	;'G'
  1461  007DE0  41                 	db	65	;'A'
  1462  007DE1  52                 	db	82	;'R'
  1463  007DE2  28                 	db	40
  1464  007DE3  20                 	db	32
  1465  007DE4  31                 	db	49	;'1'
  1466  007DE5  20                 	db	32
  1467  007DE6  53                 	db	83	;'S'
  1468  007DE7  49                 	db	73	;'I'
  1469  007DE8  20                 	db	32
  1470  007DE9  7C                 	db	124
  1471  007DEA  20                 	db	32
  1472  007DEB  30                 	db	48	;'0'
  1473  007DEC  20                 	db	32
  1474  007DED  4E                 	db	78	;'N'
  1475  007DEE  4F                 	db	79	;'O'
  1476  007DEF  29                 	db	41
  1477  007DF0  0D                 	db	13
  1478  007DF1  0A                 	db	10
  1479  007DF2  00                 	db	0
  1480  007DF3                     STR_23:
  1481  007DF3  0D                 	db	13
  1482  007DF4  0A                 	db	10
  1483  007DF5  20                 	db	32
  1484  007DF6  31                 	db	49	;'1'
  1485  007DF7  2E                 	db	46
  1486  007DF8  20                 	db	32
  1487  007DF9  46                 	db	70	;'F'
  1488  007DFA  69                 	db	105	;'i'
  1489  007DFB  6A                 	db	106	;'j'
  1490  007DFC  61                 	db	97	;'a'
  1491  007DFD  72                 	db	114	;'r'
  1492  007DFE  20                 	db	32
  1493  007DFF  48                 	db	72	;'H'
  1494  007E00  6F                 	db	111	;'o'
  1495  007E01  72                 	db	114	;'r'
  1496  007E02  61                 	db	97	;'a'
  1497  007E03  20                 	db	32
  1498  007E04  41                 	db	65	;'A'
  1499  007E05  63                 	db	99	;'c'
  1500  007E06  74                 	db	116	;'t'
  1501  007E07  75                 	db	117	;'u'
  1502  007E08  61                 	db	97	;'a'
  1503  007E09  6C                 	db	108	;'l'
  1504  007E0A  20                 	db	32
  1505  007E0B  0D                 	db	13
  1506  007E0C  0A                 	db	10
  1507  007E0D  00                 	db	0
  1508  007E0E                     STR_44:
  1509  007E0E  0D                 	db	13
  1510  007E0F  0A                 	db	10
  1511  007E10  25                 	db	37
  1512  007E11  30                 	db	48	;'0'
  1513  007E12  2E                 	db	46
  1514  007E13  32                 	db	50	;'2'
  1515  007E14  64                 	db	100	;'d'
  1516  007E15  3A                 	db	58	;':'
  1517  007E16  25                 	db	37
  1518  007E17  30                 	db	48	;'0'
  1519  007E18  2E                 	db	46
  1520  007E19  32                 	db	50	;'2'
  1521  007E1A  64                 	db	100	;'d'
  1522  007E1B  7C                 	db	124
  1523  007E1C  20                 	db	32
  1524  007E1D  4D                 	db	77	;'M'
  1525  007E1E  49                 	db	73	;'I'
  1526  007E1F  45                 	db	69	;'E'
  1527  007E20  52                 	db	82	;'R'
  1528  007E21  43                 	db	67	;'C'
  1529  007E22  4F                 	db	79	;'O'
  1530  007E23  4C                 	db	76	;'L'
  1531  007E24  45                 	db	69	;'E'
  1532  007E25  53                 	db	83	;'S'
  1533  007E26  0D                 	db	13
  1534  007E27  0A                 	db	10
  1535  007E28  00                 	db	0
  1536  007E29                     STR_13:
  1537  007E29  0D                 	db	13
  1538  007E2A  0A                 	db	10
  1539  007E2B  20                 	db	32
  1540  007E2C  48                 	db	72	;'H'
  1541  007E2D  6F                 	db	111	;'o'
  1542  007E2E  72                 	db	114	;'r'
  1543  007E2F  61                 	db	97	;'a'
  1544  007E30  72                 	db	114	;'r'
  1545  007E31  69                 	db	105	;'i'
  1546  007E32  6F                 	db	111	;'o'
  1547  007E33  20                 	db	32
  1548  007E34  4D                 	db	77	;'M'
  1549  007E35  6F                 	db	111	;'o'
  1550  007E36  64                 	db	100	;'d'
  1551  007E37  69                 	db	105	;'i'
  1552  007E38  66                 	db	102	;'f'
  1553  007E39  69                 	db	105	;'i'
  1554  007E3A  63                 	db	99	;'c'
  1555  007E3B  61                 	db	97	;'a'
  1556  007E3C  64                 	db	100	;'d'
  1557  007E3D  6F                 	db	111	;'o'
  1558  007E3E  21                 	db	33
  1559  007E3F  20                 	db	32
  1560  007E40  0D                 	db	13
  1561  007E41  0A                 	db	10
  1562  007E42  00                 	db	0
  1563  007E43                     STR_29:
  1564  007E43  0D                 	db	13
  1565  007E44  0A                 	db	10
  1566  007E45  20                 	db	32
  1567  007E46  37                 	db	55	;'7'
  1568  007E47  2E                 	db	46
  1569  007E48  20                 	db	32
  1570  007E49  46                 	db	70	;'F'
  1571  007E4A  69                 	db	105	;'i'
  1572  007E4B  6A                 	db	106	;'j'
  1573  007E4C  61                 	db	97	;'a'
  1574  007E4D  72                 	db	114	;'r'
  1575  007E4E  20                 	db	32
  1576  007E4F  44                 	db	68	;'D'
  1577  007E50  69                 	db	105	;'i'
  1578  007E51  61                 	db	97	;'a'
  1579  007E52  20                 	db	32
  1580  007E53  41                 	db	65	;'A'
  1581  007E54  63                 	db	99	;'c'
  1582  007E55  74                 	db	116	;'t'
  1583  007E56  75                 	db	117	;'u'
  1584  007E57  61                 	db	97	;'a'
  1585  007E58  6C                 	db	108	;'l'
  1586  007E59  20                 	db	32
  1587  007E5A  0D                 	db	13
  1588  007E5B  0A                 	db	10
  1589  007E5C  00                 	db	0
  1590  007E5D                     STR_39:
  1591  007E5D  20                 	db	32
  1592  007E5E  20                 	db	32
  1593  007E5F  20                 	db	32
  1594  007E60  20                 	db	32
  1595  007E61  20                 	db	32
  1596  007E62  20                 	db	32
  1597  007E63  20                 	db	32
  1598  007E64  20                 	db	32
  1599  007E65  20                 	db	32
  1600  007E66  20                 	db	32
  1601  007E67  20                 	db	32
  1602  007E68  20                 	db	32
  1603  007E69  20                 	db	32
  1604  007E6A  20                 	db	32
  1605  007E6B  20                 	db	32
  1606  007E6C  20                 	db	32
  1607  007E6D  44                 	db	68	;'D'
  1608  007E6E  4C                 	db	76	;'L'
  1609  007E6F  4D                 	db	77	;'M'
  1610  007E70  49                 	db	73	;'I'
  1611  007E71  4A                 	db	74	;'J'
  1612  007E72  56                 	db	86	;'V'
  1613  007E73  53                 	db	83	;'S'
  1614  007E74  0D                 	db	13
  1615  007E75  0A                 	db	10
  1616  007E76  00                 	db	0
  1617  007E77                     STR_7:
  1618  007E77  0D                 	db	13
  1619  007E78  0A                 	db	10
  1620  007E79  20                 	db	32
  1621  007E7A  4F                 	db	79	;'O'
  1622  007E7B  50                 	db	80	;'P'
  1623  007E7C  43                 	db	67	;'C'
  1624  007E7D  49                 	db	73	;'I'
  1625  007E7E  4F                 	db	79	;'O'
  1626  007E7F  4E                 	db	78	;'N'
  1627  007E80  45                 	db	69	;'E'
  1628  007E81  53                 	db	83	;'S'
  1629  007E82  20                 	db	32
  1630  007E83  44                 	db	68	;'D'
  1631  007E84  45                 	db	69	;'E'
  1632  007E85  20                 	db	32
  1633  007E86  52                 	db	82	;'R'
  1634  007E87  45                 	db	69	;'E'
  1635  007E88  47                 	db	71	;'G'
  1636  007E89  41                 	db	65	;'A'
  1637  007E8A  44                 	db	68	;'D'
  1638  007E8B  4F                 	db	79	;'O'
  1639  007E8C  20                 	db	32
  1640  007E8D  0D                 	db	13
  1641  007E8E  0A                 	db	10
  1642  007E8F  00                 	db	0
  1643  007E90                     STR_48:
  1644  007E90  45                 	db	69	;'E'
  1645  007E91  72                 	db	114	;'r'
  1646  007E92  72                 	db	114	;'r'
  1647  007E93  6F                 	db	111	;'o'
  1648  007E94  72                 	db	114	;'r'
  1649  007E95  20                 	db	32
  1650  007E96  64                 	db	100	;'d'
  1651  007E97  65                 	db	101	;'e'
  1652  007E98  20                 	db	32
  1653  007E99  6C                 	db	108	;'l'
  1654  007E9A  65                 	db	101	;'e'
  1655  007E9B  63                 	db	99	;'c'
  1656  007E9C  74                 	db	116	;'t'
  1657  007E9D  75                 	db	117	;'u'
  1658  007E9E  72                 	db	114	;'r'
  1659  007E9F  61                 	db	97	;'a'
  1660  007EA0  20                 	db	32
  1661  007EA1  44                 	db	68	;'D'
  1662  007EA2  48                 	db	72	;'H'
  1663  007EA3  54                 	db	84	;'T'
  1664  007EA4  31                 	db	49	;'1'
  1665  007EA5  31                 	db	49	;'1'
  1666  007EA6  0D                 	db	13
  1667  007EA7  0A                 	db	10
  1668  007EA8  00                 	db	0
  1669  007EA9                     STR_41:
  1670  007EA9  0D                 	db	13
  1671  007EAA  0A                 	db	10
  1672  007EAB  25                 	db	37
  1673  007EAC  30                 	db	48	;'0'
  1674  007EAD  2E                 	db	46
  1675  007EAE  32                 	db	50	;'2'
  1676  007EAF  64                 	db	100	;'d'
  1677  007EB0  3A                 	db	58	;':'
  1678  007EB1  25                 	db	37
  1679  007EB2  30                 	db	48	;'0'
  1680  007EB3  2E                 	db	46
  1681  007EB4  32                 	db	50	;'2'
  1682  007EB5  64                 	db	100	;'d'
  1683  007EB6  7C                 	db	124
  1684  007EB7  20                 	db	32
  1685  007EB8  44                 	db	68	;'D'
  1686  007EB9  4F                 	db	79	;'O'
  1687  007EBA  4D                 	db	77	;'M'
  1688  007EBB  49                 	db	73	;'I'
  1689  007EBC  4E                 	db	78	;'N'
  1690  007EBD  47                 	db	71	;'G'
  1691  007EBE  4F                 	db	79	;'O'
  1692  007EBF  0D                 	db	13
  1693  007EC0  0A                 	db	10
  1694  007EC1  00                 	db	0
  1695  007EC2                     STR_46:
  1696  007EC2  0D                 	db	13
  1697  007EC3  0A                 	db	10
  1698  007EC4  25                 	db	37
  1699  007EC5  30                 	db	48	;'0'
  1700  007EC6  2E                 	db	46
  1701  007EC7  32                 	db	50	;'2'
  1702  007EC8  64                 	db	100	;'d'
  1703  007EC9  3A                 	db	58	;':'
  1704  007ECA  25                 	db	37
  1705  007ECB  30                 	db	48	;'0'
  1706  007ECC  2E                 	db	46
  1707  007ECD  32                 	db	50	;'2'
  1708  007ECE  64                 	db	100	;'d'
  1709  007ECF  7C                 	db	124
  1710  007ED0  20                 	db	32
  1711  007ED1  56                 	db	86	;'V'
  1712  007ED2  49                 	db	73	;'I'
  1713  007ED3  45                 	db	69	;'E'
  1714  007ED4  52                 	db	82	;'R'
  1715  007ED5  4E                 	db	78	;'N'
  1716  007ED6  45                 	db	69	;'E'
  1717  007ED7  53                 	db	83	;'S'
  1718  007ED8  0D                 	db	13
  1719  007ED9  0A                 	db	10
  1720  007EDA  00                 	db	0
  1721  007EDB                     STR_47:
  1722  007EDB  0D                 	db	13
  1723  007EDC  0A                 	db	10
  1724  007EDD  25                 	db	37
  1725  007EDE  30                 	db	48	;'0'
  1726  007EDF  2E                 	db	46
  1727  007EE0  32                 	db	50	;'2'
  1728  007EE1  64                 	db	100	;'d'
  1729  007EE2  3A                 	db	58	;':'
  1730  007EE3  25                 	db	37
  1731  007EE4  30                 	db	48	;'0'
  1732  007EE5  2E                 	db	46
  1733  007EE6  32                 	db	50	;'2'
  1734  007EE7  64                 	db	100	;'d'
  1735  007EE8  7C                 	db	124
  1736  007EE9  20                 	db	32
  1737  007EEA  53                 	db	83	;'S'
  1738  007EEB  41                 	db	65	;'A'
  1739  007EEC  42                 	db	66	;'B'
  1740  007EED  41                 	db	65	;'A'
  1741  007EEE  44                 	db	68	;'D'
  1742  007EEF  4F                 	db	79	;'O'
  1743  007EF0  0D                 	db	13
  1744  007EF1  0A                 	db	10
  1745  007EF2  00                 	db	0
  1746  007EF3                     STR_43:
  1747  007EF3  0D                 	db	13
  1748  007EF4  0A                 	db	10
  1749  007EF5  25                 	db	37
  1750  007EF6  30                 	db	48	;'0'
  1751  007EF7  2E                 	db	46
  1752  007EF8  32                 	db	50	;'2'
  1753  007EF9  64                 	db	100	;'d'
  1754  007EFA  3A                 	db	58	;':'
  1755  007EFB  25                 	db	37
  1756  007EFC  30                 	db	48	;'0'
  1757  007EFD  2E                 	db	46
  1758  007EFE  32                 	db	50	;'2'
  1759  007EFF  64                 	db	100	;'d'
  1760  007F00  7C                 	db	124
  1761  007F01  20                 	db	32
  1762  007F02  4D                 	db	77	;'M'
  1763  007F03  41                 	db	65	;'A'
  1764  007F04  52                 	db	82	;'R'
  1765  007F05  54                 	db	84	;'T'
  1766  007F06  45                 	db	69	;'E'
  1767  007F07  53                 	db	83	;'S'
  1768  007F08  0D                 	db	13
  1769  007F09  0A                 	db	10
  1770  007F0A  00                 	db	0
  1771  007F0B                     STR_45:
  1772  007F0B  0D                 	db	13
  1773  007F0C  0A                 	db	10
  1774  007F0D  25                 	db	37
  1775  007F0E  30                 	db	48	;'0'
  1776  007F0F  2E                 	db	46
  1777  007F10  32                 	db	50	;'2'
  1778  007F11  64                 	db	100	;'d'
  1779  007F12  3A                 	db	58	;':'
  1780  007F13  25                 	db	37
  1781  007F14  30                 	db	48	;'0'
  1782  007F15  2E                 	db	46
  1783  007F16  32                 	db	50	;'2'
  1784  007F17  64                 	db	100	;'d'
  1785  007F18  7C                 	db	124
  1786  007F19  20                 	db	32
  1787  007F1A  4A                 	db	74	;'J'
  1788  007F1B  55                 	db	85	;'U'
  1789  007F1C  45                 	db	69	;'E'
  1790  007F1D  56                 	db	86	;'V'
  1791  007F1E  45                 	db	69	;'E'
  1792  007F1F  53                 	db	83	;'S'
  1793  007F20  0D                 	db	13
  1794  007F21  0A                 	db	10
  1795  007F22  00                 	db	0
  1796  007F23                     STR_40:
  1797  007F23  48                 	db	72	;'H'
  1798  007F24  3A                 	db	58	;':'
  1799  007F25  25                 	db	37
  1800  007F26  32                 	db	50	;'2'
  1801  007F27  64                 	db	100	;'d'
  1802  007F28  7C                 	db	124
  1803  007F29  52                 	db	82	;'R'
  1804  007F2A  3A                 	db	58	;':'
  1805  007F2B  25                 	db	37
  1806  007F2C  64                 	db	100	;'d'
  1807  007F2D  7C                 	db	124
  1808  007F2E  54                 	db	84	;'T'
  1809  007F2F  3A                 	db	58	;':'
  1810  007F30  25                 	db	37
  1811  007F31  32                 	db	50	;'2'
  1812  007F32  64                 	db	100	;'d'
  1813  007F33  7C                 	db	124
  1814  007F34  44                 	db	68	;'D'
  1815  007F35  3A                 	db	58	;':'
  1816  007F36  25                 	db	37
  1817  007F37  73                 	db	115	;'s'
  1818  007F38  0D                 	db	13
  1819  007F39  0A                 	db	10
  1820  007F3A  00                 	db	0
  1821  007F3B                     STR_15:
  1822  007F3B  0D                 	db	13
  1823  007F3C  0A                 	db	10
  1824  007F3D  20                 	db	32
  1825  007F3E  54                 	db	84	;'T'
  1826  007F3F  49                 	db	73	;'I'
  1827  007F40  45                 	db	69	;'E'
  1828  007F41  4D                 	db	77	;'M'
  1829  007F42  50                 	db	80	;'P'
  1830  007F43  4F                 	db	79	;'O'
  1831  007F44  20                 	db	32
  1832  007F45  44                 	db	68	;'D'
  1833  007F46  45                 	db	69	;'E'
  1834  007F47  20                 	db	32
  1835  007F48  52                 	db	82	;'R'
  1836  007F49  45                 	db	69	;'E'
  1837  007F4A  47                 	db	71	;'G'
  1838  007F4B  41                 	db	65	;'A'
  1839  007F4C  44                 	db	68	;'D'
  1840  007F4D  4F                 	db	79	;'O'
  1841  007F4E  20                 	db	32
  1842  007F4F  0D                 	db	13
  1843  007F50  0A                 	db	10
  1844  007F51  00                 	db	0
  1845  007F52                     STR_28:
  1846  007F52  0D                 	db	13
  1847  007F53  0A                 	db	10
  1848  007F54  20                 	db	32
  1849  007F55  36                 	db	54	;'6'
  1850  007F56  2E                 	db	46
  1851  007F57  20                 	db	32
  1852  007F58  52                 	db	82	;'R'
  1853  007F59  65                 	db	101	;'e'
  1854  007F5A  67                 	db	103	;'g'
  1855  007F5B  61                 	db	97	;'a'
  1856  007F5C  64                 	db	100	;'d'
  1857  007F5D  6F                 	db	111	;'o'
  1858  007F5E  20                 	db	32
  1859  007F5F  72                 	db	114	;'r'
  1860  007F60  61                 	db	97	;'a'
  1861  007F61  70                 	db	112	;'p'
  1862  007F62  69                 	db	105	;'i'
  1863  007F63  64                 	db	100	;'d'
  1864  007F64  6F                 	db	111	;'o'
  1865  007F65  20                 	db	32
  1866  007F66  0D                 	db	13
  1867  007F67  0A                 	db	10
  1868  007F68  00                 	db	0
  1869  007F69                     STR_42:
  1870  007F69  0D                 	db	13
  1871  007F6A  0A                 	db	10
  1872  007F6B  25                 	db	37
  1873  007F6C  30                 	db	48	;'0'
  1874  007F6D  2E                 	db	46
  1875  007F6E  32                 	db	50	;'2'
  1876  007F6F  64                 	db	100	;'d'
  1877  007F70  3A                 	db	58	;':'
  1878  007F71  25                 	db	37
  1879  007F72  30                 	db	48	;'0'
  1880  007F73  2E                 	db	46
  1881  007F74  32                 	db	50	;'2'
  1882  007F75  64                 	db	100	;'d'
  1883  007F76  7C                 	db	124
  1884  007F77  20                 	db	32
  1885  007F78  4C                 	db	76	;'L'
  1886  007F79  55                 	db	85	;'U'
  1887  007F7A  4E                 	db	78	;'N'
  1888  007F7B  45                 	db	69	;'E'
  1889  007F7C  53                 	db	83	;'S'
  1890  007F7D  0D                 	db	13
  1891  007F7E  0A                 	db	10
  1892  007F7F  00                 	db	0
  1893  007F80                     STR_59:
  1894  007F80  0D                 	db	13
  1895  007F81  0A                 	db	10
  1896  007F82  20                 	db	32
  1897  007F83  52                 	db	82	;'R'
  1898  007F84  45                 	db	69	;'E'
  1899  007F85  47                 	db	71	;'G'
  1900  007F86  41                 	db	65	;'A'
  1901  007F87  44                 	db	68	;'D'
  1902  007F88  4F                 	db	79	;'O'
  1903  007F89  20                 	db	32
  1904  007F8A  52                 	db	82	;'R'
  1905  007F8B  41                 	db	65	;'A'
  1906  007F8C  50                 	db	80	;'P'
  1907  007F8D  49                 	db	73	;'I'
  1908  007F8E  44                 	db	68	;'D'
  1909  007F8F  4F                 	db	79	;'O'
  1910  007F90  20                 	db	32
  1911  007F91  0D                 	db	13
  1912  007F92  0A                 	db	10
  1913  007F93  00                 	db	0
  1914  007F94                     STR_58:
  1915  007F94  0A                 	db	10
  1916  007F95  46                 	db	70	;'F'
  1917  007F96  41                 	db	65	;'A'
  1918  007F97  4C                 	db	76	;'L'
  1919  007F98  4C                 	db	76	;'L'
  1920  007F99  4F                 	db	79	;'O'
  1921  007F9A  20                 	db	32
  1922  007F9B  45                 	db	69	;'E'
  1923  007F9C  4C                 	db	76	;'L'
  1924  007F9D  20                 	db	32
  1925  007F9E  53                 	db	83	;'S'
  1926  007F9F  45                 	db	69	;'E'
  1927  007FA0  54                 	db	84	;'T'
  1928  007FA1  45                 	db	69	;'E'
  1929  007FA2  4F                 	db	79	;'O'
  1930  007FA3  0D                 	db	13
  1931  007FA4  0A                 	db	10
  1932  007FA5  00                 	db	0
  1933  007FA6  41                 	db	65	;'A'
  1934  007FA7  54                 	db	84	;'T'
  1935  007FA8  2B                 	db	43
  1936  007FA9  4E                 	db	78	;'N'
  1937  007FAA  41                 	db	65	;'A'
  1938  007FAB  4D                 	db	77	;'M'
  1939  007FAC  45                 	db	69	;'E'
  1940  007FAD  53                 	db	83	;'S'
  1941  007FAE  4D                 	db	77	;'M'
  1942  007FAF  41                 	db	65	;'A'
  1943  007FB0  52                 	db	82	;'R'
  1944  007FB1  54                 	db	84	;'T'
  1945  007FB2  48                 	db	72	;'H'
  1946  007FB3  4F                 	db	79	;'O'
  1947  007FB4  4D                 	db	77	;'M'
  1948  007FB5  45                 	db	69	;'E'
  1949  007FB6  00                 	db	0
  1950  007FB7                     STR_3:
  1951  007FB7  0D                 	db	13
  1952  007FB8  0A                 	db	10
  1953  007FB9  20                 	db	32
  1954  007FBA  46                 	db	70	;'F'
  1955  007FBB  49                 	db	73	;'I'
  1956  007FBC  4A                 	db	74	;'J'
  1957  007FBD  41                 	db	65	;'A'
  1958  007FBE  20                 	db	32
  1959  007FBF  48                 	db	72	;'H'
  1960  007FC0  4F                 	db	79	;'O'
  1961  007FC1  52                 	db	82	;'R'
  1962  007FC2  41                 	db	65	;'A'
  1963  007FC3  20                 	db	32
  1964  007FC4  0D                 	db	13
  1965  007FC5  0A                 	db	10
  1966  007FC6  00                 	db	0
  1967  007FC7                     STR_31:
  1968  007FC7  0D                 	db	13
  1969  007FC8  0A                 	db	10
  1970  007FC9  20                 	db	32
  1971  007FCA  4F                 	db	79	;'O'
  1972  007FCB  70                 	db	112	;'p'
  1973  007FCC  63                 	db	99	;'c'
  1974  007FCD  69                 	db	105	;'i'
  1975  007FCE  6F                 	db	111	;'o'
  1976  007FCF  6E                 	db	110	;'n'
  1977  007FD0  3A                 	db	58	;':'
  1978  007FD1  20                 	db	32
  1979  007FD2  20                 	db	32
  1980  007FD3  0D                 	db	13
  1981  007FD4  00                 	db	0
  1982  007FD5                     STR_35:
  1983  007FD5  0D                 	db	13
  1984  007FD6  0A                 	db	10
  1985  007FD7  48                 	db	72	;'H'
  1986  007FD8  20                 	db	32
  1987  007FD9  3D                 	db	61	;'='
  1988  007FDA  20                 	db	32
  1989  007FDB  48                 	db	72	;'H'
  1990  007FDC  4F                 	db	79	;'O'
  1991  007FDD  52                 	db	82	;'R'
  1992  007FDE  41                 	db	65	;'A'
  1993  007FDF  0D                 	db	13
  1994  007FE0  0A                 	db	10
  1995  007FE1  00                 	db	0
  1996  007FE2  41                 	db	65	;'A'
  1997  007FE3  54                 	db	84	;'T'
  1998  007FE4  2B                 	db	43
  1999  007FE5  50                 	db	80	;'P'
  2000  007FE6  49                 	db	73	;'I'
  2001  007FE7  4E                 	db	78	;'N'
  2002  007FE8  32                 	db	50	;'2'
  2003  007FE9  35                 	db	53	;'5'
  2004  007FEA  30                 	db	48	;'0'
  2005  007FEB  31                 	db	49	;'1'
  2006  007FEC  00                 	db	0
  2007  007FED                     STR_12:
  2008  007FED  0D                 	db	13
  2009  007FEE  0A                 	db	10
  2010  007FEF  5B                 	db	91	;'['
  2011  007FF0  25                 	db	37
  2012  007FF1  64                 	db	100	;'d'
  2013  007FF2  5D                 	db	93	;']'
  2014  007FF3  3A                 	db	58	;':'
  2015  007FF4  20                 	db	32
  2016  007FF5  00                 	db	0
  2017  007FF6  41                 	db	65	;'A'
  2018  007FF7  54                 	db	84	;'T'
  2019  007FF8  2B                 	db	43
  2020  007FF9  42                 	db	66	;'B'
  2021  007FFA  41                 	db	65	;'A'
  2022  007FFB  55                 	db	85	;'U'
  2023  007FFC  44                 	db	68	;'D'
  2024  007FFD  34                 	db	52	;'4'
  2025  007FFE  00                 	db	0
  2026  0000                     
  2027                           ; #config settings
  2028  007FFF  00                 	db	0	; dummy byte at the end
  2029  0000                     
  2030                           	psect	cinit
  2031  002D12                     __pcinit:
  2032                           	opt callstack 0
  2033  002D12                     start_initialization:
  2034                           	opt callstack 0
  2035  002D12                     __initialization:
  2036                           	opt callstack 0
  2037                           
  2038                           ; Initialize objects allocated to BANK0 (11 bytes)
  2039                           ; load TBLPTR registers with __pidataBANK0
  2040  002D12  0EF8               	movlw	low __pidataBANK0
  2041  002D14  6EF6               	movwf	tblptrl,c
  2042  002D16  0E32               	movlw	high __pidataBANK0
  2043  002D18  6EF7               	movwf	tblptrh,c
  2044  002D1A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2045  002D1C  6EF8               	movwf	tblptru,c
  2046  002D1E  EE00  F0F4         	lfsr	0,__pdataBANK0
  2047  002D22  EE10 F00B          	lfsr	1,11
  2048  002D26                     copy_data0:
  2049  002D26  0009               	tblrd		*+
  2050  002D28  CFF5 FFEE          	movff	tablat,postinc0
  2051  002D2C  50E5               	movf	postdec1,w,c
  2052  002D2E  50E1               	movf	fsr1l,w,c
  2053  002D30  E1FA               	bnz	copy_data0
  2054                           
  2055                           ; Clear objects allocated to BIGRAM (288 bytes)
  2056  002D32  EE01  F032         	lfsr	0,__pbssBIGRAM
  2057  002D36  EE11 F020          	lfsr	1,288
  2058  002D3A                     clear_0:
  2059  002D3A  6AEE               	clrf	postinc0,c
  2060  002D3C  50E5               	movf	postdec1,w,c
  2061  002D3E  50E1               	movf	fsr1l,w,c
  2062  002D40  E1FC               	bnz	clear_0
  2063  002D42  50E2               	movf	fsr1h,w,c
  2064  002D44  E1FA               	bnz	clear_0
  2065                           
  2066                           ; Clear objects allocated to BANK1 (50 bytes)
  2067  002D46  EE01  F000         	lfsr	0,__pbssBANK1
  2068  002D4A  0E32               	movlw	50
  2069  002D4C                     clear_1:
  2070  002D4C  6AEE               	clrf	postinc0,c
  2071  002D4E  06E8               	decf	wreg,f,c
  2072  002D50  E1FD               	bnz	clear_1
  2073                           
  2074                           ; Clear objects allocated to BANK0 (77 bytes)
  2075  002D52  EE00  F060         	lfsr	0,__pbssBANK0
  2076  002D56  0E4D               	movlw	77
  2077  002D58                     clear_2:
  2078  002D58  6AEE               	clrf	postinc0,c
  2079  002D5A  06E8               	decf	wreg,f,c
  2080  002D5C  E1FD               	bnz	clear_2
  2081  002D5E                     end_of_initialization:
  2082                           	opt callstack 0
  2083  002D5E                     __end_of__initialization:
  2084                           	opt callstack 0
  2085  002D5E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2086  002D60  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2087  002D62  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2088  002D64  6EF8               	movwf	tblptru,c
  2089  002D66  0100               	movlb	0
  2090  002D68  EF9B  F013         	goto	_main	;jump to C main() function
  2091                           
  2092                           	psect	bssBANK0
  2093  000060                     __pbssBANK0:
  2094                           	opt callstack 0
  2095  000060                     _sensores:
  2096                           	opt callstack 0
  2097  000060                     	ds	16
  2098  000070                     _nout:
  2099                           	opt callstack 0
  2100  000070                     	ds	2
  2101  000072                     _width:
  2102                           	opt callstack 0
  2103  000072                     	ds	2
  2104  000074                     _prec:
  2105                           	opt callstack 0
  2106  000074                     	ds	2
  2107  000076                     _flags:
  2108                           	opt callstack 0
  2109  000076                     	ds	2
  2110  000078                     _contInterrupciones:
  2111                           	opt callstack 0
  2112  000078                     	ds	2
  2113  00007A                     _peticionLecturaSensores:
  2114                           	opt callstack 0
  2115  00007A                     	ds	1
  2116  00007B                     _regando:
  2117                           	opt callstack 0
  2118  00007B                     	ds	1
  2119  00007C                     _minutosTranscurridos:
  2120                           	opt callstack 0
  2121  00007C                     	ds	1
  2122  00007D                     _minutosRegar:
  2123                           	opt callstack 0
  2124  00007D                     	ds	1
  2125  00007E                     _Humedad:
  2126                           	opt callstack 0
  2127  00007E                     	ds	1
  2128  00007F                     _Temperatura:
  2129                           	opt callstack 0
  2130  00007F                     	ds	1
  2131  000080                     _flagRegado:
  2132                           	opt callstack 0
  2133  000080                     	ds	1
  2134  000081                     _tempHora:
  2135                           	opt callstack 0
  2136  000081                     	ds	1
  2137  000082                     _overflowTimer:
  2138                           	opt callstack 0
  2139  000082                     	ds	1
  2140  000083                     _datoRecibido:
  2141                           	opt callstack 0
  2142  000083                     	ds	1
  2143  000084                     _diaActual:
  2144                           	opt callstack 0
  2145  000084                     	ds	1
  2146  000085                     _segundos:
  2147                           	opt callstack 0
  2148  000085                     	ds	1
  2149  000086                     _minutos:
  2150                           	opt callstack 0
  2151  000086                     	ds	1
  2152  000087                     _hora:
  2153                           	opt callstack 0
  2154  000087                     	ds	1
  2155  000088                     _MODO_COMUNICACION:
  2156                           	opt callstack 0
  2157  000088                     	ds	1
  2158  000089                     _esperandoDatos:
  2159                           	opt callstack 0
  2160  000089                     	ds	1
  2161  00008A                     _esperaDatoConcluida:
  2162                           	opt callstack 0
  2163  00008A                     	ds	1
  2164  00008B                     _byteUart:
  2165                           	opt callstack 0
  2166  00008B                     	ds	1
  2167  00008C                     _tiempoInactividadTrans:
  2168                           	opt callstack 0
  2169  00008C                     	ds	1
  2170  00008D                     _dbuf:
  2171                           	opt callstack 0
  2172  00008D                     	ds	32
  2173                           
  2174                           	psect	dataBANK0
  2175  0000F4                     __pdataBANK0:
  2176                           	opt callstack 0
  2177  0000F4                     stoa@F1144:
  2178                           	opt callstack 0
  2179  0000F4                     	ds	7
  2180  0000FB                     _VALOR_TIMER0:
  2181                           	opt callstack 0
  2182  0000FB                     	ds	2
  2183  0000FD                     _VALOR_TIMER0UART:
  2184                           	opt callstack 0
  2185  0000FD                     	ds	2
  2186                           
  2187                           	psect	bssBANK1
  2188  000100                     __pbssBANK1:
  2189                           	opt callstack 0
  2190  000100                     _buffer:
  2191                           	opt callstack 0
  2192  000100                     	ds	50
  2193                           
  2194                           	psect	bssBIGRAM
  2195  000132                     __pbssBIGRAM:
  2196                           	opt callstack 0
  2197  000132                     _horarios:
  2198                           	opt callstack 0
  2199  000132                     	ds	288
  2200                           
  2201                           	psect	cstackBANK0
  2202  0000AD                     __pcstackBANK0:
  2203                           	opt callstack 0
  2204  0000AD                     ?_vfprintf:
  2205                           	opt callstack 0
  2206  0000AD                     vfprintf@fp:
  2207                           	opt callstack 0
  2208                           
  2209                           ; 2 bytes @ 0x0
  2210  0000AD                     	ds	2
  2211  0000AF                     vfprintf@fmt:
  2212                           	opt callstack 0
  2213                           
  2214                           ; 2 bytes @ 0x2
  2215  0000AF                     	ds	2
  2216  0000B1                     vfprintf@ap:
  2217                           	opt callstack 0
  2218                           
  2219                           ; 2 bytes @ 0x4
  2220  0000B1                     	ds	2
  2221  0000B3                     ?_sprintf:
  2222                           	opt callstack 0
  2223  0000B3                     sprintf@s:
  2224                           	opt callstack 0
  2225                           
  2226                           ; 2 bytes @ 0x6
  2227  0000B3                     	ds	2
  2228  0000B5                     sprintf@fmt:
  2229                           	opt callstack 0
  2230                           
  2231                           ; 2 bytes @ 0x8
  2232  0000B5                     	ds	12
  2233  0000C1                     sprintf@ap:
  2234                           	opt callstack 0
  2235                           
  2236                           ; 2 bytes @ 0x14
  2237  0000C1                     	ds	2
  2238  0000C3                     sprintf@f:
  2239                           	opt callstack 0
  2240                           
  2241                           ; 6 bytes @ 0x16
  2242  0000C3                     	ds	6
  2243  0000C9                     asignarHorarios@diaRegar:
  2244                           	opt callstack 0
  2245  0000C9                     lecturaWifi@Rx:
  2246                           	opt callstack 0
  2247  0000C9                     mostrarDatosSensores@i:
  2248                           	opt callstack 0
  2249  0000C9                     dameDatosSistema@bufferHorario:
  2250                           	opt callstack 0
  2251                           
  2252                           ; 30 bytes @ 0x1C
  2253  0000C9                     	ds	1
  2254  0000CA                     lecturaWifi@humedadMedida:
  2255                           	opt callstack 0
  2256  0000CA                     asignarHorarios@i:
  2257                           	opt callstack 0
  2258                           
  2259                           ; 2 bytes @ 0x1D
  2260  0000CA                     	ds	1
  2261  0000CB                     lecturaWifi@i:
  2262                           	opt callstack 0
  2263                           
  2264                           ; 2 bytes @ 0x1E
  2265  0000CB                     	ds	1
  2266  0000CC                     asignarHorarios@hora:
  2267                           	opt callstack 0
  2268                           
  2269                           ; 1 bytes @ 0x1F
  2270  0000CC                     	ds	1
  2271  0000CD                     asignarHorarios@Rx:
  2272                           	opt callstack 0
  2273  0000CD                     mostrarDatosSensoresWIFI@i:
  2274                           	opt callstack 0
  2275                           
  2276                           ; 2 bytes @ 0x20
  2277  0000CD                     	ds	26
  2278  0000E7                     _dameDatosSistema$1923:
  2279                           	opt callstack 0
  2280                           
  2281                           ; 2 bytes @ 0x3A
  2282  0000E7                     	ds	2
  2283  0000E9                     _dameDatosSistema$1924:
  2284                           	opt callstack 0
  2285                           
  2286                           ; 2 bytes @ 0x3C
  2287  0000E9                     	ds	2
  2288  0000EB                     _dameDatosSistema$1925:
  2289                           	opt callstack 0
  2290                           
  2291                           ; 2 bytes @ 0x3E
  2292  0000EB                     	ds	2
  2293  0000ED                     _dameDatosSistema$1926:
  2294                           	opt callstack 0
  2295                           
  2296                           ; 2 bytes @ 0x40
  2297  0000ED                     	ds	2
  2298  0000EF                     dameDatosSistema@i:
  2299                           	opt callstack 0
  2300                           
  2301                           ; 2 bytes @ 0x42
  2302  0000EF                     	ds	2
  2303  0000F1                     ??_sistemaPrincipal:
  2304                           
  2305                           ; 1 bytes @ 0x44
  2306  0000F1                     	ds	2
  2307  0000F3                     sistemaPrincipal@opcion:
  2308                           	opt callstack 0
  2309                           
  2310                           ; 1 bytes @ 0x46
  2311  0000F3                     	ds	1
  2312                           
  2313                           	psect	cstackCOMRAM
  2314  000001                     __pcstackCOMRAM:
  2315                           	opt callstack 0
  2316  000001                     ??_i2c_espera:
  2317  000001                     ??_convertirDato:
  2318  000001                     ??_DHT11_Start:
  2319  000001                     ?_strlen:
  2320                           	opt callstack 0
  2321  000001                     ?_isdigit:
  2322                           	opt callstack 0
  2323  000001                     ?_isspace:
  2324                           	opt callstack 0
  2325  000001                     ?_horaRegar:
  2326                           	opt callstack 0
  2327  000001                     ?_dameHumedadSuelo:
  2328                           	opt callstack 0
  2329  000001                     ?___wmul:
  2330                           	opt callstack 0
  2331  000001                     ?___awdiv:
  2332                           	opt callstack 0
  2333  000001                     ?___awmod:
  2334                           	opt callstack 0
  2335  000001                     ?___lmul:
  2336                           	opt callstack 0
  2337  000001                     ?___aodiv:
  2338                           	opt callstack 0
  2339  000001                     ?___aomod:
  2340                           	opt callstack 0
  2341  000001                     UART_write@dato:
  2342                           	opt callstack 0
  2343  000001                     DHT11_ReadData@i:
  2344                           	opt callstack 0
  2345  000001                     check_response@respuesta:
  2346                           	opt callstack 0
  2347  000001                     constructorSensor@s:
  2348                           	opt callstack 0
  2349  000001                     limpiarBuffer@i:
  2350                           	opt callstack 0
  2351  000001                     ___wmul@multiplier:
  2352                           	opt callstack 0
  2353  000001                     ___awdiv@dividend:
  2354                           	opt callstack 0
  2355  000001                     ___awmod@dividend:
  2356                           	opt callstack 0
  2357  000001                     isdigit@c:
  2358                           	opt callstack 0
  2359  000001                     isspace@c:
  2360                           	opt callstack 0
  2361  000001                     fputc@c:
  2362                           	opt callstack 0
  2363  000001                     strlen@s:
  2364                           	opt callstack 0
  2365  000001                     ___lmul@multiplier:
  2366                           	opt callstack 0
  2367  000001                     ___aodiv@dividend:
  2368                           	opt callstack 0
  2369  000001                     ___aomod@dividend:
  2370                           	opt callstack 0
  2371                           
  2372                           ; 8 bytes @ 0x0
  2373  000001                     	ds	1
  2374  000002                     i2c_envia_dato@dato:
  2375                           	opt callstack 0
  2376  000002                     i2c_recibe_dato@datoleido:
  2377                           	opt callstack 0
  2378  000002                     convertirDato@dato:
  2379                           	opt callstack 0
  2380  000002                     DHT11_ReadData@data:
  2381                           	opt callstack 0
  2382  000002                     UART_printf@cadena:
  2383                           	opt callstack 0
  2384                           
  2385                           ; 2 bytes @ 0x1
  2386  000002                     	ds	1
  2387  000003                     ??_isdigit:
  2388  000003                     ??_isspace:
  2389  000003                     ??_horaRegar:
  2390  000003                     ??_dameHumedadSuelo:
  2391  000003                     escribe_rtc@dato:
  2392                           	opt callstack 0
  2393  000003                     leer_rtc@direccion:
  2394                           	opt callstack 0
  2395  000003                     convertirDato@datoR:
  2396                           	opt callstack 0
  2397  000003                     constructorSensor@porcientoHumedad:
  2398                           	opt callstack 0
  2399  000003                     leer_eeprom@direccion:
  2400                           	opt callstack 0
  2401  000003                     ___wmul@multiplicand:
  2402                           	opt callstack 0
  2403  000003                     ___awdiv@divisor:
  2404                           	opt callstack 0
  2405  000003                     ___awmod@divisor:
  2406                           	opt callstack 0
  2407  000003                     fputc@fp:
  2408                           	opt callstack 0
  2409  000003                     strlen@a:
  2410                           	opt callstack 0
  2411                           
  2412                           ; 2 bytes @ 0x2
  2413  000003                     	ds	1
  2414  000004                     ??_dameTemperaturaHumedad:
  2415  000004                     escribe_rtc@direccion:
  2416                           	opt callstack 0
  2417  000004                     leer_rtc@dato:
  2418                           	opt callstack 0
  2419  000004                     constructorSensor@pin:
  2420                           	opt callstack 0
  2421  000004                     getValue@numCharacters:
  2422                           	opt callstack 0
  2423                           
  2424                           ; 2 bytes @ 0x3
  2425  000004                     	ds	1
  2426  000005                     ??_fputc:
  2427  000005                     ??_leer_eeprom:
  2428  000005                     dameHumedadSuelo@canalLeer:
  2429                           	opt callstack 0
  2430  000005                     ___awdiv@counter:
  2431                           	opt callstack 0
  2432  000005                     ___awmod@counter:
  2433                           	opt callstack 0
  2434  000005                     restablecerDatosSensor@i:
  2435                           	opt callstack 0
  2436  000005                     ___wmul@product:
  2437                           	opt callstack 0
  2438  000005                     ___lmul@multiplicand:
  2439                           	opt callstack 0
  2440                           
  2441                           ; 4 bytes @ 0x4
  2442  000005                     	ds	1
  2443  000006                     ??_getValue:
  2444  000006                     _horaRegar$806:
  2445                           	opt callstack 0
  2446  000006                     leer_eeprom@dato:
  2447                           	opt callstack 0
  2448  000006                     ___awdiv@sign:
  2449                           	opt callstack 0
  2450  000006                     ___awmod@sign:
  2451                           	opt callstack 0
  2452  000006                     dameTemperaturaHumedad@checkSum:
  2453                           	opt callstack 0
  2454                           
  2455                           ; 2 bytes @ 0x5
  2456  000006                     	ds	1
  2457  000007                     ??_inicializarObjetos:
  2458  000007                     ??_leeHorariosMemoria:
  2459  000007                     _isspace$1589:
  2460                           	opt callstack 0
  2461  000007                     escribe_eeprom@direccion:
  2462                           	opt callstack 0
  2463  000007                     ___awdiv@quotient:
  2464                           	opt callstack 0
  2465                           
  2466                           ; 2 bytes @ 0x6
  2467  000007                     	ds	1
  2468  000008                     ?_atoi:
  2469                           	opt callstack 0
  2470  000008                     dameTemperaturaHumedad@humedadDecimal:
  2471                           	opt callstack 0
  2472  000008                     getValue@datoIncorrecto:
  2473                           	opt callstack 0
  2474  000008                     atoi@s:
  2475                           	opt callstack 0
  2476                           
  2477                           ; 2 bytes @ 0x7
  2478  000008                     	ds	1
  2479  000009                     escribe_eeprom@dato:
  2480                           	opt callstack 0
  2481  000009                     dameTemperaturaHumedad@temperaturaDecimal:
  2482                           	opt callstack 0
  2483  000009                     inicializarObjetos@j:
  2484                           	opt callstack 0
  2485  000009                     leeHorariosMemoria@j:
  2486                           	opt callstack 0
  2487  000009                     getValue@i:
  2488                           	opt callstack 0
  2489  000009                     ___lmul@product:
  2490                           	opt callstack 0
  2491  000009                     ___aodiv@divisor:
  2492                           	opt callstack 0
  2493  000009                     ___aomod@divisor:
  2494                           	opt callstack 0
  2495                           
  2496                           ; 8 bytes @ 0x8
  2497  000009                     	ds	1
  2498  00000A                     ??_atoi:
  2499  00000A                     ??_escribe_eeprom:
  2500  00000A                     ?_stoa:
  2501                           	opt callstack 0
  2502  00000A                     dameTemperaturaHumedad@humedad:
  2503                           	opt callstack 0
  2504  00000A                     stoa@fp:
  2505                           	opt callstack 0
  2506  00000A                     fputs@s:
  2507                           	opt callstack 0
  2508                           
  2509                           ; 2 bytes @ 0x9
  2510  00000A                     	ds	1
  2511  00000B                     ??_escribeHorariosMemoria:
  2512  00000B                     dameTemperaturaHumedad@temperatura:
  2513                           	opt callstack 0
  2514  00000B                     inicializarObjetos@i_809:
  2515                           	opt callstack 0
  2516  00000B                     leeHorariosMemoria@contMemoria:
  2517                           	opt callstack 0
  2518  00000B                     getValue@i_993:
  2519                           	opt callstack 0
  2520                           
  2521                           ; 2 bytes @ 0xA
  2522  00000B                     	ds	1
  2523  00000C                     ?_estaSeco:
  2524                           	opt callstack 0
  2525  00000C                     estaSeco@s:
  2526                           	opt callstack 0
  2527  00000C                     stoa@s:
  2528                           	opt callstack 0
  2529  00000C                     fputs@fp:
  2530                           	opt callstack 0
  2531                           
  2532                           ; 2 bytes @ 0xB
  2533  00000C                     	ds	1
  2534  00000D                     ?___aldiv:
  2535                           	opt callstack 0
  2536  00000D                     getValue@dato:
  2537                           	opt callstack 0
  2538  00000D                     inicializarObjetos@i:
  2539                           	opt callstack 0
  2540  00000D                     escribeHorariosMemoria@j:
  2541                           	opt callstack 0
  2542  00000D                     leeHorariosMemoria@i:
  2543                           	opt callstack 0
  2544  00000D                     ___aldiv@dividend:
  2545                           	opt callstack 0
  2546                           
  2547                           ; 4 bytes @ 0xC
  2548  00000D                     	ds	1
  2549  00000E                     ??_stoa:
  2550  00000E                     _estaSeco$799:
  2551                           	opt callstack 0
  2552  00000E                     getValue@Rx:
  2553                           	opt callstack 0
  2554  00000E                     fputs@c:
  2555                           	opt callstack 0
  2556  00000E                     atoi@neg:
  2557                           	opt callstack 0
  2558                           
  2559                           ; 2 bytes @ 0xD
  2560  00000E                     	ds	1
  2561  00000F                     ??_regadoRapido:
  2562  00000F                     ??_encenderBombas:
  2563  00000F                     setRtc@direccion:
  2564                           	opt callstack 0
  2565  00000F                     escribeHorariosMemoria@contMemoria:
  2566                           	opt callstack 0
  2567  00000F                     fputs@i:
  2568                           	opt callstack 0
  2569  00000F                     stoa@nuls:
  2570                           	opt callstack 0
  2571                           
  2572                           ; 7 bytes @ 0xE
  2573  00000F                     	ds	1
  2574  000010                     setRtc@seteado:
  2575                           	opt callstack 0
  2576  000010                     _atoi$1571:
  2577                           	opt callstack 0
  2578                           
  2579                           ; 2 bytes @ 0xF
  2580  000010                     	ds	1
  2581  000011                     ?_pad:
  2582                           	opt callstack 0
  2583  000011                     setRtc@datoRtc:
  2584                           	opt callstack 0
  2585  000011                     encenderBombas@flagSeco:
  2586                           	opt callstack 0
  2587  000011                     regadoRapido@tiempoRegar:
  2588                           	opt callstack 0
  2589  000011                     ___aodiv@counter:
  2590                           	opt callstack 0
  2591  000011                     ___aomod@counter:
  2592                           	opt callstack 0
  2593  000011                     escribeHorariosMemoria@i:
  2594                           	opt callstack 0
  2595  000011                     pad@fp:
  2596                           	opt callstack 0
  2597  000011                     ___aldiv@divisor:
  2598                           	opt callstack 0
  2599                           
  2600                           ; 4 bytes @ 0x10
  2601  000011                     	ds	1
  2602  000012                     setRtc@dato:
  2603                           	opt callstack 0
  2604  000012                     regadoRapido@areaRegar:
  2605                           	opt callstack 0
  2606  000012                     ___aodiv@sign:
  2607                           	opt callstack 0
  2608  000012                     ___aomod@sign:
  2609                           	opt callstack 0
  2610  000012                     encenderBombas@i:
  2611                           	opt callstack 0
  2612  000012                     _atoi$1573:
  2613                           	opt callstack 0
  2614                           
  2615                           ; 2 bytes @ 0x11
  2616  000012                     	ds	1
  2617  000013                     ?_abs:
  2618                           	opt callstack 0
  2619  000013                     setTiempoRegar@tiempoRegar:
  2620                           	opt callstack 0
  2621  000013                     pad@buf:
  2622                           	opt callstack 0
  2623  000013                     abs@a:
  2624                           	opt callstack 0
  2625  000013                     ___aodiv@quotient:
  2626                           	opt callstack 0
  2627                           
  2628                           ; 8 bytes @ 0x12
  2629  000013                     	ds	1
  2630  000014                     setTiempoRegar@hora:
  2631                           	opt callstack 0
  2632  000014                     _atoi$1572:
  2633                           	opt callstack 0
  2634                           
  2635                           ; 1 bytes @ 0x13
  2636  000014                     	ds	1
  2637  000015                     ??_abs:
  2638  000015                     ___aldiv@counter:
  2639                           	opt callstack 0
  2640  000015                     pad@p:
  2641                           	opt callstack 0
  2642  000015                     atoi@n:
  2643                           	opt callstack 0
  2644                           
  2645                           ; 2 bytes @ 0x14
  2646  000015                     	ds	1
  2647  000016                     ___aldiv@sign:
  2648                           	opt callstack 0
  2649  000016                     stoa@i:
  2650                           	opt callstack 0
  2651                           
  2652                           ; 2 bytes @ 0x15
  2653  000016                     	ds	1
  2654  000017                     ??_pad:
  2655  000017                     ___aldiv@quotient:
  2656                           	opt callstack 0
  2657                           
  2658                           ; 4 bytes @ 0x16
  2659  000017                     	ds	1
  2660  000018                     pad@i:
  2661                           	opt callstack 0
  2662  000018                     stoa@w:
  2663                           	opt callstack 0
  2664                           
  2665                           ; 2 bytes @ 0x17
  2666  000018                     	ds	2
  2667  00001A                     pad@w:
  2668                           	opt callstack 0
  2669  00001A                     stoa@cp:
  2670                           	opt callstack 0
  2671                           
  2672                           ; 2 bytes @ 0x19
  2673  00001A                     	ds	1
  2674  00001B                     ?_map:
  2675                           	opt callstack 0
  2676  00001B                     UART_init@BAUD:
  2677                           	opt callstack 0
  2678  00001B                     map@x:
  2679                           	opt callstack 0
  2680                           
  2681                           ; 4 bytes @ 0x1A
  2682  00001B                     	ds	1
  2683  00001C                     ?_ctoa:
  2684                           	opt callstack 0
  2685  00001C                     ?_dtoa:
  2686                           	opt callstack 0
  2687  00001C                     ctoa@fp:
  2688                           	opt callstack 0
  2689  00001C                     dtoa@fp:
  2690                           	opt callstack 0
  2691  00001C                     stoa@p:
  2692                           	opt callstack 0
  2693                           
  2694                           ; 2 bytes @ 0x1B
  2695  00001C                     	ds	2
  2696  00001E                     ctoa@c:
  2697                           	opt callstack 0
  2698  00001E                     stoa@l:
  2699                           	opt callstack 0
  2700  00001E                     dtoa@d:
  2701                           	opt callstack 0
  2702                           
  2703                           ; 8 bytes @ 0x1D
  2704  00001E                     	ds	1
  2705  00001F                     ctoa@w:
  2706                           	opt callstack 0
  2707  00001F                     map@in_min:
  2708                           	opt callstack 0
  2709                           
  2710                           ; 4 bytes @ 0x1E
  2711  00001F                     	ds	4
  2712  000023                     map@in_max:
  2713                           	opt callstack 0
  2714  000023                     _UART_init$1922:
  2715                           	opt callstack 0
  2716                           
  2717                           ; 4 bytes @ 0x22
  2718  000023                     	ds	3
  2719  000026                     ??_dtoa:
  2720                           
  2721                           ; 1 bytes @ 0x25
  2722  000026                     	ds	1
  2723  000027                     map@out_min:
  2724                           	opt callstack 0
  2725                           
  2726                           ; 4 bytes @ 0x26
  2727  000027                     	ds	4
  2728  00002B                     map@out_max:
  2729                           	opt callstack 0
  2730                           
  2731                           ; 4 bytes @ 0x2A
  2732  00002B                     	ds	3
  2733  00002E                     _dtoa$1086:
  2734                           	opt callstack 0
  2735                           
  2736                           ; 2 bytes @ 0x2D
  2737  00002E                     	ds	1
  2738  00002F                     ??_lecturaAnalogaSensores:
  2739                           
  2740                           ; 1 bytes @ 0x2E
  2741  00002F                     	ds	1
  2742  000030                     lecturaAnalogaSensores@i:
  2743                           	opt callstack 0
  2744  000030                     dtoa@p:
  2745                           	opt callstack 0
  2746                           
  2747                           ; 2 bytes @ 0x2F
  2748  000030                     	ds	2
  2749  000032                     dtoa@w:
  2750                           	opt callstack 0
  2751                           
  2752                           ; 2 bytes @ 0x31
  2753  000032                     	ds	2
  2754  000034                     dtoa@s:
  2755                           	opt callstack 0
  2756                           
  2757                           ; 2 bytes @ 0x33
  2758  000034                     	ds	2
  2759  000036                     dtoa@n:
  2760                           	opt callstack 0
  2761                           
  2762                           ; 8 bytes @ 0x35
  2763  000036                     	ds	8
  2764  00003E                     dtoa@i:
  2765                           	opt callstack 0
  2766                           
  2767                           ; 2 bytes @ 0x3D
  2768  00003E                     	ds	2
  2769  000040                     ?_vfpfcnvrt:
  2770                           	opt callstack 0
  2771  000040                     vfpfcnvrt@fp:
  2772                           	opt callstack 0
  2773                           
  2774                           ; 2 bytes @ 0x3F
  2775  000040                     	ds	2
  2776  000042                     vfpfcnvrt@fmt:
  2777                           	opt callstack 0
  2778                           
  2779                           ; 2 bytes @ 0x41
  2780  000042                     	ds	2
  2781  000044                     vfpfcnvrt@ap:
  2782                           	opt callstack 0
  2783                           
  2784                           ; 2 bytes @ 0x43
  2785  000044                     	ds	2
  2786  000046                     ??_vfpfcnvrt:
  2787                           
  2788                           ; 1 bytes @ 0x45
  2789  000046                     	ds	4
  2790  00004A                     vfpfcnvrt@ll:
  2791                           	opt callstack 0
  2792                           
  2793                           ; 8 bytes @ 0x49
  2794  00004A                     	ds	8
  2795  000052                     vfpfcnvrt@cp:
  2796                           	opt callstack 0
  2797                           
  2798                           ; 2 bytes @ 0x51
  2799  000052                     	ds	2
  2800  000054                     vfpfcnvrt@done:
  2801                           	opt callstack 0
  2802                           
  2803                           ; 2 bytes @ 0x53
  2804  000054                     	ds	2
  2805  000056                     _vfpfcnvrt$1111:
  2806                           	opt callstack 0
  2807                           
  2808                           ; 2 bytes @ 0x55
  2809  000056                     	ds	2
  2810  000058                     _vfpfcnvrt$1112:
  2811                           	opt callstack 0
  2812                           
  2813                           ; 2 bytes @ 0x57
  2814  000058                     	ds	2
  2815  00005A                     vfpfcnvrt@c:
  2816                           	opt callstack 0
  2817                           
  2818                           ; 1 bytes @ 0x59
  2819  00005A                     	ds	1
  2820  00005B                     vfprintf@cfmt:
  2821                           	opt callstack 0
  2822                           
  2823                           ; 2 bytes @ 0x5A
  2824  00005B                     	ds	2
  2825  00005D                     ??_dameDatosSistema:
  2826  00005D                     ??_mostrarDatosSensoresWIFI:
  2827  00005D                     ??_mostrarDatosSensores:
  2828  00005D                     ??_asignarHorarios:
  2829  00005D                     
  2830                           ; 1 bytes @ 0x5C
  2831  00005D                     	ds	2
  2832  00005F                     
  2833                           ; 1 bytes @ 0x5E
  2834 ;;
  2835 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2836 ;;
  2837 ;; *************** function _main *****************
  2838 ;; Defined at:
  2839 ;;		line 1036 in file "main.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;		None
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;		None
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  1    wreg      void 
  2846 ;; Registers used:
  2847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2853 ;;      Params:         0       0       0       0       0       0       0       0       0
  2854 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2855 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2856 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2857 ;;Total ram usage:        0 bytes
  2858 ;; Hardware stack levels required when called:   12
  2859 ;; This function calls:
  2860 ;;		_UART_init
  2861 ;;		_configurarAdc
  2862 ;;		_i2c_iniciar
  2863 ;;		_inicializarObjetos
  2864 ;;		_mostrarMenu
  2865 ;;		_restablecerDatosSensor
  2866 ;;		_sistemaPrincipal
  2867 ;;		_sistemaRegado
  2868 ;; This function is called by:
  2869 ;;		Startup code after reset
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           	psect	text0
  2874  002736                     __ptext0:
  2875                           	opt callstack 0
  2876  002736                     _main:
  2877                           	opt callstack 19
  2878  002736                     
  2879                           ;main.c: 1038:     INTCONbits.GIE = 1;
  2880  002736  8EF2               	bsf	242,7,c	;volatile
  2881                           
  2882                           ;main.c: 1039:     INTCONbits.PEIE = 1;
  2883  002738  8CF2               	bsf	242,6,c	;volatile
  2884                           
  2885                           ;main.c: 1040:     INTCONbits.TMR0IE = 1;
  2886  00273A  8AF2               	bsf	242,5,c	;volatile
  2887                           
  2888                           ;main.c: 1042:     PIE1bits.RCIE = 1;
  2889  00273C  8A9D               	bsf	157,5,c	;volatile
  2890  00273E                     
  2891                           ;main.c: 1044:     T0CON = 0b00000111;
  2892  00273E  0E07               	movlw	7
  2893  002740  6ED5               	movwf	213,c	;volatile
  2894  002742                     
  2895                           ;main.c: 1049:     restablecerDatosSensor();
  2896  002742  EC5F  F017         	call	_restablecerDatosSensor	;wreg free
  2897  002746                     
  2898                           ;main.c: 1050:     configurarAdc();
  2899  002746  EC87  F019         	call	_configurarAdc	;wreg free
  2900  00274A                     
  2901                           ;main.c: 1051:     UART_init(9600);
  2902  00274A  0E80               	movlw	128
  2903  00274C  6E1B               	movwf	UART_init@BAUD^0,c
  2904  00274E  0E25               	movlw	37
  2905  002750  6E1C               	movwf	(UART_init@BAUD+1)^0,c
  2906  002752  0E00               	movlw	0
  2907  002754  6E1D               	movwf	(UART_init@BAUD+2)^0,c
  2908  002756  0E00               	movlw	0
  2909  002758  6E1E               	movwf	(UART_init@BAUD+3)^0,c
  2910  00275A  EC29  F015         	call	_UART_init	;wreg free
  2911  00275E                     
  2912                           ;main.c: 1052:     i2c_iniciar();
  2913  00275E  EC63  F019         	call	_i2c_iniciar	;wreg free
  2914  002762                     
  2915                           ;main.c: 1053:     inicializarObjetos();
  2916  002762  ECDC  F00B         	call	_inicializarObjetos	;wreg free
  2917  002766                     
  2918                           ;main.c: 1058:     TRISD = 0;
  2919  002766  0E00               	movlw	0
  2920  002768  6E95               	movwf	149,c	;volatile
  2921  00276A                     
  2922                           ;main.c: 1059:     LATD = 0;
  2923  00276A  0E00               	movlw	0
  2924  00276C  6E8C               	movwf	140,c	;volatile
  2925  00276E                     
  2926                           ;main.c: 1061:     TMR0 = VALOR_TIMER0;
  2927  00276E  C0FB  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  2928  002772  C0FC  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  2929  002776                     
  2930                           ;main.c: 1063:     INTCONbits.TMR0IF = 1;
  2931  002776  84F2               	bsf	242,2,c	;volatile
  2932  002778                     
  2933                           ;main.c: 1066:     T0CONbits.TMR0ON = 1;
  2934  002778  8ED5               	bsf	213,7,c	;volatile
  2935  00277A                     
  2936                           ;main.c: 1068:     mostrarMenu();
  2937  00277A  EC2F  F014         	call	_mostrarMenu	;wreg free
  2938  00277E                     
  2939                           ;main.c: 1070:     MODO_COMUNICACION = 0;
  2940  00277E  0E00               	movlw	0
  2941  002780  0100               	movlb	0	; () banked
  2942  002782  6F88               	movwf	_MODO_COMUNICACION& (0+255),b
  2943  002784                     l4906:
  2944                           
  2945                           ;main.c: 1075:         if (datoRecibido) {
  2946  002784  0100               	movlb	0	; () banked
  2947  002786  5183               	movf	_datoRecibido& (0+255),w,b
  2948  002788  B4D8               	btfsc	status,2,c
  2949  00278A  EFC9  F013         	goto	u3831
  2950  00278E  EFCB  F013         	goto	u3830
  2951  002792                     u3831:
  2952  002792  EFD2  F013         	goto	l4914
  2953  002796                     u3830:
  2954  002796                     
  2955                           ; BSR set to: 0
  2956                           ;main.c: 1077:             datoRecibido = 0;
  2957  002796  0E00               	movlw	0
  2958  002798  6F83               	movwf	_datoRecibido& (0+255),b
  2959  00279A                     
  2960                           ; BSR set to: 0
  2961                           ;main.c: 1078:             byteUart -= 48;
  2962  00279A  0E30               	movlw	48
  2963  00279C  5F8B               	subwf	_byteUart& (0+255),f,b
  2964  00279E                     
  2965                           ; BSR set to: 0
  2966                           ;main.c: 1079:             sistemaPrincipal(byteUart);
  2967  00279E  518B               	movf	_byteUart& (0+255),w,b
  2968  0027A0  EC93  F010         	call	_sistemaPrincipal
  2969  0027A4                     l4914:
  2970                           
  2971                           ;main.c: 1083:         if (overflowTimer) {
  2972  0027A4  0100               	movlb	0	; () banked
  2973  0027A6  5182               	movf	_overflowTimer& (0+255),w,b
  2974  0027A8  B4D8               	btfsc	status,2,c
  2975  0027AA  EFD9  F013         	goto	u3841
  2976  0027AE  EFDB  F013         	goto	u3840
  2977  0027B2                     u3841:
  2978  0027B2  EFC2  F013         	goto	l4906
  2979  0027B6                     u3840:
  2980  0027B6                     
  2981                           ; BSR set to: 0
  2982                           ;main.c: 1085:             esperandoDatos = 0;
  2983  0027B6  0E00               	movlw	0
  2984  0027B8  6F89               	movwf	_esperandoDatos& (0+255),b
  2985                           
  2986                           ;main.c: 1086:             overflowTimer = 0;
  2987  0027BA  0E00               	movlw	0
  2988  0027BC  6F82               	movwf	_overflowTimer& (0+255),b
  2989  0027BE                     
  2990                           ; BSR set to: 0
  2991                           ;main.c: 1087:             sistemaRegado();
  2992  0027BE  EC26  F00B         	call	_sistemaRegado	;wreg free
  2993  0027C2  EFC2  F013         	goto	l4906
  2994  0027C6  EF07  F000         	goto	start
  2995  0027CA                     __end_of_main:
  2996                           	opt callstack 0
  2997                           
  2998 ;; *************** function _sistemaRegado *****************
  2999 ;; Defined at:
  3000 ;;		line 625 in file "main.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;		None
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3014 ;;      Params:         0       0       0       0       0       0       0       0       0
  3015 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3016 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3017 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3018 ;;Total ram usage:        0 bytes
  3019 ;; Hardware stack levels used:    1
  3020 ;; Hardware stack levels required when called:   10
  3021 ;; This function calls:
  3022 ;;		_dameDiaActual
  3023 ;;		_dameHoraActual
  3024 ;;		_encenderBombas
  3025 ;;		_horaRegar
  3026 ;;		_lecturaAnalogaSensores
  3027 ;;		_lecturaWifi
  3028 ;;		_mostrarMenu
  3029 ;; This function is called by:
  3030 ;;		_main
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           	psect	text1
  3035  00164C                     __ptext1:
  3036                           	opt callstack 0
  3037  00164C                     _sistemaRegado:
  3038                           	opt callstack 20
  3039  00164C                     
  3040                           ;main.c: 629:     if (regando) {
  3041  00164C  0100               	movlb	0	; () banked
  3042  00164E  517B               	movf	_regando& (0+255),w,b
  3043  001650  B4D8               	btfsc	status,2,c
  3044  001652  EF2D  F00B         	goto	u3681
  3045  001656  EF2F  F00B         	goto	u3680
  3046  00165A                     u3681:
  3047  00165A  EF5F  F00B         	goto	l4802
  3048  00165E                     u3680:
  3049  00165E                     
  3050                           ; BSR set to: 0
  3051                           ;main.c: 631:         contInterrupciones++;
  3052  00165E  4B78               	infsnz	_contInterrupciones& (0+255),f,b
  3053  001660  2B79               	incf	(_contInterrupciones+1)& (0+255),f,b
  3054  001662                     
  3055                           ; BSR set to: 0
  3056                           ;main.c: 633:         if (contInterrupciones == 6) {
  3057  001662  0E06               	movlw	6
  3058  001664  1978               	xorwf	_contInterrupciones& (0+255),w,b
  3059  001666  1179               	iorwf	(_contInterrupciones+1)& (0+255),w,b
  3060  001668  A4D8               	btfss	status,2,c
  3061  00166A  EF39  F00B         	goto	u3691
  3062  00166E  EF3B  F00B         	goto	u3690
  3063  001672                     u3691:
  3064  001672  EFDB  F00B         	goto	l390
  3065  001676                     u3690:
  3066  001676                     
  3067                           ; BSR set to: 0
  3068                           ;main.c: 634:             contInterrupciones = 0;
  3069  001676  0E00               	movlw	0
  3070  001678  6F79               	movwf	(_contInterrupciones+1)& (0+255),b
  3071  00167A  0E00               	movlw	0
  3072  00167C  6F78               	movwf	_contInterrupciones& (0+255),b
  3073  00167E                     
  3074                           ; BSR set to: 0
  3075                           ;main.c: 635:             minutosTranscurridos++;
  3076  00167E  2B7C               	incf	_minutosTranscurridos& (0+255),f,b
  3077  001680                     
  3078                           ; BSR set to: 0
  3079                           ;main.c: 638:             if (minutosTranscurridos >= minutosRegar) {
  3080  001680  517D               	movf	_minutosRegar& (0+255),w,b
  3081  001682  5D7C               	subwf	_minutosTranscurridos& (0+255),w,b
  3082  001684  A0D8               	btfss	status,0,c
  3083  001686  EF47  F00B         	goto	u3701
  3084  00168A  EF49  F00B         	goto	u3700
  3085  00168E                     u3701:
  3086  00168E  EFDB  F00B         	goto	l390
  3087  001692                     u3700:
  3088  001692                     
  3089                           ; BSR set to: 0
  3090                           ;main.c: 640:                 LATD = 0;
  3091  001692  0E00               	movlw	0
  3092  001694  6E8C               	movwf	140,c	;volatile
  3093                           
  3094                           ;main.c: 641:                 minutosTranscurridos = 0;
  3095  001696  0E00               	movlw	0
  3096  001698  6F7C               	movwf	_minutosTranscurridos& (0+255),b
  3097                           
  3098                           ;main.c: 642:                 regando = 0;
  3099  00169A  0E00               	movlw	0
  3100  00169C  6F7B               	movwf	_regando& (0+255),b
  3101  00169E                     
  3102                           ; BSR set to: 0
  3103                           ;main.c: 643:                 horarios[hora].regado = 1;
  3104  00169E  5187               	movf	_hora& (0+255),w,b
  3105  0016A0  0D0C               	mullw	12
  3106  0016A2  0E3C               	movlw	low (_horarios+10)
  3107  0016A4  24F3               	addwf	243,w,c
  3108  0016A6  6ED9               	movwf	fsr2l,c
  3109  0016A8  0E01               	movlw	high (_horarios+10)
  3110  0016AA  20F4               	addwfc	prodh,w,c
  3111  0016AC  6EDA               	movwf	fsr2h,c
  3112  0016AE  0E01               	movlw	1
  3113  0016B0  6EDF               	movwf	indf2,c
  3114  0016B2                     
  3115                           ; BSR set to: 0
  3116                           ;main.c: 644:                 tempHora = hora;
  3117  0016B2  C087  F081         	movff	_hora,_tempHora
  3118  0016B6                     
  3119                           ; BSR set to: 0
  3120                           ;main.c: 645:                 flagRegado = 0;
  3121  0016B6  0E00               	movlw	0
  3122  0016B8  6F80               	movwf	_flagRegado& (0+255),b
  3123  0016BA  EFDB  F00B         	goto	l390
  3124  0016BE                     l4802:
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;main.c: 651:         dameHoraActual();
  3128  0016BE  ECCB  F018         	call	_dameHoraActual	;wreg free
  3129                           
  3130                           ;main.c: 652:         dameDiaActual();
  3131  0016C2  EC6E  F019         	call	_dameDiaActual	;wreg free
  3132  0016C6                     
  3133                           ;main.c: 654:         if (hora != tempHora && !flagRegado) {
  3134  0016C6  0100               	movlb	0	; () banked
  3135  0016C8  5181               	movf	_tempHora& (0+255),w,b
  3136  0016CA  1987               	xorwf	_hora& (0+255),w,b
  3137  0016CC  B4D8               	btfsc	status,2,c
  3138  0016CE  EF6B  F00B         	goto	u3711
  3139  0016D2  EF6D  F00B         	goto	u3710
  3140  0016D6                     u3711:
  3141  0016D6  EF81  F00B         	goto	l4812
  3142  0016DA                     u3710:
  3143  0016DA                     
  3144                           ; BSR set to: 0
  3145  0016DA  5180               	movf	_flagRegado& (0+255),w,b
  3146  0016DC  A4D8               	btfss	status,2,c
  3147  0016DE  EF73  F00B         	goto	u3721
  3148  0016E2  EF75  F00B         	goto	u3720
  3149  0016E6                     u3721:
  3150  0016E6  EF81  F00B         	goto	l4812
  3151  0016EA                     u3720:
  3152  0016EA                     
  3153                           ; BSR set to: 0
  3154                           ;main.c: 655:             horarios[tempHora].regado = 0;
  3155  0016EA  5181               	movf	_tempHora& (0+255),w,b
  3156  0016EC  0D0C               	mullw	12
  3157  0016EE  0E3C               	movlw	low (_horarios+10)
  3158  0016F0  24F3               	addwf	243,w,c
  3159  0016F2  6ED9               	movwf	fsr2l,c
  3160  0016F4  0E01               	movlw	high (_horarios+10)
  3161  0016F6  20F4               	addwfc	prodh,w,c
  3162  0016F8  6EDA               	movwf	fsr2h,c
  3163  0016FA  0E00               	movlw	0
  3164  0016FC  6EDF               	movwf	indf2,c
  3165  0016FE                     
  3166                           ; BSR set to: 0
  3167                           ;main.c: 656:             flagRegado = 1;
  3168  0016FE  0E01               	movlw	1
  3169  001700  6F80               	movwf	_flagRegado& (0+255),b
  3170  001702                     l4812:
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;main.c: 659:         if ((!MODO_COMUNICACION && horaRegar()) || (MODO_COMUNICACION
  3174  001702  5188               	movf	_MODO_COMUNICACION& (0+255),w,b
  3175  001704  A4D8               	btfss	status,2,c
  3176  001706  EF87  F00B         	goto	u3731
  3177  00170A  EF89  F00B         	goto	u3730
  3178  00170E                     u3731:
  3179  00170E  EF94  F00B         	goto	l4816
  3180  001712                     u3730:
  3181  001712                     
  3182                           ; BSR set to: 0
  3183  001712  EC72  F014         	call	_horaRegar	;wreg free
  3184  001716  5001               	movf	?_horaRegar^0,w,c
  3185  001718  1002               	iorwf	(?_horaRegar+1)^0,w,c
  3186  00171A  A4D8               	btfss	status,2,c
  3187  00171C  EF92  F00B         	goto	u3741
  3188  001720  EF94  F00B         	goto	u3740
  3189  001724                     u3741:
  3190  001724  EFA8  F00B         	goto	l4820
  3191  001728                     u3740:
  3192  001728                     l4816:
  3193  001728  0100               	movlb	0	; () banked
  3194  00172A  5188               	movf	_MODO_COMUNICACION& (0+255),w,b
  3195  00172C  B4D8               	btfsc	status,2,c
  3196  00172E  EF9B  F00B         	goto	u3751
  3197  001732  EF9D  F00B         	goto	u3750
  3198  001736                     u3751:
  3199  001736  EFDB  F00B         	goto	l390
  3200  00173A                     u3750:
  3201  00173A                     
  3202                           ; BSR set to: 0
  3203  00173A  EC72  F014         	call	_horaRegar	;wreg free
  3204  00173E  5001               	movf	?_horaRegar^0,w,c
  3205  001740  1002               	iorwf	(?_horaRegar+1)^0,w,c
  3206  001742  B4D8               	btfsc	status,2,c
  3207  001744  EFA6  F00B         	goto	u3761
  3208  001748  EFA8  F00B         	goto	u3760
  3209  00174C                     u3761:
  3210  00174C  EFDB  F00B         	goto	l390
  3211  001750                     u3760:
  3212  001750                     l4820:
  3213                           
  3214                           ;main.c: 660:                 && horaRegar())) {;main.c: 664:             if (MODO_COMUN
      +                          ICACION) {
  3215  001750  0100               	movlb	0	; () banked
  3216  001752  5188               	movf	_MODO_COMUNICACION& (0+255),w,b
  3217  001754  B4D8               	btfsc	status,2,c
  3218  001756  EFAF  F00B         	goto	u3771
  3219  00175A  EFB1  F00B         	goto	u3770
  3220  00175E                     u3771:
  3221  00175E  EFCC  F00B         	goto	l4832
  3222  001762                     u3770:
  3223  001762                     
  3224                           ; BSR set to: 0
  3225                           ;main.c: 665:                 lecturaWifi();
  3226  001762  ECA2  F00F         	call	_lecturaWifi	;wreg free
  3227  001766                     
  3228                           ;main.c: 666:                 if (peticionLecturaSensores) {
  3229  001766  0100               	movlb	0	; () banked
  3230  001768  517A               	movf	_peticionLecturaSensores& (0+255),w,b
  3231  00176A  B4D8               	btfsc	status,2,c
  3232  00176C  EFBA  F00B         	goto	u3781
  3233  001770  EFBC  F00B         	goto	u3780
  3234  001774                     u3781:
  3235  001774  EFC8  F00B         	goto	l4830
  3236  001778                     u3780:
  3237  001778                     
  3238                           ; BSR set to: 0
  3239                           ;main.c: 667:                     minutosRegar = horarios[hora].tiempoRegar;
  3240  001778  5187               	movf	_hora& (0+255),w,b
  3241  00177A  0D0C               	mullw	12
  3242  00177C  0E3D               	movlw	low (_horarios+11)
  3243  00177E  24F3               	addwf	243,w,c
  3244  001780  6ED9               	movwf	fsr2l,c
  3245  001782  0E01               	movlw	high (_horarios+11)
  3246  001784  20F4               	addwfc	prodh,w,c
  3247  001786  6EDA               	movwf	fsr2h,c
  3248  001788  50DF               	movf	indf2,w,c
  3249  00178A  6F7D               	movwf	_minutosRegar& (0+255),b
  3250  00178C                     
  3251                           ; BSR set to: 0
  3252                           ;main.c: 668:                     encenderBombas();
  3253  00178C  ECB3  F005         	call	_encenderBombas	;wreg free
  3254  001790                     l4830:
  3255                           
  3256                           ;main.c: 670:                 mostrarMenu();
  3257  001790  EC2F  F014         	call	_mostrarMenu	;wreg free
  3258                           
  3259                           ;main.c: 671:             } else {
  3260  001794  EFDB  F00B         	goto	l390
  3261  001798                     l4832:
  3262                           
  3263                           ; BSR set to: 0
  3264                           ;main.c: 672:                 lecturaAnalogaSensores();
  3265  001798  ECF6  F012         	call	_lecturaAnalogaSensores	;wreg free
  3266  00179C                     
  3267                           ;main.c: 673:                 minutosRegar = horarios[hora].tiempoRegar;
  3268  00179C  0100               	movlb	0	; () banked
  3269  00179E  5187               	movf	_hora& (0+255),w,b
  3270  0017A0  0D0C               	mullw	12
  3271  0017A2  0E3D               	movlw	low (_horarios+11)
  3272  0017A4  24F3               	addwf	243,w,c
  3273  0017A6  6ED9               	movwf	fsr2l,c
  3274  0017A8  0E01               	movlw	high (_horarios+11)
  3275  0017AA  20F4               	addwfc	prodh,w,c
  3276  0017AC  6EDA               	movwf	fsr2h,c
  3277  0017AE  50DF               	movf	indf2,w,c
  3278  0017B0  6F7D               	movwf	_minutosRegar& (0+255),b
  3279  0017B2                     
  3280                           ; BSR set to: 0
  3281                           ;main.c: 674:                 encenderBombas();
  3282  0017B2  ECB3  F005         	call	_encenderBombas	;wreg free
  3283  0017B6                     l390:
  3284  0017B6  0012               	return		;funcret
  3285  0017B8                     __end_of_sistemaRegado:
  3286                           	opt callstack 0
  3287                           
  3288 ;; *************** function _horaRegar *****************
  3289 ;; Defined at:
  3290 ;;		line 156 in file "main.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;		None
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;		None
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  2    0[COMRAM] int 
  3297 ;; Registers used:
  3298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3304 ;;      Params:         2       0       0       0       0       0       0       0       0
  3305 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3306 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3307 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3308 ;;Total ram usage:        6 bytes
  3309 ;; Hardware stack levels used:    1
  3310 ;; Hardware stack levels required when called:    1
  3311 ;; This function calls:
  3312 ;;		Nothing
  3313 ;; This function is called by:
  3314 ;;		_sistemaRegado
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           	psect	text2
  3319  0028E4                     __ptext2:
  3320                           	opt callstack 0
  3321  0028E4                     _horaRegar:
  3322                           	opt callstack 28
  3323  0028E4                     
  3324                           ;main.c: 158:     return (horarios[hora].regar) && (!horarios[hora].regado) &&
  3325  0028E4  0E00               	movlw	0
  3326  0028E6  6E06               	movwf	_horaRegar$806^0,c
  3327  0028E8  0100               	movlb	0	; () banked
  3328  0028EA  5187               	movf	_hora& (0+255),w,b
  3329  0028EC  0D0C               	mullw	12
  3330  0028EE  0E3B               	movlw	low (_horarios+9)
  3331  0028F0  24F3               	addwf	243,w,c
  3332  0028F2  6ED9               	movwf	fsr2l,c
  3333  0028F4  0E01               	movlw	high (_horarios+9)
  3334  0028F6  20F4               	addwfc	prodh,w,c
  3335  0028F8  6EDA               	movwf	fsr2h,c
  3336  0028FA  50DF               	movf	indf2,w,c
  3337  0028FC  B4D8               	btfsc	status,2,c
  3338  0028FE  EF83  F014         	goto	u3311
  3339  002902  EF85  F014         	goto	u3310
  3340  002906                     u3311:
  3341  002906  EFB0  F014         	goto	l4306
  3342  00290A                     u3310:
  3343  00290A                     
  3344                           ; BSR set to: 0
  3345  00290A  5187               	movf	_hora& (0+255),w,b
  3346  00290C  0D0C               	mullw	12
  3347  00290E  0E3C               	movlw	low (_horarios+10)
  3348  002910  24F3               	addwf	243,w,c
  3349  002912  6ED9               	movwf	fsr2l,c
  3350  002914  0E01               	movlw	high (_horarios+10)
  3351  002916  20F4               	addwfc	prodh,w,c
  3352  002918  6EDA               	movwf	fsr2h,c
  3353  00291A  50DF               	movf	indf2,w,c
  3354  00291C  A4D8               	btfss	status,2,c
  3355  00291E  EF93  F014         	goto	u3321
  3356  002922  EF95  F014         	goto	u3320
  3357  002926                     u3321:
  3358  002926  EFB0  F014         	goto	l4306
  3359  00292A                     u3320:
  3360  00292A                     
  3361                           ; BSR set to: 0
  3362  00292A  5187               	movf	_hora& (0+255),w,b
  3363  00292C  0D0C               	mullw	12
  3364  00292E  0E32               	movlw	low _horarios
  3365  002930  6E03               	movwf	??_horaRegar^0,c
  3366  002932  0E01               	movlw	high _horarios
  3367  002934  6E04               	movwf	(??_horaRegar+1)^0,c
  3368  002936  50F3               	movf	243,w,c
  3369  002938  2603               	addwf	??_horaRegar^0,f,c
  3370  00293A  50F4               	movf	244,w,c
  3371  00293C  2204               	addwfc	(??_horaRegar+1)^0,f,c
  3372  00293E  5184               	movf	_diaActual& (0+255),w,b
  3373  002940  2403               	addwf	??_horaRegar^0,w,c
  3374  002942  6ED9               	movwf	fsr2l,c
  3375  002944  0E00               	movlw	0
  3376  002946  2004               	addwfc	(??_horaRegar+1)^0,w,c
  3377  002948  6EDA               	movwf	fsr2h,c
  3378  00294A  0E31               	movlw	49
  3379  00294C  18DE               	xorwf	postinc2,w,c
  3380  00294E  A4D8               	btfss	status,2,c
  3381  002950  EFAC  F014         	goto	u3331
  3382  002954  EFAE  F014         	goto	u3330
  3383  002958                     u3331:
  3384  002958  EFB0  F014         	goto	l4306
  3385  00295C                     u3330:
  3386  00295C                     
  3387                           ; BSR set to: 0
  3388  00295C  0E01               	movlw	1
  3389  00295E  6E06               	movwf	_horaRegar$806^0,c
  3390  002960                     l4306:
  3391                           
  3392                           ; BSR set to: 0
  3393  002960  C006  F001         	movff	_horaRegar$806,?_horaRegar
  3394  002964  6A02               	clrf	(?_horaRegar+1)^0,c
  3395  002966                     
  3396                           ; BSR set to: 0
  3397  002966  0012               	return		;funcret
  3398  002968                     __end_of_horaRegar:
  3399                           	opt callstack 0
  3400                           
  3401 ;; *************** function _encenderBombas *****************
  3402 ;; Defined at:
  3403 ;;		line 296 in file "main.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;		None
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;  i               2   17[COMRAM] int 
  3408 ;;  flagSeco        1   16[COMRAM] unsigned char 
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  1    wreg      void 
  3411 ;; Registers used:
  3412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3418 ;;      Params:         0       0       0       0       0       0       0       0       0
  3419 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3420 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3421 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3422 ;;Total ram usage:        5 bytes
  3423 ;; Hardware stack levels used:    1
  3424 ;; Hardware stack levels required when called:    5
  3425 ;; This function calls:
  3426 ;;		_estaSeco
  3427 ;; This function is called by:
  3428 ;;		_sistemaRegado
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           	psect	text3
  3433  000B66                     __ptext3:
  3434                           	opt callstack 0
  3435  000B66                     _encenderBombas:
  3436                           	opt callstack 24
  3437  000B66                     
  3438                           ;main.c: 298:     char flagSeco = 0;
  3439  000B66  0E00               	movlw	0
  3440  000B68  6E11               	movwf	encenderBombas@flagSeco^0,c
  3441                           
  3442                           ;main.c: 300:     for (int i = 0; i < 1; i++) {
  3443  000B6A  0E00               	movlw	0
  3444  000B6C  6E13               	movwf	(encenderBombas@i+1)^0,c
  3445  000B6E  0E00               	movlw	0
  3446  000B70  6E12               	movwf	encenderBombas@i^0,c
  3447  000B72  EF95  F006         	goto	l4408
  3448  000B76                     l4358:
  3449                           
  3450                           ;main.c: 305:                 if (estaSeco(sensores[i])) {
  3451  000B76  90D8               	bcf	status,0,c
  3452  000B78  3412               	rlcf	encenderBombas@i^0,w,c
  3453  000B7A  6ED9               	movwf	fsr2l,c
  3454  000B7C  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3455  000B7E  6EDA               	movwf	fsr2h,c
  3456  000B80  0E60               	movlw	low _sensores
  3457  000B82  26D9               	addwf	fsr2l,f,c
  3458  000B84  0E00               	movlw	high _sensores
  3459  000B86  22DA               	addwfc	fsr2h,f,c
  3460  000B88  CFDE F00C          	movff	postinc2,estaSeco@s
  3461  000B8C  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3462  000B90  EC65  F018         	call	_estaSeco	;wreg free
  3463  000B94  500C               	movf	?_estaSeco^0,w,c
  3464  000B96  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3465  000B98  B4D8               	btfsc	status,2,c
  3466  000B9A  EFD1  F005         	goto	u3371
  3467  000B9E  EFD3  F005         	goto	u3370
  3468  000BA2                     u3371:
  3469  000BA2  EFC3  F006         	goto	l4410
  3470  000BA6                     u3370:
  3471  000BA6                     
  3472                           ;main.c: 306:                     LATDbits.LATD0 = 1;
  3473  000BA6  808C               	bsf	140,0,c	;volatile
  3474  000BA8                     l4362:
  3475                           
  3476                           ;main.c: 307:                     flagSeco = 1;
  3477  000BA8  0E01               	movlw	1
  3478  000BAA  6E11               	movwf	encenderBombas@flagSeco^0,c
  3479  000BAC  EFC3  F006         	goto	l4410
  3480  000BB0                     l4364:
  3481                           
  3482                           ;main.c: 312:                 if (estaSeco(sensores[i])) {
  3483  000BB0  90D8               	bcf	status,0,c
  3484  000BB2  3412               	rlcf	encenderBombas@i^0,w,c
  3485  000BB4  6ED9               	movwf	fsr2l,c
  3486  000BB6  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3487  000BB8  6EDA               	movwf	fsr2h,c
  3488  000BBA  0E60               	movlw	low _sensores
  3489  000BBC  26D9               	addwf	fsr2l,f,c
  3490  000BBE  0E00               	movlw	high _sensores
  3491  000BC0  22DA               	addwfc	fsr2h,f,c
  3492  000BC2  CFDE F00C          	movff	postinc2,estaSeco@s
  3493  000BC6  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3494  000BCA  EC65  F018         	call	_estaSeco	;wreg free
  3495  000BCE  500C               	movf	?_estaSeco^0,w,c
  3496  000BD0  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3497  000BD2  B4D8               	btfsc	status,2,c
  3498  000BD4  EFEE  F005         	goto	u3381
  3499  000BD8  EFF0  F005         	goto	u3380
  3500  000BDC                     u3381:
  3501  000BDC  EFC3  F006         	goto	l4410
  3502  000BE0                     u3380:
  3503  000BE0                     
  3504                           ;main.c: 313:                     LATDbits.LATD1 = 1;
  3505  000BE0  828C               	bsf	140,1,c	;volatile
  3506  000BE2  EFD4  F005         	goto	l4362
  3507  000BE6                     l4370:
  3508                           
  3509                           ;main.c: 319:                 if (estaSeco(sensores[i])) {
  3510  000BE6  90D8               	bcf	status,0,c
  3511  000BE8  3412               	rlcf	encenderBombas@i^0,w,c
  3512  000BEA  6ED9               	movwf	fsr2l,c
  3513  000BEC  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3514  000BEE  6EDA               	movwf	fsr2h,c
  3515  000BF0  0E60               	movlw	low _sensores
  3516  000BF2  26D9               	addwf	fsr2l,f,c
  3517  000BF4  0E00               	movlw	high _sensores
  3518  000BF6  22DA               	addwfc	fsr2h,f,c
  3519  000BF8  CFDE F00C          	movff	postinc2,estaSeco@s
  3520  000BFC  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3521  000C00  EC65  F018         	call	_estaSeco	;wreg free
  3522  000C04  500C               	movf	?_estaSeco^0,w,c
  3523  000C06  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3524  000C08  B4D8               	btfsc	status,2,c
  3525  000C0A  EF09  F006         	goto	u3391
  3526  000C0E  EF0B  F006         	goto	u3390
  3527  000C12                     u3391:
  3528  000C12  EFC3  F006         	goto	l4410
  3529  000C16                     u3390:
  3530  000C16                     
  3531                           ;main.c: 320:                     LATDbits.LATD2 = 1;
  3532  000C16  848C               	bsf	140,2,c	;volatile
  3533  000C18  EFD4  F005         	goto	l4362
  3534  000C1C                     l4376:
  3535                           
  3536                           ;main.c: 326:                 if (estaSeco(sensores[i])) {
  3537  000C1C  90D8               	bcf	status,0,c
  3538  000C1E  3412               	rlcf	encenderBombas@i^0,w,c
  3539  000C20  6ED9               	movwf	fsr2l,c
  3540  000C22  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3541  000C24  6EDA               	movwf	fsr2h,c
  3542  000C26  0E60               	movlw	low _sensores
  3543  000C28  26D9               	addwf	fsr2l,f,c
  3544  000C2A  0E00               	movlw	high _sensores
  3545  000C2C  22DA               	addwfc	fsr2h,f,c
  3546  000C2E  CFDE F00C          	movff	postinc2,estaSeco@s
  3547  000C32  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3548  000C36  EC65  F018         	call	_estaSeco	;wreg free
  3549  000C3A  500C               	movf	?_estaSeco^0,w,c
  3550  000C3C  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3551  000C3E  B4D8               	btfsc	status,2,c
  3552  000C40  EF24  F006         	goto	u3401
  3553  000C44  EF26  F006         	goto	u3400
  3554  000C48                     u3401:
  3555  000C48  EFC3  F006         	goto	l4410
  3556  000C4C                     u3400:
  3557  000C4C                     
  3558                           ;main.c: 327:                     LATDbits.LATD3 = 1;
  3559  000C4C  868C               	bsf	140,3,c	;volatile
  3560  000C4E  EFD4  F005         	goto	l4362
  3561  000C52                     l4382:
  3562                           
  3563                           ;main.c: 333:                 if (estaSeco(sensores[i])) {
  3564  000C52  90D8               	bcf	status,0,c
  3565  000C54  3412               	rlcf	encenderBombas@i^0,w,c
  3566  000C56  6ED9               	movwf	fsr2l,c
  3567  000C58  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3568  000C5A  6EDA               	movwf	fsr2h,c
  3569  000C5C  0E60               	movlw	low _sensores
  3570  000C5E  26D9               	addwf	fsr2l,f,c
  3571  000C60  0E00               	movlw	high _sensores
  3572  000C62  22DA               	addwfc	fsr2h,f,c
  3573  000C64  CFDE F00C          	movff	postinc2,estaSeco@s
  3574  000C68  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3575  000C6C  EC65  F018         	call	_estaSeco	;wreg free
  3576  000C70  500C               	movf	?_estaSeco^0,w,c
  3577  000C72  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3578  000C74  B4D8               	btfsc	status,2,c
  3579  000C76  EF3F  F006         	goto	u3411
  3580  000C7A  EF41  F006         	goto	u3410
  3581  000C7E                     u3411:
  3582  000C7E  EFC3  F006         	goto	l4410
  3583  000C82                     u3410:
  3584  000C82                     
  3585                           ;main.c: 334:                     LATDbits.LATD4 = 1;
  3586  000C82  888C               	bsf	140,4,c	;volatile
  3587  000C84  EFD4  F005         	goto	l4362
  3588  000C88                     l4388:
  3589                           
  3590                           ;main.c: 340:                 if (estaSeco(sensores[i])) {
  3591  000C88  90D8               	bcf	status,0,c
  3592  000C8A  3412               	rlcf	encenderBombas@i^0,w,c
  3593  000C8C  6ED9               	movwf	fsr2l,c
  3594  000C8E  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3595  000C90  6EDA               	movwf	fsr2h,c
  3596  000C92  0E60               	movlw	low _sensores
  3597  000C94  26D9               	addwf	fsr2l,f,c
  3598  000C96  0E00               	movlw	high _sensores
  3599  000C98  22DA               	addwfc	fsr2h,f,c
  3600  000C9A  CFDE F00C          	movff	postinc2,estaSeco@s
  3601  000C9E  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3602  000CA2  EC65  F018         	call	_estaSeco	;wreg free
  3603  000CA6  500C               	movf	?_estaSeco^0,w,c
  3604  000CA8  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3605  000CAA  B4D8               	btfsc	status,2,c
  3606  000CAC  EF5A  F006         	goto	u3421
  3607  000CB0  EF5C  F006         	goto	u3420
  3608  000CB4                     u3421:
  3609  000CB4  EFC3  F006         	goto	l4410
  3610  000CB8                     u3420:
  3611  000CB8                     
  3612                           ;main.c: 341:                     LATDbits.LATD5 = 1;
  3613  000CB8  8A8C               	bsf	140,5,c	;volatile
  3614  000CBA  EFD4  F005         	goto	l4362
  3615  000CBE                     l4394:
  3616                           
  3617                           ;main.c: 347:                 if (estaSeco(sensores[i])) {
  3618  000CBE  90D8               	bcf	status,0,c
  3619  000CC0  3412               	rlcf	encenderBombas@i^0,w,c
  3620  000CC2  6ED9               	movwf	fsr2l,c
  3621  000CC4  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3622  000CC6  6EDA               	movwf	fsr2h,c
  3623  000CC8  0E60               	movlw	low _sensores
  3624  000CCA  26D9               	addwf	fsr2l,f,c
  3625  000CCC  0E00               	movlw	high _sensores
  3626  000CCE  22DA               	addwfc	fsr2h,f,c
  3627  000CD0  CFDE F00C          	movff	postinc2,estaSeco@s
  3628  000CD4  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3629  000CD8  EC65  F018         	call	_estaSeco	;wreg free
  3630  000CDC  500C               	movf	?_estaSeco^0,w,c
  3631  000CDE  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3632  000CE0  B4D8               	btfsc	status,2,c
  3633  000CE2  EF75  F006         	goto	u3431
  3634  000CE6  EF77  F006         	goto	u3430
  3635  000CEA                     u3431:
  3636  000CEA  EFC3  F006         	goto	l4410
  3637  000CEE                     u3430:
  3638  000CEE                     
  3639                           ;main.c: 348:                     LATDbits.LATD6 = 1;
  3640  000CEE  8C8C               	bsf	140,6,c	;volatile
  3641  000CF0  EFD4  F005         	goto	l4362
  3642  000CF4                     l4400:
  3643                           
  3644                           ;main.c: 354:                 if (estaSeco(sensores[i])) {
  3645  000CF4  90D8               	bcf	status,0,c
  3646  000CF6  3412               	rlcf	encenderBombas@i^0,w,c
  3647  000CF8  6ED9               	movwf	fsr2l,c
  3648  000CFA  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3649  000CFC  6EDA               	movwf	fsr2h,c
  3650  000CFE  0E60               	movlw	low _sensores
  3651  000D00  26D9               	addwf	fsr2l,f,c
  3652  000D02  0E00               	movlw	high _sensores
  3653  000D04  22DA               	addwfc	fsr2h,f,c
  3654  000D06  CFDE F00C          	movff	postinc2,estaSeco@s
  3655  000D0A  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3656  000D0E  EC65  F018         	call	_estaSeco	;wreg free
  3657  000D12  500C               	movf	?_estaSeco^0,w,c
  3658  000D14  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3659  000D16  B4D8               	btfsc	status,2,c
  3660  000D18  EF90  F006         	goto	u3441
  3661  000D1C  EF92  F006         	goto	u3440
  3662  000D20                     u3441:
  3663  000D20  EFC3  F006         	goto	l4410
  3664  000D24                     u3440:
  3665  000D24                     
  3666                           ;main.c: 355:                     LATDbits.LATD7 = 1;
  3667  000D24  8E8C               	bsf	140,7,c	;volatile
  3668  000D26  EFD4  F005         	goto	l4362
  3669  000D2A                     l4408:
  3670  000D2A  C012  F00F         	movff	encenderBombas@i,??_encenderBombas
  3671  000D2E  C013  F010         	movff	encenderBombas@i+1,??_encenderBombas+1
  3672                           
  3673                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3674                           ; Switch size 1, requested type "simple"
  3675                           ; Number of cases is 1, Range of values is 0 to 0
  3676                           ; switch strategies available:
  3677                           ; Name         Instructions Cycles
  3678                           ; simple_byte            4     3 (average)
  3679                           ;	Chosen strategy is simple_byte
  3680  000D32  5010               	movf	(??_encenderBombas+1)^0,w,c
  3681  000D34  0A00               	xorlw	0	; case 0
  3682  000D36  B4D8               	btfsc	status,2,c
  3683  000D38  EFA0  F006         	goto	l5130
  3684  000D3C  EFC3  F006         	goto	l4410
  3685  000D40                     l5130:
  3686                           
  3687                           ; Switch size 1, requested type "simple"
  3688                           ; Number of cases is 8, Range of values is 0 to 7
  3689                           ; switch strategies available:
  3690                           ; Name         Instructions Cycles
  3691                           ; simple_byte           25    13 (average)
  3692                           ;	Chosen strategy is simple_byte
  3693  000D40  500F               	movf	??_encenderBombas^0,w,c
  3694  000D42  0A00               	xorlw	0	; case 0
  3695  000D44  B4D8               	btfsc	status,2,c
  3696  000D46  EFBB  F005         	goto	l4358
  3697  000D4A  0A01               	xorlw	1	; case 1
  3698  000D4C  B4D8               	btfsc	status,2,c
  3699  000D4E  EFD8  F005         	goto	l4364
  3700  000D52  0A03               	xorlw	3	; case 2
  3701  000D54  B4D8               	btfsc	status,2,c
  3702  000D56  EFF3  F005         	goto	l4370
  3703  000D5A  0A01               	xorlw	1	; case 3
  3704  000D5C  B4D8               	btfsc	status,2,c
  3705  000D5E  EF0E  F006         	goto	l4376
  3706  000D62  0A07               	xorlw	7	; case 4
  3707  000D64  B4D8               	btfsc	status,2,c
  3708  000D66  EF29  F006         	goto	l4382
  3709  000D6A  0A01               	xorlw	1	; case 5
  3710  000D6C  B4D8               	btfsc	status,2,c
  3711  000D6E  EF44  F006         	goto	l4388
  3712  000D72  0A03               	xorlw	3	; case 6
  3713  000D74  B4D8               	btfsc	status,2,c
  3714  000D76  EF5F  F006         	goto	l4394
  3715  000D7A  0A01               	xorlw	1	; case 7
  3716  000D7C  B4D8               	btfsc	status,2,c
  3717  000D7E  EF7A  F006         	goto	l4400
  3718  000D82  EFC3  F006         	goto	l4410
  3719  000D86                     l4410:
  3720                           
  3721                           ;main.c: 361:     }
  3722  000D86  4A12               	infsnz	encenderBombas@i^0,f,c
  3723  000D88  2A13               	incf	(encenderBombas@i+1)^0,f,c
  3724  000D8A  BE13               	btfsc	(encenderBombas@i+1)^0,7,c
  3725  000D8C  EFD0  F006         	goto	u3451
  3726  000D90  5013               	movf	(encenderBombas@i+1)^0,w,c
  3727  000D92  E108               	bnz	u3450
  3728  000D94  0412               	decf	encenderBombas@i^0,w,c
  3729  000D96  A0D8               	btfss	status,0,c
  3730  000D98  EFD0  F006         	goto	u3451
  3731  000D9C  EFD2  F006         	goto	u3450
  3732  000DA0                     u3451:
  3733  000DA0  EF95  F006         	goto	l4408
  3734  000DA4                     u3450:
  3735  000DA4                     
  3736                           ;main.c: 363:     if (flagSeco) {
  3737  000DA4  5011               	movf	encenderBombas@flagSeco^0,w,c
  3738  000DA6  B4D8               	btfsc	status,2,c
  3739  000DA8  EFD8  F006         	goto	u3461
  3740  000DAC  EFDA  F006         	goto	u3460
  3741  000DB0                     u3461:
  3742  000DB0  EFE7  F006         	goto	l306
  3743  000DB4                     u3460:
  3744  000DB4                     
  3745                           ;main.c: 364:         regando = 1;
  3746  000DB4  0E01               	movlw	1
  3747  000DB6  0100               	movlb	0	; () banked
  3748  000DB8  6F7B               	movwf	_regando& (0+255),b
  3749  000DBA                     
  3750                           ; BSR set to: 0
  3751                           ;main.c: 365:         horarios[hora].regado = 0;
  3752  000DBA  5187               	movf	_hora& (0+255),w,b
  3753  000DBC  0D0C               	mullw	12
  3754  000DBE  0E3C               	movlw	low (_horarios+10)
  3755  000DC0  24F3               	addwf	243,w,c
  3756  000DC2  6ED9               	movwf	fsr2l,c
  3757  000DC4  0E01               	movlw	high (_horarios+10)
  3758  000DC6  20F4               	addwfc	prodh,w,c
  3759  000DC8  6EDA               	movwf	fsr2h,c
  3760  000DCA  0E00               	movlw	0
  3761  000DCC  6EDF               	movwf	indf2,c
  3762  000DCE                     l306:
  3763  000DCE  0012               	return		;funcret
  3764  000DD0                     __end_of_encenderBombas:
  3765                           	opt callstack 0
  3766                           
  3767 ;; *************** function _estaSeco *****************
  3768 ;; Defined at:
  3769 ;;		line 148 in file "main.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  s               2   11[COMRAM] struct .
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;		None
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  2   11[COMRAM] int 
  3776 ;; Registers used:
  3777 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3783 ;;      Params:         2       0       0       0       0       0       0       0       0
  3784 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3785 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3786 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3787 ;;Total ram usage:        3 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:    4
  3790 ;; This function calls:
  3791 ;;		_dameTemperaturaHumedad
  3792 ;; This function is called by:
  3793 ;;		_encenderBombas
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           	psect	text4
  3798  0030CA                     __ptext4:
  3799                           	opt callstack 0
  3800  0030CA                     _estaSeco:
  3801                           	opt callstack 24
  3802  0030CA                     
  3803                           ;main.c: 150:     dameTemperaturaHumedad();
  3804  0030CA  ECE5  F013         	call	_dameTemperaturaHumedad	;wreg free
  3805  0030CE                     
  3806                           ;main.c: 153:     return (s.porcientoHumedad < 94) && (Temperatura < 34);
  3807  0030CE  0E00               	movlw	0
  3808  0030D0  6E0E               	movwf	_estaSeco$799^0,c
  3809  0030D2  0E5E               	movlw	94
  3810  0030D4  600C               	cpfslt	estaSeco@s^0,c
  3811  0030D6  EF6F  F018         	goto	u3221
  3812  0030DA  EF71  F018         	goto	u3220
  3813  0030DE                     u3221:
  3814  0030DE  EF7C  F018         	goto	l4180
  3815  0030E2                     u3220:
  3816  0030E2  0E22               	movlw	34
  3817  0030E4  0100               	movlb	0	; () banked
  3818  0030E6  617F               	cpfslt	_Temperatura& (0+255),b
  3819  0030E8  EF78  F018         	goto	u3231
  3820  0030EC  EF7A  F018         	goto	u3230
  3821  0030F0                     u3231:
  3822  0030F0  EF7C  F018         	goto	l4180
  3823  0030F4                     u3230:
  3824  0030F4                     
  3825                           ; BSR set to: 0
  3826  0030F4  0E01               	movlw	1
  3827  0030F6  6E0E               	movwf	_estaSeco$799^0,c
  3828  0030F8                     l4180:
  3829  0030F8  C00E  F00C         	movff	_estaSeco$799,?_estaSeco
  3830  0030FC  6A0D               	clrf	(?_estaSeco+1)^0,c
  3831  0030FE  0012               	return		;funcret
  3832  003100                     __end_of_estaSeco:
  3833                           	opt callstack 0
  3834                           
  3835 ;; *************** function _dameHoraActual *****************
  3836 ;; Defined at:
  3837 ;;		line 181 in file "main.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;		None
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;		None
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      void 
  3844 ;; Registers used:
  3845 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3851 ;;      Params:         0       0       0       0       0       0       0       0       0
  3852 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3853 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3854 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3855 ;;Total ram usage:        0 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:    4
  3858 ;; This function calls:
  3859 ;;		_convertirDato
  3860 ;;		_leer_rtc
  3861 ;; This function is called by:
  3862 ;;		_sistemaRegado
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           	psect	text5
  3867  003196                     __ptext5:
  3868                           	opt callstack 0
  3869  003196                     _dameHoraActual:
  3870                           	opt callstack 25
  3871  003196                     
  3872                           ;main.c: 183:     segundos = convertirDato(leer_rtc(0x00));
  3873  003196  0E00               	movlw	0
  3874  003198  ECE1  F018         	call	_leer_rtc
  3875  00319C  EC1C  F019         	call	_convertirDato
  3876  0031A0  0100               	movlb	0	; () banked
  3877  0031A2  6F85               	movwf	_segundos& (0+255),b
  3878                           
  3879                           ;main.c: 184:     minutos = convertirDato(leer_rtc(0x01));
  3880  0031A4  0E01               	movlw	1
  3881  0031A6  ECE1  F018         	call	_leer_rtc
  3882  0031AA  EC1C  F019         	call	_convertirDato
  3883  0031AE  0100               	movlb	0	; () banked
  3884  0031B0  6F86               	movwf	_minutos& (0+255),b
  3885                           
  3886                           ;main.c: 185:     hora = convertirDato(leer_rtc(0x02));
  3887  0031B2  0E02               	movlw	2
  3888  0031B4  ECE1  F018         	call	_leer_rtc
  3889  0031B8  EC1C  F019         	call	_convertirDato
  3890  0031BC  0100               	movlb	0	; () banked
  3891  0031BE  6F87               	movwf	_hora& (0+255),b
  3892  0031C0                     
  3893                           ; BSR set to: 0
  3894  0031C0  0012               	return		;funcret
  3895  0031C2                     __end_of_dameHoraActual:
  3896                           	opt callstack 0
  3897                           
  3898 ;; *************** function _dameDiaActual *****************
  3899 ;; Defined at:
  3900 ;;		line 188 in file "main.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;		None
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;		None
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  1    wreg      void 
  3907 ;; Registers used:
  3908 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3914 ;;      Params:         0       0       0       0       0       0       0       0       0
  3915 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3916 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3917 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3918 ;;Total ram usage:        0 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:    4
  3921 ;; This function calls:
  3922 ;;		_convertirDato
  3923 ;;		_leer_rtc
  3924 ;; This function is called by:
  3925 ;;		_sistemaRegado
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929                           	psect	text6
  3930  0032DC                     __ptext6:
  3931                           	opt callstack 0
  3932  0032DC                     _dameDiaActual:
  3933                           	opt callstack 25
  3934  0032DC                     
  3935                           ;main.c: 190:     diaActual = convertirDato(leer_rtc(0x03));
  3936  0032DC  0E03               	movlw	3
  3937  0032DE  ECE1  F018         	call	_leer_rtc
  3938  0032E2  EC1C  F019         	call	_convertirDato
  3939  0032E6  0100               	movlb	0	; () banked
  3940  0032E8  6F84               	movwf	_diaActual& (0+255),b
  3941  0032EA                     
  3942                           ; BSR set to: 0
  3943  0032EA  0012               	return		;funcret
  3944  0032EC                     __end_of_dameDiaActual:
  3945                           	opt callstack 0
  3946                           
  3947 ;; *************** function _leer_rtc *****************
  3948 ;; Defined at:
  3949 ;;		line 13 in file "./RTC.h"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;  direccion       1    wreg     unsigned char 
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;  direccion       1    2[COMRAM] unsigned char 
  3954 ;;  dato            1    3[COMRAM] unsigned char 
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  1    wreg      unsigned char 
  3957 ;; Registers used:
  3958 ;;		wreg, status,2, status,0, cstack
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3964 ;;      Params:         0       0       0       0       0       0       0       0       0
  3965 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3966 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3967 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3968 ;;Total ram usage:        2 bytes
  3969 ;; Hardware stack levels used:    1
  3970 ;; Hardware stack levels required when called:    3
  3971 ;; This function calls:
  3972 ;;		_i2c_detener
  3973 ;;		_i2c_envia_dato
  3974 ;;		_i2c_inicia_com
  3975 ;;		_i2c_recibe_dato
  3976 ;;		_i2c_reinicia_com
  3977 ;; This function is called by:
  3978 ;;		_dameHoraActual
  3979 ;;		_dameDiaActual
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           	psect	text7
  3984  0031C2                     __ptext7:
  3985                           	opt callstack 0
  3986  0031C2                     _leer_rtc:
  3987                           	opt callstack 25
  3988                           
  3989                           ; BSR set to: 0
  3990                           ;incstack = 0
  3991                           ;leer_rtc@direccion stored from wreg
  3992  0031C2  6E03               	movwf	leer_rtc@direccion^0,c
  3993  0031C4                     
  3994                           ;./RTC.h: 14:     unsigned char dato;;./RTC.h: 15:     i2c_inicia_com();
  3995  0031C4  EC90  F019         	call	_i2c_inicia_com	;wreg free
  3996                           
  3997                           ;./RTC.h: 16:     i2c_envia_dato(0xD0);
  3998  0031C8  0ED0               	movlw	208
  3999  0031CA  EC76  F019         	call	_i2c_envia_dato
  4000                           
  4001                           ;./RTC.h: 17:     i2c_envia_dato(direccion);
  4002  0031CE  5003               	movf	leer_rtc@direccion^0,w,c
  4003  0031D0  EC76  F019         	call	_i2c_envia_dato
  4004                           
  4005                           ;./RTC.h: 18:     i2c_reinicia_com();
  4006  0031D4  EC8C  F019         	call	_i2c_reinicia_com	;wreg free
  4007                           
  4008                           ;./RTC.h: 19:     i2c_envia_dato(0xD1);
  4009  0031D8  0ED1               	movlw	209
  4010  0031DA  EC76  F019         	call	_i2c_envia_dato
  4011                           
  4012                           ;./RTC.h: 20:     dato = i2c_recibe_dato();
  4013  0031DE  EC4B  F019         	call	_i2c_recibe_dato	;wreg free
  4014  0031E2  6E04               	movwf	leer_rtc@dato^0,c
  4015                           
  4016                           ;./RTC.h: 21:     i2c_detener();
  4017  0031E4  EC94  F019         	call	_i2c_detener	;wreg free
  4018  0031E8                     
  4019                           ;./RTC.h: 22:     return dato;
  4020  0031E8  5004               	movf	leer_rtc@dato^0,w,c
  4021  0031EA  0012               	return		;funcret
  4022  0031EC                     __end_of_leer_rtc:
  4023                           	opt callstack 0
  4024                           
  4025 ;; *************** function _convertirDato *****************
  4026 ;; Defined at:
  4027 ;;		line 28 in file "./RTC.h"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;  dato            1    wreg     unsigned char 
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;  dato            1    1[COMRAM] unsigned char 
  4032 ;;  datoR           1    2[COMRAM] unsigned char 
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      unsigned char 
  4035 ;; Registers used:
  4036 ;;		wreg, status,2, status,0, prodl, prodh
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4042 ;;      Params:         0       0       0       0       0       0       0       0       0
  4043 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4044 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4045 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4046 ;;Total ram usage:        3 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:    1
  4049 ;; This function calls:
  4050 ;;		Nothing
  4051 ;; This function is called by:
  4052 ;;		_dameHoraActual
  4053 ;;		_dameDiaActual
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           	psect	text8
  4058  003238                     __ptext8:
  4059                           	opt callstack 0
  4060  003238                     _convertirDato:
  4061                           	opt callstack 27
  4062                           
  4063                           ;incstack = 0
  4064                           ;convertirDato@dato stored from wreg
  4065  003238  6E02               	movwf	convertirDato@dato^0,c
  4066  00323A                     
  4067                           ;./RTC.h: 30:     datoR = (dato & 0xF0) >> 4;
  4068  00323A  3802               	swapf	convertirDato@dato^0,w,c
  4069  00323C  0B0F               	andlw	15
  4070  00323E  0B0F               	andlw	15
  4071  003240  6E03               	movwf	convertirDato@datoR^0,c
  4072  003242                     
  4073                           ;./RTC.h: 31:     datoR = (datoR * 10) + (dato & 0x0F);
  4074  003242  C002  F001         	movff	convertirDato@dato,??_convertirDato
  4075  003246  0E0F               	movlw	15
  4076  003248  1601               	andwf	??_convertirDato^0,f,c
  4077  00324A  5003               	movf	convertirDato@datoR^0,w,c
  4078  00324C  0D0A               	mullw	10
  4079  00324E  50F3               	movf	243,w,c
  4080  003250  2401               	addwf	??_convertirDato^0,w,c
  4081  003252  6E03               	movwf	convertirDato@datoR^0,c
  4082  003254                     
  4083                           ;./RTC.h: 32:     return datoR;
  4084  003254  5003               	movf	convertirDato@datoR^0,w,c
  4085  003256  0012               	return		;funcret
  4086  003258                     __end_of_convertirDato:
  4087                           	opt callstack 0
  4088                           
  4089 ;; *************** function _sistemaPrincipal *****************
  4090 ;; Defined at:
  4091 ;;		line 572 in file "main.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;  opcion          1    wreg     unsigned char 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  opcion          1   70[BANK0 ] unsigned char 
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  1    wreg      void 
  4098 ;; Registers used:
  4099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4105 ;;      Params:         0       0       0       0       0       0       0       0       0
  4106 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4107 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4108 ;;      Totals:         0       3       0       0       0       0       0       0       0
  4109 ;;Total ram usage:        3 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:   11
  4112 ;; This function calls:
  4113 ;;		_UART_printf
  4114 ;;		_asignarHorarios
  4115 ;;		_dameDatosSistema
  4116 ;;		_fijaDiaRtc
  4117 ;;		_fijaHoraRtc
  4118 ;;		_leeHorariosMemoria
  4119 ;;		_mostrarDatosSensores
  4120 ;;		_mostrarDatosSensoresWIFI
  4121 ;;		_mostrarMenu
  4122 ;;		_regadoRapido
  4123 ;;		_setTiempoRegar
  4124 ;; This function is called by:
  4125 ;;		_main
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           	psect	text9
  4130  002126                     __ptext9:
  4131                           	opt callstack 0
  4132  002126                     _sistemaPrincipal:
  4133                           	opt callstack 19
  4134                           
  4135                           ;incstack = 0
  4136                           ;sistemaPrincipal@opcion stored from wreg
  4137  002126  0100               	movlb	0	; () banked
  4138  002128  6FF3               	movwf	sistemaPrincipal@opcion& (0+255),b
  4139  00212A                     
  4140                           ;main.c: 574:     PIE1bits.RCIE = 0;
  4141  00212A  9A9D               	bcf	157,5,c	;volatile
  4142                           
  4143                           ;main.c: 576:     switch (opcion) {
  4144  00212C  EFD2  F010         	goto	l4772
  4145  002130                     l4746:
  4146                           
  4147                           ; BSR set to: 0
  4148                           ;main.c: 579:             fijaHoraRtc();
  4149  002130  EC96  F015         	call	_fijaHoraRtc	;wreg free
  4150                           
  4151                           ;main.c: 580:             break;
  4152  002134  EF00  F011         	goto	l4774
  4153  002138                     l4748:
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;main.c: 583:             asignarHorarios();
  4157  002138  ECFA  F007         	call	_asignarHorarios	;wreg free
  4158                           
  4159                           ;main.c: 584:             break;
  4160  00213C  EF00  F011         	goto	l4774
  4161  002140                     l4750:
  4162                           
  4163                           ; BSR set to: 0
  4164                           ;main.c: 587:             setTiempoRegar();
  4165  002140  EC4B  F013         	call	_setTiempoRegar	;wreg free
  4166                           
  4167                           ;main.c: 588:             break;
  4168  002144  EF00  F011         	goto	l4774
  4169  002148                     l4752:
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;main.c: 591:             dameDatosSistema();
  4173  002148  ECCA  F002         	call	_dameDatosSistema	;wreg free
  4174                           
  4175                           ;main.c: 592:             break;
  4176  00214C  EF00  F011         	goto	l4774
  4177  002150                     l4754:
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;main.c: 595:             if (MODO_COMUNICACION)
  4181  002150  5188               	movf	_MODO_COMUNICACION& (0+255),w,b
  4182  002152  B4D8               	btfsc	status,2,c
  4183  002154  EFAE  F010         	goto	u3671
  4184  002158  EFB0  F010         	goto	u3670
  4185  00215C                     u3671:
  4186  00215C  EFB4  F010         	goto	l4758
  4187  002160                     u3670:
  4188  002160                     
  4189                           ; BSR set to: 0
  4190                           ;main.c: 596:                 mostrarDatosSensoresWIFI();
  4191  002160  EC1B  F010         	call	_mostrarDatosSensoresWIFI	;wreg free
  4192  002164  EF00  F011         	goto	l4774
  4193  002168                     l4758:
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;main.c: 598:                 mostrarDatosSensores();
  4197  002168  EC04  F011         	call	_mostrarDatosSensores	;wreg free
  4198  00216C  EF00  F011         	goto	l4774
  4199  002170                     l4760:
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;main.c: 603:             regadoRapido();
  4203  002170  EC81  F00E         	call	_regadoRapido	;wreg free
  4204                           
  4205                           ;main.c: 604:             break;
  4206  002174  EF00  F011         	goto	l4774
  4207  002178                     l4762:
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;main.c: 607:             fijaDiaRtc();
  4211  002178  EC9B  F018         	call	_fijaDiaRtc	;wreg free
  4212                           
  4213                           ;main.c: 608:             break;
  4214  00217C  EF00  F011         	goto	l4774
  4215  002180                     l4764:
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;main.c: 611:             leeHorariosMemoria();
  4219  002180  ECE4  F00D         	call	_leeHorariosMemoria	;wreg free
  4220  002184                     
  4221                           ;main.c: 612:             UART_printf("\r\n HORARIOS CARGADOS CON EXITO!\r\n");
  4222  002184  0E19               	movlw	low STR_33
  4223  002186  6E02               	movwf	UART_printf@cadena^0,c
  4224  002188  0E7D               	movlw	high STR_33
  4225  00218A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4226  00218C  EC2C  F016         	call	_UART_printf	;wreg free
  4227                           
  4228                           ;main.c: 613:             break;
  4229  002190  EF00  F011         	goto	l4774
  4230  002194                     l4768:
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;main.c: 616:             UART_printf("\r\n Solo se permiten numeros del 1 al 8 \r\n");
  4234  002194  0E5C               	movlw	low STR_34
  4235  002196  6E02               	movwf	UART_printf@cadena^0,c
  4236  002198  0E7B               	movlw	high STR_34
  4237  00219A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4238  00219C  EC2C  F016         	call	_UART_printf	;wreg free
  4239                           
  4240                           ;main.c: 617:             break;
  4241  0021A0  EF00  F011         	goto	l4774
  4242  0021A4                     l4772:
  4243  0021A4  0100               	movlb	0	; () banked
  4244  0021A6  51F3               	movf	sistemaPrincipal@opcion& (0+255),w,b
  4245  0021A8  6FF1               	movwf	??_sistemaPrincipal& (0+255),b
  4246  0021AA  6BF2               	clrf	(??_sistemaPrincipal+1)& (0+255),b
  4247                           
  4248                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4249                           ; Switch size 1, requested type "simple"
  4250                           ; Number of cases is 1, Range of values is 0 to 0
  4251                           ; switch strategies available:
  4252                           ; Name         Instructions Cycles
  4253                           ; simple_byte            4     3 (average)
  4254                           ;	Chosen strategy is simple_byte
  4255  0021AC  51F2               	movf	(??_sistemaPrincipal+1)& (0+255),w,b
  4256  0021AE  0A00               	xorlw	0	; case 0
  4257  0021B0  B4D8               	btfsc	status,2,c
  4258  0021B2  EFDD  F010         	goto	l5132
  4259  0021B6  EFCA  F010         	goto	l4768
  4260  0021BA                     l5132:
  4261                           
  4262                           ; BSR set to: 0
  4263                           ; Switch size 1, requested type "simple"
  4264                           ; Number of cases is 8, Range of values is 1 to 8
  4265                           ; switch strategies available:
  4266                           ; Name         Instructions Cycles
  4267                           ; simple_byte           25    13 (average)
  4268                           ;	Chosen strategy is simple_byte
  4269  0021BA  51F1               	movf	??_sistemaPrincipal& (0+255),w,b
  4270  0021BC  0A01               	xorlw	1	; case 1
  4271  0021BE  B4D8               	btfsc	status,2,c
  4272  0021C0  EF98  F010         	goto	l4746
  4273  0021C4  0A03               	xorlw	3	; case 2
  4274  0021C6  B4D8               	btfsc	status,2,c
  4275  0021C8  EF9C  F010         	goto	l4748
  4276  0021CC  0A01               	xorlw	1	; case 3
  4277  0021CE  B4D8               	btfsc	status,2,c
  4278  0021D0  EFA0  F010         	goto	l4750
  4279  0021D4  0A07               	xorlw	7	; case 4
  4280  0021D6  B4D8               	btfsc	status,2,c
  4281  0021D8  EFA4  F010         	goto	l4752
  4282  0021DC  0A01               	xorlw	1	; case 5
  4283  0021DE  B4D8               	btfsc	status,2,c
  4284  0021E0  EFA8  F010         	goto	l4754
  4285  0021E4  0A03               	xorlw	3	; case 6
  4286  0021E6  B4D8               	btfsc	status,2,c
  4287  0021E8  EFB8  F010         	goto	l4760
  4288  0021EC  0A01               	xorlw	1	; case 7
  4289  0021EE  B4D8               	btfsc	status,2,c
  4290  0021F0  EFBC  F010         	goto	l4762
  4291  0021F4  0A0F               	xorlw	15	; case 8
  4292  0021F6  B4D8               	btfsc	status,2,c
  4293  0021F8  EFC0  F010         	goto	l4764
  4294  0021FC  EFCA  F010         	goto	l4768
  4295  002200                     l4774:
  4296                           
  4297                           ;main.c: 620:     mostrarMenu();
  4298  002200  EC2F  F014         	call	_mostrarMenu	;wreg free
  4299  002204                     
  4300                           ;main.c: 621:     PIE1bits.RCIE = 1;
  4301  002204  8A9D               	bsf	157,5,c	;volatile
  4302  002206  0012               	return		;funcret
  4303  002208                     __end_of_sistemaPrincipal:
  4304                           	opt callstack 0
  4305                           
  4306 ;; *************** function _setTiempoRegar *****************
  4307 ;; Defined at:
  4308 ;;		line 451 in file "main.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;		None
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;  hora            1   19[COMRAM] unsigned char 
  4313 ;;  tiempoRegar     1   18[COMRAM] unsigned char 
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      void 
  4316 ;; Registers used:
  4317 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4323 ;;      Params:         0       0       0       0       0       0       0       0       0
  4324 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4325 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4326 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4327 ;;Total ram usage:        2 bytes
  4328 ;; Hardware stack levels used:    1
  4329 ;; Hardware stack levels required when called:    5
  4330 ;; This function calls:
  4331 ;;		_UART_printf
  4332 ;;		_escribeHorariosMemoria
  4333 ;;		_getValue
  4334 ;; This function is called by:
  4335 ;;		_sistemaPrincipal
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           	psect	text10
  4340  002696                     __ptext10:
  4341                           	opt callstack 0
  4342  002696                     _setTiempoRegar:
  4343                           	opt callstack 24
  4344  002696                     
  4345                           ;main.c: 453:     unsigned char hora;;main.c: 454:     unsigned char tiempoRegar;;main.c
      +                          : 456:     UART_printf("\r\n TIEMPO DE REGADO \r\n");
  4346  002696  0E3B               	movlw	low STR_15
  4347  002698  6E02               	movwf	UART_printf@cadena^0,c
  4348  00269A  0E7F               	movlw	high STR_15
  4349  00269C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4350  00269E  EC2C  F016         	call	_UART_printf	;wreg free
  4351                           
  4352                           ;main.c: 458:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  4353  0026A2  0E6D               	movlw	low STR_8
  4354  0026A4  6E02               	movwf	UART_printf@cadena^0,c
  4355  0026A6  0E7A               	movlw	high STR_8
  4356  0026A8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4357  0026AA  EC2C  F016         	call	_UART_printf	;wreg free
  4358  0026AE                     
  4359                           ;main.c: 459:     hora = getValue(2);
  4360  0026AE  0E00               	movlw	0
  4361  0026B0  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4362  0026B2  0E02               	movlw	2
  4363  0026B4  6E04               	movwf	getValue@numCharacters^0,c
  4364  0026B6  ECE8  F006         	call	_getValue	;wreg free
  4365  0026BA  6E14               	movwf	setTiempoRegar@hora^0,c
  4366  0026BC                     
  4367                           ;main.c: 461:     if (hora != '@') {
  4368  0026BC  0E40               	movlw	64
  4369  0026BE  1814               	xorwf	setTiempoRegar@hora^0,w,c
  4370  0026C0  B4D8               	btfsc	status,2,c
  4371  0026C2  EF65  F013         	goto	u3541
  4372  0026C6  EF67  F013         	goto	u3540
  4373  0026CA                     u3541:
  4374  0026CA  EF9A  F013         	goto	l330
  4375  0026CE                     u3540:
  4376  0026CE                     
  4377                           ;main.c: 463:         UART_printf("\r\n Ingrese los minutos que desee que se riegue en e
      +                          se horario ej: 15 \r\n");
  4378  0026CE  0EFD               	movlw	low STR_17
  4379  0026D0  6E02               	movwf	UART_printf@cadena^0,c
  4380  0026D2  0E78               	movlw	high STR_17
  4381  0026D4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4382  0026D6  EC2C  F016         	call	_UART_printf	;wreg free
  4383  0026DA                     
  4384                           ;main.c: 464:         tiempoRegar = getValue(2);
  4385  0026DA  0E00               	movlw	0
  4386  0026DC  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4387  0026DE  0E02               	movlw	2
  4388  0026E0  6E04               	movwf	getValue@numCharacters^0,c
  4389  0026E2  ECE8  F006         	call	_getValue	;wreg free
  4390  0026E6  6E13               	movwf	setTiempoRegar@tiempoRegar^0,c
  4391  0026E8                     
  4392                           ;main.c: 466:         if (tiempoRegar != '@') {
  4393  0026E8  0E40               	movlw	64
  4394  0026EA  1813               	xorwf	setTiempoRegar@tiempoRegar^0,w,c
  4395  0026EC  B4D8               	btfsc	status,2,c
  4396  0026EE  EF7B  F013         	goto	u3551
  4397  0026F2  EF7D  F013         	goto	u3550
  4398  0026F6                     u3551:
  4399  0026F6  EF9A  F013         	goto	l330
  4400  0026FA                     u3550:
  4401  0026FA                     
  4402                           ;main.c: 470:             UART_printf("\r\n Minutos de riego establecidos! \r\n");
  4403  0026FA  0ED2               	movlw	low STR_18
  4404  0026FC  6E02               	movwf	UART_printf@cadena^0,c
  4405  0026FE  0E7B               	movlw	high STR_18
  4406  002700  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4407  002702  EC2C  F016         	call	_UART_printf	;wreg free
  4408  002706                     
  4409                           ;main.c: 472:             horarios[hora].tiempoRegar = tiempoRegar;
  4410  002706  5014               	movf	setTiempoRegar@hora^0,w,c
  4411  002708  0D0C               	mullw	12
  4412  00270A  0E3D               	movlw	low (_horarios+11)
  4413  00270C  24F3               	addwf	243,w,c
  4414  00270E  6ED9               	movwf	fsr2l,c
  4415  002710  0E01               	movlw	high (_horarios+11)
  4416  002712  20F4               	addwfc	prodh,w,c
  4417  002714  6EDA               	movwf	fsr2h,c
  4418  002716  C013  FFDF         	movff	setTiempoRegar@tiempoRegar,indf2
  4419  00271A                     
  4420                           ;main.c: 473:             minutosRegar = horarios[hora].tiempoRegar;
  4421  00271A  5014               	movf	setTiempoRegar@hora^0,w,c
  4422  00271C  0D0C               	mullw	12
  4423  00271E  0E3D               	movlw	low (_horarios+11)
  4424  002720  24F3               	addwf	243,w,c
  4425  002722  6ED9               	movwf	fsr2l,c
  4426  002724  0E01               	movlw	high (_horarios+11)
  4427  002726  20F4               	addwfc	prodh,w,c
  4428  002728  6EDA               	movwf	fsr2h,c
  4429  00272A  50DF               	movf	indf2,w,c
  4430  00272C  0100               	movlb	0	; () banked
  4431  00272E  6F7D               	movwf	_minutosRegar& (0+255),b
  4432  002730                     
  4433                           ; BSR set to: 0
  4434                           ;main.c: 475:             escribeHorariosMemoria();
  4435  002730  EC43  F00D         	call	_escribeHorariosMemoria	;wreg free
  4436  002734                     l330:
  4437  002734  0012               	return		;funcret
  4438  002736                     __end_of_setTiempoRegar:
  4439                           	opt callstack 0
  4440                           
  4441 ;; *************** function _regadoRapido *****************
  4442 ;; Defined at:
  4443 ;;		line 958 in file "main.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;		None
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;  areaRegar       1   17[COMRAM] unsigned char 
  4448 ;;  tiempoRegar     1   16[COMRAM] unsigned char 
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  1    wreg      void 
  4451 ;; Registers used:
  4452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4458 ;;      Params:         0       0       0       0       0       0       0       0       0
  4459 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4460 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4461 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4462 ;;Total ram usage:        4 bytes
  4463 ;; Hardware stack levels used:    1
  4464 ;; Hardware stack levels required when called:    4
  4465 ;; This function calls:
  4466 ;;		_UART_printf
  4467 ;;		_getValue
  4468 ;; This function is called by:
  4469 ;;		_sistemaPrincipal
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472                           
  4473                           	psect	text11
  4474  001D02                     __ptext11:
  4475                           	opt callstack 0
  4476  001D02                     _regadoRapido:
  4477                           	opt callstack 25
  4478  001D02                     
  4479                           ;main.c: 960:     unsigned char tiempoRegar;;main.c: 961:     unsigned char areaRegar;;m
      +                          ain.c: 963:     UART_printf("\r\n REGADO RAPIDO \r\n");
  4480  001D02  0E80               	movlw	low STR_59
  4481  001D04  6E02               	movwf	UART_printf@cadena^0,c
  4482  001D06  0E7F               	movlw	high STR_59
  4483  001D08  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4484  001D0A  EC2C  F016         	call	_UART_printf	;wreg free
  4485  001D0E                     
  4486                           ;main.c: 965:     if (!regando) {
  4487  001D0E  0100               	movlb	0	; () banked
  4488  001D10  517B               	movf	_regando& (0+255),w,b
  4489  001D12  A4D8               	btfss	status,2,c
  4490  001D14  EF8E  F00E         	goto	u3611
  4491  001D18  EF90  F00E         	goto	u3610
  4492  001D1C                     u3611:
  4493  001D1C  EF15  F00F         	goto	l4672
  4494  001D20                     u3610:
  4495  001D20                     
  4496                           ; BSR set to: 0
  4497                           ;main.c: 966:         UART_printf("\r\n Ingrese los minutos que desee que se riegue ej: 
      +                          15 \r\n");
  4498  001D20  0E34               	movlw	low STR_60
  4499  001D22  6E02               	movwf	UART_printf@cadena^0,c
  4500  001D24  0E7A               	movlw	high STR_60
  4501  001D26  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4502  001D28  EC2C  F016         	call	_UART_printf	;wreg free
  4503  001D2C                     
  4504                           ;main.c: 967:         tiempoRegar = getValue(2);
  4505  001D2C  0E00               	movlw	0
  4506  001D2E  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4507  001D30  0E02               	movlw	2
  4508  001D32  6E04               	movwf	getValue@numCharacters^0,c
  4509  001D34  ECE8  F006         	call	_getValue	;wreg free
  4510  001D38  6E11               	movwf	regadoRapido@tiempoRegar^0,c
  4511  001D3A                     
  4512                           ;main.c: 969:         if (tiempoRegar != '@') {
  4513  001D3A  0E40               	movlw	64
  4514  001D3C  1811               	xorwf	regadoRapido@tiempoRegar^0,w,c
  4515  001D3E  B4D8               	btfsc	status,2,c
  4516  001D40  EFA4  F00E         	goto	u3621
  4517  001D44  EFA6  F00E         	goto	u3620
  4518  001D48                     u3621:
  4519  001D48  EF1B  F00F         	goto	l479
  4520  001D4C                     u3620:
  4521  001D4C                     
  4522                           ;main.c: 971:             UART_printf("\r\n Ingrese el numero de sensor del area a regar
      +                           ej: 5 \r\n");
  4523  001D4C  0EFB               	movlw	low STR_61
  4524  001D4E  6E02               	movwf	UART_printf@cadena^0,c
  4525  001D50  0E79               	movlw	high STR_61
  4526  001D52  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4527  001D54  EC2C  F016         	call	_UART_printf	;wreg free
  4528  001D58                     
  4529                           ;main.c: 972:             areaRegar = getValue(1);
  4530  001D58  0E00               	movlw	0
  4531  001D5A  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4532  001D5C  0E01               	movlw	1
  4533  001D5E  6E04               	movwf	getValue@numCharacters^0,c
  4534  001D60  ECE8  F006         	call	_getValue	;wreg free
  4535  001D64  6E12               	movwf	regadoRapido@areaRegar^0,c
  4536  001D66                     
  4537                           ;main.c: 974:             if (areaRegar != '@') {
  4538  001D66  0E40               	movlw	64
  4539  001D68  1812               	xorwf	regadoRapido@areaRegar^0,w,c
  4540  001D6A  B4D8               	btfsc	status,2,c
  4541  001D6C  EFBA  F00E         	goto	u3631
  4542  001D70  EFBC  F00E         	goto	u3630
  4543  001D74                     u3631:
  4544  001D74  EF1B  F00F         	goto	l479
  4545  001D78                     u3630:
  4546  001D78                     
  4547                           ;main.c: 976:                 areaRegar--;
  4548  001D78  0612               	decf	regadoRapido@areaRegar^0,f,c
  4549                           
  4550                           ;main.c: 978:                 switch (areaRegar) {
  4551  001D7A  EFD7  F00E         	goto	l4664
  4552  001D7E                     l469:
  4553                           
  4554                           ;main.c: 981:                         LATDbits.LATD0 = 1;
  4555  001D7E  808C               	bsf	140,0,c	;volatile
  4556                           
  4557                           ;main.c: 982:                         break;
  4558  001D80  EF04  F00F         	goto	l4666
  4559  001D84                     l471:
  4560                           
  4561                           ;main.c: 985:                         LATDbits.LATD1 = 1;
  4562  001D84  828C               	bsf	140,1,c	;volatile
  4563                           
  4564                           ;main.c: 986:                         break;
  4565  001D86  EF04  F00F         	goto	l4666
  4566  001D8A                     l472:
  4567                           
  4568                           ;main.c: 989:                         LATDbits.LATD2 = 1;
  4569  001D8A  848C               	bsf	140,2,c	;volatile
  4570                           
  4571                           ;main.c: 990:                         break;
  4572  001D8C  EF04  F00F         	goto	l4666
  4573  001D90                     l473:
  4574                           
  4575                           ;main.c: 993:                         LATDbits.LATD3 = 1;
  4576  001D90  868C               	bsf	140,3,c	;volatile
  4577                           
  4578                           ;main.c: 994:                         break;
  4579  001D92  EF04  F00F         	goto	l4666
  4580  001D96                     l474:
  4581                           
  4582                           ;main.c: 997:                         LATDbits.LATD4 = 1;
  4583  001D96  888C               	bsf	140,4,c	;volatile
  4584                           
  4585                           ;main.c: 998:                         break;
  4586  001D98  EF04  F00F         	goto	l4666
  4587  001D9C                     l475:
  4588                           
  4589                           ;main.c: 1001:                         LATDbits.LATD5 = 1;
  4590  001D9C  8A8C               	bsf	140,5,c	;volatile
  4591                           
  4592                           ;main.c: 1002:                         break;
  4593  001D9E  EF04  F00F         	goto	l4666
  4594  001DA2                     l476:
  4595                           
  4596                           ;main.c: 1005:                         LATDbits.LATD6 = 1;
  4597  001DA2  8C8C               	bsf	140,6,c	;volatile
  4598                           
  4599                           ;main.c: 1006:                         break;
  4600  001DA4  EF04  F00F         	goto	l4666
  4601  001DA8                     l477:
  4602                           
  4603                           ;main.c: 1009:                         LATDbits.LATD7 = 1;
  4604  001DA8  8E8C               	bsf	140,7,c	;volatile
  4605                           
  4606                           ;main.c: 1010:                         break;
  4607  001DAA  EF04  F00F         	goto	l4666
  4608  001DAE                     l4664:
  4609  001DAE  5012               	movf	regadoRapido@areaRegar^0,w,c
  4610  001DB0  6E0F               	movwf	??_regadoRapido^0,c
  4611  001DB2  6A10               	clrf	(??_regadoRapido+1)^0,c
  4612                           
  4613                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4614                           ; Switch size 1, requested type "simple"
  4615                           ; Number of cases is 1, Range of values is 0 to 0
  4616                           ; switch strategies available:
  4617                           ; Name         Instructions Cycles
  4618                           ; simple_byte            4     3 (average)
  4619                           ;	Chosen strategy is simple_byte
  4620  001DB4  5010               	movf	(??_regadoRapido+1)^0,w,c
  4621  001DB6  0A00               	xorlw	0	; case 0
  4622  001DB8  B4D8               	btfsc	status,2,c
  4623  001DBA  EFE1  F00E         	goto	l5134
  4624  001DBE  EF04  F00F         	goto	l4666
  4625  001DC2                     l5134:
  4626                           
  4627                           ; Switch size 1, requested type "simple"
  4628                           ; Number of cases is 8, Range of values is 0 to 7
  4629                           ; switch strategies available:
  4630                           ; Name         Instructions Cycles
  4631                           ; simple_byte           25    13 (average)
  4632                           ;	Chosen strategy is simple_byte
  4633  001DC2  500F               	movf	??_regadoRapido^0,w,c
  4634  001DC4  0A00               	xorlw	0	; case 0
  4635  001DC6  B4D8               	btfsc	status,2,c
  4636  001DC8  EFBF  F00E         	goto	l469
  4637  001DCC  0A01               	xorlw	1	; case 1
  4638  001DCE  B4D8               	btfsc	status,2,c
  4639  001DD0  EFC2  F00E         	goto	l471
  4640  001DD4  0A03               	xorlw	3	; case 2
  4641  001DD6  B4D8               	btfsc	status,2,c
  4642  001DD8  EFC5  F00E         	goto	l472
  4643  001DDC  0A01               	xorlw	1	; case 3
  4644  001DDE  B4D8               	btfsc	status,2,c
  4645  001DE0  EFC8  F00E         	goto	l473
  4646  001DE4  0A07               	xorlw	7	; case 4
  4647  001DE6  B4D8               	btfsc	status,2,c
  4648  001DE8  EFCB  F00E         	goto	l474
  4649  001DEC  0A01               	xorlw	1	; case 5
  4650  001DEE  B4D8               	btfsc	status,2,c
  4651  001DF0  EFCE  F00E         	goto	l475
  4652  001DF4  0A03               	xorlw	3	; case 6
  4653  001DF6  B4D8               	btfsc	status,2,c
  4654  001DF8  EFD1  F00E         	goto	l476
  4655  001DFC  0A01               	xorlw	1	; case 7
  4656  001DFE  B4D8               	btfsc	status,2,c
  4657  001E00  EFD4  F00E         	goto	l477
  4658  001E04  EF04  F00F         	goto	l4666
  4659  001E08                     l4666:
  4660                           
  4661                           ;main.c: 1014:                 regando = 1;
  4662  001E08  0E01               	movlw	1
  4663  001E0A  0100               	movlb	0	; () banked
  4664  001E0C  6F7B               	movwf	_regando& (0+255),b
  4665  001E0E                     
  4666                           ; BSR set to: 0
  4667                           ;main.c: 1015:                 horarios[hora].regado = 0;
  4668  001E0E  5187               	movf	_hora& (0+255),w,b
  4669  001E10  0D0C               	mullw	12
  4670  001E12  0E3C               	movlw	low (_horarios+10)
  4671  001E14  24F3               	addwf	243,w,c
  4672  001E16  6ED9               	movwf	fsr2l,c
  4673  001E18  0E01               	movlw	high (_horarios+10)
  4674  001E1A  20F4               	addwfc	prodh,w,c
  4675  001E1C  6EDA               	movwf	fsr2h,c
  4676  001E1E  0E00               	movlw	0
  4677  001E20  6EDF               	movwf	indf2,c
  4678  001E22                     
  4679                           ; BSR set to: 0
  4680                           ;main.c: 1016:                 minutosRegar = tiempoRegar;
  4681  001E22  C011  F07D         	movff	regadoRapido@tiempoRegar,_minutosRegar
  4682  001E26  EF1B  F00F         	goto	l479
  4683  001E2A                     l4672:
  4684                           
  4685                           ; BSR set to: 0
  4686                           ;main.c: 1023:         UART_printf("\r\n Ya se esta efectuando un riego, intentelo mas t
      +                          arde \r\n");
  4687  001E2A  0EC1               	movlw	low STR_62
  4688  001E2C  6E02               	movwf	UART_printf@cadena^0,c
  4689  001E2E  0E79               	movlw	high STR_62
  4690  001E30  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4691  001E32  EC2C  F016         	call	_UART_printf	;wreg free
  4692  001E36                     l479:
  4693  001E36  0012               	return		;funcret
  4694  001E38                     __end_of_regadoRapido:
  4695                           	opt callstack 0
  4696                           
  4697 ;; *************** function _mostrarMenu *****************
  4698 ;; Defined at:
  4699 ;;		line 557 in file "main.c"
  4700 ;; Parameters:    Size  Location     Type
  4701 ;;		None
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;		None
  4704 ;; Return value:  Size  Location     Type
  4705 ;;                  1    wreg      void 
  4706 ;; Registers used:
  4707 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4708 ;; Tracked objects:
  4709 ;;		On entry : 0/0
  4710 ;;		On exit  : 0/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4713 ;;      Params:         0       0       0       0       0       0       0       0       0
  4714 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4715 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4716 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4717 ;;Total ram usage:        0 bytes
  4718 ;; Hardware stack levels used:    1
  4719 ;; Hardware stack levels required when called:    3
  4720 ;; This function calls:
  4721 ;;		_UART_printf
  4722 ;; This function is called by:
  4723 ;;		_sistemaPrincipal
  4724 ;;		_sistemaRegado
  4725 ;;		_main
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           	psect	text12
  4730  00285E                     __ptext12:
  4731                           	opt callstack 0
  4732  00285E                     _mostrarMenu:
  4733                           	opt callstack 26
  4734  00285E                     
  4735                           ;main.c: 559:     UART_printf("\r\n Ingresa una opcion a Realizar: \r\n");
  4736  00285E  0EF7               	movlw	low STR_22
  4737  002860  6E02               	movwf	UART_printf@cadena^0,c
  4738  002862  0E7B               	movlw	high STR_22
  4739  002864  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4740  002866  EC2C  F016         	call	_UART_printf	;wreg free
  4741                           
  4742                           ;main.c: 560:     UART_printf("\r\n 1. Fijar Hora Actual \r\n");
  4743  00286A  0EF3               	movlw	low STR_23
  4744  00286C  6E02               	movwf	UART_printf@cadena^0,c
  4745  00286E  0E7D               	movlw	high STR_23
  4746  002870  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4747  002872  EC2C  F016         	call	_UART_printf	;wreg free
  4748                           
  4749                           ;main.c: 561:     UART_printf("\r\n 2. Asignar Horarios para regar \r\n");
  4750  002876  0E66               	movlw	low STR_24
  4751  002878  6E02               	movwf	UART_printf@cadena^0,c
  4752  00287A  0E7C               	movlw	high STR_24
  4753  00287C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4754  00287E  EC2C  F016         	call	_UART_printf	;wreg free
  4755                           
  4756                           ;main.c: 562:     UART_printf("\r\n 3. Programar tiempo de riego en un horario \r\n");
  4757  002882  0ED3               	movlw	low STR_25
  4758  002884  6E02               	movwf	UART_printf@cadena^0,c
  4759  002886  0E7A               	movlw	high STR_25
  4760  002888  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4761  00288A  EC2C  F016         	call	_UART_printf	;wreg free
  4762                           
  4763                           ;main.c: 563:     UART_printf("\r\n 4. Dame datos del sistema \r\n");
  4764  00288E  0E5B               	movlw	low STR_26
  4765  002890  6E02               	movwf	UART_printf@cadena^0,c
  4766  002892  0E7D               	movlw	high STR_26
  4767  002894  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4768  002896  EC2C  F016         	call	_UART_printf	;wreg free
  4769                           
  4770                           ;main.c: 564:     UART_printf("\r\n 5. Mostrar valores sensores \r\n");
  4771  00289A  0EF7               	movlw	low STR_27
  4772  00289C  6E02               	movwf	UART_printf@cadena^0,c
  4773  00289E  0E7C               	movlw	high STR_27
  4774  0028A0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4775  0028A2  EC2C  F016         	call	_UART_printf	;wreg free
  4776                           
  4777                           ;main.c: 565:     UART_printf("\r\n 6. Regado rapido \r\n");
  4778  0028A6  0E52               	movlw	low STR_28
  4779  0028A8  6E02               	movwf	UART_printf@cadena^0,c
  4780  0028AA  0E7F               	movlw	high STR_28
  4781  0028AC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4782  0028AE  EC2C  F016         	call	_UART_printf	;wreg free
  4783                           
  4784                           ;main.c: 566:     UART_printf("\r\n 7. Fijar Dia Actual \r\n");
  4785  0028B2  0E43               	movlw	low STR_29
  4786  0028B4  6E02               	movwf	UART_printf@cadena^0,c
  4787  0028B6  0E7E               	movlw	high STR_29
  4788  0028B8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4789  0028BA  EC2C  F016         	call	_UART_printf	;wreg free
  4790                           
  4791                           ;main.c: 567:     UART_printf("\r\n 8. Cargar datos de la memoria \r\n");
  4792  0028BE  0EAF               	movlw	low STR_30
  4793  0028C0  6E02               	movwf	UART_printf@cadena^0,c
  4794  0028C2  0E7C               	movlw	high STR_30
  4795  0028C4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4796  0028C6  EC2C  F016         	call	_UART_printf	;wreg free
  4797                           
  4798                           ;main.c: 568:     UART_printf("\r\n Opcion:  \r");
  4799  0028CA  0EC7               	movlw	low STR_31
  4800  0028CC  6E02               	movwf	UART_printf@cadena^0,c
  4801  0028CE  0E7F               	movlw	high STR_31
  4802  0028D0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4803  0028D2  EC2C  F016         	call	_UART_printf	;wreg free
  4804                           
  4805                           ;main.c: 569:     UART_printf("\r\n");
  4806  0028D6  0E40               	movlw	low (STR_13+23)
  4807  0028D8  6E02               	movwf	UART_printf@cadena^0,c
  4808  0028DA  0E7E               	movlw	high (STR_13+23)
  4809  0028DC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4810  0028DE  EC2C  F016         	call	_UART_printf	;wreg free
  4811  0028E2  0012               	return		;funcret
  4812  0028E4                     __end_of_mostrarMenu:
  4813                           	opt callstack 0
  4814                           
  4815 ;; *************** function _mostrarDatosSensoresWIFI *****************
  4816 ;; Defined at:
  4817 ;;		line 813 in file "main.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;		None
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;  i               2   32[BANK0 ] int 
  4822 ;; Return value:  Size  Location     Type
  4823 ;;                  1    wreg      void 
  4824 ;; Registers used:
  4825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4831 ;;      Params:         0       0       0       0       0       0       0       0       0
  4832 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4833 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4834 ;;      Totals:         1       2       0       0       0       0       0       0       0
  4835 ;;Total ram usage:        3 bytes
  4836 ;; Hardware stack levels used:    1
  4837 ;; Hardware stack levels required when called:   10
  4838 ;; This function calls:
  4839 ;;		_UART_printf
  4840 ;;		_UART_write
  4841 ;;		_dameTemperaturaHumedad
  4842 ;;		_lecturaWifi
  4843 ;;		_limpiarBuffer
  4844 ;;		_sprintf
  4845 ;; This function is called by:
  4846 ;;		_sistemaPrincipal
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           	psect	text13
  4851  002036                     __ptext13:
  4852                           	opt callstack 0
  4853  002036                     _mostrarDatosSensoresWIFI:
  4854                           	opt callstack 19
  4855  002036                     
  4856                           ;main.c: 815:     dameTemperaturaHumedad();
  4857  002036  ECE5  F013         	call	_dameTemperaturaHumedad	;wreg free
  4858  00203A                     
  4859                           ;main.c: 817:     UART_write('I');
  4860  00203A  0E49               	movlw	73
  4861  00203C  EC58  F019         	call	_UART_write
  4862  002040                     
  4863                           ;main.c: 820:     limpiarBuffer();
  4864  002040  ECEB  F017         	call	_limpiarBuffer	;wreg free
  4865  002044                     
  4866                           ;main.c: 822:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", Humedad);
  4867  002044  0E00               	movlw	low _buffer
  4868  002046  0100               	movlb	0	; () banked
  4869  002048  6FB3               	movwf	sprintf@s& (0+255),b
  4870  00204A  0E01               	movlw	high _buffer
  4871  00204C  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  4872  00204E  0E7B               	movlw	low STR_49
  4873  002050  6FB5               	movwf	sprintf@fmt& (0+255),b
  4874  002052  0E7D               	movlw	high STR_49
  4875  002054  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  4876  002056  C07E  F0B7         	movff	_Humedad,?_sprintf+4
  4877  00205A  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  4878  00205C  EC0D  F017         	call	_sprintf	;wreg free
  4879  002060                     
  4880                           ;main.c: 823:     UART_printf(buffer);
  4881  002060  0E00               	movlw	low _buffer
  4882  002062  6E02               	movwf	UART_printf@cadena^0,c
  4883  002064  0E01               	movlw	high _buffer
  4884  002066  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4885  002068  EC2C  F016         	call	_UART_printf	;wreg free
  4886  00206C                     
  4887                           ;main.c: 824:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", Temperatura);
  4888  00206C  0E00               	movlw	low _buffer
  4889  00206E  0100               	movlb	0	; () banked
  4890  002070  6FB3               	movwf	sprintf@s& (0+255),b
  4891  002072  0E01               	movlw	high _buffer
  4892  002074  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  4893  002076  0EBA               	movlw	low STR_50
  4894  002078  6FB5               	movwf	sprintf@fmt& (0+255),b
  4895  00207A  0E7D               	movlw	high STR_50
  4896  00207C  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  4897  00207E  C07F  F0B7         	movff	_Temperatura,?_sprintf+4
  4898  002082  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  4899  002084  EC0D  F017         	call	_sprintf	;wreg free
  4900  002088                     
  4901                           ;main.c: 825:     UART_printf(buffer);
  4902  002088  0E00               	movlw	low _buffer
  4903  00208A  6E02               	movwf	UART_printf@cadena^0,c
  4904  00208C  0E01               	movlw	high _buffer
  4905  00208E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4906  002090  EC2C  F016         	call	_UART_printf	;wreg free
  4907  002094                     
  4908                           ;main.c: 827:     lecturaWifi();
  4909  002094  ECA2  F00F         	call	_lecturaWifi	;wreg free
  4910  002098                     
  4911                           ;main.c: 828:     if (peticionLecturaSensores) {
  4912  002098  0100               	movlb	0	; () banked
  4913  00209A  517A               	movf	_peticionLecturaSensores& (0+255),w,b
  4914  00209C  B4D8               	btfsc	status,2,c
  4915  00209E  EF53  F010         	goto	u3581
  4916  0020A2  EF55  F010         	goto	u3580
  4917  0020A6                     u3581:
  4918  0020A6  EF8F  F010         	goto	l4610
  4919  0020AA                     u3580:
  4920  0020AA                     
  4921                           ; BSR set to: 0
  4922                           ;main.c: 830:         for (int i = 0; i < 1; i++) {
  4923  0020AA  0E00               	movlw	0
  4924  0020AC  6FCE               	movwf	(mostrarDatosSensoresWIFI@i+1)& (0+255),b
  4925  0020AE  0E00               	movlw	0
  4926  0020B0  6FCD               	movwf	mostrarDatosSensoresWIFI@i& (0+255),b
  4927  0020B2                     l4602:
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;main.c: 832:             sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d %c
      +                          \r\n"
  4931  0020B2  0E00               	movlw	low _buffer
  4932  0020B4  6FB3               	movwf	sprintf@s& (0+255),b
  4933  0020B6  0E01               	movlw	high _buffer
  4934  0020B8  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  4935  0020BA  0E04               	movlw	low STR_51
  4936  0020BC  6FB5               	movwf	sprintf@fmt& (0+255),b
  4937  0020BE  0E7B               	movlw	high STR_51
  4938  0020C0  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  4939  0020C2  C0CD  F0B7         	movff	mostrarDatosSensoresWIFI@i,?_sprintf+4
  4940  0020C6  C0CE  F0B8         	movff	mostrarDatosSensoresWIFI@i+1,?_sprintf+5
  4941  0020CA  90D8               	bcf	status,0,c
  4942  0020CC  35CD               	rlcf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  4943  0020CE  6ED9               	movwf	fsr2l,c
  4944  0020D0  35CE               	rlcf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  4945  0020D2  6EDA               	movwf	fsr2h,c
  4946  0020D4  0E60               	movlw	low _sensores
  4947  0020D6  26D9               	addwf	fsr2l,f,c
  4948  0020D8  0E00               	movlw	high _sensores
  4949  0020DA  22DA               	addwfc	fsr2h,f,c
  4950  0020DC  50DF               	movf	indf2,w,c
  4951  0020DE  6E5D               	movwf	??_mostrarDatosSensoresWIFI^0,c
  4952  0020E0  505D               	movf	??_mostrarDatosSensoresWIFI^0,w,c
  4953  0020E2  6FB9               	movwf	(?_sprintf+6)& (0+255),b
  4954  0020E4  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  4955  0020E6  0E00               	movlw	0
  4956  0020E8  6FBC               	movwf	(?_sprintf+9)& (0+255),b
  4957  0020EA  0E25               	movlw	37
  4958  0020EC  6FBB               	movwf	(?_sprintf+8)& (0+255),b
  4959  0020EE  EC0D  F017         	call	_sprintf	;wreg free
  4960  0020F2                     
  4961                           ;main.c: 834:             UART_printf(buffer);
  4962  0020F2  0E00               	movlw	low _buffer
  4963  0020F4  6E02               	movwf	UART_printf@cadena^0,c
  4964  0020F6  0E01               	movlw	high _buffer
  4965  0020F8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4966  0020FA  EC2C  F016         	call	_UART_printf	;wreg free
  4967  0020FE                     
  4968                           ;main.c: 836:         }
  4969  0020FE  0100               	movlb	0	; () banked
  4970  002100  4BCD               	infsnz	mostrarDatosSensoresWIFI@i& (0+255),f,b
  4971  002102  2BCE               	incf	(mostrarDatosSensoresWIFI@i+1)& (0+255),f,b
  4972  002104                     
  4973                           ; BSR set to: 0
  4974  002104  BFCE               	btfsc	(mostrarDatosSensoresWIFI@i+1)& (0+255),7,b
  4975  002106  EF8D  F010         	goto	u3591
  4976  00210A  51CE               	movf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  4977  00210C  E108               	bnz	u3590
  4978  00210E  05CD               	decf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  4979  002110  A0D8               	btfss	status,0,c
  4980  002112  EF8D  F010         	goto	u3591
  4981  002116  EF8F  F010         	goto	u3590
  4982  00211A                     u3591:
  4983  00211A  EF59  F010         	goto	l4602
  4984  00211E                     u3590:
  4985  00211E                     l4610:
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;main.c: 840:     UART_write('I');
  4989  00211E  0E49               	movlw	73
  4990  002120  EC58  F019         	call	_UART_write
  4991  002124  0012               	return		;funcret
  4992  002126                     __end_of_mostrarDatosSensoresWIFI:
  4993                           	opt callstack 0
  4994                           
  4995 ;; *************** function _lecturaWifi *****************
  4996 ;; Defined at:
  4997 ;;		line 504 in file "main.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;		None
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;  i               2   30[BANK0 ] int 
  5002 ;;  humedadMedid    1   29[BANK0 ] unsigned char 
  5003 ;;  Rx              1   28[BANK0 ] unsigned char 
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  1    wreg      void 
  5006 ;; Registers used:
  5007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5013 ;;      Params:         0       0       0       0       0       0       0       0       0
  5014 ;;      Locals:         0       4       0       0       0       0       0       0       0
  5015 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5016 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5017 ;;Total ram usage:        4 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; Hardware stack levels required when called:    9
  5020 ;; This function calls:
  5021 ;;		_UART_printf
  5022 ;;		_UART_read
  5023 ;;		_UART_write
  5024 ;;		_getValue
  5025 ;;		_limpiarBuffer
  5026 ;;		_restablecerDatosSensor
  5027 ;;		_sprintf
  5028 ;; This function is called by:
  5029 ;;		_sistemaRegado
  5030 ;;		_mostrarDatosSensoresWIFI
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           	psect	text14
  5035  001F44                     __ptext14:
  5036                           	opt callstack 0
  5037  001F44                     _lecturaWifi:
  5038                           	opt callstack 20
  5039  001F44                     
  5040                           ;main.c: 506:     PIE1bits.RCIE = 0;
  5041  001F44  9A9D               	bcf	157,5,c	;volatile
  5042  001F46                     
  5043                           ;main.c: 510:     restablecerDatosSensor();
  5044  001F46  EC5F  F017         	call	_restablecerDatosSensor	;wreg free
  5045  001F4A                     
  5046                           ;main.c: 512:     UART_write('R');
  5047  001F4A  0E52               	movlw	82
  5048  001F4C  EC58  F019         	call	_UART_write
  5049  001F50                     
  5050                           ;main.c: 514:     UART_printf("\r\nSolicitando Muestreo de sensores\r\n\n");
  5051  001F50  0E86               	movlw	low STR_19
  5052  001F52  6E02               	movwf	UART_printf@cadena^0,c
  5053  001F54  0E7B               	movlw	high STR_19
  5054  001F56  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5055  001F58  EC2C  F016         	call	_UART_printf	;wreg free
  5056  001F5C                     
  5057                           ;main.c: 516:     Rx = UART_read();
  5058  001F5C  ECE3  F016         	call	_UART_read	;wreg free
  5059  001F60  0100               	movlb	0	; () banked
  5060  001F62  6FC9               	movwf	lecturaWifi@Rx& (0+255),b
  5061  001F64                     
  5062                           ; BSR set to: 0
  5063                           ;main.c: 518:     if (Rx == 'O') {
  5064  001F64  0E4F               	movlw	79
  5065  001F66  19C9               	xorwf	lecturaWifi@Rx& (0+255),w,b
  5066  001F68  A4D8               	btfss	status,2,c
  5067  001F6A  EFB9  F00F         	goto	u3271
  5068  001F6E  EFBB  F00F         	goto	u3270
  5069  001F72                     u3271:
  5070  001F72  EF15  F010         	goto	l4276
  5071  001F76                     u3270:
  5072  001F76                     
  5073                           ; BSR set to: 0
  5074                           ;main.c: 520:         peticionLecturaSensores = 1;
  5075  001F76  0E01               	movlw	1
  5076  001F78  6F7A               	movwf	_peticionLecturaSensores& (0+255),b
  5077                           
  5078                           ;main.c: 522:         for (int i = 0; i < 1; i++) {
  5079  001F7A  0E00               	movlw	0
  5080  001F7C  6FCC               	movwf	(lecturaWifi@i+1)& (0+255),b
  5081  001F7E  0E00               	movlw	0
  5082  001F80  6FCB               	movwf	lecturaWifi@i& (0+255),b
  5083  001F82                     l4258:
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;main.c: 524:             sprintf(buffer, "\r\nIngrese el porcentaje de humedad del sens
      +                          or %d\r\n", i);
  5087  001F82  0E00               	movlw	low _buffer
  5088  001F84  6FB3               	movwf	sprintf@s& (0+255),b
  5089  001F86  0E01               	movlw	high _buffer
  5090  001F88  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  5091  001F8A  0EA0               	movlw	low STR_20
  5092  001F8C  6FB5               	movwf	sprintf@fmt& (0+255),b
  5093  001F8E  0E7A               	movlw	high STR_20
  5094  001F90  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  5095  001F92  C0CB  F0B7         	movff	lecturaWifi@i,?_sprintf+4
  5096  001F96  C0CC  F0B8         	movff	lecturaWifi@i+1,?_sprintf+5
  5097  001F9A  EC0D  F017         	call	_sprintf	;wreg free
  5098  001F9E                     
  5099                           ;main.c: 525:             UART_printf(buffer);
  5100  001F9E  0E00               	movlw	low _buffer
  5101  001FA0  6E02               	movwf	UART_printf@cadena^0,c
  5102  001FA2  0E01               	movlw	high _buffer
  5103  001FA4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5104  001FA6  EC2C  F016         	call	_UART_printf	;wreg free
  5105  001FAA                     
  5106                           ;main.c: 527:             humedadMedida = getValue(3);
  5107  001FAA  0E00               	movlw	0
  5108  001FAC  6E05               	movwf	(getValue@numCharacters+1)^0,c
  5109  001FAE  0E03               	movlw	3
  5110  001FB0  6E04               	movwf	getValue@numCharacters^0,c
  5111  001FB2  ECE8  F006         	call	_getValue	;wreg free
  5112  001FB6  0100               	movlb	0	; () banked
  5113  001FB8  6FCA               	movwf	lecturaWifi@humedadMedida& (0+255),b
  5114  001FBA                     
  5115                           ; BSR set to: 0
  5116                           ;main.c: 529:             if (humedadMedida != '@')
  5117  001FBA  0E40               	movlw	64
  5118  001FBC  19CA               	xorwf	lecturaWifi@humedadMedida& (0+255),w,b
  5119  001FBE  B4D8               	btfsc	status,2,c
  5120  001FC0  EFE4  F00F         	goto	u3281
  5121  001FC4  EFE6  F00F         	goto	u3280
  5122  001FC8                     u3281:
  5123  001FC8  EFF3  F00F         	goto	l4268
  5124  001FCC                     u3280:
  5125  001FCC                     
  5126                           ; BSR set to: 0
  5127                           ;main.c: 530:                 sensores[i].porcientoHumedad = humedadMedida;
  5128  001FCC  90D8               	bcf	status,0,c
  5129  001FCE  35CB               	rlcf	lecturaWifi@i& (0+255),w,b
  5130  001FD0  6ED9               	movwf	fsr2l,c
  5131  001FD2  35CC               	rlcf	(lecturaWifi@i+1)& (0+255),w,b
  5132  001FD4  6EDA               	movwf	fsr2h,c
  5133  001FD6  0E60               	movlw	low _sensores
  5134  001FD8  26D9               	addwf	fsr2l,f,c
  5135  001FDA  0E00               	movlw	high _sensores
  5136  001FDC  22DA               	addwfc	fsr2h,f,c
  5137  001FDE  C0CA  FFDF         	movff	lecturaWifi@humedadMedida,indf2
  5138  001FE2  EFFE  F00F         	goto	l4270
  5139  001FE6                     l4268:
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;main.c: 532:                 sensores[i].porcientoHumedad = 100;
  5143  001FE6  90D8               	bcf	status,0,c
  5144  001FE8  35CB               	rlcf	lecturaWifi@i& (0+255),w,b
  5145  001FEA  6ED9               	movwf	fsr2l,c
  5146  001FEC  35CC               	rlcf	(lecturaWifi@i+1)& (0+255),w,b
  5147  001FEE  6EDA               	movwf	fsr2h,c
  5148  001FF0  0E60               	movlw	low _sensores
  5149  001FF2  26D9               	addwf	fsr2l,f,c
  5150  001FF4  0E00               	movlw	high _sensores
  5151  001FF6  22DA               	addwfc	fsr2h,f,c
  5152  001FF8  0E64               	movlw	100
  5153  001FFA  6EDF               	movwf	indf2,c
  5154  001FFC                     l4270:
  5155                           
  5156                           ; BSR set to: 0
  5157                           ;main.c: 534:         }
  5158  001FFC  4BCB               	infsnz	lecturaWifi@i& (0+255),f,b
  5159  001FFE  2BCC               	incf	(lecturaWifi@i+1)& (0+255),f,b
  5160  002000                     
  5161                           ; BSR set to: 0
  5162  002000  BFCC               	btfsc	(lecturaWifi@i+1)& (0+255),7,b
  5163  002002  EF0B  F010         	goto	u3291
  5164  002006  51CC               	movf	(lecturaWifi@i+1)& (0+255),w,b
  5165  002008  E108               	bnz	u3290
  5166  00200A  05CB               	decf	lecturaWifi@i& (0+255),w,b
  5167  00200C  A0D8               	btfss	status,0,c
  5168  00200E  EF0B  F010         	goto	u3291
  5169  002012  EF0D  F010         	goto	u3290
  5170  002016                     u3291:
  5171  002016  EFC1  F00F         	goto	l4258
  5172  00201A                     u3290:
  5173  00201A                     
  5174                           ; BSR set to: 0
  5175                           ;main.c: 536:         UART_printf("\r\nSensores Leidos con Exito!\r\n\n");
  5176  00201A  0E3B               	movlw	low STR_21
  5177  00201C  6E02               	movwf	UART_printf@cadena^0,c
  5178  00201E  0E7D               	movlw	high STR_21
  5179  002020  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5180  002022  EC2C  F016         	call	_UART_printf	;wreg free
  5181                           
  5182                           ;main.c: 538:     } else {
  5183  002026  EF17  F010         	goto	l4278
  5184  00202A                     l4276:
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;main.c: 539:         peticionLecturaSensores = 0;
  5188  00202A  0E00               	movlw	0
  5189  00202C  6F7A               	movwf	_peticionLecturaSensores& (0+255),b
  5190  00202E                     l4278:
  5191                           
  5192                           ;main.c: 542:     limpiarBuffer();
  5193  00202E  ECEB  F017         	call	_limpiarBuffer	;wreg free
  5194  002032                     
  5195                           ;main.c: 544:     PIE1bits.RCIE = 1;
  5196  002032  8A9D               	bsf	157,5,c	;volatile
  5197  002034  0012               	return		;funcret
  5198  002036                     __end_of_lecturaWifi:
  5199                           	opt callstack 0
  5200                           
  5201 ;; *************** function _restablecerDatosSensor *****************
  5202 ;; Defined at:
  5203 ;;		line 499 in file "main.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;		None
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;  i               2    4[COMRAM] int 
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  1    wreg      void 
  5210 ;; Registers used:
  5211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5217 ;;      Params:         0       0       0       0       0       0       0       0       0
  5218 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5219 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5220 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5221 ;;Total ram usage:        2 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; Hardware stack levels required when called:    2
  5224 ;; This function calls:
  5225 ;;		_constructorSensor
  5226 ;; This function is called by:
  5227 ;;		_lecturaWifi
  5228 ;;		_main
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           	psect	text15
  5233  002EBE                     __ptext15:
  5234                           	opt callstack 0
  5235  002EBE                     _restablecerDatosSensor:
  5236                           	opt callstack 26
  5237  002EBE                     
  5238                           ;main.c: 500:     for (int i = 0; i < 1; i++)
  5239  002EBE  0E00               	movlw	0
  5240  002EC0  6E06               	movwf	(restablecerDatosSensor@i+1)^0,c
  5241  002EC2  0E00               	movlw	0
  5242  002EC4  6E05               	movwf	restablecerDatosSensor@i^0,c
  5243  002EC6                     l4054:
  5244                           
  5245                           ;main.c: 501:         constructorSensor(sensores[i], 0, i);
  5246  002EC6  90D8               	bcf	status,0,c
  5247  002EC8  3405               	rlcf	restablecerDatosSensor@i^0,w,c
  5248  002ECA  6ED9               	movwf	fsr2l,c
  5249  002ECC  3406               	rlcf	(restablecerDatosSensor@i+1)^0,w,c
  5250  002ECE  6EDA               	movwf	fsr2h,c
  5251  002ED0  0E60               	movlw	low _sensores
  5252  002ED2  26D9               	addwf	fsr2l,f,c
  5253  002ED4  0E00               	movlw	high _sensores
  5254  002ED6  22DA               	addwfc	fsr2h,f,c
  5255  002ED8  CFDE F001          	movff	postinc2,constructorSensor@s
  5256  002EDC  CFDD F002          	movff	postdec2,constructorSensor@s+1
  5257  002EE0  0E00               	movlw	0
  5258  002EE2  6E03               	movwf	constructorSensor@porcientoHumedad^0,c
  5259  002EE4  C005  F004         	movff	restablecerDatosSensor@i,constructorSensor@pin
  5260  002EE8  EC82  F019         	call	_constructorSensor	;wreg free
  5261  002EEC  4A05               	infsnz	restablecerDatosSensor@i^0,f,c
  5262  002EEE  2A06               	incf	(restablecerDatosSensor@i+1)^0,f,c
  5263  002EF0  BE06               	btfsc	(restablecerDatosSensor@i+1)^0,7,c
  5264  002EF2  EF83  F017         	goto	u3081
  5265  002EF6  5006               	movf	(restablecerDatosSensor@i+1)^0,w,c
  5266  002EF8  E108               	bnz	u3080
  5267  002EFA  0405               	decf	restablecerDatosSensor@i^0,w,c
  5268  002EFC  A0D8               	btfss	status,0,c
  5269  002EFE  EF83  F017         	goto	u3081
  5270  002F02  EF85  F017         	goto	u3080
  5271  002F06                     u3081:
  5272  002F06  EF63  F017         	goto	l4054
  5273  002F0A                     u3080:
  5274  002F0A  0012               	return		;funcret
  5275  002F0C                     __end_of_restablecerDatosSensor:
  5276                           	opt callstack 0
  5277                           
  5278 ;; *************** function _constructorSensor *****************
  5279 ;; Defined at:
  5280 ;;		line 138 in file "main.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;  s               2    0[COMRAM] struct .
  5283 ;;  porcientoHum    1    2[COMRAM] unsigned char 
  5284 ;;  pin             1    3[COMRAM] unsigned char 
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;		None
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  1    wreg      void 
  5289 ;; Registers used:
  5290 ;;		None
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5296 ;;      Params:         4       0       0       0       0       0       0       0       0
  5297 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5298 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5299 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5300 ;;Total ram usage:        4 bytes
  5301 ;; Hardware stack levels used:    1
  5302 ;; Hardware stack levels required when called:    1
  5303 ;; This function calls:
  5304 ;;		Nothing
  5305 ;; This function is called by:
  5306 ;;		_restablecerDatosSensor
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           	psect	text16
  5311  003304                     __ptext16:
  5312                           	opt callstack 0
  5313  003304                     _constructorSensor:
  5314                           	opt callstack 26
  5315  003304                     
  5316                           ;main.c: 139:     s.porcientoHumedad = porcientoHumedad;
  5317  003304  C003  F001         	movff	constructorSensor@porcientoHumedad,constructorSensor@s
  5318                           
  5319                           ;main.c: 140:     s.pinSensor = pin;
  5320  003308  C004  F002         	movff	constructorSensor@pin,constructorSensor@s+1
  5321  00330C  0012               	return		;funcret
  5322  00330E                     __end_of_constructorSensor:
  5323                           	opt callstack 0
  5324                           
  5325 ;; *************** function _mostrarDatosSensores *****************
  5326 ;; Defined at:
  5327 ;;		line 785 in file "main.c"
  5328 ;; Parameters:    Size  Location     Type
  5329 ;;		None
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;  i               2   28[BANK0 ] int 
  5332 ;; Return value:  Size  Location     Type
  5333 ;;                  1    wreg      void 
  5334 ;; Registers used:
  5335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5336 ;; Tracked objects:
  5337 ;;		On entry : 0/0
  5338 ;;		On exit  : 0/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5341 ;;      Params:         0       0       0       0       0       0       0       0       0
  5342 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5343 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5344 ;;      Totals:         1       2       0       0       0       0       0       0       0
  5345 ;;Total ram usage:        3 bytes
  5346 ;; Hardware stack levels used:    1
  5347 ;; Hardware stack levels required when called:    9
  5348 ;; This function calls:
  5349 ;;		_UART_printf
  5350 ;;		_UART_write
  5351 ;;		_dameTemperaturaHumedad
  5352 ;;		_lecturaAnalogaSensores
  5353 ;;		_limpiarBuffer
  5354 ;;		_sprintf
  5355 ;; This function is called by:
  5356 ;;		_sistemaPrincipal
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           	psect	text17
  5361  002208                     __ptext17:
  5362                           	opt callstack 0
  5363  002208                     _mostrarDatosSensores:
  5364                           	opt callstack 20
  5365  002208                     
  5366                           ;main.c: 787:     dameTemperaturaHumedad();
  5367  002208  ECE5  F013         	call	_dameTemperaturaHumedad	;wreg free
  5368  00220C                     
  5369                           ;main.c: 789:     UART_write('I');
  5370  00220C  0E49               	movlw	73
  5371  00220E  EC58  F019         	call	_UART_write
  5372  002212                     
  5373                           ;main.c: 792:     limpiarBuffer();
  5374  002212  ECEB  F017         	call	_limpiarBuffer	;wreg free
  5375  002216                     
  5376                           ;main.c: 794:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", Humedad);
  5377  002216  0E00               	movlw	low _buffer
  5378  002218  0100               	movlb	0	; () banked
  5379  00221A  6FB3               	movwf	sprintf@s& (0+255),b
  5380  00221C  0E01               	movlw	high _buffer
  5381  00221E  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  5382  002220  0E7B               	movlw	low STR_49
  5383  002222  6FB5               	movwf	sprintf@fmt& (0+255),b
  5384  002224  0E7D               	movlw	high STR_49
  5385  002226  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  5386  002228  C07E  F0B7         	movff	_Humedad,?_sprintf+4
  5387  00222C  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  5388  00222E  EC0D  F017         	call	_sprintf	;wreg free
  5389  002232                     
  5390                           ;main.c: 795:     UART_printf(buffer);
  5391  002232  0E00               	movlw	low _buffer
  5392  002234  6E02               	movwf	UART_printf@cadena^0,c
  5393  002236  0E01               	movlw	high _buffer
  5394  002238  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5395  00223A  EC2C  F016         	call	_UART_printf	;wreg free
  5396  00223E                     
  5397                           ;main.c: 796:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", Temperatura);
  5398  00223E  0E00               	movlw	low _buffer
  5399  002240  0100               	movlb	0	; () banked
  5400  002242  6FB3               	movwf	sprintf@s& (0+255),b
  5401  002244  0E01               	movlw	high _buffer
  5402  002246  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  5403  002248  0EBA               	movlw	low STR_50
  5404  00224A  6FB5               	movwf	sprintf@fmt& (0+255),b
  5405  00224C  0E7D               	movlw	high STR_50
  5406  00224E  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  5407  002250  C07F  F0B7         	movff	_Temperatura,?_sprintf+4
  5408  002254  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  5409  002256  EC0D  F017         	call	_sprintf	;wreg free
  5410  00225A                     
  5411                           ;main.c: 797:     UART_printf(buffer);
  5412  00225A  0E00               	movlw	low _buffer
  5413  00225C  6E02               	movwf	UART_printf@cadena^0,c
  5414  00225E  0E01               	movlw	high _buffer
  5415  002260  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5416  002262  EC2C  F016         	call	_UART_printf	;wreg free
  5417  002266                     
  5418                           ;main.c: 799:     lecturaAnalogaSensores();
  5419  002266  ECF6  F012         	call	_lecturaAnalogaSensores	;wreg free
  5420  00226A                     
  5421                           ;main.c: 802:     for (int i = 0; i < 1; i++) {
  5422  00226A  0E00               	movlw	0
  5423  00226C  0100               	movlb	0	; () banked
  5424  00226E  6FCA               	movwf	(mostrarDatosSensores@i+1)& (0+255),b
  5425  002270  0E00               	movlw	0
  5426  002272  6FC9               	movwf	mostrarDatosSensores@i& (0+255),b
  5427  002274                     l4634:
  5428                           
  5429                           ; BSR set to: 0
  5430                           ;main.c: 804:         sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d %c\r\n
      +                          "
  5431  002274  0E00               	movlw	low _buffer
  5432  002276  6FB3               	movwf	sprintf@s& (0+255),b
  5433  002278  0E01               	movlw	high _buffer
  5434  00227A  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  5435  00227C  0E04               	movlw	low STR_51
  5436  00227E  6FB5               	movwf	sprintf@fmt& (0+255),b
  5437  002280  0E7B               	movlw	high STR_51
  5438  002282  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  5439  002284  C0C9  F0B7         	movff	mostrarDatosSensores@i,?_sprintf+4
  5440  002288  C0CA  F0B8         	movff	mostrarDatosSensores@i+1,?_sprintf+5
  5441  00228C  90D8               	bcf	status,0,c
  5442  00228E  35C9               	rlcf	mostrarDatosSensores@i& (0+255),w,b
  5443  002290  6ED9               	movwf	fsr2l,c
  5444  002292  35CA               	rlcf	(mostrarDatosSensores@i+1)& (0+255),w,b
  5445  002294  6EDA               	movwf	fsr2h,c
  5446  002296  0E60               	movlw	low _sensores
  5447  002298  26D9               	addwf	fsr2l,f,c
  5448  00229A  0E00               	movlw	high _sensores
  5449  00229C  22DA               	addwfc	fsr2h,f,c
  5450  00229E  50DF               	movf	indf2,w,c
  5451  0022A0  6E5D               	movwf	??_mostrarDatosSensores^0,c
  5452  0022A2  505D               	movf	??_mostrarDatosSensores^0,w,c
  5453  0022A4  6FB9               	movwf	(?_sprintf+6)& (0+255),b
  5454  0022A6  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  5455  0022A8  0E00               	movlw	0
  5456  0022AA  6FBC               	movwf	(?_sprintf+9)& (0+255),b
  5457  0022AC  0E25               	movlw	37
  5458  0022AE  6FBB               	movwf	(?_sprintf+8)& (0+255),b
  5459  0022B0  EC0D  F017         	call	_sprintf	;wreg free
  5460  0022B4                     
  5461                           ;main.c: 806:         UART_printf(buffer);
  5462  0022B4  0E00               	movlw	low _buffer
  5463  0022B6  6E02               	movwf	UART_printf@cadena^0,c
  5464  0022B8  0E01               	movlw	high _buffer
  5465  0022BA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5466  0022BC  EC2C  F016         	call	_UART_printf	;wreg free
  5467  0022C0                     
  5468                           ;main.c: 807:     }
  5469  0022C0  0100               	movlb	0	; () banked
  5470  0022C2  4BC9               	infsnz	mostrarDatosSensores@i& (0+255),f,b
  5471  0022C4  2BCA               	incf	(mostrarDatosSensores@i+1)& (0+255),f,b
  5472  0022C6                     
  5473                           ; BSR set to: 0
  5474  0022C6  BFCA               	btfsc	(mostrarDatosSensores@i+1)& (0+255),7,b
  5475  0022C8  EF6E  F011         	goto	u3601
  5476  0022CC  51CA               	movf	(mostrarDatosSensores@i+1)& (0+255),w,b
  5477  0022CE  E108               	bnz	u3600
  5478  0022D0  05C9               	decf	mostrarDatosSensores@i& (0+255),w,b
  5479  0022D2  A0D8               	btfss	status,0,c
  5480  0022D4  EF6E  F011         	goto	u3601
  5481  0022D8  EF70  F011         	goto	u3600
  5482  0022DC                     u3601:
  5483  0022DC  EF3A  F011         	goto	l4634
  5484  0022E0                     u3600:
  5485  0022E0                     
  5486                           ; BSR set to: 0
  5487                           ;main.c: 809:     UART_write('I');
  5488  0022E0  0E49               	movlw	73
  5489  0022E2  EC58  F019         	call	_UART_write
  5490  0022E6  0012               	return		;funcret
  5491  0022E8                     __end_of_mostrarDatosSensores:
  5492                           	opt callstack 0
  5493                           
  5494 ;; *************** function _lecturaAnalogaSensores *****************
  5495 ;; Defined at:
  5496 ;;		line 548 in file "main.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;		None
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;  i               2   47[COMRAM] int 
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  1    wreg      void 
  5503 ;; Registers used:
  5504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5510 ;;      Params:         0       0       0       0       0       0       0       0       0
  5511 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5512 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5513 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5514 ;;Total ram usage:        3 bytes
  5515 ;; Hardware stack levels used:    1
  5516 ;; Hardware stack levels required when called:    3
  5517 ;; This function calls:
  5518 ;;		_dameHumedadSuelo
  5519 ;;		_map
  5520 ;; This function is called by:
  5521 ;;		_sistemaRegado
  5522 ;;		_mostrarDatosSensores
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           	psect	text18
  5527  0025EC                     __ptext18:
  5528                           	opt callstack 0
  5529  0025EC                     _lecturaAnalogaSensores:
  5530                           	opt callstack 26
  5531  0025EC                     
  5532                           ;main.c: 550:     for (int i = 0; i < 1; i++) {
  5533  0025EC  0E00               	movlw	0
  5534  0025EE  6E31               	movwf	(lecturaAnalogaSensores@i+1)^0,c
  5535  0025F0  0E00               	movlw	0
  5536  0025F2  6E30               	movwf	lecturaAnalogaSensores@i^0,c
  5537  0025F4                     l4288:
  5538                           
  5539                           ;main.c: 551:         sensores[i].porcientoHumedad = map(dameHumedadSuelo(i), 0, 1023, 1
      +                          00, 0);
  5540  0025F4  90D8               	bcf	status,0,c
  5541  0025F6  3430               	rlcf	lecturaAnalogaSensores@i^0,w,c
  5542  0025F8  6ED9               	movwf	fsr2l,c
  5543  0025FA  3431               	rlcf	(lecturaAnalogaSensores@i+1)^0,w,c
  5544  0025FC  6EDA               	movwf	fsr2h,c
  5545  0025FE  0E60               	movlw	low _sensores
  5546  002600  26D9               	addwf	fsr2l,f,c
  5547  002602  0E00               	movlw	high _sensores
  5548  002604  22DA               	addwfc	fsr2h,f,c
  5549  002606  5030               	movf	lecturaAnalogaSensores@i^0,w,c
  5550  002608  EC86  F017         	call	_dameHumedadSuelo
  5551  00260C  C001  F01B         	movff	?_dameHumedadSuelo,map@x
  5552  002610  C002  F01C         	movff	?_dameHumedadSuelo+1,map@x+1
  5553  002614  0E00               	movlw	0
  5554  002616  BE1C               	btfsc	(map@x+1)^0,7,c
  5555  002618  0EFF               	movlw	-1
  5556  00261A  6E1D               	movwf	(map@x+2)^0,c
  5557  00261C  6E1E               	movwf	(map@x+3)^0,c
  5558  00261E  0E00               	movlw	0
  5559  002620  6E1F               	movwf	map@in_min^0,c
  5560  002622  0E00               	movlw	0
  5561  002624  6E20               	movwf	(map@in_min+1)^0,c
  5562  002626  0E00               	movlw	0
  5563  002628  6E21               	movwf	(map@in_min+2)^0,c
  5564  00262A  0E00               	movlw	0
  5565  00262C  6E22               	movwf	(map@in_min+3)^0,c
  5566  00262E  0EFF               	movlw	255
  5567  002630  6E23               	movwf	map@in_max^0,c
  5568  002632  0E03               	movlw	3
  5569  002634  6E24               	movwf	(map@in_max+1)^0,c
  5570  002636  0E00               	movlw	0
  5571  002638  6E25               	movwf	(map@in_max+2)^0,c
  5572  00263A  0E00               	movlw	0
  5573  00263C  6E26               	movwf	(map@in_max+3)^0,c
  5574  00263E  0E64               	movlw	100
  5575  002640  6E27               	movwf	map@out_min^0,c
  5576  002642  0E00               	movlw	0
  5577  002644  6E28               	movwf	(map@out_min+1)^0,c
  5578  002646  0E00               	movlw	0
  5579  002648  6E29               	movwf	(map@out_min+2)^0,c
  5580  00264A  0E00               	movlw	0
  5581  00264C  6E2A               	movwf	(map@out_min+3)^0,c
  5582  00264E  0E00               	movlw	0
  5583  002650  6E2B               	movwf	map@out_max^0,c
  5584  002652  0E00               	movlw	0
  5585  002654  6E2C               	movwf	(map@out_max+1)^0,c
  5586  002656  0E00               	movlw	0
  5587  002658  6E2D               	movwf	(map@out_max+2)^0,c
  5588  00265A  0E00               	movlw	0
  5589  00265C  6E2E               	movwf	(map@out_max+3)^0,c
  5590  00265E  ECB4  F014         	call	_map	;wreg free
  5591  002662  501B               	movf	?_map^0,w,c
  5592  002664  6EDF               	movwf	indf2,c
  5593  002666                     
  5594                           ;main.c: 552:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5595  002666  0E07               	movlw	7
  5596  002668  6E2F               	movwf	??_lecturaAnalogaSensores^0,c
  5597  00266A  0E7D               	movlw	125
  5598  00266C                     u3857:
  5599  00266C  2EE8               	decfsz	wreg,f,c
  5600  00266E  D7FE               	bra	u3857
  5601  002670  2E2F               	decfsz	??_lecturaAnalogaSensores^0,f,c
  5602  002672  D7FC               	bra	u3857
  5603  002674  F000               	nop	
  5604  002676                     
  5605                           ;main.c: 553:     }
  5606  002676  4A30               	infsnz	lecturaAnalogaSensores@i^0,f,c
  5607  002678  2A31               	incf	(lecturaAnalogaSensores@i+1)^0,f,c
  5608  00267A  BE31               	btfsc	(lecturaAnalogaSensores@i+1)^0,7,c
  5609  00267C  EF48  F013         	goto	u3301
  5610  002680  5031               	movf	(lecturaAnalogaSensores@i+1)^0,w,c
  5611  002682  E108               	bnz	u3300
  5612  002684  0430               	decf	lecturaAnalogaSensores@i^0,w,c
  5613  002686  A0D8               	btfss	status,0,c
  5614  002688  EF48  F013         	goto	u3301
  5615  00268C  EF4A  F013         	goto	u3300
  5616  002690                     u3301:
  5617  002690  EFFA  F012         	goto	l4288
  5618  002694                     u3300:
  5619  002694  0012               	return		;funcret
  5620  002696                     __end_of_lecturaAnalogaSensores:
  5621                           	opt callstack 0
  5622                           
  5623 ;; *************** function _map *****************
  5624 ;; Defined at:
  5625 ;;		line 134 in file "main.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;  x               4   26[COMRAM] long 
  5628 ;;  in_min          4   30[COMRAM] long 
  5629 ;;  in_max          4   34[COMRAM] long 
  5630 ;;  out_min         4   38[COMRAM] long 
  5631 ;;  out_max         4   42[COMRAM] long 
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;		None
  5634 ;; Return value:  Size  Location     Type
  5635 ;;                  4   26[COMRAM] long 
  5636 ;; Registers used:
  5637 ;;		wreg, status,2, status,0, cstack
  5638 ;; Tracked objects:
  5639 ;;		On entry : 0/0
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5643 ;;      Params:        20       0       0       0       0       0       0       0       0
  5644 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5645 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5646 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5647 ;;Total ram usage:       20 bytes
  5648 ;; Hardware stack levels used:    1
  5649 ;; Hardware stack levels required when called:    2
  5650 ;; This function calls:
  5651 ;;		___aldiv
  5652 ;;		___lmul
  5653 ;; This function is called by:
  5654 ;;		_lecturaAnalogaSensores
  5655 ;; This function uses a non-reentrant model
  5656 ;;
  5657                           
  5658                           	psect	text19
  5659  002968                     __ptext19:
  5660                           	opt callstack 0
  5661  002968                     _map:
  5662                           	opt callstack 26
  5663  002968                     
  5664                           ;main.c: 135:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  5665  002968  501F               	movf	map@in_min^0,w,c
  5666  00296A  5C1B               	subwf	map@x^0,w,c
  5667  00296C  6E01               	movwf	___lmul@multiplier^0,c
  5668  00296E  5020               	movf	(map@in_min+1)^0,w,c
  5669  002970  581C               	subwfb	(map@x+1)^0,w,c
  5670  002972  6E02               	movwf	(___lmul@multiplier+1)^0,c
  5671  002974  5021               	movf	(map@in_min+2)^0,w,c
  5672  002976  581D               	subwfb	(map@x+2)^0,w,c
  5673  002978  6E03               	movwf	(___lmul@multiplier+2)^0,c
  5674  00297A  5022               	movf	(map@in_min+3)^0,w,c
  5675  00297C  581E               	subwfb	(map@x+3)^0,w,c
  5676  00297E  6E04               	movwf	(___lmul@multiplier+3)^0,c
  5677  002980  5027               	movf	map@out_min^0,w,c
  5678  002982  5C2B               	subwf	map@out_max^0,w,c
  5679  002984  6E05               	movwf	___lmul@multiplicand^0,c
  5680  002986  5028               	movf	(map@out_min+1)^0,w,c
  5681  002988  582C               	subwfb	(map@out_max+1)^0,w,c
  5682  00298A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5683  00298C  5029               	movf	(map@out_min+2)^0,w,c
  5684  00298E  582D               	subwfb	(map@out_max+2)^0,w,c
  5685  002990  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5686  002992  502A               	movf	(map@out_min+3)^0,w,c
  5687  002994  582E               	subwfb	(map@out_max+3)^0,w,c
  5688  002996  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5689  002998  EC61  F015         	call	___lmul	;wreg free
  5690  00299C  C001  F00D         	movff	?___lmul,___aldiv@dividend
  5691  0029A0  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  5692  0029A4  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  5693  0029A8  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  5694  0029AC  501F               	movf	map@in_min^0,w,c
  5695  0029AE  5C23               	subwf	map@in_max^0,w,c
  5696  0029B0  6E11               	movwf	___aldiv@divisor^0,c
  5697  0029B2  5020               	movf	(map@in_min+1)^0,w,c
  5698  0029B4  5824               	subwfb	(map@in_max+1)^0,w,c
  5699  0029B6  6E12               	movwf	(___aldiv@divisor+1)^0,c
  5700  0029B8  5021               	movf	(map@in_min+2)^0,w,c
  5701  0029BA  5825               	subwfb	(map@in_max+2)^0,w,c
  5702  0029BC  6E13               	movwf	(___aldiv@divisor+2)^0,c
  5703  0029BE  5022               	movf	(map@in_min+3)^0,w,c
  5704  0029C0  5826               	subwfb	(map@in_max+3)^0,w,c
  5705  0029C2  6E14               	movwf	(___aldiv@divisor+3)^0,c
  5706  0029C4  EC1C  F00F         	call	___aldiv	;wreg free
  5707  0029C8  5027               	movf	map@out_min^0,w,c
  5708  0029CA  240D               	addwf	?___aldiv^0,w,c
  5709  0029CC  6E1B               	movwf	?_map^0,c
  5710  0029CE  5028               	movf	(map@out_min+1)^0,w,c
  5711  0029D0  200E               	addwfc	(?___aldiv+1)^0,w,c
  5712  0029D2  6E1C               	movwf	(?_map+1)^0,c
  5713  0029D4  5029               	movf	(map@out_min+2)^0,w,c
  5714  0029D6  200F               	addwfc	(?___aldiv+2)^0,w,c
  5715  0029D8  6E1D               	movwf	(?_map+2)^0,c
  5716  0029DA  502A               	movf	(map@out_min+3)^0,w,c
  5717  0029DC  2010               	addwfc	(?___aldiv+3)^0,w,c
  5718  0029DE  6E1E               	movwf	(?_map+3)^0,c
  5719  0029E0  0012               	return		;funcret
  5720  0029E2                     __end_of_map:
  5721                           	opt callstack 0
  5722                           
  5723 ;; *************** function ___lmul *****************
  5724 ;; Defined at:
  5725 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;  multiplier      4    0[COMRAM] unsigned long 
  5728 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;  product         4    8[COMRAM] unsigned long 
  5731 ;; Return value:  Size  Location     Type
  5732 ;;                  4    0[COMRAM] unsigned long 
  5733 ;; Registers used:
  5734 ;;		wreg, status,2, status,0
  5735 ;; Tracked objects:
  5736 ;;		On entry : 0/0
  5737 ;;		On exit  : 0/0
  5738 ;;		Unchanged: 0/0
  5739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5740 ;;      Params:         8       0       0       0       0       0       0       0       0
  5741 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5742 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5743 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5744 ;;Total ram usage:       12 bytes
  5745 ;; Hardware stack levels used:    1
  5746 ;; Hardware stack levels required when called:    1
  5747 ;; This function calls:
  5748 ;;		Nothing
  5749 ;; This function is called by:
  5750 ;;		_map
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           	psect	text20
  5755  002AC2                     __ptext20:
  5756                           	opt callstack 0
  5757  002AC2                     ___lmul:
  5758                           	opt callstack 26
  5759  002AC2  0E00               	movlw	0
  5760  002AC4  6E09               	movwf	___lmul@product^0,c
  5761  002AC6  0E00               	movlw	0
  5762  002AC8  6E0A               	movwf	(___lmul@product+1)^0,c
  5763  002ACA  0E00               	movlw	0
  5764  002ACC  6E0B               	movwf	(___lmul@product+2)^0,c
  5765  002ACE  0E00               	movlw	0
  5766  002AD0  6E0C               	movwf	(___lmul@product+3)^0,c
  5767  002AD2                     l3816:
  5768  002AD2  A001               	btfss	___lmul@multiplier^0,0,c
  5769  002AD4  EF6E  F015         	goto	u2871
  5770  002AD8  EF70  F015         	goto	u2870
  5771  002ADC                     u2871:
  5772  002ADC  EF78  F015         	goto	l3820
  5773  002AE0                     u2870:
  5774  002AE0  5005               	movf	___lmul@multiplicand^0,w,c
  5775  002AE2  2609               	addwf	___lmul@product^0,f,c
  5776  002AE4  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5777  002AE6  220A               	addwfc	(___lmul@product+1)^0,f,c
  5778  002AE8  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5779  002AEA  220B               	addwfc	(___lmul@product+2)^0,f,c
  5780  002AEC  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5781  002AEE  220C               	addwfc	(___lmul@product+3)^0,f,c
  5782  002AF0                     l3820:
  5783  002AF0  90D8               	bcf	status,0,c
  5784  002AF2  3605               	rlcf	___lmul@multiplicand^0,f,c
  5785  002AF4  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5786  002AF6  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5787  002AF8  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5788  002AFA  90D8               	bcf	status,0,c
  5789  002AFC  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5790  002AFE  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5791  002B00  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5792  002B02  3201               	rrcf	___lmul@multiplier^0,f,c
  5793  002B04  5001               	movf	___lmul@multiplier^0,w,c
  5794  002B06  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5795  002B08  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5796  002B0A  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5797  002B0C  A4D8               	btfss	status,2,c
  5798  002B0E  EF8B  F015         	goto	u2881
  5799  002B12  EF8D  F015         	goto	u2880
  5800  002B16                     u2881:
  5801  002B16  EF69  F015         	goto	l3816
  5802  002B1A                     u2880:
  5803  002B1A  C009  F001         	movff	___lmul@product,?___lmul
  5804  002B1E  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5805  002B22  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5806  002B26  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5807  002B2A  0012               	return		;funcret
  5808  002B2C                     __end_of___lmul:
  5809                           	opt callstack 0
  5810                           
  5811 ;; *************** function _dameHumedadSuelo *****************
  5812 ;; Defined at:
  5813 ;;		line 482 in file "main.c"
  5814 ;; Parameters:    Size  Location     Type
  5815 ;;  canalLeer       1    wreg     unsigned char 
  5816 ;; Auto vars:     Size  Location     Type
  5817 ;;  canalLeer       1    4[COMRAM] unsigned char 
  5818 ;; Return value:  Size  Location     Type
  5819 ;;                  2    0[COMRAM] short 
  5820 ;; Registers used:
  5821 ;;		wreg, status,2, status,0
  5822 ;; Tracked objects:
  5823 ;;		On entry : 0/0
  5824 ;;		On exit  : 0/0
  5825 ;;		Unchanged: 0/0
  5826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5827 ;;      Params:         2       0       0       0       0       0       0       0       0
  5828 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5829 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5830 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5831 ;;Total ram usage:        5 bytes
  5832 ;; Hardware stack levels used:    1
  5833 ;; Hardware stack levels required when called:    1
  5834 ;; This function calls:
  5835 ;;		Nothing
  5836 ;; This function is called by:
  5837 ;;		_lecturaAnalogaSensores
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           	psect	text21
  5842  002F0C                     __ptext21:
  5843                           	opt callstack 0
  5844  002F0C                     _dameHumedadSuelo:
  5845                           	opt callstack 27
  5846                           
  5847                           ;incstack = 0
  5848                           ;dameHumedadSuelo@canalLeer stored from wreg
  5849  002F0C  6E05               	movwf	dameHumedadSuelo@canalLeer^0,c
  5850  002F0E                     
  5851                           ;main.c: 484:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  5852  002F0E  0E06               	movlw	6
  5853  002F10                     u3867:
  5854  002F10  2EE8               	decfsz	wreg,f,c
  5855  002F12  D7FE               	bra	u3867
  5856  002F14  D000               	nop2	
  5857  002F16                     
  5858                           ;main.c: 486:     ADCON0bits.ADON = 1;
  5859  002F16  80C2               	bsf	194,0,c	;volatile
  5860  002F18                     
  5861                           ;main.c: 487:     ADCON0bits.CHS = canalLeer;
  5862  002F18  C005  F003         	movff	dameHumedadSuelo@canalLeer,??_dameHumedadSuelo
  5863  002F1C  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  5864  002F1E  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  5865  002F20  50C2               	movf	194,w,c	;volatile
  5866  002F22  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  5867  002F24  0BC3               	andlw	-61
  5868  002F26  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  5869  002F28  6EC2               	movwf	194,c	;volatile
  5870  002F2A                     
  5871                           ;main.c: 488:     ADCON0bits.GO = 1;
  5872  002F2A  82C2               	bsf	194,1,c	;volatile
  5873  002F2C                     
  5874                           ;main.c: 489:     ADCON0bits.GO_DONE = 1;
  5875  002F2C  82C2               	bsf	194,1,c	;volatile
  5876  002F2E                     l333:
  5877  002F2E  B2C2               	btfsc	194,1,c	;volatile
  5878  002F30  EF9C  F017         	goto	u3071
  5879  002F34  EF9E  F017         	goto	u3070
  5880  002F38                     u3071:
  5881  002F38  EF97  F017         	goto	l333
  5882  002F3C                     u3070:
  5883  002F3C                     
  5884                           ;main.c: 493:     ADCON0bits.ADON = 0;
  5885  002F3C  90C2               	bcf	194,0,c	;volatile
  5886  002F3E                     
  5887                           ;main.c: 495:     return (ADRESH << 8) +ADRESL;
  5888  002F3E  50C4               	movf	196,w,c	;volatile
  5889  002F40  6E04               	movwf	(??_dameHumedadSuelo+1)^0,c
  5890  002F42  6A03               	clrf	??_dameHumedadSuelo^0,c
  5891  002F44  50C3               	movf	195,w,c	;volatile
  5892  002F46  2403               	addwf	??_dameHumedadSuelo^0,w,c
  5893  002F48  6E01               	movwf	?_dameHumedadSuelo^0,c
  5894  002F4A  0E00               	movlw	0
  5895  002F4C  2004               	addwfc	(??_dameHumedadSuelo+1)^0,w,c
  5896  002F4E  6E02               	movwf	(?_dameHumedadSuelo+1)^0,c
  5897  002F50  0012               	return		;funcret
  5898  002F52                     __end_of_dameHumedadSuelo:
  5899                           	opt callstack 0
  5900                           
  5901 ;; *************** function _dameTemperaturaHumedad *****************
  5902 ;; Defined at:
  5903 ;;		line 751 in file "main.c"
  5904 ;; Parameters:    Size  Location     Type
  5905 ;;		None
  5906 ;; Auto vars:     Size  Location     Type
  5907 ;;  checkSum        2    5[COMRAM] unsigned int 
  5908 ;;  temperatura     1   10[COMRAM] unsigned char 
  5909 ;;  humedad         1    9[COMRAM] unsigned char 
  5910 ;;  temperaturaD    1    8[COMRAM] unsigned char 
  5911 ;;  humedadDecim    1    7[COMRAM] unsigned char 
  5912 ;; Return value:  Size  Location     Type
  5913 ;;                  1    wreg      void 
  5914 ;; Registers used:
  5915 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5916 ;; Tracked objects:
  5917 ;;		On entry : 0/0
  5918 ;;		On exit  : 0/0
  5919 ;;		Unchanged: 0/0
  5920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5921 ;;      Params:         0       0       0       0       0       0       0       0       0
  5922 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5923 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5924 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5925 ;;Total ram usage:        8 bytes
  5926 ;; Hardware stack levels used:    1
  5927 ;; Hardware stack levels required when called:    3
  5928 ;; This function calls:
  5929 ;;		_DHT11_ReadData
  5930 ;;		_DHT11_Start
  5931 ;;		_UART_printf
  5932 ;;		_check_response
  5933 ;; This function is called by:
  5934 ;;		_estaSeco
  5935 ;;		_mostrarDatosSensores
  5936 ;;		_mostrarDatosSensoresWIFI
  5937 ;; This function uses a non-reentrant model
  5938 ;;
  5939                           
  5940                           	psect	text22
  5941  0027CA                     __ptext22:
  5942                           	opt callstack 0
  5943  0027CA                     _dameTemperaturaHumedad:
  5944                           	opt callstack 24
  5945  0027CA                     
  5946                           ;main.c: 753:     PIE1bits.RCIE = 0;
  5947  0027CA  9A9D               	bcf	157,5,c	;volatile
  5948                           
  5949                           ;main.c: 754:     T0CONbits.TMR0ON = 0;
  5950  0027CC  9ED5               	bcf	213,7,c	;volatile
  5951  0027CE                     l3896:
  5952                           
  5953                           ;main.c: 760:     DHT11_Start();
  5954  0027CE  EC2C  F019         	call	_DHT11_Start	;wreg free
  5955  0027D2                     
  5956                           ;main.c: 762:     while (!(check_response())) {
  5957  0027D2  ECCB  F017         	call	_check_response	;wreg free
  5958  0027D6  0900               	iorlw	0
  5959  0027D8  B4D8               	btfsc	status,2,c
  5960  0027DA  EFF1  F013         	goto	u2951
  5961  0027DE  EFF3  F013         	goto	u2950
  5962  0027E2                     u2951:
  5963  0027E2  EFE7  F013         	goto	l3896
  5964  0027E6                     u2950:
  5965  0027E6                     
  5966                           ;main.c: 768:     humedad = DHT11_ReadData();
  5967  0027E6  EC5B  F016         	call	_DHT11_ReadData	;wreg free
  5968  0027EA  6E0A               	movwf	dameTemperaturaHumedad@humedad^0,c
  5969                           
  5970                           ;main.c: 769:     humedadDecimal = DHT11_ReadData();
  5971  0027EC  EC5B  F016         	call	_DHT11_ReadData	;wreg free
  5972  0027F0  6E08               	movwf	dameTemperaturaHumedad@humedadDecimal^0,c
  5973                           
  5974                           ;main.c: 770:     temperatura = DHT11_ReadData();
  5975  0027F2  EC5B  F016         	call	_DHT11_ReadData	;wreg free
  5976  0027F6  6E0B               	movwf	dameTemperaturaHumedad@temperatura^0,c
  5977                           
  5978                           ;main.c: 771:     temperaturaDecimal = DHT11_ReadData();
  5979  0027F8  EC5B  F016         	call	_DHT11_ReadData	;wreg free
  5980  0027FC  6E09               	movwf	dameTemperaturaHumedad@temperaturaDecimal^0,c
  5981                           
  5982                           ;main.c: 772:     checkSum = DHT11_ReadData();
  5983  0027FE  EC5B  F016         	call	_DHT11_ReadData	;wreg free
  5984  002802  6E04               	movwf	??_dameTemperaturaHumedad^0,c
  5985  002804  5004               	movf	??_dameTemperaturaHumedad^0,w,c
  5986  002806  6E06               	movwf	dameTemperaturaHumedad@checkSum^0,c
  5987  002808  6A07               	clrf	(dameTemperaturaHumedad@checkSum+1)^0,c
  5988  00280A                     
  5989                           ;main.c: 774:     if (checkSum != (humedad + humedadDecimal + temperatura + temperaturaD
      +                          ecimal))
  5990  00280A  5008               	movf	dameTemperaturaHumedad@humedadDecimal^0,w,c
  5991  00280C  C00A  F004         	movff	dameTemperaturaHumedad@humedad,??_dameTemperaturaHumedad
  5992  002810  6A05               	clrf	(??_dameTemperaturaHumedad+1)^0,c
  5993  002812  2604               	addwf	??_dameTemperaturaHumedad^0,f,c
  5994  002814  0E00               	movlw	0
  5995  002816  2205               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  5996  002818  500B               	movf	dameTemperaturaHumedad@temperatura^0,w,c
  5997  00281A  2604               	addwf	??_dameTemperaturaHumedad^0,f,c
  5998  00281C  0E00               	movlw	0
  5999  00281E  2205               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  6000  002820  5009               	movf	dameTemperaturaHumedad@temperaturaDecimal^0,w,c
  6001  002822  2604               	addwf	??_dameTemperaturaHumedad^0,f,c
  6002  002824  0E00               	movlw	0
  6003  002826  2205               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  6004  002828  5006               	movf	dameTemperaturaHumedad@checkSum^0,w,c
  6005  00282A  1804               	xorwf	??_dameTemperaturaHumedad^0,w,c
  6006  00282C  E109               	bnz	u2960
  6007  00282E  5007               	movf	(dameTemperaturaHumedad@checkSum+1)^0,w,c
  6008  002830  1805               	xorwf	(??_dameTemperaturaHumedad+1)^0,w,c
  6009  002832  B4D8               	btfsc	status,2,c
  6010  002834  EF1E  F014         	goto	u2961
  6011  002838  EF20  F014         	goto	u2960
  6012  00283C                     u2961:
  6013  00283C  EF28  F014         	goto	l412
  6014  002840                     u2960:
  6015  002840                     
  6016                           ;main.c: 775:         UART_printf("Error de lectura DHT11\r\n");
  6017  002840  0E90               	movlw	low STR_48
  6018  002842  6E02               	movwf	UART_printf@cadena^0,c
  6019  002844  0E7E               	movlw	high STR_48
  6020  002846  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6021  002848  EC2C  F016         	call	_UART_printf	;wreg free
  6022  00284C  EF2C  F014         	goto	l413
  6023  002850                     l412:
  6024                           
  6025                           ;main.c: 777:         Humedad = humedad;
  6026  002850  C00A  F07E         	movff	dameTemperaturaHumedad@humedad,_Humedad
  6027                           
  6028                           ;main.c: 778:         Temperatura = temperatura;
  6029  002854  C00B  F07F         	movff	dameTemperaturaHumedad@temperatura,_Temperatura
  6030  002858                     l413:
  6031                           
  6032                           ;main.c: 781:     PIE1bits.RCIE = 1;
  6033  002858  8A9D               	bsf	157,5,c	;volatile
  6034                           
  6035                           ;main.c: 782:     T0CONbits.TMR0ON = 1;
  6036  00285A  8ED5               	bsf	213,7,c	;volatile
  6037  00285C  0012               	return		;funcret
  6038  00285E                     __end_of_dameTemperaturaHumedad:
  6039                           	opt callstack 0
  6040                           
  6041 ;; *************** function _check_response *****************
  6042 ;; Defined at:
  6043 ;;		line 38 in file "./DHT11.h"
  6044 ;; Parameters:    Size  Location     Type
  6045 ;;		None
  6046 ;; Auto vars:     Size  Location     Type
  6047 ;;  respuesta       1    0[COMRAM] unsigned char 
  6048 ;; Return value:  Size  Location     Type
  6049 ;;                  1    wreg      unsigned char 
  6050 ;; Registers used:
  6051 ;;		wreg, status,2
  6052 ;; Tracked objects:
  6053 ;;		On entry : 0/0
  6054 ;;		On exit  : 0/0
  6055 ;;		Unchanged: 0/0
  6056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6057 ;;      Params:         0       0       0       0       0       0       0       0       0
  6058 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6059 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6060 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6061 ;;Total ram usage:        1 bytes
  6062 ;; Hardware stack levels used:    1
  6063 ;; Hardware stack levels required when called:    1
  6064 ;; This function calls:
  6065 ;;		Nothing
  6066 ;; This function is called by:
  6067 ;;		_dameTemperaturaHumedad
  6068 ;; This function uses a non-reentrant model
  6069 ;;
  6070                           
  6071                           	psect	text23
  6072  002F96                     __ptext23:
  6073                           	opt callstack 0
  6074  002F96                     _check_response:
  6075                           	opt callstack 25
  6076  002F96                     
  6077                           ;./DHT11.h: 40:     unsigned char respuesta = 0;
  6078  002F96  0E00               	movlw	0
  6079  002F98  6E01               	movwf	check_response@respuesta^0,c
  6080  002F9A                     
  6081                           ;./DHT11.h: 41:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  6082  002F9A  0E0D               	movlw	13
  6083  002F9C                     u3877:
  6084  002F9C  2EE8               	decfsz	wreg,f,c
  6085  002F9E  D7FE               	bra	u3877
  6086  002FA0  F000               	nop	
  6087  002FA2                     
  6088                           ;./DHT11.h: 42:     if (!PORTDbits.RD7) {
  6089  002FA2  BE83               	btfsc	131,7,c	;volatile
  6090  002FA4  EFD6  F017         	goto	u2841
  6091  002FA8  EFD8  F017         	goto	u2840
  6092  002FAC                     u2841:
  6093  002FAC  EFE9  F017         	goto	l3800
  6094  002FB0                     u2840:
  6095  002FB0                     
  6096                           ;./DHT11.h: 43:         _delay((unsigned long)((80)*(4000000/4000000.0)));
  6097  002FB0  0E1A               	movlw	26
  6098  002FB2                     u3887:
  6099  002FB2  2EE8               	decfsz	wreg,f,c
  6100  002FB4  D7FE               	bra	u3887
  6101  002FB6  D000               	nop2	
  6102  002FB8                     
  6103                           ;./DHT11.h: 44:         if (PORTDbits.RD7) {
  6104  002FB8  AE83               	btfss	131,7,c	;volatile
  6105  002FBA  EFE1  F017         	goto	u2851
  6106  002FBE  EFE3  F017         	goto	u2850
  6107  002FC2                     u2851:
  6108  002FC2  EFE9  F017         	goto	l3800
  6109  002FC6                     u2850:
  6110  002FC6                     
  6111                           ;./DHT11.h: 45:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  6112  002FC6  0E10               	movlw	16
  6113  002FC8                     u3897:
  6114  002FC8  2EE8               	decfsz	wreg,f,c
  6115  002FCA  D7FE               	bra	u3897
  6116  002FCC  D000               	nop2	
  6117  002FCE                     
  6118                           ;./DHT11.h: 46:             respuesta = 1;
  6119  002FCE  0E01               	movlw	1
  6120  002FD0  6E01               	movwf	check_response@respuesta^0,c
  6121  002FD2                     l3800:
  6122                           
  6123                           ;./DHT11.h: 50:     return respuesta;
  6124  002FD2  5001               	movf	check_response@respuesta^0,w,c
  6125  002FD4  0012               	return		;funcret
  6126  002FD6                     __end_of_check_response:
  6127                           	opt callstack 0
  6128                           
  6129 ;; *************** function _DHT11_Start *****************
  6130 ;; Defined at:
  6131 ;;		line 23 in file "./DHT11.h"
  6132 ;; Parameters:    Size  Location     Type
  6133 ;;		None
  6134 ;; Auto vars:     Size  Location     Type
  6135 ;;		None
  6136 ;; Return value:  Size  Location     Type
  6137 ;;                  1    wreg      void 
  6138 ;; Registers used:
  6139 ;;		wreg
  6140 ;; Tracked objects:
  6141 ;;		On entry : 0/0
  6142 ;;		On exit  : 0/0
  6143 ;;		Unchanged: 0/0
  6144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6145 ;;      Params:         0       0       0       0       0       0       0       0       0
  6146 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6147 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6148 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6149 ;;Total ram usage:        1 bytes
  6150 ;; Hardware stack levels used:    1
  6151 ;; Hardware stack levels required when called:    1
  6152 ;; This function calls:
  6153 ;;		Nothing
  6154 ;; This function is called by:
  6155 ;;		_dameTemperaturaHumedad
  6156 ;; This function uses a non-reentrant model
  6157 ;;
  6158                           
  6159                           	psect	text24
  6160  003258                     __ptext24:
  6161                           	opt callstack 0
  6162  003258                     _DHT11_Start:
  6163                           	opt callstack 25
  6164  003258                     
  6165                           ;./DHT11.h: 24:     TRISDbits.RD7 = 0;
  6166  003258  9E95               	bcf	149,7,c	;volatile
  6167                           
  6168                           ;./DHT11.h: 26:     LATDbits.LATD7 = 0;
  6169  00325A  9E8C               	bcf	140,7,c	;volatile
  6170  00325C                     
  6171                           ;./DHT11.h: 28:     _delay((unsigned long)((20)*(4000000/4000.0)));
  6172  00325C  0E1A               	movlw	26
  6173  00325E  6E01               	movwf	??_DHT11_Start^0,c
  6174  003260  0EF8               	movlw	248
  6175  003262                     u3907:
  6176  003262  2EE8               	decfsz	wreg,f,c
  6177  003264  D7FE               	bra	u3907
  6178  003266  2E01               	decfsz	??_DHT11_Start^0,f,c
  6179  003268  D7FC               	bra	u3907
  6180  00326A  D000               	nop2	
  6181  00326C                     
  6182                           ;./DHT11.h: 30:     LATDbits.LATD7 = 1;
  6183  00326C  8E8C               	bsf	140,7,c	;volatile
  6184                           
  6185                           ;./DHT11.h: 32:     _delay((unsigned long)((30)*(4000000/4000000.0)));
  6186  00326E  0E0A               	movlw	10
  6187  003270                     u3917:
  6188  003270  2EE8               	decfsz	wreg,f,c
  6189  003272  D7FE               	bra	u3917
  6190  003274                     
  6191                           ;./DHT11.h: 34:     TRISDbits.RD7 = 1;
  6192  003274  8E95               	bsf	149,7,c	;volatile
  6193  003276  0012               	return		;funcret
  6194  003278                     __end_of_DHT11_Start:
  6195                           	opt callstack 0
  6196                           
  6197 ;; *************** function _DHT11_ReadData *****************
  6198 ;; Defined at:
  6199 ;;		line 9 in file "./DHT11.h"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;		None
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;  data            1    1[COMRAM] unsigned char 
  6204 ;;  i               1    0[COMRAM] unsigned char 
  6205 ;; Return value:  Size  Location     Type
  6206 ;;                  1    wreg      unsigned char 
  6207 ;; Registers used:
  6208 ;;		wreg, status,2, status,0
  6209 ;; Tracked objects:
  6210 ;;		On entry : 0/0
  6211 ;;		On exit  : 0/0
  6212 ;;		Unchanged: 0/0
  6213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6214 ;;      Params:         0       0       0       0       0       0       0       0       0
  6215 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6216 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6217 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6218 ;;Total ram usage:        2 bytes
  6219 ;; Hardware stack levels used:    1
  6220 ;; Hardware stack levels required when called:    1
  6221 ;; This function calls:
  6222 ;;		Nothing
  6223 ;; This function is called by:
  6224 ;;		_dameTemperaturaHumedad
  6225 ;; This function uses a non-reentrant model
  6226 ;;
  6227                           
  6228                           	psect	text25
  6229  002CB6                     __ptext25:
  6230                           	opt callstack 0
  6231  002CB6                     _DHT11_ReadData:
  6232                           	opt callstack 25
  6233  002CB6                     
  6234                           ;./DHT11.h: 10:     char i, data = 0;
  6235  002CB6  0E00               	movlw	0
  6236  002CB8  6E02               	movwf	DHT11_ReadData@data^0,c
  6237                           
  6238                           ;./DHT11.h: 11:     for (i = 0; i < 8; i++) {
  6239  002CBA  0E00               	movlw	0
  6240  002CBC  6E01               	movwf	DHT11_ReadData@i^0,c
  6241  002CBE                     l152:
  6242  002CBE  AE83               	btfss	131,7,c	;volatile
  6243  002CC0  EF64  F016         	goto	u2801
  6244  002CC4  EF66  F016         	goto	u2800
  6245  002CC8                     u2801:
  6246  002CC8  EF5F  F016         	goto	l152
  6247  002CCC                     u2800:
  6248  002CCC                     
  6249                           ;./DHT11.h: 13:         _delay((unsigned long)((30)*(4000000/4000000.0)));
  6250  002CCC  0E0A               	movlw	10
  6251  002CCE                     u3927:
  6252  002CCE  2EE8               	decfsz	wreg,f,c
  6253  002CD0  D7FE               	bra	u3927
  6254  002CD2                     
  6255                           ;./DHT11.h: 14:         if (PORTDbits.RD7 & 1)
  6256  002CD2  AE83               	btfss	131,7,c	;volatile
  6257  002CD4  EF6E  F016         	goto	u2811
  6258  002CD8  EF70  F016         	goto	u2810
  6259  002CDC                     u2811:
  6260  002CDC  EF74  F016         	goto	l3768
  6261  002CE0                     u2810:
  6262  002CE0                     
  6263                           ;./DHT11.h: 15:             data = ((data << 1) | 1);
  6264  002CE0  80D8               	bsf	status,0,c
  6265  002CE2  3602               	rlcf	DHT11_ReadData@data^0,f,c
  6266  002CE4  EF77  F016         	goto	l157
  6267  002CE8                     l3768:
  6268                           
  6269                           ;./DHT11.h: 17:             data = (data << 1);
  6270  002CE8  5002               	movf	DHT11_ReadData@data^0,w,c
  6271  002CEA  2402               	addwf	DHT11_ReadData@data^0,w,c
  6272  002CEC  6E02               	movwf	DHT11_ReadData@data^0,c
  6273  002CEE                     l157:
  6274  002CEE  BE83               	btfsc	131,7,c	;volatile
  6275  002CF0  EF7C  F016         	goto	u2821
  6276  002CF4  EF7E  F016         	goto	u2820
  6277  002CF8                     u2821:
  6278  002CF8  EF77  F016         	goto	l157
  6279  002CFC                     u2820:
  6280  002CFC                     
  6281                           ;./DHT11.h: 19:     }
  6282  002CFC  2A01               	incf	DHT11_ReadData@i^0,f,c
  6283  002CFE  0E07               	movlw	7
  6284  002D00  6401               	cpfsgt	DHT11_ReadData@i^0,c
  6285  002D02  EF85  F016         	goto	u2831
  6286  002D06  EF87  F016         	goto	u2830
  6287  002D0A                     u2831:
  6288  002D0A  EF5F  F016         	goto	l152
  6289  002D0E                     u2830:
  6290  002D0E                     
  6291                           ;./DHT11.h: 20:     return data;
  6292  002D0E  5002               	movf	DHT11_ReadData@data^0,w,c
  6293  002D10  0012               	return		;funcret
  6294  002D12                     __end_of_DHT11_ReadData:
  6295                           	opt callstack 0
  6296                           
  6297 ;; *************** function _leeHorariosMemoria *****************
  6298 ;; Defined at:
  6299 ;;		line 266 in file "main.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;		None
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;  j               2    8[COMRAM] int 
  6304 ;;  i               2   12[COMRAM] int 
  6305 ;;  contMemoria     2   10[COMRAM] int 
  6306 ;; Return value:  Size  Location     Type
  6307 ;;                  1    wreg      void 
  6308 ;; Registers used:
  6309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6310 ;; Tracked objects:
  6311 ;;		On entry : 0/0
  6312 ;;		On exit  : 0/0
  6313 ;;		Unchanged: 0/0
  6314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6315 ;;      Params:         0       0       0       0       0       0       0       0       0
  6316 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6317 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6318 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6319 ;;Total ram usage:        8 bytes
  6320 ;; Hardware stack levels used:    1
  6321 ;; Hardware stack levels required when called:    4
  6322 ;; This function calls:
  6323 ;;		___wmul
  6324 ;;		_leer_eeprom
  6325 ;; This function is called by:
  6326 ;;		_sistemaPrincipal
  6327 ;; This function uses a non-reentrant model
  6328 ;;
  6329                           
  6330                           	psect	text26
  6331  001BC8                     __ptext26:
  6332                           	opt callstack 0
  6333  001BC8                     _leeHorariosMemoria:
  6334                           	opt callstack 25
  6335  001BC8                     
  6336                           ;main.c: 268:     int contMemoria = 0;
  6337  001BC8  0E00               	movlw	0
  6338  001BCA  6E0C               	movwf	(leeHorariosMemoria@contMemoria+1)^0,c
  6339  001BCC  0E00               	movlw	0
  6340  001BCE  6E0B               	movwf	leeHorariosMemoria@contMemoria^0,c
  6341                           
  6342                           ;main.c: 270:     for (int i = 0; i < 24; i++) {
  6343  001BD0  0E00               	movlw	0
  6344  001BD2  6E0E               	movwf	(leeHorariosMemoria@i+1)^0,c
  6345  001BD4  0E00               	movlw	0
  6346  001BD6  6E0D               	movwf	leeHorariosMemoria@i^0,c
  6347  001BD8                     l4326:
  6348                           
  6349                           ;main.c: 271:         horarios[i].hora = leer_eeprom(contMemoria++);
  6350  001BD8  C00D  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  6351  001BDC  C00E  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  6352  001BE0  0E00               	movlw	0
  6353  001BE2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6354  001BE4  0E0C               	movlw	12
  6355  001BE6  6E03               	movwf	___wmul@multiplicand^0,c
  6356  001BE8  EC09  F019         	call	___wmul	;wreg free
  6357  001BEC  0E32               	movlw	low _horarios
  6358  001BEE  2401               	addwf	?___wmul^0,w,c
  6359  001BF0  6ED9               	movwf	fsr2l,c
  6360  001BF2  0E01               	movlw	high _horarios
  6361  001BF4  2002               	addwfc	(?___wmul+1)^0,w,c
  6362  001BF6  6EDA               	movwf	fsr2h,c
  6363  001BF8  C00B  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  6364  001BFC  C00C  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  6365  001C00  EC2B  F018         	call	_leer_eeprom	;wreg free
  6366  001C04  6EDF               	movwf	indf2,c
  6367  001C06  4A0B               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  6368  001C08  2A0C               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  6369  001C0A                     
  6370                           ;main.c: 273:         for (int j = 0; j < 7; j++) {
  6371  001C0A  0E00               	movlw	0
  6372  001C0C  6E0A               	movwf	(leeHorariosMemoria@j+1)^0,c
  6373  001C0E  0E00               	movlw	0
  6374  001C10  6E09               	movwf	leeHorariosMemoria@j^0,c
  6375  001C12                     l4336:
  6376                           
  6377                           ;main.c: 274:             horarios[i].dias[j] = leer_eeprom(contMemoria++);
  6378  001C12  C00D  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  6379  001C16  C00E  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  6380  001C1A  0E00               	movlw	0
  6381  001C1C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6382  001C1E  0E0C               	movlw	12
  6383  001C20  6E03               	movwf	___wmul@multiplicand^0,c
  6384  001C22  EC09  F019         	call	___wmul	;wreg free
  6385  001C26  0E32               	movlw	low _horarios
  6386  001C28  6E07               	movwf	??_leeHorariosMemoria^0,c
  6387  001C2A  0E01               	movlw	high _horarios
  6388  001C2C  6E08               	movwf	(??_leeHorariosMemoria+1)^0,c
  6389  001C2E  0E01               	movlw	1
  6390  001C30  2607               	addwf	??_leeHorariosMemoria^0,f,c
  6391  001C32  0E00               	movlw	0
  6392  001C34  2208               	addwfc	(??_leeHorariosMemoria+1)^0,f,c
  6393  001C36  5001               	movf	?___wmul^0,w,c
  6394  001C38  2607               	addwf	??_leeHorariosMemoria^0,f,c
  6395  001C3A  5002               	movf	(?___wmul+1)^0,w,c
  6396  001C3C  2208               	addwfc	(??_leeHorariosMemoria+1)^0,f,c
  6397  001C3E  5009               	movf	leeHorariosMemoria@j^0,w,c
  6398  001C40  2407               	addwf	??_leeHorariosMemoria^0,w,c
  6399  001C42  6ED9               	movwf	fsr2l,c
  6400  001C44  500A               	movf	(leeHorariosMemoria@j+1)^0,w,c
  6401  001C46  2008               	addwfc	(??_leeHorariosMemoria+1)^0,w,c
  6402  001C48  6EDA               	movwf	fsr2h,c
  6403  001C4A  C00B  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  6404  001C4E  C00C  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  6405  001C52  EC2B  F018         	call	_leer_eeprom	;wreg free
  6406  001C56  6EDF               	movwf	indf2,c
  6407  001C58  4A0B               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  6408  001C5A  2A0C               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  6409  001C5C                     
  6410                           ;main.c: 275:         }
  6411  001C5C  4A09               	infsnz	leeHorariosMemoria@j^0,f,c
  6412  001C5E  2A0A               	incf	(leeHorariosMemoria@j+1)^0,f,c
  6413  001C60  BE0A               	btfsc	(leeHorariosMemoria@j+1)^0,7,c
  6414  001C62  EF3C  F00E         	goto	u3351
  6415  001C66  500A               	movf	(leeHorariosMemoria@j+1)^0,w,c
  6416  001C68  E109               	bnz	u3350
  6417  001C6A  0E07               	movlw	7
  6418  001C6C  5C09               	subwf	leeHorariosMemoria@j^0,w,c
  6419  001C6E  A0D8               	btfss	status,0,c
  6420  001C70  EF3C  F00E         	goto	u3351
  6421  001C74  EF3E  F00E         	goto	u3350
  6422  001C78                     u3351:
  6423  001C78  EF09  F00E         	goto	l4336
  6424  001C7C                     u3350:
  6425  001C7C                     
  6426                           ;main.c: 277:         horarios[i].regar = leer_eeprom(contMemoria++);
  6427  001C7C  C00D  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  6428  001C80  C00E  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  6429  001C84  0E00               	movlw	0
  6430  001C86  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6431  001C88  0E0C               	movlw	12
  6432  001C8A  6E03               	movwf	___wmul@multiplicand^0,c
  6433  001C8C  EC09  F019         	call	___wmul	;wreg free
  6434  001C90  0E3B               	movlw	low (_horarios+9)
  6435  001C92  2401               	addwf	?___wmul^0,w,c
  6436  001C94  6ED9               	movwf	fsr2l,c
  6437  001C96  0E01               	movlw	high (_horarios+9)
  6438  001C98  2002               	addwfc	(?___wmul+1)^0,w,c
  6439  001C9A  6EDA               	movwf	fsr2h,c
  6440  001C9C  C00B  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  6441  001CA0  C00C  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  6442  001CA4  EC2B  F018         	call	_leer_eeprom	;wreg free
  6443  001CA8  6EDF               	movwf	indf2,c
  6444  001CAA  4A0B               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  6445  001CAC  2A0C               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  6446  001CAE                     
  6447                           ;main.c: 278:         horarios[i].tiempoRegar = leer_eeprom(contMemoria++);
  6448  001CAE  C00D  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  6449  001CB2  C00E  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  6450  001CB6  0E00               	movlw	0
  6451  001CB8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6452  001CBA  0E0C               	movlw	12
  6453  001CBC  6E03               	movwf	___wmul@multiplicand^0,c
  6454  001CBE  EC09  F019         	call	___wmul	;wreg free
  6455  001CC2  0E3D               	movlw	low (_horarios+11)
  6456  001CC4  2401               	addwf	?___wmul^0,w,c
  6457  001CC6  6ED9               	movwf	fsr2l,c
  6458  001CC8  0E01               	movlw	high (_horarios+11)
  6459  001CCA  2002               	addwfc	(?___wmul+1)^0,w,c
  6460  001CCC  6EDA               	movwf	fsr2h,c
  6461  001CCE  C00B  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  6462  001CD2  C00C  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  6463  001CD6  EC2B  F018         	call	_leer_eeprom	;wreg free
  6464  001CDA  6EDF               	movwf	indf2,c
  6465  001CDC  4A0B               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  6466  001CDE  2A0C               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  6467                           
  6468                           ;main.c: 279:     }
  6469  001CE0  4A0D               	infsnz	leeHorariosMemoria@i^0,f,c
  6470  001CE2  2A0E               	incf	(leeHorariosMemoria@i+1)^0,f,c
  6471  001CE4  BE0E               	btfsc	(leeHorariosMemoria@i+1)^0,7,c
  6472  001CE6  EF7E  F00E         	goto	u3361
  6473  001CEA  500E               	movf	(leeHorariosMemoria@i+1)^0,w,c
  6474  001CEC  E109               	bnz	u3360
  6475  001CEE  0E18               	movlw	24
  6476  001CF0  5C0D               	subwf	leeHorariosMemoria@i^0,w,c
  6477  001CF2  A0D8               	btfss	status,0,c
  6478  001CF4  EF7E  F00E         	goto	u3361
  6479  001CF8  EF80  F00E         	goto	u3360
  6480  001CFC                     u3361:
  6481  001CFC  EFEC  F00D         	goto	l4326
  6482  001D00                     u3360:
  6483  001D00  0012               	return		;funcret
  6484  001D02                     __end_of_leeHorariosMemoria:
  6485                           	opt callstack 0
  6486                           
  6487 ;; *************** function _leer_eeprom *****************
  6488 ;; Defined at:
  6489 ;;		line 234 in file "main.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;  direccion       2    2[COMRAM] unsigned short 
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;  dato            1    5[COMRAM] unsigned char 
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  1    wreg      unsigned char 
  6496 ;; Registers used:
  6497 ;;		wreg, status,2, status,0, cstack
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6503 ;;      Params:         2       0       0       0       0       0       0       0       0
  6504 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6505 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6506 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6507 ;;Total ram usage:        4 bytes
  6508 ;; Hardware stack levels used:    1
  6509 ;; Hardware stack levels required when called:    3
  6510 ;; This function calls:
  6511 ;;		_i2c_detener
  6512 ;;		_i2c_envia_dato
  6513 ;;		_i2c_inicia_com
  6514 ;;		_i2c_recibe_dato
  6515 ;;		_i2c_reinicia_com
  6516 ;; This function is called by:
  6517 ;;		_leeHorariosMemoria
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           	psect	text27
  6522  003056                     __ptext27:
  6523                           	opt callstack 0
  6524  003056                     _leer_eeprom:
  6525                           	opt callstack 25
  6526  003056                     
  6527                           ;main.c: 236:     unsigned char dato;;main.c: 238:     i2c_inicia_com();
  6528  003056  EC90  F019         	call	_i2c_inicia_com	;wreg free
  6529                           
  6530                           ;main.c: 239:     i2c_envia_dato(0xAE);
  6531  00305A  0EAE               	movlw	174
  6532  00305C  EC76  F019         	call	_i2c_envia_dato
  6533                           
  6534                           ;main.c: 240:     i2c_envia_dato(direccion >> 8);
  6535  003060  5004               	movf	(leer_eeprom@direccion+1)^0,w,c
  6536  003062  EC76  F019         	call	_i2c_envia_dato
  6537                           
  6538                           ;main.c: 241:     i2c_envia_dato(direccion);
  6539  003066  5003               	movf	leer_eeprom@direccion^0,w,c
  6540  003068  EC76  F019         	call	_i2c_envia_dato
  6541                           
  6542                           ;main.c: 242:     i2c_reinicia_com();
  6543  00306C  EC8C  F019         	call	_i2c_reinicia_com	;wreg free
  6544                           
  6545                           ;main.c: 243:     i2c_envia_dato(0xAF);
  6546  003070  0EAF               	movlw	175
  6547  003072  EC76  F019         	call	_i2c_envia_dato
  6548                           
  6549                           ;main.c: 244:     dato = i2c_recibe_dato();
  6550  003076  EC4B  F019         	call	_i2c_recibe_dato	;wreg free
  6551  00307A  6E06               	movwf	leer_eeprom@dato^0,c
  6552                           
  6553                           ;main.c: 245:     i2c_detener();
  6554  00307C  EC94  F019         	call	_i2c_detener	;wreg free
  6555  003080                     
  6556                           ;main.c: 246:     _delay((unsigned long)((10)*(4000000/4000.0)));
  6557  003080  0E0D               	movlw	13
  6558  003082  6E05               	movwf	??_leer_eeprom^0,c
  6559  003084  0EFC               	movlw	252
  6560  003086                     u3937:
  6561  003086  2EE8               	decfsz	wreg,f,c
  6562  003088  D7FE               	bra	u3937
  6563  00308A  2E05               	decfsz	??_leer_eeprom^0,f,c
  6564  00308C  D7FC               	bra	u3937
  6565  00308E                     
  6566                           ;main.c: 248:     return dato;
  6567  00308E  5006               	movf	leer_eeprom@dato^0,w,c
  6568  003090  0012               	return		;funcret
  6569  003092                     __end_of_leer_eeprom:
  6570                           	opt callstack 0
  6571                           
  6572 ;; *************** function _i2c_reinicia_com *****************
  6573 ;; Defined at:
  6574 ;;		line 37 in file "./I2C.h"
  6575 ;; Parameters:    Size  Location     Type
  6576 ;;		None
  6577 ;; Auto vars:     Size  Location     Type
  6578 ;;		None
  6579 ;; Return value:  Size  Location     Type
  6580 ;;                  1    wreg      void 
  6581 ;; Registers used:
  6582 ;;		wreg, status,2, status,0, cstack
  6583 ;; Tracked objects:
  6584 ;;		On entry : 0/0
  6585 ;;		On exit  : 0/0
  6586 ;;		Unchanged: 0/0
  6587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6588 ;;      Params:         0       0       0       0       0       0       0       0       0
  6589 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6590 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6591 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6592 ;;Total ram usage:        0 bytes
  6593 ;; Hardware stack levels used:    1
  6594 ;; Hardware stack levels required when called:    2
  6595 ;; This function calls:
  6596 ;;		_i2c_espera
  6597 ;; This function is called by:
  6598 ;;		_leer_rtc
  6599 ;;		_leer_eeprom
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           	psect	text28
  6604  003318                     __ptext28:
  6605                           	opt callstack 0
  6606  003318                     _i2c_reinicia_com:
  6607                           	opt callstack 25
  6608  003318                     
  6609                           ;./I2C.h: 38:     i2c_espera();
  6610  003318  ECF6  F018         	call	_i2c_espera	;wreg free
  6611  00331C                     
  6612                           ;./I2C.h: 39:     SSPCON2bits.RSEN = 1;
  6613  00331C  82C5               	bsf	197,1,c	;volatile
  6614  00331E  0012               	return		;funcret
  6615  003320                     __end_of_i2c_reinicia_com:
  6616                           	opt callstack 0
  6617                           
  6618 ;; *************** function _i2c_recibe_dato *****************
  6619 ;; Defined at:
  6620 ;;		line 68 in file "./I2C.h"
  6621 ;; Parameters:    Size  Location     Type
  6622 ;;		None
  6623 ;; Auto vars:     Size  Location     Type
  6624 ;;  datoleido       1    1[COMRAM] unsigned char 
  6625 ;; Return value:  Size  Location     Type
  6626 ;;                  1    wreg      unsigned char 
  6627 ;; Registers used:
  6628 ;;		wreg, status,2, status,0, cstack
  6629 ;; Tracked objects:
  6630 ;;		On entry : 0/0
  6631 ;;		On exit  : 0/0
  6632 ;;		Unchanged: 0/0
  6633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6634 ;;      Params:         0       0       0       0       0       0       0       0       0
  6635 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6636 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6637 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6638 ;;Total ram usage:        1 bytes
  6639 ;; Hardware stack levels used:    1
  6640 ;; Hardware stack levels required when called:    2
  6641 ;; This function calls:
  6642 ;;		_i2c_espera
  6643 ;; This function is called by:
  6644 ;;		_leer_rtc
  6645 ;;		_leer_eeprom
  6646 ;; This function uses a non-reentrant model
  6647 ;;
  6648                           
  6649                           	psect	text29
  6650  003296                     __ptext29:
  6651                           	opt callstack 0
  6652  003296                     _i2c_recibe_dato:
  6653                           	opt callstack 25
  6654  003296                     
  6655                           ;./I2C.h: 70:     unsigned char datoleido;;./I2C.h: 73:     i2c_espera();
  6656  003296  ECF6  F018         	call	_i2c_espera	;wreg free
  6657  00329A                     
  6658                           ;./I2C.h: 74:     SSPCON2bits.RCEN = 1;
  6659  00329A  86C5               	bsf	197,3,c	;volatile
  6660                           
  6661                           ;./I2C.h: 76:     i2c_espera();
  6662  00329C  ECF6  F018         	call	_i2c_espera	;wreg free
  6663  0032A0                     
  6664                           ;./I2C.h: 77:     datoleido = SSPBUF;
  6665  0032A0  CFC9 F002          	movff	4041,i2c_recibe_dato@datoleido	;volatile
  6666                           
  6667                           ;./I2C.h: 80:     i2c_espera();
  6668  0032A4  ECF6  F018         	call	_i2c_espera	;wreg free
  6669  0032A8                     
  6670                           ;./I2C.h: 82:     SSPCON2bits.ACKDT = 1;
  6671  0032A8  8AC5               	bsf	197,5,c	;volatile
  6672  0032AA                     
  6673                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
  6674  0032AA  88C5               	bsf	197,4,c	;volatile
  6675  0032AC                     
  6676                           ;./I2C.h: 91:     return datoleido;
  6677  0032AC  5002               	movf	i2c_recibe_dato@datoleido^0,w,c
  6678  0032AE  0012               	return		;funcret
  6679  0032B0                     __end_of_i2c_recibe_dato:
  6680                           	opt callstack 0
  6681                           
  6682 ;; *************** function _fijaHoraRtc *****************
  6683 ;; Defined at:
  6684 ;;		line 370 in file "main.c"
  6685 ;; Parameters:    Size  Location     Type
  6686 ;;		None
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;		None
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  1    wreg      void 
  6691 ;; Registers used:
  6692 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6698 ;;      Params:         0       0       0       0       0       0       0       0       0
  6699 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6700 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6701 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6702 ;;Total ram usage:        0 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; Hardware stack levels required when called:    5
  6705 ;; This function calls:
  6706 ;;		_UART_printf
  6707 ;;		_escribe_rtc
  6708 ;;		_setRtc
  6709 ;; This function is called by:
  6710 ;;		_sistemaPrincipal
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           	psect	text30
  6715  002B2C                     __ptext30:
  6716                           	opt callstack 0
  6717  002B2C                     _fijaHoraRtc:
  6718                           	opt callstack 24
  6719  002B2C                     
  6720                           ;main.c: 372:     UART_printf("\r\n FIJA HORA \r\n");
  6721  002B2C  0EB7               	movlw	low STR_3
  6722  002B2E  6E02               	movwf	UART_printf@cadena^0,c
  6723  002B30  0E7F               	movlw	high STR_3
  6724  002B32  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6725  002B34  EC2C  F016         	call	_UART_printf	;wreg free
  6726                           
  6727                           ;main.c: 375:     UART_printf("\r\n Envie las Horas en formato 24 Ej: 15 \r\n");
  6728  002B38  0E31               	movlw	low STR_4
  6729  002B3A  6E02               	movwf	UART_printf@cadena^0,c
  6730  002B3C  0E7B               	movlw	high STR_4
  6731  002B3E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6732  002B40  EC2C  F016         	call	_UART_printf	;wreg free
  6733  002B44                     
  6734                           ;main.c: 378:     if (setRtc(0x02)) {
  6735  002B44  0E02               	movlw	2
  6736  002B46  ECF1  F014         	call	_setRtc
  6737  002B4A  0900               	iorlw	0
  6738  002B4C  B4D8               	btfsc	status,2,c
  6739  002B4E  EFAB  F015         	goto	u3471
  6740  002B52  EFAD  F015         	goto	u3470
  6741  002B56                     u3471:
  6742  002B56  EFC9  F015         	goto	l311
  6743  002B5A                     u3470:
  6744  002B5A                     
  6745                           ;main.c: 379:         UART_printf("\r\n Envie los Minutos Ej: 25 \r\n");
  6746  002B5A  0E9B               	movlw	low STR_5
  6747  002B5C  6E02               	movwf	UART_printf@cadena^0,c
  6748  002B5E  0E7D               	movlw	high STR_5
  6749  002B60  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6750  002B62  EC2C  F016         	call	_UART_printf	;wreg free
  6751  002B66                     
  6752                           ;main.c: 380:         if (setRtc(0x01)) {
  6753  002B66  0E01               	movlw	1
  6754  002B68  ECF1  F014         	call	_setRtc
  6755  002B6C  0900               	iorlw	0
  6756  002B6E  B4D8               	btfsc	status,2,c
  6757  002B70  EFBC  F015         	goto	u3481
  6758  002B74  EFBE  F015         	goto	u3480
  6759  002B78                     u3481:
  6760  002B78  EFC9  F015         	goto	l311
  6761  002B7C                     u3480:
  6762  002B7C                     
  6763                           ;main.c: 381:             UART_printf("\r\n HORA ESTABLECIDA CORRECTAMENTE \r\n");
  6764  002B7C  0E1C               	movlw	low STR_6
  6765  002B7E  6E02               	movwf	UART_printf@cadena^0,c
  6766  002B80  0E7C               	movlw	high STR_6
  6767  002B82  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6768  002B84  EC2C  F016         	call	_UART_printf	;wreg free
  6769  002B88                     
  6770                           ;main.c: 382:             escribe_rtc(0x00, 0);
  6771  002B88  0E00               	movlw	0
  6772  002B8A  6E03               	movwf	escribe_rtc@dato^0,c
  6773  002B8C  0E00               	movlw	0
  6774  002B8E  EC3C  F019         	call	_escribe_rtc
  6775  002B92                     l311:
  6776  002B92  0012               	return		;funcret
  6777  002B94                     __end_of_fijaHoraRtc:
  6778                           	opt callstack 0
  6779                           
  6780 ;; *************** function _fijaDiaRtc *****************
  6781 ;; Defined at:
  6782 ;;		line 193 in file "main.c"
  6783 ;; Parameters:    Size  Location     Type
  6784 ;;		None
  6785 ;; Auto vars:     Size  Location     Type
  6786 ;;		None
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  1    wreg      void 
  6789 ;; Registers used:
  6790 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6796 ;;      Params:         0       0       0       0       0       0       0       0       0
  6797 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6798 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6799 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6800 ;;Total ram usage:        0 bytes
  6801 ;; Hardware stack levels used:    1
  6802 ;; Hardware stack levels required when called:    5
  6803 ;; This function calls:
  6804 ;;		_UART_printf
  6805 ;;		_setRtc
  6806 ;; This function is called by:
  6807 ;;		_sistemaPrincipal
  6808 ;; This function uses a non-reentrant model
  6809 ;;
  6810                           
  6811                           	psect	text31
  6812  003136                     __ptext31:
  6813                           	opt callstack 0
  6814  003136                     _fijaDiaRtc:
  6815                           	opt callstack 24
  6816  003136                     
  6817                           ;main.c: 195:     UART_printf("\r\n Envie el dia de la semana Ej: 01 = DOMINGO ... 07 = 
      +                          SABADO \r\n");
  6818  003136  0E45               	movlw	low STR_1
  6819  003138  6E02               	movwf	UART_printf@cadena^0,c
  6820  00313A  0E79               	movlw	high STR_1
  6821  00313C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6822  00313E  EC2C  F016         	call	_UART_printf	;wreg free
  6823  003142                     
  6824                           ;main.c: 197:     if (setRtc(0x03)) {
  6825  003142  0E03               	movlw	3
  6826  003144  ECF1  F014         	call	_setRtc
  6827  003148  0900               	iorlw	0
  6828  00314A  B4D8               	btfsc	status,2,c
  6829  00314C  EFAA  F018         	goto	u3341
  6830  003150  EFAC  F018         	goto	u3340
  6831  003154                     u3341:
  6832  003154  EFB2  F018         	goto	l255
  6833  003158                     u3340:
  6834  003158                     
  6835                           ;main.c: 198:         UART_printf("\r\n DIA ESTABLECIDO CORRECTAMENTE \r\n");
  6836  003158  0E8B               	movlw	low STR_2
  6837  00315A  6E02               	movwf	UART_printf@cadena^0,c
  6838  00315C  0E7C               	movlw	high STR_2
  6839  00315E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6840  003160  EC2C  F016         	call	_UART_printf	;wreg free
  6841  003164                     l255:
  6842  003164  0012               	return		;funcret
  6843  003166                     __end_of_fijaDiaRtc:
  6844                           	opt callstack 0
  6845                           
  6846 ;; *************** function _setRtc *****************
  6847 ;; Defined at:
  6848 ;;		line 203 in file "main.c"
  6849 ;; Parameters:    Size  Location     Type
  6850 ;;  direccion       1    wreg     unsigned char 
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;  direccion       1   14[COMRAM] unsigned char 
  6853 ;;  dato            1   17[COMRAM] unsigned char 
  6854 ;;  datoRtc         1   16[COMRAM] unsigned char 
  6855 ;;  seteado         1   15[COMRAM] unsigned char 
  6856 ;; Return value:  Size  Location     Type
  6857 ;;                  1    wreg      unsigned char 
  6858 ;; Registers used:
  6859 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6860 ;; Tracked objects:
  6861 ;;		On entry : 0/0
  6862 ;;		On exit  : 0/0
  6863 ;;		Unchanged: 0/0
  6864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6865 ;;      Params:         0       0       0       0       0       0       0       0       0
  6866 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6867 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6868 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6869 ;;Total ram usage:        4 bytes
  6870 ;; Hardware stack levels used:    1
  6871 ;; Hardware stack levels required when called:    4
  6872 ;; This function calls:
  6873 ;;		___awdiv
  6874 ;;		___awmod
  6875 ;;		_escribe_rtc
  6876 ;;		_getValue
  6877 ;; This function is called by:
  6878 ;;		_fijaDiaRtc
  6879 ;;		_fijaHoraRtc
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           	psect	text32
  6884  0029E2                     __ptext32:
  6885                           	opt callstack 0
  6886  0029E2                     _setRtc:
  6887                           	opt callstack 24
  6888                           
  6889                           ;incstack = 0
  6890                           ;setRtc@direccion stored from wreg
  6891  0029E2  6E0F               	movwf	setRtc@direccion^0,c
  6892  0029E4                     
  6893                           ;main.c: 206:     unsigned char seteado = 0;
  6894  0029E4  0E00               	movlw	0
  6895  0029E6  6E10               	movwf	setRtc@seteado^0,c
  6896                           
  6897                           ;main.c: 207:     unsigned char datoRtc = 0;
  6898  0029E8  0E00               	movlw	0
  6899  0029EA  6E11               	movwf	setRtc@datoRtc^0,c
  6900  0029EC                     
  6901                           ;main.c: 209:     dato = getValue(2);
  6902  0029EC  0E00               	movlw	0
  6903  0029EE  6E05               	movwf	(getValue@numCharacters+1)^0,c
  6904  0029F0  0E02               	movlw	2
  6905  0029F2  6E04               	movwf	getValue@numCharacters^0,c
  6906  0029F4  ECE8  F006         	call	_getValue	;wreg free
  6907  0029F8  6E12               	movwf	setRtc@dato^0,c
  6908  0029FA                     
  6909                           ;main.c: 211:     if (dato != '@') {
  6910  0029FA  0E40               	movlw	64
  6911  0029FC  1812               	xorwf	setRtc@dato^0,w,c
  6912  0029FE  B4D8               	btfsc	status,2,c
  6913  002A00  EF04  F015         	goto	u3241
  6914  002A04  EF06  F015         	goto	u3240
  6915  002A08                     u3241:
  6916  002A08  EF27  F015         	goto	l4194
  6917  002A0C                     u3240:
  6918  002A0C                     
  6919                           ;main.c: 213:         datoRtc = ((dato / 10) & 0x0F) << 4;
  6920  002A0C  C012  F001         	movff	setRtc@dato,___awdiv@dividend
  6921  002A10  6A02               	clrf	(___awdiv@dividend+1)^0,c
  6922  002A12  0E00               	movlw	0
  6923  002A14  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6924  002A16  0E0A               	movlw	10
  6925  002A18  6E03               	movwf	___awdiv@divisor^0,c
  6926  002A1A  EC3C  F012         	call	___awdiv	;wreg free
  6927  002A1E  0E0F               	movlw	15
  6928  002A20  1601               	andwf	?___awdiv^0,f,c
  6929  002A22  3801               	swapf	?___awdiv^0,w,c
  6930  002A24  0BF0               	andlw	240
  6931  002A26  6E11               	movwf	setRtc@datoRtc^0,c
  6932                           
  6933                           ;main.c: 214:         datoRtc |= (dato % 10) & 0x0F;
  6934  002A28  C012  F001         	movff	setRtc@dato,___awmod@dividend
  6935  002A2C  6A02               	clrf	(___awmod@dividend+1)^0,c
  6936  002A2E  0E00               	movlw	0
  6937  002A30  6E04               	movwf	(___awmod@divisor+1)^0,c
  6938  002A32  0E0A               	movlw	10
  6939  002A34  6E03               	movwf	___awmod@divisor^0,c
  6940  002A36  EC9E  F012         	call	___awmod	;wreg free
  6941  002A3A  5001               	movf	?___awmod^0,w,c
  6942  002A3C  0B0F               	andlw	15
  6943  002A3E  1211               	iorwf	setRtc@datoRtc^0,f,c
  6944                           
  6945                           ;main.c: 215:         escribe_rtc(direccion, datoRtc);
  6946  002A40  C011  F003         	movff	setRtc@datoRtc,escribe_rtc@dato
  6947  002A44  500F               	movf	setRtc@direccion^0,w,c
  6948  002A46  EC3C  F019         	call	_escribe_rtc
  6949  002A4A                     
  6950                           ;main.c: 216:         seteado = 1;
  6951  002A4A  0E01               	movlw	1
  6952  002A4C  6E10               	movwf	setRtc@seteado^0,c
  6953  002A4E                     l4194:
  6954                           
  6955                           ;main.c: 219:     return seteado;
  6956  002A4E  5010               	movf	setRtc@seteado^0,w,c
  6957  002A50  0012               	return		;funcret
  6958  002A52                     __end_of_setRtc:
  6959                           	opt callstack 0
  6960                           
  6961 ;; *************** function _escribe_rtc *****************
  6962 ;; Defined at:
  6963 ;;		line 2 in file "./RTC.h"
  6964 ;; Parameters:    Size  Location     Type
  6965 ;;  direccion       1    wreg     unsigned char 
  6966 ;;  dato            1    2[COMRAM] unsigned char 
  6967 ;; Auto vars:     Size  Location     Type
  6968 ;;  direccion       1    3[COMRAM] unsigned char 
  6969 ;; Return value:  Size  Location     Type
  6970 ;;                  1    wreg      void 
  6971 ;; Registers used:
  6972 ;;		wreg, status,2, status,0, cstack
  6973 ;; Tracked objects:
  6974 ;;		On entry : 0/0
  6975 ;;		On exit  : 0/0
  6976 ;;		Unchanged: 0/0
  6977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6978 ;;      Params:         1       0       0       0       0       0       0       0       0
  6979 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6980 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6981 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6982 ;;Total ram usage:        2 bytes
  6983 ;; Hardware stack levels used:    1
  6984 ;; Hardware stack levels required when called:    3
  6985 ;; This function calls:
  6986 ;;		_i2c_detener
  6987 ;;		_i2c_envia_dato
  6988 ;;		_i2c_inicia_com
  6989 ;; This function is called by:
  6990 ;;		_setRtc
  6991 ;;		_fijaHoraRtc
  6992 ;;		_setRtcDefault
  6993 ;; This function uses a non-reentrant model
  6994 ;;
  6995                           
  6996                           	psect	text33
  6997  003278                     __ptext33:
  6998                           	opt callstack 0
  6999  003278                     _escribe_rtc:
  7000                           	opt callstack 24
  7001                           
  7002                           ;incstack = 0
  7003                           ;escribe_rtc@direccion stored from wreg
  7004  003278  6E04               	movwf	escribe_rtc@direccion^0,c
  7005  00327A                     
  7006                           ;./RTC.h: 3:     i2c_inicia_com();
  7007  00327A  EC90  F019         	call	_i2c_inicia_com	;wreg free
  7008                           
  7009                           ;./RTC.h: 4:     i2c_envia_dato(0xD0);
  7010  00327E  0ED0               	movlw	208
  7011  003280  EC76  F019         	call	_i2c_envia_dato
  7012                           
  7013                           ;./RTC.h: 5:     i2c_envia_dato(direccion);
  7014  003284  5004               	movf	escribe_rtc@direccion^0,w,c
  7015  003286  EC76  F019         	call	_i2c_envia_dato
  7016                           
  7017                           ;./RTC.h: 6:     i2c_envia_dato(dato);
  7018  00328A  5003               	movf	escribe_rtc@dato^0,w,c
  7019  00328C  EC76  F019         	call	_i2c_envia_dato
  7020                           
  7021                           ;./RTC.h: 7:     i2c_detener();
  7022  003290  EC94  F019         	call	_i2c_detener	;wreg free
  7023  003294  0012               	return		;funcret
  7024  003296                     __end_of_escribe_rtc:
  7025                           	opt callstack 0
  7026                           
  7027 ;; *************** function ___awmod *****************
  7028 ;; Defined at:
  7029 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  7030 ;; Parameters:    Size  Location     Type
  7031 ;;  dividend        2    0[COMRAM] int 
  7032 ;;  divisor         2    2[COMRAM] int 
  7033 ;; Auto vars:     Size  Location     Type
  7034 ;;  sign            1    5[COMRAM] unsigned char 
  7035 ;;  counter         1    4[COMRAM] unsigned char 
  7036 ;; Return value:  Size  Location     Type
  7037 ;;                  2    0[COMRAM] int 
  7038 ;; Registers used:
  7039 ;;		wreg, status,2, status,0
  7040 ;; Tracked objects:
  7041 ;;		On entry : 0/0
  7042 ;;		On exit  : 0/0
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7045 ;;      Params:         4       0       0       0       0       0       0       0       0
  7046 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7047 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7048 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7049 ;;Total ram usage:        6 bytes
  7050 ;; Hardware stack levels used:    1
  7051 ;; Hardware stack levels required when called:    1
  7052 ;; This function calls:
  7053 ;;		Nothing
  7054 ;; This function is called by:
  7055 ;;		_setRtc
  7056 ;; This function uses a non-reentrant model
  7057 ;;
  7058                           
  7059                           	psect	text34
  7060  00253C                     __ptext34:
  7061                           	opt callstack 0
  7062  00253C                     ___awmod:
  7063                           	opt callstack 26
  7064  00253C  0E00               	movlw	0
  7065  00253E  6E06               	movwf	___awmod@sign^0,c
  7066  002540  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7067  002542  EFA7  F012         	goto	u3160
  7068  002546  EFA5  F012         	goto	u3161
  7069  00254A                     u3161:
  7070  00254A  EFAD  F012         	goto	l4126
  7071  00254E                     u3160:
  7072  00254E  6C01               	negf	___awmod@dividend^0,c
  7073  002550  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7074  002552  B0D8               	btfsc	status,0,c
  7075  002554  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7076  002556  0E01               	movlw	1
  7077  002558  6E06               	movwf	___awmod@sign^0,c
  7078  00255A                     l4126:
  7079  00255A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7080  00255C  EFB4  F012         	goto	u3170
  7081  002560  EFB2  F012         	goto	u3171
  7082  002564                     u3171:
  7083  002564  EFB8  F012         	goto	l4130
  7084  002568                     u3170:
  7085  002568  6C03               	negf	___awmod@divisor^0,c
  7086  00256A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7087  00256C  B0D8               	btfsc	status,0,c
  7088  00256E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7089  002570                     l4130:
  7090  002570  5003               	movf	___awmod@divisor^0,w,c
  7091  002572  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7092  002574  B4D8               	btfsc	status,2,c
  7093  002576  EFBF  F012         	goto	u3181
  7094  00257A  EFC1  F012         	goto	u3180
  7095  00257E                     u3181:
  7096  00257E  EFE5  F012         	goto	l4146
  7097  002582                     u3180:
  7098  002582  0E01               	movlw	1
  7099  002584  6E05               	movwf	___awmod@counter^0,c
  7100  002586  EFC9  F012         	goto	l4136
  7101  00258A                     l4134:
  7102  00258A  90D8               	bcf	status,0,c
  7103  00258C  3603               	rlcf	___awmod@divisor^0,f,c
  7104  00258E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7105  002590  2A05               	incf	___awmod@counter^0,f,c
  7106  002592                     l4136:
  7107  002592  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7108  002594  EFCE  F012         	goto	u3191
  7109  002598  EFD0  F012         	goto	u3190
  7110  00259C                     u3191:
  7111  00259C  EFC5  F012         	goto	l4134
  7112  0025A0                     u3190:
  7113  0025A0                     l4138:
  7114  0025A0  5003               	movf	___awmod@divisor^0,w,c
  7115  0025A2  5C01               	subwf	___awmod@dividend^0,w,c
  7116  0025A4  5004               	movf	(___awmod@divisor+1)^0,w,c
  7117  0025A6  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7118  0025A8  A0D8               	btfss	status,0,c
  7119  0025AA  EFD9  F012         	goto	u3201
  7120  0025AE  EFDB  F012         	goto	u3200
  7121  0025B2                     u3201:
  7122  0025B2  EFDF  F012         	goto	l4142
  7123  0025B6                     u3200:
  7124  0025B6  5003               	movf	___awmod@divisor^0,w,c
  7125  0025B8  5E01               	subwf	___awmod@dividend^0,f,c
  7126  0025BA  5004               	movf	(___awmod@divisor+1)^0,w,c
  7127  0025BC  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7128  0025BE                     l4142:
  7129  0025BE  90D8               	bcf	status,0,c
  7130  0025C0  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7131  0025C2  3203               	rrcf	___awmod@divisor^0,f,c
  7132  0025C4  2E05               	decfsz	___awmod@counter^0,f,c
  7133  0025C6  EFD0  F012         	goto	l4138
  7134  0025CA                     l4146:
  7135  0025CA  5006               	movf	___awmod@sign^0,w,c
  7136  0025CC  B4D8               	btfsc	status,2,c
  7137  0025CE  EFEB  F012         	goto	u3211
  7138  0025D2  EFED  F012         	goto	u3210
  7139  0025D6                     u3211:
  7140  0025D6  EFF1  F012         	goto	l4150
  7141  0025DA                     u3210:
  7142  0025DA  6C01               	negf	___awmod@dividend^0,c
  7143  0025DC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7144  0025DE  B0D8               	btfsc	status,0,c
  7145  0025E0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7146  0025E2                     l4150:
  7147  0025E2  C001  F001         	movff	___awmod@dividend,?___awmod
  7148  0025E6  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7149  0025EA  0012               	return		;funcret
  7150  0025EC                     __end_of___awmod:
  7151                           	opt callstack 0
  7152                           
  7153 ;; *************** function ___awdiv *****************
  7154 ;; Defined at:
  7155 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  7156 ;; Parameters:    Size  Location     Type
  7157 ;;  dividend        2    0[COMRAM] int 
  7158 ;;  divisor         2    2[COMRAM] int 
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;  quotient        2    6[COMRAM] int 
  7161 ;;  sign            1    5[COMRAM] unsigned char 
  7162 ;;  counter         1    4[COMRAM] unsigned char 
  7163 ;; Return value:  Size  Location     Type
  7164 ;;                  2    0[COMRAM] int 
  7165 ;; Registers used:
  7166 ;;		wreg, status,2, status,0
  7167 ;; Tracked objects:
  7168 ;;		On entry : 0/0
  7169 ;;		On exit  : 0/0
  7170 ;;		Unchanged: 0/0
  7171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7172 ;;      Params:         4       0       0       0       0       0       0       0       0
  7173 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7174 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7175 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7176 ;;Total ram usage:        8 bytes
  7177 ;; Hardware stack levels used:    1
  7178 ;; Hardware stack levels required when called:    1
  7179 ;; This function calls:
  7180 ;;		Nothing
  7181 ;; This function is called by:
  7182 ;;		_setRtc
  7183 ;; This function uses a non-reentrant model
  7184 ;;
  7185                           
  7186                           	psect	text35
  7187  002478                     __ptext35:
  7188                           	opt callstack 0
  7189  002478                     ___awdiv:
  7190                           	opt callstack 26
  7191  002478  0E00               	movlw	0
  7192  00247A  6E06               	movwf	___awdiv@sign^0,c
  7193  00247C  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7194  00247E  EF45  F012         	goto	u3100
  7195  002482  EF43  F012         	goto	u3101
  7196  002486                     u3101:
  7197  002486  EF4B  F012         	goto	l4082
  7198  00248A                     u3100:
  7199  00248A  6C03               	negf	___awdiv@divisor^0,c
  7200  00248C  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7201  00248E  B0D8               	btfsc	status,0,c
  7202  002490  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7203  002492  0E01               	movlw	1
  7204  002494  6E06               	movwf	___awdiv@sign^0,c
  7205  002496                     l4082:
  7206  002496  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7207  002498  EF52  F012         	goto	u3110
  7208  00249C  EF50  F012         	goto	u3111
  7209  0024A0                     u3111:
  7210  0024A0  EF58  F012         	goto	l4088
  7211  0024A4                     u3110:
  7212  0024A4  6C01               	negf	___awdiv@dividend^0,c
  7213  0024A6  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7214  0024A8  B0D8               	btfsc	status,0,c
  7215  0024AA  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7216  0024AC  0E01               	movlw	1
  7217  0024AE  1A06               	xorwf	___awdiv@sign^0,f,c
  7218  0024B0                     l4088:
  7219  0024B0  0E00               	movlw	0
  7220  0024B2  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7221  0024B4  0E00               	movlw	0
  7222  0024B6  6E07               	movwf	___awdiv@quotient^0,c
  7223  0024B8  5003               	movf	___awdiv@divisor^0,w,c
  7224  0024BA  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7225  0024BC  B4D8               	btfsc	status,2,c
  7226  0024BE  EF63  F012         	goto	u3121
  7227  0024C2  EF65  F012         	goto	u3120
  7228  0024C6                     u3121:
  7229  0024C6  EF8D  F012         	goto	l4110
  7230  0024CA                     u3120:
  7231  0024CA  0E01               	movlw	1
  7232  0024CC  6E05               	movwf	___awdiv@counter^0,c
  7233  0024CE  EF6D  F012         	goto	l4096
  7234  0024D2                     l4094:
  7235  0024D2  90D8               	bcf	status,0,c
  7236  0024D4  3603               	rlcf	___awdiv@divisor^0,f,c
  7237  0024D6  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7238  0024D8  2A05               	incf	___awdiv@counter^0,f,c
  7239  0024DA                     l4096:
  7240  0024DA  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7241  0024DC  EF72  F012         	goto	u3131
  7242  0024E0  EF74  F012         	goto	u3130
  7243  0024E4                     u3131:
  7244  0024E4  EF69  F012         	goto	l4094
  7245  0024E8                     u3130:
  7246  0024E8                     l4098:
  7247  0024E8  90D8               	bcf	status,0,c
  7248  0024EA  3607               	rlcf	___awdiv@quotient^0,f,c
  7249  0024EC  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7250  0024EE  5003               	movf	___awdiv@divisor^0,w,c
  7251  0024F0  5C01               	subwf	___awdiv@dividend^0,w,c
  7252  0024F2  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7253  0024F4  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7254  0024F6  A0D8               	btfss	status,0,c
  7255  0024F8  EF80  F012         	goto	u3141
  7256  0024FC  EF82  F012         	goto	u3140
  7257  002500                     u3141:
  7258  002500  EF87  F012         	goto	l4106
  7259  002504                     u3140:
  7260  002504  5003               	movf	___awdiv@divisor^0,w,c
  7261  002506  5E01               	subwf	___awdiv@dividend^0,f,c
  7262  002508  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7263  00250A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7264  00250C  8007               	bsf	___awdiv@quotient^0,0,c
  7265  00250E                     l4106:
  7266  00250E  90D8               	bcf	status,0,c
  7267  002510  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7268  002512  3203               	rrcf	___awdiv@divisor^0,f,c
  7269  002514  2E05               	decfsz	___awdiv@counter^0,f,c
  7270  002516  EF74  F012         	goto	l4098
  7271  00251A                     l4110:
  7272  00251A  5006               	movf	___awdiv@sign^0,w,c
  7273  00251C  B4D8               	btfsc	status,2,c
  7274  00251E  EF93  F012         	goto	u3151
  7275  002522  EF95  F012         	goto	u3150
  7276  002526                     u3151:
  7277  002526  EF99  F012         	goto	l4114
  7278  00252A                     u3150:
  7279  00252A  6C07               	negf	___awdiv@quotient^0,c
  7280  00252C  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7281  00252E  B0D8               	btfsc	status,0,c
  7282  002530  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7283  002532                     l4114:
  7284  002532  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7285  002536  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7286  00253A  0012               	return		;funcret
  7287  00253C                     __end_of___awdiv:
  7288                           	opt callstack 0
  7289                           
  7290 ;; *************** function _dameDatosSistema *****************
  7291 ;; Defined at:
  7292 ;;		line 681 in file "main.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;		None
  7295 ;; Auto vars:     Size  Location     Type
  7296 ;;  i               2   66[BANK0 ] int 
  7297 ;;  bufferHorari   30   28[BANK0 ] unsigned char [30]
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  1    wreg      void 
  7300 ;; Registers used:
  7301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7307 ;;      Params:         0       0       0       0       0       0       0       0       0
  7308 ;;      Locals:         0      40       0       0       0       0       0       0       0
  7309 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7310 ;;      Totals:         2      40       0       0       0       0       0       0       0
  7311 ;;Total ram usage:       42 bytes
  7312 ;; Hardware stack levels used:    1
  7313 ;; Hardware stack levels required when called:    9
  7314 ;; This function calls:
  7315 ;;		_UART_printf
  7316 ;;		_UART_write
  7317 ;;		___wmul
  7318 ;;		_limpiarBuffer
  7319 ;;		_sprintf
  7320 ;; This function is called by:
  7321 ;;		_sistemaPrincipal
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325                           	psect	text36
  7326  000594                     __ptext36:
  7327                           	opt callstack 0
  7328  000594                     _dameDatosSistema:
  7329                           	opt callstack 20
  7330  000594                     
  7331                           ;main.c: 683:     char bufferHorario[30];;main.c: 685:     UART_write('I');
  7332  000594  0E49               	movlw	73
  7333  000596  EC58  F019         	call	_UART_write
  7334  00059A                     
  7335                           ;main.c: 687:     UART_printf("\r\nH = HORA\r\n");
  7336  00059A  0ED5               	movlw	low STR_35
  7337  00059C  6E02               	movwf	UART_printf@cadena^0,c
  7338  00059E  0E7F               	movlw	high STR_35
  7339  0005A0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7340  0005A2  EC2C  F016         	call	_UART_printf	;wreg free
  7341  0005A6                     
  7342                           ;main.c: 688:     UART_printf("\r\nR = REGAR( 1 SI | 0 NO)\r\n");
  7343  0005A6  0ED7               	movlw	low STR_36
  7344  0005A8  6E02               	movwf	UART_printf@cadena^0,c
  7345  0005AA  0E7D               	movlw	high STR_36
  7346  0005AC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7347  0005AE  EC2C  F016         	call	_UART_printf	;wreg free
  7348  0005B2                     
  7349                           ;main.c: 689:     UART_printf("\r\nT = MINUTOS QUE DURARA EL RIEGO\r\n");
  7350  0005B2  0ED3               	movlw	low STR_37
  7351  0005B4  6E02               	movwf	UART_printf@cadena^0,c
  7352  0005B6  0E7C               	movlw	high STR_37
  7353  0005B8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7354  0005BA  EC2C  F016         	call	_UART_printf	;wreg free
  7355  0005BE                     
  7356                           ;main.c: 690:     UART_printf("\r\nD = DIAS QUE EN LOS QUE SE REGARA\r\n");
  7357  0005BE  0EAC               	movlw	low STR_38
  7358  0005C0  6E02               	movwf	UART_printf@cadena^0,c
  7359  0005C2  0E7B               	movlw	high STR_38
  7360  0005C4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7361  0005C6  EC2C  F016         	call	_UART_printf	;wreg free
  7362  0005CA                     
  7363                           ;main.c: 692:     UART_printf("                DLMIJVS\r\n");
  7364  0005CA  0E5D               	movlw	low STR_39
  7365  0005CC  6E02               	movwf	UART_printf@cadena^0,c
  7366  0005CE  0E7E               	movlw	high STR_39
  7367  0005D0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7368  0005D2  EC2C  F016         	call	_UART_printf	;wreg free
  7369  0005D6                     
  7370                           ;main.c: 695:     for (int i = 0; i < 24; i++) {
  7371  0005D6  0E00               	movlw	0
  7372  0005D8  0100               	movlb	0	; () banked
  7373  0005DA  6FF0               	movwf	(dameDatosSistema@i+1)& (0+255),b
  7374  0005DC  0E00               	movlw	0
  7375  0005DE  6FEF               	movwf	dameDatosSistema@i& (0+255),b
  7376  0005E0                     l4536:
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;main.c: 697:         if (horarios[i].regar) {
  7380  0005E0  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  7381  0005E4  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  7382  0005E8  0E00               	movlw	0
  7383  0005EA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7384  0005EC  0E0C               	movlw	12
  7385  0005EE  6E03               	movwf	___wmul@multiplicand^0,c
  7386  0005F0  EC09  F019         	call	___wmul	;wreg free
  7387  0005F4  0E3B               	movlw	low (_horarios+9)
  7388  0005F6  2401               	addwf	?___wmul^0,w,c
  7389  0005F8  6ED9               	movwf	fsr2l,c
  7390  0005FA  0E01               	movlw	high (_horarios+9)
  7391  0005FC  2002               	addwfc	(?___wmul+1)^0,w,c
  7392  0005FE  6EDA               	movwf	fsr2h,c
  7393  000600  50DF               	movf	indf2,w,c
  7394  000602  B4D8               	btfsc	status,2,c
  7395  000604  EF06  F003         	goto	u3561
  7396  000608  EF08  F003         	goto	u3560
  7397  00060C                     u3561:
  7398  00060C  EF7B  F003         	goto	l4546
  7399  000610                     u3560:
  7400  000610                     
  7401                           ;main.c: 699:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  7402  000610  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  7403  000614  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  7404  000618  0E00               	movlw	0
  7405  00061A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7406  00061C  0E0C               	movlw	12
  7407  00061E  6E03               	movwf	___wmul@multiplicand^0,c
  7408  000620  EC09  F019         	call	___wmul	;wreg free
  7409  000624  0E32               	movlw	low _horarios
  7410  000626  2401               	addwf	?___wmul^0,w,c
  7411  000628  6ED9               	movwf	fsr2l,c
  7412  00062A  0E01               	movlw	high _horarios
  7413  00062C  2002               	addwfc	(?___wmul+1)^0,w,c
  7414  00062E  6EDA               	movwf	fsr2h,c
  7415  000630  50DF               	movf	indf2,w,c
  7416  000632  6E5D               	movwf	??_dameDatosSistema^0,c
  7417  000634  505D               	movf	??_dameDatosSistema^0,w,c
  7418  000636  0100               	movlb	0	; () banked
  7419  000638  6FE7               	movwf	_dameDatosSistema$1923& (0+255),b
  7420  00063A  6BE8               	clrf	(_dameDatosSistema$1923+1)& (0+255),b
  7421                           
  7422                           ;main.c: 699:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  7423  00063C  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  7424  000640  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  7425  000644  0E00               	movlw	0
  7426  000646  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7427  000648  0E0C               	movlw	12
  7428  00064A  6E03               	movwf	___wmul@multiplicand^0,c
  7429  00064C  EC09  F019         	call	___wmul	;wreg free
  7430  000650  0E3B               	movlw	low (_horarios+9)
  7431  000652  2401               	addwf	?___wmul^0,w,c
  7432  000654  6ED9               	movwf	fsr2l,c
  7433  000656  0E01               	movlw	high (_horarios+9)
  7434  000658  2002               	addwfc	(?___wmul+1)^0,w,c
  7435  00065A  6EDA               	movwf	fsr2h,c
  7436  00065C  50DF               	movf	indf2,w,c
  7437  00065E  6E5D               	movwf	??_dameDatosSistema^0,c
  7438  000660  505D               	movf	??_dameDatosSistema^0,w,c
  7439  000662  0100               	movlb	0	; () banked
  7440  000664  6FE9               	movwf	_dameDatosSistema$1924& (0+255),b
  7441  000666  6BEA               	clrf	(_dameDatosSistema$1924+1)& (0+255),b
  7442                           
  7443                           ;main.c: 699:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  7444  000668  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  7445  00066C  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  7446  000670  0E00               	movlw	0
  7447  000672  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7448  000674  0E0C               	movlw	12
  7449  000676  6E03               	movwf	___wmul@multiplicand^0,c
  7450  000678  EC09  F019         	call	___wmul	;wreg free
  7451  00067C  0E3D               	movlw	low (_horarios+11)
  7452  00067E  2401               	addwf	?___wmul^0,w,c
  7453  000680  6ED9               	movwf	fsr2l,c
  7454  000682  0E01               	movlw	high (_horarios+11)
  7455  000684  2002               	addwfc	(?___wmul+1)^0,w,c
  7456  000686  6EDA               	movwf	fsr2h,c
  7457  000688  50DF               	movf	indf2,w,c
  7458  00068A  6E5D               	movwf	??_dameDatosSistema^0,c
  7459  00068C  505D               	movf	??_dameDatosSistema^0,w,c
  7460  00068E  0100               	movlb	0	; () banked
  7461  000690  6FEB               	movwf	_dameDatosSistema$1925& (0+255),b
  7462  000692  6BEC               	clrf	(_dameDatosSistema$1925+1)& (0+255),b
  7463  000694                     
  7464                           ; BSR set to: 0
  7465                           ;main.c: 699:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  7466  000694  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  7467  000698  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  7468  00069C  0E00               	movlw	0
  7469  00069E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7470  0006A0  0E0C               	movlw	12
  7471  0006A2  6E03               	movwf	___wmul@multiplicand^0,c
  7472  0006A4  EC09  F019         	call	___wmul	;wreg free
  7473  0006A8  0E33               	movlw	low (_horarios+1)
  7474  0006AA  2401               	addwf	?___wmul^0,w,c
  7475  0006AC  0100               	movlb	0	; () banked
  7476  0006AE  6FED               	movwf	_dameDatosSistema$1926& (0+255),b
  7477  0006B0  0E01               	movlw	high (_horarios+1)
  7478  0006B2  2002               	addwfc	(?___wmul+1)^0,w,c
  7479  0006B4  6FEE               	movwf	(_dameDatosSistema$1926+1)& (0+255),b
  7480  0006B6                     
  7481                           ; BSR set to: 0
  7482                           ;main.c: 699:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  7483  0006B6  0EC9               	movlw	low dameDatosSistema@bufferHorario
  7484  0006B8  6FB3               	movwf	sprintf@s& (0+255),b
  7485  0006BA  0E00               	movlw	high dameDatosSistema@bufferHorario
  7486  0006BC  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7487  0006BE  0E23               	movlw	low STR_40
  7488  0006C0  6FB5               	movwf	sprintf@fmt& (0+255),b
  7489  0006C2  0E7F               	movlw	high STR_40
  7490  0006C4  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7491  0006C6  C0E7  F0B7         	movff	_dameDatosSistema$1923,?_sprintf+4
  7492  0006CA  C0E8  F0B8         	movff	_dameDatosSistema$1923+1,?_sprintf+5
  7493  0006CE  C0E9  F0B9         	movff	_dameDatosSistema$1924,?_sprintf+6
  7494  0006D2  C0EA  F0BA         	movff	_dameDatosSistema$1924+1,?_sprintf+7
  7495  0006D6  C0EB  F0BB         	movff	_dameDatosSistema$1925,?_sprintf+8
  7496  0006DA  C0EC  F0BC         	movff	_dameDatosSistema$1925+1,?_sprintf+9
  7497  0006DE  C0ED  F0BD         	movff	_dameDatosSistema$1926,?_sprintf+10
  7498  0006E2  C0EE  F0BE         	movff	_dameDatosSistema$1926+1,?_sprintf+11
  7499  0006E6  EC0D  F017         	call	_sprintf	;wreg free
  7500  0006EA                     
  7501                           ;main.c: 703:             UART_printf(bufferHorario);
  7502  0006EA  0EC9               	movlw	low dameDatosSistema@bufferHorario
  7503  0006EC  6E02               	movwf	UART_printf@cadena^0,c
  7504  0006EE  0E00               	movlw	high dameDatosSistema@bufferHorario
  7505  0006F0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7506  0006F2  EC2C  F016         	call	_UART_printf	;wreg free
  7507  0006F6                     l4546:
  7508                           
  7509                           ;main.c: 707:     }
  7510  0006F6  0100               	movlb	0	; () banked
  7511  0006F8  4BEF               	infsnz	dameDatosSistema@i& (0+255),f,b
  7512  0006FA  2BF0               	incf	(dameDatosSistema@i+1)& (0+255),f,b
  7513  0006FC                     
  7514                           ; BSR set to: 0
  7515  0006FC  BFF0               	btfsc	(dameDatosSistema@i+1)& (0+255),7,b
  7516  0006FE  EF8A  F003         	goto	u3571
  7517  000702  51F0               	movf	(dameDatosSistema@i+1)& (0+255),w,b
  7518  000704  E109               	bnz	u3570
  7519  000706  0E18               	movlw	24
  7520  000708  5DEF               	subwf	dameDatosSistema@i& (0+255),w,b
  7521  00070A  A0D8               	btfss	status,0,c
  7522  00070C  EF8A  F003         	goto	u3571
  7523  000710  EF8C  F003         	goto	u3570
  7524  000714                     u3571:
  7525  000714  EFF0  F002         	goto	l4536
  7526  000718                     u3570:
  7527  000718                     
  7528                           ; BSR set to: 0
  7529                           ;main.c: 709:     limpiarBuffer();
  7530  000718  ECEB  F017         	call	_limpiarBuffer	;wreg free
  7531                           
  7532                           ;main.c: 711:     switch (diaActual) {
  7533  00071C  EF0E  F004         	goto	l4568
  7534  000720                     l4552:
  7535                           
  7536                           ; BSR set to: 0
  7537                           ;main.c: 713:             sprintf(buffer, "\r\n%0.2d:%0.2d| DOMINGO\r\n", hora, minutos)
      +                          ;
  7538  000720  0E00               	movlw	low _buffer
  7539  000722  6FB3               	movwf	sprintf@s& (0+255),b
  7540  000724  0E01               	movlw	high _buffer
  7541  000726  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7542  000728  0EA9               	movlw	low STR_41
  7543  00072A  6FB5               	movwf	sprintf@fmt& (0+255),b
  7544  00072C  0E7E               	movlw	high STR_41
  7545  00072E  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7546  000730  C087  F0B7         	movff	_hora,?_sprintf+4
  7547  000734  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  7548  000736  C086  F0B9         	movff	_minutos,?_sprintf+6
  7549  00073A  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  7550  00073C  EC0D  F017         	call	_sprintf	;wreg free
  7551                           
  7552                           ;main.c: 714:             break;
  7553  000740  EF38  F004         	goto	l4570
  7554  000744                     l4554:
  7555                           
  7556                           ; BSR set to: 0
  7557                           ;main.c: 717:             sprintf(buffer, "\r\n%0.2d:%0.2d| LUNES\r\n", hora, minutos);
  7558  000744  0E00               	movlw	low _buffer
  7559  000746  6FB3               	movwf	sprintf@s& (0+255),b
  7560  000748  0E01               	movlw	high _buffer
  7561  00074A  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7562  00074C  0E69               	movlw	low STR_42
  7563  00074E  6FB5               	movwf	sprintf@fmt& (0+255),b
  7564  000750  0E7F               	movlw	high STR_42
  7565  000752  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7566  000754  C087  F0B7         	movff	_hora,?_sprintf+4
  7567  000758  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  7568  00075A  C086  F0B9         	movff	_minutos,?_sprintf+6
  7569  00075E  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  7570  000760  EC0D  F017         	call	_sprintf	;wreg free
  7571                           
  7572                           ;main.c: 718:             break;
  7573  000764  EF38  F004         	goto	l4570
  7574  000768                     l4556:
  7575                           
  7576                           ; BSR set to: 0
  7577                           ;main.c: 721:             sprintf(buffer, "\r\n%0.2d:%0.2d| MARTES\r\n", hora, minutos);
  7578  000768  0E00               	movlw	low _buffer
  7579  00076A  6FB3               	movwf	sprintf@s& (0+255),b
  7580  00076C  0E01               	movlw	high _buffer
  7581  00076E  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7582  000770  0EF3               	movlw	low STR_43
  7583  000772  6FB5               	movwf	sprintf@fmt& (0+255),b
  7584  000774  0E7E               	movlw	high STR_43
  7585  000776  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7586  000778  C087  F0B7         	movff	_hora,?_sprintf+4
  7587  00077C  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  7588  00077E  C086  F0B9         	movff	_minutos,?_sprintf+6
  7589  000782  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  7590  000784  EC0D  F017         	call	_sprintf	;wreg free
  7591                           
  7592                           ;main.c: 722:             break;
  7593  000788  EF38  F004         	goto	l4570
  7594  00078C                     l4558:
  7595                           
  7596                           ; BSR set to: 0
  7597                           ;main.c: 725:             sprintf(buffer, "\r\n%0.2d:%0.2d| MIERCOLES\r\n", hora, minuto
      +                          s);
  7598  00078C  0E00               	movlw	low _buffer
  7599  00078E  6FB3               	movwf	sprintf@s& (0+255),b
  7600  000790  0E01               	movlw	high _buffer
  7601  000792  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7602  000794  0E0E               	movlw	low STR_44
  7603  000796  6FB5               	movwf	sprintf@fmt& (0+255),b
  7604  000798  0E7E               	movlw	high STR_44
  7605  00079A  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7606  00079C  C087  F0B7         	movff	_hora,?_sprintf+4
  7607  0007A0  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  7608  0007A2  C086  F0B9         	movff	_minutos,?_sprintf+6
  7609  0007A6  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  7610  0007A8  EC0D  F017         	call	_sprintf	;wreg free
  7611                           
  7612                           ;main.c: 726:             break;
  7613  0007AC  EF38  F004         	goto	l4570
  7614  0007B0                     l4560:
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;main.c: 729:             sprintf(buffer, "\r\n%0.2d:%0.2d| JUEVES\r\n", hora, minutos);
  7618  0007B0  0E00               	movlw	low _buffer
  7619  0007B2  6FB3               	movwf	sprintf@s& (0+255),b
  7620  0007B4  0E01               	movlw	high _buffer
  7621  0007B6  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7622  0007B8  0E0B               	movlw	low STR_45
  7623  0007BA  6FB5               	movwf	sprintf@fmt& (0+255),b
  7624  0007BC  0E7F               	movlw	high STR_45
  7625  0007BE  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7626  0007C0  C087  F0B7         	movff	_hora,?_sprintf+4
  7627  0007C4  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  7628  0007C6  C086  F0B9         	movff	_minutos,?_sprintf+6
  7629  0007CA  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  7630  0007CC  EC0D  F017         	call	_sprintf	;wreg free
  7631                           
  7632                           ;main.c: 730:             break;
  7633  0007D0  EF38  F004         	goto	l4570
  7634  0007D4                     l4562:
  7635                           
  7636                           ; BSR set to: 0
  7637                           ;main.c: 733:             sprintf(buffer, "\r\n%0.2d:%0.2d| VIERNES\r\n", hora, minutos)
      +                          ;
  7638  0007D4  0E00               	movlw	low _buffer
  7639  0007D6  6FB3               	movwf	sprintf@s& (0+255),b
  7640  0007D8  0E01               	movlw	high _buffer
  7641  0007DA  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7642  0007DC  0EC2               	movlw	low STR_46
  7643  0007DE  6FB5               	movwf	sprintf@fmt& (0+255),b
  7644  0007E0  0E7E               	movlw	high STR_46
  7645  0007E2  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7646  0007E4  C087  F0B7         	movff	_hora,?_sprintf+4
  7647  0007E8  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  7648  0007EA  C086  F0B9         	movff	_minutos,?_sprintf+6
  7649  0007EE  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  7650  0007F0  EC0D  F017         	call	_sprintf	;wreg free
  7651                           
  7652                           ;main.c: 734:             break;
  7653  0007F4  EF38  F004         	goto	l4570
  7654  0007F8                     l4564:
  7655                           
  7656                           ; BSR set to: 0
  7657                           ;main.c: 737:             sprintf(buffer, "\r\n%0.2d:%0.2d| SABADO\r\n", hora, minutos);
  7658  0007F8  0E00               	movlw	low _buffer
  7659  0007FA  6FB3               	movwf	sprintf@s& (0+255),b
  7660  0007FC  0E01               	movlw	high _buffer
  7661  0007FE  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7662  000800  0EDB               	movlw	low STR_47
  7663  000802  6FB5               	movwf	sprintf@fmt& (0+255),b
  7664  000804  0E7E               	movlw	high STR_47
  7665  000806  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7666  000808  C087  F0B7         	movff	_hora,?_sprintf+4
  7667  00080C  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  7668  00080E  C086  F0B9         	movff	_minutos,?_sprintf+6
  7669  000812  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  7670  000814  EC0D  F017         	call	_sprintf	;wreg free
  7671                           
  7672                           ;main.c: 738:             break;
  7673  000818  EF38  F004         	goto	l4570
  7674  00081C                     l4568:
  7675  00081C  0100               	movlb	0	; () banked
  7676  00081E  5184               	movf	_diaActual& (0+255),w,b
  7677  000820  6E5D               	movwf	??_dameDatosSistema^0,c
  7678  000822  6A5E               	clrf	(??_dameDatosSistema+1)^0,c
  7679                           
  7680                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7681                           ; Switch size 1, requested type "simple"
  7682                           ; Number of cases is 1, Range of values is 0 to 0
  7683                           ; switch strategies available:
  7684                           ; Name         Instructions Cycles
  7685                           ; simple_byte            4     3 (average)
  7686                           ;	Chosen strategy is simple_byte
  7687  000824  505E               	movf	(??_dameDatosSistema+1)^0,w,c
  7688  000826  0A00               	xorlw	0	; case 0
  7689  000828  B4D8               	btfsc	status,2,c
  7690  00082A  EF19  F004         	goto	l5136
  7691  00082E  EF38  F004         	goto	l4570
  7692  000832                     l5136:
  7693                           
  7694                           ; BSR set to: 0
  7695                           ; Switch size 1, requested type "simple"
  7696                           ; Number of cases is 7, Range of values is 1 to 7
  7697                           ; switch strategies available:
  7698                           ; Name         Instructions Cycles
  7699                           ; simple_byte           22    12 (average)
  7700                           ;	Chosen strategy is simple_byte
  7701  000832  505D               	movf	??_dameDatosSistema^0,w,c
  7702  000834  0A01               	xorlw	1	; case 1
  7703  000836  B4D8               	btfsc	status,2,c
  7704  000838  EF90  F003         	goto	l4552
  7705  00083C  0A03               	xorlw	3	; case 2
  7706  00083E  B4D8               	btfsc	status,2,c
  7707  000840  EFA2  F003         	goto	l4554
  7708  000844  0A01               	xorlw	1	; case 3
  7709  000846  B4D8               	btfsc	status,2,c
  7710  000848  EFB4  F003         	goto	l4556
  7711  00084C  0A07               	xorlw	7	; case 4
  7712  00084E  B4D8               	btfsc	status,2,c
  7713  000850  EFC6  F003         	goto	l4558
  7714  000854  0A01               	xorlw	1	; case 5
  7715  000856  B4D8               	btfsc	status,2,c
  7716  000858  EFD8  F003         	goto	l4560
  7717  00085C  0A03               	xorlw	3	; case 6
  7718  00085E  B4D8               	btfsc	status,2,c
  7719  000860  EFEA  F003         	goto	l4562
  7720  000864  0A01               	xorlw	1	; case 7
  7721  000866  B4D8               	btfsc	status,2,c
  7722  000868  EFFC  F003         	goto	l4564
  7723  00086C  EF38  F004         	goto	l4570
  7724  000870                     l4570:
  7725                           
  7726                           ;main.c: 745:     UART_printf(buffer);
  7727  000870  0E00               	movlw	low _buffer
  7728  000872  6E02               	movwf	UART_printf@cadena^0,c
  7729  000874  0E01               	movlw	high _buffer
  7730  000876  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7731  000878  EC2C  F016         	call	_UART_printf	;wreg free
  7732  00087C                     
  7733                           ;main.c: 747:     UART_write('I');
  7734  00087C  0E49               	movlw	73
  7735  00087E  EC58  F019         	call	_UART_write
  7736  000882  0012               	return		;funcret
  7737  000884                     __end_of_dameDatosSistema:
  7738                           	opt callstack 0
  7739                           
  7740 ;; *************** function _limpiarBuffer *****************
  7741 ;; Defined at:
  7742 ;;		line 1028 in file "main.c"
  7743 ;; Parameters:    Size  Location     Type
  7744 ;;		None
  7745 ;; Auto vars:     Size  Location     Type
  7746 ;;  i               2    0[COMRAM] int 
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  1    wreg      void 
  7749 ;; Registers used:
  7750 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7756 ;;      Params:         0       0       0       0       0       0       0       0       0
  7757 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7758 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7759 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7760 ;;Total ram usage:        2 bytes
  7761 ;; Hardware stack levels used:    1
  7762 ;; Hardware stack levels required when called:    1
  7763 ;; This function calls:
  7764 ;;		Nothing
  7765 ;; This function is called by:
  7766 ;;		_lecturaWifi
  7767 ;;		_dameDatosSistema
  7768 ;;		_mostrarDatosSensores
  7769 ;;		_mostrarDatosSensoresWIFI
  7770 ;; This function uses a non-reentrant model
  7771 ;;
  7772                           
  7773                           	psect	text37
  7774  002FD6                     __ptext37:
  7775                           	opt callstack 0
  7776  002FD6                     _limpiarBuffer:
  7777                           	opt callstack 27
  7778  002FD6                     
  7779                           ;main.c: 1029:     for (int i = 0; i < 50; i++) {
  7780  002FD6  0E00               	movlw	0
  7781  002FD8  6E02               	movwf	(limpiarBuffer@i+1)^0,c
  7782  002FDA  0E00               	movlw	0
  7783  002FDC  6E01               	movwf	limpiarBuffer@i^0,c
  7784  002FDE                     l4066:
  7785                           
  7786                           ;main.c: 1030:         buffer[i] = 0;
  7787  002FDE  0E00               	movlw	low _buffer
  7788  002FE0  2401               	addwf	limpiarBuffer@i^0,w,c
  7789  002FE2  6ED9               	movwf	fsr2l,c
  7790  002FE4  0E01               	movlw	high _buffer
  7791  002FE6  2002               	addwfc	(limpiarBuffer@i+1)^0,w,c
  7792  002FE8  6EDA               	movwf	fsr2h,c
  7793  002FEA  0E00               	movlw	0
  7794  002FEC  6EDF               	movwf	indf2,c
  7795  002FEE                     
  7796                           ;main.c: 1031:     }
  7797  002FEE  4A01               	infsnz	limpiarBuffer@i^0,f,c
  7798  002FF0  2A02               	incf	(limpiarBuffer@i+1)^0,f,c
  7799  002FF2  BE02               	btfsc	(limpiarBuffer@i+1)^0,7,c
  7800  002FF4  EF05  F018         	goto	u3091
  7801  002FF8  5002               	movf	(limpiarBuffer@i+1)^0,w,c
  7802  002FFA  E109               	bnz	u3090
  7803  002FFC  0E32               	movlw	50
  7804  002FFE  5C01               	subwf	limpiarBuffer@i^0,w,c
  7805  003000  A0D8               	btfss	status,0,c
  7806  003002  EF05  F018         	goto	u3091
  7807  003006  EF07  F018         	goto	u3090
  7808  00300A                     u3091:
  7809  00300A  EFEF  F017         	goto	l4066
  7810  00300E                     u3090:
  7811  00300E                     
  7812                           ;main.c: 1033:     buffer[50 - 1] = '\0';
  7813  00300E  0E00               	movlw	0
  7814  003010  0101               	movlb	1	; () banked
  7815  003012  6F31               	movwf	(_buffer+49)& (0+255),b
  7816  003014                     
  7817                           ; BSR set to: 1
  7818  003014  0012               	return		;funcret
  7819  003016                     __end_of_limpiarBuffer:
  7820                           	opt callstack 0
  7821                           
  7822 ;; *************** function _asignarHorarios *****************
  7823 ;; Defined at:
  7824 ;;		line 389 in file "main.c"
  7825 ;; Parameters:    Size  Location     Type
  7826 ;;		None
  7827 ;; Auto vars:     Size  Location     Type
  7828 ;;  i               2   29[BANK0 ] int 
  7829 ;;  Rx              1   32[BANK0 ] unsigned char 
  7830 ;;  hora            1   31[BANK0 ] unsigned char 
  7831 ;;  diaRegar        1   28[BANK0 ] unsigned char 
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  1    wreg      void 
  7834 ;; Registers used:
  7835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7841 ;;      Params:         0       0       0       0       0       0       0       0       0
  7842 ;;      Locals:         0       5       0       0       0       0       0       0       0
  7843 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7844 ;;      Totals:         2       5       0       0       0       0       0       0       0
  7845 ;;Total ram usage:        7 bytes
  7846 ;; Hardware stack levels used:    1
  7847 ;; Hardware stack levels required when called:    9
  7848 ;; This function calls:
  7849 ;;		_UART_printf
  7850 ;;		_escribeHorariosMemoria
  7851 ;;		_getValue
  7852 ;;		_sprintf
  7853 ;; This function is called by:
  7854 ;;		_sistemaPrincipal
  7855 ;; This function uses a non-reentrant model
  7856 ;;
  7857                           
  7858                           	psect	text38
  7859  000FF4                     __ptext38:
  7860                           	opt callstack 0
  7861  000FF4                     _asignarHorarios:
  7862                           	opt callstack 20
  7863  000FF4                     
  7864                           ;main.c: 391:     unsigned char hora;;main.c: 392:     unsigned char Rx;;main.c: 393:   
      +                            unsigned char diaRegar;;main.c: 395:     UART_printf("\r\n OPCIONES DE REGADO \r\n");
  7865  000FF4  0E77               	movlw	low STR_7
  7866  000FF6  6E02               	movwf	UART_printf@cadena^0,c
  7867  000FF8  0E7E               	movlw	high STR_7
  7868  000FFA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7869  000FFC  EC2C  F016         	call	_UART_printf	;wreg free
  7870                           
  7871                           ;main.c: 397:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  7872  001000  0E6D               	movlw	low STR_8
  7873  001002  6E02               	movwf	UART_printf@cadena^0,c
  7874  001004  0E7A               	movlw	high STR_8
  7875  001006  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7876  001008  EC2C  F016         	call	_UART_printf	;wreg free
  7877  00100C                     
  7878                           ;main.c: 398:     hora = getValue(2);
  7879  00100C  0E00               	movlw	0
  7880  00100E  6E05               	movwf	(getValue@numCharacters+1)^0,c
  7881  001010  0E02               	movlw	2
  7882  001012  6E04               	movwf	getValue@numCharacters^0,c
  7883  001014  ECE8  F006         	call	_getValue	;wreg free
  7884  001018  0100               	movlb	0	; () banked
  7885  00101A  6FCC               	movwf	asignarHorarios@hora& (0+255),b
  7886  00101C                     
  7887                           ; BSR set to: 0
  7888                           ;main.c: 400:     if (hora != '@') {
  7889  00101C  0E40               	movlw	64
  7890  00101E  19CC               	xorwf	asignarHorarios@hora& (0+255),w,b
  7891  001020  B4D8               	btfsc	status,2,c
  7892  001022  EF15  F008         	goto	u3491
  7893  001026  EF17  F008         	goto	u3490
  7894  00102A                     u3491:
  7895  00102A  EFD6  F008         	goto	l325
  7896  00102E                     u3490:
  7897  00102E                     
  7898                           ; BSR set to: 0
  7899                           ;main.c: 402:         UART_printf("\r\n Ingrese 1 para activar || ingrese 0 para desacti
      +                          var: \r\n");
  7900  00102E  0E86               	movlw	low STR_9
  7901  001030  6E02               	movwf	UART_printf@cadena^0,c
  7902  001032  0E79               	movlw	high STR_9
  7903  001034  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7904  001036  EC2C  F016         	call	_UART_printf	;wreg free
  7905  00103A                     
  7906                           ;main.c: 404:         Rx = getValue(1);
  7907  00103A  0E00               	movlw	0
  7908  00103C  6E05               	movwf	(getValue@numCharacters+1)^0,c
  7909  00103E  0E01               	movlw	1
  7910  001040  6E04               	movwf	getValue@numCharacters^0,c
  7911  001042  ECE8  F006         	call	_getValue	;wreg free
  7912  001046  0100               	movlb	0	; () banked
  7913  001048  6FCD               	movwf	asignarHorarios@Rx& (0+255),b
  7914  00104A                     
  7915                           ; BSR set to: 0
  7916                           ;main.c: 407:         if (Rx == 1) {
  7917  00104A  05CD               	decf	asignarHorarios@Rx& (0+255),w,b
  7918  00104C  A4D8               	btfss	status,2,c
  7919  00104E  EF2B  F008         	goto	u3501
  7920  001052  EF2D  F008         	goto	u3500
  7921  001056                     u3501:
  7922  001056  EFBE  F008         	goto	l4486
  7923  00105A                     u3500:
  7924  00105A                     
  7925                           ; BSR set to: 0
  7926                           ;main.c: 409:             UART_printf("\r\n Ingrese 1 para activar || ingrese 0 para des
      +                          activar: \r\n");
  7927  00105A  0E86               	movlw	low STR_9
  7928  00105C  6E02               	movwf	UART_printf@cadena^0,c
  7929  00105E  0E79               	movlw	high STR_9
  7930  001060  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7931  001062  EC2C  F016         	call	_UART_printf	;wreg free
  7932                           
  7933                           ;main.c: 410:             UART_printf("\r\n DOMINGO = [1] ... SABADO = [7] \r\n");
  7934  001066  0E41               	movlw	low STR_11
  7935  001068  6E02               	movwf	UART_printf@cadena^0,c
  7936  00106A  0E7C               	movlw	high STR_11
  7937  00106C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7938  00106E  EC2C  F016         	call	_UART_printf	;wreg free
  7939  001072                     
  7940                           ;main.c: 412:             for (int i = 0; i < 7; i++) {
  7941  001072  0E00               	movlw	0
  7942  001074  0100               	movlb	0	; () banked
  7943  001076  6FCB               	movwf	(asignarHorarios@i+1)& (0+255),b
  7944  001078  0E00               	movlw	0
  7945  00107A  6FCA               	movwf	asignarHorarios@i& (0+255),b
  7946  00107C                     l4456:
  7947                           
  7948                           ; BSR set to: 0
  7949                           ;main.c: 413:                 sprintf(buffer, "\r\n[%d]: ", i + 1);
  7950  00107C  0E00               	movlw	low _buffer
  7951  00107E  6FB3               	movwf	sprintf@s& (0+255),b
  7952  001080  0E01               	movlw	high _buffer
  7953  001082  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7954  001084  0EED               	movlw	low STR_12
  7955  001086  6FB5               	movwf	sprintf@fmt& (0+255),b
  7956  001088  0E7F               	movlw	high STR_12
  7957  00108A  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7958  00108C  0E01               	movlw	1
  7959  00108E  25CA               	addwf	asignarHorarios@i& (0+255),w,b
  7960  001090  6FB7               	movwf	(?_sprintf+4)& (0+255),b
  7961  001092  0E00               	movlw	0
  7962  001094  21CB               	addwfc	(asignarHorarios@i+1)& (0+255),w,b
  7963  001096  6FB8               	movwf	(?_sprintf+5)& (0+255),b
  7964  001098  EC0D  F017         	call	_sprintf	;wreg free
  7965  00109C                     
  7966                           ;main.c: 414:                 UART_printf(buffer);
  7967  00109C  0E00               	movlw	low _buffer
  7968  00109E  6E02               	movwf	UART_printf@cadena^0,c
  7969  0010A0  0E01               	movlw	high _buffer
  7970  0010A2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7971  0010A4  EC2C  F016         	call	_UART_printf	;wreg free
  7972  0010A8                     
  7973                           ;main.c: 415:                 diaRegar = getValue(1);
  7974  0010A8  0E00               	movlw	0
  7975  0010AA  6E05               	movwf	(getValue@numCharacters+1)^0,c
  7976  0010AC  0E01               	movlw	1
  7977  0010AE  6E04               	movwf	getValue@numCharacters^0,c
  7978  0010B0  ECE8  F006         	call	_getValue	;wreg free
  7979  0010B4  0100               	movlb	0	; () banked
  7980  0010B6  6FC9               	movwf	asignarHorarios@diaRegar& (0+255),b
  7981  0010B8                     
  7982                           ; BSR set to: 0
  7983                           ;main.c: 417:                 if (diaRegar != '@') {
  7984  0010B8  0E40               	movlw	64
  7985  0010BA  19C9               	xorwf	asignarHorarios@diaRegar& (0+255),w,b
  7986  0010BC  B4D8               	btfsc	status,2,c
  7987  0010BE  EF63  F008         	goto	u3511
  7988  0010C2  EF65  F008         	goto	u3510
  7989  0010C6                     u3511:
  7990  0010C6  EF9A  F008         	goto	l4476
  7991  0010CA                     u3510:
  7992  0010CA  EF6F  F008         	goto	l4472
  7993  0010CE                     l4466:
  7994                           
  7995                           ; BSR set to: 0
  7996                           ;main.c: 421:                             diaRegar = '0';
  7997  0010CE  0E30               	movlw	48
  7998  0010D0  6FC9               	movwf	asignarHorarios@diaRegar& (0+255),b
  7999                           
  8000                           ;main.c: 422:                             break;
  8001  0010D2  EF84  F008         	goto	l4474
  8002  0010D6                     l4468:
  8003                           
  8004                           ; BSR set to: 0
  8005                           ;main.c: 425:                             diaRegar = '1';
  8006  0010D6  0E31               	movlw	49
  8007  0010D8  6FC9               	movwf	asignarHorarios@diaRegar& (0+255),b
  8008                           
  8009                           ;main.c: 426:                             break;
  8010  0010DA  EF84  F008         	goto	l4474
  8011  0010DE                     l4472:
  8012                           
  8013                           ; BSR set to: 0
  8014  0010DE  51C9               	movf	asignarHorarios@diaRegar& (0+255),w,b
  8015  0010E0  6E5D               	movwf	??_asignarHorarios^0,c
  8016  0010E2  6A5E               	clrf	(??_asignarHorarios+1)^0,c
  8017                           
  8018                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8019                           ; Switch size 1, requested type "simple"
  8020                           ; Number of cases is 1, Range of values is 0 to 0
  8021                           ; switch strategies available:
  8022                           ; Name         Instructions Cycles
  8023                           ; simple_byte            4     3 (average)
  8024                           ;	Chosen strategy is simple_byte
  8025  0010E4  505E               	movf	(??_asignarHorarios+1)^0,w,c
  8026  0010E6  0A00               	xorlw	0	; case 0
  8027  0010E8  B4D8               	btfsc	status,2,c
  8028  0010EA  EF79  F008         	goto	l5138
  8029  0010EE  EF84  F008         	goto	l4474
  8030  0010F2                     l5138:
  8031                           
  8032                           ; BSR set to: 0
  8033                           ; Switch size 1, requested type "simple"
  8034                           ; Number of cases is 2, Range of values is 0 to 1
  8035                           ; switch strategies available:
  8036                           ; Name         Instructions Cycles
  8037                           ; simple_byte            7     4 (average)
  8038                           ;	Chosen strategy is simple_byte
  8039  0010F2  505D               	movf	??_asignarHorarios^0,w,c
  8040  0010F4  0A00               	xorlw	0	; case 0
  8041  0010F6  B4D8               	btfsc	status,2,c
  8042  0010F8  EF67  F008         	goto	l4466
  8043  0010FC  0A01               	xorlw	1	; case 1
  8044  0010FE  B4D8               	btfsc	status,2,c
  8045  001100  EF6B  F008         	goto	l4468
  8046  001104  EF84  F008         	goto	l4474
  8047  001108                     l4474:
  8048                           
  8049                           ; BSR set to: 0
  8050                           ;main.c: 430:                     horarios[hora].dias[i] = diaRegar;
  8051  001108  51CC               	movf	asignarHorarios@hora& (0+255),w,b
  8052  00110A  0D0C               	mullw	12
  8053  00110C  0E32               	movlw	low _horarios
  8054  00110E  6E5D               	movwf	??_asignarHorarios^0,c
  8055  001110  0E01               	movlw	high _horarios
  8056  001112  6E5E               	movwf	(??_asignarHorarios+1)^0,c
  8057  001114  0E01               	movlw	1
  8058  001116  265D               	addwf	??_asignarHorarios^0,f,c
  8059  001118  0E00               	movlw	0
  8060  00111A  225E               	addwfc	(??_asignarHorarios+1)^0,f,c
  8061  00111C  50F3               	movf	243,w,c
  8062  00111E  265D               	addwf	??_asignarHorarios^0,f,c
  8063  001120  50F4               	movf	244,w,c
  8064  001122  225E               	addwfc	(??_asignarHorarios+1)^0,f,c
  8065  001124  51CA               	movf	asignarHorarios@i& (0+255),w,b
  8066  001126  245D               	addwf	??_asignarHorarios^0,w,c
  8067  001128  6ED9               	movwf	fsr2l,c
  8068  00112A  51CB               	movf	(asignarHorarios@i+1)& (0+255),w,b
  8069  00112C  205E               	addwfc	(??_asignarHorarios+1)^0,w,c
  8070  00112E  6EDA               	movwf	fsr2h,c
  8071  001130  C0C9  FFDF         	movff	asignarHorarios@diaRegar,indf2
  8072  001134                     l4476:
  8073                           
  8074                           ; BSR set to: 0
  8075                           ;main.c: 433:             }
  8076  001134  4BCA               	infsnz	asignarHorarios@i& (0+255),f,b
  8077  001136  2BCB               	incf	(asignarHorarios@i+1)& (0+255),f,b
  8078  001138                     
  8079                           ; BSR set to: 0
  8080  001138  BFCB               	btfsc	(asignarHorarios@i+1)& (0+255),7,b
  8081  00113A  EFA8  F008         	goto	u3521
  8082  00113E  51CB               	movf	(asignarHorarios@i+1)& (0+255),w,b
  8083  001140  E109               	bnz	u3520
  8084  001142  0E07               	movlw	7
  8085  001144  5DCA               	subwf	asignarHorarios@i& (0+255),w,b
  8086  001146  A0D8               	btfss	status,0,c
  8087  001148  EFA8  F008         	goto	u3521
  8088  00114C  EFAA  F008         	goto	u3520
  8089  001150                     u3521:
  8090  001150  EF3E  F008         	goto	l4456
  8091  001154                     u3520:
  8092  001154                     
  8093                           ; BSR set to: 0
  8094                           ;main.c: 435:             horarios[hora].regar = Rx;
  8095  001154  51CC               	movf	asignarHorarios@hora& (0+255),w,b
  8096  001156  0D0C               	mullw	12
  8097  001158  0E3B               	movlw	low (_horarios+9)
  8098  00115A  24F3               	addwf	243,w,c
  8099  00115C  6ED9               	movwf	fsr2l,c
  8100  00115E  0E01               	movlw	high (_horarios+9)
  8101  001160  20F4               	addwfc	prodh,w,c
  8102  001162  6EDA               	movwf	fsr2h,c
  8103  001164  C0CD  FFDF         	movff	asignarHorarios@Rx,indf2
  8104  001168                     
  8105                           ; BSR set to: 0
  8106                           ;main.c: 437:             escribeHorariosMemoria();
  8107  001168  EC43  F00D         	call	_escribeHorariosMemoria	;wreg free
  8108  00116C                     
  8109                           ;main.c: 440:             UART_printf("\r\n Horario Modificado! \r\n");
  8110  00116C  0E29               	movlw	low STR_13
  8111  00116E  6E02               	movwf	UART_printf@cadena^0,c
  8112  001170  0E7E               	movlw	high STR_13
  8113  001172  6E03               	movwf	(UART_printf@cadena+1)^0,c
  8114  001174  EC2C  F016         	call	_UART_printf	;wreg free
  8115                           
  8116                           ;main.c: 442:         } else if (Rx == 0) {
  8117  001178  EFD6  F008         	goto	l325
  8118  00117C                     l4486:
  8119                           
  8120                           ; BSR set to: 0
  8121  00117C  51CD               	movf	asignarHorarios@Rx& (0+255),w,b
  8122  00117E  A4D8               	btfss	status,2,c
  8123  001180  EFC4  F008         	goto	u3531
  8124  001184  EFC6  F008         	goto	u3530
  8125  001188                     u3531:
  8126  001188  EFD6  F008         	goto	l325
  8127  00118C                     u3530:
  8128  00118C                     
  8129                           ; BSR set to: 0
  8130                           ;main.c: 443:             horarios[hora].regar = Rx;
  8131  00118C  51CC               	movf	asignarHorarios@hora& (0+255),w,b
  8132  00118E  0D0C               	mullw	12
  8133  001190  0E3B               	movlw	low (_horarios+9)
  8134  001192  24F3               	addwf	243,w,c
  8135  001194  6ED9               	movwf	fsr2l,c
  8136  001196  0E01               	movlw	high (_horarios+9)
  8137  001198  20F4               	addwfc	prodh,w,c
  8138  00119A  6EDA               	movwf	fsr2h,c
  8139  00119C  C0CD  FFDF         	movff	asignarHorarios@Rx,indf2
  8140  0011A0                     
  8141                           ; BSR set to: 0
  8142                           ;main.c: 444:             UART_printf("\r\n Horario Modificado! \r\n");
  8143  0011A0  0E29               	movlw	low STR_13
  8144  0011A2  6E02               	movwf	UART_printf@cadena^0,c
  8145  0011A4  0E7E               	movlw	high STR_13
  8146  0011A6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  8147  0011A8  EC2C  F016         	call	_UART_printf	;wreg free
  8148  0011AC                     l325:
  8149  0011AC  0012               	return		;funcret
  8150  0011AE                     __end_of_asignarHorarios:
  8151                           	opt callstack 0
  8152                           
  8153 ;; *************** function _sprintf *****************
  8154 ;; Defined at:
  8155 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  8156 ;; Parameters:    Size  Location     Type
  8157 ;;  s               2    6[BANK0 ] PTR unsigned char 
  8158 ;;		 -> dameDatosSistema@bufferHorario(30), buffer(50), 
  8159 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  8160 ;;		 -> STR_54(45), STR_53(29), STR_52(32), STR_51(45), 
  8161 ;;		 -> STR_50(29), STR_49(32), STR_47(24), STR_46(25), 
  8162 ;;		 -> STR_45(24), STR_44(27), STR_43(24), STR_42(23), 
  8163 ;;		 -> STR_41(25), STR_40(24), STR_20(51), STR_12(9), 
  8164 ;; Auto vars:     Size  Location     Type
  8165 ;;  f               6   22[BANK0 ] struct _IO_FILE
  8166 ;;  ap              2   20[BANK0 ] PTR void [1]
  8167 ;;		 -> ?_sprintf(2), 
  8168 ;;  ret             2    0        int 
  8169 ;; Return value:  Size  Location     Type
  8170 ;;                  2    6[BANK0 ] int 
  8171 ;; Registers used:
  8172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8173 ;; Tracked objects:
  8174 ;;		On entry : 0/0
  8175 ;;		On exit  : 0/0
  8176 ;;		Unchanged: 0/0
  8177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8178 ;;      Params:         0      12       0       0       0       0       0       0       0
  8179 ;;      Locals:         0      10       0       0       0       0       0       0       0
  8180 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8181 ;;      Totals:         0      22       0       0       0       0       0       0       0
  8182 ;;Total ram usage:       22 bytes
  8183 ;; Hardware stack levels used:    1
  8184 ;; Hardware stack levels required when called:    8
  8185 ;; This function calls:
  8186 ;;		_vfprintf
  8187 ;; This function is called by:
  8188 ;;		_asignarHorarios
  8189 ;;		_lecturaWifi
  8190 ;;		_dameDatosSistema
  8191 ;;		_mostrarDatosSensores
  8192 ;;		_mostrarDatosSensoresWIFI
  8193 ;; This function uses a non-reentrant model
  8194 ;;
  8195                           
  8196                           	psect	text39
  8197  002E1A                     __ptext39:
  8198                           	opt callstack 0
  8199  002E1A                     _sprintf:
  8200                           	opt callstack 20
  8201  002E1A  0EB7               	movlw	low (?_sprintf+4)
  8202  002E1C  0100               	movlb	0	; () banked
  8203  002E1E  6FC1               	movwf	sprintf@ap& (0+255),b
  8204  002E20  0E00               	movlw	high (?_sprintf+4)
  8205  002E22  6FC2               	movwf	(sprintf@ap+1)& (0+255),b
  8206  002E24  C0B3  F0C3         	movff	sprintf@s,sprintf@f
  8207  002E28  C0B4  F0C4         	movff	sprintf@s+1,sprintf@f+1
  8208  002E2C                     
  8209                           ; BSR set to: 0
  8210  002E2C  0E00               	movlw	0
  8211  002E2E  6FC6               	movwf	(sprintf@f+3)& (0+255),b
  8212  002E30  0E00               	movlw	0
  8213  002E32  6FC5               	movwf	(sprintf@f+2)& (0+255),b
  8214  002E34                     
  8215                           ; BSR set to: 0
  8216  002E34  0E00               	movlw	0
  8217  002E36  6FC8               	movwf	(sprintf@f+5)& (0+255),b
  8218  002E38  0E00               	movlw	0
  8219  002E3A  6FC7               	movwf	(sprintf@f+4)& (0+255),b
  8220  002E3C                     
  8221                           ; BSR set to: 0
  8222  002E3C  0EC3               	movlw	low sprintf@f
  8223  002E3E  6FAD               	movwf	vfprintf@fp& (0+255),b
  8224  002E40  0E00               	movlw	high sprintf@f
  8225  002E42  6FAE               	movwf	(vfprintf@fp+1)& (0+255),b
  8226  002E44  C0B5  F0AF         	movff	sprintf@fmt,vfprintf@fmt
  8227  002E48  C0B6  F0B0         	movff	sprintf@fmt+1,vfprintf@fmt+1
  8228  002E4C  0EC1               	movlw	low sprintf@ap
  8229  002E4E  6FB1               	movwf	vfprintf@ap& (0+255),b
  8230  002E50  0E00               	movlw	high sprintf@ap
  8231  002E52  6FB2               	movwf	(vfprintf@ap+1)& (0+255),b
  8232  002E54  ECCA  F015         	call	_vfprintf	;wreg free
  8233  002E58  0100               	movlb	0	; () banked
  8234  002E5A  51C5               	movf	(sprintf@f+2)& (0+255),w,b
  8235  002E5C  25B3               	addwf	sprintf@s& (0+255),w,b
  8236  002E5E  6ED9               	movwf	fsr2l,c
  8237  002E60  51C6               	movf	(sprintf@f+3)& (0+255),w,b
  8238  002E62  21B4               	addwfc	(sprintf@s+1)& (0+255),w,b
  8239  002E64  6EDA               	movwf	fsr2h,c
  8240  002E66  0E00               	movlw	0
  8241  002E68  6EDF               	movwf	indf2,c
  8242  002E6A                     
  8243                           ; BSR set to: 0
  8244  002E6A  0012               	return		;funcret
  8245  002E6C                     __end_of_sprintf:
  8246                           	opt callstack 0
  8247                           
  8248 ;; *************** function _vfprintf *****************
  8249 ;; Defined at:
  8250 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8251 ;; Parameters:    Size  Location     Type
  8252 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  8253 ;;		 -> sprintf@f(6), 
  8254 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  8255 ;;		 -> STR_54(45), STR_53(29), STR_52(32), STR_51(45), 
  8256 ;;		 -> STR_50(29), STR_49(32), STR_47(24), STR_46(25), 
  8257 ;;		 -> STR_45(24), STR_44(27), STR_43(24), STR_42(23), 
  8258 ;;		 -> STR_41(25), STR_40(24), STR_20(51), STR_12(9), 
  8259 ;;  ap              2    4[BANK0 ] PTR PTR void 
  8260 ;;		 -> sprintf@ap(2), 
  8261 ;; Auto vars:     Size  Location     Type
  8262 ;;  cfmt            2   90[COMRAM] PTR unsigned char 
  8263 ;;		 -> STR_54(45), STR_53(29), STR_52(32), STR_51(45), 
  8264 ;;		 -> STR_50(29), STR_49(32), STR_47(24), STR_46(25), 
  8265 ;;		 -> STR_45(24), STR_44(27), STR_43(24), STR_42(23), 
  8266 ;;		 -> STR_41(25), STR_40(24), STR_20(51), STR_12(9), 
  8267 ;; Return value:  Size  Location     Type
  8268 ;;                  2    0[BANK0 ] int 
  8269 ;; Registers used:
  8270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8271 ;; Tracked objects:
  8272 ;;		On entry : 0/0
  8273 ;;		On exit  : 0/0
  8274 ;;		Unchanged: 0/0
  8275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8276 ;;      Params:         0       6       0       0       0       0       0       0       0
  8277 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8279 ;;      Totals:         2       6       0       0       0       0       0       0       0
  8280 ;;Total ram usage:        8 bytes
  8281 ;; Hardware stack levels used:    1
  8282 ;; Hardware stack levels required when called:    7
  8283 ;; This function calls:
  8284 ;;		_vfpfcnvrt
  8285 ;; This function is called by:
  8286 ;;		_sprintf
  8287 ;; This function uses a non-reentrant model
  8288 ;;
  8289                           
  8290                           	psect	text40
  8291  002B94                     __ptext40:
  8292                           	opt callstack 0
  8293  002B94                     _vfprintf:
  8294                           	opt callstack 20
  8295  002B94                     
  8296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  8297  002B94  C0AF  F05B         	movff	vfprintf@fmt,vfprintf@cfmt
  8298  002B98  C0B0  F05C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8299  002B9C                     
  8300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  8301  002B9C  0E00               	movlw	0
  8302  002B9E  0100               	movlb	0	; () banked
  8303  002BA0  6F71               	movwf	(_nout+1)& (0+255),b
  8304  002BA2  0E00               	movlw	0
  8305  002BA4  6F70               	movwf	_nout& (0+255),b
  8306                           
  8307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8308  002BA6  EFE8  F015         	goto	l3812
  8309  002BAA                     l3810:
  8310                           
  8311                           ; BSR set to: 0
  8312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  8313  002BAA  C0AD  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  8314  002BAE  C0AE  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8315  002BB2  0E5B               	movlw	low vfprintf@cfmt
  8316  002BB4  6E42               	movwf	vfpfcnvrt@fmt^0,c
  8317  002BB6  0E00               	movlw	high vfprintf@cfmt
  8318  002BB8  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  8319  002BBA  C0B1  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  8320  002BBE  C0B2  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8321  002BC2  EC09  F000         	call	_vfpfcnvrt	;wreg free
  8322  002BC6  5040               	movf	?_vfpfcnvrt^0,w,c
  8323  002BC8  0100               	movlb	0	; () banked
  8324  002BCA  2770               	addwf	_nout& (0+255),f,b
  8325  002BCC  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  8326  002BCE  2371               	addwfc	(_nout+1)& (0+255),f,b
  8327  002BD0                     l3812:
  8328                           
  8329                           ; BSR set to: 0
  8330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8331  002BD0  C05B  FFF6         	movff	vfprintf@cfmt,tblptrl
  8332  002BD4  C05C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8333  002BD8                     	if	0	;tblptru may be non-zero
  8334  002BD8                     	endif
  8335  002BD8                     	if	0	;tblptru may be non-zero
  8336  002BD8                     	endif
  8337  002BD8  0008               	tblrd		*
  8338  002BDA  50F5               	movf	tablat,w,c
  8339  002BDC  0900               	iorlw	0
  8340  002BDE  A4D8               	btfss	status,2,c
  8341  002BE0  EFF4  F015         	goto	u2861
  8342  002BE4  EFF6  F015         	goto	u2860
  8343  002BE8                     u2861:
  8344  002BE8  EFD5  F015         	goto	l3810
  8345  002BEC                     u2860:
  8346  002BEC                     
  8347                           ; BSR set to: 0
  8348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  8349  002BEC  C070  F0AD         	movff	_nout,?_vfprintf
  8350  002BF0  C071  F0AE         	movff	_nout+1,?_vfprintf+1
  8351  002BF4                     
  8352                           ; BSR set to: 0
  8353  002BF4  0012               	return		;funcret
  8354  002BF6                     __end_of_vfprintf:
  8355                           	opt callstack 0
  8356                           
  8357 ;; *************** function _vfpfcnvrt *****************
  8358 ;; Defined at:
  8359 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8360 ;; Parameters:    Size  Location     Type
  8361 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  8362 ;;		 -> sprintf@f(6), 
  8363 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  8364 ;;		 -> vfprintf@cfmt(2), 
  8365 ;;  ap              2   67[COMRAM] PTR PTR void 
  8366 ;;		 -> sprintf@ap(2), 
  8367 ;; Auto vars:     Size  Location     Type
  8368 ;;  ll              8   73[COMRAM] long long 
  8369 ;;  llu             8    0        unsigned long long 
  8370 ;;  f               4    0        unsigned long long 
  8371 ;;  vp              3    0        PTR void 
  8372 ;;  ct              3    0        unsigned char [3]
  8373 ;;  done            2   83[COMRAM] int 
  8374 ;;  cp              2   81[COMRAM] PTR unsigned char 
  8375 ;;		 -> ?_sprintf(2), horarios(288), 
  8376 ;;  i               2    0        int 
  8377 ;;  c               1   89[COMRAM] unsigned char 
  8378 ;; Return value:  Size  Location     Type
  8379 ;;                  2   63[COMRAM] int 
  8380 ;; Registers used:
  8381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/0
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8387 ;;      Params:         6       0       0       0       0       0       0       0       0
  8388 ;;      Locals:        17       0       0       0       0       0       0       0       0
  8389 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8390 ;;      Totals:        27       0       0       0       0       0       0       0       0
  8391 ;;Total ram usage:       27 bytes
  8392 ;; Hardware stack levels used:    1
  8393 ;; Hardware stack levels required when called:    6
  8394 ;; This function calls:
  8395 ;;		_atoi
  8396 ;;		_ctoa
  8397 ;;		_dtoa
  8398 ;;		_fputc
  8399 ;;		_isdigit
  8400 ;;		_stoa
  8401 ;; This function is called by:
  8402 ;;		_vfprintf
  8403 ;; This function uses a non-reentrant model
  8404 ;;
  8405                           
  8406                           	psect	text41
  8407  000012                     __ptext41:
  8408                           	opt callstack 0
  8409  000012                     _vfpfcnvrt:
  8410                           	opt callstack 20
  8411  000012                     
  8412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  8413  000012  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8414  000016  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8415  00001A  CFDE FFF6          	movff	postinc2,tblptrl
  8416  00001E  CFDD FFF7          	movff	postdec2,tblptrh
  8417  000022                     	if	0	;tblptru may be non-zero
  8418  000022                     	endif
  8419  000022                     	if	0	;tblptru may be non-zero
  8420  000022                     	endif
  8421  000022  0008               	tblrd		*
  8422  000024  50F5               	movf	tablat,w,c
  8423  000026  0A25               	xorlw	37
  8424  000028  A4D8               	btfss	status,2,c
  8425  00002A  EF19  F000         	goto	u2561
  8426  00002E  EF1B  F000         	goto	u2560
  8427  000032                     u2561:
  8428  000032  EFAE  F002         	goto	l3706
  8429  000036                     u2560:
  8430  000036                     
  8431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  8432  000036  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8433  00003A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8434  00003E  2ADE               	incf	postinc2,f,c
  8435  000040  0E00               	movlw	0
  8436  000042  22DD               	addwfc	postdec2,f,c
  8437  000044                     
  8438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  8439  000044  0E00               	movlw	0
  8440  000046  0100               	movlb	0	; () banked
  8441  000048  6F73               	movwf	(_width+1)& (0+255),b
  8442  00004A  0E00               	movlw	0
  8443  00004C  6F72               	movwf	_width& (0+255),b
  8444  00004E  C072  F076         	movff	_width,_flags
  8445  000052  C073  F077         	movff	_width+1,_flags+1
  8446  000056                     
  8447                           ; BSR set to: 0
  8448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  8449  000056  6974               	setf	_prec& (0+255),b
  8450  000058  6975               	setf	(_prec+1)& (0+255),b
  8451  00005A                     
  8452                           ; BSR set to: 0
  8453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  8454  00005A  0E00               	movlw	0
  8455  00005C  6E55               	movwf	(vfpfcnvrt@done+1)^0,c
  8456  00005E  0E00               	movlw	0
  8457  000060  6E54               	movwf	vfpfcnvrt@done^0,c
  8458                           
  8459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  8460  000062  EF7E  F000         	goto	l3622
  8461  000066                     l3596:
  8462                           
  8463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  8464  000066  0100               	movlb	0	; () banked
  8465  000068  8176               	bsf	_flags& (0+255),0,b
  8466  00006A                     l3598:
  8467                           
  8468                           ; BSR set to: 0
  8469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  8470  00006A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8471  00006E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8472  000072  2ADE               	incf	postinc2,f,c
  8473  000074  0E00               	movlw	0
  8474  000076  22DD               	addwfc	postdec2,f,c
  8475                           
  8476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  8477  000078  EF7E  F000         	goto	l3622
  8478  00007C                     l3600:
  8479                           
  8480                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  8481  00007C  0100               	movlb	0	; () banked
  8482  00007E  8376               	bsf	_flags& (0+255),1,b
  8483  000080  EF35  F000         	goto	l3598
  8484  000084                     l3604:
  8485                           
  8486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  8487  000084  0100               	movlb	0	; () banked
  8488  000086  8576               	bsf	_flags& (0+255),2,b
  8489  000088  EF35  F000         	goto	l3598
  8490  00008C                     l3608:
  8491                           
  8492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  8493  00008C  0100               	movlb	0	; () banked
  8494  00008E  8776               	bsf	_flags& (0+255),3,b
  8495  000090  EF35  F000         	goto	l3598
  8496  000094                     l3612:
  8497                           
  8498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  8499  000094  0100               	movlb	0	; () banked
  8500  000096  8976               	bsf	_flags& (0+255),4,b
  8501  000098  EF35  F000         	goto	l3598
  8502  00009C                     l3616:
  8503                           
  8504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  8505  00009C  0E00               	movlw	0
  8506  00009E  6E55               	movwf	(vfpfcnvrt@done+1)^0,c
  8507  0000A0  0E01               	movlw	1
  8508  0000A2  6E54               	movwf	vfpfcnvrt@done^0,c
  8509                           
  8510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  8511  0000A4  EF7E  F000         	goto	l3622
  8512  0000A8                     l3620:
  8513  0000A8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8514  0000AC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8515  0000B0  CFDE FFF6          	movff	postinc2,tblptrl
  8516  0000B4  CFDD FFF7          	movff	postdec2,tblptrh
  8517  0000B8                     	if	0	;tblptru may be non-zero
  8518  0000B8                     	endif
  8519  0000B8                     	if	0	;tblptru may be non-zero
  8520  0000B8                     	endif
  8521  0000B8  0008               	tblrd		*
  8522  0000BA  50F5               	movf	tablat,w,c
  8523  0000BC  6E46               	movwf	??_vfpfcnvrt^0,c
  8524  0000BE  6A47               	clrf	(??_vfpfcnvrt+1)^0,c
  8525                           
  8526                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8527                           ; Switch size 1, requested type "simple"
  8528                           ; Number of cases is 1, Range of values is 0 to 0
  8529                           ; switch strategies available:
  8530                           ; Name         Instructions Cycles
  8531                           ; simple_byte            4     3 (average)
  8532                           ;	Chosen strategy is simple_byte
  8533  0000C0  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  8534  0000C2  0A00               	xorlw	0	; case 0
  8535  0000C4  B4D8               	btfsc	status,2,c
  8536  0000C6  EF67  F000         	goto	l5140
  8537  0000CA  EF4E  F000         	goto	l3616
  8538  0000CE                     l5140:
  8539                           
  8540                           ; Switch size 1, requested type "simple"
  8541                           ; Number of cases is 5, Range of values is 32 to 48
  8542                           ; switch strategies available:
  8543                           ; Name         Instructions Cycles
  8544                           ; simple_byte           16     9 (average)
  8545                           ;	Chosen strategy is simple_byte
  8546  0000CE  5046               	movf	??_vfpfcnvrt^0,w,c
  8547  0000D0  0A20               	xorlw	32	; case 32
  8548  0000D2  B4D8               	btfsc	status,2,c
  8549  0000D4  EF46  F000         	goto	l3608
  8550  0000D8  0A03               	xorlw	3	; case 35
  8551  0000DA  B4D8               	btfsc	status,2,c
  8552  0000DC  EF4A  F000         	goto	l3612
  8553  0000E0  0A08               	xorlw	8	; case 43
  8554  0000E2  B4D8               	btfsc	status,2,c
  8555  0000E4  EF42  F000         	goto	l3604
  8556  0000E8  0A06               	xorlw	6	; case 45
  8557  0000EA  B4D8               	btfsc	status,2,c
  8558  0000EC  EF33  F000         	goto	l3596
  8559  0000F0  0A1D               	xorlw	29	; case 48
  8560  0000F2  B4D8               	btfsc	status,2,c
  8561  0000F4  EF3E  F000         	goto	l3600
  8562  0000F8  EF4E  F000         	goto	l3616
  8563  0000FC                     l3622:
  8564                           
  8565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  8566  0000FC  5054               	movf	vfpfcnvrt@done^0,w,c
  8567  0000FE  1055               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  8568  000100  B4D8               	btfsc	status,2,c
  8569  000102  EF85  F000         	goto	u2571
  8570  000106  EF87  F000         	goto	u2570
  8571  00010A                     u2571:
  8572  00010A  EF54  F000         	goto	l3620
  8573  00010E                     u2570:
  8574  00010E                     
  8575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  8576  00010E  0100               	movlb	0	; () banked
  8577  000110  A176               	btfss	_flags& (0+255),0,b
  8578  000112  EF8D  F000         	goto	u2581
  8579  000116  EF8F  F000         	goto	u2580
  8580  00011A                     u2581:
  8581  00011A  EF90  F000         	goto	l3626
  8582  00011E                     u2580:
  8583  00011E                     
  8584                           ; BSR set to: 0
  8585                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  8586  00011E  9376               	bcf	_flags& (0+255),1,b
  8587  000120                     l3626:
  8588                           
  8589                           ; BSR set to: 0
  8590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  8591  000120  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8592  000124  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8593  000128  CFDE FFF6          	movff	postinc2,tblptrl
  8594  00012C  CFDD FFF7          	movff	postdec2,tblptrh
  8595  000130                     	if	0	;tblptru may be non-zero
  8596  000130                     	endif
  8597  000130                     	if	0	;tblptru may be non-zero
  8598  000130                     	endif
  8599  000130  0008               	tblrd		*
  8600  000132  50F5               	movf	tablat,w,c
  8601  000134  0A2A               	xorlw	42
  8602  000136  A4D8               	btfss	status,2,c
  8603  000138  EFA0  F000         	goto	u2591
  8604  00013C  EFA2  F000         	goto	u2590
  8605  000140                     u2591:
  8606  000140  EFCB  F000         	goto	l3634
  8607  000144                     u2590:
  8608  000144                     
  8609                           ; BSR set to: 0
  8610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  8611  000144  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8612  000148  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8613  00014C  2ADE               	incf	postinc2,f,c
  8614  00014E  0E00               	movlw	0
  8615  000150  22DD               	addwfc	postdec2,f,c
  8616                           
  8617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  8618  000152  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8619  000156  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8620  00015A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  8621  00015E  0E02               	movlw	2
  8622  000160  26DE               	addwf	postinc2,f,c
  8623  000162  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  8624  000166  0E00               	movlw	0
  8625  000168  22DD               	addwfc	postdec2,f,c
  8626  00016A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8627  00016E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8628  000172  CFDE F072          	movff	postinc2,_width
  8629  000176  CFDD F073          	movff	postdec2,_width+1
  8630  00017A                     
  8631                           ; BSR set to: 0
  8632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  8633  00017A  BF73               	btfsc	(_width+1)& (0+255),7,b
  8634  00017C  EFC4  F000         	goto	u2600
  8635  000180  EFC2  F000         	goto	u2601
  8636  000184                     u2601:
  8637  000184  EF0E  F001         	goto	l3644
  8638  000188                     u2600:
  8639  000188                     
  8640                           ; BSR set to: 0
  8641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  8642  000188  8176               	bsf	_flags& (0+255),0,b
  8643                           
  8644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  8645  00018A  6D72               	negf	_width& (0+255),b
  8646  00018C  1F73               	comf	(_width+1)& (0+255),f,b
  8647  00018E  B0D8               	btfsc	status,0,c
  8648  000190  2B73               	incf	(_width+1)& (0+255),f,b
  8649  000192  EF0E  F001         	goto	l3644
  8650  000196                     l3634:
  8651                           
  8652                           ; BSR set to: 0
  8653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  8654  000196  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8655  00019A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8656  00019E  CFDE F008          	movff	postinc2,atoi@s
  8657  0001A2  CFDD F009          	movff	postdec2,atoi@s+1
  8658  0001A6  ECD7  F008         	call	_atoi	;wreg free
  8659  0001AA  C008  F072         	movff	?_atoi,_width
  8660  0001AE  C009  F073         	movff	?_atoi+1,_width+1
  8661                           
  8662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8663  0001B2  EFE2  F000         	goto	l3638
  8664  0001B6                     l3636:
  8665                           
  8666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  8667  0001B6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8668  0001BA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8669  0001BE  2ADE               	incf	postinc2,f,c
  8670  0001C0  0E00               	movlw	0
  8671  0001C2  22DD               	addwfc	postdec2,f,c
  8672  0001C4                     l3638:
  8673  0001C4  0ED0               	movlw	208
  8674  0001C6  6E46               	movwf	??_vfpfcnvrt^0,c
  8675  0001C8  0EFF               	movlw	255
  8676  0001CA  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  8677  0001CC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8678  0001D0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8679  0001D4  CFDE FFF6          	movff	postinc2,tblptrl
  8680  0001D8  CFDD FFF7          	movff	postdec2,tblptrh
  8681  0001DC                     	if	0	;tblptru may be non-zero
  8682  0001DC                     	endif
  8683  0001DC                     	if	0	;tblptru may be non-zero
  8684  0001DC                     	endif
  8685  0001DC  0008               	tblrd		*
  8686  0001DE  50F5               	movf	tablat,w,c
  8687  0001E0  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  8688  0001E2  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  8689  0001E4  5046               	movf	??_vfpfcnvrt^0,w,c
  8690  0001E6  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  8691  0001E8  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  8692  0001EA  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  8693  0001EC  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  8694  0001EE  E10A               	bnz	u2610
  8695  0001F0  0E0A               	movlw	10
  8696  0001F2  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  8697  0001F4  A0D8               	btfss	status,0,c
  8698  0001F6  EFFF  F000         	goto	u2611
  8699  0001FA  EF02  F001         	goto	u2610
  8700  0001FE                     u2611:
  8701  0001FE  0E01               	movlw	1
  8702  000200  EF03  F001         	goto	u2620
  8703  000204                     u2610:
  8704  000204  0E00               	movlw	0
  8705  000206                     u2620:
  8706  000206  6E56               	movwf	_vfpfcnvrt$1111^0,c
  8707  000208  6A57               	clrf	(_vfpfcnvrt$1111+1)^0,c
  8708  00020A  5056               	movf	_vfpfcnvrt$1111^0,w,c
  8709  00020C  1057               	iorwf	(_vfpfcnvrt$1111+1)^0,w,c
  8710  00020E  A4D8               	btfss	status,2,c
  8711  000210  EF0C  F001         	goto	u2631
  8712  000214  EF0E  F001         	goto	u2630
  8713  000218                     u2631:
  8714  000218  EFDB  F000         	goto	l3636
  8715  00021C                     u2630:
  8716  00021C                     l3644:
  8717                           
  8718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  8719  00021C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8720  000220  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8721  000224  CFDE FFF6          	movff	postinc2,tblptrl
  8722  000228  CFDD FFF7          	movff	postdec2,tblptrh
  8723  00022C                     	if	0	;tblptru may be non-zero
  8724  00022C                     	endif
  8725  00022C                     	if	0	;tblptru may be non-zero
  8726  00022C                     	endif
  8727  00022C  0008               	tblrd		*
  8728  00022E  50F5               	movf	tablat,w,c
  8729  000230  0A2E               	xorlw	46
  8730  000232  A4D8               	btfss	status,2,c
  8731  000234  EF1E  F001         	goto	u2641
  8732  000238  EF20  F001         	goto	u2640
  8733  00023C                     u2641:
  8734  00023C  EF9E  F001         	goto	l3664
  8735  000240                     u2640:
  8736  000240                     
  8737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  8738  000240  0E00               	movlw	0
  8739  000242  0100               	movlb	0	; () banked
  8740  000244  6F75               	movwf	(_prec+1)& (0+255),b
  8741  000246  0E00               	movlw	0
  8742  000248  6F74               	movwf	_prec& (0+255),b
  8743  00024A                     
  8744                           ; BSR set to: 0
  8745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  8746  00024A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8747  00024E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8748  000252  2ADE               	incf	postinc2,f,c
  8749  000254  0E00               	movlw	0
  8750  000256  22DD               	addwfc	postdec2,f,c
  8751  000258                     
  8752                           ; BSR set to: 0
  8753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  8754  000258  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8755  00025C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8756  000260  CFDE FFF6          	movff	postinc2,tblptrl
  8757  000264  CFDD FFF7          	movff	postdec2,tblptrh
  8758  000268                     	if	0	;tblptru may be non-zero
  8759  000268                     	endif
  8760  000268                     	if	0	;tblptru may be non-zero
  8761  000268                     	endif
  8762  000268  0008               	tblrd		*
  8763  00026A  50F5               	movf	tablat,w,c
  8764  00026C  0A2A               	xorlw	42
  8765  00026E  A4D8               	btfss	status,2,c
  8766  000270  EF3C  F001         	goto	u2651
  8767  000274  EF3E  F001         	goto	u2650
  8768  000278                     u2651:
  8769  000278  EF5B  F001         	goto	l3654
  8770  00027C                     u2650:
  8771  00027C                     
  8772                           ; BSR set to: 0
  8773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  8774  00027C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8775  000280  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8776  000284  2ADE               	incf	postinc2,f,c
  8777  000286  0E00               	movlw	0
  8778  000288  22DD               	addwfc	postdec2,f,c
  8779                           
  8780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  8781  00028A  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8782  00028E  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8783  000292  CFDF F046          	movff	indf2,??_vfpfcnvrt
  8784  000296  0E02               	movlw	2
  8785  000298  26DE               	addwf	postinc2,f,c
  8786  00029A  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  8787  00029E  0E00               	movlw	0
  8788  0002A0  22DD               	addwfc	postdec2,f,c
  8789  0002A2  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8790  0002A6  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8791  0002AA  CFDE F074          	movff	postinc2,_prec
  8792  0002AE  CFDD F075          	movff	postdec2,_prec+1
  8793                           
  8794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  8795  0002B2  EF9E  F001         	goto	l3664
  8796  0002B6                     l3654:
  8797                           
  8798                           ; BSR set to: 0
  8799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  8800  0002B6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8801  0002BA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8802  0002BE  CFDE F008          	movff	postinc2,atoi@s
  8803  0002C2  CFDD F009          	movff	postdec2,atoi@s+1
  8804  0002C6  ECD7  F008         	call	_atoi	;wreg free
  8805  0002CA  C008  F074         	movff	?_atoi,_prec
  8806  0002CE  C009  F075         	movff	?_atoi+1,_prec+1
  8807                           
  8808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8809  0002D2  EF72  F001         	goto	l3658
  8810  0002D6                     l3656:
  8811                           
  8812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  8813  0002D6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8814  0002DA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8815  0002DE  2ADE               	incf	postinc2,f,c
  8816  0002E0  0E00               	movlw	0
  8817  0002E2  22DD               	addwfc	postdec2,f,c
  8818  0002E4                     l3658:
  8819  0002E4  0ED0               	movlw	208
  8820  0002E6  6E46               	movwf	??_vfpfcnvrt^0,c
  8821  0002E8  0EFF               	movlw	255
  8822  0002EA  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  8823  0002EC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8824  0002F0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8825  0002F4  CFDE FFF6          	movff	postinc2,tblptrl
  8826  0002F8  CFDD FFF7          	movff	postdec2,tblptrh
  8827  0002FC                     	if	0	;tblptru may be non-zero
  8828  0002FC                     	endif
  8829  0002FC                     	if	0	;tblptru may be non-zero
  8830  0002FC                     	endif
  8831  0002FC  0008               	tblrd		*
  8832  0002FE  50F5               	movf	tablat,w,c
  8833  000300  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  8834  000302  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  8835  000304  5046               	movf	??_vfpfcnvrt^0,w,c
  8836  000306  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  8837  000308  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  8838  00030A  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  8839  00030C  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  8840  00030E  E10A               	bnz	u2660
  8841  000310  0E0A               	movlw	10
  8842  000312  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  8843  000314  A0D8               	btfss	status,0,c
  8844  000316  EF8F  F001         	goto	u2661
  8845  00031A  EF92  F001         	goto	u2660
  8846  00031E                     u2661:
  8847  00031E  0E01               	movlw	1
  8848  000320  EF93  F001         	goto	u2670
  8849  000324                     u2660:
  8850  000324  0E00               	movlw	0
  8851  000326                     u2670:
  8852  000326  6E58               	movwf	_vfpfcnvrt$1112^0,c
  8853  000328  6A59               	clrf	(_vfpfcnvrt$1112+1)^0,c
  8854  00032A  5058               	movf	_vfpfcnvrt$1112^0,w,c
  8855  00032C  1059               	iorwf	(_vfpfcnvrt$1112+1)^0,w,c
  8856  00032E  A4D8               	btfss	status,2,c
  8857  000330  EF9C  F001         	goto	u2681
  8858  000334  EF9E  F001         	goto	u2680
  8859  000338                     u2681:
  8860  000338  EF6B  F001         	goto	l3656
  8861  00033C                     u2680:
  8862  00033C                     l3664:
  8863                           
  8864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  8865  00033C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8866  000340  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8867  000344  CFDE FFF6          	movff	postinc2,tblptrl
  8868  000348  CFDD FFF7          	movff	postdec2,tblptrh
  8869  00034C                     	if	0	;tblptru may be non-zero
  8870  00034C                     	endif
  8871  00034C                     	if	0	;tblptru may be non-zero
  8872  00034C                     	endif
  8873  00034C  0008               	tblrd		*
  8874  00034E  50F5               	movf	tablat,w,c
  8875  000350  0A63               	xorlw	99
  8876  000352  A4D8               	btfss	status,2,c
  8877  000354  EFAE  F001         	goto	u2691
  8878  000358  EFB0  F001         	goto	u2690
  8879  00035C                     u2691:
  8880  00035C  EFD7  F001         	goto	l3672
  8881  000360                     u2690:
  8882  000360                     
  8883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  8884  000360  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8885  000364  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8886  000368  2ADE               	incf	postinc2,f,c
  8887  00036A  0E00               	movlw	0
  8888  00036C  22DD               	addwfc	postdec2,f,c
  8889                           
  8890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8891  00036E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8892  000372  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8893  000376  CFDF F046          	movff	indf2,??_vfpfcnvrt
  8894  00037A  0E02               	movlw	2
  8895  00037C  26DE               	addwf	postinc2,f,c
  8896  00037E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  8897  000382  0E00               	movlw	0
  8898  000384  22DD               	addwfc	postdec2,f,c
  8899  000386  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8900  00038A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8901  00038E  50DF               	movf	indf2,w,c
  8902  000390  6E5A               	movwf	vfpfcnvrt@c^0,c
  8903  000392                     
  8904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  8905  000392  C040  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  8906  000396  C041  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  8907  00039A  C05A  F01E         	movff	vfpfcnvrt@c,ctoa@c
  8908  00039E  ECB6  F016         	call	_ctoa	;wreg free
  8909  0003A2  C01C  F040         	movff	?_ctoa,?_vfpfcnvrt
  8910  0003A6  C01D  F041         	movff	?_ctoa+1,?_vfpfcnvrt+1
  8911  0003AA  EFC9  F002         	goto	l623
  8912  0003AE                     l3672:
  8913                           
  8914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8915  0003AE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8916  0003B2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8917  0003B6  CFDE FFF6          	movff	postinc2,tblptrl
  8918  0003BA  CFDD FFF7          	movff	postdec2,tblptrh
  8919  0003BE                     	if	0	;tblptru may be non-zero
  8920  0003BE                     	endif
  8921  0003BE                     	if	0	;tblptru may be non-zero
  8922  0003BE                     	endif
  8923  0003BE  0008               	tblrd		*
  8924  0003C0  50F5               	movf	tablat,w,c
  8925  0003C2  0A64               	xorlw	100
  8926  0003C4  B4D8               	btfsc	status,2,c
  8927  0003C6  EFE7  F001         	goto	u2701
  8928  0003CA  EFE9  F001         	goto	u2700
  8929  0003CE                     u2701:
  8930  0003CE  EFFB  F001         	goto	l3676
  8931  0003D2                     u2700:
  8932  0003D2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8933  0003D6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8934  0003DA  CFDE FFF6          	movff	postinc2,tblptrl
  8935  0003DE  CFDD FFF7          	movff	postdec2,tblptrh
  8936  0003E2                     	if	0	;tblptru may be non-zero
  8937  0003E2                     	endif
  8938  0003E2                     	if	0	;tblptru may be non-zero
  8939  0003E2                     	endif
  8940  0003E2  0008               	tblrd		*
  8941  0003E4  50F5               	movf	tablat,w,c
  8942  0003E6  0A69               	xorlw	105
  8943  0003E8  A4D8               	btfss	status,2,c
  8944  0003EA  EFF9  F001         	goto	u2711
  8945  0003EE  EFFB  F001         	goto	u2710
  8946  0003F2                     u2711:
  8947  0003F2  EF3B  F002         	goto	l3682
  8948  0003F6                     u2710:
  8949  0003F6                     l3676:
  8950                           
  8951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  8952  0003F6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8953  0003FA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8954  0003FE  2ADE               	incf	postinc2,f,c
  8955  000400  0E00               	movlw	0
  8956  000402  22DD               	addwfc	postdec2,f,c
  8957                           
  8958                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8959  000404  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8960  000408  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8961  00040C  CFDF F046          	movff	indf2,??_vfpfcnvrt
  8962  000410  0E02               	movlw	2
  8963  000412  26DE               	addwf	postinc2,f,c
  8964  000414  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  8965  000418  0E00               	movlw	0
  8966  00041A  22DD               	addwfc	postdec2,f,c
  8967  00041C  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8968  000420  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8969  000424  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  8970  000428  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  8971  00042C  0E00               	movlw	0
  8972  00042E  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  8973  000430  0EFF               	movlw	-1
  8974  000432  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  8975  000434  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  8976  000436  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  8977  000438  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  8978  00043A  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  8979  00043C  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  8980  00043E                     
  8981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  8982  00043E  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  8983  000442  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8984  000446  C04A  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  8985  00044A  C04B  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  8986  00044E  C04C  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  8987  000452  C04D  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  8988  000456  C04E  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  8989  00045A  C04F  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  8990  00045E  C050  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  8991  000462  C051  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  8992  000466  EC42  F004         	call	_dtoa	;wreg free
  8993  00046A  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  8994  00046E  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  8995  000472  EFC9  F002         	goto	l623
  8996  000476                     l3682:
  8997                           
  8998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  8999  000476  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9000  00047A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9001  00047E  CFDE FFF6          	movff	postinc2,tblptrl
  9002  000482  CFDD FFF7          	movff	postdec2,tblptrh
  9003  000486                     	if	0	;tblptru may be non-zero
  9004  000486                     	endif
  9005  000486                     	if	0	;tblptru may be non-zero
  9006  000486                     	endif
  9007  000486  0008               	tblrd		*
  9008  000488  50F5               	movf	tablat,w,c
  9009  00048A  0A73               	xorlw	115
  9010  00048C  A4D8               	btfss	status,2,c
  9011  00048E  EF4B  F002         	goto	u2721
  9012  000492  EF4D  F002         	goto	u2720
  9013  000496                     u2721:
  9014  000496  EF78  F002         	goto	l3690
  9015  00049A                     u2720:
  9016  00049A                     
  9017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  9018  00049A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9019  00049E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9020  0004A2  2ADE               	incf	postinc2,f,c
  9021  0004A4  0E00               	movlw	0
  9022  0004A6  22DD               	addwfc	postdec2,f,c
  9023                           
  9024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  9025  0004A8  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9026  0004AC  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9027  0004B0  CFDF F046          	movff	indf2,??_vfpfcnvrt
  9028  0004B4  0E02               	movlw	2
  9029  0004B6  26DE               	addwf	postinc2,f,c
  9030  0004B8  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  9031  0004BC  0E00               	movlw	0
  9032  0004BE  22DD               	addwfc	postdec2,f,c
  9033  0004C0  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9034  0004C4  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9035  0004C8  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  9036  0004CC  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  9037  0004D0                     
  9038                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  9039  0004D0  C040  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  9040  0004D4  C041  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  9041  0004D8  C052  F00C         	movff	vfpfcnvrt@cp,stoa@s
  9042  0004DC  C053  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  9043  0004E0  EC63  F00A         	call	_stoa	;wreg free
  9044  0004E4  C00A  F040         	movff	?_stoa,?_vfpfcnvrt
  9045  0004E8  C00B  F041         	movff	?_stoa+1,?_vfpfcnvrt+1
  9046  0004EC  EFC9  F002         	goto	l623
  9047  0004F0                     l3690:
  9048                           
  9049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  9050  0004F0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9051  0004F4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9052  0004F8  CFDE FFF6          	movff	postinc2,tblptrl
  9053  0004FC  CFDD FFF7          	movff	postdec2,tblptrh
  9054  000500                     	if	0	;tblptru may be non-zero
  9055  000500                     	endif
  9056  000500                     	if	0	;tblptru may be non-zero
  9057  000500                     	endif
  9058  000500  0008               	tblrd		*
  9059  000502  50F5               	movf	tablat,w,c
  9060  000504  0A25               	xorlw	37
  9061  000506  A4D8               	btfss	status,2,c
  9062  000508  EF88  F002         	goto	u2731
  9063  00050C  EF8A  F002         	goto	u2730
  9064  000510                     u2731:
  9065  000510  EFA1  F002         	goto	l3700
  9066  000514                     u2730:
  9067  000514                     
  9068                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  9069  000514  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9070  000518  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9071  00051C  2ADE               	incf	postinc2,f,c
  9072  00051E  0E00               	movlw	0
  9073  000520  22DD               	addwfc	postdec2,f,c
  9074  000522                     
  9075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  9076  000522  0E00               	movlw	0
  9077  000524  6E02               	movwf	(fputc@c+1)^0,c
  9078  000526  0E25               	movlw	37
  9079  000528  6E01               	movwf	fputc@c^0,c
  9080  00052A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  9081  00052E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9082  000532  EC74  F011         	call	_fputc	;wreg free
  9083  000536                     l3696:
  9084                           
  9085                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  9086  000536  0E00               	movlw	0
  9087  000538  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  9088  00053A  0E01               	movlw	1
  9089  00053C  6E40               	movwf	?_vfpfcnvrt^0,c
  9090  00053E  EFC9  F002         	goto	l623
  9091  000542                     l3700:
  9092                           
  9093                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  9094  000542  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9095  000546  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9096  00054A  2ADE               	incf	postinc2,f,c
  9097  00054C  0E00               	movlw	0
  9098  00054E  22DD               	addwfc	postdec2,f,c
  9099  000550                     
  9100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  9101  000550  0E00               	movlw	0
  9102  000552  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  9103  000554  0E00               	movlw	0
  9104  000556  6E40               	movwf	?_vfpfcnvrt^0,c
  9105  000558  EFC9  F002         	goto	l623
  9106  00055C                     l3706:
  9107                           
  9108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  9109  00055C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9110  000560  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9111  000564  CFDE FFF6          	movff	postinc2,tblptrl
  9112  000568  CFDD FFF7          	movff	postdec2,tblptrh
  9113  00056C                     	if	0	;tblptru may be non-zero
  9114  00056C                     	endif
  9115  00056C                     	if	0	;tblptru may be non-zero
  9116  00056C                     	endif
  9117  00056C  0008               	tblrd		*
  9118  00056E  50F5               	movf	tablat,w,c
  9119  000570  6E01               	movwf	fputc@c^0,c
  9120  000572  6A02               	clrf	(fputc@c+1)^0,c
  9121  000574  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  9122  000578  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9123  00057C  EC74  F011         	call	_fputc	;wreg free
  9124  000580                     
  9125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  9126  000580  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9127  000584  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9128  000588  2ADE               	incf	postinc2,f,c
  9129  00058A  0E00               	movlw	0
  9130  00058C  22DD               	addwfc	postdec2,f,c
  9131  00058E  EF9B  F002         	goto	l3696
  9132  000592                     l623:
  9133  000592  0012               	return		;funcret
  9134  000594                     __end_of_vfpfcnvrt:
  9135                           	opt callstack 0
  9136                           
  9137 ;; *************** function _stoa *****************
  9138 ;; Defined at:
  9139 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9140 ;; Parameters:    Size  Location     Type
  9141 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  9142 ;;		 -> sprintf@f(6), 
  9143 ;;  s               2   11[COMRAM] PTR unsigned char 
  9144 ;;		 -> ?_sprintf(2), horarios(288), 
  9145 ;; Auto vars:     Size  Location     Type
  9146 ;;  nuls            7   14[COMRAM] unsigned char [7]
  9147 ;;  l               2   29[COMRAM] int 
  9148 ;;  p               2   27[COMRAM] int 
  9149 ;;  cp              2   25[COMRAM] PTR unsigned char 
  9150 ;;		 -> ?_sprintf(2), stoa@nuls(7), horarios(288), 
  9151 ;;  w               2   23[COMRAM] int 
  9152 ;;  i               2   21[COMRAM] int 
  9153 ;; Return value:  Size  Location     Type
  9154 ;;                  2    9[COMRAM] int 
  9155 ;; Registers used:
  9156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9157 ;; Tracked objects:
  9158 ;;		On entry : 0/0
  9159 ;;		On exit  : 0/0
  9160 ;;		Unchanged: 0/0
  9161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9162 ;;      Params:         4       0       0       0       0       0       0       0       0
  9163 ;;      Locals:        17       0       0       0       0       0       0       0       0
  9164 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9165 ;;      Totals:        22       0       0       0       0       0       0       0       0
  9166 ;;Total ram usage:       22 bytes
  9167 ;; Hardware stack levels used:    1
  9168 ;; Hardware stack levels required when called:    3
  9169 ;; This function calls:
  9170 ;;		_fputc
  9171 ;;		_strlen
  9172 ;; This function is called by:
  9173 ;;		_vfpfcnvrt
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           	psect	text42
  9178  0014C6                     __ptext42:
  9179                           	opt callstack 0
  9180  0014C6                     _stoa:
  9181                           	opt callstack 22
  9182  0014C6                     
  9183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9184  0014C6  EE20  F0F4         	lfsr	2,stoa@F1144
  9185  0014CA  EE10  F00F         	lfsr	1,stoa@nuls
  9186  0014CE  0E06               	movlw	6
  9187  0014D0                     u2371:
  9188  0014D0  CFDB FFE3          	movff	plusw2,plusw1
  9189  0014D4  06E8               	decf	wreg,f,c
  9190  0014D6  E2FC               	bc	u2371
  9191  0014D8                     
  9192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  9193  0014D8  C00C  F01A         	movff	stoa@s,stoa@cp
  9194  0014DC  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  9195  0014E0                     
  9196                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  9197  0014E0  501A               	movf	stoa@cp^0,w,c
  9198  0014E2  101B               	iorwf	(stoa@cp+1)^0,w,c
  9199  0014E4  A4D8               	btfss	status,2,c
  9200  0014E6  EF77  F00A         	goto	u2381
  9201  0014EA  EF79  F00A         	goto	u2380
  9202  0014EE                     u2381:
  9203  0014EE  EF7D  F00A         	goto	l3502
  9204  0014F2                     u2380:
  9205  0014F2                     
  9206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  9207  0014F2  0E0F               	movlw	low stoa@nuls
  9208  0014F4  6E1A               	movwf	stoa@cp^0,c
  9209  0014F6  0E00               	movlw	high stoa@nuls
  9210  0014F8  6E1B               	movwf	(stoa@cp+1)^0,c
  9211  0014FA                     l3502:
  9212                           
  9213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  9214  0014FA  C01A  F001         	movff	stoa@cp,strlen@s
  9215  0014FE  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  9216  001502  EC80  F018         	call	_strlen	;wreg free
  9217  001506  C001  F01E         	movff	?_strlen,stoa@l
  9218  00150A  C002  F01F         	movff	?_strlen+1,stoa@l+1
  9219  00150E                     
  9220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  9221  00150E  C074  F01C         	movff	_prec,stoa@p
  9222  001512  C075  F01D         	movff	_prec+1,stoa@p+1
  9223  001516                     
  9224                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  9225  001516  BE1D               	btfsc	(stoa@p+1)^0,7,c
  9226  001518  EF90  F00A         	goto	u2391
  9227  00151C  EF92  F00A         	goto	u2390
  9228  001520                     u2391:
  9229  001520  EFA7  F00A         	goto	l572
  9230  001524                     u2390:
  9231  001524  501E               	movf	stoa@l^0,w,c
  9232  001526  5C1C               	subwf	stoa@p^0,w,c
  9233  001528  501D               	movf	(stoa@p+1)^0,w,c
  9234  00152A  0A80               	xorlw	128
  9235  00152C  6E0E               	movwf	??_stoa^0,c
  9236  00152E  501F               	movf	(stoa@l+1)^0,w,c
  9237  001530  0A80               	xorlw	128
  9238  001532  580E               	subwfb	??_stoa^0,w,c
  9239  001534  A0D8               	btfss	status,0,c
  9240  001536  EF9F  F00A         	goto	u2401
  9241  00153A  EFA1  F00A         	goto	u2400
  9242  00153E                     u2401:
  9243  00153E  EFA3  F00A         	goto	l570
  9244  001542                     u2400:
  9245  001542  EFA7  F00A         	goto	l572
  9246  001546                     l570:
  9247  001546  C01C  F01E         	movff	stoa@p,stoa@l
  9248  00154A  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  9249  00154E                     l572:
  9250                           
  9251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  9252  00154E  C01E  F01C         	movff	stoa@l,stoa@p
  9253  001552  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  9254                           
  9255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  9256  001556  C072  F018         	movff	_width,stoa@w
  9257  00155A  C073  F019         	movff	_width+1,stoa@w+1
  9258                           
  9259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  9260  00155E  0100               	movlb	0	; () banked
  9261  001560  B176               	btfsc	_flags& (0+255),0,b
  9262  001562  EFB5  F00A         	goto	u2411
  9263  001566  EFB7  F00A         	goto	u2410
  9264  00156A                     u2411:
  9265  00156A  EFD4  F00A         	goto	l3518
  9266  00156E                     u2410:
  9267  00156E  EFC5  F00A         	goto	l3516
  9268  001572                     l3512:
  9269                           
  9270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  9271  001572  0E00               	movlw	0
  9272  001574  6E02               	movwf	(fputc@c+1)^0,c
  9273  001576  0E20               	movlw	32
  9274  001578  6E01               	movwf	fputc@c^0,c
  9275  00157A  C00A  F003         	movff	stoa@fp,fputc@fp
  9276  00157E  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  9277  001582  EC74  F011         	call	_fputc	;wreg free
  9278  001586                     
  9279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  9280  001586  4A1E               	infsnz	stoa@l^0,f,c
  9281  001588  2A1F               	incf	(stoa@l+1)^0,f,c
  9282  00158A                     l3516:
  9283                           
  9284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  9285  00158A  5018               	movf	stoa@w^0,w,c
  9286  00158C  5C1E               	subwf	stoa@l^0,w,c
  9287  00158E  501F               	movf	(stoa@l+1)^0,w,c
  9288  001590  0A80               	xorlw	128
  9289  001592  6E0E               	movwf	??_stoa^0,c
  9290  001594  5019               	movf	(stoa@w+1)^0,w,c
  9291  001596  0A80               	xorlw	128
  9292  001598  580E               	subwfb	??_stoa^0,w,c
  9293  00159A  A0D8               	btfss	status,0,c
  9294  00159C  EFD2  F00A         	goto	u2421
  9295  0015A0  EFD4  F00A         	goto	u2420
  9296  0015A4                     u2421:
  9297  0015A4  EFB9  F00A         	goto	l3512
  9298  0015A8                     u2420:
  9299  0015A8                     l3518:
  9300                           
  9301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  9302  0015A8  0E00               	movlw	0
  9303  0015AA  6E17               	movwf	(stoa@i+1)^0,c
  9304  0015AC  0E00               	movlw	0
  9305  0015AE  6E16               	movwf	stoa@i^0,c
  9306                           
  9307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  9308  0015B0  EFED  F00A         	goto	l3526
  9309  0015B4                     l3520:
  9310                           
  9311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  9312  0015B4  C01A  FFD9         	movff	stoa@cp,fsr2l
  9313  0015B8  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  9314  0015BC  50DF               	movf	indf2,w,c
  9315  0015BE  6E0E               	movwf	??_stoa^0,c
  9316  0015C0  500E               	movf	??_stoa^0,w,c
  9317  0015C2  6E01               	movwf	fputc@c^0,c
  9318  0015C4  6A02               	clrf	(fputc@c+1)^0,c
  9319  0015C6  C00A  F003         	movff	stoa@fp,fputc@fp
  9320  0015CA  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  9321  0015CE  EC74  F011         	call	_fputc	;wreg free
  9322  0015D2                     
  9323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  9324  0015D2  4A1A               	infsnz	stoa@cp^0,f,c
  9325  0015D4  2A1B               	incf	(stoa@cp+1)^0,f,c
  9326  0015D6                     
  9327                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  9328  0015D6  4A16               	infsnz	stoa@i^0,f,c
  9329  0015D8  2A17               	incf	(stoa@i+1)^0,f,c
  9330  0015DA                     l3526:
  9331                           
  9332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  9333  0015DA  501C               	movf	stoa@p^0,w,c
  9334  0015DC  5C16               	subwf	stoa@i^0,w,c
  9335  0015DE  5017               	movf	(stoa@i+1)^0,w,c
  9336  0015E0  0A80               	xorlw	128
  9337  0015E2  6E0E               	movwf	??_stoa^0,c
  9338  0015E4  501D               	movf	(stoa@p+1)^0,w,c
  9339  0015E6  0A80               	xorlw	128
  9340  0015E8  580E               	subwfb	??_stoa^0,w,c
  9341  0015EA  A0D8               	btfss	status,0,c
  9342  0015EC  EFFA  F00A         	goto	u2431
  9343  0015F0  EFFC  F00A         	goto	u2430
  9344  0015F4                     u2431:
  9345  0015F4  EFDA  F00A         	goto	l3520
  9346  0015F8                     u2430:
  9347  0015F8                     
  9348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  9349  0015F8  0100               	movlb	0	; () banked
  9350  0015FA  A176               	btfss	_flags& (0+255),0,b
  9351  0015FC  EF02  F00B         	goto	u2441
  9352  001600  EF04  F00B         	goto	u2440
  9353  001604                     u2441:
  9354  001604  EF21  F00B         	goto	l582
  9355  001608                     u2440:
  9356  001608  EF12  F00B         	goto	l3534
  9357  00160C                     l3530:
  9358                           
  9359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  9360  00160C  0E00               	movlw	0
  9361  00160E  6E02               	movwf	(fputc@c+1)^0,c
  9362  001610  0E20               	movlw	32
  9363  001612  6E01               	movwf	fputc@c^0,c
  9364  001614  C00A  F003         	movff	stoa@fp,fputc@fp
  9365  001618  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  9366  00161C  EC74  F011         	call	_fputc	;wreg free
  9367  001620                     
  9368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  9369  001620  4A1E               	infsnz	stoa@l^0,f,c
  9370  001622  2A1F               	incf	(stoa@l+1)^0,f,c
  9371  001624                     l3534:
  9372                           
  9373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  9374  001624  5018               	movf	stoa@w^0,w,c
  9375  001626  5C1E               	subwf	stoa@l^0,w,c
  9376  001628  501F               	movf	(stoa@l+1)^0,w,c
  9377  00162A  0A80               	xorlw	128
  9378  00162C  6E0E               	movwf	??_stoa^0,c
  9379  00162E  5019               	movf	(stoa@w+1)^0,w,c
  9380  001630  0A80               	xorlw	128
  9381  001632  580E               	subwfb	??_stoa^0,w,c
  9382  001634  A0D8               	btfss	status,0,c
  9383  001636  EF1F  F00B         	goto	u2451
  9384  00163A  EF21  F00B         	goto	u2450
  9385  00163E                     u2451:
  9386  00163E  EF06  F00B         	goto	l3530
  9387  001642                     u2450:
  9388  001642                     l582:
  9389                           
  9390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  9391  001642  C01E  F00A         	movff	stoa@l,?_stoa
  9392  001646  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  9393  00164A  0012               	return		;funcret
  9394  00164C                     __end_of_stoa:
  9395                           	opt callstack 0
  9396                           
  9397 ;; *************** function _dtoa *****************
  9398 ;; Defined at:
  9399 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9400 ;; Parameters:    Size  Location     Type
  9401 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9402 ;;		 -> sprintf@f(6), 
  9403 ;;  d               8   29[COMRAM] long long 
  9404 ;; Auto vars:     Size  Location     Type
  9405 ;;  n               8   53[COMRAM] long long 
  9406 ;;  i               2   61[COMRAM] int 
  9407 ;;  s               2   51[COMRAM] int 
  9408 ;;  w               2   49[COMRAM] int 
  9409 ;;  p               2   47[COMRAM] int 
  9410 ;; Return value:  Size  Location     Type
  9411 ;;                  2   27[COMRAM] int 
  9412 ;; Registers used:
  9413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9414 ;; Tracked objects:
  9415 ;;		On entry : 0/0
  9416 ;;		On exit  : 0/0
  9417 ;;		Unchanged: 0/0
  9418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9419 ;;      Params:        10       0       0       0       0       0       0       0       0
  9420 ;;      Locals:        18       0       0       0       0       0       0       0       0
  9421 ;;      Temps:          8       0       0       0       0       0       0       0       0
  9422 ;;      Totals:        36       0       0       0       0       0       0       0       0
  9423 ;;Total ram usage:       36 bytes
  9424 ;; Hardware stack levels used:    1
  9425 ;; Hardware stack levels required when called:    5
  9426 ;; This function calls:
  9427 ;;		___aodiv
  9428 ;;		___aomod
  9429 ;;		_abs
  9430 ;;		_pad
  9431 ;; This function is called by:
  9432 ;;		_vfpfcnvrt
  9433 ;; This function uses a non-reentrant model
  9434 ;;
  9435                           
  9436                           	psect	text43
  9437  000884                     __ptext43:
  9438                           	opt callstack 0
  9439  000884                     _dtoa:
  9440                           	opt callstack 20
  9441  000884                     
  9442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  9443  000884  C01E  F036         	movff	dtoa@d,dtoa@n
  9444  000888  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  9445  00088C  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  9446  000890  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  9447  000894  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  9448  000898  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  9449  00089C  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  9450  0008A0  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  9451  0008A4                     
  9452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  9453  0008A4  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  9454  0008A6  EF57  F004         	goto	u2221
  9455  0008AA  EF5A  F004         	goto	u2220
  9456  0008AE                     u2221:
  9457  0008AE  0E01               	movlw	1
  9458  0008B0  EF5B  F004         	goto	u2230
  9459  0008B4                     u2220:
  9460  0008B4  0E00               	movlw	0
  9461  0008B6                     u2230:
  9462  0008B6  6E34               	movwf	dtoa@s^0,c
  9463  0008B8  6A35               	clrf	(dtoa@s+1)^0,c
  9464                           
  9465                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  9466  0008BA  5034               	movf	dtoa@s^0,w,c
  9467  0008BC  1035               	iorwf	(dtoa@s+1)^0,w,c
  9468  0008BE  B4D8               	btfsc	status,2,c
  9469  0008C0  EF64  F004         	goto	u2241
  9470  0008C4  EF66  F004         	goto	u2240
  9471  0008C8                     u2241:
  9472  0008C8  EF76  F004         	goto	l3438
  9473  0008CC                     u2240:
  9474  0008CC                     
  9475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  9476  0008CC  1E3D               	comf	(dtoa@n+7)^0,f,c
  9477  0008CE  1E3C               	comf	(dtoa@n+6)^0,f,c
  9478  0008D0  1E3B               	comf	(dtoa@n+5)^0,f,c
  9479  0008D2  1E3A               	comf	(dtoa@n+4)^0,f,c
  9480  0008D4  1E39               	comf	(dtoa@n+3)^0,f,c
  9481  0008D6  1E38               	comf	(dtoa@n+2)^0,f,c
  9482  0008D8  1E37               	comf	(dtoa@n+1)^0,f,c
  9483  0008DA  6C36               	negf	dtoa@n^0,c
  9484  0008DC  0E00               	movlw	0
  9485  0008DE  2237               	addwfc	(dtoa@n+1)^0,f,c
  9486  0008E0  2238               	addwfc	(dtoa@n+2)^0,f,c
  9487  0008E2  2239               	addwfc	(dtoa@n+3)^0,f,c
  9488  0008E4  223A               	addwfc	(dtoa@n+4)^0,f,c
  9489  0008E6  223B               	addwfc	(dtoa@n+5)^0,f,c
  9490  0008E8  223C               	addwfc	(dtoa@n+6)^0,f,c
  9491  0008EA  223D               	addwfc	(dtoa@n+7)^0,f,c
  9492  0008EC                     l3438:
  9493                           
  9494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  9495  0008EC  0100               	movlb	0	; () banked
  9496  0008EE  BF75               	btfsc	(_prec+1)& (0+255),7,b
  9497  0008F0  EF7C  F004         	goto	u2251
  9498  0008F4  EF7E  F004         	goto	u2250
  9499  0008F8                     u2251:
  9500  0008F8  EF7F  F004         	goto	l3442
  9501  0008FC                     u2250:
  9502  0008FC                     
  9503                           ; BSR set to: 0
  9504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  9505  0008FC  9376               	bcf	_flags& (0+255),1,b
  9506  0008FE                     l3442:
  9507                           
  9508                           ; BSR set to: 0
  9509                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  9510  0008FE  BF75               	btfsc	(_prec+1)& (0+255),7,b
  9511  000900  EF8C  F004         	goto	u2260
  9512  000904  5175               	movf	(_prec+1)& (0+255),w,b
  9513  000906  E106               	bnz	u2261
  9514  000908  0574               	decf	_prec& (0+255),w,b
  9515  00090A  B0D8               	btfsc	status,0,c
  9516  00090C  EF8A  F004         	goto	u2261
  9517  000910  EF8C  F004         	goto	u2260
  9518  000914                     u2261:
  9519  000914  EF92  F004         	goto	l543
  9520  000918                     u2260:
  9521  000918                     
  9522                           ; BSR set to: 0
  9523  000918  0E00               	movlw	0
  9524  00091A  6E31               	movwf	(dtoa@p+1)^0,c
  9525  00091C  0E01               	movlw	1
  9526  00091E  6E30               	movwf	dtoa@p^0,c
  9527  000920  EF96  F004         	goto	l545
  9528  000924                     l543:
  9529                           
  9530                           ; BSR set to: 0
  9531  000924  C074  F030         	movff	_prec,dtoa@p
  9532  000928  C075  F031         	movff	_prec+1,dtoa@p+1
  9533  00092C                     l545:
  9534                           
  9535                           ; BSR set to: 0
  9536                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  9537  00092C  C072  F032         	movff	_width,dtoa@w
  9538  000930  C073  F033         	movff	_width+1,dtoa@w+1
  9539  000934                     
  9540                           ; BSR set to: 0
  9541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  9542  000934  5034               	movf	dtoa@s^0,w,c
  9543  000936  1035               	iorwf	(dtoa@s+1)^0,w,c
  9544  000938  A4D8               	btfss	status,2,c
  9545  00093A  EFA1  F004         	goto	u2271
  9546  00093E  EFA3  F004         	goto	u2270
  9547  000942                     u2271:
  9548  000942  EFAA  F004         	goto	l3450
  9549  000946                     u2270:
  9550  000946                     
  9551                           ; BSR set to: 0
  9552  000946  A576               	btfss	_flags& (0+255),2,b
  9553  000948  EFA8  F004         	goto	u2281
  9554  00094C  EFAA  F004         	goto	u2280
  9555  000950                     u2281:
  9556  000950  EFAD  F004         	goto	l3452
  9557  000954                     u2280:
  9558  000954                     l3450:
  9559                           
  9560                           ; BSR set to: 0
  9561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  9562  000954  0632               	decf	dtoa@w^0,f,c
  9563  000956  A0D8               	btfss	status,0,c
  9564  000958  0633               	decf	(dtoa@w+1)^0,f,c
  9565  00095A                     l3452:
  9566                           
  9567                           ; BSR set to: 0
  9568                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  9569  00095A  0E00               	movlw	0
  9570  00095C  6E3F               	movwf	(dtoa@i+1)^0,c
  9571  00095E  0E1F               	movlw	31
  9572  000960  6E3E               	movwf	dtoa@i^0,c
  9573  000962                     
  9574                           ; BSR set to: 0
  9575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  9576  000962  0E00               	movlw	0
  9577  000964  6FAC               	movwf	(_dbuf+31)& (0+255),b
  9578                           
  9579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9580  000966  EF31  F005         	goto	l3466
  9581  00096A                     l3456:
  9582                           
  9583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  9584  00096A  063E               	decf	dtoa@i^0,f,c
  9585  00096C  A0D8               	btfss	status,0,c
  9586  00096E  063F               	decf	(dtoa@i+1)^0,f,c
  9587  000970                     
  9588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  9589  000970  0E8D               	movlw	low _dbuf
  9590  000972  243E               	addwf	dtoa@i^0,w,c
  9591  000974  6ED9               	movwf	fsr2l,c
  9592  000976  0E00               	movlw	high _dbuf
  9593  000978  203F               	addwfc	(dtoa@i+1)^0,w,c
  9594  00097A  6EDA               	movwf	fsr2h,c
  9595  00097C  C036  F001         	movff	dtoa@n,___aomod@dividend
  9596  000980  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  9597  000984  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  9598  000988  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  9599  00098C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  9600  000990  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  9601  000994  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  9602  000998  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  9603  00099C  0E0A               	movlw	10
  9604  00099E  6E09               	movwf	___aomod@divisor^0,c
  9605  0009A0  0E00               	movlw	0
  9606  0009A2  6E0A               	movwf	(___aomod@divisor+1)^0,c
  9607  0009A4  0E00               	movlw	0
  9608  0009A6  6E0B               	movwf	(___aomod@divisor+2)^0,c
  9609  0009A8  0E00               	movlw	0
  9610  0009AA  6E0C               	movwf	(___aomod@divisor+3)^0,c
  9611  0009AC  0E00               	movlw	0
  9612  0009AE  6E0D               	movwf	(___aomod@divisor+4)^0,c
  9613  0009B0  0E00               	movlw	0
  9614  0009B2  6E0E               	movwf	(___aomod@divisor+5)^0,c
  9615  0009B4  0E00               	movlw	0
  9616  0009B6  6E0F               	movwf	(___aomod@divisor+6)^0,c
  9617  0009B8  0E00               	movlw	0
  9618  0009BA  6E10               	movwf	(___aomod@divisor+7)^0,c
  9619  0009BC  EC91  F00C         	call	___aomod	;wreg free
  9620  0009C0  C001  F026         	movff	?___aomod,??_dtoa
  9621  0009C4  C002  F027         	movff	?___aomod+1,??_dtoa+1
  9622  0009C8  C003  F028         	movff	?___aomod+2,??_dtoa+2
  9623  0009CC  C004  F029         	movff	?___aomod+3,??_dtoa+3
  9624  0009D0  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  9625  0009D4  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  9626  0009D8  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  9627  0009DC  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  9628  0009E0  C026  F013         	movff	??_dtoa,abs@a
  9629  0009E4  C028  F014         	movff	??_dtoa+2,abs@a+1
  9630  0009E8  EC0B  F018         	call	_abs	;wreg free
  9631  0009EC  5013               	movf	?_abs^0,w,c
  9632  0009EE  0F30               	addlw	48
  9633  0009F0  6EDF               	movwf	indf2,c
  9634  0009F2                     
  9635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  9636  0009F2  0630               	decf	dtoa@p^0,f,c
  9637  0009F4  A0D8               	btfss	status,0,c
  9638  0009F6  0631               	decf	(dtoa@p+1)^0,f,c
  9639  0009F8                     
  9640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  9641  0009F8  0632               	decf	dtoa@w^0,f,c
  9642  0009FA  A0D8               	btfss	status,0,c
  9643  0009FC  0633               	decf	(dtoa@w+1)^0,f,c
  9644  0009FE                     
  9645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  9646  0009FE  C036  F001         	movff	dtoa@n,___aodiv@dividend
  9647  000A02  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  9648  000A06  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  9649  000A0A  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  9650  000A0E  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  9651  000A12  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  9652  000A16  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  9653  000A1A  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  9654  000A1E  0E0A               	movlw	10
  9655  000A20  6E09               	movwf	___aodiv@divisor^0,c
  9656  000A22  0E00               	movlw	0
  9657  000A24  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  9658  000A26  0E00               	movlw	0
  9659  000A28  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  9660  000A2A  0E00               	movlw	0
  9661  000A2C  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  9662  000A2E  0E00               	movlw	0
  9663  000A30  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  9664  000A32  0E00               	movlw	0
  9665  000A34  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  9666  000A36  0E00               	movlw	0
  9667  000A38  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  9668  000A3A  0E00               	movlw	0
  9669  000A3C  6E10               	movwf	(___aodiv@divisor+7)^0,c
  9670  000A3E  EC9F  F009         	call	___aodiv	;wreg free
  9671  000A42  C001  F036         	movff	?___aodiv,dtoa@n
  9672  000A46  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  9673  000A4A  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  9674  000A4E  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  9675  000A52  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  9676  000A56  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  9677  000A5A  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  9678  000A5E  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  9679  000A62                     l3466:
  9680                           
  9681                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9682  000A62  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  9683  000A64  EF3C  F005         	goto	u2291
  9684  000A68  503F               	movf	(dtoa@i+1)^0,w,c
  9685  000A6A  E108               	bnz	u2290
  9686  000A6C  043E               	decf	dtoa@i^0,w,c
  9687  000A6E  A0D8               	btfss	status,0,c
  9688  000A70  EF3C  F005         	goto	u2291
  9689  000A74  EF3E  F005         	goto	u2290
  9690  000A78                     u2291:
  9691  000A78  EF6F  F005         	goto	l3476
  9692  000A7C                     u2290:
  9693  000A7C  5036               	movf	dtoa@n^0,w,c
  9694  000A7E  1037               	iorwf	(dtoa@n+1)^0,w,c
  9695  000A80  1038               	iorwf	(dtoa@n+2)^0,w,c
  9696  000A82  1039               	iorwf	(dtoa@n+3)^0,w,c
  9697  000A84  103A               	iorwf	(dtoa@n+4)^0,w,c
  9698  000A86  103B               	iorwf	(dtoa@n+5)^0,w,c
  9699  000A88  103C               	iorwf	(dtoa@n+6)^0,w,c
  9700  000A8A  103D               	iorwf	(dtoa@n+7)^0,w,c
  9701  000A8C  A4D8               	btfss	status,2,c
  9702  000A8E  EF4B  F005         	goto	u2301
  9703  000A92  EF4D  F005         	goto	u2300
  9704  000A96                     u2301:
  9705  000A96  EFB5  F004         	goto	l3456
  9706  000A9A                     u2300:
  9707  000A9A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  9708  000A9C  EF5A  F005         	goto	u2310
  9709  000AA0  5031               	movf	(dtoa@p+1)^0,w,c
  9710  000AA2  E106               	bnz	u2311
  9711  000AA4  0430               	decf	dtoa@p^0,w,c
  9712  000AA6  B0D8               	btfsc	status,0,c
  9713  000AA8  EF58  F005         	goto	u2311
  9714  000AAC  EF5A  F005         	goto	u2310
  9715  000AB0                     u2311:
  9716  000AB0  EFB5  F004         	goto	l3456
  9717  000AB4                     u2310:
  9718  000AB4  BE33               	btfsc	(dtoa@w+1)^0,7,c
  9719  000AB6  EF65  F005         	goto	u2321
  9720  000ABA  5033               	movf	(dtoa@w+1)^0,w,c
  9721  000ABC  E108               	bnz	u2320
  9722  000ABE  0432               	decf	dtoa@w^0,w,c
  9723  000AC0  A0D8               	btfss	status,0,c
  9724  000AC2  EF65  F005         	goto	u2321
  9725  000AC6  EF67  F005         	goto	u2320
  9726  000ACA                     u2321:
  9727  000ACA  EF6F  F005         	goto	l3476
  9728  000ACE                     u2320:
  9729  000ACE  0100               	movlb	0	; () banked
  9730  000AD0  B376               	btfsc	_flags& (0+255),1,b
  9731  000AD2  EF6D  F005         	goto	u2331
  9732  000AD6  EF6F  F005         	goto	u2330
  9733  000ADA                     u2331:
  9734  000ADA  EFB5  F004         	goto	l3456
  9735  000ADE                     u2330:
  9736  000ADE                     l3476:
  9737                           
  9738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  9739  000ADE  5034               	movf	dtoa@s^0,w,c
  9740  000AE0  1035               	iorwf	(dtoa@s+1)^0,w,c
  9741  000AE2  A4D8               	btfss	status,2,c
  9742  000AE4  EF76  F005         	goto	u2341
  9743  000AE8  EF78  F005         	goto	u2340
  9744  000AEC                     u2341:
  9745  000AEC  EF80  F005         	goto	l3480
  9746  000AF0                     u2340:
  9747  000AF0  0100               	movlb	0	; () banked
  9748  000AF2  A576               	btfss	_flags& (0+255),2,b
  9749  000AF4  EF7E  F005         	goto	u2351
  9750  000AF8  EF80  F005         	goto	u2350
  9751  000AFC                     u2351:
  9752  000AFC  EF9E  F005         	goto	l3490
  9753  000B00                     u2350:
  9754  000B00                     l3480:
  9755                           
  9756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  9757  000B00  063E               	decf	dtoa@i^0,f,c
  9758  000B02  A0D8               	btfss	status,0,c
  9759  000B04  063F               	decf	(dtoa@i+1)^0,f,c
  9760  000B06                     
  9761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9762  000B06  5034               	movf	dtoa@s^0,w,c
  9763  000B08  1035               	iorwf	(dtoa@s+1)^0,w,c
  9764  000B0A  A4D8               	btfss	status,2,c
  9765  000B0C  EF8A  F005         	goto	u2361
  9766  000B10  EF8C  F005         	goto	u2360
  9767  000B14                     u2361:
  9768  000B14  EF92  F005         	goto	l3486
  9769  000B18                     u2360:
  9770  000B18  0E00               	movlw	0
  9771  000B1A  6E2F               	movwf	(_dtoa$1086+1)^0,c
  9772  000B1C  0E2B               	movlw	43
  9773  000B1E  6E2E               	movwf	_dtoa$1086^0,c
  9774  000B20  EF96  F005         	goto	l3488
  9775  000B24                     l3486:
  9776  000B24  0E00               	movlw	0
  9777  000B26  6E2F               	movwf	(_dtoa$1086+1)^0,c
  9778  000B28  0E2D               	movlw	45
  9779  000B2A  6E2E               	movwf	_dtoa$1086^0,c
  9780  000B2C                     l3488:
  9781  000B2C  0E8D               	movlw	low _dbuf
  9782  000B2E  243E               	addwf	dtoa@i^0,w,c
  9783  000B30  6ED9               	movwf	fsr2l,c
  9784  000B32  0E00               	movlw	high _dbuf
  9785  000B34  203F               	addwfc	(dtoa@i+1)^0,w,c
  9786  000B36  6EDA               	movwf	fsr2h,c
  9787  000B38  C02E  FFDF         	movff	_dtoa$1086,indf2
  9788  000B3C                     l3490:
  9789                           
  9790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9791  000B3C  C01C  F011         	movff	dtoa@fp,pad@fp
  9792  000B40  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  9793  000B44  0E8D               	movlw	low _dbuf
  9794  000B46  243E               	addwf	dtoa@i^0,w,c
  9795  000B48  6E13               	movwf	pad@buf^0,c
  9796  000B4A  0E00               	movlw	high _dbuf
  9797  000B4C  203F               	addwfc	(dtoa@i+1)^0,w,c
  9798  000B4E  6E14               	movwf	(pad@buf+1)^0,c
  9799  000B50  C032  F015         	movff	dtoa@w,pad@p
  9800  000B54  C033  F016         	movff	dtoa@w+1,pad@p+1
  9801  000B58  ECD9  F011         	call	_pad	;wreg free
  9802  000B5C  C011  F01C         	movff	?_pad,?_dtoa
  9803  000B60  C012  F01D         	movff	?_pad+1,?_dtoa+1
  9804  000B64  0012               	return		;funcret
  9805  000B66                     __end_of_dtoa:
  9806                           	opt callstack 0
  9807                           
  9808 ;; *************** function _abs *****************
  9809 ;; Defined at:
  9810 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  9811 ;; Parameters:    Size  Location     Type
  9812 ;;  a               2   18[COMRAM] int 
  9813 ;; Auto vars:     Size  Location     Type
  9814 ;;		None
  9815 ;; Return value:  Size  Location     Type
  9816 ;;                  2   18[COMRAM] int 
  9817 ;; Registers used:
  9818 ;;		wreg, status,2, status,0
  9819 ;; Tracked objects:
  9820 ;;		On entry : 0/0
  9821 ;;		On exit  : 0/0
  9822 ;;		Unchanged: 0/0
  9823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9824 ;;      Params:         2       0       0       0       0       0       0       0       0
  9825 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9826 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9827 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9828 ;;Total ram usage:        4 bytes
  9829 ;; Hardware stack levels used:    1
  9830 ;; Hardware stack levels required when called:    1
  9831 ;; This function calls:
  9832 ;;		Nothing
  9833 ;; This function is called by:
  9834 ;;		_dtoa
  9835 ;; This function uses a non-reentrant model
  9836 ;;
  9837                           
  9838                           	psect	text44
  9839  003016                     __ptext44:
  9840                           	opt callstack 0
  9841  003016                     _abs:
  9842                           	opt callstack 23
  9843  003016  BE14               	btfsc	(abs@a+1)^0,7,c
  9844  003018  EF18  F018         	goto	u2030
  9845  00301C  5014               	movf	(abs@a+1)^0,w,c
  9846  00301E  E106               	bnz	u2031
  9847  003020  0413               	decf	abs@a^0,w,c
  9848  003022  B0D8               	btfsc	status,0,c
  9849  003024  EF16  F018         	goto	u2031
  9850  003028  EF18  F018         	goto	u2030
  9851  00302C                     u2031:
  9852  00302C  EF26  F018         	goto	l1312
  9853  003030                     u2030:
  9854  003030  C013  F015         	movff	abs@a,??_abs
  9855  003034  C014  F016         	movff	abs@a+1,??_abs+1
  9856  003038  1E15               	comf	??_abs^0,f,c
  9857  00303A  1E16               	comf	(??_abs+1)^0,f,c
  9858  00303C  4A15               	infsnz	??_abs^0,f,c
  9859  00303E  2A16               	incf	(??_abs+1)^0,f,c
  9860  003040  C015  F013         	movff	??_abs,?_abs
  9861  003044  C016  F014         	movff	??_abs+1,?_abs+1
  9862  003048  EF2A  F018         	goto	l1315
  9863  00304C                     l1312:
  9864  00304C  C013  F013         	movff	abs@a,?_abs
  9865  003050  C014  F014         	movff	abs@a+1,?_abs+1
  9866  003054                     l1315:
  9867  003054  0012               	return		;funcret
  9868  003056                     __end_of_abs:
  9869                           	opt callstack 0
  9870                           
  9871 ;; *************** function ___aomod *****************
  9872 ;; Defined at:
  9873 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  9874 ;; Parameters:    Size  Location     Type
  9875 ;;  dividend        8    0[COMRAM] long long 
  9876 ;;  divisor         8    8[COMRAM] long long 
  9877 ;; Auto vars:     Size  Location     Type
  9878 ;;  sign            1   17[COMRAM] unsigned char 
  9879 ;;  counter         1   16[COMRAM] unsigned char 
  9880 ;; Return value:  Size  Location     Type
  9881 ;;                  8    0[COMRAM] long long 
  9882 ;; Registers used:
  9883 ;;		wreg, status,2, status,0
  9884 ;; Tracked objects:
  9885 ;;		On entry : 0/0
  9886 ;;		On exit  : 0/0
  9887 ;;		Unchanged: 0/0
  9888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9889 ;;      Params:        16       0       0       0       0       0       0       0       0
  9890 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9891 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9892 ;;      Totals:        18       0       0       0       0       0       0       0       0
  9893 ;;Total ram usage:       18 bytes
  9894 ;; Hardware stack levels used:    1
  9895 ;; Hardware stack levels required when called:    1
  9896 ;; This function calls:
  9897 ;;		Nothing
  9898 ;; This function is called by:
  9899 ;;		_dtoa
  9900 ;; This function uses a non-reentrant model
  9901 ;;
  9902                           
  9903                           	psect	text45
  9904  001922                     __ptext45:
  9905                           	opt callstack 0
  9906  001922                     ___aomod:
  9907                           	opt callstack 23
  9908  001922  0E00               	movlw	0
  9909  001924  6E12               	movwf	___aomod@sign^0,c
  9910  001926  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  9911  001928  EF9A  F00C         	goto	u2130
  9912  00192C  EF98  F00C         	goto	u2131
  9913  001930                     u2131:
  9914  001930  EFAC  F00C         	goto	l3378
  9915  001934                     u2130:
  9916  001934  1E08               	comf	(___aomod@dividend+7)^0,f,c
  9917  001936  1E07               	comf	(___aomod@dividend+6)^0,f,c
  9918  001938  1E06               	comf	(___aomod@dividend+5)^0,f,c
  9919  00193A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  9920  00193C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  9921  00193E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  9922  001940  1E02               	comf	(___aomod@dividend+1)^0,f,c
  9923  001942  6C01               	negf	___aomod@dividend^0,c
  9924  001944  0E00               	movlw	0
  9925  001946  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  9926  001948  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  9927  00194A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  9928  00194C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  9929  00194E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  9930  001950  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  9931  001952  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  9932  001954  0E01               	movlw	1
  9933  001956  6E12               	movwf	___aomod@sign^0,c
  9934  001958                     l3378:
  9935  001958  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  9936  00195A  EFB3  F00C         	goto	u2140
  9937  00195E  EFB1  F00C         	goto	u2141
  9938  001962                     u2141:
  9939  001962  EFC3  F00C         	goto	l3382
  9940  001966                     u2140:
  9941  001966  1E10               	comf	(___aomod@divisor+7)^0,f,c
  9942  001968  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  9943  00196A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  9944  00196C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  9945  00196E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  9946  001970  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  9947  001972  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  9948  001974  6C09               	negf	___aomod@divisor^0,c
  9949  001976  0E00               	movlw	0
  9950  001978  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  9951  00197A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  9952  00197C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  9953  00197E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  9954  001980  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  9955  001982  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  9956  001984  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  9957  001986                     l3382:
  9958  001986  5009               	movf	___aomod@divisor^0,w,c
  9959  001988  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  9960  00198A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  9961  00198C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  9962  00198E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  9963  001990  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  9964  001992  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  9965  001994  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  9966  001996  B4D8               	btfsc	status,2,c
  9967  001998  EFD0  F00C         	goto	u2151
  9968  00199C  EFD2  F00C         	goto	u2150
  9969  0019A0                     u2151:
  9970  0019A0  EF1A  F00D         	goto	l3398
  9971  0019A4                     u2150:
  9972  0019A4  0E01               	movlw	1
  9973  0019A6  6E11               	movwf	___aomod@counter^0,c
  9974  0019A8  EFE0  F00C         	goto	l3388
  9975  0019AC                     l3386:
  9976  0019AC  90D8               	bcf	status,0,c
  9977  0019AE  3609               	rlcf	___aomod@divisor^0,f,c
  9978  0019B0  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  9979  0019B2  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  9980  0019B4  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  9981  0019B6  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  9982  0019B8  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  9983  0019BA  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  9984  0019BC  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  9985  0019BE  2A11               	incf	___aomod@counter^0,f,c
  9986  0019C0                     l3388:
  9987  0019C0  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  9988  0019C2  EFE5  F00C         	goto	u2161
  9989  0019C6  EFE7  F00C         	goto	u2160
  9990  0019CA                     u2161:
  9991  0019CA  EFD6  F00C         	goto	l3386
  9992  0019CE                     u2160:
  9993  0019CE                     l3390:
  9994  0019CE  5009               	movf	___aomod@divisor^0,w,c
  9995  0019D0  5C01               	subwf	___aomod@dividend^0,w,c
  9996  0019D2  500A               	movf	(___aomod@divisor+1)^0,w,c
  9997  0019D4  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  9998  0019D6  500B               	movf	(___aomod@divisor+2)^0,w,c
  9999  0019D8  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 10000  0019DA  500C               	movf	(___aomod@divisor+3)^0,w,c
 10001  0019DC  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 10002  0019DE  500D               	movf	(___aomod@divisor+4)^0,w,c
 10003  0019E0  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 10004  0019E2  500E               	movf	(___aomod@divisor+5)^0,w,c
 10005  0019E4  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 10006  0019E6  500F               	movf	(___aomod@divisor+6)^0,w,c
 10007  0019E8  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 10008  0019EA  5010               	movf	(___aomod@divisor+7)^0,w,c
 10009  0019EC  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 10010  0019EE  A0D8               	btfss	status,0,c
 10011  0019F0  EFFC  F00C         	goto	u2171
 10012  0019F4  EFFE  F00C         	goto	u2170
 10013  0019F8                     u2171:
 10014  0019F8  EF0E  F00D         	goto	l3394
 10015  0019FC                     u2170:
 10016  0019FC  5009               	movf	___aomod@divisor^0,w,c
 10017  0019FE  5E01               	subwf	___aomod@dividend^0,f,c
 10018  001A00  500A               	movf	(___aomod@divisor+1)^0,w,c
 10019  001A02  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 10020  001A04  500B               	movf	(___aomod@divisor+2)^0,w,c
 10021  001A06  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 10022  001A08  500C               	movf	(___aomod@divisor+3)^0,w,c
 10023  001A0A  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 10024  001A0C  500D               	movf	(___aomod@divisor+4)^0,w,c
 10025  001A0E  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 10026  001A10  500E               	movf	(___aomod@divisor+5)^0,w,c
 10027  001A12  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 10028  001A14  500F               	movf	(___aomod@divisor+6)^0,w,c
 10029  001A16  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 10030  001A18  5010               	movf	(___aomod@divisor+7)^0,w,c
 10031  001A1A  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 10032  001A1C                     l3394:
 10033  001A1C  90D8               	bcf	status,0,c
 10034  001A1E  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 10035  001A20  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 10036  001A22  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 10037  001A24  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 10038  001A26  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 10039  001A28  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 10040  001A2A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 10041  001A2C  3209               	rrcf	___aomod@divisor^0,f,c
 10042  001A2E  2E11               	decfsz	___aomod@counter^0,f,c
 10043  001A30  EFE7  F00C         	goto	l3390
 10044  001A34                     l3398:
 10045  001A34  5012               	movf	___aomod@sign^0,w,c
 10046  001A36  B4D8               	btfsc	status,2,c
 10047  001A38  EF20  F00D         	goto	u2181
 10048  001A3C  EF22  F00D         	goto	u2180
 10049  001A40                     u2181:
 10050  001A40  EF32  F00D         	goto	l3402
 10051  001A44                     u2180:
 10052  001A44  1E08               	comf	(___aomod@dividend+7)^0,f,c
 10053  001A46  1E07               	comf	(___aomod@dividend+6)^0,f,c
 10054  001A48  1E06               	comf	(___aomod@dividend+5)^0,f,c
 10055  001A4A  1E05               	comf	(___aomod@dividend+4)^0,f,c
 10056  001A4C  1E04               	comf	(___aomod@dividend+3)^0,f,c
 10057  001A4E  1E03               	comf	(___aomod@dividend+2)^0,f,c
 10058  001A50  1E02               	comf	(___aomod@dividend+1)^0,f,c
 10059  001A52  6C01               	negf	___aomod@dividend^0,c
 10060  001A54  0E00               	movlw	0
 10061  001A56  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 10062  001A58  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 10063  001A5A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 10064  001A5C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 10065  001A5E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 10066  001A60  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 10067  001A62  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 10068  001A64                     l3402:
 10069  001A64  C001  F001         	movff	___aomod@dividend,?___aomod
 10070  001A68  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 10071  001A6C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 10072  001A70  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 10073  001A74  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 10074  001A78  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 10075  001A7C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 10076  001A80  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 10077  001A84  0012               	return		;funcret
 10078  001A86                     __end_of___aomod:
 10079                           	opt callstack 0
 10080                           
 10081 ;; *************** function ___aodiv *****************
 10082 ;; Defined at:
 10083 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 10084 ;; Parameters:    Size  Location     Type
 10085 ;;  dividend        8    0[COMRAM] long long 
 10086 ;;  divisor         8    8[COMRAM] long long 
 10087 ;; Auto vars:     Size  Location     Type
 10088 ;;  quotient        8   18[COMRAM] long long 
 10089 ;;  sign            1   17[COMRAM] unsigned char 
 10090 ;;  counter         1   16[COMRAM] unsigned char 
 10091 ;; Return value:  Size  Location     Type
 10092 ;;                  8    0[COMRAM] long long 
 10093 ;; Registers used:
 10094 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10095 ;; Tracked objects:
 10096 ;;		On entry : 0/0
 10097 ;;		On exit  : 0/0
 10098 ;;		Unchanged: 0/0
 10099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10100 ;;      Params:        16       0       0       0       0       0       0       0       0
 10101 ;;      Locals:        10       0       0       0       0       0       0       0       0
 10102 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10103 ;;      Totals:        26       0       0       0       0       0       0       0       0
 10104 ;;Total ram usage:       26 bytes
 10105 ;; Hardware stack levels used:    1
 10106 ;; Hardware stack levels required when called:    1
 10107 ;; This function calls:
 10108 ;;		Nothing
 10109 ;; This function is called by:
 10110 ;;		_dtoa
 10111 ;; This function uses a non-reentrant model
 10112 ;;
 10113                           
 10114                           	psect	text46
 10115  00133E                     __ptext46:
 10116                           	opt callstack 0
 10117  00133E                     ___aodiv:
 10118                           	opt callstack 23
 10119  00133E  0E00               	movlw	0
 10120  001340  6E12               	movwf	___aodiv@sign^0,c
 10121  001342  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 10122  001344  EFA8  F009         	goto	u2060
 10123  001348  EFA6  F009         	goto	u2061
 10124  00134C                     u2061:
 10125  00134C  EFBA  F009         	goto	l3334
 10126  001350                     u2060:
 10127  001350  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 10128  001352  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 10129  001354  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 10130  001356  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 10131  001358  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 10132  00135A  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 10133  00135C  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 10134  00135E  6C09               	negf	___aodiv@divisor^0,c
 10135  001360  0E00               	movlw	0
 10136  001362  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 10137  001364  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 10138  001366  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 10139  001368  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 10140  00136A  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 10141  00136C  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 10142  00136E  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 10143  001370  0E01               	movlw	1
 10144  001372  6E12               	movwf	___aodiv@sign^0,c
 10145  001374                     l3334:
 10146  001374  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 10147  001376  EFC1  F009         	goto	u2070
 10148  00137A  EFBF  F009         	goto	u2071
 10149  00137E                     u2071:
 10150  00137E  EFD3  F009         	goto	l3340
 10151  001382                     u2070:
 10152  001382  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 10153  001384  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 10154  001386  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 10155  001388  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 10156  00138A  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 10157  00138C  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 10158  00138E  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 10159  001390  6C01               	negf	___aodiv@dividend^0,c
 10160  001392  0E00               	movlw	0
 10161  001394  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 10162  001396  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 10163  001398  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 10164  00139A  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 10165  00139C  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 10166  00139E  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 10167  0013A0  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 10168  0013A2  0E01               	movlw	1
 10169  0013A4  1A12               	xorwf	___aodiv@sign^0,f,c
 10170  0013A6                     l3340:
 10171  0013A6  EE20  F013         	lfsr	2,___aodiv@quotient
 10172  0013AA  0E07               	movlw	7
 10173  0013AC                     u2081:
 10174  0013AC  6ADE               	clrf	postinc2,c
 10175  0013AE  06E8               	decf	wreg,f,c
 10176  0013B0  E2FD               	bc	u2081
 10177  0013B2  5009               	movf	___aodiv@divisor^0,w,c
 10178  0013B4  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 10179  0013B6  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 10180  0013B8  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 10181  0013BA  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 10182  0013BC  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 10183  0013BE  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 10184  0013C0  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 10185  0013C2  B4D8               	btfsc	status,2,c
 10186  0013C4  EFE6  F009         	goto	u2091
 10187  0013C8  EFE8  F009         	goto	u2090
 10188  0013CC                     u2091:
 10189  0013CC  EF3A  F00A         	goto	l3362
 10190  0013D0                     u2090:
 10191  0013D0  0E01               	movlw	1
 10192  0013D2  6E11               	movwf	___aodiv@counter^0,c
 10193  0013D4  EFF6  F009         	goto	l3348
 10194  0013D8                     l3346:
 10195  0013D8  90D8               	bcf	status,0,c
 10196  0013DA  3609               	rlcf	___aodiv@divisor^0,f,c
 10197  0013DC  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 10198  0013DE  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 10199  0013E0  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 10200  0013E2  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 10201  0013E4  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 10202  0013E6  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 10203  0013E8  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 10204  0013EA  2A11               	incf	___aodiv@counter^0,f,c
 10205  0013EC                     l3348:
 10206  0013EC  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 10207  0013EE  EFFB  F009         	goto	u2101
 10208  0013F2  EFFD  F009         	goto	u2100
 10209  0013F6                     u2101:
 10210  0013F6  EFEC  F009         	goto	l3346
 10211  0013FA                     u2100:
 10212  0013FA                     l3350:
 10213  0013FA  90D8               	bcf	status,0,c
 10214  0013FC  3613               	rlcf	___aodiv@quotient^0,f,c
 10215  0013FE  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 10216  001400  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 10217  001402  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 10218  001404  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 10219  001406  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 10220  001408  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 10221  00140A  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 10222  00140C  5009               	movf	___aodiv@divisor^0,w,c
 10223  00140E  5C01               	subwf	___aodiv@dividend^0,w,c
 10224  001410  500A               	movf	(___aodiv@divisor+1)^0,w,c
 10225  001412  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 10226  001414  500B               	movf	(___aodiv@divisor+2)^0,w,c
 10227  001416  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 10228  001418  500C               	movf	(___aodiv@divisor+3)^0,w,c
 10229  00141A  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 10230  00141C  500D               	movf	(___aodiv@divisor+4)^0,w,c
 10231  00141E  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 10232  001420  500E               	movf	(___aodiv@divisor+5)^0,w,c
 10233  001422  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 10234  001424  500F               	movf	(___aodiv@divisor+6)^0,w,c
 10235  001426  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 10236  001428  5010               	movf	(___aodiv@divisor+7)^0,w,c
 10237  00142A  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 10238  00142C  A0D8               	btfss	status,0,c
 10239  00142E  EF1B  F00A         	goto	u2111
 10240  001432  EF1D  F00A         	goto	u2110
 10241  001436                     u2111:
 10242  001436  EF2E  F00A         	goto	l3358
 10243  00143A                     u2110:
 10244  00143A  5009               	movf	___aodiv@divisor^0,w,c
 10245  00143C  5E01               	subwf	___aodiv@dividend^0,f,c
 10246  00143E  500A               	movf	(___aodiv@divisor+1)^0,w,c
 10247  001440  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 10248  001442  500B               	movf	(___aodiv@divisor+2)^0,w,c
 10249  001444  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 10250  001446  500C               	movf	(___aodiv@divisor+3)^0,w,c
 10251  001448  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 10252  00144A  500D               	movf	(___aodiv@divisor+4)^0,w,c
 10253  00144C  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 10254  00144E  500E               	movf	(___aodiv@divisor+5)^0,w,c
 10255  001450  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 10256  001452  500F               	movf	(___aodiv@divisor+6)^0,w,c
 10257  001454  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 10258  001456  5010               	movf	(___aodiv@divisor+7)^0,w,c
 10259  001458  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 10260  00145A  8013               	bsf	___aodiv@quotient^0,0,c
 10261  00145C                     l3358:
 10262  00145C  90D8               	bcf	status,0,c
 10263  00145E  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 10264  001460  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 10265  001462  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 10266  001464  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 10267  001466  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 10268  001468  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 10269  00146A  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 10270  00146C  3209               	rrcf	___aodiv@divisor^0,f,c
 10271  00146E  2E11               	decfsz	___aodiv@counter^0,f,c
 10272  001470  EFFD  F009         	goto	l3350
 10273  001474                     l3362:
 10274  001474  5012               	movf	___aodiv@sign^0,w,c
 10275  001476  B4D8               	btfsc	status,2,c
 10276  001478  EF40  F00A         	goto	u2121
 10277  00147C  EF42  F00A         	goto	u2120
 10278  001480                     u2121:
 10279  001480  EF52  F00A         	goto	l3366
 10280  001484                     u2120:
 10281  001484  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 10282  001486  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 10283  001488  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 10284  00148A  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 10285  00148C  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 10286  00148E  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 10287  001490  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 10288  001492  6C13               	negf	___aodiv@quotient^0,c
 10289  001494  0E00               	movlw	0
 10290  001496  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 10291  001498  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 10292  00149A  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 10293  00149C  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 10294  00149E  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 10295  0014A0  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 10296  0014A2  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 10297  0014A4                     l3366:
 10298  0014A4  C013  F001         	movff	___aodiv@quotient,?___aodiv
 10299  0014A8  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 10300  0014AC  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 10301  0014B0  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 10302  0014B4  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 10303  0014B8  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 10304  0014BC  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 10305  0014C0  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 10306  0014C4  0012               	return		;funcret
 10307  0014C6                     __end_of___aodiv:
 10308                           	opt callstack 0
 10309                           
 10310 ;; *************** function _ctoa *****************
 10311 ;; Defined at:
 10312 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10313 ;; Parameters:    Size  Location     Type
 10314 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 10315 ;;		 -> sprintf@f(6), 
 10316 ;;  c               1   29[COMRAM] unsigned char 
 10317 ;; Auto vars:     Size  Location     Type
 10318 ;;  w               2   30[COMRAM] int 
 10319 ;;  l               2    0        int 
 10320 ;; Return value:  Size  Location     Type
 10321 ;;                  2   27[COMRAM] int 
 10322 ;; Registers used:
 10323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10324 ;; Tracked objects:
 10325 ;;		On entry : 0/0
 10326 ;;		On exit  : 0/0
 10327 ;;		Unchanged: 0/0
 10328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10329 ;;      Params:         3       0       0       0       0       0       0       0       0
 10330 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10331 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10332 ;;      Totals:         5       0       0       0       0       0       0       0       0
 10333 ;;Total ram usage:        5 bytes
 10334 ;; Hardware stack levels used:    1
 10335 ;; Hardware stack levels required when called:    5
 10336 ;; This function calls:
 10337 ;;		_pad
 10338 ;; This function is called by:
 10339 ;;		_vfpfcnvrt
 10340 ;; This function uses a non-reentrant model
 10341 ;;
 10342                           
 10343                           	psect	text47
 10344  002D6C                     __ptext47:
 10345                           	opt callstack 0
 10346  002D6C                     _ctoa:
 10347                           	opt callstack 20
 10348  002D6C                     
 10349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 10350  002D6C  0100               	movlb	0	; () banked
 10351  002D6E  5172               	movf	_width& (0+255),w,b
 10352  002D70  1173               	iorwf	(_width+1)& (0+255),w,b
 10353  002D72  A4D8               	btfss	status,2,c
 10354  002D74  EFBE  F016         	goto	u2211
 10355  002D78  EFC0  F016         	goto	u2210
 10356  002D7C                     u2211:
 10357  002D7C  EFC6  F016         	goto	l3422
 10358  002D80                     u2210:
 10359  002D80                     
 10360                           ; BSR set to: 0
 10361  002D80  C072  F01F         	movff	_width,ctoa@w
 10362  002D84  C073  F020         	movff	_width+1,ctoa@w+1
 10363  002D88  EFCC  F016         	goto	l3424
 10364  002D8C                     l3422:
 10365                           
 10366                           ; BSR set to: 0
 10367  002D8C  0EFF               	movlw	255
 10368  002D8E  2572               	addwf	_width& (0+255),w,b
 10369  002D90  6E1F               	movwf	ctoa@w^0,c
 10370  002D92  0EFF               	movlw	255
 10371  002D94  2173               	addwfc	(_width+1)& (0+255),w,b
 10372  002D96  6E20               	movwf	(ctoa@w+1)^0,c
 10373  002D98                     l3424:
 10374                           
 10375                           ; BSR set to: 0
 10376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 10377  002D98  C01E  F08D         	movff	ctoa@c,_dbuf
 10378  002D9C                     
 10379                           ; BSR set to: 0
 10380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 10381  002D9C  0E00               	movlw	0
 10382  002D9E  6F8E               	movwf	(_dbuf+1)& (0+255),b
 10383  002DA0                     
 10384                           ; BSR set to: 0
 10385                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 10386  002DA0  C01C  F011         	movff	ctoa@fp,pad@fp
 10387  002DA4  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
 10388  002DA8  0E8D               	movlw	low _dbuf
 10389  002DAA  6E13               	movwf	pad@buf^0,c
 10390  002DAC  0E00               	movlw	high _dbuf
 10391  002DAE  6E14               	movwf	(pad@buf+1)^0,c
 10392  002DB0  C01F  F015         	movff	ctoa@w,pad@p
 10393  002DB4  C020  F016         	movff	ctoa@w+1,pad@p+1
 10394  002DB8  ECD9  F011         	call	_pad	;wreg free
 10395  002DBC  C011  F01C         	movff	?_pad,?_ctoa
 10396  002DC0  C012  F01D         	movff	?_pad+1,?_ctoa+1
 10397  002DC4  0012               	return		;funcret
 10398  002DC6                     __end_of_ctoa:
 10399                           	opt callstack 0
 10400                           
 10401 ;; *************** function _pad *****************
 10402 ;; Defined at:
 10403 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10404 ;; Parameters:    Size  Location     Type
 10405 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 10406 ;;		 -> sprintf@f(6), 
 10407 ;;  buf             2   18[COMRAM] PTR unsigned char 
 10408 ;;		 -> dbuf(32), 
 10409 ;;  p               2   20[COMRAM] int 
 10410 ;; Auto vars:     Size  Location     Type
 10411 ;;  w               2   25[COMRAM] int 
 10412 ;;  i               2   23[COMRAM] int 
 10413 ;; Return value:  Size  Location     Type
 10414 ;;                  2   16[COMRAM] int 
 10415 ;; Registers used:
 10416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10417 ;; Tracked objects:
 10418 ;;		On entry : 0/0
 10419 ;;		On exit  : 0/0
 10420 ;;		Unchanged: 0/0
 10421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10422 ;;      Params:         6       0       0       0       0       0       0       0       0
 10423 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10424 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10425 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10426 ;;Total ram usage:       11 bytes
 10427 ;; Hardware stack levels used:    1
 10428 ;; Hardware stack levels required when called:    4
 10429 ;; This function calls:
 10430 ;;		_fputc
 10431 ;;		_fputs
 10432 ;;		_strlen
 10433 ;; This function is called by:
 10434 ;;		_ctoa
 10435 ;;		_dtoa
 10436 ;; This function uses a non-reentrant model
 10437 ;;
 10438                           
 10439                           	psect	text48
 10440  0023B2                     __ptext48:
 10441                           	opt callstack 0
 10442  0023B2                     _pad:
 10443                           	opt callstack 20
 10444  0023B2                     
 10445                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 10446  0023B2  0100               	movlb	0	; () banked
 10447  0023B4  A176               	btfss	_flags& (0+255),0,b
 10448  0023B6  EFDF  F011         	goto	u1991
 10449  0023BA  EFE1  F011         	goto	u1990
 10450  0023BE                     u1991:
 10451  0023BE  EFEB  F011         	goto	l3294
 10452  0023C2                     u1990:
 10453  0023C2                     
 10454                           ; BSR set to: 0
 10455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 10456  0023C2  C013  F00A         	movff	pad@buf,fputs@s
 10457  0023C6  C014  F00B         	movff	pad@buf+1,fputs@s+1
 10458  0023CA  C011  F00C         	movff	pad@fp,fputs@fp
 10459  0023CE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 10460  0023D2  ECA9  F017         	call	_fputs	;wreg free
 10461  0023D6                     l3294:
 10462                           
 10463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 10464  0023D6  BE16               	btfsc	(pad@p+1)^0,7,c
 10465  0023D8  EFF0  F011         	goto	u2001
 10466  0023DC  EFF2  F011         	goto	u2000
 10467  0023E0                     u2001:
 10468  0023E0  EFF8  F011         	goto	l3298
 10469  0023E4                     u2000:
 10470  0023E4  C015  F01A         	movff	pad@p,pad@w
 10471  0023E8  C016  F01B         	movff	pad@p+1,pad@w+1
 10472  0023EC  EFFC  F011         	goto	l525
 10473  0023F0                     l3298:
 10474  0023F0  0E00               	movlw	0
 10475  0023F2  6E1B               	movwf	(pad@w+1)^0,c
 10476  0023F4  0E00               	movlw	0
 10477  0023F6  6E1A               	movwf	pad@w^0,c
 10478  0023F8                     l525:
 10479                           
 10480                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 10481  0023F8  0E00               	movlw	0
 10482  0023FA  6E19               	movwf	(pad@i+1)^0,c
 10483  0023FC  0E00               	movlw	0
 10484  0023FE  6E18               	movwf	pad@i^0,c
 10485                           
 10486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10487  002400  EF0E  F012         	goto	l3304
 10488  002404                     l3300:
 10489                           
 10490                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 10491  002404  0E00               	movlw	0
 10492  002406  6E02               	movwf	(fputc@c+1)^0,c
 10493  002408  0E20               	movlw	32
 10494  00240A  6E01               	movwf	fputc@c^0,c
 10495  00240C  C011  F003         	movff	pad@fp,fputc@fp
 10496  002410  C012  F004         	movff	pad@fp+1,fputc@fp+1
 10497  002414  EC74  F011         	call	_fputc	;wreg free
 10498  002418                     
 10499                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 10500  002418  4A18               	infsnz	pad@i^0,f,c
 10501  00241A  2A19               	incf	(pad@i+1)^0,f,c
 10502  00241C                     l3304:
 10503                           
 10504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10505  00241C  501A               	movf	pad@w^0,w,c
 10506  00241E  5C18               	subwf	pad@i^0,w,c
 10507  002420  5019               	movf	(pad@i+1)^0,w,c
 10508  002422  0A80               	xorlw	128
 10509  002424  6E17               	movwf	??_pad^0,c
 10510  002426  501B               	movf	(pad@w+1)^0,w,c
 10511  002428  0A80               	xorlw	128
 10512  00242A  5817               	subwfb	??_pad^0,w,c
 10513  00242C  A0D8               	btfss	status,0,c
 10514  00242E  EF1B  F012         	goto	u2011
 10515  002432  EF1D  F012         	goto	u2010
 10516  002436                     u2011:
 10517  002436  EF02  F012         	goto	l3300
 10518  00243A                     u2010:
 10519  00243A                     
 10520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 10521  00243A  0100               	movlb	0	; () banked
 10522  00243C  B176               	btfsc	_flags& (0+255),0,b
 10523  00243E  EF23  F012         	goto	u2021
 10524  002442  EF25  F012         	goto	u2020
 10525  002446                     u2021:
 10526  002446  EF2F  F012         	goto	l3308
 10527  00244A                     u2020:
 10528  00244A                     
 10529                           ; BSR set to: 0
 10530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 10531  00244A  C013  F00A         	movff	pad@buf,fputs@s
 10532  00244E  C014  F00B         	movff	pad@buf+1,fputs@s+1
 10533  002452  C011  F00C         	movff	pad@fp,fputs@fp
 10534  002456  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 10535  00245A  ECA9  F017         	call	_fputs	;wreg free
 10536  00245E                     l3308:
 10537                           
 10538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10539  00245E  C013  F001         	movff	pad@buf,strlen@s
 10540  002462  C014  F002         	movff	pad@buf+1,strlen@s+1
 10541  002466  EC80  F018         	call	_strlen	;wreg free
 10542  00246A  501A               	movf	pad@w^0,w,c
 10543  00246C  2401               	addwf	?_strlen^0,w,c
 10544  00246E  6E11               	movwf	?_pad^0,c
 10545  002470  501B               	movf	(pad@w+1)^0,w,c
 10546  002472  2002               	addwfc	(?_strlen+1)^0,w,c
 10547  002474  6E12               	movwf	(?_pad+1)^0,c
 10548  002476  0012               	return		;funcret
 10549  002478                     __end_of_pad:
 10550                           	opt callstack 0
 10551                           
 10552 ;; *************** function _strlen *****************
 10553 ;; Defined at:
 10554 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 10555 ;; Parameters:    Size  Location     Type
 10556 ;;  s               2    0[COMRAM] PTR const unsigned char 
 10557 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), horarios(288), 
 10558 ;; Auto vars:     Size  Location     Type
 10559 ;;  a               2    2[COMRAM] PTR const unsigned char 
 10560 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), horarios(288), 
 10561 ;; Return value:  Size  Location     Type
 10562 ;;                  2    0[COMRAM] unsigned int 
 10563 ;; Registers used:
 10564 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10565 ;; Tracked objects:
 10566 ;;		On entry : 0/0
 10567 ;;		On exit  : 0/0
 10568 ;;		Unchanged: 0/0
 10569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10570 ;;      Params:         2       0       0       0       0       0       0       0       0
 10571 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10572 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10573 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10574 ;;Total ram usage:        4 bytes
 10575 ;; Hardware stack levels used:    1
 10576 ;; Hardware stack levels required when called:    1
 10577 ;; This function calls:
 10578 ;;		Nothing
 10579 ;; This function is called by:
 10580 ;;		_pad
 10581 ;;		_stoa
 10582 ;; This function uses a non-reentrant model
 10583 ;;
 10584                           
 10585                           	psect	text49
 10586  003100                     __ptext49:
 10587                           	opt callstack 0
 10588  003100                     _strlen:
 10589                           	opt callstack 23
 10590  003100  C001  F003         	movff	strlen@s,strlen@a
 10591  003104  C002  F004         	movff	strlen@s+1,strlen@a+1
 10592  003108  EF88  F018         	goto	l3284
 10593  00310C                     l3282:
 10594  00310C  4A01               	infsnz	strlen@s^0,f,c
 10595  00310E  2A02               	incf	(strlen@s+1)^0,f,c
 10596  003110                     l3284:
 10597  003110  C001  FFD9         	movff	strlen@s,fsr2l
 10598  003114  C002  FFDA         	movff	strlen@s+1,fsr2h
 10599  003118  50DF               	movf	indf2,w,c
 10600  00311A  A4D8               	btfss	status,2,c
 10601  00311C  EF92  F018         	goto	u1981
 10602  003120  EF94  F018         	goto	u1980
 10603  003124                     u1981:
 10604  003124  EF86  F018         	goto	l3282
 10605  003128                     u1980:
 10606  003128  5003               	movf	strlen@a^0,w,c
 10607  00312A  5C01               	subwf	strlen@s^0,w,c
 10608  00312C  6E01               	movwf	?_strlen^0,c
 10609  00312E  5004               	movf	(strlen@a+1)^0,w,c
 10610  003130  5802               	subwfb	(strlen@s+1)^0,w,c
 10611  003132  6E02               	movwf	(?_strlen+1)^0,c
 10612  003134  0012               	return		;funcret
 10613  003136                     __end_of_strlen:
 10614                           	opt callstack 0
 10615                           
 10616 ;; *************** function _fputs *****************
 10617 ;; Defined at:
 10618 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 10619 ;; Parameters:    Size  Location     Type
 10620 ;;  s               2    9[COMRAM] PTR const unsigned char 
 10621 ;;		 -> dbuf(32), 
 10622 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 10623 ;;		 -> sprintf@f(6), 
 10624 ;; Auto vars:     Size  Location     Type
 10625 ;;  i               2   14[COMRAM] int 
 10626 ;;  c               1   13[COMRAM] unsigned char 
 10627 ;; Return value:  Size  Location     Type
 10628 ;;                  2    9[COMRAM] int 
 10629 ;; Registers used:
 10630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10631 ;; Tracked objects:
 10632 ;;		On entry : 0/0
 10633 ;;		On exit  : 0/0
 10634 ;;		Unchanged: 0/0
 10635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10636 ;;      Params:         4       0       0       0       0       0       0       0       0
 10637 ;;      Locals:         3       0       0       0       0       0       0       0       0
 10638 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10639 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10640 ;;Total ram usage:        7 bytes
 10641 ;; Hardware stack levels used:    1
 10642 ;; Hardware stack levels required when called:    3
 10643 ;; This function calls:
 10644 ;;		_fputc
 10645 ;; This function is called by:
 10646 ;;		_pad
 10647 ;; This function uses a non-reentrant model
 10648 ;;
 10649                           
 10650                           	psect	text50
 10651  002F52                     __ptext50:
 10652                           	opt callstack 0
 10653  002F52                     _fputs:
 10654                           	opt callstack 20
 10655  002F52  0E00               	movlw	0
 10656  002F54  6E10               	movwf	(fputs@i+1)^0,c
 10657  002F56  0E00               	movlw	0
 10658  002F58  6E0F               	movwf	fputs@i^0,c
 10659  002F5A  EFBA  F017         	goto	l3278
 10660  002F5E                     l3274:
 10661  002F5E  C00E  F001         	movff	fputs@c,fputc@c
 10662  002F62  6A02               	clrf	(fputc@c+1)^0,c
 10663  002F64  C00C  F003         	movff	fputs@fp,fputc@fp
 10664  002F68  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 10665  002F6C  EC74  F011         	call	_fputc	;wreg free
 10666  002F70  4A0F               	infsnz	fputs@i^0,f,c
 10667  002F72  2A10               	incf	(fputs@i+1)^0,f,c
 10668  002F74                     l3278:
 10669  002F74  500F               	movf	fputs@i^0,w,c
 10670  002F76  240A               	addwf	fputs@s^0,w,c
 10671  002F78  6ED9               	movwf	fsr2l,c
 10672  002F7A  5010               	movf	(fputs@i+1)^0,w,c
 10673  002F7C  200B               	addwfc	(fputs@s+1)^0,w,c
 10674  002F7E  6EDA               	movwf	fsr2h,c
 10675  002F80  50DF               	movf	indf2,w,c
 10676  002F82  6E0E               	movwf	fputs@c^0,c
 10677  002F84  500E               	movf	fputs@c^0,w,c
 10678  002F86  A4D8               	btfss	status,2,c
 10679  002F88  EFC8  F017         	goto	u1971
 10680  002F8C  EFCA  F017         	goto	u1970
 10681  002F90                     u1971:
 10682  002F90  EFAF  F017         	goto	l3274
 10683  002F94                     u1970:
 10684  002F94  0012               	return		;funcret
 10685  002F96                     __end_of_fputs:
 10686                           	opt callstack 0
 10687                           
 10688 ;; *************** function _fputc *****************
 10689 ;; Defined at:
 10690 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 10691 ;; Parameters:    Size  Location     Type
 10692 ;;  c               2    0[COMRAM] int 
 10693 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 10694 ;;		 -> sprintf@f(6), 
 10695 ;; Auto vars:     Size  Location     Type
 10696 ;;		None
 10697 ;; Return value:  Size  Location     Type
 10698 ;;                  2    0[COMRAM] int 
 10699 ;; Registers used:
 10700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10701 ;; Tracked objects:
 10702 ;;		On entry : 0/0
 10703 ;;		On exit  : 0/0
 10704 ;;		Unchanged: 0/0
 10705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10706 ;;      Params:         4       0       0       0       0       0       0       0       0
 10707 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10708 ;;      Temps:          5       0       0       0       0       0       0       0       0
 10709 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10710 ;;Total ram usage:        9 bytes
 10711 ;; Hardware stack levels used:    1
 10712 ;; Hardware stack levels required when called:    2
 10713 ;; This function calls:
 10714 ;;		_putch
 10715 ;; This function is called by:
 10716 ;;		_pad
 10717 ;;		_stoa
 10718 ;;		_vfpfcnvrt
 10719 ;;		_fputs
 10720 ;; This function uses a non-reentrant model
 10721 ;;
 10722                           
 10723                           	psect	text51
 10724  0022E8                     __ptext51:
 10725                           	opt callstack 0
 10726  0022E8                     _fputc:
 10727                           	opt callstack 22
 10728  0022E8  5003               	movf	fputc@fp^0,w,c
 10729  0022EA  1004               	iorwf	(fputc@fp+1)^0,w,c
 10730  0022EC  B4D8               	btfsc	status,2,c
 10731  0022EE  EF7B  F011         	goto	u1931
 10732  0022F2  EF7D  F011         	goto	u1930
 10733  0022F6                     u1931:
 10734  0022F6  EF86  F011         	goto	l3262
 10735  0022FA                     u1930:
 10736  0022FA  5003               	movf	fputc@fp^0,w,c
 10737  0022FC  1004               	iorwf	(fputc@fp+1)^0,w,c
 10738  0022FE  A4D8               	btfss	status,2,c
 10739  002300  EF84  F011         	goto	u1941
 10740  002304  EF86  F011         	goto	u1940
 10741  002308                     u1941:
 10742  002308  EF8B  F011         	goto	l3264
 10743  00230C                     u1940:
 10744  00230C                     l3262:
 10745  00230C  5001               	movf	fputc@c^0,w,c
 10746  00230E  EC98  F019         	call	_putch
 10747  002312  EFD8  F011         	goto	l1372
 10748  002316                     l3264:
 10749  002316  EE20 F004          	lfsr	2,4
 10750  00231A  5003               	movf	fputc@fp^0,w,c
 10751  00231C  26D9               	addwf	fsr2l,f,c
 10752  00231E  5004               	movf	(fputc@fp+1)^0,w,c
 10753  002320  22DA               	addwfc	fsr2h,f,c
 10754  002322  50DE               	movf	postinc2,w,c
 10755  002324  10DE               	iorwf	postinc2,w,c
 10756  002326  B4D8               	btfsc	status,2,c
 10757  002328  EF98  F011         	goto	u1951
 10758  00232C  EF9A  F011         	goto	u1950
 10759  002330                     u1951:
 10760  002330  EFB5  F011         	goto	l3268
 10761  002334                     u1950:
 10762  002334  EE20 F004          	lfsr	2,4
 10763  002338  5003               	movf	fputc@fp^0,w,c
 10764  00233A  26D9               	addwf	fsr2l,f,c
 10765  00233C  5004               	movf	(fputc@fp+1)^0,w,c
 10766  00233E  22DA               	addwfc	fsr2h,f,c
 10767  002340  EE10 F002          	lfsr	1,2
 10768  002344  5003               	movf	fputc@fp^0,w,c
 10769  002346  26E1               	addwf	fsr1l,f,c
 10770  002348  5004               	movf	(fputc@fp+1)^0,w,c
 10771  00234A  22E2               	addwfc	fsr1h,f,c
 10772  00234C  50DE               	movf	postinc2,w,c
 10773  00234E  5CE6               	subwf	postinc1,w,c
 10774  002350  50E6               	movf	postinc1,w,c
 10775  002352  0A80               	xorlw	128
 10776  002354  6E09               	movwf	(??_fputc+4)^0,c
 10777  002356  50DE               	movf	postinc2,w,c
 10778  002358  0A80               	xorlw	128
 10779  00235A  5809               	subwfb	(??_fputc+4)^0,w,c
 10780  00235C  B0D8               	btfsc	status,0,c
 10781  00235E  EFB3  F011         	goto	u1961
 10782  002362  EFB5  F011         	goto	u1960
 10783  002366                     u1961:
 10784  002366  EFD8  F011         	goto	l1372
 10785  00236A                     u1960:
 10786  00236A                     l3268:
 10787  00236A  EE20 F002          	lfsr	2,2
 10788  00236E  5003               	movf	fputc@fp^0,w,c
 10789  002370  26D9               	addwf	fsr2l,f,c
 10790  002372  5004               	movf	(fputc@fp+1)^0,w,c
 10791  002374  22DA               	addwfc	fsr2h,f,c
 10792  002376  CFDE F005          	movff	postinc2,??_fputc
 10793  00237A  CFDD F006          	movff	postdec2,??_fputc+1
 10794  00237E  C003  FFD9         	movff	fputc@fp,fsr2l
 10795  002382  C004  FFDA         	movff	fputc@fp+1,fsr2h
 10796  002386  CFDE F007          	movff	postinc2,??_fputc+2
 10797  00238A  CFDD F008          	movff	postdec2,??_fputc+3
 10798  00238E  5005               	movf	??_fputc^0,w,c
 10799  002390  2407               	addwf	(??_fputc+2)^0,w,c
 10800  002392  6ED9               	movwf	fsr2l,c
 10801  002394  5006               	movf	(??_fputc+1)^0,w,c
 10802  002396  2008               	addwfc	(??_fputc+3)^0,w,c
 10803  002398  6EDA               	movwf	fsr2h,c
 10804  00239A  C001  FFDF         	movff	fputc@c,indf2
 10805  00239E  EE20 F002          	lfsr	2,2
 10806  0023A2  5003               	movf	fputc@fp^0,w,c
 10807  0023A4  26D9               	addwf	fsr2l,f,c
 10808  0023A6  5004               	movf	(fputc@fp+1)^0,w,c
 10809  0023A8  22DA               	addwfc	fsr2h,f,c
 10810  0023AA  2ADE               	incf	postinc2,f,c
 10811  0023AC  0E00               	movlw	0
 10812  0023AE  22DD               	addwfc	postdec2,f,c
 10813  0023B0                     l1372:
 10814  0023B0  0012               	return		;funcret
 10815  0023B2                     __end_of_fputc:
 10816                           	opt callstack 0
 10817                           
 10818 ;; *************** function _putch *****************
 10819 ;; Defined at:
 10820 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
 10821 ;; Parameters:    Size  Location     Type
 10822 ;;  c               1    wreg     unsigned char 
 10823 ;; Auto vars:     Size  Location     Type
 10824 ;;  c               1    0[COMRAM] unsigned char 
 10825 ;; Return value:  Size  Location     Type
 10826 ;;                  1    wreg      void 
 10827 ;; Registers used:
 10828 ;;		wreg
 10829 ;; Tracked objects:
 10830 ;;		On entry : 0/0
 10831 ;;		On exit  : 0/0
 10832 ;;		Unchanged: 0/0
 10833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10834 ;;      Params:         0       0       0       0       0       0       0       0       0
 10835 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10836 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10837 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10838 ;;Total ram usage:        0 bytes
 10839 ;; Hardware stack levels used:    1
 10840 ;; Hardware stack levels required when called:    1
 10841 ;; This function calls:
 10842 ;;		Nothing
 10843 ;; This function is called by:
 10844 ;;		_fputc
 10845 ;; This function uses a non-reentrant model
 10846 ;;
 10847                           
 10848                           	psect	text52
 10849  003330                     __ptext52:
 10850                           	opt callstack 0
 10851  003330                     _putch:
 10852                           	opt callstack 22
 10853  003330  0012               	return		;funcret
 10854  003332                     __end_of_putch:
 10855                           	opt callstack 0
 10856                           
 10857 ;; *************** function _atoi *****************
 10858 ;; Defined at:
 10859 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 10860 ;; Parameters:    Size  Location     Type
 10861 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10862 ;;		 -> STR_54(45), STR_53(29), STR_52(32), STR_51(45), 
 10863 ;;		 -> STR_50(29), STR_49(32), STR_47(24), STR_46(25), 
 10864 ;;		 -> STR_45(24), STR_44(27), STR_43(24), STR_42(23), 
 10865 ;;		 -> STR_41(25), STR_40(24), STR_20(51), STR_12(9), 
 10866 ;; Auto vars:     Size  Location     Type
 10867 ;;  n               2   20[COMRAM] int 
 10868 ;;  neg             2   13[COMRAM] int 
 10869 ;; Return value:  Size  Location     Type
 10870 ;;                  2    7[COMRAM] int 
 10871 ;; Registers used:
 10872 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10873 ;; Tracked objects:
 10874 ;;		On entry : 0/0
 10875 ;;		On exit  : 0/0
 10876 ;;		Unchanged: 0/0
 10877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10878 ;;      Params:         2       0       0       0       0       0       0       0       0
 10879 ;;      Locals:         9       0       0       0       0       0       0       0       0
 10880 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10881 ;;      Totals:        15       0       0       0       0       0       0       0       0
 10882 ;;Total ram usage:       15 bytes
 10883 ;; Hardware stack levels used:    1
 10884 ;; Hardware stack levels required when called:    2
 10885 ;; This function calls:
 10886 ;;		___wmul
 10887 ;;		_isdigit
 10888 ;;		_isspace
 10889 ;; This function is called by:
 10890 ;;		_vfpfcnvrt
 10891 ;; This function uses a non-reentrant model
 10892 ;;
 10893                           
 10894                           	psect	text53
 10895  0011AE                     __ptext53:
 10896                           	opt callstack 0
 10897  0011AE                     _atoi:
 10898                           	opt callstack 23
 10899  0011AE  0E00               	movlw	0
 10900  0011B0  6E16               	movwf	(atoi@n+1)^0,c
 10901  0011B2  0E00               	movlw	0
 10902  0011B4  6E15               	movwf	atoi@n^0,c
 10903  0011B6  0E00               	movlw	0
 10904  0011B8  6E0F               	movwf	(atoi@neg+1)^0,c
 10905  0011BA  0E00               	movlw	0
 10906  0011BC  6E0E               	movwf	atoi@neg^0,c
 10907  0011BE  EFE3  F008         	goto	l3540
 10908  0011C2                     l3538:
 10909  0011C2  4A08               	infsnz	atoi@s^0,f,c
 10910  0011C4  2A09               	incf	(atoi@s+1)^0,f,c
 10911  0011C6                     l3540:
 10912  0011C6  0E01               	movlw	1
 10913  0011C8  6E14               	movwf	_atoi$1572^0,c
 10914  0011CA  C008  FFF6         	movff	atoi@s,tblptrl
 10915  0011CE  C009  FFF7         	movff	atoi@s+1,tblptrh
 10916  0011D2                     	if	0	;tblptru may be non-zero
 10917  0011D2                     	endif
 10918  0011D2                     	if	0	;tblptru may be non-zero
 10919  0011D2                     	endif
 10920  0011D2  0008               	tblrd		*
 10921  0011D4  50F5               	movf	tablat,w,c
 10922  0011D6  0A20               	xorlw	32
 10923  0011D8  B4D8               	btfsc	status,2,c
 10924  0011DA  EFF1  F008         	goto	u2461
 10925  0011DE  EFF3  F008         	goto	u2460
 10926  0011E2                     u2461:
 10927  0011E2  EF10  F009         	goto	l3548
 10928  0011E6                     u2460:
 10929  0011E6  0EF7               	movlw	247
 10930  0011E8  6E0A               	movwf	??_atoi^0,c
 10931  0011EA  0EFF               	movlw	255
 10932  0011EC  6E0B               	movwf	(??_atoi+1)^0,c
 10933  0011EE  C008  FFF6         	movff	atoi@s,tblptrl
 10934  0011F2  C009  FFF7         	movff	atoi@s+1,tblptrh
 10935  0011F6                     	if	0	;tblptru may be non-zero
 10936  0011F6                     	endif
 10937  0011F6                     	if	0	;tblptru may be non-zero
 10938  0011F6                     	endif
 10939  0011F6  0008               	tblrd		*
 10940  0011F8  50F5               	movf	tablat,w,c
 10941  0011FA  6E0C               	movwf	(??_atoi+2)^0,c
 10942  0011FC  6A0D               	clrf	(??_atoi+3)^0,c
 10943  0011FE  500A               	movf	??_atoi^0,w,c
 10944  001200  260C               	addwf	(??_atoi+2)^0,f,c
 10945  001202  500B               	movf	(??_atoi+1)^0,w,c
 10946  001204  220D               	addwfc	(??_atoi+3)^0,f,c
 10947  001206  500D               	movf	(??_atoi+3)^0,w,c
 10948  001208  E109               	bnz	u2470
 10949  00120A  0E05               	movlw	5
 10950  00120C  5C0C               	subwf	(??_atoi+2)^0,w,c
 10951  00120E  A0D8               	btfss	status,0,c
 10952  001210  EF0C  F009         	goto	u2471
 10953  001214  EF0E  F009         	goto	u2470
 10954  001218                     u2471:
 10955  001218  EF10  F009         	goto	l3548
 10956  00121C                     u2470:
 10957  00121C  0E00               	movlw	0
 10958  00121E  6E14               	movwf	_atoi$1572^0,c
 10959  001220                     l3548:
 10960  001220  C014  F010         	movff	_atoi$1572,_atoi$1571
 10961  001224  6A11               	clrf	(_atoi$1571+1)^0,c
 10962  001226  5010               	movf	_atoi$1571^0,w,c
 10963  001228  1011               	iorwf	(_atoi$1571+1)^0,w,c
 10964  00122A  A4D8               	btfss	status,2,c
 10965  00122C  EF1A  F009         	goto	u2481
 10966  001230  EF1C  F009         	goto	u2480
 10967  001234                     u2481:
 10968  001234  EFE1  F008         	goto	l3538
 10969  001238                     u2480:
 10970  001238  EF26  F009         	goto	l3558
 10971  00123C                     l3554:
 10972  00123C  0E00               	movlw	0
 10973  00123E  6E0F               	movwf	(atoi@neg+1)^0,c
 10974  001240  0E01               	movlw	1
 10975  001242  6E0E               	movwf	atoi@neg^0,c
 10976  001244                     l3556:
 10977  001244  4A08               	infsnz	atoi@s^0,f,c
 10978  001246  2A09               	incf	(atoi@s+1)^0,f,c
 10979  001248  EF5B  F009         	goto	l3564
 10980  00124C                     l3558:
 10981  00124C  C008  FFF6         	movff	atoi@s,tblptrl
 10982  001250  C009  FFF7         	movff	atoi@s+1,tblptrh
 10983  001254                     	if	0	;tblptru may be non-zero
 10984  001254                     	endif
 10985  001254                     	if	0	;tblptru may be non-zero
 10986  001254                     	endif
 10987  001254  0008               	tblrd		*
 10988  001256  50F5               	movf	tablat,w,c
 10989  001258  6E0A               	movwf	??_atoi^0,c
 10990  00125A  6A0B               	clrf	(??_atoi+1)^0,c
 10991                           
 10992                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10993                           ; Switch size 1, requested type "simple"
 10994                           ; Number of cases is 1, Range of values is 0 to 0
 10995                           ; switch strategies available:
 10996                           ; Name         Instructions Cycles
 10997                           ; simple_byte            4     3 (average)
 10998                           ;	Chosen strategy is simple_byte
 10999  00125C  500B               	movf	(??_atoi+1)^0,w,c
 11000  00125E  0A00               	xorlw	0	; case 0
 11001  001260  B4D8               	btfsc	status,2,c
 11002  001262  EF35  F009         	goto	l5142
 11003  001266  EF5B  F009         	goto	l3564
 11004  00126A                     l5142:
 11005                           
 11006                           ; Switch size 1, requested type "simple"
 11007                           ; Number of cases is 2, Range of values is 43 to 45
 11008                           ; switch strategies available:
 11009                           ; Name         Instructions Cycles
 11010                           ; simple_byte            7     4 (average)
 11011                           ;	Chosen strategy is simple_byte
 11012  00126A  500A               	movf	??_atoi^0,w,c
 11013  00126C  0A2B               	xorlw	43	; case 43
 11014  00126E  B4D8               	btfsc	status,2,c
 11015  001270  EF22  F009         	goto	l3556
 11016  001274  0A06               	xorlw	6	; case 45
 11017  001276  B4D8               	btfsc	status,2,c
 11018  001278  EF1E  F009         	goto	l3554
 11019  00127C  EF5B  F009         	goto	l3564
 11020  001280                     l3560:
 11021  001280  C015  F001         	movff	atoi@n,___wmul@multiplier
 11022  001284  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 11023  001288  0E00               	movlw	0
 11024  00128A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11025  00128C  0E0A               	movlw	10
 11026  00128E  6E03               	movwf	___wmul@multiplicand^0,c
 11027  001290  EC09  F019         	call	___wmul	;wreg free
 11028  001294  C008  FFF6         	movff	atoi@s,tblptrl
 11029  001298  C009  FFF7         	movff	atoi@s+1,tblptrh
 11030  00129C                     	if	0	;tblptru may be non-zero
 11031  00129C                     	endif
 11032  00129C                     	if	0	;tblptru may be non-zero
 11033  00129C                     	endif
 11034  00129C  0008               	tblrd		*
 11035  00129E  50F5               	movf	tablat,w,c
 11036  0012A0  5E01               	subwf	?___wmul^0,f,c
 11037  0012A2  0E00               	movlw	0
 11038  0012A4  5A02               	subwfb	(?___wmul+1)^0,f,c
 11039  0012A6  0E30               	movlw	48
 11040  0012A8  2401               	addwf	?___wmul^0,w,c
 11041  0012AA  6E15               	movwf	atoi@n^0,c
 11042  0012AC  0E00               	movlw	0
 11043  0012AE  2002               	addwfc	(?___wmul+1)^0,w,c
 11044  0012B0  6E16               	movwf	(atoi@n+1)^0,c
 11045  0012B2  EF22  F009         	goto	l3556
 11046  0012B6                     l3564:
 11047  0012B6  0ED0               	movlw	208
 11048  0012B8  6E0A               	movwf	??_atoi^0,c
 11049  0012BA  0EFF               	movlw	255
 11050  0012BC  6E0B               	movwf	(??_atoi+1)^0,c
 11051  0012BE  C008  FFF6         	movff	atoi@s,tblptrl
 11052  0012C2  C009  FFF7         	movff	atoi@s+1,tblptrh
 11053  0012C6                     	if	0	;tblptru may be non-zero
 11054  0012C6                     	endif
 11055  0012C6                     	if	0	;tblptru may be non-zero
 11056  0012C6                     	endif
 11057  0012C6  0008               	tblrd		*
 11058  0012C8  50F5               	movf	tablat,w,c
 11059  0012CA  6E0C               	movwf	(??_atoi+2)^0,c
 11060  0012CC  6A0D               	clrf	(??_atoi+3)^0,c
 11061  0012CE  500A               	movf	??_atoi^0,w,c
 11062  0012D0  260C               	addwf	(??_atoi+2)^0,f,c
 11063  0012D2  500B               	movf	(??_atoi+1)^0,w,c
 11064  0012D4  220D               	addwfc	(??_atoi+3)^0,f,c
 11065  0012D6  500D               	movf	(??_atoi+3)^0,w,c
 11066  0012D8  E10A               	bnz	u2490
 11067  0012DA  0E0A               	movlw	10
 11068  0012DC  5C0C               	subwf	(??_atoi+2)^0,w,c
 11069  0012DE  A0D8               	btfss	status,0,c
 11070  0012E0  EF74  F009         	goto	u2491
 11071  0012E4  EF77  F009         	goto	u2490
 11072  0012E8                     u2491:
 11073  0012E8  0E01               	movlw	1
 11074  0012EA  EF78  F009         	goto	u2500
 11075  0012EE                     u2490:
 11076  0012EE  0E00               	movlw	0
 11077  0012F0                     u2500:
 11078  0012F0  6E12               	movwf	_atoi$1573^0,c
 11079  0012F2  6A13               	clrf	(_atoi$1573+1)^0,c
 11080  0012F4  5012               	movf	_atoi$1573^0,w,c
 11081  0012F6  1013               	iorwf	(_atoi$1573+1)^0,w,c
 11082  0012F8  A4D8               	btfss	status,2,c
 11083  0012FA  EF81  F009         	goto	u2511
 11084  0012FE  EF83  F009         	goto	u2510
 11085  001302                     u2511:
 11086  001302  EF40  F009         	goto	l3560
 11087  001306                     u2510:
 11088  001306  500E               	movf	atoi@neg^0,w,c
 11089  001308  100F               	iorwf	(atoi@neg+1)^0,w,c
 11090  00130A  A4D8               	btfss	status,2,c
 11091  00130C  EF8A  F009         	goto	u2521
 11092  001310  EF8C  F009         	goto	u2520
 11093  001314                     u2521:
 11094  001314  EF9A  F009         	goto	l1343
 11095  001318                     u2520:
 11096  001318  C015  F00A         	movff	atoi@n,??_atoi
 11097  00131C  C016  F00B         	movff	atoi@n+1,??_atoi+1
 11098  001320  1E0A               	comf	??_atoi^0,f,c
 11099  001322  1E0B               	comf	(??_atoi+1)^0,f,c
 11100  001324  4A0A               	infsnz	??_atoi^0,f,c
 11101  001326  2A0B               	incf	(??_atoi+1)^0,f,c
 11102  001328  C00A  F008         	movff	??_atoi,?_atoi
 11103  00132C  C00B  F009         	movff	??_atoi+1,?_atoi+1
 11104  001330  EF9E  F009         	goto	l1346
 11105  001334                     l1343:
 11106  001334  C015  F008         	movff	atoi@n,?_atoi
 11107  001338  C016  F009         	movff	atoi@n+1,?_atoi+1
 11108  00133C                     l1346:
 11109  00133C  0012               	return		;funcret
 11110  00133E                     __end_of_atoi:
 11111                           	opt callstack 0
 11112                           
 11113 ;; *************** function _isspace *****************
 11114 ;; Defined at:
 11115 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 11116 ;; Parameters:    Size  Location     Type
 11117 ;;  c               2    0[COMRAM] int 
 11118 ;; Auto vars:     Size  Location     Type
 11119 ;;		None
 11120 ;; Return value:  Size  Location     Type
 11121 ;;                  2    0[COMRAM] int 
 11122 ;; Registers used:
 11123 ;;		wreg, status,2, status,0
 11124 ;; Tracked objects:
 11125 ;;		On entry : 0/0
 11126 ;;		On exit  : 0/0
 11127 ;;		Unchanged: 0/0
 11128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11129 ;;      Params:         2       0       0       0       0       0       0       0       0
 11130 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11131 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11132 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11133 ;;Total ram usage:        7 bytes
 11134 ;; Hardware stack levels used:    1
 11135 ;; Hardware stack levels required when called:    1
 11136 ;; This function calls:
 11137 ;;		Nothing
 11138 ;; This function is called by:
 11139 ;;		_atoi
 11140 ;; This function uses a non-reentrant model
 11141 ;;
 11142                           
 11143                           	psect	text54
 11144  002E6C                     __ptext54:
 11145                           	opt callstack 0
 11146  002E6C                     _isspace:
 11147                           	opt callstack 23
 11148  002E6C  0E01               	movlw	1
 11149  002E6E  6E07               	movwf	_isspace$1589^0,c
 11150  002E70  0E20               	movlw	32
 11151  002E72  1801               	xorwf	isspace@c^0,w,c
 11152  002E74  1002               	iorwf	(isspace@c+1)^0,w,c
 11153  002E76  B4D8               	btfsc	status,2,c
 11154  002E78  EF40  F017         	goto	u2191
 11155  002E7C  EF42  F017         	goto	u2190
 11156  002E80                     u2191:
 11157  002E80  EF5B  F017         	goto	l3414
 11158  002E84                     u2190:
 11159  002E84  0EF7               	movlw	247
 11160  002E86  6E03               	movwf	??_isspace^0,c
 11161  002E88  0EFF               	movlw	255
 11162  002E8A  6E04               	movwf	(??_isspace+1)^0,c
 11163  002E8C  C001  F005         	movff	isspace@c,??_isspace+2
 11164  002E90  C002  F006         	movff	isspace@c+1,??_isspace+3
 11165  002E94  5003               	movf	??_isspace^0,w,c
 11166  002E96  2605               	addwf	(??_isspace+2)^0,f,c
 11167  002E98  5004               	movf	(??_isspace+1)^0,w,c
 11168  002E9A  2206               	addwfc	(??_isspace+3)^0,f,c
 11169  002E9C  5006               	movf	(??_isspace+3)^0,w,c
 11170  002E9E  E109               	bnz	u2200
 11171  002EA0  0E05               	movlw	5
 11172  002EA2  5C05               	subwf	(??_isspace+2)^0,w,c
 11173  002EA4  A0D8               	btfss	status,0,c
 11174  002EA6  EF57  F017         	goto	u2201
 11175  002EAA  EF59  F017         	goto	u2200
 11176  002EAE                     u2201:
 11177  002EAE  EF5B  F017         	goto	l3414
 11178  002EB2                     u2200:
 11179  002EB2  0E00               	movlw	0
 11180  002EB4  6E07               	movwf	_isspace$1589^0,c
 11181  002EB6                     l3414:
 11182  002EB6  C007  F001         	movff	_isspace$1589,?_isspace
 11183  002EBA  6A02               	clrf	(?_isspace+1)^0,c
 11184  002EBC  0012               	return		;funcret
 11185  002EBE                     __end_of_isspace:
 11186                           	opt callstack 0
 11187                           
 11188 ;; *************** function _isdigit *****************
 11189 ;; Defined at:
 11190 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 11191 ;; Parameters:    Size  Location     Type
 11192 ;;  c               2    0[COMRAM] int 
 11193 ;; Auto vars:     Size  Location     Type
 11194 ;;		None
 11195 ;; Return value:  Size  Location     Type
 11196 ;;                  2    0[COMRAM] int 
 11197 ;; Registers used:
 11198 ;;		wreg, status,2, status,0
 11199 ;; Tracked objects:
 11200 ;;		On entry : 0/0
 11201 ;;		On exit  : 0/0
 11202 ;;		Unchanged: 0/0
 11203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11204 ;;      Params:         2       0       0       0       0       0       0       0       0
 11205 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11206 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11207 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11208 ;;Total ram usage:        6 bytes
 11209 ;; Hardware stack levels used:    1
 11210 ;; Hardware stack levels required when called:    1
 11211 ;; This function calls:
 11212 ;;		Nothing
 11213 ;; This function is called by:
 11214 ;;		_vfpfcnvrt
 11215 ;;		_atoi
 11216 ;; This function uses a non-reentrant model
 11217 ;;
 11218                           
 11219                           	psect	text55
 11220  003092                     __ptext55:
 11221                           	opt callstack 0
 11222  003092                     _isdigit:
 11223                           	opt callstack 24
 11224  003092  0ED0               	movlw	208
 11225  003094  6E03               	movwf	??_isdigit^0,c
 11226  003096  0EFF               	movlw	255
 11227  003098  6E04               	movwf	(??_isdigit+1)^0,c
 11228  00309A  C001  F005         	movff	isdigit@c,??_isdigit+2
 11229  00309E  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 11230  0030A2  5003               	movf	??_isdigit^0,w,c
 11231  0030A4  2605               	addwf	(??_isdigit+2)^0,f,c
 11232  0030A6  5004               	movf	(??_isdigit+1)^0,w,c
 11233  0030A8  2206               	addwfc	(??_isdigit+3)^0,f,c
 11234  0030AA  5006               	movf	(??_isdigit+3)^0,w,c
 11235  0030AC  E10A               	bnz	u2040
 11236  0030AE  0E0A               	movlw	10
 11237  0030B0  5C05               	subwf	(??_isdigit+2)^0,w,c
 11238  0030B2  A0D8               	btfss	status,0,c
 11239  0030B4  EF5E  F018         	goto	u2041
 11240  0030B8  EF61  F018         	goto	u2040
 11241  0030BC                     u2041:
 11242  0030BC  0E01               	movlw	1
 11243  0030BE  EF62  F018         	goto	u2050
 11244  0030C2                     u2040:
 11245  0030C2  0E00               	movlw	0
 11246  0030C4                     u2050:
 11247  0030C4  6E01               	movwf	?_isdigit^0,c
 11248  0030C6  6A02               	clrf	(?_isdigit+1)^0,c
 11249  0030C8  0012               	return		;funcret
 11250  0030CA                     __end_of_isdigit:
 11251                           	opt callstack 0
 11252                           
 11253 ;; *************** function _getValue *****************
 11254 ;; Defined at:
 11255 ;;		line 854 in file "main.c"
 11256 ;; Parameters:    Size  Location     Type
 11257 ;;  numCharacter    2    3[COMRAM] short 
 11258 ;; Auto vars:     Size  Location     Type
 11259 ;;  i               2   10[COMRAM] int 
 11260 ;;  i               2    8[COMRAM] int 
 11261 ;;  Rx              1   13[COMRAM] unsigned char 
 11262 ;;  dato            1   12[COMRAM] unsigned char 
 11263 ;;  datoIncorrec    1    7[COMRAM] unsigned char 
 11264 ;; Return value:  Size  Location     Type
 11265 ;;                  1    wreg      unsigned char 
 11266 ;; Registers used:
 11267 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11268 ;; Tracked objects:
 11269 ;;		On entry : 0/0
 11270 ;;		On exit  : 0/0
 11271 ;;		Unchanged: 0/0
 11272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11273 ;;      Params:         2       0       0       0       0       0       0       0       0
 11274 ;;      Locals:         7       0       0       0       0       0       0       0       0
 11275 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11276 ;;      Totals:        11       0       0       0       0       0       0       0       0
 11277 ;;Total ram usage:       11 bytes
 11278 ;; Hardware stack levels used:    1
 11279 ;; Hardware stack levels required when called:    3
 11280 ;; This function calls:
 11281 ;;		_UART_printf
 11282 ;;		_UART_read
 11283 ;;		_UART_write
 11284 ;; This function is called by:
 11285 ;;		_setRtc
 11286 ;;		_asignarHorarios
 11287 ;;		_setTiempoRegar
 11288 ;;		_lecturaWifi
 11289 ;;		_regadoRapido
 11290 ;; This function uses a non-reentrant model
 11291 ;;
 11292                           
 11293                           	psect	text56
 11294  000DD0                     __ptext56:
 11295                           	opt callstack 0
 11296  000DD0                     _getValue:
 11297                           	opt callstack 25
 11298  000DD0                     
 11299                           ;main.c: 857:     unsigned char datoIncorrecto = 0;
 11300  000DD0  0E00               	movlw	0
 11301  000DD2  6E08               	movwf	getValue@datoIncorrecto^0,c
 11302                           
 11303                           ;main.c: 858:     unsigned char dato = 0;
 11304  000DD4  0E00               	movlw	0
 11305  000DD6  6E0D               	movwf	getValue@dato^0,c
 11306                           
 11307                           ;main.c: 860:     switch (numCharacters) {
 11308  000DD8  EFC4  F007         	goto	l3988
 11309  000DDC                     l3910:
 11310                           
 11311                           ;main.c: 863:             Rx = UART_read();
 11312  000DDC  ECE3  F016         	call	_UART_read	;wreg free
 11313  000DE0  6E0E               	movwf	getValue@Rx^0,c
 11314  000DE2                     
 11315                           ;main.c: 865:             if (Rx >= 48 && Rx <= 57) {
 11316  000DE2  0E2F               	movlw	47
 11317  000DE4  640E               	cpfsgt	getValue@Rx^0,c
 11318  000DE6  EFF7  F006         	goto	u2971
 11319  000DEA  EFF9  F006         	goto	u2970
 11320  000DEE                     u2971:
 11321  000DEE  EF07  F007         	goto	l3920
 11322  000DF2                     u2970:
 11323  000DF2  0E3A               	movlw	58
 11324  000DF4  600E               	cpfslt	getValue@Rx^0,c
 11325  000DF6  EFFF  F006         	goto	u2981
 11326  000DFA  EF01  F007         	goto	u2980
 11327  000DFE                     u2981:
 11328  000DFE  EF07  F007         	goto	l3920
 11329  000E02                     u2980:
 11330  000E02                     
 11331                           ;main.c: 866:                 Rx -= 48;
 11332  000E02  0E30               	movlw	48
 11333  000E04  5E0E               	subwf	getValue@Rx^0,f,c
 11334  000E06                     
 11335                           ;main.c: 867:                 dato = Rx;
 11336  000E06  C00E  F00D         	movff	getValue@Rx,getValue@dato
 11337                           
 11338                           ;main.c: 868:             } else {
 11339  000E0A  EFDE  F007         	goto	l3990
 11340  000E0E                     l3920:
 11341                           
 11342                           ;main.c: 869:                 UART_write('@');
 11343  000E0E  0E40               	movlw	64
 11344  000E10  EC58  F019         	call	_UART_write
 11345  000E14                     
 11346                           ;main.c: 870:                 datoIncorrecto = 1;
 11347  000E14  0E01               	movlw	1
 11348  000E16  6E08               	movwf	getValue@datoIncorrecto^0,c
 11349  000E18  EFDE  F007         	goto	l3990
 11350  000E1C                     l3924:
 11351                           
 11352                           ;main.c: 876:             for (int i = 0; i < 2; i++) {
 11353  000E1C  0E00               	movlw	0
 11354  000E1E  6E0A               	movwf	(getValue@i+1)^0,c
 11355  000E20  0E00               	movlw	0
 11356  000E22  6E09               	movwf	getValue@i^0,c
 11357  000E24                     l3930:
 11358                           
 11359                           ;main.c: 878:                 Rx = UART_read();
 11360  000E24  ECE3  F016         	call	_UART_read	;wreg free
 11361  000E28  6E0E               	movwf	getValue@Rx^0,c
 11362  000E2A                     
 11363                           ;main.c: 880:                 if (Rx >= 48 && Rx <= 57) {
 11364  000E2A  0E2F               	movlw	47
 11365  000E2C  640E               	cpfsgt	getValue@Rx^0,c
 11366  000E2E  EF1B  F007         	goto	u2991
 11367  000E32  EF1D  F007         	goto	u2990
 11368  000E36                     u2991:
 11369  000E36  EF4B  F007         	goto	l3946
 11370  000E3A                     u2990:
 11371  000E3A  0E3A               	movlw	58
 11372  000E3C  600E               	cpfslt	getValue@Rx^0,c
 11373  000E3E  EF23  F007         	goto	u3001
 11374  000E42  EF25  F007         	goto	u3000
 11375  000E46                     u3001:
 11376  000E46  EF4B  F007         	goto	l3946
 11377  000E4A                     u3000:
 11378  000E4A                     
 11379                           ;main.c: 882:                     Rx -= 48;
 11380  000E4A  0E30               	movlw	48
 11381  000E4C  5E0E               	subwf	getValue@Rx^0,f,c
 11382                           
 11383                           ;main.c: 884:                     switch (i) {
 11384  000E4E  EF35  F007         	goto	l3944
 11385  000E52                     l441:
 11386                           
 11387                           ;main.c: 886:                             dato = Rx;
 11388  000E52  C00E  F00D         	movff	getValue@Rx,getValue@dato
 11389  000E56                     
 11390                           ;main.c: 887:                             dato *= 10;
 11391  000E56  0E0A               	movlw	10
 11392  000E58  020D               	mulwf	getValue@dato^0,c
 11393  000E5A  50F3               	movf	prodl,w,c
 11394  000E5C  6E0D               	movwf	getValue@dato^0,c
 11395                           
 11396                           ;main.c: 888:                             break;
 11397  000E5E  EF52  F007         	goto	l3950
 11398  000E62                     l3940:
 11399                           
 11400                           ;main.c: 891:                             dato += Rx;
 11401  000E62  500E               	movf	getValue@Rx^0,w,c
 11402  000E64  260D               	addwf	getValue@dato^0,f,c
 11403                           
 11404                           ;main.c: 892:                             break;
 11405  000E66  EF52  F007         	goto	l3950
 11406  000E6A                     l3944:
 11407  000E6A  C009  F006         	movff	getValue@i,??_getValue
 11408  000E6E  C00A  F007         	movff	getValue@i+1,??_getValue+1
 11409                           
 11410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11411                           ; Switch size 1, requested type "simple"
 11412                           ; Number of cases is 1, Range of values is 0 to 0
 11413                           ; switch strategies available:
 11414                           ; Name         Instructions Cycles
 11415                           ; simple_byte            4     3 (average)
 11416                           ;	Chosen strategy is simple_byte
 11417  000E72  5007               	movf	(??_getValue+1)^0,w,c
 11418  000E74  0A00               	xorlw	0	; case 0
 11419  000E76  B4D8               	btfsc	status,2,c
 11420  000E78  EF40  F007         	goto	l5144
 11421  000E7C  EF52  F007         	goto	l3950
 11422  000E80                     l5144:
 11423                           
 11424                           ; Switch size 1, requested type "simple"
 11425                           ; Number of cases is 2, Range of values is 0 to 1
 11426                           ; switch strategies available:
 11427                           ; Name         Instructions Cycles
 11428                           ; simple_byte            7     4 (average)
 11429                           ;	Chosen strategy is simple_byte
 11430  000E80  5006               	movf	??_getValue^0,w,c
 11431  000E82  0A00               	xorlw	0	; case 0
 11432  000E84  B4D8               	btfsc	status,2,c
 11433  000E86  EF29  F007         	goto	l441
 11434  000E8A  0A01               	xorlw	1	; case 1
 11435  000E8C  B4D8               	btfsc	status,2,c
 11436  000E8E  EF31  F007         	goto	l3940
 11437  000E92  EF52  F007         	goto	l3950
 11438  000E96                     l3946:
 11439                           
 11440                           ;main.c: 900:                     datoIncorrecto = 1;
 11441  000E96  0E01               	movlw	1
 11442  000E98  6E08               	movwf	getValue@datoIncorrecto^0,c
 11443  000E9A                     
 11444                           ;main.c: 901:                     UART_write('@');
 11445  000E9A  0E40               	movlw	64
 11446  000E9C  EC58  F019         	call	_UART_write
 11447                           
 11448                           ;main.c: 902:                     break;
 11449  000EA0  EFDE  F007         	goto	l3990
 11450  000EA4                     l3950:
 11451                           
 11452                           ;main.c: 904:             }
 11453  000EA4  4A09               	infsnz	getValue@i^0,f,c
 11454  000EA6  2A0A               	incf	(getValue@i+1)^0,f,c
 11455  000EA8  BE0A               	btfsc	(getValue@i+1)^0,7,c
 11456  000EAA  EF60  F007         	goto	u3011
 11457  000EAE  500A               	movf	(getValue@i+1)^0,w,c
 11458  000EB0  E109               	bnz	u3010
 11459  000EB2  0E02               	movlw	2
 11460  000EB4  5C09               	subwf	getValue@i^0,w,c
 11461  000EB6  A0D8               	btfss	status,0,c
 11462  000EB8  EF60  F007         	goto	u3011
 11463  000EBC  EF62  F007         	goto	u3010
 11464  000EC0                     u3011:
 11465  000EC0  EF12  F007         	goto	l3930
 11466  000EC4                     u3010:
 11467  000EC4  EFDE  F007         	goto	l3990
 11468  000EC8                     l3954:
 11469                           
 11470                           ;main.c: 908:             for (int i = 0; i < 3; i++) {
 11471  000EC8  0E00               	movlw	0
 11472  000ECA  6E0C               	movwf	(getValue@i_993+1)^0,c
 11473  000ECC  0E00               	movlw	0
 11474  000ECE  6E0B               	movwf	getValue@i_993^0,c
 11475  000ED0                     l3960:
 11476                           
 11477                           ;main.c: 910:                 Rx = UART_read();
 11478  000ED0  ECE3  F016         	call	_UART_read	;wreg free
 11479  000ED4  6E0E               	movwf	getValue@Rx^0,c
 11480  000ED6                     
 11481                           ;main.c: 912:                 if (Rx >= 48 && Rx <= 57) {
 11482  000ED6  0E2F               	movlw	47
 11483  000ED8  640E               	cpfsgt	getValue@Rx^0,c
 11484  000EDA  EF71  F007         	goto	u3021
 11485  000EDE  EF73  F007         	goto	u3020
 11486  000EE2                     u3021:
 11487  000EE2  EFAB  F007         	goto	l3978
 11488  000EE6                     u3020:
 11489  000EE6  0E3A               	movlw	58
 11490  000EE8  600E               	cpfslt	getValue@Rx^0,c
 11491  000EEA  EF79  F007         	goto	u3031
 11492  000EEE  EF7B  F007         	goto	u3030
 11493  000EF2                     u3031:
 11494  000EF2  EFAB  F007         	goto	l3978
 11495  000EF6                     u3030:
 11496  000EF6                     
 11497                           ;main.c: 914:                     Rx -= 48;
 11498  000EF6  0E30               	movlw	48
 11499  000EF8  5E0E               	subwf	getValue@Rx^0,f,c
 11500                           
 11501                           ;main.c: 916:                     switch (i) {
 11502  000EFA  EF91  F007         	goto	l3976
 11503  000EFE                     l451:
 11504                           
 11505                           ;main.c: 918:                             dato = Rx;
 11506  000EFE  C00E  F00D         	movff	getValue@Rx,getValue@dato
 11507  000F02                     
 11508                           ;main.c: 919:                             dato *= 100;
 11509  000F02  0E64               	movlw	100
 11510  000F04  020D               	mulwf	getValue@dato^0,c
 11511  000F06  50F3               	movf	prodl,w,c
 11512  000F08  6E0D               	movwf	getValue@dato^0,c
 11513                           
 11514                           ;main.c: 920:                             break;
 11515  000F0A  EFB2  F007         	goto	l3982
 11516  000F0E                     l3970:
 11517                           
 11518                           ;main.c: 923:                             dato += (Rx * 10);
 11519  000F0E  500E               	movf	getValue@Rx^0,w,c
 11520  000F10  0D0A               	mullw	10
 11521  000F12  50F3               	movf	243,w,c
 11522  000F14  260D               	addwf	getValue@dato^0,f,c
 11523                           
 11524                           ;main.c: 924:                             break;
 11525  000F16  EFB2  F007         	goto	l3982
 11526  000F1A                     l3972:
 11527                           
 11528                           ;main.c: 927:                             dato += Rx;
 11529  000F1A  500E               	movf	getValue@Rx^0,w,c
 11530  000F1C  260D               	addwf	getValue@dato^0,f,c
 11531                           
 11532                           ;main.c: 928:                             break;
 11533  000F1E  EFB2  F007         	goto	l3982
 11534  000F22                     l3976:
 11535  000F22  C00B  F006         	movff	getValue@i_993,??_getValue
 11536  000F26  C00C  F007         	movff	getValue@i_993+1,??_getValue+1
 11537                           
 11538                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11539                           ; Switch size 1, requested type "simple"
 11540                           ; Number of cases is 1, Range of values is 0 to 0
 11541                           ; switch strategies available:
 11542                           ; Name         Instructions Cycles
 11543                           ; simple_byte            4     3 (average)
 11544                           ;	Chosen strategy is simple_byte
 11545  000F2A  5007               	movf	(??_getValue+1)^0,w,c
 11546  000F2C  0A00               	xorlw	0	; case 0
 11547  000F2E  B4D8               	btfsc	status,2,c
 11548  000F30  EF9C  F007         	goto	l5146
 11549  000F34  EFB2  F007         	goto	l3982
 11550  000F38                     l5146:
 11551                           
 11552                           ; Switch size 1, requested type "simple"
 11553                           ; Number of cases is 3, Range of values is 0 to 2
 11554                           ; switch strategies available:
 11555                           ; Name         Instructions Cycles
 11556                           ; simple_byte           10     6 (average)
 11557                           ;	Chosen strategy is simple_byte
 11558  000F38  5006               	movf	??_getValue^0,w,c
 11559  000F3A  0A00               	xorlw	0	; case 0
 11560  000F3C  B4D8               	btfsc	status,2,c
 11561  000F3E  EF7F  F007         	goto	l451
 11562  000F42  0A01               	xorlw	1	; case 1
 11563  000F44  B4D8               	btfsc	status,2,c
 11564  000F46  EF87  F007         	goto	l3970
 11565  000F4A  0A03               	xorlw	3	; case 2
 11566  000F4C  B4D8               	btfsc	status,2,c
 11567  000F4E  EF8D  F007         	goto	l3972
 11568  000F52  EFB2  F007         	goto	l3982
 11569  000F56                     l3978:
 11570                           
 11571                           ;main.c: 936:                     datoIncorrecto = 1;
 11572  000F56  0E01               	movlw	1
 11573  000F58  6E08               	movwf	getValue@datoIncorrecto^0,c
 11574  000F5A                     
 11575                           ;main.c: 937:                     UART_write('@');
 11576  000F5A  0E40               	movlw	64
 11577  000F5C  EC58  F019         	call	_UART_write
 11578                           
 11579                           ;main.c: 938:                     break;
 11580  000F60  EFDE  F007         	goto	l3990
 11581  000F64                     l3982:
 11582                           
 11583                           ;main.c: 940:             }
 11584  000F64  4A0B               	infsnz	getValue@i_993^0,f,c
 11585  000F66  2A0C               	incf	(getValue@i_993+1)^0,f,c
 11586  000F68  BE0C               	btfsc	(getValue@i_993+1)^0,7,c
 11587  000F6A  EFC0  F007         	goto	u3041
 11588  000F6E  500C               	movf	(getValue@i_993+1)^0,w,c
 11589  000F70  E109               	bnz	u3040
 11590  000F72  0E03               	movlw	3
 11591  000F74  5C0B               	subwf	getValue@i_993^0,w,c
 11592  000F76  A0D8               	btfss	status,0,c
 11593  000F78  EFC0  F007         	goto	u3041
 11594  000F7C  EFC2  F007         	goto	u3040
 11595  000F80                     u3041:
 11596  000F80  EF68  F007         	goto	l3960
 11597  000F84                     u3040:
 11598  000F84  EFDE  F007         	goto	l3990
 11599  000F88                     l3988:
 11600  000F88  C004  F006         	movff	getValue@numCharacters,??_getValue
 11601  000F8C  C005  F007         	movff	getValue@numCharacters+1,??_getValue+1
 11602                           
 11603                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11604                           ; Switch size 1, requested type "simple"
 11605                           ; Number of cases is 1, Range of values is 0 to 0
 11606                           ; switch strategies available:
 11607                           ; Name         Instructions Cycles
 11608                           ; simple_byte            4     3 (average)
 11609                           ;	Chosen strategy is simple_byte
 11610  000F90  5007               	movf	(??_getValue+1)^0,w,c
 11611  000F92  0A00               	xorlw	0	; case 0
 11612  000F94  B4D8               	btfsc	status,2,c
 11613  000F96  EFCF  F007         	goto	l5148
 11614  000F9A  EFDE  F007         	goto	l3990
 11615  000F9E                     l5148:
 11616                           
 11617                           ; Switch size 1, requested type "simple"
 11618                           ; Number of cases is 3, Range of values is 1 to 3
 11619                           ; switch strategies available:
 11620                           ; Name         Instructions Cycles
 11621                           ; simple_byte           10     6 (average)
 11622                           ;	Chosen strategy is simple_byte
 11623  000F9E  5006               	movf	??_getValue^0,w,c
 11624  000FA0  0A01               	xorlw	1	; case 1
 11625  000FA2  B4D8               	btfsc	status,2,c
 11626  000FA4  EFEE  F006         	goto	l3910
 11627  000FA8  0A03               	xorlw	3	; case 2
 11628  000FAA  B4D8               	btfsc	status,2,c
 11629  000FAC  EF0E  F007         	goto	l3924
 11630  000FB0  0A01               	xorlw	1	; case 3
 11631  000FB2  B4D8               	btfsc	status,2,c
 11632  000FB4  EF64  F007         	goto	l3954
 11633  000FB8  EFDE  F007         	goto	l3990
 11634  000FBC                     l3990:
 11635                           
 11636                           ;main.c: 949:     if (esperandoDatos || datoIncorrecto) {
 11637  000FBC  0100               	movlb	0	; () banked
 11638  000FBE  5189               	movf	_esperandoDatos& (0+255),w,b
 11639  000FC0  A4D8               	btfss	status,2,c
 11640  000FC2  EFE5  F007         	goto	u3051
 11641  000FC6  EFE7  F007         	goto	u3050
 11642  000FCA                     u3051:
 11643  000FCA  EFEF  F007         	goto	l3994
 11644  000FCE                     u3050:
 11645  000FCE                     
 11646                           ; BSR set to: 0
 11647  000FCE  5008               	movf	getValue@datoIncorrecto^0,w,c
 11648  000FD0  B4D8               	btfsc	status,2,c
 11649  000FD2  EFED  F007         	goto	u3061
 11650  000FD6  EFEF  F007         	goto	u3060
 11651  000FDA                     u3061:
 11652  000FDA  EFF8  F007         	goto	l4002
 11653  000FDE                     u3060:
 11654  000FDE                     l3994:
 11655                           
 11656                           ; BSR set to: 0
 11657                           ;main.c: 951:         UART_printf("\nFALLO EL SETEO\r\n");
 11658  000FDE  0E94               	movlw	low STR_58
 11659  000FE0  6E02               	movwf	UART_printf@cadena^0,c
 11660  000FE2  0E7F               	movlw	high STR_58
 11661  000FE4  6E03               	movwf	(UART_printf@cadena+1)^0,c
 11662  000FE6  EC2C  F016         	call	_UART_printf	;wreg free
 11663  000FEA                     
 11664                           ;main.c: 952:         return '@';
 11665  000FEA  0E40               	movlw	64
 11666  000FEC  EFF9  F007         	goto	l461
 11667  000FF0                     l4002:
 11668                           
 11669                           ; BSR set to: 0
 11670                           ;main.c: 954:         return dato;
 11671  000FF0  500D               	movf	getValue@dato^0,w,c
 11672  000FF2                     l461:
 11673  000FF2  0012               	return		;funcret
 11674  000FF4                     __end_of_getValue:
 11675                           	opt callstack 0
 11676                           
 11677 ;; *************** function _UART_read *****************
 11678 ;; Defined at:
 11679 ;;		line 34 in file "./UART.h"
 11680 ;; Parameters:    Size  Location     Type
 11681 ;;		None
 11682 ;; Auto vars:     Size  Location     Type
 11683 ;;		None
 11684 ;; Return value:  Size  Location     Type
 11685 ;;                  1    wreg      unsigned char 
 11686 ;; Registers used:
 11687 ;;		wreg, status,2
 11688 ;; Tracked objects:
 11689 ;;		On entry : 0/0
 11690 ;;		On exit  : 0/0
 11691 ;;		Unchanged: 0/0
 11692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11693 ;;      Params:         0       0       0       0       0       0       0       0       0
 11694 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11695 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11696 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11697 ;;Total ram usage:        0 bytes
 11698 ;; Hardware stack levels used:    1
 11699 ;; Hardware stack levels required when called:    1
 11700 ;; This function calls:
 11701 ;;		Nothing
 11702 ;; This function is called by:
 11703 ;;		_lecturaWifi
 11704 ;;		_getValue
 11705 ;; This function uses a non-reentrant model
 11706 ;;
 11707                           
 11708                           	psect	text57
 11709  002DC6                     __ptext57:
 11710                           	opt callstack 0
 11711  002DC6                     _UART_read:
 11712                           	opt callstack 26
 11713  002DC6                     
 11714                           ;./UART.h: 36:     TMR0 = VALOR_TIMER0UART;
 11715  002DC6  0E67               	movlw	103
 11716  002DC8  6ED7               	movwf	215,c	;volatile
 11717  002DCA  0E69               	movlw	105
 11718  002DCC  6ED6               	movwf	214,c	;volatile
 11719                           
 11720                           ;./UART.h: 37:     esperaDatoConcluida = 0;
 11721  002DCE  0E00               	movlw	0
 11722  002DD0  0100               	movlb	0	; () banked
 11723  002DD2  6F8A               	movwf	_esperaDatoConcluida& (0+255),b
 11724                           
 11725                           ;./UART.h: 38:     esperandoDatos = 1;
 11726  002DD4  0E01               	movlw	1
 11727  002DD6  6F89               	movwf	_esperandoDatos& (0+255),b
 11728                           
 11729                           ;./UART.h: 39:     byteUart = 0;
 11730  002DD8  0E00               	movlw	0
 11731  002DDA  6F8B               	movwf	_byteUart& (0+255),b
 11732                           
 11733                           ;./UART.h: 40:     tiempoInactividadTrans = 0;
 11734  002DDC  0E00               	movlw	0
 11735  002DDE  6F8C               	movwf	_tiempoInactividadTrans& (0+255),b
 11736  002DE0                     l129:
 11737                           
 11738                           ; BSR set to: 0
 11739  002DE0  BA9E               	btfsc	158,5,c	;volatile
 11740  002DE2  EFF5  F016         	goto	u2741
 11741  002DE6  EFF7  F016         	goto	u2740
 11742  002DEA                     u2741:
 11743  002DEA  EFFF  F016         	goto	l3740
 11744  002DEE                     u2740:
 11745  002DEE                     
 11746                           ; BSR set to: 0
 11747  002DEE  518A               	movf	_esperaDatoConcluida& (0+255),w,b
 11748  002DF0  B4D8               	btfsc	status,2,c
 11749  002DF2  EFFD  F016         	goto	u2751
 11750  002DF6  EFFF  F016         	goto	u2750
 11751  002DFA                     u2751:
 11752  002DFA  EFF0  F016         	goto	l129
 11753  002DFE                     u2750:
 11754  002DFE                     l3740:
 11755                           
 11756                           ; BSR set to: 0
 11757                           ;./UART.h: 44:     if (!esperaDatoConcluida) {
 11758  002DFE  518A               	movf	_esperaDatoConcluida& (0+255),w,b
 11759  002E00  A4D8               	btfss	status,2,c
 11760  002E02  EF05  F017         	goto	u2761
 11761  002E06  EF07  F017         	goto	u2760
 11762  002E0A                     u2761:
 11763  002E0A  EF0B  F017         	goto	l134
 11764  002E0E                     u2760:
 11765  002E0E                     
 11766                           ; BSR set to: 0
 11767                           ;./UART.h: 45:         byteUart = RCREG;
 11768  002E0E  CFAE F08B          	movff	4014,_byteUart	;volatile
 11769  002E12                     
 11770                           ; BSR set to: 0
 11771                           ;./UART.h: 46:         esperandoDatos = 0;
 11772  002E12  0E00               	movlw	0
 11773  002E14  6F89               	movwf	_esperandoDatos& (0+255),b
 11774  002E16                     l134:
 11775                           
 11776                           ; BSR set to: 0
 11777                           ;./UART.h: 49:     return byteUart;
 11778  002E16  518B               	movf	_byteUart& (0+255),w,b
 11779  002E18                     
 11780                           ; BSR set to: 0
 11781  002E18  0012               	return		;funcret
 11782  002E1A                     __end_of_UART_read:
 11783                           	opt callstack 0
 11784                           
 11785 ;; *************** function _UART_printf *****************
 11786 ;; Defined at:
 11787 ;;		line 57 in file "./UART.h"
 11788 ;; Parameters:    Size  Location     Type
 11789 ;;  cadena          2    1[COMRAM] PTR unsigned char 
 11790 ;;		 -> STR_62(58), STR_61(57), STR_60(57), STR_59(20), 
 11791 ;;		 -> STR_58(18), STR_57(11), STR_56(9), STR_55(17), 
 11792 ;;		 -> STR_48(25), dameDatosSistema@bufferHorario(30), STR_39(26), STR_38(38), 
 11793 ;;		 -> STR_37(36), STR_36(28), STR_35(13), STR_34(42), 
 11794 ;;		 -> STR_33(34), STR_32(3), STR_31(14), STR_30(36), 
 11795 ;;		 -> STR_29(26), STR_28(23), STR_27(34), STR_26(32), 
 11796 ;;		 -> STR_25(49), STR_24(37), STR_23(27), STR_22(37), 
 11797 ;;		 -> STR_21(32), STR_19(38), STR_18(37), STR_17(72), 
 11798 ;;		 -> STR_16(51), STR_15(23), STR_14(26), STR_13(26), 
 11799 ;;		 -> buffer(50), STR_11(37), STR_10(59), STR_9(59), 
 11800 ;;		 -> STR_8(51), STR_7(25), STR_6(37), STR_5(31), 
 11801 ;;		 -> STR_4(43), STR_3(16), STR_2(36), STR_1(65), 
 11802 ;; Auto vars:     Size  Location     Type
 11803 ;;		None
 11804 ;; Return value:  Size  Location     Type
 11805 ;;                  1    wreg      void 
 11806 ;; Registers used:
 11807 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11808 ;; Tracked objects:
 11809 ;;		On entry : 0/0
 11810 ;;		On exit  : 0/0
 11811 ;;		Unchanged: 0/0
 11812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11813 ;;      Params:         2       0       0       0       0       0       0       0       0
 11814 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11815 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11816 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11817 ;;Total ram usage:        2 bytes
 11818 ;; Hardware stack levels used:    1
 11819 ;; Hardware stack levels required when called:    2
 11820 ;; This function calls:
 11821 ;;		_UART_write
 11822 ;; This function is called by:
 11823 ;;		_fijaDiaRtc
 11824 ;;		_fijaHoraRtc
 11825 ;;		_asignarHorarios
 11826 ;;		_setTiempoRegar
 11827 ;;		_lecturaWifi
 11828 ;;		_mostrarMenu
 11829 ;;		_sistemaPrincipal
 11830 ;;		_dameDatosSistema
 11831 ;;		_dameTemperaturaHumedad
 11832 ;;		_mostrarDatosSensores
 11833 ;;		_mostrarDatosSensoresWIFI
 11834 ;;		_getValue
 11835 ;;		_regadoRapido
 11836 ;;		_configBluetoothHC_06
 11837 ;; This function uses a non-reentrant model
 11838 ;;
 11839                           
 11840                           	psect	text58
 11841  002C58                     __ptext58:
 11842                           	opt callstack 0
 11843  002C58                     _UART_printf:
 11844                           	opt callstack 26
 11845  002C58                     
 11846                           ;./UART.h: 58:     while (*cadena) {
 11847  002C58  EF42  F016         	goto	l3754
 11848  002C5C                     l3750:
 11849                           
 11850                           ;./UART.h: 59:         UART_write(*cadena++);
 11851  002C5C  C002  FFF6         	movff	UART_printf@cadena,tblptrl
 11852  002C60  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
 11853  002C64  6AF8               	clrf	tblptru,c
 11854  002C66  0E07               	movlw	(high __ramtop+-1)
 11855  002C68  64F7               	cpfsgt	tblptrh,c
 11856  002C6A  D003               	bra	u2777
 11857  002C6C  0008               	tblrd		*
 11858  002C6E  50F5               	movf	tablat,w,c
 11859  002C70  D005               	bra	u2770
 11860  002C72                     u2777:
 11861  002C72  CFF6 FFE1          	movff	tblptrl,fsr1l
 11862  002C76  CFF7 FFE2          	movff	tblptrh,fsr1h
 11863  002C7A  50E7               	movf	indf1,w,c
 11864  002C7C                     u2770:
 11865  002C7C  EC58  F019         	call	_UART_write
 11866  002C80  4A02               	infsnz	UART_printf@cadena^0,f,c
 11867  002C82  2A03               	incf	(UART_printf@cadena+1)^0,f,c
 11868  002C84                     l3754:
 11869                           
 11870                           ;./UART.h: 58:     while (*cadena) {
 11871  002C84  C002  FFF6         	movff	UART_printf@cadena,tblptrl
 11872  002C88  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
 11873  002C8C  6AF8               	clrf	tblptru,c
 11874  002C8E  0E07               	movlw	(high __ramtop+-1)
 11875  002C90  64F7               	cpfsgt	tblptrh,c
 11876  002C92  D003               	bra	u2787
 11877  002C94  0008               	tblrd		*
 11878  002C96  50F5               	movf	tablat,w,c
 11879  002C98  D005               	bra	u2780
 11880  002C9A                     u2787:
 11881  002C9A  CFF6 FFE1          	movff	tblptrl,fsr1l
 11882  002C9E  CFF7 FFE2          	movff	tblptrh,fsr1h
 11883  002CA2  50E7               	movf	indf1,w,c
 11884  002CA4                     u2780:
 11885  002CA4  0900               	iorlw	0
 11886  002CA6  A4D8               	btfss	status,2,c
 11887  002CA8  EF58  F016         	goto	u2791
 11888  002CAC  EF5A  F016         	goto	u2790
 11889  002CB0                     u2791:
 11890  002CB0  EF2E  F016         	goto	l3750
 11891  002CB4                     u2790:
 11892  002CB4  0012               	return		;funcret
 11893  002CB6                     __end_of_UART_printf:
 11894                           	opt callstack 0
 11895                           
 11896 ;; *************** function _UART_write *****************
 11897 ;; Defined at:
 11898 ;;		line 52 in file "./UART.h"
 11899 ;; Parameters:    Size  Location     Type
 11900 ;;  dato            1    wreg     unsigned char 
 11901 ;; Auto vars:     Size  Location     Type
 11902 ;;  dato            1    0[COMRAM] unsigned char 
 11903 ;; Return value:  Size  Location     Type
 11904 ;;                  1    wreg      void 
 11905 ;; Registers used:
 11906 ;;		wreg
 11907 ;; Tracked objects:
 11908 ;;		On entry : 0/0
 11909 ;;		On exit  : 0/0
 11910 ;;		Unchanged: 0/0
 11911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11912 ;;      Params:         0       0       0       0       0       0       0       0       0
 11913 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11914 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11915 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11916 ;;Total ram usage:        1 bytes
 11917 ;; Hardware stack levels used:    1
 11918 ;; Hardware stack levels required when called:    1
 11919 ;; This function calls:
 11920 ;;		Nothing
 11921 ;; This function is called by:
 11922 ;;		_UART_printf
 11923 ;;		_lecturaWifi
 11924 ;;		_dameDatosSistema
 11925 ;;		_mostrarDatosSensores
 11926 ;;		_mostrarDatosSensoresWIFI
 11927 ;;		_getValue
 11928 ;; This function uses a non-reentrant model
 11929 ;;
 11930                           
 11931                           	psect	text59
 11932  0032B0                     __ptext59:
 11933                           	opt callstack 0
 11934  0032B0                     _UART_write:
 11935                           	opt callstack 26
 11936                           
 11937                           ;incstack = 0
 11938                           ;UART_write@dato stored from wreg
 11939  0032B0  6E01               	movwf	UART_write@dato^0,c
 11940  0032B2                     
 11941                           ;./UART.h: 53:     TXREG = dato;
 11942  0032B2  C001  FFAD         	movff	UART_write@dato,4013	;volatile
 11943  0032B6                     l138:
 11944  0032B6  A2AC               	btfss	172,1,c	;volatile
 11945  0032B8  EF60  F019         	goto	u2551
 11946  0032BC  EF62  F019         	goto	u2550
 11947  0032C0                     u2551:
 11948  0032C0  EF5B  F019         	goto	l138
 11949  0032C4                     u2550:
 11950  0032C4  0012               	return		;funcret
 11951  0032C6                     __end_of_UART_write:
 11952                           	opt callstack 0
 11953                           
 11954 ;; *************** function _escribeHorariosMemoria *****************
 11955 ;; Defined at:
 11956 ;;		line 251 in file "main.c"
 11957 ;; Parameters:    Size  Location     Type
 11958 ;;		None
 11959 ;; Auto vars:     Size  Location     Type
 11960 ;;  j               2   12[COMRAM] int 
 11961 ;;  i               2   16[COMRAM] int 
 11962 ;;  contMemoria     2   14[COMRAM] int 
 11963 ;; Return value:  Size  Location     Type
 11964 ;;                  1    wreg      void 
 11965 ;; Registers used:
 11966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11967 ;; Tracked objects:
 11968 ;;		On entry : 0/0
 11969 ;;		On exit  : 0/0
 11970 ;;		Unchanged: 0/0
 11971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11972 ;;      Params:         0       0       0       0       0       0       0       0       0
 11973 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11974 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11975 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11976 ;;Total ram usage:        8 bytes
 11977 ;; Hardware stack levels used:    1
 11978 ;; Hardware stack levels required when called:    4
 11979 ;; This function calls:
 11980 ;;		___wmul
 11981 ;;		_escribe_eeprom
 11982 ;; This function is called by:
 11983 ;;		_asignarHorarios
 11984 ;;		_setTiempoRegar
 11985 ;; This function uses a non-reentrant model
 11986 ;;
 11987                           
 11988                           	psect	text60
 11989  001A86                     __ptext60:
 11990                           	opt callstack 0
 11991  001A86                     _escribeHorariosMemoria:
 11992                           	opt callstack 24
 11993  001A86                     
 11994                           ;main.c: 253:     int contMemoria = 0;
 11995  001A86  0E00               	movlw	0
 11996  001A88  6E10               	movwf	(escribeHorariosMemoria@contMemoria+1)^0,c
 11997  001A8A  0E00               	movlw	0
 11998  001A8C  6E0F               	movwf	escribeHorariosMemoria@contMemoria^0,c
 11999                           
 12000                           ;main.c: 254:     for (int i = 0; i < 24; i++) {
 12001  001A8E  0E00               	movlw	0
 12002  001A90  6E12               	movwf	(escribeHorariosMemoria@i+1)^0,c
 12003  001A92  0E00               	movlw	0
 12004  001A94  6E11               	movwf	escribeHorariosMemoria@i^0,c
 12005  001A96                     l4212:
 12006                           
 12007                           ;main.c: 255:         escribe_eeprom(contMemoria++, horarios[i].hora);
 12008  001A96  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 12009  001A9A  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 12010  001A9E  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 12011  001AA2  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 12012  001AA6  0E00               	movlw	0
 12013  001AA8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12014  001AAA  0E0C               	movlw	12
 12015  001AAC  6E03               	movwf	___wmul@multiplicand^0,c
 12016  001AAE  EC09  F019         	call	___wmul	;wreg free
 12017  001AB2  0E32               	movlw	low _horarios
 12018  001AB4  2401               	addwf	?___wmul^0,w,c
 12019  001AB6  6ED9               	movwf	fsr2l,c
 12020  001AB8  0E01               	movlw	high _horarios
 12021  001ABA  2002               	addwfc	(?___wmul+1)^0,w,c
 12022  001ABC  6EDA               	movwf	fsr2h,c
 12023  001ABE  50DF               	movf	indf2,w,c
 12024  001AC0  6E09               	movwf	escribe_eeprom@dato^0,c
 12025  001AC2  ECB3  F018         	call	_escribe_eeprom	;wreg free
 12026  001AC6  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 12027  001AC8  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 12028  001ACA                     
 12029                           ;main.c: 257:         for (int j = 0; j < 7; j++) {
 12030  001ACA  0E00               	movlw	0
 12031  001ACC  6E0E               	movwf	(escribeHorariosMemoria@j+1)^0,c
 12032  001ACE  0E00               	movlw	0
 12033  001AD0  6E0D               	movwf	escribeHorariosMemoria@j^0,c
 12034  001AD2                     l4222:
 12035                           
 12036                           ;main.c: 258:             escribe_eeprom(contMemoria++, horarios[i].dias[j]);
 12037  001AD2  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 12038  001AD6  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 12039  001ADA  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 12040  001ADE  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 12041  001AE2  0E00               	movlw	0
 12042  001AE4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12043  001AE6  0E0C               	movlw	12
 12044  001AE8  6E03               	movwf	___wmul@multiplicand^0,c
 12045  001AEA  EC09  F019         	call	___wmul	;wreg free
 12046  001AEE  0E32               	movlw	low _horarios
 12047  001AF0  6E0B               	movwf	??_escribeHorariosMemoria^0,c
 12048  001AF2  0E01               	movlw	high _horarios
 12049  001AF4  6E0C               	movwf	(??_escribeHorariosMemoria+1)^0,c
 12050  001AF6  0E01               	movlw	1
 12051  001AF8  260B               	addwf	??_escribeHorariosMemoria^0,f,c
 12052  001AFA  0E00               	movlw	0
 12053  001AFC  220C               	addwfc	(??_escribeHorariosMemoria+1)^0,f,c
 12054  001AFE  5001               	movf	?___wmul^0,w,c
 12055  001B00  260B               	addwf	??_escribeHorariosMemoria^0,f,c
 12056  001B02  5002               	movf	(?___wmul+1)^0,w,c
 12057  001B04  220C               	addwfc	(??_escribeHorariosMemoria+1)^0,f,c
 12058  001B06  500D               	movf	escribeHorariosMemoria@j^0,w,c
 12059  001B08  240B               	addwf	??_escribeHorariosMemoria^0,w,c
 12060  001B0A  6ED9               	movwf	fsr2l,c
 12061  001B0C  500E               	movf	(escribeHorariosMemoria@j+1)^0,w,c
 12062  001B0E  200C               	addwfc	(??_escribeHorariosMemoria+1)^0,w,c
 12063  001B10  6EDA               	movwf	fsr2h,c
 12064  001B12  50DF               	movf	indf2,w,c
 12065  001B14  6E09               	movwf	escribe_eeprom@dato^0,c
 12066  001B16  ECB3  F018         	call	_escribe_eeprom	;wreg free
 12067  001B1A  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 12068  001B1C  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 12069  001B1E                     
 12070                           ;main.c: 259:         }
 12071  001B1E  4A0D               	infsnz	escribeHorariosMemoria@j^0,f,c
 12072  001B20  2A0E               	incf	(escribeHorariosMemoria@j+1)^0,f,c
 12073  001B22  BE0E               	btfsc	(escribeHorariosMemoria@j+1)^0,7,c
 12074  001B24  EF9D  F00D         	goto	u3251
 12075  001B28  500E               	movf	(escribeHorariosMemoria@j+1)^0,w,c
 12076  001B2A  E109               	bnz	u3250
 12077  001B2C  0E07               	movlw	7
 12078  001B2E  5C0D               	subwf	escribeHorariosMemoria@j^0,w,c
 12079  001B30  A0D8               	btfss	status,0,c
 12080  001B32  EF9D  F00D         	goto	u3251
 12081  001B36  EF9F  F00D         	goto	u3250
 12082  001B3A                     u3251:
 12083  001B3A  EF69  F00D         	goto	l4222
 12084  001B3E                     u3250:
 12085  001B3E                     
 12086                           ;main.c: 261:         escribe_eeprom(contMemoria++, horarios[i].regar);
 12087  001B3E  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 12088  001B42  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 12089  001B46  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 12090  001B4A  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 12091  001B4E  0E00               	movlw	0
 12092  001B50  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12093  001B52  0E0C               	movlw	12
 12094  001B54  6E03               	movwf	___wmul@multiplicand^0,c
 12095  001B56  EC09  F019         	call	___wmul	;wreg free
 12096  001B5A  0E3B               	movlw	low (_horarios+9)
 12097  001B5C  2401               	addwf	?___wmul^0,w,c
 12098  001B5E  6ED9               	movwf	fsr2l,c
 12099  001B60  0E01               	movlw	high (_horarios+9)
 12100  001B62  2002               	addwfc	(?___wmul+1)^0,w,c
 12101  001B64  6EDA               	movwf	fsr2h,c
 12102  001B66  50DF               	movf	indf2,w,c
 12103  001B68  6E09               	movwf	escribe_eeprom@dato^0,c
 12104  001B6A  ECB3  F018         	call	_escribe_eeprom	;wreg free
 12105  001B6E  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 12106  001B70  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 12107  001B72                     
 12108                           ;main.c: 262:         escribe_eeprom(contMemoria++, horarios[i].tiempoRegar);
 12109  001B72  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 12110  001B76  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 12111  001B7A  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 12112  001B7E  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 12113  001B82  0E00               	movlw	0
 12114  001B84  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12115  001B86  0E0C               	movlw	12
 12116  001B88  6E03               	movwf	___wmul@multiplicand^0,c
 12117  001B8A  EC09  F019         	call	___wmul	;wreg free
 12118  001B8E  0E3D               	movlw	low (_horarios+11)
 12119  001B90  2401               	addwf	?___wmul^0,w,c
 12120  001B92  6ED9               	movwf	fsr2l,c
 12121  001B94  0E01               	movlw	high (_horarios+11)
 12122  001B96  2002               	addwfc	(?___wmul+1)^0,w,c
 12123  001B98  6EDA               	movwf	fsr2h,c
 12124  001B9A  50DF               	movf	indf2,w,c
 12125  001B9C  6E09               	movwf	escribe_eeprom@dato^0,c
 12126  001B9E  ECB3  F018         	call	_escribe_eeprom	;wreg free
 12127  001BA2  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 12128  001BA4  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 12129                           
 12130                           ;main.c: 263:     }
 12131  001BA6  4A11               	infsnz	escribeHorariosMemoria@i^0,f,c
 12132  001BA8  2A12               	incf	(escribeHorariosMemoria@i+1)^0,f,c
 12133  001BAA  BE12               	btfsc	(escribeHorariosMemoria@i+1)^0,7,c
 12134  001BAC  EFE1  F00D         	goto	u3261
 12135  001BB0  5012               	movf	(escribeHorariosMemoria@i+1)^0,w,c
 12136  001BB2  E109               	bnz	u3260
 12137  001BB4  0E18               	movlw	24
 12138  001BB6  5C11               	subwf	escribeHorariosMemoria@i^0,w,c
 12139  001BB8  A0D8               	btfss	status,0,c
 12140  001BBA  EFE1  F00D         	goto	u3261
 12141  001BBE  EFE3  F00D         	goto	u3260
 12142  001BC2                     u3261:
 12143  001BC2  EF4B  F00D         	goto	l4212
 12144  001BC6                     u3260:
 12145  001BC6  0012               	return		;funcret
 12146  001BC8                     __end_of_escribeHorariosMemoria:
 12147                           	opt callstack 0
 12148                           
 12149 ;; *************** function _escribe_eeprom *****************
 12150 ;; Defined at:
 12151 ;;		line 222 in file "main.c"
 12152 ;; Parameters:    Size  Location     Type
 12153 ;;  direccion       2    6[COMRAM] unsigned short 
 12154 ;;  dato            1    8[COMRAM] unsigned char 
 12155 ;; Auto vars:     Size  Location     Type
 12156 ;;		None
 12157 ;; Return value:  Size  Location     Type
 12158 ;;                  1    wreg      void 
 12159 ;; Registers used:
 12160 ;;		wreg, status,2, status,0, cstack
 12161 ;; Tracked objects:
 12162 ;;		On entry : 0/0
 12163 ;;		On exit  : 0/0
 12164 ;;		Unchanged: 0/0
 12165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12166 ;;      Params:         3       0       0       0       0       0       0       0       0
 12167 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12168 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12169 ;;      Totals:         4       0       0       0       0       0       0       0       0
 12170 ;;Total ram usage:        4 bytes
 12171 ;; Hardware stack levels used:    1
 12172 ;; Hardware stack levels required when called:    3
 12173 ;; This function calls:
 12174 ;;		_i2c_detener
 12175 ;;		_i2c_envia_dato
 12176 ;;		_i2c_inicia_com
 12177 ;; This function is called by:
 12178 ;;		_escribeHorariosMemoria
 12179 ;; This function uses a non-reentrant model
 12180 ;;
 12181                           
 12182                           	psect	text61
 12183  003166                     __ptext61:
 12184                           	opt callstack 0
 12185  003166                     _escribe_eeprom:
 12186                           	opt callstack 24
 12187  003166                     
 12188                           ;main.c: 223:     i2c_inicia_com();
 12189  003166  EC90  F019         	call	_i2c_inicia_com	;wreg free
 12190                           
 12191                           ;main.c: 224:     i2c_envia_dato(0xAE);
 12192  00316A  0EAE               	movlw	174
 12193  00316C  EC76  F019         	call	_i2c_envia_dato
 12194                           
 12195                           ;main.c: 225:     i2c_envia_dato(direccion >> 8);
 12196  003170  5008               	movf	(escribe_eeprom@direccion+1)^0,w,c
 12197  003172  EC76  F019         	call	_i2c_envia_dato
 12198                           
 12199                           ;main.c: 227:     i2c_envia_dato(direccion);
 12200  003176  5007               	movf	escribe_eeprom@direccion^0,w,c
 12201  003178  EC76  F019         	call	_i2c_envia_dato
 12202                           
 12203                           ;main.c: 229:     i2c_envia_dato(dato);
 12204  00317C  5009               	movf	escribe_eeprom@dato^0,w,c
 12205  00317E  EC76  F019         	call	_i2c_envia_dato
 12206                           
 12207                           ;main.c: 230:     i2c_detener();
 12208  003182  EC94  F019         	call	_i2c_detener	;wreg free
 12209  003186                     
 12210                           ;main.c: 231:     _delay((unsigned long)((10)*(4000000/4000.0)));
 12211  003186  0E0D               	movlw	13
 12212  003188  6E0A               	movwf	??_escribe_eeprom^0,c
 12213  00318A  0EFC               	movlw	252
 12214  00318C                     u3947:
 12215  00318C  2EE8               	decfsz	wreg,f,c
 12216  00318E  D7FE               	bra	u3947
 12217  003190  2E0A               	decfsz	??_escribe_eeprom^0,f,c
 12218  003192  D7FC               	bra	u3947
 12219  003194  0012               	return		;funcret
 12220  003196                     __end_of_escribe_eeprom:
 12221                           	opt callstack 0
 12222                           
 12223 ;; *************** function _i2c_inicia_com *****************
 12224 ;; Defined at:
 12225 ;;		line 28 in file "./I2C.h"
 12226 ;; Parameters:    Size  Location     Type
 12227 ;;		None
 12228 ;; Auto vars:     Size  Location     Type
 12229 ;;		None
 12230 ;; Return value:  Size  Location     Type
 12231 ;;                  1    wreg      void 
 12232 ;; Registers used:
 12233 ;;		wreg, status,2, status,0, cstack
 12234 ;; Tracked objects:
 12235 ;;		On entry : 0/0
 12236 ;;		On exit  : 0/0
 12237 ;;		Unchanged: 0/0
 12238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12239 ;;      Params:         0       0       0       0       0       0       0       0       0
 12240 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12241 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12242 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12243 ;;Total ram usage:        0 bytes
 12244 ;; Hardware stack levels used:    1
 12245 ;; Hardware stack levels required when called:    2
 12246 ;; This function calls:
 12247 ;;		_i2c_espera
 12248 ;; This function is called by:
 12249 ;;		_escribe_rtc
 12250 ;;		_leer_rtc
 12251 ;;		_escribe_eeprom
 12252 ;;		_leer_eeprom
 12253 ;; This function uses a non-reentrant model
 12254 ;;
 12255                           
 12256                           	psect	text62
 12257  003320                     __ptext62:
 12258                           	opt callstack 0
 12259  003320                     _i2c_inicia_com:
 12260                           	opt callstack 25
 12261  003320                     
 12262                           ;./I2C.h: 29:     i2c_espera();
 12263  003320  ECF6  F018         	call	_i2c_espera	;wreg free
 12264  003324                     
 12265                           ;./I2C.h: 30:     SSPCON2bits.SEN = 1;
 12266  003324  80C5               	bsf	197,0,c	;volatile
 12267  003326  0012               	return		;funcret
 12268  003328                     __end_of_i2c_inicia_com:
 12269                           	opt callstack 0
 12270                           
 12271 ;; *************** function _i2c_envia_dato *****************
 12272 ;; Defined at:
 12273 ;;		line 57 in file "./I2C.h"
 12274 ;; Parameters:    Size  Location     Type
 12275 ;;  dato            1    wreg     unsigned char 
 12276 ;; Auto vars:     Size  Location     Type
 12277 ;;  dato            1    1[COMRAM] unsigned char 
 12278 ;; Return value:  Size  Location     Type
 12279 ;;                  1    wreg      unsigned char 
 12280 ;; Registers used:
 12281 ;;		wreg, status,2, status,0, cstack
 12282 ;; Tracked objects:
 12283 ;;		On entry : 0/0
 12284 ;;		On exit  : 0/0
 12285 ;;		Unchanged: 0/0
 12286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12287 ;;      Params:         0       0       0       0       0       0       0       0       0
 12288 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12289 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12290 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12291 ;;Total ram usage:        1 bytes
 12292 ;; Hardware stack levels used:    1
 12293 ;; Hardware stack levels required when called:    2
 12294 ;; This function calls:
 12295 ;;		_i2c_espera
 12296 ;; This function is called by:
 12297 ;;		_escribe_rtc
 12298 ;;		_leer_rtc
 12299 ;;		_escribe_eeprom
 12300 ;;		_leer_eeprom
 12301 ;; This function uses a non-reentrant model
 12302 ;;
 12303                           
 12304                           	psect	text63
 12305  0032EC                     __ptext63:
 12306                           	opt callstack 0
 12307  0032EC                     _i2c_envia_dato:
 12308                           	opt callstack 25
 12309                           
 12310                           ;incstack = 0
 12311                           ;i2c_envia_dato@dato stored from wreg
 12312  0032EC  6E02               	movwf	i2c_envia_dato@dato^0,c
 12313  0032EE                     
 12314                           ;./I2C.h: 58:     i2c_espera();
 12315  0032EE  ECF6  F018         	call	_i2c_espera	;wreg free
 12316  0032F2                     
 12317                           ;./I2C.h: 59:     SSPBUF = dato;
 12318  0032F2  C002  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
 12319  0032F6  0012               	return		;funcret
 12320  0032F8                     __end_of_i2c_envia_dato:
 12321                           	opt callstack 0
 12322                           
 12323 ;; *************** function _i2c_detener *****************
 12324 ;; Defined at:
 12325 ;;		line 46 in file "./I2C.h"
 12326 ;; Parameters:    Size  Location     Type
 12327 ;;		None
 12328 ;; Auto vars:     Size  Location     Type
 12329 ;;		None
 12330 ;; Return value:  Size  Location     Type
 12331 ;;                  1    wreg      void 
 12332 ;; Registers used:
 12333 ;;		wreg, status,2, status,0, cstack
 12334 ;; Tracked objects:
 12335 ;;		On entry : 0/0
 12336 ;;		On exit  : 0/0
 12337 ;;		Unchanged: 0/0
 12338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12339 ;;      Params:         0       0       0       0       0       0       0       0       0
 12340 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12341 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12342 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12343 ;;Total ram usage:        0 bytes
 12344 ;; Hardware stack levels used:    1
 12345 ;; Hardware stack levels required when called:    2
 12346 ;; This function calls:
 12347 ;;		_i2c_espera
 12348 ;; This function is called by:
 12349 ;;		_escribe_rtc
 12350 ;;		_leer_rtc
 12351 ;;		_escribe_eeprom
 12352 ;;		_leer_eeprom
 12353 ;; This function uses a non-reentrant model
 12354 ;;
 12355                           
 12356                           	psect	text64
 12357  003328                     __ptext64:
 12358                           	opt callstack 0
 12359  003328                     _i2c_detener:
 12360                           	opt callstack 25
 12361  003328                     
 12362                           ;./I2C.h: 47:     i2c_espera();
 12363  003328  ECF6  F018         	call	_i2c_espera	;wreg free
 12364  00332C                     
 12365                           ;./I2C.h: 48:     SSPCON2bits.PEN = 1;
 12366  00332C  84C5               	bsf	197,2,c	;volatile
 12367  00332E  0012               	return		;funcret
 12368  003330                     __end_of_i2c_detener:
 12369                           	opt callstack 0
 12370                           
 12371 ;; *************** function _i2c_espera *****************
 12372 ;; Defined at:
 12373 ;;		line 20 in file "./I2C.h"
 12374 ;; Parameters:    Size  Location     Type
 12375 ;;		None
 12376 ;; Auto vars:     Size  Location     Type
 12377 ;;		None
 12378 ;; Return value:  Size  Location     Type
 12379 ;;                  1    wreg      void 
 12380 ;; Registers used:
 12381 ;;		wreg, status,2, status,0
 12382 ;; Tracked objects:
 12383 ;;		On entry : 0/0
 12384 ;;		On exit  : 0/0
 12385 ;;		Unchanged: 0/0
 12386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12387 ;;      Params:         0       0       0       0       0       0       0       0       0
 12388 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12389 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12390 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12391 ;;Total ram usage:        1 bytes
 12392 ;; Hardware stack levels used:    1
 12393 ;; Hardware stack levels required when called:    1
 12394 ;; This function calls:
 12395 ;;		Nothing
 12396 ;; This function is called by:
 12397 ;;		_i2c_inicia_com
 12398 ;;		_i2c_reinicia_com
 12399 ;;		_i2c_detener
 12400 ;;		_i2c_envia_dato
 12401 ;;		_i2c_recibe_dato
 12402 ;; This function uses a non-reentrant model
 12403 ;;
 12404                           
 12405                           	psect	text65
 12406  0031EC                     __ptext65:
 12407                           	opt callstack 0
 12408  0031EC                     _i2c_espera:
 12409                           	opt callstack 25
 12410  0031EC                     l3580:
 12411  0031EC  CFC5 F001          	movff	4037,??_i2c_espera	;volatile
 12412  0031F0  0E1F               	movlw	31
 12413  0031F2  1601               	andwf	??_i2c_espera^0,f,c
 12414  0031F4  A4D8               	btfss	status,2,c
 12415  0031F6  EFFF  F018         	goto	u2531
 12416  0031FA  EF01  F019         	goto	u2530
 12417  0031FE                     u2531:
 12418  0031FE  EFF6  F018         	goto	l3580
 12419  003202                     u2530:
 12420  003202  B4C7               	btfsc	199,2,c	;volatile
 12421  003204  EF06  F019         	goto	u2541
 12422  003208  EF08  F019         	goto	u2540
 12423  00320C                     u2541:
 12424  00320C  EFF6  F018         	goto	l3580
 12425  003210                     u2540:
 12426  003210  0012               	return		;funcret
 12427  003212                     __end_of_i2c_espera:
 12428                           	opt callstack 0
 12429                           
 12430 ;; *************** function _inicializarObjetos *****************
 12431 ;; Defined at:
 12432 ;;		line 162 in file "main.c"
 12433 ;; Parameters:    Size  Location     Type
 12434 ;;		None
 12435 ;; Auto vars:     Size  Location     Type
 12436 ;;  j               2    8[COMRAM] int 
 12437 ;;  i               2   10[COMRAM] int 
 12438 ;;  i               2   12[COMRAM] int 
 12439 ;; Return value:  Size  Location     Type
 12440 ;;                  1    wreg      void 
 12441 ;; Registers used:
 12442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12443 ;; Tracked objects:
 12444 ;;		On entry : 0/0
 12445 ;;		On exit  : 0/0
 12446 ;;		Unchanged: 0/0
 12447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12448 ;;      Params:         0       0       0       0       0       0       0       0       0
 12449 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12450 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12451 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12452 ;;Total ram usage:        8 bytes
 12453 ;; Hardware stack levels used:    1
 12454 ;; Hardware stack levels required when called:    2
 12455 ;; This function calls:
 12456 ;;		___wmul
 12457 ;; This function is called by:
 12458 ;;		_main
 12459 ;; This function uses a non-reentrant model
 12460 ;;
 12461                           
 12462                           	psect	text66
 12463  0017B8                     __ptext66:
 12464                           	opt callstack 0
 12465  0017B8                     _inicializarObjetos:
 12466                           	opt callstack 28
 12467  0017B8                     
 12468                           ;main.c: 164:     for (int i = 0; i < 24; i++) {
 12469  0017B8  0E00               	movlw	0
 12470  0017BA  6E0E               	movwf	(inicializarObjetos@i+1)^0,c
 12471  0017BC  0E00               	movlw	0
 12472  0017BE  6E0D               	movwf	inicializarObjetos@i^0,c
 12473  0017C0                     l4714:
 12474                           
 12475                           ;main.c: 165:         horarios[i].hora = i;
 12476  0017C0  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 12477  0017C4  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 12478  0017C8  0E00               	movlw	0
 12479  0017CA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12480  0017CC  0E0C               	movlw	12
 12481  0017CE  6E03               	movwf	___wmul@multiplicand^0,c
 12482  0017D0  EC09  F019         	call	___wmul	;wreg free
 12483  0017D4  0E32               	movlw	low _horarios
 12484  0017D6  2401               	addwf	?___wmul^0,w,c
 12485  0017D8  6ED9               	movwf	fsr2l,c
 12486  0017DA  0E01               	movlw	high _horarios
 12487  0017DC  2002               	addwfc	(?___wmul+1)^0,w,c
 12488  0017DE  6EDA               	movwf	fsr2h,c
 12489  0017E0  C00D  FFDF         	movff	inicializarObjetos@i,indf2
 12490                           
 12491                           ;main.c: 166:         horarios[i].regar = 0;
 12492  0017E4  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 12493  0017E8  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 12494  0017EC  0E00               	movlw	0
 12495  0017EE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12496  0017F0  0E0C               	movlw	12
 12497  0017F2  6E03               	movwf	___wmul@multiplicand^0,c
 12498  0017F4  EC09  F019         	call	___wmul	;wreg free
 12499  0017F8  0E3B               	movlw	low (_horarios+9)
 12500  0017FA  2401               	addwf	?___wmul^0,w,c
 12501  0017FC  6ED9               	movwf	fsr2l,c
 12502  0017FE  0E01               	movlw	high (_horarios+9)
 12503  001800  2002               	addwfc	(?___wmul+1)^0,w,c
 12504  001802  6EDA               	movwf	fsr2h,c
 12505  001804  0E00               	movlw	0
 12506  001806  6EDF               	movwf	indf2,c
 12507                           
 12508                           ;main.c: 167:         horarios[i].regado = 0;
 12509  001808  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 12510  00180C  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 12511  001810  0E00               	movlw	0
 12512  001812  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12513  001814  0E0C               	movlw	12
 12514  001816  6E03               	movwf	___wmul@multiplicand^0,c
 12515  001818  EC09  F019         	call	___wmul	;wreg free
 12516  00181C  0E3C               	movlw	low (_horarios+10)
 12517  00181E  2401               	addwf	?___wmul^0,w,c
 12518  001820  6ED9               	movwf	fsr2l,c
 12519  001822  0E01               	movlw	high (_horarios+10)
 12520  001824  2002               	addwfc	(?___wmul+1)^0,w,c
 12521  001826  6EDA               	movwf	fsr2h,c
 12522  001828  0E00               	movlw	0
 12523  00182A  6EDF               	movwf	indf2,c
 12524                           
 12525                           ;main.c: 168:         horarios[i].tiempoRegar = 15;
 12526  00182C  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 12527  001830  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 12528  001834  0E00               	movlw	0
 12529  001836  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12530  001838  0E0C               	movlw	12
 12531  00183A  6E03               	movwf	___wmul@multiplicand^0,c
 12532  00183C  EC09  F019         	call	___wmul	;wreg free
 12533  001840  0E3D               	movlw	low (_horarios+11)
 12534  001842  2401               	addwf	?___wmul^0,w,c
 12535  001844  6ED9               	movwf	fsr2l,c
 12536  001846  0E01               	movlw	high (_horarios+11)
 12537  001848  2002               	addwfc	(?___wmul+1)^0,w,c
 12538  00184A  6EDA               	movwf	fsr2h,c
 12539  00184C  0E0F               	movlw	15
 12540  00184E  6EDF               	movwf	indf2,c
 12541  001850                     
 12542                           ;main.c: 169:     }
 12543  001850  4A0D               	infsnz	inicializarObjetos@i^0,f,c
 12544  001852  2A0E               	incf	(inicializarObjetos@i+1)^0,f,c
 12545  001854  BE0E               	btfsc	(inicializarObjetos@i+1)^0,7,c
 12546  001856  EF36  F00C         	goto	u3641
 12547  00185A  500E               	movf	(inicializarObjetos@i+1)^0,w,c
 12548  00185C  E109               	bnz	u3640
 12549  00185E  0E18               	movlw	24
 12550  001860  5C0D               	subwf	inicializarObjetos@i^0,w,c
 12551  001862  A0D8               	btfss	status,0,c
 12552  001864  EF36  F00C         	goto	u3641
 12553  001868  EF38  F00C         	goto	u3640
 12554  00186C                     u3641:
 12555  00186C  EFE0  F00B         	goto	l4714
 12556  001870                     u3640:
 12557  001870                     
 12558                           ;main.c: 171:     for (int i = 0; i < 24; i++) {
 12559  001870  0E00               	movlw	0
 12560  001872  6E0C               	movwf	(inicializarObjetos@i_809+1)^0,c
 12561  001874  0E00               	movlw	0
 12562  001876  6E0B               	movwf	inicializarObjetos@i_809^0,c
 12563  001878                     l4726:
 12564                           
 12565                           ;main.c: 173:         for (int j = 0; j < 7; j++)
 12566  001878  0E00               	movlw	0
 12567  00187A  6E0A               	movwf	(inicializarObjetos@j+1)^0,c
 12568  00187C  0E00               	movlw	0
 12569  00187E  6E09               	movwf	inicializarObjetos@j^0,c
 12570  001880                     l4732:
 12571                           
 12572                           ;main.c: 174:             horarios[i].dias[j] = 0;
 12573  001880  C00B  F001         	movff	inicializarObjetos@i_809,___wmul@multiplier
 12574  001884  C00C  F002         	movff	inicializarObjetos@i_809+1,___wmul@multiplier+1
 12575  001888  0E00               	movlw	0
 12576  00188A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12577  00188C  0E0C               	movlw	12
 12578  00188E  6E03               	movwf	___wmul@multiplicand^0,c
 12579  001890  EC09  F019         	call	___wmul	;wreg free
 12580  001894  0E32               	movlw	low _horarios
 12581  001896  6E07               	movwf	??_inicializarObjetos^0,c
 12582  001898  0E01               	movlw	high _horarios
 12583  00189A  6E08               	movwf	(??_inicializarObjetos+1)^0,c
 12584  00189C  0E01               	movlw	1
 12585  00189E  2607               	addwf	??_inicializarObjetos^0,f,c
 12586  0018A0  0E00               	movlw	0
 12587  0018A2  2208               	addwfc	(??_inicializarObjetos+1)^0,f,c
 12588  0018A4  5001               	movf	?___wmul^0,w,c
 12589  0018A6  2607               	addwf	??_inicializarObjetos^0,f,c
 12590  0018A8  5002               	movf	(?___wmul+1)^0,w,c
 12591  0018AA  2208               	addwfc	(??_inicializarObjetos+1)^0,f,c
 12592  0018AC  5009               	movf	inicializarObjetos@j^0,w,c
 12593  0018AE  2407               	addwf	??_inicializarObjetos^0,w,c
 12594  0018B0  6ED9               	movwf	fsr2l,c
 12595  0018B2  500A               	movf	(inicializarObjetos@j+1)^0,w,c
 12596  0018B4  2008               	addwfc	(??_inicializarObjetos+1)^0,w,c
 12597  0018B6  6EDA               	movwf	fsr2h,c
 12598  0018B8  0E00               	movlw	0
 12599  0018BA  6EDF               	movwf	indf2,c
 12600  0018BC  4A09               	infsnz	inicializarObjetos@j^0,f,c
 12601  0018BE  2A0A               	incf	(inicializarObjetos@j+1)^0,f,c
 12602  0018C0  BE0A               	btfsc	(inicializarObjetos@j+1)^0,7,c
 12603  0018C2  EF6C  F00C         	goto	u3651
 12604  0018C6  500A               	movf	(inicializarObjetos@j+1)^0,w,c
 12605  0018C8  E109               	bnz	u3650
 12606  0018CA  0E07               	movlw	7
 12607  0018CC  5C09               	subwf	inicializarObjetos@j^0,w,c
 12608  0018CE  A0D8               	btfss	status,0,c
 12609  0018D0  EF6C  F00C         	goto	u3651
 12610  0018D4  EF6E  F00C         	goto	u3650
 12611  0018D8                     u3651:
 12612  0018D8  EF40  F00C         	goto	l4732
 12613  0018DC                     u3650:
 12614  0018DC                     
 12615                           ;main.c: 176:         horarios[i].dias[7 - 1] = '\0';
 12616  0018DC  C00B  F001         	movff	inicializarObjetos@i_809,___wmul@multiplier
 12617  0018E0  C00C  F002         	movff	inicializarObjetos@i_809+1,___wmul@multiplier+1
 12618  0018E4  0E00               	movlw	0
 12619  0018E6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12620  0018E8  0E0C               	movlw	12
 12621  0018EA  6E03               	movwf	___wmul@multiplicand^0,c
 12622  0018EC  EC09  F019         	call	___wmul	;wreg free
 12623  0018F0  0E39               	movlw	low (_horarios+7)
 12624  0018F2  2401               	addwf	?___wmul^0,w,c
 12625  0018F4  6ED9               	movwf	fsr2l,c
 12626  0018F6  0E01               	movlw	high (_horarios+7)
 12627  0018F8  2002               	addwfc	(?___wmul+1)^0,w,c
 12628  0018FA  6EDA               	movwf	fsr2h,c
 12629  0018FC  0E00               	movlw	0
 12630  0018FE  6EDF               	movwf	indf2,c
 12631  001900                     
 12632                           ;main.c: 177:     }
 12633  001900  4A0B               	infsnz	inicializarObjetos@i_809^0,f,c
 12634  001902  2A0C               	incf	(inicializarObjetos@i_809+1)^0,f,c
 12635  001904  BE0C               	btfsc	(inicializarObjetos@i_809+1)^0,7,c
 12636  001906  EF8E  F00C         	goto	u3661
 12637  00190A  500C               	movf	(inicializarObjetos@i_809+1)^0,w,c
 12638  00190C  E109               	bnz	u3660
 12639  00190E  0E18               	movlw	24
 12640  001910  5C0B               	subwf	inicializarObjetos@i_809^0,w,c
 12641  001912  A0D8               	btfss	status,0,c
 12642  001914  EF8E  F00C         	goto	u3661
 12643  001918  EF90  F00C         	goto	u3660
 12644  00191C                     u3661:
 12645  00191C  EF3C  F00C         	goto	l4726
 12646  001920                     u3660:
 12647  001920  0012               	return		;funcret
 12648  001922                     __end_of_inicializarObjetos:
 12649                           	opt callstack 0
 12650                           
 12651 ;; *************** function ___wmul *****************
 12652 ;; Defined at:
 12653 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 12654 ;; Parameters:    Size  Location     Type
 12655 ;;  multiplier      2    0[COMRAM] unsigned int 
 12656 ;;  multiplicand    2    2[COMRAM] unsigned int 
 12657 ;; Auto vars:     Size  Location     Type
 12658 ;;  product         2    4[COMRAM] unsigned int 
 12659 ;; Return value:  Size  Location     Type
 12660 ;;                  2    0[COMRAM] unsigned int 
 12661 ;; Registers used:
 12662 ;;		wreg, status,2, status,0, prodl, prodh
 12663 ;; Tracked objects:
 12664 ;;		On entry : 0/0
 12665 ;;		On exit  : 0/0
 12666 ;;		Unchanged: 0/0
 12667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12668 ;;      Params:         4       0       0       0       0       0       0       0       0
 12669 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12670 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12671 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12672 ;;Total ram usage:        6 bytes
 12673 ;; Hardware stack levels used:    1
 12674 ;; Hardware stack levels required when called:    1
 12675 ;; This function calls:
 12676 ;;		Nothing
 12677 ;; This function is called by:
 12678 ;;		_inicializarObjetos
 12679 ;;		_escribeHorariosMemoria
 12680 ;;		_leeHorariosMemoria
 12681 ;;		_dameDatosSistema
 12682 ;;		_atoi
 12683 ;; This function uses a non-reentrant model
 12684 ;;
 12685                           
 12686                           	psect	text67
 12687  003212                     __ptext67:
 12688                           	opt callstack 0
 12689  003212                     ___wmul:
 12690                           	opt callstack 23
 12691  003212  5001               	movf	___wmul@multiplier^0,w,c
 12692  003214  0203               	mulwf	___wmul@multiplicand^0,c
 12693  003216  CFF3 F005          	movff	prodl,___wmul@product
 12694  00321A  CFF4 F006          	movff	prodh,___wmul@product+1
 12695  00321E  5001               	movf	___wmul@multiplier^0,w,c
 12696  003220  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 12697  003222  50F3               	movf	243,w,c
 12698  003224  2606               	addwf	(___wmul@product+1)^0,f,c
 12699  003226  5002               	movf	(___wmul@multiplier+1)^0,w,c
 12700  003228  0203               	mulwf	___wmul@multiplicand^0,c
 12701  00322A  50F3               	movf	243,w,c
 12702  00322C  2606               	addwf	(___wmul@product+1)^0,f,c
 12703  00322E  C005  F001         	movff	___wmul@product,?___wmul
 12704  003232  C006  F002         	movff	___wmul@product+1,?___wmul+1
 12705  003236  0012               	return		;funcret
 12706  003238                     __end_of___wmul:
 12707                           	opt callstack 0
 12708                           
 12709 ;; *************** function _i2c_iniciar *****************
 12710 ;; Defined at:
 12711 ;;		line 4 in file "./I2C.h"
 12712 ;; Parameters:    Size  Location     Type
 12713 ;;		None
 12714 ;; Auto vars:     Size  Location     Type
 12715 ;;		None
 12716 ;; Return value:  Size  Location     Type
 12717 ;;                  1    wreg      void 
 12718 ;; Registers used:
 12719 ;;		wreg, status,2
 12720 ;; Tracked objects:
 12721 ;;		On entry : 0/0
 12722 ;;		On exit  : 0/0
 12723 ;;		Unchanged: 0/0
 12724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12725 ;;      Params:         0       0       0       0       0       0       0       0       0
 12726 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12727 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12728 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12729 ;;Total ram usage:        0 bytes
 12730 ;; Hardware stack levels used:    1
 12731 ;; Hardware stack levels required when called:    1
 12732 ;; This function calls:
 12733 ;;		Nothing
 12734 ;; This function is called by:
 12735 ;;		_main
 12736 ;; This function uses a non-reentrant model
 12737 ;;
 12738                           
 12739                           	psect	text68
 12740  0032C6                     __ptext68:
 12741                           	opt callstack 0
 12742  0032C6                     _i2c_iniciar:
 12743                           	opt callstack 29
 12744  0032C6                     
 12745                           ;./I2C.h: 5:     TRISBbits.RB0 = 1;
 12746  0032C6  8093               	bsf	147,0,c	;volatile
 12747                           
 12748                           ;./I2C.h: 6:     TRISBbits.RB1 = 1;
 12749  0032C8  8293               	bsf	147,1,c	;volatile
 12750  0032CA                     
 12751                           ;./I2C.h: 7:     SSPSTAT = 0b10000000;
 12752  0032CA  0E80               	movlw	128
 12753  0032CC  6EC7               	movwf	199,c	;volatile
 12754                           
 12755                           ;./I2C.h: 8:     SSPCON1 = 0b00101000;
 12756  0032CE  0E28               	movlw	40
 12757  0032D0  6EC6               	movwf	198,c	;volatile
 12758                           
 12759                           ;./I2C.h: 9:     SSPCON2 = 0b00000000;
 12760  0032D2  0E00               	movlw	0
 12761  0032D4  6EC5               	movwf	197,c	;volatile
 12762                           
 12763                           ;./I2C.h: 10:     SSPADD = 9;
 12764  0032D6  0E09               	movlw	9
 12765  0032D8  6EC8               	movwf	200,c	;volatile
 12766  0032DA  0012               	return		;funcret
 12767  0032DC                     __end_of_i2c_iniciar:
 12768                           	opt callstack 0
 12769                           
 12770 ;; *************** function _configurarAdc *****************
 12771 ;; Defined at:
 12772 ;;		line 143 in file "main.c"
 12773 ;; Parameters:    Size  Location     Type
 12774 ;;		None
 12775 ;; Auto vars:     Size  Location     Type
 12776 ;;		None
 12777 ;; Return value:  Size  Location     Type
 12778 ;;                  1    wreg      void 
 12779 ;; Registers used:
 12780 ;;		wreg, status,2
 12781 ;; Tracked objects:
 12782 ;;		On entry : 0/0
 12783 ;;		On exit  : 0/0
 12784 ;;		Unchanged: 0/0
 12785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12786 ;;      Params:         0       0       0       0       0       0       0       0       0
 12787 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12788 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12789 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12790 ;;Total ram usage:        0 bytes
 12791 ;; Hardware stack levels used:    1
 12792 ;; Hardware stack levels required when called:    1
 12793 ;; This function calls:
 12794 ;;		Nothing
 12795 ;; This function is called by:
 12796 ;;		_main
 12797 ;; This function uses a non-reentrant model
 12798 ;;
 12799                           
 12800                           	psect	text69
 12801  00330E                     __ptext69:
 12802                           	opt callstack 0
 12803  00330E                     _configurarAdc:
 12804                           	opt callstack 29
 12805  00330E                     
 12806                           ;main.c: 144:     ADCON1 = 0b00000110;
 12807  00330E  0E06               	movlw	6
 12808  003310  6EC1               	movwf	193,c	;volatile
 12809                           
 12810                           ;main.c: 145:     ADCON2 = 0b10100101;
 12811  003312  0EA5               	movlw	165
 12812  003314  6EC0               	movwf	192,c	;volatile
 12813  003316  0012               	return		;funcret
 12814  003318                     __end_of_configurarAdc:
 12815                           	opt callstack 0
 12816                           
 12817 ;; *************** function _UART_init *****************
 12818 ;; Defined at:
 12819 ;;		line 12 in file "./UART.h"
 12820 ;; Parameters:    Size  Location     Type
 12821 ;;  BAUD            4   26[COMRAM] long 
 12822 ;; Auto vars:     Size  Location     Type
 12823 ;;  frecuenciaCr    4    0        long 
 12824 ;; Return value:  Size  Location     Type
 12825 ;;                  1    wreg      void 
 12826 ;; Registers used:
 12827 ;;		wreg, status,2, status,0, cstack
 12828 ;; Tracked objects:
 12829 ;;		On entry : 0/0
 12830 ;;		On exit  : 0/0
 12831 ;;		Unchanged: 0/0
 12832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12833 ;;      Params:         4       0       0       0       0       0       0       0       0
 12834 ;;      Locals:         8       0       0       0       0       0       0       0       0
 12835 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12836 ;;      Totals:        12       0       0       0       0       0       0       0       0
 12837 ;;Total ram usage:       12 bytes
 12838 ;; Hardware stack levels used:    1
 12839 ;; Hardware stack levels required when called:    2
 12840 ;; This function calls:
 12841 ;;		___aldiv
 12842 ;; This function is called by:
 12843 ;;		_main
 12844 ;; This function uses a non-reentrant model
 12845 ;;
 12846                           
 12847                           	psect	text70
 12848  002A52                     __ptext70:
 12849                           	opt callstack 0
 12850  002A52                     _UART_init:
 12851                           	opt callstack 28
 12852  002A52                     
 12853                           ;./UART.h: 14:     TRISCbits.TRISC6 = 0;
 12854  002A52  9C94               	bcf	148,6,c	;volatile
 12855  002A54                     
 12856                           ;./UART.h: 15:     TRISCbits.TRISC7 = 1;
 12857  002A54  8E94               	bsf	148,7,c	;volatile
 12858  002A56                     
 12859                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 12860  002A56  0E10               	movlw	16
 12861  002A58  6E11               	movwf	___aldiv@divisor^0,c
 12862  002A5A  0E00               	movlw	0
 12863  002A5C  6E12               	movwf	(___aldiv@divisor+1)^0,c
 12864  002A5E  0E00               	movlw	0
 12865  002A60  6E13               	movwf	(___aldiv@divisor+2)^0,c
 12866  002A62  0E00               	movlw	0
 12867  002A64  6E14               	movwf	(___aldiv@divisor+3)^0,c
 12868  002A66  0E00               	movlw	0
 12869  002A68  6E0D               	movwf	___aldiv@dividend^0,c
 12870  002A6A  0E09               	movlw	9
 12871  002A6C  6E0E               	movwf	(___aldiv@dividend+1)^0,c
 12872  002A6E  0E3D               	movlw	61
 12873  002A70  6E0F               	movwf	(___aldiv@dividend+2)^0,c
 12874  002A72  0E00               	movlw	0
 12875  002A74  6E10               	movwf	(___aldiv@dividend+3)^0,c
 12876  002A76  EC1C  F00F         	call	___aldiv	;wreg free
 12877  002A7A  C00D  F023         	movff	?___aldiv,_UART_init$1922
 12878  002A7E  C00E  F024         	movff	?___aldiv+1,_UART_init$1922+1
 12879  002A82  C00F  F025         	movff	?___aldiv+2,_UART_init$1922+2
 12880  002A86  C010  F026         	movff	?___aldiv+3,_UART_init$1922+3
 12881  002A8A                     
 12882                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 12883  002A8A  C023  F00D         	movff	_UART_init$1922,___aldiv@dividend
 12884  002A8E  C024  F00E         	movff	_UART_init$1922+1,___aldiv@dividend+1
 12885  002A92  C025  F00F         	movff	_UART_init$1922+2,___aldiv@dividend+2
 12886  002A96  C026  F010         	movff	_UART_init$1922+3,___aldiv@dividend+3
 12887  002A9A  C01B  F011         	movff	UART_init@BAUD,___aldiv@divisor
 12888  002A9E  C01C  F012         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 12889  002AA2  C01D  F013         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 12890  002AA6  C01E  F014         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 12891  002AAA  EC1C  F00F         	call	___aldiv	;wreg free
 12892  002AAE  040D               	decf	?___aldiv^0,w,c
 12893  002AB0  6EAF               	movwf	175,c	;volatile
 12894  002AB2                     
 12895                           ;./UART.h: 21:     TXSTAbits.BRGH = 1;
 12896  002AB2  84AC               	bsf	172,2,c	;volatile
 12897  002AB4                     
 12898                           ;./UART.h: 22:     TXSTAbits.SYNC = 0;
 12899  002AB4  98AC               	bcf	172,4,c	;volatile
 12900  002AB6                     
 12901                           ;./UART.h: 23:     RCSTAbits.SPEN = 1;
 12902  002AB6  8EAB               	bsf	171,7,c	;volatile
 12903  002AB8                     
 12904                           ;./UART.h: 26:     TXSTAbits.TX9 = 0;
 12905  002AB8  9CAC               	bcf	172,6,c	;volatile
 12906  002ABA                     
 12907                           ;./UART.h: 27:     TXSTAbits.TXEN = 1;
 12908  002ABA  8AAC               	bsf	172,5,c	;volatile
 12909  002ABC                     
 12910                           ;./UART.h: 30:     RCSTAbits.RC9 = 0;
 12911  002ABC  9CAB               	bcf	171,6,c	;volatile
 12912  002ABE                     
 12913                           ;./UART.h: 31:     RCSTAbits.CREN = 1;
 12914  002ABE  88AB               	bsf	171,4,c	;volatile
 12915  002AC0  0012               	return		;funcret
 12916  002AC2                     __end_of_UART_init:
 12917                           	opt callstack 0
 12918                           
 12919 ;; *************** function ___aldiv *****************
 12920 ;; Defined at:
 12921 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 12922 ;; Parameters:    Size  Location     Type
 12923 ;;  dividend        4   12[COMRAM] long 
 12924 ;;  divisor         4   16[COMRAM] long 
 12925 ;; Auto vars:     Size  Location     Type
 12926 ;;  quotient        4   22[COMRAM] long 
 12927 ;;  sign            1   21[COMRAM] unsigned char 
 12928 ;;  counter         1   20[COMRAM] unsigned char 
 12929 ;; Return value:  Size  Location     Type
 12930 ;;                  4   12[COMRAM] long 
 12931 ;; Registers used:
 12932 ;;		wreg, status,2, status,0
 12933 ;; Tracked objects:
 12934 ;;		On entry : 0/0
 12935 ;;		On exit  : 0/0
 12936 ;;		Unchanged: 0/0
 12937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12938 ;;      Params:         8       0       0       0       0       0       0       0       0
 12939 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12940 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12941 ;;      Totals:        14       0       0       0       0       0       0       0       0
 12942 ;;Total ram usage:       14 bytes
 12943 ;; Hardware stack levels used:    1
 12944 ;; Hardware stack levels required when called:    1
 12945 ;; This function calls:
 12946 ;;		Nothing
 12947 ;; This function is called by:
 12948 ;;		_UART_init
 12949 ;;		_map
 12950 ;; This function uses a non-reentrant model
 12951 ;;
 12952                           
 12953                           	psect	text71
 12954  001E38                     __ptext71:
 12955                           	opt callstack 0
 12956  001E38                     ___aldiv:
 12957                           	opt callstack 26
 12958  001E38  0E00               	movlw	0
 12959  001E3A  6E16               	movwf	___aldiv@sign^0,c
 12960  001E3C  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
 12961  001E3E  EF25  F00F         	goto	u2890
 12962  001E42  EF23  F00F         	goto	u2891
 12963  001E46                     u2891:
 12964  001E46  EF2F  F00F         	goto	l3832
 12965  001E4A                     u2890:
 12966  001E4A  1E14               	comf	(___aldiv@divisor+3)^0,f,c
 12967  001E4C  1E13               	comf	(___aldiv@divisor+2)^0,f,c
 12968  001E4E  1E12               	comf	(___aldiv@divisor+1)^0,f,c
 12969  001E50  6C11               	negf	___aldiv@divisor^0,c
 12970  001E52  0E00               	movlw	0
 12971  001E54  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
 12972  001E56  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
 12973  001E58  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
 12974  001E5A  0E01               	movlw	1
 12975  001E5C  6E16               	movwf	___aldiv@sign^0,c
 12976  001E5E                     l3832:
 12977  001E5E  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
 12978  001E60  EF36  F00F         	goto	u2900
 12979  001E64  EF34  F00F         	goto	u2901
 12980  001E68                     u2901:
 12981  001E68  EF40  F00F         	goto	l3838
 12982  001E6C                     u2900:
 12983  001E6C  1E10               	comf	(___aldiv@dividend+3)^0,f,c
 12984  001E6E  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
 12985  001E70  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
 12986  001E72  6C0D               	negf	___aldiv@dividend^0,c
 12987  001E74  0E00               	movlw	0
 12988  001E76  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
 12989  001E78  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
 12990  001E7A  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
 12991  001E7C  0E01               	movlw	1
 12992  001E7E  1A16               	xorwf	___aldiv@sign^0,f,c
 12993  001E80                     l3838:
 12994  001E80  0E00               	movlw	0
 12995  001E82  6E17               	movwf	___aldiv@quotient^0,c
 12996  001E84  0E00               	movlw	0
 12997  001E86  6E18               	movwf	(___aldiv@quotient+1)^0,c
 12998  001E88  0E00               	movlw	0
 12999  001E8A  6E19               	movwf	(___aldiv@quotient+2)^0,c
 13000  001E8C  0E00               	movlw	0
 13001  001E8E  6E1A               	movwf	(___aldiv@quotient+3)^0,c
 13002  001E90  5011               	movf	___aldiv@divisor^0,w,c
 13003  001E92  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
 13004  001E94  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
 13005  001E96  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
 13006  001E98  B4D8               	btfsc	status,2,c
 13007  001E9A  EF51  F00F         	goto	u2911
 13008  001E9E  EF53  F00F         	goto	u2910
 13009  001EA2                     u2911:
 13010  001EA2  EF89  F00F         	goto	l3860
 13011  001EA6                     u2910:
 13012  001EA6  0E01               	movlw	1
 13013  001EA8  6E15               	movwf	___aldiv@counter^0,c
 13014  001EAA  EF5D  F00F         	goto	l3846
 13015  001EAE                     l3844:
 13016  001EAE  90D8               	bcf	status,0,c
 13017  001EB0  3611               	rlcf	___aldiv@divisor^0,f,c
 13018  001EB2  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
 13019  001EB4  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
 13020  001EB6  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
 13021  001EB8  2A15               	incf	___aldiv@counter^0,f,c
 13022  001EBA                     l3846:
 13023  001EBA  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
 13024  001EBC  EF62  F00F         	goto	u2921
 13025  001EC0  EF64  F00F         	goto	u2920
 13026  001EC4                     u2921:
 13027  001EC4  EF57  F00F         	goto	l3844
 13028  001EC8                     u2920:
 13029  001EC8                     l3848:
 13030  001EC8  90D8               	bcf	status,0,c
 13031  001ECA  3617               	rlcf	___aldiv@quotient^0,f,c
 13032  001ECC  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
 13033  001ECE  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
 13034  001ED0  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
 13035  001ED2  5011               	movf	___aldiv@divisor^0,w,c
 13036  001ED4  5C0D               	subwf	___aldiv@dividend^0,w,c
 13037  001ED6  5012               	movf	(___aldiv@divisor+1)^0,w,c
 13038  001ED8  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
 13039  001EDA  5013               	movf	(___aldiv@divisor+2)^0,w,c
 13040  001EDC  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
 13041  001EDE  5014               	movf	(___aldiv@divisor+3)^0,w,c
 13042  001EE0  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
 13043  001EE2  A0D8               	btfss	status,0,c
 13044  001EE4  EF76  F00F         	goto	u2931
 13045  001EE8  EF78  F00F         	goto	u2930
 13046  001EEC                     u2931:
 13047  001EEC  EF81  F00F         	goto	l3856
 13048  001EF0                     u2930:
 13049  001EF0  5011               	movf	___aldiv@divisor^0,w,c
 13050  001EF2  5E0D               	subwf	___aldiv@dividend^0,f,c
 13051  001EF4  5012               	movf	(___aldiv@divisor+1)^0,w,c
 13052  001EF6  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
 13053  001EF8  5013               	movf	(___aldiv@divisor+2)^0,w,c
 13054  001EFA  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
 13055  001EFC  5014               	movf	(___aldiv@divisor+3)^0,w,c
 13056  001EFE  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
 13057  001F00  8017               	bsf	___aldiv@quotient^0,0,c
 13058  001F02                     l3856:
 13059  001F02  90D8               	bcf	status,0,c
 13060  001F04  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
 13061  001F06  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
 13062  001F08  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
 13063  001F0A  3211               	rrcf	___aldiv@divisor^0,f,c
 13064  001F0C  2E15               	decfsz	___aldiv@counter^0,f,c
 13065  001F0E  EF64  F00F         	goto	l3848
 13066  001F12                     l3860:
 13067  001F12  5016               	movf	___aldiv@sign^0,w,c
 13068  001F14  B4D8               	btfsc	status,2,c
 13069  001F16  EF8F  F00F         	goto	u2941
 13070  001F1A  EF91  F00F         	goto	u2940
 13071  001F1E                     u2941:
 13072  001F1E  EF99  F00F         	goto	l3864
 13073  001F22                     u2940:
 13074  001F22  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
 13075  001F24  1E19               	comf	(___aldiv@quotient+2)^0,f,c
 13076  001F26  1E18               	comf	(___aldiv@quotient+1)^0,f,c
 13077  001F28  6C17               	negf	___aldiv@quotient^0,c
 13078  001F2A  0E00               	movlw	0
 13079  001F2C  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
 13080  001F2E  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
 13081  001F30  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
 13082  001F32                     l3864:
 13083  001F32  C017  F00D         	movff	___aldiv@quotient,?___aldiv
 13084  001F36  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
 13085  001F3A  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
 13086  001F3E  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
 13087  001F42  0012               	return		;funcret
 13088  001F44                     __end_of___aldiv:
 13089                           	opt callstack 0
 13090                           
 13091 ;; *************** function _desbordamiento *****************
 13092 ;; Defined at:
 13093 ;;		line 105 in file "main.c"
 13094 ;; Parameters:    Size  Location     Type
 13095 ;;		None
 13096 ;; Auto vars:     Size  Location     Type
 13097 ;;		None
 13098 ;; Return value:  Size  Location     Type
 13099 ;;                  1    wreg      void 
 13100 ;; Registers used:
 13101 ;;		wreg, status,2, status,0
 13102 ;; Tracked objects:
 13103 ;;		On entry : 0/0
 13104 ;;		On exit  : 0/0
 13105 ;;		Unchanged: 0/0
 13106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13107 ;;      Params:         0       0       0       0       0       0       0       0       0
 13108 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13109 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13110 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13111 ;;Total ram usage:        0 bytes
 13112 ;; Hardware stack levels used:    1
 13113 ;; This function calls:
 13114 ;;		Nothing
 13115 ;; This function is called by:
 13116 ;;		Interrupt level 2
 13117 ;; This function uses a non-reentrant model
 13118 ;;
 13119                           
 13120                           	psect	intcode
 13121  000008                     __pintcode:
 13122                           	opt callstack 0
 13123  000008                     _desbordamiento:
 13124                           	opt callstack 19
 13125                           
 13126                           ;incstack = 0
 13127  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13128  00000A  EDFB  F015         	call	int_func,f	;refresh shadow registers
 13129                           
 13130                           	psect	intcode_body
 13131  002BF6                     __pintcode_body:
 13132                           	opt callstack 19
 13133  002BF6                     int_func:
 13134                           	opt callstack 19
 13135  002BF6  0006               	pop		; remove dummy address from shadow register refresh
 13136  002BF8                     
 13137                           ;main.c: 107:     if (INTCONbits.TMR0IF) {
 13138  002BF8  A4F2               	btfss	242,2,c	;volatile
 13139  002BFA  EF01  F016         	goto	i2u379_41
 13140  002BFE  EF03  F016         	goto	i2u379_40
 13141  002C02                     i2u379_41:
 13142  002C02  EF1E  F016         	goto	i2l4852
 13143  002C06                     i2u379_40:
 13144  002C06                     
 13145                           ;main.c: 109:         if (esperandoDatos) {
 13146  002C06  0100               	movlb	0	; () banked
 13147  002C08  5189               	movf	_esperandoDatos& (0+255),w,b
 13148  002C0A  B4D8               	btfsc	status,2,c
 13149  002C0C  EF0A  F016         	goto	i2u380_41
 13150  002C10  EF0C  F016         	goto	i2u380_40
 13151  002C14                     i2u380_41:
 13152  002C14  EF17  F016         	goto	i2l4848
 13153  002C18                     i2u380_40:
 13154  002C18                     
 13155                           ; BSR set to: 0
 13156                           ;main.c: 111:             tiempoInactividadTrans++;
 13157  002C18  2B8C               	incf	_tiempoInactividadTrans& (0+255),f,b
 13158  002C1A                     
 13159                           ; BSR set to: 0
 13160                           ;main.c: 113:             if (tiempoInactividadTrans == 1)
 13161  002C1A  058C               	decf	_tiempoInactividadTrans& (0+255),w,b
 13162  002C1C  A4D8               	btfss	status,2,c
 13163  002C1E  EF13  F016         	goto	i2u381_41
 13164  002C22  EF15  F016         	goto	i2u381_40
 13165  002C26                     i2u381_41:
 13166  002C26  EF17  F016         	goto	i2l4848
 13167  002C2A                     i2u381_40:
 13168  002C2A                     
 13169                           ; BSR set to: 0
 13170                           ;main.c: 114:                 esperaDatoConcluida = 1;
 13171  002C2A  0E01               	movlw	1
 13172  002C2C  6F8A               	movwf	_esperaDatoConcluida& (0+255),b
 13173  002C2E                     i2l4848:
 13174                           
 13175                           ; BSR set to: 0
 13176                           ;main.c: 119:         INTCONbits.TMR0IF = 0;
 13177  002C2E  94F2               	bcf	242,2,c	;volatile
 13178  002C30                     
 13179                           ; BSR set to: 0
 13180                           ;main.c: 120:         TMR0 = VALOR_TIMER0;
 13181  002C30  C0FB  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
 13182  002C34  C0FC  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
 13183                           
 13184                           ;main.c: 121:         overflowTimer = 1;
 13185  002C38  0E01               	movlw	1
 13186  002C3A  6F82               	movwf	_overflowTimer& (0+255),b
 13187  002C3C                     i2l4852:
 13188                           
 13189                           ;main.c: 125:     if (PIR1bits.RCIF) {
 13190  002C3C  AA9E               	btfss	158,5,c	;volatile
 13191  002C3E  EF23  F016         	goto	i2u382_41
 13192  002C42  EF25  F016         	goto	i2u382_40
 13193  002C46                     i2u382_41:
 13194  002C46  EF2A  F016         	goto	i2l217
 13195  002C4A                     i2u382_40:
 13196  002C4A                     
 13197                           ;main.c: 127:         byteUart = RCREG;
 13198  002C4A  CFAE F08B          	movff	4014,_byteUart	;volatile
 13199  002C4E                     
 13200                           ;main.c: 128:         datoRecibido = 1;
 13201  002C4E  0E01               	movlw	1
 13202  002C50  0100               	movlb	0	; () banked
 13203  002C52  6F83               	movwf	_datoRecibido& (0+255),b
 13204  002C54                     i2l217:
 13205  002C54  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13206  002C56  0011               	retfie		f
 13207  002C58                     __end_of_desbordamiento:
 13208                           	opt callstack 0
 13209                           
 13210                           	psect	rparam
 13211  0000                     
 13212                           	psect	temp
 13213  00005F                     btemp:
 13214                           	opt callstack 0
 13215  00005F                     	ds	1
 13216  0000                     int$flags	set	btemp
 13217  0000                     wtemp8	set	btemp+1
 13218  0000                     ttemp5	set	btemp+1
 13219  0000                     ttemp6	set	btemp+4
 13220  0000                     ttemp7	set	btemp+8
 13221                           tosu	equ	0xFFF
 13222                           tosh	equ	0xFFE
 13223                           tosl	equ	0xFFD
 13224                           stkptr	equ	0xFFC
 13225                           pclatu	equ	0xFFB
 13226                           pclath	equ	0xFFA
 13227                           pcl	equ	0xFF9
 13228                           tblptru	equ	0xFF8
 13229                           tblptrh	equ	0xFF7
 13230                           tblptrl	equ	0xFF6
 13231                           tablat	equ	0xFF5
 13232                           prodh	equ	0xFF4
 13233                           prodl	equ	0xFF3
 13234                           indf0	equ	0xFEF
 13235                           postinc0	equ	0xFEE
 13236                           postdec0	equ	0xFED
 13237                           preinc0	equ	0xFEC
 13238                           plusw0	equ	0xFEB
 13239                           fsr0h	equ	0xFEA
 13240                           fsr0l	equ	0xFE9
 13241                           wreg	equ	0xFE8
 13242                           indf1	equ	0xFE7
 13243                           postinc1	equ	0xFE6
 13244                           postdec1	equ	0xFE5
 13245                           preinc1	equ	0xFE4
 13246                           plusw1	equ	0xFE3
 13247                           fsr1h	equ	0xFE2
 13248                           fsr1l	equ	0xFE1
 13249                           bsr	equ	0xFE0
 13250                           indf2	equ	0xFDF
 13251                           postinc2	equ	0xFDE
 13252                           postdec2	equ	0xFDD
 13253                           preinc2	equ	0xFDC
 13254                           plusw2	equ	0xFDB
 13255                           fsr2h	equ	0xFDA
 13256                           fsr2l	equ	0xFD9
 13257                           status	equ	0xFD8


Data Sizes:
    Strings     1794
    Constant    0
    Data        11
    BSS         415
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     71     159
    BANK1           256      0      50
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    dameDatosSistema$1926	PTR unsigned char [8] size(2) Largest target is 288
		 -> horarios(BIGRAM[288]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), horarios(BIGRAM[288]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), horarios(BIGRAM[288]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_54(CODE[45]), STR_53(CODE[29]), STR_52(CODE[32]), STR_51(CODE[45]), 
		 -> STR_50(CODE[29]), STR_49(CODE[32]), STR_47(CODE[24]), STR_46(CODE[25]), 
		 -> STR_45(CODE[24]), STR_44(CODE[27]), STR_43(CODE[24]), STR_42(CODE[23]), 
		 -> STR_41(CODE[25]), STR_40(CODE[24]), STR_20(CODE[51]), STR_12(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> dameDatosSistema@bufferHorario(BANK0[30]), buffer(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> dameDatosSistema@bufferHorario(BANK0[30]), buffer(BANK1[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1593_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> dameDatosSistema@bufferHorario(BANK0[30]), buffer(BANK1[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> dameDatosSistema@bufferHorario(BANK0[30]), buffer(BANK1[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_54(CODE[45]), STR_53(CODE[29]), STR_52(CODE[32]), STR_51(CODE[45]), 
		 -> STR_50(CODE[29]), STR_49(CODE[32]), STR_47(CODE[24]), STR_46(CODE[25]), 
		 -> STR_45(CODE[24]), STR_44(CODE[27]), STR_43(CODE[24]), STR_42(CODE[23]), 
		 -> STR_41(CODE[25]), STR_40(CODE[24]), STR_20(CODE[51]), STR_12(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_54(CODE[45]), STR_53(CODE[29]), STR_52(CODE[32]), STR_51(CODE[45]), 
		 -> STR_50(CODE[29]), STR_49(CODE[32]), STR_47(CODE[24]), STR_46(CODE[25]), 
		 -> STR_45(CODE[24]), STR_44(CODE[27]), STR_43(CODE[24]), STR_42(CODE[23]), 
		 -> STR_41(CODE[25]), STR_40(CODE[24]), STR_20(CODE[51]), STR_12(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 51
		 -> STR_54(CODE[45]), STR_53(CODE[29]), STR_52(CODE[32]), STR_51(CODE[45]), 
		 -> STR_50(CODE[29]), STR_49(CODE[32]), STR_47(CODE[24]), STR_46(CODE[25]), 
		 -> STR_45(CODE[24]), STR_44(CODE[27]), STR_43(CODE[24]), STR_42(CODE[23]), 
		 -> STR_41(CODE[25]), STR_40(CODE[24]), STR_20(CODE[51]), STR_12(CODE[9]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), horarios(BIGRAM[288]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), horarios(BIGRAM[288]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), horarios(BIGRAM[288]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 72
		 -> STR_62(CODE[58]), STR_61(CODE[57]), STR_60(CODE[57]), STR_59(CODE[20]), 
		 -> STR_58(CODE[18]), STR_57(CODE[11]), STR_56(CODE[9]), STR_55(CODE[17]), 
		 -> STR_48(CODE[25]), dameDatosSistema@bufferHorario(BANK0[30]), STR_39(CODE[26]), STR_38(CODE[38]), 
		 -> STR_37(CODE[36]), STR_36(CODE[28]), STR_35(CODE[13]), STR_34(CODE[42]), 
		 -> STR_33(CODE[34]), STR_32(CODE[3]), STR_31(CODE[14]), STR_30(CODE[36]), 
		 -> STR_29(CODE[26]), STR_28(CODE[23]), STR_27(CODE[34]), STR_26(CODE[32]), 
		 -> STR_25(CODE[49]), STR_24(CODE[37]), STR_23(CODE[27]), STR_22(CODE[37]), 
		 -> STR_21(CODE[32]), STR_19(CODE[38]), STR_18(CODE[37]), STR_17(CODE[72]), 
		 -> STR_16(CODE[51]), STR_15(CODE[23]), STR_14(CODE[26]), STR_13(CODE[26]), 
		 -> buffer(BANK1[50]), STR_11(CODE[37]), STR_10(CODE[59]), STR_9(CODE[59]), 
		 -> STR_8(CODE[51]), STR_7(CODE[25]), STR_6(CODE[37]), STR_5(CODE[31]), 
		 -> STR_4(CODE[43]), STR_3(CODE[16]), STR_2(CODE[36]), STR_1(CODE[65]), 


Critical Paths under _main in COMRAM

    _encenderBombas->_estaSeco
    _estaSeco->_dameTemperaturaHumedad
    _dameHoraActual->_leer_rtc
    _dameDiaActual->_leer_rtc
    _leer_rtc->_i2c_envia_dato
    _leer_rtc->_i2c_recibe_dato
    _sistemaPrincipal->_asignarHorarios
    _sistemaPrincipal->_dameDatosSistema
    _setTiempoRegar->_escribeHorariosMemoria
    _regadoRapido->_getValue
    _mostrarMenu->_UART_printf
    _restablecerDatosSensor->_constructorSensor
    _lecturaAnalogaSensores->_map
    _map->___aldiv
    _dameTemperaturaHumedad->_UART_printf
    _leeHorariosMemoria->___wmul
    _leeHorariosMemoria->_leer_eeprom
    _leer_eeprom->_i2c_envia_dato
    _leer_eeprom->_i2c_recibe_dato
    _i2c_reinicia_com->_i2c_espera
    _i2c_recibe_dato->_i2c_espera
    _fijaHoraRtc->_setRtc
    _fijaDiaRtc->_setRtc
    _setRtc->_getValue
    _escribe_rtc->_i2c_envia_dato
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _getValue->_UART_printf
    _UART_printf->_UART_write
    _escribeHorariosMemoria->_escribe_eeprom
    _escribe_eeprom->___wmul
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera
    _inicializarObjetos->___wmul
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _desbordamiento in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sistemaPrincipal
    _sistemaRegado->_lecturaWifi
    _sistemaPrincipal->_dameDatosSistema
    _mostrarDatosSensoresWIFI->_lecturaWifi
    _lecturaWifi->_sprintf
    _mostrarDatosSensores->_sprintf
    _dameDatosSistema->_sprintf
    _asignarHorarios->_sprintf
    _sprintf->_vfprintf

Critical Paths under _desbordamiento in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _desbordamiento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _desbordamiento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _desbordamiento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _desbordamiento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _desbordamiento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _desbordamiento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _desbordamiento in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  278321
                          _UART_init
                      _configurarAdc
                        _i2c_iniciar
                 _inicializarObjetos
                        _mostrarMenu
             _restablecerDatosSensor
                   _sistemaPrincipal
                      _sistemaRegado
 ---------------------------------------------------------------------------------
 (1) _sistemaRegado                                        0     0      0   44731
                      _dameDiaActual
                     _dameHoraActual
                     _encenderBombas
                          _horaRegar
             _lecturaAnalogaSensores
                        _lecturaWifi
                        _mostrarMenu
 ---------------------------------------------------------------------------------
 (2) _horaRegar                                            6     4      2      24
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _encenderBombas                                       5     5      0    5551
                                             14 COMRAM     5     5      0
                           _estaSeco
 ---------------------------------------------------------------------------------
 (3) _estaSeco                                             3     1      2    5276
                                             11 COMRAM     3     1      2
             _dameTemperaturaHumedad
 ---------------------------------------------------------------------------------
 (2) _dameHoraActual                                       0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (2) _dameDiaActual                                        0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (3) _leer_rtc                                             2     2      0      90
                                              2 COMRAM     2     2      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (3) _convertirDato                                        3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _sistemaPrincipal                                     3     3      0  224283
                                             68 BANK0      3     3      0
                        _UART_printf
                    _asignarHorarios
                   _dameDatosSistema
                         _fijaDiaRtc
                        _fijaHoraRtc
                 _leeHorariosMemoria
               _mostrarDatosSensores
           _mostrarDatosSensoresWIFI
                        _mostrarMenu
                       _regadoRapido
                     _setTiempoRegar
 ---------------------------------------------------------------------------------
 (2) _setTiempoRegar                                       2     2      0   14324
                                             18 COMRAM     2     2      0
                        _UART_printf
             _escribeHorariosMemoria
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _regadoRapido                                         4     4      0    9929
                                             14 COMRAM     4     4      0
                        _UART_printf
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _mostrarMenu                                          0     0      0    4323
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensoresWIFI                             3     3      0   64027
                                             92 COMRAM     1     1      0
                                             32 BANK0      2     2      0
                        _UART_printf
                         _UART_write
             _dameTemperaturaHumedad
                        _lecturaWifi
                      _limpiarBuffer
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaWifi                                          4     4      0   32699
                                             28 BANK0      4     4      0
                        _UART_printf
                          _UART_read
                         _UART_write
                           _getValue
                      _limpiarBuffer
             _restablecerDatosSensor
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _restablecerDatosSensor                               2     2      0     387
                                              4 COMRAM     2     2      0
                  _constructorSensor
 ---------------------------------------------------------------------------------
 (4) _constructorSensor                                    4     0      4     297
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensores                                 3     3      0   33100
                                             92 COMRAM     1     1      0
                                             28 BANK0      2     2      0
                        _UART_printf
                         _UART_write
             _dameTemperaturaHumedad
             _lecturaAnalogaSensores
                      _limpiarBuffer
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaAnalogaSensores                               3     3      0    1772
                                             46 COMRAM     3     3      0
                   _dameHumedadSuelo
                                _map
 ---------------------------------------------------------------------------------
 (3) _map                                                 20     0     20    1660
                                             26 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
                   _dameHumedadSuelo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _dameHumedadSuelo                                     5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _dameTemperaturaHumedad                               8     8      0    4622
                                              3 COMRAM     8     8      0
                     _DHT11_ReadData
                        _DHT11_Start
                        _UART_printf
                     _check_response
 ---------------------------------------------------------------------------------
 (5) _check_response                                       1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _leeHorariosMemoria                                   8     8      0    4094
                                              6 COMRAM     8     8      0
                             ___wmul
                        _leer_eeprom
 ---------------------------------------------------------------------------------
 (3) _leer_eeprom                                          4     2      2     416
                                              2 COMRAM     4     2      2
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_recibe_dato                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (2) _fijaHoraRtc                                          0     0      0   11769
                        _UART_printf
                        _escribe_rtc
                             _setRtc
 ---------------------------------------------------------------------------------
 (2) _fijaDiaRtc                                           0     0      0   11323
                        _UART_printf
                             _setRtc
 ---------------------------------------------------------------------------------
 (3) _setRtc                                               4     4      0    7000
                                             14 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                        _escribe_rtc
                           _getValue
 ---------------------------------------------------------------------------------
 (4) _escribe_rtc                                          2     1      1     446
                                              2 COMRAM     2     1      1
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _dameDatosSistema                                    42    42      0   30297
                                             92 COMRAM     2     2      0
                                             28 BANK0     40    40      0
                        _UART_printf
                         _UART_write
                             ___wmul
                      _limpiarBuffer
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _limpiarBuffer                                        2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _asignarHorarios                                      7     7      0   36752
                                             92 COMRAM     2     2      0
                                             28 BANK0      5     5      0
                        _UART_printf
             _escribeHorariosMemoria
                           _getValue
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             22    10     12   22203
                                              6 BANK0     22    10     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   19564
                                             90 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           47    41      6   19174
                                             63 COMRAM    27    21      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5574
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 7     4      3    4145
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3925
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    4376
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _getValue                                            11     9      2    5515
                                              3 COMRAM    11     9      2
                        _UART_printf
                          _UART_read
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2    4323
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _escribeHorariosMemoria                               8     8      0    4374
                                             10 COMRAM     8     8      0
                             ___wmul
                     _escribe_eeprom
 ---------------------------------------------------------------------------------
 (4) _escribe_eeprom                                       4     1      3     696
                                              6 COMRAM     4     1      3
                             ___wmul (ARG)
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializarObjetos                                   8     8      0    3697
                                              6 COMRAM     8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    3383
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     900
                                             26 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     756
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _desbordamiento                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _configurarAdc
   _i2c_iniciar
   _inicializarObjetos
     ___wmul
   _mostrarMenu
     _UART_printf
       _UART_write
   _restablecerDatosSensor
     _constructorSensor
   _sistemaPrincipal
     _UART_printf
       _UART_write
     _asignarHorarios
       _UART_printf
         _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _dameDatosSistema
       _UART_printf
         _UART_write
       _UART_write
       ___wmul
       _limpiarBuffer
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _fijaDiaRtc
       _UART_printf
         _UART_write
       _setRtc
         ___awdiv
         ___awmod
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
     _fijaHoraRtc
       _UART_printf
         _UART_write
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
       _setRtc
         ___awdiv
         ___awmod
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
     _leeHorariosMemoria
       ___wmul
       _leer_eeprom
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _mostrarDatosSensores
       _UART_printf
         _UART_write
       _UART_write
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaAnalogaSensores
         _dameHumedadSuelo
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
           _dameHumedadSuelo (ARG)
       _limpiarBuffer
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _mostrarDatosSensoresWIFI
       _UART_printf
         _UART_write
       _UART_write
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaWifi
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
         _limpiarBuffer
         _restablecerDatosSensor
           _constructorSensor
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _stoa
                 _fputc
                   _putch
                 _strlen
       _limpiarBuffer
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _mostrarMenu
       _UART_printf
         _UART_write
     _regadoRapido
       _UART_printf
         _UART_write
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
     _setTiempoRegar
       _UART_printf
         _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
   _sistemaRegado
     _dameDiaActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _dameHoraActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _encenderBombas
       _estaSeco
         _dameTemperaturaHumedad
           _DHT11_ReadData
           _DHT11_Start
           _UART_printf
             _UART_write
           _check_response
     _horaRegar
     _lecturaAnalogaSensores
       _dameHumedadSuelo
       _map
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _dameHumedadSuelo (ARG)
     _lecturaWifi
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
       _limpiarBuffer
       _restablecerDatosSensor
         _constructorSensor
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _mostrarMenu
       _UART_printf
         _UART_write

 _desbordamiento (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     120      21       14.1%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      32       7       19.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     47      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12F      20        0.0%
DATA                 0      0     24F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jun 22 16:14:00 2020

                 __size_of_escribe_eeprom 0030                                        l83 32DA  
                                      l92 3326                                        l95 331E  
                                      l89 3210                                        l98 332E  
                            ___awdiv@sign 0006                            ?_configurarAdc 0001  
                     ___wmul@multiplicand 0003                               __CFG_BORV$3 000000  
          __end_of_dameTemperaturaHumedad 285E                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                   regadoRapido@tiempoRegar 0011  
                                     l101 32F6                                       l110 31EA  
                                     l104 32AE                                       l113 3256  
                                     l107 3294                                       l220 29E0  
                                     l141 32C4                                       l126 2AC0  
                                     l134 2E16                                       l135 2E18  
                                     l311 2B92                                       l223 330C  
                                     l231 30FE                                       l160 2D10  
                                     l152 2CBE                                       l129 2DE0  
                                     l226 3316                                       l138 32B6  
                                     l330 2734                                       l306 0DCE  
                                     l147 2CB4                                       l163 3276  
                                     l251 32EA                                       l412 2850  
                                     l236 2966                                       l245 1920  
                                     l325 11AC                                       l157 2CEE  
                                     l413 2858                                       l333 2F2E  
                                     l341 2F0A                                       l262 3194  
                                     l406 0882                                       l414 285C  
                                     l350 2034                                       l255 3164  
                                     l335 2F3C                                       l272 1BC6  
                                     l600 010E                                       l168 2FD4  
                                     l336 2F50                                       l248 31C0  
                                     l441 0E52                                       l265 3090  
                                     l425 2124                                       l530 2476  
                                     l451 0EFE                                       l259 2A50  
                                     l355 2694                                       l419 22E6  
                                     l461 0FF2                                       l525 23F8  
                                     l358 28E2                                       l374 2206  
                                     l390 17B6                                       l543 0924  
                                     l623 0592                                       l279 1D00  
                                     l471 1D84                                       l528 243A  
                                     l472 1D8A                                       l537 2DC4  
                                     l545 092C                                       l633 2BEC  
                                     l473 1D90                                       l570 1546  
                                     l634 2BF4                                       l474 1D96  
                                     l563 0B64                                       l475 1D9C  
                                     l716 1F42                                       l572 154E  
                                     l484 3014                                       l476 1DA2  
                                     l637 3236                                       l581 15F8  
                                     l477 1DA8                                       l469 1D7E  
                                     l582 1642                                       l751 14C4  
                                     l479 1E36                                       l648 2B1A  
                                     l649 2B2A                                       l586 164A  
                                     l764 1A84                                       l881 25EA  
                                     l868 253A                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                              __CFG_BOR$OFF 000000  
                                     _abs 3016                                       _pad 23B2  
                                     _map 2968                              ___awmod@sign 0006  
                                     prod 000FF3                                       wreg 000FE8  
                __end_of_dameDatosSistema 0884                              __CFG_LVP$OFF 000000  
                       ?_i2c_reinicia_com 0001                              ?_escribe_rtc 0003  
                            __CFG_WDT$OFF 000000                                      ?_abs 0013  
                                    l1312 304C                                      l1315 3054  
                                    l1343 1334                                      l4002 0FF0  
                                    l1346 133C                                      l4020 3186  
                                    l1372 23B0                                      l1380 2F94  
                                    l3300 2404                                      l4100 24EE  
                                    l1349 30C8                                      l1357 2EBC  
                                    l1390 3330                                      l3302 2418  
                                    l4030 2E58                                      l4022 2E1A  
                                    l4102 2504                                      l4110 251A  
                                    l3320 3212                                      l3304 241C  
                                    l3400 1A44                                      l3312 3016  
                                    l4024 2E2C                                      l4112 252A  
                                    l4104 250C                                      l4120 2540  
                                    l4200 3080                                      l4040 2F2A  
                                    l3322 322E                                      l4018 3166  
                                    l3410 2E84                                      l3306 244A  
                                    l3330 1350                                      l3402 1A64  
                                    l3314 3030                                      l4026 2E34  
                                    l4114 2532                                      l4106 250E  
                                    l4130 2570                                      l4122 254E  
                                    l4202 308E                                      l4042 2F2C  
                                    l4034 2F0E                                      l1387 2E6A  
                                    l4212 1A96                                      l3316 3092  
                                    l3412 2EB2                                      l3260 22FA  
                                    l1396 3134                                      l3308 245E  
                                    l3420 2D80                                      l3340 13A6  
                                    l3332 1370                                      l3500 14F2  
                                    l4028 2E3C                                      l4060 2FD6  
                                    l4108 2514                                      l4140 25B6  
                                    l4132 2582                                      l4124 2556  
                                    l4044 2F3E                                      l4036 2F16  
                                    l4300 290A                                      l4230 1B3E  
                                    l4222 1AD2                                      l4214 1AC6  
                                    l4206 1A86                                      l3414 2EB6  
                                    l3406 2E6C                                      l3262 230C  
                                    l3422 2D8C                                      l3350 13FA  
                                    l3342 13B2                                      l3334 1374  
                                    l3326 133E                                      l3502 14FA  
                                    l4070 2FF2                                      l4150 25E2  
                                    l4142 25BE                                      l4134 258A  
                                    l4126 255A                                      l4118 253C  
                                    l4038 2F18                                      l4054 2EC6  
                                    l4310 3196                                      l4302 292A  
                                    l4232 1B6E                                      l4224 1B1A  
                                    l4216 1ACA                                      l3408 2E70  
                                    l3264 2316                                      l3272 2F52  
                                    l3280 3100                                      l3424 2D98  
                                    l3360 146E                                      l3352 140C  
                                    l3344 13D0                                      l3336 1382  
                                    l3328 1342                                      l3440 08FC  
                                    l3432 0884                                      l3520 15B4  
                                    l3512 1572                                      l3504 150E  
                                    l3600 007C                                      l4072 300E  
                                    l4080 2492                                      l4144 25C4  
                                    l4136 2592                                      l4128 2568  
                                    l4320 1BC8                                      l4056 2EEC  
                                    l4048 2EBE                                      l4240 1F46  
                                    l4160 323A                                      l4312 32DC  
                                    l4400 0CF4                                      l4304 295C  
                                    l4234 1B72                                      l4226 1B1E  
                                    l3266 2334                                      l3258 22E8  
                                    l3274 2F5E                                      l3282 310C  
                                    l3290 23B2                                      l3426 2D9C  
                                    l3418 2D6C                                      l3354 143A  
                                    l3346 13D8                                      l3362 1474  
                                    l3338 13A2                                      l3370 1922  
                                    l3450 0954                                      l3442 08FE  
                                    l3434 08A4                                      l3530 160C  
                                    l3522 15D2                                      l3514 1586  
                                    l3506 1516                                      l4066 2FDE  
                                    l4090 24B8                                      l4082 2496  
                                    l4074 2478                                      l4138 25A0  
                                    l4146 25CA                                      l4314 3136  
                                    l4330 1C0A                                      l4058 2EF0  
                                    l4250 1F64                                      l4242 1F46  
                                    l4162 323A                                      l4154 31C4  
                                    l4170 30CA                                      l5130 0D40  
                                    l4402 0D24                                      l4410 0D86  
                                    l4306 2960                                      l4236 1BAA  
                                    l4228 1B22                                      l3540 11C6  
                                    l3268 236A                                      l3276 2F70  
                                    l3284 3110                                      l3292 23C2  
                                    l3428 2DA0                                      l3364 1484  
                                    l3356 145A                                      l3348 13EC  
                                    l3380 1966                                      l3372 1926  
                                    l3460 09F2                                      l3452 095A  
                                    l3444 0918                                      l3436 08CC  
                                    l3532 1620                                      l3524 15D6  
                                    l3516 158A                                      l3508 1524  
                                    l3700 0542                                      l5140 00CE  
                                    l3620 00A8                                      l3612 0094  
                                    l3604 0084                                      l4068 2FEE  
                                    l4092 24CA                                      l4084 24A4  
                                    l4076 247C                                      l4148 25DA  
                                    l4316 3142                                      l4340 1C5C  
                                    l4260 1F9E                                      l4252 1F76  
                                    l4244 1F4A                                      l4500 26BC  
                                    l5132 21BA                                      l4164 3242  
                                    l4156 31E8                                      l4180 30F8  
                                    l4172 30CE                                      l4412 0D8A  
                                    l5142 126A                                      l3542 11CA  
                                    l3278 2F74                                      l3286 3128  
                                    l3294 23D6                                      l3366 14A4  
                                    l3358 145C                                      l3390 19CE  
                                    l3382 1986                                      l3374 1934  
                                    l3470 0A9A                                      l3462 09F8  
                                    l3454 0962                                      l3446 0934  
                                    l3438 08EC                                      l3534 1624  
                                    l3526 15DA                                      l3518 15A8  
                                    l3702 0550                                      l3630 017A  
                                    l3622 00FC                                      l4094 24D2  
                                    l4086 24AC                                      l4078 248A  
                                    l4190 2A0C                                      l4318 3158  
                                    l4430 2B66                                      l4350 1CE4  
                                    l4342 1C60                                      l4326 1BD8  
                                    l4270 1FFC                                      l4262 1FAA  
                                    l4246 1F50                                      l4238 1F44  
                                    l5134 1DC2                                      l4510 2706  
                                    l4502 26CE                                      l4166 3254  
                                    l4174 30D2                                      l4414 0DA4  
                                    l3720 3320                                      l5144 0E80  
                                    l3560 1280                                      l3552 1226  
                                    l3544 11E6                                      l3536 11AE  
                                    l3296 23E4                                      l3392 19FC  
                                    l3384 19A4                                      l3376 1954  
                                    l3480 0B00                                      l3472 0AB4  
                                    l3464 09FE                                      l3456 096A  
                                    l3448 0946                                      l3632 0188  
                                    l3624 011E                                      l3616 009C  
                                    l3608 008C                                      l4440 101C  
                                    l5136 0832                                      l4520 059A  
                                    l4096 24DA                                      l4088 24B0  
                                    l4192 2A4A                                      l4184 29E4  
                                    l4432 2B7C                                      l4424 2B2C  
                                    l4344 1C7C                                      l4336 1C12  
                                    l4328 1C06                                      l3800 2FD2  
                                    l4280 2032                                      l4272 2000  
                                    l4264 1FBA                                      l4248 1F5C  
                                    l4512 271A                                      l4504 26DA  
                                    l4176 30E2                                      l4416 0DB4  
                                    l4360 0BA6                                      l4408 0D2A  
                                    l4352 0B66                                      l3730 32F2  
                                    l3722 3324                                      l5146 0F38  
                                    l3570 1306                                      l3554 123C  
                                    l3546 121C                                      l3538 11C2  
                                    l3298 23F0                                      l3394 1A1C  
                                    l3386 19AC                                      l3378 1958  
                                    l3482 0B06                                      l3490 0B3C  
                                    l3474 0ACE                                      l3458 0970  
                                    l3466 0A62                                      l3650 0258  
                                    l3642 020A                                      l3634 0196  
                                    l3626 0120                                      l3706 055C  
                                    l3810 2BAA                                      l5138 10F2  
                                    l4450 1072                                      l4442 102E  
                                    l4530 05D6                                      l4522 05A6  
                                    l4098 24E8                                      l4194 2A4E  
                                    l4186 29EC                                      l4434 2B88  
                                    l4426 2B44                                      l4346 1CAA  
                                    l4338 1C58                                      l4290 2666  
                                    l4282 25EC                                      l4274 201A  
                                    l4266 1FCC                                      l4258 1F82  
                                    l4602 20B2                                      l4610 211E  
                                    l4514 2730                                      l4506 26E8  
                                    l4178 30F4                                      l4418 0DBA  
                                    l4370 0BE6                                      l4362 0BA8  
                                    l4700 2ABA                                      l3580 31EC  
                                    l3724 3328                                      l3732 32F6  
                                    l3740 2DFE                                      l5148 0F9E  
                                    l3572 1318                                      l3564 12B6  
                                    l3556 1244                                      l3548 1220  
                                    l3396 1A2E                                      l3388 19C0  
                                    l3484 0B18                                      l3468 0A7C  
                                    l3476 0ADE                                      l3708 0580  
                                    l3652 027C                                      l3636 01B6  
                                    l3644 021C                                      l3628 0144  
                                    l3812 2BD0                                      l4460 10A8  
                                    l4444 103A                                      l4436 0FF4  
                                    l4540 0694                                      l4524 05B2  
                                    l4188 29FA                                      l4428 2B5A  
                                    l4348 1CAE                                      l3900 27D2  
                                    l3820 2AF0                                      l4292 2676  
                                    l4620 2232                                      l4612 2208  
                                    l3804 3304                                      l4268 1FE6  
                                    l4276 202A                                      l4604 20F2  
                                    l4516 285E                                      l4508 26FA  
                                    l4372 0C16                                      l4364 0BB0  
                                    l3830 1E5A                                      l4702 2ABC  
                                    l3582 3202                                      l3726 332C  
                                    l3750 2C5C                                      l3742 2E0E  
                                    l3910 0DDC                                      l3558 124C  
                                    l3398 1A34                                      l3486 0B24  
                                    l3478 0AF0                                      l3494 14C6  
                                    l3662 032A                                      l3654 02B6  
                                    l3646 0240                                      l3638 01C4  
                                    l3590 0044                                      l3806 2B94  
                                    l4462 10B8                                      l4446 104A  
                                    l4438 100C                                      l4550 0718  
                                    l4542 06B6                                      l4526 05BE  
                                    l4518 0594                                      l4198 3056  
                                    l3902 27E6                                      l3822 2AFA  
                                    l3814 2AC2                                      l4294 267A  
                                    l4622 223E                                      l4614 220C  
                                    l4278 202E                                      l4606 20FE  
                                    l4390 0CB8                                      l4382 0C52  
                                    l4366 0BE0                                      l4358 0B76  
                                    ?_map 001B                                      ?_pad 0011  
                                    l3840 1E90                                      l3832 1E5E  
                                    l3824 1E38                                      l4704 2ABE  
                                    l4720 1870                                      l3728 32EE  
                                    l3584 32B2                                      l3752 2C80  
                                    l3744 2E12                                      l3736 2DC6  
                                    l3920 0E0E                                      l3912 0DE2  
                                    l3568 12F4                                      l3488 0B2C  
                                    l3496 14D8                                      l3672 03AE  
                                    l3656 02D6                                      l3648 024A  
                                    l3664 033C                                      l3592 0056  
                                    l3808 2B9C                                      l4480 1154  
                                    l4472 10DE                                      l4456 107C  
                                    l4448 105A                                      l4560 07B0  
                                    l4552 0720                                      l4544 06EA  
                                    l4536 05E0                                      l4528 05CA  
                                    l3904 280A                                      l3816 2AD2  
                                    l4288 25F4                                      l4640 22C6  
                                    l4624 225A                                      l4616 2212  
                                    l4608 2104                                      l4384 0C82  
                                    l4376 0C1C                                      l4296 28E4  
                                    l4800 16B6                                      l3850 1ED2  
                                    l3842 1EA6                                      l3834 1E6C  
                                    l3826 1E3C                                      l4706 330E  
                                    l4714 17C0                                      l3578 31EC  
                                    l3754 2C84                                      l3738 2DEE  
                                    l3930 0E24                                      l3922 0E14  
                                    l3914 0DF2                                      l3498 14E0  
                                    l3690 04F0                                      l3682 0476  
                                    l3674 03D2                                      l3666 0360  
                                    l3658 02E4                                      l3594 005A  
                                    l3586 0012                                      l4490 11A0  
                                    l4482 1168                                      l4474 1108  
                                    l4466 10CE                                      l4458 109C  
                                    l4562 07D4                                      l4554 0744  
                                    l4570 0870                                      l4538 0610  
                                    l4546 06F6                                      l3770 2CFC  
                                    l3762 2CCC                                      l3906 2840  
                                    l3818 2AE0                                      l4642 22E0  
                                    l4634 2274                                      l4626 2266  
                                    l4618 2216                                      l4650 1D2C  
                                    l4394 0CBE                                      l4378 0C4C  
                                    l4298 28E8                                      l4810 16FE  
                                    l4802 16BE                                      l3852 1EF0  
                                    l3844 1EAE                                      l3860 1F12  
                                    l3836 1E7C                                      l3828 1E4A  
                                    l4740 1900                                      l4732 1880  
                                    l4716 1850                                      l4708 17B8  
                                    l3748 2C58                                      l3940 0E62  
                                    l3932 0E2A                                      l3924 0E1C  
                                    l3916 0E02                                      l3908 0DD0  
                                    l3692 0514                                      l3684 049A  
                                    l3676 03F6                                      l3668 0392  
                                    l3596 0066                                      l3588 0036  
                                    l4484 116C                                      l4468 10D6  
                                    l4476 1134                                      l4572 087C  
                                    l4564 07F8                                      l4556 0768  
                                    l4548 06FC                                      l3772 2CFE  
                                    l3764 2CD2                                      l3756 2CB6  
                                    l3780 325C                                      l4636 22B4  
                                    l4628 226A                                      l4580 203A  
                                    l4660 1D78                                      l4652 1D3A  
                                    l4644 1D02                                      l4396 0CEE  
                                    l4388 0C88                                      l4820 1750  
                                    l4812 1702                                      l4804 16C6  
                                    l4900 2778                                      l3862 1F22  
                                    l3854 1F00                                      l3846 1EBA  
                                    l3838 1E80                                      l4742 1904  
                                    l4734 18BC                                      l4726 1878  
                                    l4718 1854                                      l3950 0EA4  
                                    l3934 0E3A                                      l3918 0E06  
                                    l3694 0522                                      l3686 04D0  
                                    l3678 043E                                      l3598 006A  
                                    l4478 1138                                      l4486 117C  
                                    l4558 078C                                      l3870 331C  
                                    l3774 2D0E                                      l3766 2CE0  
                                    l3782 326C                                      l3790 2FA2  
                                    l4638 22C0                                      l4590 2088  
                                    l4582 2040                                      l4670 1E22  
                                    l4654 1D4C                                      l4646 1D0E  
                                    l4750 2140                                      l4830 1790  
                                    l4822 1762                                      l4814 1712  
                                    l4806 16DA                                      l4910 279A  
                                    l4902 277A                                      l3864 1F32  
                                    l3856 1F02                                      l3848 1EC8  
                                    l4680 32CA                                      l4736 18C0  
                                    l3960 0ED0                                      l3952 0EA8  
                                    l3944 0E6A                                      l3936 0E4A  
                                    l3696 0536                                      l4488 118C  
                                    l4568 081C                                      l3880 32AA  
                                    l3872 3296                                      l3768 2CE8  
                                    l3784 3274                                      l3792 2FB0  
                                    l4592 2094                                      l4584 2044  
                                    l4664 1DAE                                      l4656 1D58  
                                    l4648 1D20                                      l4672 1E2A  
                                    l4496 2696                                      l4760 2170  
                                    l4752 2148                                      l4744 212A  
                                    l4824 1766                                      l4832 1798  
                                    l4816 1728                                      l4808 16EA  
                                    l4912 279E                                      l4904 277E  
                                    l3858 1F0C                                      l4690 2A8A  
                                    l4682 2A52                                      l4738 18DC  
                                    l3970 0F0E                                      l3962 0ED6  
                                    l3954 0EC8                                      l3938 0E56  
                                    l3946 0E96                                      l3882 32AC  
                                    l3874 329A                                      l3778 3258  
                                    l3794 2FB8                                      l3786 2F96  
                                    l4594 2098                                      l4586 2060  
                                    l4578 2036                                      l4666 1E08  
                                    l4658 1D66                                      l4498 26AE  
                                    l4762 2178                                      l4754 2150  
                                    l4746 2130                                      l4834 179C  
                                    l4826 1778                                      l4818 173A  
                                    l4914 27A4                                      l4906 2784  
                                    l4692 2AB2                                      l4684 2A52  
                                    l3980 0F5A                                      l3972 0F1A  
                                    l3964 0EE6                                      l3948 0E9A  
                                    l3876 32A0                                      l3868 3318  
                                    l3796 2FC6                                      l3788 2F9A  
                                    l3892 27CA                                      l4596 20AA  
                                    l4588 206C                                      l4668 1E0E  
                                    l4764 2180                                      l4756 2160  
                                    l4748 2138                                      l4772 21A4  
                                    l4836 17B2                                      l4828 178C  
                                    l4916 27B6                                      l4908 2796  
                                    l4694 2AB4                                      l4686 2A54  
                                    l4678 32C6                                      l3982 0F64  
                                    l3966 0EF6                                      l3990 0FBC  
                                    l3886 327A                                      l3878 32A8  
                                    l3798 2FCE                                      l3894 27CE  
                                    l4766 2184                                      l4758 2168  
                                    l4774 2200                                      l4790 167E  
                                    l4782 164C                                      l4918 27BE  
                                    l4696 2AB6                                      l4688 2A56  
                                    l3992 0FCE                                      l3984 0F68  
                                    l3968 0F02                                      l3976 0F22  
                                    l3896 27CE                                      l3888 2968  
                                    l4776 2204                                      l4768 2194  
                                    l4792 1680                                      l4784 165E  
                                    l4880 273E                                      l4698 2AB8  
                                    l3994 0FDE                                      l3978 0F56  
                                    l4794 1692                                      l4786 1662  
                                    l4890 2762                                      l4882 2742  
                                    l3996 0FEA                                      l3988 0F88  
                                    l4796 169E                                      l4788 1676  
                                    l4892 2766                                      l4884 2746  
                                    l4798 16B2                                      l4894 276A  
                                    l4886 274A                                      l4878 2736  
                                    l4896 276E                                      l4888 275E  
                                    l4898 2776                              ?_leer_eeprom 0003  
                                    STR_1 7945                                      STR_2 7C8B  
                                    STR_3 7FB7                                      STR_4 7B31  
                                    STR_5 7D9B                                      STR_6 7C1C  
                                    STR_7 7E77                                      STR_8 7A6D  
                                    STR_9 7986                                      u2000 23E4  
                                    u2001 23E0                                      u2010 243A  
                                    u2011 2436                                      u2020 244A  
                                    u2100 13FA                                      u2021 2446  
                                    u2101 13F6                                      u2110 143A  
                                    u2030 3030                                      u2111 1436  
                                    u2031 302C                                      u3000 0E4A  
                                    u2040 30C2                                      u2200 2EB2  
                                    u2120 1484                                      u3001 0E46  
                                    u2041 30BC                                      u2201 2EAE  
                                    u2121 1480                                      u3010 0EC4  
                                    u2050 30C4                                      u2210 2D80  
                                    u2130 1934                                      u3011 0EC0  
                                    u2211 2D7C                                      u2131 1930  
                                    u3020 0EE6                                      u2060 1350  
                                    u2140 1966                                      u2300 0A9A  
                                    u2220 08B4                                      u3100 248A  
                                    u3021 0EE2                                      u2061 134C  
                                    u2141 1962                                      u2301 0A96  
                                    u2221 08AE                                      u3101 2486  
                                    u3030 0EF6                                      u2070 1382  
                                    u2150 19A4                                      u2310 0AB4  
                                    u2230 08B6                                      u3110 24A4  
                                    u3031 0EF2                                      u2071 137E  
                                    u2151 19A0                                      u2311 0AB0  
                                    u3111 24A0                                      u3040 0F84  
                                    u2160 19CE                                      u2320 0ACE  
                                    u2240 08CC                                      u2400 1542  
                                    u3120 24CA                                      u3200 25B6  
                                    _LATD 000F8C                                      u3041 0F80  
                                    u2081 13AC                                      u2161 19CA  
                                    u2321 0ACA                                      u2241 08C8  
                                    u2401 153E                                      u3121 24C6  
                                    u3201 25B2                                      u3050 0FCE  
                                    u2090 13D0                                      u2170 19FC  
                                    u2330 0ADE                                      u2250 08FC  
                                    u2410 156E                                      u3130 24E8  
                                    u3210 25DA                                      u3051 0FCA  
                                    u2091 13CC                                      u2171 19F8  
                                    u2331 0ADA                                      u2251 08F8  
                                    u2411 156A                                      u3131 24E4  
                                    u3211 25D6                                      u3060 0FDE  
                                    u2500 12F0                                      u2180 1A44  
                                    u2340 0AF0                                      u2260 0918  
                                    u2420 15A8                                      u3140 2504  
                                    u3300 2694                                      u3220 30E2  
                                    u3061 0FDA                                      u2181 1A40  
                                    u2341 0AEC                                      u2261 0914  
                                    u2421 15A4                                      u3141 2500  
                                    u3301 2690                                      u3221 30DE  
                                    u2190 2E84                                      u2510 1306  
                                    u2350 0B00                                      u2270 0946  
                                    u2430 15F8                                      u3150 252A  
                                    u3070 2F3C                                      u3230 30F4  
                                    u3310 290A                                      u2191 2E80  
                                    u2511 1302                                      u2351 0AFC  
                                    u2271 0942                                      u2431 15F4  
                                    u3151 2526                                      u3071 2F38  
                                    u3231 30F0                                      u3311 2906  
                                    u2520 1318                                      u2360 0B18  
                                    u2280 0954                                      u2440 1608  
                                    u2600 0188                                      u3160 254E  
                                    u3240 2A0C                                      u3080 2F0A  
                                    u3400 0C4C                                      u3320 292A  
                                    u2521 1314                                      u2361 0B14  
                                    u2281 0950                                      u2441 1604  
                                    u2601 0184                                      u3161 254A  
                                    u3241 2A08                                      u3081 2F06  
                                    u3401 0C48                                      u3321 2926  
                                    u2530 3202                                      u3250 1B3E  
                                    u2290 0A7C                                      u2450 1642  
                                    u2610 0204                                      u3090 300E  
                                    u3170 2568                                      u3410 0C82  
                                    u3330 295C                                      u2531 31FE  
                                    u3251 1B3A                                      u2291 0A78  
                                    u2451 163E                                      u2371 14D0  
                                    u2611 01FE                                      u3091 300A  
                                    u3171 2564                                      u3411 0C7E  
                                    u3331 2958                                      u2540 3210  
                                    u3260 1BC6                                      u2460 11E6  
                                    u2380 14F2                                      u2700 03D2  
                                    u2620 0206                                      u3500 105A  
                                    u3180 2582                                      u3340 3158  
                                    u3420 0CB8                                      u2541 320C  
                                    u3261 1BC2                                      u2461 11E2  
                                    u2381 14EE                                      u2701 03CE  
                                    u3501 1056                                      u3181 257E  
                                    u3341 3154                                      u3421 0CB4  
                                    u2550 32C4                                      u2470 121C  
                                    u2390 1524                                      u2710 03F6  
                                    u2630 021C                                      u3510 10CA  
                                    u3190 25A0                                      u3350 1C7C  
                                    u3270 1F76                                      u3430 0CEE  
                                    u2551 32C0                                      u2471 1218  
                                    u2391 1520                                      u2711 03F2  
                                    u2631 0218                                      u3511 10C6  
                                    u3191 259C                                      u3351 1C78  
                                    u3271 1F72                                      u3431 0CEA  
                                    u2480 1238                                      u2720 049A  
                                    u2640 0240                                      u2560 0036  
                                    u3520 1154                                      u3360 1D00  
                                    u2800 2CCC                                      u3600 22E0  
                                    u3280 1FCC                                      u3440 0D24  
                                    u2481 1234                                      u2721 0496  
                                    u2641 023C                                      u2561 0032  
                                    u3521 1150                                      u3361 1CFC  
                                    u2801 2CC8                                      u3601 22DC  
                                    u3281 1FC8                                      u3441 0D20  
                                    u2490 12EE                                      u1930 22FA  
                                    u2730 0514                                      u2650 027C  
                                    u2570 010E                                      u3530 118C  
                                    u2810 2CE0                                      u3290 201A  
                                    u3610 1D20                                      u3450 0DA4  
                                    u3370 0BA6                                      u2491 12E8  
                                    u1931 22F6                                      u2731 0510  
                                    u2651 0278                                      u2571 010A  
                                    u3531 1188                                      u2811 2CDC  
                                    u3291 2016                                      u3611 1D1C  
                                    u3451 0DA0                                      u3371 0BA2  
                                    u2900 1E6C                                      u2740 2DEE  
                                    u1940 230C                                      u2660 0324  
                                    u2580 011E                                      u2820 2CFC  
                                    u3620 1D4C                                      u3540 26CE  
                                    u3460 0DB4                                      u3380 0BE0  
                                    u3700 1692                                      u2901 1E68  
                                    u2741 2DEA                                      u1941 2308  
                                    u2661 031E                                      u2581 011A  
                                    u2821 2CF8                                      u3621 1D48  
                                    u3541 26CA                                      u3461 0DB0  
                                    u3381 0BDC                                      u3701 168E  
                                    u2910 1EA6                                      u2750 2DFE  
                                    u1950 2334                                      u2670 0326  
                                    u2590 0144                                      u3470 2B5A  
                                    u2830 2D0E                                      u3630 1D78  
                                    u3550 26FA                                      u3390 0C16  
                                    u3710 16DA                                      u2911 1EA2  
                                    u2751 2DFA                                      u1951 2330  
                                    u2591 0140                                      u3471 2B56  
                                    u2831 2D0A                                      u3631 1D74  
                                    u3551 26F6                                      u3391 0C12  
                                    u3711 16D6                                      u2920 1EC8  
                                    u3640 1870                                      u2760 2E0E  
                                    u1960 236A                                      u2680 033C  
                                    u3560 0610                                      u3480 2B7C  
                                    u2840 2FB0                                      u3720 16EA  
                                    u2921 1EC4                                      u3641 186C  
                                    u2761 2E0A                                      u1961 2366  
                                    u2681 0338                                      u3561 060C  
                                    u3481 2B78                                      u2841 2FAC  
                                    u3721 16E6                                      u2930 1EF0  
                                    u3650 18DC                                      u2770 2C7C  
                                    u1970 2F94                                      u2690 0360  
                                    u3490 102E                                      u3570 0718  
                                    u2850 2FC6                                      u3730 1712  
                                    u2931 1EEC                                      u3651 18D8  
                                    u1971 2F90                                      u2691 035C  
                                    u3491 102A                                      u3571 0714  
                                    u2851 2FC2                                      u3731 170E  
                                    u2940 1F22                                      u3660 1920  
                                    u2780 2CA4                                      u1980 3128  
                                    u2860 2BEC                                      u3580 20AA  
                                    u3740 1728                                      u2941 1F1E  
                                    u3661 191C                                      u1981 3124  
                                    u2861 2BE8                                      u3581 20A6  
                                    u3741 1724                                      u2790 2CB4  
                                    u1990 23C2                                      u2950 27E6  
                                    u2870 2AE0                                      u3590 211E  
                                    u3670 2160                                      u3750 173A  
                                    u3830 2796                                      u2791 2CB0  
                                    u1991 23BE                                      u2951 27E2  
                                    u2871 2ADC                                      u3591 211A  
                                    u3671 215C                                      u3751 1736  
                                    u3831 2792                                      u2960 2840  
                                    u2880 2B1A                                      u3760 1750  
                                    u3680 165E                                      u3840 27B6  
                                    u2777 2C72                                      u2961 283C  
                                    u2881 2B16                                      u3761 174C  
                                    u3681 165A                                      u3841 27B2  
                                    u2890 1E4A                                      u2970 0DF2  
                                    u3770 1762                                      u3690 1676  
                                    u2891 1E46                                      u2787 2C9A  
                                    u2971 0DEE                                      u3907 3262  
                                    u3771 175E                                      u3691 1672  
                                    u2980 0E02                                      u3780 1778  
                                    u2981 0DFE                                      u3917 3270  
                                    u3781 1774                                      u2990 0E3A  
                                    u2991 0E36                                      u3927 2CCE  
                                    u3937 3086                                      u3857 266C  
                                    u3947 318C                                      u3867 2F10  
                                    u3877 2F9C                                      u3887 2FB2  
                                    u3897 2FC8                                      _TMR0 000FD6  
                    _minutosTranscurridos 007C                        ??_i2c_reinicia_com 0002  
                          _check_response 2F96                   escribeHorariosMemoria@i 0011  
                 escribeHorariosMemoria@j 000D                             ??_i2c_detener 0002  
                                    abs@a 0013                                      _dbuf 008D  
                                    _atoi 11AE                                      _ctoa 2D6C  
                                    _main 2736                                      _dtoa 0884  
                                    _hora 0087                                      _prec 0074  
                                    _nout 0070                                      pad@i 0018  
                                    pad@p 0015                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    pad@w 001A                                      map@x 001B  
                                    fsr2l 000FD9                                      _stoa 14C6  
                                    btemp 005F                            ?_sistemaRegado 0001  
                __size_of_asignarHorarios 01BA                             ??_i2c_iniciar 0001  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 000E                  ??_restablecerDatosSensor 0005  
                           __CFG_IESO$OFF 000000                          ??_DHT11_ReadData 0001  
                       _constructorSensor 3304                      __size_of_DHT11_Start 0020  
                            ?_lecturaWifi 0001                   __size_of_setTiempoRegar 00A0  
                           __CFG_MCLRE$ON 000000                              ___param_bank 000000  
                      ?_constructorSensor 0001                        setTiempoRegar@hora 0014  
                      _leeHorariosMemoria 1BC8                          ??_encenderBombas 000F  
                                   ??_abs 0015                                     ??_map 002F  
                                   ??_pad 0017                            _i2c_envia_dato 32EC  
                           __CFG_PLLDIV$1 000000                            _i2c_inicia_com 3320  
                         __end_of___aldiv 1F44                           __end_of___aodiv 14C6  
                                   ?_atoi 0008                                     ?_ctoa 001C  
                                   ?_main 0001                                     ?_dtoa 001C  
                         __end_of___aomod 1A86                             _convertirDato 3238  
                         __end_of___awdiv 253C                                     STR_10 7986  
                                   STR_11 7C41                                     STR_12 7FED  
                                   STR_20 7AA0                                     STR_13 7E29  
                                   STR_21 7D3B                                     STR_14 7E29  
                                   STR_30 7CAF                                     STR_22 7BF7  
                                   STR_31 7FC7                                     STR_15 7F3B  
                                   STR_23 7DF3                                     STR_32 7E40  
                                   STR_16 7A6D                                     STR_40 7F23  
                                   STR_24 7C66                                     STR_41 7EA9  
                                   STR_33 7D19                                     STR_25 7AD3  
                                   STR_17 78FD                                     STR_42 7F69  
                                   STR_50 7DBA                                     STR_26 7D5B  
                                   STR_18 7BD2                                     STR_34 7B5C  
                                   STR_35 7FD5                                     STR_43 7EF3  
                                   STR_27 7CF7                                     STR_19 7B86  
                                   STR_51 7B04                                     STR_52 7D7B  
                                   STR_28 7F52                                     STR_44 7E0E  
                                   STR_36 7DD7                                     STR_60 7A34  
                         __end_of___awmod 25EC                                     STR_53 7DBA  
                                   STR_45 7F0B                                     STR_29 7E43  
                                   STR_37 7CD3                                     STR_61 79FB  
                                   STR_54 7B04                                     STR_46 7EC2  
                                   STR_38 7BAC                                     STR_62 79C1  
                                   STR_55 7FA6                                     STR_47 7EDB  
                                   STR_39 7E5D                                     STR_56 7FF6  
                                   STR_48 7E90                                     STR_57 7FE2  
                                   STR_49 7D7B                                     STR_58 7F94  
                                   STR_59 7F80                       ??_constructorSensor 0005  
                                   ?_stoa 000A                         convertirDato@dato 0002  
                                   _T0CON 000FD5                           ___awdiv@divisor 0003  
                                   i2l217 2C54                       ?_leeHorariosMemoria 0001  
                         ___awdiv@counter 0005                                     _RCREG 000FAE  
                            vfpfcnvrt@fmt 0042                                     _SPBRG 000FAF  
                           __CFG_USBDIV$1 000000                                     _TRISD 000F95  
                          limpiarBuffer@i 0001                                     _TXREG 000FAD  
                           __CFG_PWRT$OFF 000000                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                     ___lmul@multiplicand 0005                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                        __size_of_UART_init 0070  
                      __size_of_UART_read 0054                                     _flags 0076  
                                   _fputc 22E8                                     _fputs 2F52  
                         __end_of_isdigit 30CA                    __end_of_check_response 2FD6  
                             ?_UART_write 0001                                     atoi@n 0015  
                                   pad@fp 0011                                     atoi@s 0008  
                                   _width 0072                                     ctoa@c 001E  
                                   _putch 3330                                     ctoa@w 001F  
                                   dtoa@d 001E                                     dtoa@i 003E  
                                   dtoa@n 0036                                     dtoa@p 0030  
                                   dtoa@s 0034                                     dtoa@w 0032  
                         __end_of_isspace 2EBE                                     tablat 000FF5  
                                   plusw1 000FE3                                     plusw2 000FDB  
                                   stoa@i 0016                                     stoa@l 001E  
                                   stoa@p 001C                                     stoa@s 000C  
       __size_of_mostrarDatosSensoresWIFI 00F0                                     stoa@w 0018  
                                   ttemp5 0060                                     ttemp6 0063  
                                   ttemp7 0067                                     status 000FD8  
               ?_mostrarDatosSensoresWIFI 0001                                     wtemp8 0060  
                         __end_of_sprintf 2E6C                        escribe_eeprom@dato 0009  
               __end_of_constructorSensor 330E                      ??_leeHorariosMemoria 0007  
                          __CFG_ICPRT$OFF 000000                                _i2c_espera 31EC  
                        ??_dameHoraActual 0005                           __initialization 2D12  
                     __end_of_i2c_detener 3330           __size_of_lecturaAnalogaSensores 00AA  
                  __end_of_i2c_envia_dato 32F8                              __end_of_atoi 133E  
                            __end_of_ctoa 2DC6                              __end_of_main 27CA  
                            __end_of_dtoa 0B66                  ??_escribeHorariosMemoria 000B  
                         ??_configurarAdc 0001                              __end_of_stoa 164C  
                  __end_of_i2c_inicia_com 3328                        _inicializarObjetos 17B8  
                     __end_of_i2c_iniciar 32DC                    sistemaPrincipal@opcion 00F3  
                        _dameHumedadSuelo 2F0C                            ?_convertirDato 0001  
                    __size_of_fijaHoraRtc 0068                                    ??_atoi 000A  
                                  ??_ctoa 001F                                    ??_main 005F  
                                  ??_dtoa 0026                                    ??_stoa 000E  
               setTiempoRegar@tiempoRegar 0013                             __activetblptr 000002  
                     ?_inicializarObjetos 0001                        i2c_envia_dato@dato 0002  
                         __CFG_CCP2MX$OFF 000000                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    ?_fputc 0001  
                                  ?_fputs 000A                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                           ?_check_response 0001  
                        ___awdiv@dividend 0001                    encenderBombas@flagSeco 0011  
                                  ?_putch 0001                        convertirDato@datoR 0003  
                           _horaRegar$806 0006                                    i2l4840 2C06  
                                  i2l4850 2C30                                    i2l4842 2C18  
                                  i2l4844 2C1A                                    i2l4852 2C3C  
                                  i2l4854 2C4A                                    i2l4846 2C2A  
                                  i2l4838 2BF8                                    i2l4856 2C4E  
                                  i2l4848 2C2E                           ??_sistemaRegado 005D  
                           vfpfcnvrt@done 0054                                    _SSPADD 000FC8  
                                  _SSPBUF 000FC9                      ??_inicializarObjetos 0007  
         __size_of_restablecerDatosSensor 004E                            __CFG_XINST$OFF 000000  
                        __end_of_getValue 0FF4                              vfprintf@cfmt 005B  
                __end_of_sistemaPrincipal 2208                            _escribe_eeprom 3166  
                                  ___lmul 2AC2                           ?_i2c_envia_dato 0001  
                               ??___aldiv 0015                                 ??___aodiv 0011  
                               ??___aomod 0011                                    ___wmul 3212  
                       __end_of_UART_init 2AC2                         __end_of_UART_read 2E1A  
                               ??___awdiv 0005                                 ??___awmod 0005  
                       ??_asignarHorarios 005D                          __end_of_leer_rtc 31EC  
                         ?_i2c_inicia_com 0001                          __end_of_estaSeco 3100  
                                  _buffer 0100                       __size_of_UART_write 0016  
                            ?_UART_printf 0002                                    clear_0 2D3A  
                                  clear_1 2D4C                                    clear_2 2D58  
                        ___awdiv@quotient 0007                           ___awmod@divisor 0003  
                                  _setRtc 29E2                           ___awmod@counter 0005  
                                  pad@buf 0013                                    ctoa@fp 001C  
                                  dtoa@fp 001C                                    _strlen 3100  
                         _i2c_recibe_dato 3296                    __size_of_dameDiaActual 0010  
                            ?_mostrarMenu 0001                                    fputc@c 0001  
                                  fputs@c 000E                                    fputs@i 000F  
                                  fputs@s 000A                                 ??_isdigit 0003  
                    escribe_rtc@direccion 0004                              __mediumconst 78FC  
                               ??_isspace 0003                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                  _lecturaAnalogaSensores 25EC              __end_of_mostrarDatosSensores 22E8  
                                  stoa@cp 001A                                    stoa@fp 000A  
                                  putch@c 0001                          __end_of_vfprintf 2BF6  
                               ??_sprintf 005D                             ?_regadoRapido 0001  
                              __accesstop 0060                   __end_of__initialization 2D5E  
                    __size_of_escribe_rtc 001E                           __CFG_PBADEN$OFF 000000  
                    __size_of_leer_eeprom 003C                           __CFG_FOSC$XT_XT 000000  
                             _i2c_detener 3328                __size_of_constructorSensor 000A  
                           ___rparam_used 000001                               _i2c_iniciar 32C6  
                  __end_of_escribe_eeprom 3196                               ?_i2c_espera 0001  
                          _setTiempoRegar 2696                            __pcstackCOMRAM 0001  
                            leer_rtc@dato 0004                              __pidataBANK0 32F8  
                    __size_of_lecturaWifi 00F2           __size_of_escribeHorariosMemoria 0142  
                         ??_convertirDato 0001                             __end_of_fputc 23B2  
                           __end_of_fputs 2F96                             __end_of_putch 3332  
                  __size_of_limpiarBuffer 0040                    _restablecerDatosSensor 2EBE  
                            _datoRecibido 0083                         ?_dameDatosSistema 0001  
                          ??_regadoRapido 000F                                   ??_fputc 0005  
                                 ??_fputs 000E                                   ??_putch 0001  
                              __pbssBANK0 0060                                __pbssBANK1 0100  
                      ??_dameDatosSistema 005D                   __size_of_desbordamiento 2C50  
                      __size_of_horaRegar 0084                    __end_of_setTiempoRegar 2736  
                           _dameDiaActual 32DC         constructorSensor@porcientoHumedad 0003  
                            lecturaWifi@i 00CB                           ?_escribe_eeprom 0007  
                              _fijaDiaRtc 3136                        _contInterrupciones 0078  
               __size_of_i2c_reinicia_com 0008                                   ?___lmul 0001  
                                 ?___wmul 0001                                _flagRegado 0080  
                 __end_of_i2c_recibe_dato 32B0                                   _ACKSTAT 007E2E  
                          ___lmul@product 0009                                   ?_setRtc 0001  
                                 ?_strlen 0001             dameTemperaturaHumedad@humedad 000A  
                      __size_of_vfpfcnvrt 0582                       __size_of_i2c_espera 0026  
                               ?_getValue 0004                    _escribeHorariosMemoria 1A86  
                                 _SSPCON1 000FC6                                   _SSPCON2 000FC5  
                            ??_UART_write 0001                                   _SSPSTAT 000FC7  
                __end_of_dameHumedadSuelo 2F52                                 ?_leer_rtc 0001  
                               ?_estaSeco 000C                           __CFG_VREGEN$OFF 000000  
                          ?_dameDiaActual 0001                             ??_DHT11_Start 0001  
                           _limpiarBuffer 2FD6                           ?_setTiempoRegar 0001  
                                 _Humedad 007E                                   __Hparam 0000  
                                 __Lparam 0000                                   ___aldiv 1E38  
                                 ___aodiv 133E                                   ___aomod 1922  
                                 ___awdiv 2478                           __size_of___lmul 006A  
                    _mostrarDatosSensores 2208                                   ___awmod 253C  
                         __size_of___wmul 0026                                 ?_vfprintf 00AD  
                         __CFG_STVREN$OFF 000000                               _Temperatura 007F  
                                 __pcinit 2D12                                   __ramtop 0800  
                      __end_of_UART_write 32C6                           __size_of_setRtc 0070  
                                 __ptext0 2736                                   __ptext1 164C  
                                 __ptext2 28E4                                   __ptext3 0B66  
                                 __ptext4 30CA                                   __ptext5 3196  
                                 __ptext6 32DC                                   __ptext7 31C2  
                                 __ptext8 3238                                   __ptext9 2126  
                 check_response@respuesta 0001                         __end_of_horaRegar 2968  
                               _T0CONbits 000FD5                           __size_of_strlen 0036  
                    __size_of_UART_printf 005E                              __size_of_abs 0040  
                            __size_of_pad 00C6                              __size_of_map 007A  
                        ??_check_response 0001                                   _isdigit 3092  
                        ___awmod@dividend 0001                                   _regando 007B  
                   regadoRapido@areaRegar 0012                          ___aldiv@dividend 000D  
                                 _isspace 2E6C                                   _minutos 0086  
                    __size_of_mostrarMenu 0086                                   atoi@neg 000E  
                              ??_getValue 0006                                   _sprintf 2E1A  
                          __pintcode_body 2BF6                      end_of_initialization 2D5E  
                              ??_leer_rtc 0003                                ??_estaSeco 000E  
                                 fputc@fp 0003                            ?_limpiarBuffer 0001  
                         _asignarHorarios 0FF4                             __Lmediumconst 78FC  
                                 int_func 2BF6                                   fputs@fp 000C  
                        ??_i2c_envia_dato 0002               __size_of_leeHorariosMemoria 013A  
                        ??_i2c_inicia_com 0002                               ?_fijaDiaRtc 0001  
                        _VALOR_TIMER0UART 00FD                         __end_of_vfpfcnvrt 0594  
                ??_dameTemperaturaHumedad 0004                                 _RCSTAbits 000FAB  
                        ___aldiv@quotient 0017                     ?_mostrarDatosSensores 0001  
                     __end_of_DHT11_Start 3278                                   postdec1 000FE5  
                                 postdec2 000FDD                         ?_sistemaPrincipal 0001  
                 _peticionLecturaSensores 007A                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                           ??_fijaHoraRtc 0013                      __end_of_regadoRapido 1E38  
                        ?_i2c_recibe_dato 0001                                ??_vfprintf 005B  
                           setRtc@datoRtc 0011                     __end_of_configurarAdc 3318  
                      ??_sistemaPrincipal 00F1                                   strlen@a 0003  
                                 strlen@s 0001                                 _UART_init 2A52  
                              getValue@Rx 000E                                 _UART_read 2DC6  
                               _PORTDbits 000F83                   __size_of_DHT11_ReadData 005C  
                 ?_lecturaAnalogaSensores 0001                             setRtc@seteado 0010  
               dameHumedadSuelo@canalLeer 0005                   lecturaAnalogaSensores@i 0030  
                               _TRISBbits 000F93                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                   __size_of_encenderBombas 026A  
                _mostrarDatosSensoresWIFI 2036                           ??_dameDiaActual 0005  
                              map@out_max 002B                                map@out_min 0027  
                          _desbordamiento 0008                            _esperandoDatos 0089  
                          _UART_init$1922 0023                              ?_i2c_detener 0001  
                   __end_of_sistemaRegado 17B8                                 _TXSTAbits 000FAC  
                       dameDatosSistema@i 00EF               __size_of_inicializarObjetos 016A  
                            ?_i2c_iniciar 0001                              ??_i2c_espera 0001  
                       _MODO_COMUNICACION 0088                        DHT11_ReadData@data 0002  
                        _i2c_reinicia_com 3318                            __end_of___lmul 2B2C  
                             vfpfcnvrt@ap 0044                               vfpfcnvrt@cp 0052  
                             vfpfcnvrt@fp 0040                               vfpfcnvrt@ll 004A  
                          __end_of___wmul 3238                   ?_restablecerDatosSensor 0001  
          __end_of_lecturaAnalogaSensores 2696                                ?_UART_init 001B  
                              ?_UART_read 0001                   __size_of_dameHoraActual 002C  
                          __end_of_setRtc 2A52                       __end_of_fijaHoraRtc 2B94  
                          __end_of_strlen 3136                       start_initialization 2D12  
                            _estaSeco$799 000E                               __end_of_abs 3056  
                             __end_of_pad 2478                   __end_of_asignarHorarios 11AE  
                             __end_of_map 29E2                       __size_of_fijaDiaRtc 0030  
       escribeHorariosMemoria@contMemoria 000F                    __end_of_desbordamiento 2C58  
                      __end_of_i2c_espera 3212                             ??_escribe_rtc 0004  
                           ??_leer_eeprom 0005                           ??_limpiarBuffer 0001  
                        ??_escribe_eeprom 000A                       leeHorariosMemoria@i 000D  
                     leeHorariosMemoria@j 0009                      constructorSensor@pin 0004  
                             _DHT11_Start 3258                     _dameDatosSistema$1923 00E7  
                   _dameDatosSistema$1924 00E9                     _dameDatosSistema$1925 00EB  
                   _dameDatosSistema$1926 00ED                             ??_lecturaWifi 005D  
                  ??_mostrarDatosSensores 005D                               vfprintf@fmt 00AF  
               __size_of_dameDatosSistema 02F0           __size_of_dameTemperaturaHumedad 0094  
                                ??___lmul 0009                                  ??___wmul 0005  
          __end_of_restablecerDatosSensor 2F0C                               __pdataBANK0 00F4  
                        __CFG_LPT1OSC$OFF 000000                         leer_rtc@direccion 0003  
                                ??_setRtc 000F                     __end_of_convertirDato 3258  
                                ??_strlen 0003                               __pbssBIGRAM 0132  
                 ?_escribeHorariosMemoria 0001                             __pcstackBANK0 00AD  
                        ___aodiv@dividend 0001             dameDatosSistema@bufferHorario 00C9  
                         ?_desbordamiento 0001                          ??_setTiempoRegar 0013  
                               _diaActual 0084                   inicializarObjetos@i_809 000B  
                       __size_of_getValue 0224                         ?_dameHumedadSuelo 0001  
                  getValue@datoIncorrecto 0008                         UART_printf@cadena 0002  
                           lecturaWifi@Rx 00C9                                 _atoi$1571 0010  
                               _atoi$1572 0014                                 _atoi$1573 0012  
                      ??_dameHumedadSuelo 0003                         __size_of_leer_rtc 002A  
                       __size_of_estaSeco 0036                       __end_of_escribe_rtc 3296  
                     __end_of_leer_eeprom 3092                     __size_of_regadoRapido 0136  
                               _dtoa$1086 002E                                 __pintcode 0008  
                           __pmediumconst 78FC                                  ?___aldiv 000D  
                                ?___aodiv 0001                                  ?___aomod 0001  
                                ?___awdiv 0001                          ___aodiv@quotient 0013  
                                ?___awmod 0001                               _fijaHoraRtc 2B2C  
                     __end_of_lecturaWifi 2036                            _DHT11_ReadData 2CB6  
                              setRtc@dato 0012                               ??_UART_init 001F  
                             ??_UART_read 0001                         __size_of_vfprintf 0062  
          __end_of_escribeHorariosMemoria 1BC8                                  ?_isdigit 0001  
                          _encenderBombas 0B66                                  ?_isspace 0001  
                               _horaRegar 28E4            dameTemperaturaHumedad@checkSum 0006  
                  _dameTemperaturaHumedad 27CA                          ?_asignarHorarios 0001  
                                ?_sprintf 00B3                            __size_of_fputc 00CA  
                          __size_of_fputs 0044                              _regadoRapido 1D02  
                          __size_of_putch 0002                           ___aldiv@divisor 0011  
                         ___aldiv@counter 0015                            ___wmul@product 0005  
                                _LATDbits 000F8C                                  _PIE1bits 000F9D  
                    __size_of_i2c_detener 0008                              ??_fijaDiaRtc 0013  
                                _PIR1bits 000F9E                                  i2u380_40 2C18  
                                i2u380_41 2C14                                  i2u381_40 2C2A  
                                i2u381_41 2C26                                  i2u382_40 2C4A  
                                i2u382_41 2C46                                  i2u379_40 2C06  
                                i2u379_41 2C02                   restablecerDatosSensor@i 0005  
                    __size_of_i2c_iniciar 0016                          __CFG_WDTPS$32768 000000  
                  _tiempoInactividadTrans 008C             leeHorariosMemoria@contMemoria 000B  
                     asignarHorarios@hora 00CC                    __end_of_DHT11_ReadData 2D12  
                               getValue@i 0009                             ??_UART_printf 0004  
                               _vfpfcnvrt 0012                                 map@in_max 0023  
                               map@in_min 001F                                _ADCON0bits 000FC2  
                          _dameHoraActual 3196                         ___wmul@multiplier 0001  
              ??_mostrarDatosSensoresWIFI 005D                    __end_of_encenderBombas 0DD0  
                           ??_mostrarMenu 0004                            UART_write@dato 0001  
                              ?_horaRegar 0001                     mostrarDatosSensores@i 00C9  
               __size_of_sistemaPrincipal 00E2                              _isspace$1589 0007  
                __end_of_i2c_reinicia_com 3320                                vfpfcnvrt@c 005A  
                      __end_of_fijaDiaRtc 3166                         ___lmul@multiplier 0001  
                               copy_data0 2D26                               _escribe_rtc 3278  
                             _leer_eeprom 3056                              _VALOR_TIMER0 00FB  
              __end_of_leeHorariosMemoria 1D02                                 estaSeco@s 000C  
                 asignarHorarios@diaRegar 00C9                                  __Hrparam 0000  
                   getValue@numCharacters 0004                              _minutosRegar 007D  
                             _lecturaWifi 1F44                             UART_init@BAUD 001B  
                              vfprintf@ap 00B1                                  __Lrparam 0000  
                              vfprintf@fp 00AD                          _dameDatosSistema 0594  
dameTemperaturaHumedad@temperaturaDecimal 0009                       _esperaDatoConcluida 008A  
                        __size_of___aldiv 010C                           ?_DHT11_ReadData 0001  
                        __size_of___aodiv 0188                          __size_of___aomod 0164  
                        __size_of___awdiv 00C4                    __end_of_dameHoraActual 31C2  
                        __size_of___awmod 00B0                                ?_vfpfcnvrt 0040  
                         DHT11_ReadData@i 0001                           ___aodiv@divisor 0009  
                         ___aodiv@counter 0011                           ?_encenderBombas 0001  
                              sprintf@fmt 00B5                  __size_of_i2c_recibe_dato 001A  
                     __end_of_UART_printf 2CB6                          __size_of_isdigit 0038  
                        __size_of_isspace 0052                                  __ptext10 2696  
                                __ptext11 1D02                                  __ptext20 2AC2  
                                __ptext12 285E                                  __ptext21 2F0C  
                                __ptext13 2036                                  __ptext30 2B2C  
                                __ptext22 27CA                                  __ptext14 1F44  
                                __ptext31 3136                                  __ptext23 2F96  
                                __ptext15 2EBE                                  __ptext40 2B94  
                                __ptext32 29E2                                  __ptext24 3258  
                                __ptext16 3304                                  __ptext41 0012  
                                __ptext33 3278                                  __ptext25 2CB6  
                                __ptext17 2208                                  __ptext50 2F52  
                                __ptext42 14C6                                  __ptext34 253C  
                                __ptext26 1BC8                                  __ptext18 25EC  
                                __ptext51 22E8                                  __ptext43 0884  
                                __ptext35 2478                                  __ptext27 3056  
                                __ptext19 2968                                  __ptext60 1A86  
                                __ptext52 3330                                  __ptext44 3016  
                                __ptext36 0594                                  __ptext28 3318  
                                __ptext61 3166                                  __ptext53 11AE  
                                __ptext45 1922                                  __ptext37 2FD6  
                                __ptext29 3296                                  __ptext70 2A52  
                                __ptext62 3320                                  __ptext54 2E6C  
                                __ptext46 133E                                  __ptext38 0FF4  
                                __ptext71 1E38                                  __ptext63 32EC  
                                __ptext55 3092                                  __ptext47 2D6C  
                                __ptext39 2E1A                                  __ptext64 3328  
                                __ptext56 0DD0                                  __ptext48 23B2  
                                __ptext65 31EC                                  __ptext57 2DC6  
                                __ptext49 3100                                  __ptext66 17B8  
                                __ptext58 2C58                                  __ptext67 3212  
                                __ptext59 32B0                                  __ptext68 32C6  
                                __ptext69 330E                                  _getValue 0DD0  
                     __end_of_mostrarMenu 28E4                          __size_of_sprintf 0052  
                                _leer_rtc 31C2                                  _estaSeco 30CA  
              __end_of_inicializarObjetos 1922                                  _byteUart 008B  
                  __size_of_configurarAdc 000A                  lecturaWifi@humedadMedida 00CA  
                 __size_of_check_response 0040                     __end_of_dameDiaActual 32EC  
                     inicializarObjetos@i 000D                       inicializarObjetos@j 0009  
                           __size_of_atoi 0190                             __size_of_ctoa 005A  
                           __size_of_main 0094                             __size_of_dtoa 02E2  
                                _horarios 0132                              ?_DHT11_Start 0001  
                           __size_of_stoa 0186      dameTemperaturaHumedad@humedadDecimal 0008  
                                _tempHora 0081                                  _segundos 0085  
                               stoa@F1144 00F4                           encenderBombas@i 0012  
                                _sensores 0060                 mostrarDatosSensoresWIFI@i 00CD  
                                int$flags 005F                                  _vfprintf 2B94  
                         ?_dameHoraActual 0001                   __size_of_i2c_envia_dato 000C  
                           getValue@i_993 000B                   __size_of_i2c_inicia_com 0008  
                i2c_recibe_dato@datoleido 0002                          ___aomod@dividend 0001  
                   __CFG_CPUDIV$OSC1_PLL2 000000                          ??_desbordamiento 0001  
                          _vfpfcnvrt$1111 0056                            _vfpfcnvrt$1112 0058  
                  __size_of_sistemaRegado 016C                                _INTCONbits 000FF2  
                      constructorSensor@s 0001                               ??_horaRegar 0003  
                 escribe_eeprom@direccion 0007                                  isdigit@c 0001  
                                intlevel2 0000                                 sprintf@ap 00C1  
                         escribe_rtc@dato 0003                     __end_of_limpiarBuffer 3016  
                                isspace@c 0001                           setRtc@direccion 000F  
                       asignarHorarios@Rx 00CD             __size_of_mostrarDatosSensores 00E0  
                           _overflowTimer 0082                              ?_fijaHoraRtc 0001  
       dameTemperaturaHumedad@temperatura 000B                           ___aomod@divisor 0009  
                            getValue@dato 000D                 __size_of_dameHumedadSuelo 0046  
                             ??_vfpfcnvrt 0046                                  stoa@nuls 000F  
                         ___aomod@counter 0011                               _UART_printf 2C58  
                           _configurarAdc 330E          __end_of_mostrarDatosSensoresWIFI 2126  
                                sprintf@f 00C3                                  sprintf@s 00B3  
                 ?_dameTemperaturaHumedad 0001                               _mostrarMenu 285E  
                            ___aldiv@sign 0016                          asignarHorarios@i 00CA  
                        _sistemaPrincipal 2126                           leer_eeprom@dato 0006  
                             _SSPCON2bits 000FC5                                _UART_write 32B0  
                            ___aodiv@sign 0012                         ??_i2c_recibe_dato 0002  
                  __size_of_convertirDato 0020                      leer_eeprom@direccion 0003  
                           _sistemaRegado 164C                              ___aomod@sign 0012  
                ??_lecturaAnalogaSensores 002F  
