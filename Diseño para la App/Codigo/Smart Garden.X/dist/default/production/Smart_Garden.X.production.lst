

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jul 07 11:43:03 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    87                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    88                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    89                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    90  0000                     
    91                           ; Version 2.10
    92                           ; Generated 31/07/2019 GMT
    93                           ; 
    94                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC18F4550 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125  0000                     
   126                           	psect	idataBANK0
   127  003114                     __pidataBANK0:
   128                           	opt callstack 0
   129                           
   130                           ;initializer for stoa@F1144
   131  003114  28                 	db	40
   132  003115  6E                 	db	110
   133  003116  75                 	db	117
   134  003117  6C                 	db	108
   135  003118  6C                 	db	108
   136  003119  29                 	db	41
   137  00311A  00                 	db	0
   138                           
   139                           ;initializer for _VALOR_TIMER0
   140  00311B  6769               	dw	26473
   141                           
   142                           ;initializer for _VALOR_TIMER0UART
   143  00311D  6769               	dw	26473
   144  0000                     _TMR0	set	4054
   145  0000                     _TRISD	set	3989
   146  0000                     _T0CON	set	4053
   147  0000                     _T0CONbits	set	4053
   148  0000                     _LATD	set	3980
   149  0000                     _PIE1bits	set	3997
   150  0000                     _ADRESL	set	4035
   151  0000                     _ADRESH	set	4036
   152  0000                     _ADCON0bits	set	4034
   153  0000                     _ADCON2	set	4032
   154  0000                     _ADCON1	set	4033
   155  0000                     _INTCONbits	set	4082
   156  0000                     _LATDbits	set	3980
   157  0000                     _TRISDbits	set	3989
   158  0000                     _PORTDbits	set	3971
   159  0000                     _TXREG	set	4013
   160  0000                     _RCREG	set	4014
   161  0000                     _PIR1bits	set	3998
   162  0000                     _RCSTAbits	set	4011
   163  0000                     _TXSTAbits	set	4012
   164  0000                     _SPBRG	set	4015
   165  0000                     _TRISCbits	set	3988
   166  0000                     _SSPBUF	set	4041
   167  0000                     _SSPCON2bits	set	4037
   168  0000                     _SSPADD	set	4040
   169  0000                     _SSPCON2	set	4037
   170  0000                     _SSPCON1	set	4038
   171  0000                     _SSPSTAT	set	4039
   172  0000                     _TRISBbits	set	3987
   173  0000                     _ACKSTAT	set	32302
   174                           
   175                           	psect	mediumconst
   176  007CE2                     __pmediumconst:
   177                           	opt callstack 0
   178  007CE2  00                 	db	0
   179  007CE3  0D                 	db	13
   180  007CE4  0A                 	db	10
   181  007CE5  20                 	db	32
   182  007CE6  33                 	db	51	;'3'
   183  007CE7  2E                 	db	46
   184  007CE8  20                 	db	32
   185  007CE9  50                 	db	80	;'P'
   186  007CEA  72                 	db	114	;'r'
   187  007CEB  6F                 	db	111	;'o'
   188  007CEC  67                 	db	103	;'g'
   189  007CED  72                 	db	114	;'r'
   190  007CEE  61                 	db	97	;'a'
   191  007CEF  6D                 	db	109	;'m'
   192  007CF0  61                 	db	97	;'a'
   193  007CF1  72                 	db	114	;'r'
   194  007CF2  20                 	db	32
   195  007CF3  74                 	db	116	;'t'
   196  007CF4  69                 	db	105	;'i'
   197  007CF5  65                 	db	101	;'e'
   198  007CF6  6D                 	db	109	;'m'
   199  007CF7  70                 	db	112	;'p'
   200  007CF8  6F                 	db	111	;'o'
   201  007CF9  20                 	db	32
   202  007CFA  64                 	db	100	;'d'
   203  007CFB  65                 	db	101	;'e'
   204  007CFC  20                 	db	32
   205  007CFD  72                 	db	114	;'r'
   206  007CFE  69                 	db	105	;'i'
   207  007CFF  65                 	db	101	;'e'
   208  007D00  67                 	db	103	;'g'
   209  007D01  6F                 	db	111	;'o'
   210  007D02  20                 	db	32
   211  007D03  65                 	db	101	;'e'
   212  007D04  6E                 	db	110	;'n'
   213  007D05  20                 	db	32
   214  007D06  75                 	db	117	;'u'
   215  007D07  6E                 	db	110	;'n'
   216  007D08  20                 	db	32
   217  007D09  68                 	db	104	;'h'
   218  007D0A  6F                 	db	111	;'o'
   219  007D0B  72                 	db	114	;'r'
   220  007D0C  61                 	db	97	;'a'
   221  007D0D  72                 	db	114	;'r'
   222  007D0E  69                 	db	105	;'i'
   223  007D0F  6F                 	db	111	;'o'
   224  007D10  20                 	db	32
   225  007D11  0D                 	db	13
   226  007D12  0A                 	db	10
   227  007D13  00                 	db	0
   228  007D14                     STR_27:
   229  007D14  0D                 	db	13
   230  007D15  0A                 	db	10
   231  007D16  0A                 	db	10
   232  007D17  50                 	db	80	;'P'
   233  007D18  6F                 	db	111	;'o'
   234  007D19  72                 	db	114	;'r'
   235  007D1A  63                 	db	99	;'c'
   236  007D1B  65                 	db	101	;'e'
   237  007D1C  6E                 	db	110	;'n'
   238  007D1D  74                 	db	116	;'t'
   239  007D1E  61                 	db	97	;'a'
   240  007D1F  6A                 	db	106	;'j'
   241  007D20  65                 	db	101	;'e'
   242  007D21  20                 	db	32
   243  007D22  48                 	db	72	;'H'
   244  007D23  75                 	db	117	;'u'
   245  007D24  6D                 	db	109	;'m'
   246  007D25  65                 	db	101	;'e'
   247  007D26  64                 	db	100	;'d'
   248  007D27  61                 	db	97	;'a'
   249  007D28  64                 	db	100	;'d'
   250  007D29  20                 	db	32
   251  007D2A  64                 	db	100	;'d'
   252  007D2B  65                 	db	101	;'e'
   253  007D2C  6C                 	db	108	;'l'
   254  007D2D  20                 	db	32
   255  007D2E  73                 	db	115	;'s'
   256  007D2F  65                 	db	101	;'e'
   257  007D30  6E                 	db	110	;'n'
   258  007D31  73                 	db	115	;'s'
   259  007D32  6F                 	db	111	;'o'
   260  007D33  72                 	db	114	;'r'
   261  007D34  20                 	db	32
   262  007D35  25                 	db	37
   263  007D36  64                 	db	100	;'d'
   264  007D37  3A                 	db	58	;':'
   265  007D38  20                 	db	32
   266  007D39  25                 	db	37
   267  007D3A  64                 	db	100	;'d'
   268  007D3B  20                 	db	32
   269  007D3C  25                 	db	37
   270  007D3D  63                 	db	99	;'c'
   271  007D3E  0D                 	db	13
   272  007D3F  0A                 	db	10
   273  007D40  00                 	db	0
   274  007D41                     STR_15:
   275  007D41  0D                 	db	13
   276  007D42  0A                 	db	10
   277  007D43  44                 	db	68	;'D'
   278  007D44  20                 	db	32
   279  007D45  3D                 	db	61	;'='
   280  007D46  20                 	db	32
   281  007D47  44                 	db	68	;'D'
   282  007D48  49                 	db	73	;'I'
   283  007D49  41                 	db	65	;'A'
   284  007D4A  53                 	db	83	;'S'
   285  007D4B  20                 	db	32
   286  007D4C  51                 	db	81	;'Q'
   287  007D4D  55                 	db	85	;'U'
   288  007D4E  45                 	db	69	;'E'
   289  007D4F  20                 	db	32
   290  007D50  45                 	db	69	;'E'
   291  007D51  4E                 	db	78	;'N'
   292  007D52  20                 	db	32
   293  007D53  4C                 	db	76	;'L'
   294  007D54  4F                 	db	79	;'O'
   295  007D55  53                 	db	83	;'S'
   296  007D56  20                 	db	32
   297  007D57  51                 	db	81	;'Q'
   298  007D58  55                 	db	85	;'U'
   299  007D59  45                 	db	69	;'E'
   300  007D5A  20                 	db	32
   301  007D5B  53                 	db	83	;'S'
   302  007D5C  45                 	db	69	;'E'
   303  007D5D  20                 	db	32
   304  007D5E  52                 	db	82	;'R'
   305  007D5F  45                 	db	69	;'E'
   306  007D60  47                 	db	71	;'G'
   307  007D61  41                 	db	65	;'A'
   308  007D62  52                 	db	82	;'R'
   309  007D63  41                 	db	65	;'A'
   310  007D64  0D                 	db	13
   311  007D65  0A                 	db	10
   312  007D66  00                 	db	0
   313  007D67                     STR_1:
   314  007D67  0D                 	db	13
   315  007D68  0A                 	db	10
   316  007D69  20                 	db	32
   317  007D6A  49                 	db	73	;'I'
   318  007D6B  6E                 	db	110	;'n'
   319  007D6C  67                 	db	103	;'g'
   320  007D6D  72                 	db	114	;'r'
   321  007D6E  65                 	db	101	;'e'
   322  007D6F  73                 	db	115	;'s'
   323  007D70  61                 	db	97	;'a'
   324  007D71  20                 	db	32
   325  007D72  75                 	db	117	;'u'
   326  007D73  6E                 	db	110	;'n'
   327  007D74  61                 	db	97	;'a'
   328  007D75  20                 	db	32
   329  007D76  6F                 	db	111	;'o'
   330  007D77  70                 	db	112	;'p'
   331  007D78  63                 	db	99	;'c'
   332  007D79  69                 	db	105	;'i'
   333  007D7A  6F                 	db	111	;'o'
   334  007D7B  6E                 	db	110	;'n'
   335  007D7C  20                 	db	32
   336  007D7D  61                 	db	97	;'a'
   337  007D7E  20                 	db	32
   338  007D7F  52                 	db	82	;'R'
   339  007D80  65                 	db	101	;'e'
   340  007D81  61                 	db	97	;'a'
   341  007D82  6C                 	db	108	;'l'
   342  007D83  69                 	db	105	;'i'
   343  007D84  7A                 	db	122	;'z'
   344  007D85  61                 	db	97	;'a'
   345  007D86  72                 	db	114	;'r'
   346  007D87  3A                 	db	58	;':'
   347  007D88  20                 	db	32
   348  007D89  0D                 	db	13
   349  007D8A  0A                 	db	10
   350  007D8B  00                 	db	0
   351  007D8C  0D                 	db	13
   352  007D8D  0A                 	db	10
   353  007D8E  20                 	db	32
   354  007D8F  32                 	db	50	;'2'
   355  007D90  2E                 	db	46
   356  007D91  20                 	db	32
   357  007D92  41                 	db	65	;'A'
   358  007D93  73                 	db	115	;'s'
   359  007D94  69                 	db	105	;'i'
   360  007D95  67                 	db	103	;'g'
   361  007D96  6E                 	db	110	;'n'
   362  007D97  61                 	db	97	;'a'
   363  007D98  72                 	db	114	;'r'
   364  007D99  20                 	db	32
   365  007D9A  48                 	db	72	;'H'
   366  007D9B  6F                 	db	111	;'o'
   367  007D9C  72                 	db	114	;'r'
   368  007D9D  61                 	db	97	;'a'
   369  007D9E  72                 	db	114	;'r'
   370  007D9F  69                 	db	105	;'i'
   371  007DA0  6F                 	db	111	;'o'
   372  007DA1  73                 	db	115	;'s'
   373  007DA2  20                 	db	32
   374  007DA3  70                 	db	112	;'p'
   375  007DA4  61                 	db	97	;'a'
   376  007DA5  72                 	db	114	;'r'
   377  007DA6  61                 	db	97	;'a'
   378  007DA7  20                 	db	32
   379  007DA8  72                 	db	114	;'r'
   380  007DA9  65                 	db	101	;'e'
   381  007DAA  67                 	db	103	;'g'
   382  007DAB  61                 	db	97	;'a'
   383  007DAC  72                 	db	114	;'r'
   384  007DAD  20                 	db	32
   385  007DAE  0D                 	db	13
   386  007DAF  0A                 	db	10
   387  007DB0  00                 	db	0
   388  007DB1  0D                 	db	13
   389  007DB2  0A                 	db	10
   390  007DB3  20                 	db	32
   391  007DB4  38                 	db	56	;'8'
   392  007DB5  2E                 	db	46
   393  007DB6  20                 	db	32
   394  007DB7  43                 	db	67	;'C'
   395  007DB8  61                 	db	97	;'a'
   396  007DB9  72                 	db	114	;'r'
   397  007DBA  67                 	db	103	;'g'
   398  007DBB  61                 	db	97	;'a'
   399  007DBC  72                 	db	114	;'r'
   400  007DBD  20                 	db	32
   401  007DBE  64                 	db	100	;'d'
   402  007DBF  61                 	db	97	;'a'
   403  007DC0  74                 	db	116	;'t'
   404  007DC1  6F                 	db	111	;'o'
   405  007DC2  73                 	db	115	;'s'
   406  007DC3  20                 	db	32
   407  007DC4  64                 	db	100	;'d'
   408  007DC5  65                 	db	101	;'e'
   409  007DC6  20                 	db	32
   410  007DC7  6C                 	db	108	;'l'
   411  007DC8  61                 	db	97	;'a'
   412  007DC9  20                 	db	32
   413  007DCA  6D                 	db	109	;'m'
   414  007DCB  65                 	db	101	;'e'
   415  007DCC  6D                 	db	109	;'m'
   416  007DCD  6F                 	db	111	;'o'
   417  007DCE  72                 	db	114	;'r'
   418  007DCF  69                 	db	105	;'i'
   419  007DD0  61                 	db	97	;'a'
   420  007DD1  20                 	db	32
   421  007DD2  0D                 	db	13
   422  007DD3  0A                 	db	10
   423  007DD4  00                 	db	0
   424  007DD5                     STR_14:
   425  007DD5  0D                 	db	13
   426  007DD6  0A                 	db	10
   427  007DD7  54                 	db	84	;'T'
   428  007DD8  20                 	db	32
   429  007DD9  3D                 	db	61	;'='
   430  007DDA  20                 	db	32
   431  007DDB  4D                 	db	77	;'M'
   432  007DDC  49                 	db	73	;'I'
   433  007DDD  4E                 	db	78	;'N'
   434  007DDE  55                 	db	85	;'U'
   435  007DDF  54                 	db	84	;'T'
   436  007DE0  4F                 	db	79	;'O'
   437  007DE1  53                 	db	83	;'S'
   438  007DE2  20                 	db	32
   439  007DE3  51                 	db	81	;'Q'
   440  007DE4  55                 	db	85	;'U'
   441  007DE5  45                 	db	69	;'E'
   442  007DE6  20                 	db	32
   443  007DE7  44                 	db	68	;'D'
   444  007DE8  55                 	db	85	;'U'
   445  007DE9  52                 	db	82	;'R'
   446  007DEA  41                 	db	65	;'A'
   447  007DEB  52                 	db	82	;'R'
   448  007DEC  41                 	db	65	;'A'
   449  007DED  20                 	db	32
   450  007DEE  45                 	db	69	;'E'
   451  007DEF  4C                 	db	76	;'L'
   452  007DF0  20                 	db	32
   453  007DF1  52                 	db	82	;'R'
   454  007DF2  49                 	db	73	;'I'
   455  007DF3  45                 	db	69	;'E'
   456  007DF4  47                 	db	71	;'G'
   457  007DF5  4F                 	db	79	;'O'
   458  007DF6  0D                 	db	13
   459  007DF7  0A                 	db	10
   460  007DF8  00                 	db	0
   461  007DF9  0D                 	db	13
   462  007DFA  0A                 	db	10
   463  007DFB  20                 	db	32
   464  007DFC  35                 	db	53	;'5'
   465  007DFD  2E                 	db	46
   466  007DFE  20                 	db	32
   467  007DFF  4D                 	db	77	;'M'
   468  007E00  6F                 	db	111	;'o'
   469  007E01  73                 	db	115	;'s'
   470  007E02  74                 	db	116	;'t'
   471  007E03  72                 	db	114	;'r'
   472  007E04  61                 	db	97	;'a'
   473  007E05  72                 	db	114	;'r'
   474  007E06  20                 	db	32
   475  007E07  76                 	db	118	;'v'
   476  007E08  61                 	db	97	;'a'
   477  007E09  6C                 	db	108	;'l'
   478  007E0A  6F                 	db	111	;'o'
   479  007E0B  72                 	db	114	;'r'
   480  007E0C  65                 	db	101	;'e'
   481  007E0D  73                 	db	115	;'s'
   482  007E0E  20                 	db	32
   483  007E0F  73                 	db	115	;'s'
   484  007E10  65                 	db	101	;'e'
   485  007E11  6E                 	db	110	;'n'
   486  007E12  73                 	db	115	;'s'
   487  007E13  6F                 	db	111	;'o'
   488  007E14  72                 	db	114	;'r'
   489  007E15  65                 	db	101	;'e'
   490  007E16  73                 	db	115	;'s'
   491  007E17  20                 	db	32
   492  007E18  0D                 	db	13
   493  007E19  0A                 	db	10
   494  007E1A  00                 	db	0
   495  007E1B  0D                 	db	13
   496  007E1C  0A                 	db	10
   497  007E1D  20                 	db	32
   498  007E1E  34                 	db	52	;'4'
   499  007E1F  2E                 	db	46
   500  007E20  20                 	db	32
   501  007E21  44                 	db	68	;'D'
   502  007E22  61                 	db	97	;'a'
   503  007E23  6D                 	db	109	;'m'
   504  007E24  65                 	db	101	;'e'
   505  007E25  20                 	db	32
   506  007E26  64                 	db	100	;'d'
   507  007E27  61                 	db	97	;'a'
   508  007E28  74                 	db	116	;'t'
   509  007E29  6F                 	db	111	;'o'
   510  007E2A  73                 	db	115	;'s'
   511  007E2B  20                 	db	32
   512  007E2C  64                 	db	100	;'d'
   513  007E2D  65                 	db	101	;'e'
   514  007E2E  6C                 	db	108	;'l'
   515  007E2F  20                 	db	32
   516  007E30  73                 	db	115	;'s'
   517  007E31  69                 	db	105	;'i'
   518  007E32  73                 	db	115	;'s'
   519  007E33  74                 	db	116	;'t'
   520  007E34  65                 	db	101	;'e'
   521  007E35  6D                 	db	109	;'m'
   522  007E36  61                 	db	97	;'a'
   523  007E37  20                 	db	32
   524  007E38  0D                 	db	13
   525  007E39  0A                 	db	10
   526  007E3A  00                 	db	0
   527  007E3B                     STR_25:
   528  007E3B  0D                 	db	13
   529  007E3C  0A                 	db	10
   530  007E3D  0A                 	db	10
   531  007E3E  4C                 	db	76	;'L'
   532  007E3F  61                 	db	97	;'a'
   533  007E40  20                 	db	32
   534  007E41  48                 	db	72	;'H'
   535  007E42  75                 	db	117	;'u'
   536  007E43  6D                 	db	109	;'m'
   537  007E44  65                 	db	101	;'e'
   538  007E45  64                 	db	100	;'d'
   539  007E46  61                 	db	97	;'a'
   540  007E47  64                 	db	100	;'d'
   541  007E48  20                 	db	32
   542  007E49  41                 	db	65	;'A'
   543  007E4A  6D                 	db	109	;'m'
   544  007E4B  62                 	db	98	;'b'
   545  007E4C  69                 	db	105	;'i'
   546  007E4D  65                 	db	101	;'e'
   547  007E4E  6E                 	db	110	;'n'
   548  007E4F  74                 	db	116	;'t'
   549  007E50  65                 	db	101	;'e'
   550  007E51  20                 	db	32
   551  007E52  65                 	db	101	;'e'
   552  007E53  73                 	db	115	;'s'
   553  007E54  3A                 	db	58	;':'
   554  007E55  20                 	db	32
   555  007E56  25                 	db	37
   556  007E57  64                 	db	100	;'d'
   557  007E58  0D                 	db	13
   558  007E59  0A                 	db	10
   559  007E5A  00                 	db	0
   560  007E5B                     STR_26:
   561  007E5B  0D                 	db	13
   562  007E5C  0A                 	db	10
   563  007E5D  0A                 	db	10
   564  007E5E  4C                 	db	76	;'L'
   565  007E5F  61                 	db	97	;'a'
   566  007E60  20                 	db	32
   567  007E61  54                 	db	84	;'T'
   568  007E62  65                 	db	101	;'e'
   569  007E63  6D                 	db	109	;'m'
   570  007E64  70                 	db	112	;'p'
   571  007E65  65                 	db	101	;'e'
   572  007E66  72                 	db	114	;'r'
   573  007E67  61                 	db	97	;'a'
   574  007E68  74                 	db	116	;'t'
   575  007E69  75                 	db	117	;'u'
   576  007E6A  72                 	db	114	;'r'
   577  007E6B  61                 	db	97	;'a'
   578  007E6C  20                 	db	32
   579  007E6D  65                 	db	101	;'e'
   580  007E6E  73                 	db	115	;'s'
   581  007E6F  3A                 	db	58	;':'
   582  007E70  20                 	db	32
   583  007E71  25                 	db	37
   584  007E72  64                 	db	100	;'d'
   585  007E73  20                 	db	32
   586  007E74  43                 	db	67	;'C'
   587  007E75  0D                 	db	13
   588  007E76  0A                 	db	10
   589  007E77  00                 	db	0
   590  007E78                     STR_13:
   591  007E78  0D                 	db	13
   592  007E79  0A                 	db	10
   593  007E7A  52                 	db	82	;'R'
   594  007E7B  20                 	db	32
   595  007E7C  3D                 	db	61	;'='
   596  007E7D  20                 	db	32
   597  007E7E  52                 	db	82	;'R'
   598  007E7F  45                 	db	69	;'E'
   599  007E80  47                 	db	71	;'G'
   600  007E81  41                 	db	65	;'A'
   601  007E82  52                 	db	82	;'R'
   602  007E83  28                 	db	40
   603  007E84  20                 	db	32
   604  007E85  31                 	db	49	;'1'
   605  007E86  20                 	db	32
   606  007E87  53                 	db	83	;'S'
   607  007E88  49                 	db	73	;'I'
   608  007E89  20                 	db	32
   609  007E8A  7C                 	db	124
   610  007E8B  20                 	db	32
   611  007E8C  30                 	db	48	;'0'
   612  007E8D  20                 	db	32
   613  007E8E  4E                 	db	78	;'N'
   614  007E8F  4F                 	db	79	;'O'
   615  007E90  29                 	db	41
   616  007E91  0D                 	db	13
   617  007E92  0A                 	db	10
   618  007E93  00                 	db	0
   619  007E94  0D                 	db	13
   620  007E95  0A                 	db	10
   621  007E96  20                 	db	32
   622  007E97  31                 	db	49	;'1'
   623  007E98  2E                 	db	46
   624  007E99  20                 	db	32
   625  007E9A  46                 	db	70	;'F'
   626  007E9B  69                 	db	105	;'i'
   627  007E9C  6A                 	db	106	;'j'
   628  007E9D  61                 	db	97	;'a'
   629  007E9E  72                 	db	114	;'r'
   630  007E9F  20                 	db	32
   631  007EA0  48                 	db	72	;'H'
   632  007EA1  6F                 	db	111	;'o'
   633  007EA2  72                 	db	114	;'r'
   634  007EA3  61                 	db	97	;'a'
   635  007EA4  20                 	db	32
   636  007EA5  41                 	db	65	;'A'
   637  007EA6  63                 	db	99	;'c'
   638  007EA7  74                 	db	116	;'t'
   639  007EA8  75                 	db	117	;'u'
   640  007EA9  61                 	db	97	;'a'
   641  007EAA  6C                 	db	108	;'l'
   642  007EAB  20                 	db	32
   643  007EAC  0D                 	db	13
   644  007EAD  0A                 	db	10
   645  007EAE  00                 	db	0
   646  007EAF                     STR_21:
   647  007EAF  0D                 	db	13
   648  007EB0  0A                 	db	10
   649  007EB1  25                 	db	37
   650  007EB2  30                 	db	48	;'0'
   651  007EB3  2E                 	db	46
   652  007EB4  32                 	db	50	;'2'
   653  007EB5  64                 	db	100	;'d'
   654  007EB6  3A                 	db	58	;':'
   655  007EB7  25                 	db	37
   656  007EB8  30                 	db	48	;'0'
   657  007EB9  2E                 	db	46
   658  007EBA  32                 	db	50	;'2'
   659  007EBB  64                 	db	100	;'d'
   660  007EBC  7C                 	db	124
   661  007EBD  20                 	db	32
   662  007EBE  4D                 	db	77	;'M'
   663  007EBF  49                 	db	73	;'I'
   664  007EC0  45                 	db	69	;'E'
   665  007EC1  52                 	db	82	;'R'
   666  007EC2  43                 	db	67	;'C'
   667  007EC3  4F                 	db	79	;'O'
   668  007EC4  4C                 	db	76	;'L'
   669  007EC5  45                 	db	69	;'E'
   670  007EC6  53                 	db	83	;'S'
   671  007EC7  0D                 	db	13
   672  007EC8  0A                 	db	10
   673  007EC9  00                 	db	0
   674  007ECA  0D                 	db	13
   675  007ECB  0A                 	db	10
   676  007ECC  20                 	db	32
   677  007ECD  37                 	db	55	;'7'
   678  007ECE  2E                 	db	46
   679  007ECF  20                 	db	32
   680  007ED0  46                 	db	70	;'F'
   681  007ED1  69                 	db	105	;'i'
   682  007ED2  6A                 	db	106	;'j'
   683  007ED3  61                 	db	97	;'a'
   684  007ED4  72                 	db	114	;'r'
   685  007ED5  20                 	db	32
   686  007ED6  44                 	db	68	;'D'
   687  007ED7  69                 	db	105	;'i'
   688  007ED8  61                 	db	97	;'a'
   689  007ED9  20                 	db	32
   690  007EDA  41                 	db	65	;'A'
   691  007EDB  63                 	db	99	;'c'
   692  007EDC  74                 	db	116	;'t'
   693  007EDD  75                 	db	117	;'u'
   694  007EDE  61                 	db	97	;'a'
   695  007EDF  6C                 	db	108	;'l'
   696  007EE0  20                 	db	32
   697  007EE1  0D                 	db	13
   698  007EE2  0A                 	db	10
   699  007EE3  00                 	db	0
   700  007EE4                     STR_16:
   701  007EE4  20                 	db	32
   702  007EE5  20                 	db	32
   703  007EE6  20                 	db	32
   704  007EE7  20                 	db	32
   705  007EE8  20                 	db	32
   706  007EE9  20                 	db	32
   707  007EEA  20                 	db	32
   708  007EEB  20                 	db	32
   709  007EEC  20                 	db	32
   710  007EED  20                 	db	32
   711  007EEE  20                 	db	32
   712  007EEF  20                 	db	32
   713  007EF0  20                 	db	32
   714  007EF1  20                 	db	32
   715  007EF2  20                 	db	32
   716  007EF3  20                 	db	32
   717  007EF4  44                 	db	68	;'D'
   718  007EF5  4C                 	db	76	;'L'
   719  007EF6  4D                 	db	77	;'M'
   720  007EF7  49                 	db	73	;'I'
   721  007EF8  4A                 	db	74	;'J'
   722  007EF9  56                 	db	86	;'V'
   723  007EFA  53                 	db	83	;'S'
   724  007EFB  0D                 	db	13
   725  007EFC  0A                 	db	10
   726  007EFD  00                 	db	0
   727  007EFE                     STR_18:
   728  007EFE  0D                 	db	13
   729  007EFF  0A                 	db	10
   730  007F00  25                 	db	37
   731  007F01  30                 	db	48	;'0'
   732  007F02  2E                 	db	46
   733  007F03  32                 	db	50	;'2'
   734  007F04  64                 	db	100	;'d'
   735  007F05  3A                 	db	58	;':'
   736  007F06  25                 	db	37
   737  007F07  30                 	db	48	;'0'
   738  007F08  2E                 	db	46
   739  007F09  32                 	db	50	;'2'
   740  007F0A  64                 	db	100	;'d'
   741  007F0B  7C                 	db	124
   742  007F0C  20                 	db	32
   743  007F0D  44                 	db	68	;'D'
   744  007F0E  4F                 	db	79	;'O'
   745  007F0F  4D                 	db	77	;'M'
   746  007F10  49                 	db	73	;'I'
   747  007F11  4E                 	db	78	;'N'
   748  007F12  47                 	db	71	;'G'
   749  007F13  4F                 	db	79	;'O'
   750  007F14  0D                 	db	13
   751  007F15  0A                 	db	10
   752  007F16  00                 	db	0
   753  007F17                     STR_23:
   754  007F17  0D                 	db	13
   755  007F18  0A                 	db	10
   756  007F19  25                 	db	37
   757  007F1A  30                 	db	48	;'0'
   758  007F1B  2E                 	db	46
   759  007F1C  32                 	db	50	;'2'
   760  007F1D  64                 	db	100	;'d'
   761  007F1E  3A                 	db	58	;':'
   762  007F1F  25                 	db	37
   763  007F20  30                 	db	48	;'0'
   764  007F21  2E                 	db	46
   765  007F22  32                 	db	50	;'2'
   766  007F23  64                 	db	100	;'d'
   767  007F24  7C                 	db	124
   768  007F25  20                 	db	32
   769  007F26  56                 	db	86	;'V'
   770  007F27  49                 	db	73	;'I'
   771  007F28  45                 	db	69	;'E'
   772  007F29  52                 	db	82	;'R'
   773  007F2A  4E                 	db	78	;'N'
   774  007F2B  45                 	db	69	;'E'
   775  007F2C  53                 	db	83	;'S'
   776  007F2D  0D                 	db	13
   777  007F2E  0A                 	db	10
   778  007F2F  00                 	db	0
   779  007F30                     STR_24:
   780  007F30  0D                 	db	13
   781  007F31  0A                 	db	10
   782  007F32  25                 	db	37
   783  007F33  30                 	db	48	;'0'
   784  007F34  2E                 	db	46
   785  007F35  32                 	db	50	;'2'
   786  007F36  64                 	db	100	;'d'
   787  007F37  3A                 	db	58	;':'
   788  007F38  25                 	db	37
   789  007F39  30                 	db	48	;'0'
   790  007F3A  2E                 	db	46
   791  007F3B  32                 	db	50	;'2'
   792  007F3C  64                 	db	100	;'d'
   793  007F3D  7C                 	db	124
   794  007F3E  20                 	db	32
   795  007F3F  53                 	db	83	;'S'
   796  007F40  41                 	db	65	;'A'
   797  007F41  42                 	db	66	;'B'
   798  007F42  41                 	db	65	;'A'
   799  007F43  44                 	db	68	;'D'
   800  007F44  4F                 	db	79	;'O'
   801  007F45  0D                 	db	13
   802  007F46  0A                 	db	10
   803  007F47  00                 	db	0
   804  007F48                     STR_20:
   805  007F48  0D                 	db	13
   806  007F49  0A                 	db	10
   807  007F4A  25                 	db	37
   808  007F4B  30                 	db	48	;'0'
   809  007F4C  2E                 	db	46
   810  007F4D  32                 	db	50	;'2'
   811  007F4E  64                 	db	100	;'d'
   812  007F4F  3A                 	db	58	;':'
   813  007F50  25                 	db	37
   814  007F51  30                 	db	48	;'0'
   815  007F52  2E                 	db	46
   816  007F53  32                 	db	50	;'2'
   817  007F54  64                 	db	100	;'d'
   818  007F55  7C                 	db	124
   819  007F56  20                 	db	32
   820  007F57  4D                 	db	77	;'M'
   821  007F58  41                 	db	65	;'A'
   822  007F59  52                 	db	82	;'R'
   823  007F5A  54                 	db	84	;'T'
   824  007F5B  45                 	db	69	;'E'
   825  007F5C  53                 	db	83	;'S'
   826  007F5D  0D                 	db	13
   827  007F5E  0A                 	db	10
   828  007F5F  00                 	db	0
   829  007F60                     STR_22:
   830  007F60  0D                 	db	13
   831  007F61  0A                 	db	10
   832  007F62  25                 	db	37
   833  007F63  30                 	db	48	;'0'
   834  007F64  2E                 	db	46
   835  007F65  32                 	db	50	;'2'
   836  007F66  64                 	db	100	;'d'
   837  007F67  3A                 	db	58	;':'
   838  007F68  25                 	db	37
   839  007F69  30                 	db	48	;'0'
   840  007F6A  2E                 	db	46
   841  007F6B  32                 	db	50	;'2'
   842  007F6C  64                 	db	100	;'d'
   843  007F6D  7C                 	db	124
   844  007F6E  20                 	db	32
   845  007F6F  4A                 	db	74	;'J'
   846  007F70  55                 	db	85	;'U'
   847  007F71  45                 	db	69	;'E'
   848  007F72  56                 	db	86	;'V'
   849  007F73  45                 	db	69	;'E'
   850  007F74  53                 	db	83	;'S'
   851  007F75  0D                 	db	13
   852  007F76  0A                 	db	10
   853  007F77  00                 	db	0
   854  007F78                     STR_17:
   855  007F78  48                 	db	72	;'H'
   856  007F79  3A                 	db	58	;':'
   857  007F7A  25                 	db	37
   858  007F7B  32                 	db	50	;'2'
   859  007F7C  64                 	db	100	;'d'
   860  007F7D  7C                 	db	124
   861  007F7E  52                 	db	82	;'R'
   862  007F7F  3A                 	db	58	;':'
   863  007F80  25                 	db	37
   864  007F81  64                 	db	100	;'d'
   865  007F82  7C                 	db	124
   866  007F83  54                 	db	84	;'T'
   867  007F84  3A                 	db	58	;':'
   868  007F85  25                 	db	37
   869  007F86  32                 	db	50	;'2'
   870  007F87  64                 	db	100	;'d'
   871  007F88  7C                 	db	124
   872  007F89  44                 	db	68	;'D'
   873  007F8A  3A                 	db	58	;':'
   874  007F8B  25                 	db	37
   875  007F8C  73                 	db	115	;'s'
   876  007F8D  0D                 	db	13
   877  007F8E  0A                 	db	10
   878  007F8F  00                 	db	0
   879  007F90  0D                 	db	13
   880  007F91  0A                 	db	10
   881  007F92  20                 	db	32
   882  007F93  36                 	db	54	;'6'
   883  007F94  2E                 	db	46
   884  007F95  20                 	db	32
   885  007F96  52                 	db	82	;'R'
   886  007F97  65                 	db	101	;'e'
   887  007F98  67                 	db	103	;'g'
   888  007F99  61                 	db	97	;'a'
   889  007F9A  64                 	db	100	;'d'
   890  007F9B  6F                 	db	111	;'o'
   891  007F9C  20                 	db	32
   892  007F9D  72                 	db	114	;'r'
   893  007F9E  61                 	db	97	;'a'
   894  007F9F  70                 	db	112	;'p'
   895  007FA0  69                 	db	105	;'i'
   896  007FA1  64                 	db	100	;'d'
   897  007FA2  6F                 	db	111	;'o'
   898  007FA3  20                 	db	32
   899  007FA4  0D                 	db	13
   900  007FA5  0A                 	db	10
   901  007FA6  00                 	db	0
   902  007FA7                     STR_19:
   903  007FA7  0D                 	db	13
   904  007FA8  0A                 	db	10
   905  007FA9  25                 	db	37
   906  007FAA  30                 	db	48	;'0'
   907  007FAB  2E                 	db	46
   908  007FAC  32                 	db	50	;'2'
   909  007FAD  64                 	db	100	;'d'
   910  007FAE  3A                 	db	58	;':'
   911  007FAF  25                 	db	37
   912  007FB0  30                 	db	48	;'0'
   913  007FB1  2E                 	db	46
   914  007FB2  32                 	db	50	;'2'
   915  007FB3  64                 	db	100	;'d'
   916  007FB4  7C                 	db	124
   917  007FB5  20                 	db	32
   918  007FB6  4C                 	db	76	;'L'
   919  007FB7  55                 	db	85	;'U'
   920  007FB8  4E                 	db	78	;'N'
   921  007FB9  45                 	db	69	;'E'
   922  007FBA  53                 	db	83	;'S'
   923  007FBB  0D                 	db	13
   924  007FBC  0A                 	db	10
   925  007FBD  00                 	db	0
   926  007FBE  41                 	db	65	;'A'
   927  007FBF  54                 	db	84	;'T'
   928  007FC0  2B                 	db	43
   929  007FC1  4E                 	db	78	;'N'
   930  007FC2  41                 	db	65	;'A'
   931  007FC3  4D                 	db	77	;'M'
   932  007FC4  45                 	db	69	;'E'
   933  007FC5  53                 	db	83	;'S'
   934  007FC6  4D                 	db	77	;'M'
   935  007FC7  41                 	db	65	;'A'
   936  007FC8  52                 	db	82	;'R'
   937  007FC9  54                 	db	84	;'T'
   938  007FCA  48                 	db	72	;'H'
   939  007FCB  4F                 	db	79	;'O'
   940  007FCC  4D                 	db	77	;'M'
   941  007FCD  45                 	db	69	;'E'
   942  007FCE  00                 	db	0
   943  007FCF  0D                 	db	13
   944  007FD0  0A                 	db	10
   945  007FD1  20                 	db	32
   946  007FD2  4F                 	db	79	;'O'
   947  007FD3  70                 	db	112	;'p'
   948  007FD4  63                 	db	99	;'c'
   949  007FD5  69                 	db	105	;'i'
   950  007FD6  6F                 	db	111	;'o'
   951  007FD7  6E                 	db	110	;'n'
   952  007FD8  3A                 	db	58	;':'
   953  007FD9  20                 	db	32
   954  007FDA  20                 	db	32
   955  007FDB  0D                 	db	13
   956  007FDC  00                 	db	0
   957  007FDD                     STR_12:
   958  007FDD  0D                 	db	13
   959  007FDE  0A                 	db	10
   960  007FDF  48                 	db	72	;'H'
   961  007FE0  20                 	db	32
   962  007FE1  3D                 	db	61	;'='
   963  007FE2  20                 	db	32
   964  007FE3  48                 	db	72	;'H'
   965  007FE4  4F                 	db	79	;'O'
   966  007FE5  52                 	db	82	;'R'
   967  007FE6  41                 	db	65	;'A'
   968  007FE7  0D                 	db	13
   969  007FE8  0A                 	db	10
   970  007FE9  00                 	db	0
   971  007FEA  41                 	db	65	;'A'
   972  007FEB  54                 	db	84	;'T'
   973  007FEC  2B                 	db	43
   974  007FED  50                 	db	80	;'P'
   975  007FEE  49                 	db	73	;'I'
   976  007FEF  4E                 	db	78	;'N'
   977  007FF0  32                 	db	50	;'2'
   978  007FF1  35                 	db	53	;'5'
   979  007FF2  30                 	db	48	;'0'
   980  007FF3  31                 	db	49	;'1'
   981  007FF4  00                 	db	0
   982  007FF5  41                 	db	65	;'A'
   983  007FF6  54                 	db	84	;'T'
   984  007FF7  2B                 	db	43
   985  007FF8  42                 	db	66	;'B'
   986  007FF9  41                 	db	65	;'A'
   987  007FFA  55                 	db	85	;'U'
   988  007FFB  44                 	db	68	;'D'
   989  007FFC  34                 	db	52	;'4'
   990  007FFD  00                 	db	0
   991  0000                     
   992                           ; #config settings
   993  007FFE  00                 	db	0	; dummy byte at the end
   994  0000                     
   995                           	psect	cinit
   996  002B02                     __pcinit:
   997                           	opt callstack 0
   998  002B02                     start_initialization:
   999                           	opt callstack 0
  1000  002B02                     __initialization:
  1001                           	opt callstack 0
  1002                           
  1003                           ; Initialize objects allocated to BANK0 (11 bytes)
  1004                           ; load TBLPTR registers with __pidataBANK0
  1005  002B02  0E14               	movlw	low __pidataBANK0
  1006  002B04  6EF6               	movwf	tblptrl,c
  1007  002B06  0E31               	movlw	high __pidataBANK0
  1008  002B08  6EF7               	movwf	tblptrh,c
  1009  002B0A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1010  002B0C  6EF8               	movwf	tblptru,c
  1011  002B0E  EE00  F0F4         	lfsr	0,__pdataBANK0
  1012  002B12  EE10 F00B          	lfsr	1,11
  1013  002B16                     copy_data0:
  1014  002B16  0009               	tblrd		*+
  1015  002B18  CFF5 FFEE          	movff	tablat,postinc0
  1016  002B1C  50E5               	movf	postdec1,w,c
  1017  002B1E  50E1               	movf	fsr1l,w,c
  1018  002B20  E1FA               	bnz	copy_data0
  1019                           
  1020                           ; Clear objects allocated to BIGRAM (288 bytes)
  1021  002B22  EE01  F032         	lfsr	0,__pbssBIGRAM
  1022  002B26  EE11 F020          	lfsr	1,288
  1023  002B2A                     clear_0:
  1024  002B2A  6AEE               	clrf	postinc0,c
  1025  002B2C  50E5               	movf	postdec1,w,c
  1026  002B2E  50E1               	movf	fsr1l,w,c
  1027  002B30  E1FC               	bnz	clear_0
  1028  002B32  50E2               	movf	fsr1h,w,c
  1029  002B34  E1FA               	bnz	clear_0
  1030                           
  1031                           ; Clear objects allocated to BANK1 (50 bytes)
  1032  002B36  EE01  F000         	lfsr	0,__pbssBANK1
  1033  002B3A  0E32               	movlw	50
  1034  002B3C                     clear_1:
  1035  002B3C  6AEE               	clrf	postinc0,c
  1036  002B3E  06E8               	decf	wreg,f,c
  1037  002B40  E1FD               	bnz	clear_1
  1038                           
  1039                           ; Clear objects allocated to BANK0 (77 bytes)
  1040  002B42  EE00  F060         	lfsr	0,__pbssBANK0
  1041  002B46  0E4D               	movlw	77
  1042  002B48                     clear_2:
  1043  002B48  6AEE               	clrf	postinc0,c
  1044  002B4A  06E8               	decf	wreg,f,c
  1045  002B4C  E1FD               	bnz	clear_2
  1046  002B4E                     end_of_initialization:
  1047                           	opt callstack 0
  1048  002B4E                     __end_of__initialization:
  1049                           	opt callstack 0
  1050  002B4E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1051  002B50  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1052  002B52  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1053  002B54  6EF8               	movwf	tblptru,c
  1054  002B56  0100               	movlb	0
  1055  002B58  EFD7  F012         	goto	_main	;jump to C main() function
  1056                           
  1057                           	psect	bssBANK0
  1058  000060                     __pbssBANK0:
  1059                           	opt callstack 0
  1060  000060                     _sensores:
  1061                           	opt callstack 0
  1062  000060                     	ds	16
  1063  000070                     _nout:
  1064                           	opt callstack 0
  1065  000070                     	ds	2
  1066  000072                     _width:
  1067                           	opt callstack 0
  1068  000072                     	ds	2
  1069  000074                     _prec:
  1070                           	opt callstack 0
  1071  000074                     	ds	2
  1072  000076                     _flags:
  1073                           	opt callstack 0
  1074  000076                     	ds	2
  1075  000078                     _contInterrupciones:
  1076                           	opt callstack 0
  1077  000078                     	ds	2
  1078  00007A                     _peticionLecturaSensores:
  1079                           	opt callstack 0
  1080  00007A                     	ds	1
  1081  00007B                     _regando:
  1082                           	opt callstack 0
  1083  00007B                     	ds	1
  1084  00007C                     _minutosTranscurridos:
  1085                           	opt callstack 0
  1086  00007C                     	ds	1
  1087  00007D                     _minutosRegar:
  1088                           	opt callstack 0
  1089  00007D                     	ds	1
  1090  00007E                     _Humedad:
  1091                           	opt callstack 0
  1092  00007E                     	ds	1
  1093  00007F                     _Temperatura:
  1094                           	opt callstack 0
  1095  00007F                     	ds	1
  1096  000080                     _flagRegado:
  1097                           	opt callstack 0
  1098  000080                     	ds	1
  1099  000081                     _tempHora:
  1100                           	opt callstack 0
  1101  000081                     	ds	1
  1102  000082                     _overflowTimer:
  1103                           	opt callstack 0
  1104  000082                     	ds	1
  1105  000083                     _datoRecibido:
  1106                           	opt callstack 0
  1107  000083                     	ds	1
  1108  000084                     _diaActual:
  1109                           	opt callstack 0
  1110  000084                     	ds	1
  1111  000085                     _segundos:
  1112                           	opt callstack 0
  1113  000085                     	ds	1
  1114  000086                     _minutos:
  1115                           	opt callstack 0
  1116  000086                     	ds	1
  1117  000087                     _hora:
  1118                           	opt callstack 0
  1119  000087                     	ds	1
  1120  000088                     _MODO_COMUNICACION:
  1121                           	opt callstack 0
  1122  000088                     	ds	1
  1123  000089                     _esperandoDatos:
  1124                           	opt callstack 0
  1125  000089                     	ds	1
  1126  00008A                     _esperaDatoConcluida:
  1127                           	opt callstack 0
  1128  00008A                     	ds	1
  1129  00008B                     _byteUart:
  1130                           	opt callstack 0
  1131  00008B                     	ds	1
  1132  00008C                     _tiempoInactividadTrans:
  1133                           	opt callstack 0
  1134  00008C                     	ds	1
  1135  00008D                     _dbuf:
  1136                           	opt callstack 0
  1137  00008D                     	ds	32
  1138                           
  1139                           	psect	dataBANK0
  1140  0000F4                     __pdataBANK0:
  1141                           	opt callstack 0
  1142  0000F4                     stoa@F1144:
  1143                           	opt callstack 0
  1144  0000F4                     	ds	7
  1145  0000FB                     _VALOR_TIMER0:
  1146                           	opt callstack 0
  1147  0000FB                     	ds	2
  1148  0000FD                     _VALOR_TIMER0UART:
  1149                           	opt callstack 0
  1150  0000FD                     	ds	2
  1151                           
  1152                           	psect	bssBANK1
  1153  000100                     __pbssBANK1:
  1154                           	opt callstack 0
  1155  000100                     _buffer:
  1156                           	opt callstack 0
  1157  000100                     	ds	50
  1158                           
  1159                           	psect	bssBIGRAM
  1160  000132                     __pbssBIGRAM:
  1161                           	opt callstack 0
  1162  000132                     _horarios:
  1163                           	opt callstack 0
  1164  000132                     	ds	288
  1165                           
  1166                           	psect	cstackBANK0
  1167  0000AD                     __pcstackBANK0:
  1168                           	opt callstack 0
  1169  0000AD                     ?_vfprintf:
  1170                           	opt callstack 0
  1171  0000AD                     vfprintf@fp:
  1172                           	opt callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x0
  1175  0000AD                     	ds	2
  1176  0000AF                     vfprintf@fmt:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x2
  1180  0000AF                     	ds	2
  1181  0000B1                     vfprintf@ap:
  1182                           	opt callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x4
  1185  0000B1                     	ds	2
  1186  0000B3                     ?_sprintf:
  1187                           	opt callstack 0
  1188  0000B3                     sprintf@s:
  1189                           	opt callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x6
  1192  0000B3                     	ds	2
  1193  0000B5                     sprintf@fmt:
  1194                           	opt callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x8
  1197  0000B5                     	ds	12
  1198  0000C1                     sprintf@ap:
  1199                           	opt callstack 0
  1200                           
  1201                           ; 2 bytes @ 0x14
  1202  0000C1                     	ds	2
  1203  0000C3                     sprintf@f:
  1204                           	opt callstack 0
  1205                           
  1206                           ; 6 bytes @ 0x16
  1207  0000C3                     	ds	6
  1208  0000C9                     mostrarDatosSensores@i:
  1209                           	opt callstack 0
  1210  0000C9                     mostrarDatosSensoresWIFI@i:
  1211                           	opt callstack 0
  1212  0000C9                     dameDatosSistema@bufferHorario:
  1213                           	opt callstack 0
  1214                           
  1215                           ; 30 bytes @ 0x1C
  1216  0000C9                     	ds	30
  1217  0000E7                     _dameDatosSistema$1895:
  1218                           	opt callstack 0
  1219                           
  1220                           ; 2 bytes @ 0x3A
  1221  0000E7                     	ds	2
  1222  0000E9                     _dameDatosSistema$1896:
  1223                           	opt callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x3C
  1226  0000E9                     	ds	2
  1227  0000EB                     _dameDatosSistema$1897:
  1228                           	opt callstack 0
  1229                           
  1230                           ; 2 bytes @ 0x3E
  1231  0000EB                     	ds	2
  1232  0000ED                     _dameDatosSistema$1898:
  1233                           	opt callstack 0
  1234                           
  1235                           ; 2 bytes @ 0x40
  1236  0000ED                     	ds	2
  1237  0000EF                     dameDatosSistema@i:
  1238                           	opt callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x42
  1241  0000EF                     	ds	2
  1242  0000F1                     ??_sistemaPrincipal:
  1243                           
  1244                           ; 1 bytes @ 0x44
  1245  0000F1                     	ds	2
  1246  0000F3                     sistemaPrincipal@opcion:
  1247                           	opt callstack 0
  1248                           
  1249                           ; 1 bytes @ 0x46
  1250  0000F3                     	ds	1
  1251                           
  1252                           	psect	cstackCOMRAM
  1253  000001                     __pcstackCOMRAM:
  1254                           	opt callstack 0
  1255  000001                     ??_i2c_espera:
  1256  000001                     ??_convertirDato:
  1257  000001                     ??_DHT11_Start:
  1258  000001                     ?_strlen:
  1259                           	opt callstack 0
  1260  000001                     ?_isdigit:
  1261                           	opt callstack 0
  1262  000001                     ?_isspace:
  1263                           	opt callstack 0
  1264  000001                     ?_horaRegar:
  1265                           	opt callstack 0
  1266  000001                     ?_dameHumedadSuelo:
  1267                           	opt callstack 0
  1268  000001                     ?___wmul:
  1269                           	opt callstack 0
  1270  000001                     ?___awdiv:
  1271                           	opt callstack 0
  1272  000001                     ?___awmod:
  1273                           	opt callstack 0
  1274  000001                     ?___lmul:
  1275                           	opt callstack 0
  1276  000001                     ?___aodiv:
  1277                           	opt callstack 0
  1278  000001                     ?___aomod:
  1279                           	opt callstack 0
  1280  000001                     UART_write@dato:
  1281                           	opt callstack 0
  1282  000001                     DHT11_ReadData@i:
  1283                           	opt callstack 0
  1284  000001                     check_response@respuesta:
  1285                           	opt callstack 0
  1286  000001                     constructorSensor@s:
  1287                           	opt callstack 0
  1288  000001                     limpiarBuffer@i:
  1289                           	opt callstack 0
  1290  000001                     ___wmul@multiplier:
  1291                           	opt callstack 0
  1292  000001                     ___awdiv@dividend:
  1293                           	opt callstack 0
  1294  000001                     ___awmod@dividend:
  1295                           	opt callstack 0
  1296  000001                     isdigit@c:
  1297                           	opt callstack 0
  1298  000001                     isspace@c:
  1299                           	opt callstack 0
  1300  000001                     fputc@c:
  1301                           	opt callstack 0
  1302  000001                     strlen@s:
  1303                           	opt callstack 0
  1304  000001                     ___lmul@multiplier:
  1305                           	opt callstack 0
  1306  000001                     ___aodiv@dividend:
  1307                           	opt callstack 0
  1308  000001                     ___aomod@dividend:
  1309                           	opt callstack 0
  1310                           
  1311                           ; 8 bytes @ 0x0
  1312  000001                     	ds	1
  1313  000002                     i2c_envia_dato@dato:
  1314                           	opt callstack 0
  1315  000002                     i2c_recibe_dato@datoleido:
  1316                           	opt callstack 0
  1317  000002                     convertirDato@dato:
  1318                           	opt callstack 0
  1319  000002                     DHT11_ReadData@data:
  1320                           	opt callstack 0
  1321  000002                     UART_printf@cadena:
  1322                           	opt callstack 0
  1323  000002                     getValue@numCharacters:
  1324                           	opt callstack 0
  1325                           
  1326                           ; 2 bytes @ 0x1
  1327  000002                     	ds	1
  1328  000003                     ??_dameTemperaturaHumedad:
  1329  000003                     ??_isdigit:
  1330  000003                     ??_isspace:
  1331  000003                     ??_horaRegar:
  1332  000003                     ??_dameHumedadSuelo:
  1333  000003                     escribe_rtc@dato:
  1334                           	opt callstack 0
  1335  000003                     leer_rtc@direccion:
  1336                           	opt callstack 0
  1337  000003                     convertirDato@datoR:
  1338                           	opt callstack 0
  1339  000003                     constructorSensor@porcientoHumedad:
  1340                           	opt callstack 0
  1341  000003                     leer_eeprom@direccion:
  1342                           	opt callstack 0
  1343  000003                     ___wmul@multiplicand:
  1344                           	opt callstack 0
  1345  000003                     ___awdiv@divisor:
  1346                           	opt callstack 0
  1347  000003                     ___awmod@divisor:
  1348                           	opt callstack 0
  1349  000003                     fputc@fp:
  1350                           	opt callstack 0
  1351  000003                     strlen@a:
  1352                           	opt callstack 0
  1353                           
  1354                           ; 2 bytes @ 0x2
  1355  000003                     	ds	1
  1356  000004                     ??_getValue:
  1357  000004                     escribe_rtc@direccion:
  1358                           	opt callstack 0
  1359  000004                     leer_rtc@dato:
  1360                           	opt callstack 0
  1361  000004                     constructorSensor@pin:
  1362                           	opt callstack 0
  1363                           
  1364                           ; 1 bytes @ 0x3
  1365  000004                     	ds	1
  1366  000005                     ??_fputc:
  1367  000005                     ??_leer_eeprom:
  1368  000005                     dameHumedadSuelo@canalLeer:
  1369                           	opt callstack 0
  1370  000005                     ___awdiv@counter:
  1371                           	opt callstack 0
  1372  000005                     ___awmod@counter:
  1373                           	opt callstack 0
  1374  000005                     restablecerDatosSensor@i:
  1375                           	opt callstack 0
  1376  000005                     dameTemperaturaHumedad@checkSum:
  1377                           	opt callstack 0
  1378  000005                     ___wmul@product:
  1379                           	opt callstack 0
  1380  000005                     ___lmul@multiplicand:
  1381                           	opt callstack 0
  1382                           
  1383                           ; 4 bytes @ 0x4
  1384  000005                     	ds	1
  1385  000006                     _horaRegar$806:
  1386                           	opt callstack 0
  1387  000006                     leer_eeprom@dato:
  1388                           	opt callstack 0
  1389  000006                     getValue@datoIncorrecto:
  1390                           	opt callstack 0
  1391  000006                     ___awdiv@sign:
  1392                           	opt callstack 0
  1393  000006                     ___awmod@sign:
  1394                           	opt callstack 0
  1395                           
  1396                           ; 1 bytes @ 0x5
  1397  000006                     	ds	1
  1398  000007                     ??_inicializarObjetos:
  1399  000007                     ??_leeHorariosMemoria:
  1400  000007                     dameTemperaturaHumedad@humedadDecimal:
  1401                           	opt callstack 0
  1402  000007                     _isspace$1560:
  1403                           	opt callstack 0
  1404  000007                     escribe_eeprom@direccion:
  1405                           	opt callstack 0
  1406  000007                     getValue@i:
  1407                           	opt callstack 0
  1408  000007                     ___awdiv@quotient:
  1409                           	opt callstack 0
  1410                           
  1411                           ; 2 bytes @ 0x6
  1412  000007                     	ds	1
  1413  000008                     ?_atoi:
  1414                           	opt callstack 0
  1415  000008                     dameTemperaturaHumedad@temperaturaDecimal:
  1416                           	opt callstack 0
  1417  000008                     atoi@s:
  1418                           	opt callstack 0
  1419                           
  1420                           ; 2 bytes @ 0x7
  1421  000008                     	ds	1
  1422  000009                     escribe_eeprom@dato:
  1423                           	opt callstack 0
  1424  000009                     leeHorariosMemoria@caracterLeido:
  1425                           	opt callstack 0
  1426  000009                     dameTemperaturaHumedad@humedad:
  1427                           	opt callstack 0
  1428  000009                     inicializarObjetos@j:
  1429                           	opt callstack 0
  1430  000009                     getValue@i_969:
  1431                           	opt callstack 0
  1432  000009                     ___lmul@product:
  1433                           	opt callstack 0
  1434  000009                     ___aodiv@divisor:
  1435                           	opt callstack 0
  1436  000009                     ___aomod@divisor:
  1437                           	opt callstack 0
  1438                           
  1439                           ; 8 bytes @ 0x8
  1440  000009                     	ds	1
  1441  00000A                     ??_atoi:
  1442  00000A                     ??_escribe_eeprom:
  1443  00000A                     ?_stoa:
  1444                           	opt callstack 0
  1445  00000A                     dameTemperaturaHumedad@temperatura:
  1446                           	opt callstack 0
  1447  00000A                     leeHorariosMemoria@j:
  1448                           	opt callstack 0
  1449  00000A                     stoa@fp:
  1450                           	opt callstack 0
  1451  00000A                     fputs@s:
  1452                           	opt callstack 0
  1453                           
  1454                           ; 2 bytes @ 0x9
  1455  00000A                     	ds	1
  1456  00000B                     ??_escribeHorariosMemoria:
  1457  00000B                     ?_estaSeco:
  1458                           	opt callstack 0
  1459  00000B                     getValue@dato:
  1460                           	opt callstack 0
  1461  00000B                     estaSeco@s:
  1462                           	opt callstack 0
  1463  00000B                     inicializarObjetos@i_809:
  1464                           	opt callstack 0
  1465                           
  1466                           ; 2 bytes @ 0xA
  1467  00000B                     	ds	1
  1468  00000C                     getValue@Rx:
  1469                           	opt callstack 0
  1470  00000C                     leeHorariosMemoria@contMemoria:
  1471                           	opt callstack 0
  1472  00000C                     stoa@s:
  1473                           	opt callstack 0
  1474  00000C                     fputs@fp:
  1475                           	opt callstack 0
  1476                           
  1477                           ; 2 bytes @ 0xB
  1478  00000C                     	ds	1
  1479  00000D                     ??_regadoRapido:
  1480  00000D                     ?___aldiv:
  1481                           	opt callstack 0
  1482  00000D                     _estaSeco$799:
  1483                           	opt callstack 0
  1484  00000D                     setRtc@direccion:
  1485                           	opt callstack 0
  1486  00000D                     lecturaWifi@Rx:
  1487                           	opt callstack 0
  1488  00000D                     inicializarObjetos@i:
  1489                           	opt callstack 0
  1490  00000D                     escribeHorariosMemoria@j:
  1491                           	opt callstack 0
  1492  00000D                     ___aldiv@dividend:
  1493                           	opt callstack 0
  1494                           
  1495                           ; 4 bytes @ 0xC
  1496  00000D                     	ds	1
  1497  00000E                     ??_encenderBombas:
  1498  00000E                     ??_stoa:
  1499  00000E                     setRtc@seteado:
  1500                           	opt callstack 0
  1501  00000E                     lecturaWifi@humedadMedida:
  1502                           	opt callstack 0
  1503  00000E                     fputs@c:
  1504                           	opt callstack 0
  1505  00000E                     leeHorariosMemoria@i:
  1506                           	opt callstack 0
  1507  00000E                     atoi@neg:
  1508                           	opt callstack 0
  1509                           
  1510                           ; 2 bytes @ 0xD
  1511  00000E                     	ds	1
  1512  00000F                     setRtc@datoRtc:
  1513                           	opt callstack 0
  1514  00000F                     regadoRapido@tiempoRegar:
  1515                           	opt callstack 0
  1516  00000F                     escribeHorariosMemoria@contMemoria:
  1517                           	opt callstack 0
  1518  00000F                     lecturaWifi@i:
  1519                           	opt callstack 0
  1520  00000F                     fputs@i:
  1521                           	opt callstack 0
  1522  00000F                     stoa@nuls:
  1523                           	opt callstack 0
  1524                           
  1525                           ; 7 bytes @ 0xE
  1526  00000F                     	ds	1
  1527  000010                     setRtc@dato:
  1528                           	opt callstack 0
  1529  000010                     encenderBombas@flagSeco:
  1530                           	opt callstack 0
  1531  000010                     regadoRapido@areaRegar:
  1532                           	opt callstack 0
  1533  000010                     _atoi$1542:
  1534                           	opt callstack 0
  1535                           
  1536                           ; 2 bytes @ 0xF
  1537  000010                     	ds	1
  1538  000011                     ?_pad:
  1539                           	opt callstack 0
  1540  000011                     ___aodiv@counter:
  1541                           	opt callstack 0
  1542  000011                     ___aomod@counter:
  1543                           	opt callstack 0
  1544  000011                     escribeHorariosMemoria@i:
  1545                           	opt callstack 0
  1546  000011                     encenderBombas@i:
  1547                           	opt callstack 0
  1548  000011                     pad@fp:
  1549                           	opt callstack 0
  1550  000011                     ___aldiv@divisor:
  1551                           	opt callstack 0
  1552                           
  1553                           ; 4 bytes @ 0x10
  1554  000011                     	ds	1
  1555  000012                     ___aodiv@sign:
  1556                           	opt callstack 0
  1557  000012                     ___aomod@sign:
  1558                           	opt callstack 0
  1559  000012                     _atoi$1544:
  1560                           	opt callstack 0
  1561                           
  1562                           ; 2 bytes @ 0x11
  1563  000012                     	ds	1
  1564  000013                     ??_asignarHorarios:
  1565  000013                     ?_abs:
  1566                           	opt callstack 0
  1567  000013                     setTiempoRegar@tiempoRegar:
  1568                           	opt callstack 0
  1569  000013                     pad@buf:
  1570                           	opt callstack 0
  1571  000013                     abs@a:
  1572                           	opt callstack 0
  1573  000013                     ___aodiv@quotient:
  1574                           	opt callstack 0
  1575                           
  1576                           ; 8 bytes @ 0x12
  1577  000013                     	ds	1
  1578  000014                     setTiempoRegar@hora:
  1579                           	opt callstack 0
  1580  000014                     _atoi$1543:
  1581                           	opt callstack 0
  1582                           
  1583                           ; 1 bytes @ 0x13
  1584  000014                     	ds	1
  1585  000015                     ??_abs:
  1586  000015                     ___aldiv@counter:
  1587                           	opt callstack 0
  1588  000015                     asignarHorarios@i:
  1589                           	opt callstack 0
  1590  000015                     pad@p:
  1591                           	opt callstack 0
  1592  000015                     atoi@n:
  1593                           	opt callstack 0
  1594                           
  1595                           ; 2 bytes @ 0x14
  1596  000015                     	ds	1
  1597  000016                     ___aldiv@sign:
  1598                           	opt callstack 0
  1599  000016                     stoa@i:
  1600                           	opt callstack 0
  1601                           
  1602                           ; 2 bytes @ 0x15
  1603  000016                     	ds	1
  1604  000017                     ??_pad:
  1605  000017                     asignarHorarios@diaRegar:
  1606                           	opt callstack 0
  1607  000017                     ___aldiv@quotient:
  1608                           	opt callstack 0
  1609                           
  1610                           ; 4 bytes @ 0x16
  1611  000017                     	ds	1
  1612  000018                     asignarHorarios@hora:
  1613                           	opt callstack 0
  1614  000018                     pad@i:
  1615                           	opt callstack 0
  1616  000018                     stoa@w:
  1617                           	opt callstack 0
  1618                           
  1619                           ; 2 bytes @ 0x17
  1620  000018                     	ds	1
  1621  000019                     asignarHorarios@Rx:
  1622                           	opt callstack 0
  1623                           
  1624                           ; 1 bytes @ 0x18
  1625  000019                     	ds	1
  1626  00001A                     pad@w:
  1627                           	opt callstack 0
  1628  00001A                     stoa@cp:
  1629                           	opt callstack 0
  1630                           
  1631                           ; 2 bytes @ 0x19
  1632  00001A                     	ds	1
  1633  00001B                     ?_map:
  1634                           	opt callstack 0
  1635  00001B                     UART_init@BAUD:
  1636                           	opt callstack 0
  1637  00001B                     map@x:
  1638                           	opt callstack 0
  1639                           
  1640                           ; 4 bytes @ 0x1A
  1641  00001B                     	ds	1
  1642  00001C                     ?_ctoa:
  1643                           	opt callstack 0
  1644  00001C                     ?_dtoa:
  1645                           	opt callstack 0
  1646  00001C                     ctoa@fp:
  1647                           	opt callstack 0
  1648  00001C                     dtoa@fp:
  1649                           	opt callstack 0
  1650  00001C                     stoa@p:
  1651                           	opt callstack 0
  1652                           
  1653                           ; 2 bytes @ 0x1B
  1654  00001C                     	ds	2
  1655  00001E                     ctoa@c:
  1656                           	opt callstack 0
  1657  00001E                     stoa@l:
  1658                           	opt callstack 0
  1659  00001E                     dtoa@d:
  1660                           	opt callstack 0
  1661                           
  1662                           ; 8 bytes @ 0x1D
  1663  00001E                     	ds	1
  1664  00001F                     ctoa@w:
  1665                           	opt callstack 0
  1666  00001F                     map@in_min:
  1667                           	opt callstack 0
  1668                           
  1669                           ; 4 bytes @ 0x1E
  1670  00001F                     	ds	4
  1671  000023                     map@in_max:
  1672                           	opt callstack 0
  1673  000023                     _UART_init$1894:
  1674                           	opt callstack 0
  1675                           
  1676                           ; 4 bytes @ 0x22
  1677  000023                     	ds	3
  1678  000026                     ??_dtoa:
  1679                           
  1680                           ; 1 bytes @ 0x25
  1681  000026                     	ds	1
  1682  000027                     map@out_min:
  1683                           	opt callstack 0
  1684                           
  1685                           ; 4 bytes @ 0x26
  1686  000027                     	ds	4
  1687  00002B                     map@out_max:
  1688                           	opt callstack 0
  1689                           
  1690                           ; 4 bytes @ 0x2A
  1691  00002B                     	ds	3
  1692  00002E                     _dtoa$1057:
  1693                           	opt callstack 0
  1694                           
  1695                           ; 2 bytes @ 0x2D
  1696  00002E                     	ds	1
  1697  00002F                     ??_lecturaAnalogaSensores:
  1698                           
  1699                           ; 1 bytes @ 0x2E
  1700  00002F                     	ds	1
  1701  000030                     lecturaAnalogaSensores@i:
  1702                           	opt callstack 0
  1703  000030                     dtoa@p:
  1704                           	opt callstack 0
  1705                           
  1706                           ; 2 bytes @ 0x2F
  1707  000030                     	ds	2
  1708  000032                     dtoa@w:
  1709                           	opt callstack 0
  1710                           
  1711                           ; 2 bytes @ 0x31
  1712  000032                     	ds	2
  1713  000034                     dtoa@s:
  1714                           	opt callstack 0
  1715                           
  1716                           ; 2 bytes @ 0x33
  1717  000034                     	ds	2
  1718  000036                     dtoa@n:
  1719                           	opt callstack 0
  1720                           
  1721                           ; 8 bytes @ 0x35
  1722  000036                     	ds	8
  1723  00003E                     dtoa@i:
  1724                           	opt callstack 0
  1725                           
  1726                           ; 2 bytes @ 0x3D
  1727  00003E                     	ds	2
  1728  000040                     ?_vfpfcnvrt:
  1729                           	opt callstack 0
  1730  000040                     vfpfcnvrt@fp:
  1731                           	opt callstack 0
  1732                           
  1733                           ; 2 bytes @ 0x3F
  1734  000040                     	ds	2
  1735  000042                     vfpfcnvrt@fmt:
  1736                           	opt callstack 0
  1737                           
  1738                           ; 2 bytes @ 0x41
  1739  000042                     	ds	2
  1740  000044                     vfpfcnvrt@ap:
  1741                           	opt callstack 0
  1742                           
  1743                           ; 2 bytes @ 0x43
  1744  000044                     	ds	2
  1745  000046                     ??_vfpfcnvrt:
  1746                           
  1747                           ; 1 bytes @ 0x45
  1748  000046                     	ds	4
  1749  00004A                     vfpfcnvrt@ll:
  1750                           	opt callstack 0
  1751                           
  1752                           ; 8 bytes @ 0x49
  1753  00004A                     	ds	8
  1754  000052                     vfpfcnvrt@cp:
  1755                           	opt callstack 0
  1756                           
  1757                           ; 2 bytes @ 0x51
  1758  000052                     	ds	2
  1759  000054                     vfpfcnvrt@done:
  1760                           	opt callstack 0
  1761                           
  1762                           ; 2 bytes @ 0x53
  1763  000054                     	ds	2
  1764  000056                     _vfpfcnvrt$1082:
  1765                           	opt callstack 0
  1766                           
  1767                           ; 2 bytes @ 0x55
  1768  000056                     	ds	2
  1769  000058                     _vfpfcnvrt$1083:
  1770                           	opt callstack 0
  1771                           
  1772                           ; 2 bytes @ 0x57
  1773  000058                     	ds	2
  1774  00005A                     vfpfcnvrt@c:
  1775                           	opt callstack 0
  1776                           
  1777                           ; 1 bytes @ 0x59
  1778  00005A                     	ds	1
  1779  00005B                     vfprintf@cfmt:
  1780                           	opt callstack 0
  1781                           
  1782                           ; 2 bytes @ 0x5A
  1783  00005B                     	ds	2
  1784  00005D                     ??_dameDatosSistema:
  1785  00005D                     ??_mostrarDatosSensoresWIFI:
  1786  00005D                     ??_mostrarDatosSensores:
  1787  00005D                     
  1788                           ; 1 bytes @ 0x5C
  1789  00005D                     	ds	2
  1790  00005F                     
  1791                           ; 1 bytes @ 0x5E
  1792 ;;
  1793 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1794 ;;
  1795 ;; *************** function _main *****************
  1796 ;; Defined at:
  1797 ;;		line 1065 in file "main.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;		None
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;		None
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1811 ;;      Params:         0       0       0       0       0       0       0       0       0
  1812 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1813 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1814 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1815 ;;Total ram usage:        0 bytes
  1816 ;; Hardware stack levels required when called:   11
  1817 ;; This function calls:
  1818 ;;		_UART_init
  1819 ;;		_configurarAdc
  1820 ;;		_i2c_iniciar
  1821 ;;		_inicializarObjetos
  1822 ;;		_restablecerDatosSensor
  1823 ;;		_sistemaPrincipal
  1824 ;;		_sistemaRegado
  1825 ;; This function is called by:
  1826 ;;		Startup code after reset
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text0
  1831  0025AE                     __ptext0:
  1832                           	opt callstack 0
  1833  0025AE                     _main:
  1834                           	opt callstack 20
  1835  0025AE                     
  1836                           ;main.c: 1067:     INTCONbits.GIE = 1;
  1837  0025AE  8EF2               	bsf	242,7,c	;volatile
  1838                           
  1839                           ;main.c: 1068:     INTCONbits.PEIE = 1;
  1840  0025B0  8CF2               	bsf	242,6,c	;volatile
  1841                           
  1842                           ;main.c: 1069:     INTCONbits.TMR0IE = 1;
  1843  0025B2  8AF2               	bsf	242,5,c	;volatile
  1844                           
  1845                           ;main.c: 1071:     PIE1bits.RCIE = 1;
  1846  0025B4  8A9D               	bsf	157,5,c	;volatile
  1847  0025B6                     
  1848                           ;main.c: 1073:     T0CON = 0b00000111;
  1849  0025B6  0E07               	movlw	7
  1850  0025B8  6ED5               	movwf	213,c	;volatile
  1851  0025BA                     
  1852                           ;main.c: 1078:     restablecerDatosSensor();
  1853  0025BA  EC57  F016         	call	_restablecerDatosSensor	;wreg free
  1854  0025BE                     
  1855                           ;main.c: 1079:     configurarAdc();
  1856  0025BE  EC95  F018         	call	_configurarAdc	;wreg free
  1857  0025C2                     
  1858                           ;main.c: 1080:     UART_init(9600);
  1859  0025C2  0E80               	movlw	128
  1860  0025C4  6E1B               	movwf	UART_init@BAUD^0,c
  1861  0025C6  0E25               	movlw	37
  1862  0025C8  6E1C               	movwf	(UART_init@BAUD+1)^0,c
  1863  0025CA  0E00               	movlw	0
  1864  0025CC  6E1D               	movwf	(UART_init@BAUD+2)^0,c
  1865  0025CE  0E00               	movlw	0
  1866  0025D0  6E1E               	movwf	(UART_init@BAUD+3)^0,c
  1867  0025D2  EC55  F014         	call	_UART_init	;wreg free
  1868  0025D6                     
  1869                           ;main.c: 1081:     i2c_iniciar();
  1870  0025D6  EC71  F018         	call	_i2c_iniciar	;wreg free
  1871  0025DA                     
  1872                           ;main.c: 1082:     inicializarObjetos();
  1873  0025DA  ECF7  F00A         	call	_inicializarObjetos	;wreg free
  1874  0025DE                     
  1875                           ;main.c: 1087:     TRISD = 0;
  1876  0025DE  0E00               	movlw	0
  1877  0025E0  6E95               	movwf	149,c	;volatile
  1878  0025E2                     
  1879                           ;main.c: 1088:     LATD = 0;
  1880  0025E2  0E00               	movlw	0
  1881  0025E4  6E8C               	movwf	140,c	;volatile
  1882  0025E6                     
  1883                           ;main.c: 1090:     TMR0 = VALOR_TIMER0;
  1884  0025E6  C0FB  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  1885  0025EA  C0FC  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  1886  0025EE                     
  1887                           ;main.c: 1092:     INTCONbits.TMR0IF = 1;
  1888  0025EE  84F2               	bsf	242,2,c	;volatile
  1889  0025F0                     
  1890                           ;main.c: 1095:     T0CONbits.TMR0ON = 1;
  1891  0025F0  8ED5               	bsf	213,7,c	;volatile
  1892  0025F2                     
  1893                           ;main.c: 1099:     MODO_COMUNICACION = 0;
  1894  0025F2  0E00               	movlw	0
  1895  0025F4  0100               	movlb	0	; () banked
  1896  0025F6  6F88               	movwf	_MODO_COMUNICACION& (0+255),b
  1897  0025F8                     l4824:
  1898                           
  1899                           ;main.c: 1104:         if (datoRecibido) {
  1900  0025F8  0100               	movlb	0	; () banked
  1901  0025FA  5183               	movf	_datoRecibido& (0+255),w,b
  1902  0025FC  B4D8               	btfsc	status,2,c
  1903  0025FE  EF03  F013         	goto	u3851
  1904  002602  EF05  F013         	goto	u3850
  1905  002606                     u3851:
  1906  002606  EF0C  F013         	goto	l4832
  1907  00260A                     u3850:
  1908  00260A                     
  1909                           ; BSR set to: 0
  1910                           ;main.c: 1106:             datoRecibido = 0;
  1911  00260A  0E00               	movlw	0
  1912  00260C  6F83               	movwf	_datoRecibido& (0+255),b
  1913  00260E                     
  1914                           ; BSR set to: 0
  1915                           ;main.c: 1107:             byteUart -= 48;
  1916  00260E  0E30               	movlw	48
  1917  002610  5F8B               	subwf	_byteUart& (0+255),f,b
  1918  002612                     
  1919                           ; BSR set to: 0
  1920                           ;main.c: 1108:             sistemaPrincipal(byteUart);
  1921  002612  518B               	movf	_byteUart& (0+255),w,b
  1922  002614  EC6D  F011         	call	_sistemaPrincipal
  1923  002618                     l4832:
  1924                           
  1925                           ;main.c: 1112:         if (overflowTimer) {
  1926  002618  0100               	movlb	0	; () banked
  1927  00261A  5182               	movf	_overflowTimer& (0+255),w,b
  1928  00261C  B4D8               	btfsc	status,2,c
  1929  00261E  EF13  F013         	goto	u3861
  1930  002622  EF15  F013         	goto	u3860
  1931  002626                     u3861:
  1932  002626  EFFC  F012         	goto	l4824
  1933  00262A                     u3860:
  1934  00262A                     
  1935                           ; BSR set to: 0
  1936                           ;main.c: 1114:             esperandoDatos = 0;
  1937  00262A  0E00               	movlw	0
  1938  00262C  6F89               	movwf	_esperandoDatos& (0+255),b
  1939                           
  1940                           ;main.c: 1115:             overflowTimer = 0;
  1941  00262E  0E00               	movlw	0
  1942  002630  6F82               	movwf	_overflowTimer& (0+255),b
  1943  002632                     
  1944                           ; BSR set to: 0
  1945                           ;main.c: 1116:             sistemaRegado();
  1946  002632  EC09  F00D         	call	_sistemaRegado	;wreg free
  1947  002636  EFFC  F012         	goto	l4824
  1948  00263A  EF07  F000         	goto	start
  1949  00263E                     __end_of_main:
  1950                           	opt callstack 0
  1951                           
  1952 ;; *************** function _sistemaRegado *****************
  1953 ;; Defined at:
  1954 ;;		line 652 in file "main.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;		None
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;		None
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      void 
  1961 ;; Registers used:
  1962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1968 ;;      Params:         0       0       0       0       0       0       0       0       0
  1969 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1970 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1971 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1972 ;;Total ram usage:        0 bytes
  1973 ;; Hardware stack levels used:    1
  1974 ;; Hardware stack levels required when called:    5
  1975 ;; This function calls:
  1976 ;;		_dameDiaActual
  1977 ;;		_dameHoraActual
  1978 ;;		_encenderBombas
  1979 ;;		_horaRegar
  1980 ;;		_lecturaAnalogaSensores
  1981 ;;		_lecturaWifi
  1982 ;; This function is called by:
  1983 ;;		_main
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text1
  1988  001A12                     __ptext1:
  1989                           	opt callstack 0
  1990  001A12                     _sistemaRegado:
  1991                           	opt callstack 25
  1992  001A12                     
  1993                           ;main.c: 656:     if (regando) {
  1994  001A12  0100               	movlb	0	; () banked
  1995  001A14  517B               	movf	_regando& (0+255),w,b
  1996  001A16  B4D8               	btfsc	status,2,c
  1997  001A18  EF10  F00D         	goto	u3701
  1998  001A1C  EF12  F00D         	goto	u3700
  1999  001A20                     u3701:
  2000  001A20  EF42  F00D         	goto	l4722
  2001  001A24                     u3700:
  2002  001A24                     
  2003                           ; BSR set to: 0
  2004                           ;main.c: 658:         contInterrupciones++;
  2005  001A24  4B78               	infsnz	_contInterrupciones& (0+255),f,b
  2006  001A26  2B79               	incf	(_contInterrupciones+1)& (0+255),f,b
  2007  001A28                     
  2008                           ; BSR set to: 0
  2009                           ;main.c: 660:         if (contInterrupciones == 6) {
  2010  001A28  0E06               	movlw	6
  2011  001A2A  1978               	xorwf	_contInterrupciones& (0+255),w,b
  2012  001A2C  1179               	iorwf	(_contInterrupciones+1)& (0+255),w,b
  2013  001A2E  A4D8               	btfss	status,2,c
  2014  001A30  EF1C  F00D         	goto	u3711
  2015  001A34  EF1E  F00D         	goto	u3710
  2016  001A38                     u3711:
  2017  001A38  EFB2  F00D         	goto	l392
  2018  001A3C                     u3710:
  2019  001A3C                     
  2020                           ; BSR set to: 0
  2021                           ;main.c: 661:             contInterrupciones = 0;
  2022  001A3C  0E00               	movlw	0
  2023  001A3E  6F79               	movwf	(_contInterrupciones+1)& (0+255),b
  2024  001A40  0E00               	movlw	0
  2025  001A42  6F78               	movwf	_contInterrupciones& (0+255),b
  2026  001A44                     
  2027                           ; BSR set to: 0
  2028                           ;main.c: 662:             minutosTranscurridos++;
  2029  001A44  2B7C               	incf	_minutosTranscurridos& (0+255),f,b
  2030  001A46                     
  2031                           ; BSR set to: 0
  2032                           ;main.c: 665:             if (minutosTranscurridos >= minutosRegar) {
  2033  001A46  517D               	movf	_minutosRegar& (0+255),w,b
  2034  001A48  5D7C               	subwf	_minutosTranscurridos& (0+255),w,b
  2035  001A4A  A0D8               	btfss	status,0,c
  2036  001A4C  EF2A  F00D         	goto	u3721
  2037  001A50  EF2C  F00D         	goto	u3720
  2038  001A54                     u3721:
  2039  001A54  EFB2  F00D         	goto	l392
  2040  001A58                     u3720:
  2041  001A58                     
  2042                           ; BSR set to: 0
  2043                           ;main.c: 667:                 LATD = 0;
  2044  001A58  0E00               	movlw	0
  2045  001A5A  6E8C               	movwf	140,c	;volatile
  2046                           
  2047                           ;main.c: 668:                 minutosTranscurridos = 0;
  2048  001A5C  0E00               	movlw	0
  2049  001A5E  6F7C               	movwf	_minutosTranscurridos& (0+255),b
  2050                           
  2051                           ;main.c: 669:                 regando = 0;
  2052  001A60  0E00               	movlw	0
  2053  001A62  6F7B               	movwf	_regando& (0+255),b
  2054  001A64                     
  2055                           ; BSR set to: 0
  2056                           ;main.c: 670:                 horarios[hora].regado = 1;
  2057  001A64  5187               	movf	_hora& (0+255),w,b
  2058  001A66  0D0C               	mullw	12
  2059  001A68  0E3C               	movlw	low (_horarios+10)
  2060  001A6A  24F3               	addwf	243,w,c
  2061  001A6C  6ED9               	movwf	fsr2l,c
  2062  001A6E  0E01               	movlw	high (_horarios+10)
  2063  001A70  20F4               	addwfc	prodh,w,c
  2064  001A72  6EDA               	movwf	fsr2h,c
  2065  001A74  0E01               	movlw	1
  2066  001A76  6EDF               	movwf	indf2,c
  2067  001A78                     
  2068                           ; BSR set to: 0
  2069                           ;main.c: 671:                 tempHora = hora;
  2070  001A78  C087  F081         	movff	_hora,_tempHora
  2071  001A7C                     
  2072                           ; BSR set to: 0
  2073                           ;main.c: 672:                 flagRegado = 0;
  2074  001A7C  0E00               	movlw	0
  2075  001A7E  6F80               	movwf	_flagRegado& (0+255),b
  2076  001A80  EFB2  F00D         	goto	l392
  2077  001A84                     l4722:
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;main.c: 678:         dameHoraActual();
  2081  001A84  ECCA  F017         	call	_dameHoraActual	;wreg free
  2082                           
  2083                           ;main.c: 679:         dameDiaActual();
  2084  001A88  EC7C  F018         	call	_dameDiaActual	;wreg free
  2085  001A8C                     
  2086                           ;main.c: 681:         if (hora != tempHora && !flagRegado) {
  2087  001A8C  0100               	movlb	0	; () banked
  2088  001A8E  5181               	movf	_tempHora& (0+255),w,b
  2089  001A90  1987               	xorwf	_hora& (0+255),w,b
  2090  001A92  B4D8               	btfsc	status,2,c
  2091  001A94  EF4E  F00D         	goto	u3731
  2092  001A98  EF50  F00D         	goto	u3730
  2093  001A9C                     u3731:
  2094  001A9C  EF64  F00D         	goto	l4732
  2095  001AA0                     u3730:
  2096  001AA0                     
  2097                           ; BSR set to: 0
  2098  001AA0  5180               	movf	_flagRegado& (0+255),w,b
  2099  001AA2  A4D8               	btfss	status,2,c
  2100  001AA4  EF56  F00D         	goto	u3741
  2101  001AA8  EF58  F00D         	goto	u3740
  2102  001AAC                     u3741:
  2103  001AAC  EF64  F00D         	goto	l4732
  2104  001AB0                     u3740:
  2105  001AB0                     
  2106                           ; BSR set to: 0
  2107                           ;main.c: 682:             horarios[tempHora].regado = 0;
  2108  001AB0  5181               	movf	_tempHora& (0+255),w,b
  2109  001AB2  0D0C               	mullw	12
  2110  001AB4  0E3C               	movlw	low (_horarios+10)
  2111  001AB6  24F3               	addwf	243,w,c
  2112  001AB8  6ED9               	movwf	fsr2l,c
  2113  001ABA  0E01               	movlw	high (_horarios+10)
  2114  001ABC  20F4               	addwfc	prodh,w,c
  2115  001ABE  6EDA               	movwf	fsr2h,c
  2116  001AC0  0E00               	movlw	0
  2117  001AC2  6EDF               	movwf	indf2,c
  2118  001AC4                     
  2119                           ; BSR set to: 0
  2120                           ;main.c: 683:             flagRegado = 1;
  2121  001AC4  0E01               	movlw	1
  2122  001AC6  6F80               	movwf	_flagRegado& (0+255),b
  2123  001AC8                     l4732:
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;main.c: 686:         if ((!MODO_COMUNICACION && horaRegar()) || (MODO_COMUNICACION
  2127  001AC8  5188               	movf	_MODO_COMUNICACION& (0+255),w,b
  2128  001ACA  A4D8               	btfss	status,2,c
  2129  001ACC  EF6A  F00D         	goto	u3751
  2130  001AD0  EF6C  F00D         	goto	u3750
  2131  001AD4                     u3751:
  2132  001AD4  EF77  F00D         	goto	l4736
  2133  001AD8                     u3750:
  2134  001AD8                     
  2135                           ; BSR set to: 0
  2136  001AD8  EC63  F013         	call	_horaRegar	;wreg free
  2137  001ADC  5001               	movf	?_horaRegar^0,w,c
  2138  001ADE  1002               	iorwf	(?_horaRegar+1)^0,w,c
  2139  001AE0  A4D8               	btfss	status,2,c
  2140  001AE2  EF75  F00D         	goto	u3761
  2141  001AE6  EF77  F00D         	goto	u3760
  2142  001AEA                     u3761:
  2143  001AEA  EF8B  F00D         	goto	l4740
  2144  001AEE                     u3760:
  2145  001AEE                     l4736:
  2146  001AEE  0100               	movlb	0	; () banked
  2147  001AF0  5188               	movf	_MODO_COMUNICACION& (0+255),w,b
  2148  001AF2  B4D8               	btfsc	status,2,c
  2149  001AF4  EF7E  F00D         	goto	u3771
  2150  001AF8  EF80  F00D         	goto	u3770
  2151  001AFC                     u3771:
  2152  001AFC  EFB2  F00D         	goto	l392
  2153  001B00                     u3770:
  2154  001B00                     
  2155                           ; BSR set to: 0
  2156  001B00  EC63  F013         	call	_horaRegar	;wreg free
  2157  001B04  5001               	movf	?_horaRegar^0,w,c
  2158  001B06  1002               	iorwf	(?_horaRegar+1)^0,w,c
  2159  001B08  B4D8               	btfsc	status,2,c
  2160  001B0A  EF89  F00D         	goto	u3781
  2161  001B0E  EF8B  F00D         	goto	u3780
  2162  001B12                     u3781:
  2163  001B12  EFB2  F00D         	goto	l392
  2164  001B16                     u3780:
  2165  001B16                     l4740:
  2166                           
  2167                           ;main.c: 687:                 && horaRegar())) {;main.c: 691:             if (MODO_COMUN
      +                          ICACION) {
  2168  001B16  0100               	movlb	0	; () banked
  2169  001B18  5188               	movf	_MODO_COMUNICACION& (0+255),w,b
  2170  001B1A  B4D8               	btfsc	status,2,c
  2171  001B1C  EF92  F00D         	goto	u3791
  2172  001B20  EF94  F00D         	goto	u3790
  2173  001B24                     u3791:
  2174  001B24  EFAE  F00D         	goto	l4750
  2175  001B28                     u3790:
  2176  001B28                     
  2177                           ; BSR set to: 0
  2178                           ;main.c: 692:                 lecturaWifi();
  2179  001B28  ECCE  F011         	call	_lecturaWifi	;wreg free
  2180  001B2C                     
  2181                           ;main.c: 693:                 if (peticionLecturaSensores) {
  2182  001B2C  0100               	movlb	0	; () banked
  2183  001B2E  517A               	movf	_peticionLecturaSensores& (0+255),w,b
  2184  001B30  B4D8               	btfsc	status,2,c
  2185  001B32  EF9D  F00D         	goto	u3801
  2186  001B36  EF9F  F00D         	goto	u3800
  2187  001B3A                     u3801:
  2188  001B3A  EFB2  F00D         	goto	l392
  2189  001B3E                     u3800:
  2190  001B3E                     l4746:
  2191                           
  2192                           ;main.c: 694:                     minutosRegar = horarios[hora].tiempoRegar;
  2193  001B3E  0100               	movlb	0	; () banked
  2194  001B40  5187               	movf	_hora& (0+255),w,b
  2195  001B42  0D0C               	mullw	12
  2196  001B44  0E3D               	movlw	low (_horarios+11)
  2197  001B46  24F3               	addwf	243,w,c
  2198  001B48  6ED9               	movwf	fsr2l,c
  2199  001B4A  0E01               	movlw	high (_horarios+11)
  2200  001B4C  20F4               	addwfc	prodh,w,c
  2201  001B4E  6EDA               	movwf	fsr2h,c
  2202  001B50  50DF               	movf	indf2,w,c
  2203  001B52  6F7D               	movwf	_minutosRegar& (0+255),b
  2204  001B54                     
  2205                           ; BSR set to: 0
  2206                           ;main.c: 695:                     encenderBombas();
  2207  001B54  ECB0  F005         	call	_encenderBombas	;wreg free
  2208  001B58  EFB2  F00D         	goto	l392
  2209  001B5C                     l4750:
  2210                           
  2211                           ; BSR set to: 0
  2212                           ;main.c: 699:                 lecturaAnalogaSensores();
  2213  001B5C  EC82  F012         	call	_lecturaAnalogaSensores	;wreg free
  2214  001B60  EF9F  F00D         	goto	l4746
  2215  001B64                     l392:
  2216  001B64  0012               	return		;funcret
  2217  001B66                     __end_of_sistemaRegado:
  2218                           	opt callstack 0
  2219                           
  2220 ;; *************** function _horaRegar *****************
  2221 ;; Defined at:
  2222 ;;		line 158 in file "main.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;		None
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;		None
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  2    0[COMRAM] int 
  2229 ;; Registers used:
  2230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2236 ;;      Params:         2       0       0       0       0       0       0       0       0
  2237 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2238 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2239 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2240 ;;Total ram usage:        6 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:    1
  2243 ;; This function calls:
  2244 ;;		Nothing
  2245 ;; This function is called by:
  2246 ;;		_sistemaRegado
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text2
  2251  0026C6                     __ptext2:
  2252                           	opt callstack 0
  2253  0026C6                     _horaRegar:
  2254                           	opt callstack 28
  2255  0026C6                     
  2256                           ;main.c: 160:     return (horarios[hora].regar) && (!horarios[hora].regado) &&
  2257  0026C6  0E00               	movlw	0
  2258  0026C8  6E06               	movwf	_horaRegar$806^0,c
  2259  0026CA  0100               	movlb	0	; () banked
  2260  0026CC  5187               	movf	_hora& (0+255),w,b
  2261  0026CE  0D0C               	mullw	12
  2262  0026D0  0E3B               	movlw	low (_horarios+9)
  2263  0026D2  24F3               	addwf	243,w,c
  2264  0026D4  6ED9               	movwf	fsr2l,c
  2265  0026D6  0E01               	movlw	high (_horarios+9)
  2266  0026D8  20F4               	addwfc	prodh,w,c
  2267  0026DA  6EDA               	movwf	fsr2h,c
  2268  0026DC  50DF               	movf	indf2,w,c
  2269  0026DE  B4D8               	btfsc	status,2,c
  2270  0026E0  EF74  F013         	goto	u3321
  2271  0026E4  EF76  F013         	goto	u3320
  2272  0026E8                     u3321:
  2273  0026E8  EFA1  F013         	goto	l4264
  2274  0026EC                     u3320:
  2275  0026EC                     
  2276                           ; BSR set to: 0
  2277  0026EC  5187               	movf	_hora& (0+255),w,b
  2278  0026EE  0D0C               	mullw	12
  2279  0026F0  0E3C               	movlw	low (_horarios+10)
  2280  0026F2  24F3               	addwf	243,w,c
  2281  0026F4  6ED9               	movwf	fsr2l,c
  2282  0026F6  0E01               	movlw	high (_horarios+10)
  2283  0026F8  20F4               	addwfc	prodh,w,c
  2284  0026FA  6EDA               	movwf	fsr2h,c
  2285  0026FC  50DF               	movf	indf2,w,c
  2286  0026FE  A4D8               	btfss	status,2,c
  2287  002700  EF84  F013         	goto	u3331
  2288  002704  EF86  F013         	goto	u3330
  2289  002708                     u3331:
  2290  002708  EFA1  F013         	goto	l4264
  2291  00270C                     u3330:
  2292  00270C                     
  2293                           ; BSR set to: 0
  2294  00270C  5187               	movf	_hora& (0+255),w,b
  2295  00270E  0D0C               	mullw	12
  2296  002710  0E32               	movlw	low _horarios
  2297  002712  6E03               	movwf	??_horaRegar^0,c
  2298  002714  0E01               	movlw	high _horarios
  2299  002716  6E04               	movwf	(??_horaRegar+1)^0,c
  2300  002718  50F3               	movf	243,w,c
  2301  00271A  2603               	addwf	??_horaRegar^0,f,c
  2302  00271C  50F4               	movf	244,w,c
  2303  00271E  2204               	addwfc	(??_horaRegar+1)^0,f,c
  2304  002720  5184               	movf	_diaActual& (0+255),w,b
  2305  002722  2403               	addwf	??_horaRegar^0,w,c
  2306  002724  6ED9               	movwf	fsr2l,c
  2307  002726  0E00               	movlw	0
  2308  002728  2004               	addwfc	(??_horaRegar+1)^0,w,c
  2309  00272A  6EDA               	movwf	fsr2h,c
  2310  00272C  0E31               	movlw	49
  2311  00272E  18DE               	xorwf	postinc2,w,c
  2312  002730  A4D8               	btfss	status,2,c
  2313  002732  EF9D  F013         	goto	u3341
  2314  002736  EF9F  F013         	goto	u3340
  2315  00273A                     u3341:
  2316  00273A  EFA1  F013         	goto	l4264
  2317  00273E                     u3340:
  2318  00273E                     
  2319                           ; BSR set to: 0
  2320  00273E  0E01               	movlw	1
  2321  002740  6E06               	movwf	_horaRegar$806^0,c
  2322  002742                     l4264:
  2323                           
  2324                           ; BSR set to: 0
  2325  002742  C006  F001         	movff	_horaRegar$806,?_horaRegar
  2326  002746  6A02               	clrf	(?_horaRegar+1)^0,c
  2327  002748                     
  2328                           ; BSR set to: 0
  2329  002748  0012               	return		;funcret
  2330  00274A                     __end_of_horaRegar:
  2331                           	opt callstack 0
  2332                           
  2333 ;; *************** function _encenderBombas *****************
  2334 ;; Defined at:
  2335 ;;		line 317 in file "main.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;		None
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;  i               2   16[COMRAM] int 
  2340 ;;  flagSeco        1   15[COMRAM] unsigned char 
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  1    wreg      void 
  2343 ;; Registers used:
  2344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2350 ;;      Params:         0       0       0       0       0       0       0       0       0
  2351 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2352 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2353 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2354 ;;Total ram usage:        5 bytes
  2355 ;; Hardware stack levels used:    1
  2356 ;; Hardware stack levels required when called:    4
  2357 ;; This function calls:
  2358 ;;		_estaSeco
  2359 ;; This function is called by:
  2360 ;;		_sistemaRegado
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           	psect	text3
  2365  000B60                     __ptext3:
  2366                           	opt callstack 0
  2367  000B60                     _encenderBombas:
  2368                           	opt callstack 25
  2369  000B60                     
  2370                           ;main.c: 319:     char flagSeco = 0;
  2371  000B60  0E00               	movlw	0
  2372  000B62  6E10               	movwf	encenderBombas@flagSeco^0,c
  2373                           
  2374                           ;main.c: 321:     for (int i = 0; i < 1; i++) {
  2375  000B64  0E00               	movlw	0
  2376  000B66  6E12               	movwf	(encenderBombas@i+1)^0,c
  2377  000B68  0E00               	movlw	0
  2378  000B6A  6E11               	movwf	encenderBombas@i^0,c
  2379  000B6C  EF92  F006         	goto	l4376
  2380  000B70                     l4326:
  2381                           
  2382                           ;main.c: 326:                 if (estaSeco(sensores[i])) {
  2383  000B70  90D8               	bcf	status,0,c
  2384  000B72  3411               	rlcf	encenderBombas@i^0,w,c
  2385  000B74  6ED9               	movwf	fsr2l,c
  2386  000B76  3412               	rlcf	(encenderBombas@i+1)^0,w,c
  2387  000B78  6EDA               	movwf	fsr2h,c
  2388  000B7A  0E60               	movlw	low _sensores
  2389  000B7C  26D9               	addwf	fsr2l,f,c
  2390  000B7E  0E00               	movlw	high _sensores
  2391  000B80  22DA               	addwfc	fsr2h,f,c
  2392  000B82  CFDE F00B          	movff	postinc2,estaSeco@s
  2393  000B86  CFDD F00C          	movff	postdec2,estaSeco@s+1
  2394  000B8A  EC7C  F017         	call	_estaSeco	;wreg free
  2395  000B8E  500B               	movf	?_estaSeco^0,w,c
  2396  000B90  100C               	iorwf	(?_estaSeco+1)^0,w,c
  2397  000B92  B4D8               	btfsc	status,2,c
  2398  000B94  EFCE  F005         	goto	u3391
  2399  000B98  EFD0  F005         	goto	u3390
  2400  000B9C                     u3391:
  2401  000B9C  EFC0  F006         	goto	l4378
  2402  000BA0                     u3390:
  2403  000BA0                     
  2404                           ;main.c: 327:                     LATDbits.LATD0 = 1;
  2405  000BA0  808C               	bsf	140,0,c	;volatile
  2406  000BA2                     l4330:
  2407                           
  2408                           ;main.c: 328:                     flagSeco = 1;
  2409  000BA2  0E01               	movlw	1
  2410  000BA4  6E10               	movwf	encenderBombas@flagSeco^0,c
  2411  000BA6  EFC0  F006         	goto	l4378
  2412  000BAA                     l4332:
  2413                           
  2414                           ;main.c: 333:                 if (estaSeco(sensores[i])) {
  2415  000BAA  90D8               	bcf	status,0,c
  2416  000BAC  3411               	rlcf	encenderBombas@i^0,w,c
  2417  000BAE  6ED9               	movwf	fsr2l,c
  2418  000BB0  3412               	rlcf	(encenderBombas@i+1)^0,w,c
  2419  000BB2  6EDA               	movwf	fsr2h,c
  2420  000BB4  0E60               	movlw	low _sensores
  2421  000BB6  26D9               	addwf	fsr2l,f,c
  2422  000BB8  0E00               	movlw	high _sensores
  2423  000BBA  22DA               	addwfc	fsr2h,f,c
  2424  000BBC  CFDE F00B          	movff	postinc2,estaSeco@s
  2425  000BC0  CFDD F00C          	movff	postdec2,estaSeco@s+1
  2426  000BC4  EC7C  F017         	call	_estaSeco	;wreg free
  2427  000BC8  500B               	movf	?_estaSeco^0,w,c
  2428  000BCA  100C               	iorwf	(?_estaSeco+1)^0,w,c
  2429  000BCC  B4D8               	btfsc	status,2,c
  2430  000BCE  EFEB  F005         	goto	u3401
  2431  000BD2  EFED  F005         	goto	u3400
  2432  000BD6                     u3401:
  2433  000BD6  EFC0  F006         	goto	l4378
  2434  000BDA                     u3400:
  2435  000BDA                     
  2436                           ;main.c: 334:                     LATDbits.LATD1 = 1;
  2437  000BDA  828C               	bsf	140,1,c	;volatile
  2438  000BDC  EFD1  F005         	goto	l4330
  2439  000BE0                     l4338:
  2440                           
  2441                           ;main.c: 340:                 if (estaSeco(sensores[i])) {
  2442  000BE0  90D8               	bcf	status,0,c
  2443  000BE2  3411               	rlcf	encenderBombas@i^0,w,c
  2444  000BE4  6ED9               	movwf	fsr2l,c
  2445  000BE6  3412               	rlcf	(encenderBombas@i+1)^0,w,c
  2446  000BE8  6EDA               	movwf	fsr2h,c
  2447  000BEA  0E60               	movlw	low _sensores
  2448  000BEC  26D9               	addwf	fsr2l,f,c
  2449  000BEE  0E00               	movlw	high _sensores
  2450  000BF0  22DA               	addwfc	fsr2h,f,c
  2451  000BF2  CFDE F00B          	movff	postinc2,estaSeco@s
  2452  000BF6  CFDD F00C          	movff	postdec2,estaSeco@s+1
  2453  000BFA  EC7C  F017         	call	_estaSeco	;wreg free
  2454  000BFE  500B               	movf	?_estaSeco^0,w,c
  2455  000C00  100C               	iorwf	(?_estaSeco+1)^0,w,c
  2456  000C02  B4D8               	btfsc	status,2,c
  2457  000C04  EF06  F006         	goto	u3411
  2458  000C08  EF08  F006         	goto	u3410
  2459  000C0C                     u3411:
  2460  000C0C  EFC0  F006         	goto	l4378
  2461  000C10                     u3410:
  2462  000C10                     
  2463                           ;main.c: 341:                     LATDbits.LATD2 = 1;
  2464  000C10  848C               	bsf	140,2,c	;volatile
  2465  000C12  EFD1  F005         	goto	l4330
  2466  000C16                     l4344:
  2467                           
  2468                           ;main.c: 347:                 if (estaSeco(sensores[i])) {
  2469  000C16  90D8               	bcf	status,0,c
  2470  000C18  3411               	rlcf	encenderBombas@i^0,w,c
  2471  000C1A  6ED9               	movwf	fsr2l,c
  2472  000C1C  3412               	rlcf	(encenderBombas@i+1)^0,w,c
  2473  000C1E  6EDA               	movwf	fsr2h,c
  2474  000C20  0E60               	movlw	low _sensores
  2475  000C22  26D9               	addwf	fsr2l,f,c
  2476  000C24  0E00               	movlw	high _sensores
  2477  000C26  22DA               	addwfc	fsr2h,f,c
  2478  000C28  CFDE F00B          	movff	postinc2,estaSeco@s
  2479  000C2C  CFDD F00C          	movff	postdec2,estaSeco@s+1
  2480  000C30  EC7C  F017         	call	_estaSeco	;wreg free
  2481  000C34  500B               	movf	?_estaSeco^0,w,c
  2482  000C36  100C               	iorwf	(?_estaSeco+1)^0,w,c
  2483  000C38  B4D8               	btfsc	status,2,c
  2484  000C3A  EF21  F006         	goto	u3421
  2485  000C3E  EF23  F006         	goto	u3420
  2486  000C42                     u3421:
  2487  000C42  EFC0  F006         	goto	l4378
  2488  000C46                     u3420:
  2489  000C46                     
  2490                           ;main.c: 348:                     LATDbits.LATD3 = 1;
  2491  000C46  868C               	bsf	140,3,c	;volatile
  2492  000C48  EFD1  F005         	goto	l4330
  2493  000C4C                     l4350:
  2494                           
  2495                           ;main.c: 354:                 if (estaSeco(sensores[i])) {
  2496  000C4C  90D8               	bcf	status,0,c
  2497  000C4E  3411               	rlcf	encenderBombas@i^0,w,c
  2498  000C50  6ED9               	movwf	fsr2l,c
  2499  000C52  3412               	rlcf	(encenderBombas@i+1)^0,w,c
  2500  000C54  6EDA               	movwf	fsr2h,c
  2501  000C56  0E60               	movlw	low _sensores
  2502  000C58  26D9               	addwf	fsr2l,f,c
  2503  000C5A  0E00               	movlw	high _sensores
  2504  000C5C  22DA               	addwfc	fsr2h,f,c
  2505  000C5E  CFDE F00B          	movff	postinc2,estaSeco@s
  2506  000C62  CFDD F00C          	movff	postdec2,estaSeco@s+1
  2507  000C66  EC7C  F017         	call	_estaSeco	;wreg free
  2508  000C6A  500B               	movf	?_estaSeco^0,w,c
  2509  000C6C  100C               	iorwf	(?_estaSeco+1)^0,w,c
  2510  000C6E  B4D8               	btfsc	status,2,c
  2511  000C70  EF3C  F006         	goto	u3431
  2512  000C74  EF3E  F006         	goto	u3430
  2513  000C78                     u3431:
  2514  000C78  EFC0  F006         	goto	l4378
  2515  000C7C                     u3430:
  2516  000C7C                     
  2517                           ;main.c: 355:                     LATDbits.LATD4 = 1;
  2518  000C7C  888C               	bsf	140,4,c	;volatile
  2519  000C7E  EFD1  F005         	goto	l4330
  2520  000C82                     l4356:
  2521                           
  2522                           ;main.c: 361:                 if (estaSeco(sensores[i])) {
  2523  000C82  90D8               	bcf	status,0,c
  2524  000C84  3411               	rlcf	encenderBombas@i^0,w,c
  2525  000C86  6ED9               	movwf	fsr2l,c
  2526  000C88  3412               	rlcf	(encenderBombas@i+1)^0,w,c
  2527  000C8A  6EDA               	movwf	fsr2h,c
  2528  000C8C  0E60               	movlw	low _sensores
  2529  000C8E  26D9               	addwf	fsr2l,f,c
  2530  000C90  0E00               	movlw	high _sensores
  2531  000C92  22DA               	addwfc	fsr2h,f,c
  2532  000C94  CFDE F00B          	movff	postinc2,estaSeco@s
  2533  000C98  CFDD F00C          	movff	postdec2,estaSeco@s+1
  2534  000C9C  EC7C  F017         	call	_estaSeco	;wreg free
  2535  000CA0  500B               	movf	?_estaSeco^0,w,c
  2536  000CA2  100C               	iorwf	(?_estaSeco+1)^0,w,c
  2537  000CA4  B4D8               	btfsc	status,2,c
  2538  000CA6  EF57  F006         	goto	u3441
  2539  000CAA  EF59  F006         	goto	u3440
  2540  000CAE                     u3441:
  2541  000CAE  EFC0  F006         	goto	l4378
  2542  000CB2                     u3440:
  2543  000CB2                     
  2544                           ;main.c: 362:                     LATDbits.LATD5 = 1;
  2545  000CB2  8A8C               	bsf	140,5,c	;volatile
  2546  000CB4  EFD1  F005         	goto	l4330
  2547  000CB8                     l4362:
  2548                           
  2549                           ;main.c: 368:                 if (estaSeco(sensores[i])) {
  2550  000CB8  90D8               	bcf	status,0,c
  2551  000CBA  3411               	rlcf	encenderBombas@i^0,w,c
  2552  000CBC  6ED9               	movwf	fsr2l,c
  2553  000CBE  3412               	rlcf	(encenderBombas@i+1)^0,w,c
  2554  000CC0  6EDA               	movwf	fsr2h,c
  2555  000CC2  0E60               	movlw	low _sensores
  2556  000CC4  26D9               	addwf	fsr2l,f,c
  2557  000CC6  0E00               	movlw	high _sensores
  2558  000CC8  22DA               	addwfc	fsr2h,f,c
  2559  000CCA  CFDE F00B          	movff	postinc2,estaSeco@s
  2560  000CCE  CFDD F00C          	movff	postdec2,estaSeco@s+1
  2561  000CD2  EC7C  F017         	call	_estaSeco	;wreg free
  2562  000CD6  500B               	movf	?_estaSeco^0,w,c
  2563  000CD8  100C               	iorwf	(?_estaSeco+1)^0,w,c
  2564  000CDA  B4D8               	btfsc	status,2,c
  2565  000CDC  EF72  F006         	goto	u3451
  2566  000CE0  EF74  F006         	goto	u3450
  2567  000CE4                     u3451:
  2568  000CE4  EFC0  F006         	goto	l4378
  2569  000CE8                     u3450:
  2570  000CE8                     
  2571                           ;main.c: 369:                     LATDbits.LATD6 = 1;
  2572  000CE8  8C8C               	bsf	140,6,c	;volatile
  2573  000CEA  EFD1  F005         	goto	l4330
  2574  000CEE                     l4368:
  2575                           
  2576                           ;main.c: 375:                 if (estaSeco(sensores[i])) {
  2577  000CEE  90D8               	bcf	status,0,c
  2578  000CF0  3411               	rlcf	encenderBombas@i^0,w,c
  2579  000CF2  6ED9               	movwf	fsr2l,c
  2580  000CF4  3412               	rlcf	(encenderBombas@i+1)^0,w,c
  2581  000CF6  6EDA               	movwf	fsr2h,c
  2582  000CF8  0E60               	movlw	low _sensores
  2583  000CFA  26D9               	addwf	fsr2l,f,c
  2584  000CFC  0E00               	movlw	high _sensores
  2585  000CFE  22DA               	addwfc	fsr2h,f,c
  2586  000D00  CFDE F00B          	movff	postinc2,estaSeco@s
  2587  000D04  CFDD F00C          	movff	postdec2,estaSeco@s+1
  2588  000D08  EC7C  F017         	call	_estaSeco	;wreg free
  2589  000D0C  500B               	movf	?_estaSeco^0,w,c
  2590  000D0E  100C               	iorwf	(?_estaSeco+1)^0,w,c
  2591  000D10  B4D8               	btfsc	status,2,c
  2592  000D12  EF8D  F006         	goto	u3461
  2593  000D16  EF8F  F006         	goto	u3460
  2594  000D1A                     u3461:
  2595  000D1A  EFC0  F006         	goto	l4378
  2596  000D1E                     u3460:
  2597  000D1E                     
  2598                           ;main.c: 376:                     LATDbits.LATD7 = 1;
  2599  000D1E  8E8C               	bsf	140,7,c	;volatile
  2600  000D20  EFD1  F005         	goto	l4330
  2601  000D24                     l4376:
  2602  000D24  C011  F00E         	movff	encenderBombas@i,??_encenderBombas
  2603  000D28  C012  F00F         	movff	encenderBombas@i+1,??_encenderBombas+1
  2604                           
  2605                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2606                           ; Switch size 1, requested type "simple"
  2607                           ; Number of cases is 1, Range of values is 0 to 0
  2608                           ; switch strategies available:
  2609                           ; Name         Instructions Cycles
  2610                           ; simple_byte            4     3 (average)
  2611                           ;	Chosen strategy is simple_byte
  2612  000D2C  500F               	movf	(??_encenderBombas+1)^0,w,c
  2613  000D2E  0A00               	xorlw	0	; case 0
  2614  000D30  B4D8               	btfsc	status,2,c
  2615  000D32  EF9D  F006         	goto	l5048
  2616  000D36  EFC0  F006         	goto	l4378
  2617  000D3A                     l5048:
  2618                           
  2619                           ; Switch size 1, requested type "simple"
  2620                           ; Number of cases is 8, Range of values is 0 to 7
  2621                           ; switch strategies available:
  2622                           ; Name         Instructions Cycles
  2623                           ; simple_byte           25    13 (average)
  2624                           ;	Chosen strategy is simple_byte
  2625  000D3A  500E               	movf	??_encenderBombas^0,w,c
  2626  000D3C  0A00               	xorlw	0	; case 0
  2627  000D3E  B4D8               	btfsc	status,2,c
  2628  000D40  EFB8  F005         	goto	l4326
  2629  000D44  0A01               	xorlw	1	; case 1
  2630  000D46  B4D8               	btfsc	status,2,c
  2631  000D48  EFD5  F005         	goto	l4332
  2632  000D4C  0A03               	xorlw	3	; case 2
  2633  000D4E  B4D8               	btfsc	status,2,c
  2634  000D50  EFF0  F005         	goto	l4338
  2635  000D54  0A01               	xorlw	1	; case 3
  2636  000D56  B4D8               	btfsc	status,2,c
  2637  000D58  EF0B  F006         	goto	l4344
  2638  000D5C  0A07               	xorlw	7	; case 4
  2639  000D5E  B4D8               	btfsc	status,2,c
  2640  000D60  EF26  F006         	goto	l4350
  2641  000D64  0A01               	xorlw	1	; case 5
  2642  000D66  B4D8               	btfsc	status,2,c
  2643  000D68  EF41  F006         	goto	l4356
  2644  000D6C  0A03               	xorlw	3	; case 6
  2645  000D6E  B4D8               	btfsc	status,2,c
  2646  000D70  EF5C  F006         	goto	l4362
  2647  000D74  0A01               	xorlw	1	; case 7
  2648  000D76  B4D8               	btfsc	status,2,c
  2649  000D78  EF77  F006         	goto	l4368
  2650  000D7C  EFC0  F006         	goto	l4378
  2651  000D80                     l4378:
  2652                           
  2653                           ;main.c: 382:     }
  2654  000D80  4A11               	infsnz	encenderBombas@i^0,f,c
  2655  000D82  2A12               	incf	(encenderBombas@i+1)^0,f,c
  2656  000D84  BE12               	btfsc	(encenderBombas@i+1)^0,7,c
  2657  000D86  EFCD  F006         	goto	u3471
  2658  000D8A  5012               	movf	(encenderBombas@i+1)^0,w,c
  2659  000D8C  E108               	bnz	u3470
  2660  000D8E  0411               	decf	encenderBombas@i^0,w,c
  2661  000D90  A0D8               	btfss	status,0,c
  2662  000D92  EFCD  F006         	goto	u3471
  2663  000D96  EFCF  F006         	goto	u3470
  2664  000D9A                     u3471:
  2665  000D9A  EF92  F006         	goto	l4376
  2666  000D9E                     u3470:
  2667  000D9E                     
  2668                           ;main.c: 384:     if (flagSeco) {
  2669  000D9E  5010               	movf	encenderBombas@flagSeco^0,w,c
  2670  000DA0  B4D8               	btfsc	status,2,c
  2671  000DA2  EFD5  F006         	goto	u3481
  2672  000DA6  EFD7  F006         	goto	u3480
  2673  000DAA                     u3481:
  2674  000DAA  EFE4  F006         	goto	l308
  2675  000DAE                     u3480:
  2676  000DAE                     
  2677                           ;main.c: 385:         regando = 1;
  2678  000DAE  0E01               	movlw	1
  2679  000DB0  0100               	movlb	0	; () banked
  2680  000DB2  6F7B               	movwf	_regando& (0+255),b
  2681  000DB4                     
  2682                           ; BSR set to: 0
  2683                           ;main.c: 386:         horarios[hora].regado = 0;
  2684  000DB4  5187               	movf	_hora& (0+255),w,b
  2685  000DB6  0D0C               	mullw	12
  2686  000DB8  0E3C               	movlw	low (_horarios+10)
  2687  000DBA  24F3               	addwf	243,w,c
  2688  000DBC  6ED9               	movwf	fsr2l,c
  2689  000DBE  0E01               	movlw	high (_horarios+10)
  2690  000DC0  20F4               	addwfc	prodh,w,c
  2691  000DC2  6EDA               	movwf	fsr2h,c
  2692  000DC4  0E00               	movlw	0
  2693  000DC6  6EDF               	movwf	indf2,c
  2694  000DC8                     l308:
  2695  000DC8  0012               	return		;funcret
  2696  000DCA                     __end_of_encenderBombas:
  2697                           	opt callstack 0
  2698                           
  2699 ;; *************** function _estaSeco *****************
  2700 ;; Defined at:
  2701 ;;		line 150 in file "main.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  s               2   10[COMRAM] struct .
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  2   10[COMRAM] int 
  2708 ;; Registers used:
  2709 ;;		wreg, status,2, status,0, cstack
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2715 ;;      Params:         2       0       0       0       0       0       0       0       0
  2716 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2717 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2718 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2719 ;;Total ram usage:        3 bytes
  2720 ;; Hardware stack levels used:    1
  2721 ;; Hardware stack levels required when called:    3
  2722 ;; This function calls:
  2723 ;;		_dameTemperaturaHumedad
  2724 ;; This function is called by:
  2725 ;;		_encenderBombas
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           	psect	text4
  2730  002EF8                     __ptext4:
  2731                           	opt callstack 0
  2732  002EF8                     _estaSeco:
  2733                           	opt callstack 25
  2734  002EF8                     
  2735                           ;main.c: 152:     dameTemperaturaHumedad();
  2736  002EF8  EC1F  F013         	call	_dameTemperaturaHumedad	;wreg free
  2737  002EFC                     
  2738                           ;main.c: 155:     return (s.porcientoHumedad < 94) && (Temperatura < 34);
  2739  002EFC  0E00               	movlw	0
  2740  002EFE  6E0D               	movwf	_estaSeco$799^0,c
  2741  002F00  0E5E               	movlw	94
  2742  002F02  600B               	cpfslt	estaSeco@s^0,c
  2743  002F04  EF86  F017         	goto	u3231
  2744  002F08  EF88  F017         	goto	u3230
  2745  002F0C                     u3231:
  2746  002F0C  EF93  F017         	goto	l4126
  2747  002F10                     u3230:
  2748  002F10  0E22               	movlw	34
  2749  002F12  0100               	movlb	0	; () banked
  2750  002F14  617F               	cpfslt	_Temperatura& (0+255),b
  2751  002F16  EF8F  F017         	goto	u3241
  2752  002F1A  EF91  F017         	goto	u3240
  2753  002F1E                     u3241:
  2754  002F1E  EF93  F017         	goto	l4126
  2755  002F22                     u3240:
  2756  002F22                     
  2757                           ; BSR set to: 0
  2758  002F22  0E01               	movlw	1
  2759  002F24  6E0D               	movwf	_estaSeco$799^0,c
  2760  002F26                     l4126:
  2761  002F26  C00D  F00B         	movff	_estaSeco$799,?_estaSeco
  2762  002F2A  6A0C               	clrf	(?_estaSeco+1)^0,c
  2763  002F2C  0012               	return		;funcret
  2764  002F2E                     __end_of_estaSeco:
  2765                           	opt callstack 0
  2766                           
  2767 ;; *************** function _dameHoraActual *****************
  2768 ;; Defined at:
  2769 ;;		line 183 in file "main.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;		None
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;		None
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      void 
  2776 ;; Registers used:
  2777 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2783 ;;      Params:         0       0       0       0       0       0       0       0       0
  2784 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2785 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2786 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2787 ;;Total ram usage:        0 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    4
  2790 ;; This function calls:
  2791 ;;		_convertirDato
  2792 ;;		_leer_rtc
  2793 ;; This function is called by:
  2794 ;;		_sistemaRegado
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text5
  2799  002F94                     __ptext5:
  2800                           	opt callstack 0
  2801  002F94                     _dameHoraActual:
  2802                           	opt callstack 25
  2803  002F94                     
  2804                           ;main.c: 185:     segundos = convertirDato(leer_rtc(0x00));
  2805  002F94  0E00               	movlw	0
  2806  002F96  ECE0  F017         	call	_leer_rtc
  2807  002F9A  EC1B  F018         	call	_convertirDato
  2808  002F9E  0100               	movlb	0	; () banked
  2809  002FA0  6F85               	movwf	_segundos& (0+255),b
  2810                           
  2811                           ;main.c: 186:     minutos = convertirDato(leer_rtc(0x01));
  2812  002FA2  0E01               	movlw	1
  2813  002FA4  ECE0  F017         	call	_leer_rtc
  2814  002FA8  EC1B  F018         	call	_convertirDato
  2815  002FAC  0100               	movlb	0	; () banked
  2816  002FAE  6F86               	movwf	_minutos& (0+255),b
  2817                           
  2818                           ;main.c: 187:     hora = convertirDato(leer_rtc(0x02));
  2819  002FB0  0E02               	movlw	2
  2820  002FB2  ECE0  F017         	call	_leer_rtc
  2821  002FB6  EC1B  F018         	call	_convertirDato
  2822  002FBA  0100               	movlb	0	; () banked
  2823  002FBC  6F87               	movwf	_hora& (0+255),b
  2824  002FBE                     
  2825                           ; BSR set to: 0
  2826  002FBE  0012               	return		;funcret
  2827  002FC0                     __end_of_dameHoraActual:
  2828                           	opt callstack 0
  2829                           
  2830 ;; *************** function _dameDiaActual *****************
  2831 ;; Defined at:
  2832 ;;		line 190 in file "main.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;		None
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1    wreg      void 
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2846 ;;      Params:         0       0       0       0       0       0       0       0       0
  2847 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2848 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2849 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2850 ;;Total ram usage:        0 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:    4
  2853 ;; This function calls:
  2854 ;;		_convertirDato
  2855 ;;		_leer_rtc
  2856 ;; This function is called by:
  2857 ;;		_sistemaRegado
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861                           	psect	text6
  2862  0030F8                     __ptext6:
  2863                           	opt callstack 0
  2864  0030F8                     _dameDiaActual:
  2865                           	opt callstack 25
  2866  0030F8                     
  2867                           ;main.c: 192:     diaActual = convertirDato(leer_rtc(0x03));
  2868  0030F8  0E03               	movlw	3
  2869  0030FA  ECE0  F017         	call	_leer_rtc
  2870  0030FE  EC1B  F018         	call	_convertirDato
  2871  003102  0100               	movlb	0	; () banked
  2872  003104  6F84               	movwf	_diaActual& (0+255),b
  2873  003106                     
  2874                           ; BSR set to: 0
  2875  003106  0012               	return		;funcret
  2876  003108                     __end_of_dameDiaActual:
  2877                           	opt callstack 0
  2878                           
  2879 ;; *************** function _leer_rtc *****************
  2880 ;; Defined at:
  2881 ;;		line 13 in file "./RTC.h"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;  direccion       1    wreg     unsigned char 
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;  direccion       1    2[COMRAM] unsigned char 
  2886 ;;  dato            1    3[COMRAM] unsigned char 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  1    wreg      unsigned char 
  2889 ;; Registers used:
  2890 ;;		wreg, status,2, status,0, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2896 ;;      Params:         0       0       0       0       0       0       0       0       0
  2897 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2898 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2899 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2900 ;;Total ram usage:        2 bytes
  2901 ;; Hardware stack levels used:    1
  2902 ;; Hardware stack levels required when called:    3
  2903 ;; This function calls:
  2904 ;;		_i2c_detener
  2905 ;;		_i2c_envia_dato
  2906 ;;		_i2c_inicia_com
  2907 ;;		_i2c_recibe_dato
  2908 ;;		_i2c_reinicia_com
  2909 ;; This function is called by:
  2910 ;;		_dameHoraActual
  2911 ;;		_dameDiaActual
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           	psect	text7
  2916  002FC0                     __ptext7:
  2917                           	opt callstack 0
  2918  002FC0                     _leer_rtc:
  2919                           	opt callstack 25
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;incstack = 0
  2923                           ;leer_rtc@direccion stored from wreg
  2924  002FC0  6E03               	movwf	leer_rtc@direccion^0,c
  2925  002FC2                     
  2926                           ;./RTC.h: 14:     unsigned char dato;;./RTC.h: 15:     i2c_inicia_com();
  2927  002FC2  EC9E  F018         	call	_i2c_inicia_com	;wreg free
  2928                           
  2929                           ;./RTC.h: 16:     i2c_envia_dato(0xD0);
  2930  002FC6  0ED0               	movlw	208
  2931  002FC8  EC84  F018         	call	_i2c_envia_dato
  2932                           
  2933                           ;./RTC.h: 17:     i2c_envia_dato(direccion);
  2934  002FCC  5003               	movf	leer_rtc@direccion^0,w,c
  2935  002FCE  EC84  F018         	call	_i2c_envia_dato
  2936                           
  2937                           ;./RTC.h: 18:     i2c_reinicia_com();
  2938  002FD2  EC9A  F018         	call	_i2c_reinicia_com	;wreg free
  2939                           
  2940                           ;./RTC.h: 19:     i2c_envia_dato(0xD1);
  2941  002FD6  0ED1               	movlw	209
  2942  002FD8  EC84  F018         	call	_i2c_envia_dato
  2943                           
  2944                           ;./RTC.h: 20:     dato = i2c_recibe_dato();
  2945  002FDC  EC59  F018         	call	_i2c_recibe_dato	;wreg free
  2946  002FE0  6E04               	movwf	leer_rtc@dato^0,c
  2947                           
  2948                           ;./RTC.h: 21:     i2c_detener();
  2949  002FE2  ECA2  F018         	call	_i2c_detener	;wreg free
  2950  002FE6                     
  2951                           ;./RTC.h: 22:     return dato;
  2952  002FE6  5004               	movf	leer_rtc@dato^0,w,c
  2953  002FE8  0012               	return		;funcret
  2954  002FEA                     __end_of_leer_rtc:
  2955                           	opt callstack 0
  2956                           
  2957 ;; *************** function _convertirDato *****************
  2958 ;; Defined at:
  2959 ;;		line 28 in file "./RTC.h"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  dato            1    wreg     unsigned char 
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;  dato            1    1[COMRAM] unsigned char 
  2964 ;;  datoR           1    2[COMRAM] unsigned char 
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      unsigned char 
  2967 ;; Registers used:
  2968 ;;		wreg, status,2, status,0, prodl, prodh
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2974 ;;      Params:         0       0       0       0       0       0       0       0       0
  2975 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2976 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2977 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2978 ;;Total ram usage:        3 bytes
  2979 ;; Hardware stack levels used:    1
  2980 ;; Hardware stack levels required when called:    1
  2981 ;; This function calls:
  2982 ;;		Nothing
  2983 ;; This function is called by:
  2984 ;;		_dameHoraActual
  2985 ;;		_dameDiaActual
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           	psect	text8
  2990  003036                     __ptext8:
  2991                           	opt callstack 0
  2992  003036                     _convertirDato:
  2993                           	opt callstack 27
  2994                           
  2995                           ;incstack = 0
  2996                           ;convertirDato@dato stored from wreg
  2997  003036  6E02               	movwf	convertirDato@dato^0,c
  2998  003038                     
  2999                           ;./RTC.h: 30:     datoR = (dato & 0xF0) >> 4;
  3000  003038  3802               	swapf	convertirDato@dato^0,w,c
  3001  00303A  0B0F               	andlw	15
  3002  00303C  0B0F               	andlw	15
  3003  00303E  6E03               	movwf	convertirDato@datoR^0,c
  3004  003040                     
  3005                           ;./RTC.h: 31:     datoR = (datoR * 10) + (dato & 0x0F);
  3006  003040  C002  F001         	movff	convertirDato@dato,??_convertirDato
  3007  003044  0E0F               	movlw	15
  3008  003046  1601               	andwf	??_convertirDato^0,f,c
  3009  003048  5003               	movf	convertirDato@datoR^0,w,c
  3010  00304A  0D0A               	mullw	10
  3011  00304C  50F3               	movf	243,w,c
  3012  00304E  2401               	addwf	??_convertirDato^0,w,c
  3013  003050  6E03               	movwf	convertirDato@datoR^0,c
  3014  003052                     
  3015                           ;./RTC.h: 32:     return datoR;
  3016  003052  5003               	movf	convertirDato@datoR^0,w,c
  3017  003054  0012               	return		;funcret
  3018  003056                     __end_of_convertirDato:
  3019                           	opt callstack 0
  3020                           
  3021 ;; *************** function _sistemaPrincipal *****************
  3022 ;; Defined at:
  3023 ;;		line 600 in file "main.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;  opcion          1    wreg     unsigned char 
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;  opcion          1   70[BANK0 ] unsigned char 
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  1    wreg      void 
  3030 ;; Registers used:
  3031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3037 ;;      Params:         0       0       0       0       0       0       0       0       0
  3038 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3039 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3040 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3041 ;;Total ram usage:        3 bytes
  3042 ;; Hardware stack levels used:    1
  3043 ;; Hardware stack levels required when called:   10
  3044 ;; This function calls:
  3045 ;;		_asignarHorarios
  3046 ;;		_dameDatosSistema
  3047 ;;		_fijaDiaRtc
  3048 ;;		_fijaHoraRtc
  3049 ;;		_leeHorariosMemoria
  3050 ;;		_mostrarDatosSensores
  3051 ;;		_mostrarDatosSensoresWIFI
  3052 ;;		_regadoRapido
  3053 ;;		_setTiempoRegar
  3054 ;; This function is called by:
  3055 ;;		_main
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text9
  3060  0022DA                     __ptext9:
  3061                           	opt callstack 0
  3062  0022DA                     _sistemaPrincipal:
  3063                           	opt callstack 20
  3064                           
  3065                           ;incstack = 0
  3066                           ;sistemaPrincipal@opcion stored from wreg
  3067  0022DA  0100               	movlb	0	; () banked
  3068  0022DC  6FF3               	movwf	sistemaPrincipal@opcion& (0+255),b
  3069  0022DE                     
  3070                           ;main.c: 602:     PIE1bits.RCIE = 0;
  3071  0022DE  9A9D               	bcf	157,5,c	;volatile
  3072                           
  3073                           ;main.c: 604:     switch (opcion) {
  3074  0022E0  EF9E  F011         	goto	l4696
  3075  0022E4                     l4674:
  3076                           
  3077                           ; BSR set to: 0
  3078                           ;main.c: 607:             fijaHoraRtc();
  3079  0022E4  EC23  F017         	call	_fijaHoraRtc	;wreg free
  3080                           
  3081                           ;main.c: 608:             break;
  3082  0022E8  EFCC  F011         	goto	l365
  3083  0022EC                     l4676:
  3084                           
  3085                           ; BSR set to: 0
  3086                           ;main.c: 611:             asignarHorarios();
  3087  0022EC  ECB3  F00D         	call	_asignarHorarios	;wreg free
  3088                           
  3089                           ;main.c: 612:             break;
  3090  0022F0  EFCC  F011         	goto	l365
  3091  0022F4                     l4678:
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;main.c: 615:             setTiempoRegar();
  3095  0022F4  ECE2  F013         	call	_setTiempoRegar	;wreg free
  3096                           
  3097                           ;main.c: 616:             break;
  3098  0022F8  EFCC  F011         	goto	l365
  3099  0022FC                     l4680:
  3100                           
  3101                           ; BSR set to: 0
  3102                           ;main.c: 619:             dameDatosSistema();
  3103  0022FC  ECCA  F002         	call	_dameDatosSistema	;wreg free
  3104                           
  3105                           ;main.c: 620:             break;
  3106  002300  EFCC  F011         	goto	l365
  3107  002304                     l4682:
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;main.c: 623:             if (MODO_COMUNICACION)
  3111  002304  5188               	movf	_MODO_COMUNICACION& (0+255),w,b
  3112  002306  B4D8               	btfsc	status,2,c
  3113  002308  EF88  F011         	goto	u3691
  3114  00230C  EF8A  F011         	goto	u3690
  3115  002310                     u3691:
  3116  002310  EF8E  F011         	goto	l4686
  3117  002314                     u3690:
  3118  002314                     
  3119                           ; BSR set to: 0
  3120                           ;main.c: 624:                 mostrarDatosSensoresWIFI();
  3121  002314  EC61  F00F         	call	_mostrarDatosSensoresWIFI	;wreg free
  3122  002318  EFCC  F011         	goto	l365
  3123  00231C                     l4686:
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;main.c: 626:                 mostrarDatosSensores();
  3127  00231C  ECD6  F00F         	call	_mostrarDatosSensores	;wreg free
  3128  002320  EFCC  F011         	goto	l365
  3129  002324                     l4688:
  3130                           
  3131                           ; BSR set to: 0
  3132                           ;main.c: 631:             regadoRapido();
  3133  002324  EC52  F00E         	call	_regadoRapido	;wreg free
  3134                           
  3135                           ;main.c: 632:             break;
  3136  002328  EFCC  F011         	goto	l365
  3137  00232C                     l4690:
  3138                           
  3139                           ; BSR set to: 0
  3140                           ;main.c: 635:             fijaDiaRtc();
  3141  00232C  EC3B  F018         	call	_fijaDiaRtc	;wreg free
  3142                           
  3143                           ;main.c: 636:             break;
  3144  002330  EFCC  F011         	goto	l365
  3145  002334                     l4692:
  3146                           
  3147                           ; BSR set to: 0
  3148                           ;main.c: 639:             leeHorariosMemoria();
  3149  002334  EC40  F00A         	call	_leeHorariosMemoria	;wreg free
  3150                           
  3151                           ;main.c: 640:             break;
  3152  002338  EFCC  F011         	goto	l365
  3153  00233C                     l4696:
  3154  00233C  0100               	movlb	0	; () banked
  3155  00233E  51F3               	movf	sistemaPrincipal@opcion& (0+255),w,b
  3156  002340  6FF1               	movwf	??_sistemaPrincipal& (0+255),b
  3157  002342  6BF2               	clrf	(??_sistemaPrincipal+1)& (0+255),b
  3158                           
  3159                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3160                           ; Switch size 1, requested type "simple"
  3161                           ; Number of cases is 1, Range of values is 0 to 0
  3162                           ; switch strategies available:
  3163                           ; Name         Instructions Cycles
  3164                           ; simple_byte            4     3 (average)
  3165                           ;	Chosen strategy is simple_byte
  3166  002344  51F2               	movf	(??_sistemaPrincipal+1)& (0+255),w,b
  3167  002346  0A00               	xorlw	0	; case 0
  3168  002348  B4D8               	btfsc	status,2,c
  3169  00234A  EFA9  F011         	goto	l5050
  3170  00234E  EFCC  F011         	goto	l365
  3171  002352                     l5050:
  3172                           
  3173                           ; BSR set to: 0
  3174                           ; Switch size 1, requested type "simple"
  3175                           ; Number of cases is 8, Range of values is 1 to 8
  3176                           ; switch strategies available:
  3177                           ; Name         Instructions Cycles
  3178                           ; simple_byte           25    13 (average)
  3179                           ;	Chosen strategy is simple_byte
  3180  002352  51F1               	movf	??_sistemaPrincipal& (0+255),w,b
  3181  002354  0A01               	xorlw	1	; case 1
  3182  002356  B4D8               	btfsc	status,2,c
  3183  002358  EF72  F011         	goto	l4674
  3184  00235C  0A03               	xorlw	3	; case 2
  3185  00235E  B4D8               	btfsc	status,2,c
  3186  002360  EF76  F011         	goto	l4676
  3187  002364  0A01               	xorlw	1	; case 3
  3188  002366  B4D8               	btfsc	status,2,c
  3189  002368  EF7A  F011         	goto	l4678
  3190  00236C  0A07               	xorlw	7	; case 4
  3191  00236E  B4D8               	btfsc	status,2,c
  3192  002370  EF7E  F011         	goto	l4680
  3193  002374  0A01               	xorlw	1	; case 5
  3194  002376  B4D8               	btfsc	status,2,c
  3195  002378  EF82  F011         	goto	l4682
  3196  00237C  0A03               	xorlw	3	; case 6
  3197  00237E  B4D8               	btfsc	status,2,c
  3198  002380  EF92  F011         	goto	l4688
  3199  002384  0A01               	xorlw	1	; case 7
  3200  002386  B4D8               	btfsc	status,2,c
  3201  002388  EF96  F011         	goto	l4690
  3202  00238C  0A0F               	xorlw	15	; case 8
  3203  00238E  B4D8               	btfsc	status,2,c
  3204  002390  EF9A  F011         	goto	l4692
  3205  002394  EFCC  F011         	goto	l365
  3206  002398                     l365:
  3207                           
  3208                           ;main.c: 648:     PIE1bits.RCIE = 1;
  3209  002398  8A9D               	bsf	157,5,c	;volatile
  3210  00239A  0012               	return		;funcret
  3211  00239C                     __end_of_sistemaPrincipal:
  3212                           	opt callstack 0
  3213                           
  3214 ;; *************** function _setTiempoRegar *****************
  3215 ;; Defined at:
  3216 ;;		line 476 in file "main.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;		None
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  hora            1   19[COMRAM] unsigned char 
  3221 ;;  tiempoRegar     1   18[COMRAM] unsigned char 
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  1    wreg      void 
  3224 ;; Registers used:
  3225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3231 ;;      Params:         0       0       0       0       0       0       0       0       0
  3232 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3233 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3234 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3235 ;;Total ram usage:        2 bytes
  3236 ;; Hardware stack levels used:    1
  3237 ;; Hardware stack levels required when called:    5
  3238 ;; This function calls:
  3239 ;;		_UART_write
  3240 ;;		_escribeHorariosMemoria
  3241 ;;		_getValue
  3242 ;; This function is called by:
  3243 ;;		_sistemaPrincipal
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247                           	psect	text10
  3248  0027C4                     __ptext10:
  3249                           	opt callstack 0
  3250  0027C4                     _setTiempoRegar:
  3251                           	opt callstack 24
  3252  0027C4                     
  3253                           ;main.c: 478:     unsigned char hora;;main.c: 479:     unsigned char tiempoRegar;;main.c
      +                          : 484:     hora = getValue(2);
  3254  0027C4  0E00               	movlw	0
  3255  0027C6  6E03               	movwf	(getValue@numCharacters+1)^0,c
  3256  0027C8  0E02               	movlw	2
  3257  0027CA  6E02               	movwf	getValue@numCharacters^0,c
  3258  0027CC  ECE5  F006         	call	_getValue	;wreg free
  3259  0027D0  6E14               	movwf	setTiempoRegar@hora^0,c
  3260  0027D2                     
  3261                           ;main.c: 486:     if (hora != '@') {
  3262  0027D2  0E40               	movlw	64
  3263  0027D4  1814               	xorwf	setTiempoRegar@hora^0,w,c
  3264  0027D6  B4D8               	btfsc	status,2,c
  3265  0027D8  EFF0  F013         	goto	u3561
  3266  0027DC  EFF2  F013         	goto	u3560
  3267  0027E0                     u3561:
  3268  0027E0  EF1C  F014         	goto	l332
  3269  0027E4                     u3560:
  3270  0027E4                     
  3271                           ;main.c: 489:         tiempoRegar = getValue(2);
  3272  0027E4  0E00               	movlw	0
  3273  0027E6  6E03               	movwf	(getValue@numCharacters+1)^0,c
  3274  0027E8  0E02               	movlw	2
  3275  0027EA  6E02               	movwf	getValue@numCharacters^0,c
  3276  0027EC  ECE5  F006         	call	_getValue	;wreg free
  3277  0027F0  6E13               	movwf	setTiempoRegar@tiempoRegar^0,c
  3278  0027F2                     
  3279                           ;main.c: 491:         if (tiempoRegar != '@') {
  3280  0027F2  0E40               	movlw	64
  3281  0027F4  1813               	xorwf	setTiempoRegar@tiempoRegar^0,w,c
  3282  0027F6  B4D8               	btfsc	status,2,c
  3283  0027F8  EF00  F014         	goto	u3571
  3284  0027FC  EF02  F014         	goto	u3570
  3285  002800                     u3571:
  3286  002800  EF1C  F014         	goto	l332
  3287  002804                     u3570:
  3288  002804                     
  3289                           ;main.c: 497:             horarios[hora].tiempoRegar = tiempoRegar;
  3290  002804  5014               	movf	setTiempoRegar@hora^0,w,c
  3291  002806  0D0C               	mullw	12
  3292  002808  0E3D               	movlw	low (_horarios+11)
  3293  00280A  24F3               	addwf	243,w,c
  3294  00280C  6ED9               	movwf	fsr2l,c
  3295  00280E  0E01               	movlw	high (_horarios+11)
  3296  002810  20F4               	addwfc	prodh,w,c
  3297  002812  6EDA               	movwf	fsr2h,c
  3298  002814  C013  FFDF         	movff	setTiempoRegar@tiempoRegar,indf2
  3299                           
  3300                           ;main.c: 498:             minutosRegar = horarios[hora].tiempoRegar;
  3301  002818  5014               	movf	setTiempoRegar@hora^0,w,c
  3302  00281A  0D0C               	mullw	12
  3303  00281C  0E3D               	movlw	low (_horarios+11)
  3304  00281E  24F3               	addwf	243,w,c
  3305  002820  6ED9               	movwf	fsr2l,c
  3306  002822  0E01               	movlw	high (_horarios+11)
  3307  002824  20F4               	addwfc	prodh,w,c
  3308  002826  6EDA               	movwf	fsr2h,c
  3309  002828  50DF               	movf	indf2,w,c
  3310  00282A  0100               	movlb	0	; () banked
  3311  00282C  6F7D               	movwf	_minutosRegar& (0+255),b
  3312  00282E                     
  3313                           ; BSR set to: 0
  3314                           ;main.c: 500:             escribeHorariosMemoria();
  3315  00282E  EC5E  F00C         	call	_escribeHorariosMemoria	;wreg free
  3316  002832                     
  3317                           ;main.c: 502:             UART_write('E');
  3318  002832  0E45               	movlw	69
  3319  002834  EC66  F018         	call	_UART_write
  3320  002838                     l332:
  3321  002838  0012               	return		;funcret
  3322  00283A                     __end_of_setTiempoRegar:
  3323                           	opt callstack 0
  3324                           
  3325 ;; *************** function _regadoRapido *****************
  3326 ;; Defined at:
  3327 ;;		line 985 in file "main.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;		None
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;  areaRegar       1   15[COMRAM] unsigned char 
  3332 ;;  tiempoRegar     1   14[COMRAM] unsigned char 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      void 
  3335 ;; Registers used:
  3336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3342 ;;      Params:         0       0       0       0       0       0       0       0       0
  3343 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3344 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3345 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3346 ;;Total ram usage:        4 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; Hardware stack levels required when called:    3
  3349 ;; This function calls:
  3350 ;;		_UART_write
  3351 ;;		_getValue
  3352 ;; This function is called by:
  3353 ;;		_sistemaPrincipal
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text11
  3358  001CA4                     __ptext11:
  3359                           	opt callstack 0
  3360  001CA4                     _regadoRapido:
  3361                           	opt callstack 26
  3362  001CA4                     
  3363                           ;main.c: 987:     unsigned char tiempoRegar;;main.c: 988:     unsigned char areaRegar;;m
      +                          ain.c: 992:     if (!regando) {
  3364  001CA4  0100               	movlb	0	; () banked
  3365  001CA6  517B               	movf	_regando& (0+255),w,b
  3366  001CA8  A4D8               	btfss	status,2,c
  3367  001CAA  EF59  F00E         	goto	u3631
  3368  001CAE  EF5B  F00E         	goto	u3630
  3369  001CB2                     u3631:
  3370  001CB2  EFD7  F00E         	goto	l4600
  3371  001CB6                     u3630:
  3372  001CB6                     
  3373                           ; BSR set to: 0
  3374                           ;main.c: 994:         tiempoRegar = getValue(2);
  3375  001CB6  0E00               	movlw	0
  3376  001CB8  6E03               	movwf	(getValue@numCharacters+1)^0,c
  3377  001CBA  0E02               	movlw	2
  3378  001CBC  6E02               	movwf	getValue@numCharacters^0,c
  3379  001CBE  ECE5  F006         	call	_getValue	;wreg free
  3380  001CC2  6E0F               	movwf	regadoRapido@tiempoRegar^0,c
  3381  001CC4                     
  3382                           ;main.c: 996:         if (tiempoRegar != '@') {
  3383  001CC4  0E40               	movlw	64
  3384  001CC6  180F               	xorwf	regadoRapido@tiempoRegar^0,w,c
  3385  001CC8  B4D8               	btfsc	status,2,c
  3386  001CCA  EF69  F00E         	goto	u3641
  3387  001CCE  EF6B  F00E         	goto	u3640
  3388  001CD2                     u3641:
  3389  001CD2  EFDA  F00E         	goto	l481
  3390  001CD6                     u3640:
  3391  001CD6                     
  3392                           ;main.c: 999:             areaRegar = getValue(2);
  3393  001CD6  0E00               	movlw	0
  3394  001CD8  6E03               	movwf	(getValue@numCharacters+1)^0,c
  3395  001CDA  0E02               	movlw	2
  3396  001CDC  6E02               	movwf	getValue@numCharacters^0,c
  3397  001CDE  ECE5  F006         	call	_getValue	;wreg free
  3398  001CE2  6E10               	movwf	regadoRapido@areaRegar^0,c
  3399  001CE4                     
  3400                           ;main.c: 1001:             if (areaRegar != '@') {
  3401  001CE4  0E40               	movlw	64
  3402  001CE6  1810               	xorwf	regadoRapido@areaRegar^0,w,c
  3403  001CE8  B4D8               	btfsc	status,2,c
  3404  001CEA  EF79  F00E         	goto	u3651
  3405  001CEE  EF7B  F00E         	goto	u3650
  3406  001CF2                     u3651:
  3407  001CF2  EFDA  F00E         	goto	l481
  3408  001CF6                     u3650:
  3409  001CF6                     
  3410                           ;main.c: 1003:                 areaRegar--;
  3411  001CF6  0610               	decf	regadoRapido@areaRegar^0,f,c
  3412                           
  3413                           ;main.c: 1005:                 switch (areaRegar) {
  3414  001CF8  EF96  F00E         	goto	l4590
  3415  001CFC                     l471:
  3416                           
  3417                           ;main.c: 1008:                         LATDbits.LATD0 = 1;
  3418  001CFC  808C               	bsf	140,0,c	;volatile
  3419                           
  3420                           ;main.c: 1009:                         break;
  3421  001CFE  EFC3  F00E         	goto	l4592
  3422  001D02                     l473:
  3423                           
  3424                           ;main.c: 1012:                         LATDbits.LATD1 = 1;
  3425  001D02  828C               	bsf	140,1,c	;volatile
  3426                           
  3427                           ;main.c: 1013:                         break;
  3428  001D04  EFC3  F00E         	goto	l4592
  3429  001D08                     l474:
  3430                           
  3431                           ;main.c: 1016:                         LATDbits.LATD2 = 1;
  3432  001D08  848C               	bsf	140,2,c	;volatile
  3433                           
  3434                           ;main.c: 1017:                         break;
  3435  001D0A  EFC3  F00E         	goto	l4592
  3436  001D0E                     l475:
  3437                           
  3438                           ;main.c: 1020:                         LATDbits.LATD3 = 1;
  3439  001D0E  868C               	bsf	140,3,c	;volatile
  3440                           
  3441                           ;main.c: 1021:                         break;
  3442  001D10  EFC3  F00E         	goto	l4592
  3443  001D14                     l476:
  3444                           
  3445                           ;main.c: 1024:                         LATDbits.LATD4 = 1;
  3446  001D14  888C               	bsf	140,4,c	;volatile
  3447                           
  3448                           ;main.c: 1025:                         break;
  3449  001D16  EFC3  F00E         	goto	l4592
  3450  001D1A                     l477:
  3451                           
  3452                           ;main.c: 1028:                         LATDbits.LATD5 = 1;
  3453  001D1A  8A8C               	bsf	140,5,c	;volatile
  3454                           
  3455                           ;main.c: 1029:                         break;
  3456  001D1C  EFC3  F00E         	goto	l4592
  3457  001D20                     l478:
  3458                           
  3459                           ;main.c: 1032:                         LATDbits.LATD6 = 1;
  3460  001D20  8C8C               	bsf	140,6,c	;volatile
  3461                           
  3462                           ;main.c: 1033:                         break;
  3463  001D22  EFC3  F00E         	goto	l4592
  3464  001D26                     l479:
  3465                           
  3466                           ;main.c: 1036:                         LATDbits.LATD7 = 1;
  3467  001D26  8E8C               	bsf	140,7,c	;volatile
  3468                           
  3469                           ;main.c: 1037:                         break;
  3470  001D28  EFC3  F00E         	goto	l4592
  3471  001D2C                     l4590:
  3472  001D2C  5010               	movf	regadoRapido@areaRegar^0,w,c
  3473  001D2E  6E0D               	movwf	??_regadoRapido^0,c
  3474  001D30  6A0E               	clrf	(??_regadoRapido+1)^0,c
  3475                           
  3476                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3477                           ; Switch size 1, requested type "simple"
  3478                           ; Number of cases is 1, Range of values is 0 to 0
  3479                           ; switch strategies available:
  3480                           ; Name         Instructions Cycles
  3481                           ; simple_byte            4     3 (average)
  3482                           ;	Chosen strategy is simple_byte
  3483  001D32  500E               	movf	(??_regadoRapido+1)^0,w,c
  3484  001D34  0A00               	xorlw	0	; case 0
  3485  001D36  B4D8               	btfsc	status,2,c
  3486  001D38  EFA0  F00E         	goto	l5052
  3487  001D3C  EFC3  F00E         	goto	l4592
  3488  001D40                     l5052:
  3489                           
  3490                           ; Switch size 1, requested type "simple"
  3491                           ; Number of cases is 8, Range of values is 0 to 7
  3492                           ; switch strategies available:
  3493                           ; Name         Instructions Cycles
  3494                           ; simple_byte           25    13 (average)
  3495                           ;	Chosen strategy is simple_byte
  3496  001D40  500D               	movf	??_regadoRapido^0,w,c
  3497  001D42  0A00               	xorlw	0	; case 0
  3498  001D44  B4D8               	btfsc	status,2,c
  3499  001D46  EF7E  F00E         	goto	l471
  3500  001D4A  0A01               	xorlw	1	; case 1
  3501  001D4C  B4D8               	btfsc	status,2,c
  3502  001D4E  EF81  F00E         	goto	l473
  3503  001D52  0A03               	xorlw	3	; case 2
  3504  001D54  B4D8               	btfsc	status,2,c
  3505  001D56  EF84  F00E         	goto	l474
  3506  001D5A  0A01               	xorlw	1	; case 3
  3507  001D5C  B4D8               	btfsc	status,2,c
  3508  001D5E  EF87  F00E         	goto	l475
  3509  001D62  0A07               	xorlw	7	; case 4
  3510  001D64  B4D8               	btfsc	status,2,c
  3511  001D66  EF8A  F00E         	goto	l476
  3512  001D6A  0A01               	xorlw	1	; case 5
  3513  001D6C  B4D8               	btfsc	status,2,c
  3514  001D6E  EF8D  F00E         	goto	l477
  3515  001D72  0A03               	xorlw	3	; case 6
  3516  001D74  B4D8               	btfsc	status,2,c
  3517  001D76  EF90  F00E         	goto	l478
  3518  001D7A  0A01               	xorlw	1	; case 7
  3519  001D7C  B4D8               	btfsc	status,2,c
  3520  001D7E  EF93  F00E         	goto	l479
  3521  001D82  EFC3  F00E         	goto	l4592
  3522  001D86                     l4592:
  3523                           
  3524                           ;main.c: 1041:                 regando = 1;
  3525  001D86  0E01               	movlw	1
  3526  001D88  0100               	movlb	0	; () banked
  3527  001D8A  6F7B               	movwf	_regando& (0+255),b
  3528  001D8C                     
  3529                           ; BSR set to: 0
  3530                           ;main.c: 1042:                 horarios[hora].regado = 0;
  3531  001D8C  5187               	movf	_hora& (0+255),w,b
  3532  001D8E  0D0C               	mullw	12
  3533  001D90  0E3C               	movlw	low (_horarios+10)
  3534  001D92  24F3               	addwf	243,w,c
  3535  001D94  6ED9               	movwf	fsr2l,c
  3536  001D96  0E01               	movlw	high (_horarios+10)
  3537  001D98  20F4               	addwfc	prodh,w,c
  3538  001D9A  6EDA               	movwf	fsr2h,c
  3539  001D9C  0E00               	movlw	0
  3540  001D9E  6EDF               	movwf	indf2,c
  3541  001DA0                     
  3542                           ; BSR set to: 0
  3543                           ;main.c: 1043:                 minutosRegar = tiempoRegar;
  3544  001DA0  C00F  F07D         	movff	regadoRapido@tiempoRegar,_minutosRegar
  3545  001DA4                     
  3546                           ; BSR set to: 0
  3547                           ;main.c: 1044:                 UART_write('E');
  3548  001DA4  0E45               	movlw	69
  3549  001DA6  EC66  F018         	call	_UART_write
  3550  001DAA  EFDA  F00E         	goto	l481
  3551  001DAE                     l4600:
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;main.c: 1052:         UART_write('@');
  3555  001DAE  0E40               	movlw	64
  3556  001DB0  EC66  F018         	call	_UART_write
  3557  001DB4                     l481:
  3558  001DB4  0012               	return		;funcret
  3559  001DB6                     __end_of_regadoRapido:
  3560                           	opt callstack 0
  3561                           
  3562 ;; *************** function _mostrarDatosSensoresWIFI *****************
  3563 ;; Defined at:
  3564 ;;		line 840 in file "main.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;		None
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;  i               2   28[BANK0 ] int 
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3578 ;;      Params:         0       0       0       0       0       0       0       0       0
  3579 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3580 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3581 ;;      Totals:         1       2       0       0       0       0       0       0       0
  3582 ;;Total ram usage:        3 bytes
  3583 ;; Hardware stack levels used:    1
  3584 ;; Hardware stack levels required when called:    9
  3585 ;; This function calls:
  3586 ;;		_UART_printf
  3587 ;;		_UART_write
  3588 ;;		_dameTemperaturaHumedad
  3589 ;;		_lecturaWifi
  3590 ;;		_limpiarBuffer
  3591 ;;		_sprintf
  3592 ;; This function is called by:
  3593 ;;		_sistemaPrincipal
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           	psect	text12
  3598  001EC2                     __ptext12:
  3599                           	opt callstack 0
  3600  001EC2                     _mostrarDatosSensoresWIFI:
  3601                           	opt callstack 20
  3602  001EC2                     
  3603                           ;main.c: 842:     dameTemperaturaHumedad();
  3604  001EC2  EC1F  F013         	call	_dameTemperaturaHumedad	;wreg free
  3605  001EC6                     
  3606                           ;main.c: 847:     limpiarBuffer();
  3607  001EC6  EC03  F017         	call	_limpiarBuffer	;wreg free
  3608  001ECA                     
  3609                           ;main.c: 849:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", Humedad);
  3610  001ECA  0E00               	movlw	low _buffer
  3611  001ECC  0100               	movlb	0	; () banked
  3612  001ECE  6FB3               	movwf	sprintf@s& (0+255),b
  3613  001ED0  0E01               	movlw	high _buffer
  3614  001ED2  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  3615  001ED4  0E3B               	movlw	low STR_25
  3616  001ED6  6FB5               	movwf	sprintf@fmt& (0+255),b
  3617  001ED8  0E7E               	movlw	high STR_25
  3618  001EDA  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  3619  001EDC  C07E  F0B7         	movff	_Humedad,?_sprintf+4
  3620  001EE0  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  3621  001EE2  EC05  F016         	call	_sprintf	;wreg free
  3622  001EE6                     
  3623                           ;main.c: 850:     UART_printf(buffer);
  3624  001EE6  0E00               	movlw	low _buffer
  3625  001EE8  6E02               	movwf	UART_printf@cadena^0,c
  3626  001EEA  0E01               	movlw	high _buffer
  3627  001EEC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3628  001EEE  EC24  F015         	call	_UART_printf	;wreg free
  3629  001EF2                     
  3630                           ;main.c: 851:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", Temperatura);
  3631  001EF2  0E00               	movlw	low _buffer
  3632  001EF4  0100               	movlb	0	; () banked
  3633  001EF6  6FB3               	movwf	sprintf@s& (0+255),b
  3634  001EF8  0E01               	movlw	high _buffer
  3635  001EFA  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  3636  001EFC  0E5B               	movlw	low STR_26
  3637  001EFE  6FB5               	movwf	sprintf@fmt& (0+255),b
  3638  001F00  0E7E               	movlw	high STR_26
  3639  001F02  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  3640  001F04  C07F  F0B7         	movff	_Temperatura,?_sprintf+4
  3641  001F08  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  3642  001F0A  EC05  F016         	call	_sprintf	;wreg free
  3643  001F0E                     
  3644                           ;main.c: 852:     UART_printf(buffer);
  3645  001F0E  0E00               	movlw	low _buffer
  3646  001F10  6E02               	movwf	UART_printf@cadena^0,c
  3647  001F12  0E01               	movlw	high _buffer
  3648  001F14  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3649  001F16  EC24  F015         	call	_UART_printf	;wreg free
  3650  001F1A                     
  3651                           ;main.c: 854:     lecturaWifi();
  3652  001F1A  ECCE  F011         	call	_lecturaWifi	;wreg free
  3653  001F1E                     
  3654                           ;main.c: 855:     if (peticionLecturaSensores) {
  3655  001F1E  0100               	movlb	0	; () banked
  3656  001F20  517A               	movf	_peticionLecturaSensores& (0+255),w,b
  3657  001F22  B4D8               	btfsc	status,2,c
  3658  001F24  EF96  F00F         	goto	u3601
  3659  001F28  EF98  F00F         	goto	u3600
  3660  001F2C                     u3601:
  3661  001F2C  EFD2  F00F         	goto	l4544
  3662  001F30                     u3600:
  3663  001F30                     
  3664                           ; BSR set to: 0
  3665                           ;main.c: 857:         for (int i = 0; i < 1; i++) {
  3666  001F30  0E00               	movlw	0
  3667  001F32  6FCA               	movwf	(mostrarDatosSensoresWIFI@i+1)& (0+255),b
  3668  001F34  0E00               	movlw	0
  3669  001F36  6FC9               	movwf	mostrarDatosSensoresWIFI@i& (0+255),b
  3670  001F38                     l4536:
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;main.c: 859:             sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d %c
      +                          \r\n"
  3674  001F38  0E00               	movlw	low _buffer
  3675  001F3A  6FB3               	movwf	sprintf@s& (0+255),b
  3676  001F3C  0E01               	movlw	high _buffer
  3677  001F3E  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  3678  001F40  0E14               	movlw	low STR_27
  3679  001F42  6FB5               	movwf	sprintf@fmt& (0+255),b
  3680  001F44  0E7D               	movlw	high STR_27
  3681  001F46  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  3682  001F48  C0C9  F0B7         	movff	mostrarDatosSensoresWIFI@i,?_sprintf+4
  3683  001F4C  C0CA  F0B8         	movff	mostrarDatosSensoresWIFI@i+1,?_sprintf+5
  3684  001F50  90D8               	bcf	status,0,c
  3685  001F52  35C9               	rlcf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  3686  001F54  6ED9               	movwf	fsr2l,c
  3687  001F56  35CA               	rlcf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  3688  001F58  6EDA               	movwf	fsr2h,c
  3689  001F5A  0E60               	movlw	low _sensores
  3690  001F5C  26D9               	addwf	fsr2l,f,c
  3691  001F5E  0E00               	movlw	high _sensores
  3692  001F60  22DA               	addwfc	fsr2h,f,c
  3693  001F62  50DF               	movf	indf2,w,c
  3694  001F64  6E5D               	movwf	??_mostrarDatosSensoresWIFI^0,c
  3695  001F66  505D               	movf	??_mostrarDatosSensoresWIFI^0,w,c
  3696  001F68  6FB9               	movwf	(?_sprintf+6)& (0+255),b
  3697  001F6A  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  3698  001F6C  0E00               	movlw	0
  3699  001F6E  6FBC               	movwf	(?_sprintf+9)& (0+255),b
  3700  001F70  0E25               	movlw	37
  3701  001F72  6FBB               	movwf	(?_sprintf+8)& (0+255),b
  3702  001F74  EC05  F016         	call	_sprintf	;wreg free
  3703  001F78                     
  3704                           ;main.c: 861:             UART_printf(buffer);
  3705  001F78  0E00               	movlw	low _buffer
  3706  001F7A  6E02               	movwf	UART_printf@cadena^0,c
  3707  001F7C  0E01               	movlw	high _buffer
  3708  001F7E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3709  001F80  EC24  F015         	call	_UART_printf	;wreg free
  3710  001F84                     
  3711                           ;main.c: 863:         }
  3712  001F84  0100               	movlb	0	; () banked
  3713  001F86  4BC9               	infsnz	mostrarDatosSensoresWIFI@i& (0+255),f,b
  3714  001F88  2BCA               	incf	(mostrarDatosSensoresWIFI@i+1)& (0+255),f,b
  3715  001F8A                     
  3716                           ; BSR set to: 0
  3717  001F8A  BFCA               	btfsc	(mostrarDatosSensoresWIFI@i+1)& (0+255),7,b
  3718  001F8C  EFD0  F00F         	goto	u3611
  3719  001F90  51CA               	movf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  3720  001F92  E108               	bnz	u3610
  3721  001F94  05C9               	decf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  3722  001F96  A0D8               	btfss	status,0,c
  3723  001F98  EFD0  F00F         	goto	u3611
  3724  001F9C  EFD2  F00F         	goto	u3610
  3725  001FA0                     u3611:
  3726  001FA0  EF9C  F00F         	goto	l4536
  3727  001FA4                     u3610:
  3728  001FA4                     l4544:
  3729                           
  3730                           ; BSR set to: 0
  3731                           ;main.c: 867:     UART_write('&');
  3732  001FA4  0E26               	movlw	38
  3733  001FA6  EC66  F018         	call	_UART_write
  3734  001FAA  0012               	return		;funcret
  3735  001FAC                     __end_of_mostrarDatosSensoresWIFI:
  3736                           	opt callstack 0
  3737                           
  3738 ;; *************** function _lecturaWifi *****************
  3739 ;; Defined at:
  3740 ;;		line 531 in file "main.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;		None
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;  i               2   14[COMRAM] int 
  3745 ;;  humedadMedid    1   13[COMRAM] unsigned char 
  3746 ;;  Rx              1   12[COMRAM] unsigned char 
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  1    wreg      void 
  3749 ;; Registers used:
  3750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3756 ;;      Params:         0       0       0       0       0       0       0       0       0
  3757 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3758 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3759 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3760 ;;Total ram usage:        4 bytes
  3761 ;; Hardware stack levels used:    1
  3762 ;; Hardware stack levels required when called:    3
  3763 ;; This function calls:
  3764 ;;		_UART_read
  3765 ;;		_UART_write
  3766 ;;		_getValue
  3767 ;;		_limpiarBuffer
  3768 ;;		_restablecerDatosSensor
  3769 ;; This function is called by:
  3770 ;;		_sistemaRegado
  3771 ;;		_mostrarDatosSensoresWIFI
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           	psect	text13
  3776  00239C                     __ptext13:
  3777                           	opt callstack 0
  3778  00239C                     _lecturaWifi:
  3779                           	opt callstack 26
  3780  00239C                     
  3781                           ;main.c: 533:     PIE1bits.RCIE = 0;
  3782  00239C  9A9D               	bcf	157,5,c	;volatile
  3783  00239E                     
  3784                           ;main.c: 537:     restablecerDatosSensor();
  3785  00239E  EC57  F016         	call	_restablecerDatosSensor	;wreg free
  3786  0023A2                     
  3787                           ;main.c: 539:     UART_write('R');
  3788  0023A2  0E52               	movlw	82
  3789  0023A4  EC66  F018         	call	_UART_write
  3790  0023A8                     
  3791                           ;main.c: 543:     Rx = UART_read();
  3792  0023A8  ECDB  F015         	call	_UART_read	;wreg free
  3793  0023AC  6E0D               	movwf	lecturaWifi@Rx^0,c
  3794  0023AE                     
  3795                           ;main.c: 545:     if (Rx == 'O') {
  3796  0023AE  0E4F               	movlw	79
  3797  0023B0  180D               	xorwf	lecturaWifi@Rx^0,w,c
  3798  0023B2  A4D8               	btfss	status,2,c
  3799  0023B4  EFDE  F011         	goto	u3281
  3800  0023B8  EFE0  F011         	goto	u3280
  3801  0023BC                     u3281:
  3802  0023BC  EF23  F012         	goto	l4222
  3803  0023C0                     u3280:
  3804  0023C0                     
  3805                           ;main.c: 547:         peticionLecturaSensores = 1;
  3806  0023C0  0E01               	movlw	1
  3807  0023C2  0100               	movlb	0	; () banked
  3808  0023C4  6F7A               	movwf	_peticionLecturaSensores& (0+255),b
  3809                           
  3810                           ;main.c: 549:         for (int i = 0; i < 1; i++) {
  3811  0023C6  0E00               	movlw	0
  3812  0023C8  6E10               	movwf	(lecturaWifi@i+1)^0,c
  3813  0023CA  0E00               	movlw	0
  3814  0023CC  6E0F               	movwf	lecturaWifi@i^0,c
  3815  0023CE                     l4208:
  3816                           
  3817                           ;main.c: 554:             humedadMedida = getValue(3);
  3818  0023CE  0E00               	movlw	0
  3819  0023D0  6E03               	movwf	(getValue@numCharacters+1)^0,c
  3820  0023D2  0E03               	movlw	3
  3821  0023D4  6E02               	movwf	getValue@numCharacters^0,c
  3822  0023D6  ECE5  F006         	call	_getValue	;wreg free
  3823  0023DA  6E0E               	movwf	lecturaWifi@humedadMedida^0,c
  3824  0023DC                     
  3825                           ;main.c: 556:             if (humedadMedida != '@')
  3826  0023DC  0E40               	movlw	64
  3827  0023DE  180E               	xorwf	lecturaWifi@humedadMedida^0,w,c
  3828  0023E0  B4D8               	btfsc	status,2,c
  3829  0023E2  EFF5  F011         	goto	u3291
  3830  0023E6  EFF7  F011         	goto	u3290
  3831  0023EA                     u3291:
  3832  0023EA  EF04  F012         	goto	l4214
  3833  0023EE                     u3290:
  3834  0023EE                     
  3835                           ;main.c: 557:                 sensores[i].porcientoHumedad = humedadMedida;
  3836  0023EE  90D8               	bcf	status,0,c
  3837  0023F0  340F               	rlcf	lecturaWifi@i^0,w,c
  3838  0023F2  6ED9               	movwf	fsr2l,c
  3839  0023F4  3410               	rlcf	(lecturaWifi@i+1)^0,w,c
  3840  0023F6  6EDA               	movwf	fsr2h,c
  3841  0023F8  0E60               	movlw	low _sensores
  3842  0023FA  26D9               	addwf	fsr2l,f,c
  3843  0023FC  0E00               	movlw	high _sensores
  3844  0023FE  22DA               	addwfc	fsr2h,f,c
  3845  002400  C00E  FFDF         	movff	lecturaWifi@humedadMedida,indf2
  3846  002404  EF0F  F012         	goto	l4216
  3847  002408                     l4214:
  3848                           
  3849                           ;main.c: 559:                 sensores[i].porcientoHumedad = 100;
  3850  002408  90D8               	bcf	status,0,c
  3851  00240A  340F               	rlcf	lecturaWifi@i^0,w,c
  3852  00240C  6ED9               	movwf	fsr2l,c
  3853  00240E  3410               	rlcf	(lecturaWifi@i+1)^0,w,c
  3854  002410  6EDA               	movwf	fsr2h,c
  3855  002412  0E60               	movlw	low _sensores
  3856  002414  26D9               	addwf	fsr2l,f,c
  3857  002416  0E00               	movlw	high _sensores
  3858  002418  22DA               	addwfc	fsr2h,f,c
  3859  00241A  0E64               	movlw	100
  3860  00241C  6EDF               	movwf	indf2,c
  3861  00241E                     l4216:
  3862                           
  3863                           ;main.c: 561:         }
  3864  00241E  4A0F               	infsnz	lecturaWifi@i^0,f,c
  3865  002420  2A10               	incf	(lecturaWifi@i+1)^0,f,c
  3866  002422  BE10               	btfsc	(lecturaWifi@i+1)^0,7,c
  3867  002424  EF1C  F012         	goto	u3301
  3868  002428  5010               	movf	(lecturaWifi@i+1)^0,w,c
  3869  00242A  E108               	bnz	u3300
  3870  00242C  040F               	decf	lecturaWifi@i^0,w,c
  3871  00242E  A0D8               	btfss	status,0,c
  3872  002430  EF1C  F012         	goto	u3301
  3873  002434  EF1E  F012         	goto	u3300
  3874  002438                     u3301:
  3875  002438  EFE7  F011         	goto	l4208
  3876  00243C                     u3300:
  3877  00243C                     
  3878                           ;main.c: 564:         UART_write('E');
  3879  00243C  0E45               	movlw	69
  3880  00243E  EC66  F018         	call	_UART_write
  3881                           
  3882                           ;main.c: 566:     } else {
  3883  002442  EF26  F012         	goto	l4224
  3884  002446                     l4222:
  3885                           
  3886                           ;main.c: 567:         peticionLecturaSensores = 0;
  3887  002446  0E00               	movlw	0
  3888  002448  0100               	movlb	0	; () banked
  3889  00244A  6F7A               	movwf	_peticionLecturaSensores& (0+255),b
  3890  00244C                     l4224:
  3891                           
  3892                           ;main.c: 570:     limpiarBuffer();
  3893  00244C  EC03  F017         	call	_limpiarBuffer	;wreg free
  3894  002450                     
  3895                           ;main.c: 572:     PIE1bits.RCIE = 1;
  3896  002450  8A9D               	bsf	157,5,c	;volatile
  3897  002452  0012               	return		;funcret
  3898  002454                     __end_of_lecturaWifi:
  3899                           	opt callstack 0
  3900                           
  3901 ;; *************** function _restablecerDatosSensor *****************
  3902 ;; Defined at:
  3903 ;;		line 526 in file "main.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;		None
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  i               2    4[COMRAM] int 
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  1    wreg      void 
  3910 ;; Registers used:
  3911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3917 ;;      Params:         0       0       0       0       0       0       0       0       0
  3918 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3919 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3920 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3921 ;;Total ram usage:        2 bytes
  3922 ;; Hardware stack levels used:    1
  3923 ;; Hardware stack levels required when called:    2
  3924 ;; This function calls:
  3925 ;;		_constructorSensor
  3926 ;; This function is called by:
  3927 ;;		_lecturaWifi
  3928 ;;		_main
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932                           	psect	text14
  3933  002CAE                     __ptext14:
  3934                           	opt callstack 0
  3935  002CAE                     _restablecerDatosSensor:
  3936                           	opt callstack 26
  3937  002CAE                     
  3938                           ;main.c: 527:     for (int i = 0; i < 1; i++)
  3939  002CAE  0E00               	movlw	0
  3940  002CB0  6E06               	movwf	(restablecerDatosSensor@i+1)^0,c
  3941  002CB2  0E00               	movlw	0
  3942  002CB4  6E05               	movwf	restablecerDatosSensor@i^0,c
  3943  002CB6                     l3984:
  3944                           
  3945                           ;main.c: 528:         constructorSensor(sensores[i], 0, i);
  3946  002CB6  90D8               	bcf	status,0,c
  3947  002CB8  3405               	rlcf	restablecerDatosSensor@i^0,w,c
  3948  002CBA  6ED9               	movwf	fsr2l,c
  3949  002CBC  3406               	rlcf	(restablecerDatosSensor@i+1)^0,w,c
  3950  002CBE  6EDA               	movwf	fsr2h,c
  3951  002CC0  0E60               	movlw	low _sensores
  3952  002CC2  26D9               	addwf	fsr2l,f,c
  3953  002CC4  0E00               	movlw	high _sensores
  3954  002CC6  22DA               	addwfc	fsr2h,f,c
  3955  002CC8  CFDE F001          	movff	postinc2,constructorSensor@s
  3956  002CCC  CFDD F002          	movff	postdec2,constructorSensor@s+1
  3957  002CD0  0E00               	movlw	0
  3958  002CD2  6E03               	movwf	constructorSensor@porcientoHumedad^0,c
  3959  002CD4  C005  F004         	movff	restablecerDatosSensor@i,constructorSensor@pin
  3960  002CD8  EC90  F018         	call	_constructorSensor	;wreg free
  3961  002CDC  4A05               	infsnz	restablecerDatosSensor@i^0,f,c
  3962  002CDE  2A06               	incf	(restablecerDatosSensor@i+1)^0,f,c
  3963  002CE0  BE06               	btfsc	(restablecerDatosSensor@i+1)^0,7,c
  3964  002CE2  EF7B  F016         	goto	u3051
  3965  002CE6  5006               	movf	(restablecerDatosSensor@i+1)^0,w,c
  3966  002CE8  E108               	bnz	u3050
  3967  002CEA  0405               	decf	restablecerDatosSensor@i^0,w,c
  3968  002CEC  A0D8               	btfss	status,0,c
  3969  002CEE  EF7B  F016         	goto	u3051
  3970  002CF2  EF7D  F016         	goto	u3050
  3971  002CF6                     u3051:
  3972  002CF6  EF5B  F016         	goto	l3984
  3973  002CFA                     u3050:
  3974  002CFA  0012               	return		;funcret
  3975  002CFC                     __end_of_restablecerDatosSensor:
  3976                           	opt callstack 0
  3977                           
  3978 ;; *************** function _constructorSensor *****************
  3979 ;; Defined at:
  3980 ;;		line 140 in file "main.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;  s               2    0[COMRAM] struct .
  3983 ;;  porcientoHum    1    2[COMRAM] unsigned char 
  3984 ;;  pin             1    3[COMRAM] unsigned char 
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;		None
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  1    wreg      void 
  3989 ;; Registers used:
  3990 ;;		None
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3996 ;;      Params:         4       0       0       0       0       0       0       0       0
  3997 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3998 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3999 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4000 ;;Total ram usage:        4 bytes
  4001 ;; Hardware stack levels used:    1
  4002 ;; Hardware stack levels required when called:    1
  4003 ;; This function calls:
  4004 ;;		Nothing
  4005 ;; This function is called by:
  4006 ;;		_restablecerDatosSensor
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           	psect	text15
  4011  003120                     __ptext15:
  4012                           	opt callstack 0
  4013  003120                     _constructorSensor:
  4014                           	opt callstack 26
  4015  003120                     
  4016                           ;main.c: 141:     s.porcientoHumedad = porcientoHumedad;
  4017  003120  C003  F001         	movff	constructorSensor@porcientoHumedad,constructorSensor@s
  4018                           
  4019                           ;main.c: 142:     s.pinSensor = pin;
  4020  003124  C004  F002         	movff	constructorSensor@pin,constructorSensor@s+1
  4021  003128  0012               	return		;funcret
  4022  00312A                     __end_of_constructorSensor:
  4023                           	opt callstack 0
  4024                           
  4025 ;; *************** function _mostrarDatosSensores *****************
  4026 ;; Defined at:
  4027 ;;		line 812 in file "main.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;		None
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;  i               2   28[BANK0 ] int 
  4032 ;; Return value:  Size  Location     Type
  4033 ;;                  1    wreg      void 
  4034 ;; Registers used:
  4035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/0
  4038 ;;		On exit  : 0/0
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4041 ;;      Params:         0       0       0       0       0       0       0       0       0
  4042 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4043 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4044 ;;      Totals:         1       2       0       0       0       0       0       0       0
  4045 ;;Total ram usage:        3 bytes
  4046 ;; Hardware stack levels used:    1
  4047 ;; Hardware stack levels required when called:    9
  4048 ;; This function calls:
  4049 ;;		_UART_printf
  4050 ;;		_UART_write
  4051 ;;		_dameTemperaturaHumedad
  4052 ;;		_lecturaAnalogaSensores
  4053 ;;		_limpiarBuffer
  4054 ;;		_sprintf
  4055 ;; This function is called by:
  4056 ;;		_sistemaPrincipal
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           	psect	text16
  4061  001FAC                     __ptext16:
  4062                           	opt callstack 0
  4063  001FAC                     _mostrarDatosSensores:
  4064                           	opt callstack 20
  4065  001FAC                     
  4066                           ;main.c: 814:     dameTemperaturaHumedad();
  4067  001FAC  EC1F  F013         	call	_dameTemperaturaHumedad	;wreg free
  4068  001FB0                     
  4069                           ;main.c: 819:     limpiarBuffer();
  4070  001FB0  EC03  F017         	call	_limpiarBuffer	;wreg free
  4071  001FB4                     
  4072                           ;main.c: 821:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", Humedad);
  4073  001FB4  0E00               	movlw	low _buffer
  4074  001FB6  0100               	movlb	0	; () banked
  4075  001FB8  6FB3               	movwf	sprintf@s& (0+255),b
  4076  001FBA  0E01               	movlw	high _buffer
  4077  001FBC  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  4078  001FBE  0E3B               	movlw	low STR_25
  4079  001FC0  6FB5               	movwf	sprintf@fmt& (0+255),b
  4080  001FC2  0E7E               	movlw	high STR_25
  4081  001FC4  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  4082  001FC6  C07E  F0B7         	movff	_Humedad,?_sprintf+4
  4083  001FCA  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  4084  001FCC  EC05  F016         	call	_sprintf	;wreg free
  4085  001FD0                     
  4086                           ;main.c: 822:     UART_printf(buffer);
  4087  001FD0  0E00               	movlw	low _buffer
  4088  001FD2  6E02               	movwf	UART_printf@cadena^0,c
  4089  001FD4  0E01               	movlw	high _buffer
  4090  001FD6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4091  001FD8  EC24  F015         	call	_UART_printf	;wreg free
  4092  001FDC                     
  4093                           ;main.c: 823:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", Temperatura);
  4094  001FDC  0E00               	movlw	low _buffer
  4095  001FDE  0100               	movlb	0	; () banked
  4096  001FE0  6FB3               	movwf	sprintf@s& (0+255),b
  4097  001FE2  0E01               	movlw	high _buffer
  4098  001FE4  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  4099  001FE6  0E5B               	movlw	low STR_26
  4100  001FE8  6FB5               	movwf	sprintf@fmt& (0+255),b
  4101  001FEA  0E7E               	movlw	high STR_26
  4102  001FEC  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  4103  001FEE  C07F  F0B7         	movff	_Temperatura,?_sprintf+4
  4104  001FF2  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  4105  001FF4  EC05  F016         	call	_sprintf	;wreg free
  4106  001FF8                     
  4107                           ;main.c: 824:     UART_printf(buffer);
  4108  001FF8  0E00               	movlw	low _buffer
  4109  001FFA  6E02               	movwf	UART_printf@cadena^0,c
  4110  001FFC  0E01               	movlw	high _buffer
  4111  001FFE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4112  002000  EC24  F015         	call	_UART_printf	;wreg free
  4113  002004                     
  4114                           ;main.c: 826:     lecturaAnalogaSensores();
  4115  002004  EC82  F012         	call	_lecturaAnalogaSensores	;wreg free
  4116  002008                     
  4117                           ;main.c: 829:     for (int i = 0; i < 1; i++) {
  4118  002008  0E00               	movlw	0
  4119  00200A  0100               	movlb	0	; () banked
  4120  00200C  6FCA               	movwf	(mostrarDatosSensores@i+1)& (0+255),b
  4121  00200E  0E00               	movlw	0
  4122  002010  6FC9               	movwf	mostrarDatosSensores@i& (0+255),b
  4123  002012                     l4566:
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;main.c: 831:         sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d %c\r\n
      +                          "
  4127  002012  0E00               	movlw	low _buffer
  4128  002014  6FB3               	movwf	sprintf@s& (0+255),b
  4129  002016  0E01               	movlw	high _buffer
  4130  002018  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  4131  00201A  0E14               	movlw	low STR_27
  4132  00201C  6FB5               	movwf	sprintf@fmt& (0+255),b
  4133  00201E  0E7D               	movlw	high STR_27
  4134  002020  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  4135  002022  C0C9  F0B7         	movff	mostrarDatosSensores@i,?_sprintf+4
  4136  002026  C0CA  F0B8         	movff	mostrarDatosSensores@i+1,?_sprintf+5
  4137  00202A  90D8               	bcf	status,0,c
  4138  00202C  35C9               	rlcf	mostrarDatosSensores@i& (0+255),w,b
  4139  00202E  6ED9               	movwf	fsr2l,c
  4140  002030  35CA               	rlcf	(mostrarDatosSensores@i+1)& (0+255),w,b
  4141  002032  6EDA               	movwf	fsr2h,c
  4142  002034  0E60               	movlw	low _sensores
  4143  002036  26D9               	addwf	fsr2l,f,c
  4144  002038  0E00               	movlw	high _sensores
  4145  00203A  22DA               	addwfc	fsr2h,f,c
  4146  00203C  50DF               	movf	indf2,w,c
  4147  00203E  6E5D               	movwf	??_mostrarDatosSensores^0,c
  4148  002040  505D               	movf	??_mostrarDatosSensores^0,w,c
  4149  002042  6FB9               	movwf	(?_sprintf+6)& (0+255),b
  4150  002044  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  4151  002046  0E00               	movlw	0
  4152  002048  6FBC               	movwf	(?_sprintf+9)& (0+255),b
  4153  00204A  0E25               	movlw	37
  4154  00204C  6FBB               	movwf	(?_sprintf+8)& (0+255),b
  4155  00204E  EC05  F016         	call	_sprintf	;wreg free
  4156  002052                     
  4157                           ;main.c: 833:         UART_printf(buffer);
  4158  002052  0E00               	movlw	low _buffer
  4159  002054  6E02               	movwf	UART_printf@cadena^0,c
  4160  002056  0E01               	movlw	high _buffer
  4161  002058  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4162  00205A  EC24  F015         	call	_UART_printf	;wreg free
  4163  00205E                     
  4164                           ;main.c: 834:     }
  4165  00205E  0100               	movlb	0	; () banked
  4166  002060  4BC9               	infsnz	mostrarDatosSensores@i& (0+255),f,b
  4167  002062  2BCA               	incf	(mostrarDatosSensores@i+1)& (0+255),f,b
  4168  002064                     
  4169                           ; BSR set to: 0
  4170  002064  BFCA               	btfsc	(mostrarDatosSensores@i+1)& (0+255),7,b
  4171  002066  EF3D  F010         	goto	u3621
  4172  00206A  51CA               	movf	(mostrarDatosSensores@i+1)& (0+255),w,b
  4173  00206C  E108               	bnz	u3620
  4174  00206E  05C9               	decf	mostrarDatosSensores@i& (0+255),w,b
  4175  002070  A0D8               	btfss	status,0,c
  4176  002072  EF3D  F010         	goto	u3621
  4177  002076  EF3F  F010         	goto	u3620
  4178  00207A                     u3621:
  4179  00207A  EF09  F010         	goto	l4566
  4180  00207E                     u3620:
  4181  00207E                     
  4182                           ; BSR set to: 0
  4183                           ;main.c: 836:     UART_write('&');
  4184  00207E  0E26               	movlw	38
  4185  002080  EC66  F018         	call	_UART_write
  4186  002084  0012               	return		;funcret
  4187  002086                     __end_of_mostrarDatosSensores:
  4188                           	opt callstack 0
  4189                           
  4190 ;; *************** function _lecturaAnalogaSensores *****************
  4191 ;; Defined at:
  4192 ;;		line 576 in file "main.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;		None
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;  i               2   47[COMRAM] int 
  4197 ;; Return value:  Size  Location     Type
  4198 ;;                  1    wreg      void 
  4199 ;; Registers used:
  4200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4206 ;;      Params:         0       0       0       0       0       0       0       0       0
  4207 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4208 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4209 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4210 ;;Total ram usage:        3 bytes
  4211 ;; Hardware stack levels used:    1
  4212 ;; Hardware stack levels required when called:    3
  4213 ;; This function calls:
  4214 ;;		_dameHumedadSuelo
  4215 ;;		_map
  4216 ;; This function is called by:
  4217 ;;		_sistemaRegado
  4218 ;;		_mostrarDatosSensores
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           	psect	text17
  4223  002504                     __ptext17:
  4224                           	opt callstack 0
  4225  002504                     _lecturaAnalogaSensores:
  4226                           	opt callstack 26
  4227  002504                     
  4228                           ;main.c: 578:     for (int i = 0; i < 1; i++) {
  4229  002504  0E00               	movlw	0
  4230  002506  6E31               	movwf	(lecturaAnalogaSensores@i+1)^0,c
  4231  002508  0E00               	movlw	0
  4232  00250A  6E30               	movwf	lecturaAnalogaSensores@i^0,c
  4233  00250C                     l4234:
  4234                           
  4235                           ;main.c: 579:         sensores[i].porcientoHumedad = map(dameHumedadSuelo(i), 0, 1023, 1
      +                          00, 0);
  4236  00250C  90D8               	bcf	status,0,c
  4237  00250E  3430               	rlcf	lecturaAnalogaSensores@i^0,w,c
  4238  002510  6ED9               	movwf	fsr2l,c
  4239  002512  3431               	rlcf	(lecturaAnalogaSensores@i+1)^0,w,c
  4240  002514  6EDA               	movwf	fsr2h,c
  4241  002516  0E60               	movlw	low _sensores
  4242  002518  26D9               	addwf	fsr2l,f,c
  4243  00251A  0E00               	movlw	high _sensores
  4244  00251C  22DA               	addwfc	fsr2h,f,c
  4245  00251E  5030               	movf	lecturaAnalogaSensores@i^0,w,c
  4246  002520  EC7E  F016         	call	_dameHumedadSuelo
  4247  002524  C001  F01B         	movff	?_dameHumedadSuelo,map@x
  4248  002528  C002  F01C         	movff	?_dameHumedadSuelo+1,map@x+1
  4249  00252C  0E00               	movlw	0
  4250  00252E  BE1C               	btfsc	(map@x+1)^0,7,c
  4251  002530  0EFF               	movlw	-1
  4252  002532  6E1D               	movwf	(map@x+2)^0,c
  4253  002534  6E1E               	movwf	(map@x+3)^0,c
  4254  002536  0E00               	movlw	0
  4255  002538  6E1F               	movwf	map@in_min^0,c
  4256  00253A  0E00               	movlw	0
  4257  00253C  6E20               	movwf	(map@in_min+1)^0,c
  4258  00253E  0E00               	movlw	0
  4259  002540  6E21               	movwf	(map@in_min+2)^0,c
  4260  002542  0E00               	movlw	0
  4261  002544  6E22               	movwf	(map@in_min+3)^0,c
  4262  002546  0EFF               	movlw	255
  4263  002548  6E23               	movwf	map@in_max^0,c
  4264  00254A  0E03               	movlw	3
  4265  00254C  6E24               	movwf	(map@in_max+1)^0,c
  4266  00254E  0E00               	movlw	0
  4267  002550  6E25               	movwf	(map@in_max+2)^0,c
  4268  002552  0E00               	movlw	0
  4269  002554  6E26               	movwf	(map@in_max+3)^0,c
  4270  002556  0E64               	movlw	100
  4271  002558  6E27               	movwf	map@out_min^0,c
  4272  00255A  0E00               	movlw	0
  4273  00255C  6E28               	movwf	(map@out_min+1)^0,c
  4274  00255E  0E00               	movlw	0
  4275  002560  6E29               	movwf	(map@out_min+2)^0,c
  4276  002562  0E00               	movlw	0
  4277  002564  6E2A               	movwf	(map@out_min+3)^0,c
  4278  002566  0E00               	movlw	0
  4279  002568  6E2B               	movwf	map@out_max^0,c
  4280  00256A  0E00               	movlw	0
  4281  00256C  6E2C               	movwf	(map@out_max+1)^0,c
  4282  00256E  0E00               	movlw	0
  4283  002570  6E2D               	movwf	(map@out_max+2)^0,c
  4284  002572  0E00               	movlw	0
  4285  002574  6E2E               	movwf	(map@out_max+3)^0,c
  4286  002576  ECA5  F013         	call	_map	;wreg free
  4287  00257A  501B               	movf	?_map^0,w,c
  4288  00257C  6EDF               	movwf	indf2,c
  4289  00257E                     
  4290                           ;main.c: 580:         _delay((unsigned long)((5)*(4000000/4000.0)));
  4291  00257E  0E07               	movlw	7
  4292  002580  6E2F               	movwf	??_lecturaAnalogaSensores^0,c
  4293  002582  0E7D               	movlw	125
  4294  002584                     u3877:
  4295  002584  2EE8               	decfsz	wreg,f,c
  4296  002586  D7FE               	bra	u3877
  4297  002588  2E2F               	decfsz	??_lecturaAnalogaSensores^0,f,c
  4298  00258A  D7FC               	bra	u3877
  4299  00258C  F000               	nop	
  4300  00258E                     
  4301                           ;main.c: 581:     }
  4302  00258E  4A30               	infsnz	lecturaAnalogaSensores@i^0,f,c
  4303  002590  2A31               	incf	(lecturaAnalogaSensores@i+1)^0,f,c
  4304  002592  BE31               	btfsc	(lecturaAnalogaSensores@i+1)^0,7,c
  4305  002594  EFD4  F012         	goto	u3311
  4306  002598  5031               	movf	(lecturaAnalogaSensores@i+1)^0,w,c
  4307  00259A  E108               	bnz	u3310
  4308  00259C  0430               	decf	lecturaAnalogaSensores@i^0,w,c
  4309  00259E  A0D8               	btfss	status,0,c
  4310  0025A0  EFD4  F012         	goto	u3311
  4311  0025A4  EFD6  F012         	goto	u3310
  4312  0025A8                     u3311:
  4313  0025A8  EF86  F012         	goto	l4234
  4314  0025AC                     u3310:
  4315  0025AC  0012               	return		;funcret
  4316  0025AE                     __end_of_lecturaAnalogaSensores:
  4317                           	opt callstack 0
  4318                           
  4319 ;; *************** function _map *****************
  4320 ;; Defined at:
  4321 ;;		line 136 in file "main.c"
  4322 ;; Parameters:    Size  Location     Type
  4323 ;;  x               4   26[COMRAM] long 
  4324 ;;  in_min          4   30[COMRAM] long 
  4325 ;;  in_max          4   34[COMRAM] long 
  4326 ;;  out_min         4   38[COMRAM] long 
  4327 ;;  out_max         4   42[COMRAM] long 
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;		None
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  4   26[COMRAM] long 
  4332 ;; Registers used:
  4333 ;;		wreg, status,2, status,0, cstack
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4339 ;;      Params:        20       0       0       0       0       0       0       0       0
  4340 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4341 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4342 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4343 ;;Total ram usage:       20 bytes
  4344 ;; Hardware stack levels used:    1
  4345 ;; Hardware stack levels required when called:    2
  4346 ;; This function calls:
  4347 ;;		___aldiv
  4348 ;;		___lmul
  4349 ;; This function is called by:
  4350 ;;		_lecturaAnalogaSensores
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           	psect	text18
  4355  00274A                     __ptext18:
  4356                           	opt callstack 0
  4357  00274A                     _map:
  4358                           	opt callstack 26
  4359  00274A                     
  4360                           ;main.c: 137:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  4361  00274A  501F               	movf	map@in_min^0,w,c
  4362  00274C  5C1B               	subwf	map@x^0,w,c
  4363  00274E  6E01               	movwf	___lmul@multiplier^0,c
  4364  002750  5020               	movf	(map@in_min+1)^0,w,c
  4365  002752  581C               	subwfb	(map@x+1)^0,w,c
  4366  002754  6E02               	movwf	(___lmul@multiplier+1)^0,c
  4367  002756  5021               	movf	(map@in_min+2)^0,w,c
  4368  002758  581D               	subwfb	(map@x+2)^0,w,c
  4369  00275A  6E03               	movwf	(___lmul@multiplier+2)^0,c
  4370  00275C  5022               	movf	(map@in_min+3)^0,w,c
  4371  00275E  581E               	subwfb	(map@x+3)^0,w,c
  4372  002760  6E04               	movwf	(___lmul@multiplier+3)^0,c
  4373  002762  5027               	movf	map@out_min^0,w,c
  4374  002764  5C2B               	subwf	map@out_max^0,w,c
  4375  002766  6E05               	movwf	___lmul@multiplicand^0,c
  4376  002768  5028               	movf	(map@out_min+1)^0,w,c
  4377  00276A  582C               	subwfb	(map@out_max+1)^0,w,c
  4378  00276C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4379  00276E  5029               	movf	(map@out_min+2)^0,w,c
  4380  002770  582D               	subwfb	(map@out_max+2)^0,w,c
  4381  002772  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4382  002774  502A               	movf	(map@out_min+3)^0,w,c
  4383  002776  582E               	subwfb	(map@out_max+3)^0,w,c
  4384  002778  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4385  00277A  EC8D  F014         	call	___lmul	;wreg free
  4386  00277E  C001  F00D         	movff	?___lmul,___aldiv@dividend
  4387  002782  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  4388  002786  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  4389  00278A  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  4390  00278E  501F               	movf	map@in_min^0,w,c
  4391  002790  5C23               	subwf	map@in_max^0,w,c
  4392  002792  6E11               	movwf	___aldiv@divisor^0,c
  4393  002794  5020               	movf	(map@in_min+1)^0,w,c
  4394  002796  5824               	subwfb	(map@in_max+1)^0,w,c
  4395  002798  6E12               	movwf	(___aldiv@divisor+1)^0,c
  4396  00279A  5021               	movf	(map@in_min+2)^0,w,c
  4397  00279C  5825               	subwfb	(map@in_max+2)^0,w,c
  4398  00279E  6E13               	movwf	(___aldiv@divisor+2)^0,c
  4399  0027A0  5022               	movf	(map@in_min+3)^0,w,c
  4400  0027A2  5826               	subwfb	(map@in_max+3)^0,w,c
  4401  0027A4  6E14               	movwf	(___aldiv@divisor+3)^0,c
  4402  0027A6  ECDB  F00E         	call	___aldiv	;wreg free
  4403  0027AA  5027               	movf	map@out_min^0,w,c
  4404  0027AC  240D               	addwf	?___aldiv^0,w,c
  4405  0027AE  6E1B               	movwf	?_map^0,c
  4406  0027B0  5028               	movf	(map@out_min+1)^0,w,c
  4407  0027B2  200E               	addwfc	(?___aldiv+1)^0,w,c
  4408  0027B4  6E1C               	movwf	(?_map+1)^0,c
  4409  0027B6  5029               	movf	(map@out_min+2)^0,w,c
  4410  0027B8  200F               	addwfc	(?___aldiv+2)^0,w,c
  4411  0027BA  6E1D               	movwf	(?_map+2)^0,c
  4412  0027BC  502A               	movf	(map@out_min+3)^0,w,c
  4413  0027BE  2010               	addwfc	(?___aldiv+3)^0,w,c
  4414  0027C0  6E1E               	movwf	(?_map+3)^0,c
  4415  0027C2  0012               	return		;funcret
  4416  0027C4                     __end_of_map:
  4417                           	opt callstack 0
  4418                           
  4419 ;; *************** function ___lmul *****************
  4420 ;; Defined at:
  4421 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;  multiplier      4    0[COMRAM] unsigned long 
  4424 ;;  multiplicand    4    4[COMRAM] unsigned long 
  4425 ;; Auto vars:     Size  Location     Type
  4426 ;;  product         4    8[COMRAM] unsigned long 
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  4    0[COMRAM] unsigned long 
  4429 ;; Registers used:
  4430 ;;		wreg, status,2, status,0
  4431 ;; Tracked objects:
  4432 ;;		On entry : 0/0
  4433 ;;		On exit  : 0/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4436 ;;      Params:         8       0       0       0       0       0       0       0       0
  4437 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4438 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4439 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4440 ;;Total ram usage:       12 bytes
  4441 ;; Hardware stack levels used:    1
  4442 ;; Hardware stack levels required when called:    1
  4443 ;; This function calls:
  4444 ;;		Nothing
  4445 ;; This function is called by:
  4446 ;;		_map
  4447 ;; This function uses a non-reentrant model
  4448 ;;
  4449                           
  4450                           	psect	text19
  4451  00291A                     __ptext19:
  4452                           	opt callstack 0
  4453  00291A                     ___lmul:
  4454                           	opt callstack 26
  4455  00291A  0E00               	movlw	0
  4456  00291C  6E09               	movwf	___lmul@product^0,c
  4457  00291E  0E00               	movlw	0
  4458  002920  6E0A               	movwf	(___lmul@product+1)^0,c
  4459  002922  0E00               	movlw	0
  4460  002924  6E0B               	movwf	(___lmul@product+2)^0,c
  4461  002926  0E00               	movlw	0
  4462  002928  6E0C               	movwf	(___lmul@product+3)^0,c
  4463  00292A                     l3760:
  4464  00292A  A001               	btfss	___lmul@multiplier^0,0,c
  4465  00292C  EF9A  F014         	goto	u2841
  4466  002930  EF9C  F014         	goto	u2840
  4467  002934                     u2841:
  4468  002934  EFA4  F014         	goto	l3764
  4469  002938                     u2840:
  4470  002938  5005               	movf	___lmul@multiplicand^0,w,c
  4471  00293A  2609               	addwf	___lmul@product^0,f,c
  4472  00293C  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  4473  00293E  220A               	addwfc	(___lmul@product+1)^0,f,c
  4474  002940  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  4475  002942  220B               	addwfc	(___lmul@product+2)^0,f,c
  4476  002944  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  4477  002946  220C               	addwfc	(___lmul@product+3)^0,f,c
  4478  002948                     l3764:
  4479  002948  90D8               	bcf	status,0,c
  4480  00294A  3605               	rlcf	___lmul@multiplicand^0,f,c
  4481  00294C  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4482  00294E  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4483  002950  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4484  002952  90D8               	bcf	status,0,c
  4485  002954  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  4486  002956  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  4487  002958  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  4488  00295A  3201               	rrcf	___lmul@multiplier^0,f,c
  4489  00295C  5001               	movf	___lmul@multiplier^0,w,c
  4490  00295E  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  4491  002960  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  4492  002962  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  4493  002964  A4D8               	btfss	status,2,c
  4494  002966  EFB7  F014         	goto	u2851
  4495  00296A  EFB9  F014         	goto	u2850
  4496  00296E                     u2851:
  4497  00296E  EF95  F014         	goto	l3760
  4498  002972                     u2850:
  4499  002972  C009  F001         	movff	___lmul@product,?___lmul
  4500  002976  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  4501  00297A  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  4502  00297E  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  4503  002982  0012               	return		;funcret
  4504  002984                     __end_of___lmul:
  4505                           	opt callstack 0
  4506                           
  4507 ;; *************** function _dameHumedadSuelo *****************
  4508 ;; Defined at:
  4509 ;;		line 509 in file "main.c"
  4510 ;; Parameters:    Size  Location     Type
  4511 ;;  canalLeer       1    wreg     unsigned char 
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;  canalLeer       1    4[COMRAM] unsigned char 
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  2    0[COMRAM] short 
  4516 ;; Registers used:
  4517 ;;		wreg, status,2, status,0
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4523 ;;      Params:         2       0       0       0       0       0       0       0       0
  4524 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4525 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4526 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4527 ;;Total ram usage:        5 bytes
  4528 ;; Hardware stack levels used:    1
  4529 ;; Hardware stack levels required when called:    1
  4530 ;; This function calls:
  4531 ;;		Nothing
  4532 ;; This function is called by:
  4533 ;;		_lecturaAnalogaSensores
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           	psect	text20
  4538  002CFC                     __ptext20:
  4539                           	opt callstack 0
  4540  002CFC                     _dameHumedadSuelo:
  4541                           	opt callstack 27
  4542                           
  4543                           ;incstack = 0
  4544                           ;dameHumedadSuelo@canalLeer stored from wreg
  4545  002CFC  6E05               	movwf	dameHumedadSuelo@canalLeer^0,c
  4546  002CFE                     
  4547                           ;main.c: 511:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  4548  002CFE  0E06               	movlw	6
  4549  002D00                     u3887:
  4550  002D00  2EE8               	decfsz	wreg,f,c
  4551  002D02  D7FE               	bra	u3887
  4552  002D04  D000               	nop2	
  4553  002D06                     
  4554                           ;main.c: 513:     ADCON0bits.ADON = 1;
  4555  002D06  80C2               	bsf	194,0,c	;volatile
  4556  002D08                     
  4557                           ;main.c: 514:     ADCON0bits.CHS = canalLeer;
  4558  002D08  C005  F003         	movff	dameHumedadSuelo@canalLeer,??_dameHumedadSuelo
  4559  002D0C  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  4560  002D0E  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  4561  002D10  50C2               	movf	194,w,c	;volatile
  4562  002D12  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  4563  002D14  0BC3               	andlw	-61
  4564  002D16  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  4565  002D18  6EC2               	movwf	194,c	;volatile
  4566  002D1A                     
  4567                           ;main.c: 515:     ADCON0bits.GO = 1;
  4568  002D1A  82C2               	bsf	194,1,c	;volatile
  4569  002D1C                     
  4570                           ;main.c: 516:     ADCON0bits.GO_DONE = 1;
  4571  002D1C  82C2               	bsf	194,1,c	;volatile
  4572  002D1E                     l335:
  4573  002D1E  B2C2               	btfsc	194,1,c	;volatile
  4574  002D20  EF94  F016         	goto	u3041
  4575  002D24  EF96  F016         	goto	u3040
  4576  002D28                     u3041:
  4577  002D28  EF8F  F016         	goto	l335
  4578  002D2C                     u3040:
  4579  002D2C                     
  4580                           ;main.c: 520:     ADCON0bits.ADON = 0;
  4581  002D2C  90C2               	bcf	194,0,c	;volatile
  4582  002D2E                     
  4583                           ;main.c: 522:     return (ADRESH << 8) +ADRESL;
  4584  002D2E  50C4               	movf	196,w,c	;volatile
  4585  002D30  6E04               	movwf	(??_dameHumedadSuelo+1)^0,c
  4586  002D32  6A03               	clrf	??_dameHumedadSuelo^0,c
  4587  002D34  50C3               	movf	195,w,c	;volatile
  4588  002D36  2403               	addwf	??_dameHumedadSuelo^0,w,c
  4589  002D38  6E01               	movwf	?_dameHumedadSuelo^0,c
  4590  002D3A  0E00               	movlw	0
  4591  002D3C  2004               	addwfc	(??_dameHumedadSuelo+1)^0,w,c
  4592  002D3E  6E02               	movwf	(?_dameHumedadSuelo+1)^0,c
  4593  002D40  0012               	return		;funcret
  4594  002D42                     __end_of_dameHumedadSuelo:
  4595                           	opt callstack 0
  4596                           
  4597 ;; *************** function _dameTemperaturaHumedad *****************
  4598 ;; Defined at:
  4599 ;;		line 778 in file "main.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;		None
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  checkSum        2    4[COMRAM] unsigned int 
  4604 ;;  temperatura     1    9[COMRAM] unsigned char 
  4605 ;;  humedad         1    8[COMRAM] unsigned char 
  4606 ;;  temperaturaD    1    7[COMRAM] unsigned char 
  4607 ;;  humedadDecim    1    6[COMRAM] unsigned char 
  4608 ;; Return value:  Size  Location     Type
  4609 ;;                  1    wreg      void 
  4610 ;; Registers used:
  4611 ;;		wreg, status,2, status,0, cstack
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4617 ;;      Params:         0       0       0       0       0       0       0       0       0
  4618 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4619 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4620 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4621 ;;Total ram usage:        8 bytes
  4622 ;; Hardware stack levels used:    1
  4623 ;; Hardware stack levels required when called:    2
  4624 ;; This function calls:
  4625 ;;		_DHT11_ReadData
  4626 ;;		_DHT11_Start
  4627 ;;		_check_response
  4628 ;; This function is called by:
  4629 ;;		_estaSeco
  4630 ;;		_mostrarDatosSensores
  4631 ;;		_mostrarDatosSensoresWIFI
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text21
  4636  00263E                     __ptext21:
  4637                           	opt callstack 0
  4638  00263E                     _dameTemperaturaHumedad:
  4639                           	opt callstack 25
  4640  00263E                     
  4641                           ;main.c: 780:     PIE1bits.RCIE = 0;
  4642  00263E  9A9D               	bcf	157,5,c	;volatile
  4643                           
  4644                           ;main.c: 781:     T0CONbits.TMR0ON = 0;
  4645  002640  9ED5               	bcf	213,7,c	;volatile
  4646  002642                     l3840:
  4647                           
  4648                           ;main.c: 787:     DHT11_Start();
  4649  002642  EC2B  F018         	call	_DHT11_Start	;wreg free
  4650  002646                     
  4651                           ;main.c: 789:     while (!(check_response())) {
  4652  002646  ECC3  F016         	call	_check_response	;wreg free
  4653  00264A  0900               	iorlw	0
  4654  00264C  B4D8               	btfsc	status,2,c
  4655  00264E  EF2B  F013         	goto	u2921
  4656  002652  EF2D  F013         	goto	u2920
  4657  002656                     u2921:
  4658  002656  EF21  F013         	goto	l3840
  4659  00265A                     u2920:
  4660  00265A                     
  4661                           ;main.c: 795:     humedad = DHT11_ReadData();
  4662  00265A  EC53  F015         	call	_DHT11_ReadData	;wreg free
  4663  00265E  6E09               	movwf	dameTemperaturaHumedad@humedad^0,c
  4664                           
  4665                           ;main.c: 796:     humedadDecimal = DHT11_ReadData();
  4666  002660  EC53  F015         	call	_DHT11_ReadData	;wreg free
  4667  002664  6E07               	movwf	dameTemperaturaHumedad@humedadDecimal^0,c
  4668                           
  4669                           ;main.c: 797:     temperatura = DHT11_ReadData();
  4670  002666  EC53  F015         	call	_DHT11_ReadData	;wreg free
  4671  00266A  6E0A               	movwf	dameTemperaturaHumedad@temperatura^0,c
  4672                           
  4673                           ;main.c: 798:     temperaturaDecimal = DHT11_ReadData();
  4674  00266C  EC53  F015         	call	_DHT11_ReadData	;wreg free
  4675  002670  6E08               	movwf	dameTemperaturaHumedad@temperaturaDecimal^0,c
  4676                           
  4677                           ;main.c: 799:     checkSum = DHT11_ReadData();
  4678  002672  EC53  F015         	call	_DHT11_ReadData	;wreg free
  4679  002676  6E03               	movwf	??_dameTemperaturaHumedad^0,c
  4680  002678  5003               	movf	??_dameTemperaturaHumedad^0,w,c
  4681  00267A  6E05               	movwf	dameTemperaturaHumedad@checkSum^0,c
  4682  00267C  6A06               	clrf	(dameTemperaturaHumedad@checkSum+1)^0,c
  4683  00267E                     
  4684                           ;main.c: 801:     if (checkSum != (humedad + humedadDecimal + temperatura + temperaturaD
      +                          ecimal)) {
  4685  00267E  5007               	movf	dameTemperaturaHumedad@humedadDecimal^0,w,c
  4686  002680  C009  F003         	movff	dameTemperaturaHumedad@humedad,??_dameTemperaturaHumedad
  4687  002684  6A04               	clrf	(??_dameTemperaturaHumedad+1)^0,c
  4688  002686  2603               	addwf	??_dameTemperaturaHumedad^0,f,c
  4689  002688  0E00               	movlw	0
  4690  00268A  2204               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  4691  00268C  500A               	movf	dameTemperaturaHumedad@temperatura^0,w,c
  4692  00268E  2603               	addwf	??_dameTemperaturaHumedad^0,f,c
  4693  002690  0E00               	movlw	0
  4694  002692  2204               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  4695  002694  5008               	movf	dameTemperaturaHumedad@temperaturaDecimal^0,w,c
  4696  002696  2603               	addwf	??_dameTemperaturaHumedad^0,f,c
  4697  002698  0E00               	movlw	0
  4698  00269A  2204               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  4699  00269C  5005               	movf	dameTemperaturaHumedad@checkSum^0,w,c
  4700  00269E  1803               	xorwf	??_dameTemperaturaHumedad^0,w,c
  4701  0026A0  E109               	bnz	u2930
  4702  0026A2  5006               	movf	(dameTemperaturaHumedad@checkSum+1)^0,w,c
  4703  0026A4  1804               	xorwf	(??_dameTemperaturaHumedad+1)^0,w,c
  4704  0026A6  B4D8               	btfsc	status,2,c
  4705  0026A8  EF58  F013         	goto	u2931
  4706  0026AC  EF5A  F013         	goto	u2930
  4707  0026B0                     u2931:
  4708  0026B0  EF5C  F013         	goto	l414
  4709  0026B4                     u2930:
  4710  0026B4  EF60  F013         	goto	l415
  4711  0026B8                     l414:
  4712                           
  4713                           ;main.c: 804:         Humedad = humedad;
  4714  0026B8  C009  F07E         	movff	dameTemperaturaHumedad@humedad,_Humedad
  4715                           
  4716                           ;main.c: 805:         Temperatura = temperatura;
  4717  0026BC  C00A  F07F         	movff	dameTemperaturaHumedad@temperatura,_Temperatura
  4718  0026C0                     l415:
  4719                           
  4720                           ;main.c: 808:     PIE1bits.RCIE = 1;
  4721  0026C0  8A9D               	bsf	157,5,c	;volatile
  4722                           
  4723                           ;main.c: 809:     T0CONbits.TMR0ON = 1;
  4724  0026C2  8ED5               	bsf	213,7,c	;volatile
  4725  0026C4  0012               	return		;funcret
  4726  0026C6                     __end_of_dameTemperaturaHumedad:
  4727                           	opt callstack 0
  4728                           
  4729 ;; *************** function _check_response *****************
  4730 ;; Defined at:
  4731 ;;		line 38 in file "./DHT11.h"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;		None
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;  respuesta       1    0[COMRAM] unsigned char 
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  1    wreg      unsigned char 
  4738 ;; Registers used:
  4739 ;;		wreg, status,2
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4745 ;;      Params:         0       0       0       0       0       0       0       0       0
  4746 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4747 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4748 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4749 ;;Total ram usage:        1 bytes
  4750 ;; Hardware stack levels used:    1
  4751 ;; Hardware stack levels required when called:    1
  4752 ;; This function calls:
  4753 ;;		Nothing
  4754 ;; This function is called by:
  4755 ;;		_dameTemperaturaHumedad
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758                           
  4759                           	psect	text22
  4760  002D86                     __ptext22:
  4761                           	opt callstack 0
  4762  002D86                     _check_response:
  4763                           	opt callstack 25
  4764  002D86                     
  4765                           ;./DHT11.h: 40:     unsigned char respuesta = 0;
  4766  002D86  0E00               	movlw	0
  4767  002D88  6E01               	movwf	check_response@respuesta^0,c
  4768  002D8A                     
  4769                           ;./DHT11.h: 41:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4770  002D8A  0E0D               	movlw	13
  4771  002D8C                     u3897:
  4772  002D8C  2EE8               	decfsz	wreg,f,c
  4773  002D8E  D7FE               	bra	u3897
  4774  002D90  F000               	nop	
  4775  002D92                     
  4776                           ;./DHT11.h: 42:     if (!PORTDbits.RD7) {
  4777  002D92  BE83               	btfsc	131,7,c	;volatile
  4778  002D94  EFCE  F016         	goto	u2641
  4779  002D98  EFD0  F016         	goto	u2640
  4780  002D9C                     u2641:
  4781  002D9C  EFE1  F016         	goto	l3618
  4782  002DA0                     u2640:
  4783  002DA0                     
  4784                           ;./DHT11.h: 43:         _delay((unsigned long)((80)*(4000000/4000000.0)));
  4785  002DA0  0E1A               	movlw	26
  4786  002DA2                     u3907:
  4787  002DA2  2EE8               	decfsz	wreg,f,c
  4788  002DA4  D7FE               	bra	u3907
  4789  002DA6  D000               	nop2	
  4790  002DA8                     
  4791                           ;./DHT11.h: 44:         if (PORTDbits.RD7) {
  4792  002DA8  AE83               	btfss	131,7,c	;volatile
  4793  002DAA  EFD9  F016         	goto	u2651
  4794  002DAE  EFDB  F016         	goto	u2650
  4795  002DB2                     u2651:
  4796  002DB2  EFE1  F016         	goto	l3618
  4797  002DB6                     u2650:
  4798  002DB6                     
  4799                           ;./DHT11.h: 45:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  4800  002DB6  0E10               	movlw	16
  4801  002DB8                     u3917:
  4802  002DB8  2EE8               	decfsz	wreg,f,c
  4803  002DBA  D7FE               	bra	u3917
  4804  002DBC  D000               	nop2	
  4805  002DBE                     
  4806                           ;./DHT11.h: 46:             respuesta = 1;
  4807  002DBE  0E01               	movlw	1
  4808  002DC0  6E01               	movwf	check_response@respuesta^0,c
  4809  002DC2                     l3618:
  4810                           
  4811                           ;./DHT11.h: 50:     return respuesta;
  4812  002DC2  5001               	movf	check_response@respuesta^0,w,c
  4813  002DC4  0012               	return		;funcret
  4814  002DC6                     __end_of_check_response:
  4815                           	opt callstack 0
  4816                           
  4817 ;; *************** function _DHT11_Start *****************
  4818 ;; Defined at:
  4819 ;;		line 23 in file "./DHT11.h"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;		None
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;		None
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  1    wreg      void 
  4826 ;; Registers used:
  4827 ;;		wreg
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4833 ;;      Params:         0       0       0       0       0       0       0       0       0
  4834 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4835 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4836 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4837 ;;Total ram usage:        1 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; Hardware stack levels required when called:    1
  4840 ;; This function calls:
  4841 ;;		Nothing
  4842 ;; This function is called by:
  4843 ;;		_dameTemperaturaHumedad
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           	psect	text23
  4848  003056                     __ptext23:
  4849                           	opt callstack 0
  4850  003056                     _DHT11_Start:
  4851                           	opt callstack 25
  4852  003056                     
  4853                           ;./DHT11.h: 24:     TRISDbits.RD7 = 0;
  4854  003056  9E95               	bcf	149,7,c	;volatile
  4855                           
  4856                           ;./DHT11.h: 26:     LATDbits.LATD7 = 0;
  4857  003058  9E8C               	bcf	140,7,c	;volatile
  4858  00305A                     
  4859                           ;./DHT11.h: 28:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4860  00305A  0E1A               	movlw	26
  4861  00305C  6E01               	movwf	??_DHT11_Start^0,c
  4862  00305E  0EF8               	movlw	248
  4863  003060                     u3927:
  4864  003060  2EE8               	decfsz	wreg,f,c
  4865  003062  D7FE               	bra	u3927
  4866  003064  2E01               	decfsz	??_DHT11_Start^0,f,c
  4867  003066  D7FC               	bra	u3927
  4868  003068  D000               	nop2	
  4869  00306A                     
  4870                           ;./DHT11.h: 30:     LATDbits.LATD7 = 1;
  4871  00306A  8E8C               	bsf	140,7,c	;volatile
  4872                           
  4873                           ;./DHT11.h: 32:     _delay((unsigned long)((30)*(4000000/4000000.0)));
  4874  00306C  0E0A               	movlw	10
  4875  00306E                     u3937:
  4876  00306E  2EE8               	decfsz	wreg,f,c
  4877  003070  D7FE               	bra	u3937
  4878  003072                     
  4879                           ;./DHT11.h: 34:     TRISDbits.RD7 = 1;
  4880  003072  8E95               	bsf	149,7,c	;volatile
  4881  003074  0012               	return		;funcret
  4882  003076                     __end_of_DHT11_Start:
  4883                           	opt callstack 0
  4884                           
  4885 ;; *************** function _DHT11_ReadData *****************
  4886 ;; Defined at:
  4887 ;;		line 9 in file "./DHT11.h"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;		None
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;  data            1    1[COMRAM] unsigned char 
  4892 ;;  i               1    0[COMRAM] unsigned char 
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  1    wreg      unsigned char 
  4895 ;; Registers used:
  4896 ;;		wreg, status,2, status,0
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4902 ;;      Params:         0       0       0       0       0       0       0       0       0
  4903 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4904 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4905 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4906 ;;Total ram usage:        2 bytes
  4907 ;; Hardware stack levels used:    1
  4908 ;; Hardware stack levels required when called:    1
  4909 ;; This function calls:
  4910 ;;		Nothing
  4911 ;; This function is called by:
  4912 ;;		_dameTemperaturaHumedad
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           	psect	text24
  4917  002AA6                     __ptext24:
  4918                           	opt callstack 0
  4919  002AA6                     _DHT11_ReadData:
  4920                           	opt callstack 25
  4921  002AA6                     
  4922                           ;./DHT11.h: 10:     char i, data = 0;
  4923  002AA6  0E00               	movlw	0
  4924  002AA8  6E02               	movwf	DHT11_ReadData@data^0,c
  4925                           
  4926                           ;./DHT11.h: 11:     for (i = 0; i < 8; i++) {
  4927  002AAA  0E00               	movlw	0
  4928  002AAC  6E01               	movwf	DHT11_ReadData@i^0,c
  4929  002AAE                     l152:
  4930  002AAE  AE83               	btfss	131,7,c	;volatile
  4931  002AB0  EF5C  F015         	goto	u2601
  4932  002AB4  EF5E  F015         	goto	u2600
  4933  002AB8                     u2601:
  4934  002AB8  EF57  F015         	goto	l152
  4935  002ABC                     u2600:
  4936  002ABC                     
  4937                           ;./DHT11.h: 13:         _delay((unsigned long)((30)*(4000000/4000000.0)));
  4938  002ABC  0E0A               	movlw	10
  4939  002ABE                     u3947:
  4940  002ABE  2EE8               	decfsz	wreg,f,c
  4941  002AC0  D7FE               	bra	u3947
  4942  002AC2                     
  4943                           ;./DHT11.h: 14:         if (PORTDbits.RD7 & 1)
  4944  002AC2  AE83               	btfss	131,7,c	;volatile
  4945  002AC4  EF66  F015         	goto	u2611
  4946  002AC8  EF68  F015         	goto	u2610
  4947  002ACC                     u2611:
  4948  002ACC  EF6C  F015         	goto	l3586
  4949  002AD0                     u2610:
  4950  002AD0                     
  4951                           ;./DHT11.h: 15:             data = ((data << 1) | 1);
  4952  002AD0  80D8               	bsf	status,0,c
  4953  002AD2  3602               	rlcf	DHT11_ReadData@data^0,f,c
  4954  002AD4  EF6F  F015         	goto	l157
  4955  002AD8                     l3586:
  4956                           
  4957                           ;./DHT11.h: 17:             data = (data << 1);
  4958  002AD8  5002               	movf	DHT11_ReadData@data^0,w,c
  4959  002ADA  2402               	addwf	DHT11_ReadData@data^0,w,c
  4960  002ADC  6E02               	movwf	DHT11_ReadData@data^0,c
  4961  002ADE                     l157:
  4962  002ADE  BE83               	btfsc	131,7,c	;volatile
  4963  002AE0  EF74  F015         	goto	u2621
  4964  002AE4  EF76  F015         	goto	u2620
  4965  002AE8                     u2621:
  4966  002AE8  EF6F  F015         	goto	l157
  4967  002AEC                     u2620:
  4968  002AEC                     
  4969                           ;./DHT11.h: 19:     }
  4970  002AEC  2A01               	incf	DHT11_ReadData@i^0,f,c
  4971  002AEE  0E07               	movlw	7
  4972  002AF0  6401               	cpfsgt	DHT11_ReadData@i^0,c
  4973  002AF2  EF7D  F015         	goto	u2631
  4974  002AF6  EF7F  F015         	goto	u2630
  4975  002AFA                     u2631:
  4976  002AFA  EF57  F015         	goto	l152
  4977  002AFE                     u2630:
  4978  002AFE                     
  4979                           ;./DHT11.h: 20:     return data;
  4980  002AFE  5002               	movf	DHT11_ReadData@data^0,w,c
  4981  002B00  0012               	return		;funcret
  4982  002B02                     __end_of_DHT11_ReadData:
  4983                           	opt callstack 0
  4984                           
  4985 ;; *************** function _leeHorariosMemoria *****************
  4986 ;; Defined at:
  4987 ;;		line 273 in file "main.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;		None
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;  j               2    9[COMRAM] int 
  4992 ;;  i               2   13[COMRAM] int 
  4993 ;;  contMemoria     2   11[COMRAM] int 
  4994 ;;  caracterLeid    1    8[COMRAM] unsigned char 
  4995 ;; Return value:  Size  Location     Type
  4996 ;;                  1    wreg      void 
  4997 ;; Registers used:
  4998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4999 ;; Tracked objects:
  5000 ;;		On entry : 0/0
  5001 ;;		On exit  : 0/0
  5002 ;;		Unchanged: 0/0
  5003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5004 ;;      Params:         0       0       0       0       0       0       0       0       0
  5005 ;;      Locals:         7       0       0       0       0       0       0       0       0
  5006 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5007 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5008 ;;Total ram usage:        9 bytes
  5009 ;; Hardware stack levels used:    1
  5010 ;; Hardware stack levels required when called:    4
  5011 ;; This function calls:
  5012 ;;		_UART_write
  5013 ;;		___wmul
  5014 ;;		_leer_eeprom
  5015 ;; This function is called by:
  5016 ;;		_sistemaPrincipal
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           	psect	text25
  5021  001480                     __ptext25:
  5022                           	opt callstack 0
  5023  001480                     _leeHorariosMemoria:
  5024                           	opt callstack 25
  5025  001480                     
  5026                           ;main.c: 275:     int contMemoria = 0;
  5027  001480  0E00               	movlw	0
  5028  001482  6E0D               	movwf	(leeHorariosMemoria@contMemoria+1)^0,c
  5029  001484  0E00               	movlw	0
  5030  001486  6E0C               	movwf	leeHorariosMemoria@contMemoria^0,c
  5031  001488                     
  5032                           ;main.c: 276:     unsigned char caracterLeido;;main.c: 278:     caracterLeido = leer_eep
      +                          rom(contMemoria++);
  5033  001488  0E00               	movlw	0
  5034  00148A  6E04               	movwf	(leer_eeprom@direccion+1)^0,c
  5035  00148C  0E00               	movlw	0
  5036  00148E  6E03               	movwf	leer_eeprom@direccion^0,c
  5037  001490  EC42  F017         	call	_leer_eeprom	;wreg free
  5038  001494  6E09               	movwf	leeHorariosMemoria@caracterLeido^0,c
  5039  001496  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  5040  001498  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  5041  00149A                     
  5042                           ;main.c: 280:     if (caracterLeido == 'T') {
  5043  00149A  0E54               	movlw	84
  5044  00149C  1809               	xorwf	leeHorariosMemoria@caracterLeido^0,w,c
  5045  00149E  A4D8               	btfss	status,2,c
  5046  0014A0  EF54  F00A         	goto	u3361
  5047  0014A4  EF56  F00A         	goto	u3360
  5048  0014A8                     u3361:
  5049  0014A8  EFF3  F00A         	goto	l4318
  5050  0014AC                     u3360:
  5051  0014AC                     
  5052                           ;main.c: 282:         for (int i = 0; i < 24; i++) {
  5053  0014AC  0E00               	movlw	0
  5054  0014AE  6E0F               	movwf	(leeHorariosMemoria@i+1)^0,c
  5055  0014B0  0E00               	movlw	0
  5056  0014B2  6E0E               	movwf	leeHorariosMemoria@i^0,c
  5057  0014B4                     l4290:
  5058                           
  5059                           ;main.c: 283:             horarios[i].hora = leer_eeprom(contMemoria++);
  5060  0014B4  C00E  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  5061  0014B8  C00F  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  5062  0014BC  0E00               	movlw	0
  5063  0014BE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5064  0014C0  0E0C               	movlw	12
  5065  0014C2  6E03               	movwf	___wmul@multiplicand^0,c
  5066  0014C4  EC08  F018         	call	___wmul	;wreg free
  5067  0014C8  0E32               	movlw	low _horarios
  5068  0014CA  2401               	addwf	?___wmul^0,w,c
  5069  0014CC  6ED9               	movwf	fsr2l,c
  5070  0014CE  0E01               	movlw	high _horarios
  5071  0014D0  2002               	addwfc	(?___wmul+1)^0,w,c
  5072  0014D2  6EDA               	movwf	fsr2h,c
  5073  0014D4  C00C  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  5074  0014D8  C00D  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  5075  0014DC  EC42  F017         	call	_leer_eeprom	;wreg free
  5076  0014E0  6EDF               	movwf	indf2,c
  5077  0014E2  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  5078  0014E4  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  5079  0014E6                     
  5080                           ;main.c: 285:             for (int j = 0; j < 7; j++) {
  5081  0014E6  0E00               	movlw	0
  5082  0014E8  6E0B               	movwf	(leeHorariosMemoria@j+1)^0,c
  5083  0014EA  0E00               	movlw	0
  5084  0014EC  6E0A               	movwf	leeHorariosMemoria@j^0,c
  5085  0014EE                     l4300:
  5086                           
  5087                           ;main.c: 286:                 horarios[i].dias[j] = leer_eeprom(contMemoria++);
  5088  0014EE  C00E  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  5089  0014F2  C00F  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  5090  0014F6  0E00               	movlw	0
  5091  0014F8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5092  0014FA  0E0C               	movlw	12
  5093  0014FC  6E03               	movwf	___wmul@multiplicand^0,c
  5094  0014FE  EC08  F018         	call	___wmul	;wreg free
  5095  001502  0E32               	movlw	low _horarios
  5096  001504  6E07               	movwf	??_leeHorariosMemoria^0,c
  5097  001506  0E01               	movlw	high _horarios
  5098  001508  6E08               	movwf	(??_leeHorariosMemoria+1)^0,c
  5099  00150A  0E01               	movlw	1
  5100  00150C  2607               	addwf	??_leeHorariosMemoria^0,f,c
  5101  00150E  0E00               	movlw	0
  5102  001510  2208               	addwfc	(??_leeHorariosMemoria+1)^0,f,c
  5103  001512  5001               	movf	?___wmul^0,w,c
  5104  001514  2607               	addwf	??_leeHorariosMemoria^0,f,c
  5105  001516  5002               	movf	(?___wmul+1)^0,w,c
  5106  001518  2208               	addwfc	(??_leeHorariosMemoria+1)^0,f,c
  5107  00151A  500A               	movf	leeHorariosMemoria@j^0,w,c
  5108  00151C  2407               	addwf	??_leeHorariosMemoria^0,w,c
  5109  00151E  6ED9               	movwf	fsr2l,c
  5110  001520  500B               	movf	(leeHorariosMemoria@j+1)^0,w,c
  5111  001522  2008               	addwfc	(??_leeHorariosMemoria+1)^0,w,c
  5112  001524  6EDA               	movwf	fsr2h,c
  5113  001526  C00C  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  5114  00152A  C00D  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  5115  00152E  EC42  F017         	call	_leer_eeprom	;wreg free
  5116  001532  6EDF               	movwf	indf2,c
  5117  001534  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  5118  001536  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  5119  001538                     
  5120                           ;main.c: 287:             }
  5121  001538  4A0A               	infsnz	leeHorariosMemoria@j^0,f,c
  5122  00153A  2A0B               	incf	(leeHorariosMemoria@j+1)^0,f,c
  5123  00153C  BE0B               	btfsc	(leeHorariosMemoria@j+1)^0,7,c
  5124  00153E  EFAA  F00A         	goto	u3371
  5125  001542  500B               	movf	(leeHorariosMemoria@j+1)^0,w,c
  5126  001544  E109               	bnz	u3370
  5127  001546  0E07               	movlw	7
  5128  001548  5C0A               	subwf	leeHorariosMemoria@j^0,w,c
  5129  00154A  A0D8               	btfss	status,0,c
  5130  00154C  EFAA  F00A         	goto	u3371
  5131  001550  EFAC  F00A         	goto	u3370
  5132  001554                     u3371:
  5133  001554  EF77  F00A         	goto	l4300
  5134  001558                     u3370:
  5135  001558                     
  5136                           ;main.c: 289:             horarios[i].regar = leer_eeprom(contMemoria++);
  5137  001558  C00E  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  5138  00155C  C00F  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  5139  001560  0E00               	movlw	0
  5140  001562  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5141  001564  0E0C               	movlw	12
  5142  001566  6E03               	movwf	___wmul@multiplicand^0,c
  5143  001568  EC08  F018         	call	___wmul	;wreg free
  5144  00156C  0E3B               	movlw	low (_horarios+9)
  5145  00156E  2401               	addwf	?___wmul^0,w,c
  5146  001570  6ED9               	movwf	fsr2l,c
  5147  001572  0E01               	movlw	high (_horarios+9)
  5148  001574  2002               	addwfc	(?___wmul+1)^0,w,c
  5149  001576  6EDA               	movwf	fsr2h,c
  5150  001578  C00C  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  5151  00157C  C00D  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  5152  001580  EC42  F017         	call	_leer_eeprom	;wreg free
  5153  001584  6EDF               	movwf	indf2,c
  5154  001586  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  5155  001588  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  5156  00158A                     
  5157                           ;main.c: 290:             horarios[i].tiempoRegar = leer_eeprom(contMemoria++);
  5158  00158A  C00E  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  5159  00158E  C00F  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  5160  001592  0E00               	movlw	0
  5161  001594  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5162  001596  0E0C               	movlw	12
  5163  001598  6E03               	movwf	___wmul@multiplicand^0,c
  5164  00159A  EC08  F018         	call	___wmul	;wreg free
  5165  00159E  0E3D               	movlw	low (_horarios+11)
  5166  0015A0  2401               	addwf	?___wmul^0,w,c
  5167  0015A2  6ED9               	movwf	fsr2l,c
  5168  0015A4  0E01               	movlw	high (_horarios+11)
  5169  0015A6  2002               	addwfc	(?___wmul+1)^0,w,c
  5170  0015A8  6EDA               	movwf	fsr2h,c
  5171  0015AA  C00C  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  5172  0015AE  C00D  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  5173  0015B2  EC42  F017         	call	_leer_eeprom	;wreg free
  5174  0015B6  6EDF               	movwf	indf2,c
  5175  0015B8  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  5176  0015BA  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  5177                           
  5178                           ;main.c: 291:         }
  5179  0015BC  4A0E               	infsnz	leeHorariosMemoria@i^0,f,c
  5180  0015BE  2A0F               	incf	(leeHorariosMemoria@i+1)^0,f,c
  5181  0015C0  BE0F               	btfsc	(leeHorariosMemoria@i+1)^0,7,c
  5182  0015C2  EFEC  F00A         	goto	u3381
  5183  0015C6  500F               	movf	(leeHorariosMemoria@i+1)^0,w,c
  5184  0015C8  E109               	bnz	u3380
  5185  0015CA  0E18               	movlw	24
  5186  0015CC  5C0E               	subwf	leeHorariosMemoria@i^0,w,c
  5187  0015CE  A0D8               	btfss	status,0,c
  5188  0015D0  EFEC  F00A         	goto	u3381
  5189  0015D4  EFEE  F00A         	goto	u3380
  5190  0015D8                     u3381:
  5191  0015D8  EF5A  F00A         	goto	l4290
  5192  0015DC                     u3380:
  5193  0015DC                     
  5194                           ;main.c: 294:         UART_write('E');
  5195  0015DC  0E45               	movlw	69
  5196  0015DE  EC66  F018         	call	_UART_write
  5197                           
  5198                           ;main.c: 296:     } else {
  5199  0015E2  EFF6  F00A         	goto	l281
  5200  0015E6                     l4318:
  5201                           
  5202                           ;main.c: 298:         UART_write('@');
  5203  0015E6  0E40               	movlw	64
  5204  0015E8  EC66  F018         	call	_UART_write
  5205  0015EC                     l281:
  5206  0015EC  0012               	return		;funcret
  5207  0015EE                     __end_of_leeHorariosMemoria:
  5208                           	opt callstack 0
  5209                           
  5210 ;; *************** function _leer_eeprom *****************
  5211 ;; Defined at:
  5212 ;;		line 237 in file "main.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;  direccion       2    2[COMRAM] unsigned short 
  5215 ;; Auto vars:     Size  Location     Type
  5216 ;;  dato            1    5[COMRAM] unsigned char 
  5217 ;; Return value:  Size  Location     Type
  5218 ;;                  1    wreg      unsigned char 
  5219 ;; Registers used:
  5220 ;;		wreg, status,2, status,0, cstack
  5221 ;; Tracked objects:
  5222 ;;		On entry : 0/0
  5223 ;;		On exit  : 0/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5226 ;;      Params:         2       0       0       0       0       0       0       0       0
  5227 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5228 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5229 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5230 ;;Total ram usage:        4 bytes
  5231 ;; Hardware stack levels used:    1
  5232 ;; Hardware stack levels required when called:    3
  5233 ;; This function calls:
  5234 ;;		_i2c_detener
  5235 ;;		_i2c_envia_dato
  5236 ;;		_i2c_inicia_com
  5237 ;;		_i2c_recibe_dato
  5238 ;;		_i2c_reinicia_com
  5239 ;; This function is called by:
  5240 ;;		_leeHorariosMemoria
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           	psect	text26
  5245  002E84                     __ptext26:
  5246                           	opt callstack 0
  5247  002E84                     _leer_eeprom:
  5248                           	opt callstack 25
  5249  002E84                     
  5250                           ;main.c: 239:     unsigned char dato;;main.c: 241:     i2c_inicia_com();
  5251  002E84  EC9E  F018         	call	_i2c_inicia_com	;wreg free
  5252                           
  5253                           ;main.c: 242:     i2c_envia_dato(0xAE);
  5254  002E88  0EAE               	movlw	174
  5255  002E8A  EC84  F018         	call	_i2c_envia_dato
  5256                           
  5257                           ;main.c: 243:     i2c_envia_dato(direccion >> 8);
  5258  002E8E  5004               	movf	(leer_eeprom@direccion+1)^0,w,c
  5259  002E90  EC84  F018         	call	_i2c_envia_dato
  5260                           
  5261                           ;main.c: 244:     i2c_envia_dato(direccion);
  5262  002E94  5003               	movf	leer_eeprom@direccion^0,w,c
  5263  002E96  EC84  F018         	call	_i2c_envia_dato
  5264                           
  5265                           ;main.c: 245:     i2c_reinicia_com();
  5266  002E9A  EC9A  F018         	call	_i2c_reinicia_com	;wreg free
  5267                           
  5268                           ;main.c: 246:     i2c_envia_dato(0xAF);
  5269  002E9E  0EAF               	movlw	175
  5270  002EA0  EC84  F018         	call	_i2c_envia_dato
  5271                           
  5272                           ;main.c: 247:     dato = i2c_recibe_dato();
  5273  002EA4  EC59  F018         	call	_i2c_recibe_dato	;wreg free
  5274  002EA8  6E06               	movwf	leer_eeprom@dato^0,c
  5275                           
  5276                           ;main.c: 248:     i2c_detener();
  5277  002EAA  ECA2  F018         	call	_i2c_detener	;wreg free
  5278  002EAE                     
  5279                           ;main.c: 249:     _delay((unsigned long)((10)*(4000000/4000.0)));
  5280  002EAE  0E0D               	movlw	13
  5281  002EB0  6E05               	movwf	??_leer_eeprom^0,c
  5282  002EB2  0EFC               	movlw	252
  5283  002EB4                     u3957:
  5284  002EB4  2EE8               	decfsz	wreg,f,c
  5285  002EB6  D7FE               	bra	u3957
  5286  002EB8  2E05               	decfsz	??_leer_eeprom^0,f,c
  5287  002EBA  D7FC               	bra	u3957
  5288  002EBC                     
  5289                           ;main.c: 251:     return dato;
  5290  002EBC  5006               	movf	leer_eeprom@dato^0,w,c
  5291  002EBE  0012               	return		;funcret
  5292  002EC0                     __end_of_leer_eeprom:
  5293                           	opt callstack 0
  5294                           
  5295 ;; *************** function _i2c_reinicia_com *****************
  5296 ;; Defined at:
  5297 ;;		line 37 in file "./I2C.h"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;		None
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;		None
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  1    wreg      void 
  5304 ;; Registers used:
  5305 ;;		wreg, status,2, status,0, cstack
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5311 ;;      Params:         0       0       0       0       0       0       0       0       0
  5312 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5313 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5314 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5315 ;;Total ram usage:        0 bytes
  5316 ;; Hardware stack levels used:    1
  5317 ;; Hardware stack levels required when called:    2
  5318 ;; This function calls:
  5319 ;;		_i2c_espera
  5320 ;; This function is called by:
  5321 ;;		_leer_rtc
  5322 ;;		_leer_eeprom
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           	psect	text27
  5327  003134                     __ptext27:
  5328                           	opt callstack 0
  5329  003134                     _i2c_reinicia_com:
  5330                           	opt callstack 25
  5331  003134                     
  5332                           ;./I2C.h: 38:     i2c_espera();
  5333  003134  ECF5  F017         	call	_i2c_espera	;wreg free
  5334  003138                     
  5335                           ;./I2C.h: 39:     SSPCON2bits.RSEN = 1;
  5336  003138  82C5               	bsf	197,1,c	;volatile
  5337  00313A  0012               	return		;funcret
  5338  00313C                     __end_of_i2c_reinicia_com:
  5339                           	opt callstack 0
  5340                           
  5341 ;; *************** function _i2c_recibe_dato *****************
  5342 ;; Defined at:
  5343 ;;		line 68 in file "./I2C.h"
  5344 ;; Parameters:    Size  Location     Type
  5345 ;;		None
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;  datoleido       1    1[COMRAM] unsigned char 
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  1    wreg      unsigned char 
  5350 ;; Registers used:
  5351 ;;		wreg, status,2, status,0, cstack
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/0
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5357 ;;      Params:         0       0       0       0       0       0       0       0       0
  5358 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5360 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5361 ;;Total ram usage:        1 bytes
  5362 ;; Hardware stack levels used:    1
  5363 ;; Hardware stack levels required when called:    2
  5364 ;; This function calls:
  5365 ;;		_i2c_espera
  5366 ;; This function is called by:
  5367 ;;		_leer_rtc
  5368 ;;		_leer_eeprom
  5369 ;; This function uses a non-reentrant model
  5370 ;;
  5371                           
  5372                           	psect	text28
  5373  0030B2                     __ptext28:
  5374                           	opt callstack 0
  5375  0030B2                     _i2c_recibe_dato:
  5376                           	opt callstack 25
  5377  0030B2                     
  5378                           ;./I2C.h: 70:     unsigned char datoleido;;./I2C.h: 73:     i2c_espera();
  5379  0030B2  ECF5  F017         	call	_i2c_espera	;wreg free
  5380  0030B6                     
  5381                           ;./I2C.h: 74:     SSPCON2bits.RCEN = 1;
  5382  0030B6  86C5               	bsf	197,3,c	;volatile
  5383                           
  5384                           ;./I2C.h: 76:     i2c_espera();
  5385  0030B8  ECF5  F017         	call	_i2c_espera	;wreg free
  5386  0030BC                     
  5387                           ;./I2C.h: 77:     datoleido = SSPBUF;
  5388  0030BC  CFC9 F002          	movff	4041,i2c_recibe_dato@datoleido	;volatile
  5389                           
  5390                           ;./I2C.h: 80:     i2c_espera();
  5391  0030C0  ECF5  F017         	call	_i2c_espera	;wreg free
  5392  0030C4                     
  5393                           ;./I2C.h: 82:     SSPCON2bits.ACKDT = 1;
  5394  0030C4  8AC5               	bsf	197,5,c	;volatile
  5395  0030C6                     
  5396                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
  5397  0030C6  88C5               	bsf	197,4,c	;volatile
  5398  0030C8                     
  5399                           ;./I2C.h: 91:     return datoleido;
  5400  0030C8  5002               	movf	i2c_recibe_dato@datoleido^0,w,c
  5401  0030CA  0012               	return		;funcret
  5402  0030CC                     __end_of_i2c_recibe_dato:
  5403                           	opt callstack 0
  5404                           
  5405 ;; *************** function _fijaHoraRtc *****************
  5406 ;; Defined at:
  5407 ;;		line 391 in file "main.c"
  5408 ;; Parameters:    Size  Location     Type
  5409 ;;		None
  5410 ;; Auto vars:     Size  Location     Type
  5411 ;;		None
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  1    wreg      void 
  5414 ;; Registers used:
  5415 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5421 ;;      Params:         0       0       0       0       0       0       0       0       0
  5422 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5423 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5424 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5425 ;;Total ram usage:        0 bytes
  5426 ;; Hardware stack levels used:    1
  5427 ;; Hardware stack levels required when called:    5
  5428 ;; This function calls:
  5429 ;;		_UART_write
  5430 ;;		_escribe_rtc
  5431 ;;		_setRtc
  5432 ;; This function is called by:
  5433 ;;		_sistemaPrincipal
  5434 ;; This function uses a non-reentrant model
  5435 ;;
  5436                           
  5437                           	psect	text29
  5438  002E46                     __ptext29:
  5439                           	opt callstack 0
  5440  002E46                     _fijaHoraRtc:
  5441                           	opt callstack 24
  5442  002E46                     
  5443                           ;main.c: 399:     if (setRtc(0x02)) {
  5444  002E46  0E02               	movlw	2
  5445  002E48  EC1D  F014         	call	_setRtc
  5446  002E4C  0900               	iorlw	0
  5447  002E4E  B4D8               	btfsc	status,2,c
  5448  002E50  EF2C  F017         	goto	u3491
  5449  002E54  EF2E  F017         	goto	u3490
  5450  002E58                     u3491:
  5451  002E58  EF41  F017         	goto	l313
  5452  002E5C                     u3490:
  5453  002E5C                     
  5454                           ;main.c: 401:         if (setRtc(0x01)) {
  5455  002E5C  0E01               	movlw	1
  5456  002E5E  EC1D  F014         	call	_setRtc
  5457  002E62  0900               	iorlw	0
  5458  002E64  B4D8               	btfsc	status,2,c
  5459  002E66  EF37  F017         	goto	u3501
  5460  002E6A  EF39  F017         	goto	u3500
  5461  002E6E                     u3501:
  5462  002E6E  EF41  F017         	goto	l313
  5463  002E72                     u3500:
  5464  002E72                     
  5465                           ;main.c: 403:             escribe_rtc(0x00, 0);
  5466  002E72  0E00               	movlw	0
  5467  002E74  6E03               	movwf	escribe_rtc@dato^0,c
  5468  002E76  0E00               	movlw	0
  5469  002E78  EC4A  F018         	call	_escribe_rtc
  5470  002E7C                     
  5471                           ;main.c: 404:             UART_write('E');
  5472  002E7C  0E45               	movlw	69
  5473  002E7E  EC66  F018         	call	_UART_write
  5474  002E82                     l313:
  5475  002E82  0012               	return		;funcret
  5476  002E84                     __end_of_fijaHoraRtc:
  5477                           	opt callstack 0
  5478                           
  5479 ;; *************** function _fijaDiaRtc *****************
  5480 ;; Defined at:
  5481 ;;		line 195 in file "main.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;		None
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;		None
  5486 ;; Return value:  Size  Location     Type
  5487 ;;                  1    wreg      void 
  5488 ;; Registers used:
  5489 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5495 ;;      Params:         0       0       0       0       0       0       0       0       0
  5496 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5498 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5499 ;;Total ram usage:        0 bytes
  5500 ;; Hardware stack levels used:    1
  5501 ;; Hardware stack levels required when called:    5
  5502 ;; This function calls:
  5503 ;;		_UART_write
  5504 ;;		_setRtc
  5505 ;; This function is called by:
  5506 ;;		_sistemaPrincipal
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           	psect	text30
  5511  003076                     __ptext30:
  5512                           	opt callstack 0
  5513  003076                     _fijaDiaRtc:
  5514                           	opt callstack 24
  5515  003076                     
  5516                           ;main.c: 199:     if (setRtc(0x03)) {
  5517  003076  0E03               	movlw	3
  5518  003078  EC1D  F014         	call	_setRtc
  5519  00307C  0900               	iorlw	0
  5520  00307E  B4D8               	btfsc	status,2,c
  5521  003080  EF44  F018         	goto	u3351
  5522  003084  EF46  F018         	goto	u3350
  5523  003088                     u3351:
  5524  003088  EF49  F018         	goto	l255
  5525  00308C                     u3350:
  5526  00308C                     
  5527                           ;main.c: 201:         UART_write('E');
  5528  00308C  0E45               	movlw	69
  5529  00308E  EC66  F018         	call	_UART_write
  5530  003092                     l255:
  5531  003092  0012               	return		;funcret
  5532  003094                     __end_of_fijaDiaRtc:
  5533                           	opt callstack 0
  5534                           
  5535 ;; *************** function _setRtc *****************
  5536 ;; Defined at:
  5537 ;;		line 206 in file "main.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;  direccion       1    wreg     unsigned char 
  5540 ;; Auto vars:     Size  Location     Type
  5541 ;;  direccion       1   12[COMRAM] unsigned char 
  5542 ;;  dato            1   15[COMRAM] unsigned char 
  5543 ;;  datoRtc         1   14[COMRAM] unsigned char 
  5544 ;;  seteado         1   13[COMRAM] unsigned char 
  5545 ;; Return value:  Size  Location     Type
  5546 ;;                  1    wreg      unsigned char 
  5547 ;; Registers used:
  5548 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5549 ;; Tracked objects:
  5550 ;;		On entry : 0/0
  5551 ;;		On exit  : 0/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5554 ;;      Params:         0       0       0       0       0       0       0       0       0
  5555 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5556 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5557 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5558 ;;Total ram usage:        4 bytes
  5559 ;; Hardware stack levels used:    1
  5560 ;; Hardware stack levels required when called:    4
  5561 ;; This function calls:
  5562 ;;		___awdiv
  5563 ;;		___awmod
  5564 ;;		_escribe_rtc
  5565 ;;		_getValue
  5566 ;; This function is called by:
  5567 ;;		_fijaDiaRtc
  5568 ;;		_fijaHoraRtc
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           	psect	text31
  5573  00283A                     __ptext31:
  5574                           	opt callstack 0
  5575  00283A                     _setRtc:
  5576                           	opt callstack 24
  5577                           
  5578                           ;incstack = 0
  5579                           ;setRtc@direccion stored from wreg
  5580  00283A  6E0D               	movwf	setRtc@direccion^0,c
  5581  00283C                     
  5582                           ;main.c: 209:     unsigned char seteado = 0;
  5583  00283C  0E00               	movlw	0
  5584  00283E  6E0E               	movwf	setRtc@seteado^0,c
  5585                           
  5586                           ;main.c: 210:     unsigned char datoRtc = 0;
  5587  002840  0E00               	movlw	0
  5588  002842  6E0F               	movwf	setRtc@datoRtc^0,c
  5589  002844                     
  5590                           ;main.c: 212:     dato = getValue(2);
  5591  002844  0E00               	movlw	0
  5592  002846  6E03               	movwf	(getValue@numCharacters+1)^0,c
  5593  002848  0E02               	movlw	2
  5594  00284A  6E02               	movwf	getValue@numCharacters^0,c
  5595  00284C  ECE5  F006         	call	_getValue	;wreg free
  5596  002850  6E10               	movwf	setRtc@dato^0,c
  5597  002852                     
  5598                           ;main.c: 214:     if (dato != '@') {
  5599  002852  0E40               	movlw	64
  5600  002854  1810               	xorwf	setRtc@dato^0,w,c
  5601  002856  B4D8               	btfsc	status,2,c
  5602  002858  EF30  F014         	goto	u3251
  5603  00285C  EF32  F014         	goto	u3250
  5604  002860                     u3251:
  5605  002860  EF53  F014         	goto	l4140
  5606  002864                     u3250:
  5607  002864                     
  5608                           ;main.c: 216:         datoRtc = ((dato / 10) & 0x0F) << 4;
  5609  002864  C010  F001         	movff	setRtc@dato,___awdiv@dividend
  5610  002868  6A02               	clrf	(___awdiv@dividend+1)^0,c
  5611  00286A  0E00               	movlw	0
  5612  00286C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5613  00286E  0E0A               	movlw	10
  5614  002870  6E03               	movwf	___awdiv@divisor^0,c
  5615  002872  EC0B  F011         	call	___awdiv	;wreg free
  5616  002876  0E0F               	movlw	15
  5617  002878  1601               	andwf	?___awdiv^0,f,c
  5618  00287A  3801               	swapf	?___awdiv^0,w,c
  5619  00287C  0BF0               	andlw	240
  5620  00287E  6E0F               	movwf	setRtc@datoRtc^0,c
  5621                           
  5622                           ;main.c: 217:         datoRtc |= (dato % 10) & 0x0F;
  5623  002880  C010  F001         	movff	setRtc@dato,___awmod@dividend
  5624  002884  6A02               	clrf	(___awmod@dividend+1)^0,c
  5625  002886  0E00               	movlw	0
  5626  002888  6E04               	movwf	(___awmod@divisor+1)^0,c
  5627  00288A  0E0A               	movlw	10
  5628  00288C  6E03               	movwf	___awmod@divisor^0,c
  5629  00288E  EC2A  F012         	call	___awmod	;wreg free
  5630  002892  5001               	movf	?___awmod^0,w,c
  5631  002894  0B0F               	andlw	15
  5632  002896  120F               	iorwf	setRtc@datoRtc^0,f,c
  5633                           
  5634                           ;main.c: 218:         escribe_rtc(direccion, datoRtc);
  5635  002898  C00F  F003         	movff	setRtc@datoRtc,escribe_rtc@dato
  5636  00289C  500D               	movf	setRtc@direccion^0,w,c
  5637  00289E  EC4A  F018         	call	_escribe_rtc
  5638  0028A2                     
  5639                           ;main.c: 219:         seteado = 1;
  5640  0028A2  0E01               	movlw	1
  5641  0028A4  6E0E               	movwf	setRtc@seteado^0,c
  5642  0028A6                     l4140:
  5643                           
  5644                           ;main.c: 222:     return seteado;
  5645  0028A6  500E               	movf	setRtc@seteado^0,w,c
  5646  0028A8  0012               	return		;funcret
  5647  0028AA                     __end_of_setRtc:
  5648                           	opt callstack 0
  5649                           
  5650 ;; *************** function _escribe_rtc *****************
  5651 ;; Defined at:
  5652 ;;		line 2 in file "./RTC.h"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;  direccion       1    wreg     unsigned char 
  5655 ;;  dato            1    2[COMRAM] unsigned char 
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;  direccion       1    3[COMRAM] unsigned char 
  5658 ;; Return value:  Size  Location     Type
  5659 ;;                  1    wreg      void 
  5660 ;; Registers used:
  5661 ;;		wreg, status,2, status,0, cstack
  5662 ;; Tracked objects:
  5663 ;;		On entry : 0/0
  5664 ;;		On exit  : 0/0
  5665 ;;		Unchanged: 0/0
  5666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5667 ;;      Params:         1       0       0       0       0       0       0       0       0
  5668 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5669 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5670 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5671 ;;Total ram usage:        2 bytes
  5672 ;; Hardware stack levels used:    1
  5673 ;; Hardware stack levels required when called:    3
  5674 ;; This function calls:
  5675 ;;		_i2c_detener
  5676 ;;		_i2c_envia_dato
  5677 ;;		_i2c_inicia_com
  5678 ;; This function is called by:
  5679 ;;		_setRtc
  5680 ;;		_fijaHoraRtc
  5681 ;;		_setRtcDefault
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text32
  5686  003094                     __ptext32:
  5687                           	opt callstack 0
  5688  003094                     _escribe_rtc:
  5689                           	opt callstack 24
  5690                           
  5691                           ;incstack = 0
  5692                           ;escribe_rtc@direccion stored from wreg
  5693  003094  6E04               	movwf	escribe_rtc@direccion^0,c
  5694  003096                     
  5695                           ;./RTC.h: 3:     i2c_inicia_com();
  5696  003096  EC9E  F018         	call	_i2c_inicia_com	;wreg free
  5697                           
  5698                           ;./RTC.h: 4:     i2c_envia_dato(0xD0);
  5699  00309A  0ED0               	movlw	208
  5700  00309C  EC84  F018         	call	_i2c_envia_dato
  5701                           
  5702                           ;./RTC.h: 5:     i2c_envia_dato(direccion);
  5703  0030A0  5004               	movf	escribe_rtc@direccion^0,w,c
  5704  0030A2  EC84  F018         	call	_i2c_envia_dato
  5705                           
  5706                           ;./RTC.h: 6:     i2c_envia_dato(dato);
  5707  0030A6  5003               	movf	escribe_rtc@dato^0,w,c
  5708  0030A8  EC84  F018         	call	_i2c_envia_dato
  5709                           
  5710                           ;./RTC.h: 7:     i2c_detener();
  5711  0030AC  ECA2  F018         	call	_i2c_detener	;wreg free
  5712  0030B0  0012               	return		;funcret
  5713  0030B2                     __end_of_escribe_rtc:
  5714                           	opt callstack 0
  5715                           
  5716 ;; *************** function ___awmod *****************
  5717 ;; Defined at:
  5718 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;  dividend        2    0[COMRAM] int 
  5721 ;;  divisor         2    2[COMRAM] int 
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;  sign            1    5[COMRAM] unsigned char 
  5724 ;;  counter         1    4[COMRAM] unsigned char 
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  2    0[COMRAM] int 
  5727 ;; Registers used:
  5728 ;;		wreg, status,2, status,0
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5734 ;;      Params:         4       0       0       0       0       0       0       0       0
  5735 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5736 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5737 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5738 ;;Total ram usage:        6 bytes
  5739 ;; Hardware stack levels used:    1
  5740 ;; Hardware stack levels required when called:    1
  5741 ;; This function calls:
  5742 ;;		Nothing
  5743 ;; This function is called by:
  5744 ;;		_setRtc
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           	psect	text33
  5749  002454                     __ptext33:
  5750                           	opt callstack 0
  5751  002454                     ___awmod:
  5752                           	opt callstack 26
  5753  002454  0E00               	movlw	0
  5754  002456  6E06               	movwf	___awmod@sign^0,c
  5755  002458  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  5756  00245A  EF33  F012         	goto	u3140
  5757  00245E  EF31  F012         	goto	u3141
  5758  002462                     u3141:
  5759  002462  EF39  F012         	goto	l4064
  5760  002466                     u3140:
  5761  002466  6C01               	negf	___awmod@dividend^0,c
  5762  002468  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5763  00246A  B0D8               	btfsc	status,0,c
  5764  00246C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5765  00246E  0E01               	movlw	1
  5766  002470  6E06               	movwf	___awmod@sign^0,c
  5767  002472                     l4064:
  5768  002472  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  5769  002474  EF40  F012         	goto	u3150
  5770  002478  EF3E  F012         	goto	u3151
  5771  00247C                     u3151:
  5772  00247C  EF44  F012         	goto	l4068
  5773  002480                     u3150:
  5774  002480  6C03               	negf	___awmod@divisor^0,c
  5775  002482  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5776  002484  B0D8               	btfsc	status,0,c
  5777  002486  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5778  002488                     l4068:
  5779  002488  5003               	movf	___awmod@divisor^0,w,c
  5780  00248A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5781  00248C  B4D8               	btfsc	status,2,c
  5782  00248E  EF4B  F012         	goto	u3161
  5783  002492  EF4D  F012         	goto	u3160
  5784  002496                     u3161:
  5785  002496  EF71  F012         	goto	l4084
  5786  00249A                     u3160:
  5787  00249A  0E01               	movlw	1
  5788  00249C  6E05               	movwf	___awmod@counter^0,c
  5789  00249E  EF55  F012         	goto	l4074
  5790  0024A2                     l4072:
  5791  0024A2  90D8               	bcf	status,0,c
  5792  0024A4  3603               	rlcf	___awmod@divisor^0,f,c
  5793  0024A6  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5794  0024A8  2A05               	incf	___awmod@counter^0,f,c
  5795  0024AA                     l4074:
  5796  0024AA  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5797  0024AC  EF5A  F012         	goto	u3171
  5798  0024B0  EF5C  F012         	goto	u3170
  5799  0024B4                     u3171:
  5800  0024B4  EF51  F012         	goto	l4072
  5801  0024B8                     u3170:
  5802  0024B8                     l4076:
  5803  0024B8  5003               	movf	___awmod@divisor^0,w,c
  5804  0024BA  5C01               	subwf	___awmod@dividend^0,w,c
  5805  0024BC  5004               	movf	(___awmod@divisor+1)^0,w,c
  5806  0024BE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5807  0024C0  A0D8               	btfss	status,0,c
  5808  0024C2  EF65  F012         	goto	u3181
  5809  0024C6  EF67  F012         	goto	u3180
  5810  0024CA                     u3181:
  5811  0024CA  EF6B  F012         	goto	l4080
  5812  0024CE                     u3180:
  5813  0024CE  5003               	movf	___awmod@divisor^0,w,c
  5814  0024D0  5E01               	subwf	___awmod@dividend^0,f,c
  5815  0024D2  5004               	movf	(___awmod@divisor+1)^0,w,c
  5816  0024D4  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5817  0024D6                     l4080:
  5818  0024D6  90D8               	bcf	status,0,c
  5819  0024D8  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5820  0024DA  3203               	rrcf	___awmod@divisor^0,f,c
  5821  0024DC  2E05               	decfsz	___awmod@counter^0,f,c
  5822  0024DE  EF5C  F012         	goto	l4076
  5823  0024E2                     l4084:
  5824  0024E2  5006               	movf	___awmod@sign^0,w,c
  5825  0024E4  B4D8               	btfsc	status,2,c
  5826  0024E6  EF77  F012         	goto	u3191
  5827  0024EA  EF79  F012         	goto	u3190
  5828  0024EE                     u3191:
  5829  0024EE  EF7D  F012         	goto	l4088
  5830  0024F2                     u3190:
  5831  0024F2  6C01               	negf	___awmod@dividend^0,c
  5832  0024F4  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5833  0024F6  B0D8               	btfsc	status,0,c
  5834  0024F8  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5835  0024FA                     l4088:
  5836  0024FA  C001  F001         	movff	___awmod@dividend,?___awmod
  5837  0024FE  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5838  002502  0012               	return		;funcret
  5839  002504                     __end_of___awmod:
  5840                           	opt callstack 0
  5841                           
  5842 ;; *************** function ___awdiv *****************
  5843 ;; Defined at:
  5844 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5845 ;; Parameters:    Size  Location     Type
  5846 ;;  dividend        2    0[COMRAM] int 
  5847 ;;  divisor         2    2[COMRAM] int 
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;  quotient        2    6[COMRAM] int 
  5850 ;;  sign            1    5[COMRAM] unsigned char 
  5851 ;;  counter         1    4[COMRAM] unsigned char 
  5852 ;; Return value:  Size  Location     Type
  5853 ;;                  2    0[COMRAM] int 
  5854 ;; Registers used:
  5855 ;;		wreg, status,2, status,0
  5856 ;; Tracked objects:
  5857 ;;		On entry : 0/0
  5858 ;;		On exit  : 0/0
  5859 ;;		Unchanged: 0/0
  5860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5861 ;;      Params:         4       0       0       0       0       0       0       0       0
  5862 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5863 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5864 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5865 ;;Total ram usage:        8 bytes
  5866 ;; Hardware stack levels used:    1
  5867 ;; Hardware stack levels required when called:    1
  5868 ;; This function calls:
  5869 ;;		Nothing
  5870 ;; This function is called by:
  5871 ;;		_setRtc
  5872 ;; This function uses a non-reentrant model
  5873 ;;
  5874                           
  5875                           	psect	text34
  5876  002216                     __ptext34:
  5877                           	opt callstack 0
  5878  002216                     ___awdiv:
  5879                           	opt callstack 26
  5880  002216  0E00               	movlw	0
  5881  002218  6E06               	movwf	___awdiv@sign^0,c
  5882  00221A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  5883  00221C  EF14  F011         	goto	u3080
  5884  002220  EF12  F011         	goto	u3081
  5885  002224                     u3081:
  5886  002224  EF1A  F011         	goto	l4020
  5887  002228                     u3080:
  5888  002228  6C03               	negf	___awdiv@divisor^0,c
  5889  00222A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5890  00222C  B0D8               	btfsc	status,0,c
  5891  00222E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5892  002230  0E01               	movlw	1
  5893  002232  6E06               	movwf	___awdiv@sign^0,c
  5894  002234                     l4020:
  5895  002234  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  5896  002236  EF21  F011         	goto	u3090
  5897  00223A  EF1F  F011         	goto	u3091
  5898  00223E                     u3091:
  5899  00223E  EF27  F011         	goto	l4026
  5900  002242                     u3090:
  5901  002242  6C01               	negf	___awdiv@dividend^0,c
  5902  002244  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5903  002246  B0D8               	btfsc	status,0,c
  5904  002248  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5905  00224A  0E01               	movlw	1
  5906  00224C  1A06               	xorwf	___awdiv@sign^0,f,c
  5907  00224E                     l4026:
  5908  00224E  0E00               	movlw	0
  5909  002250  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5910  002252  0E00               	movlw	0
  5911  002254  6E07               	movwf	___awdiv@quotient^0,c
  5912  002256  5003               	movf	___awdiv@divisor^0,w,c
  5913  002258  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5914  00225A  B4D8               	btfsc	status,2,c
  5915  00225C  EF32  F011         	goto	u3101
  5916  002260  EF34  F011         	goto	u3100
  5917  002264                     u3101:
  5918  002264  EF5C  F011         	goto	l4048
  5919  002268                     u3100:
  5920  002268  0E01               	movlw	1
  5921  00226A  6E05               	movwf	___awdiv@counter^0,c
  5922  00226C  EF3C  F011         	goto	l4034
  5923  002270                     l4032:
  5924  002270  90D8               	bcf	status,0,c
  5925  002272  3603               	rlcf	___awdiv@divisor^0,f,c
  5926  002274  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5927  002276  2A05               	incf	___awdiv@counter^0,f,c
  5928  002278                     l4034:
  5929  002278  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5930  00227A  EF41  F011         	goto	u3111
  5931  00227E  EF43  F011         	goto	u3110
  5932  002282                     u3111:
  5933  002282  EF38  F011         	goto	l4032
  5934  002286                     u3110:
  5935  002286                     l4036:
  5936  002286  90D8               	bcf	status,0,c
  5937  002288  3607               	rlcf	___awdiv@quotient^0,f,c
  5938  00228A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5939  00228C  5003               	movf	___awdiv@divisor^0,w,c
  5940  00228E  5C01               	subwf	___awdiv@dividend^0,w,c
  5941  002290  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5942  002292  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5943  002294  A0D8               	btfss	status,0,c
  5944  002296  EF4F  F011         	goto	u3121
  5945  00229A  EF51  F011         	goto	u3120
  5946  00229E                     u3121:
  5947  00229E  EF56  F011         	goto	l4044
  5948  0022A2                     u3120:
  5949  0022A2  5003               	movf	___awdiv@divisor^0,w,c
  5950  0022A4  5E01               	subwf	___awdiv@dividend^0,f,c
  5951  0022A6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5952  0022A8  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5953  0022AA  8007               	bsf	___awdiv@quotient^0,0,c
  5954  0022AC                     l4044:
  5955  0022AC  90D8               	bcf	status,0,c
  5956  0022AE  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5957  0022B0  3203               	rrcf	___awdiv@divisor^0,f,c
  5958  0022B2  2E05               	decfsz	___awdiv@counter^0,f,c
  5959  0022B4  EF43  F011         	goto	l4036
  5960  0022B8                     l4048:
  5961  0022B8  5006               	movf	___awdiv@sign^0,w,c
  5962  0022BA  B4D8               	btfsc	status,2,c
  5963  0022BC  EF62  F011         	goto	u3131
  5964  0022C0  EF64  F011         	goto	u3130
  5965  0022C4                     u3131:
  5966  0022C4  EF68  F011         	goto	l4052
  5967  0022C8                     u3130:
  5968  0022C8  6C07               	negf	___awdiv@quotient^0,c
  5969  0022CA  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5970  0022CC  B0D8               	btfsc	status,0,c
  5971  0022CE  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5972  0022D0                     l4052:
  5973  0022D0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5974  0022D4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5975  0022D8  0012               	return		;funcret
  5976  0022DA                     __end_of___awdiv:
  5977                           	opt callstack 0
  5978                           
  5979 ;; *************** function _dameDatosSistema *****************
  5980 ;; Defined at:
  5981 ;;		line 708 in file "main.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;		None
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;  i               2   66[BANK0 ] int 
  5986 ;;  bufferHorari   30   28[BANK0 ] unsigned char [30]
  5987 ;; Return value:  Size  Location     Type
  5988 ;;                  1    wreg      void 
  5989 ;; Registers used:
  5990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5991 ;; Tracked objects:
  5992 ;;		On entry : 0/0
  5993 ;;		On exit  : 0/0
  5994 ;;		Unchanged: 0/0
  5995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5996 ;;      Params:         0       0       0       0       0       0       0       0       0
  5997 ;;      Locals:         0      40       0       0       0       0       0       0       0
  5998 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5999 ;;      Totals:         2      40       0       0       0       0       0       0       0
  6000 ;;Total ram usage:       42 bytes
  6001 ;; Hardware stack levels used:    1
  6002 ;; Hardware stack levels required when called:    9
  6003 ;; This function calls:
  6004 ;;		_UART_printf
  6005 ;;		_UART_write
  6006 ;;		___wmul
  6007 ;;		_limpiarBuffer
  6008 ;;		_sprintf
  6009 ;; This function is called by:
  6010 ;;		_sistemaPrincipal
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014                           	psect	text35
  6015  000594                     __ptext35:
  6016                           	opt callstack 0
  6017  000594                     _dameDatosSistema:
  6018                           	opt callstack 20
  6019  000594                     
  6020                           ;main.c: 710:     char bufferHorario[30];;main.c: 714:     UART_printf("\r\nH = HORA\r\n
      +                          ");
  6021  000594  0EDD               	movlw	low STR_12
  6022  000596  6E02               	movwf	UART_printf@cadena^0,c
  6023  000598  0E7F               	movlw	high STR_12
  6024  00059A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6025  00059C  EC24  F015         	call	_UART_printf	;wreg free
  6026                           
  6027                           ;main.c: 715:     UART_printf("\r\nR = REGAR( 1 SI | 0 NO)\r\n");
  6028  0005A0  0E78               	movlw	low STR_13
  6029  0005A2  6E02               	movwf	UART_printf@cadena^0,c
  6030  0005A4  0E7E               	movlw	high STR_13
  6031  0005A6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6032  0005A8  EC24  F015         	call	_UART_printf	;wreg free
  6033                           
  6034                           ;main.c: 716:     UART_printf("\r\nT = MINUTOS QUE DURARA EL RIEGO\r\n");
  6035  0005AC  0ED5               	movlw	low STR_14
  6036  0005AE  6E02               	movwf	UART_printf@cadena^0,c
  6037  0005B0  0E7D               	movlw	high STR_14
  6038  0005B2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6039  0005B4  EC24  F015         	call	_UART_printf	;wreg free
  6040                           
  6041                           ;main.c: 717:     UART_printf("\r\nD = DIAS QUE EN LOS QUE SE REGARA\r\n");
  6042  0005B8  0E41               	movlw	low STR_15
  6043  0005BA  6E02               	movwf	UART_printf@cadena^0,c
  6044  0005BC  0E7D               	movlw	high STR_15
  6045  0005BE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6046  0005C0  EC24  F015         	call	_UART_printf	;wreg free
  6047                           
  6048                           ;main.c: 719:     UART_printf("                DLMIJVS\r\n");
  6049  0005C4  0EE4               	movlw	low STR_16
  6050  0005C6  6E02               	movwf	UART_printf@cadena^0,c
  6051  0005C8  0E7E               	movlw	high STR_16
  6052  0005CA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6053  0005CC  EC24  F015         	call	_UART_printf	;wreg free
  6054  0005D0                     
  6055                           ;main.c: 722:     for (int i = 0; i < 24; i++) {
  6056  0005D0  0E00               	movlw	0
  6057  0005D2  0100               	movlb	0	; () banked
  6058  0005D4  6FF0               	movwf	(dameDatosSistema@i+1)& (0+255),b
  6059  0005D6  0E00               	movlw	0
  6060  0005D8  6FEF               	movwf	dameDatosSistema@i& (0+255),b
  6061  0005DA                     l4472:
  6062                           
  6063                           ; BSR set to: 0
  6064                           ;main.c: 724:         if (horarios[i].regar) {
  6065  0005DA  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6066  0005DE  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6067  0005E2  0E00               	movlw	0
  6068  0005E4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6069  0005E6  0E0C               	movlw	12
  6070  0005E8  6E03               	movwf	___wmul@multiplicand^0,c
  6071  0005EA  EC08  F018         	call	___wmul	;wreg free
  6072  0005EE  0E3B               	movlw	low (_horarios+9)
  6073  0005F0  2401               	addwf	?___wmul^0,w,c
  6074  0005F2  6ED9               	movwf	fsr2l,c
  6075  0005F4  0E01               	movlw	high (_horarios+9)
  6076  0005F6  2002               	addwfc	(?___wmul+1)^0,w,c
  6077  0005F8  6EDA               	movwf	fsr2h,c
  6078  0005FA  50DF               	movf	indf2,w,c
  6079  0005FC  B4D8               	btfsc	status,2,c
  6080  0005FE  EF03  F003         	goto	u3581
  6081  000602  EF05  F003         	goto	u3580
  6082  000606                     u3581:
  6083  000606  EF78  F003         	goto	l4482
  6084  00060A                     u3580:
  6085  00060A                     
  6086                           ;main.c: 726:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  6087  00060A  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6088  00060E  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6089  000612  0E00               	movlw	0
  6090  000614  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6091  000616  0E0C               	movlw	12
  6092  000618  6E03               	movwf	___wmul@multiplicand^0,c
  6093  00061A  EC08  F018         	call	___wmul	;wreg free
  6094  00061E  0E32               	movlw	low _horarios
  6095  000620  2401               	addwf	?___wmul^0,w,c
  6096  000622  6ED9               	movwf	fsr2l,c
  6097  000624  0E01               	movlw	high _horarios
  6098  000626  2002               	addwfc	(?___wmul+1)^0,w,c
  6099  000628  6EDA               	movwf	fsr2h,c
  6100  00062A  50DF               	movf	indf2,w,c
  6101  00062C  6E5D               	movwf	??_dameDatosSistema^0,c
  6102  00062E  505D               	movf	??_dameDatosSistema^0,w,c
  6103  000630  0100               	movlb	0	; () banked
  6104  000632  6FE7               	movwf	_dameDatosSistema$1895& (0+255),b
  6105  000634  6BE8               	clrf	(_dameDatosSistema$1895+1)& (0+255),b
  6106                           
  6107                           ;main.c: 726:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  6108  000636  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6109  00063A  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6110  00063E  0E00               	movlw	0
  6111  000640  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6112  000642  0E0C               	movlw	12
  6113  000644  6E03               	movwf	___wmul@multiplicand^0,c
  6114  000646  EC08  F018         	call	___wmul	;wreg free
  6115  00064A  0E3B               	movlw	low (_horarios+9)
  6116  00064C  2401               	addwf	?___wmul^0,w,c
  6117  00064E  6ED9               	movwf	fsr2l,c
  6118  000650  0E01               	movlw	high (_horarios+9)
  6119  000652  2002               	addwfc	(?___wmul+1)^0,w,c
  6120  000654  6EDA               	movwf	fsr2h,c
  6121  000656  50DF               	movf	indf2,w,c
  6122  000658  6E5D               	movwf	??_dameDatosSistema^0,c
  6123  00065A  505D               	movf	??_dameDatosSistema^0,w,c
  6124  00065C  0100               	movlb	0	; () banked
  6125  00065E  6FE9               	movwf	_dameDatosSistema$1896& (0+255),b
  6126  000660  6BEA               	clrf	(_dameDatosSistema$1896+1)& (0+255),b
  6127                           
  6128                           ;main.c: 726:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  6129  000662  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6130  000666  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6131  00066A  0E00               	movlw	0
  6132  00066C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6133  00066E  0E0C               	movlw	12
  6134  000670  6E03               	movwf	___wmul@multiplicand^0,c
  6135  000672  EC08  F018         	call	___wmul	;wreg free
  6136  000676  0E3D               	movlw	low (_horarios+11)
  6137  000678  2401               	addwf	?___wmul^0,w,c
  6138  00067A  6ED9               	movwf	fsr2l,c
  6139  00067C  0E01               	movlw	high (_horarios+11)
  6140  00067E  2002               	addwfc	(?___wmul+1)^0,w,c
  6141  000680  6EDA               	movwf	fsr2h,c
  6142  000682  50DF               	movf	indf2,w,c
  6143  000684  6E5D               	movwf	??_dameDatosSistema^0,c
  6144  000686  505D               	movf	??_dameDatosSistema^0,w,c
  6145  000688  0100               	movlb	0	; () banked
  6146  00068A  6FEB               	movwf	_dameDatosSistema$1897& (0+255),b
  6147  00068C  6BEC               	clrf	(_dameDatosSistema$1897+1)& (0+255),b
  6148  00068E                     
  6149                           ; BSR set to: 0
  6150                           ;main.c: 726:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  6151  00068E  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6152  000692  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6153  000696  0E00               	movlw	0
  6154  000698  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6155  00069A  0E0C               	movlw	12
  6156  00069C  6E03               	movwf	___wmul@multiplicand^0,c
  6157  00069E  EC08  F018         	call	___wmul	;wreg free
  6158  0006A2  0E33               	movlw	low (_horarios+1)
  6159  0006A4  2401               	addwf	?___wmul^0,w,c
  6160  0006A6  0100               	movlb	0	; () banked
  6161  0006A8  6FED               	movwf	_dameDatosSistema$1898& (0+255),b
  6162  0006AA  0E01               	movlw	high (_horarios+1)
  6163  0006AC  2002               	addwfc	(?___wmul+1)^0,w,c
  6164  0006AE  6FEE               	movwf	(_dameDatosSistema$1898+1)& (0+255),b
  6165  0006B0                     
  6166                           ; BSR set to: 0
  6167                           ;main.c: 726:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  6168  0006B0  0EC9               	movlw	low dameDatosSistema@bufferHorario
  6169  0006B2  6FB3               	movwf	sprintf@s& (0+255),b
  6170  0006B4  0E00               	movlw	high dameDatosSistema@bufferHorario
  6171  0006B6  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  6172  0006B8  0E78               	movlw	low STR_17
  6173  0006BA  6FB5               	movwf	sprintf@fmt& (0+255),b
  6174  0006BC  0E7F               	movlw	high STR_17
  6175  0006BE  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  6176  0006C0  C0E7  F0B7         	movff	_dameDatosSistema$1895,?_sprintf+4
  6177  0006C4  C0E8  F0B8         	movff	_dameDatosSistema$1895+1,?_sprintf+5
  6178  0006C8  C0E9  F0B9         	movff	_dameDatosSistema$1896,?_sprintf+6
  6179  0006CC  C0EA  F0BA         	movff	_dameDatosSistema$1896+1,?_sprintf+7
  6180  0006D0  C0EB  F0BB         	movff	_dameDatosSistema$1897,?_sprintf+8
  6181  0006D4  C0EC  F0BC         	movff	_dameDatosSistema$1897+1,?_sprintf+9
  6182  0006D8  C0ED  F0BD         	movff	_dameDatosSistema$1898,?_sprintf+10
  6183  0006DC  C0EE  F0BE         	movff	_dameDatosSistema$1898+1,?_sprintf+11
  6184  0006E0  EC05  F016         	call	_sprintf	;wreg free
  6185  0006E4                     
  6186                           ;main.c: 730:             UART_printf(bufferHorario);
  6187  0006E4  0EC9               	movlw	low dameDatosSistema@bufferHorario
  6188  0006E6  6E02               	movwf	UART_printf@cadena^0,c
  6189  0006E8  0E00               	movlw	high dameDatosSistema@bufferHorario
  6190  0006EA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6191  0006EC  EC24  F015         	call	_UART_printf	;wreg free
  6192  0006F0                     l4482:
  6193                           
  6194                           ;main.c: 734:     }
  6195  0006F0  0100               	movlb	0	; () banked
  6196  0006F2  4BEF               	infsnz	dameDatosSistema@i& (0+255),f,b
  6197  0006F4  2BF0               	incf	(dameDatosSistema@i+1)& (0+255),f,b
  6198  0006F6                     
  6199                           ; BSR set to: 0
  6200  0006F6  BFF0               	btfsc	(dameDatosSistema@i+1)& (0+255),7,b
  6201  0006F8  EF87  F003         	goto	u3591
  6202  0006FC  51F0               	movf	(dameDatosSistema@i+1)& (0+255),w,b
  6203  0006FE  E109               	bnz	u3590
  6204  000700  0E18               	movlw	24
  6205  000702  5DEF               	subwf	dameDatosSistema@i& (0+255),w,b
  6206  000704  A0D8               	btfss	status,0,c
  6207  000706  EF87  F003         	goto	u3591
  6208  00070A  EF89  F003         	goto	u3590
  6209  00070E                     u3591:
  6210  00070E  EFED  F002         	goto	l4472
  6211  000712                     u3590:
  6212  000712                     
  6213                           ; BSR set to: 0
  6214                           ;main.c: 736:     limpiarBuffer();
  6215  000712  EC03  F017         	call	_limpiarBuffer	;wreg free
  6216                           
  6217                           ;main.c: 738:     switch (diaActual) {
  6218  000716  EF0B  F004         	goto	l4504
  6219  00071A                     l4488:
  6220                           
  6221                           ; BSR set to: 0
  6222                           ;main.c: 740:             sprintf(buffer, "\r\n%0.2d:%0.2d| DOMINGO\r\n", hora, minutos)
      +                          ;
  6223  00071A  0E00               	movlw	low _buffer
  6224  00071C  6FB3               	movwf	sprintf@s& (0+255),b
  6225  00071E  0E01               	movlw	high _buffer
  6226  000720  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  6227  000722  0EFE               	movlw	low STR_18
  6228  000724  6FB5               	movwf	sprintf@fmt& (0+255),b
  6229  000726  0E7E               	movlw	high STR_18
  6230  000728  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  6231  00072A  C087  F0B7         	movff	_hora,?_sprintf+4
  6232  00072E  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  6233  000730  C086  F0B9         	movff	_minutos,?_sprintf+6
  6234  000734  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  6235  000736  EC05  F016         	call	_sprintf	;wreg free
  6236                           
  6237                           ;main.c: 741:             break;
  6238  00073A  EF35  F004         	goto	l4506
  6239  00073E                     l4490:
  6240                           
  6241                           ; BSR set to: 0
  6242                           ;main.c: 744:             sprintf(buffer, "\r\n%0.2d:%0.2d| LUNES\r\n", hora, minutos);
  6243  00073E  0E00               	movlw	low _buffer
  6244  000740  6FB3               	movwf	sprintf@s& (0+255),b
  6245  000742  0E01               	movlw	high _buffer
  6246  000744  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  6247  000746  0EA7               	movlw	low STR_19
  6248  000748  6FB5               	movwf	sprintf@fmt& (0+255),b
  6249  00074A  0E7F               	movlw	high STR_19
  6250  00074C  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  6251  00074E  C087  F0B7         	movff	_hora,?_sprintf+4
  6252  000752  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  6253  000754  C086  F0B9         	movff	_minutos,?_sprintf+6
  6254  000758  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  6255  00075A  EC05  F016         	call	_sprintf	;wreg free
  6256                           
  6257                           ;main.c: 745:             break;
  6258  00075E  EF35  F004         	goto	l4506
  6259  000762                     l4492:
  6260                           
  6261                           ; BSR set to: 0
  6262                           ;main.c: 748:             sprintf(buffer, "\r\n%0.2d:%0.2d| MARTES\r\n", hora, minutos);
  6263  000762  0E00               	movlw	low _buffer
  6264  000764  6FB3               	movwf	sprintf@s& (0+255),b
  6265  000766  0E01               	movlw	high _buffer
  6266  000768  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  6267  00076A  0E48               	movlw	low STR_20
  6268  00076C  6FB5               	movwf	sprintf@fmt& (0+255),b
  6269  00076E  0E7F               	movlw	high STR_20
  6270  000770  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  6271  000772  C087  F0B7         	movff	_hora,?_sprintf+4
  6272  000776  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  6273  000778  C086  F0B9         	movff	_minutos,?_sprintf+6
  6274  00077C  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  6275  00077E  EC05  F016         	call	_sprintf	;wreg free
  6276                           
  6277                           ;main.c: 749:             break;
  6278  000782  EF35  F004         	goto	l4506
  6279  000786                     l4494:
  6280                           
  6281                           ; BSR set to: 0
  6282                           ;main.c: 752:             sprintf(buffer, "\r\n%0.2d:%0.2d| MIERCOLES\r\n", hora, minuto
      +                          s);
  6283  000786  0E00               	movlw	low _buffer
  6284  000788  6FB3               	movwf	sprintf@s& (0+255),b
  6285  00078A  0E01               	movlw	high _buffer
  6286  00078C  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  6287  00078E  0EAF               	movlw	low STR_21
  6288  000790  6FB5               	movwf	sprintf@fmt& (0+255),b
  6289  000792  0E7E               	movlw	high STR_21
  6290  000794  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  6291  000796  C087  F0B7         	movff	_hora,?_sprintf+4
  6292  00079A  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  6293  00079C  C086  F0B9         	movff	_minutos,?_sprintf+6
  6294  0007A0  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  6295  0007A2  EC05  F016         	call	_sprintf	;wreg free
  6296                           
  6297                           ;main.c: 753:             break;
  6298  0007A6  EF35  F004         	goto	l4506
  6299  0007AA                     l4496:
  6300                           
  6301                           ; BSR set to: 0
  6302                           ;main.c: 756:             sprintf(buffer, "\r\n%0.2d:%0.2d| JUEVES\r\n", hora, minutos);
  6303  0007AA  0E00               	movlw	low _buffer
  6304  0007AC  6FB3               	movwf	sprintf@s& (0+255),b
  6305  0007AE  0E01               	movlw	high _buffer
  6306  0007B0  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  6307  0007B2  0E60               	movlw	low STR_22
  6308  0007B4  6FB5               	movwf	sprintf@fmt& (0+255),b
  6309  0007B6  0E7F               	movlw	high STR_22
  6310  0007B8  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  6311  0007BA  C087  F0B7         	movff	_hora,?_sprintf+4
  6312  0007BE  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  6313  0007C0  C086  F0B9         	movff	_minutos,?_sprintf+6
  6314  0007C4  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  6315  0007C6  EC05  F016         	call	_sprintf	;wreg free
  6316                           
  6317                           ;main.c: 757:             break;
  6318  0007CA  EF35  F004         	goto	l4506
  6319  0007CE                     l4498:
  6320                           
  6321                           ; BSR set to: 0
  6322                           ;main.c: 760:             sprintf(buffer, "\r\n%0.2d:%0.2d| VIERNES\r\n", hora, minutos)
      +                          ;
  6323  0007CE  0E00               	movlw	low _buffer
  6324  0007D0  6FB3               	movwf	sprintf@s& (0+255),b
  6325  0007D2  0E01               	movlw	high _buffer
  6326  0007D4  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  6327  0007D6  0E17               	movlw	low STR_23
  6328  0007D8  6FB5               	movwf	sprintf@fmt& (0+255),b
  6329  0007DA  0E7F               	movlw	high STR_23
  6330  0007DC  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  6331  0007DE  C087  F0B7         	movff	_hora,?_sprintf+4
  6332  0007E2  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  6333  0007E4  C086  F0B9         	movff	_minutos,?_sprintf+6
  6334  0007E8  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  6335  0007EA  EC05  F016         	call	_sprintf	;wreg free
  6336                           
  6337                           ;main.c: 761:             break;
  6338  0007EE  EF35  F004         	goto	l4506
  6339  0007F2                     l4500:
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;main.c: 764:             sprintf(buffer, "\r\n%0.2d:%0.2d| SABADO\r\n", hora, minutos);
  6343  0007F2  0E00               	movlw	low _buffer
  6344  0007F4  6FB3               	movwf	sprintf@s& (0+255),b
  6345  0007F6  0E01               	movlw	high _buffer
  6346  0007F8  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  6347  0007FA  0E30               	movlw	low STR_24
  6348  0007FC  6FB5               	movwf	sprintf@fmt& (0+255),b
  6349  0007FE  0E7F               	movlw	high STR_24
  6350  000800  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  6351  000802  C087  F0B7         	movff	_hora,?_sprintf+4
  6352  000806  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  6353  000808  C086  F0B9         	movff	_minutos,?_sprintf+6
  6354  00080C  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  6355  00080E  EC05  F016         	call	_sprintf	;wreg free
  6356                           
  6357                           ;main.c: 765:             break;
  6358  000812  EF35  F004         	goto	l4506
  6359  000816                     l4504:
  6360  000816  0100               	movlb	0	; () banked
  6361  000818  5184               	movf	_diaActual& (0+255),w,b
  6362  00081A  6E5D               	movwf	??_dameDatosSistema^0,c
  6363  00081C  6A5E               	clrf	(??_dameDatosSistema+1)^0,c
  6364                           
  6365                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6366                           ; Switch size 1, requested type "simple"
  6367                           ; Number of cases is 1, Range of values is 0 to 0
  6368                           ; switch strategies available:
  6369                           ; Name         Instructions Cycles
  6370                           ; simple_byte            4     3 (average)
  6371                           ;	Chosen strategy is simple_byte
  6372  00081E  505E               	movf	(??_dameDatosSistema+1)^0,w,c
  6373  000820  0A00               	xorlw	0	; case 0
  6374  000822  B4D8               	btfsc	status,2,c
  6375  000824  EF16  F004         	goto	l5054
  6376  000828  EF35  F004         	goto	l4506
  6377  00082C                     l5054:
  6378                           
  6379                           ; BSR set to: 0
  6380                           ; Switch size 1, requested type "simple"
  6381                           ; Number of cases is 7, Range of values is 1 to 7
  6382                           ; switch strategies available:
  6383                           ; Name         Instructions Cycles
  6384                           ; simple_byte           22    12 (average)
  6385                           ;	Chosen strategy is simple_byte
  6386  00082C  505D               	movf	??_dameDatosSistema^0,w,c
  6387  00082E  0A01               	xorlw	1	; case 1
  6388  000830  B4D8               	btfsc	status,2,c
  6389  000832  EF8D  F003         	goto	l4488
  6390  000836  0A03               	xorlw	3	; case 2
  6391  000838  B4D8               	btfsc	status,2,c
  6392  00083A  EF9F  F003         	goto	l4490
  6393  00083E  0A01               	xorlw	1	; case 3
  6394  000840  B4D8               	btfsc	status,2,c
  6395  000842  EFB1  F003         	goto	l4492
  6396  000846  0A07               	xorlw	7	; case 4
  6397  000848  B4D8               	btfsc	status,2,c
  6398  00084A  EFC3  F003         	goto	l4494
  6399  00084E  0A01               	xorlw	1	; case 5
  6400  000850  B4D8               	btfsc	status,2,c
  6401  000852  EFD5  F003         	goto	l4496
  6402  000856  0A03               	xorlw	3	; case 6
  6403  000858  B4D8               	btfsc	status,2,c
  6404  00085A  EFE7  F003         	goto	l4498
  6405  00085E  0A01               	xorlw	1	; case 7
  6406  000860  B4D8               	btfsc	status,2,c
  6407  000862  EFF9  F003         	goto	l4500
  6408  000866  EF35  F004         	goto	l4506
  6409  00086A                     l4506:
  6410                           
  6411                           ;main.c: 772:     UART_printf(buffer);
  6412  00086A  0E00               	movlw	low _buffer
  6413  00086C  6E02               	movwf	UART_printf@cadena^0,c
  6414  00086E  0E01               	movlw	high _buffer
  6415  000870  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6416  000872  EC24  F015         	call	_UART_printf	;wreg free
  6417  000876                     
  6418                           ;main.c: 774:     UART_write('&');
  6419  000876  0E26               	movlw	38
  6420  000878  EC66  F018         	call	_UART_write
  6421  00087C  0012               	return		;funcret
  6422  00087E                     __end_of_dameDatosSistema:
  6423                           	opt callstack 0
  6424                           
  6425 ;; *************** function _sprintf *****************
  6426 ;; Defined at:
  6427 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;  s               2    6[BANK0 ] PTR unsigned char 
  6430 ;;		 -> buffer(50), dameDatosSistema@bufferHorario(30), 
  6431 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  6432 ;;		 -> STR_30(45), STR_29(29), STR_28(32), STR_27(45), 
  6433 ;;		 -> STR_26(29), STR_25(32), STR_24(24), STR_23(25), 
  6434 ;;		 -> STR_22(24), STR_21(27), STR_20(24), STR_19(23), 
  6435 ;;		 -> STR_18(25), STR_17(24), 
  6436 ;; Auto vars:     Size  Location     Type
  6437 ;;  f               6   22[BANK0 ] struct _IO_FILE
  6438 ;;  ap              2   20[BANK0 ] PTR void [1]
  6439 ;;		 -> ?_sprintf(2), 
  6440 ;;  ret             2    0        int 
  6441 ;; Return value:  Size  Location     Type
  6442 ;;                  2    6[BANK0 ] int 
  6443 ;; Registers used:
  6444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6450 ;;      Params:         0      12       0       0       0       0       0       0       0
  6451 ;;      Locals:         0      10       0       0       0       0       0       0       0
  6452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6453 ;;      Totals:         0      22       0       0       0       0       0       0       0
  6454 ;;Total ram usage:       22 bytes
  6455 ;; Hardware stack levels used:    1
  6456 ;; Hardware stack levels required when called:    8
  6457 ;; This function calls:
  6458 ;;		_vfprintf
  6459 ;; This function is called by:
  6460 ;;		_dameDatosSistema
  6461 ;;		_mostrarDatosSensores
  6462 ;;		_mostrarDatosSensoresWIFI
  6463 ;; This function uses a non-reentrant model
  6464 ;;
  6465                           
  6466                           	psect	text36
  6467  002C0A                     __ptext36:
  6468                           	opt callstack 0
  6469  002C0A                     _sprintf:
  6470                           	opt callstack 20
  6471  002C0A  0EB7               	movlw	low (?_sprintf+4)
  6472  002C0C  0100               	movlb	0	; () banked
  6473  002C0E  6FC1               	movwf	sprintf@ap& (0+255),b
  6474  002C10  0E00               	movlw	high (?_sprintf+4)
  6475  002C12  6FC2               	movwf	(sprintf@ap+1)& (0+255),b
  6476  002C14  C0B3  F0C3         	movff	sprintf@s,sprintf@f
  6477  002C18  C0B4  F0C4         	movff	sprintf@s+1,sprintf@f+1
  6478  002C1C                     
  6479                           ; BSR set to: 0
  6480  002C1C  0E00               	movlw	0
  6481  002C1E  6FC6               	movwf	(sprintf@f+3)& (0+255),b
  6482  002C20  0E00               	movlw	0
  6483  002C22  6FC5               	movwf	(sprintf@f+2)& (0+255),b
  6484  002C24                     
  6485                           ; BSR set to: 0
  6486  002C24  0E00               	movlw	0
  6487  002C26  6FC8               	movwf	(sprintf@f+5)& (0+255),b
  6488  002C28  0E00               	movlw	0
  6489  002C2A  6FC7               	movwf	(sprintf@f+4)& (0+255),b
  6490  002C2C                     
  6491                           ; BSR set to: 0
  6492  002C2C  0EC3               	movlw	low sprintf@f
  6493  002C2E  6FAD               	movwf	vfprintf@fp& (0+255),b
  6494  002C30  0E00               	movlw	high sprintf@f
  6495  002C32  6FAE               	movwf	(vfprintf@fp+1)& (0+255),b
  6496  002C34  C0B5  F0AF         	movff	sprintf@fmt,vfprintf@fmt
  6497  002C38  C0B6  F0B0         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6498  002C3C  0EC1               	movlw	low sprintf@ap
  6499  002C3E  6FB1               	movwf	vfprintf@ap& (0+255),b
  6500  002C40  0E00               	movlw	high sprintf@ap
  6501  002C42  6FB2               	movwf	(vfprintf@ap+1)& (0+255),b
  6502  002C44  ECC2  F014         	call	_vfprintf	;wreg free
  6503  002C48  0100               	movlb	0	; () banked
  6504  002C4A  51C5               	movf	(sprintf@f+2)& (0+255),w,b
  6505  002C4C  25B3               	addwf	sprintf@s& (0+255),w,b
  6506  002C4E  6ED9               	movwf	fsr2l,c
  6507  002C50  51C6               	movf	(sprintf@f+3)& (0+255),w,b
  6508  002C52  21B4               	addwfc	(sprintf@s+1)& (0+255),w,b
  6509  002C54  6EDA               	movwf	fsr2h,c
  6510  002C56  0E00               	movlw	0
  6511  002C58  6EDF               	movwf	indf2,c
  6512  002C5A                     
  6513                           ; BSR set to: 0
  6514  002C5A  0012               	return		;funcret
  6515  002C5C                     __end_of_sprintf:
  6516                           	opt callstack 0
  6517                           
  6518 ;; *************** function _vfprintf *****************
  6519 ;; Defined at:
  6520 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6521 ;; Parameters:    Size  Location     Type
  6522 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  6523 ;;		 -> sprintf@f(6), 
  6524 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  6525 ;;		 -> STR_30(45), STR_29(29), STR_28(32), STR_27(45), 
  6526 ;;		 -> STR_26(29), STR_25(32), STR_24(24), STR_23(25), 
  6527 ;;		 -> STR_22(24), STR_21(27), STR_20(24), STR_19(23), 
  6528 ;;		 -> STR_18(25), STR_17(24), 
  6529 ;;  ap              2    4[BANK0 ] PTR PTR void 
  6530 ;;		 -> sprintf@ap(2), 
  6531 ;; Auto vars:     Size  Location     Type
  6532 ;;  cfmt            2   90[COMRAM] PTR unsigned char 
  6533 ;;		 -> STR_30(45), STR_29(29), STR_28(32), STR_27(45), 
  6534 ;;		 -> STR_26(29), STR_25(32), STR_24(24), STR_23(25), 
  6535 ;;		 -> STR_22(24), STR_21(27), STR_20(24), STR_19(23), 
  6536 ;;		 -> STR_18(25), STR_17(24), 
  6537 ;; Return value:  Size  Location     Type
  6538 ;;                  2    0[BANK0 ] int 
  6539 ;; Registers used:
  6540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6541 ;; Tracked objects:
  6542 ;;		On entry : 0/0
  6543 ;;		On exit  : 0/0
  6544 ;;		Unchanged: 0/0
  6545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6546 ;;      Params:         0       6       0       0       0       0       0       0       0
  6547 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6548 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6549 ;;      Totals:         2       6       0       0       0       0       0       0       0
  6550 ;;Total ram usage:        8 bytes
  6551 ;; Hardware stack levels used:    1
  6552 ;; Hardware stack levels required when called:    7
  6553 ;; This function calls:
  6554 ;;		_vfpfcnvrt
  6555 ;; This function is called by:
  6556 ;;		_sprintf
  6557 ;; This function uses a non-reentrant model
  6558 ;;
  6559                           
  6560                           	psect	text37
  6561  002984                     __ptext37:
  6562                           	opt callstack 0
  6563  002984                     _vfprintf:
  6564                           	opt callstack 20
  6565  002984                     
  6566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6567  002984  C0AF  F05B         	movff	vfprintf@fmt,vfprintf@cfmt
  6568  002988  C0B0  F05C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6569  00298C                     
  6570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  6571  00298C  0E00               	movlw	0
  6572  00298E  0100               	movlb	0	; () banked
  6573  002990  6F71               	movwf	(_nout+1)& (0+255),b
  6574  002992  0E00               	movlw	0
  6575  002994  6F70               	movwf	_nout& (0+255),b
  6576                           
  6577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6578  002996  EFE0  F014         	goto	l4010
  6579  00299A                     l4008:
  6580                           
  6581                           ; BSR set to: 0
  6582                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  6583  00299A  C0AD  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  6584  00299E  C0AE  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6585  0029A2  0E5B               	movlw	low vfprintf@cfmt
  6586  0029A4  6E42               	movwf	vfpfcnvrt@fmt^0,c
  6587  0029A6  0E00               	movlw	high vfprintf@cfmt
  6588  0029A8  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  6589  0029AA  C0B1  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  6590  0029AE  C0B2  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6591  0029B2  EC09  F000         	call	_vfpfcnvrt	;wreg free
  6592  0029B6  5040               	movf	?_vfpfcnvrt^0,w,c
  6593  0029B8  0100               	movlb	0	; () banked
  6594  0029BA  2770               	addwf	_nout& (0+255),f,b
  6595  0029BC  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  6596  0029BE  2371               	addwfc	(_nout+1)& (0+255),f,b
  6597  0029C0                     l4010:
  6598                           
  6599                           ; BSR set to: 0
  6600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6601  0029C0  C05B  FFF6         	movff	vfprintf@cfmt,tblptrl
  6602  0029C4  C05C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6603  0029C8                     	if	0	;tblptru may be non-zero
  6604  0029C8                     	endif
  6605  0029C8                     	if	0	;tblptru may be non-zero
  6606  0029C8                     	endif
  6607  0029C8  0008               	tblrd		*
  6608  0029CA  50F5               	movf	tablat,w,c
  6609  0029CC  0900               	iorlw	0
  6610  0029CE  A4D8               	btfss	status,2,c
  6611  0029D0  EFEC  F014         	goto	u3071
  6612  0029D4  EFEE  F014         	goto	u3070
  6613  0029D8                     u3071:
  6614  0029D8  EFCD  F014         	goto	l4008
  6615  0029DC                     u3070:
  6616  0029DC                     
  6617                           ; BSR set to: 0
  6618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  6619  0029DC  C070  F0AD         	movff	_nout,?_vfprintf
  6620  0029E0  C071  F0AE         	movff	_nout+1,?_vfprintf+1
  6621  0029E4                     
  6622                           ; BSR set to: 0
  6623  0029E4  0012               	return		;funcret
  6624  0029E6                     __end_of_vfprintf:
  6625                           	opt callstack 0
  6626                           
  6627 ;; *************** function _vfpfcnvrt *****************
  6628 ;; Defined at:
  6629 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  6632 ;;		 -> sprintf@f(6), 
  6633 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  6634 ;;		 -> vfprintf@cfmt(2), 
  6635 ;;  ap              2   67[COMRAM] PTR PTR void 
  6636 ;;		 -> sprintf@ap(2), 
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;  ll              8   73[COMRAM] long long 
  6639 ;;  llu             8    0        unsigned long long 
  6640 ;;  f               4    0        unsigned long long 
  6641 ;;  vp              3    0        PTR void 
  6642 ;;  ct              3    0        unsigned char [3]
  6643 ;;  done            2   83[COMRAM] int 
  6644 ;;  cp              2   81[COMRAM] PTR unsigned char 
  6645 ;;		 -> ?_sprintf(2), horarios(288), 
  6646 ;;  i               2    0        int 
  6647 ;;  c               1   89[COMRAM] unsigned char 
  6648 ;; Return value:  Size  Location     Type
  6649 ;;                  2   63[COMRAM] int 
  6650 ;; Registers used:
  6651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6652 ;; Tracked objects:
  6653 ;;		On entry : 0/0
  6654 ;;		On exit  : 0/0
  6655 ;;		Unchanged: 0/0
  6656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6657 ;;      Params:         6       0       0       0       0       0       0       0       0
  6658 ;;      Locals:        17       0       0       0       0       0       0       0       0
  6659 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6660 ;;      Totals:        27       0       0       0       0       0       0       0       0
  6661 ;;Total ram usage:       27 bytes
  6662 ;; Hardware stack levels used:    1
  6663 ;; Hardware stack levels required when called:    6
  6664 ;; This function calls:
  6665 ;;		_atoi
  6666 ;;		_ctoa
  6667 ;;		_dtoa
  6668 ;;		_fputc
  6669 ;;		_isdigit
  6670 ;;		_stoa
  6671 ;; This function is called by:
  6672 ;;		_vfprintf
  6673 ;; This function uses a non-reentrant model
  6674 ;;
  6675                           
  6676                           	psect	text38
  6677  000012                     __ptext38:
  6678                           	opt callstack 0
  6679  000012                     _vfpfcnvrt:
  6680                           	opt callstack 20
  6681  000012                     
  6682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6683  000012  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6684  000016  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6685  00001A  CFDE FFF6          	movff	postinc2,tblptrl
  6686  00001E  CFDD FFF7          	movff	postdec2,tblptrh
  6687  000022                     	if	0	;tblptru may be non-zero
  6688  000022                     	endif
  6689  000022                     	if	0	;tblptru may be non-zero
  6690  000022                     	endif
  6691  000022  0008               	tblrd		*
  6692  000024  50F5               	movf	tablat,w,c
  6693  000026  0A25               	xorlw	37
  6694  000028  A4D8               	btfss	status,2,c
  6695  00002A  EF19  F000         	goto	u2661
  6696  00002E  EF1B  F000         	goto	u2660
  6697  000032                     u2661:
  6698  000032  EFAE  F002         	goto	l3744
  6699  000036                     u2660:
  6700  000036                     
  6701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6702  000036  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6703  00003A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6704  00003E  2ADE               	incf	postinc2,f,c
  6705  000040  0E00               	movlw	0
  6706  000042  22DD               	addwfc	postdec2,f,c
  6707  000044                     
  6708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6709  000044  0E00               	movlw	0
  6710  000046  0100               	movlb	0	; () banked
  6711  000048  6F73               	movwf	(_width+1)& (0+255),b
  6712  00004A  0E00               	movlw	0
  6713  00004C  6F72               	movwf	_width& (0+255),b
  6714  00004E  C072  F076         	movff	_width,_flags
  6715  000052  C073  F077         	movff	_width+1,_flags+1
  6716  000056                     
  6717                           ; BSR set to: 0
  6718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6719  000056  6974               	setf	_prec& (0+255),b
  6720  000058  6975               	setf	(_prec+1)& (0+255),b
  6721  00005A                     
  6722                           ; BSR set to: 0
  6723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  6724  00005A  0E00               	movlw	0
  6725  00005C  6E55               	movwf	(vfpfcnvrt@done+1)^0,c
  6726  00005E  0E00               	movlw	0
  6727  000060  6E54               	movwf	vfpfcnvrt@done^0,c
  6728                           
  6729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6730  000062  EF7E  F000         	goto	l3660
  6731  000066                     l3634:
  6732                           
  6733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  6734  000066  0100               	movlb	0	; () banked
  6735  000068  8176               	bsf	_flags& (0+255),0,b
  6736  00006A                     l3636:
  6737                           
  6738                           ; BSR set to: 0
  6739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  6740  00006A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6741  00006E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6742  000072  2ADE               	incf	postinc2,f,c
  6743  000074  0E00               	movlw	0
  6744  000076  22DD               	addwfc	postdec2,f,c
  6745                           
  6746                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  6747  000078  EF7E  F000         	goto	l3660
  6748  00007C                     l3638:
  6749                           
  6750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  6751  00007C  0100               	movlb	0	; () banked
  6752  00007E  8376               	bsf	_flags& (0+255),1,b
  6753  000080  EF35  F000         	goto	l3636
  6754  000084                     l3642:
  6755                           
  6756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  6757  000084  0100               	movlb	0	; () banked
  6758  000086  8576               	bsf	_flags& (0+255),2,b
  6759  000088  EF35  F000         	goto	l3636
  6760  00008C                     l3646:
  6761                           
  6762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  6763  00008C  0100               	movlb	0	; () banked
  6764  00008E  8776               	bsf	_flags& (0+255),3,b
  6765  000090  EF35  F000         	goto	l3636
  6766  000094                     l3650:
  6767                           
  6768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  6769  000094  0100               	movlb	0	; () banked
  6770  000096  8976               	bsf	_flags& (0+255),4,b
  6771  000098  EF35  F000         	goto	l3636
  6772  00009C                     l3654:
  6773                           
  6774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  6775  00009C  0E00               	movlw	0
  6776  00009E  6E55               	movwf	(vfpfcnvrt@done+1)^0,c
  6777  0000A0  0E01               	movlw	1
  6778  0000A2  6E54               	movwf	vfpfcnvrt@done^0,c
  6779                           
  6780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  6781  0000A4  EF7E  F000         	goto	l3660
  6782  0000A8                     l3658:
  6783  0000A8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6784  0000AC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6785  0000B0  CFDE FFF6          	movff	postinc2,tblptrl
  6786  0000B4  CFDD FFF7          	movff	postdec2,tblptrh
  6787  0000B8                     	if	0	;tblptru may be non-zero
  6788  0000B8                     	endif
  6789  0000B8                     	if	0	;tblptru may be non-zero
  6790  0000B8                     	endif
  6791  0000B8  0008               	tblrd		*
  6792  0000BA  50F5               	movf	tablat,w,c
  6793  0000BC  6E46               	movwf	??_vfpfcnvrt^0,c
  6794  0000BE  6A47               	clrf	(??_vfpfcnvrt+1)^0,c
  6795                           
  6796                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6797                           ; Switch size 1, requested type "simple"
  6798                           ; Number of cases is 1, Range of values is 0 to 0
  6799                           ; switch strategies available:
  6800                           ; Name         Instructions Cycles
  6801                           ; simple_byte            4     3 (average)
  6802                           ;	Chosen strategy is simple_byte
  6803  0000C0  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  6804  0000C2  0A00               	xorlw	0	; case 0
  6805  0000C4  B4D8               	btfsc	status,2,c
  6806  0000C6  EF67  F000         	goto	l5056
  6807  0000CA  EF4E  F000         	goto	l3654
  6808  0000CE                     l5056:
  6809                           
  6810                           ; Switch size 1, requested type "simple"
  6811                           ; Number of cases is 5, Range of values is 32 to 48
  6812                           ; switch strategies available:
  6813                           ; Name         Instructions Cycles
  6814                           ; simple_byte           16     9 (average)
  6815                           ;	Chosen strategy is simple_byte
  6816  0000CE  5046               	movf	??_vfpfcnvrt^0,w,c
  6817  0000D0  0A20               	xorlw	32	; case 32
  6818  0000D2  B4D8               	btfsc	status,2,c
  6819  0000D4  EF46  F000         	goto	l3646
  6820  0000D8  0A03               	xorlw	3	; case 35
  6821  0000DA  B4D8               	btfsc	status,2,c
  6822  0000DC  EF4A  F000         	goto	l3650
  6823  0000E0  0A08               	xorlw	8	; case 43
  6824  0000E2  B4D8               	btfsc	status,2,c
  6825  0000E4  EF42  F000         	goto	l3642
  6826  0000E8  0A06               	xorlw	6	; case 45
  6827  0000EA  B4D8               	btfsc	status,2,c
  6828  0000EC  EF33  F000         	goto	l3634
  6829  0000F0  0A1D               	xorlw	29	; case 48
  6830  0000F2  B4D8               	btfsc	status,2,c
  6831  0000F4  EF3E  F000         	goto	l3638
  6832  0000F8  EF4E  F000         	goto	l3654
  6833  0000FC                     l3660:
  6834                           
  6835                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6836  0000FC  5054               	movf	vfpfcnvrt@done^0,w,c
  6837  0000FE  1055               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  6838  000100  B4D8               	btfsc	status,2,c
  6839  000102  EF85  F000         	goto	u2671
  6840  000106  EF87  F000         	goto	u2670
  6841  00010A                     u2671:
  6842  00010A  EF54  F000         	goto	l3658
  6843  00010E                     u2670:
  6844  00010E                     
  6845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  6846  00010E  0100               	movlb	0	; () banked
  6847  000110  A176               	btfss	_flags& (0+255),0,b
  6848  000112  EF8D  F000         	goto	u2681
  6849  000116  EF8F  F000         	goto	u2680
  6850  00011A                     u2681:
  6851  00011A  EF90  F000         	goto	l3664
  6852  00011E                     u2680:
  6853  00011E                     
  6854                           ; BSR set to: 0
  6855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  6856  00011E  9376               	bcf	_flags& (0+255),1,b
  6857  000120                     l3664:
  6858                           
  6859                           ; BSR set to: 0
  6860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  6861  000120  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6862  000124  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6863  000128  CFDE FFF6          	movff	postinc2,tblptrl
  6864  00012C  CFDD FFF7          	movff	postdec2,tblptrh
  6865  000130                     	if	0	;tblptru may be non-zero
  6866  000130                     	endif
  6867  000130                     	if	0	;tblptru may be non-zero
  6868  000130                     	endif
  6869  000130  0008               	tblrd		*
  6870  000132  50F5               	movf	tablat,w,c
  6871  000134  0A2A               	xorlw	42
  6872  000136  A4D8               	btfss	status,2,c
  6873  000138  EFA0  F000         	goto	u2691
  6874  00013C  EFA2  F000         	goto	u2690
  6875  000140                     u2691:
  6876  000140  EFCB  F000         	goto	l3672
  6877  000144                     u2690:
  6878  000144                     
  6879                           ; BSR set to: 0
  6880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  6881  000144  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6882  000148  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6883  00014C  2ADE               	incf	postinc2,f,c
  6884  00014E  0E00               	movlw	0
  6885  000150  22DD               	addwfc	postdec2,f,c
  6886                           
  6887                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6888  000152  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6889  000156  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6890  00015A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  6891  00015E  0E02               	movlw	2
  6892  000160  26DE               	addwf	postinc2,f,c
  6893  000162  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  6894  000166  0E00               	movlw	0
  6895  000168  22DD               	addwfc	postdec2,f,c
  6896  00016A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6897  00016E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6898  000172  CFDE F072          	movff	postinc2,_width
  6899  000176  CFDD F073          	movff	postdec2,_width+1
  6900  00017A                     
  6901                           ; BSR set to: 0
  6902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  6903  00017A  BF73               	btfsc	(_width+1)& (0+255),7,b
  6904  00017C  EFC4  F000         	goto	u2700
  6905  000180  EFC2  F000         	goto	u2701
  6906  000184                     u2701:
  6907  000184  EF0E  F001         	goto	l3682
  6908  000188                     u2700:
  6909  000188                     
  6910                           ; BSR set to: 0
  6911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  6912  000188  8176               	bsf	_flags& (0+255),0,b
  6913                           
  6914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  6915  00018A  6D72               	negf	_width& (0+255),b
  6916  00018C  1F73               	comf	(_width+1)& (0+255),f,b
  6917  00018E  B0D8               	btfsc	status,0,c
  6918  000190  2B73               	incf	(_width+1)& (0+255),f,b
  6919  000192  EF0E  F001         	goto	l3682
  6920  000196                     l3672:
  6921                           
  6922                           ; BSR set to: 0
  6923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  6924  000196  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6925  00019A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6926  00019E  CFDE F008          	movff	postinc2,atoi@s
  6927  0001A2  CFDD F009          	movff	postdec2,atoi@s+1
  6928  0001A6  ECF1  F007         	call	_atoi	;wreg free
  6929  0001AA  C008  F072         	movff	?_atoi,_width
  6930  0001AE  C009  F073         	movff	?_atoi+1,_width+1
  6931                           
  6932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6933  0001B2  EFE2  F000         	goto	l3676
  6934  0001B6                     l3674:
  6935                           
  6936                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  6937  0001B6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6938  0001BA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6939  0001BE  2ADE               	incf	postinc2,f,c
  6940  0001C0  0E00               	movlw	0
  6941  0001C2  22DD               	addwfc	postdec2,f,c
  6942  0001C4                     l3676:
  6943  0001C4  0ED0               	movlw	208
  6944  0001C6  6E46               	movwf	??_vfpfcnvrt^0,c
  6945  0001C8  0EFF               	movlw	255
  6946  0001CA  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  6947  0001CC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6948  0001D0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6949  0001D4  CFDE FFF6          	movff	postinc2,tblptrl
  6950  0001D8  CFDD FFF7          	movff	postdec2,tblptrh
  6951  0001DC                     	if	0	;tblptru may be non-zero
  6952  0001DC                     	endif
  6953  0001DC                     	if	0	;tblptru may be non-zero
  6954  0001DC                     	endif
  6955  0001DC  0008               	tblrd		*
  6956  0001DE  50F5               	movf	tablat,w,c
  6957  0001E0  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  6958  0001E2  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  6959  0001E4  5046               	movf	??_vfpfcnvrt^0,w,c
  6960  0001E6  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  6961  0001E8  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  6962  0001EA  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  6963  0001EC  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  6964  0001EE  E10A               	bnz	u2710
  6965  0001F0  0E0A               	movlw	10
  6966  0001F2  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  6967  0001F4  A0D8               	btfss	status,0,c
  6968  0001F6  EFFF  F000         	goto	u2711
  6969  0001FA  EF02  F001         	goto	u2710
  6970  0001FE                     u2711:
  6971  0001FE  0E01               	movlw	1
  6972  000200  EF03  F001         	goto	u2720
  6973  000204                     u2710:
  6974  000204  0E00               	movlw	0
  6975  000206                     u2720:
  6976  000206  6E56               	movwf	_vfpfcnvrt$1082^0,c
  6977  000208  6A57               	clrf	(_vfpfcnvrt$1082+1)^0,c
  6978  00020A  5056               	movf	_vfpfcnvrt$1082^0,w,c
  6979  00020C  1057               	iorwf	(_vfpfcnvrt$1082+1)^0,w,c
  6980  00020E  A4D8               	btfss	status,2,c
  6981  000210  EF0C  F001         	goto	u2731
  6982  000214  EF0E  F001         	goto	u2730
  6983  000218                     u2731:
  6984  000218  EFDB  F000         	goto	l3674
  6985  00021C                     u2730:
  6986  00021C                     l3682:
  6987                           
  6988                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  6989  00021C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6990  000220  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6991  000224  CFDE FFF6          	movff	postinc2,tblptrl
  6992  000228  CFDD FFF7          	movff	postdec2,tblptrh
  6993  00022C                     	if	0	;tblptru may be non-zero
  6994  00022C                     	endif
  6995  00022C                     	if	0	;tblptru may be non-zero
  6996  00022C                     	endif
  6997  00022C  0008               	tblrd		*
  6998  00022E  50F5               	movf	tablat,w,c
  6999  000230  0A2E               	xorlw	46
  7000  000232  A4D8               	btfss	status,2,c
  7001  000234  EF1E  F001         	goto	u2741
  7002  000238  EF20  F001         	goto	u2740
  7003  00023C                     u2741:
  7004  00023C  EF9E  F001         	goto	l3702
  7005  000240                     u2740:
  7006  000240                     
  7007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  7008  000240  0E00               	movlw	0
  7009  000242  0100               	movlb	0	; () banked
  7010  000244  6F75               	movwf	(_prec+1)& (0+255),b
  7011  000246  0E00               	movlw	0
  7012  000248  6F74               	movwf	_prec& (0+255),b
  7013  00024A                     
  7014                           ; BSR set to: 0
  7015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  7016  00024A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7017  00024E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7018  000252  2ADE               	incf	postinc2,f,c
  7019  000254  0E00               	movlw	0
  7020  000256  22DD               	addwfc	postdec2,f,c
  7021  000258                     
  7022                           ; BSR set to: 0
  7023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  7024  000258  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7025  00025C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7026  000260  CFDE FFF6          	movff	postinc2,tblptrl
  7027  000264  CFDD FFF7          	movff	postdec2,tblptrh
  7028  000268                     	if	0	;tblptru may be non-zero
  7029  000268                     	endif
  7030  000268                     	if	0	;tblptru may be non-zero
  7031  000268                     	endif
  7032  000268  0008               	tblrd		*
  7033  00026A  50F5               	movf	tablat,w,c
  7034  00026C  0A2A               	xorlw	42
  7035  00026E  A4D8               	btfss	status,2,c
  7036  000270  EF3C  F001         	goto	u2751
  7037  000274  EF3E  F001         	goto	u2750
  7038  000278                     u2751:
  7039  000278  EF5B  F001         	goto	l3692
  7040  00027C                     u2750:
  7041  00027C                     
  7042                           ; BSR set to: 0
  7043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  7044  00027C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7045  000280  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7046  000284  2ADE               	incf	postinc2,f,c
  7047  000286  0E00               	movlw	0
  7048  000288  22DD               	addwfc	postdec2,f,c
  7049                           
  7050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  7051  00028A  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7052  00028E  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7053  000292  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7054  000296  0E02               	movlw	2
  7055  000298  26DE               	addwf	postinc2,f,c
  7056  00029A  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7057  00029E  0E00               	movlw	0
  7058  0002A0  22DD               	addwfc	postdec2,f,c
  7059  0002A2  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7060  0002A6  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7061  0002AA  CFDE F074          	movff	postinc2,_prec
  7062  0002AE  CFDD F075          	movff	postdec2,_prec+1
  7063                           
  7064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  7065  0002B2  EF9E  F001         	goto	l3702
  7066  0002B6                     l3692:
  7067                           
  7068                           ; BSR set to: 0
  7069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  7070  0002B6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7071  0002BA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7072  0002BE  CFDE F008          	movff	postinc2,atoi@s
  7073  0002C2  CFDD F009          	movff	postdec2,atoi@s+1
  7074  0002C6  ECF1  F007         	call	_atoi	;wreg free
  7075  0002CA  C008  F074         	movff	?_atoi,_prec
  7076  0002CE  C009  F075         	movff	?_atoi+1,_prec+1
  7077                           
  7078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7079  0002D2  EF72  F001         	goto	l3696
  7080  0002D6                     l3694:
  7081                           
  7082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  7083  0002D6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7084  0002DA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7085  0002DE  2ADE               	incf	postinc2,f,c
  7086  0002E0  0E00               	movlw	0
  7087  0002E2  22DD               	addwfc	postdec2,f,c
  7088  0002E4                     l3696:
  7089  0002E4  0ED0               	movlw	208
  7090  0002E6  6E46               	movwf	??_vfpfcnvrt^0,c
  7091  0002E8  0EFF               	movlw	255
  7092  0002EA  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  7093  0002EC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7094  0002F0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7095  0002F4  CFDE FFF6          	movff	postinc2,tblptrl
  7096  0002F8  CFDD FFF7          	movff	postdec2,tblptrh
  7097  0002FC                     	if	0	;tblptru may be non-zero
  7098  0002FC                     	endif
  7099  0002FC                     	if	0	;tblptru may be non-zero
  7100  0002FC                     	endif
  7101  0002FC  0008               	tblrd		*
  7102  0002FE  50F5               	movf	tablat,w,c
  7103  000300  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  7104  000302  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  7105  000304  5046               	movf	??_vfpfcnvrt^0,w,c
  7106  000306  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  7107  000308  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  7108  00030A  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  7109  00030C  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  7110  00030E  E10A               	bnz	u2760
  7111  000310  0E0A               	movlw	10
  7112  000312  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  7113  000314  A0D8               	btfss	status,0,c
  7114  000316  EF8F  F001         	goto	u2761
  7115  00031A  EF92  F001         	goto	u2760
  7116  00031E                     u2761:
  7117  00031E  0E01               	movlw	1
  7118  000320  EF93  F001         	goto	u2770
  7119  000324                     u2760:
  7120  000324  0E00               	movlw	0
  7121  000326                     u2770:
  7122  000326  6E58               	movwf	_vfpfcnvrt$1083^0,c
  7123  000328  6A59               	clrf	(_vfpfcnvrt$1083+1)^0,c
  7124  00032A  5058               	movf	_vfpfcnvrt$1083^0,w,c
  7125  00032C  1059               	iorwf	(_vfpfcnvrt$1083+1)^0,w,c
  7126  00032E  A4D8               	btfss	status,2,c
  7127  000330  EF9C  F001         	goto	u2781
  7128  000334  EF9E  F001         	goto	u2780
  7129  000338                     u2781:
  7130  000338  EF6B  F001         	goto	l3694
  7131  00033C                     u2780:
  7132  00033C                     l3702:
  7133                           
  7134                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  7135  00033C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7136  000340  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7137  000344  CFDE FFF6          	movff	postinc2,tblptrl
  7138  000348  CFDD FFF7          	movff	postdec2,tblptrh
  7139  00034C                     	if	0	;tblptru may be non-zero
  7140  00034C                     	endif
  7141  00034C                     	if	0	;tblptru may be non-zero
  7142  00034C                     	endif
  7143  00034C  0008               	tblrd		*
  7144  00034E  50F5               	movf	tablat,w,c
  7145  000350  0A63               	xorlw	99
  7146  000352  A4D8               	btfss	status,2,c
  7147  000354  EFAE  F001         	goto	u2791
  7148  000358  EFB0  F001         	goto	u2790
  7149  00035C                     u2791:
  7150  00035C  EFD7  F001         	goto	l3710
  7151  000360                     u2790:
  7152  000360                     
  7153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  7154  000360  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7155  000364  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7156  000368  2ADE               	incf	postinc2,f,c
  7157  00036A  0E00               	movlw	0
  7158  00036C  22DD               	addwfc	postdec2,f,c
  7159                           
  7160                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7161  00036E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7162  000372  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7163  000376  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7164  00037A  0E02               	movlw	2
  7165  00037C  26DE               	addwf	postinc2,f,c
  7166  00037E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7167  000382  0E00               	movlw	0
  7168  000384  22DD               	addwfc	postdec2,f,c
  7169  000386  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7170  00038A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7171  00038E  50DF               	movf	indf2,w,c
  7172  000390  6E5A               	movwf	vfpfcnvrt@c^0,c
  7173  000392                     
  7174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  7175  000392  C040  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  7176  000396  C041  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  7177  00039A  C05A  F01E         	movff	vfpfcnvrt@c,ctoa@c
  7178  00039E  ECAE  F015         	call	_ctoa	;wreg free
  7179  0003A2  C01C  F040         	movff	?_ctoa,?_vfpfcnvrt
  7180  0003A6  C01D  F041         	movff	?_ctoa+1,?_vfpfcnvrt+1
  7181  0003AA  EFC9  F002         	goto	l625
  7182  0003AE                     l3710:
  7183                           
  7184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7185  0003AE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7186  0003B2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7187  0003B6  CFDE FFF6          	movff	postinc2,tblptrl
  7188  0003BA  CFDD FFF7          	movff	postdec2,tblptrh
  7189  0003BE                     	if	0	;tblptru may be non-zero
  7190  0003BE                     	endif
  7191  0003BE                     	if	0	;tblptru may be non-zero
  7192  0003BE                     	endif
  7193  0003BE  0008               	tblrd		*
  7194  0003C0  50F5               	movf	tablat,w,c
  7195  0003C2  0A64               	xorlw	100
  7196  0003C4  B4D8               	btfsc	status,2,c
  7197  0003C6  EFE7  F001         	goto	u2801
  7198  0003CA  EFE9  F001         	goto	u2800
  7199  0003CE                     u2801:
  7200  0003CE  EFFB  F001         	goto	l3714
  7201  0003D2                     u2800:
  7202  0003D2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7203  0003D6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7204  0003DA  CFDE FFF6          	movff	postinc2,tblptrl
  7205  0003DE  CFDD FFF7          	movff	postdec2,tblptrh
  7206  0003E2                     	if	0	;tblptru may be non-zero
  7207  0003E2                     	endif
  7208  0003E2                     	if	0	;tblptru may be non-zero
  7209  0003E2                     	endif
  7210  0003E2  0008               	tblrd		*
  7211  0003E4  50F5               	movf	tablat,w,c
  7212  0003E6  0A69               	xorlw	105
  7213  0003E8  A4D8               	btfss	status,2,c
  7214  0003EA  EFF9  F001         	goto	u2811
  7215  0003EE  EFFB  F001         	goto	u2810
  7216  0003F2                     u2811:
  7217  0003F2  EF3B  F002         	goto	l3720
  7218  0003F6                     u2810:
  7219  0003F6                     l3714:
  7220                           
  7221                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  7222  0003F6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7223  0003FA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7224  0003FE  2ADE               	incf	postinc2,f,c
  7225  000400  0E00               	movlw	0
  7226  000402  22DD               	addwfc	postdec2,f,c
  7227                           
  7228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7229  000404  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7230  000408  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7231  00040C  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7232  000410  0E02               	movlw	2
  7233  000412  26DE               	addwf	postinc2,f,c
  7234  000414  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7235  000418  0E00               	movlw	0
  7236  00041A  22DD               	addwfc	postdec2,f,c
  7237  00041C  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7238  000420  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7239  000424  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  7240  000428  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  7241  00042C  0E00               	movlw	0
  7242  00042E  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  7243  000430  0EFF               	movlw	-1
  7244  000432  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  7245  000434  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  7246  000436  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  7247  000438  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  7248  00043A  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  7249  00043C  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  7250  00043E                     
  7251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  7252  00043E  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  7253  000442  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7254  000446  C04A  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  7255  00044A  C04B  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7256  00044E  C04C  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7257  000452  C04D  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7258  000456  C04E  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7259  00045A  C04F  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7260  00045E  C050  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7261  000462  C051  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7262  000466  EC3F  F004         	call	_dtoa	;wreg free
  7263  00046A  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  7264  00046E  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7265  000472  EFC9  F002         	goto	l625
  7266  000476                     l3720:
  7267                           
  7268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  7269  000476  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7270  00047A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7271  00047E  CFDE FFF6          	movff	postinc2,tblptrl
  7272  000482  CFDD FFF7          	movff	postdec2,tblptrh
  7273  000486                     	if	0	;tblptru may be non-zero
  7274  000486                     	endif
  7275  000486                     	if	0	;tblptru may be non-zero
  7276  000486                     	endif
  7277  000486  0008               	tblrd		*
  7278  000488  50F5               	movf	tablat,w,c
  7279  00048A  0A73               	xorlw	115
  7280  00048C  A4D8               	btfss	status,2,c
  7281  00048E  EF4B  F002         	goto	u2821
  7282  000492  EF4D  F002         	goto	u2820
  7283  000496                     u2821:
  7284  000496  EF78  F002         	goto	l3728
  7285  00049A                     u2820:
  7286  00049A                     
  7287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  7288  00049A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7289  00049E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7290  0004A2  2ADE               	incf	postinc2,f,c
  7291  0004A4  0E00               	movlw	0
  7292  0004A6  22DD               	addwfc	postdec2,f,c
  7293                           
  7294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  7295  0004A8  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7296  0004AC  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7297  0004B0  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7298  0004B4  0E02               	movlw	2
  7299  0004B6  26DE               	addwf	postinc2,f,c
  7300  0004B8  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7301  0004BC  0E00               	movlw	0
  7302  0004BE  22DD               	addwfc	postdec2,f,c
  7303  0004C0  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7304  0004C4  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7305  0004C8  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  7306  0004CC  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  7307  0004D0                     
  7308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  7309  0004D0  C040  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  7310  0004D4  C041  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  7311  0004D8  C052  F00C         	movff	vfpfcnvrt@cp,stoa@s
  7312  0004DC  C053  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  7313  0004E0  EC7D  F009         	call	_stoa	;wreg free
  7314  0004E4  C00A  F040         	movff	?_stoa,?_vfpfcnvrt
  7315  0004E8  C00B  F041         	movff	?_stoa+1,?_vfpfcnvrt+1
  7316  0004EC  EFC9  F002         	goto	l625
  7317  0004F0                     l3728:
  7318                           
  7319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  7320  0004F0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7321  0004F4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7322  0004F8  CFDE FFF6          	movff	postinc2,tblptrl
  7323  0004FC  CFDD FFF7          	movff	postdec2,tblptrh
  7324  000500                     	if	0	;tblptru may be non-zero
  7325  000500                     	endif
  7326  000500                     	if	0	;tblptru may be non-zero
  7327  000500                     	endif
  7328  000500  0008               	tblrd		*
  7329  000502  50F5               	movf	tablat,w,c
  7330  000504  0A25               	xorlw	37
  7331  000506  A4D8               	btfss	status,2,c
  7332  000508  EF88  F002         	goto	u2831
  7333  00050C  EF8A  F002         	goto	u2830
  7334  000510                     u2831:
  7335  000510  EFA1  F002         	goto	l3738
  7336  000514                     u2830:
  7337  000514                     
  7338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  7339  000514  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7340  000518  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7341  00051C  2ADE               	incf	postinc2,f,c
  7342  00051E  0E00               	movlw	0
  7343  000520  22DD               	addwfc	postdec2,f,c
  7344  000522                     
  7345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  7346  000522  0E00               	movlw	0
  7347  000524  6E02               	movwf	(fputc@c+1)^0,c
  7348  000526  0E25               	movlw	37
  7349  000528  6E01               	movwf	fputc@c^0,c
  7350  00052A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7351  00052E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7352  000532  EC43  F010         	call	_fputc	;wreg free
  7353  000536                     l3734:
  7354                           
  7355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  7356  000536  0E00               	movlw	0
  7357  000538  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  7358  00053A  0E01               	movlw	1
  7359  00053C  6E40               	movwf	?_vfpfcnvrt^0,c
  7360  00053E  EFC9  F002         	goto	l625
  7361  000542                     l3738:
  7362                           
  7363                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  7364  000542  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7365  000546  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7366  00054A  2ADE               	incf	postinc2,f,c
  7367  00054C  0E00               	movlw	0
  7368  00054E  22DD               	addwfc	postdec2,f,c
  7369  000550                     
  7370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  7371  000550  0E00               	movlw	0
  7372  000552  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  7373  000554  0E00               	movlw	0
  7374  000556  6E40               	movwf	?_vfpfcnvrt^0,c
  7375  000558  EFC9  F002         	goto	l625
  7376  00055C                     l3744:
  7377                           
  7378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  7379  00055C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7380  000560  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7381  000564  CFDE FFF6          	movff	postinc2,tblptrl
  7382  000568  CFDD FFF7          	movff	postdec2,tblptrh
  7383  00056C                     	if	0	;tblptru may be non-zero
  7384  00056C                     	endif
  7385  00056C                     	if	0	;tblptru may be non-zero
  7386  00056C                     	endif
  7387  00056C  0008               	tblrd		*
  7388  00056E  50F5               	movf	tablat,w,c
  7389  000570  6E01               	movwf	fputc@c^0,c
  7390  000572  6A02               	clrf	(fputc@c+1)^0,c
  7391  000574  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7392  000578  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7393  00057C  EC43  F010         	call	_fputc	;wreg free
  7394  000580                     
  7395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  7396  000580  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7397  000584  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7398  000588  2ADE               	incf	postinc2,f,c
  7399  00058A  0E00               	movlw	0
  7400  00058C  22DD               	addwfc	postdec2,f,c
  7401  00058E  EF9B  F002         	goto	l3734
  7402  000592                     l625:
  7403  000592  0012               	return		;funcret
  7404  000594                     __end_of_vfpfcnvrt:
  7405                           	opt callstack 0
  7406                           
  7407 ;; *************** function _stoa *****************
  7408 ;; Defined at:
  7409 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  7412 ;;		 -> sprintf@f(6), 
  7413 ;;  s               2   11[COMRAM] PTR unsigned char 
  7414 ;;		 -> ?_sprintf(2), horarios(288), 
  7415 ;; Auto vars:     Size  Location     Type
  7416 ;;  nuls            7   14[COMRAM] unsigned char [7]
  7417 ;;  l               2   29[COMRAM] int 
  7418 ;;  p               2   27[COMRAM] int 
  7419 ;;  cp              2   25[COMRAM] PTR unsigned char 
  7420 ;;		 -> ?_sprintf(2), stoa@nuls(7), horarios(288), 
  7421 ;;  w               2   23[COMRAM] int 
  7422 ;;  i               2   21[COMRAM] int 
  7423 ;; Return value:  Size  Location     Type
  7424 ;;                  2    9[COMRAM] int 
  7425 ;; Registers used:
  7426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7427 ;; Tracked objects:
  7428 ;;		On entry : 0/0
  7429 ;;		On exit  : 0/0
  7430 ;;		Unchanged: 0/0
  7431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7432 ;;      Params:         4       0       0       0       0       0       0       0       0
  7433 ;;      Locals:        17       0       0       0       0       0       0       0       0
  7434 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7435 ;;      Totals:        22       0       0       0       0       0       0       0       0
  7436 ;;Total ram usage:       22 bytes
  7437 ;; Hardware stack levels used:    1
  7438 ;; Hardware stack levels required when called:    3
  7439 ;; This function calls:
  7440 ;;		_fputc
  7441 ;;		_strlen
  7442 ;; This function is called by:
  7443 ;;		_vfpfcnvrt
  7444 ;; This function uses a non-reentrant model
  7445 ;;
  7446                           
  7447                           	psect	text39
  7448  0012FA                     __ptext39:
  7449                           	opt callstack 0
  7450  0012FA                     _stoa:
  7451                           	opt callstack 22
  7452  0012FA                     
  7453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7454  0012FA  EE20  F0F4         	lfsr	2,stoa@F1144
  7455  0012FE  EE10  F00F         	lfsr	1,stoa@nuls
  7456  001302  0E06               	movlw	6
  7457  001304                     u2401:
  7458  001304  CFDB FFE3          	movff	plusw2,plusw1
  7459  001308  06E8               	decf	wreg,f,c
  7460  00130A  E2FC               	bc	u2401
  7461  00130C                     
  7462                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  7463  00130C  C00C  F01A         	movff	stoa@s,stoa@cp
  7464  001310  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  7465  001314                     
  7466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  7467  001314  501A               	movf	stoa@cp^0,w,c
  7468  001316  101B               	iorwf	(stoa@cp+1)^0,w,c
  7469  001318  A4D8               	btfss	status,2,c
  7470  00131A  EF91  F009         	goto	u2411
  7471  00131E  EF93  F009         	goto	u2410
  7472  001322                     u2411:
  7473  001322  EF97  F009         	goto	l3468
  7474  001326                     u2410:
  7475  001326                     
  7476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  7477  001326  0E0F               	movlw	low stoa@nuls
  7478  001328  6E1A               	movwf	stoa@cp^0,c
  7479  00132A  0E00               	movlw	high stoa@nuls
  7480  00132C  6E1B               	movwf	(stoa@cp+1)^0,c
  7481  00132E                     l3468:
  7482                           
  7483                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  7484  00132E  C01A  F001         	movff	stoa@cp,strlen@s
  7485  001332  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  7486  001336  EC97  F017         	call	_strlen	;wreg free
  7487  00133A  C001  F01E         	movff	?_strlen,stoa@l
  7488  00133E  C002  F01F         	movff	?_strlen+1,stoa@l+1
  7489  001342                     
  7490                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  7491  001342  C074  F01C         	movff	_prec,stoa@p
  7492  001346  C075  F01D         	movff	_prec+1,stoa@p+1
  7493  00134A                     
  7494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  7495  00134A  BE1D               	btfsc	(stoa@p+1)^0,7,c
  7496  00134C  EFAA  F009         	goto	u2421
  7497  001350  EFAC  F009         	goto	u2420
  7498  001354                     u2421:
  7499  001354  EFC1  F009         	goto	l574
  7500  001358                     u2420:
  7501  001358  501E               	movf	stoa@l^0,w,c
  7502  00135A  5C1C               	subwf	stoa@p^0,w,c
  7503  00135C  501D               	movf	(stoa@p+1)^0,w,c
  7504  00135E  0A80               	xorlw	128
  7505  001360  6E0E               	movwf	??_stoa^0,c
  7506  001362  501F               	movf	(stoa@l+1)^0,w,c
  7507  001364  0A80               	xorlw	128
  7508  001366  580E               	subwfb	??_stoa^0,w,c
  7509  001368  A0D8               	btfss	status,0,c
  7510  00136A  EFB9  F009         	goto	u2431
  7511  00136E  EFBB  F009         	goto	u2430
  7512  001372                     u2431:
  7513  001372  EFBD  F009         	goto	l572
  7514  001376                     u2430:
  7515  001376  EFC1  F009         	goto	l574
  7516  00137A                     l572:
  7517  00137A  C01C  F01E         	movff	stoa@p,stoa@l
  7518  00137E  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  7519  001382                     l574:
  7520                           
  7521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  7522  001382  C01E  F01C         	movff	stoa@l,stoa@p
  7523  001386  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  7524                           
  7525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  7526  00138A  C072  F018         	movff	_width,stoa@w
  7527  00138E  C073  F019         	movff	_width+1,stoa@w+1
  7528                           
  7529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  7530  001392  0100               	movlb	0	; () banked
  7531  001394  B176               	btfsc	_flags& (0+255),0,b
  7532  001396  EFCF  F009         	goto	u2441
  7533  00139A  EFD1  F009         	goto	u2440
  7534  00139E                     u2441:
  7535  00139E  EFEE  F009         	goto	l3484
  7536  0013A2                     u2440:
  7537  0013A2  EFDF  F009         	goto	l3482
  7538  0013A6                     l3478:
  7539                           
  7540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  7541  0013A6  0E00               	movlw	0
  7542  0013A8  6E02               	movwf	(fputc@c+1)^0,c
  7543  0013AA  0E20               	movlw	32
  7544  0013AC  6E01               	movwf	fputc@c^0,c
  7545  0013AE  C00A  F003         	movff	stoa@fp,fputc@fp
  7546  0013B2  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7547  0013B6  EC43  F010         	call	_fputc	;wreg free
  7548  0013BA                     
  7549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  7550  0013BA  4A1E               	infsnz	stoa@l^0,f,c
  7551  0013BC  2A1F               	incf	(stoa@l+1)^0,f,c
  7552  0013BE                     l3482:
  7553                           
  7554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  7555  0013BE  5018               	movf	stoa@w^0,w,c
  7556  0013C0  5C1E               	subwf	stoa@l^0,w,c
  7557  0013C2  501F               	movf	(stoa@l+1)^0,w,c
  7558  0013C4  0A80               	xorlw	128
  7559  0013C6  6E0E               	movwf	??_stoa^0,c
  7560  0013C8  5019               	movf	(stoa@w+1)^0,w,c
  7561  0013CA  0A80               	xorlw	128
  7562  0013CC  580E               	subwfb	??_stoa^0,w,c
  7563  0013CE  A0D8               	btfss	status,0,c
  7564  0013D0  EFEC  F009         	goto	u2451
  7565  0013D4  EFEE  F009         	goto	u2450
  7566  0013D8                     u2451:
  7567  0013D8  EFD3  F009         	goto	l3478
  7568  0013DC                     u2450:
  7569  0013DC                     l3484:
  7570                           
  7571                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  7572  0013DC  0E00               	movlw	0
  7573  0013DE  6E17               	movwf	(stoa@i+1)^0,c
  7574  0013E0  0E00               	movlw	0
  7575  0013E2  6E16               	movwf	stoa@i^0,c
  7576                           
  7577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7578  0013E4  EF07  F00A         	goto	l3492
  7579  0013E8                     l3486:
  7580                           
  7581                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  7582  0013E8  C01A  FFD9         	movff	stoa@cp,fsr2l
  7583  0013EC  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  7584  0013F0  50DF               	movf	indf2,w,c
  7585  0013F2  6E0E               	movwf	??_stoa^0,c
  7586  0013F4  500E               	movf	??_stoa^0,w,c
  7587  0013F6  6E01               	movwf	fputc@c^0,c
  7588  0013F8  6A02               	clrf	(fputc@c+1)^0,c
  7589  0013FA  C00A  F003         	movff	stoa@fp,fputc@fp
  7590  0013FE  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7591  001402  EC43  F010         	call	_fputc	;wreg free
  7592  001406                     
  7593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  7594  001406  4A1A               	infsnz	stoa@cp^0,f,c
  7595  001408  2A1B               	incf	(stoa@cp+1)^0,f,c
  7596  00140A                     
  7597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  7598  00140A  4A16               	infsnz	stoa@i^0,f,c
  7599  00140C  2A17               	incf	(stoa@i+1)^0,f,c
  7600  00140E                     l3492:
  7601                           
  7602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7603  00140E  501C               	movf	stoa@p^0,w,c
  7604  001410  5C16               	subwf	stoa@i^0,w,c
  7605  001412  5017               	movf	(stoa@i+1)^0,w,c
  7606  001414  0A80               	xorlw	128
  7607  001416  6E0E               	movwf	??_stoa^0,c
  7608  001418  501D               	movf	(stoa@p+1)^0,w,c
  7609  00141A  0A80               	xorlw	128
  7610  00141C  580E               	subwfb	??_stoa^0,w,c
  7611  00141E  A0D8               	btfss	status,0,c
  7612  001420  EF14  F00A         	goto	u2461
  7613  001424  EF16  F00A         	goto	u2460
  7614  001428                     u2461:
  7615  001428  EFF4  F009         	goto	l3486
  7616  00142C                     u2460:
  7617  00142C                     
  7618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  7619  00142C  0100               	movlb	0	; () banked
  7620  00142E  A176               	btfss	_flags& (0+255),0,b
  7621  001430  EF1C  F00A         	goto	u2471
  7622  001434  EF1E  F00A         	goto	u2470
  7623  001438                     u2471:
  7624  001438  EF3B  F00A         	goto	l584
  7625  00143C                     u2470:
  7626  00143C  EF2C  F00A         	goto	l3500
  7627  001440                     l3496:
  7628                           
  7629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  7630  001440  0E00               	movlw	0
  7631  001442  6E02               	movwf	(fputc@c+1)^0,c
  7632  001444  0E20               	movlw	32
  7633  001446  6E01               	movwf	fputc@c^0,c
  7634  001448  C00A  F003         	movff	stoa@fp,fputc@fp
  7635  00144C  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7636  001450  EC43  F010         	call	_fputc	;wreg free
  7637  001454                     
  7638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  7639  001454  4A1E               	infsnz	stoa@l^0,f,c
  7640  001456  2A1F               	incf	(stoa@l+1)^0,f,c
  7641  001458                     l3500:
  7642                           
  7643                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  7644  001458  5018               	movf	stoa@w^0,w,c
  7645  00145A  5C1E               	subwf	stoa@l^0,w,c
  7646  00145C  501F               	movf	(stoa@l+1)^0,w,c
  7647  00145E  0A80               	xorlw	128
  7648  001460  6E0E               	movwf	??_stoa^0,c
  7649  001462  5019               	movf	(stoa@w+1)^0,w,c
  7650  001464  0A80               	xorlw	128
  7651  001466  580E               	subwfb	??_stoa^0,w,c
  7652  001468  A0D8               	btfss	status,0,c
  7653  00146A  EF39  F00A         	goto	u2481
  7654  00146E  EF3B  F00A         	goto	u2480
  7655  001472                     u2481:
  7656  001472  EF20  F00A         	goto	l3496
  7657  001476                     u2480:
  7658  001476                     l584:
  7659                           
  7660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  7661  001476  C01E  F00A         	movff	stoa@l,?_stoa
  7662  00147A  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  7663  00147E  0012               	return		;funcret
  7664  001480                     __end_of_stoa:
  7665                           	opt callstack 0
  7666                           
  7667 ;; *************** function _dtoa *****************
  7668 ;; Defined at:
  7669 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7670 ;; Parameters:    Size  Location     Type
  7671 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7672 ;;		 -> sprintf@f(6), 
  7673 ;;  d               8   29[COMRAM] long long 
  7674 ;; Auto vars:     Size  Location     Type
  7675 ;;  n               8   53[COMRAM] long long 
  7676 ;;  i               2   61[COMRAM] int 
  7677 ;;  s               2   51[COMRAM] int 
  7678 ;;  w               2   49[COMRAM] int 
  7679 ;;  p               2   47[COMRAM] int 
  7680 ;; Return value:  Size  Location     Type
  7681 ;;                  2   27[COMRAM] int 
  7682 ;; Registers used:
  7683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7684 ;; Tracked objects:
  7685 ;;		On entry : 0/0
  7686 ;;		On exit  : 0/0
  7687 ;;		Unchanged: 0/0
  7688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7689 ;;      Params:        10       0       0       0       0       0       0       0       0
  7690 ;;      Locals:        18       0       0       0       0       0       0       0       0
  7691 ;;      Temps:          8       0       0       0       0       0       0       0       0
  7692 ;;      Totals:        36       0       0       0       0       0       0       0       0
  7693 ;;Total ram usage:       36 bytes
  7694 ;; Hardware stack levels used:    1
  7695 ;; Hardware stack levels required when called:    5
  7696 ;; This function calls:
  7697 ;;		___aodiv
  7698 ;;		___aomod
  7699 ;;		_abs
  7700 ;;		_pad
  7701 ;; This function is called by:
  7702 ;;		_vfpfcnvrt
  7703 ;; This function uses a non-reentrant model
  7704 ;;
  7705                           
  7706                           	psect	text40
  7707  00087E                     __ptext40:
  7708                           	opt callstack 0
  7709  00087E                     _dtoa:
  7710                           	opt callstack 20
  7711  00087E                     
  7712                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  7713  00087E  C01E  F036         	movff	dtoa@d,dtoa@n
  7714  000882  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7715  000886  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7716  00088A  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7717  00088E  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7718  000892  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7719  000896  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7720  00089A  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7721  00089E                     
  7722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  7723  00089E  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  7724  0008A0  EF54  F004         	goto	u2251
  7725  0008A4  EF57  F004         	goto	u2250
  7726  0008A8                     u2251:
  7727  0008A8  0E01               	movlw	1
  7728  0008AA  EF58  F004         	goto	u2260
  7729  0008AE                     u2250:
  7730  0008AE  0E00               	movlw	0
  7731  0008B0                     u2260:
  7732  0008B0  6E34               	movwf	dtoa@s^0,c
  7733  0008B2  6A35               	clrf	(dtoa@s+1)^0,c
  7734                           
  7735                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  7736  0008B4  5034               	movf	dtoa@s^0,w,c
  7737  0008B6  1035               	iorwf	(dtoa@s+1)^0,w,c
  7738  0008B8  B4D8               	btfsc	status,2,c
  7739  0008BA  EF61  F004         	goto	u2271
  7740  0008BE  EF63  F004         	goto	u2270
  7741  0008C2                     u2271:
  7742  0008C2  EF73  F004         	goto	l3404
  7743  0008C6                     u2270:
  7744  0008C6                     
  7745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  7746  0008C6  1E3D               	comf	(dtoa@n+7)^0,f,c
  7747  0008C8  1E3C               	comf	(dtoa@n+6)^0,f,c
  7748  0008CA  1E3B               	comf	(dtoa@n+5)^0,f,c
  7749  0008CC  1E3A               	comf	(dtoa@n+4)^0,f,c
  7750  0008CE  1E39               	comf	(dtoa@n+3)^0,f,c
  7751  0008D0  1E38               	comf	(dtoa@n+2)^0,f,c
  7752  0008D2  1E37               	comf	(dtoa@n+1)^0,f,c
  7753  0008D4  6C36               	negf	dtoa@n^0,c
  7754  0008D6  0E00               	movlw	0
  7755  0008D8  2237               	addwfc	(dtoa@n+1)^0,f,c
  7756  0008DA  2238               	addwfc	(dtoa@n+2)^0,f,c
  7757  0008DC  2239               	addwfc	(dtoa@n+3)^0,f,c
  7758  0008DE  223A               	addwfc	(dtoa@n+4)^0,f,c
  7759  0008E0  223B               	addwfc	(dtoa@n+5)^0,f,c
  7760  0008E2  223C               	addwfc	(dtoa@n+6)^0,f,c
  7761  0008E4  223D               	addwfc	(dtoa@n+7)^0,f,c
  7762  0008E6                     l3404:
  7763                           
  7764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  7765  0008E6  0100               	movlb	0	; () banked
  7766  0008E8  BF75               	btfsc	(_prec+1)& (0+255),7,b
  7767  0008EA  EF79  F004         	goto	u2281
  7768  0008EE  EF7B  F004         	goto	u2280
  7769  0008F2                     u2281:
  7770  0008F2  EF7C  F004         	goto	l3408
  7771  0008F6                     u2280:
  7772  0008F6                     
  7773                           ; BSR set to: 0
  7774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  7775  0008F6  9376               	bcf	_flags& (0+255),1,b
  7776  0008F8                     l3408:
  7777                           
  7778                           ; BSR set to: 0
  7779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  7780  0008F8  BF75               	btfsc	(_prec+1)& (0+255),7,b
  7781  0008FA  EF89  F004         	goto	u2290
  7782  0008FE  5175               	movf	(_prec+1)& (0+255),w,b
  7783  000900  E106               	bnz	u2291
  7784  000902  0574               	decf	_prec& (0+255),w,b
  7785  000904  B0D8               	btfsc	status,0,c
  7786  000906  EF87  F004         	goto	u2291
  7787  00090A  EF89  F004         	goto	u2290
  7788  00090E                     u2291:
  7789  00090E  EF8F  F004         	goto	l545
  7790  000912                     u2290:
  7791  000912                     
  7792                           ; BSR set to: 0
  7793  000912  0E00               	movlw	0
  7794  000914  6E31               	movwf	(dtoa@p+1)^0,c
  7795  000916  0E01               	movlw	1
  7796  000918  6E30               	movwf	dtoa@p^0,c
  7797  00091A  EF93  F004         	goto	l547
  7798  00091E                     l545:
  7799                           
  7800                           ; BSR set to: 0
  7801  00091E  C074  F030         	movff	_prec,dtoa@p
  7802  000922  C075  F031         	movff	_prec+1,dtoa@p+1
  7803  000926                     l547:
  7804                           
  7805                           ; BSR set to: 0
  7806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  7807  000926  C072  F032         	movff	_width,dtoa@w
  7808  00092A  C073  F033         	movff	_width+1,dtoa@w+1
  7809  00092E                     
  7810                           ; BSR set to: 0
  7811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  7812  00092E  5034               	movf	dtoa@s^0,w,c
  7813  000930  1035               	iorwf	(dtoa@s+1)^0,w,c
  7814  000932  A4D8               	btfss	status,2,c
  7815  000934  EF9E  F004         	goto	u2301
  7816  000938  EFA0  F004         	goto	u2300
  7817  00093C                     u2301:
  7818  00093C  EFA7  F004         	goto	l3416
  7819  000940                     u2300:
  7820  000940                     
  7821                           ; BSR set to: 0
  7822  000940  A576               	btfss	_flags& (0+255),2,b
  7823  000942  EFA5  F004         	goto	u2311
  7824  000946  EFA7  F004         	goto	u2310
  7825  00094A                     u2311:
  7826  00094A  EFAA  F004         	goto	l3418
  7827  00094E                     u2310:
  7828  00094E                     l3416:
  7829                           
  7830                           ; BSR set to: 0
  7831                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  7832  00094E  0632               	decf	dtoa@w^0,f,c
  7833  000950  A0D8               	btfss	status,0,c
  7834  000952  0633               	decf	(dtoa@w+1)^0,f,c
  7835  000954                     l3418:
  7836                           
  7837                           ; BSR set to: 0
  7838                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  7839  000954  0E00               	movlw	0
  7840  000956  6E3F               	movwf	(dtoa@i+1)^0,c
  7841  000958  0E1F               	movlw	31
  7842  00095A  6E3E               	movwf	dtoa@i^0,c
  7843  00095C                     
  7844                           ; BSR set to: 0
  7845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  7846  00095C  0E00               	movlw	0
  7847  00095E  6FAC               	movwf	(_dbuf+31)& (0+255),b
  7848                           
  7849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7850  000960  EF2E  F005         	goto	l3432
  7851  000964                     l3422:
  7852                           
  7853                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  7854  000964  063E               	decf	dtoa@i^0,f,c
  7855  000966  A0D8               	btfss	status,0,c
  7856  000968  063F               	decf	(dtoa@i+1)^0,f,c
  7857  00096A                     
  7858                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  7859  00096A  0E8D               	movlw	low _dbuf
  7860  00096C  243E               	addwf	dtoa@i^0,w,c
  7861  00096E  6ED9               	movwf	fsr2l,c
  7862  000970  0E00               	movlw	high _dbuf
  7863  000972  203F               	addwfc	(dtoa@i+1)^0,w,c
  7864  000974  6EDA               	movwf	fsr2h,c
  7865  000976  C036  F001         	movff	dtoa@n,___aomod@dividend
  7866  00097A  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7867  00097E  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7868  000982  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7869  000986  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7870  00098A  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7871  00098E  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7872  000992  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7873  000996  0E0A               	movlw	10
  7874  000998  6E09               	movwf	___aomod@divisor^0,c
  7875  00099A  0E00               	movlw	0
  7876  00099C  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7877  00099E  0E00               	movlw	0
  7878  0009A0  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7879  0009A2  0E00               	movlw	0
  7880  0009A4  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7881  0009A6  0E00               	movlw	0
  7882  0009A8  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7883  0009AA  0E00               	movlw	0
  7884  0009AC  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7885  0009AE  0E00               	movlw	0
  7886  0009B0  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7887  0009B2  0E00               	movlw	0
  7888  0009B4  6E10               	movwf	(___aomod@divisor+7)^0,c
  7889  0009B6  ECAC  F00B         	call	___aomod	;wreg free
  7890  0009BA  C001  F026         	movff	?___aomod,??_dtoa
  7891  0009BE  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7892  0009C2  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7893  0009C6  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7894  0009CA  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7895  0009CE  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7896  0009D2  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7897  0009D6  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7898  0009DA  C026  F013         	movff	??_dtoa,abs@a
  7899  0009DE  C028  F014         	movff	??_dtoa+2,abs@a+1
  7900  0009E2  ECE3  F016         	call	_abs	;wreg free
  7901  0009E6  5013               	movf	?_abs^0,w,c
  7902  0009E8  0F30               	addlw	48
  7903  0009EA  6EDF               	movwf	indf2,c
  7904  0009EC                     
  7905                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  7906  0009EC  0630               	decf	dtoa@p^0,f,c
  7907  0009EE  A0D8               	btfss	status,0,c
  7908  0009F0  0631               	decf	(dtoa@p+1)^0,f,c
  7909  0009F2                     
  7910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  7911  0009F2  0632               	decf	dtoa@w^0,f,c
  7912  0009F4  A0D8               	btfss	status,0,c
  7913  0009F6  0633               	decf	(dtoa@w+1)^0,f,c
  7914  0009F8                     
  7915                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  7916  0009F8  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7917  0009FC  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7918  000A00  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7919  000A04  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7920  000A08  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7921  000A0C  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7922  000A10  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7923  000A14  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7924  000A18  0E0A               	movlw	10
  7925  000A1A  6E09               	movwf	___aodiv@divisor^0,c
  7926  000A1C  0E00               	movlw	0
  7927  000A1E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7928  000A20  0E00               	movlw	0
  7929  000A22  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7930  000A24  0E00               	movlw	0
  7931  000A26  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7932  000A28  0E00               	movlw	0
  7933  000A2A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7934  000A2C  0E00               	movlw	0
  7935  000A2E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7936  000A30  0E00               	movlw	0
  7937  000A32  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7938  000A34  0E00               	movlw	0
  7939  000A36  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7940  000A38  ECB9  F008         	call	___aodiv	;wreg free
  7941  000A3C  C001  F036         	movff	?___aodiv,dtoa@n
  7942  000A40  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7943  000A44  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7944  000A48  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7945  000A4C  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7946  000A50  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7947  000A54  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7948  000A58  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7949  000A5C                     l3432:
  7950                           
  7951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7952  000A5C  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7953  000A5E  EF39  F005         	goto	u2321
  7954  000A62  503F               	movf	(dtoa@i+1)^0,w,c
  7955  000A64  E108               	bnz	u2320
  7956  000A66  043E               	decf	dtoa@i^0,w,c
  7957  000A68  A0D8               	btfss	status,0,c
  7958  000A6A  EF39  F005         	goto	u2321
  7959  000A6E  EF3B  F005         	goto	u2320
  7960  000A72                     u2321:
  7961  000A72  EF6C  F005         	goto	l3442
  7962  000A76                     u2320:
  7963  000A76  5036               	movf	dtoa@n^0,w,c
  7964  000A78  1037               	iorwf	(dtoa@n+1)^0,w,c
  7965  000A7A  1038               	iorwf	(dtoa@n+2)^0,w,c
  7966  000A7C  1039               	iorwf	(dtoa@n+3)^0,w,c
  7967  000A7E  103A               	iorwf	(dtoa@n+4)^0,w,c
  7968  000A80  103B               	iorwf	(dtoa@n+5)^0,w,c
  7969  000A82  103C               	iorwf	(dtoa@n+6)^0,w,c
  7970  000A84  103D               	iorwf	(dtoa@n+7)^0,w,c
  7971  000A86  A4D8               	btfss	status,2,c
  7972  000A88  EF48  F005         	goto	u2331
  7973  000A8C  EF4A  F005         	goto	u2330
  7974  000A90                     u2331:
  7975  000A90  EFB2  F004         	goto	l3422
  7976  000A94                     u2330:
  7977  000A94  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7978  000A96  EF57  F005         	goto	u2340
  7979  000A9A  5031               	movf	(dtoa@p+1)^0,w,c
  7980  000A9C  E106               	bnz	u2341
  7981  000A9E  0430               	decf	dtoa@p^0,w,c
  7982  000AA0  B0D8               	btfsc	status,0,c
  7983  000AA2  EF55  F005         	goto	u2341
  7984  000AA6  EF57  F005         	goto	u2340
  7985  000AAA                     u2341:
  7986  000AAA  EFB2  F004         	goto	l3422
  7987  000AAE                     u2340:
  7988  000AAE  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7989  000AB0  EF62  F005         	goto	u2351
  7990  000AB4  5033               	movf	(dtoa@w+1)^0,w,c
  7991  000AB6  E108               	bnz	u2350
  7992  000AB8  0432               	decf	dtoa@w^0,w,c
  7993  000ABA  A0D8               	btfss	status,0,c
  7994  000ABC  EF62  F005         	goto	u2351
  7995  000AC0  EF64  F005         	goto	u2350
  7996  000AC4                     u2351:
  7997  000AC4  EF6C  F005         	goto	l3442
  7998  000AC8                     u2350:
  7999  000AC8  0100               	movlb	0	; () banked
  8000  000ACA  B376               	btfsc	_flags& (0+255),1,b
  8001  000ACC  EF6A  F005         	goto	u2361
  8002  000AD0  EF6C  F005         	goto	u2360
  8003  000AD4                     u2361:
  8004  000AD4  EFB2  F004         	goto	l3422
  8005  000AD8                     u2360:
  8006  000AD8                     l3442:
  8007                           
  8008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  8009  000AD8  5034               	movf	dtoa@s^0,w,c
  8010  000ADA  1035               	iorwf	(dtoa@s+1)^0,w,c
  8011  000ADC  A4D8               	btfss	status,2,c
  8012  000ADE  EF73  F005         	goto	u2371
  8013  000AE2  EF75  F005         	goto	u2370
  8014  000AE6                     u2371:
  8015  000AE6  EF7D  F005         	goto	l3446
  8016  000AEA                     u2370:
  8017  000AEA  0100               	movlb	0	; () banked
  8018  000AEC  A576               	btfss	_flags& (0+255),2,b
  8019  000AEE  EF7B  F005         	goto	u2381
  8020  000AF2  EF7D  F005         	goto	u2380
  8021  000AF6                     u2381:
  8022  000AF6  EF9B  F005         	goto	l3456
  8023  000AFA                     u2380:
  8024  000AFA                     l3446:
  8025                           
  8026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  8027  000AFA  063E               	decf	dtoa@i^0,f,c
  8028  000AFC  A0D8               	btfss	status,0,c
  8029  000AFE  063F               	decf	(dtoa@i+1)^0,f,c
  8030  000B00                     
  8031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  8032  000B00  5034               	movf	dtoa@s^0,w,c
  8033  000B02  1035               	iorwf	(dtoa@s+1)^0,w,c
  8034  000B04  A4D8               	btfss	status,2,c
  8035  000B06  EF87  F005         	goto	u2391
  8036  000B0A  EF89  F005         	goto	u2390
  8037  000B0E                     u2391:
  8038  000B0E  EF8F  F005         	goto	l3452
  8039  000B12                     u2390:
  8040  000B12  0E00               	movlw	0
  8041  000B14  6E2F               	movwf	(_dtoa$1057+1)^0,c
  8042  000B16  0E2B               	movlw	43
  8043  000B18  6E2E               	movwf	_dtoa$1057^0,c
  8044  000B1A  EF93  F005         	goto	l3454
  8045  000B1E                     l3452:
  8046  000B1E  0E00               	movlw	0
  8047  000B20  6E2F               	movwf	(_dtoa$1057+1)^0,c
  8048  000B22  0E2D               	movlw	45
  8049  000B24  6E2E               	movwf	_dtoa$1057^0,c
  8050  000B26                     l3454:
  8051  000B26  0E8D               	movlw	low _dbuf
  8052  000B28  243E               	addwf	dtoa@i^0,w,c
  8053  000B2A  6ED9               	movwf	fsr2l,c
  8054  000B2C  0E00               	movlw	high _dbuf
  8055  000B2E  203F               	addwfc	(dtoa@i+1)^0,w,c
  8056  000B30  6EDA               	movwf	fsr2h,c
  8057  000B32  C02E  FFDF         	movff	_dtoa$1057,indf2
  8058  000B36                     l3456:
  8059                           
  8060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  8061  000B36  C01C  F011         	movff	dtoa@fp,pad@fp
  8062  000B3A  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  8063  000B3E  0E8D               	movlw	low _dbuf
  8064  000B40  243E               	addwf	dtoa@i^0,w,c
  8065  000B42  6E13               	movwf	pad@buf^0,c
  8066  000B44  0E00               	movlw	high _dbuf
  8067  000B46  203F               	addwfc	(dtoa@i+1)^0,w,c
  8068  000B48  6E14               	movwf	(pad@buf+1)^0,c
  8069  000B4A  C032  F015         	movff	dtoa@w,pad@p
  8070  000B4E  C033  F016         	movff	dtoa@w+1,pad@p+1
  8071  000B52  ECA8  F010         	call	_pad	;wreg free
  8072  000B56  C011  F01C         	movff	?_pad,?_dtoa
  8073  000B5A  C012  F01D         	movff	?_pad+1,?_dtoa+1
  8074  000B5E  0012               	return		;funcret
  8075  000B60                     __end_of_dtoa:
  8076                           	opt callstack 0
  8077                           
  8078 ;; *************** function _abs *****************
  8079 ;; Defined at:
  8080 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  8081 ;; Parameters:    Size  Location     Type
  8082 ;;  a               2   18[COMRAM] int 
  8083 ;; Auto vars:     Size  Location     Type
  8084 ;;		None
  8085 ;; Return value:  Size  Location     Type
  8086 ;;                  2   18[COMRAM] int 
  8087 ;; Registers used:
  8088 ;;		wreg, status,2, status,0
  8089 ;; Tracked objects:
  8090 ;;		On entry : 0/0
  8091 ;;		On exit  : 0/0
  8092 ;;		Unchanged: 0/0
  8093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8094 ;;      Params:         2       0       0       0       0       0       0       0       0
  8095 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8096 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8097 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8098 ;;Total ram usage:        4 bytes
  8099 ;; Hardware stack levels used:    1
  8100 ;; Hardware stack levels required when called:    1
  8101 ;; This function calls:
  8102 ;;		Nothing
  8103 ;; This function is called by:
  8104 ;;		_dtoa
  8105 ;; This function uses a non-reentrant model
  8106 ;;
  8107                           
  8108                           	psect	text41
  8109  002DC6                     __ptext41:
  8110                           	opt callstack 0
  8111  002DC6                     _abs:
  8112                           	opt callstack 23
  8113  002DC6  BE14               	btfsc	(abs@a+1)^0,7,c
  8114  002DC8  EFF0  F016         	goto	u2040
  8115  002DCC  5014               	movf	(abs@a+1)^0,w,c
  8116  002DCE  E106               	bnz	u2041
  8117  002DD0  0413               	decf	abs@a^0,w,c
  8118  002DD2  B0D8               	btfsc	status,0,c
  8119  002DD4  EFEE  F016         	goto	u2041
  8120  002DD8  EFF0  F016         	goto	u2040
  8121  002DDC                     u2041:
  8122  002DDC  EFFE  F016         	goto	l1314
  8123  002DE0                     u2040:
  8124  002DE0  C013  F015         	movff	abs@a,??_abs
  8125  002DE4  C014  F016         	movff	abs@a+1,??_abs+1
  8126  002DE8  1E15               	comf	??_abs^0,f,c
  8127  002DEA  1E16               	comf	(??_abs+1)^0,f,c
  8128  002DEC  4A15               	infsnz	??_abs^0,f,c
  8129  002DEE  2A16               	incf	(??_abs+1)^0,f,c
  8130  002DF0  C015  F013         	movff	??_abs,?_abs
  8131  002DF4  C016  F014         	movff	??_abs+1,?_abs+1
  8132  002DF8  EF02  F017         	goto	l1317
  8133  002DFC                     l1314:
  8134  002DFC  C013  F013         	movff	abs@a,?_abs
  8135  002E00  C014  F014         	movff	abs@a+1,?_abs+1
  8136  002E04                     l1317:
  8137  002E04  0012               	return		;funcret
  8138  002E06                     __end_of_abs:
  8139                           	opt callstack 0
  8140                           
  8141 ;; *************** function ___aomod *****************
  8142 ;; Defined at:
  8143 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  8144 ;; Parameters:    Size  Location     Type
  8145 ;;  dividend        8    0[COMRAM] long long 
  8146 ;;  divisor         8    8[COMRAM] long long 
  8147 ;; Auto vars:     Size  Location     Type
  8148 ;;  sign            1   17[COMRAM] unsigned char 
  8149 ;;  counter         1   16[COMRAM] unsigned char 
  8150 ;; Return value:  Size  Location     Type
  8151 ;;                  8    0[COMRAM] long long 
  8152 ;; Registers used:
  8153 ;;		wreg, status,2, status,0
  8154 ;; Tracked objects:
  8155 ;;		On entry : 0/0
  8156 ;;		On exit  : 0/0
  8157 ;;		Unchanged: 0/0
  8158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8159 ;;      Params:        16       0       0       0       0       0       0       0       0
  8160 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8161 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8162 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8163 ;;Total ram usage:       18 bytes
  8164 ;; Hardware stack levels used:    1
  8165 ;; Hardware stack levels required when called:    1
  8166 ;; This function calls:
  8167 ;;		Nothing
  8168 ;; This function is called by:
  8169 ;;		_dtoa
  8170 ;; This function uses a non-reentrant model
  8171 ;;
  8172                           
  8173                           	psect	text42
  8174  001758                     __ptext42:
  8175                           	opt callstack 0
  8176  001758                     ___aomod:
  8177                           	opt callstack 23
  8178  001758  0E00               	movlw	0
  8179  00175A  6E12               	movwf	___aomod@sign^0,c
  8180  00175C  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8181  00175E  EFB5  F00B         	goto	u2140
  8182  001762  EFB3  F00B         	goto	u2141
  8183  001766                     u2141:
  8184  001766  EFC7  F00B         	goto	l3338
  8185  00176A                     u2140:
  8186  00176A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8187  00176C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8188  00176E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8189  001770  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8190  001772  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8191  001774  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8192  001776  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8193  001778  6C01               	negf	___aomod@dividend^0,c
  8194  00177A  0E00               	movlw	0
  8195  00177C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8196  00177E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8197  001780  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8198  001782  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8199  001784  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8200  001786  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8201  001788  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8202  00178A  0E01               	movlw	1
  8203  00178C  6E12               	movwf	___aomod@sign^0,c
  8204  00178E                     l3338:
  8205  00178E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8206  001790  EFCE  F00B         	goto	u2150
  8207  001794  EFCC  F00B         	goto	u2151
  8208  001798                     u2151:
  8209  001798  EFDE  F00B         	goto	l3342
  8210  00179C                     u2150:
  8211  00179C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8212  00179E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8213  0017A0  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8214  0017A2  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8215  0017A4  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8216  0017A6  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8217  0017A8  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8218  0017AA  6C09               	negf	___aomod@divisor^0,c
  8219  0017AC  0E00               	movlw	0
  8220  0017AE  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8221  0017B0  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8222  0017B2  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8223  0017B4  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8224  0017B6  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8225  0017B8  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8226  0017BA  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8227  0017BC                     l3342:
  8228  0017BC  5009               	movf	___aomod@divisor^0,w,c
  8229  0017BE  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8230  0017C0  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8231  0017C2  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8232  0017C4  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8233  0017C6  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8234  0017C8  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8235  0017CA  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8236  0017CC  B4D8               	btfsc	status,2,c
  8237  0017CE  EFEB  F00B         	goto	u2161
  8238  0017D2  EFED  F00B         	goto	u2160
  8239  0017D6                     u2161:
  8240  0017D6  EF35  F00C         	goto	l3358
  8241  0017DA                     u2160:
  8242  0017DA  0E01               	movlw	1
  8243  0017DC  6E11               	movwf	___aomod@counter^0,c
  8244  0017DE  EFFB  F00B         	goto	l3348
  8245  0017E2                     l3346:
  8246  0017E2  90D8               	bcf	status,0,c
  8247  0017E4  3609               	rlcf	___aomod@divisor^0,f,c
  8248  0017E6  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8249  0017E8  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8250  0017EA  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8251  0017EC  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8252  0017EE  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8253  0017F0  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8254  0017F2  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8255  0017F4  2A11               	incf	___aomod@counter^0,f,c
  8256  0017F6                     l3348:
  8257  0017F6  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8258  0017F8  EF00  F00C         	goto	u2171
  8259  0017FC  EF02  F00C         	goto	u2170
  8260  001800                     u2171:
  8261  001800  EFF1  F00B         	goto	l3346
  8262  001804                     u2170:
  8263  001804                     l3350:
  8264  001804  5009               	movf	___aomod@divisor^0,w,c
  8265  001806  5C01               	subwf	___aomod@dividend^0,w,c
  8266  001808  500A               	movf	(___aomod@divisor+1)^0,w,c
  8267  00180A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8268  00180C  500B               	movf	(___aomod@divisor+2)^0,w,c
  8269  00180E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8270  001810  500C               	movf	(___aomod@divisor+3)^0,w,c
  8271  001812  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8272  001814  500D               	movf	(___aomod@divisor+4)^0,w,c
  8273  001816  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8274  001818  500E               	movf	(___aomod@divisor+5)^0,w,c
  8275  00181A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8276  00181C  500F               	movf	(___aomod@divisor+6)^0,w,c
  8277  00181E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8278  001820  5010               	movf	(___aomod@divisor+7)^0,w,c
  8279  001822  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8280  001824  A0D8               	btfss	status,0,c
  8281  001826  EF17  F00C         	goto	u2181
  8282  00182A  EF19  F00C         	goto	u2180
  8283  00182E                     u2181:
  8284  00182E  EF29  F00C         	goto	l3354
  8285  001832                     u2180:
  8286  001832  5009               	movf	___aomod@divisor^0,w,c
  8287  001834  5E01               	subwf	___aomod@dividend^0,f,c
  8288  001836  500A               	movf	(___aomod@divisor+1)^0,w,c
  8289  001838  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8290  00183A  500B               	movf	(___aomod@divisor+2)^0,w,c
  8291  00183C  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8292  00183E  500C               	movf	(___aomod@divisor+3)^0,w,c
  8293  001840  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8294  001842  500D               	movf	(___aomod@divisor+4)^0,w,c
  8295  001844  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8296  001846  500E               	movf	(___aomod@divisor+5)^0,w,c
  8297  001848  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8298  00184A  500F               	movf	(___aomod@divisor+6)^0,w,c
  8299  00184C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8300  00184E  5010               	movf	(___aomod@divisor+7)^0,w,c
  8301  001850  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8302  001852                     l3354:
  8303  001852  90D8               	bcf	status,0,c
  8304  001854  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8305  001856  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8306  001858  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8307  00185A  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8308  00185C  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8309  00185E  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8310  001860  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8311  001862  3209               	rrcf	___aomod@divisor^0,f,c
  8312  001864  2E11               	decfsz	___aomod@counter^0,f,c
  8313  001866  EF02  F00C         	goto	l3350
  8314  00186A                     l3358:
  8315  00186A  5012               	movf	___aomod@sign^0,w,c
  8316  00186C  B4D8               	btfsc	status,2,c
  8317  00186E  EF3B  F00C         	goto	u2191
  8318  001872  EF3D  F00C         	goto	u2190
  8319  001876                     u2191:
  8320  001876  EF4D  F00C         	goto	l3362
  8321  00187A                     u2190:
  8322  00187A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8323  00187C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8324  00187E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8325  001880  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8326  001882  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8327  001884  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8328  001886  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8329  001888  6C01               	negf	___aomod@dividend^0,c
  8330  00188A  0E00               	movlw	0
  8331  00188C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8332  00188E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8333  001890  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8334  001892  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8335  001894  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8336  001896  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8337  001898  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8338  00189A                     l3362:
  8339  00189A  C001  F001         	movff	___aomod@dividend,?___aomod
  8340  00189E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8341  0018A2  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8342  0018A6  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8343  0018AA  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8344  0018AE  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8345  0018B2  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8346  0018B6  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8347  0018BA  0012               	return		;funcret
  8348  0018BC                     __end_of___aomod:
  8349                           	opt callstack 0
  8350                           
  8351 ;; *************** function ___aodiv *****************
  8352 ;; Defined at:
  8353 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  8354 ;; Parameters:    Size  Location     Type
  8355 ;;  dividend        8    0[COMRAM] long long 
  8356 ;;  divisor         8    8[COMRAM] long long 
  8357 ;; Auto vars:     Size  Location     Type
  8358 ;;  quotient        8   18[COMRAM] long long 
  8359 ;;  sign            1   17[COMRAM] unsigned char 
  8360 ;;  counter         1   16[COMRAM] unsigned char 
  8361 ;; Return value:  Size  Location     Type
  8362 ;;                  8    0[COMRAM] long long 
  8363 ;; Registers used:
  8364 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8365 ;; Tracked objects:
  8366 ;;		On entry : 0/0
  8367 ;;		On exit  : 0/0
  8368 ;;		Unchanged: 0/0
  8369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8370 ;;      Params:        16       0       0       0       0       0       0       0       0
  8371 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8372 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8373 ;;      Totals:        26       0       0       0       0       0       0       0       0
  8374 ;;Total ram usage:       26 bytes
  8375 ;; Hardware stack levels used:    1
  8376 ;; Hardware stack levels required when called:    1
  8377 ;; This function calls:
  8378 ;;		Nothing
  8379 ;; This function is called by:
  8380 ;;		_dtoa
  8381 ;; This function uses a non-reentrant model
  8382 ;;
  8383                           
  8384                           	psect	text43
  8385  001172                     __ptext43:
  8386                           	opt callstack 0
  8387  001172                     ___aodiv:
  8388                           	opt callstack 23
  8389  001172  0E00               	movlw	0
  8390  001174  6E12               	movwf	___aodiv@sign^0,c
  8391  001176  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8392  001178  EFC2  F008         	goto	u2070
  8393  00117C  EFC0  F008         	goto	u2071
  8394  001180                     u2071:
  8395  001180  EFD4  F008         	goto	l3294
  8396  001184                     u2070:
  8397  001184  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8398  001186  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8399  001188  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8400  00118A  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8401  00118C  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8402  00118E  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8403  001190  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8404  001192  6C09               	negf	___aodiv@divisor^0,c
  8405  001194  0E00               	movlw	0
  8406  001196  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8407  001198  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8408  00119A  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8409  00119C  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8410  00119E  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8411  0011A0  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8412  0011A2  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8413  0011A4  0E01               	movlw	1
  8414  0011A6  6E12               	movwf	___aodiv@sign^0,c
  8415  0011A8                     l3294:
  8416  0011A8  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8417  0011AA  EFDB  F008         	goto	u2080
  8418  0011AE  EFD9  F008         	goto	u2081
  8419  0011B2                     u2081:
  8420  0011B2  EFED  F008         	goto	l3300
  8421  0011B6                     u2080:
  8422  0011B6  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8423  0011B8  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8424  0011BA  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8425  0011BC  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8426  0011BE  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8427  0011C0  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8428  0011C2  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8429  0011C4  6C01               	negf	___aodiv@dividend^0,c
  8430  0011C6  0E00               	movlw	0
  8431  0011C8  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8432  0011CA  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8433  0011CC  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8434  0011CE  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8435  0011D0  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8436  0011D2  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8437  0011D4  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8438  0011D6  0E01               	movlw	1
  8439  0011D8  1A12               	xorwf	___aodiv@sign^0,f,c
  8440  0011DA                     l3300:
  8441  0011DA  EE20  F013         	lfsr	2,___aodiv@quotient
  8442  0011DE  0E07               	movlw	7
  8443  0011E0                     u2091:
  8444  0011E0  6ADE               	clrf	postinc2,c
  8445  0011E2  06E8               	decf	wreg,f,c
  8446  0011E4  E2FD               	bc	u2091
  8447  0011E6  5009               	movf	___aodiv@divisor^0,w,c
  8448  0011E8  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8449  0011EA  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8450  0011EC  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8451  0011EE  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8452  0011F0  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8453  0011F2  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8454  0011F4  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8455  0011F6  B4D8               	btfsc	status,2,c
  8456  0011F8  EF00  F009         	goto	u2101
  8457  0011FC  EF02  F009         	goto	u2100
  8458  001200                     u2101:
  8459  001200  EF54  F009         	goto	l3322
  8460  001204                     u2100:
  8461  001204  0E01               	movlw	1
  8462  001206  6E11               	movwf	___aodiv@counter^0,c
  8463  001208  EF10  F009         	goto	l3308
  8464  00120C                     l3306:
  8465  00120C  90D8               	bcf	status,0,c
  8466  00120E  3609               	rlcf	___aodiv@divisor^0,f,c
  8467  001210  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8468  001212  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8469  001214  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8470  001216  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8471  001218  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8472  00121A  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8473  00121C  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8474  00121E  2A11               	incf	___aodiv@counter^0,f,c
  8475  001220                     l3308:
  8476  001220  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8477  001222  EF15  F009         	goto	u2111
  8478  001226  EF17  F009         	goto	u2110
  8479  00122A                     u2111:
  8480  00122A  EF06  F009         	goto	l3306
  8481  00122E                     u2110:
  8482  00122E                     l3310:
  8483  00122E  90D8               	bcf	status,0,c
  8484  001230  3613               	rlcf	___aodiv@quotient^0,f,c
  8485  001232  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8486  001234  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8487  001236  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8488  001238  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8489  00123A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8490  00123C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8491  00123E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8492  001240  5009               	movf	___aodiv@divisor^0,w,c
  8493  001242  5C01               	subwf	___aodiv@dividend^0,w,c
  8494  001244  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8495  001246  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8496  001248  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8497  00124A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8498  00124C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8499  00124E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8500  001250  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8501  001252  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8502  001254  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8503  001256  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8504  001258  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8505  00125A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8506  00125C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8507  00125E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8508  001260  A0D8               	btfss	status,0,c
  8509  001262  EF35  F009         	goto	u2121
  8510  001266  EF37  F009         	goto	u2120
  8511  00126A                     u2121:
  8512  00126A  EF48  F009         	goto	l3318
  8513  00126E                     u2120:
  8514  00126E  5009               	movf	___aodiv@divisor^0,w,c
  8515  001270  5E01               	subwf	___aodiv@dividend^0,f,c
  8516  001272  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8517  001274  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8518  001276  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8519  001278  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8520  00127A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8521  00127C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8522  00127E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8523  001280  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8524  001282  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8525  001284  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8526  001286  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8527  001288  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8528  00128A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8529  00128C  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8530  00128E  8013               	bsf	___aodiv@quotient^0,0,c
  8531  001290                     l3318:
  8532  001290  90D8               	bcf	status,0,c
  8533  001292  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8534  001294  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8535  001296  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8536  001298  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8537  00129A  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8538  00129C  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8539  00129E  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8540  0012A0  3209               	rrcf	___aodiv@divisor^0,f,c
  8541  0012A2  2E11               	decfsz	___aodiv@counter^0,f,c
  8542  0012A4  EF17  F009         	goto	l3310
  8543  0012A8                     l3322:
  8544  0012A8  5012               	movf	___aodiv@sign^0,w,c
  8545  0012AA  B4D8               	btfsc	status,2,c
  8546  0012AC  EF5A  F009         	goto	u2131
  8547  0012B0  EF5C  F009         	goto	u2130
  8548  0012B4                     u2131:
  8549  0012B4  EF6C  F009         	goto	l3326
  8550  0012B8                     u2130:
  8551  0012B8  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8552  0012BA  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8553  0012BC  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8554  0012BE  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8555  0012C0  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8556  0012C2  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8557  0012C4  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8558  0012C6  6C13               	negf	___aodiv@quotient^0,c
  8559  0012C8  0E00               	movlw	0
  8560  0012CA  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8561  0012CC  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8562  0012CE  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8563  0012D0  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8564  0012D2  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8565  0012D4  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8566  0012D6  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8567  0012D8                     l3326:
  8568  0012D8  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8569  0012DC  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8570  0012E0  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8571  0012E4  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8572  0012E8  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8573  0012EC  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8574  0012F0  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8575  0012F4  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8576  0012F8  0012               	return		;funcret
  8577  0012FA                     __end_of___aodiv:
  8578                           	opt callstack 0
  8579                           
  8580 ;; *************** function _ctoa *****************
  8581 ;; Defined at:
  8582 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8583 ;; Parameters:    Size  Location     Type
  8584 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8585 ;;		 -> sprintf@f(6), 
  8586 ;;  c               1   29[COMRAM] unsigned char 
  8587 ;; Auto vars:     Size  Location     Type
  8588 ;;  w               2   30[COMRAM] int 
  8589 ;;  l               2    0        int 
  8590 ;; Return value:  Size  Location     Type
  8591 ;;                  2   27[COMRAM] int 
  8592 ;; Registers used:
  8593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8594 ;; Tracked objects:
  8595 ;;		On entry : 0/0
  8596 ;;		On exit  : 0/0
  8597 ;;		Unchanged: 0/0
  8598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8599 ;;      Params:         3       0       0       0       0       0       0       0       0
  8600 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8601 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8602 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8603 ;;Total ram usage:        5 bytes
  8604 ;; Hardware stack levels used:    1
  8605 ;; Hardware stack levels required when called:    5
  8606 ;; This function calls:
  8607 ;;		_pad
  8608 ;; This function is called by:
  8609 ;;		_vfpfcnvrt
  8610 ;; This function uses a non-reentrant model
  8611 ;;
  8612                           
  8613                           	psect	text44
  8614  002B5C                     __ptext44:
  8615                           	opt callstack 0
  8616  002B5C                     _ctoa:
  8617                           	opt callstack 20
  8618  002B5C                     
  8619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  8620  002B5C  0100               	movlb	0	; () banked
  8621  002B5E  5172               	movf	_width& (0+255),w,b
  8622  002B60  1173               	iorwf	(_width+1)& (0+255),w,b
  8623  002B62  A4D8               	btfss	status,2,c
  8624  002B64  EFB6  F015         	goto	u2241
  8625  002B68  EFB8  F015         	goto	u2240
  8626  002B6C                     u2241:
  8627  002B6C  EFBE  F015         	goto	l3388
  8628  002B70                     u2240:
  8629  002B70                     
  8630                           ; BSR set to: 0
  8631  002B70  C072  F01F         	movff	_width,ctoa@w
  8632  002B74  C073  F020         	movff	_width+1,ctoa@w+1
  8633  002B78  EFC4  F015         	goto	l3390
  8634  002B7C                     l3388:
  8635                           
  8636                           ; BSR set to: 0
  8637  002B7C  0EFF               	movlw	255
  8638  002B7E  2572               	addwf	_width& (0+255),w,b
  8639  002B80  6E1F               	movwf	ctoa@w^0,c
  8640  002B82  0EFF               	movlw	255
  8641  002B84  2173               	addwfc	(_width+1)& (0+255),w,b
  8642  002B86  6E20               	movwf	(ctoa@w+1)^0,c
  8643  002B88                     l3390:
  8644                           
  8645                           ; BSR set to: 0
  8646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  8647  002B88  C01E  F08D         	movff	ctoa@c,_dbuf
  8648  002B8C                     
  8649                           ; BSR set to: 0
  8650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  8651  002B8C  0E00               	movlw	0
  8652  002B8E  6F8E               	movwf	(_dbuf+1)& (0+255),b
  8653  002B90                     
  8654                           ; BSR set to: 0
  8655                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  8656  002B90  C01C  F011         	movff	ctoa@fp,pad@fp
  8657  002B94  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  8658  002B98  0E8D               	movlw	low _dbuf
  8659  002B9A  6E13               	movwf	pad@buf^0,c
  8660  002B9C  0E00               	movlw	high _dbuf
  8661  002B9E  6E14               	movwf	(pad@buf+1)^0,c
  8662  002BA0  C01F  F015         	movff	ctoa@w,pad@p
  8663  002BA4  C020  F016         	movff	ctoa@w+1,pad@p+1
  8664  002BA8  ECA8  F010         	call	_pad	;wreg free
  8665  002BAC  C011  F01C         	movff	?_pad,?_ctoa
  8666  002BB0  C012  F01D         	movff	?_pad+1,?_ctoa+1
  8667  002BB4  0012               	return		;funcret
  8668  002BB6                     __end_of_ctoa:
  8669                           	opt callstack 0
  8670                           
  8671 ;; *************** function _pad *****************
  8672 ;; Defined at:
  8673 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  8676 ;;		 -> sprintf@f(6), 
  8677 ;;  buf             2   18[COMRAM] PTR unsigned char 
  8678 ;;		 -> dbuf(32), 
  8679 ;;  p               2   20[COMRAM] int 
  8680 ;; Auto vars:     Size  Location     Type
  8681 ;;  w               2   25[COMRAM] int 
  8682 ;;  i               2   23[COMRAM] int 
  8683 ;; Return value:  Size  Location     Type
  8684 ;;                  2   16[COMRAM] int 
  8685 ;; Registers used:
  8686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8687 ;; Tracked objects:
  8688 ;;		On entry : 0/0
  8689 ;;		On exit  : 0/0
  8690 ;;		Unchanged: 0/0
  8691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8692 ;;      Params:         6       0       0       0       0       0       0       0       0
  8693 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8694 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8695 ;;      Totals:        11       0       0       0       0       0       0       0       0
  8696 ;;Total ram usage:       11 bytes
  8697 ;; Hardware stack levels used:    1
  8698 ;; Hardware stack levels required when called:    4
  8699 ;; This function calls:
  8700 ;;		_fputc
  8701 ;;		_fputs
  8702 ;;		_strlen
  8703 ;; This function is called by:
  8704 ;;		_ctoa
  8705 ;;		_dtoa
  8706 ;; This function uses a non-reentrant model
  8707 ;;
  8708                           
  8709                           	psect	text45
  8710  002150                     __ptext45:
  8711                           	opt callstack 0
  8712  002150                     _pad:
  8713                           	opt callstack 20
  8714  002150                     
  8715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  8716  002150  0100               	movlb	0	; () banked
  8717  002152  A176               	btfss	_flags& (0+255),0,b
  8718  002154  EFAE  F010         	goto	u2001
  8719  002158  EFB0  F010         	goto	u2000
  8720  00215C                     u2001:
  8721  00215C  EFBA  F010         	goto	l3254
  8722  002160                     u2000:
  8723  002160                     
  8724                           ; BSR set to: 0
  8725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  8726  002160  C013  F00A         	movff	pad@buf,fputs@s
  8727  002164  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8728  002168  C011  F00C         	movff	pad@fp,fputs@fp
  8729  00216C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8730  002170  ECA1  F016         	call	_fputs	;wreg free
  8731  002174                     l3254:
  8732                           
  8733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  8734  002174  BE16               	btfsc	(pad@p+1)^0,7,c
  8735  002176  EFBF  F010         	goto	u2011
  8736  00217A  EFC1  F010         	goto	u2010
  8737  00217E                     u2011:
  8738  00217E  EFC7  F010         	goto	l3258
  8739  002182                     u2010:
  8740  002182  C015  F01A         	movff	pad@p,pad@w
  8741  002186  C016  F01B         	movff	pad@p+1,pad@w+1
  8742  00218A  EFCB  F010         	goto	l527
  8743  00218E                     l3258:
  8744  00218E  0E00               	movlw	0
  8745  002190  6E1B               	movwf	(pad@w+1)^0,c
  8746  002192  0E00               	movlw	0
  8747  002194  6E1A               	movwf	pad@w^0,c
  8748  002196                     l527:
  8749                           
  8750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  8751  002196  0E00               	movlw	0
  8752  002198  6E19               	movwf	(pad@i+1)^0,c
  8753  00219A  0E00               	movlw	0
  8754  00219C  6E18               	movwf	pad@i^0,c
  8755                           
  8756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8757  00219E  EFDD  F010         	goto	l3264
  8758  0021A2                     l3260:
  8759                           
  8760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  8761  0021A2  0E00               	movlw	0
  8762  0021A4  6E02               	movwf	(fputc@c+1)^0,c
  8763  0021A6  0E20               	movlw	32
  8764  0021A8  6E01               	movwf	fputc@c^0,c
  8765  0021AA  C011  F003         	movff	pad@fp,fputc@fp
  8766  0021AE  C012  F004         	movff	pad@fp+1,fputc@fp+1
  8767  0021B2  EC43  F010         	call	_fputc	;wreg free
  8768  0021B6                     
  8769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  8770  0021B6  4A18               	infsnz	pad@i^0,f,c
  8771  0021B8  2A19               	incf	(pad@i+1)^0,f,c
  8772  0021BA                     l3264:
  8773                           
  8774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8775  0021BA  501A               	movf	pad@w^0,w,c
  8776  0021BC  5C18               	subwf	pad@i^0,w,c
  8777  0021BE  5019               	movf	(pad@i+1)^0,w,c
  8778  0021C0  0A80               	xorlw	128
  8779  0021C2  6E17               	movwf	??_pad^0,c
  8780  0021C4  501B               	movf	(pad@w+1)^0,w,c
  8781  0021C6  0A80               	xorlw	128
  8782  0021C8  5817               	subwfb	??_pad^0,w,c
  8783  0021CA  A0D8               	btfss	status,0,c
  8784  0021CC  EFEA  F010         	goto	u2021
  8785  0021D0  EFEC  F010         	goto	u2020
  8786  0021D4                     u2021:
  8787  0021D4  EFD1  F010         	goto	l3260
  8788  0021D8                     u2020:
  8789  0021D8                     
  8790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  8791  0021D8  0100               	movlb	0	; () banked
  8792  0021DA  B176               	btfsc	_flags& (0+255),0,b
  8793  0021DC  EFF2  F010         	goto	u2031
  8794  0021E0  EFF4  F010         	goto	u2030
  8795  0021E4                     u2031:
  8796  0021E4  EFFE  F010         	goto	l3268
  8797  0021E8                     u2030:
  8798  0021E8                     
  8799                           ; BSR set to: 0
  8800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  8801  0021E8  C013  F00A         	movff	pad@buf,fputs@s
  8802  0021EC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8803  0021F0  C011  F00C         	movff	pad@fp,fputs@fp
  8804  0021F4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8805  0021F8  ECA1  F016         	call	_fputs	;wreg free
  8806  0021FC                     l3268:
  8807                           
  8808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  8809  0021FC  C013  F001         	movff	pad@buf,strlen@s
  8810  002200  C014  F002         	movff	pad@buf+1,strlen@s+1
  8811  002204  EC97  F017         	call	_strlen	;wreg free
  8812  002208  501A               	movf	pad@w^0,w,c
  8813  00220A  2401               	addwf	?_strlen^0,w,c
  8814  00220C  6E11               	movwf	?_pad^0,c
  8815  00220E  501B               	movf	(pad@w+1)^0,w,c
  8816  002210  2002               	addwfc	(?_strlen+1)^0,w,c
  8817  002212  6E12               	movwf	(?_pad+1)^0,c
  8818  002214  0012               	return		;funcret
  8819  002216                     __end_of_pad:
  8820                           	opt callstack 0
  8821                           
  8822 ;; *************** function _strlen *****************
  8823 ;; Defined at:
  8824 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  8825 ;; Parameters:    Size  Location     Type
  8826 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8827 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), horarios(288), 
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8830 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), horarios(288), 
  8831 ;; Return value:  Size  Location     Type
  8832 ;;                  2    0[COMRAM] unsigned int 
  8833 ;; Registers used:
  8834 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8835 ;; Tracked objects:
  8836 ;;		On entry : 0/0
  8837 ;;		On exit  : 0/0
  8838 ;;		Unchanged: 0/0
  8839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8840 ;;      Params:         2       0       0       0       0       0       0       0       0
  8841 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8842 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8843 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8844 ;;Total ram usage:        4 bytes
  8845 ;; Hardware stack levels used:    1
  8846 ;; Hardware stack levels required when called:    1
  8847 ;; This function calls:
  8848 ;;		Nothing
  8849 ;; This function is called by:
  8850 ;;		_pad
  8851 ;;		_stoa
  8852 ;; This function uses a non-reentrant model
  8853 ;;
  8854                           
  8855                           	psect	text46
  8856  002F2E                     __ptext46:
  8857                           	opt callstack 0
  8858  002F2E                     _strlen:
  8859                           	opt callstack 23
  8860  002F2E  C001  F003         	movff	strlen@s,strlen@a
  8861  002F32  C002  F004         	movff	strlen@s+1,strlen@a+1
  8862  002F36  EF9F  F017         	goto	l3244
  8863  002F3A                     l3242:
  8864  002F3A  4A01               	infsnz	strlen@s^0,f,c
  8865  002F3C  2A02               	incf	(strlen@s+1)^0,f,c
  8866  002F3E                     l3244:
  8867  002F3E  C001  FFD9         	movff	strlen@s,fsr2l
  8868  002F42  C002  FFDA         	movff	strlen@s+1,fsr2h
  8869  002F46  50DF               	movf	indf2,w,c
  8870  002F48  A4D8               	btfss	status,2,c
  8871  002F4A  EFA9  F017         	goto	u1991
  8872  002F4E  EFAB  F017         	goto	u1990
  8873  002F52                     u1991:
  8874  002F52  EF9D  F017         	goto	l3242
  8875  002F56                     u1990:
  8876  002F56  5003               	movf	strlen@a^0,w,c
  8877  002F58  5C01               	subwf	strlen@s^0,w,c
  8878  002F5A  6E01               	movwf	?_strlen^0,c
  8879  002F5C  5004               	movf	(strlen@a+1)^0,w,c
  8880  002F5E  5802               	subwfb	(strlen@s+1)^0,w,c
  8881  002F60  6E02               	movwf	(?_strlen+1)^0,c
  8882  002F62  0012               	return		;funcret
  8883  002F64                     __end_of_strlen:
  8884                           	opt callstack 0
  8885                           
  8886 ;; *************** function _fputs *****************
  8887 ;; Defined at:
  8888 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  8889 ;; Parameters:    Size  Location     Type
  8890 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8891 ;;		 -> dbuf(32), 
  8892 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8893 ;;		 -> sprintf@f(6), 
  8894 ;; Auto vars:     Size  Location     Type
  8895 ;;  i               2   14[COMRAM] int 
  8896 ;;  c               1   13[COMRAM] unsigned char 
  8897 ;; Return value:  Size  Location     Type
  8898 ;;                  2    9[COMRAM] int 
  8899 ;; Registers used:
  8900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8901 ;; Tracked objects:
  8902 ;;		On entry : 0/0
  8903 ;;		On exit  : 0/0
  8904 ;;		Unchanged: 0/0
  8905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8906 ;;      Params:         4       0       0       0       0       0       0       0       0
  8907 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8908 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8909 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8910 ;;Total ram usage:        7 bytes
  8911 ;; Hardware stack levels used:    1
  8912 ;; Hardware stack levels required when called:    3
  8913 ;; This function calls:
  8914 ;;		_fputc
  8915 ;; This function is called by:
  8916 ;;		_pad
  8917 ;; This function uses a non-reentrant model
  8918 ;;
  8919                           
  8920                           	psect	text47
  8921  002D42                     __ptext47:
  8922                           	opt callstack 0
  8923  002D42                     _fputs:
  8924                           	opt callstack 20
  8925  002D42  0E00               	movlw	0
  8926  002D44  6E10               	movwf	(fputs@i+1)^0,c
  8927  002D46  0E00               	movlw	0
  8928  002D48  6E0F               	movwf	fputs@i^0,c
  8929  002D4A  EFB2  F016         	goto	l3238
  8930  002D4E                     l3234:
  8931  002D4E  C00E  F001         	movff	fputs@c,fputc@c
  8932  002D52  6A02               	clrf	(fputc@c+1)^0,c
  8933  002D54  C00C  F003         	movff	fputs@fp,fputc@fp
  8934  002D58  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8935  002D5C  EC43  F010         	call	_fputc	;wreg free
  8936  002D60  4A0F               	infsnz	fputs@i^0,f,c
  8937  002D62  2A10               	incf	(fputs@i+1)^0,f,c
  8938  002D64                     l3238:
  8939  002D64  500F               	movf	fputs@i^0,w,c
  8940  002D66  240A               	addwf	fputs@s^0,w,c
  8941  002D68  6ED9               	movwf	fsr2l,c
  8942  002D6A  5010               	movf	(fputs@i+1)^0,w,c
  8943  002D6C  200B               	addwfc	(fputs@s+1)^0,w,c
  8944  002D6E  6EDA               	movwf	fsr2h,c
  8945  002D70  50DF               	movf	indf2,w,c
  8946  002D72  6E0E               	movwf	fputs@c^0,c
  8947  002D74  500E               	movf	fputs@c^0,w,c
  8948  002D76  A4D8               	btfss	status,2,c
  8949  002D78  EFC0  F016         	goto	u1981
  8950  002D7C  EFC2  F016         	goto	u1980
  8951  002D80                     u1981:
  8952  002D80  EFA7  F016         	goto	l3234
  8953  002D84                     u1980:
  8954  002D84  0012               	return		;funcret
  8955  002D86                     __end_of_fputs:
  8956                           	opt callstack 0
  8957                           
  8958 ;; *************** function _fputc *****************
  8959 ;; Defined at:
  8960 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  8961 ;; Parameters:    Size  Location     Type
  8962 ;;  c               2    0[COMRAM] int 
  8963 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8964 ;;		 -> sprintf@f(6), 
  8965 ;; Auto vars:     Size  Location     Type
  8966 ;;		None
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  2    0[COMRAM] int 
  8969 ;; Registers used:
  8970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 0/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8976 ;;      Params:         4       0       0       0       0       0       0       0       0
  8977 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8978 ;;      Temps:          5       0       0       0       0       0       0       0       0
  8979 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8980 ;;Total ram usage:        9 bytes
  8981 ;; Hardware stack levels used:    1
  8982 ;; Hardware stack levels required when called:    2
  8983 ;; This function calls:
  8984 ;;		_putch
  8985 ;; This function is called by:
  8986 ;;		_pad
  8987 ;;		_stoa
  8988 ;;		_vfpfcnvrt
  8989 ;;		_fputs
  8990 ;; This function uses a non-reentrant model
  8991 ;;
  8992                           
  8993                           	psect	text48
  8994  002086                     __ptext48:
  8995                           	opt callstack 0
  8996  002086                     _fputc:
  8997                           	opt callstack 22
  8998  002086  5003               	movf	fputc@fp^0,w,c
  8999  002088  1004               	iorwf	(fputc@fp+1)^0,w,c
  9000  00208A  B4D8               	btfsc	status,2,c
  9001  00208C  EF4A  F010         	goto	u1941
  9002  002090  EF4C  F010         	goto	u1940
  9003  002094                     u1941:
  9004  002094  EF55  F010         	goto	l3222
  9005  002098                     u1940:
  9006  002098  5003               	movf	fputc@fp^0,w,c
  9007  00209A  1004               	iorwf	(fputc@fp+1)^0,w,c
  9008  00209C  A4D8               	btfss	status,2,c
  9009  00209E  EF53  F010         	goto	u1951
  9010  0020A2  EF55  F010         	goto	u1950
  9011  0020A6                     u1951:
  9012  0020A6  EF5A  F010         	goto	l3224
  9013  0020AA                     u1950:
  9014  0020AA                     l3222:
  9015  0020AA  5001               	movf	fputc@c^0,w,c
  9016  0020AC  ECA6  F018         	call	_putch
  9017  0020B0  EFA7  F010         	goto	l1374
  9018  0020B4                     l3224:
  9019  0020B4  EE20 F004          	lfsr	2,4
  9020  0020B8  5003               	movf	fputc@fp^0,w,c
  9021  0020BA  26D9               	addwf	fsr2l,f,c
  9022  0020BC  5004               	movf	(fputc@fp+1)^0,w,c
  9023  0020BE  22DA               	addwfc	fsr2h,f,c
  9024  0020C0  50DE               	movf	postinc2,w,c
  9025  0020C2  10DE               	iorwf	postinc2,w,c
  9026  0020C4  B4D8               	btfsc	status,2,c
  9027  0020C6  EF67  F010         	goto	u1961
  9028  0020CA  EF69  F010         	goto	u1960
  9029  0020CE                     u1961:
  9030  0020CE  EF84  F010         	goto	l3228
  9031  0020D2                     u1960:
  9032  0020D2  EE20 F004          	lfsr	2,4
  9033  0020D6  5003               	movf	fputc@fp^0,w,c
  9034  0020D8  26D9               	addwf	fsr2l,f,c
  9035  0020DA  5004               	movf	(fputc@fp+1)^0,w,c
  9036  0020DC  22DA               	addwfc	fsr2h,f,c
  9037  0020DE  EE10 F002          	lfsr	1,2
  9038  0020E2  5003               	movf	fputc@fp^0,w,c
  9039  0020E4  26E1               	addwf	fsr1l,f,c
  9040  0020E6  5004               	movf	(fputc@fp+1)^0,w,c
  9041  0020E8  22E2               	addwfc	fsr1h,f,c
  9042  0020EA  50DE               	movf	postinc2,w,c
  9043  0020EC  5CE6               	subwf	postinc1,w,c
  9044  0020EE  50E6               	movf	postinc1,w,c
  9045  0020F0  0A80               	xorlw	128
  9046  0020F2  6E09               	movwf	(??_fputc+4)^0,c
  9047  0020F4  50DE               	movf	postinc2,w,c
  9048  0020F6  0A80               	xorlw	128
  9049  0020F8  5809               	subwfb	(??_fputc+4)^0,w,c
  9050  0020FA  B0D8               	btfsc	status,0,c
  9051  0020FC  EF82  F010         	goto	u1971
  9052  002100  EF84  F010         	goto	u1970
  9053  002104                     u1971:
  9054  002104  EFA7  F010         	goto	l1374
  9055  002108                     u1970:
  9056  002108                     l3228:
  9057  002108  EE20 F002          	lfsr	2,2
  9058  00210C  5003               	movf	fputc@fp^0,w,c
  9059  00210E  26D9               	addwf	fsr2l,f,c
  9060  002110  5004               	movf	(fputc@fp+1)^0,w,c
  9061  002112  22DA               	addwfc	fsr2h,f,c
  9062  002114  CFDE F005          	movff	postinc2,??_fputc
  9063  002118  CFDD F006          	movff	postdec2,??_fputc+1
  9064  00211C  C003  FFD9         	movff	fputc@fp,fsr2l
  9065  002120  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9066  002124  CFDE F007          	movff	postinc2,??_fputc+2
  9067  002128  CFDD F008          	movff	postdec2,??_fputc+3
  9068  00212C  5005               	movf	??_fputc^0,w,c
  9069  00212E  2407               	addwf	(??_fputc+2)^0,w,c
  9070  002130  6ED9               	movwf	fsr2l,c
  9071  002132  5006               	movf	(??_fputc+1)^0,w,c
  9072  002134  2008               	addwfc	(??_fputc+3)^0,w,c
  9073  002136  6EDA               	movwf	fsr2h,c
  9074  002138  C001  FFDF         	movff	fputc@c,indf2
  9075  00213C  EE20 F002          	lfsr	2,2
  9076  002140  5003               	movf	fputc@fp^0,w,c
  9077  002142  26D9               	addwf	fsr2l,f,c
  9078  002144  5004               	movf	(fputc@fp+1)^0,w,c
  9079  002146  22DA               	addwfc	fsr2h,f,c
  9080  002148  2ADE               	incf	postinc2,f,c
  9081  00214A  0E00               	movlw	0
  9082  00214C  22DD               	addwfc	postdec2,f,c
  9083  00214E                     l1374:
  9084  00214E  0012               	return		;funcret
  9085  002150                     __end_of_fputc:
  9086                           	opt callstack 0
  9087                           
  9088 ;; *************** function _putch *****************
  9089 ;; Defined at:
  9090 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  9091 ;; Parameters:    Size  Location     Type
  9092 ;;  c               1    wreg     unsigned char 
  9093 ;; Auto vars:     Size  Location     Type
  9094 ;;  c               1    0[COMRAM] unsigned char 
  9095 ;; Return value:  Size  Location     Type
  9096 ;;                  1    wreg      void 
  9097 ;; Registers used:
  9098 ;;		wreg
  9099 ;; Tracked objects:
  9100 ;;		On entry : 0/0
  9101 ;;		On exit  : 0/0
  9102 ;;		Unchanged: 0/0
  9103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9104 ;;      Params:         0       0       0       0       0       0       0       0       0
  9105 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9106 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9107 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9108 ;;Total ram usage:        0 bytes
  9109 ;; Hardware stack levels used:    1
  9110 ;; Hardware stack levels required when called:    1
  9111 ;; This function calls:
  9112 ;;		Nothing
  9113 ;; This function is called by:
  9114 ;;		_fputc
  9115 ;; This function uses a non-reentrant model
  9116 ;;
  9117                           
  9118                           	psect	text49
  9119  00314C                     __ptext49:
  9120                           	opt callstack 0
  9121  00314C                     _putch:
  9122                           	opt callstack 22
  9123  00314C  0012               	return		;funcret
  9124  00314E                     __end_of_putch:
  9125                           	opt callstack 0
  9126                           
  9127 ;; *************** function _atoi *****************
  9128 ;; Defined at:
  9129 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  9130 ;; Parameters:    Size  Location     Type
  9131 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9132 ;;		 -> STR_30(45), STR_29(29), STR_28(32), STR_27(45), 
  9133 ;;		 -> STR_26(29), STR_25(32), STR_24(24), STR_23(25), 
  9134 ;;		 -> STR_22(24), STR_21(27), STR_20(24), STR_19(23), 
  9135 ;;		 -> STR_18(25), STR_17(24), 
  9136 ;; Auto vars:     Size  Location     Type
  9137 ;;  n               2   20[COMRAM] int 
  9138 ;;  neg             2   13[COMRAM] int 
  9139 ;; Return value:  Size  Location     Type
  9140 ;;                  2    7[COMRAM] int 
  9141 ;; Registers used:
  9142 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9143 ;; Tracked objects:
  9144 ;;		On entry : 0/0
  9145 ;;		On exit  : 0/0
  9146 ;;		Unchanged: 0/0
  9147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9148 ;;      Params:         2       0       0       0       0       0       0       0       0
  9149 ;;      Locals:         9       0       0       0       0       0       0       0       0
  9150 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9151 ;;      Totals:        15       0       0       0       0       0       0       0       0
  9152 ;;Total ram usage:       15 bytes
  9153 ;; Hardware stack levels used:    1
  9154 ;; Hardware stack levels required when called:    2
  9155 ;; This function calls:
  9156 ;;		___wmul
  9157 ;;		_isdigit
  9158 ;;		_isspace
  9159 ;; This function is called by:
  9160 ;;		_vfpfcnvrt
  9161 ;; This function uses a non-reentrant model
  9162 ;;
  9163                           
  9164                           	psect	text50
  9165  000FE2                     __ptext50:
  9166                           	opt callstack 0
  9167  000FE2                     _atoi:
  9168                           	opt callstack 23
  9169  000FE2  0E00               	movlw	0
  9170  000FE4  6E16               	movwf	(atoi@n+1)^0,c
  9171  000FE6  0E00               	movlw	0
  9172  000FE8  6E15               	movwf	atoi@n^0,c
  9173  000FEA  0E00               	movlw	0
  9174  000FEC  6E0F               	movwf	(atoi@neg+1)^0,c
  9175  000FEE  0E00               	movlw	0
  9176  000FF0  6E0E               	movwf	atoi@neg^0,c
  9177  000FF2  EFFD  F007         	goto	l3506
  9178  000FF6                     l3504:
  9179  000FF6  4A08               	infsnz	atoi@s^0,f,c
  9180  000FF8  2A09               	incf	(atoi@s+1)^0,f,c
  9181  000FFA                     l3506:
  9182  000FFA  0E01               	movlw	1
  9183  000FFC  6E14               	movwf	_atoi$1543^0,c
  9184  000FFE  C008  FFF6         	movff	atoi@s,tblptrl
  9185  001002  C009  FFF7         	movff	atoi@s+1,tblptrh
  9186  001006                     	if	0	;tblptru may be non-zero
  9187  001006                     	endif
  9188  001006                     	if	0	;tblptru may be non-zero
  9189  001006                     	endif
  9190  001006  0008               	tblrd		*
  9191  001008  50F5               	movf	tablat,w,c
  9192  00100A  0A20               	xorlw	32
  9193  00100C  B4D8               	btfsc	status,2,c
  9194  00100E  EF0B  F008         	goto	u2491
  9195  001012  EF0D  F008         	goto	u2490
  9196  001016                     u2491:
  9197  001016  EF2A  F008         	goto	l3514
  9198  00101A                     u2490:
  9199  00101A  0EF7               	movlw	247
  9200  00101C  6E0A               	movwf	??_atoi^0,c
  9201  00101E  0EFF               	movlw	255
  9202  001020  6E0B               	movwf	(??_atoi+1)^0,c
  9203  001022  C008  FFF6         	movff	atoi@s,tblptrl
  9204  001026  C009  FFF7         	movff	atoi@s+1,tblptrh
  9205  00102A                     	if	0	;tblptru may be non-zero
  9206  00102A                     	endif
  9207  00102A                     	if	0	;tblptru may be non-zero
  9208  00102A                     	endif
  9209  00102A  0008               	tblrd		*
  9210  00102C  50F5               	movf	tablat,w,c
  9211  00102E  6E0C               	movwf	(??_atoi+2)^0,c
  9212  001030  6A0D               	clrf	(??_atoi+3)^0,c
  9213  001032  500A               	movf	??_atoi^0,w,c
  9214  001034  260C               	addwf	(??_atoi+2)^0,f,c
  9215  001036  500B               	movf	(??_atoi+1)^0,w,c
  9216  001038  220D               	addwfc	(??_atoi+3)^0,f,c
  9217  00103A  500D               	movf	(??_atoi+3)^0,w,c
  9218  00103C  E109               	bnz	u2500
  9219  00103E  0E05               	movlw	5
  9220  001040  5C0C               	subwf	(??_atoi+2)^0,w,c
  9221  001042  A0D8               	btfss	status,0,c
  9222  001044  EF26  F008         	goto	u2501
  9223  001048  EF28  F008         	goto	u2500
  9224  00104C                     u2501:
  9225  00104C  EF2A  F008         	goto	l3514
  9226  001050                     u2500:
  9227  001050  0E00               	movlw	0
  9228  001052  6E14               	movwf	_atoi$1543^0,c
  9229  001054                     l3514:
  9230  001054  C014  F010         	movff	_atoi$1543,_atoi$1542
  9231  001058  6A11               	clrf	(_atoi$1542+1)^0,c
  9232  00105A  5010               	movf	_atoi$1542^0,w,c
  9233  00105C  1011               	iorwf	(_atoi$1542+1)^0,w,c
  9234  00105E  A4D8               	btfss	status,2,c
  9235  001060  EF34  F008         	goto	u2511
  9236  001064  EF36  F008         	goto	u2510
  9237  001068                     u2511:
  9238  001068  EFFB  F007         	goto	l3504
  9239  00106C                     u2510:
  9240  00106C  EF40  F008         	goto	l3524
  9241  001070                     l3520:
  9242  001070  0E00               	movlw	0
  9243  001072  6E0F               	movwf	(atoi@neg+1)^0,c
  9244  001074  0E01               	movlw	1
  9245  001076  6E0E               	movwf	atoi@neg^0,c
  9246  001078                     l3522:
  9247  001078  4A08               	infsnz	atoi@s^0,f,c
  9248  00107A  2A09               	incf	(atoi@s+1)^0,f,c
  9249  00107C  EF75  F008         	goto	l3530
  9250  001080                     l3524:
  9251  001080  C008  FFF6         	movff	atoi@s,tblptrl
  9252  001084  C009  FFF7         	movff	atoi@s+1,tblptrh
  9253  001088                     	if	0	;tblptru may be non-zero
  9254  001088                     	endif
  9255  001088                     	if	0	;tblptru may be non-zero
  9256  001088                     	endif
  9257  001088  0008               	tblrd		*
  9258  00108A  50F5               	movf	tablat,w,c
  9259  00108C  6E0A               	movwf	??_atoi^0,c
  9260  00108E  6A0B               	clrf	(??_atoi+1)^0,c
  9261                           
  9262                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9263                           ; Switch size 1, requested type "simple"
  9264                           ; Number of cases is 1, Range of values is 0 to 0
  9265                           ; switch strategies available:
  9266                           ; Name         Instructions Cycles
  9267                           ; simple_byte            4     3 (average)
  9268                           ;	Chosen strategy is simple_byte
  9269  001090  500B               	movf	(??_atoi+1)^0,w,c
  9270  001092  0A00               	xorlw	0	; case 0
  9271  001094  B4D8               	btfsc	status,2,c
  9272  001096  EF4F  F008         	goto	l5058
  9273  00109A  EF75  F008         	goto	l3530
  9274  00109E                     l5058:
  9275                           
  9276                           ; Switch size 1, requested type "simple"
  9277                           ; Number of cases is 2, Range of values is 43 to 45
  9278                           ; switch strategies available:
  9279                           ; Name         Instructions Cycles
  9280                           ; simple_byte            7     4 (average)
  9281                           ;	Chosen strategy is simple_byte
  9282  00109E  500A               	movf	??_atoi^0,w,c
  9283  0010A0  0A2B               	xorlw	43	; case 43
  9284  0010A2  B4D8               	btfsc	status,2,c
  9285  0010A4  EF3C  F008         	goto	l3522
  9286  0010A8  0A06               	xorlw	6	; case 45
  9287  0010AA  B4D8               	btfsc	status,2,c
  9288  0010AC  EF38  F008         	goto	l3520
  9289  0010B0  EF75  F008         	goto	l3530
  9290  0010B4                     l3526:
  9291  0010B4  C015  F001         	movff	atoi@n,___wmul@multiplier
  9292  0010B8  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9293  0010BC  0E00               	movlw	0
  9294  0010BE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9295  0010C0  0E0A               	movlw	10
  9296  0010C2  6E03               	movwf	___wmul@multiplicand^0,c
  9297  0010C4  EC08  F018         	call	___wmul	;wreg free
  9298  0010C8  C008  FFF6         	movff	atoi@s,tblptrl
  9299  0010CC  C009  FFF7         	movff	atoi@s+1,tblptrh
  9300  0010D0                     	if	0	;tblptru may be non-zero
  9301  0010D0                     	endif
  9302  0010D0                     	if	0	;tblptru may be non-zero
  9303  0010D0                     	endif
  9304  0010D0  0008               	tblrd		*
  9305  0010D2  50F5               	movf	tablat,w,c
  9306  0010D4  5E01               	subwf	?___wmul^0,f,c
  9307  0010D6  0E00               	movlw	0
  9308  0010D8  5A02               	subwfb	(?___wmul+1)^0,f,c
  9309  0010DA  0E30               	movlw	48
  9310  0010DC  2401               	addwf	?___wmul^0,w,c
  9311  0010DE  6E15               	movwf	atoi@n^0,c
  9312  0010E0  0E00               	movlw	0
  9313  0010E2  2002               	addwfc	(?___wmul+1)^0,w,c
  9314  0010E4  6E16               	movwf	(atoi@n+1)^0,c
  9315  0010E6  EF3C  F008         	goto	l3522
  9316  0010EA                     l3530:
  9317  0010EA  0ED0               	movlw	208
  9318  0010EC  6E0A               	movwf	??_atoi^0,c
  9319  0010EE  0EFF               	movlw	255
  9320  0010F0  6E0B               	movwf	(??_atoi+1)^0,c
  9321  0010F2  C008  FFF6         	movff	atoi@s,tblptrl
  9322  0010F6  C009  FFF7         	movff	atoi@s+1,tblptrh
  9323  0010FA                     	if	0	;tblptru may be non-zero
  9324  0010FA                     	endif
  9325  0010FA                     	if	0	;tblptru may be non-zero
  9326  0010FA                     	endif
  9327  0010FA  0008               	tblrd		*
  9328  0010FC  50F5               	movf	tablat,w,c
  9329  0010FE  6E0C               	movwf	(??_atoi+2)^0,c
  9330  001100  6A0D               	clrf	(??_atoi+3)^0,c
  9331  001102  500A               	movf	??_atoi^0,w,c
  9332  001104  260C               	addwf	(??_atoi+2)^0,f,c
  9333  001106  500B               	movf	(??_atoi+1)^0,w,c
  9334  001108  220D               	addwfc	(??_atoi+3)^0,f,c
  9335  00110A  500D               	movf	(??_atoi+3)^0,w,c
  9336  00110C  E10A               	bnz	u2520
  9337  00110E  0E0A               	movlw	10
  9338  001110  5C0C               	subwf	(??_atoi+2)^0,w,c
  9339  001112  A0D8               	btfss	status,0,c
  9340  001114  EF8E  F008         	goto	u2521
  9341  001118  EF91  F008         	goto	u2520
  9342  00111C                     u2521:
  9343  00111C  0E01               	movlw	1
  9344  00111E  EF92  F008         	goto	u2530
  9345  001122                     u2520:
  9346  001122  0E00               	movlw	0
  9347  001124                     u2530:
  9348  001124  6E12               	movwf	_atoi$1544^0,c
  9349  001126  6A13               	clrf	(_atoi$1544+1)^0,c
  9350  001128  5012               	movf	_atoi$1544^0,w,c
  9351  00112A  1013               	iorwf	(_atoi$1544+1)^0,w,c
  9352  00112C  A4D8               	btfss	status,2,c
  9353  00112E  EF9B  F008         	goto	u2541
  9354  001132  EF9D  F008         	goto	u2540
  9355  001136                     u2541:
  9356  001136  EF5A  F008         	goto	l3526
  9357  00113A                     u2540:
  9358  00113A  500E               	movf	atoi@neg^0,w,c
  9359  00113C  100F               	iorwf	(atoi@neg+1)^0,w,c
  9360  00113E  A4D8               	btfss	status,2,c
  9361  001140  EFA4  F008         	goto	u2551
  9362  001144  EFA6  F008         	goto	u2550
  9363  001148                     u2551:
  9364  001148  EFB4  F008         	goto	l1345
  9365  00114C                     u2550:
  9366  00114C  C015  F00A         	movff	atoi@n,??_atoi
  9367  001150  C016  F00B         	movff	atoi@n+1,??_atoi+1
  9368  001154  1E0A               	comf	??_atoi^0,f,c
  9369  001156  1E0B               	comf	(??_atoi+1)^0,f,c
  9370  001158  4A0A               	infsnz	??_atoi^0,f,c
  9371  00115A  2A0B               	incf	(??_atoi+1)^0,f,c
  9372  00115C  C00A  F008         	movff	??_atoi,?_atoi
  9373  001160  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9374  001164  EFB8  F008         	goto	l1348
  9375  001168                     l1345:
  9376  001168  C015  F008         	movff	atoi@n,?_atoi
  9377  00116C  C016  F009         	movff	atoi@n+1,?_atoi+1
  9378  001170                     l1348:
  9379  001170  0012               	return		;funcret
  9380  001172                     __end_of_atoi:
  9381                           	opt callstack 0
  9382                           
  9383 ;; *************** function _isspace *****************
  9384 ;; Defined at:
  9385 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  9386 ;; Parameters:    Size  Location     Type
  9387 ;;  c               2    0[COMRAM] int 
  9388 ;; Auto vars:     Size  Location     Type
  9389 ;;		None
  9390 ;; Return value:  Size  Location     Type
  9391 ;;                  2    0[COMRAM] int 
  9392 ;; Registers used:
  9393 ;;		wreg, status,2, status,0
  9394 ;; Tracked objects:
  9395 ;;		On entry : 0/0
  9396 ;;		On exit  : 0/0
  9397 ;;		Unchanged: 0/0
  9398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9399 ;;      Params:         2       0       0       0       0       0       0       0       0
  9400 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9401 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9402 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9403 ;;Total ram usage:        7 bytes
  9404 ;; Hardware stack levels used:    1
  9405 ;; Hardware stack levels required when called:    1
  9406 ;; This function calls:
  9407 ;;		Nothing
  9408 ;; This function is called by:
  9409 ;;		_atoi
  9410 ;; This function uses a non-reentrant model
  9411 ;;
  9412                           
  9413                           	psect	text51
  9414  002C5C                     __ptext51:
  9415                           	opt callstack 0
  9416  002C5C                     _isspace:
  9417                           	opt callstack 23
  9418  002C5C  0E01               	movlw	1
  9419  002C5E  6E07               	movwf	_isspace$1560^0,c
  9420  002C60  0E20               	movlw	32
  9421  002C62  1801               	xorwf	isspace@c^0,w,c
  9422  002C64  1002               	iorwf	(isspace@c+1)^0,w,c
  9423  002C66  B4D8               	btfsc	status,2,c
  9424  002C68  EF38  F016         	goto	u2201
  9425  002C6C  EF3A  F016         	goto	u2200
  9426  002C70                     u2201:
  9427  002C70  EF53  F016         	goto	l3374
  9428  002C74                     u2200:
  9429  002C74  0EF7               	movlw	247
  9430  002C76  6E03               	movwf	??_isspace^0,c
  9431  002C78  0EFF               	movlw	255
  9432  002C7A  6E04               	movwf	(??_isspace+1)^0,c
  9433  002C7C  C001  F005         	movff	isspace@c,??_isspace+2
  9434  002C80  C002  F006         	movff	isspace@c+1,??_isspace+3
  9435  002C84  5003               	movf	??_isspace^0,w,c
  9436  002C86  2605               	addwf	(??_isspace+2)^0,f,c
  9437  002C88  5004               	movf	(??_isspace+1)^0,w,c
  9438  002C8A  2206               	addwfc	(??_isspace+3)^0,f,c
  9439  002C8C  5006               	movf	(??_isspace+3)^0,w,c
  9440  002C8E  E109               	bnz	u2210
  9441  002C90  0E05               	movlw	5
  9442  002C92  5C05               	subwf	(??_isspace+2)^0,w,c
  9443  002C94  A0D8               	btfss	status,0,c
  9444  002C96  EF4F  F016         	goto	u2211
  9445  002C9A  EF51  F016         	goto	u2210
  9446  002C9E                     u2211:
  9447  002C9E  EF53  F016         	goto	l3374
  9448  002CA2                     u2210:
  9449  002CA2  0E00               	movlw	0
  9450  002CA4  6E07               	movwf	_isspace$1560^0,c
  9451  002CA6                     l3374:
  9452  002CA6  C007  F001         	movff	_isspace$1560,?_isspace
  9453  002CAA  6A02               	clrf	(?_isspace+1)^0,c
  9454  002CAC  0012               	return		;funcret
  9455  002CAE                     __end_of_isspace:
  9456                           	opt callstack 0
  9457                           
  9458 ;; *************** function _isdigit *****************
  9459 ;; Defined at:
  9460 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  9461 ;; Parameters:    Size  Location     Type
  9462 ;;  c               2    0[COMRAM] int 
  9463 ;; Auto vars:     Size  Location     Type
  9464 ;;		None
  9465 ;; Return value:  Size  Location     Type
  9466 ;;                  2    0[COMRAM] int 
  9467 ;; Registers used:
  9468 ;;		wreg, status,2, status,0
  9469 ;; Tracked objects:
  9470 ;;		On entry : 0/0
  9471 ;;		On exit  : 0/0
  9472 ;;		Unchanged: 0/0
  9473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9474 ;;      Params:         2       0       0       0       0       0       0       0       0
  9475 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9476 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9477 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9478 ;;Total ram usage:        6 bytes
  9479 ;; Hardware stack levels used:    1
  9480 ;; Hardware stack levels required when called:    1
  9481 ;; This function calls:
  9482 ;;		Nothing
  9483 ;; This function is called by:
  9484 ;;		_vfpfcnvrt
  9485 ;;		_atoi
  9486 ;; This function uses a non-reentrant model
  9487 ;;
  9488                           
  9489                           	psect	text52
  9490  002EC0                     __ptext52:
  9491                           	opt callstack 0
  9492  002EC0                     _isdigit:
  9493                           	opt callstack 24
  9494  002EC0  0ED0               	movlw	208
  9495  002EC2  6E03               	movwf	??_isdigit^0,c
  9496  002EC4  0EFF               	movlw	255
  9497  002EC6  6E04               	movwf	(??_isdigit+1)^0,c
  9498  002EC8  C001  F005         	movff	isdigit@c,??_isdigit+2
  9499  002ECC  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  9500  002ED0  5003               	movf	??_isdigit^0,w,c
  9501  002ED2  2605               	addwf	(??_isdigit+2)^0,f,c
  9502  002ED4  5004               	movf	(??_isdigit+1)^0,w,c
  9503  002ED6  2206               	addwfc	(??_isdigit+3)^0,f,c
  9504  002ED8  5006               	movf	(??_isdigit+3)^0,w,c
  9505  002EDA  E10A               	bnz	u2050
  9506  002EDC  0E0A               	movlw	10
  9507  002EDE  5C05               	subwf	(??_isdigit+2)^0,w,c
  9508  002EE0  A0D8               	btfss	status,0,c
  9509  002EE2  EF75  F017         	goto	u2051
  9510  002EE6  EF78  F017         	goto	u2050
  9511  002EEA                     u2051:
  9512  002EEA  0E01               	movlw	1
  9513  002EEC  EF79  F017         	goto	u2060
  9514  002EF0                     u2050:
  9515  002EF0  0E00               	movlw	0
  9516  002EF2                     u2060:
  9517  002EF2  6E01               	movwf	?_isdigit^0,c
  9518  002EF4  6A02               	clrf	(?_isdigit+1)^0,c
  9519  002EF6  0012               	return		;funcret
  9520  002EF8                     __end_of_isdigit:
  9521                           	opt callstack 0
  9522                           
  9523 ;; *************** function _limpiarBuffer *****************
  9524 ;; Defined at:
  9525 ;;		line 1057 in file "main.c"
  9526 ;; Parameters:    Size  Location     Type
  9527 ;;		None
  9528 ;; Auto vars:     Size  Location     Type
  9529 ;;  i               2    0[COMRAM] int 
  9530 ;; Return value:  Size  Location     Type
  9531 ;;                  1    wreg      void 
  9532 ;; Registers used:
  9533 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9534 ;; Tracked objects:
  9535 ;;		On entry : 0/0
  9536 ;;		On exit  : 0/0
  9537 ;;		Unchanged: 0/0
  9538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9539 ;;      Params:         0       0       0       0       0       0       0       0       0
  9540 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9542 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9543 ;;Total ram usage:        2 bytes
  9544 ;; Hardware stack levels used:    1
  9545 ;; Hardware stack levels required when called:    1
  9546 ;; This function calls:
  9547 ;;		Nothing
  9548 ;; This function is called by:
  9549 ;;		_lecturaWifi
  9550 ;;		_dameDatosSistema
  9551 ;;		_mostrarDatosSensores
  9552 ;;		_mostrarDatosSensoresWIFI
  9553 ;; This function uses a non-reentrant model
  9554 ;;
  9555                           
  9556                           	psect	text53
  9557  002E06                     __ptext53:
  9558                           	opt callstack 0
  9559  002E06                     _limpiarBuffer:
  9560                           	opt callstack 27
  9561  002E06                     
  9562                           ;main.c: 1058:     for (int i = 0; i < 50; i++) {
  9563  002E06  0E00               	movlw	0
  9564  002E08  6E02               	movwf	(limpiarBuffer@i+1)^0,c
  9565  002E0A  0E00               	movlw	0
  9566  002E0C  6E01               	movwf	limpiarBuffer@i^0,c
  9567  002E0E                     l3996:
  9568                           
  9569                           ;main.c: 1059:         buffer[i] = 0;
  9570  002E0E  0E00               	movlw	low _buffer
  9571  002E10  2401               	addwf	limpiarBuffer@i^0,w,c
  9572  002E12  6ED9               	movwf	fsr2l,c
  9573  002E14  0E01               	movlw	high _buffer
  9574  002E16  2002               	addwfc	(limpiarBuffer@i+1)^0,w,c
  9575  002E18  6EDA               	movwf	fsr2h,c
  9576  002E1A  0E00               	movlw	0
  9577  002E1C  6EDF               	movwf	indf2,c
  9578  002E1E                     
  9579                           ;main.c: 1060:     }
  9580  002E1E  4A01               	infsnz	limpiarBuffer@i^0,f,c
  9581  002E20  2A02               	incf	(limpiarBuffer@i+1)^0,f,c
  9582  002E22  BE02               	btfsc	(limpiarBuffer@i+1)^0,7,c
  9583  002E24  EF1D  F017         	goto	u3061
  9584  002E28  5002               	movf	(limpiarBuffer@i+1)^0,w,c
  9585  002E2A  E109               	bnz	u3060
  9586  002E2C  0E32               	movlw	50
  9587  002E2E  5C01               	subwf	limpiarBuffer@i^0,w,c
  9588  002E30  A0D8               	btfss	status,0,c
  9589  002E32  EF1D  F017         	goto	u3061
  9590  002E36  EF1F  F017         	goto	u3060
  9591  002E3A                     u3061:
  9592  002E3A  EF07  F017         	goto	l3996
  9593  002E3E                     u3060:
  9594  002E3E                     
  9595                           ;main.c: 1062:     buffer[50 - 1] = '\0';
  9596  002E3E  0E00               	movlw	0
  9597  002E40  0101               	movlb	1	; () banked
  9598  002E42  6F31               	movwf	(_buffer+49)& (0+255),b
  9599  002E44                     
  9600                           ; BSR set to: 1
  9601  002E44  0012               	return		;funcret
  9602  002E46                     __end_of_limpiarBuffer:
  9603                           	opt callstack 0
  9604                           
  9605 ;; *************** function _UART_printf *****************
  9606 ;; Defined at:
  9607 ;;		line 57 in file "./UART.h"
  9608 ;; Parameters:    Size  Location     Type
  9609 ;;  cadena          2    1[COMRAM] PTR unsigned char 
  9610 ;;		 -> STR_33(11), STR_32(9), STR_31(17), buffer(50), 
  9611 ;;		 -> dameDatosSistema@bufferHorario(30), STR_16(26), STR_15(38), STR_14(36), 
  9612 ;;		 -> STR_13(28), STR_12(13), STR_11(3), STR_10(14), 
  9613 ;;		 -> STR_9(36), STR_8(26), STR_7(23), STR_6(34), 
  9614 ;;		 -> STR_5(32), STR_4(49), STR_3(37), STR_2(27), 
  9615 ;;		 -> STR_1(37), 
  9616 ;; Auto vars:     Size  Location     Type
  9617 ;;		None
  9618 ;; Return value:  Size  Location     Type
  9619 ;;                  1    wreg      void 
  9620 ;; Registers used:
  9621 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9622 ;; Tracked objects:
  9623 ;;		On entry : 0/0
  9624 ;;		On exit  : 0/0
  9625 ;;		Unchanged: 0/0
  9626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9627 ;;      Params:         2       0       0       0       0       0       0       0       0
  9628 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9630 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9631 ;;Total ram usage:        2 bytes
  9632 ;; Hardware stack levels used:    1
  9633 ;; Hardware stack levels required when called:    2
  9634 ;; This function calls:
  9635 ;;		_UART_write
  9636 ;; This function is called by:
  9637 ;;		_dameDatosSistema
  9638 ;;		_mostrarDatosSensores
  9639 ;;		_mostrarDatosSensoresWIFI
  9640 ;;		_mostrarMenu
  9641 ;;		_configBluetoothHC_06
  9642 ;; This function uses a non-reentrant model
  9643 ;;
  9644                           
  9645                           	psect	text54
  9646  002A48                     __ptext54:
  9647                           	opt callstack 0
  9648  002A48                     _UART_printf:
  9649                           	opt callstack 26
  9650  002A48                     
  9651                           ;./UART.h: 58:     while (*cadena) {
  9652  002A48  EF3A  F015         	goto	l4114
  9653  002A4C                     l4110:
  9654                           
  9655                           ;./UART.h: 59:         UART_write(*cadena++);
  9656  002A4C  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  9657  002A50  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  9658  002A54  6AF8               	clrf	tblptru,c
  9659  002A56  0E07               	movlw	(high __ramtop+-1)
  9660  002A58  64F7               	cpfsgt	tblptrh,c
  9661  002A5A  D003               	bra	u3207
  9662  002A5C  0008               	tblrd		*
  9663  002A5E  50F5               	movf	tablat,w,c
  9664  002A60  D005               	bra	u3200
  9665  002A62                     u3207:
  9666  002A62  CFF6 FFE1          	movff	tblptrl,fsr1l
  9667  002A66  CFF7 FFE2          	movff	tblptrh,fsr1h
  9668  002A6A  50E7               	movf	indf1,w,c
  9669  002A6C                     u3200:
  9670  002A6C  EC66  F018         	call	_UART_write
  9671  002A70  4A02               	infsnz	UART_printf@cadena^0,f,c
  9672  002A72  2A03               	incf	(UART_printf@cadena+1)^0,f,c
  9673  002A74                     l4114:
  9674                           
  9675                           ;./UART.h: 58:     while (*cadena) {
  9676  002A74  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  9677  002A78  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  9678  002A7C  6AF8               	clrf	tblptru,c
  9679  002A7E  0E07               	movlw	(high __ramtop+-1)
  9680  002A80  64F7               	cpfsgt	tblptrh,c
  9681  002A82  D003               	bra	u3217
  9682  002A84  0008               	tblrd		*
  9683  002A86  50F5               	movf	tablat,w,c
  9684  002A88  D005               	bra	u3210
  9685  002A8A                     u3217:
  9686  002A8A  CFF6 FFE1          	movff	tblptrl,fsr1l
  9687  002A8E  CFF7 FFE2          	movff	tblptrh,fsr1h
  9688  002A92  50E7               	movf	indf1,w,c
  9689  002A94                     u3210:
  9690  002A94  0900               	iorlw	0
  9691  002A96  A4D8               	btfss	status,2,c
  9692  002A98  EF50  F015         	goto	u3221
  9693  002A9C  EF52  F015         	goto	u3220
  9694  002AA0                     u3221:
  9695  002AA0  EF26  F015         	goto	l4110
  9696  002AA4                     u3220:
  9697  002AA4  0012               	return		;funcret
  9698  002AA6                     __end_of_UART_printf:
  9699                           	opt callstack 0
  9700                           
  9701 ;; *************** function _asignarHorarios *****************
  9702 ;; Defined at:
  9703 ;;		line 411 in file "main.c"
  9704 ;; Parameters:    Size  Location     Type
  9705 ;;		None
  9706 ;; Auto vars:     Size  Location     Type
  9707 ;;  i               2   20[COMRAM] int 
  9708 ;;  Rx              1   24[COMRAM] unsigned char 
  9709 ;;  hora            1   23[COMRAM] unsigned char 
  9710 ;;  diaRegar        1   22[COMRAM] unsigned char 
  9711 ;; Return value:  Size  Location     Type
  9712 ;;                  1    wreg      void 
  9713 ;; Registers used:
  9714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9715 ;; Tracked objects:
  9716 ;;		On entry : 0/0
  9717 ;;		On exit  : 0/0
  9718 ;;		Unchanged: 0/0
  9719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9720 ;;      Params:         0       0       0       0       0       0       0       0       0
  9721 ;;      Locals:         5       0       0       0       0       0       0       0       0
  9722 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9723 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9724 ;;Total ram usage:        7 bytes
  9725 ;; Hardware stack levels used:    1
  9726 ;; Hardware stack levels required when called:    5
  9727 ;; This function calls:
  9728 ;;		_UART_write
  9729 ;;		_escribeHorariosMemoria
  9730 ;;		_getValue
  9731 ;; This function is called by:
  9732 ;;		_sistemaPrincipal
  9733 ;; This function uses a non-reentrant model
  9734 ;;
  9735                           
  9736                           	psect	text55
  9737  001B66                     __ptext55:
  9738                           	opt callstack 0
  9739  001B66                     _asignarHorarios:
  9740                           	opt callstack 24
  9741  001B66                     
  9742                           ;main.c: 413:     unsigned char hora;;main.c: 414:     unsigned char Rx;;main.c: 415:   
      +                            unsigned char diaRegar;;main.c: 420:     hora = getValue(2);
  9743  001B66  0E00               	movlw	0
  9744  001B68  6E03               	movwf	(getValue@numCharacters+1)^0,c
  9745  001B6A  0E02               	movlw	2
  9746  001B6C  6E02               	movwf	getValue@numCharacters^0,c
  9747  001B6E  ECE5  F006         	call	_getValue	;wreg free
  9748  001B72  6E18               	movwf	asignarHorarios@hora^0,c
  9749  001B74                     
  9750                           ;main.c: 422:     if (hora != '@') {
  9751  001B74  0E40               	movlw	64
  9752  001B76  1818               	xorwf	asignarHorarios@hora^0,w,c
  9753  001B78  B4D8               	btfsc	status,2,c
  9754  001B7A  EFC1  F00D         	goto	u3511
  9755  001B7E  EFC3  F00D         	goto	u3510
  9756  001B82                     u3511:
  9757  001B82  EF51  F00E         	goto	l327
  9758  001B86                     u3510:
  9759  001B86                     
  9760                           ;main.c: 426:         Rx = getValue(1);
  9761  001B86  0E00               	movlw	0
  9762  001B88  6E03               	movwf	(getValue@numCharacters+1)^0,c
  9763  001B8A  0E01               	movlw	1
  9764  001B8C  6E02               	movwf	getValue@numCharacters^0,c
  9765  001B8E  ECE5  F006         	call	_getValue	;wreg free
  9766  001B92  6E19               	movwf	asignarHorarios@Rx^0,c
  9767  001B94                     
  9768                           ;main.c: 429:         if (Rx == 1) {
  9769  001B94  0419               	decf	asignarHorarios@Rx^0,w,c
  9770  001B96  A4D8               	btfss	status,2,c
  9771  001B98  EFD0  F00D         	goto	u3521
  9772  001B9C  EFD2  F00D         	goto	u3520
  9773  001BA0                     u3521:
  9774  001BA0  EF3C  F00E         	goto	l4440
  9775  001BA4                     u3520:
  9776  001BA4                     
  9777                           ;main.c: 434:             for (int i = 0; i < 7; i++) {
  9778  001BA4  0E00               	movlw	0
  9779  001BA6  6E16               	movwf	(asignarHorarios@i+1)^0,c
  9780  001BA8  0E00               	movlw	0
  9781  001BAA  6E15               	movwf	asignarHorarios@i^0,c
  9782  001BAC                     l4414:
  9783                           
  9784                           ;main.c: 438:                 diaRegar = getValue(1);
  9785  001BAC  0E00               	movlw	0
  9786  001BAE  6E03               	movwf	(getValue@numCharacters+1)^0,c
  9787  001BB0  0E01               	movlw	1
  9788  001BB2  6E02               	movwf	getValue@numCharacters^0,c
  9789  001BB4  ECE5  F006         	call	_getValue	;wreg free
  9790  001BB8  6E17               	movwf	asignarHorarios@diaRegar^0,c
  9791  001BBA                     
  9792                           ;main.c: 440:                 if (diaRegar != '@') {
  9793  001BBA  0E40               	movlw	64
  9794  001BBC  1817               	xorwf	asignarHorarios@diaRegar^0,w,c
  9795  001BBE  B4D8               	btfsc	status,2,c
  9796  001BC0  EFE4  F00D         	goto	u3531
  9797  001BC4  EFE6  F00D         	goto	u3530
  9798  001BC8                     u3531:
  9799  001BC8  EF1B  F00E         	goto	l4430
  9800  001BCC                     u3530:
  9801  001BCC  EFF0  F00D         	goto	l4426
  9802  001BD0                     l4420:
  9803                           
  9804                           ;main.c: 444:                             diaRegar = '0';
  9805  001BD0  0E30               	movlw	48
  9806  001BD2  6E17               	movwf	asignarHorarios@diaRegar^0,c
  9807                           
  9808                           ;main.c: 445:                             break;
  9809  001BD4  EF05  F00E         	goto	l4428
  9810  001BD8                     l4422:
  9811                           
  9812                           ;main.c: 448:                             diaRegar = '1';
  9813  001BD8  0E31               	movlw	49
  9814  001BDA  6E17               	movwf	asignarHorarios@diaRegar^0,c
  9815                           
  9816                           ;main.c: 449:                             break;
  9817  001BDC  EF05  F00E         	goto	l4428
  9818  001BE0                     l4426:
  9819  001BE0  5017               	movf	asignarHorarios@diaRegar^0,w,c
  9820  001BE2  6E13               	movwf	??_asignarHorarios^0,c
  9821  001BE4  6A14               	clrf	(??_asignarHorarios+1)^0,c
  9822                           
  9823                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9824                           ; Switch size 1, requested type "simple"
  9825                           ; Number of cases is 1, Range of values is 0 to 0
  9826                           ; switch strategies available:
  9827                           ; Name         Instructions Cycles
  9828                           ; simple_byte            4     3 (average)
  9829                           ;	Chosen strategy is simple_byte
  9830  001BE6  5014               	movf	(??_asignarHorarios+1)^0,w,c
  9831  001BE8  0A00               	xorlw	0	; case 0
  9832  001BEA  B4D8               	btfsc	status,2,c
  9833  001BEC  EFFA  F00D         	goto	l5060
  9834  001BF0  EF05  F00E         	goto	l4428
  9835  001BF4                     l5060:
  9836                           
  9837                           ; Switch size 1, requested type "simple"
  9838                           ; Number of cases is 2, Range of values is 0 to 1
  9839                           ; switch strategies available:
  9840                           ; Name         Instructions Cycles
  9841                           ; simple_byte            7     4 (average)
  9842                           ;	Chosen strategy is simple_byte
  9843  001BF4  5013               	movf	??_asignarHorarios^0,w,c
  9844  001BF6  0A00               	xorlw	0	; case 0
  9845  001BF8  B4D8               	btfsc	status,2,c
  9846  001BFA  EFE8  F00D         	goto	l4420
  9847  001BFE  0A01               	xorlw	1	; case 1
  9848  001C00  B4D8               	btfsc	status,2,c
  9849  001C02  EFEC  F00D         	goto	l4422
  9850  001C06  EF05  F00E         	goto	l4428
  9851  001C0A                     l4428:
  9852                           
  9853                           ;main.c: 453:                     horarios[hora].dias[i] = diaRegar;
  9854  001C0A  5018               	movf	asignarHorarios@hora^0,w,c
  9855  001C0C  0D0C               	mullw	12
  9856  001C0E  0E32               	movlw	low _horarios
  9857  001C10  6E13               	movwf	??_asignarHorarios^0,c
  9858  001C12  0E01               	movlw	high _horarios
  9859  001C14  6E14               	movwf	(??_asignarHorarios+1)^0,c
  9860  001C16  0E01               	movlw	1
  9861  001C18  2613               	addwf	??_asignarHorarios^0,f,c
  9862  001C1A  0E00               	movlw	0
  9863  001C1C  2214               	addwfc	(??_asignarHorarios+1)^0,f,c
  9864  001C1E  50F3               	movf	243,w,c
  9865  001C20  2613               	addwf	??_asignarHorarios^0,f,c
  9866  001C22  50F4               	movf	244,w,c
  9867  001C24  2214               	addwfc	(??_asignarHorarios+1)^0,f,c
  9868  001C26  5015               	movf	asignarHorarios@i^0,w,c
  9869  001C28  2413               	addwf	??_asignarHorarios^0,w,c
  9870  001C2A  6ED9               	movwf	fsr2l,c
  9871  001C2C  5016               	movf	(asignarHorarios@i+1)^0,w,c
  9872  001C2E  2014               	addwfc	(??_asignarHorarios+1)^0,w,c
  9873  001C30  6EDA               	movwf	fsr2h,c
  9874  001C32  C017  FFDF         	movff	asignarHorarios@diaRegar,indf2
  9875  001C36                     l4430:
  9876                           
  9877                           ;main.c: 456:             }
  9878  001C36  4A15               	infsnz	asignarHorarios@i^0,f,c
  9879  001C38  2A16               	incf	(asignarHorarios@i+1)^0,f,c
  9880  001C3A  BE16               	btfsc	(asignarHorarios@i+1)^0,7,c
  9881  001C3C  EF29  F00E         	goto	u3541
  9882  001C40  5016               	movf	(asignarHorarios@i+1)^0,w,c
  9883  001C42  E109               	bnz	u3540
  9884  001C44  0E07               	movlw	7
  9885  001C46  5C15               	subwf	asignarHorarios@i^0,w,c
  9886  001C48  A0D8               	btfss	status,0,c
  9887  001C4A  EF29  F00E         	goto	u3541
  9888  001C4E  EF2B  F00E         	goto	u3540
  9889  001C52                     u3541:
  9890  001C52  EFD6  F00D         	goto	l4414
  9891  001C56                     u3540:
  9892  001C56                     
  9893                           ;main.c: 458:             horarios[hora].regar = Rx;
  9894  001C56  5018               	movf	asignarHorarios@hora^0,w,c
  9895  001C58  0D0C               	mullw	12
  9896  001C5A  0E3B               	movlw	low (_horarios+9)
  9897  001C5C  24F3               	addwf	243,w,c
  9898  001C5E  6ED9               	movwf	fsr2l,c
  9899  001C60  0E01               	movlw	high (_horarios+9)
  9900  001C62  20F4               	addwfc	prodh,w,c
  9901  001C64  6EDA               	movwf	fsr2h,c
  9902  001C66  C019  FFDF         	movff	asignarHorarios@Rx,indf2
  9903  001C6A                     
  9904                           ;main.c: 460:             escribeHorariosMemoria();
  9905  001C6A  EC5E  F00C         	call	_escribeHorariosMemoria	;wreg free
  9906  001C6E                     
  9907                           ;main.c: 464:             UART_write('E');
  9908  001C6E  0E45               	movlw	69
  9909  001C70  EC66  F018         	call	_UART_write
  9910                           
  9911                           ;main.c: 466:         } else if (Rx == 0) {
  9912  001C74  EF51  F00E         	goto	l327
  9913  001C78                     l4440:
  9914  001C78  5019               	movf	asignarHorarios@Rx^0,w,c
  9915  001C7A  A4D8               	btfss	status,2,c
  9916  001C7C  EF42  F00E         	goto	u3551
  9917  001C80  EF44  F00E         	goto	u3550
  9918  001C84                     u3551:
  9919  001C84  EF51  F00E         	goto	l327
  9920  001C88                     u3550:
  9921  001C88                     
  9922                           ;main.c: 467:             horarios[hora].regar = Rx;
  9923  001C88  5018               	movf	asignarHorarios@hora^0,w,c
  9924  001C8A  0D0C               	mullw	12
  9925  001C8C  0E3B               	movlw	low (_horarios+9)
  9926  001C8E  24F3               	addwf	243,w,c
  9927  001C90  6ED9               	movwf	fsr2l,c
  9928  001C92  0E01               	movlw	high (_horarios+9)
  9929  001C94  20F4               	addwfc	prodh,w,c
  9930  001C96  6EDA               	movwf	fsr2h,c
  9931  001C98  C019  FFDF         	movff	asignarHorarios@Rx,indf2
  9932  001C9C                     
  9933                           ;main.c: 469:             UART_write('E');
  9934  001C9C  0E45               	movlw	69
  9935  001C9E  EC66  F018         	call	_UART_write
  9936  001CA2                     l327:
  9937  001CA2  0012               	return		;funcret
  9938  001CA4                     __end_of_asignarHorarios:
  9939                           	opt callstack 0
  9940                           
  9941 ;; *************** function _getValue *****************
  9942 ;; Defined at:
  9943 ;;		line 881 in file "main.c"
  9944 ;; Parameters:    Size  Location     Type
  9945 ;;  numCharacter    2    1[COMRAM] short 
  9946 ;; Auto vars:     Size  Location     Type
  9947 ;;  i               2    8[COMRAM] int 
  9948 ;;  i               2    6[COMRAM] int 
  9949 ;;  Rx              1   11[COMRAM] unsigned char 
  9950 ;;  dato            1   10[COMRAM] unsigned char 
  9951 ;;  datoIncorrec    1    5[COMRAM] unsigned char 
  9952 ;; Return value:  Size  Location     Type
  9953 ;;                  1    wreg      unsigned char 
  9954 ;; Registers used:
  9955 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9956 ;; Tracked objects:
  9957 ;;		On entry : 0/0
  9958 ;;		On exit  : 0/0
  9959 ;;		Unchanged: 0/0
  9960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9961 ;;      Params:         2       0       0       0       0       0       0       0       0
  9962 ;;      Locals:         7       0       0       0       0       0       0       0       0
  9963 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9964 ;;      Totals:        11       0       0       0       0       0       0       0       0
  9965 ;;Total ram usage:       11 bytes
  9966 ;; Hardware stack levels used:    1
  9967 ;; Hardware stack levels required when called:    2
  9968 ;; This function calls:
  9969 ;;		_UART_read
  9970 ;;		_UART_write
  9971 ;; This function is called by:
  9972 ;;		_setRtc
  9973 ;;		_asignarHorarios
  9974 ;;		_setTiempoRegar
  9975 ;;		_lecturaWifi
  9976 ;;		_regadoRapido
  9977 ;; This function uses a non-reentrant model
  9978 ;;
  9979                           
  9980                           	psect	text56
  9981  000DCA                     __ptext56:
  9982                           	opt callstack 0
  9983  000DCA                     _getValue:
  9984                           	opt callstack 26
  9985  000DCA                     
  9986                           ;main.c: 884:     unsigned char datoIncorrecto = 0;
  9987  000DCA  0E00               	movlw	0
  9988  000DCC  6E06               	movwf	getValue@datoIncorrecto^0,c
  9989                           
  9990                           ;main.c: 885:     unsigned char dato = 0;
  9991  000DCE  0E00               	movlw	0
  9992  000DD0  6E0B               	movwf	getValue@dato^0,c
  9993                           
  9994                           ;main.c: 887:     switch (numCharacters) {
  9995  000DD2  EFC1  F007         	goto	l3932
  9996  000DD6                     l3854:
  9997                           
  9998                           ;main.c: 890:             Rx = UART_read();
  9999  000DD6  ECDB  F015         	call	_UART_read	;wreg free
 10000  000DDA  6E0C               	movwf	getValue@Rx^0,c
 10001  000DDC                     
 10002                           ;main.c: 892:             if (Rx >= 48 && Rx <= 57) {
 10003  000DDC  0E2F               	movlw	47
 10004  000DDE  640C               	cpfsgt	getValue@Rx^0,c
 10005  000DE0  EFF4  F006         	goto	u2941
 10006  000DE4  EFF6  F006         	goto	u2940
 10007  000DE8                     u2941:
 10008  000DE8  EF04  F007         	goto	l3864
 10009  000DEC                     u2940:
 10010  000DEC  0E3A               	movlw	58
 10011  000DEE  600C               	cpfslt	getValue@Rx^0,c
 10012  000DF0  EFFC  F006         	goto	u2951
 10013  000DF4  EFFE  F006         	goto	u2950
 10014  000DF8                     u2951:
 10015  000DF8  EF04  F007         	goto	l3864
 10016  000DFC                     u2950:
 10017  000DFC                     
 10018                           ;main.c: 893:                 Rx -= 48;
 10019  000DFC  0E30               	movlw	48
 10020  000DFE  5E0C               	subwf	getValue@Rx^0,f,c
 10021  000E00                     
 10022                           ;main.c: 894:                 dato = Rx;
 10023  000E00  C00C  F00B         	movff	getValue@Rx,getValue@dato
 10024                           
 10025                           ;main.c: 895:             } else {
 10026  000E04  EFDB  F007         	goto	l3934
 10027  000E08                     l3864:
 10028                           
 10029                           ;main.c: 896:                 UART_write('@');
 10030  000E08  0E40               	movlw	64
 10031  000E0A  EC66  F018         	call	_UART_write
 10032  000E0E                     
 10033                           ;main.c: 897:                 datoIncorrecto = 1;
 10034  000E0E  0E01               	movlw	1
 10035  000E10  6E06               	movwf	getValue@datoIncorrecto^0,c
 10036  000E12  EFDB  F007         	goto	l3934
 10037  000E16                     l3868:
 10038                           
 10039                           ;main.c: 903:             for (int i = 0; i < 2; i++) {
 10040  000E16  0E00               	movlw	0
 10041  000E18  6E08               	movwf	(getValue@i+1)^0,c
 10042  000E1A  0E00               	movlw	0
 10043  000E1C  6E07               	movwf	getValue@i^0,c
 10044  000E1E                     l3874:
 10045                           
 10046                           ;main.c: 905:                 Rx = UART_read();
 10047  000E1E  ECDB  F015         	call	_UART_read	;wreg free
 10048  000E22  6E0C               	movwf	getValue@Rx^0,c
 10049  000E24                     
 10050                           ;main.c: 907:                 if (Rx >= 48 && Rx <= 57) {
 10051  000E24  0E2F               	movlw	47
 10052  000E26  640C               	cpfsgt	getValue@Rx^0,c
 10053  000E28  EF18  F007         	goto	u2961
 10054  000E2C  EF1A  F007         	goto	u2960
 10055  000E30                     u2961:
 10056  000E30  EF48  F007         	goto	l3890
 10057  000E34                     u2960:
 10058  000E34  0E3A               	movlw	58
 10059  000E36  600C               	cpfslt	getValue@Rx^0,c
 10060  000E38  EF20  F007         	goto	u2971
 10061  000E3C  EF22  F007         	goto	u2970
 10062  000E40                     u2971:
 10063  000E40  EF48  F007         	goto	l3890
 10064  000E44                     u2970:
 10065  000E44                     
 10066                           ;main.c: 909:                     Rx -= 48;
 10067  000E44  0E30               	movlw	48
 10068  000E46  5E0C               	subwf	getValue@Rx^0,f,c
 10069                           
 10070                           ;main.c: 911:                     switch (i) {
 10071  000E48  EF32  F007         	goto	l3888
 10072  000E4C                     l443:
 10073                           
 10074                           ;main.c: 913:                             dato = Rx;
 10075  000E4C  C00C  F00B         	movff	getValue@Rx,getValue@dato
 10076  000E50                     
 10077                           ;main.c: 914:                             dato *= 10;
 10078  000E50  0E0A               	movlw	10
 10079  000E52  020B               	mulwf	getValue@dato^0,c
 10080  000E54  50F3               	movf	prodl,w,c
 10081  000E56  6E0B               	movwf	getValue@dato^0,c
 10082                           
 10083                           ;main.c: 915:                             break;
 10084  000E58  EF4F  F007         	goto	l3894
 10085  000E5C                     l3884:
 10086                           
 10087                           ;main.c: 918:                             dato += Rx;
 10088  000E5C  500C               	movf	getValue@Rx^0,w,c
 10089  000E5E  260B               	addwf	getValue@dato^0,f,c
 10090                           
 10091                           ;main.c: 919:                             break;
 10092  000E60  EF4F  F007         	goto	l3894
 10093  000E64                     l3888:
 10094  000E64  C007  F004         	movff	getValue@i,??_getValue
 10095  000E68  C008  F005         	movff	getValue@i+1,??_getValue+1
 10096                           
 10097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10098                           ; Switch size 1, requested type "simple"
 10099                           ; Number of cases is 1, Range of values is 0 to 0
 10100                           ; switch strategies available:
 10101                           ; Name         Instructions Cycles
 10102                           ; simple_byte            4     3 (average)
 10103                           ;	Chosen strategy is simple_byte
 10104  000E6C  5005               	movf	(??_getValue+1)^0,w,c
 10105  000E6E  0A00               	xorlw	0	; case 0
 10106  000E70  B4D8               	btfsc	status,2,c
 10107  000E72  EF3D  F007         	goto	l5062
 10108  000E76  EF4F  F007         	goto	l3894
 10109  000E7A                     l5062:
 10110                           
 10111                           ; Switch size 1, requested type "simple"
 10112                           ; Number of cases is 2, Range of values is 0 to 1
 10113                           ; switch strategies available:
 10114                           ; Name         Instructions Cycles
 10115                           ; simple_byte            7     4 (average)
 10116                           ;	Chosen strategy is simple_byte
 10117  000E7A  5004               	movf	??_getValue^0,w,c
 10118  000E7C  0A00               	xorlw	0	; case 0
 10119  000E7E  B4D8               	btfsc	status,2,c
 10120  000E80  EF26  F007         	goto	l443
 10121  000E84  0A01               	xorlw	1	; case 1
 10122  000E86  B4D8               	btfsc	status,2,c
 10123  000E88  EF2E  F007         	goto	l3884
 10124  000E8C  EF4F  F007         	goto	l3894
 10125  000E90                     l3890:
 10126                           
 10127                           ;main.c: 927:                     datoIncorrecto = 1;
 10128  000E90  0E01               	movlw	1
 10129  000E92  6E06               	movwf	getValue@datoIncorrecto^0,c
 10130  000E94                     
 10131                           ;main.c: 928:                     UART_write('@');
 10132  000E94  0E40               	movlw	64
 10133  000E96  EC66  F018         	call	_UART_write
 10134                           
 10135                           ;main.c: 929:                     break;
 10136  000E9A  EFDB  F007         	goto	l3934
 10137  000E9E                     l3894:
 10138                           
 10139                           ;main.c: 931:             }
 10140  000E9E  4A07               	infsnz	getValue@i^0,f,c
 10141  000EA0  2A08               	incf	(getValue@i+1)^0,f,c
 10142  000EA2  BE08               	btfsc	(getValue@i+1)^0,7,c
 10143  000EA4  EF5D  F007         	goto	u2981
 10144  000EA8  5008               	movf	(getValue@i+1)^0,w,c
 10145  000EAA  E109               	bnz	u2980
 10146  000EAC  0E02               	movlw	2
 10147  000EAE  5C07               	subwf	getValue@i^0,w,c
 10148  000EB0  A0D8               	btfss	status,0,c
 10149  000EB2  EF5D  F007         	goto	u2981
 10150  000EB6  EF5F  F007         	goto	u2980
 10151  000EBA                     u2981:
 10152  000EBA  EF0F  F007         	goto	l3874
 10153  000EBE                     u2980:
 10154  000EBE  EFDB  F007         	goto	l3934
 10155  000EC2                     l3898:
 10156                           
 10157                           ;main.c: 935:             for (int i = 0; i < 3; i++) {
 10158  000EC2  0E00               	movlw	0
 10159  000EC4  6E0A               	movwf	(getValue@i_969+1)^0,c
 10160  000EC6  0E00               	movlw	0
 10161  000EC8  6E09               	movwf	getValue@i_969^0,c
 10162  000ECA                     l3904:
 10163                           
 10164                           ;main.c: 937:                 Rx = UART_read();
 10165  000ECA  ECDB  F015         	call	_UART_read	;wreg free
 10166  000ECE  6E0C               	movwf	getValue@Rx^0,c
 10167  000ED0                     
 10168                           ;main.c: 939:                 if (Rx >= 48 && Rx <= 57) {
 10169  000ED0  0E2F               	movlw	47
 10170  000ED2  640C               	cpfsgt	getValue@Rx^0,c
 10171  000ED4  EF6E  F007         	goto	u2991
 10172  000ED8  EF70  F007         	goto	u2990
 10173  000EDC                     u2991:
 10174  000EDC  EFA8  F007         	goto	l3922
 10175  000EE0                     u2990:
 10176  000EE0  0E3A               	movlw	58
 10177  000EE2  600C               	cpfslt	getValue@Rx^0,c
 10178  000EE4  EF76  F007         	goto	u3001
 10179  000EE8  EF78  F007         	goto	u3000
 10180  000EEC                     u3001:
 10181  000EEC  EFA8  F007         	goto	l3922
 10182  000EF0                     u3000:
 10183  000EF0                     
 10184                           ;main.c: 941:                     Rx -= 48;
 10185  000EF0  0E30               	movlw	48
 10186  000EF2  5E0C               	subwf	getValue@Rx^0,f,c
 10187                           
 10188                           ;main.c: 943:                     switch (i) {
 10189  000EF4  EF8E  F007         	goto	l3920
 10190  000EF8                     l453:
 10191                           
 10192                           ;main.c: 945:                             dato = Rx;
 10193  000EF8  C00C  F00B         	movff	getValue@Rx,getValue@dato
 10194  000EFC                     
 10195                           ;main.c: 946:                             dato *= 100;
 10196  000EFC  0E64               	movlw	100
 10197  000EFE  020B               	mulwf	getValue@dato^0,c
 10198  000F00  50F3               	movf	prodl,w,c
 10199  000F02  6E0B               	movwf	getValue@dato^0,c
 10200                           
 10201                           ;main.c: 947:                             break;
 10202  000F04  EFAF  F007         	goto	l3926
 10203  000F08                     l3914:
 10204                           
 10205                           ;main.c: 950:                             dato += (Rx * 10);
 10206  000F08  500C               	movf	getValue@Rx^0,w,c
 10207  000F0A  0D0A               	mullw	10
 10208  000F0C  50F3               	movf	243,w,c
 10209  000F0E  260B               	addwf	getValue@dato^0,f,c
 10210                           
 10211                           ;main.c: 951:                             break;
 10212  000F10  EFAF  F007         	goto	l3926
 10213  000F14                     l3916:
 10214                           
 10215                           ;main.c: 954:                             dato += Rx;
 10216  000F14  500C               	movf	getValue@Rx^0,w,c
 10217  000F16  260B               	addwf	getValue@dato^0,f,c
 10218                           
 10219                           ;main.c: 955:                             break;
 10220  000F18  EFAF  F007         	goto	l3926
 10221  000F1C                     l3920:
 10222  000F1C  C009  F004         	movff	getValue@i_969,??_getValue
 10223  000F20  C00A  F005         	movff	getValue@i_969+1,??_getValue+1
 10224                           
 10225                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10226                           ; Switch size 1, requested type "simple"
 10227                           ; Number of cases is 1, Range of values is 0 to 0
 10228                           ; switch strategies available:
 10229                           ; Name         Instructions Cycles
 10230                           ; simple_byte            4     3 (average)
 10231                           ;	Chosen strategy is simple_byte
 10232  000F24  5005               	movf	(??_getValue+1)^0,w,c
 10233  000F26  0A00               	xorlw	0	; case 0
 10234  000F28  B4D8               	btfsc	status,2,c
 10235  000F2A  EF99  F007         	goto	l5064
 10236  000F2E  EFAF  F007         	goto	l3926
 10237  000F32                     l5064:
 10238                           
 10239                           ; Switch size 1, requested type "simple"
 10240                           ; Number of cases is 3, Range of values is 0 to 2
 10241                           ; switch strategies available:
 10242                           ; Name         Instructions Cycles
 10243                           ; simple_byte           10     6 (average)
 10244                           ;	Chosen strategy is simple_byte
 10245  000F32  5004               	movf	??_getValue^0,w,c
 10246  000F34  0A00               	xorlw	0	; case 0
 10247  000F36  B4D8               	btfsc	status,2,c
 10248  000F38  EF7C  F007         	goto	l453
 10249  000F3C  0A01               	xorlw	1	; case 1
 10250  000F3E  B4D8               	btfsc	status,2,c
 10251  000F40  EF84  F007         	goto	l3914
 10252  000F44  0A03               	xorlw	3	; case 2
 10253  000F46  B4D8               	btfsc	status,2,c
 10254  000F48  EF8A  F007         	goto	l3916
 10255  000F4C  EFAF  F007         	goto	l3926
 10256  000F50                     l3922:
 10257                           
 10258                           ;main.c: 963:                     datoIncorrecto = 1;
 10259  000F50  0E01               	movlw	1
 10260  000F52  6E06               	movwf	getValue@datoIncorrecto^0,c
 10261  000F54                     
 10262                           ;main.c: 964:                     UART_write('@');
 10263  000F54  0E40               	movlw	64
 10264  000F56  EC66  F018         	call	_UART_write
 10265                           
 10266                           ;main.c: 965:                     break;
 10267  000F5A  EFDB  F007         	goto	l3934
 10268  000F5E                     l3926:
 10269                           
 10270                           ;main.c: 967:             }
 10271  000F5E  4A09               	infsnz	getValue@i_969^0,f,c
 10272  000F60  2A0A               	incf	(getValue@i_969+1)^0,f,c
 10273  000F62  BE0A               	btfsc	(getValue@i_969+1)^0,7,c
 10274  000F64  EFBD  F007         	goto	u3011
 10275  000F68  500A               	movf	(getValue@i_969+1)^0,w,c
 10276  000F6A  E109               	bnz	u3010
 10277  000F6C  0E03               	movlw	3
 10278  000F6E  5C09               	subwf	getValue@i_969^0,w,c
 10279  000F70  A0D8               	btfss	status,0,c
 10280  000F72  EFBD  F007         	goto	u3011
 10281  000F76  EFBF  F007         	goto	u3010
 10282  000F7A                     u3011:
 10283  000F7A  EF65  F007         	goto	l3904
 10284  000F7E                     u3010:
 10285  000F7E  EFDB  F007         	goto	l3934
 10286  000F82                     l3932:
 10287  000F82  C002  F004         	movff	getValue@numCharacters,??_getValue
 10288  000F86  C003  F005         	movff	getValue@numCharacters+1,??_getValue+1
 10289                           
 10290                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10291                           ; Switch size 1, requested type "simple"
 10292                           ; Number of cases is 1, Range of values is 0 to 0
 10293                           ; switch strategies available:
 10294                           ; Name         Instructions Cycles
 10295                           ; simple_byte            4     3 (average)
 10296                           ;	Chosen strategy is simple_byte
 10297  000F8A  5005               	movf	(??_getValue+1)^0,w,c
 10298  000F8C  0A00               	xorlw	0	; case 0
 10299  000F8E  B4D8               	btfsc	status,2,c
 10300  000F90  EFCC  F007         	goto	l5066
 10301  000F94  EFDB  F007         	goto	l3934
 10302  000F98                     l5066:
 10303                           
 10304                           ; Switch size 1, requested type "simple"
 10305                           ; Number of cases is 3, Range of values is 1 to 3
 10306                           ; switch strategies available:
 10307                           ; Name         Instructions Cycles
 10308                           ; simple_byte           10     6 (average)
 10309                           ;	Chosen strategy is simple_byte
 10310  000F98  5004               	movf	??_getValue^0,w,c
 10311  000F9A  0A01               	xorlw	1	; case 1
 10312  000F9C  B4D8               	btfsc	status,2,c
 10313  000F9E  EFEB  F006         	goto	l3854
 10314  000FA2  0A03               	xorlw	3	; case 2
 10315  000FA4  B4D8               	btfsc	status,2,c
 10316  000FA6  EF0B  F007         	goto	l3868
 10317  000FAA  0A01               	xorlw	1	; case 3
 10318  000FAC  B4D8               	btfsc	status,2,c
 10319  000FAE  EF61  F007         	goto	l3898
 10320  000FB2  EFDB  F007         	goto	l3934
 10321  000FB6                     l3934:
 10322                           
 10323                           ;main.c: 976:     if (esperandoDatos || datoIncorrecto) {
 10324  000FB6  0100               	movlb	0	; () banked
 10325  000FB8  5189               	movf	_esperandoDatos& (0+255),w,b
 10326  000FBA  A4D8               	btfss	status,2,c
 10327  000FBC  EFE2  F007         	goto	u3021
 10328  000FC0  EFE4  F007         	goto	u3020
 10329  000FC4                     u3021:
 10330  000FC4  EFEC  F007         	goto	l3938
 10331  000FC8                     u3020:
 10332  000FC8                     
 10333                           ; BSR set to: 0
 10334  000FC8  5006               	movf	getValue@datoIncorrecto^0,w,c
 10335  000FCA  B4D8               	btfsc	status,2,c
 10336  000FCC  EFEA  F007         	goto	u3031
 10337  000FD0  EFEC  F007         	goto	u3030
 10338  000FD4                     u3031:
 10339  000FD4  EFEF  F007         	goto	l3944
 10340  000FD8                     u3030:
 10341  000FD8                     l3938:
 10342                           
 10343                           ; BSR set to: 0
 10344                           ;main.c: 979:         return '@';
 10345  000FD8  0E40               	movlw	64
 10346  000FDA  EFF0  F007         	goto	l463
 10347  000FDE                     l3944:
 10348                           
 10349                           ; BSR set to: 0
 10350                           ;main.c: 981:         return dato;
 10351  000FDE  500B               	movf	getValue@dato^0,w,c
 10352  000FE0                     l463:
 10353                           
 10354                           ; BSR set to: 0
 10355  000FE0  0012               	return		;funcret
 10356  000FE2                     __end_of_getValue:
 10357                           	opt callstack 0
 10358                           
 10359 ;; *************** function _UART_write *****************
 10360 ;; Defined at:
 10361 ;;		line 52 in file "./UART.h"
 10362 ;; Parameters:    Size  Location     Type
 10363 ;;  dato            1    wreg     unsigned char 
 10364 ;; Auto vars:     Size  Location     Type
 10365 ;;  dato            1    0[COMRAM] unsigned char 
 10366 ;; Return value:  Size  Location     Type
 10367 ;;                  1    wreg      void 
 10368 ;; Registers used:
 10369 ;;		wreg
 10370 ;; Tracked objects:
 10371 ;;		On entry : 0/0
 10372 ;;		On exit  : 0/0
 10373 ;;		Unchanged: 0/0
 10374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10375 ;;      Params:         0       0       0       0       0       0       0       0       0
 10376 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10377 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10378 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10379 ;;Total ram usage:        1 bytes
 10380 ;; Hardware stack levels used:    1
 10381 ;; Hardware stack levels required when called:    1
 10382 ;; This function calls:
 10383 ;;		Nothing
 10384 ;; This function is called by:
 10385 ;;		_UART_printf
 10386 ;;		_fijaDiaRtc
 10387 ;;		_leeHorariosMemoria
 10388 ;;		_fijaHoraRtc
 10389 ;;		_asignarHorarios
 10390 ;;		_setTiempoRegar
 10391 ;;		_lecturaWifi
 10392 ;;		_dameDatosSistema
 10393 ;;		_mostrarDatosSensores
 10394 ;;		_mostrarDatosSensoresWIFI
 10395 ;;		_getValue
 10396 ;;		_regadoRapido
 10397 ;; This function uses a non-reentrant model
 10398 ;;
 10399                           
 10400                           	psect	text57
 10401  0030CC                     __ptext57:
 10402                           	opt callstack 0
 10403  0030CC                     _UART_write:
 10404                           	opt callstack 26
 10405                           
 10406                           ; BSR set to: 0
 10407                           ;incstack = 0
 10408                           ;UART_write@dato stored from wreg
 10409  0030CC  6E01               	movwf	UART_write@dato^0,c
 10410  0030CE                     
 10411                           ;./UART.h: 53:     TXREG = dato;
 10412  0030CE  C001  FFAD         	movff	UART_write@dato,4013	;volatile
 10413  0030D2                     l138:
 10414  0030D2  A2AC               	btfss	172,1,c	;volatile
 10415  0030D4  EF6E  F018         	goto	u2591
 10416  0030D8  EF70  F018         	goto	u2590
 10417  0030DC                     u2591:
 10418  0030DC  EF69  F018         	goto	l138
 10419  0030E0                     u2590:
 10420  0030E0  0012               	return		;funcret
 10421  0030E2                     __end_of_UART_write:
 10422                           	opt callstack 0
 10423                           
 10424 ;; *************** function _UART_read *****************
 10425 ;; Defined at:
 10426 ;;		line 34 in file "./UART.h"
 10427 ;; Parameters:    Size  Location     Type
 10428 ;;		None
 10429 ;; Auto vars:     Size  Location     Type
 10430 ;;		None
 10431 ;; Return value:  Size  Location     Type
 10432 ;;                  1    wreg      unsigned char 
 10433 ;; Registers used:
 10434 ;;		wreg, status,2
 10435 ;; Tracked objects:
 10436 ;;		On entry : 0/0
 10437 ;;		On exit  : 0/0
 10438 ;;		Unchanged: 0/0
 10439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10440 ;;      Params:         0       0       0       0       0       0       0       0       0
 10441 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10442 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10443 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10444 ;;Total ram usage:        0 bytes
 10445 ;; Hardware stack levels used:    1
 10446 ;; Hardware stack levels required when called:    1
 10447 ;; This function calls:
 10448 ;;		Nothing
 10449 ;; This function is called by:
 10450 ;;		_lecturaWifi
 10451 ;;		_getValue
 10452 ;; This function uses a non-reentrant model
 10453 ;;
 10454                           
 10455                           	psect	text58
 10456  002BB6                     __ptext58:
 10457                           	opt callstack 0
 10458  002BB6                     _UART_read:
 10459                           	opt callstack 26
 10460  002BB6                     
 10461                           ;./UART.h: 36:     TMR0 = VALOR_TIMER0UART;
 10462  002BB6  0E67               	movlw	103
 10463  002BB8  6ED7               	movwf	215,c	;volatile
 10464  002BBA  0E69               	movlw	105
 10465  002BBC  6ED6               	movwf	214,c	;volatile
 10466                           
 10467                           ;./UART.h: 37:     esperaDatoConcluida = 0;
 10468  002BBE  0E00               	movlw	0
 10469  002BC0  0100               	movlb	0	; () banked
 10470  002BC2  6F8A               	movwf	_esperaDatoConcluida& (0+255),b
 10471                           
 10472                           ;./UART.h: 38:     esperandoDatos = 1;
 10473  002BC4  0E01               	movlw	1
 10474  002BC6  6F89               	movwf	_esperandoDatos& (0+255),b
 10475                           
 10476                           ;./UART.h: 39:     byteUart = 0;
 10477  002BC8  0E00               	movlw	0
 10478  002BCA  6F8B               	movwf	_byteUart& (0+255),b
 10479                           
 10480                           ;./UART.h: 40:     tiempoInactividadTrans = 0;
 10481  002BCC  0E00               	movlw	0
 10482  002BCE  6F8C               	movwf	_tiempoInactividadTrans& (0+255),b
 10483  002BD0                     l129:
 10484                           
 10485                           ; BSR set to: 0
 10486  002BD0  BA9E               	btfsc	158,5,c	;volatile
 10487  002BD2  EFED  F015         	goto	u2561
 10488  002BD6  EFEF  F015         	goto	u2560
 10489  002BDA                     u2561:
 10490  002BDA  EFF7  F015         	goto	l3564
 10491  002BDE                     u2560:
 10492  002BDE                     
 10493                           ; BSR set to: 0
 10494  002BDE  518A               	movf	_esperaDatoConcluida& (0+255),w,b
 10495  002BE0  B4D8               	btfsc	status,2,c
 10496  002BE2  EFF5  F015         	goto	u2571
 10497  002BE6  EFF7  F015         	goto	u2570
 10498  002BEA                     u2571:
 10499  002BEA  EFE8  F015         	goto	l129
 10500  002BEE                     u2570:
 10501  002BEE                     l3564:
 10502                           
 10503                           ; BSR set to: 0
 10504                           ;./UART.h: 44:     if (!esperaDatoConcluida) {
 10505  002BEE  518A               	movf	_esperaDatoConcluida& (0+255),w,b
 10506  002BF0  A4D8               	btfss	status,2,c
 10507  002BF2  EFFD  F015         	goto	u2581
 10508  002BF6  EFFF  F015         	goto	u2580
 10509  002BFA                     u2581:
 10510  002BFA  EF03  F016         	goto	l134
 10511  002BFE                     u2580:
 10512  002BFE                     
 10513                           ; BSR set to: 0
 10514                           ;./UART.h: 45:         byteUart = RCREG;
 10515  002BFE  CFAE F08B          	movff	4014,_byteUart	;volatile
 10516  002C02                     
 10517                           ; BSR set to: 0
 10518                           ;./UART.h: 46:         esperandoDatos = 0;
 10519  002C02  0E00               	movlw	0
 10520  002C04  6F89               	movwf	_esperandoDatos& (0+255),b
 10521  002C06                     l134:
 10522                           
 10523                           ; BSR set to: 0
 10524                           ;./UART.h: 49:     return byteUart;
 10525  002C06  518B               	movf	_byteUart& (0+255),w,b
 10526  002C08                     
 10527                           ; BSR set to: 0
 10528  002C08  0012               	return		;funcret
 10529  002C0A                     __end_of_UART_read:
 10530                           	opt callstack 0
 10531                           
 10532 ;; *************** function _escribeHorariosMemoria *****************
 10533 ;; Defined at:
 10534 ;;		line 254 in file "main.c"
 10535 ;; Parameters:    Size  Location     Type
 10536 ;;		None
 10537 ;; Auto vars:     Size  Location     Type
 10538 ;;  j               2   12[COMRAM] int 
 10539 ;;  i               2   16[COMRAM] int 
 10540 ;;  contMemoria     2   14[COMRAM] int 
 10541 ;; Return value:  Size  Location     Type
 10542 ;;                  1    wreg      void 
 10543 ;; Registers used:
 10544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10545 ;; Tracked objects:
 10546 ;;		On entry : 0/0
 10547 ;;		On exit  : 0/0
 10548 ;;		Unchanged: 0/0
 10549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10550 ;;      Params:         0       0       0       0       0       0       0       0       0
 10551 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10552 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10553 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10554 ;;Total ram usage:        8 bytes
 10555 ;; Hardware stack levels used:    1
 10556 ;; Hardware stack levels required when called:    4
 10557 ;; This function calls:
 10558 ;;		___wmul
 10559 ;;		_escribe_eeprom
 10560 ;; This function is called by:
 10561 ;;		_asignarHorarios
 10562 ;;		_setTiempoRegar
 10563 ;; This function uses a non-reentrant model
 10564 ;;
 10565                           
 10566                           	psect	text59
 10567  0018BC                     __ptext59:
 10568                           	opt callstack 0
 10569  0018BC                     _escribeHorariosMemoria:
 10570                           	opt callstack 24
 10571  0018BC                     
 10572                           ;main.c: 256:     int contMemoria = 0;
 10573  0018BC  0E00               	movlw	0
 10574  0018BE  6E10               	movwf	(escribeHorariosMemoria@contMemoria+1)^0,c
 10575  0018C0  0E00               	movlw	0
 10576  0018C2  6E0F               	movwf	escribeHorariosMemoria@contMemoria^0,c
 10577  0018C4                     
 10578                           ;main.c: 258:     escribe_eeprom(contMemoria++, 'T');
 10579  0018C4  0E00               	movlw	0
 10580  0018C6  6E08               	movwf	(escribe_eeprom@direccion+1)^0,c
 10581  0018C8  0E00               	movlw	0
 10582  0018CA  6E07               	movwf	escribe_eeprom@direccion^0,c
 10583  0018CC  0E54               	movlw	84
 10584  0018CE  6E09               	movwf	escribe_eeprom@dato^0,c
 10585  0018D0  ECB2  F017         	call	_escribe_eeprom	;wreg free
 10586  0018D4  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 10587  0018D6  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 10588  0018D8                     
 10589                           ;main.c: 261:     for (int i = 0; i < 24; i++) {
 10590  0018D8  0E00               	movlw	0
 10591  0018DA  6E12               	movwf	(escribeHorariosMemoria@i+1)^0,c
 10592  0018DC  0E00               	movlw	0
 10593  0018DE  6E11               	movwf	escribeHorariosMemoria@i^0,c
 10594  0018E0                     l4164:
 10595                           
 10596                           ;main.c: 262:         escribe_eeprom(contMemoria++, horarios[i].hora);
 10597  0018E0  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 10598  0018E4  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 10599  0018E8  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 10600  0018EC  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 10601  0018F0  0E00               	movlw	0
 10602  0018F2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10603  0018F4  0E0C               	movlw	12
 10604  0018F6  6E03               	movwf	___wmul@multiplicand^0,c
 10605  0018F8  EC08  F018         	call	___wmul	;wreg free
 10606  0018FC  0E32               	movlw	low _horarios
 10607  0018FE  2401               	addwf	?___wmul^0,w,c
 10608  001900  6ED9               	movwf	fsr2l,c
 10609  001902  0E01               	movlw	high _horarios
 10610  001904  2002               	addwfc	(?___wmul+1)^0,w,c
 10611  001906  6EDA               	movwf	fsr2h,c
 10612  001908  50DF               	movf	indf2,w,c
 10613  00190A  6E09               	movwf	escribe_eeprom@dato^0,c
 10614  00190C  ECB2  F017         	call	_escribe_eeprom	;wreg free
 10615  001910  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 10616  001912  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 10617  001914                     
 10618                           ;main.c: 264:         for (int j = 0; j < 7; j++) {
 10619  001914  0E00               	movlw	0
 10620  001916  6E0E               	movwf	(escribeHorariosMemoria@j+1)^0,c
 10621  001918  0E00               	movlw	0
 10622  00191A  6E0D               	movwf	escribeHorariosMemoria@j^0,c
 10623  00191C                     l4174:
 10624                           
 10625                           ;main.c: 265:             escribe_eeprom(contMemoria++, horarios[i].dias[j]);
 10626  00191C  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 10627  001920  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 10628  001924  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 10629  001928  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 10630  00192C  0E00               	movlw	0
 10631  00192E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10632  001930  0E0C               	movlw	12
 10633  001932  6E03               	movwf	___wmul@multiplicand^0,c
 10634  001934  EC08  F018         	call	___wmul	;wreg free
 10635  001938  0E32               	movlw	low _horarios
 10636  00193A  6E0B               	movwf	??_escribeHorariosMemoria^0,c
 10637  00193C  0E01               	movlw	high _horarios
 10638  00193E  6E0C               	movwf	(??_escribeHorariosMemoria+1)^0,c
 10639  001940  0E01               	movlw	1
 10640  001942  260B               	addwf	??_escribeHorariosMemoria^0,f,c
 10641  001944  0E00               	movlw	0
 10642  001946  220C               	addwfc	(??_escribeHorariosMemoria+1)^0,f,c
 10643  001948  5001               	movf	?___wmul^0,w,c
 10644  00194A  260B               	addwf	??_escribeHorariosMemoria^0,f,c
 10645  00194C  5002               	movf	(?___wmul+1)^0,w,c
 10646  00194E  220C               	addwfc	(??_escribeHorariosMemoria+1)^0,f,c
 10647  001950  500D               	movf	escribeHorariosMemoria@j^0,w,c
 10648  001952  240B               	addwf	??_escribeHorariosMemoria^0,w,c
 10649  001954  6ED9               	movwf	fsr2l,c
 10650  001956  500E               	movf	(escribeHorariosMemoria@j+1)^0,w,c
 10651  001958  200C               	addwfc	(??_escribeHorariosMemoria+1)^0,w,c
 10652  00195A  6EDA               	movwf	fsr2h,c
 10653  00195C  50DF               	movf	indf2,w,c
 10654  00195E  6E09               	movwf	escribe_eeprom@dato^0,c
 10655  001960  ECB2  F017         	call	_escribe_eeprom	;wreg free
 10656  001964  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 10657  001966  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 10658  001968                     
 10659                           ;main.c: 266:         }
 10660  001968  4A0D               	infsnz	escribeHorariosMemoria@j^0,f,c
 10661  00196A  2A0E               	incf	(escribeHorariosMemoria@j+1)^0,f,c
 10662  00196C  BE0E               	btfsc	(escribeHorariosMemoria@j+1)^0,7,c
 10663  00196E  EFC2  F00C         	goto	u3261
 10664  001972  500E               	movf	(escribeHorariosMemoria@j+1)^0,w,c
 10665  001974  E109               	bnz	u3260
 10666  001976  0E07               	movlw	7
 10667  001978  5C0D               	subwf	escribeHorariosMemoria@j^0,w,c
 10668  00197A  A0D8               	btfss	status,0,c
 10669  00197C  EFC2  F00C         	goto	u3261
 10670  001980  EFC4  F00C         	goto	u3260
 10671  001984                     u3261:
 10672  001984  EF8E  F00C         	goto	l4174
 10673  001988                     u3260:
 10674  001988                     
 10675                           ;main.c: 268:         escribe_eeprom(contMemoria++, horarios[i].regar);
 10676  001988  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 10677  00198C  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 10678  001990  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 10679  001994  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 10680  001998  0E00               	movlw	0
 10681  00199A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10682  00199C  0E0C               	movlw	12
 10683  00199E  6E03               	movwf	___wmul@multiplicand^0,c
 10684  0019A0  EC08  F018         	call	___wmul	;wreg free
 10685  0019A4  0E3B               	movlw	low (_horarios+9)
 10686  0019A6  2401               	addwf	?___wmul^0,w,c
 10687  0019A8  6ED9               	movwf	fsr2l,c
 10688  0019AA  0E01               	movlw	high (_horarios+9)
 10689  0019AC  2002               	addwfc	(?___wmul+1)^0,w,c
 10690  0019AE  6EDA               	movwf	fsr2h,c
 10691  0019B0  50DF               	movf	indf2,w,c
 10692  0019B2  6E09               	movwf	escribe_eeprom@dato^0,c
 10693  0019B4  ECB2  F017         	call	_escribe_eeprom	;wreg free
 10694  0019B8  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 10695  0019BA  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 10696  0019BC                     
 10697                           ;main.c: 269:         escribe_eeprom(contMemoria++, horarios[i].tiempoRegar);
 10698  0019BC  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 10699  0019C0  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 10700  0019C4  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 10701  0019C8  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 10702  0019CC  0E00               	movlw	0
 10703  0019CE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10704  0019D0  0E0C               	movlw	12
 10705  0019D2  6E03               	movwf	___wmul@multiplicand^0,c
 10706  0019D4  EC08  F018         	call	___wmul	;wreg free
 10707  0019D8  0E3D               	movlw	low (_horarios+11)
 10708  0019DA  2401               	addwf	?___wmul^0,w,c
 10709  0019DC  6ED9               	movwf	fsr2l,c
 10710  0019DE  0E01               	movlw	high (_horarios+11)
 10711  0019E0  2002               	addwfc	(?___wmul+1)^0,w,c
 10712  0019E2  6EDA               	movwf	fsr2h,c
 10713  0019E4  50DF               	movf	indf2,w,c
 10714  0019E6  6E09               	movwf	escribe_eeprom@dato^0,c
 10715  0019E8  ECB2  F017         	call	_escribe_eeprom	;wreg free
 10716  0019EC  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 10717  0019EE  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 10718                           
 10719                           ;main.c: 270:     }
 10720  0019F0  4A11               	infsnz	escribeHorariosMemoria@i^0,f,c
 10721  0019F2  2A12               	incf	(escribeHorariosMemoria@i+1)^0,f,c
 10722  0019F4  BE12               	btfsc	(escribeHorariosMemoria@i+1)^0,7,c
 10723  0019F6  EF06  F00D         	goto	u3271
 10724  0019FA  5012               	movf	(escribeHorariosMemoria@i+1)^0,w,c
 10725  0019FC  E109               	bnz	u3270
 10726  0019FE  0E18               	movlw	24
 10727  001A00  5C11               	subwf	escribeHorariosMemoria@i^0,w,c
 10728  001A02  A0D8               	btfss	status,0,c
 10729  001A04  EF06  F00D         	goto	u3271
 10730  001A08  EF08  F00D         	goto	u3270
 10731  001A0C                     u3271:
 10732  001A0C  EF70  F00C         	goto	l4164
 10733  001A10                     u3270:
 10734  001A10  0012               	return		;funcret
 10735  001A12                     __end_of_escribeHorariosMemoria:
 10736                           	opt callstack 0
 10737                           
 10738 ;; *************** function _escribe_eeprom *****************
 10739 ;; Defined at:
 10740 ;;		line 225 in file "main.c"
 10741 ;; Parameters:    Size  Location     Type
 10742 ;;  direccion       2    6[COMRAM] unsigned short 
 10743 ;;  dato            1    8[COMRAM] unsigned char 
 10744 ;; Auto vars:     Size  Location     Type
 10745 ;;		None
 10746 ;; Return value:  Size  Location     Type
 10747 ;;                  1    wreg      void 
 10748 ;; Registers used:
 10749 ;;		wreg, status,2, status,0, cstack
 10750 ;; Tracked objects:
 10751 ;;		On entry : 0/0
 10752 ;;		On exit  : 0/0
 10753 ;;		Unchanged: 0/0
 10754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10755 ;;      Params:         3       0       0       0       0       0       0       0       0
 10756 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10757 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10758 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10759 ;;Total ram usage:        4 bytes
 10760 ;; Hardware stack levels used:    1
 10761 ;; Hardware stack levels required when called:    3
 10762 ;; This function calls:
 10763 ;;		_i2c_detener
 10764 ;;		_i2c_envia_dato
 10765 ;;		_i2c_inicia_com
 10766 ;; This function is called by:
 10767 ;;		_escribeHorariosMemoria
 10768 ;; This function uses a non-reentrant model
 10769 ;;
 10770                           
 10771                           	psect	text60
 10772  002F64                     __ptext60:
 10773                           	opt callstack 0
 10774  002F64                     _escribe_eeprom:
 10775                           	opt callstack 24
 10776  002F64                     
 10777                           ;main.c: 226:     i2c_inicia_com();
 10778  002F64  EC9E  F018         	call	_i2c_inicia_com	;wreg free
 10779                           
 10780                           ;main.c: 227:     i2c_envia_dato(0xAE);
 10781  002F68  0EAE               	movlw	174
 10782  002F6A  EC84  F018         	call	_i2c_envia_dato
 10783                           
 10784                           ;main.c: 228:     i2c_envia_dato(direccion >> 8);
 10785  002F6E  5008               	movf	(escribe_eeprom@direccion+1)^0,w,c
 10786  002F70  EC84  F018         	call	_i2c_envia_dato
 10787                           
 10788                           ;main.c: 230:     i2c_envia_dato(direccion);
 10789  002F74  5007               	movf	escribe_eeprom@direccion^0,w,c
 10790  002F76  EC84  F018         	call	_i2c_envia_dato
 10791                           
 10792                           ;main.c: 232:     i2c_envia_dato(dato);
 10793  002F7A  5009               	movf	escribe_eeprom@dato^0,w,c
 10794  002F7C  EC84  F018         	call	_i2c_envia_dato
 10795                           
 10796                           ;main.c: 233:     i2c_detener();
 10797  002F80  ECA2  F018         	call	_i2c_detener	;wreg free
 10798  002F84                     
 10799                           ;main.c: 234:     _delay((unsigned long)((10)*(4000000/4000.0)));
 10800  002F84  0E0D               	movlw	13
 10801  002F86  6E0A               	movwf	??_escribe_eeprom^0,c
 10802  002F88  0EFC               	movlw	252
 10803  002F8A                     u3967:
 10804  002F8A  2EE8               	decfsz	wreg,f,c
 10805  002F8C  D7FE               	bra	u3967
 10806  002F8E  2E0A               	decfsz	??_escribe_eeprom^0,f,c
 10807  002F90  D7FC               	bra	u3967
 10808  002F92  0012               	return		;funcret
 10809  002F94                     __end_of_escribe_eeprom:
 10810                           	opt callstack 0
 10811                           
 10812 ;; *************** function _i2c_inicia_com *****************
 10813 ;; Defined at:
 10814 ;;		line 28 in file "./I2C.h"
 10815 ;; Parameters:    Size  Location     Type
 10816 ;;		None
 10817 ;; Auto vars:     Size  Location     Type
 10818 ;;		None
 10819 ;; Return value:  Size  Location     Type
 10820 ;;                  1    wreg      void 
 10821 ;; Registers used:
 10822 ;;		wreg, status,2, status,0, cstack
 10823 ;; Tracked objects:
 10824 ;;		On entry : 0/0
 10825 ;;		On exit  : 0/0
 10826 ;;		Unchanged: 0/0
 10827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10828 ;;      Params:         0       0       0       0       0       0       0       0       0
 10829 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10830 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10831 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10832 ;;Total ram usage:        0 bytes
 10833 ;; Hardware stack levels used:    1
 10834 ;; Hardware stack levels required when called:    2
 10835 ;; This function calls:
 10836 ;;		_i2c_espera
 10837 ;; This function is called by:
 10838 ;;		_escribe_rtc
 10839 ;;		_leer_rtc
 10840 ;;		_escribe_eeprom
 10841 ;;		_leer_eeprom
 10842 ;; This function uses a non-reentrant model
 10843 ;;
 10844                           
 10845                           	psect	text61
 10846  00313C                     __ptext61:
 10847                           	opt callstack 0
 10848  00313C                     _i2c_inicia_com:
 10849                           	opt callstack 25
 10850  00313C                     
 10851                           ;./I2C.h: 29:     i2c_espera();
 10852  00313C  ECF5  F017         	call	_i2c_espera	;wreg free
 10853  003140                     
 10854                           ;./I2C.h: 30:     SSPCON2bits.SEN = 1;
 10855  003140  80C5               	bsf	197,0,c	;volatile
 10856  003142  0012               	return		;funcret
 10857  003144                     __end_of_i2c_inicia_com:
 10858                           	opt callstack 0
 10859                           
 10860 ;; *************** function _i2c_envia_dato *****************
 10861 ;; Defined at:
 10862 ;;		line 57 in file "./I2C.h"
 10863 ;; Parameters:    Size  Location     Type
 10864 ;;  dato            1    wreg     unsigned char 
 10865 ;; Auto vars:     Size  Location     Type
 10866 ;;  dato            1    1[COMRAM] unsigned char 
 10867 ;; Return value:  Size  Location     Type
 10868 ;;                  1    wreg      unsigned char 
 10869 ;; Registers used:
 10870 ;;		wreg, status,2, status,0, cstack
 10871 ;; Tracked objects:
 10872 ;;		On entry : 0/0
 10873 ;;		On exit  : 0/0
 10874 ;;		Unchanged: 0/0
 10875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10876 ;;      Params:         0       0       0       0       0       0       0       0       0
 10877 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10878 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10879 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10880 ;;Total ram usage:        1 bytes
 10881 ;; Hardware stack levels used:    1
 10882 ;; Hardware stack levels required when called:    2
 10883 ;; This function calls:
 10884 ;;		_i2c_espera
 10885 ;; This function is called by:
 10886 ;;		_escribe_rtc
 10887 ;;		_leer_rtc
 10888 ;;		_escribe_eeprom
 10889 ;;		_leer_eeprom
 10890 ;; This function uses a non-reentrant model
 10891 ;;
 10892                           
 10893                           	psect	text62
 10894  003108                     __ptext62:
 10895                           	opt callstack 0
 10896  003108                     _i2c_envia_dato:
 10897                           	opt callstack 25
 10898                           
 10899                           ;incstack = 0
 10900                           ;i2c_envia_dato@dato stored from wreg
 10901  003108  6E02               	movwf	i2c_envia_dato@dato^0,c
 10902  00310A                     
 10903                           ;./I2C.h: 58:     i2c_espera();
 10904  00310A  ECF5  F017         	call	_i2c_espera	;wreg free
 10905  00310E                     
 10906                           ;./I2C.h: 59:     SSPBUF = dato;
 10907  00310E  C002  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
 10908  003112  0012               	return		;funcret
 10909  003114                     __end_of_i2c_envia_dato:
 10910                           	opt callstack 0
 10911                           
 10912 ;; *************** function _i2c_detener *****************
 10913 ;; Defined at:
 10914 ;;		line 46 in file "./I2C.h"
 10915 ;; Parameters:    Size  Location     Type
 10916 ;;		None
 10917 ;; Auto vars:     Size  Location     Type
 10918 ;;		None
 10919 ;; Return value:  Size  Location     Type
 10920 ;;                  1    wreg      void 
 10921 ;; Registers used:
 10922 ;;		wreg, status,2, status,0, cstack
 10923 ;; Tracked objects:
 10924 ;;		On entry : 0/0
 10925 ;;		On exit  : 0/0
 10926 ;;		Unchanged: 0/0
 10927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10928 ;;      Params:         0       0       0       0       0       0       0       0       0
 10929 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10930 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10931 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10932 ;;Total ram usage:        0 bytes
 10933 ;; Hardware stack levels used:    1
 10934 ;; Hardware stack levels required when called:    2
 10935 ;; This function calls:
 10936 ;;		_i2c_espera
 10937 ;; This function is called by:
 10938 ;;		_escribe_rtc
 10939 ;;		_leer_rtc
 10940 ;;		_escribe_eeprom
 10941 ;;		_leer_eeprom
 10942 ;; This function uses a non-reentrant model
 10943 ;;
 10944                           
 10945                           	psect	text63
 10946  003144                     __ptext63:
 10947                           	opt callstack 0
 10948  003144                     _i2c_detener:
 10949                           	opt callstack 25
 10950  003144                     
 10951                           ;./I2C.h: 47:     i2c_espera();
 10952  003144  ECF5  F017         	call	_i2c_espera	;wreg free
 10953  003148                     
 10954                           ;./I2C.h: 48:     SSPCON2bits.PEN = 1;
 10955  003148  84C5               	bsf	197,2,c	;volatile
 10956  00314A  0012               	return		;funcret
 10957  00314C                     __end_of_i2c_detener:
 10958                           	opt callstack 0
 10959                           
 10960 ;; *************** function _i2c_espera *****************
 10961 ;; Defined at:
 10962 ;;		line 20 in file "./I2C.h"
 10963 ;; Parameters:    Size  Location     Type
 10964 ;;		None
 10965 ;; Auto vars:     Size  Location     Type
 10966 ;;		None
 10967 ;; Return value:  Size  Location     Type
 10968 ;;                  1    wreg      void 
 10969 ;; Registers used:
 10970 ;;		wreg, status,2, status,0
 10971 ;; Tracked objects:
 10972 ;;		On entry : 0/0
 10973 ;;		On exit  : 0/0
 10974 ;;		Unchanged: 0/0
 10975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10976 ;;      Params:         0       0       0       0       0       0       0       0       0
 10977 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10978 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10979 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10980 ;;Total ram usage:        1 bytes
 10981 ;; Hardware stack levels used:    1
 10982 ;; Hardware stack levels required when called:    1
 10983 ;; This function calls:
 10984 ;;		Nothing
 10985 ;; This function is called by:
 10986 ;;		_i2c_inicia_com
 10987 ;;		_i2c_reinicia_com
 10988 ;;		_i2c_detener
 10989 ;;		_i2c_envia_dato
 10990 ;;		_i2c_recibe_dato
 10991 ;; This function uses a non-reentrant model
 10992 ;;
 10993                           
 10994                           	psect	text64
 10995  002FEA                     __ptext64:
 10996                           	opt callstack 0
 10997  002FEA                     _i2c_espera:
 10998                           	opt callstack 25
 10999  002FEA                     l3380:
 11000  002FEA  CFC5 F001          	movff	4037,??_i2c_espera	;volatile
 11001  002FEE  0E1F               	movlw	31
 11002  002FF0  1601               	andwf	??_i2c_espera^0,f,c
 11003  002FF2  A4D8               	btfss	status,2,c
 11004  002FF4  EFFE  F017         	goto	u2221
 11005  002FF8  EF00  F018         	goto	u2220
 11006  002FFC                     u2221:
 11007  002FFC  EFF5  F017         	goto	l3380
 11008  003000                     u2220:
 11009  003000  B4C7               	btfsc	199,2,c	;volatile
 11010  003002  EF05  F018         	goto	u2231
 11011  003006  EF07  F018         	goto	u2230
 11012  00300A                     u2231:
 11013  00300A  EFF5  F017         	goto	l3380
 11014  00300E                     u2230:
 11015  00300E  0012               	return		;funcret
 11016  003010                     __end_of_i2c_espera:
 11017                           	opt callstack 0
 11018                           
 11019 ;; *************** function _inicializarObjetos *****************
 11020 ;; Defined at:
 11021 ;;		line 164 in file "main.c"
 11022 ;; Parameters:    Size  Location     Type
 11023 ;;		None
 11024 ;; Auto vars:     Size  Location     Type
 11025 ;;  j               2    8[COMRAM] int 
 11026 ;;  i               2   10[COMRAM] int 
 11027 ;;  i               2   12[COMRAM] int 
 11028 ;; Return value:  Size  Location     Type
 11029 ;;                  1    wreg      void 
 11030 ;; Registers used:
 11031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11032 ;; Tracked objects:
 11033 ;;		On entry : 0/0
 11034 ;;		On exit  : 0/0
 11035 ;;		Unchanged: 0/0
 11036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11037 ;;      Params:         0       0       0       0       0       0       0       0       0
 11038 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11039 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11040 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11041 ;;Total ram usage:        8 bytes
 11042 ;; Hardware stack levels used:    1
 11043 ;; Hardware stack levels required when called:    2
 11044 ;; This function calls:
 11045 ;;		___wmul
 11046 ;; This function is called by:
 11047 ;;		_main
 11048 ;; This function uses a non-reentrant model
 11049 ;;
 11050                           
 11051                           	psect	text65
 11052  0015EE                     __ptext65:
 11053                           	opt callstack 0
 11054  0015EE                     _inicializarObjetos:
 11055                           	opt callstack 28
 11056  0015EE                     
 11057                           ;main.c: 166:     for (int i = 0; i < 24; i++) {
 11058  0015EE  0E00               	movlw	0
 11059  0015F0  6E0E               	movwf	(inicializarObjetos@i+1)^0,c
 11060  0015F2  0E00               	movlw	0
 11061  0015F4  6E0D               	movwf	inicializarObjetos@i^0,c
 11062  0015F6                     l4642:
 11063                           
 11064                           ;main.c: 167:         horarios[i].hora = i;
 11065  0015F6  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 11066  0015FA  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 11067  0015FE  0E00               	movlw	0
 11068  001600  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11069  001602  0E0C               	movlw	12
 11070  001604  6E03               	movwf	___wmul@multiplicand^0,c
 11071  001606  EC08  F018         	call	___wmul	;wreg free
 11072  00160A  0E32               	movlw	low _horarios
 11073  00160C  2401               	addwf	?___wmul^0,w,c
 11074  00160E  6ED9               	movwf	fsr2l,c
 11075  001610  0E01               	movlw	high _horarios
 11076  001612  2002               	addwfc	(?___wmul+1)^0,w,c
 11077  001614  6EDA               	movwf	fsr2h,c
 11078  001616  C00D  FFDF         	movff	inicializarObjetos@i,indf2
 11079                           
 11080                           ;main.c: 168:         horarios[i].regar = 0;
 11081  00161A  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 11082  00161E  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 11083  001622  0E00               	movlw	0
 11084  001624  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11085  001626  0E0C               	movlw	12
 11086  001628  6E03               	movwf	___wmul@multiplicand^0,c
 11087  00162A  EC08  F018         	call	___wmul	;wreg free
 11088  00162E  0E3B               	movlw	low (_horarios+9)
 11089  001630  2401               	addwf	?___wmul^0,w,c
 11090  001632  6ED9               	movwf	fsr2l,c
 11091  001634  0E01               	movlw	high (_horarios+9)
 11092  001636  2002               	addwfc	(?___wmul+1)^0,w,c
 11093  001638  6EDA               	movwf	fsr2h,c
 11094  00163A  0E00               	movlw	0
 11095  00163C  6EDF               	movwf	indf2,c
 11096                           
 11097                           ;main.c: 169:         horarios[i].regado = 0;
 11098  00163E  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 11099  001642  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 11100  001646  0E00               	movlw	0
 11101  001648  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11102  00164A  0E0C               	movlw	12
 11103  00164C  6E03               	movwf	___wmul@multiplicand^0,c
 11104  00164E  EC08  F018         	call	___wmul	;wreg free
 11105  001652  0E3C               	movlw	low (_horarios+10)
 11106  001654  2401               	addwf	?___wmul^0,w,c
 11107  001656  6ED9               	movwf	fsr2l,c
 11108  001658  0E01               	movlw	high (_horarios+10)
 11109  00165A  2002               	addwfc	(?___wmul+1)^0,w,c
 11110  00165C  6EDA               	movwf	fsr2h,c
 11111  00165E  0E00               	movlw	0
 11112  001660  6EDF               	movwf	indf2,c
 11113                           
 11114                           ;main.c: 170:         horarios[i].tiempoRegar = 15;
 11115  001662  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 11116  001666  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 11117  00166A  0E00               	movlw	0
 11118  00166C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11119  00166E  0E0C               	movlw	12
 11120  001670  6E03               	movwf	___wmul@multiplicand^0,c
 11121  001672  EC08  F018         	call	___wmul	;wreg free
 11122  001676  0E3D               	movlw	low (_horarios+11)
 11123  001678  2401               	addwf	?___wmul^0,w,c
 11124  00167A  6ED9               	movwf	fsr2l,c
 11125  00167C  0E01               	movlw	high (_horarios+11)
 11126  00167E  2002               	addwfc	(?___wmul+1)^0,w,c
 11127  001680  6EDA               	movwf	fsr2h,c
 11128  001682  0E0F               	movlw	15
 11129  001684  6EDF               	movwf	indf2,c
 11130  001686                     
 11131                           ;main.c: 171:     }
 11132  001686  4A0D               	infsnz	inicializarObjetos@i^0,f,c
 11133  001688  2A0E               	incf	(inicializarObjetos@i+1)^0,f,c
 11134  00168A  BE0E               	btfsc	(inicializarObjetos@i+1)^0,7,c
 11135  00168C  EF51  F00B         	goto	u3661
 11136  001690  500E               	movf	(inicializarObjetos@i+1)^0,w,c
 11137  001692  E109               	bnz	u3660
 11138  001694  0E18               	movlw	24
 11139  001696  5C0D               	subwf	inicializarObjetos@i^0,w,c
 11140  001698  A0D8               	btfss	status,0,c
 11141  00169A  EF51  F00B         	goto	u3661
 11142  00169E  EF53  F00B         	goto	u3660
 11143  0016A2                     u3661:
 11144  0016A2  EFFB  F00A         	goto	l4642
 11145  0016A6                     u3660:
 11146  0016A6                     
 11147                           ;main.c: 173:     for (int i = 0; i < 24; i++) {
 11148  0016A6  0E00               	movlw	0
 11149  0016A8  6E0C               	movwf	(inicializarObjetos@i_809+1)^0,c
 11150  0016AA  0E00               	movlw	0
 11151  0016AC  6E0B               	movwf	inicializarObjetos@i_809^0,c
 11152  0016AE                     l4654:
 11153                           
 11154                           ;main.c: 175:         for (int j = 0; j < 7; j++)
 11155  0016AE  0E00               	movlw	0
 11156  0016B0  6E0A               	movwf	(inicializarObjetos@j+1)^0,c
 11157  0016B2  0E00               	movlw	0
 11158  0016B4  6E09               	movwf	inicializarObjetos@j^0,c
 11159  0016B6                     l4660:
 11160                           
 11161                           ;main.c: 176:             horarios[i].dias[j] = 0;
 11162  0016B6  C00B  F001         	movff	inicializarObjetos@i_809,___wmul@multiplier
 11163  0016BA  C00C  F002         	movff	inicializarObjetos@i_809+1,___wmul@multiplier+1
 11164  0016BE  0E00               	movlw	0
 11165  0016C0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11166  0016C2  0E0C               	movlw	12
 11167  0016C4  6E03               	movwf	___wmul@multiplicand^0,c
 11168  0016C6  EC08  F018         	call	___wmul	;wreg free
 11169  0016CA  0E32               	movlw	low _horarios
 11170  0016CC  6E07               	movwf	??_inicializarObjetos^0,c
 11171  0016CE  0E01               	movlw	high _horarios
 11172  0016D0  6E08               	movwf	(??_inicializarObjetos+1)^0,c
 11173  0016D2  0E01               	movlw	1
 11174  0016D4  2607               	addwf	??_inicializarObjetos^0,f,c
 11175  0016D6  0E00               	movlw	0
 11176  0016D8  2208               	addwfc	(??_inicializarObjetos+1)^0,f,c
 11177  0016DA  5001               	movf	?___wmul^0,w,c
 11178  0016DC  2607               	addwf	??_inicializarObjetos^0,f,c
 11179  0016DE  5002               	movf	(?___wmul+1)^0,w,c
 11180  0016E0  2208               	addwfc	(??_inicializarObjetos+1)^0,f,c
 11181  0016E2  5009               	movf	inicializarObjetos@j^0,w,c
 11182  0016E4  2407               	addwf	??_inicializarObjetos^0,w,c
 11183  0016E6  6ED9               	movwf	fsr2l,c
 11184  0016E8  500A               	movf	(inicializarObjetos@j+1)^0,w,c
 11185  0016EA  2008               	addwfc	(??_inicializarObjetos+1)^0,w,c
 11186  0016EC  6EDA               	movwf	fsr2h,c
 11187  0016EE  0E00               	movlw	0
 11188  0016F0  6EDF               	movwf	indf2,c
 11189  0016F2  4A09               	infsnz	inicializarObjetos@j^0,f,c
 11190  0016F4  2A0A               	incf	(inicializarObjetos@j+1)^0,f,c
 11191  0016F6  BE0A               	btfsc	(inicializarObjetos@j+1)^0,7,c
 11192  0016F8  EF87  F00B         	goto	u3671
 11193  0016FC  500A               	movf	(inicializarObjetos@j+1)^0,w,c
 11194  0016FE  E109               	bnz	u3670
 11195  001700  0E07               	movlw	7
 11196  001702  5C09               	subwf	inicializarObjetos@j^0,w,c
 11197  001704  A0D8               	btfss	status,0,c
 11198  001706  EF87  F00B         	goto	u3671
 11199  00170A  EF89  F00B         	goto	u3670
 11200  00170E                     u3671:
 11201  00170E  EF5B  F00B         	goto	l4660
 11202  001712                     u3670:
 11203  001712                     
 11204                           ;main.c: 178:         horarios[i].dias[7 - 1] = '\0';
 11205  001712  C00B  F001         	movff	inicializarObjetos@i_809,___wmul@multiplier
 11206  001716  C00C  F002         	movff	inicializarObjetos@i_809+1,___wmul@multiplier+1
 11207  00171A  0E00               	movlw	0
 11208  00171C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11209  00171E  0E0C               	movlw	12
 11210  001720  6E03               	movwf	___wmul@multiplicand^0,c
 11211  001722  EC08  F018         	call	___wmul	;wreg free
 11212  001726  0E39               	movlw	low (_horarios+7)
 11213  001728  2401               	addwf	?___wmul^0,w,c
 11214  00172A  6ED9               	movwf	fsr2l,c
 11215  00172C  0E01               	movlw	high (_horarios+7)
 11216  00172E  2002               	addwfc	(?___wmul+1)^0,w,c
 11217  001730  6EDA               	movwf	fsr2h,c
 11218  001732  0E00               	movlw	0
 11219  001734  6EDF               	movwf	indf2,c
 11220  001736                     
 11221                           ;main.c: 179:     }
 11222  001736  4A0B               	infsnz	inicializarObjetos@i_809^0,f,c
 11223  001738  2A0C               	incf	(inicializarObjetos@i_809+1)^0,f,c
 11224  00173A  BE0C               	btfsc	(inicializarObjetos@i_809+1)^0,7,c
 11225  00173C  EFA9  F00B         	goto	u3681
 11226  001740  500C               	movf	(inicializarObjetos@i_809+1)^0,w,c
 11227  001742  E109               	bnz	u3680
 11228  001744  0E18               	movlw	24
 11229  001746  5C0B               	subwf	inicializarObjetos@i_809^0,w,c
 11230  001748  A0D8               	btfss	status,0,c
 11231  00174A  EFA9  F00B         	goto	u3681
 11232  00174E  EFAB  F00B         	goto	u3680
 11233  001752                     u3681:
 11234  001752  EF57  F00B         	goto	l4654
 11235  001756                     u3680:
 11236  001756  0012               	return		;funcret
 11237  001758                     __end_of_inicializarObjetos:
 11238                           	opt callstack 0
 11239                           
 11240 ;; *************** function ___wmul *****************
 11241 ;; Defined at:
 11242 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 11243 ;; Parameters:    Size  Location     Type
 11244 ;;  multiplier      2    0[COMRAM] unsigned int 
 11245 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11246 ;; Auto vars:     Size  Location     Type
 11247 ;;  product         2    4[COMRAM] unsigned int 
 11248 ;; Return value:  Size  Location     Type
 11249 ;;                  2    0[COMRAM] unsigned int 
 11250 ;; Registers used:
 11251 ;;		wreg, status,2, status,0, prodl, prodh
 11252 ;; Tracked objects:
 11253 ;;		On entry : 0/0
 11254 ;;		On exit  : 0/0
 11255 ;;		Unchanged: 0/0
 11256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11257 ;;      Params:         4       0       0       0       0       0       0       0       0
 11258 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11259 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11260 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11261 ;;Total ram usage:        6 bytes
 11262 ;; Hardware stack levels used:    1
 11263 ;; Hardware stack levels required when called:    1
 11264 ;; This function calls:
 11265 ;;		Nothing
 11266 ;; This function is called by:
 11267 ;;		_inicializarObjetos
 11268 ;;		_escribeHorariosMemoria
 11269 ;;		_leeHorariosMemoria
 11270 ;;		_dameDatosSistema
 11271 ;;		_atoi
 11272 ;; This function uses a non-reentrant model
 11273 ;;
 11274                           
 11275                           	psect	text66
 11276  003010                     __ptext66:
 11277                           	opt callstack 0
 11278  003010                     ___wmul:
 11279                           	opt callstack 26
 11280  003010  5001               	movf	___wmul@multiplier^0,w,c
 11281  003012  0203               	mulwf	___wmul@multiplicand^0,c
 11282  003014  CFF3 F005          	movff	prodl,___wmul@product
 11283  003018  CFF4 F006          	movff	prodh,___wmul@product+1
 11284  00301C  5001               	movf	___wmul@multiplier^0,w,c
 11285  00301E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11286  003020  50F3               	movf	243,w,c
 11287  003022  2606               	addwf	(___wmul@product+1)^0,f,c
 11288  003024  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11289  003026  0203               	mulwf	___wmul@multiplicand^0,c
 11290  003028  50F3               	movf	243,w,c
 11291  00302A  2606               	addwf	(___wmul@product+1)^0,f,c
 11292  00302C  C005  F001         	movff	___wmul@product,?___wmul
 11293  003030  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11294  003034  0012               	return		;funcret
 11295  003036                     __end_of___wmul:
 11296                           	opt callstack 0
 11297                           
 11298 ;; *************** function _i2c_iniciar *****************
 11299 ;; Defined at:
 11300 ;;		line 4 in file "./I2C.h"
 11301 ;; Parameters:    Size  Location     Type
 11302 ;;		None
 11303 ;; Auto vars:     Size  Location     Type
 11304 ;;		None
 11305 ;; Return value:  Size  Location     Type
 11306 ;;                  1    wreg      void 
 11307 ;; Registers used:
 11308 ;;		wreg, status,2
 11309 ;; Tracked objects:
 11310 ;;		On entry : 0/0
 11311 ;;		On exit  : 0/0
 11312 ;;		Unchanged: 0/0
 11313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11314 ;;      Params:         0       0       0       0       0       0       0       0       0
 11315 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11316 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11317 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11318 ;;Total ram usage:        0 bytes
 11319 ;; Hardware stack levels used:    1
 11320 ;; Hardware stack levels required when called:    1
 11321 ;; This function calls:
 11322 ;;		Nothing
 11323 ;; This function is called by:
 11324 ;;		_main
 11325 ;; This function uses a non-reentrant model
 11326 ;;
 11327                           
 11328                           	psect	text67
 11329  0030E2                     __ptext67:
 11330                           	opt callstack 0
 11331  0030E2                     _i2c_iniciar:
 11332                           	opt callstack 29
 11333  0030E2                     
 11334                           ;./I2C.h: 5:     TRISBbits.RB0 = 1;
 11335  0030E2  8093               	bsf	147,0,c	;volatile
 11336                           
 11337                           ;./I2C.h: 6:     TRISBbits.RB1 = 1;
 11338  0030E4  8293               	bsf	147,1,c	;volatile
 11339  0030E6                     
 11340                           ;./I2C.h: 7:     SSPSTAT = 0b10000000;
 11341  0030E6  0E80               	movlw	128
 11342  0030E8  6EC7               	movwf	199,c	;volatile
 11343                           
 11344                           ;./I2C.h: 8:     SSPCON1 = 0b00101000;
 11345  0030EA  0E28               	movlw	40
 11346  0030EC  6EC6               	movwf	198,c	;volatile
 11347                           
 11348                           ;./I2C.h: 9:     SSPCON2 = 0b00000000;
 11349  0030EE  0E00               	movlw	0
 11350  0030F0  6EC5               	movwf	197,c	;volatile
 11351                           
 11352                           ;./I2C.h: 10:     SSPADD = 9;
 11353  0030F2  0E09               	movlw	9
 11354  0030F4  6EC8               	movwf	200,c	;volatile
 11355  0030F6  0012               	return		;funcret
 11356  0030F8                     __end_of_i2c_iniciar:
 11357                           	opt callstack 0
 11358                           
 11359 ;; *************** function _configurarAdc *****************
 11360 ;; Defined at:
 11361 ;;		line 145 in file "main.c"
 11362 ;; Parameters:    Size  Location     Type
 11363 ;;		None
 11364 ;; Auto vars:     Size  Location     Type
 11365 ;;		None
 11366 ;; Return value:  Size  Location     Type
 11367 ;;                  1    wreg      void 
 11368 ;; Registers used:
 11369 ;;		wreg, status,2
 11370 ;; Tracked objects:
 11371 ;;		On entry : 0/0
 11372 ;;		On exit  : 0/0
 11373 ;;		Unchanged: 0/0
 11374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11375 ;;      Params:         0       0       0       0       0       0       0       0       0
 11376 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11377 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11378 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11379 ;;Total ram usage:        0 bytes
 11380 ;; Hardware stack levels used:    1
 11381 ;; Hardware stack levels required when called:    1
 11382 ;; This function calls:
 11383 ;;		Nothing
 11384 ;; This function is called by:
 11385 ;;		_main
 11386 ;; This function uses a non-reentrant model
 11387 ;;
 11388                           
 11389                           	psect	text68
 11390  00312A                     __ptext68:
 11391                           	opt callstack 0
 11392  00312A                     _configurarAdc:
 11393                           	opt callstack 29
 11394  00312A                     
 11395                           ;main.c: 146:     ADCON1 = 0b00000110;
 11396  00312A  0E06               	movlw	6
 11397  00312C  6EC1               	movwf	193,c	;volatile
 11398                           
 11399                           ;main.c: 147:     ADCON2 = 0b10100101;
 11400  00312E  0EA5               	movlw	165
 11401  003130  6EC0               	movwf	192,c	;volatile
 11402  003132  0012               	return		;funcret
 11403  003134                     __end_of_configurarAdc:
 11404                           	opt callstack 0
 11405                           
 11406 ;; *************** function _UART_init *****************
 11407 ;; Defined at:
 11408 ;;		line 12 in file "./UART.h"
 11409 ;; Parameters:    Size  Location     Type
 11410 ;;  BAUD            4   26[COMRAM] long 
 11411 ;; Auto vars:     Size  Location     Type
 11412 ;;  frecuenciaCr    4    0        long 
 11413 ;; Return value:  Size  Location     Type
 11414 ;;                  1    wreg      void 
 11415 ;; Registers used:
 11416 ;;		wreg, status,2, status,0, cstack
 11417 ;; Tracked objects:
 11418 ;;		On entry : 0/0
 11419 ;;		On exit  : 0/0
 11420 ;;		Unchanged: 0/0
 11421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11422 ;;      Params:         4       0       0       0       0       0       0       0       0
 11423 ;;      Locals:         8       0       0       0       0       0       0       0       0
 11424 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11425 ;;      Totals:        12       0       0       0       0       0       0       0       0
 11426 ;;Total ram usage:       12 bytes
 11427 ;; Hardware stack levels used:    1
 11428 ;; Hardware stack levels required when called:    2
 11429 ;; This function calls:
 11430 ;;		___aldiv
 11431 ;; This function is called by:
 11432 ;;		_main
 11433 ;; This function uses a non-reentrant model
 11434 ;;
 11435                           
 11436                           	psect	text69
 11437  0028AA                     __ptext69:
 11438                           	opt callstack 0
 11439  0028AA                     _UART_init:
 11440                           	opt callstack 28
 11441  0028AA                     
 11442                           ;./UART.h: 14:     TRISCbits.TRISC6 = 0;
 11443  0028AA  9C94               	bcf	148,6,c	;volatile
 11444  0028AC                     
 11445                           ;./UART.h: 15:     TRISCbits.TRISC7 = 1;
 11446  0028AC  8E94               	bsf	148,7,c	;volatile
 11447  0028AE                     
 11448                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 11449  0028AE  0E10               	movlw	16
 11450  0028B0  6E11               	movwf	___aldiv@divisor^0,c
 11451  0028B2  0E00               	movlw	0
 11452  0028B4  6E12               	movwf	(___aldiv@divisor+1)^0,c
 11453  0028B6  0E00               	movlw	0
 11454  0028B8  6E13               	movwf	(___aldiv@divisor+2)^0,c
 11455  0028BA  0E00               	movlw	0
 11456  0028BC  6E14               	movwf	(___aldiv@divisor+3)^0,c
 11457  0028BE  0E00               	movlw	0
 11458  0028C0  6E0D               	movwf	___aldiv@dividend^0,c
 11459  0028C2  0E09               	movlw	9
 11460  0028C4  6E0E               	movwf	(___aldiv@dividend+1)^0,c
 11461  0028C6  0E3D               	movlw	61
 11462  0028C8  6E0F               	movwf	(___aldiv@dividend+2)^0,c
 11463  0028CA  0E00               	movlw	0
 11464  0028CC  6E10               	movwf	(___aldiv@dividend+3)^0,c
 11465  0028CE  ECDB  F00E         	call	___aldiv	;wreg free
 11466  0028D2  C00D  F023         	movff	?___aldiv,_UART_init$1894
 11467  0028D6  C00E  F024         	movff	?___aldiv+1,_UART_init$1894+1
 11468  0028DA  C00F  F025         	movff	?___aldiv+2,_UART_init$1894+2
 11469  0028DE  C010  F026         	movff	?___aldiv+3,_UART_init$1894+3
 11470  0028E2                     
 11471                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 11472  0028E2  C023  F00D         	movff	_UART_init$1894,___aldiv@dividend
 11473  0028E6  C024  F00E         	movff	_UART_init$1894+1,___aldiv@dividend+1
 11474  0028EA  C025  F00F         	movff	_UART_init$1894+2,___aldiv@dividend+2
 11475  0028EE  C026  F010         	movff	_UART_init$1894+3,___aldiv@dividend+3
 11476  0028F2  C01B  F011         	movff	UART_init@BAUD,___aldiv@divisor
 11477  0028F6  C01C  F012         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 11478  0028FA  C01D  F013         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 11479  0028FE  C01E  F014         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 11480  002902  ECDB  F00E         	call	___aldiv	;wreg free
 11481  002906  040D               	decf	?___aldiv^0,w,c
 11482  002908  6EAF               	movwf	175,c	;volatile
 11483  00290A                     
 11484                           ;./UART.h: 21:     TXSTAbits.BRGH = 1;
 11485  00290A  84AC               	bsf	172,2,c	;volatile
 11486  00290C                     
 11487                           ;./UART.h: 22:     TXSTAbits.SYNC = 0;
 11488  00290C  98AC               	bcf	172,4,c	;volatile
 11489  00290E                     
 11490                           ;./UART.h: 23:     RCSTAbits.SPEN = 1;
 11491  00290E  8EAB               	bsf	171,7,c	;volatile
 11492  002910                     
 11493                           ;./UART.h: 26:     TXSTAbits.TX9 = 0;
 11494  002910  9CAC               	bcf	172,6,c	;volatile
 11495  002912                     
 11496                           ;./UART.h: 27:     TXSTAbits.TXEN = 1;
 11497  002912  8AAC               	bsf	172,5,c	;volatile
 11498  002914                     
 11499                           ;./UART.h: 30:     RCSTAbits.RC9 = 0;
 11500  002914  9CAB               	bcf	171,6,c	;volatile
 11501  002916                     
 11502                           ;./UART.h: 31:     RCSTAbits.CREN = 1;
 11503  002916  88AB               	bsf	171,4,c	;volatile
 11504  002918  0012               	return		;funcret
 11505  00291A                     __end_of_UART_init:
 11506                           	opt callstack 0
 11507                           
 11508 ;; *************** function ___aldiv *****************
 11509 ;; Defined at:
 11510 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 11511 ;; Parameters:    Size  Location     Type
 11512 ;;  dividend        4   12[COMRAM] long 
 11513 ;;  divisor         4   16[COMRAM] long 
 11514 ;; Auto vars:     Size  Location     Type
 11515 ;;  quotient        4   22[COMRAM] long 
 11516 ;;  sign            1   21[COMRAM] unsigned char 
 11517 ;;  counter         1   20[COMRAM] unsigned char 
 11518 ;; Return value:  Size  Location     Type
 11519 ;;                  4   12[COMRAM] long 
 11520 ;; Registers used:
 11521 ;;		wreg, status,2, status,0
 11522 ;; Tracked objects:
 11523 ;;		On entry : 0/0
 11524 ;;		On exit  : 0/0
 11525 ;;		Unchanged: 0/0
 11526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11527 ;;      Params:         8       0       0       0       0       0       0       0       0
 11528 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11529 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11530 ;;      Totals:        14       0       0       0       0       0       0       0       0
 11531 ;;Total ram usage:       14 bytes
 11532 ;; Hardware stack levels used:    1
 11533 ;; Hardware stack levels required when called:    1
 11534 ;; This function calls:
 11535 ;;		Nothing
 11536 ;; This function is called by:
 11537 ;;		_UART_init
 11538 ;;		_map
 11539 ;; This function uses a non-reentrant model
 11540 ;;
 11541                           
 11542                           	psect	text70
 11543  001DB6                     __ptext70:
 11544                           	opt callstack 0
 11545  001DB6                     ___aldiv:
 11546                           	opt callstack 26
 11547  001DB6  0E00               	movlw	0
 11548  001DB8  6E16               	movwf	___aldiv@sign^0,c
 11549  001DBA  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
 11550  001DBC  EFE4  F00E         	goto	u2860
 11551  001DC0  EFE2  F00E         	goto	u2861
 11552  001DC4                     u2861:
 11553  001DC4  EFEE  F00E         	goto	l3776
 11554  001DC8                     u2860:
 11555  001DC8  1E14               	comf	(___aldiv@divisor+3)^0,f,c
 11556  001DCA  1E13               	comf	(___aldiv@divisor+2)^0,f,c
 11557  001DCC  1E12               	comf	(___aldiv@divisor+1)^0,f,c
 11558  001DCE  6C11               	negf	___aldiv@divisor^0,c
 11559  001DD0  0E00               	movlw	0
 11560  001DD2  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
 11561  001DD4  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
 11562  001DD6  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
 11563  001DD8  0E01               	movlw	1
 11564  001DDA  6E16               	movwf	___aldiv@sign^0,c
 11565  001DDC                     l3776:
 11566  001DDC  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
 11567  001DDE  EFF5  F00E         	goto	u2870
 11568  001DE2  EFF3  F00E         	goto	u2871
 11569  001DE6                     u2871:
 11570  001DE6  EFFF  F00E         	goto	l3782
 11571  001DEA                     u2870:
 11572  001DEA  1E10               	comf	(___aldiv@dividend+3)^0,f,c
 11573  001DEC  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
 11574  001DEE  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
 11575  001DF0  6C0D               	negf	___aldiv@dividend^0,c
 11576  001DF2  0E00               	movlw	0
 11577  001DF4  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
 11578  001DF6  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
 11579  001DF8  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
 11580  001DFA  0E01               	movlw	1
 11581  001DFC  1A16               	xorwf	___aldiv@sign^0,f,c
 11582  001DFE                     l3782:
 11583  001DFE  0E00               	movlw	0
 11584  001E00  6E17               	movwf	___aldiv@quotient^0,c
 11585  001E02  0E00               	movlw	0
 11586  001E04  6E18               	movwf	(___aldiv@quotient+1)^0,c
 11587  001E06  0E00               	movlw	0
 11588  001E08  6E19               	movwf	(___aldiv@quotient+2)^0,c
 11589  001E0A  0E00               	movlw	0
 11590  001E0C  6E1A               	movwf	(___aldiv@quotient+3)^0,c
 11591  001E0E  5011               	movf	___aldiv@divisor^0,w,c
 11592  001E10  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
 11593  001E12  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
 11594  001E14  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
 11595  001E16  B4D8               	btfsc	status,2,c
 11596  001E18  EF10  F00F         	goto	u2881
 11597  001E1C  EF12  F00F         	goto	u2880
 11598  001E20                     u2881:
 11599  001E20  EF48  F00F         	goto	l3804
 11600  001E24                     u2880:
 11601  001E24  0E01               	movlw	1
 11602  001E26  6E15               	movwf	___aldiv@counter^0,c
 11603  001E28  EF1C  F00F         	goto	l3790
 11604  001E2C                     l3788:
 11605  001E2C  90D8               	bcf	status,0,c
 11606  001E2E  3611               	rlcf	___aldiv@divisor^0,f,c
 11607  001E30  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
 11608  001E32  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
 11609  001E34  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
 11610  001E36  2A15               	incf	___aldiv@counter^0,f,c
 11611  001E38                     l3790:
 11612  001E38  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
 11613  001E3A  EF21  F00F         	goto	u2891
 11614  001E3E  EF23  F00F         	goto	u2890
 11615  001E42                     u2891:
 11616  001E42  EF16  F00F         	goto	l3788
 11617  001E46                     u2890:
 11618  001E46                     l3792:
 11619  001E46  90D8               	bcf	status,0,c
 11620  001E48  3617               	rlcf	___aldiv@quotient^0,f,c
 11621  001E4A  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
 11622  001E4C  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
 11623  001E4E  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
 11624  001E50  5011               	movf	___aldiv@divisor^0,w,c
 11625  001E52  5C0D               	subwf	___aldiv@dividend^0,w,c
 11626  001E54  5012               	movf	(___aldiv@divisor+1)^0,w,c
 11627  001E56  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
 11628  001E58  5013               	movf	(___aldiv@divisor+2)^0,w,c
 11629  001E5A  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
 11630  001E5C  5014               	movf	(___aldiv@divisor+3)^0,w,c
 11631  001E5E  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
 11632  001E60  A0D8               	btfss	status,0,c
 11633  001E62  EF35  F00F         	goto	u2901
 11634  001E66  EF37  F00F         	goto	u2900
 11635  001E6A                     u2901:
 11636  001E6A  EF40  F00F         	goto	l3800
 11637  001E6E                     u2900:
 11638  001E6E  5011               	movf	___aldiv@divisor^0,w,c
 11639  001E70  5E0D               	subwf	___aldiv@dividend^0,f,c
 11640  001E72  5012               	movf	(___aldiv@divisor+1)^0,w,c
 11641  001E74  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
 11642  001E76  5013               	movf	(___aldiv@divisor+2)^0,w,c
 11643  001E78  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
 11644  001E7A  5014               	movf	(___aldiv@divisor+3)^0,w,c
 11645  001E7C  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
 11646  001E7E  8017               	bsf	___aldiv@quotient^0,0,c
 11647  001E80                     l3800:
 11648  001E80  90D8               	bcf	status,0,c
 11649  001E82  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
 11650  001E84  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
 11651  001E86  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
 11652  001E88  3211               	rrcf	___aldiv@divisor^0,f,c
 11653  001E8A  2E15               	decfsz	___aldiv@counter^0,f,c
 11654  001E8C  EF23  F00F         	goto	l3792
 11655  001E90                     l3804:
 11656  001E90  5016               	movf	___aldiv@sign^0,w,c
 11657  001E92  B4D8               	btfsc	status,2,c
 11658  001E94  EF4E  F00F         	goto	u2911
 11659  001E98  EF50  F00F         	goto	u2910
 11660  001E9C                     u2911:
 11661  001E9C  EF58  F00F         	goto	l3808
 11662  001EA0                     u2910:
 11663  001EA0  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
 11664  001EA2  1E19               	comf	(___aldiv@quotient+2)^0,f,c
 11665  001EA4  1E18               	comf	(___aldiv@quotient+1)^0,f,c
 11666  001EA6  6C17               	negf	___aldiv@quotient^0,c
 11667  001EA8  0E00               	movlw	0
 11668  001EAA  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
 11669  001EAC  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
 11670  001EAE  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
 11671  001EB0                     l3808:
 11672  001EB0  C017  F00D         	movff	___aldiv@quotient,?___aldiv
 11673  001EB4  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
 11674  001EB8  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
 11675  001EBC  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
 11676  001EC0  0012               	return		;funcret
 11677  001EC2                     __end_of___aldiv:
 11678                           	opt callstack 0
 11679                           
 11680 ;; *************** function _desbordamiento *****************
 11681 ;; Defined at:
 11682 ;;		line 107 in file "main.c"
 11683 ;; Parameters:    Size  Location     Type
 11684 ;;		None
 11685 ;; Auto vars:     Size  Location     Type
 11686 ;;		None
 11687 ;; Return value:  Size  Location     Type
 11688 ;;                  1    wreg      void 
 11689 ;; Registers used:
 11690 ;;		wreg, status,2, status,0
 11691 ;; Tracked objects:
 11692 ;;		On entry : 0/0
 11693 ;;		On exit  : 0/0
 11694 ;;		Unchanged: 0/0
 11695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11696 ;;      Params:         0       0       0       0       0       0       0       0       0
 11697 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11698 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11699 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11700 ;;Total ram usage:        0 bytes
 11701 ;; Hardware stack levels used:    1
 11702 ;; This function calls:
 11703 ;;		Nothing
 11704 ;; This function is called by:
 11705 ;;		Interrupt level 2
 11706 ;; This function uses a non-reentrant model
 11707 ;;
 11708                           
 11709                           	psect	intcode
 11710  000008                     __pintcode:
 11711                           	opt callstack 0
 11712  000008                     _desbordamiento:
 11713                           	opt callstack 20
 11714                           
 11715                           ;incstack = 0
 11716  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11717  00000A  EDF3  F014         	call	int_func,f	;refresh shadow registers
 11718                           
 11719                           	psect	intcode_body
 11720  0029E6                     __pintcode_body:
 11721                           	opt callstack 20
 11722  0029E6                     int_func:
 11723                           	opt callstack 20
 11724  0029E6  0006               	pop		; remove dummy address from shadow register refresh
 11725  0029E8                     
 11726                           ;main.c: 109:     if (INTCONbits.TMR0IF) {
 11727  0029E8  A4F2               	btfss	242,2,c	;volatile
 11728  0029EA  EFF9  F014         	goto	i2u381_41
 11729  0029EE  EFFB  F014         	goto	i2u381_40
 11730  0029F2                     i2u381_41:
 11731  0029F2  EF16  F015         	goto	i2l4770
 11732  0029F6                     i2u381_40:
 11733  0029F6                     
 11734                           ;main.c: 111:         if (esperandoDatos) {
 11735  0029F6  0100               	movlb	0	; () banked
 11736  0029F8  5189               	movf	_esperandoDatos& (0+255),w,b
 11737  0029FA  B4D8               	btfsc	status,2,c
 11738  0029FC  EF02  F015         	goto	i2u382_41
 11739  002A00  EF04  F015         	goto	i2u382_40
 11740  002A04                     i2u382_41:
 11741  002A04  EF0F  F015         	goto	i2l4766
 11742  002A08                     i2u382_40:
 11743  002A08                     
 11744                           ; BSR set to: 0
 11745                           ;main.c: 113:             tiempoInactividadTrans++;
 11746  002A08  2B8C               	incf	_tiempoInactividadTrans& (0+255),f,b
 11747  002A0A                     
 11748                           ; BSR set to: 0
 11749                           ;main.c: 115:             if (tiempoInactividadTrans == 1)
 11750  002A0A  058C               	decf	_tiempoInactividadTrans& (0+255),w,b
 11751  002A0C  A4D8               	btfss	status,2,c
 11752  002A0E  EF0B  F015         	goto	i2u383_41
 11753  002A12  EF0D  F015         	goto	i2u383_40
 11754  002A16                     i2u383_41:
 11755  002A16  EF0F  F015         	goto	i2l4766
 11756  002A1A                     i2u383_40:
 11757  002A1A                     
 11758                           ; BSR set to: 0
 11759                           ;main.c: 116:                 esperaDatoConcluida = 1;
 11760  002A1A  0E01               	movlw	1
 11761  002A1C  6F8A               	movwf	_esperaDatoConcluida& (0+255),b
 11762  002A1E                     i2l4766:
 11763                           
 11764                           ; BSR set to: 0
 11765                           ;main.c: 121:         INTCONbits.TMR0IF = 0;
 11766  002A1E  94F2               	bcf	242,2,c	;volatile
 11767  002A20                     
 11768                           ; BSR set to: 0
 11769                           ;main.c: 122:         TMR0 = VALOR_TIMER0;
 11770  002A20  C0FB  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
 11771  002A24  C0FC  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
 11772                           
 11773                           ;main.c: 123:         overflowTimer = 1;
 11774  002A28  0E01               	movlw	1
 11775  002A2A  6F82               	movwf	_overflowTimer& (0+255),b
 11776  002A2C                     i2l4770:
 11777                           
 11778                           ;main.c: 127:     if (PIR1bits.RCIF) {
 11779  002A2C  AA9E               	btfss	158,5,c	;volatile
 11780  002A2E  EF1B  F015         	goto	i2u384_41
 11781  002A32  EF1D  F015         	goto	i2u384_40
 11782  002A36                     i2u384_41:
 11783  002A36  EF22  F015         	goto	i2l217
 11784  002A3A                     i2u384_40:
 11785  002A3A                     
 11786                           ;main.c: 129:         byteUart = RCREG;
 11787  002A3A  CFAE F08B          	movff	4014,_byteUart	;volatile
 11788  002A3E                     
 11789                           ;main.c: 130:         datoRecibido = 1;
 11790  002A3E  0E01               	movlw	1
 11791  002A40  0100               	movlb	0	; () banked
 11792  002A42  6F83               	movwf	_datoRecibido& (0+255),b
 11793  002A44                     i2l217:
 11794  002A44  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11795  002A46  0011               	retfie		f
 11796  002A48                     __end_of_desbordamiento:
 11797                           	opt callstack 0
 11798                           
 11799                           	psect	rparam
 11800  0000                     
 11801                           	psect	temp
 11802  00005F                     btemp:
 11803                           	opt callstack 0
 11804  00005F                     	ds	1
 11805  0000                     int$flags	set	btemp
 11806  0000                     wtemp8	set	btemp+1
 11807  0000                     ttemp5	set	btemp+1
 11808  0000                     ttemp6	set	btemp+4
 11809  0000                     ttemp7	set	btemp+8
 11810                           tosu	equ	0xFFF
 11811                           tosh	equ	0xFFE
 11812                           tosl	equ	0xFFD
 11813                           stkptr	equ	0xFFC
 11814                           pclatu	equ	0xFFB
 11815                           pclath	equ	0xFFA
 11816                           pcl	equ	0xFF9
 11817                           tblptru	equ	0xFF8
 11818                           tblptrh	equ	0xFF7
 11819                           tblptrl	equ	0xFF6
 11820                           tablat	equ	0xFF5
 11821                           prodh	equ	0xFF4
 11822                           prodl	equ	0xFF3
 11823                           indf0	equ	0xFEF
 11824                           postinc0	equ	0xFEE
 11825                           postdec0	equ	0xFED
 11826                           preinc0	equ	0xFEC
 11827                           plusw0	equ	0xFEB
 11828                           fsr0h	equ	0xFEA
 11829                           fsr0l	equ	0xFE9
 11830                           wreg	equ	0xFE8
 11831                           indf1	equ	0xFE7
 11832                           postinc1	equ	0xFE6
 11833                           postdec1	equ	0xFE5
 11834                           preinc1	equ	0xFE4
 11835                           plusw1	equ	0xFE3
 11836                           fsr1h	equ	0xFE2
 11837                           fsr1l	equ	0xFE1
 11838                           bsr	equ	0xFE0
 11839                           indf2	equ	0xFDF
 11840                           postinc2	equ	0xFDE
 11841                           postdec2	equ	0xFDD
 11842                           preinc2	equ	0xFDC
 11843                           plusw2	equ	0xFDB
 11844                           fsr2h	equ	0xFDA
 11845                           fsr2l	equ	0xFD9
 11846                           status	equ	0xFD8


Data Sizes:
    Strings     795
    Constant    0
    Data        11
    BSS         415
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     71     159
    BANK1           256      0      50
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    dameDatosSistema$1898	PTR unsigned char [8] size(2) Largest target is 288
		 -> horarios(BIGRAM[288]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), horarios(BIGRAM[288]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), horarios(BIGRAM[288]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_30(CODE[45]), STR_29(CODE[29]), STR_28(CODE[32]), STR_27(CODE[45]), 
		 -> STR_26(CODE[29]), STR_25(CODE[32]), STR_24(CODE[24]), STR_23(CODE[25]), 
		 -> STR_22(CODE[24]), STR_21(CODE[27]), STR_20(CODE[24]), STR_19(CODE[23]), 
		 -> STR_18(CODE[25]), STR_17(CODE[24]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), dameDatosSistema@bufferHorario(BANK0[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), dameDatosSistema@bufferHorario(BANK0[30]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1564_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), dameDatosSistema@bufferHorario(BANK0[30]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), dameDatosSistema@bufferHorario(BANK0[30]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_30(CODE[45]), STR_29(CODE[29]), STR_28(CODE[32]), STR_27(CODE[45]), 
		 -> STR_26(CODE[29]), STR_25(CODE[32]), STR_24(CODE[24]), STR_23(CODE[25]), 
		 -> STR_22(CODE[24]), STR_21(CODE[27]), STR_20(CODE[24]), STR_19(CODE[23]), 
		 -> STR_18(CODE[25]), STR_17(CODE[24]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_30(CODE[45]), STR_29(CODE[29]), STR_28(CODE[32]), STR_27(CODE[45]), 
		 -> STR_26(CODE[29]), STR_25(CODE[32]), STR_24(CODE[24]), STR_23(CODE[25]), 
		 -> STR_22(CODE[24]), STR_21(CODE[27]), STR_20(CODE[24]), STR_19(CODE[23]), 
		 -> STR_18(CODE[25]), STR_17(CODE[24]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 45
		 -> STR_30(CODE[45]), STR_29(CODE[29]), STR_28(CODE[32]), STR_27(CODE[45]), 
		 -> STR_26(CODE[29]), STR_25(CODE[32]), STR_24(CODE[24]), STR_23(CODE[25]), 
		 -> STR_22(CODE[24]), STR_21(CODE[27]), STR_20(CODE[24]), STR_19(CODE[23]), 
		 -> STR_18(CODE[25]), STR_17(CODE[24]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), horarios(BIGRAM[288]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), horarios(BIGRAM[288]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), horarios(BIGRAM[288]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 50
		 -> STR_33(CODE[11]), STR_32(CODE[9]), STR_31(CODE[17]), buffer(BANK1[50]), 
		 -> dameDatosSistema@bufferHorario(BANK0[30]), STR_16(CODE[26]), STR_15(CODE[38]), STR_14(CODE[36]), 
		 -> STR_13(CODE[28]), STR_12(CODE[13]), STR_11(CODE[3]), STR_10(CODE[14]), 
		 -> STR_9(CODE[36]), STR_8(CODE[26]), STR_7(CODE[23]), STR_6(CODE[34]), 
		 -> STR_5(CODE[32]), STR_4(CODE[49]), STR_3(CODE[37]), STR_2(CODE[27]), 
		 -> STR_1(CODE[37]), 


Critical Paths under _main in COMRAM

    _sistemaRegado->_lecturaAnalogaSensores
    _encenderBombas->_estaSeco
    _estaSeco->_dameTemperaturaHumedad
    _dameHoraActual->_leer_rtc
    _dameDiaActual->_leer_rtc
    _leer_rtc->_i2c_envia_dato
    _leer_rtc->_i2c_recibe_dato
    _sistemaPrincipal->_dameDatosSistema
    _setTiempoRegar->_escribeHorariosMemoria
    _regadoRapido->_getValue
    _lecturaWifi->_getValue
    _restablecerDatosSensor->_constructorSensor
    _lecturaAnalogaSensores->_map
    _map->___aldiv
    _dameTemperaturaHumedad->_DHT11_ReadData
    _leeHorariosMemoria->___wmul
    _leeHorariosMemoria->_leer_eeprom
    _leer_eeprom->_i2c_envia_dato
    _leer_eeprom->_i2c_recibe_dato
    _i2c_reinicia_com->_i2c_espera
    _i2c_recibe_dato->_i2c_espera
    _fijaHoraRtc->_setRtc
    _fijaDiaRtc->_setRtc
    _setRtc->_getValue
    _escribe_rtc->_i2c_envia_dato
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _UART_printf->_UART_write
    _asignarHorarios->_escribeHorariosMemoria
    _getValue->_UART_write
    _escribeHorariosMemoria->_escribe_eeprom
    _escribe_eeprom->___wmul
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera
    _inicializarObjetos->___wmul
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _desbordamiento in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sistemaPrincipal
    _sistemaPrincipal->_dameDatosSistema
    _mostrarDatosSensoresWIFI->_sprintf
    _mostrarDatosSensores->_sprintf
    _dameDatosSistema->_sprintf
    _sprintf->_vfprintf

Critical Paths under _desbordamiento in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _desbordamiento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _desbordamiento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _desbordamiento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _desbordamiento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _desbordamiento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _desbordamiento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _desbordamiento in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  113943
                          _UART_init
                      _configurarAdc
                        _i2c_iniciar
                 _inicializarObjetos
             _restablecerDatosSensor
                   _sistemaPrincipal
                      _sistemaRegado
 ---------------------------------------------------------------------------------
 (1) _sistemaRegado                                        0     0      0    5214
                      _dameDiaActual
                     _dameHoraActual
                     _encenderBombas
                          _horaRegar
             _lecturaAnalogaSensores
                        _lecturaWifi
 ---------------------------------------------------------------------------------
 (2) _horaRegar                                            6     4      2      24
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _encenderBombas                                       5     5      0    1228
                                             13 COMRAM     5     5      0
                           _estaSeco
 ---------------------------------------------------------------------------------
 (3) _estaSeco                                             3     1      2     953
                                             10 COMRAM     3     1      2
             _dameTemperaturaHumedad
 ---------------------------------------------------------------------------------
 (2) _dameHoraActual                                       0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (2) _dameDiaActual                                        0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (3) _leer_rtc                                             2     2      0      90
                                              2 COMRAM     2     2      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (3) _convertirDato                                        3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _sistemaPrincipal                                     3     3      0  103745
                                             68 BANK0      3     3      0
                    _asignarHorarios
                   _dameDatosSistema
                         _fijaDiaRtc
                        _fijaHoraRtc
                 _leeHorariosMemoria
               _mostrarDatosSensores
           _mostrarDatosSensoresWIFI
                       _regadoRapido
                     _setTiempoRegar
 ---------------------------------------------------------------------------------
 (2) _setTiempoRegar                                       2     2      0    5875
                                             18 COMRAM     2     2      0
                         _UART_write
             _escribeHorariosMemoria
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _regadoRapido                                         4     4      0    1305
                                             12 COMRAM     4     4      0
                         _UART_write
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensoresWIFI                             3     3      0   26325
                                             92 COMRAM     1     1      0
                                             28 BANK0      2     2      0
                        _UART_printf
                         _UART_write
             _dameTemperaturaHumedad
                        _lecturaWifi
                      _limpiarBuffer
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaWifi                                          4     4      0    1828
                                             12 COMRAM     4     4      0
                          _UART_read
                         _UART_write
                           _getValue
                      _limpiarBuffer
             _restablecerDatosSensor
 ---------------------------------------------------------------------------------
 (3) _restablecerDatosSensor                               2     2      0     387
                                              4 COMRAM     2     2      0
                  _constructorSensor
 ---------------------------------------------------------------------------------
 (4) _constructorSensor                                    4     0      4     297
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensores                                 3     3      0   26269
                                             92 COMRAM     1     1      0
                                             28 BANK0      2     2      0
                        _UART_printf
                         _UART_write
             _dameTemperaturaHumedad
             _lecturaAnalogaSensores
                      _limpiarBuffer
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaAnalogaSensores                               3     3      0    1772
                                             46 COMRAM     3     3      0
                   _dameHumedadSuelo
                                _map
 ---------------------------------------------------------------------------------
 (3) _map                                                 20     0     20    1660
                                             26 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
                   _dameHumedadSuelo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _dameHumedadSuelo                                     5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _dameTemperaturaHumedad                               8     8      0     299
                                              2 COMRAM     8     8      0
                     _DHT11_ReadData
                        _DHT11_Start
                     _check_response
 ---------------------------------------------------------------------------------
 (5) _check_response                                       1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _leeHorariosMemoria                                   9     9      0    4238
                                              6 COMRAM     9     9      0
                         _UART_write
                             ___wmul
                        _leer_eeprom
 ---------------------------------------------------------------------------------
 (3) _leer_eeprom                                          4     2      2     492
                                              2 COMRAM     4     2      2
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_recibe_dato                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (2) _fijaHoraRtc                                          0     0      0    3145
                         _UART_write
                        _escribe_rtc
                             _setRtc
 ---------------------------------------------------------------------------------
 (2) _fijaDiaRtc                                           0     0      0    2699
                         _UART_write
                             _setRtc
 ---------------------------------------------------------------------------------
 (3) _setRtc                                               4     4      0    2677
                                             12 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                        _escribe_rtc
                           _getValue
 ---------------------------------------------------------------------------------
 (4) _escribe_rtc                                          2     1      1     446
                                              2 COMRAM     2     1      1
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _dameDatosSistema                                    42    42      0   27789
                                             92 COMRAM     2     2      0
                                             28 BANK0     40    40      0
                        _UART_printf
                         _UART_write
                             ___wmul
                      _limpiarBuffer
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             22    10     12   21899
                                              6 BANK0     22    10     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   19564
                                             90 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           47    41      6   19174
                                             63 COMRAM    27    21      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5574
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 7     4      3    4145
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3925
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    4376
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _limpiarBuffer                                        2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2    2119
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (2) _asignarHorarios                                      7     7      0    6078
                                             18 COMRAM     7     7      0
                         _UART_write
             _escribeHorariosMemoria
                           _getValue
 ---------------------------------------------------------------------------------
 (3) _getValue                                            11     9      2    1192
                                              1 COMRAM    11     9      2
                          _UART_read
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _escribeHorariosMemoria                               8     8      0    4549
                                             10 COMRAM     8     8      0
                             ___wmul
                     _escribe_eeprom
 ---------------------------------------------------------------------------------
 (4) _escribe_eeprom                                       4     1      3     848
                                              6 COMRAM     4     1      3
                             ___wmul (ARG)
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializarObjetos                                   8     8      0    3697
                                              6 COMRAM     8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    3383
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     900
                                             26 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     756
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _desbordamiento                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _configurarAdc
   _i2c_iniciar
   _inicializarObjetos
     ___wmul
   _restablecerDatosSensor
     _constructorSensor
   _sistemaPrincipal
     _asignarHorarios
       _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
       _getValue
         _UART_read
         _UART_write
     _dameDatosSistema
       _UART_printf
         _UART_write
       _UART_write
       ___wmul
       _limpiarBuffer
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _fijaDiaRtc
       _UART_write
       _setRtc
         ___awdiv
         ___awmod
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _getValue
           _UART_read
           _UART_write
     _fijaHoraRtc
       _UART_write
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
       _setRtc
         ___awdiv
         ___awmod
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _getValue
           _UART_read
           _UART_write
     _leeHorariosMemoria
       _UART_write
       ___wmul
       _leer_eeprom
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _mostrarDatosSensores
       _UART_printf
         _UART_write
       _UART_write
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _check_response
       _lecturaAnalogaSensores
         _dameHumedadSuelo
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
           _dameHumedadSuelo (ARG)
       _limpiarBuffer
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _mostrarDatosSensoresWIFI
       _UART_printf
         _UART_write
       _UART_write
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _check_response
       _lecturaWifi
         _UART_read
         _UART_write
         _getValue
           _UART_read
           _UART_write
         _limpiarBuffer
         _restablecerDatosSensor
           _constructorSensor
       _limpiarBuffer
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _regadoRapido
       _UART_write
       _getValue
         _UART_read
         _UART_write
     _setTiempoRegar
       _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
       _getValue
         _UART_read
         _UART_write
   _sistemaRegado
     _dameDiaActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _dameHoraActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _encenderBombas
       _estaSeco
         _dameTemperaturaHumedad
           _DHT11_ReadData
           _DHT11_Start
           _check_response
     _horaRegar
     _lecturaAnalogaSensores
       _dameHumedadSuelo
       _map
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _dameHumedadSuelo (ARG)
     _lecturaWifi
       _UART_read
       _UART_write
       _getValue
         _UART_read
         _UART_write
       _limpiarBuffer
       _restablecerDatosSensor
         _constructorSensor

 _desbordamiento (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     120      21       14.1%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      32       7       19.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     47      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12F      20        0.0%
DATA                 0      0     24F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jul 07 11:43:03 2020

                 __size_of_escribe_eeprom 0030                                        l83 30F6  
                                      l92 3142                                        l95 313A  
                                      l89 300E                                        l98 314A  
                            ___awdiv@sign 0006                            ?_configurarAdc 0001  
                     ___wmul@multiplicand 0003                               __CFG_BORV$3 000000  
          __end_of_dameTemperaturaHumedad 26C6                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                   regadoRapido@tiempoRegar 000F  
                                     l101 3112                                       l110 2FE8  
                                     l104 30CA                                       l113 3054  
                                     l107 30B0                                       l220 27C2  
                                     l141 30E0                                       l126 2918  
                                     l134 2C06                                       l135 2C08  
                                     l223 3128                                       l231 2F2C  
                                     l160 2B00                                       l152 2AAE  
                                     l129 2BD0                                       l313 2E82  
                                     l226 3132                                       l138 30D2  
                                     l147 2AA4                                       l163 3074  
                                     l251 3106                                       l332 2838  
                                     l308 0DC8                                       l236 2748  
                                     l245 1756                                       l157 2ADE  
                                     l421 2084                                       l262 2F92  
                                     l414 26B8                                       l327 1CA2  
                                     l255 3092                                       l415 26C0  
                                     l335 2D1E                                       l343 2CFA  
                                     l272 1A10                                       l408 087C  
                                     l168 2DC4                                       l416 26C4  
                                     l352 2452                                       l248 2FBE  
                                     l265 2EBE                                       l281 15EC  
                                     l337 2D2C                                       l530 21D8  
                                     l602 010E                                       l338 2D40  
                                     l443 0E4C                                       l259 28A8  
                                     l427 1FAA                                       l532 2214  
                                     l453 0EF8                                       l357 25AC  
                                     l365 2398                                       l463 0FE0  
                                     l527 2196                                       l471 1CFC  
                                     l376 239A                                       l392 1B64  
                                     l545 091E                                       l625 0592  
                                     l473 1D02                                       l481 1DB4  
                                     l650 2972                                       l474 1D08  
                                     l539 2BB4                                       l547 0926  
                                     l635 29DC                                       l651 2982  
                                     l475 1D0E                                       l572 137A  
                                     l636 29E4                                       l476 1D14  
                                     l565 0B5E                                       l477 1D1A  
                                     l718 1EC0                                       l486 2E44  
                                     l574 1382                                       l478 1D20  
                                     l639 3034                                       l583 142C  
                                     l479 1D26                                       l584 1476  
                                     l753 12F8                                       l588 147E  
                                     l766 18BA                                       l870 22D8  
                                     l883 2502                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                              __CFG_BOR$OFF 000000  
                                     _abs 2DC6                                       _pad 2150  
                                     _map 274A                              ___awmod@sign 0006  
                                     prod 000FF3                                       wreg 000FE8  
                __end_of_dameDatosSistema 087E                              __CFG_LVP$OFF 000000  
                       ?_i2c_reinicia_com 0001                              ?_escribe_rtc 0003  
                            __CFG_WDT$OFF 000000                                      ?_abs 0013  
                                    l1314 2DFC                                      l1317 2E04  
                                    l1351 2EF6                                      l4000 2E22  
                                    l1345 1168                                      l4002 2E3E  
                                    l4010 29C0                                      l1348 1170  
                                    l3220 2098                                      l3300 11DA  
                                    l4004 2984                                      l4020 2234  
                                    l4012 2216                                      l4100 3038  
                                    l4110 2A4C                                      l1374 214E  
                                    l3222 20AA                                      l1382 2D84  
                                    l3310 122E                                      l3302 11E6  
                                    l4006 298C                                      l4030 2268  
                                    l4022 2242                                      l4014 221A  
                                    l4102 3040                                      l1359 2CAC  
                                    l4112 2A70                                      l1392 314C  
                                    l3224 20B4                                      l3232 2D42  
                                    l3240 2F2E                                      l3320 12A2  
                                    l3312 1240                                      l3304 1204  
                                    l3400 089E                                      l4008 299A  
                                    l4040 22A2                                      l4032 2270  
                                    l4024 224A                                      l4016 2228  
                                    l4200 23AE                                      l4104 3052  
                                    l4120 2F00                                      l4114 2A74  
                                    l3226 20D2                                      l3218 2086  
                                    l3234 2D4E                                      l3242 2F3A  
                                    l3250 2150                                      l3314 126E  
                                    l3306 120C                                      l3322 12A8  
                                    l3330 1758                                      l3410 0912  
                                    l3402 08C6                                      l4050 22C8  
                                    l4042 22AA                                      l4034 2278  
                                    l4026 224E                                      l4018 2230  
                                    l4130 283C                                      l4210 23DC  
                                    l4202 23C0                                      l4122 2F10  
                                    l4108 2A48                                      l3228 2108  
                                    l3236 2D60                                      l3244 2F3E  
                                    l3260 21A2                                      l3252 2160  
                                    l3324 12B8                                      l3316 128E  
                                    l3308 1220                                      l3340 179C  
                                    l3332 175C                                      l3420 095C  
                                    l3412 092E                                      l3404 08E6  
                                    l3500 1458                                      l4052 22D0  
                                    l4044 22AC                                      l4036 2286  
                                    l4028 2256                                      l4060 2466  
                                    l4140 28A6                                      l4132 2844  
                                    l4300 14EE                                      l4220 243C  
                                    l4212 23EE                                      l4124 2F22  
                                    l4116 2EF8                                      l1389 2C5A  
                                    l3510 101A                                      l3502 0FE2  
                                    l3238 2D64                                      l1398 2F62  
                                    l3246 2F56                                      l3262 21B6  
                                    l3254 2174                                      l3326 12D8  
                                    l3318 1290                                      l3350 1804  
                                    l3342 17BC                                      l3334 176A  
                                    l3430 09F8                                      l3422 0964  
                                    l3414 0940                                      l3406 08F6  
                                    l4046 22B2                                      l4038 228C  
                                    l4070 249A                                      l4062 246E  
                                    l4134 2852                                      l4310 1586  
                                    l4302 1534                                      l4214 2408  
                                    l4222 2446                                      l4126 2F26  
                                    l4118 2EFC                                      l3280 3010  
                                    l4152 18BC                                      l4400 1B66  
                                    l3520 1070                                      l3512 1050  
                                    l3504 0FF6                                      l3264 21BA  
                                    l3256 2182                                      l3360 187A  
                                    l3352 1832                                      l3344 17DA  
                                    l3336 178A                                      l3272 2DC6  
                                    l3440 0AC8                                      l3424 096A  
                                    l3432 0A5C                                      l3416 094E  
                                    l3408 08F8                                      l4048 22B8  
                                    l4080 24D6                                      l4072 24A2  
                                    l4064 2472                                      l4056 2454  
                                    l4136 2864                                      l4144 2E84  
                                    l4312 158A                                      l4304 1538  
                                    l3600 306A                                      l4240 2592  
                                    l4224 244C                                      l4216 241E  
                                    l4208 23CE                                      l4320 0B60  
                                    l3282 302C                                      l4154 18C4  
                                    l4402 1B74                                      l3370 2C74  
                                    l3530 10EA                                      l3522 1078  
                                    l3514 1054                                      l3506 0FFA  
                                    l3266 21E8                                      l3258 218E  
                                    l3290 1184                                      l3362 189A  
                                    l3354 1852                                      l3346 17E2  
                                    l3338 178E                                      l3274 2DE0  
                                    l3450 0B12                                      l3434 0A76  
                                    l3442 0AD8                                      l3426 09EC  
                                    l3418 0954                                      l4250 2C48  
                                    l4242 2C0A                                      l4082 24DC  
                                    l4074 24AA                                      l4066 2480  
                                    l4058 2458                                      l4138 28A2  
                                    l4146 2EAE                                      l4314 15C0  
                                    l4306 153C                                      l3602 3072  
                                    l3610 2DA0                                      l4234 250C  
                                    l4226 2450                                      l4218 2422  
                                    l5050 2352                                      l4330 0BA2  
                                    l3380 2FEA                                      l4180 196C  
                                    l4164 18E0                                      l4156 18D4  
                                    l5060 1BF4                                      l4420 1BD0  
                                    l4404 1B86                                      l3276 2EC0  
                                    l3372 2CA2                                      l3524 1080  
                                    l3508 0FFE                                      l3268 21FC  
                                    l3292 11A4                                      l3356 1864  
                                    l3348 17F6                                      l3452 0B1E  
                                    l3444 0AEA                                      l3436 0A94  
                                    l3428 09F2                                      l3460 12FA  
                                    l3700 032A                                      l4244 2C1C  
                                    l4500 07F2                                      l4076 24B8  
                                    l4084 24E2                                      l4068 2488  
                                    l4148 2EBC                                      l4316 15DC  
                                    l4308 1558                                      l3612 2DA8  
                                    l3604 2D86                                      l4236 257E  
                                    l4228 2504                                      l5052 1D40  
                                    l4092 2FC2                                      l4340 0C10  
                                    l4332 0BAA                                      l4260 270C  
                                    l3382 3000                                      l3550 3148  
                                    l4182 1988                                      l4174 191C  
                                    l4166 1910                                      l4158 18D8  
                                    l5062 0E7A                                      l4422 1BD8  
                                    l4430 1C36                                      l4414 1BAC  
                                    l4406 1B94                                      l3374 2CA6  
                                    l3366 2C5C                                      l3534 1128  
                                    l3526 10B4                                      l3518 105A  
                                    l3390 2B88                                      l3294 11A8  
                                    l3286 1172                                      l3358 186A  
                                    l3454 0B26                                      l3446 0AFA  
                                    l3438 0AAE                                      l3470 1342  
                                    l3462 130C                                      l3710 03AE  
                                    l3702 033C                                      l3630 0056  
                                    l4246 2C24                                      l5054 082C  
                                    l4086 24F2                                      l4078 24CE  
                                    l4318 15E6                                      l3614 2DB6  
                                    l3606 2D8A                                      l4238 258E  
                                    l3622 3120                                      l4190 239C  
                                    l4094 2FE6                                      l4270 30F8  
                                    l4350 0C4C                                      l4334 0BDA  
                                    l4326 0B70                                      l4262 273E  
                                    l4254 26C6                                      l3800 1E80  
                                    l3552 310A                                      l3544 313C  
                                    l4184 19B8                                      l4176 1964  
                                    l4168 1914                                      l3560 2BB6  
                                    l5064 0F32                                      l4432 1C3A  
                                    l4416 1BBA                                      l4408 1BA4  
                                    l4440 1C78                                      l3368 2C60  
                                    l3536 113A                                      l3392 2B8C  
                                    l3384 2B5C                                      l3296 11B6  
                                    l3288 1176                                      l3448 0B00  
                                    l3456 0B36                                      l3480 13BA  
                                    l3472 134A                                      l3464 1314  
                                    l3720 0476                                      l3712 03D2  
                                    l3704 0360                                      l5056 00CE  
                                    l3632 005A                                      l3624 0012  
                                    l4248 2C2C                                      l4504 0816  
                                    l4088 24FA                                      l4272 3076  
                                    l4280 1496                                      l3616 2DBE  
                                    l3608 2D92                                      l4192 239E  
                                    l4520 1EE6                                      l4600 1DAE  
                                    l5048 0D3A                                      l4352 0C7C  
                                    l4344 0C16                                      l4328 0BA0  
                                    l4264 2742                                      l4256 26CA  
                                    l3802 1E8A                                      l4610 28AA  
                                    l3378 2FEA                                      l3554 310E  
                                    l3546 3140                                      l4186 19BC  
                                    l4178 1968                                      l3562 2BDE  
                                    l5066 0F98                                      l4442 1C88  
                                    l4434 1C56                                      l4426 1BE0  
                                    l3538 114C                                      l5058 109E  
                                    l3394 2B90                                      l3386 2B70  
                                    l3298 11D6                                      l3490 140A  
                                    l3482 13BE                                      l3474 1358  
                                    l3466 1326                                      l3730 0514  
                                    l3722 049A                                      l3714 03F6  
                                    l3706 0392                                      l3650 0094  
                                    l3642 0084                                      l3634 0066  
                                    l3626 0036                                      l4506 086A  
                                    l4274 308C                                      l4290 14B4  
                                    l4282 149A                                      l3618 2DC2  
                                    l4194 239E                                      l4530 1F30  
                                    l4522 1EF2                                      l4514 1EC2  
                                    l4450 27C4                                      l4098 3038  
                                    l4370 0D1E                                      l4362 0CB8  
                                    l4346 0C46                                      l4338 0BE0  
                                    l4258 26EC                                      l3804 1E90  
                                    l4620 290A                                      l4612 28AA  
                                    l3548 3144                                      l3556 3112  
                                    l4188 19F4                                      l3564 2BEE  
                                    l3572 30CE                                      l4444 1C9C  
                                    l4436 1C6A                                      l4428 1C0A  
                                    l3388 2B7C                                      l3492 140E  
                                    l3484 13DC                                      l3468 132E  
                                    l3740 0550                                      l3732 0522  
                                    l3724 04D0                                      l3716 043E  
                                    l3636 006A                                      l3660 00FC  
                                    l3628 0044                                      l4508 0876  
                                    l3820 30BC                                      l3812 3134  
                                    l4292 14E2                                      l4284 14AC  
                                    l4276 1480                                      l3580 2ABC  
                                    l4196 23A2                                      l4540 1F84  
                                    l4524 1F0E                                      l4516 1EC6  
                                    l4460 282E                                      l4452 27D2  
                                    l4268 2F94                                      l4380 0D84  
                                    l4364 0CE8                                      l4356 0C82  
                                    l3806 1EA0                                      l4630 2914  
                                    l4622 290C                                      l4614 28AC  
                                    l4606 30E2                                      l3566 2BFE  
                                    l3910 0EF0                                      l4438 1C6E  
                                    l3398 087E                                      l3486 13E8  
                                    l3478 13A6                                      l3734 0536  
                                    l3670 0188                                      l3662 011E  
                                    l3654 009C                                      l3646 008C  
                                    l3638 007C                                      l3830 3096  
                                    l3822 30C4                                      l3814 3138  
                                    l4294 14E6                                      l4278 1488  
                                    l3590 2AEE                                      l3582 2AC2  
                                    l3574 2AA6                                      l4550 1FB4  
                                    l4198 23A8                                      l4542 1F8A  
                                    l4526 1F1A                                      l4518 1ECA  
                                    l4462 2832                                      l4454 27E4  
                                    l4382 0D9E                                      l4358 0CB2  
                                    l4710 1A44                                      l4702 1A12  
                                    ?_map 001B                                      ?_pad 0011  
                                    l3808 1EB0                                      l4632 2916  
                                    l4624 290E                                      l4616 28AE  
                                    l4608 30E6                                      l3568 2C02  
                                    l3912 0EFC                                      l3920 0F1C  
                                    l3904 0ECA                                      l3496 1440  
                                    l3488 1406                                      l3728 04F0  
                                    l3680 020A                                      l3672 0196  
                                    l3664 0120                                      l3744 055C  
                                    l4480 06E4                                      l4472 05DA  
                                    l4464 0594                                      l4392 2E46  
                                    l3824 30C6                                      l3816 30B2  
                                    l3592 2AFE                                      l3584 2AD0  
                                    l3840 2642                                      l3760 292A  
                                    l3832 274A                                      l4560 2008  
                                    l4552 1FD0                                      l4536 1F38  
                                    l4544 1FA4                                      l4528 1F1E  
                                    l4456 27F2                                      l4384 0DAE  
                                    l4368 0CEE                                      l4376 0D24  
                                    l4720 1A7C                                      l4712 1A46  
                                    l4704 1A24                                      l4800 25B6  
                                    l3770 1DBA                                      l4626 2910  
                                    l4618 28E2                                      l4634 312A  
                                    l4642 15F6                                      l3914 0F08  
                                    l3922 0F50                                      l3906 0ED0  
                                    l3498 1454                                      l3746 0580  
                                    l3738 0542                                      l3690 027C  
                                    l3674 01B6                                      l3682 021C  
                                    l3666 0144                                      l3658 00A8  
                                    l4490 073E                                      l4474 060A  
                                    l4482 06F0                                      l4466 05D0  
                                    l4394 2E5C                                      l3826 30C8  
                                    l3818 30B6                                      l3586 2AD8  
                                    l3762 2938                                      l4570 205E  
                                    l4554 1FDC                                      l4546 1FAC  
                                    l4538 1F78                                      l4458 2804  
                                    l4386 0DB4                                      l4378 0D80  
                                    l4730 1AC4                                      l4714 1A58  
                                    l4706 1A28                                      l4722 1A84  
                                    l4810 25DA                                      l4802 25BA  
                                    l3780 1DFA                                      l3772 1DC8  
                                    l4628 2912                                      l4660 16B6  
                                    l4644 1686                                      l4636 15EE  
                                    l3924 0F54                                      l3916 0F14  
                                    l3908 0EE0                                      l3860 0DFC  
                                    l3932 0F82                                      l3852 0DCA  
                                    l3692 02B6                                      l3684 0240  
                                    l3676 01C4                                      l3668 017A  
                                    l4492 0762                                      l4484 06F6  
                                    l4476 068E                                      l4396 2E72  
                                    l3588 2AEC                                      l3596 3056  
                                    l3844 2646                                      l3836 263E  
                                    l3764 2948                                      l4572 2064  
                                    l4556 1FF8                                      l4548 1FB0  
                                    l4580 1CC4                                      l4740 1B16  
                                    l4732 1AC8                                      l4724 1A8C  
                                    l4716 1A64                                      l4708 1A3C  
                                    l4820 25F0                                      l4812 25DE  
                                    l4804 25BE                                      l3790 1E38  
                                    l3782 1DFE                                      l3774 1DD8  
                                    l4670 173A                                      l4662 16F2  
                                    l4654 16AE                                      l4646 168A  
                                    l3926 0F5E                                      l3934 0FB6  
                                    l3862 0E00                                      l3854 0DD6  
                                    l3694 02D6                                      l3686 024A  
                                    l4494 0786                                      l4486 0712  
                                    l4478 06B0                                      l4398 2E7C  
                                    l3598 305A                                      l3846 265A  
                                    l3838 2642                                      l3766 2952  
                                    l3758 291A                                      l4574 207E  
                                    l4566 2012                                      l4558 2004  
                                    l4590 1D2C                                      l4582 1CD6  
                                    l4742 1B28                                      l4750 1B5C  
                                    l4734 1AD8                                      l4726 1AA0  
                                    l4718 1A78                                      l4830 2612  
                                    l4822 25F2                                      l4814 25E2  
                                    l4806 25C2                                      l3792 1E46  
                                    l3784 1E0E                                      l3776 1DDC  
                                    l3768 1DB6                                      l4664 16F6  
                                    l4648 16A6                                      l3960 2F64  
                                    l3944 0FDE                                      l3936 0FC8  
                                    l3928 0F62                                      l3880 0E44  
                                    l3864 0E08                                      l3856 0DDC  
                                    l3696 02E4                                      l3688 0258  
                                    l4496 07AA                                      l4488 071A  
                                    l3848 267E                                      l4568 2052  
                                    l4592 1D86                                      l4584 1CE4  
                                    l4576 1CA4                                      l4680 22FC  
                                    l4672 22DE                                      l4744 1B2C  
                                    l4736 1AEE                                      l4728 1AB0  
                                    l4832 2618                                      l4824 25F8  
                                    l4816 25E6                                      l4808 25D6  
                                    l3794 1E50                                      l3786 1E24  
                                    l3778 1DEA                                      l4666 1712  
                                    l3962 2F84                                      l3938 0FD8  
                                    l3882 0E50                                      l3890 0E90  
                                    l3874 0E1E                                      l3866 0E0E  
                                    l3858 0DEC                                      l4498 07CE  
                                    l3970 2D1A                                      l4594 1D8C  
                                    l4586 1CF6                                      l4578 1CB6  
                                    l4690 232C                                      l4682 2304  
                                    l4674 22E4                                      l4746 1B3E  
                                    l4738 1B00                                      l4834 262A  
                                    l4826 260A                                      l4818 25EE  
                                    l3796 1E6E                                      l3788 1E2C  
                                    l4668 1736                                      l3892 0E94  
                                    l3884 0E5C                                      l3876 0E24  
                                    l3868 0E16                                      l3972 2D1C  
                                    l3964 2CFE                                      l4596 1DA0  
                                    l4692 2334                                      l4684 2314  
                                    l4676 22EC                                      l4748 1B54  
                                    l4836 2632                                      l4828 260E  
                                    l3798 1E7E                                      l3894 0E9E  
                                    l3878 0E34                                      l3990 2E06  
                                    l3974 2D2E                                      l3966 2D06  
                                    l4598 1DA4                                      l4686 231C  
                                    l4678 22F4                                      l3896 0EA2  
                                    l3888 0E64                                      l3968 2D08  
                                    l3984 2CB6                                      l4688 2324  
                                    l4696 233C                                      l3898 0EC2  
                                    l3986 2CDC                                      l3978 2CAE  
                                    l3996 2E0E                                      l3988 2CE0  
                                    l3998 2E1E                                      l4798 25AE  
                            ?_leer_eeprom 0003                                      STR_1 7D67  
                                    STR_2 7E94                                      STR_3 7D8C  
                                    STR_4 7CE3                                      STR_5 7E1B  
                                    STR_6 7DF9                                      STR_7 7F90  
                                    STR_8 7ECA                                      STR_9 7DB1  
                                    u2000 2160                                      u2001 215C  
                                    u2010 2182                                      u2011 217E  
                                    u2020 21D8                                      u2100 1204  
                                    u2021 21D4                                      u2101 1200  
                                    u2030 21E8                                      u2110 122E  
                                    u2031 21E4                                      u2111 122A  
                                    u3000 0EF0                                      u2200 2C74  
                                    u2120 126E                                      u2040 2DE0  
                                    u3001 0EEC                                      u2201 2C70  
                                    u2121 126A                                      u2041 2DDC  
                                    u3010 0F7E                                      u2050 2EF0  
                                    u2210 2CA2                                      u2130 12B8  
                                    u3011 0F7A                                      u2051 2EEA  
                                    u2211 2C9E                                      u2131 12B4  
                                    u2220 3000                                      u3020 0FC8  
                                    u2060 2EF2                                      u2140 176A  
                                    u2300 0940                                      u3100 2268  
                                    u2221 2FFC                                      u3021 0FC4  
                                    u2141 1766                                      u2301 093C  
                                    u3101 2264                                      u2230 300E  
                                    u3030 0FD8                                      u2070 1184  
                                    u2150 179C                                      u2310 094E  
                                    u3110 2286                                      u2231 300A  
                                    u3031 0FD4                                      u2071 1180  
                                    u2151 1798                                      u2311 094A  
                                    u3111 2282                                      u3200 2A6C  
                                    u2240 2B70                                      u2080 11B6  
                                    u2160 17DA                                      u2320 0A76  
                                    u3120 22A2                                      u3040 2D2C  
                                    _LATD 000F8C                                      u2241 2B6C  
                                    u2081 11B2                                      u2161 17D6  
                                    u2321 0A72                                      u2401 1304  
                                    u3121 229E                                      u3041 2D28  
                                    u3210 2A94                                      u2170 1804  
                                    u2330 0A94                                      u2250 08AE  
                                    u2410 1326                                      u3130 22C8  
                                    u3050 2CFA                                      u2091 11E0  
                                    u2171 1800                                      u2331 0A90  
                                    u2251 08A8                                      u2411 1322  
                                    u3131 22C4                                      u3051 2CF6  
                                    u3220 2AA4                                      u3060 2E3E  
                                    u2500 1050                                      u2180 1832  
                                    u2340 0AAE                                      u2260 08B0  
                                    u2420 1358                                      u3140 2466  
                                    u3300 243C                                      u3221 2AA0  
                                    u3061 2E3A                                      u2501 104C  
                                    u2181 182E                                      u2341 0AAA  
                                    u2421 1354                                      u3141 2462  
                                    u3301 2438                                      u2510 106C  
                                    u2190 187A                                      u2350 0AC8  
                                    u2270 08C6                                      u2430 1376  
                                    u3070 29DC                                      u3150 2480  
                                    u3310 25AC                                      u3230 2F10  
                                    u3207 2A62                                      u2511 1068  
                                    u2191 1876                                      u2351 0AC4  
                                    u2271 08C2                                      u2431 1372  
                                    u3071 29D8                                      u3151 247C  
                                    u3311 25A8                                      u3231 2F0C  
                                    u2520 1122                                      u2360 0AD8  
                                    u2280 08F6                                      u2440 13A2  
                                    u3080 2228                                      u3160 249A  
                                    u2600 2ABC                                      u3240 2F22  
                                    u3400 0BDA                                      u3320 26EC  
                                    u3217 2A8A                                      u2521 111C  
                                    u2361 0AD4                                      u2281 08F2  
                                    u2441 139E                                      u3081 2224  
                                    u3161 2496                                      u2601 2AB8  
                                    u3241 2F1E                                      u3401 0BD6  
                                    u3321 26E8                                      u2530 1124  
                                    u2370 0AEA                                      u2290 0912  
                                    u2450 13DC                                      u3090 2242  
                                    u3170 24B8                                      u3250 2864  
                                    u2610 2AD0                                      u3410 0C10  
                                    u3330 270C                                      u2371 0AE6  
                                    u2291 090E                                      u2451 13D8  
                                    u3091 223E                                      u3171 24B4  
                                    u3251 2860                                      u2611 2ACC  
                                    u3411 0C0C                                      u3331 2708  
                                    u3260 1988                                      u2540 113A  
                                    u2380 0AFA                                      u2460 142C  
                                    u2700 0188                                      u3180 24CE  
                                    u3500 2E72                                      u2620 2AEC  
                                    u3420 0C46                                      u3340 273E  
                                    u3261 1984                                      u2541 1136  
                                    u2381 0AF6                                      u2461 1428  
                                    u2701 0184                                      u3181 24CA  
                                    u3501 2E6E                                      u2621 2AE8  
                                    u3421 0C42                                      u3341 273A  
                                    u3270 1A10                                      u3510 1B86  
                                    u2550 114C                                      u2390 0B12  
                                    u2470 143C                                      u2710 0204  
                                    u3190 24F2                                      u3350 308C  
                                    u2630 2AFE                                      u3430 0C7C  
                                    u3271 1A0C                                      u3511 1B82  
                                    u2551 1148                                      u2391 0B0E  
                                    u2471 1438                                      u2711 01FE  
                                    u3191 24EE                                      u3351 3088  
                                    u2631 2AFA                                      u3431 0C78  
                                    u2560 2BDE                                      u3520 1BA4  
                                    u2480 1476                                      u2800 03D2  
                                    u2720 0206                                      u3360 14AC  
                                    u2640 2DA0                                      u3280 23C0  
                                    u3600 1F30                                      u3440 0CB2  
                                    u2561 2BDA                                      u3521 1BA0  
                                    u2481 1472                                      u2801 03CE  
                                    u3361 14A8                                      u2641 2D9C  
                                    u3281 23BC                                      u3601 1F2C  
                                    u3441 0CAE                                      u2570 2BEE  
                                    u3530 1BCC                                      u2490 101A  
                                    u2810 03F6                                      u2730 021C  
                                    u3370 1558                                      u2650 2DB6  
                                    u3290 23EE                                      u3610 1FA4  
                                    u3450 0CE8                                      u2571 2BEA  
                                    u3531 1BC8                                      u2491 1016  
                                    u2811 03F2                                      u2731 0218  
                                    u3371 1554                                      u2651 2DB2  
                                    u3291 23EA                                      u3611 1FA0  
                                    u3451 0CE4                                      u2900 1E6E  
                                    u2580 2BFE                                      u3540 1C56  
                                    u1940 2098                                      u2820 049A  
                                    u2740 0240                                      u2660 0036  
                                    u3380 15DC                                      u3620 207E  
                                    u3460 0D1E                                      u3700 1A24  
                                    u2901 1E6A                                      u2581 2BFA  
                                    u3541 1C52                                      u1941 2094  
                                    u2821 0496                                      u2741 023C  
                                    u2661 0032                                      u3381 15D8  
                                    u3621 207A                                      u3461 0D1A  
                                    u3701 1A20                                      u2910 1EA0  
                                    u2590 30E0                                      u3550 1C88  
                                    u1950 20AA                                      u2830 0514  
                                    u2750 027C                                      u2670 010E  
                                    u3630 1CB6                                      u3470 0D9E  
                                    u3390 0BA0                                      u3710 1A3C  
                                    u2911 1E9C                                      u2591 30DC  
                                    u3551 1C84                                      u1951 20A6  
                                    u2831 0510                                      u2751 0278  
                                    u2671 010A                                      u3631 1CB2  
                                    u3471 0D9A                                      u3391 0B9C  
                                    u3711 1A38                                      u1960 20D2  
                                    u2760 0324                                      u2680 011E  
                                    u2920 265A                                      u2840 2938  
                                    u3640 1CD6                                      u3560 27E4  
                                    u3480 0DAE                                      u3800 1B3E  
                                    u3720 1A58                                      u1961 20CE  
                                    u2761 031E                                      u2681 011A  
                                    u2921 2656                                      u2841 2934  
                                    u3641 1CD2                                      u3561 27E0  
                                    u3481 0DAA                                      u3801 1B3A  
                                    u3721 1A54                                      u1970 2108  
                                    u2770 0326                                      u2690 0144  
                                    u3490 2E5C                                      u2930 26B4  
                                    u2850 2972                                      u3650 1CF6  
                                    u3570 2804                                      u3730 1AA0  
                                    u1971 2104                                      u2691 0140  
                                    u3491 2E58                                      u2931 26B0  
                                    u2851 296E                                      u3651 1CF2  
                                    u3571 2800                                      u3731 1A9C  
                                    u2860 1DC8                                      u3660 16A6  
                                    u2940 0DEC                                      u1980 2D84  
                                    u2780 033C                                      u3580 060A  
                                    u3740 1AB0                                      u2861 1DC4  
                                    u3661 16A2                                      u2941 0DE8  
                                    u1981 2D80                                      u2781 0338  
                                    u3581 0606                                      u3741 1AAC  
                                    u2870 1DEA                                      u3670 1712  
                                    u2950 0DFC                                      u1990 2F56  
                                    u2790 0360                                      u3590 0712  
                                    u3750 1AD8                                      u2871 1DE6  
                                    u3671 170E                                      u2951 0DF8  
                                    u1991 2F52                                      u2791 035C  
                                    u3591 070E                                      u3751 1AD4  
                                    u2880 1E24                                      u3680 1756  
                                    u2960 0E34                                      u3760 1AEE  
                                    u2881 1E20                                      u3681 1752  
                                    u2961 0E30                                      u3761 1AEA  
                                    u2890 1E46                                      u2970 0E44  
                                    u3690 2314                                      u3770 1B00  
                                    u3850 260A                                      u2891 1E42  
                                    u2971 0E40                                      u3907 2DA2  
                                    u3691 2310                                      u3771 1AFC  
                                    u3851 2606                                      u2980 0EBE  
                                    u3780 1B16                                      u3860 262A  
                                    u2981 0EBA                                      u3917 2DB8  
                                    u3781 1B12                                      u3861 2626  
                                    u2990 0EE0                                      u3790 1B28  
                                    u2991 0EDC                                      u3927 3060  
                                    u3791 1B24                                      u3937 306E  
                                    u3947 2ABE                                      u3957 2EB4  
                                    u3877 2584                                      u3967 2F8A  
                                    u3887 2D00                                      u3897 2D8C  
                                    _TMR0 000FD6                      _minutosTranscurridos 007C  
                      ??_i2c_reinicia_com 0002                            _check_response 2D86  
                 escribeHorariosMemoria@i 0011                   escribeHorariosMemoria@j 000D  
                           ??_i2c_detener 0002                                      abs@a 0013  
                                    _dbuf 008D                                      _atoi 0FE2  
                                    _ctoa 2B5C                                      _main 25AE  
                                    _dtoa 087E                                      _hora 0087  
                                    _prec 0074                                      _nout 0070  
                                    pad@i 0018                                      pad@p 0015  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    indf1 000FE7                                      indf2 000FDF  
                                    fsr1l 000FE1                                      pad@w 001A  
                                    map@x 001B                                      fsr2l 000FD9  
                                    _stoa 12FA                                      btemp 005F  
                          ?_sistemaRegado 0001                  __size_of_asignarHorarios 013E  
                           ??_i2c_iniciar 0001                                      prodh 000FF4  
                                    prodl 000FF3                                      start 000E  
                ??_restablecerDatosSensor 0005                             __CFG_IESO$OFF 000000  
                        ??_DHT11_ReadData 0001                         _constructorSensor 3120  
                    __size_of_DHT11_Start 0020                              ?_lecturaWifi 0001  
                 __size_of_setTiempoRegar 0076                             __CFG_MCLRE$ON 000000  
                            ___param_bank 000000                        ?_constructorSensor 0001  
                      setTiempoRegar@hora 0014                        _leeHorariosMemoria 1480  
                        ??_encenderBombas 000E                                     ??_abs 0015  
                                   ??_map 002F                                     ??_pad 0017  
                          _i2c_envia_dato 3108                             __CFG_PLLDIV$1 000000  
                          _i2c_inicia_com 313C                           __end_of___aldiv 1EC2  
                         __end_of___aodiv 12FA                                     ?_atoi 0008  
                                   ?_ctoa 001C                                     ?_main 0001  
                                   ?_dtoa 001C                           __end_of___aomod 18BC  
                           _convertirDato 3036                           __end_of___awdiv 22DA  
                                   STR_10 7FCF                                     STR_12 7FDD  
                                   STR_20 7F48                                     STR_21 7EAF  
                                   STR_13 7E78                                     STR_30 7D14  
                                   STR_22 7F60                                     STR_14 7DD5  
                                   STR_31 7FBE                                     STR_23 7F17  
                                   STR_15 7D41                                     STR_32 7FF5  
                                   STR_24 7F30                                     STR_16 7EE4  
                                   STR_33 7FEA                                     STR_17 7F78  
                                   STR_25 7E3B                                     STR_18 7EFE  
                                   STR_26 7E5B                                     STR_19 7FA7  
                                   STR_27 7D14                                     STR_28 7E3B  
                         __end_of___awmod 2504                                     STR_29 7E5B  
                     ??_constructorSensor 0005                                     ?_stoa 000A  
                       convertirDato@dato 0002                                     _T0CON 000FD5  
                         ___awdiv@divisor 0003                                     i2l217 2A44  
                     ?_leeHorariosMemoria 0001                           ___awdiv@counter 0005  
                                   _RCREG 000FAE                              vfpfcnvrt@fmt 0042  
                                   _SPBRG 000FAF                             __CFG_USBDIV$1 000000  
                                   _TRISD 000F95                            limpiarBuffer@i 0001  
                                   _TXREG 000FAD                             __CFG_PWRT$OFF 000000  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                       ___lmul@multiplicand 0005  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                      __size_of_UART_init 0070                        __size_of_UART_read 0054  
                                   _flags 0076                                     _fputc 2086  
                                   _fputs 2D42                           __end_of_isdigit 2EF8  
                  __end_of_check_response 2DC6                               ?_UART_write 0001  
                                   atoi@n 0015                                     pad@fp 0011  
                                   atoi@s 0008                                     _width 0072  
                                   ctoa@c 001E                                     _putch 314C  
                                   ctoa@w 001F                                     dtoa@d 001E  
                                   dtoa@i 003E                                     dtoa@n 0036  
                                   dtoa@p 0030                                     dtoa@s 0034  
                                   dtoa@w 0032                           __end_of_isspace 2CAE  
                                   tablat 000FF5                                     plusw1 000FE3  
                                   plusw2 000FDB                                     stoa@i 0016  
                                   stoa@l 001E                                     stoa@p 001C  
                                   stoa@s 000C         __size_of_mostrarDatosSensoresWIFI 00EA  
                                   stoa@w 0018                                     ttemp5 0060  
                                   ttemp6 0063                                     ttemp7 0067  
                                   status 000FD8                 ?_mostrarDatosSensoresWIFI 0001  
                                   wtemp8 0060                           __end_of_sprintf 2C5C  
                      escribe_eeprom@dato 0009                 __end_of_constructorSensor 312A  
                    ??_leeHorariosMemoria 0007                            __CFG_ICPRT$OFF 000000  
                              _i2c_espera 2FEA                          ??_dameHoraActual 0005  
                         __initialization 2B02                       __end_of_i2c_detener 314C  
         __size_of_lecturaAnalogaSensores 00AA                    __end_of_i2c_envia_dato 3114  
                            __end_of_atoi 1172                              __end_of_ctoa 2BB6  
                            __end_of_main 263E                              __end_of_dtoa 0B60  
                ??_escribeHorariosMemoria 000B                           ??_configurarAdc 0001  
                            __end_of_stoa 1480                    __end_of_i2c_inicia_com 3144  
                      _inicializarObjetos 15EE                       __end_of_i2c_iniciar 30F8  
                  sistemaPrincipal@opcion 00F3                          _dameHumedadSuelo 2CFC  
                          ?_convertirDato 0001                      __size_of_fijaHoraRtc 003E  
                                  ??_atoi 000A                                    ??_ctoa 001F  
                                  ??_main 005F                                    ??_dtoa 0026  
                                  ??_stoa 000E                 setTiempoRegar@tiempoRegar 0013  
                           __activetblptr 000002                       ?_inicializarObjetos 0001  
                      i2c_envia_dato@dato 0002                           __CFG_CCP2MX$OFF 000000  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  ?_fputc 0001                                    ?_fputs 000A  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                         ?_check_response 0001                          ___awdiv@dividend 0001  
                  encenderBombas@flagSeco 0010                                    ?_putch 0001  
                      convertirDato@datoR 0003                             _horaRegar$806 0006  
                                  i2l4760 2A08                                    i2l4762 2A0A  
                                  i2l4770 2A2C                                    i2l4772 2A3A  
                                  i2l4764 2A1A                                    i2l4756 29E8  
                                  i2l4774 2A3E                                    i2l4766 2A1E  
                                  i2l4758 29F6                                    i2l4768 2A20  
                         ??_sistemaRegado 0032                             vfpfcnvrt@done 0054  
                                  _SSPADD 000FC8                                    _SSPBUF 000FC9  
                    ??_inicializarObjetos 0007           __size_of_restablecerDatosSensor 004E  
                          __CFG_XINST$OFF 000000                          __end_of_getValue 0FE2  
                            vfprintf@cfmt 005B                  __end_of_sistemaPrincipal 239C  
                          _escribe_eeprom 2F64                                    ___lmul 291A  
                         ?_i2c_envia_dato 0001                                 ??___aldiv 0015  
                               ??___aodiv 0011                                 ??___aomod 0011  
                                  ___wmul 3010                         __end_of_UART_init 291A  
                       __end_of_UART_read 2C0A                                 ??___awdiv 0005  
                               ??___awmod 0005                         ??_asignarHorarios 0013  
                        __end_of_leer_rtc 2FEA                           ?_i2c_inicia_com 0001  
                        __end_of_estaSeco 2F2E                                    _buffer 0100  
                     __size_of_UART_write 0016                              ?_UART_printf 0002  
                                  clear_0 2B2A                                    clear_1 2B3C  
                                  clear_2 2B48                          ___awdiv@quotient 0007  
                         ___awmod@divisor 0003                                    _setRtc 283A  
                         ___awmod@counter 0005                                    pad@buf 0013  
                                  ctoa@fp 001C                                    dtoa@fp 001C  
                                  _strlen 2F2E                           _i2c_recibe_dato 30B2  
                  __size_of_dameDiaActual 0010                                    fputc@c 0001  
                                  fputs@c 000E                                    fputs@i 000F  
                                  fputs@s 000A                                 ??_isdigit 0003  
                    escribe_rtc@direccion 0004                              __mediumconst 7CE2  
                               ??_isspace 0003                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                  _lecturaAnalogaSensores 2504              __end_of_mostrarDatosSensores 2086  
                                  stoa@cp 001A                                    stoa@fp 000A  
                                  putch@c 0001                          __end_of_vfprintf 29E6  
                               ??_sprintf 005D                             ?_regadoRapido 0001  
                              __accesstop 0060                   __end_of__initialization 2B4E  
                    __size_of_escribe_rtc 001E                           __CFG_PBADEN$OFF 000000  
                    __size_of_leer_eeprom 003C                           __CFG_FOSC$XT_XT 000000  
                             _i2c_detener 3144                __size_of_constructorSensor 000A  
                           ___rparam_used 000001                               _i2c_iniciar 30E2  
                  __end_of_escribe_eeprom 2F94                               ?_i2c_espera 0001  
                          _setTiempoRegar 27C4           leeHorariosMemoria@caracterLeido 0009  
                          __pcstackCOMRAM 0001                              leer_rtc@dato 0004  
                            __pidataBANK0 3114                      __size_of_lecturaWifi 00B8  
         __size_of_escribeHorariosMemoria 0156                           ??_convertirDato 0001  
                           __end_of_fputc 2150                             __end_of_fputs 2D86  
                           __end_of_putch 314E                    __size_of_limpiarBuffer 0040  
                  _restablecerDatosSensor 2CAE                              _datoRecibido 0083  
                       ?_dameDatosSistema 0001                            ??_regadoRapido 000D  
                                 ??_fputc 0005                                   ??_fputs 000E  
                                 ??_putch 0001                                __pbssBANK0 0060  
                              __pbssBANK1 0100                        ??_dameDatosSistema 005D  
                 __size_of_desbordamiento 2A40                        __size_of_horaRegar 0084  
                  __end_of_setTiempoRegar 283A                             _dameDiaActual 30F8  
       constructorSensor@porcientoHumedad 0003                              lecturaWifi@i 000F  
                         ?_escribe_eeprom 0007                                _fijaDiaRtc 3076  
                      _contInterrupciones 0078                 __size_of_i2c_reinicia_com 0008  
                                 ?___lmul 0001                                   ?___wmul 0001  
                              _flagRegado 0080                   __end_of_i2c_recibe_dato 30CC  
                                 _ACKSTAT 007E2E                            ___lmul@product 0009  
                                 ?_setRtc 0001                                   ?_strlen 0001  
           dameTemperaturaHumedad@humedad 0009                        __size_of_vfpfcnvrt 0582  
                     __size_of_i2c_espera 0026                                 ?_getValue 0002  
                  _escribeHorariosMemoria 18BC                                   _SSPCON1 000FC6  
                                 _SSPCON2 000FC5                              ??_UART_write 0001  
                                 _SSPSTAT 000FC7                  __end_of_dameHumedadSuelo 2D42  
                               ?_leer_rtc 0001                                 ?_estaSeco 000B  
                         __CFG_VREGEN$OFF 000000                            ?_dameDiaActual 0001  
                           ??_DHT11_Start 0001                             _limpiarBuffer 2E06  
                         ?_setTiempoRegar 0001                                   _Humedad 007E  
                                 __Hparam 0000                                   __Lparam 0000  
                                 ___aldiv 1DB6                                   ___aodiv 1172  
                                 ___aomod 1758                                   ___awdiv 2216  
                         __size_of___lmul 006A                      _mostrarDatosSensores 1FAC  
                                 ___awmod 2454                           __size_of___wmul 0026  
                               ?_vfprintf 00AD                           __CFG_STVREN$OFF 000000  
                             _Temperatura 007F                                   __pcinit 2B02  
                                 __ramtop 0800                        __end_of_UART_write 30E2  
                         __size_of_setRtc 0070                                   __ptext0 25AE  
                                 __ptext1 1A12                                   __ptext2 26C6  
                                 __ptext3 0B60                                   __ptext4 2EF8  
                                 __ptext5 2F94                                   __ptext6 30F8  
                                 __ptext7 2FC0                                   __ptext8 3036  
                                 __ptext9 22DA                   check_response@respuesta 0001  
                       __end_of_horaRegar 274A                                 _T0CONbits 000FD5  
                         __size_of_strlen 0036                      __size_of_UART_printf 005E  
                            __size_of_abs 0040                              __size_of_pad 00C6  
                            __size_of_map 007A                          ??_check_response 0001  
                                 _isdigit 2EC0                          ___awmod@dividend 0001  
                                 _regando 007B                     regadoRapido@areaRegar 0010  
                        ___aldiv@dividend 000D                                   _isspace 2C5C  
                                 _minutos 0086                                   atoi@neg 000E  
                              ??_getValue 0004                                   _sprintf 2C0A  
                          __pintcode_body 29E6                      end_of_initialization 2B4E  
                              ??_leer_rtc 0003                                ??_estaSeco 000D  
                                 fputc@fp 0003                            ?_limpiarBuffer 0001  
                         _asignarHorarios 1B66                             __Lmediumconst 7CE2  
                                 int_func 29E6                                   fputs@fp 000C  
                        ??_i2c_envia_dato 0002               __size_of_leeHorariosMemoria 016E  
                        ??_i2c_inicia_com 0002                               ?_fijaDiaRtc 0001  
                        _VALOR_TIMER0UART 00FD                         __end_of_vfpfcnvrt 0594  
                ??_dameTemperaturaHumedad 0003                                 _RCSTAbits 000FAB  
                        ___aldiv@quotient 0017                     ?_mostrarDatosSensores 0001  
                     __end_of_DHT11_Start 3076                                   postdec1 000FE5  
                                 postdec2 000FDD                         ?_sistemaPrincipal 0001  
                 _peticionLecturaSensores 007A                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                           ??_fijaHoraRtc 0011                      __end_of_regadoRapido 1DB6  
                        ?_i2c_recibe_dato 0001                                ??_vfprintf 005B  
                           setRtc@datoRtc 000F                     __end_of_configurarAdc 3134  
                      ??_sistemaPrincipal 00F1                                   strlen@a 0003  
                                 strlen@s 0001                                 _UART_init 28AA  
                              getValue@Rx 000C                                 _UART_read 2BB6  
                               _PORTDbits 000F83                   __size_of_DHT11_ReadData 005C  
                 ?_lecturaAnalogaSensores 0001                             setRtc@seteado 000E  
               dameHumedadSuelo@canalLeer 0005                   lecturaAnalogaSensores@i 0030  
                               _TRISBbits 000F93                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                   __size_of_encenderBombas 026A  
                _mostrarDatosSensoresWIFI 1EC2                           ??_dameDiaActual 0005  
                              map@out_max 002B                                map@out_min 0027  
                          _desbordamiento 0008                            _esperandoDatos 0089  
                          _UART_init$1894 0023                              ?_i2c_detener 0001  
                   __end_of_sistemaRegado 1B66                                 _TXSTAbits 000FAC  
                       dameDatosSistema@i 00EF               __size_of_inicializarObjetos 016A  
                            ?_i2c_iniciar 0001                              ??_i2c_espera 0001  
                       _MODO_COMUNICACION 0088                        DHT11_ReadData@data 0002  
                        _i2c_reinicia_com 3134                            __end_of___lmul 2984  
                             vfpfcnvrt@ap 0044                               vfpfcnvrt@cp 0052  
                             vfpfcnvrt@fp 0040                               vfpfcnvrt@ll 004A  
                          __end_of___wmul 3036                   ?_restablecerDatosSensor 0001  
          __end_of_lecturaAnalogaSensores 25AE                                ?_UART_init 001B  
                              ?_UART_read 0001                   __size_of_dameHoraActual 002C  
                          __end_of_setRtc 28AA                       __end_of_fijaHoraRtc 2E84  
                          __end_of_strlen 2F64                       start_initialization 2B02  
                            _estaSeco$799 000D                               __end_of_abs 2E06  
                 __end_of_asignarHorarios 1CA4                               __end_of_pad 2216  
                             __end_of_map 27C4                       __size_of_fijaDiaRtc 001E  
       escribeHorariosMemoria@contMemoria 000F                    __end_of_desbordamiento 2A48  
                      __end_of_i2c_espera 3010                             ??_escribe_rtc 0004  
                           ??_leer_eeprom 0005                           ??_limpiarBuffer 0001  
                        ??_escribe_eeprom 000A                       leeHorariosMemoria@i 000E  
                     leeHorariosMemoria@j 000A                      constructorSensor@pin 0004  
                             _DHT11_Start 3056                             ??_lecturaWifi 000D  
                   _dameDatosSistema$1895 00E7                     _dameDatosSistema$1896 00E9  
                   _dameDatosSistema$1897 00EB                     _dameDatosSistema$1898 00ED  
                  ??_mostrarDatosSensores 005D                               vfprintf@fmt 00AF  
               __size_of_dameDatosSistema 02EA           __size_of_dameTemperaturaHumedad 0088  
                                ??___lmul 0009                                  ??___wmul 0005  
          __end_of_restablecerDatosSensor 2CFC                               __pdataBANK0 00F4  
                        __CFG_LPT1OSC$OFF 000000                         leer_rtc@direccion 0003  
                                ??_setRtc 000D                     __end_of_convertirDato 3056  
                                ??_strlen 0003                               __pbssBIGRAM 0132  
                 ?_escribeHorariosMemoria 0001                             __pcstackBANK0 00AD  
                        ___aodiv@dividend 0001             dameDatosSistema@bufferHorario 00C9  
                         ?_desbordamiento 0001                          ??_setTiempoRegar 0013  
                               _diaActual 0084                   inicializarObjetos@i_809 000B  
                       __size_of_getValue 0218                         ?_dameHumedadSuelo 0001  
                  getValue@datoIncorrecto 0006                         UART_printf@cadena 0002  
                           lecturaWifi@Rx 000D                                 _atoi$1542 0010  
                               _atoi$1543 0014                                 _atoi$1544 0012  
                      ??_dameHumedadSuelo 0003                         __size_of_leer_rtc 002A  
                       __size_of_estaSeco 0036                       __end_of_escribe_rtc 30B2  
                     __end_of_leer_eeprom 2EC0                     __size_of_regadoRapido 0112  
                               _dtoa$1057 002E                                 __pintcode 0008  
                           __pmediumconst 7CE2                                  ?___aldiv 000D  
                                ?___aodiv 0001                                  ?___aomod 0001  
                                ?___awdiv 0001                          ___aodiv@quotient 0013  
                                ?___awmod 0001                               _fijaHoraRtc 2E46  
                     __end_of_lecturaWifi 2454                            _DHT11_ReadData 2AA6  
                              setRtc@dato 0010                               ??_UART_init 001F  
                             ??_UART_read 0001                         __size_of_vfprintf 0062  
          __end_of_escribeHorariosMemoria 1A12                                  ?_isdigit 0001  
                          _encenderBombas 0B60                                  ?_isspace 0001  
                               _horaRegar 26C6            dameTemperaturaHumedad@checkSum 0005  
                  _dameTemperaturaHumedad 263E                          ?_asignarHorarios 0001  
                                ?_sprintf 00B3                            __size_of_fputc 00CA  
                          __size_of_fputs 0044                              _regadoRapido 1CA4  
                          __size_of_putch 0002                           ___aldiv@divisor 0011  
                         ___aldiv@counter 0015                            ___wmul@product 0005  
                                _LATDbits 000F8C                                  _PIE1bits 000F9D  
                    __size_of_i2c_detener 0008                              ??_fijaDiaRtc 0011  
                                _PIR1bits 000F9E                                  i2u381_40 29F6  
                                i2u381_41 29F2                                  i2u382_40 2A08  
                                i2u382_41 2A04                                  i2u383_40 2A1A  
                                i2u383_41 2A16                                  i2u384_40 2A3A  
                                i2u384_41 2A36                   restablecerDatosSensor@i 0005  
                    __size_of_i2c_iniciar 0016                          __CFG_WDTPS$32768 000000  
                  _tiempoInactividadTrans 008C             leeHorariosMemoria@contMemoria 000C  
                     asignarHorarios@hora 0018                    __end_of_DHT11_ReadData 2B02  
                               getValue@i 0007                             ??_UART_printf 0004  
                               _vfpfcnvrt 0012                                 map@in_max 0023  
                               map@in_min 001F                                _ADCON0bits 000FC2  
                          _dameHoraActual 2F94                         ___wmul@multiplier 0001  
              ??_mostrarDatosSensoresWIFI 005D                    __end_of_encenderBombas 0DCA  
                          UART_write@dato 0001                                ?_horaRegar 0001  
                   mostrarDatosSensores@i 00C9                              _isspace$1560 0007  
               __size_of_sistemaPrincipal 00C2                  __end_of_i2c_reinicia_com 313C  
                              vfpfcnvrt@c 005A                        __end_of_fijaDiaRtc 3094  
                       ___lmul@multiplier 0001                                 copy_data0 2B16  
                             _escribe_rtc 3094                               _leer_eeprom 2E84  
                            _VALOR_TIMER0 00FB                __end_of_leeHorariosMemoria 15EE  
                               estaSeco@s 000B                   asignarHorarios@diaRegar 0017  
                                __Hrparam 0000                     getValue@numCharacters 0002  
                            _minutosRegar 007D                               _lecturaWifi 239C  
                           UART_init@BAUD 001B                                vfprintf@ap 00B1  
                                __Lrparam 0000                                vfprintf@fp 00AD  
                        _dameDatosSistema 0594  dameTemperaturaHumedad@temperaturaDecimal 0008  
                     _esperaDatoConcluida 008A                          __size_of___aldiv 010C  
                         ?_DHT11_ReadData 0001                          __size_of___aodiv 0188  
                        __size_of___aomod 0164                          __size_of___awdiv 00C4  
                  __end_of_dameHoraActual 2FC0                          __size_of___awmod 00B0  
                              ?_vfpfcnvrt 0040                           DHT11_ReadData@i 0001  
                         ___aodiv@divisor 0009                           ___aodiv@counter 0011  
                         ?_encenderBombas 0001                                sprintf@fmt 00B5  
                __size_of_i2c_recibe_dato 001A                       __end_of_UART_printf 2AA6  
                        __size_of_isdigit 0038                          __size_of_isspace 0052  
                                __ptext10 27C4                                  __ptext11 1CA4  
                                __ptext20 2CFC                                  __ptext12 1EC2  
                                __ptext21 263E                                  __ptext13 239C  
                                __ptext30 3076                                  __ptext22 2D86  
                                __ptext14 2CAE                                  __ptext31 283A  
                                __ptext23 3056                                  __ptext15 3120  
                                __ptext40 087E                                  __ptext32 3094  
                                __ptext24 2AA6                                  __ptext16 1FAC  
                                __ptext41 2DC6                                  __ptext33 2454  
                                __ptext25 1480                                  __ptext17 2504  
                                __ptext50 0FE2                                  __ptext42 1758  
                                __ptext34 2216                                  __ptext26 2E84  
                                __ptext18 274A                                  __ptext51 2C5C  
                                __ptext43 1172                                  __ptext35 0594  
                                __ptext27 3134                                  __ptext19 291A  
                                __ptext60 2F64                                  __ptext52 2EC0  
                                __ptext44 2B5C                                  __ptext36 2C0A  
                                __ptext28 30B2                                  __ptext61 313C  
                                __ptext53 2E06                                  __ptext45 2150  
                                __ptext37 2984                                  __ptext29 2E46  
                                __ptext70 1DB6                                  __ptext62 3108  
                                __ptext54 2A48                                  __ptext46 2F2E  
                                __ptext38 0012                                  __ptext63 3144  
                                __ptext55 1B66                                  __ptext47 2D42  
                                __ptext39 12FA                                  __ptext64 2FEA  
                                __ptext56 0DCA                                  __ptext48 2086  
                                __ptext65 15EE                                  __ptext57 30CC  
                                __ptext49 314C                                  __ptext66 3010  
                                __ptext58 2BB6                                  __ptext67 30E2  
                                __ptext59 18BC                                  __ptext68 312A  
                                __ptext69 28AA                                  _getValue 0DCA  
                        __size_of_sprintf 0052                                  _leer_rtc 2FC0  
                                _estaSeco 2EF8                __end_of_inicializarObjetos 1758  
                                _byteUart 008B                    __size_of_configurarAdc 000A  
                lecturaWifi@humedadMedida 000E                   __size_of_check_response 0040  
                   __end_of_dameDiaActual 3108                       inicializarObjetos@i 000D  
                     inicializarObjetos@j 0009                             __size_of_atoi 0190  
                           __size_of_ctoa 005A                             __size_of_main 0090  
                           __size_of_dtoa 02E2                                  _horarios 0132  
                            ?_DHT11_Start 0001                             __size_of_stoa 0186  
    dameTemperaturaHumedad@humedadDecimal 0007                                  _tempHora 0081  
                                _segundos 0085                                 stoa@F1144 00F4  
                         encenderBombas@i 0011                                  _sensores 0060  
               mostrarDatosSensoresWIFI@i 00C9                                  int$flags 005F  
                                _vfprintf 2984                           ?_dameHoraActual 0001  
                 __size_of_i2c_envia_dato 000C                             getValue@i_969 0009  
                 __size_of_i2c_inicia_com 0008                  i2c_recibe_dato@datoleido 0002  
                        ___aomod@dividend 0001                     __CFG_CPUDIV$OSC1_PLL2 000000  
                        ??_desbordamiento 0001                            _vfpfcnvrt$1082 0056  
                          _vfpfcnvrt$1083 0058                    __size_of_sistemaRegado 0154  
                              _INTCONbits 000FF2                        constructorSensor@s 0001  
                             ??_horaRegar 0003                   escribe_eeprom@direccion 0007  
                                isdigit@c 0001                                  intlevel2 0000  
                               sprintf@ap 00C1                           escribe_rtc@dato 0003  
                   __end_of_limpiarBuffer 2E46                                  isspace@c 0001  
                         setRtc@direccion 000D                         asignarHorarios@Rx 0019  
           __size_of_mostrarDatosSensores 00DA                             _overflowTimer 0082  
                            ?_fijaHoraRtc 0001         dameTemperaturaHumedad@temperatura 000A  
                         ___aomod@divisor 0009                              getValue@dato 000B  
               __size_of_dameHumedadSuelo 0046                               ??_vfpfcnvrt 0046  
                                stoa@nuls 000F                           ___aomod@counter 0011  
                             _UART_printf 2A48                             _configurarAdc 312A  
        __end_of_mostrarDatosSensoresWIFI 1FAC                                  sprintf@f 00C3  
                                sprintf@s 00B3                   ?_dameTemperaturaHumedad 0001  
                            ___aldiv@sign 0016                          asignarHorarios@i 0015  
                        _sistemaPrincipal 22DA                           leer_eeprom@dato 0006  
                             _SSPCON2bits 000FC5                                _UART_write 30CC  
                            ___aodiv@sign 0012                         ??_i2c_recibe_dato 0002  
                  __size_of_convertirDato 0020                      leer_eeprom@direccion 0003  
                           _sistemaRegado 1A12                              ___aomod@sign 0012  
                ??_lecturaAnalogaSensores 002F  
