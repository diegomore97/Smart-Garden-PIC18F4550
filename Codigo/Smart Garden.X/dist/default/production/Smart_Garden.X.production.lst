

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Apr 25 23:22:26 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    69                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    70  0000                     
    71                           ; Version 2.10
    72                           ; Generated 31/07/2019 GMT
    73                           ; 
    74                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F4550 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     
   106                           	psect	idataBANK0
   107  001C30                     __pidataBANK0:
   108                           	opt callstack 0
   109                           
   110                           ;initializer for _VALOR_TIMER0
   111  001C30  6769               	dw	26473
   112                           
   113                           ;initializer for _VALOR_TIMER0UART
   114  001C32  6769               	dw	26473
   115  0000                     _TMR0	set	4054
   116  0000                     _T0CONbits	set	4053
   117  0000                     _TRISD	set	3989
   118  0000                     _T0CON	set	4053
   119  0000                     _LATD	set	3980
   120  0000                     _PIE1bits	set	3997
   121  0000                     _ADRESL	set	4035
   122  0000                     _ADCON0bits	set	4034
   123  0000                     _LATDbits	set	3980
   124  0000                     _PORTE	set	3972
   125  0000                     _PORTA	set	3968
   126  0000                     _TRISE	set	3990
   127  0000                     _TRISA	set	3986
   128  0000                     _ADCON2	set	4032
   129  0000                     _ADCON1	set	4033
   130  0000                     _INTCONbits	set	4082
   131  0000                     _TXREG	set	4013
   132  0000                     _RCREG	set	4014
   133  0000                     _PIR1bits	set	3998
   134  0000                     _RCSTAbits	set	4011
   135  0000                     _TXSTAbits	set	4012
   136  0000                     _SPBRG	set	4015
   137  0000                     _TRISCbits	set	3988
   138  0000                     _SSPBUF	set	4041
   139  0000                     _SSPCON2bits	set	4037
   140  0000                     _SSPADD	set	4040
   141  0000                     _SSPCON2	set	4037
   142  0000                     _SSPCON1	set	4038
   143  0000                     _SSPSTAT	set	4039
   144  0000                     _TRISBbits	set	3987
   145  0000                     _ACKSTAT	set	32302
   146                           
   147                           	psect	mediumconst
   148  007CB4                     __pmediumconst:
   149                           	opt callstack 0
   150  007CB4  00                 	db	0
   151  007CB5                     STR_15:
   152  007CB5  0D                 	db	13
   153  007CB6  0A                 	db	10
   154  007CB7  20                 	db	32
   155  007CB8  49                 	db	73	;'I'
   156  007CB9  6E                 	db	110	;'n'
   157  007CBA  67                 	db	103	;'g'
   158  007CBB  72                 	db	114	;'r'
   159  007CBC  65                 	db	101	;'e'
   160  007CBD  73                 	db	115	;'s'
   161  007CBE  65                 	db	101	;'e'
   162  007CBF  20                 	db	32
   163  007CC0  6C                 	db	108	;'l'
   164  007CC1  6F                 	db	111	;'o'
   165  007CC2  73                 	db	115	;'s'
   166  007CC3  20                 	db	32
   167  007CC4  6D                 	db	109	;'m'
   168  007CC5  69                 	db	105	;'i'
   169  007CC6  6E                 	db	110	;'n'
   170  007CC7  75                 	db	117	;'u'
   171  007CC8  74                 	db	116	;'t'
   172  007CC9  6F                 	db	111	;'o'
   173  007CCA  73                 	db	115	;'s'
   174  007CCB  20                 	db	32
   175  007CCC  71                 	db	113	;'q'
   176  007CCD  75                 	db	117	;'u'
   177  007CCE  65                 	db	101	;'e'
   178  007CCF  20                 	db	32
   179  007CD0  64                 	db	100	;'d'
   180  007CD1  65                 	db	101	;'e'
   181  007CD2  73                 	db	115	;'s'
   182  007CD3  65                 	db	101	;'e'
   183  007CD4  65                 	db	101	;'e'
   184  007CD5  20                 	db	32
   185  007CD6  71                 	db	113	;'q'
   186  007CD7  75                 	db	117	;'u'
   187  007CD8  65                 	db	101	;'e'
   188  007CD9  20                 	db	32
   189  007CDA  73                 	db	115	;'s'
   190  007CDB  65                 	db	101	;'e'
   191  007CDC  20                 	db	32
   192  007CDD  72                 	db	114	;'r'
   193  007CDE  69                 	db	105	;'i'
   194  007CDF  65                 	db	101	;'e'
   195  007CE0  67                 	db	103	;'g'
   196  007CE1  75                 	db	117	;'u'
   197  007CE2  65                 	db	101	;'e'
   198  007CE3  20                 	db	32
   199  007CE4  65                 	db	101	;'e'
   200  007CE5  6E                 	db	110	;'n'
   201  007CE6  20                 	db	32
   202  007CE7  65                 	db	101	;'e'
   203  007CE8  73                 	db	115	;'s'
   204  007CE9  65                 	db	101	;'e'
   205  007CEA  20                 	db	32
   206  007CEB  68                 	db	104	;'h'
   207  007CEC  6F                 	db	111	;'o'
   208  007CED  72                 	db	114	;'r'
   209  007CEE  61                 	db	97	;'a'
   210  007CEF  72                 	db	114	;'r'
   211  007CF0  69                 	db	105	;'i'
   212  007CF1  6F                 	db	111	;'o'
   213  007CF2  20                 	db	32
   214  007CF3  65                 	db	101	;'e'
   215  007CF4  6A                 	db	106	;'j'
   216  007CF5  3A                 	db	58	;':'
   217  007CF6  20                 	db	32
   218  007CF7  31                 	db	49	;'1'
   219  007CF8  35                 	db	53	;'5'
   220  007CF9  20                 	db	32
   221  007CFA  0D                 	db	13
   222  007CFB  0A                 	db	10
   223  007CFC  00                 	db	0
   224  007CFD                     STR_9:
   225  007CFD  0D                 	db	13
   226  007CFE  0A                 	db	10
   227  007CFF  20                 	db	32
   228  007D00  49                 	db	73	;'I'
   229  007D01  6E                 	db	110	;'n'
   230  007D02  67                 	db	103	;'g'
   231  007D03  72                 	db	114	;'r'
   232  007D04  65                 	db	101	;'e'
   233  007D05  73                 	db	115	;'s'
   234  007D06  65                 	db	101	;'e'
   235  007D07  20                 	db	32
   236  007D08  31                 	db	49	;'1'
   237  007D09  20                 	db	32
   238  007D0A  70                 	db	112	;'p'
   239  007D0B  61                 	db	97	;'a'
   240  007D0C  72                 	db	114	;'r'
   241  007D0D  61                 	db	97	;'a'
   242  007D0E  20                 	db	32
   243  007D0F  72                 	db	114	;'r'
   244  007D10  65                 	db	101	;'e'
   245  007D11  67                 	db	103	;'g'
   246  007D12  61                 	db	97	;'a'
   247  007D13  72                 	db	114	;'r'
   248  007D14  20                 	db	32
   249  007D15  7C                 	db	124
   250  007D16  7C                 	db	124
   251  007D17  20                 	db	32
   252  007D18  69                 	db	105	;'i'
   253  007D19  6E                 	db	110	;'n'
   254  007D1A  67                 	db	103	;'g'
   255  007D1B  72                 	db	114	;'r'
   256  007D1C  65                 	db	101	;'e'
   257  007D1D  73                 	db	115	;'s'
   258  007D1E  65                 	db	101	;'e'
   259  007D1F  20                 	db	32
   260  007D20  30                 	db	48	;'0'
   261  007D21  20                 	db	32
   262  007D22  70                 	db	112	;'p'
   263  007D23  61                 	db	97	;'a'
   264  007D24  72                 	db	114	;'r'
   265  007D25  61                 	db	97	;'a'
   266  007D26  20                 	db	32
   267  007D27  6E                 	db	110	;'n'
   268  007D28  6F                 	db	111	;'o'
   269  007D29  20                 	db	32
   270  007D2A  72                 	db	114	;'r'
   271  007D2B  65                 	db	101	;'e'
   272  007D2C  67                 	db	103	;'g'
   273  007D2D  61                 	db	97	;'a'
   274  007D2E  72                 	db	114	;'r'
   275  007D2F  3A                 	db	58	;':'
   276  007D30  20                 	db	32
   277  007D31  0D                 	db	13
   278  007D32  0A                 	db	10
   279  007D33  00                 	db	0
   280  007D34                     STR_7:
   281  007D34  0D                 	db	13
   282  007D35  0A                 	db	10
   283  007D36  20                 	db	32
   284  007D37  49                 	db	73	;'I'
   285  007D38  6E                 	db	110	;'n'
   286  007D39  67                 	db	103	;'g'
   287  007D3A  72                 	db	114	;'r'
   288  007D3B  65                 	db	101	;'e'
   289  007D3C  73                 	db	115	;'s'
   290  007D3D  65                 	db	101	;'e'
   291  007D3E  20                 	db	32
   292  007D3F  75                 	db	117	;'u'
   293  007D40  6E                 	db	110	;'n'
   294  007D41  61                 	db	97	;'a'
   295  007D42  20                 	db	32
   296  007D43  68                 	db	104	;'h'
   297  007D44  6F                 	db	111	;'o'
   298  007D45  72                 	db	114	;'r'
   299  007D46  61                 	db	97	;'a'
   300  007D47  20                 	db	32
   301  007D48  65                 	db	101	;'e'
   302  007D49  6E                 	db	110	;'n'
   303  007D4A  20                 	db	32
   304  007D4B  66                 	db	102	;'f'
   305  007D4C  6F                 	db	111	;'o'
   306  007D4D  72                 	db	114	;'r'
   307  007D4E  6D                 	db	109	;'m'
   308  007D4F  61                 	db	97	;'a'
   309  007D50  74                 	db	116	;'t'
   310  007D51  6F                 	db	111	;'o'
   311  007D52  20                 	db	32
   312  007D53  64                 	db	100	;'d'
   313  007D54  65                 	db	101	;'e'
   314  007D55  20                 	db	32
   315  007D56  32                 	db	50	;'2'
   316  007D57  34                 	db	52	;'4'
   317  007D58  20                 	db	32
   318  007D59  68                 	db	104	;'h'
   319  007D5A  72                 	db	114	;'r'
   320  007D5B  73                 	db	115	;'s'
   321  007D5C  20                 	db	32
   322  007D5D  65                 	db	101	;'e'
   323  007D5E  6A                 	db	106	;'j'
   324  007D5F  3A                 	db	58	;':'
   325  007D60  20                 	db	32
   326  007D61  31                 	db	49	;'1'
   327  007D62  35                 	db	53	;'5'
   328  007D63  20                 	db	32
   329  007D64  0D                 	db	13
   330  007D65  0A                 	db	10
   331  007D66  00                 	db	0
   332  007D67                     STR_29:
   333  007D67  0D                 	db	13
   334  007D68  0A                 	db	10
   335  007D69  0A                 	db	10
   336  007D6A  48                 	db	72	;'H'
   337  007D6B  6F                 	db	111	;'o'
   338  007D6C  72                 	db	114	;'r'
   339  007D6D  61                 	db	97	;'a'
   340  007D6E  20                 	db	32
   341  007D6F  7C                 	db	124
   342  007D70  20                 	db	32
   343  007D71  52                 	db	82	;'R'
   344  007D72  65                 	db	101	;'e'
   345  007D73  67                 	db	103	;'g'
   346  007D74  61                 	db	97	;'a'
   347  007D75  72                 	db	114	;'r'
   348  007D76  28                 	db	40
   349  007D77  31                 	db	49	;'1'
   350  007D78  20                 	db	32
   351  007D79  73                 	db	115	;'s'
   352  007D7A  69                 	db	105	;'i'
   353  007D7B  20                 	db	32
   354  007D7C  30                 	db	48	;'0'
   355  007D7D  20                 	db	32
   356  007D7E  6E                 	db	110	;'n'
   357  007D7F  6F                 	db	111	;'o'
   358  007D80  29                 	db	41
   359  007D81  20                 	db	32
   360  007D82  7C                 	db	124
   361  007D83  20                 	db	32
   362  007D84  4D                 	db	77	;'M'
   363  007D85  69                 	db	105	;'i'
   364  007D86  6E                 	db	110	;'n'
   365  007D87  75                 	db	117	;'u'
   366  007D88  74                 	db	116	;'t'
   367  007D89  6F                 	db	111	;'o'
   368  007D8A  73                 	db	115	;'s'
   369  007D8B  20                 	db	32
   370  007D8C  64                 	db	100	;'d'
   371  007D8D  65                 	db	101	;'e'
   372  007D8E  20                 	db	32
   373  007D8F  72                 	db	114	;'r'
   374  007D90  69                 	db	105	;'i'
   375  007D91  65                 	db	101	;'e'
   376  007D92  67                 	db	103	;'g'
   377  007D93  6F                 	db	111	;'o'
   378  007D94  20                 	db	32
   379  007D95  0D                 	db	13
   380  007D96  0A                 	db	10
   381  007D97  0A                 	db	10
   382  007D98  00                 	db	0
   383  007D99                     STR_24:
   384  007D99  0D                 	db	13
   385  007D9A  0A                 	db	10
   386  007D9B  20                 	db	32
   387  007D9C  33                 	db	51	;'3'
   388  007D9D  2E                 	db	46
   389  007D9E  20                 	db	32
   390  007D9F  50                 	db	80	;'P'
   391  007DA0  72                 	db	114	;'r'
   392  007DA1  6F                 	db	111	;'o'
   393  007DA2  67                 	db	103	;'g'
   394  007DA3  72                 	db	114	;'r'
   395  007DA4  61                 	db	97	;'a'
   396  007DA5  6D                 	db	109	;'m'
   397  007DA6  61                 	db	97	;'a'
   398  007DA7  72                 	db	114	;'r'
   399  007DA8  20                 	db	32
   400  007DA9  74                 	db	116	;'t'
   401  007DAA  69                 	db	105	;'i'
   402  007DAB  65                 	db	101	;'e'
   403  007DAC  6D                 	db	109	;'m'
   404  007DAD  70                 	db	112	;'p'
   405  007DAE  6F                 	db	111	;'o'
   406  007DAF  20                 	db	32
   407  007DB0  64                 	db	100	;'d'
   408  007DB1  65                 	db	101	;'e'
   409  007DB2  20                 	db	32
   410  007DB3  72                 	db	114	;'r'
   411  007DB4  69                 	db	105	;'i'
   412  007DB5  65                 	db	101	;'e'
   413  007DB6  67                 	db	103	;'g'
   414  007DB7  6F                 	db	111	;'o'
   415  007DB8  20                 	db	32
   416  007DB9  65                 	db	101	;'e'
   417  007DBA  6E                 	db	110	;'n'
   418  007DBB  20                 	db	32
   419  007DBC  75                 	db	117	;'u'
   420  007DBD  6E                 	db	110	;'n'
   421  007DBE  20                 	db	32
   422  007DBF  68                 	db	104	;'h'
   423  007DC0  6F                 	db	111	;'o'
   424  007DC1  72                 	db	114	;'r'
   425  007DC2  61                 	db	97	;'a'
   426  007DC3  72                 	db	114	;'r'
   427  007DC4  69                 	db	105	;'i'
   428  007DC5  6F                 	db	111	;'o'
   429  007DC6  20                 	db	32
   430  007DC7  0D                 	db	13
   431  007DC8  0A                 	db	10
   432  007DC9  00                 	db	0
   433  007DCA                     STR_3:
   434  007DCA  0D                 	db	13
   435  007DCB  0A                 	db	10
   436  007DCC  20                 	db	32
   437  007DCD  45                 	db	69	;'E'
   438  007DCE  6E                 	db	110	;'n'
   439  007DCF  76                 	db	118	;'v'
   440  007DD0  69                 	db	105	;'i'
   441  007DD1  65                 	db	101	;'e'
   442  007DD2  20                 	db	32
   443  007DD3  6C                 	db	108	;'l'
   444  007DD4  61                 	db	97	;'a'
   445  007DD5  73                 	db	115	;'s'
   446  007DD6  20                 	db	32
   447  007DD7  48                 	db	72	;'H'
   448  007DD8  6F                 	db	111	;'o'
   449  007DD9  72                 	db	114	;'r'
   450  007DDA  61                 	db	97	;'a'
   451  007DDB  73                 	db	115	;'s'
   452  007DDC  20                 	db	32
   453  007DDD  65                 	db	101	;'e'
   454  007DDE  6E                 	db	110	;'n'
   455  007DDF  20                 	db	32
   456  007DE0  66                 	db	102	;'f'
   457  007DE1  6F                 	db	111	;'o'
   458  007DE2  72                 	db	114	;'r'
   459  007DE3  6D                 	db	109	;'m'
   460  007DE4  61                 	db	97	;'a'
   461  007DE5  74                 	db	116	;'t'
   462  007DE6  6F                 	db	111	;'o'
   463  007DE7  20                 	db	32
   464  007DE8  32                 	db	50	;'2'
   465  007DE9  34                 	db	52	;'4'
   466  007DEA  20                 	db	32
   467  007DEB  45                 	db	69	;'E'
   468  007DEC  6A                 	db	106	;'j'
   469  007DED  3A                 	db	58	;':'
   470  007DEE  20                 	db	32
   471  007DEF  31                 	db	49	;'1'
   472  007DF0  35                 	db	53	;'5'
   473  007DF1  20                 	db	32
   474  007DF2  0D                 	db	13
   475  007DF3  0A                 	db	10
   476  007DF4  00                 	db	0
   477  007DF5                     STR_28:
   478  007DF5  0D                 	db	13
   479  007DF6  0A                 	db	10
   480  007DF7  20                 	db	32
   481  007DF8  53                 	db	83	;'S'
   482  007DF9  6F                 	db	111	;'o'
   483  007DFA  6C                 	db	108	;'l'
   484  007DFB  6F                 	db	111	;'o'
   485  007DFC  20                 	db	32
   486  007DFD  73                 	db	115	;'s'
   487  007DFE  65                 	db	101	;'e'
   488  007DFF  20                 	db	32
   489  007E00  70                 	db	112	;'p'
   490  007E01  65                 	db	101	;'e'
   491  007E02  72                 	db	114	;'r'
   492  007E03  6D                 	db	109	;'m'
   493  007E04  69                 	db	105	;'i'
   494  007E05  74                 	db	116	;'t'
   495  007E06  65                 	db	101	;'e'
   496  007E07  6E                 	db	110	;'n'
   497  007E08  20                 	db	32
   498  007E09  6E                 	db	110	;'n'
   499  007E0A  75                 	db	117	;'u'
   500  007E0B  6D                 	db	109	;'m'
   501  007E0C  65                 	db	101	;'e'
   502  007E0D  72                 	db	114	;'r'
   503  007E0E  6F                 	db	111	;'o'
   504  007E0F  73                 	db	115	;'s'
   505  007E10  20                 	db	32
   506  007E11  64                 	db	100	;'d'
   507  007E12  65                 	db	101	;'e'
   508  007E13  6C                 	db	108	;'l'
   509  007E14  20                 	db	32
   510  007E15  31                 	db	49	;'1'
   511  007E16  20                 	db	32
   512  007E17  61                 	db	97	;'a'
   513  007E18  6C                 	db	108	;'l'
   514  007E19  20                 	db	32
   515  007E1A  33                 	db	51	;'3'
   516  007E1B  20                 	db	32
   517  007E1C  0D                 	db	13
   518  007E1D  0A                 	db	10
   519  007E1E  00                 	db	0
   520  007E1F  0D                 	db	13
   521  007E20  0A                 	db	10
   522  007E21  53                 	db	83	;'S'
   523  007E22  6F                 	db	111	;'o'
   524  007E23  6C                 	db	108	;'l'
   525  007E24  69                 	db	105	;'i'
   526  007E25  63                 	db	99	;'c'
   527  007E26  69                 	db	105	;'i'
   528  007E27  74                 	db	116	;'t'
   529  007E28  61                 	db	97	;'a'
   530  007E29  6E                 	db	110	;'n'
   531  007E2A  64                 	db	100	;'d'
   532  007E2B  6F                 	db	111	;'o'
   533  007E2C  20                 	db	32
   534  007E2D  4D                 	db	77	;'M'
   535  007E2E  75                 	db	117	;'u'
   536  007E2F  65                 	db	101	;'e'
   537  007E30  73                 	db	115	;'s'
   538  007E31  74                 	db	116	;'t'
   539  007E32  72                 	db	114	;'r'
   540  007E33  65                 	db	101	;'e'
   541  007E34  6F                 	db	111	;'o'
   542  007E35  20                 	db	32
   543  007E36  64                 	db	100	;'d'
   544  007E37  65                 	db	101	;'e'
   545  007E38  20                 	db	32
   546  007E39  73                 	db	115	;'s'
   547  007E3A  65                 	db	101	;'e'
   548  007E3B  6E                 	db	110	;'n'
   549  007E3C  73                 	db	115	;'s'
   550  007E3D  6F                 	db	111	;'o'
   551  007E3E  72                 	db	114	;'r'
   552  007E3F  65                 	db	101	;'e'
   553  007E40  73                 	db	115	;'s'
   554  007E41  0D                 	db	13
   555  007E42  0A                 	db	10
   556  007E43  0A                 	db	10
   557  007E44  00                 	db	0
   558  007E45                     STR_17:
   559  007E45  0D                 	db	13
   560  007E46  0A                 	db	10
   561  007E47  20                 	db	32
   562  007E48  4D                 	db	77	;'M'
   563  007E49  69                 	db	105	;'i'
   564  007E4A  6E                 	db	110	;'n'
   565  007E4B  75                 	db	117	;'u'
   566  007E4C  74                 	db	116	;'t'
   567  007E4D  6F                 	db	111	;'o'
   568  007E4E  73                 	db	115	;'s'
   569  007E4F  20                 	db	32
   570  007E50  64                 	db	100	;'d'
   571  007E51  65                 	db	101	;'e'
   572  007E52  20                 	db	32
   573  007E53  72                 	db	114	;'r'
   574  007E54  69                 	db	105	;'i'
   575  007E55  65                 	db	101	;'e'
   576  007E56  67                 	db	103	;'g'
   577  007E57  6F                 	db	111	;'o'
   578  007E58  20                 	db	32
   579  007E59  65                 	db	101	;'e'
   580  007E5A  73                 	db	115	;'s'
   581  007E5B  74                 	db	116	;'t'
   582  007E5C  61                 	db	97	;'a'
   583  007E5D  62                 	db	98	;'b'
   584  007E5E  6C                 	db	108	;'l'
   585  007E5F  65                 	db	101	;'e'
   586  007E60  63                 	db	99	;'c'
   587  007E61  69                 	db	105	;'i'
   588  007E62  64                 	db	100	;'d'
   589  007E63  6F                 	db	111	;'o'
   590  007E64  73                 	db	115	;'s'
   591  007E65  21                 	db	33
   592  007E66  20                 	db	32
   593  007E67  0D                 	db	13
   594  007E68  0A                 	db	10
   595  007E69  00                 	db	0
   596  007E6A                     STR_21:
   597  007E6A  0D                 	db	13
   598  007E6B  0A                 	db	10
   599  007E6C  20                 	db	32
   600  007E6D  49                 	db	73	;'I'
   601  007E6E  6E                 	db	110	;'n'
   602  007E6F  67                 	db	103	;'g'
   603  007E70  72                 	db	114	;'r'
   604  007E71  65                 	db	101	;'e'
   605  007E72  73                 	db	115	;'s'
   606  007E73  61                 	db	97	;'a'
   607  007E74  20                 	db	32
   608  007E75  75                 	db	117	;'u'
   609  007E76  6E                 	db	110	;'n'
   610  007E77  61                 	db	97	;'a'
   611  007E78  20                 	db	32
   612  007E79  6F                 	db	111	;'o'
   613  007E7A  70                 	db	112	;'p'
   614  007E7B  63                 	db	99	;'c'
   615  007E7C  69                 	db	105	;'i'
   616  007E7D  6F                 	db	111	;'o'
   617  007E7E  6E                 	db	110	;'n'
   618  007E7F  20                 	db	32
   619  007E80  61                 	db	97	;'a'
   620  007E81  20                 	db	32
   621  007E82  52                 	db	82	;'R'
   622  007E83  65                 	db	101	;'e'
   623  007E84  61                 	db	97	;'a'
   624  007E85  6C                 	db	108	;'l'
   625  007E86  69                 	db	105	;'i'
   626  007E87  7A                 	db	122	;'z'
   627  007E88  61                 	db	97	;'a'
   628  007E89  72                 	db	114	;'r'
   629  007E8A  3A                 	db	58	;':'
   630  007E8B  20                 	db	32
   631  007E8C  0D                 	db	13
   632  007E8D  0A                 	db	10
   633  007E8E  00                 	db	0
   634  007E8F                     STR_5:
   635  007E8F  0D                 	db	13
   636  007E90  0A                 	db	10
   637  007E91  20                 	db	32
   638  007E92  48                 	db	72	;'H'
   639  007E93  4F                 	db	79	;'O'
   640  007E94  52                 	db	82	;'R'
   641  007E95  41                 	db	65	;'A'
   642  007E96  20                 	db	32
   643  007E97  45                 	db	69	;'E'
   644  007E98  53                 	db	83	;'S'
   645  007E99  54                 	db	84	;'T'
   646  007E9A  41                 	db	65	;'A'
   647  007E9B  42                 	db	66	;'B'
   648  007E9C  4C                 	db	76	;'L'
   649  007E9D  45                 	db	69	;'E'
   650  007E9E  43                 	db	67	;'C'
   651  007E9F  49                 	db	73	;'I'
   652  007EA0  44                 	db	68	;'D'
   653  007EA1  41                 	db	65	;'A'
   654  007EA2  20                 	db	32
   655  007EA3  43                 	db	67	;'C'
   656  007EA4  4F                 	db	79	;'O'
   657  007EA5  52                 	db	82	;'R'
   658  007EA6  52                 	db	82	;'R'
   659  007EA7  45                 	db	69	;'E'
   660  007EA8  43                 	db	67	;'C'
   661  007EA9  54                 	db	84	;'T'
   662  007EAA  41                 	db	65	;'A'
   663  007EAB  4D                 	db	77	;'M'
   664  007EAC  45                 	db	69	;'E'
   665  007EAD  4E                 	db	78	;'N'
   666  007EAE  54                 	db	84	;'T'
   667  007EAF  45                 	db	69	;'E'
   668  007EB0  20                 	db	32
   669  007EB1  0D                 	db	13
   670  007EB2  0A                 	db	10
   671  007EB3  00                 	db	0
   672  007EB4                     STR_23:
   673  007EB4  0D                 	db	13
   674  007EB5  0A                 	db	10
   675  007EB6  20                 	db	32
   676  007EB7  32                 	db	50	;'2'
   677  007EB8  2E                 	db	46
   678  007EB9  20                 	db	32
   679  007EBA  41                 	db	65	;'A'
   680  007EBB  73                 	db	115	;'s'
   681  007EBC  69                 	db	105	;'i'
   682  007EBD  67                 	db	103	;'g'
   683  007EBE  6E                 	db	110	;'n'
   684  007EBF  61                 	db	97	;'a'
   685  007EC0  72                 	db	114	;'r'
   686  007EC1  20                 	db	32
   687  007EC2  48                 	db	72	;'H'
   688  007EC3  6F                 	db	111	;'o'
   689  007EC4  72                 	db	114	;'r'
   690  007EC5  61                 	db	97	;'a'
   691  007EC6  72                 	db	114	;'r'
   692  007EC7  69                 	db	105	;'i'
   693  007EC8  6F                 	db	111	;'o'
   694  007EC9  73                 	db	115	;'s'
   695  007ECA  20                 	db	32
   696  007ECB  70                 	db	112	;'p'
   697  007ECC  61                 	db	97	;'a'
   698  007ECD  72                 	db	114	;'r'
   699  007ECE  61                 	db	97	;'a'
   700  007ECF  20                 	db	32
   701  007ED0  72                 	db	114	;'r'
   702  007ED1  65                 	db	101	;'e'
   703  007ED2  67                 	db	103	;'g'
   704  007ED3  61                 	db	97	;'a'
   705  007ED4  72                 	db	114	;'r'
   706  007ED5  20                 	db	32
   707  007ED6  0D                 	db	13
   708  007ED7  0A                 	db	10
   709  007ED8  00                 	db	0
   710  007ED9  0D                 	db	13
   711  007EDA  0A                 	db	10
   712  007EDB  53                 	db	83	;'S'
   713  007EDC  65                 	db	101	;'e'
   714  007EDD  6E                 	db	110	;'n'
   715  007EDE  73                 	db	115	;'s'
   716  007EDF  6F                 	db	111	;'o'
   717  007EE0  72                 	db	114	;'r'
   718  007EE1  65                 	db	101	;'e'
   719  007EE2  73                 	db	115	;'s'
   720  007EE3  20                 	db	32
   721  007EE4  4C                 	db	76	;'L'
   722  007EE5  65                 	db	101	;'e'
   723  007EE6  69                 	db	105	;'i'
   724  007EE7  64                 	db	100	;'d'
   725  007EE8  6F                 	db	111	;'o'
   726  007EE9  73                 	db	115	;'s'
   727  007EEA  20                 	db	32
   728  007EEB  63                 	db	99	;'c'
   729  007EEC  6F                 	db	111	;'o'
   730  007EED  6E                 	db	110	;'n'
   731  007EEE  20                 	db	32
   732  007EEF  45                 	db	69	;'E'
   733  007EF0  78                 	db	120	;'x'
   734  007EF1  69                 	db	105	;'i'
   735  007EF2  74                 	db	116	;'t'
   736  007EF3  6F                 	db	111	;'o'
   737  007EF4  21                 	db	33
   738  007EF5  0D                 	db	13
   739  007EF6  0A                 	db	10
   740  007EF7  0A                 	db	10
   741  007EF8  00                 	db	0
   742  007EF9                     STR_25:
   743  007EF9  0D                 	db	13
   744  007EFA  0A                 	db	10
   745  007EFB  20                 	db	32
   746  007EFC  34                 	db	52	;'4'
   747  007EFD  2E                 	db	46
   748  007EFE  20                 	db	32
   749  007EFF  44                 	db	68	;'D'
   750  007F00  61                 	db	97	;'a'
   751  007F01  6D                 	db	109	;'m'
   752  007F02  65                 	db	101	;'e'
   753  007F03  20                 	db	32
   754  007F04  64                 	db	100	;'d'
   755  007F05  61                 	db	97	;'a'
   756  007F06  74                 	db	116	;'t'
   757  007F07  6F                 	db	111	;'o'
   758  007F08  73                 	db	115	;'s'
   759  007F09  20                 	db	32
   760  007F0A  64                 	db	100	;'d'
   761  007F0B  65                 	db	101	;'e'
   762  007F0C  6C                 	db	108	;'l'
   763  007F0D  20                 	db	32
   764  007F0E  73                 	db	115	;'s'
   765  007F0F  69                 	db	105	;'i'
   766  007F10  73                 	db	115	;'s'
   767  007F11  74                 	db	116	;'t'
   768  007F12  65                 	db	101	;'e'
   769  007F13  6D                 	db	109	;'m'
   770  007F14  61                 	db	97	;'a'
   771  007F15  20                 	db	32
   772  007F16  0D                 	db	13
   773  007F17  0A                 	db	10
   774  007F18  00                 	db	0
   775  007F19                     STR_4:
   776  007F19  0D                 	db	13
   777  007F1A  0A                 	db	10
   778  007F1B  20                 	db	32
   779  007F1C  45                 	db	69	;'E'
   780  007F1D  6E                 	db	110	;'n'
   781  007F1E  76                 	db	118	;'v'
   782  007F1F  69                 	db	105	;'i'
   783  007F20  65                 	db	101	;'e'
   784  007F21  20                 	db	32
   785  007F22  6C                 	db	108	;'l'
   786  007F23  6F                 	db	111	;'o'
   787  007F24  73                 	db	115	;'s'
   788  007F25  20                 	db	32
   789  007F26  4D                 	db	77	;'M'
   790  007F27  69                 	db	105	;'i'
   791  007F28  6E                 	db	110	;'n'
   792  007F29  75                 	db	117	;'u'
   793  007F2A  74                 	db	116	;'t'
   794  007F2B  6F                 	db	111	;'o'
   795  007F2C  73                 	db	115	;'s'
   796  007F2D  20                 	db	32
   797  007F2E  45                 	db	69	;'E'
   798  007F2F  6A                 	db	106	;'j'
   799  007F30  3A                 	db	58	;':'
   800  007F31  20                 	db	32
   801  007F32  32                 	db	50	;'2'
   802  007F33  35                 	db	53	;'5'
   803  007F34  20                 	db	32
   804  007F35  0D                 	db	13
   805  007F36  0A                 	db	10
   806  007F37  00                 	db	0
   807  007F38  0D                 	db	13
   808  007F39  0A                 	db	10
   809  007F3A  44                 	db	68	;'D'
   810  007F3B  61                 	db	97	;'a'
   811  007F3C  6D                 	db	109	;'m'
   812  007F3D  65                 	db	101	;'e'
   813  007F3E  20                 	db	32
   814  007F3F  44                 	db	68	;'D'
   815  007F40  41                 	db	65	;'A'
   816  007F41  54                 	db	84	;'T'
   817  007F42  4F                 	db	79	;'O'
   818  007F43  53                 	db	83	;'S'
   819  007F44  20                 	db	32
   820  007F45  44                 	db	68	;'D'
   821  007F46  45                 	db	69	;'E'
   822  007F47  4C                 	db	76	;'L'
   823  007F48  20                 	db	32
   824  007F49  53                 	db	83	;'S'
   825  007F4A  45                 	db	69	;'E'
   826  007F4B  4E                 	db	78	;'N'
   827  007F4C  53                 	db	83	;'S'
   828  007F4D  4F                 	db	79	;'O'
   829  007F4E  52                 	db	82	;'R'
   830  007F4F  20                 	db	32
   831  007F50  3A                 	db	58	;':'
   832  007F51  0D                 	db	13
   833  007F52  0A                 	db	10
   834  007F53  00                 	db	0
   835  007F54                     STR_22:
   836  007F54  0D                 	db	13
   837  007F55  0A                 	db	10
   838  007F56  20                 	db	32
   839  007F57  31                 	db	49	;'1'
   840  007F58  2E                 	db	46
   841  007F59  20                 	db	32
   842  007F5A  46                 	db	70	;'F'
   843  007F5B  69                 	db	105	;'i'
   844  007F5C  6A                 	db	106	;'j'
   845  007F5D  61                 	db	97	;'a'
   846  007F5E  72                 	db	114	;'r'
   847  007F5F  20                 	db	32
   848  007F60  48                 	db	72	;'H'
   849  007F61  6F                 	db	111	;'o'
   850  007F62  72                 	db	114	;'r'
   851  007F63  61                 	db	97	;'a'
   852  007F64  20                 	db	32
   853  007F65  41                 	db	65	;'A'
   854  007F66  63                 	db	99	;'c'
   855  007F67  74                 	db	116	;'t'
   856  007F68  75                 	db	117	;'u'
   857  007F69  61                 	db	97	;'a'
   858  007F6A  6C                 	db	108	;'l'
   859  007F6B  20                 	db	32
   860  007F6C  0D                 	db	13
   861  007F6D  0A                 	db	10
   862  007F6E  00                 	db	0
   863  007F6F                     STR_10:
   864  007F6F  0D                 	db	13
   865  007F70  0A                 	db	10
   866  007F71  20                 	db	32
   867  007F72  48                 	db	72	;'H'
   868  007F73  6F                 	db	111	;'o'
   869  007F74  72                 	db	114	;'r'
   870  007F75  61                 	db	97	;'a'
   871  007F76  72                 	db	114	;'r'
   872  007F77  69                 	db	105	;'i'
   873  007F78  6F                 	db	111	;'o'
   874  007F79  20                 	db	32
   875  007F7A  4D                 	db	77	;'M'
   876  007F7B  6F                 	db	111	;'o'
   877  007F7C  64                 	db	100	;'d'
   878  007F7D  69                 	db	105	;'i'
   879  007F7E  66                 	db	102	;'f'
   880  007F7F  69                 	db	105	;'i'
   881  007F80  63                 	db	99	;'c'
   882  007F81  61                 	db	97	;'a'
   883  007F82  64                 	db	100	;'d'
   884  007F83  6F                 	db	111	;'o'
   885  007F84  21                 	db	33
   886  007F85  20                 	db	32
   887  007F86  0D                 	db	13
   888  007F87  0A                 	db	10
   889  007F88  00                 	db	0
   890  007F89                     STR_6:
   891  007F89  0D                 	db	13
   892  007F8A  0A                 	db	10
   893  007F8B  20                 	db	32
   894  007F8C  4F                 	db	79	;'O'
   895  007F8D  50                 	db	80	;'P'
   896  007F8E  43                 	db	67	;'C'
   897  007F8F  49                 	db	73	;'I'
   898  007F90  4F                 	db	79	;'O'
   899  007F91  4E                 	db	78	;'N'
   900  007F92  45                 	db	69	;'E'
   901  007F93  53                 	db	83	;'S'
   902  007F94  20                 	db	32
   903  007F95  44                 	db	68	;'D'
   904  007F96  45                 	db	69	;'E'
   905  007F97  20                 	db	32
   906  007F98  52                 	db	82	;'R'
   907  007F99  45                 	db	69	;'E'
   908  007F9A  47                 	db	71	;'G'
   909  007F9B  41                 	db	65	;'A'
   910  007F9C  44                 	db	68	;'D'
   911  007F9D  4F                 	db	79	;'O'
   912  007F9E  20                 	db	32
   913  007F9F  0D                 	db	13
   914  007FA0  0A                 	db	10
   915  007FA1  00                 	db	0
   916  007FA2                     STR_12:
   917  007FA2  0D                 	db	13
   918  007FA3  0A                 	db	10
   919  007FA4  20                 	db	32
   920  007FA5  54                 	db	84	;'T'
   921  007FA6  49                 	db	73	;'I'
   922  007FA7  45                 	db	69	;'E'
   923  007FA8  4D                 	db	77	;'M'
   924  007FA9  50                 	db	80	;'P'
   925  007FAA  4F                 	db	79	;'O'
   926  007FAB  20                 	db	32
   927  007FAC  44                 	db	68	;'D'
   928  007FAD  45                 	db	69	;'E'
   929  007FAE  20                 	db	32
   930  007FAF  52                 	db	82	;'R'
   931  007FB0  45                 	db	69	;'E'
   932  007FB1  47                 	db	71	;'G'
   933  007FB2  41                 	db	65	;'A'
   934  007FB3  44                 	db	68	;'D'
   935  007FB4  4F                 	db	79	;'O'
   936  007FB5  20                 	db	32
   937  007FB6  0D                 	db	13
   938  007FB7  0A                 	db	10
   939  007FB8  00                 	db	0
   940  007FB9                     STR_1:
   941  007FB9  0D                 	db	13
   942  007FBA  0A                 	db	10
   943  007FBB  20                 	db	32
   944  007FBC  44                 	db	68	;'D'
   945  007FBD  41                 	db	65	;'A'
   946  007FBE  54                 	db	84	;'T'
   947  007FBF  4F                 	db	79	;'O'
   948  007FC0  20                 	db	32
   949  007FC1  4E                 	db	78	;'N'
   950  007FC2  4F                 	db	79	;'O'
   951  007FC3  20                 	db	32
   952  007FC4  52                 	db	82	;'R'
   953  007FC5  45                 	db	69	;'E'
   954  007FC6  43                 	db	67	;'C'
   955  007FC7  49                 	db	73	;'I'
   956  007FC8  42                 	db	66	;'B'
   957  007FC9  49                 	db	73	;'I'
   958  007FCA  44                 	db	68	;'D'
   959  007FCB  4F                 	db	79	;'O'
   960  007FCC  20                 	db	32
   961  007FCD  0D                 	db	13
   962  007FCE  0A                 	db	10
   963  007FCF  00                 	db	0
   964  007FD0                     STR_2:
   965  007FD0  0D                 	db	13
   966  007FD1  0A                 	db	10
   967  007FD2  20                 	db	32
   968  007FD3  46                 	db	70	;'F'
   969  007FD4  49                 	db	73	;'I'
   970  007FD5  4A                 	db	74	;'J'
   971  007FD6  41                 	db	65	;'A'
   972  007FD7  20                 	db	32
   973  007FD8  48                 	db	72	;'H'
   974  007FD9  4F                 	db	79	;'O'
   975  007FDA  52                 	db	82	;'R'
   976  007FDB  41                 	db	65	;'A'
   977  007FDC  20                 	db	32
   978  007FDD  0D                 	db	13
   979  007FDE  0A                 	db	10
   980  007FDF  00                 	db	0
   981  007FE0                     STR_30:
   982  007FE0  25                 	db	37
   983  007FE1  64                 	db	100	;'d'
   984  007FE2  20                 	db	32
   985  007FE3  7C                 	db	124
   986  007FE4  20                 	db	32
   987  007FE5  25                 	db	37
   988  007FE6  64                 	db	100	;'d'
   989  007FE7  20                 	db	32
   990  007FE8  7C                 	db	124
   991  007FE9  20                 	db	32
   992  007FEA  25                 	db	37
   993  007FEB  64                 	db	100	;'d'
   994  007FEC  20                 	db	32
   995  007FED  0D                 	db	13
   996  007FEE  0A                 	db	10
   997  007FEF  00                 	db	0
   998  007FF0                     STR_26:
   999  007FF0  0D                 	db	13
  1000  007FF1  0A                 	db	10
  1001  007FF2  20                 	db	32
  1002  007FF3  4F                 	db	79	;'O'
  1003  007FF4  70                 	db	112	;'p'
  1004  007FF5  63                 	db	99	;'c'
  1005  007FF6  69                 	db	105	;'i'
  1006  007FF7  6F                 	db	111	;'o'
  1007  007FF8  6E                 	db	110	;'n'
  1008  007FF9  3A                 	db	58	;':'
  1009  007FFA  20                 	db	32
  1010  007FFB  20                 	db	32
  1011  007FFC  0D                 	db	13
  1012  007FFD  00                 	db	0
  1013  0000                     
  1014                           ; #config settings
  1015  007FFE  00                 	db	0	; dummy byte at the end
  1016  0000                     
  1017                           	psect	cinit
  1018  0018D8                     __pcinit:
  1019                           	opt callstack 0
  1020  0018D8                     start_initialization:
  1021                           	opt callstack 0
  1022  0018D8                     __initialization:
  1023                           	opt callstack 0
  1024                           
  1025                           ; Initialize objects allocated to BANK0 (4 bytes)
  1026                           ; load TBLPTR registers with __pidataBANK0
  1027  0018D8  0E30               	movlw	low __pidataBANK0
  1028  0018DA  6EF6               	movwf	tblptrl,c
  1029  0018DC  0E1C               	movlw	high __pidataBANK0
  1030  0018DE  6EF7               	movwf	tblptrh,c
  1031  0018E0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1032  0018E2  6EF8               	movwf	tblptru,c
  1033  0018E4  EE00  F0F2         	lfsr	0,__pdataBANK0
  1034  0018E8  EE10 F004          	lfsr	1,4
  1035  0018EC                     copy_data0:
  1036  0018EC  0009               	tblrd		*+
  1037  0018EE  CFF5 FFEE          	movff	tablat,postinc0
  1038  0018F2  50E5               	movf	postdec1,w,c
  1039  0018F4  50E1               	movf	fsr1l,w,c
  1040  0018F6  E1FA               	bnz	copy_data0
  1041                           
  1042                           ; Clear objects allocated to BANK1 (32 bytes)
  1043  0018F8  EE01  F000         	lfsr	0,__pbssBANK1
  1044  0018FC  0E20               	movlw	32
  1045  0018FE                     clear_0:
  1046  0018FE  6AEE               	clrf	postinc0,c
  1047  001900  06E8               	decf	wreg,f,c
  1048  001902  E1FD               	bnz	clear_0
  1049                           
  1050                           ; Clear objects allocated to BANK0 (109 bytes)
  1051  001904  EE00  F060         	lfsr	0,__pbssBANK0
  1052  001908  0E6D               	movlw	109
  1053  00190A                     clear_1:
  1054  00190A  6AEE               	clrf	postinc0,c
  1055  00190C  06E8               	decf	wreg,f,c
  1056  00190E  E1FD               	bnz	clear_1
  1057                           
  1058                           ; Clear objects allocated to COMRAM (1 bytes)
  1059  001910  6A5E               	clrf	__pbssCOMRAM& (0+255),c
  1060  001912                     end_of_initialization:
  1061                           	opt callstack 0
  1062  001912                     __end_of__initialization:
  1063                           	opt callstack 0
  1064  001912  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1065  001914  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1066  001916  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1067  001918  6EF8               	movwf	tblptru,c
  1068  00191A  0100               	movlb	0
  1069  00191C  EFCA  F009         	goto	_main	;jump to C main() function
  1070                           
  1071                           	psect	bssCOMRAM
  1072  00005E                     __pbssCOMRAM:
  1073                           	opt callstack 0
  1074  00005E                     _esperandoDatos:
  1075                           	opt callstack 0
  1076  00005E                     	ds	1
  1077                           
  1078                           	psect	bssBANK0
  1079  000060                     __pbssBANK0:
  1080                           	opt callstack 0
  1081  000060                     _horarios:
  1082                           	opt callstack 0
  1083  000060                     	ds	72
  1084  0000A8                     _sensores:
  1085                           	opt callstack 0
  1086  0000A8                     	ds	16
  1087  0000B8                     _nout:
  1088                           	opt callstack 0
  1089  0000B8                     	ds	2
  1090  0000BA                     _width:
  1091                           	opt callstack 0
  1092  0000BA                     	ds	2
  1093  0000BC                     _prec:
  1094                           	opt callstack 0
  1095  0000BC                     	ds	2
  1096  0000BE                     _flags:
  1097                           	opt callstack 0
  1098  0000BE                     	ds	2
  1099  0000C0                     _contInterrupciones:
  1100                           	opt callstack 0
  1101  0000C0                     	ds	2
  1102  0000C2                     _regando:
  1103                           	opt callstack 0
  1104  0000C2                     	ds	1
  1105  0000C3                     _minutosTranscurridos:
  1106                           	opt callstack 0
  1107  0000C3                     	ds	1
  1108  0000C4                     _minutosRegar:
  1109                           	opt callstack 0
  1110  0000C4                     	ds	1
  1111  0000C5                     _overflowTimer:
  1112                           	opt callstack 0
  1113  0000C5                     	ds	1
  1114  0000C6                     _datoRecibido:
  1115                           	opt callstack 0
  1116  0000C6                     	ds	1
  1117  0000C7                     _segundos:
  1118                           	opt callstack 0
  1119  0000C7                     	ds	1
  1120  0000C8                     _minutos:
  1121                           	opt callstack 0
  1122  0000C8                     	ds	1
  1123  0000C9                     _hora:
  1124                           	opt callstack 0
  1125  0000C9                     	ds	1
  1126  0000CA                     _esperaDatoConcluida:
  1127                           	opt callstack 0
  1128  0000CA                     	ds	1
  1129  0000CB                     _byteUart:
  1130                           	opt callstack 0
  1131  0000CB                     	ds	1
  1132  0000CC                     _tiempoInactividadTrans:
  1133                           	opt callstack 0
  1134  0000CC                     	ds	1
  1135                           
  1136                           	psect	dataBANK0
  1137  0000F2                     __pdataBANK0:
  1138                           	opt callstack 0
  1139  0000F2                     _VALOR_TIMER0:
  1140                           	opt callstack 0
  1141  0000F2                     	ds	2
  1142  0000F4                     _VALOR_TIMER0UART:
  1143                           	opt callstack 0
  1144  0000F4                     	ds	2
  1145                           
  1146                           	psect	bssBANK1
  1147  000100                     __pbssBANK1:
  1148                           	opt callstack 0
  1149  000100                     _dbuf:
  1150                           	opt callstack 0
  1151  000100                     	ds	32
  1152                           
  1153                           	psect	cstackBANK0
  1154  0000CD                     __pcstackBANK0:
  1155                           	opt callstack 0
  1156  0000CD                     ?_sprintf:
  1157                           	opt callstack 0
  1158  0000CD                     sprintf@s:
  1159                           	opt callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x0
  1162  0000CD                     	ds	2
  1163  0000CF                     sprintf@fmt:
  1164                           	opt callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x2
  1167  0000CF                     	ds	10
  1168  0000D9                     sprintf@ap:
  1169                           	opt callstack 0
  1170                           
  1171                           ; 2 bytes @ 0xC
  1172  0000D9                     	ds	2
  1173  0000DB                     sprintf@f:
  1174                           	opt callstack 0
  1175                           
  1176                           ; 6 bytes @ 0xE
  1177  0000DB                     	ds	6
  1178  0000E1                     dameDatosSistema@buffer:
  1179                           	opt callstack 0
  1180                           
  1181                           ; 15 bytes @ 0x14
  1182  0000E1                     	ds	15
  1183  0000F0                     dameDatosSistema@i:
  1184                           	opt callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x23
  1187  0000F0                     	ds	2
  1188                           
  1189                           	psect	cstackCOMRAM
  1190  000001                     __pcstackCOMRAM:
  1191                           	opt callstack 0
  1192  000001                     ??_i2c_espera:
  1193  000001                     ??_convertirDato:
  1194  000001                     ??_dameHumedadSuelo:
  1195  000001                     ?_strlen:
  1196                           	opt callstack 0
  1197  000001                     ?_estaSeco:
  1198                           	opt callstack 0
  1199  000001                     ?_horaRegar:
  1200                           	opt callstack 0
  1201  000001                     ?___wmul:
  1202                           	opt callstack 0
  1203  000001                     ?___aldiv:
  1204                           	opt callstack 0
  1205  000001                     ?___aodiv:
  1206                           	opt callstack 0
  1207  000001                     ?___aomod:
  1208                           	opt callstack 0
  1209  000001                     UART_write@dato:
  1210                           	opt callstack 0
  1211  000001                     constructorSensor@s:
  1212                           	opt callstack 0
  1213  000001                     estaSeco@s:
  1214                           	opt callstack 0
  1215  000001                     ___wmul@multiplier:
  1216                           	opt callstack 0
  1217  000001                     fputc@c:
  1218                           	opt callstack 0
  1219  000001                     strlen@s:
  1220                           	opt callstack 0
  1221  000001                     ___aldiv@dividend:
  1222                           	opt callstack 0
  1223  000001                     ___aodiv@dividend:
  1224                           	opt callstack 0
  1225  000001                     ___aomod@dividend:
  1226                           	opt callstack 0
  1227                           
  1228                           ; 8 bytes @ 0x0
  1229  000001                     	ds	1
  1230  000002                     i2c_envia_dato@dato:
  1231                           	opt callstack 0
  1232  000002                     i2c_recibe_dato@datoleido:
  1233                           	opt callstack 0
  1234  000002                     convertirDato@dato:
  1235                           	opt callstack 0
  1236  000002                     dameHumedadSuelo@canalLeer:
  1237                           	opt callstack 0
  1238  000002                     UART_printf@cadena:
  1239                           	opt callstack 0
  1240                           
  1241                           ; 2 bytes @ 0x1
  1242  000002                     	ds	1
  1243  000003                     ??_encenderBombas:
  1244  000003                     ??_lecturaAnalogaSensores:
  1245  000003                     escribe_rtc@dato:
  1246                           	opt callstack 0
  1247  000003                     leer_rtc@direccion:
  1248                           	opt callstack 0
  1249  000003                     convertirDato@datoR:
  1250                           	opt callstack 0
  1251  000003                     constructorSensor@humedad:
  1252                           	opt callstack 0
  1253  000003                     leer_eeprom@direccion:
  1254                           	opt callstack 0
  1255  000003                     ___wmul@multiplicand:
  1256                           	opt callstack 0
  1257  000003                     fputc@fp:
  1258                           	opt callstack 0
  1259  000003                     strlen@a:
  1260                           	opt callstack 0
  1261                           
  1262                           ; 2 bytes @ 0x2
  1263  000003                     	ds	1
  1264  000004                     escribe_rtc@direccion:
  1265                           	opt callstack 0
  1266  000004                     leer_rtc@dato:
  1267                           	opt callstack 0
  1268  000004                     constructorSensor@pin:
  1269                           	opt callstack 0
  1270  000004                     lecturaAnalogaSensores@i:
  1271                           	opt callstack 0
  1272                           
  1273                           ; 2 bytes @ 0x3
  1274  000004                     	ds	1
  1275  000005                     ??_fputc:
  1276  000005                     ??_setRtc:
  1277  000005                     ??_leer_eeprom:
  1278  000005                     encenderBombas@flagSeco:
  1279                           	opt callstack 0
  1280  000005                     restablecerDatosSensor@i:
  1281                           	opt callstack 0
  1282  000005                     ___wmul@product:
  1283                           	opt callstack 0
  1284  000005                     ___aldiv@divisor:
  1285                           	opt callstack 0
  1286                           
  1287                           ; 4 bytes @ 0x4
  1288  000005                     	ds	1
  1289  000006                     setRtc@direccion:
  1290                           	opt callstack 0
  1291  000006                     leer_eeprom@dato:
  1292                           	opt callstack 0
  1293  000006                     encenderBombas@i:
  1294                           	opt callstack 0
  1295                           
  1296                           ; 2 bytes @ 0x5
  1297  000006                     	ds	1
  1298  000007                     setRtc@dato:
  1299                           	opt callstack 0
  1300  000007                     inicializarObjetos@i:
  1301                           	opt callstack 0
  1302  000007                     escribe_eeprom@direccion:
  1303                           	opt callstack 0
  1304  000007                     leeHorariosMemoria@contMemoria:
  1305                           	opt callstack 0
  1306                           
  1307                           ; 2 bytes @ 0x6
  1308  000007                     	ds	1
  1309  000008                     setRtc@datoCapturado:
  1310                           	opt callstack 0
  1311                           
  1312                           ; 1 bytes @ 0x7
  1313  000008                     	ds	1
  1314  000009                     escribe_eeprom@dato:
  1315                           	opt callstack 0
  1316  000009                     ___aldiv@counter:
  1317                           	opt callstack 0
  1318  000009                     setRtc@i:
  1319                           	opt callstack 0
  1320  000009                     leeHorariosMemoria@i:
  1321                           	opt callstack 0
  1322  000009                     ___aodiv@divisor:
  1323                           	opt callstack 0
  1324  000009                     ___aomod@divisor:
  1325                           	opt callstack 0
  1326                           
  1327                           ; 8 bytes @ 0x8
  1328  000009                     	ds	1
  1329  00000A                     ??_escribe_eeprom:
  1330  00000A                     ___aldiv@sign:
  1331                           	opt callstack 0
  1332  00000A                     fputs@s:
  1333                           	opt callstack 0
  1334                           
  1335                           ; 2 bytes @ 0x9
  1336  00000A                     	ds	1
  1337  00000B                     setRtc@Rx:
  1338                           	opt callstack 0
  1339  00000B                     escribeHorariosMemoria@contMemoria:
  1340                           	opt callstack 0
  1341  00000B                     ___aldiv@quotient:
  1342                           	opt callstack 0
  1343                           
  1344                           ; 4 bytes @ 0xA
  1345  00000B                     	ds	1
  1346  00000C                     fputs@fp:
  1347                           	opt callstack 0
  1348                           
  1349                           ; 2 bytes @ 0xB
  1350  00000C                     	ds	1
  1351  00000D                     escribeHorariosMemoria@i:
  1352                           	opt callstack 0
  1353                           
  1354                           ; 2 bytes @ 0xC
  1355  00000D                     	ds	1
  1356  00000E                     fputs@c:
  1357                           	opt callstack 0
  1358                           
  1359                           ; 1 bytes @ 0xD
  1360  00000E                     	ds	1
  1361  00000F                     asignarHorarios@hora:
  1362                           	opt callstack 0
  1363  00000F                     setTiempoRegar@tiempoRegar:
  1364                           	opt callstack 0
  1365  00000F                     fputs@i:
  1366                           	opt callstack 0
  1367  00000F                     UART_init@BAUD:
  1368                           	opt callstack 0
  1369                           
  1370                           ; 4 bytes @ 0xE
  1371  00000F                     	ds	1
  1372  000010                     asignarHorarios@datoCapturado:
  1373                           	opt callstack 0
  1374  000010                     setTiempoRegar@hora:
  1375                           	opt callstack 0
  1376                           
  1377                           ; 1 bytes @ 0xF
  1378  000010                     	ds	1
  1379  000011                     ?_pad:
  1380                           	opt callstack 0
  1381  000011                     ___aodiv@counter:
  1382                           	opt callstack 0
  1383  000011                     ___aomod@counter:
  1384                           	opt callstack 0
  1385  000011                     asignarHorarios@i:
  1386                           	opt callstack 0
  1387  000011                     setTiempoRegar@i:
  1388                           	opt callstack 0
  1389  000011                     pad@fp:
  1390                           	opt callstack 0
  1391                           
  1392                           ; 2 bytes @ 0x10
  1393  000011                     	ds	1
  1394  000012                     ___aodiv@sign:
  1395                           	opt callstack 0
  1396  000012                     ___aomod@sign:
  1397                           	opt callstack 0
  1398                           
  1399                           ; 1 bytes @ 0x11
  1400  000012                     	ds	1
  1401  000013                     ?_abs:
  1402                           	opt callstack 0
  1403  000013                     asignarHorarios@Rx:
  1404                           	opt callstack 0
  1405  000013                     setTiempoRegar@i_720:
  1406                           	opt callstack 0
  1407  000013                     pad@buf:
  1408                           	opt callstack 0
  1409  000013                     abs@a:
  1410                           	opt callstack 0
  1411  000013                     ___aodiv@quotient:
  1412                           	opt callstack 0
  1413                           
  1414                           ; 8 bytes @ 0x12
  1415  000013                     	ds	2
  1416  000015                     ??_abs:
  1417  000015                     setTiempoRegar@datoCapturado:
  1418                           	opt callstack 0
  1419  000015                     pad@p:
  1420                           	opt callstack 0
  1421                           
  1422                           ; 2 bytes @ 0x14
  1423  000015                     	ds	1
  1424  000016                     setTiempoRegar@Rx:
  1425                           	opt callstack 0
  1426                           
  1427                           ; 1 bytes @ 0x15
  1428  000016                     	ds	1
  1429  000017                     ??_pad:
  1430  000017                     _UART_init$1623:
  1431                           	opt callstack 0
  1432                           
  1433                           ; 4 bytes @ 0x16
  1434  000017                     	ds	1
  1435  000018                     pad@i:
  1436                           	opt callstack 0
  1437                           
  1438                           ; 2 bytes @ 0x17
  1439  000018                     	ds	2
  1440  00001A                     pad@w:
  1441                           	opt callstack 0
  1442                           
  1443                           ; 2 bytes @ 0x19
  1444  00001A                     	ds	2
  1445  00001C                     ?_dtoa:
  1446                           	opt callstack 0
  1447  00001C                     dtoa@fp:
  1448                           	opt callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x1B
  1451  00001C                     	ds	2
  1452  00001E                     dtoa@d:
  1453                           	opt callstack 0
  1454                           
  1455                           ; 8 bytes @ 0x1D
  1456  00001E                     	ds	8
  1457  000026                     ??_dtoa:
  1458                           
  1459                           ; 1 bytes @ 0x25
  1460  000026                     	ds	8
  1461  00002E                     _dtoa$856:
  1462                           	opt callstack 0
  1463                           
  1464                           ; 2 bytes @ 0x2D
  1465  00002E                     	ds	2
  1466  000030                     dtoa@p:
  1467                           	opt callstack 0
  1468                           
  1469                           ; 2 bytes @ 0x2F
  1470  000030                     	ds	2
  1471  000032                     dtoa@w:
  1472                           	opt callstack 0
  1473                           
  1474                           ; 2 bytes @ 0x31
  1475  000032                     	ds	2
  1476  000034                     dtoa@s:
  1477                           	opt callstack 0
  1478                           
  1479                           ; 2 bytes @ 0x33
  1480  000034                     	ds	2
  1481  000036                     dtoa@n:
  1482                           	opt callstack 0
  1483                           
  1484                           ; 8 bytes @ 0x35
  1485  000036                     	ds	8
  1486  00003E                     dtoa@i:
  1487                           	opt callstack 0
  1488                           
  1489                           ; 2 bytes @ 0x3D
  1490  00003E                     	ds	2
  1491  000040                     ?_vfpfcnvrt:
  1492                           	opt callstack 0
  1493  000040                     vfpfcnvrt@fp:
  1494                           	opt callstack 0
  1495                           
  1496                           ; 2 bytes @ 0x3F
  1497  000040                     	ds	2
  1498  000042                     vfpfcnvrt@fmt:
  1499                           	opt callstack 0
  1500                           
  1501                           ; 2 bytes @ 0x41
  1502  000042                     	ds	2
  1503  000044                     vfpfcnvrt@ap:
  1504                           	opt callstack 0
  1505                           
  1506                           ; 2 bytes @ 0x43
  1507  000044                     	ds	2
  1508  000046                     ??_vfpfcnvrt:
  1509                           
  1510                           ; 1 bytes @ 0x45
  1511  000046                     	ds	2
  1512  000048                     vfpfcnvrt@ll:
  1513                           	opt callstack 0
  1514                           
  1515                           ; 8 bytes @ 0x47
  1516  000048                     	ds	8
  1517  000050                     ?_vfprintf:
  1518                           	opt callstack 0
  1519  000050                     vfprintf@fp:
  1520                           	opt callstack 0
  1521                           
  1522                           ; 2 bytes @ 0x4F
  1523  000050                     	ds	2
  1524  000052                     vfprintf@fmt:
  1525                           	opt callstack 0
  1526                           
  1527                           ; 2 bytes @ 0x51
  1528  000052                     	ds	2
  1529  000054                     vfprintf@ap:
  1530                           	opt callstack 0
  1531                           
  1532                           ; 2 bytes @ 0x53
  1533  000054                     	ds	2
  1534  000056                     vfprintf@cfmt:
  1535                           	opt callstack 0
  1536                           
  1537                           ; 2 bytes @ 0x55
  1538  000056                     	ds	2
  1539  000058                     ??_dameDatosSistema:
  1540  000058                     
  1541                           ; 1 bytes @ 0x57
  1542  000058                     	ds	3
  1543  00005B                     ??_sistemaPrincipal:
  1544                           
  1545                           ; 1 bytes @ 0x5A
  1546  00005B                     	ds	2
  1547  00005D                     sistemaPrincipal@opcion:
  1548                           	opt callstack 0
  1549                           
  1550                           ; 1 bytes @ 0x5C
  1551  00005D                     	ds	1
  1552  00005E                     
  1553                           ; 1 bytes @ 0x5D
  1554 ;;
  1555 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1556 ;;
  1557 ;; *************** function _main *****************
  1558 ;; Defined at:
  1559 ;;		line 617 in file "main.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;		None
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;		None
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  1    wreg      void 
  1566 ;; Registers used:
  1567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1573 ;;      Params:         0       0       0       0       0       0       0       0       0
  1574 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1575 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1576 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1577 ;;Total ram usage:        0 bytes
  1578 ;; Hardware stack levels required when called:   11
  1579 ;; This function calls:
  1580 ;;		_UART_init
  1581 ;;		_configurarAdc
  1582 ;;		_i2c_iniciar
  1583 ;;		_inicializarObjetos
  1584 ;;		_leeHorariosMemoria
  1585 ;;		_mostrarMenu
  1586 ;;		_restablecerDatosSensor
  1587 ;;		_sistemaPrincipal
  1588 ;;		_sistemaRegado
  1589 ;; This function is called by:
  1590 ;;		Startup code after reset
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text0
  1595  001394                     __ptext0:
  1596                           	opt callstack 0
  1597  001394                     _main:
  1598                           	opt callstack 20
  1599  001394                     
  1600                           ;main.c: 619:     INTCONbits.GIE = 1;
  1601  001394  8EF2               	bsf	242,7,c	;volatile
  1602                           
  1603                           ;main.c: 620:     INTCONbits.PEIE = 1;
  1604  001396  8CF2               	bsf	242,6,c	;volatile
  1605                           
  1606                           ;main.c: 621:     INTCONbits.TMR0IE = 0;
  1607  001398  9AF2               	bcf	242,5,c	;volatile
  1608                           
  1609                           ;main.c: 622:     INTCONbits.TMR0IF = 0;
  1610  00139A  94F2               	bcf	242,2,c	;volatile
  1611                           
  1612                           ;main.c: 623:     PIE1bits.RCIE = 1;
  1613  00139C  8A9D               	bsf	157,5,c	;volatile
  1614  00139E                     
  1615                           ;main.c: 625:     T0CON = 0b00000111;
  1616  00139E  0E07               	movlw	7
  1617  0013A0  6ED5               	movwf	213,c	;volatile
  1618  0013A2                     
  1619                           ;main.c: 627:     INTCONbits.TMR0IE = 1;
  1620  0013A2  8AF2               	bsf	242,5,c	;volatile
  1621  0013A4                     
  1622                           ;main.c: 632:     restablecerDatosSensor();
  1623  0013A4  EC44  F00C         	call	_restablecerDatosSensor	;wreg free
  1624  0013A8                     
  1625                           ;main.c: 634:     UART_init(9600);
  1626  0013A8  0E80               	movlw	128
  1627  0013AA  6E0F               	movwf	UART_init@BAUD^0,c
  1628  0013AC  0E25               	movlw	37
  1629  0013AE  6E10               	movwf	(UART_init@BAUD+1)^0,c
  1630  0013B0  0E00               	movlw	0
  1631  0013B2  6E11               	movwf	(UART_init@BAUD+2)^0,c
  1632  0013B4  0E00               	movlw	0
  1633  0013B6  6E12               	movwf	(UART_init@BAUD+3)^0,c
  1634  0013B8  EC9D  F00A         	call	_UART_init	;wreg free
  1635  0013BC                     
  1636                           ;main.c: 635:     i2c_iniciar();
  1637  0013BC  ECF6  F00D         	call	_i2c_iniciar	;wreg free
  1638  0013C0                     
  1639                           ;main.c: 636:     configurarAdc();
  1640  0013C0  ECDE  F00D         	call	_configurarAdc	;wreg free
  1641  0013C4                     
  1642                           ;main.c: 637:     inicializarObjetos();
  1643  0013C4  EC15  F00A         	call	_inicializarObjetos	;wreg free
  1644  0013C8                     
  1645                           ;main.c: 639:     leeHorariosMemoria();
  1646  0013C8  ECB2  F008         	call	_leeHorariosMemoria	;wreg free
  1647  0013CC                     
  1648                           ;main.c: 642:     TRISD = 0;
  1649  0013CC  0E00               	movlw	0
  1650  0013CE  6E95               	movwf	149,c	;volatile
  1651  0013D0                     
  1652                           ;main.c: 643:     LATD = 0;
  1653  0013D0  0E00               	movlw	0
  1654  0013D2  6E8C               	movwf	140,c	;volatile
  1655  0013D4                     
  1656                           ;main.c: 645:     TMR0 = VALOR_TIMER0;
  1657  0013D4  C0F2  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  1658  0013D8  C0F3  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  1659  0013DC                     
  1660                           ;main.c: 647:     INTCONbits.TMR0IF = 1;
  1661  0013DC  84F2               	bsf	242,2,c	;volatile
  1662  0013DE                     
  1663                           ;main.c: 649:     T0CONbits.TMR0ON = 1;
  1664  0013DE  8ED5               	bsf	213,7,c	;volatile
  1665  0013E0                     
  1666                           ;main.c: 651:     mostrarMenu();
  1667  0013E0  EC9C  F00B         	call	_mostrarMenu	;wreg free
  1668  0013E4                     l3137:
  1669                           
  1670                           ;main.c: 655:         if (datoRecibido) {
  1671  0013E4  0100               	movlb	0	; () banked
  1672  0013E6  51C6               	movf	_datoRecibido& (0+255),w,b
  1673  0013E8  B4D8               	btfsc	status,2,c
  1674  0013EA  EFF9  F009         	goto	u2451
  1675  0013EE  EFFB  F009         	goto	u2450
  1676  0013F2                     u2451:
  1677  0013F2  EF02  F00A         	goto	l3145
  1678  0013F6                     u2450:
  1679  0013F6                     
  1680                           ; BSR set to: 0
  1681                           ;main.c: 657:             datoRecibido = 0;
  1682  0013F6  0E00               	movlw	0
  1683  0013F8  6FC6               	movwf	_datoRecibido& (0+255),b
  1684  0013FA                     
  1685                           ; BSR set to: 0
  1686                           ;main.c: 658:             byteUart -= 48;
  1687  0013FA  0E30               	movlw	48
  1688  0013FC  5FCB               	subwf	_byteUart& (0+255),f,b
  1689  0013FE                     
  1690                           ; BSR set to: 0
  1691                           ;main.c: 659:             sistemaPrincipal(byteUart);
  1692  0013FE  51CB               	movf	_byteUart& (0+255),w,b
  1693  001400  EC60  F00A         	call	_sistemaPrincipal
  1694  001404                     l3145:
  1695                           
  1696                           ;main.c: 663:         if (overflowTimer) {
  1697  001404  0100               	movlb	0	; () banked
  1698  001406  51C5               	movf	_overflowTimer& (0+255),w,b
  1699  001408  B4D8               	btfsc	status,2,c
  1700  00140A  EF09  F00A         	goto	u2461
  1701  00140E  EF0B  F00A         	goto	u2460
  1702  001412                     u2461:
  1703  001412  EFF2  F009         	goto	l3137
  1704  001416                     u2460:
  1705  001416                     
  1706                           ; BSR set to: 0
  1707                           ;main.c: 665:             esperandoDatos = 0;
  1708  001416  0E00               	movlw	0
  1709  001418  6E5E               	movwf	_esperandoDatos^0,c
  1710                           
  1711                           ;main.c: 666:             overflowTimer = 0;
  1712  00141A  0E00               	movlw	0
  1713  00141C  6FC5               	movwf	_overflowTimer& (0+255),b
  1714  00141E                     
  1715                           ; BSR set to: 0
  1716                           ;main.c: 667:             sistemaRegado();
  1717  00141E  EC79  F009         	call	_sistemaRegado	;wreg free
  1718  001422  EFF2  F009         	goto	l3137
  1719  001426  EF07  F000         	goto	start
  1720  00142A                     __end_of_main:
  1721                           	opt callstack 0
  1722                           
  1723 ;; *************** function _sistemaRegado *****************
  1724 ;; Defined at:
  1725 ;;		line 562 in file "main.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;		None
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;		None
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1739 ;;      Params:         0       0       0       0       0       0       0       0       0
  1740 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1741 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1742 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1743 ;;Total ram usage:        0 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    5
  1746 ;; This function calls:
  1747 ;;		_dameHoraActual
  1748 ;;		_encenderBombas
  1749 ;;		_horaRegar
  1750 ;;		_lecturaAnalogaSensores
  1751 ;; This function is called by:
  1752 ;;		_main
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	text1
  1757  0012F2                     __ptext1:
  1758                           	opt callstack 0
  1759  0012F2                     _sistemaRegado:
  1760                           	opt callstack 25
  1761  0012F2                     
  1762                           ;main.c: 566:     if (regando) {
  1763  0012F2  0100               	movlb	0	; () banked
  1764  0012F4  51C2               	movf	_regando& (0+255),w,b
  1765  0012F6  B4D8               	btfsc	status,2,c
  1766  0012F8  EF80  F009         	goto	u2331
  1767  0012FC  EF82  F009         	goto	u2330
  1768  001300                     u2331:
  1769  001300  EFA4  F009         	goto	l3029
  1770  001304                     u2330:
  1771  001304                     
  1772                           ; BSR set to: 0
  1773                           ;main.c: 567:         contInterrupciones++;
  1774  001304  4BC0               	infsnz	_contInterrupciones& (0+255),f,b
  1775  001306  2BC1               	incf	(_contInterrupciones+1)& (0+255),f,b
  1776  001308                     
  1777                           ; BSR set to: 0
  1778                           ;main.c: 569:         if (contInterrupciones == 6) {
  1779  001308  0E06               	movlw	6
  1780  00130A  19C0               	xorwf	_contInterrupciones& (0+255),w,b
  1781  00130C  11C1               	iorwf	(_contInterrupciones+1)& (0+255),w,b
  1782  00130E  A4D8               	btfss	status,2,c
  1783  001310  EF8C  F009         	goto	u2341
  1784  001314  EF8E  F009         	goto	u2340
  1785  001318                     u2341:
  1786  001318  EFC9  F009         	goto	l325
  1787  00131C                     u2340:
  1788  00131C                     
  1789                           ; BSR set to: 0
  1790                           ;main.c: 570:             contInterrupciones = 0;
  1791  00131C  0E00               	movlw	0
  1792  00131E  6FC1               	movwf	(_contInterrupciones+1)& (0+255),b
  1793  001320  0E00               	movlw	0
  1794  001322  6FC0               	movwf	_contInterrupciones& (0+255),b
  1795  001324                     
  1796                           ; BSR set to: 0
  1797                           ;main.c: 571:             minutosTranscurridos++;
  1798  001324  2BC3               	incf	_minutosTranscurridos& (0+255),f,b
  1799  001326                     
  1800                           ; BSR set to: 0
  1801                           ;main.c: 574:             if (minutosTranscurridos >= minutosRegar) {
  1802  001326  51C4               	movf	_minutosRegar& (0+255),w,b
  1803  001328  5DC3               	subwf	_minutosTranscurridos& (0+255),w,b
  1804  00132A  A0D8               	btfss	status,0,c
  1805  00132C  EF9A  F009         	goto	u2351
  1806  001330  EF9C  F009         	goto	u2350
  1807  001334                     u2351:
  1808  001334  EFC9  F009         	goto	l325
  1809  001338                     u2350:
  1810  001338                     
  1811                           ; BSR set to: 0
  1812                           ;main.c: 576:                 LATD = 0;
  1813  001338  0E00               	movlw	0
  1814  00133A  6E8C               	movwf	140,c	;volatile
  1815                           
  1816                           ;main.c: 577:                 minutosTranscurridos = 0;
  1817  00133C  0E00               	movlw	0
  1818  00133E  6FC3               	movwf	_minutosTranscurridos& (0+255),b
  1819                           
  1820                           ;main.c: 578:                 regando = 0;
  1821  001340  0E00               	movlw	0
  1822  001342  6FC2               	movwf	_regando& (0+255),b
  1823  001344  EFC9  F009         	goto	l325
  1824  001348                     l3029:
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;main.c: 584:         dameHoraActual();
  1828  001348  EC54  F00D         	call	_dameHoraActual	;wreg free
  1829  00134C                     
  1830                           ;main.c: 586:         if (horaRegar() && !minutos) {
  1831  00134C  EC3E  F00D         	call	_horaRegar	;wreg free
  1832  001350  5001               	movf	?_horaRegar^0,w,c
  1833  001352  1002               	iorwf	(?_horaRegar+1)^0,w,c
  1834  001354  B4D8               	btfsc	status,2,c
  1835  001356  EFAF  F009         	goto	u2361
  1836  00135A  EFB1  F009         	goto	u2360
  1837  00135E                     u2361:
  1838  00135E  EFC9  F009         	goto	l325
  1839  001362                     u2360:
  1840  001362  0100               	movlb	0	; () banked
  1841  001364  51C8               	movf	_minutos& (0+255),w,b
  1842  001366  A4D8               	btfss	status,2,c
  1843  001368  EFB8  F009         	goto	u2371
  1844  00136C  EFBA  F009         	goto	u2370
  1845  001370                     u2371:
  1846  001370  EFC9  F009         	goto	l325
  1847  001374                     u2370:
  1848  001374                     
  1849                           ; BSR set to: 0
  1850                           ;main.c: 591:             lecturaAnalogaSensores();
  1851  001374  ECC7  F00B         	call	_lecturaAnalogaSensores	;wreg free
  1852  001378                     
  1853                           ;main.c: 593:             minutosRegar = horarios[hora].tiempoRegar;
  1854  001378  0100               	movlb	0	; () banked
  1855  00137A  51C9               	movf	_hora& (0+255),w,b
  1856  00137C  0D03               	mullw	3
  1857  00137E  0E62               	movlw	low (_horarios+2)
  1858  001380  24F3               	addwf	243,w,c
  1859  001382  6ED9               	movwf	fsr2l,c
  1860  001384  0E00               	movlw	high (_horarios+2)
  1861  001386  20F4               	addwfc	prodh,w,c
  1862  001388  6EDA               	movwf	fsr2h,c
  1863  00138A  50DF               	movf	indf2,w,c
  1864  00138C  6FC4               	movwf	_minutosRegar& (0+255),b
  1865  00138E                     
  1866                           ; BSR set to: 0
  1867                           ;main.c: 594:             encenderBombas();
  1868  00138E  EC7B  F001         	call	_encenderBombas	;wreg free
  1869  001392                     l325:
  1870  001392  0012               	return		;funcret
  1871  001394                     __end_of_sistemaRegado:
  1872                           	opt callstack 0
  1873                           
  1874 ;; *************** function _lecturaAnalogaSensores *****************
  1875 ;; Defined at:
  1876 ;;		line 509 in file "main.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;		None
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;  i               2    3[COMRAM] int 
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  1    wreg      void 
  1883 ;; Registers used:
  1884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1890 ;;      Params:         0       0       0       0       0       0       0       0       0
  1891 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1892 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1893 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1894 ;;Total ram usage:        3 bytes
  1895 ;; Hardware stack levels used:    1
  1896 ;; Hardware stack levels required when called:    2
  1897 ;; This function calls:
  1898 ;;		_dameHumedadSuelo
  1899 ;; This function is called by:
  1900 ;;		_sistemaRegado
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           	psect	text2
  1905  00178E                     __ptext2:
  1906                           	opt callstack 0
  1907  00178E                     _lecturaAnalogaSensores:
  1908                           	opt callstack 27
  1909  00178E                     
  1910                           ;main.c: 511:     for (int i = 0; i < 3; i++) {
  1911  00178E  0E00               	movlw	0
  1912  001790  6E05               	movwf	(lecturaAnalogaSensores@i+1)^0,c
  1913  001792  0E00               	movlw	0
  1914  001794  6E04               	movwf	lecturaAnalogaSensores@i^0,c
  1915  001796                     l2849:
  1916                           
  1917                           ;main.c: 512:         sensores[i].humedadMedida = dameHumedadSuelo(i);
  1918  001796  90D8               	bcf	status,0,c
  1919  001798  3404               	rlcf	lecturaAnalogaSensores@i^0,w,c
  1920  00179A  6ED9               	movwf	fsr2l,c
  1921  00179C  3405               	rlcf	(lecturaAnalogaSensores@i+1)^0,w,c
  1922  00179E  6EDA               	movwf	fsr2h,c
  1923  0017A0  0EA8               	movlw	low _sensores
  1924  0017A2  26D9               	addwf	fsr2l,f,c
  1925  0017A4  0E00               	movlw	high _sensores
  1926  0017A6  22DA               	addwfc	fsr2h,f,c
  1927  0017A8  5004               	movf	lecturaAnalogaSensores@i^0,w,c
  1928  0017AA  ECF0  F00C         	call	_dameHumedadSuelo
  1929  0017AE  6EDF               	movwf	indf2,c
  1930  0017B0                     
  1931                           ;main.c: 513:         _delay((unsigned long)((5)*(4000000/4000.0)));
  1932  0017B0  0E07               	movlw	7
  1933  0017B2  6E03               	movwf	??_lecturaAnalogaSensores^0,c
  1934  0017B4  0E7D               	movlw	125
  1935  0017B6                     u2477:
  1936  0017B6  2EE8               	decfsz	wreg,f,c
  1937  0017B8  D7FE               	bra	u2477
  1938  0017BA  2E03               	decfsz	??_lecturaAnalogaSensores^0,f,c
  1939  0017BC  D7FC               	bra	u2477
  1940  0017BE  F000               	nop	
  1941  0017C0                     
  1942                           ;main.c: 514:     }
  1943  0017C0  4A04               	infsnz	lecturaAnalogaSensores@i^0,f,c
  1944  0017C2  2A05               	incf	(lecturaAnalogaSensores@i+1)^0,f,c
  1945  0017C4  BE05               	btfsc	(lecturaAnalogaSensores@i+1)^0,7,c
  1946  0017C6  EFEE  F00B         	goto	u2221
  1947  0017CA  5005               	movf	(lecturaAnalogaSensores@i+1)^0,w,c
  1948  0017CC  E109               	bnz	u2220
  1949  0017CE  0E03               	movlw	3
  1950  0017D0  5C04               	subwf	lecturaAnalogaSensores@i^0,w,c
  1951  0017D2  A0D8               	btfss	status,0,c
  1952  0017D4  EFEE  F00B         	goto	u2221
  1953  0017D8  EFF0  F00B         	goto	u2220
  1954  0017DC                     u2221:
  1955  0017DC  EFCB  F00B         	goto	l2849
  1956  0017E0                     u2220:
  1957  0017E0  0012               	return		;funcret
  1958  0017E2                     __end_of_lecturaAnalogaSensores:
  1959                           	opt callstack 0
  1960                           
  1961 ;; *************** function _dameHumedadSuelo *****************
  1962 ;; Defined at:
  1963 ;;		line 450 in file "main.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  canalLeer       1    wreg     unsigned char 
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;  canalLeer       1    1[COMRAM] unsigned char 
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  1    wreg      unsigned char 
  1970 ;; Registers used:
  1971 ;;		wreg, status,2, status,0
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1977 ;;      Params:         0       0       0       0       0       0       0       0       0
  1978 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1979 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1980 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1981 ;;Total ram usage:        2 bytes
  1982 ;; Hardware stack levels used:    1
  1983 ;; Hardware stack levels required when called:    1
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_lecturaAnalogaSensores
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           	psect	text3
  1992  0019E0                     __ptext3:
  1993                           	opt callstack 0
  1994  0019E0                     _dameHumedadSuelo:
  1995                           	opt callstack 27
  1996                           
  1997                           ;incstack = 0
  1998                           ;dameHumedadSuelo@canalLeer stored from wreg
  1999  0019E0  6E02               	movwf	dameHumedadSuelo@canalLeer^0,c
  2000  0019E2                     
  2001                           ;main.c: 452:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  2002  0019E2  0E06               	movlw	6
  2003  0019E4                     u2487:
  2004  0019E4  2EE8               	decfsz	wreg,f,c
  2005  0019E6  D7FE               	bra	u2487
  2006  0019E8  D000               	nop2	
  2007  0019EA                     
  2008                           ;main.c: 454:     ADCON0bits.ADON = 1;
  2009  0019EA  80C2               	bsf	194,0,c	;volatile
  2010  0019EC                     
  2011                           ;main.c: 455:     ADCON0bits.CHS = canalLeer;
  2012  0019EC  C002  F001         	movff	dameHumedadSuelo@canalLeer,??_dameHumedadSuelo
  2013  0019F0  4601               	rlncf	??_dameHumedadSuelo^0,f,c
  2014  0019F2  4601               	rlncf	??_dameHumedadSuelo^0,f,c
  2015  0019F4  50C2               	movf	194,w,c	;volatile
  2016  0019F6  1801               	xorwf	??_dameHumedadSuelo^0,w,c
  2017  0019F8  0BC3               	andlw	-61
  2018  0019FA  1801               	xorwf	??_dameHumedadSuelo^0,w,c
  2019  0019FC  6EC2               	movwf	194,c	;volatile
  2020  0019FE                     
  2021                           ;main.c: 456:     ADCON0bits.GO = 1;
  2022  0019FE  82C2               	bsf	194,1,c	;volatile
  2023  001A00                     
  2024                           ;main.c: 457:     ADCON0bits.GO_DONE = 1;
  2025  001A00  82C2               	bsf	194,1,c	;volatile
  2026  001A02                     l283:
  2027  001A02  B2C2               	btfsc	194,1,c	;volatile
  2028  001A04  EF06  F00D         	goto	u1861
  2029  001A08  EF08  F00D         	goto	u1860
  2030  001A0C                     u1861:
  2031  001A0C  EF01  F00D         	goto	l283
  2032  001A10                     u1860:
  2033  001A10                     
  2034                           ;main.c: 461:     ADCON0bits.ADON = 0;
  2035  001A10  90C2               	bcf	194,0,c	;volatile
  2036  001A12                     
  2037                           ;main.c: 463:     return (ADRESH << 8) +ADRESL;
  2038  001A12  50C3               	movf	195,w,c	;volatile
  2039  001A14  0012               	return		;funcret
  2040  001A16                     __end_of_dameHumedadSuelo:
  2041                           	opt callstack 0
  2042                           
  2043 ;; *************** function _horaRegar *****************
  2044 ;; Defined at:
  2045 ;;		line 121 in file "main.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;		None
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;		None
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  2    0[COMRAM] int 
  2052 ;; Registers used:
  2053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2059 ;;      Params:         2       0       0       0       0       0       0       0       0
  2060 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2061 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2062 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2063 ;;Total ram usage:        3 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; Hardware stack levels required when called:    1
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_sistemaRegado
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text4
  2074  001A7C                     __ptext4:
  2075                           	opt callstack 0
  2076  001A7C                     _horaRegar:
  2077                           	opt callstack 28
  2078  001A7C                     
  2079                           ;main.c: 123:     return horarios[hora].regar == 1;
  2080  001A7C  0100               	movlb	0	; () banked
  2081  001A7E  51C9               	movf	_hora& (0+255),w,b
  2082  001A80  0D03               	mullw	3
  2083  001A82  0E61               	movlw	low (_horarios+1)
  2084  001A84  24F3               	addwf	243,w,c
  2085  001A86  6ED9               	movwf	fsr2l,c
  2086  001A88  0E00               	movlw	high (_horarios+1)
  2087  001A8A  20F4               	addwfc	prodh,w,c
  2088  001A8C  6EDA               	movwf	fsr2h,c
  2089  001A8E  04DE               	decf	postinc2,w,c
  2090  001A90  B4D8               	btfsc	status,2,c
  2091  001A92  EF4D  F00D         	goto	u1871
  2092  001A96  EF50  F00D         	goto	u1870
  2093  001A9A                     u1871:
  2094  001A9A  0E01               	movlw	1
  2095  001A9C  EF51  F00D         	goto	u1880
  2096  001AA0                     u1870:
  2097  001AA0  0E00               	movlw	0
  2098  001AA2                     u1880:
  2099  001AA2  6E01               	movwf	?_horaRegar^0,c
  2100  001AA4  6A02               	clrf	(?_horaRegar+1)^0,c
  2101  001AA6                     
  2102                           ; BSR set to: 0
  2103  001AA6  0012               	return		;funcret
  2104  001AA8                     __end_of_horaRegar:
  2105                           	opt callstack 0
  2106                           
  2107 ;; *************** function _encenderBombas *****************
  2108 ;; Defined at:
  2109 ;;		line 231 in file "main.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  i               2    5[COMRAM] int 
  2114 ;;  flagSeco        1    4[COMRAM] unsigned char 
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2124 ;;      Params:         0       0       0       0       0       0       0       0       0
  2125 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2126 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2127 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2128 ;;Total ram usage:        5 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    2
  2131 ;; This function calls:
  2132 ;;		_estaSeco
  2133 ;; This function is called by:
  2134 ;;		_sistemaRegado
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text5
  2139  0002F6                     __ptext5:
  2140                           	opt callstack 0
  2141  0002F6                     _encenderBombas:
  2142                           	opt callstack 27
  2143  0002F6                     
  2144                           ;main.c: 233:     char flagSeco = 0;
  2145  0002F6  0E00               	movlw	0
  2146  0002F8  6E05               	movwf	encenderBombas@flagSeco^0,c
  2147                           
  2148                           ;main.c: 235:     for (int i = 0; i < 3; i++) {
  2149  0002FA  0E00               	movlw	0
  2150  0002FC  6E07               	movwf	(encenderBombas@i+1)^0,c
  2151  0002FE  0E00               	movlw	0
  2152  000300  6E06               	movwf	encenderBombas@i^0,c
  2153  000302  EF5D  F002         	goto	l2657
  2154  000306                     l2607:
  2155                           
  2156                           ;main.c: 240:                 if (estaSeco(sensores[i])) {
  2157  000306  90D8               	bcf	status,0,c
  2158  000308  3406               	rlcf	encenderBombas@i^0,w,c
  2159  00030A  6ED9               	movwf	fsr2l,c
  2160  00030C  3407               	rlcf	(encenderBombas@i+1)^0,w,c
  2161  00030E  6EDA               	movwf	fsr2h,c
  2162  000310  0EA8               	movlw	low _sensores
  2163  000312  26D9               	addwf	fsr2l,f,c
  2164  000314  0E00               	movlw	high _sensores
  2165  000316  22DA               	addwfc	fsr2h,f,c
  2166  000318  CFDE F001          	movff	postinc2,estaSeco@s
  2167  00031C  CFDD F002          	movff	postdec2,estaSeco@s+1
  2168  000320  ECC4  F00D         	call	_estaSeco	;wreg free
  2169  000324  5001               	movf	?_estaSeco^0,w,c
  2170  000326  1002               	iorwf	(?_estaSeco+1)^0,w,c
  2171  000328  B4D8               	btfsc	status,2,c
  2172  00032A  EF99  F001         	goto	u1891
  2173  00032E  EF9B  F001         	goto	u1890
  2174  000332                     u1891:
  2175  000332  EF8B  F002         	goto	l2659
  2176  000336                     u1890:
  2177  000336                     
  2178                           ;main.c: 241:                     LATDbits.LATD0 = 1;
  2179  000336  808C               	bsf	140,0,c	;volatile
  2180  000338                     l2611:
  2181                           
  2182                           ;main.c: 242:                     flagSeco = 1;
  2183  000338  0E01               	movlw	1
  2184  00033A  6E05               	movwf	encenderBombas@flagSeco^0,c
  2185  00033C  EF8B  F002         	goto	l2659
  2186  000340                     l2613:
  2187                           
  2188                           ;main.c: 247:                 if (estaSeco(sensores[i])) {
  2189  000340  90D8               	bcf	status,0,c
  2190  000342  3406               	rlcf	encenderBombas@i^0,w,c
  2191  000344  6ED9               	movwf	fsr2l,c
  2192  000346  3407               	rlcf	(encenderBombas@i+1)^0,w,c
  2193  000348  6EDA               	movwf	fsr2h,c
  2194  00034A  0EA8               	movlw	low _sensores
  2195  00034C  26D9               	addwf	fsr2l,f,c
  2196  00034E  0E00               	movlw	high _sensores
  2197  000350  22DA               	addwfc	fsr2h,f,c
  2198  000352  CFDE F001          	movff	postinc2,estaSeco@s
  2199  000356  CFDD F002          	movff	postdec2,estaSeco@s+1
  2200  00035A  ECC4  F00D         	call	_estaSeco	;wreg free
  2201  00035E  5001               	movf	?_estaSeco^0,w,c
  2202  000360  1002               	iorwf	(?_estaSeco+1)^0,w,c
  2203  000362  B4D8               	btfsc	status,2,c
  2204  000364  EFB6  F001         	goto	u1901
  2205  000368  EFB8  F001         	goto	u1900
  2206  00036C                     u1901:
  2207  00036C  EF8B  F002         	goto	l2659
  2208  000370                     u1900:
  2209  000370                     
  2210                           ;main.c: 248:                     LATDbits.LATD1 = 1;
  2211  000370  828C               	bsf	140,1,c	;volatile
  2212  000372  EF9C  F001         	goto	l2611
  2213  000376                     l2619:
  2214                           
  2215                           ;main.c: 254:                 if (estaSeco(sensores[i])) {
  2216  000376  90D8               	bcf	status,0,c
  2217  000378  3406               	rlcf	encenderBombas@i^0,w,c
  2218  00037A  6ED9               	movwf	fsr2l,c
  2219  00037C  3407               	rlcf	(encenderBombas@i+1)^0,w,c
  2220  00037E  6EDA               	movwf	fsr2h,c
  2221  000380  0EA8               	movlw	low _sensores
  2222  000382  26D9               	addwf	fsr2l,f,c
  2223  000384  0E00               	movlw	high _sensores
  2224  000386  22DA               	addwfc	fsr2h,f,c
  2225  000388  CFDE F001          	movff	postinc2,estaSeco@s
  2226  00038C  CFDD F002          	movff	postdec2,estaSeco@s+1
  2227  000390  ECC4  F00D         	call	_estaSeco	;wreg free
  2228  000394  5001               	movf	?_estaSeco^0,w,c
  2229  000396  1002               	iorwf	(?_estaSeco+1)^0,w,c
  2230  000398  B4D8               	btfsc	status,2,c
  2231  00039A  EFD1  F001         	goto	u1911
  2232  00039E  EFD3  F001         	goto	u1910
  2233  0003A2                     u1911:
  2234  0003A2  EF8B  F002         	goto	l2659
  2235  0003A6                     u1910:
  2236  0003A6                     
  2237                           ;main.c: 255:                     LATDbits.LATD2 = 1;
  2238  0003A6  848C               	bsf	140,2,c	;volatile
  2239  0003A8  EF9C  F001         	goto	l2611
  2240  0003AC                     l2625:
  2241                           
  2242                           ;main.c: 261:                 if (estaSeco(sensores[i])) {
  2243  0003AC  90D8               	bcf	status,0,c
  2244  0003AE  3406               	rlcf	encenderBombas@i^0,w,c
  2245  0003B0  6ED9               	movwf	fsr2l,c
  2246  0003B2  3407               	rlcf	(encenderBombas@i+1)^0,w,c
  2247  0003B4  6EDA               	movwf	fsr2h,c
  2248  0003B6  0EA8               	movlw	low _sensores
  2249  0003B8  26D9               	addwf	fsr2l,f,c
  2250  0003BA  0E00               	movlw	high _sensores
  2251  0003BC  22DA               	addwfc	fsr2h,f,c
  2252  0003BE  CFDE F001          	movff	postinc2,estaSeco@s
  2253  0003C2  CFDD F002          	movff	postdec2,estaSeco@s+1
  2254  0003C6  ECC4  F00D         	call	_estaSeco	;wreg free
  2255  0003CA  5001               	movf	?_estaSeco^0,w,c
  2256  0003CC  1002               	iorwf	(?_estaSeco+1)^0,w,c
  2257  0003CE  B4D8               	btfsc	status,2,c
  2258  0003D0  EFEC  F001         	goto	u1921
  2259  0003D4  EFEE  F001         	goto	u1920
  2260  0003D8                     u1921:
  2261  0003D8  EF8B  F002         	goto	l2659
  2262  0003DC                     u1920:
  2263  0003DC                     
  2264                           ;main.c: 262:                     LATDbits.LATD3 = 1;
  2265  0003DC  868C               	bsf	140,3,c	;volatile
  2266  0003DE  EF9C  F001         	goto	l2611
  2267  0003E2                     l2631:
  2268                           
  2269                           ;main.c: 268:                 if (estaSeco(sensores[i])) {
  2270  0003E2  90D8               	bcf	status,0,c
  2271  0003E4  3406               	rlcf	encenderBombas@i^0,w,c
  2272  0003E6  6ED9               	movwf	fsr2l,c
  2273  0003E8  3407               	rlcf	(encenderBombas@i+1)^0,w,c
  2274  0003EA  6EDA               	movwf	fsr2h,c
  2275  0003EC  0EA8               	movlw	low _sensores
  2276  0003EE  26D9               	addwf	fsr2l,f,c
  2277  0003F0  0E00               	movlw	high _sensores
  2278  0003F2  22DA               	addwfc	fsr2h,f,c
  2279  0003F4  CFDE F001          	movff	postinc2,estaSeco@s
  2280  0003F8  CFDD F002          	movff	postdec2,estaSeco@s+1
  2281  0003FC  ECC4  F00D         	call	_estaSeco	;wreg free
  2282  000400  5001               	movf	?_estaSeco^0,w,c
  2283  000402  1002               	iorwf	(?_estaSeco+1)^0,w,c
  2284  000404  B4D8               	btfsc	status,2,c
  2285  000406  EF07  F002         	goto	u1931
  2286  00040A  EF09  F002         	goto	u1930
  2287  00040E                     u1931:
  2288  00040E  EF8B  F002         	goto	l2659
  2289  000412                     u1930:
  2290  000412                     
  2291                           ;main.c: 269:                     LATDbits.LATD4 = 1;
  2292  000412  888C               	bsf	140,4,c	;volatile
  2293  000414  EF9C  F001         	goto	l2611
  2294  000418                     l2637:
  2295                           
  2296                           ;main.c: 275:                 if (estaSeco(sensores[i])) {
  2297  000418  90D8               	bcf	status,0,c
  2298  00041A  3406               	rlcf	encenderBombas@i^0,w,c
  2299  00041C  6ED9               	movwf	fsr2l,c
  2300  00041E  3407               	rlcf	(encenderBombas@i+1)^0,w,c
  2301  000420  6EDA               	movwf	fsr2h,c
  2302  000422  0EA8               	movlw	low _sensores
  2303  000424  26D9               	addwf	fsr2l,f,c
  2304  000426  0E00               	movlw	high _sensores
  2305  000428  22DA               	addwfc	fsr2h,f,c
  2306  00042A  CFDE F001          	movff	postinc2,estaSeco@s
  2307  00042E  CFDD F002          	movff	postdec2,estaSeco@s+1
  2308  000432  ECC4  F00D         	call	_estaSeco	;wreg free
  2309  000436  5001               	movf	?_estaSeco^0,w,c
  2310  000438  1002               	iorwf	(?_estaSeco+1)^0,w,c
  2311  00043A  B4D8               	btfsc	status,2,c
  2312  00043C  EF22  F002         	goto	u1941
  2313  000440  EF24  F002         	goto	u1940
  2314  000444                     u1941:
  2315  000444  EF8B  F002         	goto	l2659
  2316  000448                     u1940:
  2317  000448                     
  2318                           ;main.c: 276:                     LATDbits.LATD5 = 1;
  2319  000448  8A8C               	bsf	140,5,c	;volatile
  2320  00044A  EF9C  F001         	goto	l2611
  2321  00044E                     l2643:
  2322                           
  2323                           ;main.c: 282:                 if (estaSeco(sensores[i])) {
  2324  00044E  90D8               	bcf	status,0,c
  2325  000450  3406               	rlcf	encenderBombas@i^0,w,c
  2326  000452  6ED9               	movwf	fsr2l,c
  2327  000454  3407               	rlcf	(encenderBombas@i+1)^0,w,c
  2328  000456  6EDA               	movwf	fsr2h,c
  2329  000458  0EA8               	movlw	low _sensores
  2330  00045A  26D9               	addwf	fsr2l,f,c
  2331  00045C  0E00               	movlw	high _sensores
  2332  00045E  22DA               	addwfc	fsr2h,f,c
  2333  000460  CFDE F001          	movff	postinc2,estaSeco@s
  2334  000464  CFDD F002          	movff	postdec2,estaSeco@s+1
  2335  000468  ECC4  F00D         	call	_estaSeco	;wreg free
  2336  00046C  5001               	movf	?_estaSeco^0,w,c
  2337  00046E  1002               	iorwf	(?_estaSeco+1)^0,w,c
  2338  000470  B4D8               	btfsc	status,2,c
  2339  000472  EF3D  F002         	goto	u1951
  2340  000476  EF3F  F002         	goto	u1950
  2341  00047A                     u1951:
  2342  00047A  EF8B  F002         	goto	l2659
  2343  00047E                     u1950:
  2344  00047E                     
  2345                           ;main.c: 283:                     LATDbits.LATD6 = 1;
  2346  00047E  8C8C               	bsf	140,6,c	;volatile
  2347  000480  EF9C  F001         	goto	l2611
  2348  000484                     l2649:
  2349                           
  2350                           ;main.c: 289:                 if (estaSeco(sensores[i])) {
  2351  000484  90D8               	bcf	status,0,c
  2352  000486  3406               	rlcf	encenderBombas@i^0,w,c
  2353  000488  6ED9               	movwf	fsr2l,c
  2354  00048A  3407               	rlcf	(encenderBombas@i+1)^0,w,c
  2355  00048C  6EDA               	movwf	fsr2h,c
  2356  00048E  0EA8               	movlw	low _sensores
  2357  000490  26D9               	addwf	fsr2l,f,c
  2358  000492  0E00               	movlw	high _sensores
  2359  000494  22DA               	addwfc	fsr2h,f,c
  2360  000496  CFDE F001          	movff	postinc2,estaSeco@s
  2361  00049A  CFDD F002          	movff	postdec2,estaSeco@s+1
  2362  00049E  ECC4  F00D         	call	_estaSeco	;wreg free
  2363  0004A2  5001               	movf	?_estaSeco^0,w,c
  2364  0004A4  1002               	iorwf	(?_estaSeco+1)^0,w,c
  2365  0004A6  B4D8               	btfsc	status,2,c
  2366  0004A8  EF58  F002         	goto	u1961
  2367  0004AC  EF5A  F002         	goto	u1960
  2368  0004B0                     u1961:
  2369  0004B0  EF8B  F002         	goto	l2659
  2370  0004B4                     u1960:
  2371  0004B4                     
  2372                           ;main.c: 290:                     LATDbits.LATD7 = 1;
  2373  0004B4  8E8C               	bsf	140,7,c	;volatile
  2374  0004B6  EF9C  F001         	goto	l2611
  2375  0004BA                     l2657:
  2376  0004BA  C006  F003         	movff	encenderBombas@i,??_encenderBombas
  2377  0004BE  C007  F004         	movff	encenderBombas@i+1,??_encenderBombas+1
  2378                           
  2379                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2380                           ; Switch size 1, requested type "simple"
  2381                           ; Number of cases is 1, Range of values is 0 to 0
  2382                           ; switch strategies available:
  2383                           ; Name         Instructions Cycles
  2384                           ; simple_byte            4     3 (average)
  2385                           ;	Chosen strategy is simple_byte
  2386  0004C2  5004               	movf	(??_encenderBombas+1)^0,w,c
  2387  0004C4  0A00               	xorlw	0	; case 0
  2388  0004C6  B4D8               	btfsc	status,2,c
  2389  0004C8  EF68  F002         	goto	l3191
  2390  0004CC  EF8B  F002         	goto	l2659
  2391  0004D0                     l3191:
  2392                           
  2393                           ; Switch size 1, requested type "simple"
  2394                           ; Number of cases is 8, Range of values is 0 to 7
  2395                           ; switch strategies available:
  2396                           ; Name         Instructions Cycles
  2397                           ; simple_byte           25    13 (average)
  2398                           ;	Chosen strategy is simple_byte
  2399  0004D0  5003               	movf	??_encenderBombas^0,w,c
  2400  0004D2  0A00               	xorlw	0	; case 0
  2401  0004D4  B4D8               	btfsc	status,2,c
  2402  0004D6  EF83  F001         	goto	l2607
  2403  0004DA  0A01               	xorlw	1	; case 1
  2404  0004DC  B4D8               	btfsc	status,2,c
  2405  0004DE  EFA0  F001         	goto	l2613
  2406  0004E2  0A03               	xorlw	3	; case 2
  2407  0004E4  B4D8               	btfsc	status,2,c
  2408  0004E6  EFBB  F001         	goto	l2619
  2409  0004EA  0A01               	xorlw	1	; case 3
  2410  0004EC  B4D8               	btfsc	status,2,c
  2411  0004EE  EFD6  F001         	goto	l2625
  2412  0004F2  0A07               	xorlw	7	; case 4
  2413  0004F4  B4D8               	btfsc	status,2,c
  2414  0004F6  EFF1  F001         	goto	l2631
  2415  0004FA  0A01               	xorlw	1	; case 5
  2416  0004FC  B4D8               	btfsc	status,2,c
  2417  0004FE  EF0C  F002         	goto	l2637
  2418  000502  0A03               	xorlw	3	; case 6
  2419  000504  B4D8               	btfsc	status,2,c
  2420  000506  EF27  F002         	goto	l2643
  2421  00050A  0A01               	xorlw	1	; case 7
  2422  00050C  B4D8               	btfsc	status,2,c
  2423  00050E  EF42  F002         	goto	l2649
  2424  000512  EF8B  F002         	goto	l2659
  2425  000516                     l2659:
  2426                           
  2427                           ;main.c: 296:     }
  2428  000516  4A06               	infsnz	encenderBombas@i^0,f,c
  2429  000518  2A07               	incf	(encenderBombas@i+1)^0,f,c
  2430  00051A  BE07               	btfsc	(encenderBombas@i+1)^0,7,c
  2431  00051C  EF99  F002         	goto	u1971
  2432  000520  5007               	movf	(encenderBombas@i+1)^0,w,c
  2433  000522  E109               	bnz	u1970
  2434  000524  0E03               	movlw	3
  2435  000526  5C06               	subwf	encenderBombas@i^0,w,c
  2436  000528  A0D8               	btfss	status,0,c
  2437  00052A  EF99  F002         	goto	u1971
  2438  00052E  EF9B  F002         	goto	u1970
  2439  000532                     u1971:
  2440  000532  EF5D  F002         	goto	l2657
  2441  000536                     u1970:
  2442  000536                     
  2443                           ;main.c: 298:     if (flagSeco)
  2444  000536  5005               	movf	encenderBombas@flagSeco^0,w,c
  2445  000538  B4D8               	btfsc	status,2,c
  2446  00053A  EFA1  F002         	goto	u1981
  2447  00053E  EFA3  F002         	goto	u1980
  2448  000542                     u1981:
  2449  000542  EFA6  F002         	goto	l245
  2450  000546                     u1980:
  2451  000546                     
  2452                           ;main.c: 299:         regando = 1;
  2453  000546  0E01               	movlw	1
  2454  000548  0100               	movlb	0	; () banked
  2455  00054A  6FC2               	movwf	_regando& (0+255),b
  2456  00054C                     l245:
  2457  00054C  0012               	return		;funcret
  2458  00054E                     __end_of_encenderBombas:
  2459                           	opt callstack 0
  2460                           
  2461 ;; *************** function _estaSeco *****************
  2462 ;; Defined at:
  2463 ;;		line 117 in file "main.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;  s               2    0[COMRAM] struct .
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  2    0[COMRAM] int 
  2470 ;; Registers used:
  2471 ;;		wreg, status,2, status,0
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2477 ;;      Params:         2       0       0       0       0       0       0       0       0
  2478 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2479 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2480 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2481 ;;Total ram usage:        2 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; Hardware stack levels required when called:    1
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		_encenderBombas
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text6
  2492  001B88                     __ptext6:
  2493                           	opt callstack 0
  2494  001B88                     _estaSeco:
  2495                           	opt callstack 27
  2496  001B88                     
  2497                           ;main.c: 118:     return s.humedadMedida >= 60;
  2498  001B88  0E3C               	movlw	60
  2499  001B8A  6001               	cpfslt	estaSeco@s^0,c
  2500  001B8C  EFCA  F00D         	goto	u1771
  2501  001B90  EFCD  F00D         	goto	u1770
  2502  001B94                     u1771:
  2503  001B94  0E01               	movlw	1
  2504  001B96  EFCE  F00D         	goto	u1780
  2505  001B9A                     u1770:
  2506  001B9A  0E00               	movlw	0
  2507  001B9C                     u1780:
  2508  001B9C  6E01               	movwf	?_estaSeco^0,c
  2509  001B9E  6A02               	clrf	(?_estaSeco+1)^0,c
  2510  001BA0  0012               	return		;funcret
  2511  001BA2                     __end_of_estaSeco:
  2512                           	opt callstack 0
  2513                           
  2514 ;; *************** function _dameHoraActual *****************
  2515 ;; Defined at:
  2516 ;;		line 136 in file "main.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;		None
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;		None
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  1    wreg      void 
  2523 ;; Registers used:
  2524 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2530 ;;      Params:         0       0       0       0       0       0       0       0       0
  2531 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2532 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2533 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2534 ;;Total ram usage:        0 bytes
  2535 ;; Hardware stack levels used:    1
  2536 ;; Hardware stack levels required when called:    4
  2537 ;; This function calls:
  2538 ;;		_convertirDato
  2539 ;;		_leer_rtc
  2540 ;; This function is called by:
  2541 ;;		_sistemaRegado
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text7
  2546  001AA8                     __ptext7:
  2547                           	opt callstack 0
  2548  001AA8                     _dameHoraActual:
  2549                           	opt callstack 25
  2550  001AA8                     
  2551                           ;main.c: 138:     segundos = convertirDato(leer_rtc(0x00));
  2552  001AA8  0E00               	movlw	0
  2553  001AAA  EC6A  F00D         	call	_leer_rtc
  2554  001AAE  ECA5  F00D         	call	_convertirDato
  2555  001AB2  0100               	movlb	0	; () banked
  2556  001AB4  6FC7               	movwf	_segundos& (0+255),b
  2557                           
  2558                           ;main.c: 139:     minutos = convertirDato(leer_rtc(0x01));
  2559  001AB6  0E01               	movlw	1
  2560  001AB8  EC6A  F00D         	call	_leer_rtc
  2561  001ABC  ECA5  F00D         	call	_convertirDato
  2562  001AC0  0100               	movlb	0	; () banked
  2563  001AC2  6FC8               	movwf	_minutos& (0+255),b
  2564                           
  2565                           ;main.c: 140:     hora = convertirDato(leer_rtc(0x02));
  2566  001AC4  0E02               	movlw	2
  2567  001AC6  EC6A  F00D         	call	_leer_rtc
  2568  001ACA  ECA5  F00D         	call	_convertirDato
  2569  001ACE  0100               	movlb	0	; () banked
  2570  001AD0  6FC9               	movwf	_hora& (0+255),b
  2571  001AD2                     
  2572                           ; BSR set to: 0
  2573  001AD2  0012               	return		;funcret
  2574  001AD4                     __end_of_dameHoraActual:
  2575                           	opt callstack 0
  2576                           
  2577 ;; *************** function _leer_rtc *****************
  2578 ;; Defined at:
  2579 ;;		line 13 in file "./RTC.h"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;  direccion       1    wreg     unsigned char 
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;  direccion       1    2[COMRAM] unsigned char 
  2584 ;;  dato            1    3[COMRAM] unsigned char 
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  1    wreg      unsigned char 
  2587 ;; Registers used:
  2588 ;;		wreg, status,2, status,0, cstack
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2594 ;;      Params:         0       0       0       0       0       0       0       0       0
  2595 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2596 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2597 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2598 ;;Total ram usage:        2 bytes
  2599 ;; Hardware stack levels used:    1
  2600 ;; Hardware stack levels required when called:    3
  2601 ;; This function calls:
  2602 ;;		_i2c_detener
  2603 ;;		_i2c_envia_dato
  2604 ;;		_i2c_inicia_com
  2605 ;;		_i2c_recibe_dato
  2606 ;;		_i2c_reinicia_com
  2607 ;; This function is called by:
  2608 ;;		_dameHoraActual
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           	psect	text8
  2613  001AD4                     __ptext8:
  2614                           	opt callstack 0
  2615  001AD4                     _leer_rtc:
  2616                           	opt callstack 25
  2617                           
  2618                           ; BSR set to: 0
  2619                           ;incstack = 0
  2620                           ;leer_rtc@direccion stored from wreg
  2621  001AD4  6E03               	movwf	leer_rtc@direccion^0,c
  2622  001AD6                     
  2623                           ;./RTC.h: 14:     unsigned char dato;;./RTC.h: 15:     i2c_inicia_com();
  2624  001AD6  EC10  F00E         	call	_i2c_inicia_com	;wreg free
  2625                           
  2626                           ;./RTC.h: 16:     i2c_envia_dato(0xD0);
  2627  001ADA  0ED0               	movlw	208
  2628  001ADC  EC01  F00E         	call	_i2c_envia_dato
  2629                           
  2630                           ;./RTC.h: 17:     i2c_envia_dato(direccion);
  2631  001AE0  5003               	movf	leer_rtc@direccion^0,w,c
  2632  001AE2  EC01  F00E         	call	_i2c_envia_dato
  2633                           
  2634                           ;./RTC.h: 18:     i2c_reinicia_com();
  2635  001AE6  EC0C  F00E         	call	_i2c_reinicia_com	;wreg free
  2636                           
  2637                           ;./RTC.h: 19:     i2c_envia_dato(0xD1);
  2638  001AEA  0ED1               	movlw	209
  2639  001AEC  EC01  F00E         	call	_i2c_envia_dato
  2640                           
  2641                           ;./RTC.h: 20:     dato = i2c_recibe_dato();
  2642  001AF0  ECD1  F00D         	call	_i2c_recibe_dato	;wreg free
  2643  001AF4  6E04               	movwf	leer_rtc@dato^0,c
  2644                           
  2645                           ;./RTC.h: 21:     i2c_detener();
  2646  001AF6  EC14  F00E         	call	_i2c_detener	;wreg free
  2647  001AFA                     
  2648                           ;./RTC.h: 22:     return dato;
  2649  001AFA  5004               	movf	leer_rtc@dato^0,w,c
  2650  001AFC  0012               	return		;funcret
  2651  001AFE                     __end_of_leer_rtc:
  2652                           	opt callstack 0
  2653                           
  2654 ;; *************** function _convertirDato *****************
  2655 ;; Defined at:
  2656 ;;		line 28 in file "./RTC.h"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;  dato            1    wreg     unsigned char 
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;  dato            1    1[COMRAM] unsigned char 
  2661 ;;  datoR           1    2[COMRAM] unsigned char 
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  1    wreg      unsigned char 
  2664 ;; Registers used:
  2665 ;;		wreg, status,2, status,0, prodl, prodh
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2671 ;;      Params:         0       0       0       0       0       0       0       0       0
  2672 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2673 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2674 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2675 ;;Total ram usage:        3 bytes
  2676 ;; Hardware stack levels used:    1
  2677 ;; Hardware stack levels required when called:    1
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_dameHoraActual
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           	psect	text9
  2686  001B4A                     __ptext9:
  2687                           	opt callstack 0
  2688  001B4A                     _convertirDato:
  2689                           	opt callstack 27
  2690                           
  2691                           ;incstack = 0
  2692                           ;convertirDato@dato stored from wreg
  2693  001B4A  6E02               	movwf	convertirDato@dato^0,c
  2694  001B4C                     
  2695                           ;./RTC.h: 30:     datoR = (dato & 0xF0) >> 4;
  2696  001B4C  3802               	swapf	convertirDato@dato^0,w,c
  2697  001B4E  0B0F               	andlw	15
  2698  001B50  0B0F               	andlw	15
  2699  001B52  6E03               	movwf	convertirDato@datoR^0,c
  2700  001B54                     
  2701                           ;./RTC.h: 31:     datoR = (datoR * 10) + (dato & 0x0F);
  2702  001B54  C002  F001         	movff	convertirDato@dato,??_convertirDato
  2703  001B58  0E0F               	movlw	15
  2704  001B5A  1601               	andwf	??_convertirDato^0,f,c
  2705  001B5C  5003               	movf	convertirDato@datoR^0,w,c
  2706  001B5E  0D0A               	mullw	10
  2707  001B60  50F3               	movf	243,w,c
  2708  001B62  2401               	addwf	??_convertirDato^0,w,c
  2709  001B64  6E03               	movwf	convertirDato@datoR^0,c
  2710  001B66                     
  2711                           ;./RTC.h: 32:     return datoR;
  2712  001B66  5003               	movf	convertirDato@datoR^0,w,c
  2713  001B68  0012               	return		;funcret
  2714  001B6A                     __end_of_convertirDato:
  2715                           	opt callstack 0
  2716                           
  2717 ;; *************** function _sistemaPrincipal *****************
  2718 ;; Defined at:
  2719 ;;		line 529 in file "main.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;  opcion          1    wreg     unsigned char 
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;  opcion          1   92[COMRAM] unsigned char 
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      void 
  2726 ;; Registers used:
  2727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2733 ;;      Params:         0       0       0       0       0       0       0       0       0
  2734 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2735 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2736 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2737 ;;Total ram usage:        3 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; Hardware stack levels required when called:   10
  2740 ;; This function calls:
  2741 ;;		_UART_printf
  2742 ;;		_asignarHorarios
  2743 ;;		_dameDatosSistema
  2744 ;;		_fijaHoraRtc
  2745 ;;		_mostrarMenu
  2746 ;;		_setTiempoRegar
  2747 ;; This function is called by:
  2748 ;;		_main
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           	psect	text10
  2753  0014C0                     __ptext10:
  2754                           	opt callstack 0
  2755  0014C0                     _sistemaPrincipal:
  2756                           	opt callstack 20
  2757                           
  2758                           ;incstack = 0
  2759                           ;sistemaPrincipal@opcion stored from wreg
  2760  0014C0  6E5D               	movwf	sistemaPrincipal@opcion^0,c
  2761  0014C2                     
  2762                           ;main.c: 531:     PIE1bits.RCIE = 0;
  2763  0014C2  9A9D               	bcf	157,5,c	;volatile
  2764                           
  2765                           ;main.c: 533:     switch (opcion) {
  2766  0014C4  EF7C  F00A         	goto	l3005
  2767  0014C8                     l2993:
  2768                           
  2769                           ;main.c: 536:             fijaHoraRtc();
  2770  0014C8  ECD5  F00A         	call	_fijaHoraRtc	;wreg free
  2771                           
  2772                           ;main.c: 537:             break;
  2773  0014CC  EF99  F00A         	goto	l3007
  2774  0014D0                     l2995:
  2775                           
  2776                           ;main.c: 540:             asignarHorarios();
  2777  0014D0  ECE1  F005         	call	_asignarHorarios	;wreg free
  2778                           
  2779                           ;main.c: 541:             break;
  2780  0014D4  EF99  F00A         	goto	l3007
  2781  0014D8                     l2997:
  2782                           
  2783                           ;main.c: 544:             setTiempoRegar();
  2784  0014D8  ECA7  F002         	call	_setTiempoRegar	;wreg free
  2785                           
  2786                           ;main.c: 545:             break;
  2787  0014DC  EF99  F00A         	goto	l3007
  2788  0014E0                     l2999:
  2789                           
  2790                           ;main.c: 548:             dameDatosSistema();
  2791  0014E0  EC11  F007         	call	_dameDatosSistema	;wreg free
  2792                           
  2793                           ;main.c: 549:             break;
  2794  0014E4  EF99  F00A         	goto	l3007
  2795  0014E8                     l3001:
  2796                           
  2797                           ;main.c: 553:             UART_printf("\r\n Solo se permiten numeros del 1 al 3 \r\n");
  2798  0014E8  0EF5               	movlw	low STR_28
  2799  0014EA  6E02               	movwf	UART_printf@cadena^0,c
  2800  0014EC  0E7D               	movlw	high STR_28
  2801  0014EE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  2802  0014F0  EC6D  F00B         	call	_UART_printf	;wreg free
  2803                           
  2804                           ;main.c: 554:             break;
  2805  0014F4  EF99  F00A         	goto	l3007
  2806  0014F8                     l3005:
  2807  0014F8  505D               	movf	sistemaPrincipal@opcion^0,w,c
  2808  0014FA  6E5B               	movwf	??_sistemaPrincipal^0,c
  2809  0014FC  6A5C               	clrf	(??_sistemaPrincipal+1)^0,c
  2810                           
  2811                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2812                           ; Switch size 1, requested type "simple"
  2813                           ; Number of cases is 1, Range of values is 0 to 0
  2814                           ; switch strategies available:
  2815                           ; Name         Instructions Cycles
  2816                           ; simple_byte            4     3 (average)
  2817                           ;	Chosen strategy is simple_byte
  2818  0014FE  505C               	movf	(??_sistemaPrincipal+1)^0,w,c
  2819  001500  0A00               	xorlw	0	; case 0
  2820  001502  B4D8               	btfsc	status,2,c
  2821  001504  EF86  F00A         	goto	l3193
  2822  001508  EF74  F00A         	goto	l3001
  2823  00150C                     l3193:
  2824                           
  2825                           ; Switch size 1, requested type "simple"
  2826                           ; Number of cases is 4, Range of values is 1 to 4
  2827                           ; switch strategies available:
  2828                           ; Name         Instructions Cycles
  2829                           ; simple_byte           13     7 (average)
  2830                           ;	Chosen strategy is simple_byte
  2831  00150C  505B               	movf	??_sistemaPrincipal^0,w,c
  2832  00150E  0A01               	xorlw	1	; case 1
  2833  001510  B4D8               	btfsc	status,2,c
  2834  001512  EF64  F00A         	goto	l2993
  2835  001516  0A03               	xorlw	3	; case 2
  2836  001518  B4D8               	btfsc	status,2,c
  2837  00151A  EF68  F00A         	goto	l2995
  2838  00151E  0A01               	xorlw	1	; case 3
  2839  001520  B4D8               	btfsc	status,2,c
  2840  001522  EF6C  F00A         	goto	l2997
  2841  001526  0A07               	xorlw	7	; case 4
  2842  001528  B4D8               	btfsc	status,2,c
  2843  00152A  EF70  F00A         	goto	l2999
  2844  00152E  EF74  F00A         	goto	l3001
  2845  001532                     l3007:
  2846                           
  2847                           ;main.c: 557:     mostrarMenu();
  2848  001532  EC9C  F00B         	call	_mostrarMenu	;wreg free
  2849  001536                     
  2850                           ;main.c: 558:     PIE1bits.RCIE = 1;
  2851  001536  8A9D               	bsf	157,5,c	;volatile
  2852  001538  0012               	return		;funcret
  2853  00153A                     __end_of_sistemaPrincipal:
  2854                           	opt callstack 0
  2855                           
  2856 ;; *************** function _setTiempoRegar *****************
  2857 ;; Defined at:
  2858 ;;		line 383 in file "main.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;		None
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;  i               2   18[COMRAM] int 
  2863 ;;  i               2   16[COMRAM] int 
  2864 ;;  Rx              1   21[COMRAM] unsigned char 
  2865 ;;  datoCapturad    1   20[COMRAM] unsigned char 
  2866 ;;  hora            1   15[COMRAM] unsigned char 
  2867 ;;  tiempoRegar     1   14[COMRAM] unsigned char 
  2868 ;; Return value:  Size  Location     Type
  2869 ;;                  1    wreg      void 
  2870 ;; Registers used:
  2871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2877 ;;      Params:         0       0       0       0       0       0       0       0       0
  2878 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2879 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2880 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2881 ;;Total ram usage:        8 bytes
  2882 ;; Hardware stack levels used:    1
  2883 ;; Hardware stack levels required when called:    5
  2884 ;; This function calls:
  2885 ;;		_UART_printf
  2886 ;;		_UART_read
  2887 ;;		_escribeHorariosMemoria
  2888 ;; This function is called by:
  2889 ;;		_sistemaPrincipal
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           	psect	text11
  2894  00054E                     __ptext11:
  2895                           	opt callstack 0
  2896  00054E                     _setTiempoRegar:
  2897                           	opt callstack 24
  2898  00054E                     
  2899                           ;main.c: 385:     unsigned char hora;;main.c: 386:     unsigned char tiempoRegar;;main.c
      +                          : 387:     unsigned char Rx;;main.c: 388:     char datoCapturado = 0;
  2900  00054E  0E00               	movlw	0
  2901  000550  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  2902  000552                     
  2903                           ;main.c: 390:     UART_printf("\r\n TIEMPO DE REGADO \r\n");
  2904  000552  0EA2               	movlw	low STR_12
  2905  000554  6E02               	movwf	UART_printf@cadena^0,c
  2906  000556  0E7F               	movlw	high STR_12
  2907  000558  6E03               	movwf	(UART_printf@cadena+1)^0,c
  2908  00055A  EC6D  F00B         	call	_UART_printf	;wreg free
  2909  00055E                     
  2910                           ;main.c: 391:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  2911  00055E  0E34               	movlw	low STR_7
  2912  000560  6E02               	movwf	UART_printf@cadena^0,c
  2913  000562  0E7D               	movlw	high STR_7
  2914  000564  6E03               	movwf	(UART_printf@cadena+1)^0,c
  2915  000566  EC6D  F00B         	call	_UART_printf	;wreg free
  2916                           
  2917                           ;main.c: 393:     for (int i = 0; i < 2; i++) {
  2918  00056A  0E00               	movlw	0
  2919  00056C  6E12               	movwf	(setTiempoRegar@i+1)^0,c
  2920  00056E  0E00               	movlw	0
  2921  000570  6E11               	movwf	setTiempoRegar@i^0,c
  2922  000572                     l2761:
  2923                           
  2924                           ;main.c: 394:         Rx = UART_read();
  2925  000572  ECF1  F00B         	call	_UART_read	;wreg free
  2926  000576  6E16               	movwf	setTiempoRegar@Rx^0,c
  2927  000578                     
  2928                           ;main.c: 395:         if (Rx >= 48 && Rx <= 57) {
  2929  000578  0E2F               	movlw	47
  2930  00057A  6416               	cpfsgt	setTiempoRegar@Rx^0,c
  2931  00057C  EFC2  F002         	goto	u2101
  2932  000580  EFC4  F002         	goto	u2100
  2933  000584                     u2101:
  2934  000584  EFE7  F002         	goto	l2781
  2935  000588                     u2100:
  2936  000588  0E3A               	movlw	58
  2937  00058A  6016               	cpfslt	setTiempoRegar@Rx^0,c
  2938  00058C  EFCA  F002         	goto	u2111
  2939  000590  EFCC  F002         	goto	u2110
  2940  000594                     u2111:
  2941  000594  EFE7  F002         	goto	l2781
  2942  000598                     u2110:
  2943  000598                     
  2944                           ;main.c: 396:             if (!i) {
  2945  000598  5011               	movf	setTiempoRegar@i^0,w,c
  2946  00059A  1012               	iorwf	(setTiempoRegar@i+1)^0,w,c
  2947  00059C  A4D8               	btfss	status,2,c
  2948  00059E  EFD3  F002         	goto	u2121
  2949  0005A2  EFD5  F002         	goto	u2120
  2950  0005A6                     u2121:
  2951  0005A6  EFDF  F002         	goto	l2775
  2952  0005AA                     u2120:
  2953  0005AA                     
  2954                           ;main.c: 397:                 Rx -= 48;
  2955  0005AA  0E30               	movlw	48
  2956  0005AC  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  2957  0005AE                     
  2958                           ;main.c: 398:                 hora = Rx;
  2959  0005AE  C016  F010         	movff	setTiempoRegar@Rx,setTiempoRegar@hora
  2960  0005B2                     
  2961                           ;main.c: 399:                 hora *= 10;
  2962  0005B2  0E0A               	movlw	10
  2963  0005B4  0210               	mulwf	setTiempoRegar@hora^0,c
  2964  0005B6  50F3               	movf	prodl,w,c
  2965  0005B8  6E10               	movwf	setTiempoRegar@hora^0,c
  2966                           
  2967                           ;main.c: 400:             } else {
  2968  0005BA  EFF1  F002         	goto	l2785
  2969  0005BE                     l2775:
  2970                           
  2971                           ;main.c: 401:                 datoCapturado = 1;
  2972  0005BE  0E01               	movlw	1
  2973  0005C0  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  2974  0005C2                     
  2975                           ;main.c: 402:                 Rx -= 48;
  2976  0005C2  0E30               	movlw	48
  2977  0005C4  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  2978  0005C6                     
  2979                           ;main.c: 403:                 hora += Rx;
  2980  0005C6  5016               	movf	setTiempoRegar@Rx^0,w,c
  2981  0005C8  2610               	addwf	setTiempoRegar@hora^0,f,c
  2982  0005CA  EFF1  F002         	goto	l2785
  2983  0005CE                     l2781:
  2984                           
  2985                           ;main.c: 406:             datoCapturado = 0;
  2986  0005CE  0E00               	movlw	0
  2987  0005D0  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  2988  0005D2                     
  2989                           ;main.c: 407:             UART_printf("\r\n DATO NO RECIBIDO \r\n");
  2990  0005D2  0EB9               	movlw	low STR_1
  2991  0005D4  6E02               	movwf	UART_printf@cadena^0,c
  2992  0005D6  0E7F               	movlw	high STR_1
  2993  0005D8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  2994  0005DA  EC6D  F00B         	call	_UART_printf	;wreg free
  2995                           
  2996                           ;main.c: 408:             break;
  2997  0005DE  EF01  F003         	goto	l2789
  2998  0005E2                     l2785:
  2999                           
  3000                           ;main.c: 410:     }
  3001  0005E2  4A11               	infsnz	setTiempoRegar@i^0,f,c
  3002  0005E4  2A12               	incf	(setTiempoRegar@i+1)^0,f,c
  3003  0005E6  BE12               	btfsc	(setTiempoRegar@i+1)^0,7,c
  3004  0005E8  EFFF  F002         	goto	u2131
  3005  0005EC  5012               	movf	(setTiempoRegar@i+1)^0,w,c
  3006  0005EE  E109               	bnz	u2130
  3007  0005F0  0E02               	movlw	2
  3008  0005F2  5C11               	subwf	setTiempoRegar@i^0,w,c
  3009  0005F4  A0D8               	btfss	status,0,c
  3010  0005F6  EFFF  F002         	goto	u2131
  3011  0005FA  EF01  F003         	goto	u2130
  3012  0005FE                     u2131:
  3013  0005FE  EFB9  F002         	goto	l2761
  3014  000602                     u2130:
  3015  000602                     l2789:
  3016                           
  3017                           ;main.c: 412:     if (datoCapturado && !esperandoDatos) {
  3018  000602  5015               	movf	setTiempoRegar@datoCapturado^0,w,c
  3019  000604  B4D8               	btfsc	status,2,c
  3020  000606  EF07  F003         	goto	u2141
  3021  00060A  EF09  F003         	goto	u2140
  3022  00060E                     u2141:
  3023  00060E  EF90  F003         	goto	l280
  3024  000612                     u2140:
  3025  000612  505E               	movf	_esperandoDatos^0,w,c
  3026  000614  A4D8               	btfss	status,2,c
  3027  000616  EF0F  F003         	goto	u2151
  3028  00061A  EF11  F003         	goto	u2150
  3029  00061E                     u2151:
  3030  00061E  EF90  F003         	goto	l280
  3031  000622                     u2150:
  3032  000622                     
  3033                           ;main.c: 414:         UART_printf("\r\n Ingrese los minutos que desee que se riegue en e
      +                          se horario ej: 15 \r\n");
  3034  000622  0EB5               	movlw	low STR_15
  3035  000624  6E02               	movwf	UART_printf@cadena^0,c
  3036  000626  0E7C               	movlw	high STR_15
  3037  000628  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3038  00062A  EC6D  F00B         	call	_UART_printf	;wreg free
  3039  00062E                     
  3040                           ;main.c: 416:         for (int i = 0; i < 2; i++) {
  3041  00062E  0E00               	movlw	0
  3042  000630  6E14               	movwf	(setTiempoRegar@i_720+1)^0,c
  3043  000632  0E00               	movlw	0
  3044  000634  6E13               	movwf	setTiempoRegar@i_720^0,c
  3045  000636                     l2801:
  3046                           
  3047                           ;main.c: 417:             Rx = UART_read();
  3048  000636  ECF1  F00B         	call	_UART_read	;wreg free
  3049  00063A  6E16               	movwf	setTiempoRegar@Rx^0,c
  3050  00063C                     
  3051                           ;main.c: 418:             if (Rx >= 48 && Rx <= 57) {
  3052  00063C  0E2F               	movlw	47
  3053  00063E  6416               	cpfsgt	setTiempoRegar@Rx^0,c
  3054  000640  EF24  F003         	goto	u2161
  3055  000644  EF26  F003         	goto	u2160
  3056  000648                     u2161:
  3057  000648  EF49  F003         	goto	l2821
  3058  00064C                     u2160:
  3059  00064C  0E3A               	movlw	58
  3060  00064E  6016               	cpfslt	setTiempoRegar@Rx^0,c
  3061  000650  EF2C  F003         	goto	u2171
  3062  000654  EF2E  F003         	goto	u2170
  3063  000658                     u2171:
  3064  000658  EF49  F003         	goto	l2821
  3065  00065C                     u2170:
  3066  00065C                     
  3067                           ;main.c: 419:                 if (!i) {
  3068  00065C  5013               	movf	setTiempoRegar@i_720^0,w,c
  3069  00065E  1014               	iorwf	(setTiempoRegar@i_720+1)^0,w,c
  3070  000660  A4D8               	btfss	status,2,c
  3071  000662  EF35  F003         	goto	u2181
  3072  000666  EF37  F003         	goto	u2180
  3073  00066A                     u2181:
  3074  00066A  EF41  F003         	goto	l2815
  3075  00066E                     u2180:
  3076  00066E                     
  3077                           ;main.c: 420:                     Rx -= 48;
  3078  00066E  0E30               	movlw	48
  3079  000670  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  3080  000672                     
  3081                           ;main.c: 421:                     tiempoRegar = Rx;
  3082  000672  C016  F00F         	movff	setTiempoRegar@Rx,setTiempoRegar@tiempoRegar
  3083  000676                     
  3084                           ;main.c: 422:                     tiempoRegar *= 10;
  3085  000676  0E0A               	movlw	10
  3086  000678  020F               	mulwf	setTiempoRegar@tiempoRegar^0,c
  3087  00067A  50F3               	movf	prodl,w,c
  3088  00067C  6E0F               	movwf	setTiempoRegar@tiempoRegar^0,c
  3089                           
  3090                           ;main.c: 423:                 } else {
  3091  00067E  EF53  F003         	goto	l2825
  3092  000682                     l2815:
  3093                           
  3094                           ;main.c: 424:                     datoCapturado = 1;
  3095  000682  0E01               	movlw	1
  3096  000684  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3097  000686                     
  3098                           ;main.c: 425:                     Rx -= 48;
  3099  000686  0E30               	movlw	48
  3100  000688  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  3101  00068A                     
  3102                           ;main.c: 426:                     tiempoRegar += Rx;
  3103  00068A  5016               	movf	setTiempoRegar@Rx^0,w,c
  3104  00068C  260F               	addwf	setTiempoRegar@tiempoRegar^0,f,c
  3105  00068E  EF53  F003         	goto	l2825
  3106  000692                     l2821:
  3107                           
  3108                           ;main.c: 429:                 datoCapturado = 0;
  3109  000692  0E00               	movlw	0
  3110  000694  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3111  000696                     
  3112                           ;main.c: 430:                 UART_printf("\r\n DATO NO RECIBIDO \r\n");
  3113  000696  0EB9               	movlw	low STR_1
  3114  000698  6E02               	movwf	UART_printf@cadena^0,c
  3115  00069A  0E7F               	movlw	high STR_1
  3116  00069C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3117  00069E  EC6D  F00B         	call	_UART_printf	;wreg free
  3118                           
  3119                           ;main.c: 431:                 break;
  3120  0006A2  EF63  F003         	goto	l2829
  3121  0006A6                     l2825:
  3122                           
  3123                           ;main.c: 433:         }
  3124  0006A6  4A13               	infsnz	setTiempoRegar@i_720^0,f,c
  3125  0006A8  2A14               	incf	(setTiempoRegar@i_720+1)^0,f,c
  3126  0006AA  BE14               	btfsc	(setTiempoRegar@i_720+1)^0,7,c
  3127  0006AC  EF61  F003         	goto	u2191
  3128  0006B0  5014               	movf	(setTiempoRegar@i_720+1)^0,w,c
  3129  0006B2  E109               	bnz	u2190
  3130  0006B4  0E02               	movlw	2
  3131  0006B6  5C13               	subwf	setTiempoRegar@i_720^0,w,c
  3132  0006B8  A0D8               	btfss	status,0,c
  3133  0006BA  EF61  F003         	goto	u2191
  3134  0006BE  EF63  F003         	goto	u2190
  3135  0006C2                     u2191:
  3136  0006C2  EF1B  F003         	goto	l2801
  3137  0006C6                     u2190:
  3138  0006C6                     l2829:
  3139                           
  3140                           ;main.c: 435:         if (datoCapturado && !esperandoDatos) {
  3141  0006C6  5015               	movf	setTiempoRegar@datoCapturado^0,w,c
  3142  0006C8  B4D8               	btfsc	status,2,c
  3143  0006CA  EF69  F003         	goto	u2201
  3144  0006CE  EF6B  F003         	goto	u2200
  3145  0006D2                     u2201:
  3146  0006D2  EF90  F003         	goto	l280
  3147  0006D6                     u2200:
  3148  0006D6  505E               	movf	_esperandoDatos^0,w,c
  3149  0006D8  A4D8               	btfss	status,2,c
  3150  0006DA  EF71  F003         	goto	u2211
  3151  0006DE  EF73  F003         	goto	u2210
  3152  0006E2                     u2211:
  3153  0006E2  EF90  F003         	goto	l280
  3154  0006E6                     u2210:
  3155  0006E6                     
  3156                           ;main.c: 437:             UART_printf("\r\n Minutos de riego establecidos! \r\n");
  3157  0006E6  0E45               	movlw	low STR_17
  3158  0006E8  6E02               	movwf	UART_printf@cadena^0,c
  3159  0006EA  0E7E               	movlw	high STR_17
  3160  0006EC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3161  0006EE  EC6D  F00B         	call	_UART_printf	;wreg free
  3162  0006F2                     
  3163                           ;main.c: 439:             horarios[hora].tiempoRegar = tiempoRegar;
  3164  0006F2  5010               	movf	setTiempoRegar@hora^0,w,c
  3165  0006F4  0D03               	mullw	3
  3166  0006F6  0E62               	movlw	low (_horarios+2)
  3167  0006F8  24F3               	addwf	243,w,c
  3168  0006FA  6ED9               	movwf	fsr2l,c
  3169  0006FC  0E00               	movlw	high (_horarios+2)
  3170  0006FE  20F4               	addwfc	prodh,w,c
  3171  000700  6EDA               	movwf	fsr2h,c
  3172  000702  C00F  FFDF         	movff	setTiempoRegar@tiempoRegar,indf2
  3173  000706                     
  3174                           ;main.c: 440:             minutosRegar = horarios[hora].tiempoRegar;
  3175  000706  5010               	movf	setTiempoRegar@hora^0,w,c
  3176  000708  0D03               	mullw	3
  3177  00070A  0E62               	movlw	low (_horarios+2)
  3178  00070C  24F3               	addwf	243,w,c
  3179  00070E  6ED9               	movwf	fsr2l,c
  3180  000710  0E00               	movlw	high (_horarios+2)
  3181  000712  20F4               	addwfc	prodh,w,c
  3182  000714  6EDA               	movwf	fsr2h,c
  3183  000716  50DF               	movf	indf2,w,c
  3184  000718  0100               	movlb	0	; () banked
  3185  00071A  6FC4               	movwf	_minutosRegar& (0+255),b
  3186  00071C                     
  3187                           ; BSR set to: 0
  3188                           ;main.c: 442:             escribeHorariosMemoria();
  3189  00071C  EC80  F007         	call	_escribeHorariosMemoria	;wreg free
  3190  000720                     l280:
  3191  000720  0012               	return		;funcret
  3192  000722                     __end_of_setTiempoRegar:
  3193                           	opt callstack 0
  3194                           
  3195 ;; *************** function _mostrarMenu *****************
  3196 ;; Defined at:
  3197 ;;		line 518 in file "main.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;		None
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      void 
  3204 ;; Registers used:
  3205 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3211 ;;      Params:         0       0       0       0       0       0       0       0       0
  3212 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3214 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3215 ;;Total ram usage:        0 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:    3
  3218 ;; This function calls:
  3219 ;;		_UART_printf
  3220 ;; This function is called by:
  3221 ;;		_sistemaPrincipal
  3222 ;;		_main
  3223 ;;		_lecturaWifi
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           	psect	text12
  3228  001738                     __ptext12:
  3229                           	opt callstack 0
  3230  001738                     _mostrarMenu:
  3231                           	opt callstack 26
  3232  001738                     
  3233                           ;main.c: 520:     UART_printf("\r\n Ingresa una opcion a Realizar: \r\n");
  3234  001738  0E6A               	movlw	low STR_21
  3235  00173A  6E02               	movwf	UART_printf@cadena^0,c
  3236  00173C  0E7E               	movlw	high STR_21
  3237  00173E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3238  001740  EC6D  F00B         	call	_UART_printf	;wreg free
  3239                           
  3240                           ;main.c: 521:     UART_printf("\r\n 1. Fijar Hora Actual \r\n");
  3241  001744  0E54               	movlw	low STR_22
  3242  001746  6E02               	movwf	UART_printf@cadena^0,c
  3243  001748  0E7F               	movlw	high STR_22
  3244  00174A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3245  00174C  EC6D  F00B         	call	_UART_printf	;wreg free
  3246                           
  3247                           ;main.c: 522:     UART_printf("\r\n 2. Asignar Horarios para regar \r\n");
  3248  001750  0EB4               	movlw	low STR_23
  3249  001752  6E02               	movwf	UART_printf@cadena^0,c
  3250  001754  0E7E               	movlw	high STR_23
  3251  001756  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3252  001758  EC6D  F00B         	call	_UART_printf	;wreg free
  3253                           
  3254                           ;main.c: 523:     UART_printf("\r\n 3. Programar tiempo de riego en un horario \r\n");
  3255  00175C  0E99               	movlw	low STR_24
  3256  00175E  6E02               	movwf	UART_printf@cadena^0,c
  3257  001760  0E7D               	movlw	high STR_24
  3258  001762  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3259  001764  EC6D  F00B         	call	_UART_printf	;wreg free
  3260                           
  3261                           ;main.c: 524:     UART_printf("\r\n 4. Dame datos del sistema \r\n");
  3262  001768  0EF9               	movlw	low STR_25
  3263  00176A  6E02               	movwf	UART_printf@cadena^0,c
  3264  00176C  0E7E               	movlw	high STR_25
  3265  00176E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3266  001770  EC6D  F00B         	call	_UART_printf	;wreg free
  3267                           
  3268                           ;main.c: 525:     UART_printf("\r\n Opcion:  \r");
  3269  001774  0EF0               	movlw	low STR_26
  3270  001776  6E02               	movwf	UART_printf@cadena^0,c
  3271  001778  0E7F               	movlw	high STR_26
  3272  00177A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3273  00177C  EC6D  F00B         	call	_UART_printf	;wreg free
  3274                           
  3275                           ;main.c: 526:     UART_printf("\r\n");
  3276  001780  0E86               	movlw	low (STR_10+23)
  3277  001782  6E02               	movwf	UART_printf@cadena^0,c
  3278  001784  0E7F               	movlw	high (STR_10+23)
  3279  001786  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3280  001788  EC6D  F00B         	call	_UART_printf	;wreg free
  3281  00178C  0012               	return		;funcret
  3282  00178E                     __end_of_mostrarMenu:
  3283                           	opt callstack 0
  3284                           
  3285 ;; *************** function _fijaHoraRtc *****************
  3286 ;; Defined at:
  3287 ;;		line 303 in file "main.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;		None
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;  dato            1    0        unsigned char 
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3301 ;;      Params:         0       0       0       0       0       0       0       0       0
  3302 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3303 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3304 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3305 ;;Total ram usage:        1 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    5
  3308 ;; This function calls:
  3309 ;;		_UART_printf
  3310 ;;		_escribe_rtc
  3311 ;;		_setRtc
  3312 ;; This function is called by:
  3313 ;;		_sistemaPrincipal
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           	psect	text13
  3318  0015AA                     __ptext13:
  3319                           	opt callstack 0
  3320  0015AA                     _fijaHoraRtc:
  3321                           	opt callstack 24
  3322  0015AA                     
  3323                           ;main.c: 307:     UART_printf("\r\n FIJA HORA \r\n");
  3324  0015AA  0ED0               	movlw	low STR_2
  3325  0015AC  6E02               	movwf	UART_printf@cadena^0,c
  3326  0015AE  0E7F               	movlw	high STR_2
  3327  0015B0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3328  0015B2  EC6D  F00B         	call	_UART_printf	;wreg free
  3329  0015B6                     
  3330                           ;main.c: 310:     UART_printf("\r\n Envie las Horas en formato 24 Ej: 15 \r\n");
  3331  0015B6  0ECA               	movlw	low STR_3
  3332  0015B8  6E02               	movwf	UART_printf@cadena^0,c
  3333  0015BA  0E7D               	movlw	high STR_3
  3334  0015BC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3335  0015BE  EC6D  F00B         	call	_UART_printf	;wreg free
  3336  0015C2                     
  3337                           ;main.c: 311:     setRtc(0x02);
  3338  0015C2  0E02               	movlw	2
  3339  0015C4  ECE7  F007         	call	_setRtc
  3340  0015C8                     
  3341                           ;main.c: 314:     if (!esperandoDatos) {
  3342  0015C8  505E               	movf	_esperandoDatos^0,w,c
  3343  0015CA  A4D8               	btfss	status,2,c
  3344  0015CC  EFEA  F00A         	goto	u1991
  3345  0015D0  EFEC  F00A         	goto	u1990
  3346  0015D4                     u1991:
  3347  0015D4  EFF5  F00A         	goto	l2683
  3348  0015D8                     u1990:
  3349  0015D8                     
  3350                           ;main.c: 315:         UART_printf("\r\n Envie los Minutos Ej: 25 \r\n");
  3351  0015D8  0E19               	movlw	low STR_4
  3352  0015DA  6E02               	movwf	UART_printf@cadena^0,c
  3353  0015DC  0E7F               	movlw	high STR_4
  3354  0015DE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3355  0015E0  EC6D  F00B         	call	_UART_printf	;wreg free
  3356                           
  3357                           ;main.c: 316:         setRtc(0x01);
  3358  0015E4  0E01               	movlw	1
  3359  0015E6  ECE7  F007         	call	_setRtc
  3360  0015EA                     l2683:
  3361                           
  3362                           ;main.c: 320:     if (!esperandoDatos) {
  3363  0015EA  505E               	movf	_esperandoDatos^0,w,c
  3364  0015EC  A4D8               	btfss	status,2,c
  3365  0015EE  EFFB  F00A         	goto	u2001
  3366  0015F2  EFFD  F00A         	goto	u2000
  3367  0015F6                     u2001:
  3368  0015F6  EF08  F00B         	goto	l250
  3369  0015FA                     u2000:
  3370  0015FA                     
  3371                           ;main.c: 322:         UART_printf("\r\n HORA ESTABLECIDA CORRECTAMENTE \r\n");
  3372  0015FA  0E8F               	movlw	low STR_5
  3373  0015FC  6E02               	movwf	UART_printf@cadena^0,c
  3374  0015FE  0E7E               	movlw	high STR_5
  3375  001600  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3376  001602  EC6D  F00B         	call	_UART_printf	;wreg free
  3377  001606                     
  3378                           ;main.c: 323:         escribe_rtc(0x00, 0);
  3379  001606  0E00               	movlw	0
  3380  001608  6E03               	movwf	escribe_rtc@dato^0,c
  3381  00160A  0E00               	movlw	0
  3382  00160C  ECB5  F00D         	call	_escribe_rtc
  3383  001610                     l250:
  3384  001610  0012               	return		;funcret
  3385  001612                     __end_of_fijaHoraRtc:
  3386                           	opt callstack 0
  3387                           
  3388 ;; *************** function _setRtc *****************
  3389 ;; Defined at:
  3390 ;;		line 143 in file "main.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  direccion       1    wreg     unsigned char 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  direccion       1    5[COMRAM] unsigned char 
  3395 ;;  Rx              1   10[COMRAM] unsigned char 
  3396 ;;  i               2    8[COMRAM] int 
  3397 ;;  datoCapturad    1    7[COMRAM] unsigned char 
  3398 ;;  dato            1    6[COMRAM] unsigned char 
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  1    wreg      void 
  3401 ;; Registers used:
  3402 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3408 ;;      Params:         0       0       0       0       0       0       0       0       0
  3409 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3410 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3411 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3412 ;;Total ram usage:        7 bytes
  3413 ;; Hardware stack levels used:    1
  3414 ;; Hardware stack levels required when called:    4
  3415 ;; This function calls:
  3416 ;;		_UART_printf
  3417 ;;		_UART_read
  3418 ;;		_escribe_rtc
  3419 ;; This function is called by:
  3420 ;;		_fijaHoraRtc
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           	psect	text14
  3425  000FCE                     __ptext14:
  3426                           	opt callstack 0
  3427  000FCE                     _setRtc:
  3428                           	opt callstack 24
  3429                           
  3430                           ;incstack = 0
  3431                           ;setRtc@direccion stored from wreg
  3432  000FCE  6E06               	movwf	setRtc@direccion^0,c
  3433  000FD0                     
  3434                           ;main.c: 144:     unsigned char dato;;main.c: 145:     char datoCapturado = 0;
  3435  000FD0  0E00               	movlw	0
  3436  000FD2  6E08               	movwf	setRtc@datoCapturado^0,c
  3437                           
  3438                           ;main.c: 147:     for (int i = 0; i < 2; i++) {
  3439  000FD4  0E00               	movlw	0
  3440  000FD6  6E0A               	movwf	(setRtc@i+1)^0,c
  3441  000FD8  0E00               	movlw	0
  3442  000FDA  6E09               	movwf	setRtc@i^0,c
  3443  000FDC                     l2511:
  3444                           
  3445                           ;main.c: 148:         char Rx = UART_read();
  3446  000FDC  ECF1  F00B         	call	_UART_read	;wreg free
  3447  000FE0  6E0B               	movwf	setRtc@Rx^0,c
  3448  000FE2                     
  3449                           ;main.c: 149:         if (Rx >= 48 && Rx <= 57) {
  3450  000FE2  0E2F               	movlw	47
  3451  000FE4  640B               	cpfsgt	setRtc@Rx^0,c
  3452  000FE6  EFF7  F007         	goto	u1791
  3453  000FEA  EFF9  F007         	goto	u1790
  3454  000FEE                     u1791:
  3455  000FEE  EF1D  F008         	goto	l2525
  3456  000FF2                     u1790:
  3457  000FF2  0E3A               	movlw	58
  3458  000FF4  600B               	cpfslt	setRtc@Rx^0,c
  3459  000FF6  EFFF  F007         	goto	u1801
  3460  000FFA  EF01  F008         	goto	u1800
  3461  000FFE                     u1801:
  3462  000FFE  EF1D  F008         	goto	l2525
  3463  001002                     u1800:
  3464  001002                     
  3465                           ;main.c: 150:             if (!i) {
  3466  001002  5009               	movf	setRtc@i^0,w,c
  3467  001004  100A               	iorwf	(setRtc@i+1)^0,w,c
  3468  001006  A4D8               	btfss	status,2,c
  3469  001008  EF08  F008         	goto	u1811
  3470  00100C  EF0A  F008         	goto	u1810
  3471  001010                     u1811:
  3472  001010  EF15  F008         	goto	l2521
  3473  001014                     u1810:
  3474  001014                     
  3475                           ;main.c: 151:                 dato = ((Rx - 48) & 0x0F) << 4;
  3476  001014  C00B  F005         	movff	setRtc@Rx,??_setRtc
  3477  001018  0ED0               	movlw	208
  3478  00101A  2605               	addwf	??_setRtc^0,f,c
  3479  00101C  0E0F               	movlw	15
  3480  00101E  1605               	andwf	??_setRtc^0,f,c
  3481  001020  3805               	swapf	??_setRtc^0,w,c
  3482  001022  0BF0               	andlw	240
  3483  001024  6E07               	movwf	setRtc@dato^0,c
  3484                           
  3485                           ;main.c: 152:             } else {
  3486  001026  EF27  F008         	goto	l2529
  3487  00102A                     l2521:
  3488                           
  3489                           ;main.c: 153:                 dato |= (Rx - 48) & 0x0F;
  3490  00102A  500B               	movf	setRtc@Rx^0,w,c
  3491  00102C  0FD0               	addlw	208
  3492  00102E  0B0F               	andlw	15
  3493  001030  1207               	iorwf	setRtc@dato^0,f,c
  3494  001032                     
  3495                           ;main.c: 154:                 datoCapturado = 1;
  3496  001032  0E01               	movlw	1
  3497  001034  6E08               	movwf	setRtc@datoCapturado^0,c
  3498  001036  EF27  F008         	goto	l2529
  3499  00103A                     l2525:
  3500                           
  3501                           ;main.c: 157:             datoCapturado = 0;
  3502  00103A  0E00               	movlw	0
  3503  00103C  6E08               	movwf	setRtc@datoCapturado^0,c
  3504  00103E                     
  3505                           ;main.c: 158:             UART_printf("\r\n DATO NO RECIBIDO \r\n");
  3506  00103E  0EB9               	movlw	low STR_1
  3507  001040  6E02               	movwf	UART_printf@cadena^0,c
  3508  001042  0E7F               	movlw	high STR_1
  3509  001044  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3510  001046  EC6D  F00B         	call	_UART_printf	;wreg free
  3511                           
  3512                           ;main.c: 159:             break;
  3513  00104A  EF37  F008         	goto	l2533
  3514  00104E                     l2529:
  3515                           
  3516                           ;main.c: 161:     }
  3517  00104E  4A09               	infsnz	setRtc@i^0,f,c
  3518  001050  2A0A               	incf	(setRtc@i+1)^0,f,c
  3519  001052  BE0A               	btfsc	(setRtc@i+1)^0,7,c
  3520  001054  EF35  F008         	goto	u1821
  3521  001058  500A               	movf	(setRtc@i+1)^0,w,c
  3522  00105A  E109               	bnz	u1820
  3523  00105C  0E02               	movlw	2
  3524  00105E  5C09               	subwf	setRtc@i^0,w,c
  3525  001060  A0D8               	btfss	status,0,c
  3526  001062  EF35  F008         	goto	u1821
  3527  001066  EF37  F008         	goto	u1820
  3528  00106A                     u1821:
  3529  00106A  EFEE  F007         	goto	l2511
  3530  00106E                     u1820:
  3531  00106E                     l2533:
  3532                           
  3533                           ;main.c: 163:     if (datoCapturado && !esperandoDatos)
  3534  00106E  5008               	movf	setRtc@datoCapturado^0,w,c
  3535  001070  B4D8               	btfsc	status,2,c
  3536  001072  EF3D  F008         	goto	u1831
  3537  001076  EF3F  F008         	goto	u1830
  3538  00107A                     u1831:
  3539  00107A  EF4C  F008         	goto	l202
  3540  00107E                     u1830:
  3541  00107E  505E               	movf	_esperandoDatos^0,w,c
  3542  001080  A4D8               	btfss	status,2,c
  3543  001082  EF45  F008         	goto	u1841
  3544  001086  EF47  F008         	goto	u1840
  3545  00108A                     u1841:
  3546  00108A  EF4C  F008         	goto	l202
  3547  00108E                     u1840:
  3548  00108E                     
  3549                           ;main.c: 164:         escribe_rtc(direccion, dato);
  3550  00108E  C007  F003         	movff	setRtc@dato,escribe_rtc@dato
  3551  001092  5006               	movf	setRtc@direccion^0,w,c
  3552  001094  ECB5  F00D         	call	_escribe_rtc
  3553  001098                     l202:
  3554  001098  0012               	return		;funcret
  3555  00109A                     __end_of_setRtc:
  3556                           	opt callstack 0
  3557                           
  3558 ;; *************** function _escribe_rtc *****************
  3559 ;; Defined at:
  3560 ;;		line 2 in file "./RTC.h"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;  direccion       1    wreg     unsigned char 
  3563 ;;  dato            1    2[COMRAM] unsigned char 
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;  direccion       1    3[COMRAM] unsigned char 
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      void 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2, status,0, cstack
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3575 ;;      Params:         1       0       0       0       0       0       0       0       0
  3576 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3577 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3578 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3579 ;;Total ram usage:        2 bytes
  3580 ;; Hardware stack levels used:    1
  3581 ;; Hardware stack levels required when called:    3
  3582 ;; This function calls:
  3583 ;;		_i2c_detener
  3584 ;;		_i2c_envia_dato
  3585 ;;		_i2c_inicia_com
  3586 ;; This function is called by:
  3587 ;;		_setRtc
  3588 ;;		_fijaHoraRtc
  3589 ;;		_setRtcDefault
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           	psect	text15
  3594  001B6A                     __ptext15:
  3595                           	opt callstack 0
  3596  001B6A                     _escribe_rtc:
  3597                           	opt callstack 24
  3598                           
  3599                           ;incstack = 0
  3600                           ;escribe_rtc@direccion stored from wreg
  3601  001B6A  6E04               	movwf	escribe_rtc@direccion^0,c
  3602  001B6C                     
  3603                           ;./RTC.h: 3:     i2c_inicia_com();
  3604  001B6C  EC10  F00E         	call	_i2c_inicia_com	;wreg free
  3605                           
  3606                           ;./RTC.h: 4:     i2c_envia_dato(0xD0);
  3607  001B70  0ED0               	movlw	208
  3608  001B72  EC01  F00E         	call	_i2c_envia_dato
  3609                           
  3610                           ;./RTC.h: 5:     i2c_envia_dato(direccion);
  3611  001B76  5004               	movf	escribe_rtc@direccion^0,w,c
  3612  001B78  EC01  F00E         	call	_i2c_envia_dato
  3613                           
  3614                           ;./RTC.h: 6:     i2c_envia_dato(dato);
  3615  001B7C  5003               	movf	escribe_rtc@dato^0,w,c
  3616  001B7E  EC01  F00E         	call	_i2c_envia_dato
  3617                           
  3618                           ;./RTC.h: 7:     i2c_detener();
  3619  001B82  EC14  F00E         	call	_i2c_detener	;wreg free
  3620  001B86  0012               	return		;funcret
  3621  001B88                     __end_of_escribe_rtc:
  3622                           	opt callstack 0
  3623                           
  3624 ;; *************** function _dameDatosSistema *****************
  3625 ;; Defined at:
  3626 ;;		line 600 in file "main.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;		None
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;  i               2   35[BANK0 ] int 
  3631 ;;  buffer         15   20[BANK0 ] unsigned char [15]
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  1    wreg      void 
  3634 ;; Registers used:
  3635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3641 ;;      Params:         0       0       0       0       0       0       0       0       0
  3642 ;;      Locals:         0      17       0       0       0       0       0       0       0
  3643 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3644 ;;      Totals:         3      17       0       0       0       0       0       0       0
  3645 ;;Total ram usage:       20 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; Hardware stack levels required when called:    9
  3648 ;; This function calls:
  3649 ;;		_UART_printf
  3650 ;;		___wmul
  3651 ;;		_sprintf
  3652 ;; This function is called by:
  3653 ;;		_sistemaPrincipal
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           	psect	text16
  3658  000E22                     __ptext16:
  3659                           	opt callstack 0
  3660  000E22                     _dameDatosSistema:
  3661                           	opt callstack 20
  3662  000E22                     
  3663                           ;main.c: 602:     char buffer[15];;main.c: 604:     UART_printf("\r\n\nHora | Regar(1 si
      +                           0 no) | Minutos de riego \r\n\n");
  3664  000E22  0E67               	movlw	low STR_29
  3665  000E24  6E02               	movwf	UART_printf@cadena^0,c
  3666  000E26  0E7D               	movlw	high STR_29
  3667  000E28  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3668  000E2A  EC6D  F00B         	call	_UART_printf	;wreg free
  3669  000E2E                     
  3670                           ;main.c: 606:     for (int i = 0; i < 24; i++) {
  3671  000E2E  0E00               	movlw	0
  3672  000E30  0100               	movlb	0	; () banked
  3673  000E32  6FF1               	movwf	(dameDatosSistema@i+1)& (0+255),b
  3674  000E34  0E00               	movlw	0
  3675  000E36  6FF0               	movwf	dameDatosSistema@i& (0+255),b
  3676  000E38                     l2865:
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;main.c: 608:         sprintf(buffer, "%d | %d | %d \r\n", horarios[i].hora, horarios[i]
      +                          .regar,
  3680  000E38  0EE1               	movlw	low dameDatosSistema@buffer
  3681  000E3A  6FCD               	movwf	sprintf@s& (0+255),b
  3682  000E3C  0E00               	movlw	high dameDatosSistema@buffer
  3683  000E3E  6FCE               	movwf	(sprintf@s+1)& (0+255),b
  3684  000E40  0EE0               	movlw	low STR_30
  3685  000E42  6FCF               	movwf	sprintf@fmt& (0+255),b
  3686  000E44  0E7F               	movlw	high STR_30
  3687  000E46  6FD0               	movwf	(sprintf@fmt+1)& (0+255),b
  3688  000E48  C0F0  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  3689  000E4C  C0F1  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  3690  000E50  0E00               	movlw	0
  3691  000E52  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3692  000E54  0E03               	movlw	3
  3693  000E56  6E03               	movwf	___wmul@multiplicand^0,c
  3694  000E58  EC92  F00D         	call	___wmul	;wreg free
  3695  000E5C  0E60               	movlw	low _horarios
  3696  000E5E  2401               	addwf	?___wmul^0,w,c
  3697  000E60  6ED9               	movwf	fsr2l,c
  3698  000E62  0E00               	movlw	high _horarios
  3699  000E64  2002               	addwfc	(?___wmul+1)^0,w,c
  3700  000E66  6EDA               	movwf	fsr2h,c
  3701  000E68  50DF               	movf	indf2,w,c
  3702  000E6A  6E58               	movwf	??_dameDatosSistema^0,c
  3703  000E6C  5058               	movf	??_dameDatosSistema^0,w,c
  3704  000E6E  0100               	movlb	0	; () banked
  3705  000E70  6FD1               	movwf	(?_sprintf+4)& (0+255),b
  3706  000E72  6BD2               	clrf	(?_sprintf+5)& (0+255),b
  3707  000E74  C0F0  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  3708  000E78  C0F1  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  3709  000E7C  0E00               	movlw	0
  3710  000E7E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3711  000E80  0E03               	movlw	3
  3712  000E82  6E03               	movwf	___wmul@multiplicand^0,c
  3713  000E84  EC92  F00D         	call	___wmul	;wreg free
  3714  000E88  0E61               	movlw	low (_horarios+1)
  3715  000E8A  2401               	addwf	?___wmul^0,w,c
  3716  000E8C  6ED9               	movwf	fsr2l,c
  3717  000E8E  0E00               	movlw	high (_horarios+1)
  3718  000E90  2002               	addwfc	(?___wmul+1)^0,w,c
  3719  000E92  6EDA               	movwf	fsr2h,c
  3720  000E94  50DF               	movf	indf2,w,c
  3721  000E96  6E59               	movwf	(??_dameDatosSistema+1)^0,c
  3722  000E98  5059               	movf	(??_dameDatosSistema+1)^0,w,c
  3723  000E9A  0100               	movlb	0	; () banked
  3724  000E9C  6FD3               	movwf	(?_sprintf+6)& (0+255),b
  3725  000E9E  6BD4               	clrf	(?_sprintf+7)& (0+255),b
  3726  000EA0  C0F0  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  3727  000EA4  C0F1  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  3728  000EA8  0E00               	movlw	0
  3729  000EAA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3730  000EAC  0E03               	movlw	3
  3731  000EAE  6E03               	movwf	___wmul@multiplicand^0,c
  3732  000EB0  EC92  F00D         	call	___wmul	;wreg free
  3733  000EB4  0E62               	movlw	low (_horarios+2)
  3734  000EB6  2401               	addwf	?___wmul^0,w,c
  3735  000EB8  6ED9               	movwf	fsr2l,c
  3736  000EBA  0E00               	movlw	high (_horarios+2)
  3737  000EBC  2002               	addwfc	(?___wmul+1)^0,w,c
  3738  000EBE  6EDA               	movwf	fsr2h,c
  3739  000EC0  50DF               	movf	indf2,w,c
  3740  000EC2  6E5A               	movwf	(??_dameDatosSistema+2)^0,c
  3741  000EC4  505A               	movf	(??_dameDatosSistema+2)^0,w,c
  3742  000EC6  0100               	movlb	0	; () banked
  3743  000EC8  6FD5               	movwf	(?_sprintf+8)& (0+255),b
  3744  000ECA  6BD6               	clrf	(?_sprintf+9)& (0+255),b
  3745  000ECC  EC1B  F00C         	call	_sprintf	;wreg free
  3746  000ED0                     
  3747                           ;main.c: 611:         UART_printf(buffer);
  3748  000ED0  0EE1               	movlw	low dameDatosSistema@buffer
  3749  000ED2  6E02               	movwf	UART_printf@cadena^0,c
  3750  000ED4  0E00               	movlw	high dameDatosSistema@buffer
  3751  000ED6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3752  000ED8  EC6D  F00B         	call	_UART_printf	;wreg free
  3753  000EDC                     
  3754                           ;main.c: 613:     }
  3755  000EDC  0100               	movlb	0	; () banked
  3756  000EDE  4BF0               	infsnz	dameDatosSistema@i& (0+255),f,b
  3757  000EE0  2BF1               	incf	(dameDatosSistema@i+1)& (0+255),f,b
  3758  000EE2                     
  3759                           ; BSR set to: 0
  3760  000EE2  BFF1               	btfsc	(dameDatosSistema@i+1)& (0+255),7,b
  3761  000EE4  EF7D  F007         	goto	u2231
  3762  000EE8  51F1               	movf	(dameDatosSistema@i+1)& (0+255),w,b
  3763  000EEA  E109               	bnz	u2230
  3764  000EEC  0E18               	movlw	24
  3765  000EEE  5DF0               	subwf	dameDatosSistema@i& (0+255),w,b
  3766  000EF0  A0D8               	btfss	status,0,c
  3767  000EF2  EF7D  F007         	goto	u2231
  3768  000EF6  EF7F  F007         	goto	u2230
  3769  000EFA                     u2231:
  3770  000EFA  EF1C  F007         	goto	l2865
  3771  000EFE                     u2230:
  3772  000EFE                     
  3773                           ; BSR set to: 0
  3774  000EFE  0012               	return		;funcret
  3775  000F00                     __end_of_dameDatosSistema:
  3776                           	opt callstack 0
  3777                           
  3778 ;; *************** function _sprintf *****************
  3779 ;; Defined at:
  3780 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;  s               2    0[BANK0 ] PTR unsigned char 
  3783 ;;		 -> dameDatosSistema@buffer(15), 
  3784 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  3785 ;;		 -> STR_30(16), 
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;  f               6   14[BANK0 ] struct _IO_FILE
  3788 ;;  ap              2   12[BANK0 ] PTR void [1]
  3789 ;;		 -> ?_sprintf(2), 
  3790 ;;  ret             2    0        int 
  3791 ;; Return value:  Size  Location     Type
  3792 ;;                  2    0[BANK0 ] int 
  3793 ;; Registers used:
  3794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3795 ;; Tracked objects:
  3796 ;;		On entry : 0/0
  3797 ;;		On exit  : 0/0
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3800 ;;      Params:         0      10       0       0       0       0       0       0       0
  3801 ;;      Locals:         0      10       0       0       0       0       0       0       0
  3802 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3803 ;;      Totals:         0      20       0       0       0       0       0       0       0
  3804 ;;Total ram usage:       20 bytes
  3805 ;; Hardware stack levels used:    1
  3806 ;; Hardware stack levels required when called:    8
  3807 ;; This function calls:
  3808 ;;		_vfprintf
  3809 ;; This function is called by:
  3810 ;;		_dameDatosSistema
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           	psect	text17
  3815  001836                     __ptext17:
  3816                           	opt callstack 0
  3817  001836                     _sprintf:
  3818                           	opt callstack 20
  3819  001836  0ED1               	movlw	low (?_sprintf+4)
  3820  001838  0100               	movlb	0	; () banked
  3821  00183A  6FD9               	movwf	sprintf@ap& (0+255),b
  3822  00183C  0E00               	movlw	high (?_sprintf+4)
  3823  00183E  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
  3824  001840  C0CD  F0DB         	movff	sprintf@s,sprintf@f
  3825  001844  C0CE  F0DC         	movff	sprintf@s+1,sprintf@f+1
  3826  001848                     
  3827                           ; BSR set to: 0
  3828  001848  0E00               	movlw	0
  3829  00184A  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  3830  00184C  0E00               	movlw	0
  3831  00184E  6FDD               	movwf	(sprintf@f+2)& (0+255),b
  3832  001850                     
  3833                           ; BSR set to: 0
  3834  001850  0E00               	movlw	0
  3835  001852  6FE0               	movwf	(sprintf@f+5)& (0+255),b
  3836  001854  0E00               	movlw	0
  3837  001856  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  3838  001858                     
  3839                           ; BSR set to: 0
  3840  001858  0EDB               	movlw	low sprintf@f
  3841  00185A  6E50               	movwf	vfprintf@fp^0,c
  3842  00185C  0E00               	movlw	high sprintf@f
  3843  00185E  6E51               	movwf	(vfprintf@fp+1)^0,c
  3844  001860  C0CF  F052         	movff	sprintf@fmt,vfprintf@fmt
  3845  001864  C0D0  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3846  001868  0ED9               	movlw	low sprintf@ap
  3847  00186A  6E54               	movwf	vfprintf@ap^0,c
  3848  00186C  0E00               	movlw	high sprintf@ap
  3849  00186E  6E55               	movwf	(vfprintf@ap+1)^0,c
  3850  001870  EC3C  F00B         	call	_vfprintf	;wreg free
  3851  001874  0100               	movlb	0	; () banked
  3852  001876  51DD               	movf	(sprintf@f+2)& (0+255),w,b
  3853  001878  25CD               	addwf	sprintf@s& (0+255),w,b
  3854  00187A  6ED9               	movwf	fsr2l,c
  3855  00187C  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  3856  00187E  21CE               	addwfc	(sprintf@s+1)& (0+255),w,b
  3857  001880  6EDA               	movwf	fsr2h,c
  3858  001882  0E00               	movlw	0
  3859  001884  6EDF               	movwf	indf2,c
  3860  001886                     
  3861                           ; BSR set to: 0
  3862  001886  0012               	return		;funcret
  3863  001888                     __end_of_sprintf:
  3864                           	opt callstack 0
  3865                           
  3866 ;; *************** function _vfprintf *****************
  3867 ;; Defined at:
  3868 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  3871 ;;		 -> sprintf@f(6), 
  3872 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  3873 ;;		 -> STR_30(16), 
  3874 ;;  ap              2   83[COMRAM] PTR PTR void 
  3875 ;;		 -> sprintf@ap(2), 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  3878 ;;		 -> STR_30(16), 
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  2   79[COMRAM] int 
  3881 ;; Registers used:
  3882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3888 ;;      Params:         6       0       0       0       0       0       0       0       0
  3889 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3890 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3891 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3892 ;;Total ram usage:        8 bytes
  3893 ;; Hardware stack levels used:    1
  3894 ;; Hardware stack levels required when called:    7
  3895 ;; This function calls:
  3896 ;;		_vfpfcnvrt
  3897 ;; This function is called by:
  3898 ;;		_sprintf
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           	psect	text18
  3903  001678                     __ptext18:
  3904                           	opt callstack 0
  3905  001678                     _vfprintf:
  3906                           	opt callstack 20
  3907  001678                     
  3908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3909  001678  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  3910  00167C  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3911  001680                     
  3912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3913  001680  0E00               	movlw	0
  3914  001682  0100               	movlb	0	; () banked
  3915  001684  6FB9               	movwf	(_nout+1)& (0+255),b
  3916  001686  0E00               	movlw	0
  3917  001688  6FB8               	movwf	_nout& (0+255),b
  3918                           
  3919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3920  00168A  EF5A  F00B         	goto	l2477
  3921  00168E                     l2475:
  3922                           
  3923                           ; BSR set to: 0
  3924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3925  00168E  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  3926  001692  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3927  001696  0E56               	movlw	low vfprintf@cfmt
  3928  001698  6E42               	movwf	vfpfcnvrt@fmt^0,c
  3929  00169A  0E00               	movlw	high vfprintf@cfmt
  3930  00169C  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3931  00169E  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  3932  0016A2  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3933  0016A6  EC91  F003         	call	_vfpfcnvrt	;wreg free
  3934  0016AA  5040               	movf	?_vfpfcnvrt^0,w,c
  3935  0016AC  0100               	movlb	0	; () banked
  3936  0016AE  27B8               	addwf	_nout& (0+255),f,b
  3937  0016B0  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  3938  0016B2  23B9               	addwfc	(_nout+1)& (0+255),f,b
  3939  0016B4                     l2477:
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3943  0016B4  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  3944  0016B8  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3945  0016BC                     	if	0	;tblptru may be non-zero
  3946  0016BC                     	endif
  3947  0016BC                     	if	0	;tblptru may be non-zero
  3948  0016BC                     	endif
  3949  0016BC  0008               	tblrd		*
  3950  0016BE  50F5               	movf	tablat,w,c
  3951  0016C0  0900               	iorlw	0
  3952  0016C2  A4D8               	btfss	status,2,c
  3953  0016C4  EF66  F00B         	goto	u1761
  3954  0016C8  EF68  F00B         	goto	u1760
  3955  0016CC                     u1761:
  3956  0016CC  EF47  F00B         	goto	l2475
  3957  0016D0                     u1760:
  3958  0016D0                     
  3959                           ; BSR set to: 0
  3960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3961  0016D0  C0B8  F050         	movff	_nout,?_vfprintf
  3962  0016D4  C0B9  F051         	movff	_nout+1,?_vfprintf+1
  3963  0016D8                     
  3964                           ; BSR set to: 0
  3965  0016D8  0012               	return		;funcret
  3966  0016DA                     __end_of_vfprintf:
  3967                           	opt callstack 0
  3968                           
  3969 ;; *************** function _vfpfcnvrt *****************
  3970 ;; Defined at:
  3971 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  3974 ;;		 -> sprintf@f(6), 
  3975 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  3976 ;;		 -> vfprintf@cfmt(2), 
  3977 ;;  ap              2   67[COMRAM] PTR PTR void 
  3978 ;;		 -> sprintf@ap(2), 
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;  ll              8   71[COMRAM] long long 
  3981 ;;  llu             8    0        unsigned long long 
  3982 ;;  f               4    0        unsigned long long 
  3983 ;;  vp              3    0        PTR void 
  3984 ;;  ct              3    0        unsigned char [3]
  3985 ;;  cp              3    0        PTR unsigned char 
  3986 ;;  i               2    0        int 
  3987 ;;  done            2    0        int 
  3988 ;;  c               1    0        unsigned char 
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  2   63[COMRAM] int 
  3991 ;; Registers used:
  3992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3998 ;;      Params:         6       0       0       0       0       0       0       0       0
  3999 ;;      Locals:         8       0       0       0       0       0       0       0       0
  4000 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4001 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4002 ;;Total ram usage:       16 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; Hardware stack levels required when called:    6
  4005 ;; This function calls:
  4006 ;;		_dtoa
  4007 ;;		_fputc
  4008 ;; This function is called by:
  4009 ;;		_vfprintf
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           	psect	text19
  4014  000722                     __ptext19:
  4015                           	opt callstack 0
  4016  000722                     _vfpfcnvrt:
  4017                           	opt callstack 20
  4018  000722                     
  4019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4020  000722  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4021  000726  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4022  00072A  CFDE FFF6          	movff	postinc2,tblptrl
  4023  00072E  CFDD FFF7          	movff	postdec2,tblptrh
  4024  000732                     	if	0	;tblptru may be non-zero
  4025  000732                     	endif
  4026  000732                     	if	0	;tblptru may be non-zero
  4027  000732                     	endif
  4028  000732  0008               	tblrd		*
  4029  000734  50F5               	movf	tablat,w,c
  4030  000736  0A25               	xorlw	37
  4031  000738  A4D8               	btfss	status,2,c
  4032  00073A  EFA1  F003         	goto	u1661
  4033  00073E  EFA3  F003         	goto	u1660
  4034  000742                     u1661:
  4035  000742  EF4F  F004         	goto	l2419
  4036  000746                     u1660:
  4037  000746                     
  4038                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4039  000746  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4040  00074A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4041  00074E  2ADE               	incf	postinc2,f,c
  4042  000750  0E00               	movlw	0
  4043  000752  22DD               	addwfc	postdec2,f,c
  4044  000754                     
  4045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4046  000754  0E00               	movlw	0
  4047  000756  0100               	movlb	0	; () banked
  4048  000758  6FBB               	movwf	(_width+1)& (0+255),b
  4049  00075A  0E00               	movlw	0
  4050  00075C  6FBA               	movwf	_width& (0+255),b
  4051  00075E  C0BA  F0BE         	movff	_width,_flags
  4052  000762  C0BB  F0BF         	movff	_width+1,_flags+1
  4053  000766                     
  4054                           ; BSR set to: 0
  4055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4056  000766  69BC               	setf	_prec& (0+255),b
  4057  000768  69BD               	setf	(_prec+1)& (0+255),b
  4058  00076A                     
  4059                           ; BSR set to: 0
  4060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4061  00076A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4062  00076E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4063  000772  CFDE FFF6          	movff	postinc2,tblptrl
  4064  000776  CFDD FFF7          	movff	postdec2,tblptrh
  4065  00077A                     	if	0	;tblptru may be non-zero
  4066  00077A                     	endif
  4067  00077A                     	if	0	;tblptru may be non-zero
  4068  00077A                     	endif
  4069  00077A  0008               	tblrd		*
  4070  00077C  50F5               	movf	tablat,w,c
  4071  00077E  0A64               	xorlw	100
  4072  000780  B4D8               	btfsc	status,2,c
  4073  000782  EFC5  F003         	goto	u1671
  4074  000786  EFC7  F003         	goto	u1670
  4075  00078A                     u1671:
  4076  00078A  EFD9  F003         	goto	l2397
  4077  00078E                     u1670:
  4078  00078E                     
  4079                           ; BSR set to: 0
  4080  00078E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4081  000792  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4082  000796  CFDE FFF6          	movff	postinc2,tblptrl
  4083  00079A  CFDD FFF7          	movff	postdec2,tblptrh
  4084  00079E                     	if	0	;tblptru may be non-zero
  4085  00079E                     	endif
  4086  00079E                     	if	0	;tblptru may be non-zero
  4087  00079E                     	endif
  4088  00079E  0008               	tblrd		*
  4089  0007A0  50F5               	movf	tablat,w,c
  4090  0007A2  0A69               	xorlw	105
  4091  0007A4  A4D8               	btfss	status,2,c
  4092  0007A6  EFD7  F003         	goto	u1681
  4093  0007AA  EFD9  F003         	goto	u1680
  4094  0007AE                     u1681:
  4095  0007AE  EF19  F004         	goto	l2403
  4096  0007B2                     u1680:
  4097  0007B2                     l2397:
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4101  0007B2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4102  0007B6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4103  0007BA  2ADE               	incf	postinc2,f,c
  4104  0007BC  0E00               	movlw	0
  4105  0007BE  22DD               	addwfc	postdec2,f,c
  4106                           
  4107                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4108  0007C0  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4109  0007C4  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4110  0007C8  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4111  0007CC  0E02               	movlw	2
  4112  0007CE  26DE               	addwf	postinc2,f,c
  4113  0007D0  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4114  0007D4  0E00               	movlw	0
  4115  0007D6  22DD               	addwfc	postdec2,f,c
  4116  0007D8  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4117  0007DC  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4118  0007E0  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  4119  0007E4  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  4120  0007E8  0E00               	movlw	0
  4121  0007EA  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4122  0007EC  0EFF               	movlw	-1
  4123  0007EE  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  4124  0007F0  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  4125  0007F2  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  4126  0007F4  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  4127  0007F6  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  4128  0007F8  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  4129  0007FA                     
  4130                           ; BSR set to: 0
  4131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4132  0007FA  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  4133  0007FE  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4134  000802  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  4135  000806  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4136  00080A  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4137  00080E  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4138  000812  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4139  000816  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4140  00081A  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4141  00081E  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4142  000822  EC09  F000         	call	_dtoa	;wreg free
  4143  000826  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  4144  00082A  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4145  00082E  EF6A  F004         	goto	l405
  4146  000832                     l2403:
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4150  000832  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4151  000836  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4152  00083A  CFDE FFF6          	movff	postinc2,tblptrl
  4153  00083E  CFDD FFF7          	movff	postdec2,tblptrh
  4154  000842                     	if	0	;tblptru may be non-zero
  4155  000842                     	endif
  4156  000842                     	if	0	;tblptru may be non-zero
  4157  000842                     	endif
  4158  000842  0008               	tblrd		*
  4159  000844  50F5               	movf	tablat,w,c
  4160  000846  0A25               	xorlw	37
  4161  000848  A4D8               	btfss	status,2,c
  4162  00084A  EF29  F004         	goto	u1691
  4163  00084E  EF2B  F004         	goto	u1690
  4164  000852                     u1691:
  4165  000852  EF42  F004         	goto	l2413
  4166  000856                     u1690:
  4167  000856                     
  4168                           ; BSR set to: 0
  4169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4170  000856  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4171  00085A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4172  00085E  2ADE               	incf	postinc2,f,c
  4173  000860  0E00               	movlw	0
  4174  000862  22DD               	addwfc	postdec2,f,c
  4175  000864                     
  4176                           ; BSR set to: 0
  4177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4178  000864  0E00               	movlw	0
  4179  000866  6E02               	movwf	(fputc@c+1)^0,c
  4180  000868  0E25               	movlw	37
  4181  00086A  6E01               	movwf	fputc@c^0,c
  4182  00086C  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4183  000870  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4184  000874  EC4D  F008         	call	_fputc	;wreg free
  4185  000878                     l2409:
  4186                           
  4187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4188  000878  0E00               	movlw	0
  4189  00087A  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  4190  00087C  0E01               	movlw	1
  4191  00087E  6E40               	movwf	?_vfpfcnvrt^0,c
  4192  000880  EF6A  F004         	goto	l405
  4193  000884                     l2413:
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4197  000884  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4198  000888  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4199  00088C  2ADE               	incf	postinc2,f,c
  4200  00088E  0E00               	movlw	0
  4201  000890  22DD               	addwfc	postdec2,f,c
  4202  000892                     
  4203                           ; BSR set to: 0
  4204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4205  000892  0E00               	movlw	0
  4206  000894  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  4207  000896  0E00               	movlw	0
  4208  000898  6E40               	movwf	?_vfpfcnvrt^0,c
  4209  00089A  EF6A  F004         	goto	l405
  4210  00089E                     l2419:
  4211                           
  4212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4213  00089E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4214  0008A2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4215  0008A6  CFDE FFF6          	movff	postinc2,tblptrl
  4216  0008AA  CFDD FFF7          	movff	postdec2,tblptrh
  4217  0008AE                     	if	0	;tblptru may be non-zero
  4218  0008AE                     	endif
  4219  0008AE                     	if	0	;tblptru may be non-zero
  4220  0008AE                     	endif
  4221  0008AE  0008               	tblrd		*
  4222  0008B0  50F5               	movf	tablat,w,c
  4223  0008B2  6E01               	movwf	fputc@c^0,c
  4224  0008B4  6A02               	clrf	(fputc@c+1)^0,c
  4225  0008B6  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4226  0008BA  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4227  0008BE  EC4D  F008         	call	_fputc	;wreg free
  4228  0008C2                     
  4229                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  4230  0008C2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4231  0008C6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4232  0008CA  2ADE               	incf	postinc2,f,c
  4233  0008CC  0E00               	movlw	0
  4234  0008CE  22DD               	addwfc	postdec2,f,c
  4235  0008D0  EF3C  F004         	goto	l2409
  4236  0008D4                     l405:
  4237  0008D4  0012               	return		;funcret
  4238  0008D6                     __end_of_vfpfcnvrt:
  4239                           	opt callstack 0
  4240                           
  4241 ;; *************** function _dtoa *****************
  4242 ;; Defined at:
  4243 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4246 ;;		 -> sprintf@f(6), 
  4247 ;;  d               8   29[COMRAM] long long 
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;  n               8   53[COMRAM] long long 
  4250 ;;  i               2   61[COMRAM] int 
  4251 ;;  s               2   51[COMRAM] int 
  4252 ;;  w               2   49[COMRAM] int 
  4253 ;;  p               2   47[COMRAM] int 
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  2   27[COMRAM] int 
  4256 ;; Registers used:
  4257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4263 ;;      Params:        10       0       0       0       0       0       0       0       0
  4264 ;;      Locals:        18       0       0       0       0       0       0       0       0
  4265 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4266 ;;      Totals:        36       0       0       0       0       0       0       0       0
  4267 ;;Total ram usage:       36 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:    5
  4270 ;; This function calls:
  4271 ;;		___aodiv
  4272 ;;		___aomod
  4273 ;;		_abs
  4274 ;;		_pad
  4275 ;; This function is called by:
  4276 ;;		_vfpfcnvrt
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text20
  4281  000012                     __ptext20:
  4282                           	opt callstack 0
  4283  000012                     _dtoa:
  4284                           	opt callstack 20
  4285  000012                     
  4286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  4287  000012  C01E  F036         	movff	dtoa@d,dtoa@n
  4288  000016  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  4289  00001A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  4290  00001E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  4291  000022  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  4292  000026  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  4293  00002A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  4294  00002E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  4295  000032                     
  4296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  4297  000032  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  4298  000034  EF1E  F000         	goto	u1501
  4299  000038  EF21  F000         	goto	u1500
  4300  00003C                     u1501:
  4301  00003C  0E01               	movlw	1
  4302  00003E  EF22  F000         	goto	u1510
  4303  000042                     u1500:
  4304  000042  0E00               	movlw	0
  4305  000044                     u1510:
  4306  000044  6E34               	movwf	dtoa@s^0,c
  4307  000046  6A35               	clrf	(dtoa@s+1)^0,c
  4308                           
  4309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  4310  000048  5034               	movf	dtoa@s^0,w,c
  4311  00004A  1035               	iorwf	(dtoa@s+1)^0,w,c
  4312  00004C  B4D8               	btfsc	status,2,c
  4313  00004E  EF2B  F000         	goto	u1521
  4314  000052  EF2D  F000         	goto	u1520
  4315  000056                     u1521:
  4316  000056  EF3D  F000         	goto	l2311
  4317  00005A                     u1520:
  4318  00005A                     
  4319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  4320  00005A  1E3D               	comf	(dtoa@n+7)^0,f,c
  4321  00005C  1E3C               	comf	(dtoa@n+6)^0,f,c
  4322  00005E  1E3B               	comf	(dtoa@n+5)^0,f,c
  4323  000060  1E3A               	comf	(dtoa@n+4)^0,f,c
  4324  000062  1E39               	comf	(dtoa@n+3)^0,f,c
  4325  000064  1E38               	comf	(dtoa@n+2)^0,f,c
  4326  000066  1E37               	comf	(dtoa@n+1)^0,f,c
  4327  000068  6C36               	negf	dtoa@n^0,c
  4328  00006A  0E00               	movlw	0
  4329  00006C  2237               	addwfc	(dtoa@n+1)^0,f,c
  4330  00006E  2238               	addwfc	(dtoa@n+2)^0,f,c
  4331  000070  2239               	addwfc	(dtoa@n+3)^0,f,c
  4332  000072  223A               	addwfc	(dtoa@n+4)^0,f,c
  4333  000074  223B               	addwfc	(dtoa@n+5)^0,f,c
  4334  000076  223C               	addwfc	(dtoa@n+6)^0,f,c
  4335  000078  223D               	addwfc	(dtoa@n+7)^0,f,c
  4336  00007A                     l2311:
  4337                           
  4338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  4339  00007A  0100               	movlb	0	; () banked
  4340  00007C  BFBD               	btfsc	(_prec+1)& (0+255),7,b
  4341  00007E  EF43  F000         	goto	u1531
  4342  000082  EF45  F000         	goto	u1530
  4343  000086                     u1531:
  4344  000086  EF46  F000         	goto	l2315
  4345  00008A                     u1530:
  4346  00008A                     
  4347                           ; BSR set to: 0
  4348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  4349  00008A  93BE               	bcf	_flags& (0+255),1,b
  4350  00008C                     l2315:
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  4354  00008C  BFBD               	btfsc	(_prec+1)& (0+255),7,b
  4355  00008E  EF53  F000         	goto	u1540
  4356  000092  51BD               	movf	(_prec+1)& (0+255),w,b
  4357  000094  E106               	bnz	u1541
  4358  000096  05BC               	decf	_prec& (0+255),w,b
  4359  000098  B0D8               	btfsc	status,0,c
  4360  00009A  EF51  F000         	goto	u1541
  4361  00009E  EF53  F000         	goto	u1540
  4362  0000A2                     u1541:
  4363  0000A2  EF59  F000         	goto	l378
  4364  0000A6                     u1540:
  4365  0000A6                     
  4366                           ; BSR set to: 0
  4367  0000A6  0E00               	movlw	0
  4368  0000A8  6E31               	movwf	(dtoa@p+1)^0,c
  4369  0000AA  0E01               	movlw	1
  4370  0000AC  6E30               	movwf	dtoa@p^0,c
  4371  0000AE  EF5D  F000         	goto	l380
  4372  0000B2                     l378:
  4373                           
  4374                           ; BSR set to: 0
  4375  0000B2  C0BC  F030         	movff	_prec,dtoa@p
  4376  0000B6  C0BD  F031         	movff	_prec+1,dtoa@p+1
  4377  0000BA                     l380:
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  4381  0000BA  C0BA  F032         	movff	_width,dtoa@w
  4382  0000BE  C0BB  F033         	movff	_width+1,dtoa@w+1
  4383  0000C2                     
  4384                           ; BSR set to: 0
  4385                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  4386  0000C2  5034               	movf	dtoa@s^0,w,c
  4387  0000C4  1035               	iorwf	(dtoa@s+1)^0,w,c
  4388  0000C6  A4D8               	btfss	status,2,c
  4389  0000C8  EF68  F000         	goto	u1551
  4390  0000CC  EF6A  F000         	goto	u1550
  4391  0000D0                     u1551:
  4392  0000D0  EF71  F000         	goto	l2323
  4393  0000D4                     u1550:
  4394  0000D4                     
  4395                           ; BSR set to: 0
  4396  0000D4  A5BE               	btfss	_flags& (0+255),2,b
  4397  0000D6  EF6F  F000         	goto	u1561
  4398  0000DA  EF71  F000         	goto	u1560
  4399  0000DE                     u1561:
  4400  0000DE  EF74  F000         	goto	l2325
  4401  0000E2                     u1560:
  4402  0000E2                     l2323:
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  4406  0000E2  0632               	decf	dtoa@w^0,f,c
  4407  0000E4  A0D8               	btfss	status,0,c
  4408  0000E6  0633               	decf	(dtoa@w+1)^0,f,c
  4409  0000E8                     l2325:
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  4413  0000E8  0E00               	movlw	0
  4414  0000EA  6E3F               	movwf	(dtoa@i+1)^0,c
  4415  0000EC  0E1F               	movlw	31
  4416  0000EE  6E3E               	movwf	dtoa@i^0,c
  4417  0000F0                     
  4418                           ; BSR set to: 0
  4419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  4420  0000F0  0E00               	movlw	0
  4421  0000F2  0101               	movlb	1	; () banked
  4422  0000F4  6F1F               	movwf	(_dbuf+31)& (0+255),b
  4423                           
  4424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4425  0000F6  EFF9  F000         	goto	l2339
  4426  0000FA                     l2329:
  4427                           
  4428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  4429  0000FA  063E               	decf	dtoa@i^0,f,c
  4430  0000FC  A0D8               	btfss	status,0,c
  4431  0000FE  063F               	decf	(dtoa@i+1)^0,f,c
  4432  000100                     
  4433                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  4434  000100  0E00               	movlw	low _dbuf
  4435  000102  243E               	addwf	dtoa@i^0,w,c
  4436  000104  6ED9               	movwf	fsr2l,c
  4437  000106  0E01               	movlw	high _dbuf
  4438  000108  203F               	addwfc	(dtoa@i+1)^0,w,c
  4439  00010A  6EDA               	movwf	fsr2h,c
  4440  00010C  C036  F001         	movff	dtoa@n,___aomod@dividend
  4441  000110  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  4442  000114  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  4443  000118  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  4444  00011C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  4445  000120  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  4446  000124  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  4447  000128  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  4448  00012C  0E0A               	movlw	10
  4449  00012E  6E09               	movwf	___aomod@divisor^0,c
  4450  000130  0E00               	movlw	0
  4451  000132  6E0A               	movwf	(___aomod@divisor+1)^0,c
  4452  000134  0E00               	movlw	0
  4453  000136  6E0B               	movwf	(___aomod@divisor+2)^0,c
  4454  000138  0E00               	movlw	0
  4455  00013A  6E0C               	movwf	(___aomod@divisor+3)^0,c
  4456  00013C  0E00               	movlw	0
  4457  00013E  6E0D               	movwf	(___aomod@divisor+4)^0,c
  4458  000140  0E00               	movlw	0
  4459  000142  6E0E               	movwf	(___aomod@divisor+5)^0,c
  4460  000144  0E00               	movlw	0
  4461  000146  6E0F               	movwf	(___aomod@divisor+6)^0,c
  4462  000148  0E00               	movlw	0
  4463  00014A  6E10               	movwf	(___aomod@divisor+7)^0,c
  4464  00014C  EC2F  F005         	call	___aomod	;wreg free
  4465  000150  C001  F026         	movff	?___aomod,??_dtoa
  4466  000154  C002  F027         	movff	?___aomod+1,??_dtoa+1
  4467  000158  C003  F028         	movff	?___aomod+2,??_dtoa+2
  4468  00015C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  4469  000160  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  4470  000164  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  4471  000168  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  4472  00016C  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  4473  000170  C026  F013         	movff	??_dtoa,abs@a
  4474  000174  C028  F014         	movff	??_dtoa+2,abs@a+1
  4475  000178  ECB2  F00C         	call	_abs	;wreg free
  4476  00017C  5013               	movf	?_abs^0,w,c
  4477  00017E  0F30               	addlw	48
  4478  000180  6EDF               	movwf	indf2,c
  4479  000182                     
  4480                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  4481  000182  0630               	decf	dtoa@p^0,f,c
  4482  000184  A0D8               	btfss	status,0,c
  4483  000186  0631               	decf	(dtoa@p+1)^0,f,c
  4484  000188                     
  4485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  4486  000188  0632               	decf	dtoa@w^0,f,c
  4487  00018A  A0D8               	btfss	status,0,c
  4488  00018C  0633               	decf	(dtoa@w+1)^0,f,c
  4489  00018E                     
  4490                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  4491  00018E  C036  F001         	movff	dtoa@n,___aodiv@dividend
  4492  000192  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  4493  000196  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  4494  00019A  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  4495  00019E  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  4496  0001A2  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  4497  0001A6  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  4498  0001AA  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  4499  0001AE  0E0A               	movlw	10
  4500  0001B0  6E09               	movwf	___aodiv@divisor^0,c
  4501  0001B2  0E00               	movlw	0
  4502  0001B4  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  4503  0001B6  0E00               	movlw	0
  4504  0001B8  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  4505  0001BA  0E00               	movlw	0
  4506  0001BC  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  4507  0001BE  0E00               	movlw	0
  4508  0001C0  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  4509  0001C2  0E00               	movlw	0
  4510  0001C4  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  4511  0001C6  0E00               	movlw	0
  4512  0001C8  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  4513  0001CA  0E00               	movlw	0
  4514  0001CC  6E10               	movwf	(___aodiv@divisor+7)^0,c
  4515  0001CE  EC6B  F004         	call	___aodiv	;wreg free
  4516  0001D2  C001  F036         	movff	?___aodiv,dtoa@n
  4517  0001D6  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  4518  0001DA  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  4519  0001DE  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  4520  0001E2  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  4521  0001E6  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  4522  0001EA  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  4523  0001EE  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  4524  0001F2                     l2339:
  4525                           
  4526                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4527  0001F2  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  4528  0001F4  EF04  F001         	goto	u1571
  4529  0001F8  503F               	movf	(dtoa@i+1)^0,w,c
  4530  0001FA  E108               	bnz	u1570
  4531  0001FC  043E               	decf	dtoa@i^0,w,c
  4532  0001FE  A0D8               	btfss	status,0,c
  4533  000200  EF04  F001         	goto	u1571
  4534  000204  EF06  F001         	goto	u1570
  4535  000208                     u1571:
  4536  000208  EF37  F001         	goto	l2349
  4537  00020C                     u1570:
  4538  00020C  5036               	movf	dtoa@n^0,w,c
  4539  00020E  1037               	iorwf	(dtoa@n+1)^0,w,c
  4540  000210  1038               	iorwf	(dtoa@n+2)^0,w,c
  4541  000212  1039               	iorwf	(dtoa@n+3)^0,w,c
  4542  000214  103A               	iorwf	(dtoa@n+4)^0,w,c
  4543  000216  103B               	iorwf	(dtoa@n+5)^0,w,c
  4544  000218  103C               	iorwf	(dtoa@n+6)^0,w,c
  4545  00021A  103D               	iorwf	(dtoa@n+7)^0,w,c
  4546  00021C  A4D8               	btfss	status,2,c
  4547  00021E  EF13  F001         	goto	u1581
  4548  000222  EF15  F001         	goto	u1580
  4549  000226                     u1581:
  4550  000226  EF7D  F000         	goto	l2329
  4551  00022A                     u1580:
  4552  00022A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  4553  00022C  EF22  F001         	goto	u1590
  4554  000230  5031               	movf	(dtoa@p+1)^0,w,c
  4555  000232  E106               	bnz	u1591
  4556  000234  0430               	decf	dtoa@p^0,w,c
  4557  000236  B0D8               	btfsc	status,0,c
  4558  000238  EF20  F001         	goto	u1591
  4559  00023C  EF22  F001         	goto	u1590
  4560  000240                     u1591:
  4561  000240  EF7D  F000         	goto	l2329
  4562  000244                     u1590:
  4563  000244  BE33               	btfsc	(dtoa@w+1)^0,7,c
  4564  000246  EF2D  F001         	goto	u1601
  4565  00024A  5033               	movf	(dtoa@w+1)^0,w,c
  4566  00024C  E108               	bnz	u1600
  4567  00024E  0432               	decf	dtoa@w^0,w,c
  4568  000250  A0D8               	btfss	status,0,c
  4569  000252  EF2D  F001         	goto	u1601
  4570  000256  EF2F  F001         	goto	u1600
  4571  00025A                     u1601:
  4572  00025A  EF37  F001         	goto	l2349
  4573  00025E                     u1600:
  4574  00025E  0100               	movlb	0	; () banked
  4575  000260  B3BE               	btfsc	_flags& (0+255),1,b
  4576  000262  EF35  F001         	goto	u1611
  4577  000266  EF37  F001         	goto	u1610
  4578  00026A                     u1611:
  4579  00026A  EF7D  F000         	goto	l2329
  4580  00026E                     u1610:
  4581  00026E                     l2349:
  4582                           
  4583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  4584  00026E  5034               	movf	dtoa@s^0,w,c
  4585  000270  1035               	iorwf	(dtoa@s+1)^0,w,c
  4586  000272  A4D8               	btfss	status,2,c
  4587  000274  EF3E  F001         	goto	u1621
  4588  000278  EF40  F001         	goto	u1620
  4589  00027C                     u1621:
  4590  00027C  EF48  F001         	goto	l2353
  4591  000280                     u1620:
  4592  000280  0100               	movlb	0	; () banked
  4593  000282  A5BE               	btfss	_flags& (0+255),2,b
  4594  000284  EF46  F001         	goto	u1631
  4595  000288  EF48  F001         	goto	u1630
  4596  00028C                     u1631:
  4597  00028C  EF66  F001         	goto	l2363
  4598  000290                     u1630:
  4599  000290                     l2353:
  4600                           
  4601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  4602  000290  063E               	decf	dtoa@i^0,f,c
  4603  000292  A0D8               	btfss	status,0,c
  4604  000294  063F               	decf	(dtoa@i+1)^0,f,c
  4605  000296                     
  4606                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  4607  000296  5034               	movf	dtoa@s^0,w,c
  4608  000298  1035               	iorwf	(dtoa@s+1)^0,w,c
  4609  00029A  A4D8               	btfss	status,2,c
  4610  00029C  EF52  F001         	goto	u1641
  4611  0002A0  EF54  F001         	goto	u1640
  4612  0002A4                     u1641:
  4613  0002A4  EF5A  F001         	goto	l2359
  4614  0002A8                     u1640:
  4615  0002A8  0E00               	movlw	0
  4616  0002AA  6E2F               	movwf	(_dtoa$856+1)^0,c
  4617  0002AC  0E2B               	movlw	43
  4618  0002AE  6E2E               	movwf	_dtoa$856^0,c
  4619  0002B0  EF5E  F001         	goto	l2361
  4620  0002B4                     l2359:
  4621  0002B4  0E00               	movlw	0
  4622  0002B6  6E2F               	movwf	(_dtoa$856+1)^0,c
  4623  0002B8  0E2D               	movlw	45
  4624  0002BA  6E2E               	movwf	_dtoa$856^0,c
  4625  0002BC                     l2361:
  4626  0002BC  0E00               	movlw	low _dbuf
  4627  0002BE  243E               	addwf	dtoa@i^0,w,c
  4628  0002C0  6ED9               	movwf	fsr2l,c
  4629  0002C2  0E01               	movlw	high _dbuf
  4630  0002C4  203F               	addwfc	(dtoa@i+1)^0,w,c
  4631  0002C6  6EDA               	movwf	fsr2h,c
  4632  0002C8  C02E  FFDF         	movff	_dtoa$856,indf2
  4633  0002CC                     l2363:
  4634                           
  4635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  4636  0002CC  C01C  F011         	movff	dtoa@fp,pad@fp
  4637  0002D0  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  4638  0002D4  0E00               	movlw	low _dbuf
  4639  0002D6  243E               	addwf	dtoa@i^0,w,c
  4640  0002D8  6E13               	movwf	pad@buf^0,c
  4641  0002DA  0E01               	movlw	high _dbuf
  4642  0002DC  203F               	addwfc	(dtoa@i+1)^0,w,c
  4643  0002DE  6E14               	movwf	(pad@buf+1)^0,c
  4644  0002E0  C032  F015         	movff	dtoa@w,pad@p
  4645  0002E4  C033  F016         	movff	dtoa@w+1,pad@p+1
  4646  0002E8  EC16  F009         	call	_pad	;wreg free
  4647  0002EC  C011  F01C         	movff	?_pad,?_dtoa
  4648  0002F0  C012  F01D         	movff	?_pad+1,?_dtoa+1
  4649  0002F4  0012               	return		;funcret
  4650  0002F6                     __end_of_dtoa:
  4651                           	opt callstack 0
  4652                           
  4653 ;; *************** function _pad *****************
  4654 ;; Defined at:
  4655 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4658 ;;		 -> sprintf@f(6), 
  4659 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4660 ;;		 -> dbuf(32), 
  4661 ;;  p               2   20[COMRAM] int 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  w               2   25[COMRAM] int 
  4664 ;;  i               2   23[COMRAM] int 
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  2   16[COMRAM] int 
  4667 ;; Registers used:
  4668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4674 ;;      Params:         6       0       0       0       0       0       0       0       0
  4675 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4676 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4677 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4678 ;;Total ram usage:       11 bytes
  4679 ;; Hardware stack levels used:    1
  4680 ;; Hardware stack levels required when called:    4
  4681 ;; This function calls:
  4682 ;;		_fputc
  4683 ;;		_fputs
  4684 ;;		_strlen
  4685 ;; This function is called by:
  4686 ;;		_dtoa
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           	psect	text21
  4691  00122C                     __ptext21:
  4692                           	opt callstack 0
  4693  00122C                     _pad:
  4694                           	opt callstack 20
  4695  00122C                     
  4696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4697  00122C  0100               	movlb	0	; () banked
  4698  00122E  A1BE               	btfss	_flags& (0+255),0,b
  4699  001230  EF1C  F009         	goto	u1301
  4700  001234  EF1E  F009         	goto	u1300
  4701  001238                     u1301:
  4702  001238  EF28  F009         	goto	l2197
  4703  00123C                     u1300:
  4704  00123C                     
  4705                           ; BSR set to: 0
  4706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4707  00123C  C013  F00A         	movff	pad@buf,fputs@s
  4708  001240  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4709  001244  C011  F00C         	movff	pad@fp,fputs@fp
  4710  001248  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4711  00124C  EC90  F00C         	call	_fputs	;wreg free
  4712  001250                     l2197:
  4713                           
  4714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4715  001250  BE16               	btfsc	(pad@p+1)^0,7,c
  4716  001252  EF2D  F009         	goto	u1311
  4717  001256  EF2F  F009         	goto	u1310
  4718  00125A                     u1311:
  4719  00125A  EF35  F009         	goto	l2201
  4720  00125E                     u1310:
  4721  00125E  C015  F01A         	movff	pad@p,pad@w
  4722  001262  C016  F01B         	movff	pad@p+1,pad@w+1
  4723  001266  EF39  F009         	goto	l367
  4724  00126A                     l2201:
  4725  00126A  0E00               	movlw	0
  4726  00126C  6E1B               	movwf	(pad@w+1)^0,c
  4727  00126E  0E00               	movlw	0
  4728  001270  6E1A               	movwf	pad@w^0,c
  4729  001272                     l367:
  4730                           
  4731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4732  001272  0E00               	movlw	0
  4733  001274  6E19               	movwf	(pad@i+1)^0,c
  4734  001276  0E00               	movlw	0
  4735  001278  6E18               	movwf	pad@i^0,c
  4736                           
  4737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4738  00127A  EF4B  F009         	goto	l2207
  4739  00127E                     l2203:
  4740                           
  4741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4742  00127E  0E00               	movlw	0
  4743  001280  6E02               	movwf	(fputc@c+1)^0,c
  4744  001282  0E20               	movlw	32
  4745  001284  6E01               	movwf	fputc@c^0,c
  4746  001286  C011  F003         	movff	pad@fp,fputc@fp
  4747  00128A  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4748  00128E  EC4D  F008         	call	_fputc	;wreg free
  4749  001292                     
  4750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4751  001292  4A18               	infsnz	pad@i^0,f,c
  4752  001294  2A19               	incf	(pad@i+1)^0,f,c
  4753  001296                     l2207:
  4754                           
  4755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4756  001296  501A               	movf	pad@w^0,w,c
  4757  001298  5C18               	subwf	pad@i^0,w,c
  4758  00129A  5019               	movf	(pad@i+1)^0,w,c
  4759  00129C  0A80               	xorlw	128
  4760  00129E  6E17               	movwf	??_pad^0,c
  4761  0012A0  501B               	movf	(pad@w+1)^0,w,c
  4762  0012A2  0A80               	xorlw	128
  4763  0012A4  5817               	subwfb	??_pad^0,w,c
  4764  0012A6  A0D8               	btfss	status,0,c
  4765  0012A8  EF58  F009         	goto	u1321
  4766  0012AC  EF5A  F009         	goto	u1320
  4767  0012B0                     u1321:
  4768  0012B0  EF3F  F009         	goto	l2203
  4769  0012B4                     u1320:
  4770  0012B4                     
  4771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4772  0012B4  0100               	movlb	0	; () banked
  4773  0012B6  B1BE               	btfsc	_flags& (0+255),0,b
  4774  0012B8  EF60  F009         	goto	u1331
  4775  0012BC  EF62  F009         	goto	u1330
  4776  0012C0                     u1331:
  4777  0012C0  EF6C  F009         	goto	l2211
  4778  0012C4                     u1330:
  4779  0012C4                     
  4780                           ; BSR set to: 0
  4781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4782  0012C4  C013  F00A         	movff	pad@buf,fputs@s
  4783  0012C8  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4784  0012CC  C011  F00C         	movff	pad@fp,fputs@fp
  4785  0012D0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4786  0012D4  EC90  F00C         	call	_fputs	;wreg free
  4787  0012D8                     l2211:
  4788                           
  4789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4790  0012D8  C013  F001         	movff	pad@buf,strlen@s
  4791  0012DC  C014  F002         	movff	pad@buf+1,strlen@s+1
  4792  0012E0  EC0B  F00D         	call	_strlen	;wreg free
  4793  0012E4  501A               	movf	pad@w^0,w,c
  4794  0012E6  2401               	addwf	?_strlen^0,w,c
  4795  0012E8  6E11               	movwf	?_pad^0,c
  4796  0012EA  501B               	movf	(pad@w+1)^0,w,c
  4797  0012EC  2002               	addwfc	(?_strlen+1)^0,w,c
  4798  0012EE  6E12               	movwf	(?_pad+1)^0,c
  4799  0012F0  0012               	return		;funcret
  4800  0012F2                     __end_of_pad:
  4801                           	opt callstack 0
  4802                           
  4803 ;; *************** function _strlen *****************
  4804 ;; Defined at:
  4805 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4808 ;;		 -> dbuf(32), 
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4811 ;;		 -> dbuf(32), 
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  2    0[COMRAM] unsigned int 
  4814 ;; Registers used:
  4815 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4816 ;; Tracked objects:
  4817 ;;		On entry : 0/0
  4818 ;;		On exit  : 0/0
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4821 ;;      Params:         2       0       0       0       0       0       0       0       0
  4822 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4823 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4824 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4825 ;;Total ram usage:        4 bytes
  4826 ;; Hardware stack levels used:    1
  4827 ;; Hardware stack levels required when called:    1
  4828 ;; This function calls:
  4829 ;;		Nothing
  4830 ;; This function is called by:
  4831 ;;		_pad
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           	psect	text22
  4836  001A16                     __ptext22:
  4837                           	opt callstack 0
  4838  001A16                     _strlen:
  4839                           	opt callstack 22
  4840  001A16  C001  F003         	movff	strlen@s,strlen@a
  4841  001A1A  C002  F004         	movff	strlen@s+1,strlen@a+1
  4842  001A1E  EF13  F00D         	goto	l2187
  4843  001A22                     l2185:
  4844  001A22  4A01               	infsnz	strlen@s^0,f,c
  4845  001A24  2A02               	incf	(strlen@s+1)^0,f,c
  4846  001A26                     l2187:
  4847  001A26  C001  FFD9         	movff	strlen@s,fsr2l
  4848  001A2A  C002  FFDA         	movff	strlen@s+1,fsr2h
  4849  001A2E  50DF               	movf	indf2,w,c
  4850  001A30  A4D8               	btfss	status,2,c
  4851  001A32  EF1D  F00D         	goto	u1291
  4852  001A36  EF1F  F00D         	goto	u1290
  4853  001A3A                     u1291:
  4854  001A3A  EF11  F00D         	goto	l2185
  4855  001A3E                     u1290:
  4856  001A3E  5003               	movf	strlen@a^0,w,c
  4857  001A40  5C01               	subwf	strlen@s^0,w,c
  4858  001A42  6E01               	movwf	?_strlen^0,c
  4859  001A44  5004               	movf	(strlen@a+1)^0,w,c
  4860  001A46  5802               	subwfb	(strlen@s+1)^0,w,c
  4861  001A48  6E02               	movwf	(?_strlen+1)^0,c
  4862  001A4A  0012               	return		;funcret
  4863  001A4C                     __end_of_strlen:
  4864                           	opt callstack 0
  4865                           
  4866 ;; *************** function _fputs *****************
  4867 ;; Defined at:
  4868 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4871 ;;		 -> dbuf(32), 
  4872 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4873 ;;		 -> sprintf@f(6), 
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;  i               2   14[COMRAM] int 
  4876 ;;  c               1   13[COMRAM] unsigned char 
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  2    9[COMRAM] int 
  4879 ;; Registers used:
  4880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4886 ;;      Params:         4       0       0       0       0       0       0       0       0
  4887 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4888 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4889 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4890 ;;Total ram usage:        7 bytes
  4891 ;; Hardware stack levels used:    1
  4892 ;; Hardware stack levels required when called:    3
  4893 ;; This function calls:
  4894 ;;		_fputc
  4895 ;; This function is called by:
  4896 ;;		_pad
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           	psect	text23
  4901  001920                     __ptext23:
  4902                           	opt callstack 0
  4903  001920                     _fputs:
  4904                           	opt callstack 20
  4905  001920  0E00               	movlw	0
  4906  001922  6E10               	movwf	(fputs@i+1)^0,c
  4907  001924  0E00               	movlw	0
  4908  001926  6E0F               	movwf	fputs@i^0,c
  4909  001928  EFA1  F00C         	goto	l2181
  4910  00192C                     l2177:
  4911  00192C  C00E  F001         	movff	fputs@c,fputc@c
  4912  001930  6A02               	clrf	(fputc@c+1)^0,c
  4913  001932  C00C  F003         	movff	fputs@fp,fputc@fp
  4914  001936  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4915  00193A  EC4D  F008         	call	_fputc	;wreg free
  4916  00193E  4A0F               	infsnz	fputs@i^0,f,c
  4917  001940  2A10               	incf	(fputs@i+1)^0,f,c
  4918  001942                     l2181:
  4919  001942  500F               	movf	fputs@i^0,w,c
  4920  001944  240A               	addwf	fputs@s^0,w,c
  4921  001946  6ED9               	movwf	fsr2l,c
  4922  001948  5010               	movf	(fputs@i+1)^0,w,c
  4923  00194A  200B               	addwfc	(fputs@s+1)^0,w,c
  4924  00194C  6EDA               	movwf	fsr2h,c
  4925  00194E  50DF               	movf	indf2,w,c
  4926  001950  6E0E               	movwf	fputs@c^0,c
  4927  001952  500E               	movf	fputs@c^0,w,c
  4928  001954  A4D8               	btfss	status,2,c
  4929  001956  EFAF  F00C         	goto	u1281
  4930  00195A  EFB1  F00C         	goto	u1280
  4931  00195E                     u1281:
  4932  00195E  EF96  F00C         	goto	l2177
  4933  001962                     u1280:
  4934  001962  0012               	return		;funcret
  4935  001964                     __end_of_fputs:
  4936                           	opt callstack 0
  4937                           
  4938 ;; *************** function _fputc *****************
  4939 ;; Defined at:
  4940 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;  c               2    0[COMRAM] int 
  4943 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4944 ;;		 -> sprintf@f(6), 
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;		None
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  2    0[COMRAM] int 
  4949 ;; Registers used:
  4950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4956 ;;      Params:         4       0       0       0       0       0       0       0       0
  4957 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4958 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4959 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4960 ;;Total ram usage:        9 bytes
  4961 ;; Hardware stack levels used:    1
  4962 ;; Hardware stack levels required when called:    2
  4963 ;; This function calls:
  4964 ;;		_putch
  4965 ;; This function is called by:
  4966 ;;		_pad
  4967 ;;		_vfpfcnvrt
  4968 ;;		_fputs
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           	psect	text24
  4973  00109A                     __ptext24:
  4974                           	opt callstack 0
  4975  00109A                     _fputc:
  4976                           	opt callstack 23
  4977  00109A  5003               	movf	fputc@fp^0,w,c
  4978  00109C  1004               	iorwf	(fputc@fp+1)^0,w,c
  4979  00109E  B4D8               	btfsc	status,2,c
  4980  0010A0  EF54  F008         	goto	u1241
  4981  0010A4  EF56  F008         	goto	u1240
  4982  0010A8                     u1241:
  4983  0010A8  EF5F  F008         	goto	l2165
  4984  0010AC                     u1240:
  4985  0010AC  5003               	movf	fputc@fp^0,w,c
  4986  0010AE  1004               	iorwf	(fputc@fp+1)^0,w,c
  4987  0010B0  A4D8               	btfss	status,2,c
  4988  0010B2  EF5D  F008         	goto	u1251
  4989  0010B6  EF5F  F008         	goto	u1250
  4990  0010BA                     u1251:
  4991  0010BA  EF64  F008         	goto	l2167
  4992  0010BE                     u1250:
  4993  0010BE                     l2165:
  4994  0010BE  5001               	movf	fputc@c^0,w,c
  4995  0010C0  EC1A  F00E         	call	_putch
  4996  0010C4  EFB1  F008         	goto	l1105
  4997  0010C8                     l2167:
  4998  0010C8  EE20 F004          	lfsr	2,4
  4999  0010CC  5003               	movf	fputc@fp^0,w,c
  5000  0010CE  26D9               	addwf	fsr2l,f,c
  5001  0010D0  5004               	movf	(fputc@fp+1)^0,w,c
  5002  0010D2  22DA               	addwfc	fsr2h,f,c
  5003  0010D4  50DE               	movf	postinc2,w,c
  5004  0010D6  10DE               	iorwf	postinc2,w,c
  5005  0010D8  B4D8               	btfsc	status,2,c
  5006  0010DA  EF71  F008         	goto	u1261
  5007  0010DE  EF73  F008         	goto	u1260
  5008  0010E2                     u1261:
  5009  0010E2  EF8E  F008         	goto	l2171
  5010  0010E6                     u1260:
  5011  0010E6  EE20 F004          	lfsr	2,4
  5012  0010EA  5003               	movf	fputc@fp^0,w,c
  5013  0010EC  26D9               	addwf	fsr2l,f,c
  5014  0010EE  5004               	movf	(fputc@fp+1)^0,w,c
  5015  0010F0  22DA               	addwfc	fsr2h,f,c
  5016  0010F2  EE10 F002          	lfsr	1,2
  5017  0010F6  5003               	movf	fputc@fp^0,w,c
  5018  0010F8  26E1               	addwf	fsr1l,f,c
  5019  0010FA  5004               	movf	(fputc@fp+1)^0,w,c
  5020  0010FC  22E2               	addwfc	fsr1h,f,c
  5021  0010FE  50DE               	movf	postinc2,w,c
  5022  001100  5CE6               	subwf	postinc1,w,c
  5023  001102  50E6               	movf	postinc1,w,c
  5024  001104  0A80               	xorlw	128
  5025  001106  6E09               	movwf	(??_fputc+4)^0,c
  5026  001108  50DE               	movf	postinc2,w,c
  5027  00110A  0A80               	xorlw	128
  5028  00110C  5809               	subwfb	(??_fputc+4)^0,w,c
  5029  00110E  B0D8               	btfsc	status,0,c
  5030  001110  EF8C  F008         	goto	u1271
  5031  001114  EF8E  F008         	goto	u1270
  5032  001118                     u1271:
  5033  001118  EFB1  F008         	goto	l1105
  5034  00111C                     u1270:
  5035  00111C                     l2171:
  5036  00111C  EE20 F002          	lfsr	2,2
  5037  001120  5003               	movf	fputc@fp^0,w,c
  5038  001122  26D9               	addwf	fsr2l,f,c
  5039  001124  5004               	movf	(fputc@fp+1)^0,w,c
  5040  001126  22DA               	addwfc	fsr2h,f,c
  5041  001128  CFDE F005          	movff	postinc2,??_fputc
  5042  00112C  CFDD F006          	movff	postdec2,??_fputc+1
  5043  001130  C003  FFD9         	movff	fputc@fp,fsr2l
  5044  001134  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5045  001138  CFDE F007          	movff	postinc2,??_fputc+2
  5046  00113C  CFDD F008          	movff	postdec2,??_fputc+3
  5047  001140  5005               	movf	??_fputc^0,w,c
  5048  001142  2407               	addwf	(??_fputc+2)^0,w,c
  5049  001144  6ED9               	movwf	fsr2l,c
  5050  001146  5006               	movf	(??_fputc+1)^0,w,c
  5051  001148  2008               	addwfc	(??_fputc+3)^0,w,c
  5052  00114A  6EDA               	movwf	fsr2h,c
  5053  00114C  C001  FFDF         	movff	fputc@c,indf2
  5054  001150  EE20 F002          	lfsr	2,2
  5055  001154  5003               	movf	fputc@fp^0,w,c
  5056  001156  26D9               	addwf	fsr2l,f,c
  5057  001158  5004               	movf	(fputc@fp+1)^0,w,c
  5058  00115A  22DA               	addwfc	fsr2h,f,c
  5059  00115C  2ADE               	incf	postinc2,f,c
  5060  00115E  0E00               	movlw	0
  5061  001160  22DD               	addwfc	postdec2,f,c
  5062  001162                     l1105:
  5063  001162  0012               	return		;funcret
  5064  001164                     __end_of_fputc:
  5065                           	opt callstack 0
  5066                           
  5067 ;; *************** function _putch *****************
  5068 ;; Defined at:
  5069 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;  c               1    wreg     unsigned char 
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;  c               1    0[COMRAM] unsigned char 
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  1    wreg      void 
  5076 ;; Registers used:
  5077 ;;		wreg
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5083 ;;      Params:         0       0       0       0       0       0       0       0       0
  5084 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5085 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5086 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5087 ;;Total ram usage:        0 bytes
  5088 ;; Hardware stack levels used:    1
  5089 ;; Hardware stack levels required when called:    1
  5090 ;; This function calls:
  5091 ;;		Nothing
  5092 ;; This function is called by:
  5093 ;;		_fputc
  5094 ;; This function uses a non-reentrant model
  5095 ;;
  5096                           
  5097                           	psect	text25
  5098  001C34                     __ptext25:
  5099                           	opt callstack 0
  5100  001C34                     _putch:
  5101                           	opt callstack 23
  5102  001C34  0012               	return		;funcret
  5103  001C36                     __end_of_putch:
  5104                           	opt callstack 0
  5105                           
  5106 ;; *************** function _abs *****************
  5107 ;; Defined at:
  5108 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;  a               2   18[COMRAM] int 
  5111 ;; Auto vars:     Size  Location     Type
  5112 ;;		None
  5113 ;; Return value:  Size  Location     Type
  5114 ;;                  2   18[COMRAM] int 
  5115 ;; Registers used:
  5116 ;;		wreg, status,2, status,0
  5117 ;; Tracked objects:
  5118 ;;		On entry : 0/0
  5119 ;;		On exit  : 0/0
  5120 ;;		Unchanged: 0/0
  5121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5122 ;;      Params:         2       0       0       0       0       0       0       0       0
  5123 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5124 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5125 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5126 ;;Total ram usage:        4 bytes
  5127 ;; Hardware stack levels used:    1
  5128 ;; Hardware stack levels required when called:    1
  5129 ;; This function calls:
  5130 ;;		Nothing
  5131 ;; This function is called by:
  5132 ;;		_dtoa
  5133 ;; This function uses a non-reentrant model
  5134 ;;
  5135                           
  5136                           	psect	text26
  5137  001964                     __ptext26:
  5138                           	opt callstack 0
  5139  001964                     _abs:
  5140                           	opt callstack 23
  5141  001964  BE14               	btfsc	(abs@a+1)^0,7,c
  5142  001966  EFBF  F00C         	goto	u1340
  5143  00196A  5014               	movf	(abs@a+1)^0,w,c
  5144  00196C  E106               	bnz	u1341
  5145  00196E  0413               	decf	abs@a^0,w,c
  5146  001970  B0D8               	btfsc	status,0,c
  5147  001972  EFBD  F00C         	goto	u1341
  5148  001976  EFBF  F00C         	goto	u1340
  5149  00197A                     u1341:
  5150  00197A  EFCD  F00C         	goto	l1090
  5151  00197E                     u1340:
  5152  00197E  C013  F015         	movff	abs@a,??_abs
  5153  001982  C014  F016         	movff	abs@a+1,??_abs+1
  5154  001986  1E15               	comf	??_abs^0,f,c
  5155  001988  1E16               	comf	(??_abs+1)^0,f,c
  5156  00198A  4A15               	infsnz	??_abs^0,f,c
  5157  00198C  2A16               	incf	(??_abs+1)^0,f,c
  5158  00198E  C015  F013         	movff	??_abs,?_abs
  5159  001992  C016  F014         	movff	??_abs+1,?_abs+1
  5160  001996  EFD1  F00C         	goto	l1093
  5161  00199A                     l1090:
  5162  00199A  C013  F013         	movff	abs@a,?_abs
  5163  00199E  C014  F014         	movff	abs@a+1,?_abs+1
  5164  0019A2                     l1093:
  5165  0019A2  0012               	return		;funcret
  5166  0019A4                     __end_of_abs:
  5167                           	opt callstack 0
  5168                           
  5169 ;; *************** function ___aomod *****************
  5170 ;; Defined at:
  5171 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;  dividend        8    0[COMRAM] long long 
  5174 ;;  divisor         8    8[COMRAM] long long 
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;  sign            1   17[COMRAM] unsigned char 
  5177 ;;  counter         1   16[COMRAM] unsigned char 
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  8    0[COMRAM] long long 
  5180 ;; Registers used:
  5181 ;;		wreg, status,2, status,0
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5187 ;;      Params:        16       0       0       0       0       0       0       0       0
  5188 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5189 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5190 ;;      Totals:        18       0       0       0       0       0       0       0       0
  5191 ;;Total ram usage:       18 bytes
  5192 ;; Hardware stack levels used:    1
  5193 ;; Hardware stack levels required when called:    1
  5194 ;; This function calls:
  5195 ;;		Nothing
  5196 ;; This function is called by:
  5197 ;;		_dtoa
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201                           	psect	text27
  5202  000A5E                     __ptext27:
  5203                           	opt callstack 0
  5204  000A5E                     ___aomod:
  5205                           	opt callstack 23
  5206  000A5E  0E00               	movlw	0
  5207  000A60  6E12               	movwf	___aomod@sign^0,c
  5208  000A62  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5209  000A64  EF38  F005         	goto	u1420
  5210  000A68  EF36  F005         	goto	u1421
  5211  000A6C                     u1421:
  5212  000A6C  EF4A  F005         	goto	l2271
  5213  000A70                     u1420:
  5214  000A70  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5215  000A72  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5216  000A74  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5217  000A76  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5218  000A78  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5219  000A7A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5220  000A7C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5221  000A7E  6C01               	negf	___aomod@dividend^0,c
  5222  000A80  0E00               	movlw	0
  5223  000A82  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5224  000A84  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5225  000A86  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5226  000A88  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5227  000A8A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5228  000A8C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5229  000A8E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5230  000A90  0E01               	movlw	1
  5231  000A92  6E12               	movwf	___aomod@sign^0,c
  5232  000A94                     l2271:
  5233  000A94  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5234  000A96  EF51  F005         	goto	u1430
  5235  000A9A  EF4F  F005         	goto	u1431
  5236  000A9E                     u1431:
  5237  000A9E  EF61  F005         	goto	l2275
  5238  000AA2                     u1430:
  5239  000AA2  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5240  000AA4  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5241  000AA6  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5242  000AA8  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5243  000AAA  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5244  000AAC  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5245  000AAE  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5246  000AB0  6C09               	negf	___aomod@divisor^0,c
  5247  000AB2  0E00               	movlw	0
  5248  000AB4  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5249  000AB6  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5250  000AB8  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5251  000ABA  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5252  000ABC  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5253  000ABE  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5254  000AC0  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5255  000AC2                     l2275:
  5256  000AC2  5009               	movf	___aomod@divisor^0,w,c
  5257  000AC4  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5258  000AC6  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5259  000AC8  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5260  000ACA  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5261  000ACC  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5262  000ACE  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5263  000AD0  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5264  000AD2  B4D8               	btfsc	status,2,c
  5265  000AD4  EF6E  F005         	goto	u1441
  5266  000AD8  EF70  F005         	goto	u1440
  5267  000ADC                     u1441:
  5268  000ADC  EFB8  F005         	goto	l2291
  5269  000AE0                     u1440:
  5270  000AE0  0E01               	movlw	1
  5271  000AE2  6E11               	movwf	___aomod@counter^0,c
  5272  000AE4  EF7E  F005         	goto	l2281
  5273  000AE8                     l2279:
  5274  000AE8  90D8               	bcf	status,0,c
  5275  000AEA  3609               	rlcf	___aomod@divisor^0,f,c
  5276  000AEC  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5277  000AEE  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5278  000AF0  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5279  000AF2  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5280  000AF4  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5281  000AF6  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5282  000AF8  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5283  000AFA  2A11               	incf	___aomod@counter^0,f,c
  5284  000AFC                     l2281:
  5285  000AFC  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5286  000AFE  EF83  F005         	goto	u1451
  5287  000B02  EF85  F005         	goto	u1450
  5288  000B06                     u1451:
  5289  000B06  EF74  F005         	goto	l2279
  5290  000B0A                     u1450:
  5291  000B0A                     l2283:
  5292  000B0A  5009               	movf	___aomod@divisor^0,w,c
  5293  000B0C  5C01               	subwf	___aomod@dividend^0,w,c
  5294  000B0E  500A               	movf	(___aomod@divisor+1)^0,w,c
  5295  000B10  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5296  000B12  500B               	movf	(___aomod@divisor+2)^0,w,c
  5297  000B14  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5298  000B16  500C               	movf	(___aomod@divisor+3)^0,w,c
  5299  000B18  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5300  000B1A  500D               	movf	(___aomod@divisor+4)^0,w,c
  5301  000B1C  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5302  000B1E  500E               	movf	(___aomod@divisor+5)^0,w,c
  5303  000B20  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5304  000B22  500F               	movf	(___aomod@divisor+6)^0,w,c
  5305  000B24  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5306  000B26  5010               	movf	(___aomod@divisor+7)^0,w,c
  5307  000B28  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5308  000B2A  A0D8               	btfss	status,0,c
  5309  000B2C  EF9A  F005         	goto	u1461
  5310  000B30  EF9C  F005         	goto	u1460
  5311  000B34                     u1461:
  5312  000B34  EFAC  F005         	goto	l2287
  5313  000B38                     u1460:
  5314  000B38  5009               	movf	___aomod@divisor^0,w,c
  5315  000B3A  5E01               	subwf	___aomod@dividend^0,f,c
  5316  000B3C  500A               	movf	(___aomod@divisor+1)^0,w,c
  5317  000B3E  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5318  000B40  500B               	movf	(___aomod@divisor+2)^0,w,c
  5319  000B42  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5320  000B44  500C               	movf	(___aomod@divisor+3)^0,w,c
  5321  000B46  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5322  000B48  500D               	movf	(___aomod@divisor+4)^0,w,c
  5323  000B4A  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5324  000B4C  500E               	movf	(___aomod@divisor+5)^0,w,c
  5325  000B4E  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5326  000B50  500F               	movf	(___aomod@divisor+6)^0,w,c
  5327  000B52  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5328  000B54  5010               	movf	(___aomod@divisor+7)^0,w,c
  5329  000B56  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5330  000B58                     l2287:
  5331  000B58  90D8               	bcf	status,0,c
  5332  000B5A  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5333  000B5C  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5334  000B5E  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5335  000B60  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5336  000B62  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5337  000B64  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5338  000B66  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5339  000B68  3209               	rrcf	___aomod@divisor^0,f,c
  5340  000B6A  2E11               	decfsz	___aomod@counter^0,f,c
  5341  000B6C  EF85  F005         	goto	l2283
  5342  000B70                     l2291:
  5343  000B70  5012               	movf	___aomod@sign^0,w,c
  5344  000B72  B4D8               	btfsc	status,2,c
  5345  000B74  EFBE  F005         	goto	u1471
  5346  000B78  EFC0  F005         	goto	u1470
  5347  000B7C                     u1471:
  5348  000B7C  EFD0  F005         	goto	l2295
  5349  000B80                     u1470:
  5350  000B80  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5351  000B82  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5352  000B84  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5353  000B86  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5354  000B88  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5355  000B8A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5356  000B8C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5357  000B8E  6C01               	negf	___aomod@dividend^0,c
  5358  000B90  0E00               	movlw	0
  5359  000B92  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5360  000B94  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5361  000B96  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5362  000B98  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5363  000B9A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5364  000B9C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5365  000B9E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5366  000BA0                     l2295:
  5367  000BA0  C001  F001         	movff	___aomod@dividend,?___aomod
  5368  000BA4  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5369  000BA8  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5370  000BAC  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5371  000BB0  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  5372  000BB4  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  5373  000BB8  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  5374  000BBC  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5375  000BC0  0012               	return		;funcret
  5376  000BC2                     __end_of___aomod:
  5377                           	opt callstack 0
  5378                           
  5379 ;; *************** function ___aodiv *****************
  5380 ;; Defined at:
  5381 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  5382 ;; Parameters:    Size  Location     Type
  5383 ;;  dividend        8    0[COMRAM] long long 
  5384 ;;  divisor         8    8[COMRAM] long long 
  5385 ;; Auto vars:     Size  Location     Type
  5386 ;;  quotient        8   18[COMRAM] long long 
  5387 ;;  sign            1   17[COMRAM] unsigned char 
  5388 ;;  counter         1   16[COMRAM] unsigned char 
  5389 ;; Return value:  Size  Location     Type
  5390 ;;                  8    0[COMRAM] long long 
  5391 ;; Registers used:
  5392 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5393 ;; Tracked objects:
  5394 ;;		On entry : 0/0
  5395 ;;		On exit  : 0/0
  5396 ;;		Unchanged: 0/0
  5397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5398 ;;      Params:        16       0       0       0       0       0       0       0       0
  5399 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5401 ;;      Totals:        26       0       0       0       0       0       0       0       0
  5402 ;;Total ram usage:       26 bytes
  5403 ;; Hardware stack levels used:    1
  5404 ;; Hardware stack levels required when called:    1
  5405 ;; This function calls:
  5406 ;;		Nothing
  5407 ;; This function is called by:
  5408 ;;		_dtoa
  5409 ;; This function uses a non-reentrant model
  5410 ;;
  5411                           
  5412                           	psect	text28
  5413  0008D6                     __ptext28:
  5414                           	opt callstack 0
  5415  0008D6                     ___aodiv:
  5416                           	opt callstack 23
  5417  0008D6  0E00               	movlw	0
  5418  0008D8  6E12               	movwf	___aodiv@sign^0,c
  5419  0008DA  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  5420  0008DC  EF74  F004         	goto	u1350
  5421  0008E0  EF72  F004         	goto	u1351
  5422  0008E4                     u1351:
  5423  0008E4  EF86  F004         	goto	l2227
  5424  0008E8                     u1350:
  5425  0008E8  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  5426  0008EA  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  5427  0008EC  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  5428  0008EE  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  5429  0008F0  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  5430  0008F2  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  5431  0008F4  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  5432  0008F6  6C09               	negf	___aodiv@divisor^0,c
  5433  0008F8  0E00               	movlw	0
  5434  0008FA  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  5435  0008FC  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  5436  0008FE  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  5437  000900  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  5438  000902  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  5439  000904  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  5440  000906  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  5441  000908  0E01               	movlw	1
  5442  00090A  6E12               	movwf	___aodiv@sign^0,c
  5443  00090C                     l2227:
  5444  00090C  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  5445  00090E  EF8D  F004         	goto	u1360
  5446  000912  EF8B  F004         	goto	u1361
  5447  000916                     u1361:
  5448  000916  EF9F  F004         	goto	l2233
  5449  00091A                     u1360:
  5450  00091A  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  5451  00091C  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  5452  00091E  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  5453  000920  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  5454  000922  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  5455  000924  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  5456  000926  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  5457  000928  6C01               	negf	___aodiv@dividend^0,c
  5458  00092A  0E00               	movlw	0
  5459  00092C  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  5460  00092E  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  5461  000930  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  5462  000932  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  5463  000934  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  5464  000936  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  5465  000938  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  5466  00093A  0E01               	movlw	1
  5467  00093C  1A12               	xorwf	___aodiv@sign^0,f,c
  5468  00093E                     l2233:
  5469  00093E  EE20  F013         	lfsr	2,___aodiv@quotient
  5470  000942  0E07               	movlw	7
  5471  000944                     u1371:
  5472  000944  6ADE               	clrf	postinc2,c
  5473  000946  06E8               	decf	wreg,f,c
  5474  000948  E2FD               	bc	u1371
  5475  00094A  5009               	movf	___aodiv@divisor^0,w,c
  5476  00094C  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  5477  00094E  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  5478  000950  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  5479  000952  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  5480  000954  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  5481  000956  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  5482  000958  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  5483  00095A  B4D8               	btfsc	status,2,c
  5484  00095C  EFB2  F004         	goto	u1381
  5485  000960  EFB4  F004         	goto	u1380
  5486  000964                     u1381:
  5487  000964  EF06  F005         	goto	l2255
  5488  000968                     u1380:
  5489  000968  0E01               	movlw	1
  5490  00096A  6E11               	movwf	___aodiv@counter^0,c
  5491  00096C  EFC2  F004         	goto	l2241
  5492  000970                     l2239:
  5493  000970  90D8               	bcf	status,0,c
  5494  000972  3609               	rlcf	___aodiv@divisor^0,f,c
  5495  000974  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  5496  000976  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  5497  000978  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  5498  00097A  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  5499  00097C  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  5500  00097E  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  5501  000980  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  5502  000982  2A11               	incf	___aodiv@counter^0,f,c
  5503  000984                     l2241:
  5504  000984  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  5505  000986  EFC7  F004         	goto	u1391
  5506  00098A  EFC9  F004         	goto	u1390
  5507  00098E                     u1391:
  5508  00098E  EFB8  F004         	goto	l2239
  5509  000992                     u1390:
  5510  000992                     l2243:
  5511  000992  90D8               	bcf	status,0,c
  5512  000994  3613               	rlcf	___aodiv@quotient^0,f,c
  5513  000996  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  5514  000998  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  5515  00099A  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  5516  00099C  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  5517  00099E  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  5518  0009A0  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  5519  0009A2  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  5520  0009A4  5009               	movf	___aodiv@divisor^0,w,c
  5521  0009A6  5C01               	subwf	___aodiv@dividend^0,w,c
  5522  0009A8  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5523  0009AA  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  5524  0009AC  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5525  0009AE  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  5526  0009B0  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5527  0009B2  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  5528  0009B4  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5529  0009B6  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  5530  0009B8  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5531  0009BA  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  5532  0009BC  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5533  0009BE  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  5534  0009C0  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5535  0009C2  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  5536  0009C4  A0D8               	btfss	status,0,c
  5537  0009C6  EFE7  F004         	goto	u1401
  5538  0009CA  EFE9  F004         	goto	u1400
  5539  0009CE                     u1401:
  5540  0009CE  EFFA  F004         	goto	l2251
  5541  0009D2                     u1400:
  5542  0009D2  5009               	movf	___aodiv@divisor^0,w,c
  5543  0009D4  5E01               	subwf	___aodiv@dividend^0,f,c
  5544  0009D6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5545  0009D8  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  5546  0009DA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5547  0009DC  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  5548  0009DE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5549  0009E0  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  5550  0009E2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5551  0009E4  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  5552  0009E6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5553  0009E8  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  5554  0009EA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5555  0009EC  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  5556  0009EE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5557  0009F0  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  5558  0009F2  8013               	bsf	___aodiv@quotient^0,0,c
  5559  0009F4                     l2251:
  5560  0009F4  90D8               	bcf	status,0,c
  5561  0009F6  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  5562  0009F8  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  5563  0009FA  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  5564  0009FC  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  5565  0009FE  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  5566  000A00  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  5567  000A02  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  5568  000A04  3209               	rrcf	___aodiv@divisor^0,f,c
  5569  000A06  2E11               	decfsz	___aodiv@counter^0,f,c
  5570  000A08  EFC9  F004         	goto	l2243
  5571  000A0C                     l2255:
  5572  000A0C  5012               	movf	___aodiv@sign^0,w,c
  5573  000A0E  B4D8               	btfsc	status,2,c
  5574  000A10  EF0C  F005         	goto	u1411
  5575  000A14  EF0E  F005         	goto	u1410
  5576  000A18                     u1411:
  5577  000A18  EF1E  F005         	goto	l2259
  5578  000A1C                     u1410:
  5579  000A1C  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  5580  000A1E  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  5581  000A20  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  5582  000A22  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  5583  000A24  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  5584  000A26  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  5585  000A28  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  5586  000A2A  6C13               	negf	___aodiv@quotient^0,c
  5587  000A2C  0E00               	movlw	0
  5588  000A2E  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  5589  000A30  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  5590  000A32  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  5591  000A34  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  5592  000A36  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  5593  000A38  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  5594  000A3A  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  5595  000A3C                     l2259:
  5596  000A3C  C013  F001         	movff	___aodiv@quotient,?___aodiv
  5597  000A40  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  5598  000A44  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  5599  000A48  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  5600  000A4C  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  5601  000A50  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  5602  000A54  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  5603  000A58  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  5604  000A5C  0012               	return		;funcret
  5605  000A5E                     __end_of___aodiv:
  5606                           	opt callstack 0
  5607                           
  5608 ;; *************** function _asignarHorarios *****************
  5609 ;; Defined at:
  5610 ;;		line 329 in file "main.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;		None
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;  i               2   16[COMRAM] int 
  5615 ;;  Rx              1   18[COMRAM] unsigned char 
  5616 ;;  datoCapturad    1   15[COMRAM] unsigned char 
  5617 ;;  hora            1   14[COMRAM] unsigned char 
  5618 ;; Return value:  Size  Location     Type
  5619 ;;                  1    wreg      void 
  5620 ;; Registers used:
  5621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5627 ;;      Params:         0       0       0       0       0       0       0       0       0
  5628 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5630 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5631 ;;Total ram usage:        5 bytes
  5632 ;; Hardware stack levels used:    1
  5633 ;; Hardware stack levels required when called:    5
  5634 ;; This function calls:
  5635 ;;		_UART_printf
  5636 ;;		_UART_read
  5637 ;;		_escribeHorariosMemoria
  5638 ;; This function is called by:
  5639 ;;		_sistemaPrincipal
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           	psect	text29
  5644  000BC2                     __ptext29:
  5645                           	opt callstack 0
  5646  000BC2                     _asignarHorarios:
  5647                           	opt callstack 24
  5648  000BC2                     
  5649                           ;main.c: 331:     unsigned char hora;;main.c: 332:     unsigned char Rx;;main.c: 333:   
      +                            char datoCapturado = 0;
  5650  000BC2  0E00               	movlw	0
  5651  000BC4  6E10               	movwf	asignarHorarios@datoCapturado^0,c
  5652  000BC6                     
  5653                           ;main.c: 335:     UART_printf("\r\n OPCIONES DE REGADO \r\n");
  5654  000BC6  0E89               	movlw	low STR_6
  5655  000BC8  6E02               	movwf	UART_printf@cadena^0,c
  5656  000BCA  0E7F               	movlw	high STR_6
  5657  000BCC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5658  000BCE  EC6D  F00B         	call	_UART_printf	;wreg free
  5659  000BD2                     
  5660                           ;main.c: 336:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  5661  000BD2  0E34               	movlw	low STR_7
  5662  000BD4  6E02               	movwf	UART_printf@cadena^0,c
  5663  000BD6  0E7D               	movlw	high STR_7
  5664  000BD8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5665  000BDA  EC6D  F00B         	call	_UART_printf	;wreg free
  5666                           
  5667                           ;main.c: 338:     for (int i = 0; i < 2; i++) {
  5668  000BDE  0E00               	movlw	0
  5669  000BE0  6E12               	movwf	(asignarHorarios@i+1)^0,c
  5670  000BE2  0E00               	movlw	0
  5671  000BE4  6E11               	movwf	asignarHorarios@i^0,c
  5672  000BE6                     l2699:
  5673                           
  5674                           ;main.c: 339:         Rx = UART_read();
  5675  000BE6  ECF1  F00B         	call	_UART_read	;wreg free
  5676  000BEA  6E13               	movwf	asignarHorarios@Rx^0,c
  5677  000BEC                     
  5678                           ;main.c: 340:         if (Rx >= 48 && Rx <= 57) {
  5679  000BEC  0E2F               	movlw	47
  5680  000BEE  6413               	cpfsgt	asignarHorarios@Rx^0,c
  5681  000BF0  EFFC  F005         	goto	u2011
  5682  000BF4  EFFE  F005         	goto	u2010
  5683  000BF8                     u2011:
  5684  000BF8  EF21  F006         	goto	l2719
  5685  000BFC                     u2010:
  5686  000BFC  0E3A               	movlw	58
  5687  000BFE  6013               	cpfslt	asignarHorarios@Rx^0,c
  5688  000C00  EF04  F006         	goto	u2021
  5689  000C04  EF06  F006         	goto	u2020
  5690  000C08                     u2021:
  5691  000C08  EF21  F006         	goto	l2719
  5692  000C0C                     u2020:
  5693  000C0C                     
  5694                           ;main.c: 341:             if (!i) {
  5695  000C0C  5011               	movf	asignarHorarios@i^0,w,c
  5696  000C0E  1012               	iorwf	(asignarHorarios@i+1)^0,w,c
  5697  000C10  A4D8               	btfss	status,2,c
  5698  000C12  EF0D  F006         	goto	u2031
  5699  000C16  EF0F  F006         	goto	u2030
  5700  000C1A                     u2031:
  5701  000C1A  EF19  F006         	goto	l2713
  5702  000C1E                     u2030:
  5703  000C1E                     
  5704                           ;main.c: 342:                 Rx -= 48;
  5705  000C1E  0E30               	movlw	48
  5706  000C20  5E13               	subwf	asignarHorarios@Rx^0,f,c
  5707  000C22                     
  5708                           ;main.c: 343:                 hora = Rx;
  5709  000C22  C013  F00F         	movff	asignarHorarios@Rx,asignarHorarios@hora
  5710  000C26                     
  5711                           ;main.c: 344:                 hora *= 10;
  5712  000C26  0E0A               	movlw	10
  5713  000C28  020F               	mulwf	asignarHorarios@hora^0,c
  5714  000C2A  50F3               	movf	prodl,w,c
  5715  000C2C  6E0F               	movwf	asignarHorarios@hora^0,c
  5716                           
  5717                           ;main.c: 345:             } else {
  5718  000C2E  EF2B  F006         	goto	l2723
  5719  000C32                     l2713:
  5720                           
  5721                           ;main.c: 346:                 datoCapturado = 1;
  5722  000C32  0E01               	movlw	1
  5723  000C34  6E10               	movwf	asignarHorarios@datoCapturado^0,c
  5724  000C36                     
  5725                           ;main.c: 347:                 Rx -= 48;
  5726  000C36  0E30               	movlw	48
  5727  000C38  5E13               	subwf	asignarHorarios@Rx^0,f,c
  5728  000C3A                     
  5729                           ;main.c: 348:                 hora += Rx;
  5730  000C3A  5013               	movf	asignarHorarios@Rx^0,w,c
  5731  000C3C  260F               	addwf	asignarHorarios@hora^0,f,c
  5732  000C3E  EF2B  F006         	goto	l2723
  5733  000C42                     l2719:
  5734                           
  5735                           ;main.c: 351:             datoCapturado = 0;
  5736  000C42  0E00               	movlw	0
  5737  000C44  6E10               	movwf	asignarHorarios@datoCapturado^0,c
  5738  000C46                     
  5739                           ;main.c: 352:             UART_printf("\r\n DATO NO RECIBIDO \r\n");
  5740  000C46  0EB9               	movlw	low STR_1
  5741  000C48  6E02               	movwf	UART_printf@cadena^0,c
  5742  000C4A  0E7F               	movlw	high STR_1
  5743  000C4C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5744  000C4E  EC6D  F00B         	call	_UART_printf	;wreg free
  5745                           
  5746                           ;main.c: 353:             break;
  5747  000C52  EF3B  F006         	goto	l2727
  5748  000C56                     l2723:
  5749                           
  5750                           ;main.c: 355:     }
  5751  000C56  4A11               	infsnz	asignarHorarios@i^0,f,c
  5752  000C58  2A12               	incf	(asignarHorarios@i+1)^0,f,c
  5753  000C5A  BE12               	btfsc	(asignarHorarios@i+1)^0,7,c
  5754  000C5C  EF39  F006         	goto	u2041
  5755  000C60  5012               	movf	(asignarHorarios@i+1)^0,w,c
  5756  000C62  E109               	bnz	u2040
  5757  000C64  0E02               	movlw	2
  5758  000C66  5C11               	subwf	asignarHorarios@i^0,w,c
  5759  000C68  A0D8               	btfss	status,0,c
  5760  000C6A  EF39  F006         	goto	u2041
  5761  000C6E  EF3B  F006         	goto	u2040
  5762  000C72                     u2041:
  5763  000C72  EFF3  F005         	goto	l2699
  5764  000C76                     u2040:
  5765  000C76                     l2727:
  5766                           
  5767                           ;main.c: 357:     if (datoCapturado && !esperandoDatos) {
  5768  000C76  5010               	movf	asignarHorarios@datoCapturado^0,w,c
  5769  000C78  B4D8               	btfsc	status,2,c
  5770  000C7A  EF41  F006         	goto	u2051
  5771  000C7E  EF43  F006         	goto	u2050
  5772  000C82                     u2051:
  5773  000C82  EF8A  F006         	goto	l263
  5774  000C86                     u2050:
  5775  000C86  505E               	movf	_esperandoDatos^0,w,c
  5776  000C88  A4D8               	btfss	status,2,c
  5777  000C8A  EF49  F006         	goto	u2061
  5778  000C8E  EF4B  F006         	goto	u2060
  5779  000C92                     u2061:
  5780  000C92  EF8A  F006         	goto	l263
  5781  000C96                     u2060:
  5782  000C96                     
  5783                           ;main.c: 359:         UART_printf("\r\n Ingrese 1 para regar || ingrese 0 para no regar:
      +                           \r\n");
  5784  000C96  0EFD               	movlw	low STR_9
  5785  000C98  6E02               	movwf	UART_printf@cadena^0,c
  5786  000C9A  0E7C               	movlw	high STR_9
  5787  000C9C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5788  000C9E  EC6D  F00B         	call	_UART_printf	;wreg free
  5789  000CA2                     
  5790                           ;main.c: 361:         Rx = UART_read();
  5791  000CA2  ECF1  F00B         	call	_UART_read	;wreg free
  5792  000CA6  6E13               	movwf	asignarHorarios@Rx^0,c
  5793  000CA8                     
  5794                           ;main.c: 362:         Rx -= 48;
  5795  000CA8  0E30               	movlw	48
  5796  000CAA  5E13               	subwf	asignarHorarios@Rx^0,f,c
  5797  000CAC                     
  5798                           ;main.c: 364:         if (Rx != 1 && Rx != 0)
  5799  000CAC  0413               	decf	asignarHorarios@Rx^0,w,c
  5800  000CAE  B4D8               	btfsc	status,2,c
  5801  000CB0  EF5C  F006         	goto	u2071
  5802  000CB4  EF5E  F006         	goto	u2070
  5803  000CB8                     u2071:
  5804  000CB8  EF68  F006         	goto	l260
  5805  000CBC                     u2070:
  5806  000CBC  5013               	movf	asignarHorarios@Rx^0,w,c
  5807  000CBE  B4D8               	btfsc	status,2,c
  5808  000CC0  EF64  F006         	goto	u2081
  5809  000CC4  EF66  F006         	goto	u2080
  5810  000CC8                     u2081:
  5811  000CC8  EF68  F006         	goto	l260
  5812  000CCC                     u2080:
  5813  000CCC                     
  5814                           ;main.c: 365:             Rx = 0;
  5815  000CCC  0E00               	movlw	0
  5816  000CCE  6E13               	movwf	asignarHorarios@Rx^0,c
  5817  000CD0                     l260:
  5818                           
  5819                           ;main.c: 367:         if (!esperandoDatos) {
  5820  000CD0  505E               	movf	_esperandoDatos^0,w,c
  5821  000CD2  A4D8               	btfss	status,2,c
  5822  000CD4  EF6E  F006         	goto	u2091
  5823  000CD8  EF70  F006         	goto	u2090
  5824  000CDC                     u2091:
  5825  000CDC  EF84  F006         	goto	l2749
  5826  000CE0                     u2090:
  5827  000CE0                     
  5828                           ;main.c: 368:             UART_printf("\r\n Horario Modificado! \r\n");
  5829  000CE0  0E6F               	movlw	low STR_10
  5830  000CE2  6E02               	movwf	UART_printf@cadena^0,c
  5831  000CE4  0E7F               	movlw	high STR_10
  5832  000CE6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5833  000CE8  EC6D  F00B         	call	_UART_printf	;wreg free
  5834  000CEC                     
  5835                           ;main.c: 370:             horarios[hora].regar = Rx;
  5836  000CEC  500F               	movf	asignarHorarios@hora^0,w,c
  5837  000CEE  0D03               	mullw	3
  5838  000CF0  0E61               	movlw	low (_horarios+1)
  5839  000CF2  24F3               	addwf	243,w,c
  5840  000CF4  6ED9               	movwf	fsr2l,c
  5841  000CF6  0E00               	movlw	high (_horarios+1)
  5842  000CF8  20F4               	addwfc	prodh,w,c
  5843  000CFA  6EDA               	movwf	fsr2h,c
  5844  000CFC  C013  FFDF         	movff	asignarHorarios@Rx,indf2
  5845  000D00                     
  5846                           ;main.c: 372:             escribeHorariosMemoria();
  5847  000D00  EC80  F007         	call	_escribeHorariosMemoria	;wreg free
  5848                           
  5849                           ;main.c: 375:         } else {
  5850  000D04  EF8A  F006         	goto	l263
  5851  000D08                     l2749:
  5852                           
  5853                           ;main.c: 376:             UART_printf("\r\n DATO NO RECIBIDO \r\n");
  5854  000D08  0EB9               	movlw	low STR_1
  5855  000D0A  6E02               	movwf	UART_printf@cadena^0,c
  5856  000D0C  0E7F               	movlw	high STR_1
  5857  000D0E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5858  000D10  EC6D  F00B         	call	_UART_printf	;wreg free
  5859  000D14                     l263:
  5860  000D14  0012               	return		;funcret
  5861  000D16                     __end_of_asignarHorarios:
  5862                           	opt callstack 0
  5863                           
  5864 ;; *************** function _escribeHorariosMemoria *****************
  5865 ;; Defined at:
  5866 ;;		line 196 in file "main.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;		None
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;  i               2   12[COMRAM] int 
  5871 ;;  contMemoria     2   10[COMRAM] int 
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  1    wreg      void 
  5874 ;; Registers used:
  5875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5881 ;;      Params:         0       0       0       0       0       0       0       0       0
  5882 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5883 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5884 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5885 ;;Total ram usage:        4 bytes
  5886 ;; Hardware stack levels used:    1
  5887 ;; Hardware stack levels required when called:    4
  5888 ;; This function calls:
  5889 ;;		___wmul
  5890 ;;		_escribe_eeprom
  5891 ;; This function is called by:
  5892 ;;		_asignarHorarios
  5893 ;;		_setTiempoRegar
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           	psect	text30
  5898  000F00                     __ptext30:
  5899                           	opt callstack 0
  5900  000F00                     _escribeHorariosMemoria:
  5901                           	opt callstack 24
  5902  000F00                     
  5903                           ;main.c: 198:     int contMemoria = 0;
  5904  000F00  0E00               	movlw	0
  5905  000F02  6E0C               	movwf	(escribeHorariosMemoria@contMemoria+1)^0,c
  5906  000F04  0E00               	movlw	0
  5907  000F06  6E0B               	movwf	escribeHorariosMemoria@contMemoria^0,c
  5908                           
  5909                           ;main.c: 199:     for (int i = 0; i < 24; i++) {
  5910  000F08  0E00               	movlw	0
  5911  000F0A  6E0E               	movwf	(escribeHorariosMemoria@i+1)^0,c
  5912  000F0C  0E00               	movlw	0
  5913  000F0E  6E0D               	movwf	escribeHorariosMemoria@i^0,c
  5914  000F10                     l2545:
  5915                           
  5916                           ;main.c: 200:         escribe_eeprom(contMemoria++, horarios[i].hora);
  5917  000F10  C00B  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  5918  000F14  C00C  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  5919  000F18  C00D  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  5920  000F1C  C00E  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  5921  000F20  0E00               	movlw	0
  5922  000F22  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5923  000F24  0E03               	movlw	3
  5924  000F26  6E03               	movwf	___wmul@multiplicand^0,c
  5925  000F28  EC92  F00D         	call	___wmul	;wreg free
  5926  000F2C  0E60               	movlw	low _horarios
  5927  000F2E  2401               	addwf	?___wmul^0,w,c
  5928  000F30  6ED9               	movwf	fsr2l,c
  5929  000F32  0E00               	movlw	high _horarios
  5930  000F34  2002               	addwfc	(?___wmul+1)^0,w,c
  5931  000F36  6EDA               	movwf	fsr2h,c
  5932  000F38  50DF               	movf	indf2,w,c
  5933  000F3A  6E09               	movwf	escribe_eeprom@dato^0,c
  5934  000F3C  EC26  F00D         	call	_escribe_eeprom	;wreg free
  5935  000F40  4A0B               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  5936  000F42  2A0C               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  5937  000F44                     
  5938                           ;main.c: 201:         escribe_eeprom(contMemoria++, horarios[i].regar);
  5939  000F44  C00B  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  5940  000F48  C00C  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  5941  000F4C  C00D  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  5942  000F50  C00E  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  5943  000F54  0E00               	movlw	0
  5944  000F56  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5945  000F58  0E03               	movlw	3
  5946  000F5A  6E03               	movwf	___wmul@multiplicand^0,c
  5947  000F5C  EC92  F00D         	call	___wmul	;wreg free
  5948  000F60  0E61               	movlw	low (_horarios+1)
  5949  000F62  2401               	addwf	?___wmul^0,w,c
  5950  000F64  6ED9               	movwf	fsr2l,c
  5951  000F66  0E00               	movlw	high (_horarios+1)
  5952  000F68  2002               	addwfc	(?___wmul+1)^0,w,c
  5953  000F6A  6EDA               	movwf	fsr2h,c
  5954  000F6C  50DF               	movf	indf2,w,c
  5955  000F6E  6E09               	movwf	escribe_eeprom@dato^0,c
  5956  000F70  EC26  F00D         	call	_escribe_eeprom	;wreg free
  5957  000F74  4A0B               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  5958  000F76  2A0C               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  5959  000F78                     
  5960                           ;main.c: 202:         escribe_eeprom(contMemoria++, horarios[i].tiempoRegar);
  5961  000F78  C00B  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  5962  000F7C  C00C  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  5963  000F80  C00D  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  5964  000F84  C00E  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  5965  000F88  0E00               	movlw	0
  5966  000F8A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5967  000F8C  0E03               	movlw	3
  5968  000F8E  6E03               	movwf	___wmul@multiplicand^0,c
  5969  000F90  EC92  F00D         	call	___wmul	;wreg free
  5970  000F94  0E62               	movlw	low (_horarios+2)
  5971  000F96  2401               	addwf	?___wmul^0,w,c
  5972  000F98  6ED9               	movwf	fsr2l,c
  5973  000F9A  0E00               	movlw	high (_horarios+2)
  5974  000F9C  2002               	addwfc	(?___wmul+1)^0,w,c
  5975  000F9E  6EDA               	movwf	fsr2h,c
  5976  000FA0  50DF               	movf	indf2,w,c
  5977  000FA2  6E09               	movwf	escribe_eeprom@dato^0,c
  5978  000FA4  EC26  F00D         	call	_escribe_eeprom	;wreg free
  5979  000FA8  4A0B               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  5980  000FAA  2A0C               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  5981  000FAC                     
  5982                           ;main.c: 203:     }
  5983  000FAC  4A0D               	infsnz	escribeHorariosMemoria@i^0,f,c
  5984  000FAE  2A0E               	incf	(escribeHorariosMemoria@i+1)^0,f,c
  5985  000FB0  BE0E               	btfsc	(escribeHorariosMemoria@i+1)^0,7,c
  5986  000FB2  EFE4  F007         	goto	u1851
  5987  000FB6  500E               	movf	(escribeHorariosMemoria@i+1)^0,w,c
  5988  000FB8  E109               	bnz	u1850
  5989  000FBA  0E18               	movlw	24
  5990  000FBC  5C0D               	subwf	escribeHorariosMemoria@i^0,w,c
  5991  000FBE  A0D8               	btfss	status,0,c
  5992  000FC0  EFE4  F007         	goto	u1851
  5993  000FC4  EFE6  F007         	goto	u1850
  5994  000FC8                     u1851:
  5995  000FC8  EF88  F007         	goto	l2545
  5996  000FCC                     u1850:
  5997  000FCC  0012               	return		;funcret
  5998  000FCE                     __end_of_escribeHorariosMemoria:
  5999                           	opt callstack 0
  6000                           
  6001 ;; *************** function _escribe_eeprom *****************
  6002 ;; Defined at:
  6003 ;;		line 167 in file "main.c"
  6004 ;; Parameters:    Size  Location     Type
  6005 ;;  direccion       2    6[COMRAM] unsigned short 
  6006 ;;  dato            1    8[COMRAM] unsigned char 
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;		None
  6009 ;; Return value:  Size  Location     Type
  6010 ;;                  1    wreg      void 
  6011 ;; Registers used:
  6012 ;;		wreg, status,2, status,0, cstack
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/0
  6015 ;;		On exit  : 0/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6018 ;;      Params:         3       0       0       0       0       0       0       0       0
  6019 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6020 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6021 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6022 ;;Total ram usage:        4 bytes
  6023 ;; Hardware stack levels used:    1
  6024 ;; Hardware stack levels required when called:    3
  6025 ;; This function calls:
  6026 ;;		_i2c_detener
  6027 ;;		_i2c_envia_dato
  6028 ;;		_i2c_inicia_com
  6029 ;; This function is called by:
  6030 ;;		_escribeHorariosMemoria
  6031 ;; This function uses a non-reentrant model
  6032 ;;
  6033                           
  6034                           	psect	text31
  6035  001A4C                     __ptext31:
  6036                           	opt callstack 0
  6037  001A4C                     _escribe_eeprom:
  6038                           	opt callstack 24
  6039  001A4C                     
  6040                           ;main.c: 168:     i2c_inicia_com();
  6041  001A4C  EC10  F00E         	call	_i2c_inicia_com	;wreg free
  6042                           
  6043                           ;main.c: 169:     i2c_envia_dato(0xAE);
  6044  001A50  0EAE               	movlw	174
  6045  001A52  EC01  F00E         	call	_i2c_envia_dato
  6046                           
  6047                           ;main.c: 170:     i2c_envia_dato(direccion >> 8);
  6048  001A56  5008               	movf	(escribe_eeprom@direccion+1)^0,w,c
  6049  001A58  EC01  F00E         	call	_i2c_envia_dato
  6050                           
  6051                           ;main.c: 172:     i2c_envia_dato(direccion);
  6052  001A5C  5007               	movf	escribe_eeprom@direccion^0,w,c
  6053  001A5E  EC01  F00E         	call	_i2c_envia_dato
  6054                           
  6055                           ;main.c: 174:     i2c_envia_dato(dato);
  6056  001A62  5009               	movf	escribe_eeprom@dato^0,w,c
  6057  001A64  EC01  F00E         	call	_i2c_envia_dato
  6058                           
  6059                           ;main.c: 175:     i2c_detener();
  6060  001A68  EC14  F00E         	call	_i2c_detener	;wreg free
  6061  001A6C                     
  6062                           ;main.c: 176:     _delay((unsigned long)((10)*(4000000/4000.0)));
  6063  001A6C  0E0D               	movlw	13
  6064  001A6E  6E0A               	movwf	??_escribe_eeprom^0,c
  6065  001A70  0EFC               	movlw	252
  6066  001A72                     u2497:
  6067  001A72  2EE8               	decfsz	wreg,f,c
  6068  001A74  D7FE               	bra	u2497
  6069  001A76  2E0A               	decfsz	??_escribe_eeprom^0,f,c
  6070  001A78  D7FC               	bra	u2497
  6071  001A7A  0012               	return		;funcret
  6072  001A7C                     __end_of_escribe_eeprom:
  6073                           	opt callstack 0
  6074                           
  6075 ;; *************** function _UART_read *****************
  6076 ;; Defined at:
  6077 ;;		line 34 in file "./UART.h"
  6078 ;; Parameters:    Size  Location     Type
  6079 ;;		None
  6080 ;; Auto vars:     Size  Location     Type
  6081 ;;		None
  6082 ;; Return value:  Size  Location     Type
  6083 ;;                  1    wreg      unsigned char 
  6084 ;; Registers used:
  6085 ;;		wreg, status,2
  6086 ;; Tracked objects:
  6087 ;;		On entry : 0/0
  6088 ;;		On exit  : 0/0
  6089 ;;		Unchanged: 0/0
  6090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6091 ;;      Params:         0       0       0       0       0       0       0       0       0
  6092 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6094 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6095 ;;Total ram usage:        0 bytes
  6096 ;; Hardware stack levels used:    1
  6097 ;; Hardware stack levels required when called:    1
  6098 ;; This function calls:
  6099 ;;		Nothing
  6100 ;; This function is called by:
  6101 ;;		_setRtc
  6102 ;;		_asignarHorarios
  6103 ;;		_setTiempoRegar
  6104 ;;		_lecturaWifi
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           	psect	text32
  6109  0017E2                     __ptext32:
  6110                           	opt callstack 0
  6111  0017E2                     _UART_read:
  6112                           	opt callstack 27
  6113  0017E2                     
  6114                           ;./UART.h: 36:     TMR0 = VALOR_TIMER0UART;
  6115  0017E2  0E67               	movlw	103
  6116  0017E4  6ED7               	movwf	215,c	;volatile
  6117  0017E6  0E69               	movlw	105
  6118  0017E8  6ED6               	movwf	214,c	;volatile
  6119                           
  6120                           ;./UART.h: 37:     esperaDatoConcluida = 0;
  6121  0017EA  0E00               	movlw	0
  6122  0017EC  0100               	movlb	0	; () banked
  6123  0017EE  6FCA               	movwf	_esperaDatoConcluida& (0+255),b
  6124                           
  6125                           ;./UART.h: 38:     esperandoDatos = 1;
  6126  0017F0  0E01               	movlw	1
  6127  0017F2  6E5E               	movwf	_esperandoDatos^0,c
  6128                           
  6129                           ;./UART.h: 39:     byteUart = 0;
  6130  0017F4  0E00               	movlw	0
  6131  0017F6  6FCB               	movwf	_byteUart& (0+255),b
  6132                           
  6133                           ;./UART.h: 40:     tiempoInactividadTrans = 0;
  6134  0017F8  0E00               	movlw	0
  6135  0017FA  6FCC               	movwf	_tiempoInactividadTrans& (0+255),b
  6136  0017FC                     l121:
  6137                           
  6138                           ; BSR set to: 0
  6139  0017FC  BA9E               	btfsc	158,5,c	;volatile
  6140  0017FE  EF03  F00C         	goto	u1701
  6141  001802  EF05  F00C         	goto	u1700
  6142  001806                     u1701:
  6143  001806  EF0D  F00C         	goto	l2451
  6144  00180A                     u1700:
  6145  00180A                     
  6146                           ; BSR set to: 0
  6147  00180A  51CA               	movf	_esperaDatoConcluida& (0+255),w,b
  6148  00180C  B4D8               	btfsc	status,2,c
  6149  00180E  EF0B  F00C         	goto	u1711
  6150  001812  EF0D  F00C         	goto	u1710
  6151  001816                     u1711:
  6152  001816  EFFE  F00B         	goto	l121
  6153  00181A                     u1710:
  6154  00181A                     l2451:
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;./UART.h: 44:     if (!esperaDatoConcluida) {
  6158  00181A  51CA               	movf	_esperaDatoConcluida& (0+255),w,b
  6159  00181C  A4D8               	btfss	status,2,c
  6160  00181E  EF13  F00C         	goto	u1721
  6161  001822  EF15  F00C         	goto	u1720
  6162  001826                     u1721:
  6163  001826  EF19  F00C         	goto	l126
  6164  00182A                     u1720:
  6165  00182A                     
  6166                           ; BSR set to: 0
  6167                           ;./UART.h: 45:         byteUart = RCREG;
  6168  00182A  CFAE F0CB          	movff	4014,_byteUart	;volatile
  6169  00182E                     
  6170                           ; BSR set to: 0
  6171                           ;./UART.h: 46:         esperandoDatos = 0;
  6172  00182E  0E00               	movlw	0
  6173  001830  6E5E               	movwf	_esperandoDatos^0,c
  6174  001832                     l126:
  6175                           
  6176                           ; BSR set to: 0
  6177                           ;./UART.h: 49:     return byteUart;
  6178  001832  51CB               	movf	_byteUart& (0+255),w,b
  6179  001834                     
  6180                           ; BSR set to: 0
  6181  001834  0012               	return		;funcret
  6182  001836                     __end_of_UART_read:
  6183                           	opt callstack 0
  6184                           
  6185 ;; *************** function _UART_printf *****************
  6186 ;; Defined at:
  6187 ;;		line 57 in file "./UART.h"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;  cadena          2    1[COMRAM] PTR unsigned char 
  6190 ;;		 -> dameDatosSistema@buffer(15), STR_29(50), STR_28(42), STR_27(3), 
  6191 ;;		 -> STR_26(14), STR_25(32), STR_24(49), STR_23(37), 
  6192 ;;		 -> STR_22(27), STR_21(37), STR_20(32), STR_19(28), 
  6193 ;;		 -> STR_18(38), STR_17(37), STR_16(23), STR_15(72), 
  6194 ;;		 -> STR_14(23), STR_13(51), STR_12(23), STR_11(23), 
  6195 ;;		 -> STR_10(26), STR_9(55), STR_8(23), STR_7(51), 
  6196 ;;		 -> STR_6(25), STR_5(37), STR_4(31), STR_3(43), 
  6197 ;;		 -> STR_2(16), STR_1(23), 
  6198 ;; Auto vars:     Size  Location     Type
  6199 ;;		None
  6200 ;; Return value:  Size  Location     Type
  6201 ;;                  1    wreg      void 
  6202 ;; Registers used:
  6203 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6204 ;; Tracked objects:
  6205 ;;		On entry : 0/0
  6206 ;;		On exit  : 0/0
  6207 ;;		Unchanged: 0/0
  6208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6209 ;;      Params:         2       0       0       0       0       0       0       0       0
  6210 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6211 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6212 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6213 ;;Total ram usage:        2 bytes
  6214 ;; Hardware stack levels used:    1
  6215 ;; Hardware stack levels required when called:    2
  6216 ;; This function calls:
  6217 ;;		_UART_write
  6218 ;; This function is called by:
  6219 ;;		_setRtc
  6220 ;;		_fijaHoraRtc
  6221 ;;		_asignarHorarios
  6222 ;;		_setTiempoRegar
  6223 ;;		_mostrarMenu
  6224 ;;		_sistemaPrincipal
  6225 ;;		_dameDatosSistema
  6226 ;;		_lecturaWifi
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230                           	psect	text33
  6231  0016DA                     __ptext33:
  6232                           	opt callstack 0
  6233  0016DA                     _UART_printf:
  6234                           	opt callstack 26
  6235  0016DA                     
  6236                           ;./UART.h: 58:     while (*cadena) {
  6237  0016DA  EF83  F00B         	goto	l2465
  6238  0016DE                     l2461:
  6239                           
  6240                           ;./UART.h: 59:         UART_write(*cadena++);
  6241  0016DE  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  6242  0016E2  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  6243  0016E6  6AF8               	clrf	tblptru,c
  6244  0016E8  0E07               	movlw	(high __ramtop+-1)
  6245  0016EA  64F7               	cpfsgt	tblptrh,c
  6246  0016EC  D003               	bra	u1737
  6247  0016EE  0008               	tblrd		*
  6248  0016F0  50F5               	movf	tablat,w,c
  6249  0016F2  D005               	bra	u1730
  6250  0016F4                     u1737:
  6251  0016F4  CFF6 FFE1          	movff	tblptrl,fsr1l
  6252  0016F8  CFF7 FFE2          	movff	tblptrh,fsr1h
  6253  0016FC  50E7               	movf	indf1,w,c
  6254  0016FE                     u1730:
  6255  0016FE  ECEB  F00D         	call	_UART_write
  6256  001702  4A02               	infsnz	UART_printf@cadena^0,f,c
  6257  001704  2A03               	incf	(UART_printf@cadena+1)^0,f,c
  6258  001706                     l2465:
  6259                           
  6260                           ;./UART.h: 58:     while (*cadena) {
  6261  001706  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  6262  00170A  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  6263  00170E  6AF8               	clrf	tblptru,c
  6264  001710  0E07               	movlw	(high __ramtop+-1)
  6265  001712  64F7               	cpfsgt	tblptrh,c
  6266  001714  D003               	bra	u1747
  6267  001716  0008               	tblrd		*
  6268  001718  50F5               	movf	tablat,w,c
  6269  00171A  D005               	bra	u1740
  6270  00171C                     u1747:
  6271  00171C  CFF6 FFE1          	movff	tblptrl,fsr1l
  6272  001720  CFF7 FFE2          	movff	tblptrh,fsr1h
  6273  001724  50E7               	movf	indf1,w,c
  6274  001726                     u1740:
  6275  001726  0900               	iorlw	0
  6276  001728  A4D8               	btfss	status,2,c
  6277  00172A  EF99  F00B         	goto	u1751
  6278  00172E  EF9B  F00B         	goto	u1750
  6279  001732                     u1751:
  6280  001732  EF6F  F00B         	goto	l2461
  6281  001736                     u1750:
  6282  001736  0012               	return		;funcret
  6283  001738                     __end_of_UART_printf:
  6284                           	opt callstack 0
  6285                           
  6286 ;; *************** function _UART_write *****************
  6287 ;; Defined at:
  6288 ;;		line 52 in file "./UART.h"
  6289 ;; Parameters:    Size  Location     Type
  6290 ;;  dato            1    wreg     unsigned char 
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;  dato            1    0[COMRAM] unsigned char 
  6293 ;; Return value:  Size  Location     Type
  6294 ;;                  1    wreg      void 
  6295 ;; Registers used:
  6296 ;;		wreg
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6302 ;;      Params:         0       0       0       0       0       0       0       0       0
  6303 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6304 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6305 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6306 ;;Total ram usage:        1 bytes
  6307 ;; Hardware stack levels used:    1
  6308 ;; Hardware stack levels required when called:    1
  6309 ;; This function calls:
  6310 ;;		Nothing
  6311 ;; This function is called by:
  6312 ;;		_UART_printf
  6313 ;;		_lecturaWifi
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317                           	psect	text34
  6318  001BD6                     __ptext34:
  6319                           	opt callstack 0
  6320  001BD6                     _UART_write:
  6321                           	opt callstack 26
  6322                           
  6323                           ;incstack = 0
  6324                           ;UART_write@dato stored from wreg
  6325  001BD6  6E01               	movwf	UART_write@dato^0,c
  6326  001BD8                     
  6327                           ;./UART.h: 53:     TXREG = dato;
  6328  001BD8  C001  FFAD         	movff	UART_write@dato,4013	;volatile
  6329  001BDC                     l130:
  6330  001BDC  A2AC               	btfss	172,1,c	;volatile
  6331  001BDE  EFF3  F00D         	goto	u1651
  6332  001BE2  EFF5  F00D         	goto	u1650
  6333  001BE6                     u1651:
  6334  001BE6  EFEE  F00D         	goto	l130
  6335  001BEA                     u1650:
  6336  001BEA  0012               	return		;funcret
  6337  001BEC                     __end_of_UART_write:
  6338                           	opt callstack 0
  6339                           
  6340 ;; *************** function _restablecerDatosSensor *****************
  6341 ;; Defined at:
  6342 ;;		line 467 in file "main.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;		None
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;  i               2    4[COMRAM] int 
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  1    wreg      void 
  6349 ;; Registers used:
  6350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6356 ;;      Params:         0       0       0       0       0       0       0       0       0
  6357 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6358 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6359 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6360 ;;Total ram usage:        2 bytes
  6361 ;; Hardware stack levels used:    1
  6362 ;; Hardware stack levels required when called:    2
  6363 ;; This function calls:
  6364 ;;		_constructorSensor
  6365 ;; This function is called by:
  6366 ;;		_main
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           	psect	text35
  6371  001888                     __ptext35:
  6372                           	opt callstack 0
  6373  001888                     _restablecerDatosSensor:
  6374                           	opt callstack 28
  6375  001888                     
  6376                           ;main.c: 468:     for (int i = 0; i < 3; i++)
  6377  001888  0E00               	movlw	0
  6378  00188A  6E06               	movwf	(restablecerDatosSensor@i+1)^0,c
  6379  00188C  0E00               	movlw	0
  6380  00188E  6E05               	movwf	restablecerDatosSensor@i^0,c
  6381  001890                     l2985:
  6382                           
  6383                           ;main.c: 469:         constructorSensor(sensores[i], 0, i);
  6384  001890  90D8               	bcf	status,0,c
  6385  001892  3405               	rlcf	restablecerDatosSensor@i^0,w,c
  6386  001894  6ED9               	movwf	fsr2l,c
  6387  001896  3406               	rlcf	(restablecerDatosSensor@i+1)^0,w,c
  6388  001898  6EDA               	movwf	fsr2h,c
  6389  00189A  0EA8               	movlw	low _sensores
  6390  00189C  26D9               	addwf	fsr2l,f,c
  6391  00189E  0E00               	movlw	high _sensores
  6392  0018A0  22DA               	addwfc	fsr2h,f,c
  6393  0018A2  CFDE F001          	movff	postinc2,constructorSensor@s
  6394  0018A6  CFDD F002          	movff	postdec2,constructorSensor@s+1
  6395  0018AA  0E00               	movlw	0
  6396  0018AC  6E03               	movwf	constructorSensor@humedad^0,c
  6397  0018AE  C005  F004         	movff	restablecerDatosSensor@i,constructorSensor@pin
  6398  0018B2  EC07  F00E         	call	_constructorSensor	;wreg free
  6399  0018B6  4A05               	infsnz	restablecerDatosSensor@i^0,f,c
  6400  0018B8  2A06               	incf	(restablecerDatosSensor@i+1)^0,f,c
  6401  0018BA  BE06               	btfsc	(restablecerDatosSensor@i+1)^0,7,c
  6402  0018BC  EF69  F00C         	goto	u2321
  6403  0018C0  5006               	movf	(restablecerDatosSensor@i+1)^0,w,c
  6404  0018C2  E109               	bnz	u2320
  6405  0018C4  0E03               	movlw	3
  6406  0018C6  5C05               	subwf	restablecerDatosSensor@i^0,w,c
  6407  0018C8  A0D8               	btfss	status,0,c
  6408  0018CA  EF69  F00C         	goto	u2321
  6409  0018CE  EF6B  F00C         	goto	u2320
  6410  0018D2                     u2321:
  6411  0018D2  EF48  F00C         	goto	l2985
  6412  0018D6                     u2320:
  6413  0018D6  0012               	return		;funcret
  6414  0018D8                     __end_of_restablecerDatosSensor:
  6415                           	opt callstack 0
  6416                           
  6417 ;; *************** function _constructorSensor *****************
  6418 ;; Defined at:
  6419 ;;		line 101 in file "main.c"
  6420 ;; Parameters:    Size  Location     Type
  6421 ;;  s               2    0[COMRAM] struct .
  6422 ;;  humedad         1    2[COMRAM] unsigned char 
  6423 ;;  pin             1    3[COMRAM] unsigned char 
  6424 ;; Auto vars:     Size  Location     Type
  6425 ;;		None
  6426 ;; Return value:  Size  Location     Type
  6427 ;;                  1    wreg      void 
  6428 ;; Registers used:
  6429 ;;		None
  6430 ;; Tracked objects:
  6431 ;;		On entry : 0/0
  6432 ;;		On exit  : 0/0
  6433 ;;		Unchanged: 0/0
  6434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6435 ;;      Params:         4       0       0       0       0       0       0       0       0
  6436 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6437 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6438 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6439 ;;Total ram usage:        4 bytes
  6440 ;; Hardware stack levels used:    1
  6441 ;; Hardware stack levels required when called:    1
  6442 ;; This function calls:
  6443 ;;		Nothing
  6444 ;; This function is called by:
  6445 ;;		_restablecerDatosSensor
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           	psect	text36
  6450  001C0E                     __ptext36:
  6451                           	opt callstack 0
  6452  001C0E                     _constructorSensor:
  6453                           	opt callstack 28
  6454  001C0E                     
  6455                           ;main.c: 103:     s.humedadMedida = humedad;
  6456  001C0E  C003  F001         	movff	constructorSensor@humedad,constructorSensor@s
  6457                           
  6458                           ;main.c: 104:     s.pinSensor = pin;
  6459  001C12  C004  F002         	movff	constructorSensor@pin,constructorSensor@s+1
  6460  001C16  0012               	return		;funcret
  6461  001C18                     __end_of_constructorSensor:
  6462                           	opt callstack 0
  6463                           
  6464 ;; *************** function _leeHorariosMemoria *****************
  6465 ;; Defined at:
  6466 ;;		line 206 in file "main.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;		None
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;  i               2    8[COMRAM] int 
  6471 ;;  contMemoria     2    6[COMRAM] int 
  6472 ;; Return value:  Size  Location     Type
  6473 ;;                  1    wreg      void 
  6474 ;; Registers used:
  6475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6476 ;; Tracked objects:
  6477 ;;		On entry : 0/0
  6478 ;;		On exit  : 0/0
  6479 ;;		Unchanged: 0/0
  6480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6481 ;;      Params:         0       0       0       0       0       0       0       0       0
  6482 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6483 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6484 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6485 ;;Total ram usage:        4 bytes
  6486 ;; Hardware stack levels used:    1
  6487 ;; Hardware stack levels required when called:    4
  6488 ;; This function calls:
  6489 ;;		___wmul
  6490 ;;		_leer_eeprom
  6491 ;; This function is called by:
  6492 ;;		_main
  6493 ;; This function uses a non-reentrant model
  6494 ;;
  6495                           
  6496                           	psect	text37
  6497  001164                     __ptext37:
  6498                           	opt callstack 0
  6499  001164                     _leeHorariosMemoria:
  6500                           	opt callstack 26
  6501  001164                     
  6502                           ;main.c: 208:     int contMemoria = 0;
  6503  001164  0E00               	movlw	0
  6504  001166  6E08               	movwf	(leeHorariosMemoria@contMemoria+1)^0,c
  6505  001168  0E00               	movlw	0
  6506  00116A  6E07               	movwf	leeHorariosMemoria@contMemoria^0,c
  6507                           
  6508                           ;main.c: 210:     for (int i = 0; i < 24; i++) {
  6509  00116C  0E00               	movlw	0
  6510  00116E  6E0A               	movwf	(leeHorariosMemoria@i+1)^0,c
  6511  001170  0E00               	movlw	0
  6512  001172  6E09               	movwf	leeHorariosMemoria@i^0,c
  6513  001174                     l2965:
  6514                           
  6515                           ;main.c: 211:         horarios[i].hora = leer_eeprom(contMemoria++);
  6516  001174  C009  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  6517  001178  C00A  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  6518  00117C  0E00               	movlw	0
  6519  00117E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6520  001180  0E03               	movlw	3
  6521  001182  6E03               	movwf	___wmul@multiplicand^0,c
  6522  001184  EC92  F00D         	call	___wmul	;wreg free
  6523  001188  0E60               	movlw	low _horarios
  6524  00118A  2401               	addwf	?___wmul^0,w,c
  6525  00118C  6ED9               	movwf	fsr2l,c
  6526  00118E  0E00               	movlw	high _horarios
  6527  001190  2002               	addwfc	(?___wmul+1)^0,w,c
  6528  001192  6EDA               	movwf	fsr2h,c
  6529  001194  C007  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  6530  001198  C008  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  6531  00119C  ECD2  F00C         	call	_leer_eeprom	;wreg free
  6532  0011A0  6EDF               	movwf	indf2,c
  6533  0011A2  4A07               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  6534  0011A4  2A08               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  6535  0011A6                     
  6536                           ;main.c: 212:         horarios[i].regar = leer_eeprom(contMemoria++);
  6537  0011A6  C009  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  6538  0011AA  C00A  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  6539  0011AE  0E00               	movlw	0
  6540  0011B0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6541  0011B2  0E03               	movlw	3
  6542  0011B4  6E03               	movwf	___wmul@multiplicand^0,c
  6543  0011B6  EC92  F00D         	call	___wmul	;wreg free
  6544  0011BA  0E61               	movlw	low (_horarios+1)
  6545  0011BC  2401               	addwf	?___wmul^0,w,c
  6546  0011BE  6ED9               	movwf	fsr2l,c
  6547  0011C0  0E00               	movlw	high (_horarios+1)
  6548  0011C2  2002               	addwfc	(?___wmul+1)^0,w,c
  6549  0011C4  6EDA               	movwf	fsr2h,c
  6550  0011C6  C007  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  6551  0011CA  C008  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  6552  0011CE  ECD2  F00C         	call	_leer_eeprom	;wreg free
  6553  0011D2  6EDF               	movwf	indf2,c
  6554  0011D4  4A07               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  6555  0011D6  2A08               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  6556  0011D8                     
  6557                           ;main.c: 213:         horarios[i].tiempoRegar = leer_eeprom(contMemoria++);
  6558  0011D8  C009  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  6559  0011DC  C00A  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  6560  0011E0  0E00               	movlw	0
  6561  0011E2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6562  0011E4  0E03               	movlw	3
  6563  0011E6  6E03               	movwf	___wmul@multiplicand^0,c
  6564  0011E8  EC92  F00D         	call	___wmul	;wreg free
  6565  0011EC  0E62               	movlw	low (_horarios+2)
  6566  0011EE  2401               	addwf	?___wmul^0,w,c
  6567  0011F0  6ED9               	movwf	fsr2l,c
  6568  0011F2  0E00               	movlw	high (_horarios+2)
  6569  0011F4  2002               	addwfc	(?___wmul+1)^0,w,c
  6570  0011F6  6EDA               	movwf	fsr2h,c
  6571  0011F8  C007  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  6572  0011FC  C008  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  6573  001200  ECD2  F00C         	call	_leer_eeprom	;wreg free
  6574  001204  6EDF               	movwf	indf2,c
  6575  001206  4A07               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  6576  001208  2A08               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  6577  00120A                     
  6578                           ;main.c: 214:     }
  6579  00120A  4A09               	infsnz	leeHorariosMemoria@i^0,f,c
  6580  00120C  2A0A               	incf	(leeHorariosMemoria@i+1)^0,f,c
  6581  00120E  BE0A               	btfsc	(leeHorariosMemoria@i+1)^0,7,c
  6582  001210  EF13  F009         	goto	u2311
  6583  001214  500A               	movf	(leeHorariosMemoria@i+1)^0,w,c
  6584  001216  E109               	bnz	u2310
  6585  001218  0E18               	movlw	24
  6586  00121A  5C09               	subwf	leeHorariosMemoria@i^0,w,c
  6587  00121C  A0D8               	btfss	status,0,c
  6588  00121E  EF13  F009         	goto	u2311
  6589  001222  EF15  F009         	goto	u2310
  6590  001226                     u2311:
  6591  001226  EFBA  F008         	goto	l2965
  6592  00122A                     u2310:
  6593  00122A  0012               	return		;funcret
  6594  00122C                     __end_of_leeHorariosMemoria:
  6595                           	opt callstack 0
  6596                           
  6597 ;; *************** function _leer_eeprom *****************
  6598 ;; Defined at:
  6599 ;;		line 179 in file "main.c"
  6600 ;; Parameters:    Size  Location     Type
  6601 ;;  direccion       2    2[COMRAM] unsigned short 
  6602 ;; Auto vars:     Size  Location     Type
  6603 ;;  dato            1    5[COMRAM] unsigned char 
  6604 ;; Return value:  Size  Location     Type
  6605 ;;                  1    wreg      unsigned char 
  6606 ;; Registers used:
  6607 ;;		wreg, status,2, status,0, cstack
  6608 ;; Tracked objects:
  6609 ;;		On entry : 0/0
  6610 ;;		On exit  : 0/0
  6611 ;;		Unchanged: 0/0
  6612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6613 ;;      Params:         2       0       0       0       0       0       0       0       0
  6614 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6615 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6616 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6617 ;;Total ram usage:        4 bytes
  6618 ;; Hardware stack levels used:    1
  6619 ;; Hardware stack levels required when called:    3
  6620 ;; This function calls:
  6621 ;;		_i2c_detener
  6622 ;;		_i2c_envia_dato
  6623 ;;		_i2c_inicia_com
  6624 ;;		_i2c_recibe_dato
  6625 ;;		_i2c_reinicia_com
  6626 ;; This function is called by:
  6627 ;;		_leeHorariosMemoria
  6628 ;; This function uses a non-reentrant model
  6629 ;;
  6630                           
  6631                           	psect	text38
  6632  0019A4                     __ptext38:
  6633                           	opt callstack 0
  6634  0019A4                     _leer_eeprom:
  6635                           	opt callstack 26
  6636  0019A4                     
  6637                           ;main.c: 181:     unsigned char dato;;main.c: 183:     i2c_inicia_com();
  6638  0019A4  EC10  F00E         	call	_i2c_inicia_com	;wreg free
  6639                           
  6640                           ;main.c: 184:     i2c_envia_dato(0xAE);
  6641  0019A8  0EAE               	movlw	174
  6642  0019AA  EC01  F00E         	call	_i2c_envia_dato
  6643                           
  6644                           ;main.c: 185:     i2c_envia_dato(direccion >> 8);
  6645  0019AE  5004               	movf	(leer_eeprom@direccion+1)^0,w,c
  6646  0019B0  EC01  F00E         	call	_i2c_envia_dato
  6647                           
  6648                           ;main.c: 186:     i2c_envia_dato(direccion);
  6649  0019B4  5003               	movf	leer_eeprom@direccion^0,w,c
  6650  0019B6  EC01  F00E         	call	_i2c_envia_dato
  6651                           
  6652                           ;main.c: 187:     i2c_reinicia_com();
  6653  0019BA  EC0C  F00E         	call	_i2c_reinicia_com	;wreg free
  6654                           
  6655                           ;main.c: 188:     i2c_envia_dato(0xAF);
  6656  0019BE  0EAF               	movlw	175
  6657  0019C0  EC01  F00E         	call	_i2c_envia_dato
  6658                           
  6659                           ;main.c: 189:     dato = i2c_recibe_dato();
  6660  0019C4  ECD1  F00D         	call	_i2c_recibe_dato	;wreg free
  6661  0019C8  6E06               	movwf	leer_eeprom@dato^0,c
  6662                           
  6663                           ;main.c: 190:     i2c_detener();
  6664  0019CA  EC14  F00E         	call	_i2c_detener	;wreg free
  6665  0019CE                     
  6666                           ;main.c: 191:     _delay((unsigned long)((10)*(4000000/4000.0)));
  6667  0019CE  0E0D               	movlw	13
  6668  0019D0  6E05               	movwf	??_leer_eeprom^0,c
  6669  0019D2  0EFC               	movlw	252
  6670  0019D4                     u2507:
  6671  0019D4  2EE8               	decfsz	wreg,f,c
  6672  0019D6  D7FE               	bra	u2507
  6673  0019D8  2E05               	decfsz	??_leer_eeprom^0,f,c
  6674  0019DA  D7FC               	bra	u2507
  6675  0019DC                     
  6676                           ;main.c: 193:     return dato;
  6677  0019DC  5006               	movf	leer_eeprom@dato^0,w,c
  6678  0019DE  0012               	return		;funcret
  6679  0019E0                     __end_of_leer_eeprom:
  6680                           	opt callstack 0
  6681                           
  6682 ;; *************** function _i2c_reinicia_com *****************
  6683 ;; Defined at:
  6684 ;;		line 37 in file "./I2C.h"
  6685 ;; Parameters:    Size  Location     Type
  6686 ;;		None
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;		None
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  1    wreg      void 
  6691 ;; Registers used:
  6692 ;;		wreg, status,2, status,0, cstack
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6698 ;;      Params:         0       0       0       0       0       0       0       0       0
  6699 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6700 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6701 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6702 ;;Total ram usage:        0 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; Hardware stack levels required when called:    2
  6705 ;; This function calls:
  6706 ;;		_i2c_espera
  6707 ;; This function is called by:
  6708 ;;		_leer_rtc
  6709 ;;		_leer_eeprom
  6710 ;; This function uses a non-reentrant model
  6711 ;;
  6712                           
  6713                           	psect	text39
  6714  001C18                     __ptext39:
  6715                           	opt callstack 0
  6716  001C18                     _i2c_reinicia_com:
  6717                           	opt callstack 25
  6718  001C18                     
  6719                           ;./I2C.h: 38:     i2c_espera();
  6720  001C18  EC7F  F00D         	call	_i2c_espera	;wreg free
  6721  001C1C                     
  6722                           ;./I2C.h: 39:     SSPCON2bits.RSEN = 1;
  6723  001C1C  82C5               	bsf	197,1,c	;volatile
  6724  001C1E  0012               	return		;funcret
  6725  001C20                     __end_of_i2c_reinicia_com:
  6726                           	opt callstack 0
  6727                           
  6728 ;; *************** function _i2c_recibe_dato *****************
  6729 ;; Defined at:
  6730 ;;		line 68 in file "./I2C.h"
  6731 ;; Parameters:    Size  Location     Type
  6732 ;;		None
  6733 ;; Auto vars:     Size  Location     Type
  6734 ;;  datoleido       1    1[COMRAM] unsigned char 
  6735 ;; Return value:  Size  Location     Type
  6736 ;;                  1    wreg      unsigned char 
  6737 ;; Registers used:
  6738 ;;		wreg, status,2, status,0, cstack
  6739 ;; Tracked objects:
  6740 ;;		On entry : 0/0
  6741 ;;		On exit  : 0/0
  6742 ;;		Unchanged: 0/0
  6743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6744 ;;      Params:         0       0       0       0       0       0       0       0       0
  6745 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6746 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6747 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6748 ;;Total ram usage:        1 bytes
  6749 ;; Hardware stack levels used:    1
  6750 ;; Hardware stack levels required when called:    2
  6751 ;; This function calls:
  6752 ;;		_i2c_espera
  6753 ;; This function is called by:
  6754 ;;		_leer_rtc
  6755 ;;		_leer_eeprom
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           
  6759                           	psect	text40
  6760  001BA2                     __ptext40:
  6761                           	opt callstack 0
  6762  001BA2                     _i2c_recibe_dato:
  6763                           	opt callstack 25
  6764  001BA2                     
  6765                           ;./I2C.h: 70:     unsigned char datoleido;;./I2C.h: 73:     i2c_espera();
  6766  001BA2  EC7F  F00D         	call	_i2c_espera	;wreg free
  6767  001BA6                     
  6768                           ;./I2C.h: 74:     SSPCON2bits.RCEN = 1;
  6769  001BA6  86C5               	bsf	197,3,c	;volatile
  6770                           
  6771                           ;./I2C.h: 76:     i2c_espera();
  6772  001BA8  EC7F  F00D         	call	_i2c_espera	;wreg free
  6773  001BAC                     
  6774                           ;./I2C.h: 77:     datoleido = SSPBUF;
  6775  001BAC  CFC9 F002          	movff	4041,i2c_recibe_dato@datoleido	;volatile
  6776                           
  6777                           ;./I2C.h: 80:     i2c_espera();
  6778  001BB0  EC7F  F00D         	call	_i2c_espera	;wreg free
  6779  001BB4                     
  6780                           ;./I2C.h: 82:     SSPCON2bits.ACKDT = 1;
  6781  001BB4  8AC5               	bsf	197,5,c	;volatile
  6782  001BB6                     
  6783                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
  6784  001BB6  88C5               	bsf	197,4,c	;volatile
  6785  001BB8                     
  6786                           ;./I2C.h: 91:     return datoleido;
  6787  001BB8  5002               	movf	i2c_recibe_dato@datoleido^0,w,c
  6788  001BBA  0012               	return		;funcret
  6789  001BBC                     __end_of_i2c_recibe_dato:
  6790                           	opt callstack 0
  6791                           
  6792 ;; *************** function _i2c_inicia_com *****************
  6793 ;; Defined at:
  6794 ;;		line 28 in file "./I2C.h"
  6795 ;; Parameters:    Size  Location     Type
  6796 ;;		None
  6797 ;; Auto vars:     Size  Location     Type
  6798 ;;		None
  6799 ;; Return value:  Size  Location     Type
  6800 ;;                  1    wreg      void 
  6801 ;; Registers used:
  6802 ;;		wreg, status,2, status,0, cstack
  6803 ;; Tracked objects:
  6804 ;;		On entry : 0/0
  6805 ;;		On exit  : 0/0
  6806 ;;		Unchanged: 0/0
  6807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6808 ;;      Params:         0       0       0       0       0       0       0       0       0
  6809 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6810 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6811 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6812 ;;Total ram usage:        0 bytes
  6813 ;; Hardware stack levels used:    1
  6814 ;; Hardware stack levels required when called:    2
  6815 ;; This function calls:
  6816 ;;		_i2c_espera
  6817 ;; This function is called by:
  6818 ;;		_escribe_rtc
  6819 ;;		_leer_rtc
  6820 ;;		_escribe_eeprom
  6821 ;;		_leer_eeprom
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           	psect	text41
  6826  001C20                     __ptext41:
  6827                           	opt callstack 0
  6828  001C20                     _i2c_inicia_com:
  6829                           	opt callstack 25
  6830  001C20                     
  6831                           ;./I2C.h: 29:     i2c_espera();
  6832  001C20  EC7F  F00D         	call	_i2c_espera	;wreg free
  6833  001C24                     
  6834                           ;./I2C.h: 30:     SSPCON2bits.SEN = 1;
  6835  001C24  80C5               	bsf	197,0,c	;volatile
  6836  001C26  0012               	return		;funcret
  6837  001C28                     __end_of_i2c_inicia_com:
  6838                           	opt callstack 0
  6839                           
  6840 ;; *************** function _i2c_envia_dato *****************
  6841 ;; Defined at:
  6842 ;;		line 57 in file "./I2C.h"
  6843 ;; Parameters:    Size  Location     Type
  6844 ;;  dato            1    wreg     unsigned char 
  6845 ;; Auto vars:     Size  Location     Type
  6846 ;;  dato            1    1[COMRAM] unsigned char 
  6847 ;; Return value:  Size  Location     Type
  6848 ;;                  1    wreg      unsigned char 
  6849 ;; Registers used:
  6850 ;;		wreg, status,2, status,0, cstack
  6851 ;; Tracked objects:
  6852 ;;		On entry : 0/0
  6853 ;;		On exit  : 0/0
  6854 ;;		Unchanged: 0/0
  6855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6856 ;;      Params:         0       0       0       0       0       0       0       0       0
  6857 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6858 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6859 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6860 ;;Total ram usage:        1 bytes
  6861 ;; Hardware stack levels used:    1
  6862 ;; Hardware stack levels required when called:    2
  6863 ;; This function calls:
  6864 ;;		_i2c_espera
  6865 ;; This function is called by:
  6866 ;;		_escribe_rtc
  6867 ;;		_leer_rtc
  6868 ;;		_escribe_eeprom
  6869 ;;		_leer_eeprom
  6870 ;; This function uses a non-reentrant model
  6871 ;;
  6872                           
  6873                           	psect	text42
  6874  001C02                     __ptext42:
  6875                           	opt callstack 0
  6876  001C02                     _i2c_envia_dato:
  6877                           	opt callstack 25
  6878                           
  6879                           ;incstack = 0
  6880                           ;i2c_envia_dato@dato stored from wreg
  6881  001C02  6E02               	movwf	i2c_envia_dato@dato^0,c
  6882  001C04                     
  6883                           ;./I2C.h: 58:     i2c_espera();
  6884  001C04  EC7F  F00D         	call	_i2c_espera	;wreg free
  6885  001C08                     
  6886                           ;./I2C.h: 59:     SSPBUF = dato;
  6887  001C08  C002  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
  6888  001C0C  0012               	return		;funcret
  6889  001C0E                     __end_of_i2c_envia_dato:
  6890                           	opt callstack 0
  6891                           
  6892 ;; *************** function _i2c_detener *****************
  6893 ;; Defined at:
  6894 ;;		line 46 in file "./I2C.h"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;		None
  6897 ;; Auto vars:     Size  Location     Type
  6898 ;;		None
  6899 ;; Return value:  Size  Location     Type
  6900 ;;                  1    wreg      void 
  6901 ;; Registers used:
  6902 ;;		wreg, status,2, status,0, cstack
  6903 ;; Tracked objects:
  6904 ;;		On entry : 0/0
  6905 ;;		On exit  : 0/0
  6906 ;;		Unchanged: 0/0
  6907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6908 ;;      Params:         0       0       0       0       0       0       0       0       0
  6909 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6910 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6911 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6912 ;;Total ram usage:        0 bytes
  6913 ;; Hardware stack levels used:    1
  6914 ;; Hardware stack levels required when called:    2
  6915 ;; This function calls:
  6916 ;;		_i2c_espera
  6917 ;; This function is called by:
  6918 ;;		_escribe_rtc
  6919 ;;		_leer_rtc
  6920 ;;		_escribe_eeprom
  6921 ;;		_leer_eeprom
  6922 ;; This function uses a non-reentrant model
  6923 ;;
  6924                           
  6925                           	psect	text43
  6926  001C28                     __ptext43:
  6927                           	opt callstack 0
  6928  001C28                     _i2c_detener:
  6929                           	opt callstack 25
  6930  001C28                     
  6931                           ;./I2C.h: 47:     i2c_espera();
  6932  001C28  EC7F  F00D         	call	_i2c_espera	;wreg free
  6933  001C2C                     
  6934                           ;./I2C.h: 48:     SSPCON2bits.PEN = 1;
  6935  001C2C  84C5               	bsf	197,2,c	;volatile
  6936  001C2E  0012               	return		;funcret
  6937  001C30                     __end_of_i2c_detener:
  6938                           	opt callstack 0
  6939                           
  6940 ;; *************** function _i2c_espera *****************
  6941 ;; Defined at:
  6942 ;;		line 20 in file "./I2C.h"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;		None
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;		None
  6947 ;; Return value:  Size  Location     Type
  6948 ;;                  1    wreg      void 
  6949 ;; Registers used:
  6950 ;;		wreg, status,2, status,0
  6951 ;; Tracked objects:
  6952 ;;		On entry : 0/0
  6953 ;;		On exit  : 0/0
  6954 ;;		Unchanged: 0/0
  6955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6956 ;;      Params:         0       0       0       0       0       0       0       0       0
  6957 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6958 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6959 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6960 ;;Total ram usage:        1 bytes
  6961 ;; Hardware stack levels used:    1
  6962 ;; Hardware stack levels required when called:    1
  6963 ;; This function calls:
  6964 ;;		Nothing
  6965 ;; This function is called by:
  6966 ;;		_i2c_inicia_com
  6967 ;;		_i2c_reinicia_com
  6968 ;;		_i2c_detener
  6969 ;;		_i2c_envia_dato
  6970 ;;		_i2c_recibe_dato
  6971 ;; This function uses a non-reentrant model
  6972 ;;
  6973                           
  6974                           	psect	text44
  6975  001AFE                     __ptext44:
  6976                           	opt callstack 0
  6977  001AFE                     _i2c_espera:
  6978                           	opt callstack 25
  6979  001AFE                     l2301:
  6980  001AFE  CFC5 F001          	movff	4037,??_i2c_espera	;volatile
  6981  001B02  0E1F               	movlw	31
  6982  001B04  1601               	andwf	??_i2c_espera^0,f,c
  6983  001B06  A4D8               	btfss	status,2,c
  6984  001B08  EF88  F00D         	goto	u1481
  6985  001B0C  EF8A  F00D         	goto	u1480
  6986  001B10                     u1481:
  6987  001B10  EF7F  F00D         	goto	l2301
  6988  001B14                     u1480:
  6989  001B14  B4C7               	btfsc	199,2,c	;volatile
  6990  001B16  EF8F  F00D         	goto	u1491
  6991  001B1A  EF91  F00D         	goto	u1490
  6992  001B1E                     u1491:
  6993  001B1E  EF7F  F00D         	goto	l2301
  6994  001B22                     u1490:
  6995  001B22  0012               	return		;funcret
  6996  001B24                     __end_of_i2c_espera:
  6997                           	opt callstack 0
  6998                           
  6999 ;; *************** function _inicializarObjetos *****************
  7000 ;; Defined at:
  7001 ;;		line 126 in file "main.c"
  7002 ;; Parameters:    Size  Location     Type
  7003 ;;		None
  7004 ;; Auto vars:     Size  Location     Type
  7005 ;;  i               2    6[COMRAM] int 
  7006 ;; Return value:  Size  Location     Type
  7007 ;;                  1    wreg      void 
  7008 ;; Registers used:
  7009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7010 ;; Tracked objects:
  7011 ;;		On entry : 0/0
  7012 ;;		On exit  : 0/0
  7013 ;;		Unchanged: 0/0
  7014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7015 ;;      Params:         0       0       0       0       0       0       0       0       0
  7016 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7017 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7018 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7019 ;;Total ram usage:        2 bytes
  7020 ;; Hardware stack levels used:    1
  7021 ;; Hardware stack levels required when called:    2
  7022 ;; This function calls:
  7023 ;;		___wmul
  7024 ;; This function is called by:
  7025 ;;		_main
  7026 ;; This function uses a non-reentrant model
  7027 ;;
  7028                           
  7029                           	psect	text45
  7030  00142A                     __ptext45:
  7031                           	opt callstack 0
  7032  00142A                     _inicializarObjetos:
  7033                           	opt callstack 28
  7034  00142A                     
  7035                           ;main.c: 128:     for (int i = 0; i < 24; i++) {
  7036  00142A  0E00               	movlw	0
  7037  00142C  6E08               	movwf	(inicializarObjetos@i+1)^0,c
  7038  00142E  0E00               	movlw	0
  7039  001430  6E07               	movwf	inicializarObjetos@i^0,c
  7040  001432                     l2953:
  7041                           
  7042                           ;main.c: 129:         horarios[i].hora = i;
  7043  001432  C007  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  7044  001436  C008  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  7045  00143A  0E00               	movlw	0
  7046  00143C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7047  00143E  0E03               	movlw	3
  7048  001440  6E03               	movwf	___wmul@multiplicand^0,c
  7049  001442  EC92  F00D         	call	___wmul	;wreg free
  7050  001446  0E60               	movlw	low _horarios
  7051  001448  2401               	addwf	?___wmul^0,w,c
  7052  00144A  6ED9               	movwf	fsr2l,c
  7053  00144C  0E00               	movlw	high _horarios
  7054  00144E  2002               	addwfc	(?___wmul+1)^0,w,c
  7055  001450  6EDA               	movwf	fsr2h,c
  7056  001452  C007  FFDF         	movff	inicializarObjetos@i,indf2
  7057                           
  7058                           ;main.c: 130:         horarios[i].regar = 0;
  7059  001456  C007  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  7060  00145A  C008  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  7061  00145E  0E00               	movlw	0
  7062  001460  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7063  001462  0E03               	movlw	3
  7064  001464  6E03               	movwf	___wmul@multiplicand^0,c
  7065  001466  EC92  F00D         	call	___wmul	;wreg free
  7066  00146A  0E61               	movlw	low (_horarios+1)
  7067  00146C  2401               	addwf	?___wmul^0,w,c
  7068  00146E  6ED9               	movwf	fsr2l,c
  7069  001470  0E00               	movlw	high (_horarios+1)
  7070  001472  2002               	addwfc	(?___wmul+1)^0,w,c
  7071  001474  6EDA               	movwf	fsr2h,c
  7072  001476  0E00               	movlw	0
  7073  001478  6EDF               	movwf	indf2,c
  7074                           
  7075                           ;main.c: 131:         horarios[i].tiempoRegar = 15;
  7076  00147A  C007  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  7077  00147E  C008  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  7078  001482  0E00               	movlw	0
  7079  001484  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7080  001486  0E03               	movlw	3
  7081  001488  6E03               	movwf	___wmul@multiplicand^0,c
  7082  00148A  EC92  F00D         	call	___wmul	;wreg free
  7083  00148E  0E62               	movlw	low (_horarios+2)
  7084  001490  2401               	addwf	?___wmul^0,w,c
  7085  001492  6ED9               	movwf	fsr2l,c
  7086  001494  0E00               	movlw	high (_horarios+2)
  7087  001496  2002               	addwfc	(?___wmul+1)^0,w,c
  7088  001498  6EDA               	movwf	fsr2h,c
  7089  00149A  0E0F               	movlw	15
  7090  00149C  6EDF               	movwf	indf2,c
  7091  00149E                     
  7092                           ;main.c: 132:     }
  7093  00149E  4A07               	infsnz	inicializarObjetos@i^0,f,c
  7094  0014A0  2A08               	incf	(inicializarObjetos@i+1)^0,f,c
  7095  0014A2  BE08               	btfsc	(inicializarObjetos@i+1)^0,7,c
  7096  0014A4  EF5D  F00A         	goto	u2301
  7097  0014A8  5008               	movf	(inicializarObjetos@i+1)^0,w,c
  7098  0014AA  E109               	bnz	u2300
  7099  0014AC  0E18               	movlw	24
  7100  0014AE  5C07               	subwf	inicializarObjetos@i^0,w,c
  7101  0014B0  A0D8               	btfss	status,0,c
  7102  0014B2  EF5D  F00A         	goto	u2301
  7103  0014B6  EF5F  F00A         	goto	u2300
  7104  0014BA                     u2301:
  7105  0014BA  EF19  F00A         	goto	l2953
  7106  0014BE                     u2300:
  7107  0014BE  0012               	return		;funcret
  7108  0014C0                     __end_of_inicializarObjetos:
  7109                           	opt callstack 0
  7110                           
  7111 ;; *************** function ___wmul *****************
  7112 ;; Defined at:
  7113 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  7114 ;; Parameters:    Size  Location     Type
  7115 ;;  multiplier      2    0[COMRAM] unsigned int 
  7116 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;  product         2    4[COMRAM] unsigned int 
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  2    0[COMRAM] unsigned int 
  7121 ;; Registers used:
  7122 ;;		wreg, status,2, status,0, prodl, prodh
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7128 ;;      Params:         4       0       0       0       0       0       0       0       0
  7129 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7130 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7131 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7132 ;;Total ram usage:        6 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; Hardware stack levels required when called:    1
  7135 ;; This function calls:
  7136 ;;		Nothing
  7137 ;; This function is called by:
  7138 ;;		_inicializarObjetos
  7139 ;;		_escribeHorariosMemoria
  7140 ;;		_leeHorariosMemoria
  7141 ;;		_dameDatosSistema
  7142 ;; This function uses a non-reentrant model
  7143 ;;
  7144                           
  7145                           	psect	text46
  7146  001B24                     __ptext46:
  7147                           	opt callstack 0
  7148  001B24                     ___wmul:
  7149                           	opt callstack 26
  7150  001B24  5001               	movf	___wmul@multiplier^0,w,c
  7151  001B26  0203               	mulwf	___wmul@multiplicand^0,c
  7152  001B28  CFF3 F005          	movff	prodl,___wmul@product
  7153  001B2C  CFF4 F006          	movff	prodh,___wmul@product+1
  7154  001B30  5001               	movf	___wmul@multiplier^0,w,c
  7155  001B32  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7156  001B34  50F3               	movf	243,w,c
  7157  001B36  2606               	addwf	(___wmul@product+1)^0,f,c
  7158  001B38  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7159  001B3A  0203               	mulwf	___wmul@multiplicand^0,c
  7160  001B3C  50F3               	movf	243,w,c
  7161  001B3E  2606               	addwf	(___wmul@product+1)^0,f,c
  7162  001B40  C005  F001         	movff	___wmul@product,?___wmul
  7163  001B44  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7164  001B48  0012               	return		;funcret
  7165  001B4A                     __end_of___wmul:
  7166                           	opt callstack 0
  7167                           
  7168 ;; *************** function _i2c_iniciar *****************
  7169 ;; Defined at:
  7170 ;;		line 4 in file "./I2C.h"
  7171 ;; Parameters:    Size  Location     Type
  7172 ;;		None
  7173 ;; Auto vars:     Size  Location     Type
  7174 ;;		None
  7175 ;; Return value:  Size  Location     Type
  7176 ;;                  1    wreg      void 
  7177 ;; Registers used:
  7178 ;;		wreg, status,2
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7184 ;;      Params:         0       0       0       0       0       0       0       0       0
  7185 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7186 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7187 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7188 ;;Total ram usage:        0 bytes
  7189 ;; Hardware stack levels used:    1
  7190 ;; Hardware stack levels required when called:    1
  7191 ;; This function calls:
  7192 ;;		Nothing
  7193 ;; This function is called by:
  7194 ;;		_main
  7195 ;; This function uses a non-reentrant model
  7196 ;;
  7197                           
  7198                           	psect	text47
  7199  001BEC                     __ptext47:
  7200                           	opt callstack 0
  7201  001BEC                     _i2c_iniciar:
  7202                           	opt callstack 29
  7203  001BEC                     
  7204                           ;./I2C.h: 5:     TRISBbits.RB0 = 1;
  7205  001BEC  8093               	bsf	147,0,c	;volatile
  7206                           
  7207                           ;./I2C.h: 6:     TRISBbits.RB1 = 1;
  7208  001BEE  8293               	bsf	147,1,c	;volatile
  7209  001BF0                     
  7210                           ;./I2C.h: 7:     SSPSTAT = 0b10000000;
  7211  001BF0  0E80               	movlw	128
  7212  001BF2  6EC7               	movwf	199,c	;volatile
  7213                           
  7214                           ;./I2C.h: 8:     SSPCON1 = 0b00101000;
  7215  001BF4  0E28               	movlw	40
  7216  001BF6  6EC6               	movwf	198,c	;volatile
  7217                           
  7218                           ;./I2C.h: 9:     SSPCON2 = 0b00000000;
  7219  001BF8  0E00               	movlw	0
  7220  001BFA  6EC5               	movwf	197,c	;volatile
  7221                           
  7222                           ;./I2C.h: 10:     SSPADD = 9;
  7223  001BFC  0E09               	movlw	9
  7224  001BFE  6EC8               	movwf	200,c	;volatile
  7225  001C00  0012               	return		;funcret
  7226  001C02                     __end_of_i2c_iniciar:
  7227                           	opt callstack 0
  7228                           
  7229 ;; *************** function _configurarAdc *****************
  7230 ;; Defined at:
  7231 ;;		line 107 in file "main.c"
  7232 ;; Parameters:    Size  Location     Type
  7233 ;;		None
  7234 ;; Auto vars:     Size  Location     Type
  7235 ;;		None
  7236 ;; Return value:  Size  Location     Type
  7237 ;;                  1    wreg      void 
  7238 ;; Registers used:
  7239 ;;		wreg, status,2
  7240 ;; Tracked objects:
  7241 ;;		On entry : 0/0
  7242 ;;		On exit  : 0/0
  7243 ;;		Unchanged: 0/0
  7244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7245 ;;      Params:         0       0       0       0       0       0       0       0       0
  7246 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7247 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7248 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7249 ;;Total ram usage:        0 bytes
  7250 ;; Hardware stack levels used:    1
  7251 ;; Hardware stack levels required when called:    1
  7252 ;; This function calls:
  7253 ;;		Nothing
  7254 ;; This function is called by:
  7255 ;;		_main
  7256 ;; This function uses a non-reentrant model
  7257 ;;
  7258                           
  7259                           	psect	text48
  7260  001BBC                     __ptext48:
  7261                           	opt callstack 0
  7262  001BBC                     _configurarAdc:
  7263                           	opt callstack 29
  7264  001BBC                     
  7265                           ;main.c: 108:     ADCON1 = 0b00000001;
  7266  001BBC  0E01               	movlw	1
  7267  001BBE  6EC1               	movwf	193,c	;volatile
  7268                           
  7269                           ;main.c: 109:     ADCON2 = 0b10100101;
  7270  001BC0  0EA5               	movlw	165
  7271  001BC2  6EC0               	movwf	192,c	;volatile
  7272                           
  7273                           ;main.c: 110:     TRISA = 1;
  7274  001BC4  0E01               	movlw	1
  7275  001BC6  6E92               	movwf	146,c	;volatile
  7276                           
  7277                           ;main.c: 111:     TRISE = 1;
  7278  001BC8  0E01               	movlw	1
  7279  001BCA  6E96               	movwf	150,c	;volatile
  7280                           
  7281                           ;main.c: 113:     PORTA = 0;
  7282  001BCC  0E00               	movlw	0
  7283  001BCE  6E80               	movwf	128,c	;volatile
  7284                           
  7285                           ;main.c: 114:     PORTE = 0;
  7286  001BD0  0E00               	movlw	0
  7287  001BD2  6E84               	movwf	132,c	;volatile
  7288  001BD4  0012               	return		;funcret
  7289  001BD6                     __end_of_configurarAdc:
  7290                           	opt callstack 0
  7291                           
  7292 ;; *************** function _UART_init *****************
  7293 ;; Defined at:
  7294 ;;		line 12 in file "./UART.h"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;  BAUD            4   14[COMRAM] long 
  7297 ;; Auto vars:     Size  Location     Type
  7298 ;;  frecuenciaCr    4    0        long 
  7299 ;; Return value:  Size  Location     Type
  7300 ;;                  1    wreg      void 
  7301 ;; Registers used:
  7302 ;;		wreg, status,2, status,0, cstack
  7303 ;; Tracked objects:
  7304 ;;		On entry : 0/0
  7305 ;;		On exit  : 0/0
  7306 ;;		Unchanged: 0/0
  7307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7308 ;;      Params:         4       0       0       0       0       0       0       0       0
  7309 ;;      Locals:         8       0       0       0       0       0       0       0       0
  7310 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7311 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7312 ;;Total ram usage:       12 bytes
  7313 ;; Hardware stack levels used:    1
  7314 ;; Hardware stack levels required when called:    2
  7315 ;; This function calls:
  7316 ;;		___aldiv
  7317 ;; This function is called by:
  7318 ;;		_main
  7319 ;; This function uses a non-reentrant model
  7320 ;;
  7321                           
  7322                           	psect	text49
  7323  00153A                     __ptext49:
  7324                           	opt callstack 0
  7325  00153A                     _UART_init:
  7326                           	opt callstack 28
  7327  00153A                     
  7328                           ;./UART.h: 14:     TRISCbits.TRISC6 = 0;
  7329  00153A  9C94               	bcf	148,6,c	;volatile
  7330  00153C                     
  7331                           ;./UART.h: 15:     TRISCbits.TRISC7 = 1;
  7332  00153C  8E94               	bsf	148,7,c	;volatile
  7333  00153E                     
  7334                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  7335  00153E  0E10               	movlw	16
  7336  001540  6E05               	movwf	___aldiv@divisor^0,c
  7337  001542  0E00               	movlw	0
  7338  001544  6E06               	movwf	(___aldiv@divisor+1)^0,c
  7339  001546  0E00               	movlw	0
  7340  001548  6E07               	movwf	(___aldiv@divisor+2)^0,c
  7341  00154A  0E00               	movlw	0
  7342  00154C  6E08               	movwf	(___aldiv@divisor+3)^0,c
  7343  00154E  0E00               	movlw	0
  7344  001550  6E01               	movwf	___aldiv@dividend^0,c
  7345  001552  0E09               	movlw	9
  7346  001554  6E02               	movwf	(___aldiv@dividend+1)^0,c
  7347  001556  0E3D               	movlw	61
  7348  001558  6E03               	movwf	(___aldiv@dividend+2)^0,c
  7349  00155A  0E00               	movlw	0
  7350  00155C  6E04               	movwf	(___aldiv@dividend+3)^0,c
  7351  00155E  EC8B  F006         	call	___aldiv	;wreg free
  7352  001562  C001  F017         	movff	?___aldiv,_UART_init$1623
  7353  001566  C002  F018         	movff	?___aldiv+1,_UART_init$1623+1
  7354  00156A  C003  F019         	movff	?___aldiv+2,_UART_init$1623+2
  7355  00156E  C004  F01A         	movff	?___aldiv+3,_UART_init$1623+3
  7356  001572                     
  7357                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  7358  001572  C017  F001         	movff	_UART_init$1623,___aldiv@dividend
  7359  001576  C018  F002         	movff	_UART_init$1623+1,___aldiv@dividend+1
  7360  00157A  C019  F003         	movff	_UART_init$1623+2,___aldiv@dividend+2
  7361  00157E  C01A  F004         	movff	_UART_init$1623+3,___aldiv@dividend+3
  7362  001582  C00F  F005         	movff	UART_init@BAUD,___aldiv@divisor
  7363  001586  C010  F006         	movff	UART_init@BAUD+1,___aldiv@divisor+1
  7364  00158A  C011  F007         	movff	UART_init@BAUD+2,___aldiv@divisor+2
  7365  00158E  C012  F008         	movff	UART_init@BAUD+3,___aldiv@divisor+3
  7366  001592  EC8B  F006         	call	___aldiv	;wreg free
  7367  001596  0401               	decf	?___aldiv^0,w,c
  7368  001598  6EAF               	movwf	175,c	;volatile
  7369  00159A                     
  7370                           ;./UART.h: 21:     TXSTAbits.BRGH = 1;
  7371  00159A  84AC               	bsf	172,2,c	;volatile
  7372  00159C                     
  7373                           ;./UART.h: 22:     TXSTAbits.SYNC = 0;
  7374  00159C  98AC               	bcf	172,4,c	;volatile
  7375  00159E                     
  7376                           ;./UART.h: 23:     RCSTAbits.SPEN = 1;
  7377  00159E  8EAB               	bsf	171,7,c	;volatile
  7378  0015A0                     
  7379                           ;./UART.h: 26:     TXSTAbits.TX9 = 0;
  7380  0015A0  9CAC               	bcf	172,6,c	;volatile
  7381  0015A2                     
  7382                           ;./UART.h: 27:     TXSTAbits.TXEN = 1;
  7383  0015A2  8AAC               	bsf	172,5,c	;volatile
  7384  0015A4                     
  7385                           ;./UART.h: 30:     RCSTAbits.RC9 = 0;
  7386  0015A4  9CAB               	bcf	171,6,c	;volatile
  7387  0015A6                     
  7388                           ;./UART.h: 31:     RCSTAbits.CREN = 1;
  7389  0015A6  88AB               	bsf	171,4,c	;volatile
  7390  0015A8  0012               	return		;funcret
  7391  0015AA                     __end_of_UART_init:
  7392                           	opt callstack 0
  7393                           
  7394 ;; *************** function ___aldiv *****************
  7395 ;; Defined at:
  7396 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  7397 ;; Parameters:    Size  Location     Type
  7398 ;;  dividend        4    0[COMRAM] long 
  7399 ;;  divisor         4    4[COMRAM] long 
  7400 ;; Auto vars:     Size  Location     Type
  7401 ;;  quotient        4   10[COMRAM] long 
  7402 ;;  sign            1    9[COMRAM] unsigned char 
  7403 ;;  counter         1    8[COMRAM] unsigned char 
  7404 ;; Return value:  Size  Location     Type
  7405 ;;                  4    0[COMRAM] long 
  7406 ;; Registers used:
  7407 ;;		wreg, status,2, status,0
  7408 ;; Tracked objects:
  7409 ;;		On entry : 0/0
  7410 ;;		On exit  : 0/0
  7411 ;;		Unchanged: 0/0
  7412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7413 ;;      Params:         8       0       0       0       0       0       0       0       0
  7414 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7415 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7416 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7417 ;;Total ram usage:       14 bytes
  7418 ;; Hardware stack levels used:    1
  7419 ;; Hardware stack levels required when called:    1
  7420 ;; This function calls:
  7421 ;;		Nothing
  7422 ;; This function is called by:
  7423 ;;		_UART_init
  7424 ;; This function uses a non-reentrant model
  7425 ;;
  7426                           
  7427                           	psect	text50
  7428  000D16                     __ptext50:
  7429                           	opt callstack 0
  7430  000D16                     ___aldiv:
  7431                           	opt callstack 28
  7432  000D16  0E00               	movlw	0
  7433  000D18  6E0A               	movwf	___aldiv@sign^0,c
  7434  000D1A  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  7435  000D1C  EF94  F006         	goto	u2240
  7436  000D20  EF92  F006         	goto	u2241
  7437  000D24                     u2241:
  7438  000D24  EF9E  F006         	goto	l2881
  7439  000D28                     u2240:
  7440  000D28  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  7441  000D2A  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  7442  000D2C  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  7443  000D2E  6C05               	negf	___aldiv@divisor^0,c
  7444  000D30  0E00               	movlw	0
  7445  000D32  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  7446  000D34  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  7447  000D36  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  7448  000D38  0E01               	movlw	1
  7449  000D3A  6E0A               	movwf	___aldiv@sign^0,c
  7450  000D3C                     l2881:
  7451  000D3C  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  7452  000D3E  EFA5  F006         	goto	u2250
  7453  000D42  EFA3  F006         	goto	u2251
  7454  000D46                     u2251:
  7455  000D46  EFAF  F006         	goto	l2887
  7456  000D4A                     u2250:
  7457  000D4A  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  7458  000D4C  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  7459  000D4E  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  7460  000D50  6C01               	negf	___aldiv@dividend^0,c
  7461  000D52  0E00               	movlw	0
  7462  000D54  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  7463  000D56  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  7464  000D58  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  7465  000D5A  0E01               	movlw	1
  7466  000D5C  1A0A               	xorwf	___aldiv@sign^0,f,c
  7467  000D5E                     l2887:
  7468  000D5E  0E00               	movlw	0
  7469  000D60  6E0B               	movwf	___aldiv@quotient^0,c
  7470  000D62  0E00               	movlw	0
  7471  000D64  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  7472  000D66  0E00               	movlw	0
  7473  000D68  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  7474  000D6A  0E00               	movlw	0
  7475  000D6C  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  7476  000D6E  5005               	movf	___aldiv@divisor^0,w,c
  7477  000D70  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  7478  000D72  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  7479  000D74  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  7480  000D76  B4D8               	btfsc	status,2,c
  7481  000D78  EFC0  F006         	goto	u2261
  7482  000D7C  EFC2  F006         	goto	u2260
  7483  000D80                     u2261:
  7484  000D80  EFF8  F006         	goto	l2909
  7485  000D84                     u2260:
  7486  000D84  0E01               	movlw	1
  7487  000D86  6E09               	movwf	___aldiv@counter^0,c
  7488  000D88  EFCC  F006         	goto	l2895
  7489  000D8C                     l2893:
  7490  000D8C  90D8               	bcf	status,0,c
  7491  000D8E  3605               	rlcf	___aldiv@divisor^0,f,c
  7492  000D90  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  7493  000D92  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  7494  000D94  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  7495  000D96  2A09               	incf	___aldiv@counter^0,f,c
  7496  000D98                     l2895:
  7497  000D98  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  7498  000D9A  EFD1  F006         	goto	u2271
  7499  000D9E  EFD3  F006         	goto	u2270
  7500  000DA2                     u2271:
  7501  000DA2  EFC6  F006         	goto	l2893
  7502  000DA6                     u2270:
  7503  000DA6                     l2897:
  7504  000DA6  90D8               	bcf	status,0,c
  7505  000DA8  360B               	rlcf	___aldiv@quotient^0,f,c
  7506  000DAA  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  7507  000DAC  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  7508  000DAE  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  7509  000DB0  5005               	movf	___aldiv@divisor^0,w,c
  7510  000DB2  5C01               	subwf	___aldiv@dividend^0,w,c
  7511  000DB4  5006               	movf	(___aldiv@divisor+1)^0,w,c
  7512  000DB6  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  7513  000DB8  5007               	movf	(___aldiv@divisor+2)^0,w,c
  7514  000DBA  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  7515  000DBC  5008               	movf	(___aldiv@divisor+3)^0,w,c
  7516  000DBE  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  7517  000DC0  A0D8               	btfss	status,0,c
  7518  000DC2  EFE5  F006         	goto	u2281
  7519  000DC6  EFE7  F006         	goto	u2280
  7520  000DCA                     u2281:
  7521  000DCA  EFF0  F006         	goto	l2905
  7522  000DCE                     u2280:
  7523  000DCE  5005               	movf	___aldiv@divisor^0,w,c
  7524  000DD0  5E01               	subwf	___aldiv@dividend^0,f,c
  7525  000DD2  5006               	movf	(___aldiv@divisor+1)^0,w,c
  7526  000DD4  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  7527  000DD6  5007               	movf	(___aldiv@divisor+2)^0,w,c
  7528  000DD8  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  7529  000DDA  5008               	movf	(___aldiv@divisor+3)^0,w,c
  7530  000DDC  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  7531  000DDE  800B               	bsf	___aldiv@quotient^0,0,c
  7532  000DE0                     l2905:
  7533  000DE0  90D8               	bcf	status,0,c
  7534  000DE2  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  7535  000DE4  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  7536  000DE6  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  7537  000DE8  3205               	rrcf	___aldiv@divisor^0,f,c
  7538  000DEA  2E09               	decfsz	___aldiv@counter^0,f,c
  7539  000DEC  EFD3  F006         	goto	l2897
  7540  000DF0                     l2909:
  7541  000DF0  500A               	movf	___aldiv@sign^0,w,c
  7542  000DF2  B4D8               	btfsc	status,2,c
  7543  000DF4  EFFE  F006         	goto	u2291
  7544  000DF8  EF00  F007         	goto	u2290
  7545  000DFC                     u2291:
  7546  000DFC  EF08  F007         	goto	l2913
  7547  000E00                     u2290:
  7548  000E00  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  7549  000E02  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  7550  000E04  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  7551  000E06  6C0B               	negf	___aldiv@quotient^0,c
  7552  000E08  0E00               	movlw	0
  7553  000E0A  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  7554  000E0C  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  7555  000E0E  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  7556  000E10                     l2913:
  7557  000E10  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  7558  000E14  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  7559  000E18  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  7560  000E1C  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  7561  000E20  0012               	return		;funcret
  7562  000E22                     __end_of___aldiv:
  7563                           	opt callstack 0
  7564                           
  7565 ;; *************** function _desbordamiento *****************
  7566 ;; Defined at:
  7567 ;;		line 72 in file "main.c"
  7568 ;; Parameters:    Size  Location     Type
  7569 ;;		None
  7570 ;; Auto vars:     Size  Location     Type
  7571 ;;		None
  7572 ;; Return value:  Size  Location     Type
  7573 ;;                  1    wreg      void 
  7574 ;; Registers used:
  7575 ;;		wreg, status,2, status,0
  7576 ;; Tracked objects:
  7577 ;;		On entry : 0/0
  7578 ;;		On exit  : 0/0
  7579 ;;		Unchanged: 0/0
  7580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7581 ;;      Params:         0       0       0       0       0       0       0       0       0
  7582 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7583 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7584 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7585 ;;Total ram usage:        0 bytes
  7586 ;; Hardware stack levels used:    1
  7587 ;; This function calls:
  7588 ;;		Nothing
  7589 ;; This function is called by:
  7590 ;;		Interrupt level 2
  7591 ;; This function uses a non-reentrant model
  7592 ;;
  7593                           
  7594                           	psect	intcode
  7595  000008                     __pintcode:
  7596                           	opt callstack 0
  7597  000008                     _desbordamiento:
  7598                           	opt callstack 20
  7599                           
  7600                           ;incstack = 0
  7601  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7602  00000A  ED09  F00B         	call	int_func,f	;refresh shadow registers
  7603                           
  7604                           	psect	intcode_body
  7605  001612                     __pintcode_body:
  7606                           	opt callstack 20
  7607  001612                     int_func:
  7608                           	opt callstack 20
  7609  001612  0006               	pop		; remove dummy address from shadow register refresh
  7610  001614                     
  7611                           ;main.c: 74:     if (INTCONbits.TMR0IF) {
  7612  001614  A4F2               	btfss	242,2,c	;volatile
  7613  001616  EF0F  F00B         	goto	i2u238_41
  7614  00161A  EF11  F00B         	goto	i2u238_40
  7615  00161E                     i2u238_41:
  7616  00161E  EF2E  F00B         	goto	i2l3055
  7617  001622                     i2u238_40:
  7618  001622                     
  7619                           ;main.c: 76:         if (esperandoDatos) {
  7620  001622  505E               	movf	_esperandoDatos^0,w,c
  7621  001624  B4D8               	btfsc	status,2,c
  7622  001626  EF17  F00B         	goto	i2u239_41
  7623  00162A  EF19  F00B         	goto	i2u239_40
  7624  00162E                     i2u239_41:
  7625  00162E  EF26  F00B         	goto	i2l3051
  7626  001632                     i2u239_40:
  7627  001632                     
  7628                           ;main.c: 78:             tiempoInactividadTrans++;
  7629  001632  0100               	movlb	0	; () banked
  7630  001634  2BCC               	incf	_tiempoInactividadTrans& (0+255),f,b
  7631  001636                     
  7632                           ; BSR set to: 0
  7633                           ;main.c: 80:             if (tiempoInactividadTrans == 2)
  7634  001636  0E02               	movlw	2
  7635  001638  19CC               	xorwf	_tiempoInactividadTrans& (0+255),w,b
  7636  00163A  A4D8               	btfss	status,2,c
  7637  00163C  EF22  F00B         	goto	i2u240_41
  7638  001640  EF24  F00B         	goto	i2u240_40
  7639  001644                     i2u240_41:
  7640  001644  EF26  F00B         	goto	i2l3051
  7641  001648                     i2u240_40:
  7642  001648                     
  7643                           ; BSR set to: 0
  7644                           ;main.c: 81:                 esperaDatoConcluida = 1;
  7645  001648  0E01               	movlw	1
  7646  00164A  6FCA               	movwf	_esperaDatoConcluida& (0+255),b
  7647  00164C                     i2l3051:
  7648                           
  7649                           ;main.c: 86:         INTCONbits.TMR0IF = 0;
  7650  00164C  94F2               	bcf	242,2,c	;volatile
  7651  00164E                     
  7652                           ;main.c: 87:         TMR0 = VALOR_TIMER0;
  7653  00164E  C0F2  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  7654  001652  C0F3  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  7655                           
  7656                           ;main.c: 88:         overflowTimer = 1;
  7657  001656  0E01               	movlw	1
  7658  001658  0100               	movlb	0	; () banked
  7659  00165A  6FC5               	movwf	_overflowTimer& (0+255),b
  7660  00165C                     i2l3055:
  7661                           
  7662                           ;main.c: 92:     if (PIR1bits.RCIF) {
  7663  00165C  AA9E               	btfss	158,5,c	;volatile
  7664  00165E  EF33  F00B         	goto	i2u241_41
  7665  001662  EF35  F00B         	goto	i2u241_40
  7666  001666                     i2u241_41:
  7667  001666  EF3A  F00B         	goto	i2l172
  7668  00166A                     i2u241_40:
  7669  00166A                     
  7670                           ;main.c: 94:         byteUart = RCREG;
  7671  00166A  CFAE F0CB          	movff	4014,_byteUart	;volatile
  7672  00166E                     
  7673                           ;main.c: 95:         datoRecibido = 1;
  7674  00166E  0E01               	movlw	1
  7675  001670  0100               	movlb	0	; () banked
  7676  001672  6FC6               	movwf	_datoRecibido& (0+255),b
  7677  001674                     i2l172:
  7678  001674  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7679  001676  0011               	retfie		f
  7680  001678                     __end_of_desbordamiento:
  7681                           	opt callstack 0
  7682                           
  7683                           	psect	rparam
  7684  0000                     
  7685                           	psect	temp
  7686  00005F                     btemp:
  7687                           	opt callstack 0
  7688  00005F                     	ds	1
  7689  0000                     int$flags	set	btemp
  7690  0000                     wtemp8	set	btemp+1
  7691  0000                     ttemp5	set	btemp+1
  7692  0000                     ttemp6	set	btemp+4
  7693  0000                     ttemp7	set	btemp+8
  7694                           tosu	equ	0xFFF
  7695                           tosh	equ	0xFFE
  7696                           tosl	equ	0xFFD
  7697                           stkptr	equ	0xFFC
  7698                           pclatu	equ	0xFFB
  7699                           pclath	equ	0xFFA
  7700                           pcl	equ	0xFF9
  7701                           tblptru	equ	0xFF8
  7702                           tblptrh	equ	0xFF7
  7703                           tblptrl	equ	0xFF6
  7704                           tablat	equ	0xFF5
  7705                           prodh	equ	0xFF4
  7706                           prodl	equ	0xFF3
  7707                           indf0	equ	0xFEF
  7708                           postinc0	equ	0xFEE
  7709                           postdec0	equ	0xFED
  7710                           preinc0	equ	0xFEC
  7711                           plusw0	equ	0xFEB
  7712                           fsr0h	equ	0xFEA
  7713                           fsr0l	equ	0xFE9
  7714                           wreg	equ	0xFE8
  7715                           indf1	equ	0xFE7
  7716                           postinc1	equ	0xFE6
  7717                           postdec1	equ	0xFE5
  7718                           preinc1	equ	0xFE4
  7719                           plusw1	equ	0xFE3
  7720                           fsr1h	equ	0xFE2
  7721                           fsr1l	equ	0xFE1
  7722                           bsr	equ	0xFE0
  7723                           indf2	equ	0xFDF
  7724                           postinc2	equ	0xFDE
  7725                           postdec2	equ	0xFDD
  7726                           preinc2	equ	0xFDC
  7727                           plusw2	equ	0xFDB
  7728                           fsr2h	equ	0xFDA
  7729                           fsr2l	equ	0xFD9
  7730                           status	equ	0xFD8


Data Sizes:
    Strings     841
    Constant    0
    Data        4
    BSS         142
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160     37     150
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_30(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 15
		 -> dameDatosSistema@buffer(BANK0[15]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 15
		 -> dameDatosSistema@buffer(BANK0[15]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1317_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 15
		 -> dameDatosSistema@buffer(BANK0[15]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 15
		 -> dameDatosSistema@buffer(BANK0[15]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_30(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_30(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 72
		 -> dameDatosSistema@buffer(BANK0[15]), STR_29(CODE[50]), STR_28(CODE[42]), STR_27(CODE[3]), 
		 -> STR_26(CODE[14]), STR_25(CODE[32]), STR_24(CODE[49]), STR_23(CODE[37]), 
		 -> STR_22(CODE[27]), STR_21(CODE[37]), STR_20(CODE[32]), STR_19(CODE[28]), 
		 -> STR_18(CODE[38]), STR_17(CODE[37]), STR_16(CODE[23]), STR_15(CODE[72]), 
		 -> STR_14(CODE[23]), STR_13(CODE[51]), STR_12(CODE[23]), STR_11(CODE[23]), 
		 -> STR_10(CODE[26]), STR_9(CODE[55]), STR_8(CODE[23]), STR_7(CODE[51]), 
		 -> STR_6(CODE[25]), STR_5(CODE[37]), STR_4(CODE[31]), STR_3(CODE[43]), 
		 -> STR_2(CODE[16]), STR_1(CODE[23]), 


Critical Paths under _main in COMRAM

    _main->_sistemaPrincipal
    _sistemaRegado->_encenderBombas
    _lecturaAnalogaSensores->_dameHumedadSuelo
    _encenderBombas->_estaSeco
    _dameHoraActual->_leer_rtc
    _leer_rtc->_i2c_envia_dato
    _leer_rtc->_i2c_recibe_dato
    _sistemaPrincipal->_dameDatosSistema
    _setTiempoRegar->_escribeHorariosMemoria
    _mostrarMenu->_UART_printf
    _fijaHoraRtc->_setRtc
    _setRtc->_escribe_rtc
    _escribe_rtc->_i2c_envia_dato
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _asignarHorarios->_escribeHorariosMemoria
    _escribeHorariosMemoria->_escribe_eeprom
    _escribe_eeprom->___wmul
    _UART_printf->_UART_write
    _restablecerDatosSensor->_constructorSensor
    _leeHorariosMemoria->___wmul
    _leeHorariosMemoria->_leer_eeprom
    _leer_eeprom->_i2c_envia_dato
    _leer_eeprom->_i2c_recibe_dato
    _i2c_reinicia_com->_i2c_espera
    _i2c_recibe_dato->_i2c_espera
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera
    _inicializarObjetos->___wmul
    _UART_init->___aldiv

Critical Paths under _desbordamiento in COMRAM

    None.

Critical Paths under _main in BANK0

    _sistemaPrincipal->_dameDatosSistema
    _dameDatosSistema->_sprintf

Critical Paths under _desbordamiento in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _desbordamiento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _desbordamiento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _desbordamiento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _desbordamiento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _desbordamiento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _desbordamiento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _desbordamiento in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   42070
                          _UART_init
                      _configurarAdc
                        _i2c_iniciar
                 _inicializarObjetos
                 _leeHorariosMemoria
                        _mostrarMenu
             _restablecerDatosSensor
                   _sistemaPrincipal
                      _sistemaRegado
 ---------------------------------------------------------------------------------
 (1) _sistemaRegado                                        0     0      0    1198
                     _dameHoraActual
                     _encenderBombas
                          _horaRegar
             _lecturaAnalogaSensores
 ---------------------------------------------------------------------------------
 (2) _lecturaAnalogaSensores                               3     3      0     112
                                              2 COMRAM     3     3      0
                   _dameHumedadSuelo
 ---------------------------------------------------------------------------------
 (3) _dameHumedadSuelo                                     2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _horaRegar                                            3     1      2       0
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _encenderBombas                                       5     5      0     905
                                              2 COMRAM     5     5      0
                           _estaSeco
 ---------------------------------------------------------------------------------
 (3) _estaSeco                                             2     0      2     630
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _dameHoraActual                                       0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (3) _leer_rtc                                             2     2      0      90
                                              2 COMRAM     2     2      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (3) _convertirDato                                        3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _sistemaPrincipal                                     3     3      0   32584
                                             90 COMRAM     3     3      0
                        _UART_printf
                    _asignarHorarios
                   _dameDatosSistema
                        _fijaHoraRtc
                        _mostrarMenu
                     _setTiempoRegar
 ---------------------------------------------------------------------------------
 (2) _setTiempoRegar                                       8     8      0    5587
                                             14 COMRAM     8     8      0
                        _UART_printf
                          _UART_read
             _escribeHorariosMemoria
 ---------------------------------------------------------------------------------
 (2) _mostrarMenu                                          0     0      0    2347
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _fijaHoraRtc                                          1     1      0    5815
                                             11 COMRAM     1     1      0
                        _UART_printf
                        _escribe_rtc
                             _setRtc
 ---------------------------------------------------------------------------------
 (3) _setRtc                                               7     7      0    3021
                                              4 COMRAM     7     7      0
                        _UART_printf
                          _UART_read
                        _escribe_rtc
 ---------------------------------------------------------------------------------
 (4) _escribe_rtc                                          2     1      1     446
                                              2 COMRAM     2     1      1
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (2) _dameDatosSistema                                    20    20      0   11040
                                             87 COMRAM     3     3      0
                                             20 BANK0     17    17      0
                        _UART_printf
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             20    10     10    6456
                                              0 BANK0     20    10     10
                             ___wmul (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _asignarHorarios                                      5     5      0    5426
                                             14 COMRAM     5     5      0
                        _UART_printf
                          _UART_read
             _escribeHorariosMemoria
 ---------------------------------------------------------------------------------
 (3) _escribeHorariosMemoria                               4     4      0    2801
                                             10 COMRAM     4     4      0
                             ___wmul
                     _escribe_eeprom
 ---------------------------------------------------------------------------------
 (4) _escribe_eeprom                                       4     1      3     544
                                              6 COMRAM     4     1      3
                             ___wmul (ARG)
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (3) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2    2347
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _restablecerDatosSensor                               2     2      0     387
                                              4 COMRAM     2     2      0
                  _constructorSensor
 ---------------------------------------------------------------------------------
 (2) _constructorSensor                                    4     0      4     297
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _leeHorariosMemoria                                   4     4      0    2597
                                              6 COMRAM     4     4      0
                             ___wmul
                        _leer_eeprom
 ---------------------------------------------------------------------------------
 (2) _leer_eeprom                                          4     2      2     340
                                              2 COMRAM     4     2      2
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_recibe_dato                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializarObjetos                                   2     2      0    2209
                                              6 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2075
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     748
                                             14 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _desbordamiento                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
   _configurarAdc
   _i2c_iniciar
   _inicializarObjetos
     ___wmul
   _leeHorariosMemoria
     ___wmul
     _leer_eeprom
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
       _i2c_recibe_dato
         _i2c_espera
       _i2c_reinicia_com
         _i2c_espera
   _mostrarMenu
     _UART_printf
       _UART_write
   _restablecerDatosSensor
     _constructorSensor
   _sistemaPrincipal
     _UART_printf
       _UART_write
     _asignarHorarios
       _UART_printf
         _UART_write
       _UART_read
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
     _dameDatosSistema
       _UART_printf
         _UART_write
       ___wmul
       _sprintf
         ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _fijaHoraRtc
       _UART_printf
         _UART_write
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
       _setRtc
         _UART_printf
           _UART_write
         _UART_read
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
     _mostrarMenu
       _UART_printf
         _UART_write
     _setTiempoRegar
       _UART_printf
         _UART_write
       _UART_read
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
   _sistemaRegado
     _dameHoraActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _encenderBombas
       _estaSeco
     _horaRegar
     _lecturaAnalogaSensores
       _dameHumedadSuelo

 _desbordamiento (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     25      96       5       93.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     114      20        0.0%
DATA                 0      0     114       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Apr 25 23:22:26 2020

          __size_of_escribe_eeprom 0030                                 l81 1B22  
                               l90 1C2E                                 l75 1C00  
                               l84 1C26                                 l93 1C0C  
                               l87 1C1E                                 l96 1BBA  
                               l99 1B86                     ?_configurarAdc 0001  
              ___wmul@multiplicand 0003                        __CFG_BORV$3 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                              l102 1AFC                                l121 17FC  
                              l105 1B68                                l130 1BDC  
                              l202 1098                                l133 1BEA  
                              l205 1A7A                                l213 0FCC  
                              l118 15A8                                l126 1832  
                              l127 1834                                l208 19DE  
                              l304 17E0                                l218 122A  
                              l330 0EFE                                l250 1610  
                              l139 1736                                l411 16D0  
                              l307 178C                                l260 0CD0  
                              l412 16D8                                l405 08D4  
                              l317 1538                                l181 1BA0  
                              l245 054C                                l325 1392  
                              l415 1B48                                l175 1C16  
                              l263 0D14                                l280 0720  
                              l192 1AD2                                l184 1AA6  
                              l178 1BD4                                l370 12B4  
                              l291 18D6                                l283 1A02  
                              l372 12F0                                l380 00BA  
                              l189 14BE                                l285 1A10  
                              l542 0BC0                                l286 1A14  
                              l367 1272                                l529 0A5C  
                              l378 00B2                                l494 0E20  
                              l398 02F4                       __CFG_CPB$OFF 000000  
                     __CFG_CPD$OFF 000000                       __CFG_BOR$OFF 000000  
                              _abs 1964                                _pad 122C  
                              prod 000FF3                                wreg 000FE8  
         __end_of_dameDatosSistema 0F00                       __CFG_LVP$OFF 000000  
                ?_i2c_reinicia_com 0001                       ?_escribe_rtc 0003  
                     __CFG_WDT$OFF 000000                               l1120 1886  
                             l1105 1162                               l1113 1962  
                             l1123 1C34                               ?_abs 0013  
                             l1129 1A4A                               l2201 126A  
                             l3001 14E8                               l1090 199A  
                             l2211 12D8                               l2203 127E  
                             l2301 1AFE                               l2221 08DA  
                             l1093 19A2                               l2205 1292  
                             l3005 14F8                               l3021 131C  
                             l2303 1B14                               l2231 093A  
                             l2223 08E8                               l2215 1964  
                             l2207 1296                               l2311 007A  
                             l3007 1532                               l3031 134C  
                             l3023 1324                               l3015 12F2  
                             l3111 13A2                               l2241 0984  
                             l2233 093E                               l2225 0908  
                             l2217 197E                               l2161 109A  
                             l2209 12C4                               l2321 00D4  
                             l2313 008A                               l2305 0012  
                             l3009 1536                               l3033 1362  
                             l3025 1326                               l3017 1304  
                             l3121 13C4                               l3113 13A4  
                             l2251 09F4                               l2243 0992  
                             l2235 094A                               l2227 090C  
                             l2219 08D6                               l2171 111C  
                             l2163 10AC                               l2331 0100  
                             l2323 00E2                               l2315 008C  
                             l2307 0032                               l2403 0832  
                             l3035 1374                               l3027 1338  
                             l3019 1308                               l3131 13DC  
                             l3123 13C8                               l3115 13A8  
                             l3107 1394                               l2253 0A06  
                             l2245 09A4                               l2237 0968  
                             l2229 091A                               l2165 10BE  
                             l2181 1942                               l2341 020C  
                             l2333 0182                               l2325 00E8  
                             l2317 00A6                               l2309 005A  
                             l2421 08C2                               l2405 0856  
                             l2413 0884                               l2501 1B88  
                             l3037 1378                               l3029 1348  
                             l3141 13FA                               l3133 13DE  
                             l3125 13CC                               l3117 13BC  
                             l3109 139E                               l2431 1BA2  
                             l2247 09D2                               l2239 0970  
                             l2255 0A0C                               l2271 0A94  
                             l2263 0A5E                               l2167 10C8  
                             l2175 1920                               l2183 1A16  
                             l2351 0280                               l2343 022A  
                             l2335 0188                               l2327 00F0  
                             l2319 00C2                               l2415 0892  
                             l2407 0864                               l2511 0FDC  
                             l3039 138E                               l3143 13FE  
                             l3135 13E0                               l3127 13D0  
                             l3119 13C0                               l2441 1BB8  
                             l2433 1BA6                               l2257 0A1C  
                             l2249 09F2                               l2281 0AFC  
                             l2273 0AA2                               l2265 0A62  
                             l2169 10E6                               l2177 192C  
                             l2185 1A22                               l2193 122C  
                             l2361 02BC                               l2353 0290  
                             l2345 0244                               l2337 018E  
                             l2329 00FA                               l2409 0878  
                             l2521 102A                               l2513 0FE2  
                             l2505 0FD0                               l2601 02F6  
                             l3145 1404                               l3137 13E4  
                             l3129 13D4                               l2371 1C28  
                             l2435 1BAC                               l2427 1C18  
                             l2451 181A                               l2259 0A3C  
                             l2283 0B0A                               l2291 0B70  
                             l2275 0AC2                               l2267 0A70  
                             l2179 193E                               l2187 1A26  
                             l2195 123C                               l2355 0296  
                             l2363 02CC                               l2347 025E  
                             l2339 01F2                               l2419 089E  
                             l2531 1052                               l2523 1032  
                             l2515 0FF2                               l2611 0338  
                             l3147 1416                               l3139 13F6  
                             l2373 1C2C                               l2437 1BB4  
                             l2429 1C1C                               l2461 16DE  
                             l2453 182A                               l2701 0BEC  
                             l2293 0B80                               l2285 0B38  
                             l2277 0AE0                               l2269 0A90  
                             l2189 1A3E                               l2197 1250  
                             l2357 02A8                               l2349 026E  
                             l2445 1B6C                               l2533 106E  
                             l2517 1002                               l2525 103A  
                             l2621 03A6                               l2613 0340  
                             l3149 141E                               l2375 1C04  
                             l2367 1C20                               l2439 1BB6  
                             l2383 1BD8                               l2463 1702  
                             l2455 182E                               l2447 17E2  
                             l2551 0F78                               l2711 0C26  
                             l2703 0BFC                               l2295 0BA0  
                             l2287 0B58                               l2279 0AE8  
                             l2199 125E                               l2359 02B4  
                             l2391 0766                               l2471 1678  
                             l2535 107E                               l2527 103E  
                             l2519 1014                               l3191 04D0  
                             l2631 03E2                               l2615 0370  
                             l2607 0306                               l2481 1B40  
                             l2377 1C08                               l2369 1C24  
                             l2465 1706                               l2449 180A  
                             l2553 0FA8                               l2545 0F10  
                             l2721 0C46                               l2713 0C32  
                             l2705 0C0C                               l2289 0B6A  
                             l2393 076A                               l2385 0722  
                             l2473 1680                               l2537 108E  
                             l2529 104E                               l2801 0636  
                             l3193 150C                               l2633 0412  
                             l2625 03AC                               l2609 0336  
                             l2561 19EA                               l2299 1AFE  
                             l2379 1C0C                               l2459 16DA  
                             l2467 1A4C                               l2555 0FAC  
                             l2547 0F40                               l2539 0F00  
                             l2731 0C96                               l2715 0C36  
                             l2723 0C56                               l2707 0C1E  
                             l2395 078E                               l2387 0746  
                             l2475 168E                               l2811 0672  
                             l2803 063C                               l2491 1B4C  
                             l2651 04B4                               l2643 044E  
                             l2627 03DC                               l2619 0376  
                             l2563 19EC                               l2901 0DCE  
                             l2469 1A6C                               l2557 0FB0  
                             l2549 0F44                               l2741 0CCC  
                             l2733 0CA2                               l2725 0C5A  
                             l2717 0C3A                               l2709 0C22  
                             l2397 07B2                               l2389 0754  
                             l2477 16B4                               l2581 1874  
                             l2573 1836                               l2813 0676  
                             l2805 064C                               l2821 0692  
                             l2493 1B4C                               l2485 1AD6  
                             l2661 051A                               l2645 047E  
                             l2637 0418                               l2565 19FE  
                             l2911 0E00                               l2903 0DDE  
                             l2479 1B24                               l2743 0CE0  
                             l2735 0CA8                               l2727 0C76  
                             l2719 0C42                               l2399 07FA  
                             l2575 1848                               l2671 15AA  
                             l2831 06D6                               l2823 0696  
                             l2815 0682                               l2807 065C  
                             l2751 054E                               l2495 1B54  
                             l2487 1AFA                               l2591 1AA8  
                             l2663 0536                               l2639 0448  
                             l2567 1A00                               l2559 19E2  
                             l2913 0E10                               l2905 0DE0  
                             l2921 153A                               l2593 19A4  
                             l2585 1C0E                               l2745 0CEC  
                             l2737 0CAC                               l2729 0C86  
                             l2577 1850                               l2681 15D8  
                             l2673 15AA                               l2841 1738  
                             l2833 06E6                               l2817 0686  
                             l2825 06A6                               l2809 066E  
                             l2761 0572                               l2753 0552  
                             l2497 1B66                               l2665 0546  
                             l2649 0484                               l2657 04BA  
                             l2569 1A12                               l2907 0DEA  
                             l2931 159A                               l2923 153A  
                             l2595 19CE                               l2747 0D00  
                             l2739 0CBC                               l2691 0BC6  
                             l2579 1858                               l2683 15EA  
                             l2675 15B6                               l2835 06F2  
                             l2827 06AA                               l2819 068A  
                             l2771 05AE                               l2763 0578  
                             l2755 055E                               l2659 0516  
                             l2587 1A7C                               l2851 17B0  
                             l2843 178E                               l2909 0DF0  
                             l2941 15A4                               l2933 159C  
                             l2925 153C                               l2917 1BEC  
                             l2597 19DC                               l2749 0D08  
                             l2693 0BD2                               l2685 15FA  
                             l2677 15C2                               l2837 0706  
                             l2829 06C6                               l2773 05B2  
                             l2765 0588                               l2781 05CE  
                             l2853 17C0                               ?_pad 0011  
                             l2943 15A6                               l2935 159E  
                             l2927 153E                               l2919 1BF0  
                             l2871 0EE2                               l2687 1606  
                             l2679 15C8                               l2839 071C  
                             l2791 0612                               l2783 05D2  
                             l2775 05BE                               l2767 0598  
                             l2855 17C4                               l2881 0D3C  
                             l2873 0D16                               l2937 15A0  
                             l2929 1572                               l2945 1BBC  
                             l2953 1432                               l2689 0BC2  
                             l2865 0E38                               l2857 0E22  
                             l2793 0622                               l2777 05C2  
                             l2785 05E2                               l2769 05AA  
                             l2849 1796                               l2891 0D84  
                             l2883 0D4A                               l2875 0D1A  
                             l2939 15A2                               l2955 149E  
                             l2947 142A                               l2971 11D8  
                             l2699 0BE6                               l2867 0ED0  
                             l2859 0E2E                               l2795 062E  
                             l2787 05E6                               l2779 05C6  
                             l2893 0D8C                               l2885 0D5A  
                             l2877 0D28                               l2957 14A2  
                             l2973 1206                               l2965 1174  
                             l2869 0EDC                               l2789 0602  
                             l2895 0D98                               l2887 0D5E  
                             l2879 0D38                               l2975 120A  
                             l2967 11A2                               l2959 1164  
                             l2991 14C2                               l2897 0DA6  
                             l2889 0D6E                               l2977 120E  
                             l2969 11A6                               l2985 1890  
                             l2993 14C8                               l2899 0DB0  
                             l2987 18B6                               l2979 1888  
                             l2995 14D0                               l2989 18BA  
                             l2997 14D8                               l2999 14E0  
                     ?_leer_eeprom 0003                               STR_1 7FB9  
                             STR_2 7FD0                               STR_3 7DCA  
                             STR_4 7F19                               STR_5 7E8F  
                             STR_6 7F89                               STR_7 7D34  
                             STR_8 7FB9                               STR_9 7CFD  
                             u2000 15FA                               u2001 15F6  
                             u2010 0BFC                               u2011 0BF8  
                             u2020 0C0C                               u1300 123C  
                             u2100 0588                               u2021 0C08  
                             u1301 1238                               u2101 0584  
                             u2030 0C1E                               u1310 125E  
                             u2110 0598                               u2031 0C1A  
                             u1311 125A                               u2111 0594  
                             u2040 0C76                               u1400 09D2  
                             u1240 10AC                               u1320 12B4  
                             u2200 06D6                               u2120 05AA  
                             u2041 0C72                               u1401 09CE  
                             u1241 10A8                               u1321 12B0  
                             u2201 06D2                               u2121 05A6  
                             u2050 0C86                               u1410 0A1C  
                             u1250 10BE                               u1330 12C4  
                             u2210 06E6                               u2130 0602  
                             u2051 0C82                               u1411 0A18  
                             u1251 10BA                               u1331 12C0  
                             u2211 06E2                               u2131 05FE  
                             u2300 14BE                               u2060 0C96  
                             u1420 0A70                               u1340 197E  
                             u1260 10E6                               u1500 0042  
                             u2140 0612                               u2220 17E0  
                             u2301 14BA                               u2061 0C92  
                             u1421 0A6C                               u1341 197A  
                             u1261 10E2                               u1501 003C  
                             u2141 060E                               u2221 17DC  
                             u2310 122A                               u2070 0CBC  
                             u1350 08E8                               u1430 0AA2  
                             u1270 111C                               u1510 0044  
                             u2230 0EFE                               u2150 0622  
                             u2311 1226                               u2071 0CB8  
                             u1351 08E4                               u1431 0A9E  
                             u1271 1118                               u2231 0EFA  
                             u2151 061E                               u2240 0D28  
                             u2320 18D6                               u2080 0CCC  
                             u1360 091A                               u1440 0AE0  
                             u1280 1962                               u1600 025E  
                             u1520 005A                               u2160 064C  
                             _LATD 000F8C                               u2241 0D24  
                             u2321 18D2                               u2081 0CC8  
                             u1361 0916                               u1441 0ADC  
                             u1281 195E                               u1601 025A  
                             u1521 0056                               u2161 0648  
                             u2250 0D4A                               u2090 0CE0  
                             u1450 0B0A                               u1290 1A3E  
                             u1610 026E                               u1530 008A  
                             u2170 065C                               u2330 1304  
                             u2251 0D46                               u2091 0CDC  
                             u1371 0944                               u1451 0B06  
                             u1291 1A3A                               u1611 026A  
                             u1531 0086                               u2171 0658  
                             u2331 1300                               u2260 0D84  
                             u1700 180A                               u1380 0968  
                             u1460 0B38                               u1620 0280  
                             u1540 00A6                               u2180 066E  
                             u2340 131C                               u2261 0D80  
                             u1701 1806                               u1381 0964  
                             u1461 0B34                               u1621 027C  
                             u1541 00A2                               u2181 066A  
                             u2341 1318                               u2270 0DA6  
                             u1710 181A                               u1390 0992  
                             u1470 0B80                               u1630 0290  
                             u1550 00D4                               u2190 06C6  
                             u2350 1338                               u2271 0DA2  
                             u1711 1816                               u1391 098E  
                             u1471 0B7C                               u1631 028C  
                             u1551 00D0                               u2191 06C2  
                             u2351 1334                               u2280 0DCE  
                             u1480 1B14                               u1720 182A  
                             u1640 02A8                               u1560 00E2  
                             u1800 1002                               u2360 1362  
                             u2281 0DCA                               u1481 1B10  
                             u1721 1826                               u1641 02A4  
                             u1561 00DE                               u1801 0FFE  
                             u2361 135E                               u2290 0E00  
                             u1490 1B22                               u1650 1BEA  
                             u1730 16FE                               u1570 020C  
                             u1810 1014                               u2370 1374  
                             u2450 13F6                               u2291 0DFC  
                             u1491 1B1E                               u2507 19D4  
                             u1651 1BE6                               u1571 0208  
                             u1811 1010                               u2371 1370  
                             u2451 13F2                               u1740 1726  
                             u1580 022A                               u1660 0746  
                             u1820 106E                               u1900 0370  
                             u2460 1416                               u1581 0226  
                             u1661 0742                               u1821 106A  
                             u1901 036C                               u2461 1412  
                             u1750 1736                               u1590 0244  
                             u1670 078E                               u1830 107E  
                             u1910 03A6                               u1751 1732  
                             u1591 0240                               u1671 078A  
                             u1831 107A                               u1911 03A2  
                             u1680 07B2                               u1760 16D0  
                             u1840 108E                               u1920 03DC  
                             u1737 16F4                               u1681 07AE  
                             u1761 16CC                               u1841 108A  
                             u1921 03D8                               u1850 0FCC  
                             u1690 0856                               u1770 1B9A  
                             u1930 0412                               u1747 171C  
                             u1851 0FC8                               u1691 0852  
                             u1771 1B94                               u1931 040E  
                             u1780 1B9C                               u1940 0448  
                             u1860 1A10                               u1941 0444  
                             u1861 1A0C                               u2477 17B6  
                             u1790 0FF2                               u1950 047E  
                             u1870 1AA0                               u1791 0FEE  
                             u1951 047A                               u1871 1A9A  
                             u2487 19E4                               u1960 04B4  
                             u1880 1AA2                               u2497 1A72  
                             u1961 04B0                               u1970 0536  
                             u1890 0336                               u1971 0532  
                             u1891 0332                               u1980 0546  
                             u1981 0542                               u1990 15D8  
                             u1991 15D4                               _TMR0 000FD6  
             _minutosTranscurridos 00C3                 ??_i2c_reinicia_com 0002  
          escribeHorariosMemoria@i 000D                      ??_i2c_detener 0002  
                             abs@a 0013                               _dbuf 0100  
                             _main 1394                               _dtoa 0012  
                             _hora 00C9                               _prec 00BC  
                             _nout 00B8                               pad@i 0018  
                             pad@p 0015                               fsr1h 000FE2  
                             fsr2h 000FDA                               indf1 000FE7  
                             indf2 000FDF                               fsr1l 000FE1  
                             pad@w 001A                               fsr2l 000FD9  
                             btemp 005F                     ?_sistemaRegado 0001  
         __size_of_asignarHorarios 0154                      ??_i2c_iniciar 0001  
                             prodh 000FF4                               prodl 000FF3  
                             start 000E           ??_restablecerDatosSensor 0005  
                    __CFG_IESO$OFF 000000                  _constructorSensor 1C0E  
          __size_of_setTiempoRegar 01D4                       ___param_bank 000000  
               ?_constructorSensor 0001                 setTiempoRegar@hora 0010  
               _leeHorariosMemoria 1164                   ??_encenderBombas 0003  
                            ??_abs 0015                              ??_pad 0017  
                   _i2c_envia_dato 1C02                      __CFG_PLLDIV$1 000000  
                   _i2c_inicia_com 1C20                    __end_of___aldiv 0E22  
                  __end_of___aodiv 0A5E                              ?_main 0001  
                            ?_dtoa 001C                    __end_of___aomod 0BC2  
                    _convertirDato 1B4A                              STR_10 7F6F  
                            STR_11 7FB9                              STR_12 7FA2  
                            STR_20 7ED9                              STR_13 7D34  
                            STR_21 7E6A                              STR_14 7FB9  
                            STR_30 7FE0                              STR_22 7F54  
                            STR_23 7EB4                              STR_15 7CB5  
                            STR_16 7FB9                              STR_24 7D99  
                            STR_25 7EF9                              STR_17 7E45  
                            STR_26 7FF0                              STR_18 7E1F  
                            STR_27 7F86                              STR_19 7F38  
                            STR_28 7DF5                              STR_29 7D67  
              ??_constructorSensor 0005                  convertirDato@dato 0002  
                            _T0CON 000FD5                              i2l172 1674  
              ?_leeHorariosMemoria 0001                              _RCREG 000FAE  
                     vfpfcnvrt@fmt 0042                              _SPBRG 000FAF  
                            _PORTA 000F80                              _PORTE 000F84  
                    __CFG_USBDIV$1 000000                              _TRISA 000F92  
                            _TRISD 000F95                              _TRISE 000F96  
                            _TXREG 000FAD                      __CFG_PWRT$OFF 000000  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                      __CFG_WRT3$OFF 000000  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                   __CFG_EBTR1$OFF 000000                     __CFG_EBTR2$OFF 000000  
                   __CFG_EBTR3$OFF 000000                      __CFG_WRTB$OFF 000000  
                    __CFG_WRTC$OFF 000000                      __CFG_WRTD$OFF 000000  
                   __CFG_EBTRB$OFF 000000                 __size_of_UART_init 0070  
               __size_of_UART_read 0054                              _flags 00BE  
                            _fputc 109A                              _fputs 1920  
                      ?_UART_write 0001                              pad@fp 0011  
                            _width 00BA                              _putch 1C34  
                            dtoa@d 001E                              dtoa@i 003E  
                            dtoa@n 0036                              dtoa@p 0030  
                            dtoa@s 0034                              dtoa@w 0032  
                            tablat 000FF5                              ttemp5 0060  
                            ttemp6 0063                              ttemp7 0067  
                            status 000FD8                              wtemp8 0060  
                  __end_of_sprintf 1888                 escribe_eeprom@dato 0009  
        __end_of_constructorSensor 1C18               ??_leeHorariosMemoria 0007  
                   __CFG_ICPRT$OFF 000000                         _i2c_espera 1AFE  
                 ??_dameHoraActual 0005                     __CFG_MCLRE$OFF 000000  
                  __initialization 18D8                    setTiempoRegar@i 0011  
              __end_of_i2c_detener 1C30    __size_of_lecturaAnalogaSensores 0054  
           __end_of_i2c_envia_dato 1C0E                       __end_of_main 142A  
                     __end_of_dtoa 02F6           ??_escribeHorariosMemoria 000B  
                  ??_configurarAdc 0001                setTiempoRegar@i_720 0013  
           __end_of_i2c_inicia_com 1C28                 _inicializarObjetos 142A  
              __end_of_i2c_iniciar 1C02             sistemaPrincipal@opcion 005D  
                 _dameHumedadSuelo 19E0                     ?_convertirDato 0001  
             __size_of_fijaHoraRtc 0068                             ??_main 005E  
                           ??_dtoa 0026          setTiempoRegar@tiempoRegar 000F  
                    __activetblptr 000002                ?_inicializarObjetos 0001  
               i2c_envia_dato@dato 0002                    __CFG_CCP2MX$OFF 000000  
                           _ADCON1 000FC1                             _ADCON2 000FC0  
                           ?_fputc 0001                             ?_fputs 000A  
                           _ADRESL 000FC3             encenderBombas@flagSeco 0005  
                           ?_putch 0001                 convertirDato@datoR 0003  
                           i2l3041 1614                             i2l3051 164C  
                           i2l3043 1622                             i2l3053 164E  
                           i2l3045 1632                             i2l3047 1636  
                           i2l3055 165C                             i2l3057 166A  
                           i2l3049 1648                             i2l3059 166E  
                  ??_sistemaRegado 0008                             _SSPADD 000FC8  
                           _SSPBUF 000FC9               ??_inicializarObjetos 0007  
  __size_of_restablecerDatosSensor 0050                     __CFG_XINST$OFF 000000  
                     vfprintf@cfmt 0056           __end_of_sistemaPrincipal 153A  
                   _escribe_eeprom 1A4C                    ?_i2c_envia_dato 0001  
                        ??___aldiv 0009                          ??___aodiv 0011  
                        ??___aomod 0011                             ___wmul 1B24  
                __end_of_UART_init 15AA                  __end_of_UART_read 1836  
                ??_asignarHorarios 000F                   __end_of_leer_rtc 1AFE  
                  ?_i2c_inicia_com 0001                   __end_of_estaSeco 1BA2  
              __size_of_UART_write 0016                       ?_UART_printf 0002  
                           clear_0 18FE                             clear_1 190A  
                           _setRtc 0FCE                             pad@buf 0013  
                           dtoa@fp 001C                             _strlen 1A16  
                  _i2c_recibe_dato 1BA2                       ?_mostrarMenu 0001  
                           fputc@c 0001                             fputs@c 000E  
                           fputs@i 000F                             fputs@s 000A  
             escribe_rtc@direccion 0004                       __mediumconst 7CB4  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8             _lecturaAnalogaSensores 178E  
                           putch@c 0001                   __end_of_vfprintf 16DA  
                        ??_sprintf 0058                         __accesstop 0060  
          __end_of__initialization 1912               __size_of_escribe_rtc 001E  
                  __CFG_PBADEN$OFF 000000               __size_of_leer_eeprom 003C  
                  __CFG_FOSC$XT_XT 000000                        _i2c_detener 1C28  
       __size_of_constructorSensor 000A                      ___rparam_used 000001  
                      _i2c_iniciar 1BEC             __end_of_escribe_eeprom 1A7C  
                      ?_i2c_espera 0001                     _setTiempoRegar 054E  
                 setTiempoRegar@Rx 0016                     __pcstackCOMRAM 0001  
                     leer_rtc@dato 0004                       __pidataBANK0 1C30  
  __size_of_escribeHorariosMemoria 00CE                    ??_convertirDato 0001  
                    __end_of_fputc 1164                      __end_of_fputs 1964  
                    __end_of_putch 1C36             _restablecerDatosSensor 1888  
                     _datoRecibido 00C6                  ?_dameDatosSistema 0001  
                          ??_fputc 0005                            ??_fputs 000E  
                          ??_putch 0001                         __pbssBANK0 0060  
                       __pbssBANK1 0100                 ??_dameDatosSistema 0058  
          __size_of_desbordamiento 1670                 __size_of_horaRegar 002C  
           __end_of_setTiempoRegar 0722                    ?_escribe_eeprom 0007  
               _contInterrupciones 00C0          __size_of_i2c_reinicia_com 0008  
                          ?___wmul 0001            __end_of_i2c_recibe_dato 1BBC  
                          _ACKSTAT 007E2E                            ?_setRtc 0001  
                          ?_strlen 0001                 __size_of_vfpfcnvrt 01B4  
              __size_of_i2c_espera 0026             _escribeHorariosMemoria 0F00  
                          _SSPCON1 000FC6                            _SSPCON2 000FC5  
                     ??_UART_write 0001                            _SSPSTAT 000FC7  
         __end_of_dameHumedadSuelo 1A16                          ?_leer_rtc 0001  
                        ?_estaSeco 0001                    __CFG_VREGEN$OFF 000000  
                  ?_setTiempoRegar 0001                            __Hparam 0000  
                          __Lparam 0000                            ___aldiv 0D16  
                          ___aodiv 08D6                            ___aomod 0A5E  
                  __size_of___wmul 0026           constructorSensor@humedad 0003  
                        ?_vfprintf 0050                    __CFG_STVREN$OFF 000000  
                          __pcinit 18D8                            __ramtop 0800  
               __end_of_UART_write 1BEC                    __size_of_setRtc 00CC  
                          __ptext0 1394                            __ptext1 12F2  
                          __ptext2 178E                            __ptext3 19E0  
                          __ptext4 1A7C                            __ptext5 02F6  
                          __ptext6 1B88                            __ptext7 1AA8  
                          __ptext8 1AD4                            __ptext9 1B4A  
                __end_of_horaRegar 1AA8                          _T0CONbits 000FD5  
                  __size_of_strlen 0036               __size_of_UART_printf 005E  
                     __size_of_abs 0040                       __size_of_pad 00C6  
                          _regando 00C2                   ___aldiv@dividend 0001  
                          _minutos 00C8               __size_of_mostrarMenu 0056  
                          _sprintf 1836                     __pintcode_body 1612  
             end_of_initialization 1912                         ??_leer_rtc 0003  
                       ??_estaSeco 0003                            fputc@fp 0003  
                  _asignarHorarios 0BC2                      __Lmediumconst 7CB4  
                          int_func 1612                            fputs@fp 000C  
                 ??_i2c_envia_dato 0002        __size_of_leeHorariosMemoria 00C8  
                          setRtc@i 0009                   ??_i2c_inicia_com 0002  
                 _VALOR_TIMER0UART 00F4                  __end_of_vfpfcnvrt 08D6  
                        _RCSTAbits 000FAB                   ___aldiv@quotient 000B  
                          postdec1 000FE5                            postdec2 000FDD  
                ?_sistemaPrincipal 0001                            postinc0 000FEE  
                          postinc1 000FE6                            postinc2 000FDE  
                    ??_fijaHoraRtc 000C                   ?_i2c_recibe_dato 0001  
                       ??_vfprintf 0056              __end_of_configurarAdc 1BD6  
               ??_sistemaPrincipal 005B                            strlen@a 0003  
                          strlen@s 0001                          _UART_init 153A  
                        _UART_read 17E2            ?_lecturaAnalogaSensores 0001  
        dameHumedadSuelo@canalLeer 0002            lecturaAnalogaSensores@i 0004  
                        _TRISBbits 000F93                          _TRISCbits 000F94  
          __size_of_encenderBombas 0258                     _desbordamiento 0008  
                   _esperandoDatos 005E                     _UART_init$1623 0017  
                     ?_i2c_detener 0001              __end_of_sistemaRegado 1394  
                        _TXSTAbits 000FAC                  dameDatosSistema@i 00F0  
      __size_of_inicializarObjetos 0096                       ?_i2c_iniciar 0001  
                     ??_i2c_espera 0001                   _i2c_reinicia_com 1C18  
      setTiempoRegar@datoCapturado 0015                        vfpfcnvrt@ap 0044  
                      vfpfcnvrt@fp 0040                        vfpfcnvrt@ll 0048  
                   __end_of___wmul 1B4A            ?_restablecerDatosSensor 0001  
   __end_of_lecturaAnalogaSensores 17E2                         ?_UART_init 000F  
                       ?_UART_read 0001                setRtc@datoCapturado 0008  
          __size_of_dameHoraActual 002C                     __end_of_setRtc 109A  
              __end_of_fijaHoraRtc 1612                     __end_of_strlen 1A4C  
              start_initialization 18D8                        __end_of_abs 19A4  
          __end_of_asignarHorarios 0D16                        __end_of_pad 12F2  
escribeHorariosMemoria@contMemoria 000B             __end_of_desbordamiento 1678  
               __end_of_i2c_espera 1B24                      ??_escribe_rtc 0004  
                    ??_leer_eeprom 0005                   ??_escribe_eeprom 000A  
              leeHorariosMemoria@i 0009               constructorSensor@pin 0004  
                      vfprintf@fmt 0052          __size_of_dameDatosSistema 00DE  
                         ??___wmul 0005     __end_of_restablecerDatosSensor 18D8  
                      __pdataBANK0 00F2                   __CFG_LPT1OSC$OFF 000000  
                leer_rtc@direccion 0003                           ??_setRtc 0005  
            __end_of_convertirDato 1B6A       asignarHorarios@datoCapturado 0010  
                         ??_strlen 0003            ?_escribeHorariosMemoria 0001  
                      __pbssCOMRAM 005E                      __pcstackBANK0 00CD  
                 ___aodiv@dividend 0001                    ?_desbordamiento 0001  
                 ??_setTiempoRegar 000F                  ?_dameHumedadSuelo 0001  
                UART_printf@cadena 0002                 ??_dameHumedadSuelo 0001  
                __size_of_leer_rtc 002A                  __size_of_estaSeco 001A  
              __end_of_escribe_rtc 1B88                __end_of_leer_eeprom 19E0  
                        __pintcode 0008                      __pmediumconst 7CB4  
                         ?___aldiv 0001                           ?___aodiv 0001  
                         ?___aomod 0001                   ___aodiv@quotient 0013  
                      _fijaHoraRtc 15AA                         setRtc@dato 0007  
                      ??_UART_init 0013                        ??_UART_read 0001  
                __size_of_vfprintf 0062     __end_of_escribeHorariosMemoria 0FCE  
                   _encenderBombas 02F6                          _horaRegar 1A7C  
                 ?_asignarHorarios 0001                           ?_sprintf 00CD  
                   __size_of_fputc 00CA                     __size_of_fputs 0044  
                   __size_of_putch 0002                    ___aldiv@divisor 0005  
                  ___aldiv@counter 0009                     ___wmul@product 0005  
                         _LATDbits 000F8C                           _PIE1bits 000F9D  
             __size_of_i2c_detener 0008                           i2u240_40 1648  
                         i2u240_41 1644                           i2u241_40 166A  
                         i2u241_41 1666                           i2u238_40 1622  
                         i2u238_41 161E                           i2u239_40 1632  
                         i2u239_41 162E                           _PIR1bits 000F9E  
          restablecerDatosSensor@i 0005               __size_of_i2c_iniciar 0016  
                 __CFG_WDTPS$32768 000000             _tiempoInactividadTrans 00CC  
    leeHorariosMemoria@contMemoria 0007                asignarHorarios@hora 000F  
                    ??_UART_printf 0004             dameDatosSistema@buffer 00E1  
                        _vfpfcnvrt 0722                         _ADCON0bits 000FC2  
                   _dameHoraActual 1AA8                  ___wmul@multiplier 0001  
           __end_of_encenderBombas 054E                      ??_mostrarMenu 0004  
                   UART_write@dato 0001                         ?_horaRegar 0001  
        __size_of_sistemaPrincipal 007A           __end_of_i2c_reinicia_com 1C20  
                        copy_data0 18EC                        _escribe_rtc 1B6A  
                      _leer_eeprom 19A4                       _VALOR_TIMER0 00F2  
       __end_of_leeHorariosMemoria 122C                          estaSeco@s 0001  
                         __Hrparam 0000                       _minutosRegar 00C4  
                    UART_init@BAUD 000F                         vfprintf@ap 0054  
                         __Lrparam 0000                         vfprintf@fp 0050  
                 _dameDatosSistema 0E22                _esperaDatoConcluida 00CA  
                 __size_of___aldiv 010C                   __size_of___aodiv 0188  
                 __size_of___aomod 0164             __end_of_dameHoraActual 1AD4  
                       ?_vfpfcnvrt 0040                    ___aodiv@divisor 0009  
                  ___aodiv@counter 0011                    ?_encenderBombas 0001  
                       sprintf@fmt 00CF           __size_of_i2c_recibe_dato 001A  
              __end_of_UART_printf 1738                           _dtoa$856 002E  
                         __ptext10 14C0                           __ptext11 054E  
                         __ptext20 0012                           __ptext12 1738  
                         __ptext21 122C                           __ptext13 15AA  
                         __ptext30 0F00                           __ptext22 1A16  
                         __ptext14 0FCE                           __ptext31 1A4C  
                         __ptext23 1920                           __ptext15 1B6A  
                         __ptext40 1BA2                           __ptext32 17E2  
                         __ptext24 109A                           __ptext16 0E22  
                         __ptext41 1C20                           __ptext33 16DA  
                         __ptext25 1C34                           __ptext17 1836  
                         __ptext50 0D16                           __ptext42 1C02  
                         __ptext34 1BD6                           __ptext26 1964  
                         __ptext18 1678                           __ptext43 1C28  
                         __ptext35 1888                           __ptext27 0A5E  
                         __ptext19 0722                           __ptext44 1AFE  
                         __ptext36 1C0E                           __ptext28 08D6  
                         __ptext45 142A                           __ptext37 1164  
                         __ptext29 0BC2                           __ptext46 1B24  
                         __ptext38 19A4                           __ptext47 1BEC  
                         __ptext39 1C18                           __ptext48 1BBC  
                         __ptext49 153A                __end_of_mostrarMenu 178E  
                 __size_of_sprintf 0052                           _leer_rtc 1AD4  
                         _estaSeco 1B88         __end_of_inicializarObjetos 14C0  
                         _byteUart 00CB             __size_of_configurarAdc 001A  
              inicializarObjetos@i 0007                      __size_of_main 0096  
                    __size_of_dtoa 02E4                           _horarios 0060  
                         _segundos 00C7                    encenderBombas@i 0006  
                         _sensores 00A8                           int$flags 005F  
                         _vfprintf 1678                    ?_dameHoraActual 0001  
          __size_of_i2c_envia_dato 000C            __size_of_i2c_inicia_com 0008  
         i2c_recibe_dato@datoleido 0002                   ___aomod@dividend 0001  
            __CFG_CPUDIV$OSC1_PLL2 000000                   ??_desbordamiento 0001  
           __size_of_sistemaRegado 00A2                         _INTCONbits 000FF2  
               constructorSensor@s 0001                        ??_horaRegar 0003  
          escribe_eeprom@direccion 0007                           intlevel2 0000  
                        sprintf@ap 00D9                    escribe_rtc@dato 0003  
                         setRtc@Rx 000B                    setRtc@direccion 0006  
                asignarHorarios@Rx 0013                      _overflowTimer 00C5  
                     ?_fijaHoraRtc 0001                    ___aomod@divisor 0009  
        __size_of_dameHumedadSuelo 0036                        ??_vfpfcnvrt 0046  
                  ___aomod@counter 0011                        _UART_printf 16DA  
                    _configurarAdc 1BBC                           sprintf@f 00DB  
                         sprintf@s 00CD                        _mostrarMenu 1738  
                     ___aldiv@sign 000A                   asignarHorarios@i 0011  
                 _sistemaPrincipal 14C0                    leer_eeprom@dato 0006  
                      _SSPCON2bits 000FC5                         _UART_write 1BD6  
                     ___aodiv@sign 0012                  ??_i2c_recibe_dato 0002  
           __size_of_convertirDato 0020               leer_eeprom@direccion 0003  
                    _sistemaRegado 12F2                       ___aomod@sign 0012  
         ??_lecturaAnalogaSensores 0003  
