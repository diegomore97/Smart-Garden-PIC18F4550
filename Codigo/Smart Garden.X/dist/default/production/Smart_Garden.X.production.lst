

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jun 11 16:30:04 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80  0000                     
    81                           ; Version 2.10
    82                           ; Generated 31/07/2019 GMT
    83                           ; 
    84                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F4550 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     
   116                           	psect	idataBANK0
   117  002316                     __pidataBANK0:
   118                           	opt callstack 0
   119                           
   120                           ;initializer for _VALOR_TIMER0
   121  002316  6769               	dw	26473
   122                           
   123                           ;initializer for _VALOR_TIMER0UART
   124  002318  6769               	dw	26473
   125  0000                     _TMR0	set	4054
   126  0000                     _TRISD	set	3989
   127  0000                     _T0CON	set	4053
   128  0000                     _T0CONbits	set	4053
   129  0000                     _LATD	set	3980
   130  0000                     _PIE1bits	set	3997
   131  0000                     _ADRESL	set	4035
   132  0000                     _ADRESH	set	4036
   133  0000                     _ADCON0bits	set	4034
   134  0000                     _ADCON2	set	4032
   135  0000                     _ADCON1	set	4033
   136  0000                     _INTCONbits	set	4082
   137  0000                     _LATDbits	set	3980
   138  0000                     _TRISDbits	set	3989
   139  0000                     _PORTDbits	set	3971
   140  0000                     _TXREG	set	4013
   141  0000                     _RCREG	set	4014
   142  0000                     _PIR1bits	set	3998
   143  0000                     _RCSTAbits	set	4011
   144  0000                     _TXSTAbits	set	4012
   145  0000                     _SPBRG	set	4015
   146  0000                     _TRISCbits	set	3988
   147  0000                     _SSPBUF	set	4041
   148  0000                     _SSPCON2bits	set	4037
   149  0000                     _SSPADD	set	4040
   150  0000                     _SSPCON2	set	4037
   151  0000                     _SSPCON1	set	4038
   152  0000                     _SSPSTAT	set	4039
   153  0000                     _TRISBbits	set	3987
   154  0000                     _ACKSTAT	set	32302
   155                           
   156                           	psect	mediumconst
   157  007BC4                     __pmediumconst:
   158                           	opt callstack 0
   159  007BC4  00                 	db	0
   160  007BC5                     STR_11:
   161  007BC5  0D                 	db	13
   162  007BC6  0A                 	db	10
   163  007BC7  20                 	db	32
   164  007BC8  49                 	db	73	;'I'
   165  007BC9  6E                 	db	110	;'n'
   166  007BCA  67                 	db	103	;'g'
   167  007BCB  72                 	db	114	;'r'
   168  007BCC  65                 	db	101	;'e'
   169  007BCD  73                 	db	115	;'s'
   170  007BCE  65                 	db	101	;'e'
   171  007BCF  20                 	db	32
   172  007BD0  6C                 	db	108	;'l'
   173  007BD1  6F                 	db	111	;'o'
   174  007BD2  73                 	db	115	;'s'
   175  007BD3  20                 	db	32
   176  007BD4  6D                 	db	109	;'m'
   177  007BD5  69                 	db	105	;'i'
   178  007BD6  6E                 	db	110	;'n'
   179  007BD7  75                 	db	117	;'u'
   180  007BD8  74                 	db	116	;'t'
   181  007BD9  6F                 	db	111	;'o'
   182  007BDA  73                 	db	115	;'s'
   183  007BDB  20                 	db	32
   184  007BDC  71                 	db	113	;'q'
   185  007BDD  75                 	db	117	;'u'
   186  007BDE  65                 	db	101	;'e'
   187  007BDF  20                 	db	32
   188  007BE0  64                 	db	100	;'d'
   189  007BE1  65                 	db	101	;'e'
   190  007BE2  73                 	db	115	;'s'
   191  007BE3  65                 	db	101	;'e'
   192  007BE4  65                 	db	101	;'e'
   193  007BE5  20                 	db	32
   194  007BE6  71                 	db	113	;'q'
   195  007BE7  75                 	db	117	;'u'
   196  007BE8  65                 	db	101	;'e'
   197  007BE9  20                 	db	32
   198  007BEA  73                 	db	115	;'s'
   199  007BEB  65                 	db	101	;'e'
   200  007BEC  20                 	db	32
   201  007BED  72                 	db	114	;'r'
   202  007BEE  69                 	db	105	;'i'
   203  007BEF  65                 	db	101	;'e'
   204  007BF0  67                 	db	103	;'g'
   205  007BF1  75                 	db	117	;'u'
   206  007BF2  65                 	db	101	;'e'
   207  007BF3  20                 	db	32
   208  007BF4  65                 	db	101	;'e'
   209  007BF5  6E                 	db	110	;'n'
   210  007BF6  20                 	db	32
   211  007BF7  65                 	db	101	;'e'
   212  007BF8  73                 	db	115	;'s'
   213  007BF9  65                 	db	101	;'e'
   214  007BFA  20                 	db	32
   215  007BFB  68                 	db	104	;'h'
   216  007BFC  6F                 	db	111	;'o'
   217  007BFD  72                 	db	114	;'r'
   218  007BFE  61                 	db	97	;'a'
   219  007BFF  72                 	db	114	;'r'
   220  007C00  69                 	db	105	;'i'
   221  007C01  6F                 	db	111	;'o'
   222  007C02  20                 	db	32
   223  007C03  65                 	db	101	;'e'
   224  007C04  6A                 	db	106	;'j'
   225  007C05  3A                 	db	58	;':'
   226  007C06  20                 	db	32
   227  007C07  31                 	db	49	;'1'
   228  007C08  35                 	db	53	;'5'
   229  007C09  20                 	db	32
   230  007C0A  0D                 	db	13
   231  007C0B  0A                 	db	10
   232  007C0C  00                 	db	0
   233  007C0D                     STR_7:
   234  007C0D  0D                 	db	13
   235  007C0E  0A                 	db	10
   236  007C0F  20                 	db	32
   237  007C10  49                 	db	73	;'I'
   238  007C11  6E                 	db	110	;'n'
   239  007C12  67                 	db	103	;'g'
   240  007C13  72                 	db	114	;'r'
   241  007C14  65                 	db	101	;'e'
   242  007C15  73                 	db	115	;'s'
   243  007C16  65                 	db	101	;'e'
   244  007C17  20                 	db	32
   245  007C18  31                 	db	49	;'1'
   246  007C19  20                 	db	32
   247  007C1A  70                 	db	112	;'p'
   248  007C1B  61                 	db	97	;'a'
   249  007C1C  72                 	db	114	;'r'
   250  007C1D  61                 	db	97	;'a'
   251  007C1E  20                 	db	32
   252  007C1F  72                 	db	114	;'r'
   253  007C20  65                 	db	101	;'e'
   254  007C21  67                 	db	103	;'g'
   255  007C22  61                 	db	97	;'a'
   256  007C23  72                 	db	114	;'r'
   257  007C24  20                 	db	32
   258  007C25  7C                 	db	124
   259  007C26  7C                 	db	124
   260  007C27  20                 	db	32
   261  007C28  69                 	db	105	;'i'
   262  007C29  6E                 	db	110	;'n'
   263  007C2A  67                 	db	103	;'g'
   264  007C2B  72                 	db	114	;'r'
   265  007C2C  65                 	db	101	;'e'
   266  007C2D  73                 	db	115	;'s'
   267  007C2E  65                 	db	101	;'e'
   268  007C2F  20                 	db	32
   269  007C30  30                 	db	48	;'0'
   270  007C31  20                 	db	32
   271  007C32  70                 	db	112	;'p'
   272  007C33  61                 	db	97	;'a'
   273  007C34  72                 	db	114	;'r'
   274  007C35  61                 	db	97	;'a'
   275  007C36  20                 	db	32
   276  007C37  6E                 	db	110	;'n'
   277  007C38  6F                 	db	111	;'o'
   278  007C39  20                 	db	32
   279  007C3A  72                 	db	114	;'r'
   280  007C3B  65                 	db	101	;'e'
   281  007C3C  67                 	db	103	;'g'
   282  007C3D  61                 	db	97	;'a'
   283  007C3E  72                 	db	114	;'r'
   284  007C3F  3A                 	db	58	;':'
   285  007C40  20                 	db	32
   286  007C41  0D                 	db	13
   287  007C42  0A                 	db	10
   288  007C43  00                 	db	0
   289  007C44                     STR_6:
   290  007C44  0D                 	db	13
   291  007C45  0A                 	db	10
   292  007C46  20                 	db	32
   293  007C47  49                 	db	73	;'I'
   294  007C48  6E                 	db	110	;'n'
   295  007C49  67                 	db	103	;'g'
   296  007C4A  72                 	db	114	;'r'
   297  007C4B  65                 	db	101	;'e'
   298  007C4C  73                 	db	115	;'s'
   299  007C4D  65                 	db	101	;'e'
   300  007C4E  20                 	db	32
   301  007C4F  75                 	db	117	;'u'
   302  007C50  6E                 	db	110	;'n'
   303  007C51  61                 	db	97	;'a'
   304  007C52  20                 	db	32
   305  007C53  68                 	db	104	;'h'
   306  007C54  6F                 	db	111	;'o'
   307  007C55  72                 	db	114	;'r'
   308  007C56  61                 	db	97	;'a'
   309  007C57  20                 	db	32
   310  007C58  65                 	db	101	;'e'
   311  007C59  6E                 	db	110	;'n'
   312  007C5A  20                 	db	32
   313  007C5B  66                 	db	102	;'f'
   314  007C5C  6F                 	db	111	;'o'
   315  007C5D  72                 	db	114	;'r'
   316  007C5E  6D                 	db	109	;'m'
   317  007C5F  61                 	db	97	;'a'
   318  007C60  74                 	db	116	;'t'
   319  007C61  6F                 	db	111	;'o'
   320  007C62  20                 	db	32
   321  007C63  64                 	db	100	;'d'
   322  007C64  65                 	db	101	;'e'
   323  007C65  20                 	db	32
   324  007C66  32                 	db	50	;'2'
   325  007C67  34                 	db	52	;'4'
   326  007C68  20                 	db	32
   327  007C69  68                 	db	104	;'h'
   328  007C6A  72                 	db	114	;'r'
   329  007C6B  73                 	db	115	;'s'
   330  007C6C  20                 	db	32
   331  007C6D  65                 	db	101	;'e'
   332  007C6E  6A                 	db	106	;'j'
   333  007C6F  3A                 	db	58	;':'
   334  007C70  20                 	db	32
   335  007C71  31                 	db	49	;'1'
   336  007C72  35                 	db	53	;'5'
   337  007C73  20                 	db	32
   338  007C74  0D                 	db	13
   339  007C75  0A                 	db	10
   340  007C76  00                 	db	0
   341  007C77                     STR_14:
   342  007C77  0D                 	db	13
   343  007C78  0A                 	db	10
   344  007C79  49                 	db	73	;'I'
   345  007C7A  6E                 	db	110	;'n'
   346  007C7B  67                 	db	103	;'g'
   347  007C7C  72                 	db	114	;'r'
   348  007C7D  65                 	db	101	;'e'
   349  007C7E  73                 	db	115	;'s'
   350  007C7F  65                 	db	101	;'e'
   351  007C80  20                 	db	32
   352  007C81  65                 	db	101	;'e'
   353  007C82  6C                 	db	108	;'l'
   354  007C83  20                 	db	32
   355  007C84  70                 	db	112	;'p'
   356  007C85  6F                 	db	111	;'o'
   357  007C86  72                 	db	114	;'r'
   358  007C87  63                 	db	99	;'c'
   359  007C88  65                 	db	101	;'e'
   360  007C89  6E                 	db	110	;'n'
   361  007C8A  74                 	db	116	;'t'
   362  007C8B  61                 	db	97	;'a'
   363  007C8C  6A                 	db	106	;'j'
   364  007C8D  65                 	db	101	;'e'
   365  007C8E  20                 	db	32
   366  007C8F  64                 	db	100	;'d'
   367  007C90  65                 	db	101	;'e'
   368  007C91  20                 	db	32
   369  007C92  68                 	db	104	;'h'
   370  007C93  75                 	db	117	;'u'
   371  007C94  6D                 	db	109	;'m'
   372  007C95  65                 	db	101	;'e'
   373  007C96  64                 	db	100	;'d'
   374  007C97  61                 	db	97	;'a'
   375  007C98  64                 	db	100	;'d'
   376  007C99  20                 	db	32
   377  007C9A  64                 	db	100	;'d'
   378  007C9B  65                 	db	101	;'e'
   379  007C9C  6C                 	db	108	;'l'
   380  007C9D  20                 	db	32
   381  007C9E  73                 	db	115	;'s'
   382  007C9F  65                 	db	101	;'e'
   383  007CA0  6E                 	db	110	;'n'
   384  007CA1  73                 	db	115	;'s'
   385  007CA2  6F                 	db	111	;'o'
   386  007CA3  72                 	db	114	;'r'
   387  007CA4  20                 	db	32
   388  007CA5  25                 	db	37
   389  007CA6  64                 	db	100	;'d'
   390  007CA7  0D                 	db	13
   391  007CA8  0A                 	db	10
   392  007CA9  00                 	db	0
   393  007CAA                     STR_25:
   394  007CAA  0D                 	db	13
   395  007CAB  0A                 	db	10
   396  007CAC  0A                 	db	10
   397  007CAD  48                 	db	72	;'H'
   398  007CAE  6F                 	db	111	;'o'
   399  007CAF  72                 	db	114	;'r'
   400  007CB0  61                 	db	97	;'a'
   401  007CB1  20                 	db	32
   402  007CB2  7C                 	db	124
   403  007CB3  20                 	db	32
   404  007CB4  52                 	db	82	;'R'
   405  007CB5  65                 	db	101	;'e'
   406  007CB6  67                 	db	103	;'g'
   407  007CB7  61                 	db	97	;'a'
   408  007CB8  72                 	db	114	;'r'
   409  007CB9  28                 	db	40
   410  007CBA  31                 	db	49	;'1'
   411  007CBB  20                 	db	32
   412  007CBC  73                 	db	115	;'s'
   413  007CBD  69                 	db	105	;'i'
   414  007CBE  20                 	db	32
   415  007CBF  30                 	db	48	;'0'
   416  007CC0  20                 	db	32
   417  007CC1  6E                 	db	110	;'n'
   418  007CC2  6F                 	db	111	;'o'
   419  007CC3  29                 	db	41
   420  007CC4  20                 	db	32
   421  007CC5  7C                 	db	124
   422  007CC6  20                 	db	32
   423  007CC7  4D                 	db	77	;'M'
   424  007CC8  69                 	db	105	;'i'
   425  007CC9  6E                 	db	110	;'n'
   426  007CCA  75                 	db	117	;'u'
   427  007CCB  74                 	db	116	;'t'
   428  007CCC  6F                 	db	111	;'o'
   429  007CCD  73                 	db	115	;'s'
   430  007CCE  20                 	db	32
   431  007CCF  64                 	db	100	;'d'
   432  007CD0  65                 	db	101	;'e'
   433  007CD1  20                 	db	32
   434  007CD2  72                 	db	114	;'r'
   435  007CD3  69                 	db	105	;'i'
   436  007CD4  65                 	db	101	;'e'
   437  007CD5  67                 	db	103	;'g'
   438  007CD6  6F                 	db	111	;'o'
   439  007CD7  20                 	db	32
   440  007CD8  0D                 	db	13
   441  007CD9  0A                 	db	10
   442  007CDA  0A                 	db	10
   443  007CDB  00                 	db	0
   444  007CDC                     STR_19:
   445  007CDC  0D                 	db	13
   446  007CDD  0A                 	db	10
   447  007CDE  20                 	db	32
   448  007CDF  33                 	db	51	;'3'
   449  007CE0  2E                 	db	46
   450  007CE1  20                 	db	32
   451  007CE2  50                 	db	80	;'P'
   452  007CE3  72                 	db	114	;'r'
   453  007CE4  6F                 	db	111	;'o'
   454  007CE5  67                 	db	103	;'g'
   455  007CE6  72                 	db	114	;'r'
   456  007CE7  61                 	db	97	;'a'
   457  007CE8  6D                 	db	109	;'m'
   458  007CE9  61                 	db	97	;'a'
   459  007CEA  72                 	db	114	;'r'
   460  007CEB  20                 	db	32
   461  007CEC  74                 	db	116	;'t'
   462  007CED  69                 	db	105	;'i'
   463  007CEE  65                 	db	101	;'e'
   464  007CEF  6D                 	db	109	;'m'
   465  007CF0  70                 	db	112	;'p'
   466  007CF1  6F                 	db	111	;'o'
   467  007CF2  20                 	db	32
   468  007CF3  64                 	db	100	;'d'
   469  007CF4  65                 	db	101	;'e'
   470  007CF5  20                 	db	32
   471  007CF6  72                 	db	114	;'r'
   472  007CF7  69                 	db	105	;'i'
   473  007CF8  65                 	db	101	;'e'
   474  007CF9  67                 	db	103	;'g'
   475  007CFA  6F                 	db	111	;'o'
   476  007CFB  20                 	db	32
   477  007CFC  65                 	db	101	;'e'
   478  007CFD  6E                 	db	110	;'n'
   479  007CFE  20                 	db	32
   480  007CFF  75                 	db	117	;'u'
   481  007D00  6E                 	db	110	;'n'
   482  007D01  20                 	db	32
   483  007D02  68                 	db	104	;'h'
   484  007D03  6F                 	db	111	;'o'
   485  007D04  72                 	db	114	;'r'
   486  007D05  61                 	db	97	;'a'
   487  007D06  72                 	db	114	;'r'
   488  007D07  69                 	db	105	;'i'
   489  007D08  6F                 	db	111	;'o'
   490  007D09  20                 	db	32
   491  007D0A  0D                 	db	13
   492  007D0B  0A                 	db	10
   493  007D0C  00                 	db	0
   494  007D0D                     STR_31:
   495  007D0D  0D                 	db	13
   496  007D0E  0A                 	db	10
   497  007D0F  0A                 	db	10
   498  007D10  50                 	db	80	;'P'
   499  007D11  6F                 	db	111	;'o'
   500  007D12  72                 	db	114	;'r'
   501  007D13  63                 	db	99	;'c'
   502  007D14  65                 	db	101	;'e'
   503  007D15  6E                 	db	110	;'n'
   504  007D16  74                 	db	116	;'t'
   505  007D17  61                 	db	97	;'a'
   506  007D18  6A                 	db	106	;'j'
   507  007D19  65                 	db	101	;'e'
   508  007D1A  20                 	db	32
   509  007D1B  48                 	db	72	;'H'
   510  007D1C  75                 	db	117	;'u'
   511  007D1D  6D                 	db	109	;'m'
   512  007D1E  65                 	db	101	;'e'
   513  007D1F  64                 	db	100	;'d'
   514  007D20  61                 	db	97	;'a'
   515  007D21  64                 	db	100	;'d'
   516  007D22  20                 	db	32
   517  007D23  64                 	db	100	;'d'
   518  007D24  65                 	db	101	;'e'
   519  007D25  6C                 	db	108	;'l'
   520  007D26  20                 	db	32
   521  007D27  73                 	db	115	;'s'
   522  007D28  65                 	db	101	;'e'
   523  007D29  6E                 	db	110	;'n'
   524  007D2A  73                 	db	115	;'s'
   525  007D2B  6F                 	db	111	;'o'
   526  007D2C  72                 	db	114	;'r'
   527  007D2D  20                 	db	32
   528  007D2E  25                 	db	37
   529  007D2F  64                 	db	100	;'d'
   530  007D30  3A                 	db	58	;':'
   531  007D31  20                 	db	32
   532  007D32  25                 	db	37
   533  007D33  64                 	db	100	;'d'
   534  007D34  20                 	db	32
   535  007D35  25                 	db	37
   536  007D36  63                 	db	99	;'c'
   537  007D37  0D                 	db	13
   538  007D38  0A                 	db	10
   539  007D39  00                 	db	0
   540  007D3A                     STR_2:
   541  007D3A  0D                 	db	13
   542  007D3B  0A                 	db	10
   543  007D3C  20                 	db	32
   544  007D3D  45                 	db	69	;'E'
   545  007D3E  6E                 	db	110	;'n'
   546  007D3F  76                 	db	118	;'v'
   547  007D40  69                 	db	105	;'i'
   548  007D41  65                 	db	101	;'e'
   549  007D42  20                 	db	32
   550  007D43  6C                 	db	108	;'l'
   551  007D44  61                 	db	97	;'a'
   552  007D45  73                 	db	115	;'s'
   553  007D46  20                 	db	32
   554  007D47  48                 	db	72	;'H'
   555  007D48  6F                 	db	111	;'o'
   556  007D49  72                 	db	114	;'r'
   557  007D4A  61                 	db	97	;'a'
   558  007D4B  73                 	db	115	;'s'
   559  007D4C  20                 	db	32
   560  007D4D  65                 	db	101	;'e'
   561  007D4E  6E                 	db	110	;'n'
   562  007D4F  20                 	db	32
   563  007D50  66                 	db	102	;'f'
   564  007D51  6F                 	db	111	;'o'
   565  007D52  72                 	db	114	;'r'
   566  007D53  6D                 	db	109	;'m'
   567  007D54  61                 	db	97	;'a'
   568  007D55  74                 	db	116	;'t'
   569  007D56  6F                 	db	111	;'o'
   570  007D57  20                 	db	32
   571  007D58  32                 	db	50	;'2'
   572  007D59  34                 	db	52	;'4'
   573  007D5A  20                 	db	32
   574  007D5B  45                 	db	69	;'E'
   575  007D5C  6A                 	db	106	;'j'
   576  007D5D  3A                 	db	58	;':'
   577  007D5E  20                 	db	32
   578  007D5F  31                 	db	49	;'1'
   579  007D60  35                 	db	53	;'5'
   580  007D61  20                 	db	32
   581  007D62  0D                 	db	13
   582  007D63  0A                 	db	10
   583  007D64  00                 	db	0
   584  007D65                     STR_24:
   585  007D65  0D                 	db	13
   586  007D66  0A                 	db	10
   587  007D67  20                 	db	32
   588  007D68  53                 	db	83	;'S'
   589  007D69  6F                 	db	111	;'o'
   590  007D6A  6C                 	db	108	;'l'
   591  007D6B  6F                 	db	111	;'o'
   592  007D6C  20                 	db	32
   593  007D6D  73                 	db	115	;'s'
   594  007D6E  65                 	db	101	;'e'
   595  007D6F  20                 	db	32
   596  007D70  70                 	db	112	;'p'
   597  007D71  65                 	db	101	;'e'
   598  007D72  72                 	db	114	;'r'
   599  007D73  6D                 	db	109	;'m'
   600  007D74  69                 	db	105	;'i'
   601  007D75  74                 	db	116	;'t'
   602  007D76  65                 	db	101	;'e'
   603  007D77  6E                 	db	110	;'n'
   604  007D78  20                 	db	32
   605  007D79  6E                 	db	110	;'n'
   606  007D7A  75                 	db	117	;'u'
   607  007D7B  6D                 	db	109	;'m'
   608  007D7C  65                 	db	101	;'e'
   609  007D7D  72                 	db	114	;'r'
   610  007D7E  6F                 	db	111	;'o'
   611  007D7F  73                 	db	115	;'s'
   612  007D80  20                 	db	32
   613  007D81  64                 	db	100	;'d'
   614  007D82  65                 	db	101	;'e'
   615  007D83  6C                 	db	108	;'l'
   616  007D84  20                 	db	32
   617  007D85  31                 	db	49	;'1'
   618  007D86  20                 	db	32
   619  007D87  61                 	db	97	;'a'
   620  007D88  6C                 	db	108	;'l'
   621  007D89  20                 	db	32
   622  007D8A  33                 	db	51	;'3'
   623  007D8B  20                 	db	32
   624  007D8C  0D                 	db	13
   625  007D8D  0A                 	db	10
   626  007D8E  00                 	db	0
   627  007D8F                     STR_13:
   628  007D8F  0D                 	db	13
   629  007D90  0A                 	db	10
   630  007D91  53                 	db	83	;'S'
   631  007D92  6F                 	db	111	;'o'
   632  007D93  6C                 	db	108	;'l'
   633  007D94  69                 	db	105	;'i'
   634  007D95  63                 	db	99	;'c'
   635  007D96  69                 	db	105	;'i'
   636  007D97  74                 	db	116	;'t'
   637  007D98  61                 	db	97	;'a'
   638  007D99  6E                 	db	110	;'n'
   639  007D9A  64                 	db	100	;'d'
   640  007D9B  6F                 	db	111	;'o'
   641  007D9C  20                 	db	32
   642  007D9D  4D                 	db	77	;'M'
   643  007D9E  75                 	db	117	;'u'
   644  007D9F  65                 	db	101	;'e'
   645  007DA0  73                 	db	115	;'s'
   646  007DA1  74                 	db	116	;'t'
   647  007DA2  72                 	db	114	;'r'
   648  007DA3  65                 	db	101	;'e'
   649  007DA4  6F                 	db	111	;'o'
   650  007DA5  20                 	db	32
   651  007DA6  64                 	db	100	;'d'
   652  007DA7  65                 	db	101	;'e'
   653  007DA8  20                 	db	32
   654  007DA9  73                 	db	115	;'s'
   655  007DAA  65                 	db	101	;'e'
   656  007DAB  6E                 	db	110	;'n'
   657  007DAC  73                 	db	115	;'s'
   658  007DAD  6F                 	db	111	;'o'
   659  007DAE  72                 	db	114	;'r'
   660  007DAF  65                 	db	101	;'e'
   661  007DB0  73                 	db	115	;'s'
   662  007DB1  0D                 	db	13
   663  007DB2  0A                 	db	10
   664  007DB3  0A                 	db	10
   665  007DB4  00                 	db	0
   666  007DB5                     STR_12:
   667  007DB5  0D                 	db	13
   668  007DB6  0A                 	db	10
   669  007DB7  20                 	db	32
   670  007DB8  4D                 	db	77	;'M'
   671  007DB9  69                 	db	105	;'i'
   672  007DBA  6E                 	db	110	;'n'
   673  007DBB  75                 	db	117	;'u'
   674  007DBC  74                 	db	116	;'t'
   675  007DBD  6F                 	db	111	;'o'
   676  007DBE  73                 	db	115	;'s'
   677  007DBF  20                 	db	32
   678  007DC0  64                 	db	100	;'d'
   679  007DC1  65                 	db	101	;'e'
   680  007DC2  20                 	db	32
   681  007DC3  72                 	db	114	;'r'
   682  007DC4  69                 	db	105	;'i'
   683  007DC5  65                 	db	101	;'e'
   684  007DC6  67                 	db	103	;'g'
   685  007DC7  6F                 	db	111	;'o'
   686  007DC8  20                 	db	32
   687  007DC9  65                 	db	101	;'e'
   688  007DCA  73                 	db	115	;'s'
   689  007DCB  74                 	db	116	;'t'
   690  007DCC  61                 	db	97	;'a'
   691  007DCD  62                 	db	98	;'b'
   692  007DCE  6C                 	db	108	;'l'
   693  007DCF  65                 	db	101	;'e'
   694  007DD0  63                 	db	99	;'c'
   695  007DD1  69                 	db	105	;'i'
   696  007DD2  64                 	db	100	;'d'
   697  007DD3  6F                 	db	111	;'o'
   698  007DD4  73                 	db	115	;'s'
   699  007DD5  21                 	db	33
   700  007DD6  20                 	db	32
   701  007DD7  0D                 	db	13
   702  007DD8  0A                 	db	10
   703  007DD9  00                 	db	0
   704  007DDA                     STR_16:
   705  007DDA  0D                 	db	13
   706  007DDB  0A                 	db	10
   707  007DDC  20                 	db	32
   708  007DDD  49                 	db	73	;'I'
   709  007DDE  6E                 	db	110	;'n'
   710  007DDF  67                 	db	103	;'g'
   711  007DE0  72                 	db	114	;'r'
   712  007DE1  65                 	db	101	;'e'
   713  007DE2  73                 	db	115	;'s'
   714  007DE3  61                 	db	97	;'a'
   715  007DE4  20                 	db	32
   716  007DE5  75                 	db	117	;'u'
   717  007DE6  6E                 	db	110	;'n'
   718  007DE7  61                 	db	97	;'a'
   719  007DE8  20                 	db	32
   720  007DE9  6F                 	db	111	;'o'
   721  007DEA  70                 	db	112	;'p'
   722  007DEB  63                 	db	99	;'c'
   723  007DEC  69                 	db	105	;'i'
   724  007DED  6F                 	db	111	;'o'
   725  007DEE  6E                 	db	110	;'n'
   726  007DEF  20                 	db	32
   727  007DF0  61                 	db	97	;'a'
   728  007DF1  20                 	db	32
   729  007DF2  52                 	db	82	;'R'
   730  007DF3  65                 	db	101	;'e'
   731  007DF4  61                 	db	97	;'a'
   732  007DF5  6C                 	db	108	;'l'
   733  007DF6  69                 	db	105	;'i'
   734  007DF7  7A                 	db	122	;'z'
   735  007DF8  61                 	db	97	;'a'
   736  007DF9  72                 	db	114	;'r'
   737  007DFA  3A                 	db	58	;':'
   738  007DFB  20                 	db	32
   739  007DFC  0D                 	db	13
   740  007DFD  0A                 	db	10
   741  007DFE  00                 	db	0
   742  007DFF                     STR_4:
   743  007DFF  0D                 	db	13
   744  007E00  0A                 	db	10
   745  007E01  20                 	db	32
   746  007E02  48                 	db	72	;'H'
   747  007E03  4F                 	db	79	;'O'
   748  007E04  52                 	db	82	;'R'
   749  007E05  41                 	db	65	;'A'
   750  007E06  20                 	db	32
   751  007E07  45                 	db	69	;'E'
   752  007E08  53                 	db	83	;'S'
   753  007E09  54                 	db	84	;'T'
   754  007E0A  41                 	db	65	;'A'
   755  007E0B  42                 	db	66	;'B'
   756  007E0C  4C                 	db	76	;'L'
   757  007E0D  45                 	db	69	;'E'
   758  007E0E  43                 	db	67	;'C'
   759  007E0F  49                 	db	73	;'I'
   760  007E10  44                 	db	68	;'D'
   761  007E11  41                 	db	65	;'A'
   762  007E12  20                 	db	32
   763  007E13  43                 	db	67	;'C'
   764  007E14  4F                 	db	79	;'O'
   765  007E15  52                 	db	82	;'R'
   766  007E16  52                 	db	82	;'R'
   767  007E17  45                 	db	69	;'E'
   768  007E18  43                 	db	67	;'C'
   769  007E19  54                 	db	84	;'T'
   770  007E1A  41                 	db	65	;'A'
   771  007E1B  4D                 	db	77	;'M'
   772  007E1C  45                 	db	69	;'E'
   773  007E1D  4E                 	db	78	;'N'
   774  007E1E  54                 	db	84	;'T'
   775  007E1F  45                 	db	69	;'E'
   776  007E20  20                 	db	32
   777  007E21  0D                 	db	13
   778  007E22  0A                 	db	10
   779  007E23  00                 	db	0
   780  007E24                     STR_18:
   781  007E24  0D                 	db	13
   782  007E25  0A                 	db	10
   783  007E26  20                 	db	32
   784  007E27  32                 	db	50	;'2'
   785  007E28  2E                 	db	46
   786  007E29  20                 	db	32
   787  007E2A  41                 	db	65	;'A'
   788  007E2B  73                 	db	115	;'s'
   789  007E2C  69                 	db	105	;'i'
   790  007E2D  67                 	db	103	;'g'
   791  007E2E  6E                 	db	110	;'n'
   792  007E2F  61                 	db	97	;'a'
   793  007E30  72                 	db	114	;'r'
   794  007E31  20                 	db	32
   795  007E32  48                 	db	72	;'H'
   796  007E33  6F                 	db	111	;'o'
   797  007E34  72                 	db	114	;'r'
   798  007E35  61                 	db	97	;'a'
   799  007E36  72                 	db	114	;'r'
   800  007E37  69                 	db	105	;'i'
   801  007E38  6F                 	db	111	;'o'
   802  007E39  73                 	db	115	;'s'
   803  007E3A  20                 	db	32
   804  007E3B  70                 	db	112	;'p'
   805  007E3C  61                 	db	97	;'a'
   806  007E3D  72                 	db	114	;'r'
   807  007E3E  61                 	db	97	;'a'
   808  007E3F  20                 	db	32
   809  007E40  72                 	db	114	;'r'
   810  007E41  65                 	db	101	;'e'
   811  007E42  67                 	db	103	;'g'
   812  007E43  61                 	db	97	;'a'
   813  007E44  72                 	db	114	;'r'
   814  007E45  20                 	db	32
   815  007E46  0D                 	db	13
   816  007E47  0A                 	db	10
   817  007E48  00                 	db	0
   818  007E49                     STR_21:
   819  007E49  0D                 	db	13
   820  007E4A  0A                 	db	10
   821  007E4B  20                 	db	32
   822  007E4C  35                 	db	53	;'5'
   823  007E4D  2E                 	db	46
   824  007E4E  20                 	db	32
   825  007E4F  4D                 	db	77	;'M'
   826  007E50  6F                 	db	111	;'o'
   827  007E51  73                 	db	115	;'s'
   828  007E52  74                 	db	116	;'t'
   829  007E53  72                 	db	114	;'r'
   830  007E54  61                 	db	97	;'a'
   831  007E55  72                 	db	114	;'r'
   832  007E56  20                 	db	32
   833  007E57  76                 	db	118	;'v'
   834  007E58  61                 	db	97	;'a'
   835  007E59  6C                 	db	108	;'l'
   836  007E5A  6F                 	db	111	;'o'
   837  007E5B  72                 	db	114	;'r'
   838  007E5C  65                 	db	101	;'e'
   839  007E5D  73                 	db	115	;'s'
   840  007E5E  20                 	db	32
   841  007E5F  73                 	db	115	;'s'
   842  007E60  65                 	db	101	;'e'
   843  007E61  6E                 	db	110	;'n'
   844  007E62  73                 	db	115	;'s'
   845  007E63  6F                 	db	111	;'o'
   846  007E64  72                 	db	114	;'r'
   847  007E65  65                 	db	101	;'e'
   848  007E66  73                 	db	115	;'s'
   849  007E67  20                 	db	32
   850  007E68  0D                 	db	13
   851  007E69  0A                 	db	10
   852  007E6A  00                 	db	0
   853  007E6B                     STR_15:
   854  007E6B  0D                 	db	13
   855  007E6C  0A                 	db	10
   856  007E6D  53                 	db	83	;'S'
   857  007E6E  65                 	db	101	;'e'
   858  007E6F  6E                 	db	110	;'n'
   859  007E70  73                 	db	115	;'s'
   860  007E71  6F                 	db	111	;'o'
   861  007E72  72                 	db	114	;'r'
   862  007E73  65                 	db	101	;'e'
   863  007E74  73                 	db	115	;'s'
   864  007E75  20                 	db	32
   865  007E76  4C                 	db	76	;'L'
   866  007E77  65                 	db	101	;'e'
   867  007E78  69                 	db	105	;'i'
   868  007E79  64                 	db	100	;'d'
   869  007E7A  6F                 	db	111	;'o'
   870  007E7B  73                 	db	115	;'s'
   871  007E7C  20                 	db	32
   872  007E7D  63                 	db	99	;'c'
   873  007E7E  6F                 	db	111	;'o'
   874  007E7F  6E                 	db	110	;'n'
   875  007E80  20                 	db	32
   876  007E81  45                 	db	69	;'E'
   877  007E82  78                 	db	120	;'x'
   878  007E83  69                 	db	105	;'i'
   879  007E84  74                 	db	116	;'t'
   880  007E85  6F                 	db	111	;'o'
   881  007E86  21                 	db	33
   882  007E87  0D                 	db	13
   883  007E88  0A                 	db	10
   884  007E89  0A                 	db	10
   885  007E8A  00                 	db	0
   886  007E8B                     STR_20:
   887  007E8B  0D                 	db	13
   888  007E8C  0A                 	db	10
   889  007E8D  20                 	db	32
   890  007E8E  34                 	db	52	;'4'
   891  007E8F  2E                 	db	46
   892  007E90  20                 	db	32
   893  007E91  44                 	db	68	;'D'
   894  007E92  61                 	db	97	;'a'
   895  007E93  6D                 	db	109	;'m'
   896  007E94  65                 	db	101	;'e'
   897  007E95  20                 	db	32
   898  007E96  64                 	db	100	;'d'
   899  007E97  61                 	db	97	;'a'
   900  007E98  74                 	db	116	;'t'
   901  007E99  6F                 	db	111	;'o'
   902  007E9A  73                 	db	115	;'s'
   903  007E9B  20                 	db	32
   904  007E9C  64                 	db	100	;'d'
   905  007E9D  65                 	db	101	;'e'
   906  007E9E  6C                 	db	108	;'l'
   907  007E9F  20                 	db	32
   908  007EA0  73                 	db	115	;'s'
   909  007EA1  69                 	db	105	;'i'
   910  007EA2  73                 	db	115	;'s'
   911  007EA3  74                 	db	116	;'t'
   912  007EA4  65                 	db	101	;'e'
   913  007EA5  6D                 	db	109	;'m'
   914  007EA6  61                 	db	97	;'a'
   915  007EA7  20                 	db	32
   916  007EA8  0D                 	db	13
   917  007EA9  0A                 	db	10
   918  007EAA  00                 	db	0
   919  007EAB                     STR_29:
   920  007EAB  0D                 	db	13
   921  007EAC  0A                 	db	10
   922  007EAD  0A                 	db	10
   923  007EAE  4C                 	db	76	;'L'
   924  007EAF  61                 	db	97	;'a'
   925  007EB0  20                 	db	32
   926  007EB1  48                 	db	72	;'H'
   927  007EB2  75                 	db	117	;'u'
   928  007EB3  6D                 	db	109	;'m'
   929  007EB4  65                 	db	101	;'e'
   930  007EB5  64                 	db	100	;'d'
   931  007EB6  61                 	db	97	;'a'
   932  007EB7  64                 	db	100	;'d'
   933  007EB8  20                 	db	32
   934  007EB9  41                 	db	65	;'A'
   935  007EBA  6D                 	db	109	;'m'
   936  007EBB  62                 	db	98	;'b'
   937  007EBC  69                 	db	105	;'i'
   938  007EBD  65                 	db	101	;'e'
   939  007EBE  6E                 	db	110	;'n'
   940  007EBF  74                 	db	116	;'t'
   941  007EC0  65                 	db	101	;'e'
   942  007EC1  20                 	db	32
   943  007EC2  65                 	db	101	;'e'
   944  007EC3  73                 	db	115	;'s'
   945  007EC4  3A                 	db	58	;':'
   946  007EC5  20                 	db	32
   947  007EC6  25                 	db	37
   948  007EC7  64                 	db	100	;'d'
   949  007EC8  0D                 	db	13
   950  007EC9  0A                 	db	10
   951  007ECA  00                 	db	0
   952  007ECB                     STR_3:
   953  007ECB  0D                 	db	13
   954  007ECC  0A                 	db	10
   955  007ECD  20                 	db	32
   956  007ECE  45                 	db	69	;'E'
   957  007ECF  6E                 	db	110	;'n'
   958  007ED0  76                 	db	118	;'v'
   959  007ED1  69                 	db	105	;'i'
   960  007ED2  65                 	db	101	;'e'
   961  007ED3  20                 	db	32
   962  007ED4  6C                 	db	108	;'l'
   963  007ED5  6F                 	db	111	;'o'
   964  007ED6  73                 	db	115	;'s'
   965  007ED7  20                 	db	32
   966  007ED8  4D                 	db	77	;'M'
   967  007ED9  69                 	db	105	;'i'
   968  007EDA  6E                 	db	110	;'n'
   969  007EDB  75                 	db	117	;'u'
   970  007EDC  74                 	db	116	;'t'
   971  007EDD  6F                 	db	111	;'o'
   972  007EDE  73                 	db	115	;'s'
   973  007EDF  20                 	db	32
   974  007EE0  45                 	db	69	;'E'
   975  007EE1  6A                 	db	106	;'j'
   976  007EE2  3A                 	db	58	;':'
   977  007EE3  20                 	db	32
   978  007EE4  32                 	db	50	;'2'
   979  007EE5  35                 	db	53	;'5'
   980  007EE6  20                 	db	32
   981  007EE7  0D                 	db	13
   982  007EE8  0A                 	db	10
   983  007EE9  00                 	db	0
   984  007EEA                     STR_30:
   985  007EEA  0D                 	db	13
   986  007EEB  0A                 	db	10
   987  007EEC  0A                 	db	10
   988  007EED  4C                 	db	76	;'L'
   989  007EEE  61                 	db	97	;'a'
   990  007EEF  20                 	db	32
   991  007EF0  54                 	db	84	;'T'
   992  007EF1  65                 	db	101	;'e'
   993  007EF2  6D                 	db	109	;'m'
   994  007EF3  70                 	db	112	;'p'
   995  007EF4  65                 	db	101	;'e'
   996  007EF5  72                 	db	114	;'r'
   997  007EF6  61                 	db	97	;'a'
   998  007EF7  74                 	db	116	;'t'
   999  007EF8  75                 	db	117	;'u'
  1000  007EF9  72                 	db	114	;'r'
  1001  007EFA  61                 	db	97	;'a'
  1002  007EFB  20                 	db	32
  1003  007EFC  65                 	db	101	;'e'
  1004  007EFD  73                 	db	115	;'s'
  1005  007EFE  3A                 	db	58	;':'
  1006  007EFF  20                 	db	32
  1007  007F00  25                 	db	37
  1008  007F01  64                 	db	100	;'d'
  1009  007F02  20                 	db	32
  1010  007F03  43                 	db	67	;'C'
  1011  007F04  0D                 	db	13
  1012  007F05  0A                 	db	10
  1013  007F06  00                 	db	0
  1014  007F07                     STR_17:
  1015  007F07  0D                 	db	13
  1016  007F08  0A                 	db	10
  1017  007F09  20                 	db	32
  1018  007F0A  31                 	db	49	;'1'
  1019  007F0B  2E                 	db	46
  1020  007F0C  20                 	db	32
  1021  007F0D  46                 	db	70	;'F'
  1022  007F0E  69                 	db	105	;'i'
  1023  007F0F  6A                 	db	106	;'j'
  1024  007F10  61                 	db	97	;'a'
  1025  007F11  72                 	db	114	;'r'
  1026  007F12  20                 	db	32
  1027  007F13  48                 	db	72	;'H'
  1028  007F14  6F                 	db	111	;'o'
  1029  007F15  72                 	db	114	;'r'
  1030  007F16  61                 	db	97	;'a'
  1031  007F17  20                 	db	32
  1032  007F18  41                 	db	65	;'A'
  1033  007F19  63                 	db	99	;'c'
  1034  007F1A  74                 	db	116	;'t'
  1035  007F1B  75                 	db	117	;'u'
  1036  007F1C  61                 	db	97	;'a'
  1037  007F1D  6C                 	db	108	;'l'
  1038  007F1E  20                 	db	32
  1039  007F1F  0D                 	db	13
  1040  007F20  0A                 	db	10
  1041  007F21  00                 	db	0
  1042  007F22                     STR_8:
  1043  007F22  0D                 	db	13
  1044  007F23  0A                 	db	10
  1045  007F24  20                 	db	32
  1046  007F25  48                 	db	72	;'H'
  1047  007F26  6F                 	db	111	;'o'
  1048  007F27  72                 	db	114	;'r'
  1049  007F28  61                 	db	97	;'a'
  1050  007F29  72                 	db	114	;'r'
  1051  007F2A  69                 	db	105	;'i'
  1052  007F2B  6F                 	db	111	;'o'
  1053  007F2C  20                 	db	32
  1054  007F2D  4D                 	db	77	;'M'
  1055  007F2E  6F                 	db	111	;'o'
  1056  007F2F  64                 	db	100	;'d'
  1057  007F30  69                 	db	105	;'i'
  1058  007F31  66                 	db	102	;'f'
  1059  007F32  69                 	db	105	;'i'
  1060  007F33  63                 	db	99	;'c'
  1061  007F34  61                 	db	97	;'a'
  1062  007F35  64                 	db	100	;'d'
  1063  007F36  6F                 	db	111	;'o'
  1064  007F37  21                 	db	33
  1065  007F38  20                 	db	32
  1066  007F39  0D                 	db	13
  1067  007F3A  0A                 	db	10
  1068  007F3B  00                 	db	0
  1069  007F3C                     STR_5:
  1070  007F3C  0D                 	db	13
  1071  007F3D  0A                 	db	10
  1072  007F3E  20                 	db	32
  1073  007F3F  4F                 	db	79	;'O'
  1074  007F40  50                 	db	80	;'P'
  1075  007F41  43                 	db	67	;'C'
  1076  007F42  49                 	db	73	;'I'
  1077  007F43  4F                 	db	79	;'O'
  1078  007F44  4E                 	db	78	;'N'
  1079  007F45  45                 	db	69	;'E'
  1080  007F46  53                 	db	83	;'S'
  1081  007F47  20                 	db	32
  1082  007F48  44                 	db	68	;'D'
  1083  007F49  45                 	db	69	;'E'
  1084  007F4A  20                 	db	32
  1085  007F4B  52                 	db	82	;'R'
  1086  007F4C  45                 	db	69	;'E'
  1087  007F4D  47                 	db	71	;'G'
  1088  007F4E  41                 	db	65	;'A'
  1089  007F4F  44                 	db	68	;'D'
  1090  007F50  4F                 	db	79	;'O'
  1091  007F51  20                 	db	32
  1092  007F52  0D                 	db	13
  1093  007F53  0A                 	db	10
  1094  007F54  00                 	db	0
  1095  007F55                     STR_27:
  1096  007F55  45                 	db	69	;'E'
  1097  007F56  72                 	db	114	;'r'
  1098  007F57  72                 	db	114	;'r'
  1099  007F58  6F                 	db	111	;'o'
  1100  007F59  72                 	db	114	;'r'
  1101  007F5A  20                 	db	32
  1102  007F5B  64                 	db	100	;'d'
  1103  007F5C  65                 	db	101	;'e'
  1104  007F5D  20                 	db	32
  1105  007F5E  6C                 	db	108	;'l'
  1106  007F5F  65                 	db	101	;'e'
  1107  007F60  63                 	db	99	;'c'
  1108  007F61  74                 	db	116	;'t'
  1109  007F62  75                 	db	117	;'u'
  1110  007F63  72                 	db	114	;'r'
  1111  007F64  61                 	db	97	;'a'
  1112  007F65  20                 	db	32
  1113  007F66  44                 	db	68	;'D'
  1114  007F67  48                 	db	72	;'H'
  1115  007F68  54                 	db	84	;'T'
  1116  007F69  31                 	db	49	;'1'
  1117  007F6A  31                 	db	49	;'1'
  1118  007F6B  0D                 	db	13
  1119  007F6C  0A                 	db	10
  1120  007F6D  00                 	db	0
  1121  007F6E                     STR_9:
  1122  007F6E  0D                 	db	13
  1123  007F6F  0A                 	db	10
  1124  007F70  20                 	db	32
  1125  007F71  54                 	db	84	;'T'
  1126  007F72  49                 	db	73	;'I'
  1127  007F73  45                 	db	69	;'E'
  1128  007F74  4D                 	db	77	;'M'
  1129  007F75  50                 	db	80	;'P'
  1130  007F76  4F                 	db	79	;'O'
  1131  007F77  20                 	db	32
  1132  007F78  44                 	db	68	;'D'
  1133  007F79  45                 	db	69	;'E'
  1134  007F7A  20                 	db	32
  1135  007F7B  52                 	db	82	;'R'
  1136  007F7C  45                 	db	69	;'E'
  1137  007F7D  47                 	db	71	;'G'
  1138  007F7E  41                 	db	65	;'A'
  1139  007F7F  44                 	db	68	;'D'
  1140  007F80  4F                 	db	79	;'O'
  1141  007F81  20                 	db	32
  1142  007F82  0D                 	db	13
  1143  007F83  0A                 	db	10
  1144  007F84  00                 	db	0
  1145  007F85                     STR_28:
  1146  007F85  44                 	db	68	;'D'
  1147  007F86  48                 	db	72	;'H'
  1148  007F87  54                 	db	84	;'T'
  1149  007F88  31                 	db	49	;'1'
  1150  007F89  31                 	db	49	;'1'
  1151  007F8A  20                 	db	32
  1152  007F8B  4E                 	db	78	;'N'
  1153  007F8C  4F                 	db	79	;'O'
  1154  007F8D  20                 	db	32
  1155  007F8E  52                 	db	82	;'R'
  1156  007F8F  45                 	db	69	;'E'
  1157  007F90  53                 	db	83	;'S'
  1158  007F91  50                 	db	80	;'P'
  1159  007F92  4F                 	db	79	;'O'
  1160  007F93  4E                 	db	78	;'N'
  1161  007F94  44                 	db	68	;'D'
  1162  007F95  49                 	db	73	;'I'
  1163  007F96  4F                 	db	79	;'O'
  1164  007F97  0D                 	db	13
  1165  007F98  0A                 	db	10
  1166  007F99  00                 	db	0
  1167  007F9A                     STR_38:
  1168  007F9A  0A                 	db	10
  1169  007F9B  46                 	db	70	;'F'
  1170  007F9C  41                 	db	65	;'A'
  1171  007F9D  4C                 	db	76	;'L'
  1172  007F9E  4C                 	db	76	;'L'
  1173  007F9F  4F                 	db	79	;'O'
  1174  007FA0  20                 	db	32
  1175  007FA1  45                 	db	69	;'E'
  1176  007FA2  4C                 	db	76	;'L'
  1177  007FA3  20                 	db	32
  1178  007FA4  53                 	db	83	;'S'
  1179  007FA5  45                 	db	69	;'E'
  1180  007FA6  54                 	db	84	;'T'
  1181  007FA7  45                 	db	69	;'E'
  1182  007FA8  4F                 	db	79	;'O'
  1183  007FA9  0D                 	db	13
  1184  007FAA  0A                 	db	10
  1185  007FAB  00                 	db	0
  1186  007FAC  41                 	db	65	;'A'
  1187  007FAD  54                 	db	84	;'T'
  1188  007FAE  2B                 	db	43
  1189  007FAF  4E                 	db	78	;'N'
  1190  007FB0  41                 	db	65	;'A'
  1191  007FB1  4D                 	db	77	;'M'
  1192  007FB2  45                 	db	69	;'E'
  1193  007FB3  53                 	db	83	;'S'
  1194  007FB4  4D                 	db	77	;'M'
  1195  007FB5  41                 	db	65	;'A'
  1196  007FB6  52                 	db	82	;'R'
  1197  007FB7  54                 	db	84	;'T'
  1198  007FB8  48                 	db	72	;'H'
  1199  007FB9  4F                 	db	79	;'O'
  1200  007FBA  4D                 	db	77	;'M'
  1201  007FBB  45                 	db	69	;'E'
  1202  007FBC  00                 	db	0
  1203  007FBD                     STR_1:
  1204  007FBD  0D                 	db	13
  1205  007FBE  0A                 	db	10
  1206  007FBF  20                 	db	32
  1207  007FC0  46                 	db	70	;'F'
  1208  007FC1  49                 	db	73	;'I'
  1209  007FC2  4A                 	db	74	;'J'
  1210  007FC3  41                 	db	65	;'A'
  1211  007FC4  20                 	db	32
  1212  007FC5  48                 	db	72	;'H'
  1213  007FC6  4F                 	db	79	;'O'
  1214  007FC7  52                 	db	82	;'R'
  1215  007FC8  41                 	db	65	;'A'
  1216  007FC9  20                 	db	32
  1217  007FCA  0D                 	db	13
  1218  007FCB  0A                 	db	10
  1219  007FCC  00                 	db	0
  1220  007FCD                     STR_26:
  1221  007FCD  25                 	db	37
  1222  007FCE  64                 	db	100	;'d'
  1223  007FCF  20                 	db	32
  1224  007FD0  7C                 	db	124
  1225  007FD1  20                 	db	32
  1226  007FD2  25                 	db	37
  1227  007FD3  64                 	db	100	;'d'
  1228  007FD4  20                 	db	32
  1229  007FD5  7C                 	db	124
  1230  007FD6  20                 	db	32
  1231  007FD7  25                 	db	37
  1232  007FD8  64                 	db	100	;'d'
  1233  007FD9  20                 	db	32
  1234  007FDA  0D                 	db	13
  1235  007FDB  0A                 	db	10
  1236  007FDC  00                 	db	0
  1237  007FDD                     STR_22:
  1238  007FDD  0D                 	db	13
  1239  007FDE  0A                 	db	10
  1240  007FDF  20                 	db	32
  1241  007FE0  4F                 	db	79	;'O'
  1242  007FE1  70                 	db	112	;'p'
  1243  007FE2  63                 	db	99	;'c'
  1244  007FE3  69                 	db	105	;'i'
  1245  007FE4  6F                 	db	111	;'o'
  1246  007FE5  6E                 	db	110	;'n'
  1247  007FE6  3A                 	db	58	;':'
  1248  007FE7  20                 	db	32
  1249  007FE8  20                 	db	32
  1250  007FE9  0D                 	db	13
  1251  007FEA  00                 	db	0
  1252  007FEB  41                 	db	65	;'A'
  1253  007FEC  54                 	db	84	;'T'
  1254  007FED  2B                 	db	43
  1255  007FEE  50                 	db	80	;'P'
  1256  007FEF  49                 	db	73	;'I'
  1257  007FF0  4E                 	db	78	;'N'
  1258  007FF1  32                 	db	50	;'2'
  1259  007FF2  35                 	db	53	;'5'
  1260  007FF3  30                 	db	48	;'0'
  1261  007FF4  31                 	db	49	;'1'
  1262  007FF5  00                 	db	0
  1263  007FF6  41                 	db	65	;'A'
  1264  007FF7  54                 	db	84	;'T'
  1265  007FF8  2B                 	db	43
  1266  007FF9  42                 	db	66	;'B'
  1267  007FFA  41                 	db	65	;'A'
  1268  007FFB  55                 	db	85	;'U'
  1269  007FFC  44                 	db	68	;'D'
  1270  007FFD  34                 	db	52	;'4'
  1271  007FFE  00                 	db	0
  1272  0000                     
  1273                           ; #config settings
  1274  007FFF  00                 	db	0	; dummy byte at the end
  1275  0000                     
  1276                           	psect	cinit
  1277  001EFE                     __pcinit:
  1278                           	opt callstack 0
  1279  001EFE                     start_initialization:
  1280                           	opt callstack 0
  1281  001EFE                     __initialization:
  1282                           	opt callstack 0
  1283                           
  1284                           ; Initialize objects allocated to BANK0 (4 bytes)
  1285                           ; load TBLPTR registers with __pidataBANK0
  1286  001EFE  0E16               	movlw	low __pidataBANK0
  1287  001F00  6EF6               	movwf	tblptrl,c
  1288  001F02  0E23               	movlw	high __pidataBANK0
  1289  001F04  6EF7               	movwf	tblptrh,c
  1290  001F06  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1291  001F08  6EF8               	movwf	tblptru,c
  1292  001F0A  EE00  F0F8         	lfsr	0,__pdataBANK0
  1293  001F0E  EE10 F004          	lfsr	1,4
  1294  001F12                     copy_data0:
  1295  001F12  0009               	tblrd		*+
  1296  001F14  CFF5 FFEE          	movff	tablat,postinc0
  1297  001F18  50E5               	movf	postdec1,w,c
  1298  001F1A  50E1               	movf	fsr1l,w,c
  1299  001F1C  E1FA               	bnz	copy_data0
  1300                           
  1301                           ; Clear objects allocated to BANK1 (120 bytes)
  1302  001F1E  EE01  F000         	lfsr	0,__pbssBANK1
  1303  001F22  0E78               	movlw	120
  1304  001F24                     clear_0:
  1305  001F24  6AEE               	clrf	postinc0,c
  1306  001F26  06E8               	decf	wreg,f,c
  1307  001F28  E1FD               	bnz	clear_0
  1308                           
  1309                           ; Clear objects allocated to BANK0 (24 bytes)
  1310  001F2A  EE00  F0E0         	lfsr	0,__pbssBANK0
  1311  001F2E  0E18               	movlw	24
  1312  001F30                     clear_1:
  1313  001F30  6AEE               	clrf	postinc0,c
  1314  001F32  06E8               	decf	wreg,f,c
  1315  001F34  E1FD               	bnz	clear_1
  1316  001F36                     end_of_initialization:
  1317                           	opt callstack 0
  1318  001F36                     __end_of__initialization:
  1319                           	opt callstack 0
  1320  001F36  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1321  001F38  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1322  001F3A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1323  001F3C  6EF8               	movwf	tblptru,c
  1324  001F3E  0100               	movlb	0
  1325  001F40  EF2A  F00C         	goto	_main	;jump to C main() function
  1326                           
  1327                           	psect	bssBANK0
  1328  0000E0                     __pbssBANK0:
  1329                           	opt callstack 0
  1330  0000E0                     _nout:
  1331                           	opt callstack 0
  1332  0000E0                     	ds	2
  1333  0000E2                     _width:
  1334                           	opt callstack 0
  1335  0000E2                     	ds	2
  1336  0000E4                     _prec:
  1337                           	opt callstack 0
  1338  0000E4                     	ds	2
  1339  0000E6                     _flags:
  1340                           	opt callstack 0
  1341  0000E6                     	ds	2
  1342  0000E8                     _contInterrupciones:
  1343                           	opt callstack 0
  1344  0000E8                     	ds	2
  1345  0000EA                     _peticionLecturaSensores:
  1346                           	opt callstack 0
  1347  0000EA                     	ds	1
  1348  0000EB                     _regando:
  1349                           	opt callstack 0
  1350  0000EB                     	ds	1
  1351  0000EC                     _minutosTranscurridos:
  1352                           	opt callstack 0
  1353  0000EC                     	ds	1
  1354  0000ED                     _minutosRegar:
  1355                           	opt callstack 0
  1356  0000ED                     	ds	1
  1357  0000EE                     _overflowTimer:
  1358                           	opt callstack 0
  1359  0000EE                     	ds	1
  1360  0000EF                     _datoRecibido:
  1361                           	opt callstack 0
  1362  0000EF                     	ds	1
  1363  0000F0                     _segundos:
  1364                           	opt callstack 0
  1365  0000F0                     	ds	1
  1366  0000F1                     _minutos:
  1367                           	opt callstack 0
  1368  0000F1                     	ds	1
  1369  0000F2                     _hora:
  1370                           	opt callstack 0
  1371  0000F2                     	ds	1
  1372  0000F3                     _MODO_COMUNICACION:
  1373                           	opt callstack 0
  1374  0000F3                     	ds	1
  1375  0000F4                     _esperandoDatos:
  1376                           	opt callstack 0
  1377  0000F4                     	ds	1
  1378  0000F5                     _esperaDatoConcluida:
  1379                           	opt callstack 0
  1380  0000F5                     	ds	1
  1381  0000F6                     _byteUart:
  1382                           	opt callstack 0
  1383  0000F6                     	ds	1
  1384  0000F7                     _tiempoInactividadTrans:
  1385                           	opt callstack 0
  1386  0000F7                     	ds	1
  1387                           
  1388                           	psect	dataBANK0
  1389  0000F8                     __pdataBANK0:
  1390                           	opt callstack 0
  1391  0000F8                     _VALOR_TIMER0:
  1392                           	opt callstack 0
  1393  0000F8                     	ds	2
  1394  0000FA                     _VALOR_TIMER0UART:
  1395                           	opt callstack 0
  1396  0000FA                     	ds	2
  1397                           
  1398                           	psect	bssBANK1
  1399  000100                     __pbssBANK1:
  1400                           	opt callstack 0
  1401  000100                     _horarios:
  1402                           	opt callstack 0
  1403  000100                     	ds	72
  1404  000148                     _sensores:
  1405                           	opt callstack 0
  1406  000148                     	ds	16
  1407  000158                     _dbuf:
  1408                           	opt callstack 0
  1409  000158                     	ds	32
  1410                           
  1411                           	psect	cstackBANK0
  1412  000060                     __pcstackBANK0:
  1413                           	opt callstack 0
  1414  000060                     ?_sprintf:
  1415                           	opt callstack 0
  1416  000060                     sprintf@s:
  1417                           	opt callstack 0
  1418                           
  1419                           ; 2 bytes @ 0x0
  1420  000060                     	ds	2
  1421  000062                     sprintf@fmt:
  1422                           	opt callstack 0
  1423                           
  1424                           ; 2 bytes @ 0x2
  1425  000062                     	ds	10
  1426  00006C                     sprintf@ap:
  1427                           	opt callstack 0
  1428                           
  1429                           ; 2 bytes @ 0xC
  1430  00006C                     	ds	2
  1431  00006E                     sprintf@f:
  1432                           	opt callstack 0
  1433                           
  1434                           ; 6 bytes @ 0xE
  1435  00006E                     	ds	6
  1436  000074                     lecturaWifi@buffer:
  1437                           	opt callstack 0
  1438  000074                     dameDatosSistema@buffer:
  1439                           	opt callstack 0
  1440  000074                     mostrarDatosSensores@buffer:
  1441                           	opt callstack 0
  1442                           
  1443                           ; 50 bytes @ 0x14
  1444  000074                     	ds	50
  1445  0000A6                     lecturaWifi@Rx:
  1446                           	opt callstack 0
  1447  0000A6                     mostrarDatosSensores@temperatura:
  1448                           	opt callstack 0
  1449  0000A6                     dameDatosSistema@i:
  1450                           	opt callstack 0
  1451                           
  1452                           ; 2 bytes @ 0x46
  1453  0000A6                     	ds	1
  1454  0000A7                     lecturaWifi@humedadMedida:
  1455                           	opt callstack 0
  1456  0000A7                     mostrarDatosSensores@humedad:
  1457                           	opt callstack 0
  1458                           
  1459                           ; 1 bytes @ 0x47
  1460  0000A7                     	ds	1
  1461  0000A8                     lecturaWifi@i:
  1462                           	opt callstack 0
  1463  0000A8                     mostrarDatosSensores@i:
  1464                           	opt callstack 0
  1465                           
  1466                           ; 2 bytes @ 0x48
  1467  0000A8                     	ds	2
  1468  0000AA                     mostrarDatosSensoresWIFI@buffer:
  1469                           	opt callstack 0
  1470                           
  1471                           ; 50 bytes @ 0x4A
  1472  0000AA                     	ds	50
  1473  0000DC                     mostrarDatosSensoresWIFI@temperatura:
  1474                           	opt callstack 0
  1475                           
  1476                           ; 1 bytes @ 0x7C
  1477  0000DC                     	ds	1
  1478  0000DD                     mostrarDatosSensoresWIFI@humedad:
  1479                           	opt callstack 0
  1480                           
  1481                           ; 1 bytes @ 0x7D
  1482  0000DD                     	ds	1
  1483  0000DE                     mostrarDatosSensoresWIFI@i:
  1484                           	opt callstack 0
  1485                           
  1486                           ; 2 bytes @ 0x7E
  1487  0000DE                     	ds	2
  1488                           
  1489                           	psect	cstackCOMRAM
  1490  000001                     __pcstackCOMRAM:
  1491                           	opt callstack 0
  1492  000001                     ??_i2c_espera:
  1493  000001                     ??_convertirDato:
  1494  000001                     ??_DHT11_Start:
  1495  000001                     ?_strlen:
  1496                           	opt callstack 0
  1497  000001                     ?_horaRegar:
  1498                           	opt callstack 0
  1499  000001                     ?_dameHumedadSuelo:
  1500                           	opt callstack 0
  1501  000001                     ?___wmul:
  1502                           	opt callstack 0
  1503  000001                     ?___lmul:
  1504                           	opt callstack 0
  1505  000001                     ?___aodiv:
  1506                           	opt callstack 0
  1507  000001                     ?___aomod:
  1508                           	opt callstack 0
  1509  000001                     UART_write@dato:
  1510                           	opt callstack 0
  1511  000001                     DHT11_ReadData@i:
  1512                           	opt callstack 0
  1513  000001                     check_response@respuesta:
  1514                           	opt callstack 0
  1515  000001                     constructorSensor@s:
  1516                           	opt callstack 0
  1517  000001                     ___wmul@multiplier:
  1518                           	opt callstack 0
  1519  000001                     fputc@c:
  1520                           	opt callstack 0
  1521  000001                     strlen@s:
  1522                           	opt callstack 0
  1523  000001                     ___lmul@multiplier:
  1524                           	opt callstack 0
  1525  000001                     ___aodiv@dividend:
  1526                           	opt callstack 0
  1527  000001                     ___aomod@dividend:
  1528                           	opt callstack 0
  1529                           
  1530                           ; 8 bytes @ 0x0
  1531  000001                     	ds	1
  1532  000002                     i2c_envia_dato@dato:
  1533                           	opt callstack 0
  1534  000002                     i2c_recibe_dato@datoleido:
  1535                           	opt callstack 0
  1536  000002                     convertirDato@dato:
  1537                           	opt callstack 0
  1538  000002                     DHT11_ReadData@data:
  1539                           	opt callstack 0
  1540  000002                     UART_printf@cadena:
  1541                           	opt callstack 0
  1542                           
  1543                           ; 2 bytes @ 0x1
  1544  000002                     	ds	1
  1545  000003                     ??_dameHumedadSuelo:
  1546  000003                     escribe_rtc@dato:
  1547                           	opt callstack 0
  1548  000003                     leer_rtc@direccion:
  1549                           	opt callstack 0
  1550  000003                     convertirDato@datoR:
  1551                           	opt callstack 0
  1552  000003                     constructorSensor@porcientoHumedad:
  1553                           	opt callstack 0
  1554  000003                     leer_eeprom@direccion:
  1555                           	opt callstack 0
  1556  000003                     ___wmul@multiplicand:
  1557                           	opt callstack 0
  1558  000003                     fputc@fp:
  1559                           	opt callstack 0
  1560  000003                     strlen@a:
  1561                           	opt callstack 0
  1562                           
  1563                           ; 2 bytes @ 0x2
  1564  000003                     	ds	1
  1565  000004                     escribe_rtc@direccion:
  1566                           	opt callstack 0
  1567  000004                     leer_rtc@dato:
  1568                           	opt callstack 0
  1569  000004                     constructorSensor@pin:
  1570                           	opt callstack 0
  1571  000004                     dameTemperaturaHumedad@Humedad:
  1572                           	opt callstack 0
  1573  000004                     getValue@numCharacters:
  1574                           	opt callstack 0
  1575                           
  1576                           ; 2 bytes @ 0x3
  1577  000004                     	ds	1
  1578  000005                     ??_fputc:
  1579  000005                     ??_leer_eeprom:
  1580  000005                     dameHumedadSuelo@canalLeer:
  1581                           	opt callstack 0
  1582  000005                     restablecerDatosSensor@i:
  1583                           	opt callstack 0
  1584  000005                     ___wmul@product:
  1585                           	opt callstack 0
  1586  000005                     ___lmul@multiplicand:
  1587                           	opt callstack 0
  1588                           
  1589                           ; 4 bytes @ 0x4
  1590  000005                     	ds	1
  1591  000006                     ??_getValue:
  1592  000006                     leer_eeprom@dato:
  1593                           	opt callstack 0
  1594  000006                     dameTemperaturaHumedad@Temperatura:
  1595                           	opt callstack 0
  1596                           
  1597                           ; 2 bytes @ 0x5
  1598  000006                     	ds	1
  1599  000007                     inicializarObjetos@i:
  1600                           	opt callstack 0
  1601  000007                     escribe_eeprom@direccion:
  1602                           	opt callstack 0
  1603  000007                     leeHorariosMemoria@contMemoria:
  1604                           	opt callstack 0
  1605                           
  1606                           ; 2 bytes @ 0x6
  1607  000007                     	ds	1
  1608  000008                     ??_dameTemperaturaHumedad:
  1609  000008                     getValue@datoIncorrecto:
  1610                           	opt callstack 0
  1611                           
  1612                           ; 1 bytes @ 0x7
  1613  000008                     	ds	1
  1614  000009                     escribe_eeprom@dato:
  1615                           	opt callstack 0
  1616  000009                     leeHorariosMemoria@i:
  1617                           	opt callstack 0
  1618  000009                     getValue@i:
  1619                           	opt callstack 0
  1620  000009                     ___lmul@product:
  1621                           	opt callstack 0
  1622  000009                     ___aodiv@divisor:
  1623                           	opt callstack 0
  1624  000009                     ___aomod@divisor:
  1625                           	opt callstack 0
  1626                           
  1627                           ; 8 bytes @ 0x8
  1628  000009                     	ds	1
  1629  00000A                     ??_escribe_eeprom:
  1630  00000A                     dameTemperaturaHumedad@checkSum:
  1631                           	opt callstack 0
  1632  00000A                     fputs@s:
  1633                           	opt callstack 0
  1634                           
  1635                           ; 2 bytes @ 0x9
  1636  00000A                     	ds	1
  1637  00000B                     escribeHorariosMemoria@contMemoria:
  1638                           	opt callstack 0
  1639  00000B                     getValue@i_951:
  1640                           	opt callstack 0
  1641                           
  1642                           ; 2 bytes @ 0xA
  1643  00000B                     	ds	1
  1644  00000C                     dameTemperaturaHumedad@humedadDecimal:
  1645                           	opt callstack 0
  1646  00000C                     fputs@fp:
  1647                           	opt callstack 0
  1648                           
  1649                           ; 2 bytes @ 0xB
  1650  00000C                     	ds	1
  1651  00000D                     ?___aldiv:
  1652                           	opt callstack 0
  1653  00000D                     dameTemperaturaHumedad@temperaturaDecimal:
  1654                           	opt callstack 0
  1655  00000D                     getValue@dato:
  1656                           	opt callstack 0
  1657  00000D                     escribeHorariosMemoria@i:
  1658                           	opt callstack 0
  1659  00000D                     ___aldiv@dividend:
  1660                           	opt callstack 0
  1661                           
  1662                           ; 4 bytes @ 0xC
  1663  00000D                     	ds	1
  1664  00000E                     dameTemperaturaHumedad@humedad:
  1665                           	opt callstack 0
  1666  00000E                     getValue@Rx:
  1667                           	opt callstack 0
  1668  00000E                     fputs@c:
  1669                           	opt callstack 0
  1670                           
  1671                           ; 1 bytes @ 0xD
  1672  00000E                     	ds	1
  1673  00000F                     setRtc@direccion:
  1674                           	opt callstack 0
  1675  00000F                     asignarHorarios@hora:
  1676                           	opt callstack 0
  1677  00000F                     setTiempoRegar@tiempoRegar:
  1678                           	opt callstack 0
  1679  00000F                     dameTemperaturaHumedad@temperatura:
  1680                           	opt callstack 0
  1681  00000F                     fputs@i:
  1682                           	opt callstack 0
  1683                           
  1684                           ; 2 bytes @ 0xE
  1685  00000F                     	ds	1
  1686  000010                     ?_estaSeco:
  1687                           	opt callstack 0
  1688  000010                     setRtc@seteado:
  1689                           	opt callstack 0
  1690  000010                     asignarHorarios@Rx:
  1691                           	opt callstack 0
  1692  000010                     setTiempoRegar@hora:
  1693                           	opt callstack 0
  1694  000010                     estaSeco@s:
  1695                           	opt callstack 0
  1696                           
  1697                           ; 2 bytes @ 0xF
  1698  000010                     	ds	1
  1699  000011                     ?_pad:
  1700                           	opt callstack 0
  1701  000011                     setRtc@dato:
  1702                           	opt callstack 0
  1703  000011                     ___aodiv@counter:
  1704                           	opt callstack 0
  1705  000011                     ___aomod@counter:
  1706                           	opt callstack 0
  1707  000011                     pad@fp:
  1708                           	opt callstack 0
  1709  000011                     ___aldiv@divisor:
  1710                           	opt callstack 0
  1711                           
  1712                           ; 4 bytes @ 0x10
  1713  000011                     	ds	1
  1714  000012                     _estaSeco$782:
  1715                           	opt callstack 0
  1716  000012                     ___aodiv@sign:
  1717                           	opt callstack 0
  1718  000012                     ___aomod@sign:
  1719                           	opt callstack 0
  1720                           
  1721                           ; 1 bytes @ 0x11
  1722  000012                     	ds	1
  1723  000013                     ?_abs:
  1724                           	opt callstack 0
  1725  000013                     estaSeco@temperatura:
  1726                           	opt callstack 0
  1727  000013                     pad@buf:
  1728                           	opt callstack 0
  1729  000013                     abs@a:
  1730                           	opt callstack 0
  1731  000013                     ___aodiv@quotient:
  1732                           	opt callstack 0
  1733                           
  1734                           ; 8 bytes @ 0x12
  1735  000013                     	ds	1
  1736  000014                     ??_encenderBombas:
  1737                           
  1738                           ; 1 bytes @ 0x13
  1739  000014                     	ds	1
  1740  000015                     ??_abs:
  1741  000015                     ___aldiv@counter:
  1742                           	opt callstack 0
  1743  000015                     pad@p:
  1744                           	opt callstack 0
  1745                           
  1746                           ; 2 bytes @ 0x14
  1747  000015                     	ds	1
  1748  000016                     encenderBombas@flagSeco:
  1749                           	opt callstack 0
  1750  000016                     ___aldiv@sign:
  1751                           	opt callstack 0
  1752                           
  1753                           ; 1 bytes @ 0x15
  1754  000016                     	ds	1
  1755  000017                     ??_pad:
  1756  000017                     encenderBombas@i:
  1757                           	opt callstack 0
  1758  000017                     ___aldiv@quotient:
  1759                           	opt callstack 0
  1760                           
  1761                           ; 4 bytes @ 0x16
  1762  000017                     	ds	1
  1763  000018                     pad@i:
  1764                           	opt callstack 0
  1765                           
  1766                           ; 2 bytes @ 0x17
  1767  000018                     	ds	2
  1768  00001A                     pad@w:
  1769                           	opt callstack 0
  1770                           
  1771                           ; 2 bytes @ 0x19
  1772  00001A                     	ds	1
  1773  00001B                     ?_map:
  1774                           	opt callstack 0
  1775  00001B                     UART_init@BAUD:
  1776                           	opt callstack 0
  1777  00001B                     map@x:
  1778                           	opt callstack 0
  1779                           
  1780                           ; 4 bytes @ 0x1A
  1781  00001B                     	ds	1
  1782  00001C                     ?_ctoa:
  1783                           	opt callstack 0
  1784  00001C                     ?_dtoa:
  1785                           	opt callstack 0
  1786  00001C                     ctoa@fp:
  1787                           	opt callstack 0
  1788  00001C                     dtoa@fp:
  1789                           	opt callstack 0
  1790                           
  1791                           ; 2 bytes @ 0x1B
  1792  00001C                     	ds	2
  1793  00001E                     ctoa@c:
  1794                           	opt callstack 0
  1795  00001E                     dtoa@d:
  1796                           	opt callstack 0
  1797                           
  1798                           ; 8 bytes @ 0x1D
  1799  00001E                     	ds	1
  1800  00001F                     ctoa@w:
  1801                           	opt callstack 0
  1802  00001F                     map@in_min:
  1803                           	opt callstack 0
  1804                           
  1805                           ; 4 bytes @ 0x1E
  1806  00001F                     	ds	4
  1807  000023                     map@in_max:
  1808                           	opt callstack 0
  1809  000023                     _UART_init$1806:
  1810                           	opt callstack 0
  1811                           
  1812                           ; 4 bytes @ 0x22
  1813  000023                     	ds	3
  1814  000026                     ??_dtoa:
  1815                           
  1816                           ; 1 bytes @ 0x25
  1817  000026                     	ds	1
  1818  000027                     map@out_min:
  1819                           	opt callstack 0
  1820                           
  1821                           ; 4 bytes @ 0x26
  1822  000027                     	ds	4
  1823  00002B                     map@out_max:
  1824                           	opt callstack 0
  1825                           
  1826                           ; 4 bytes @ 0x2A
  1827  00002B                     	ds	3
  1828  00002E                     _dtoa$1026:
  1829                           	opt callstack 0
  1830                           
  1831                           ; 2 bytes @ 0x2D
  1832  00002E                     	ds	1
  1833  00002F                     ??_lecturaAnalogaSensores:
  1834                           
  1835                           ; 1 bytes @ 0x2E
  1836  00002F                     	ds	1
  1837  000030                     lecturaAnalogaSensores@i:
  1838                           	opt callstack 0
  1839  000030                     dtoa@p:
  1840                           	opt callstack 0
  1841                           
  1842                           ; 2 bytes @ 0x2F
  1843  000030                     	ds	2
  1844  000032                     dtoa@w:
  1845                           	opt callstack 0
  1846                           
  1847                           ; 2 bytes @ 0x31
  1848  000032                     	ds	2
  1849  000034                     dtoa@s:
  1850                           	opt callstack 0
  1851                           
  1852                           ; 2 bytes @ 0x33
  1853  000034                     	ds	2
  1854  000036                     dtoa@n:
  1855                           	opt callstack 0
  1856                           
  1857                           ; 8 bytes @ 0x35
  1858  000036                     	ds	8
  1859  00003E                     dtoa@i:
  1860                           	opt callstack 0
  1861                           
  1862                           ; 2 bytes @ 0x3D
  1863  00003E                     	ds	2
  1864  000040                     ?_vfpfcnvrt:
  1865                           	opt callstack 0
  1866  000040                     vfpfcnvrt@fp:
  1867                           	opt callstack 0
  1868                           
  1869                           ; 2 bytes @ 0x3F
  1870  000040                     	ds	2
  1871  000042                     vfpfcnvrt@fmt:
  1872                           	opt callstack 0
  1873                           
  1874                           ; 2 bytes @ 0x41
  1875  000042                     	ds	2
  1876  000044                     vfpfcnvrt@ap:
  1877                           	opt callstack 0
  1878                           
  1879                           ; 2 bytes @ 0x43
  1880  000044                     	ds	2
  1881  000046                     ??_vfpfcnvrt:
  1882                           
  1883                           ; 1 bytes @ 0x45
  1884  000046                     	ds	2
  1885  000048                     vfpfcnvrt@ll:
  1886                           	opt callstack 0
  1887                           
  1888                           ; 8 bytes @ 0x47
  1889  000048                     	ds	8
  1890  000050                     vfpfcnvrt@c:
  1891                           	opt callstack 0
  1892                           
  1893                           ; 1 bytes @ 0x4F
  1894  000050                     	ds	1
  1895  000051                     ?_vfprintf:
  1896                           	opt callstack 0
  1897  000051                     vfprintf@fp:
  1898                           	opt callstack 0
  1899                           
  1900                           ; 2 bytes @ 0x50
  1901  000051                     	ds	2
  1902  000053                     vfprintf@fmt:
  1903                           	opt callstack 0
  1904                           
  1905                           ; 2 bytes @ 0x52
  1906  000053                     	ds	2
  1907  000055                     vfprintf@ap:
  1908                           	opt callstack 0
  1909                           
  1910                           ; 2 bytes @ 0x54
  1911  000055                     	ds	2
  1912  000057                     vfprintf@cfmt:
  1913                           	opt callstack 0
  1914                           
  1915                           ; 2 bytes @ 0x56
  1916  000057                     	ds	2
  1917  000059                     ??_dameDatosSistema:
  1918  000059                     ??_mostrarDatosSensoresWIFI:
  1919  000059                     ??_mostrarDatosSensores:
  1920  000059                     
  1921                           ; 1 bytes @ 0x58
  1922  000059                     	ds	3
  1923  00005C                     ??_sistemaPrincipal:
  1924                           
  1925                           ; 1 bytes @ 0x5B
  1926  00005C                     	ds	2
  1927  00005E                     sistemaPrincipal@opcion:
  1928                           	opt callstack 0
  1929                           
  1930                           ; 1 bytes @ 0x5D
  1931  00005E                     	ds	1
  1932  00005F                     
  1933                           ; 1 bytes @ 0x5E
  1934 ;;
  1935 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1936 ;;
  1937 ;; *************** function _main *****************
  1938 ;; Defined at:
  1939 ;;		line 803 in file "main.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;		None
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;		None
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      void 
  1946 ;; Registers used:
  1947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1953 ;;      Params:         0       0       0       0       0       0       0       0       0
  1954 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1955 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1956 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1957 ;;Total ram usage:        0 bytes
  1958 ;; Hardware stack levels required when called:   12
  1959 ;; This function calls:
  1960 ;;		_UART_init
  1961 ;;		_configurarAdc
  1962 ;;		_i2c_iniciar
  1963 ;;		_inicializarObjetos
  1964 ;;		_leeHorariosMemoria
  1965 ;;		_mostrarMenu
  1966 ;;		_restablecerDatosSensor
  1967 ;;		_sistemaPrincipal
  1968 ;;		_sistemaRegado
  1969 ;; This function is called by:
  1970 ;;		Startup code after reset
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text0
  1975  001854                     __ptext0:
  1976                           	opt callstack 0
  1977  001854                     _main:
  1978                           	opt callstack 19
  1979  001854                     
  1980                           ;main.c: 805:     INTCONbits.GIE = 1;
  1981  001854  8EF2               	bsf	242,7,c	;volatile
  1982                           
  1983                           ;main.c: 806:     INTCONbits.PEIE = 1;
  1984  001856  8CF2               	bsf	242,6,c	;volatile
  1985                           
  1986                           ;main.c: 807:     INTCONbits.TMR0IE = 0;
  1987  001858  9AF2               	bcf	242,5,c	;volatile
  1988                           
  1989                           ;main.c: 808:     INTCONbits.TMR0IF = 0;
  1990  00185A  94F2               	bcf	242,2,c	;volatile
  1991                           
  1992                           ;main.c: 809:     PIE1bits.RCIE = 1;
  1993  00185C  8A9D               	bsf	157,5,c	;volatile
  1994  00185E                     
  1995                           ;main.c: 811:     T0CON = 0b00000111;
  1996  00185E  0E07               	movlw	7
  1997  001860  6ED5               	movwf	213,c	;volatile
  1998  001862                     
  1999                           ;main.c: 813:     INTCONbits.TMR0IE = 1;
  2000  001862  8AF2               	bsf	242,5,c	;volatile
  2001  001864                     
  2002                           ;main.c: 818:     restablecerDatosSensor();
  2003  001864  EC57  F00F         	call	_restablecerDatosSensor	;wreg free
  2004  001868                     
  2005                           ;main.c: 820:     UART_init(9600);
  2006  001868  0E80               	movlw	128
  2007  00186A  6E1B               	movwf	UART_init@BAUD^0,c
  2008  00186C  0E25               	movlw	37
  2009  00186E  6E1C               	movwf	(UART_init@BAUD+1)^0,c
  2010  001870  0E00               	movlw	0
  2011  001872  6E1D               	movwf	(UART_init@BAUD+2)^0,c
  2012  001874  0E00               	movlw	0
  2013  001876  6E1E               	movwf	(UART_init@BAUD+3)^0,c
  2014  001878  EC45  F00D         	call	_UART_init	;wreg free
  2015  00187C                     
  2016                           ;main.c: 821:     i2c_iniciar();
  2017  00187C  EC64  F011         	call	_i2c_iniciar	;wreg free
  2018  001880                     
  2019                           ;main.c: 822:     configurarAdc();
  2020  001880  EC7A  F011         	call	_configurarAdc	;wreg free
  2021  001884                     
  2022                           ;main.c: 823:     inicializarObjetos();
  2023  001884  EC78  F00C         	call	_inicializarObjetos	;wreg free
  2024  001888                     
  2025                           ;main.c: 825:     leeHorariosMemoria();
  2026  001888  EC11  F00A         	call	_leeHorariosMemoria	;wreg free
  2027  00188C                     
  2028                           ;main.c: 829:     TRISD = 0;
  2029  00188C  0E00               	movlw	0
  2030  00188E  6E95               	movwf	149,c	;volatile
  2031  001890                     
  2032                           ;main.c: 830:     LATD = 0;
  2033  001890  0E00               	movlw	0
  2034  001892  6E8C               	movwf	140,c	;volatile
  2035  001894                     
  2036                           ;main.c: 832:     TMR0 = VALOR_TIMER0;
  2037  001894  C0F8  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  2038  001898  C0F9  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  2039  00189C                     
  2040                           ;main.c: 834:     INTCONbits.TMR0IF = 1;
  2041  00189C  84F2               	bsf	242,2,c	;volatile
  2042  00189E                     
  2043                           ;main.c: 836:     T0CONbits.TMR0ON = 1;
  2044  00189E  8ED5               	bsf	213,7,c	;volatile
  2045  0018A0                     
  2046                           ;main.c: 838:     mostrarMenu();
  2047  0018A0  ECE6  F00D         	call	_mostrarMenu	;wreg free
  2048  0018A4                     
  2049                           ;main.c: 840:     MODO_COMUNICACION = 1;
  2050  0018A4  0E01               	movlw	1
  2051  0018A6  0100               	movlb	0	; () banked
  2052  0018A8  6FF3               	movwf	_MODO_COMUNICACION& (0+255),b
  2053  0018AA                     l3663:
  2054                           
  2055                           ;main.c: 845:         if (datoRecibido) {
  2056  0018AA  0100               	movlb	0	; () banked
  2057  0018AC  51EF               	movf	_datoRecibido& (0+255),w,b
  2058  0018AE  B4D8               	btfsc	status,2,c
  2059  0018B0  EF5C  F00C         	goto	u2651
  2060  0018B4  EF5E  F00C         	goto	u2650
  2061  0018B8                     u2651:
  2062  0018B8  EF65  F00C         	goto	l3671
  2063  0018BC                     u2650:
  2064  0018BC                     
  2065                           ; BSR set to: 0
  2066                           ;main.c: 847:             datoRecibido = 0;
  2067  0018BC  0E00               	movlw	0
  2068  0018BE  6FEF               	movwf	_datoRecibido& (0+255),b
  2069  0018C0                     
  2070                           ; BSR set to: 0
  2071                           ;main.c: 848:             byteUart -= 48;
  2072  0018C0  0E30               	movlw	48
  2073  0018C2  5FF6               	subwf	_byteUart& (0+255),f,b
  2074  0018C4                     
  2075                           ; BSR set to: 0
  2076                           ;main.c: 849:             sistemaPrincipal(byteUart);
  2077  0018C4  51F6               	movf	_byteUart& (0+255),w,b
  2078  0018C6  EC88  F00B         	call	_sistemaPrincipal
  2079  0018CA                     l3671:
  2080                           
  2081                           ;main.c: 853:         if (overflowTimer) {
  2082  0018CA  0100               	movlb	0	; () banked
  2083  0018CC  51EE               	movf	_overflowTimer& (0+255),w,b
  2084  0018CE  B4D8               	btfsc	status,2,c
  2085  0018D0  EF6C  F00C         	goto	u2661
  2086  0018D4  EF6E  F00C         	goto	u2660
  2087  0018D8                     u2661:
  2088  0018D8  EF55  F00C         	goto	l3663
  2089  0018DC                     u2660:
  2090  0018DC                     
  2091                           ; BSR set to: 0
  2092                           ;main.c: 855:             esperandoDatos = 0;
  2093  0018DC  0E00               	movlw	0
  2094  0018DE  6FF4               	movwf	_esperandoDatos& (0+255),b
  2095                           
  2096                           ;main.c: 856:             overflowTimer = 0;
  2097  0018E0  0E00               	movlw	0
  2098  0018E2  6FEE               	movwf	_overflowTimer& (0+255),b
  2099  0018E4                     
  2100                           ; BSR set to: 0
  2101                           ;main.c: 857:             sistemaRegado();
  2102  0018E4  EC42  F006         	call	_sistemaRegado	;wreg free
  2103  0018E8  EF55  F00C         	goto	l3663
  2104  0018EC  EF07  F000         	goto	start
  2105  0018F0                     __end_of_main:
  2106                           	opt callstack 0
  2107                           
  2108 ;; *************** function _sistemaRegado *****************
  2109 ;; Defined at:
  2110 ;;		line 523 in file "main.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2124 ;;      Params:         0       0       0       0       0       0       0       0       0
  2125 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2127 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2128 ;;Total ram usage:        0 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:   10
  2131 ;; This function calls:
  2132 ;;		_dameHoraActual
  2133 ;;		_encenderBombas
  2134 ;;		_horaRegar
  2135 ;;		_lecturaAnalogaSensores
  2136 ;;		_lecturaWifi
  2137 ;;		_mostrarMenu
  2138 ;; This function is called by:
  2139 ;;		_main
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text1
  2144  000C84                     __ptext1:
  2145                           	opt callstack 0
  2146  000C84                     _sistemaRegado:
  2147                           	opt callstack 20
  2148  000C84                     
  2149                           ;main.c: 527:     if (regando) {
  2150  000C84  0100               	movlb	0	; () banked
  2151  000C86  51EB               	movf	_regando& (0+255),w,b
  2152  000C88  B4D8               	btfsc	status,2,c
  2153  000C8A  EF49  F006         	goto	u2501
  2154  000C8E  EF4B  F006         	goto	u2500
  2155  000C92                     u2501:
  2156  000C92  EF6D  F006         	goto	l3559
  2157  000C96                     u2500:
  2158  000C96                     
  2159                           ; BSR set to: 0
  2160                           ;main.c: 528:         contInterrupciones++;
  2161  000C96  4BE8               	infsnz	_contInterrupciones& (0+255),f,b
  2162  000C98  2BE9               	incf	(_contInterrupciones+1)& (0+255),f,b
  2163  000C9A                     
  2164                           ; BSR set to: 0
  2165                           ;main.c: 530:         if (contInterrupciones == 6) {
  2166  000C9A  0E06               	movlw	6
  2167  000C9C  19E8               	xorwf	_contInterrupciones& (0+255),w,b
  2168  000C9E  11E9               	iorwf	(_contInterrupciones+1)& (0+255),w,b
  2169  000CA0  A4D8               	btfss	status,2,c
  2170  000CA2  EF55  F006         	goto	u2511
  2171  000CA6  EF57  F006         	goto	u2510
  2172  000CAA                     u2511:
  2173  000CAA  EFDB  F006         	goto	l344
  2174  000CAE                     u2510:
  2175  000CAE                     
  2176                           ; BSR set to: 0
  2177                           ;main.c: 531:             contInterrupciones = 0;
  2178  000CAE  0E00               	movlw	0
  2179  000CB0  6FE9               	movwf	(_contInterrupciones+1)& (0+255),b
  2180  000CB2  0E00               	movlw	0
  2181  000CB4  6FE8               	movwf	_contInterrupciones& (0+255),b
  2182  000CB6                     
  2183                           ; BSR set to: 0
  2184                           ;main.c: 532:             minutosTranscurridos++;
  2185  000CB6  2BEC               	incf	_minutosTranscurridos& (0+255),f,b
  2186  000CB8                     
  2187                           ; BSR set to: 0
  2188                           ;main.c: 535:             if (minutosTranscurridos >= minutosRegar) {
  2189  000CB8  51ED               	movf	_minutosRegar& (0+255),w,b
  2190  000CBA  5DEC               	subwf	_minutosTranscurridos& (0+255),w,b
  2191  000CBC  A0D8               	btfss	status,0,c
  2192  000CBE  EF63  F006         	goto	u2521
  2193  000CC2  EF65  F006         	goto	u2520
  2194  000CC6                     u2521:
  2195  000CC6  EFDB  F006         	goto	l344
  2196  000CCA                     u2520:
  2197  000CCA                     
  2198                           ; BSR set to: 0
  2199                           ;main.c: 537:                 LATD = 0;
  2200  000CCA  0E00               	movlw	0
  2201  000CCC  6E8C               	movwf	140,c	;volatile
  2202                           
  2203                           ;main.c: 538:                 minutosTranscurridos = 0;
  2204  000CCE  0E00               	movlw	0
  2205  000CD0  6FEC               	movwf	_minutosTranscurridos& (0+255),b
  2206                           
  2207                           ;main.c: 539:                 regando = 0;
  2208  000CD2  0E00               	movlw	0
  2209  000CD4  6FEB               	movwf	_regando& (0+255),b
  2210  000CD6  EFDB  F006         	goto	l344
  2211  000CDA                     l3559:
  2212                           
  2213                           ; BSR set to: 0
  2214                           ;main.c: 545:         dameHoraActual();
  2215  000CDA  ECCC  F010         	call	_dameHoraActual	;wreg free
  2216  000CDE                     
  2217                           ;main.c: 548:         if ((!MODO_COMUNICACION && (horaRegar() && !minutos)) || (MODO_COM
      +                          UNICACION
  2218  000CDE  0100               	movlb	0	; () banked
  2219  000CE0  51F3               	movf	_MODO_COMUNICACION& (0+255),w,b
  2220  000CE2  A4D8               	btfss	status,2,c
  2221  000CE4  EF76  F006         	goto	u2531
  2222  000CE8  EF78  F006         	goto	u2530
  2223  000CEC                     u2531:
  2224  000CEC  EF8C  F006         	goto	l3567
  2225  000CF0                     u2530:
  2226  000CF0                     
  2227                           ; BSR set to: 0
  2228  000CF0  ECB6  F010         	call	_horaRegar	;wreg free
  2229  000CF4  5001               	movf	?_horaRegar^0,w,c
  2230  000CF6  1002               	iorwf	(?_horaRegar+1)^0,w,c
  2231  000CF8  B4D8               	btfsc	status,2,c
  2232  000CFA  EF81  F006         	goto	u2541
  2233  000CFE  EF83  F006         	goto	u2540
  2234  000D02                     u2541:
  2235  000D02  EF8C  F006         	goto	l3567
  2236  000D06                     u2540:
  2237  000D06  0100               	movlb	0	; () banked
  2238  000D08  51F1               	movf	_minutos& (0+255),w,b
  2239  000D0A  B4D8               	btfsc	status,2,c
  2240  000D0C  EF8A  F006         	goto	u2551
  2241  000D10  EF8C  F006         	goto	u2550
  2242  000D14                     u2551:
  2243  000D14  EFA9  F006         	goto	l3573
  2244  000D18                     u2550:
  2245  000D18                     l3567:
  2246  000D18  0100               	movlb	0	; () banked
  2247  000D1A  51F3               	movf	_MODO_COMUNICACION& (0+255),w,b
  2248  000D1C  B4D8               	btfsc	status,2,c
  2249  000D1E  EF93  F006         	goto	u2561
  2250  000D22  EF95  F006         	goto	u2560
  2251  000D26                     u2561:
  2252  000D26  EFDB  F006         	goto	l344
  2253  000D2A                     u2560:
  2254  000D2A                     
  2255                           ; BSR set to: 0
  2256  000D2A  ECB6  F010         	call	_horaRegar	;wreg free
  2257  000D2E  5001               	movf	?_horaRegar^0,w,c
  2258  000D30  1002               	iorwf	(?_horaRegar+1)^0,w,c
  2259  000D32  B4D8               	btfsc	status,2,c
  2260  000D34  EF9E  F006         	goto	u2571
  2261  000D38  EFA0  F006         	goto	u2570
  2262  000D3C                     u2571:
  2263  000D3C  EFDB  F006         	goto	l344
  2264  000D40                     u2570:
  2265  000D40  0E03               	movlw	3
  2266  000D42  0100               	movlb	0	; () banked
  2267  000D44  61F1               	cpfslt	_minutos& (0+255),b
  2268  000D46  EFA7  F006         	goto	u2581
  2269  000D4A  EFA9  F006         	goto	u2580
  2270  000D4E                     u2581:
  2271  000D4E  EFDB  F006         	goto	l344
  2272  000D52                     u2580:
  2273  000D52                     l3573:
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;main.c: 549:                 && (horaRegar() && minutos < 3))) {;main.c: 553:          
      +                             if (MODO_COMUNICACION) {
  2277  000D52  51F3               	movf	_MODO_COMUNICACION& (0+255),w,b
  2278  000D54  B4D8               	btfsc	status,2,c
  2279  000D56  EFAF  F006         	goto	u2591
  2280  000D5A  EFB1  F006         	goto	u2590
  2281  000D5E                     u2591:
  2282  000D5E  EFCC  F006         	goto	l3585
  2283  000D62                     u2590:
  2284  000D62                     
  2285                           ; BSR set to: 0
  2286                           ;main.c: 554:                 lecturaWifi();
  2287  000D62  ECE1  F007         	call	_lecturaWifi	;wreg free
  2288  000D66                     
  2289                           ;main.c: 555:                 if (peticionLecturaSensores) {
  2290  000D66  0100               	movlb	0	; () banked
  2291  000D68  51EA               	movf	_peticionLecturaSensores& (0+255),w,b
  2292  000D6A  B4D8               	btfsc	status,2,c
  2293  000D6C  EFBA  F006         	goto	u2601
  2294  000D70  EFBC  F006         	goto	u2600
  2295  000D74                     u2601:
  2296  000D74  EFC8  F006         	goto	l3583
  2297  000D78                     u2600:
  2298  000D78                     
  2299                           ; BSR set to: 0
  2300                           ;main.c: 556:                     minutosRegar = horarios[hora].tiempoRegar;
  2301  000D78  51F2               	movf	_hora& (0+255),w,b
  2302  000D7A  0D03               	mullw	3
  2303  000D7C  0E02               	movlw	low (_horarios+2)
  2304  000D7E  24F3               	addwf	243,w,c
  2305  000D80  6ED9               	movwf	fsr2l,c
  2306  000D82  0E01               	movlw	high (_horarios+2)
  2307  000D84  20F4               	addwfc	prodh,w,c
  2308  000D86  6EDA               	movwf	fsr2h,c
  2309  000D88  50DF               	movf	indf2,w,c
  2310  000D8A  6FED               	movwf	_minutosRegar& (0+255),b
  2311  000D8C                     
  2312                           ; BSR set to: 0
  2313                           ;main.c: 557:                     encenderBombas();
  2314  000D8C  EC7B  F001         	call	_encenderBombas	;wreg free
  2315  000D90                     l3583:
  2316                           
  2317                           ;main.c: 559:                 mostrarMenu();
  2318  000D90  ECE6  F00D         	call	_mostrarMenu	;wreg free
  2319                           
  2320                           ;main.c: 560:             } else {
  2321  000D94  EFDB  F006         	goto	l344
  2322  000D98                     l3585:
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;main.c: 561:                 lecturaAnalogaSensores();
  2326  000D98  EC32  F00B         	call	_lecturaAnalogaSensores	;wreg free
  2327  000D9C                     
  2328                           ;main.c: 562:                 minutosRegar = horarios[hora].tiempoRegar;
  2329  000D9C  0100               	movlb	0	; () banked
  2330  000D9E  51F2               	movf	_hora& (0+255),w,b
  2331  000DA0  0D03               	mullw	3
  2332  000DA2  0E02               	movlw	low (_horarios+2)
  2333  000DA4  24F3               	addwf	243,w,c
  2334  000DA6  6ED9               	movwf	fsr2l,c
  2335  000DA8  0E01               	movlw	high (_horarios+2)
  2336  000DAA  20F4               	addwfc	prodh,w,c
  2337  000DAC  6EDA               	movwf	fsr2h,c
  2338  000DAE  50DF               	movf	indf2,w,c
  2339  000DB0  6FED               	movwf	_minutosRegar& (0+255),b
  2340  000DB2                     
  2341                           ; BSR set to: 0
  2342                           ;main.c: 563:                 encenderBombas();
  2343  000DB2  EC7B  F001         	call	_encenderBombas	;wreg free
  2344  000DB6                     l344:
  2345  000DB6  0012               	return		;funcret
  2346  000DB8                     __end_of_sistemaRegado:
  2347                           	opt callstack 0
  2348                           
  2349 ;; *************** function _horaRegar *****************
  2350 ;; Defined at:
  2351 ;;		line 144 in file "main.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;		None
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;		None
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  2    0[COMRAM] int 
  2358 ;; Registers used:
  2359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2365 ;;      Params:         2       0       0       0       0       0       0       0       0
  2366 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2367 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2368 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2369 ;;Total ram usage:        3 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; Hardware stack levels required when called:    1
  2372 ;; This function calls:
  2373 ;;		Nothing
  2374 ;; This function is called by:
  2375 ;;		_sistemaRegado
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text2
  2380  00216C                     __ptext2:
  2381                           	opt callstack 0
  2382  00216C                     _horaRegar:
  2383                           	opt callstack 28
  2384  00216C                     
  2385                           ;main.c: 146:     return horarios[hora].regar == 1;
  2386  00216C  0100               	movlb	0	; () banked
  2387  00216E  51F2               	movf	_hora& (0+255),w,b
  2388  002170  0D03               	mullw	3
  2389  002172  0E01               	movlw	low (_horarios+1)
  2390  002174  24F3               	addwf	243,w,c
  2391  002176  6ED9               	movwf	fsr2l,c
  2392  002178  0E01               	movlw	high (_horarios+1)
  2393  00217A  20F4               	addwfc	prodh,w,c
  2394  00217C  6EDA               	movwf	fsr2h,c
  2395  00217E  04DE               	decf	postinc2,w,c
  2396  002180  B4D8               	btfsc	status,2,c
  2397  002182  EFC5  F010         	goto	u2251
  2398  002186  EFC8  F010         	goto	u2250
  2399  00218A                     u2251:
  2400  00218A  0E01               	movlw	1
  2401  00218C  EFC9  F010         	goto	u2260
  2402  002190                     u2250:
  2403  002190  0E00               	movlw	0
  2404  002192                     u2260:
  2405  002192  6E01               	movwf	?_horaRegar^0,c
  2406  002194  6A02               	clrf	(?_horaRegar+1)^0,c
  2407  002196                     
  2408                           ; BSR set to: 0
  2409  002196  0012               	return		;funcret
  2410  002198                     __end_of_horaRegar:
  2411                           	opt callstack 0
  2412                           
  2413 ;; *************** function _encenderBombas *****************
  2414 ;; Defined at:
  2415 ;;		line 245 in file "main.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;		None
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;  i               2   22[COMRAM] int 
  2420 ;;  flagSeco        1   21[COMRAM] unsigned char 
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2430 ;;      Params:         0       0       0       0       0       0       0       0       0
  2431 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2432 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2433 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2434 ;;Total ram usage:        5 bytes
  2435 ;; Hardware stack levels used:    1
  2436 ;; Hardware stack levels required when called:    5
  2437 ;; This function calls:
  2438 ;;		_estaSeco
  2439 ;; This function is called by:
  2440 ;;		_sistemaRegado
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           	psect	text3
  2445  0002F6                     __ptext3:
  2446                           	opt callstack 0
  2447  0002F6                     _encenderBombas:
  2448                           	opt callstack 24
  2449  0002F6                     
  2450                           ;main.c: 247:     char flagSeco = 0;
  2451  0002F6  0E00               	movlw	0
  2452  0002F8  6E16               	movwf	encenderBombas@flagSeco^0,c
  2453                           
  2454                           ;main.c: 249:     for (int i = 0; i < 3; i++) {
  2455  0002FA  0E00               	movlw	0
  2456  0002FC  6E18               	movwf	(encenderBombas@i+1)^0,c
  2457  0002FE  0E00               	movlw	0
  2458  000300  6E17               	movwf	encenderBombas@i^0,c
  2459  000302  EF5D  F002         	goto	l3309
  2460  000306                     l3259:
  2461                           
  2462                           ;main.c: 254:                 if (estaSeco(sensores[i])) {
  2463  000306  90D8               	bcf	status,0,c
  2464  000308  3417               	rlcf	encenderBombas@i^0,w,c
  2465  00030A  6ED9               	movwf	fsr2l,c
  2466  00030C  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  2467  00030E  6EDA               	movwf	fsr2h,c
  2468  000310  0E48               	movlw	low _sensores
  2469  000312  26D9               	addwf	fsr2l,f,c
  2470  000314  0E01               	movlw	high _sensores
  2471  000316  22DA               	addwfc	fsr2h,f,c
  2472  000318  CFDE F010          	movff	postinc2,estaSeco@s
  2473  00031C  CFDD F011          	movff	postdec2,estaSeco@s+1
  2474  000320  ECC5  F00F         	call	_estaSeco	;wreg free
  2475  000324  5010               	movf	?_estaSeco^0,w,c
  2476  000326  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2477  000328  B4D8               	btfsc	status,2,c
  2478  00032A  EF99  F001         	goto	u2271
  2479  00032E  EF9B  F001         	goto	u2270
  2480  000332                     u2271:
  2481  000332  EF8B  F002         	goto	l3311
  2482  000336                     u2270:
  2483  000336                     
  2484                           ;main.c: 255:                     LATDbits.LATD0 = 1;
  2485  000336  808C               	bsf	140,0,c	;volatile
  2486  000338                     l3263:
  2487                           
  2488                           ;main.c: 256:                     flagSeco = 1;
  2489  000338  0E01               	movlw	1
  2490  00033A  6E16               	movwf	encenderBombas@flagSeco^0,c
  2491  00033C  EF8B  F002         	goto	l3311
  2492  000340                     l3265:
  2493                           
  2494                           ;main.c: 261:                 if (estaSeco(sensores[i])) {
  2495  000340  90D8               	bcf	status,0,c
  2496  000342  3417               	rlcf	encenderBombas@i^0,w,c
  2497  000344  6ED9               	movwf	fsr2l,c
  2498  000346  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  2499  000348  6EDA               	movwf	fsr2h,c
  2500  00034A  0E48               	movlw	low _sensores
  2501  00034C  26D9               	addwf	fsr2l,f,c
  2502  00034E  0E01               	movlw	high _sensores
  2503  000350  22DA               	addwfc	fsr2h,f,c
  2504  000352  CFDE F010          	movff	postinc2,estaSeco@s
  2505  000356  CFDD F011          	movff	postdec2,estaSeco@s+1
  2506  00035A  ECC5  F00F         	call	_estaSeco	;wreg free
  2507  00035E  5010               	movf	?_estaSeco^0,w,c
  2508  000360  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2509  000362  B4D8               	btfsc	status,2,c
  2510  000364  EFB6  F001         	goto	u2281
  2511  000368  EFB8  F001         	goto	u2280
  2512  00036C                     u2281:
  2513  00036C  EF8B  F002         	goto	l3311
  2514  000370                     u2280:
  2515  000370                     
  2516                           ;main.c: 262:                     LATDbits.LATD1 = 1;
  2517  000370  828C               	bsf	140,1,c	;volatile
  2518  000372  EF9C  F001         	goto	l3263
  2519  000376                     l3271:
  2520                           
  2521                           ;main.c: 268:                 if (estaSeco(sensores[i])) {
  2522  000376  90D8               	bcf	status,0,c
  2523  000378  3417               	rlcf	encenderBombas@i^0,w,c
  2524  00037A  6ED9               	movwf	fsr2l,c
  2525  00037C  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  2526  00037E  6EDA               	movwf	fsr2h,c
  2527  000380  0E48               	movlw	low _sensores
  2528  000382  26D9               	addwf	fsr2l,f,c
  2529  000384  0E01               	movlw	high _sensores
  2530  000386  22DA               	addwfc	fsr2h,f,c
  2531  000388  CFDE F010          	movff	postinc2,estaSeco@s
  2532  00038C  CFDD F011          	movff	postdec2,estaSeco@s+1
  2533  000390  ECC5  F00F         	call	_estaSeco	;wreg free
  2534  000394  5010               	movf	?_estaSeco^0,w,c
  2535  000396  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2536  000398  B4D8               	btfsc	status,2,c
  2537  00039A  EFD1  F001         	goto	u2291
  2538  00039E  EFD3  F001         	goto	u2290
  2539  0003A2                     u2291:
  2540  0003A2  EF8B  F002         	goto	l3311
  2541  0003A6                     u2290:
  2542  0003A6                     
  2543                           ;main.c: 269:                     LATDbits.LATD2 = 1;
  2544  0003A6  848C               	bsf	140,2,c	;volatile
  2545  0003A8  EF9C  F001         	goto	l3263
  2546  0003AC                     l3277:
  2547                           
  2548                           ;main.c: 275:                 if (estaSeco(sensores[i])) {
  2549  0003AC  90D8               	bcf	status,0,c
  2550  0003AE  3417               	rlcf	encenderBombas@i^0,w,c
  2551  0003B0  6ED9               	movwf	fsr2l,c
  2552  0003B2  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  2553  0003B4  6EDA               	movwf	fsr2h,c
  2554  0003B6  0E48               	movlw	low _sensores
  2555  0003B8  26D9               	addwf	fsr2l,f,c
  2556  0003BA  0E01               	movlw	high _sensores
  2557  0003BC  22DA               	addwfc	fsr2h,f,c
  2558  0003BE  CFDE F010          	movff	postinc2,estaSeco@s
  2559  0003C2  CFDD F011          	movff	postdec2,estaSeco@s+1
  2560  0003C6  ECC5  F00F         	call	_estaSeco	;wreg free
  2561  0003CA  5010               	movf	?_estaSeco^0,w,c
  2562  0003CC  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2563  0003CE  B4D8               	btfsc	status,2,c
  2564  0003D0  EFEC  F001         	goto	u2301
  2565  0003D4  EFEE  F001         	goto	u2300
  2566  0003D8                     u2301:
  2567  0003D8  EF8B  F002         	goto	l3311
  2568  0003DC                     u2300:
  2569  0003DC                     
  2570                           ;main.c: 276:                     LATDbits.LATD3 = 1;
  2571  0003DC  868C               	bsf	140,3,c	;volatile
  2572  0003DE  EF9C  F001         	goto	l3263
  2573  0003E2                     l3283:
  2574                           
  2575                           ;main.c: 282:                 if (estaSeco(sensores[i])) {
  2576  0003E2  90D8               	bcf	status,0,c
  2577  0003E4  3417               	rlcf	encenderBombas@i^0,w,c
  2578  0003E6  6ED9               	movwf	fsr2l,c
  2579  0003E8  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  2580  0003EA  6EDA               	movwf	fsr2h,c
  2581  0003EC  0E48               	movlw	low _sensores
  2582  0003EE  26D9               	addwf	fsr2l,f,c
  2583  0003F0  0E01               	movlw	high _sensores
  2584  0003F2  22DA               	addwfc	fsr2h,f,c
  2585  0003F4  CFDE F010          	movff	postinc2,estaSeco@s
  2586  0003F8  CFDD F011          	movff	postdec2,estaSeco@s+1
  2587  0003FC  ECC5  F00F         	call	_estaSeco	;wreg free
  2588  000400  5010               	movf	?_estaSeco^0,w,c
  2589  000402  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2590  000404  B4D8               	btfsc	status,2,c
  2591  000406  EF07  F002         	goto	u2311
  2592  00040A  EF09  F002         	goto	u2310
  2593  00040E                     u2311:
  2594  00040E  EF8B  F002         	goto	l3311
  2595  000412                     u2310:
  2596  000412                     
  2597                           ;main.c: 283:                     LATDbits.LATD4 = 1;
  2598  000412  888C               	bsf	140,4,c	;volatile
  2599  000414  EF9C  F001         	goto	l3263
  2600  000418                     l3289:
  2601                           
  2602                           ;main.c: 289:                 if (estaSeco(sensores[i])) {
  2603  000418  90D8               	bcf	status,0,c
  2604  00041A  3417               	rlcf	encenderBombas@i^0,w,c
  2605  00041C  6ED9               	movwf	fsr2l,c
  2606  00041E  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  2607  000420  6EDA               	movwf	fsr2h,c
  2608  000422  0E48               	movlw	low _sensores
  2609  000424  26D9               	addwf	fsr2l,f,c
  2610  000426  0E01               	movlw	high _sensores
  2611  000428  22DA               	addwfc	fsr2h,f,c
  2612  00042A  CFDE F010          	movff	postinc2,estaSeco@s
  2613  00042E  CFDD F011          	movff	postdec2,estaSeco@s+1
  2614  000432  ECC5  F00F         	call	_estaSeco	;wreg free
  2615  000436  5010               	movf	?_estaSeco^0,w,c
  2616  000438  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2617  00043A  B4D8               	btfsc	status,2,c
  2618  00043C  EF22  F002         	goto	u2321
  2619  000440  EF24  F002         	goto	u2320
  2620  000444                     u2321:
  2621  000444  EF8B  F002         	goto	l3311
  2622  000448                     u2320:
  2623  000448                     
  2624                           ;main.c: 290:                     LATDbits.LATD5 = 1;
  2625  000448  8A8C               	bsf	140,5,c	;volatile
  2626  00044A  EF9C  F001         	goto	l3263
  2627  00044E                     l3295:
  2628                           
  2629                           ;main.c: 296:                 if (estaSeco(sensores[i])) {
  2630  00044E  90D8               	bcf	status,0,c
  2631  000450  3417               	rlcf	encenderBombas@i^0,w,c
  2632  000452  6ED9               	movwf	fsr2l,c
  2633  000454  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  2634  000456  6EDA               	movwf	fsr2h,c
  2635  000458  0E48               	movlw	low _sensores
  2636  00045A  26D9               	addwf	fsr2l,f,c
  2637  00045C  0E01               	movlw	high _sensores
  2638  00045E  22DA               	addwfc	fsr2h,f,c
  2639  000460  CFDE F010          	movff	postinc2,estaSeco@s
  2640  000464  CFDD F011          	movff	postdec2,estaSeco@s+1
  2641  000468  ECC5  F00F         	call	_estaSeco	;wreg free
  2642  00046C  5010               	movf	?_estaSeco^0,w,c
  2643  00046E  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2644  000470  B4D8               	btfsc	status,2,c
  2645  000472  EF3D  F002         	goto	u2331
  2646  000476  EF3F  F002         	goto	u2330
  2647  00047A                     u2331:
  2648  00047A  EF8B  F002         	goto	l3311
  2649  00047E                     u2330:
  2650  00047E                     
  2651                           ;main.c: 297:                     LATDbits.LATD6 = 1;
  2652  00047E  8C8C               	bsf	140,6,c	;volatile
  2653  000480  EF9C  F001         	goto	l3263
  2654  000484                     l3301:
  2655                           
  2656                           ;main.c: 303:                 if (estaSeco(sensores[i])) {
  2657  000484  90D8               	bcf	status,0,c
  2658  000486  3417               	rlcf	encenderBombas@i^0,w,c
  2659  000488  6ED9               	movwf	fsr2l,c
  2660  00048A  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  2661  00048C  6EDA               	movwf	fsr2h,c
  2662  00048E  0E48               	movlw	low _sensores
  2663  000490  26D9               	addwf	fsr2l,f,c
  2664  000492  0E01               	movlw	high _sensores
  2665  000494  22DA               	addwfc	fsr2h,f,c
  2666  000496  CFDE F010          	movff	postinc2,estaSeco@s
  2667  00049A  CFDD F011          	movff	postdec2,estaSeco@s+1
  2668  00049E  ECC5  F00F         	call	_estaSeco	;wreg free
  2669  0004A2  5010               	movf	?_estaSeco^0,w,c
  2670  0004A4  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2671  0004A6  B4D8               	btfsc	status,2,c
  2672  0004A8  EF58  F002         	goto	u2341
  2673  0004AC  EF5A  F002         	goto	u2340
  2674  0004B0                     u2341:
  2675  0004B0  EF8B  F002         	goto	l3311
  2676  0004B4                     u2340:
  2677  0004B4                     
  2678                           ;main.c: 304:                     LATDbits.LATD7 = 1;
  2679  0004B4  8E8C               	bsf	140,7,c	;volatile
  2680  0004B6  EF9C  F001         	goto	l3263
  2681  0004BA                     l3309:
  2682  0004BA  C017  F014         	movff	encenderBombas@i,??_encenderBombas
  2683  0004BE  C018  F015         	movff	encenderBombas@i+1,??_encenderBombas+1
  2684                           
  2685                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2686                           ; Switch size 1, requested type "simple"
  2687                           ; Number of cases is 1, Range of values is 0 to 0
  2688                           ; switch strategies available:
  2689                           ; Name         Instructions Cycles
  2690                           ; simple_byte            4     3 (average)
  2691                           ;	Chosen strategy is simple_byte
  2692  0004C2  5015               	movf	(??_encenderBombas+1)^0,w,c
  2693  0004C4  0A00               	xorlw	0	; case 0
  2694  0004C6  B4D8               	btfsc	status,2,c
  2695  0004C8  EF68  F002         	goto	l3777
  2696  0004CC  EF8B  F002         	goto	l3311
  2697  0004D0                     l3777:
  2698                           
  2699                           ; Switch size 1, requested type "simple"
  2700                           ; Number of cases is 8, Range of values is 0 to 7
  2701                           ; switch strategies available:
  2702                           ; Name         Instructions Cycles
  2703                           ; simple_byte           25    13 (average)
  2704                           ;	Chosen strategy is simple_byte
  2705  0004D0  5014               	movf	??_encenderBombas^0,w,c
  2706  0004D2  0A00               	xorlw	0	; case 0
  2707  0004D4  B4D8               	btfsc	status,2,c
  2708  0004D6  EF83  F001         	goto	l3259
  2709  0004DA  0A01               	xorlw	1	; case 1
  2710  0004DC  B4D8               	btfsc	status,2,c
  2711  0004DE  EFA0  F001         	goto	l3265
  2712  0004E2  0A03               	xorlw	3	; case 2
  2713  0004E4  B4D8               	btfsc	status,2,c
  2714  0004E6  EFBB  F001         	goto	l3271
  2715  0004EA  0A01               	xorlw	1	; case 3
  2716  0004EC  B4D8               	btfsc	status,2,c
  2717  0004EE  EFD6  F001         	goto	l3277
  2718  0004F2  0A07               	xorlw	7	; case 4
  2719  0004F4  B4D8               	btfsc	status,2,c
  2720  0004F6  EFF1  F001         	goto	l3283
  2721  0004FA  0A01               	xorlw	1	; case 5
  2722  0004FC  B4D8               	btfsc	status,2,c
  2723  0004FE  EF0C  F002         	goto	l3289
  2724  000502  0A03               	xorlw	3	; case 6
  2725  000504  B4D8               	btfsc	status,2,c
  2726  000506  EF27  F002         	goto	l3295
  2727  00050A  0A01               	xorlw	1	; case 7
  2728  00050C  B4D8               	btfsc	status,2,c
  2729  00050E  EF42  F002         	goto	l3301
  2730  000512  EF8B  F002         	goto	l3311
  2731  000516                     l3311:
  2732                           
  2733                           ;main.c: 310:     }
  2734  000516  4A17               	infsnz	encenderBombas@i^0,f,c
  2735  000518  2A18               	incf	(encenderBombas@i+1)^0,f,c
  2736  00051A  BE18               	btfsc	(encenderBombas@i+1)^0,7,c
  2737  00051C  EF99  F002         	goto	u2351
  2738  000520  5018               	movf	(encenderBombas@i+1)^0,w,c
  2739  000522  E109               	bnz	u2350
  2740  000524  0E03               	movlw	3
  2741  000526  5C17               	subwf	encenderBombas@i^0,w,c
  2742  000528  A0D8               	btfss	status,0,c
  2743  00052A  EF99  F002         	goto	u2351
  2744  00052E  EF9B  F002         	goto	u2350
  2745  000532                     u2351:
  2746  000532  EF5D  F002         	goto	l3309
  2747  000536                     u2350:
  2748  000536                     
  2749                           ;main.c: 312:     if (flagSeco)
  2750  000536  5016               	movf	encenderBombas@flagSeco^0,w,c
  2751  000538  B4D8               	btfsc	status,2,c
  2752  00053A  EFA1  F002         	goto	u2361
  2753  00053E  EFA3  F002         	goto	u2360
  2754  000542                     u2361:
  2755  000542  EFA6  F002         	goto	l271
  2756  000546                     u2360:
  2757  000546                     
  2758                           ;main.c: 313:         regando = 1;
  2759  000546  0E01               	movlw	1
  2760  000548  0100               	movlb	0	; () banked
  2761  00054A  6FEB               	movwf	_regando& (0+255),b
  2762  00054C                     l271:
  2763  00054C  0012               	return		;funcret
  2764  00054E                     __end_of_encenderBombas:
  2765                           	opt callstack 0
  2766                           
  2767 ;; *************** function _estaSeco *****************
  2768 ;; Defined at:
  2769 ;;		line 135 in file "main.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;  s               2   15[COMRAM] struct .
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;  temperatura     1   18[COMRAM] unsigned char 
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  2   15[COMRAM] int 
  2776 ;; Registers used:
  2777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2783 ;;      Params:         2       0       0       0       0       0       0       0       0
  2784 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2785 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2786 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2787 ;;Total ram usage:        4 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    4
  2790 ;; This function calls:
  2791 ;;		_dameTemperaturaHumedad
  2792 ;; This function is called by:
  2793 ;;		_encenderBombas
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text4
  2798  001F8A                     __ptext4:
  2799                           	opt callstack 0
  2800  001F8A                     _estaSeco:
  2801                           	opt callstack 24
  2802  001F8A                     
  2803                           ;main.c: 136:     unsigned char temperatura;;main.c: 138:     dameTemperaturaHumedad(((v
      +                          oid*)0), &temperatura);
  2804  001F8A  0E00               	movlw	0
  2805  001F8C  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  2806  001F8E  0E00               	movlw	0
  2807  001F90  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  2808  001F92  0E13               	movlw	low estaSeco@temperatura
  2809  001F94  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  2810  001F96  0E00               	movlw	high estaSeco@temperatura
  2811  001F98  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  2812  001F9A  ECD8  F00A         	call	_dameTemperaturaHumedad	;wreg free
  2813  001F9E                     
  2814                           ;main.c: 141:     return (s.porcientoHumedad < 94) && (temperatura < 34);
  2815  001F9E  0E00               	movlw	0
  2816  001FA0  6E12               	movwf	_estaSeco$782^0,c
  2817  001FA2  0E5E               	movlw	94
  2818  001FA4  6010               	cpfslt	estaSeco@s^0,c
  2819  001FA6  EFD7  F00F         	goto	u2171
  2820  001FAA  EFD9  F00F         	goto	u2170
  2821  001FAE                     u2171:
  2822  001FAE  EFE3  F00F         	goto	l3145
  2823  001FB2                     u2170:
  2824  001FB2  0E22               	movlw	34
  2825  001FB4  6013               	cpfslt	estaSeco@temperatura^0,c
  2826  001FB6  EFDF  F00F         	goto	u2181
  2827  001FBA  EFE1  F00F         	goto	u2180
  2828  001FBE                     u2181:
  2829  001FBE  EFE3  F00F         	goto	l3145
  2830  001FC2                     u2180:
  2831  001FC2  0E01               	movlw	1
  2832  001FC4  6E12               	movwf	_estaSeco$782^0,c
  2833  001FC6                     l3145:
  2834  001FC6  C012  F010         	movff	_estaSeco$782,?_estaSeco
  2835  001FCA  6A11               	clrf	(?_estaSeco+1)^0,c
  2836  001FCC  0012               	return		;funcret
  2837  001FCE                     __end_of_estaSeco:
  2838                           	opt callstack 0
  2839                           
  2840 ;; *************** function _dameHoraActual *****************
  2841 ;; Defined at:
  2842 ;;		line 159 in file "main.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;		None
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;		None
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      void 
  2849 ;; Registers used:
  2850 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2856 ;;      Params:         0       0       0       0       0       0       0       0       0
  2857 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2858 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2859 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2860 ;;Total ram usage:        0 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; Hardware stack levels required when called:    4
  2863 ;; This function calls:
  2864 ;;		_convertirDato
  2865 ;;		_leer_rtc
  2866 ;; This function is called by:
  2867 ;;		_sistemaRegado
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           	psect	text5
  2872  002198                     __ptext5:
  2873                           	opt callstack 0
  2874  002198                     _dameHoraActual:
  2875                           	opt callstack 25
  2876  002198                     
  2877                           ;main.c: 161:     segundos = convertirDato(leer_rtc(0x00));
  2878  002198  0E00               	movlw	0
  2879  00219A  ECE2  F010         	call	_leer_rtc
  2880  00219E  EC1D  F011         	call	_convertirDato
  2881  0021A2  0100               	movlb	0	; () banked
  2882  0021A4  6FF0               	movwf	_segundos& (0+255),b
  2883                           
  2884                           ;main.c: 162:     minutos = convertirDato(leer_rtc(0x01));
  2885  0021A6  0E01               	movlw	1
  2886  0021A8  ECE2  F010         	call	_leer_rtc
  2887  0021AC  EC1D  F011         	call	_convertirDato
  2888  0021B0  0100               	movlb	0	; () banked
  2889  0021B2  6FF1               	movwf	_minutos& (0+255),b
  2890                           
  2891                           ;main.c: 163:     hora = convertirDato(leer_rtc(0x02));
  2892  0021B4  0E02               	movlw	2
  2893  0021B6  ECE2  F010         	call	_leer_rtc
  2894  0021BA  EC1D  F011         	call	_convertirDato
  2895  0021BE  0100               	movlb	0	; () banked
  2896  0021C0  6FF2               	movwf	_hora& (0+255),b
  2897  0021C2                     
  2898                           ; BSR set to: 0
  2899  0021C2  0012               	return		;funcret
  2900  0021C4                     __end_of_dameHoraActual:
  2901                           	opt callstack 0
  2902                           
  2903 ;; *************** function _leer_rtc *****************
  2904 ;; Defined at:
  2905 ;;		line 13 in file "./RTC.h"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  direccion       1    wreg     unsigned char 
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;  direccion       1    2[COMRAM] unsigned char 
  2910 ;;  dato            1    3[COMRAM] unsigned char 
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      unsigned char 
  2913 ;; Registers used:
  2914 ;;		wreg, status,2, status,0, cstack
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2920 ;;      Params:         0       0       0       0       0       0       0       0       0
  2921 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2922 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2923 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2924 ;;Total ram usage:        2 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:    3
  2927 ;; This function calls:
  2928 ;;		_i2c_detener
  2929 ;;		_i2c_envia_dato
  2930 ;;		_i2c_inicia_com
  2931 ;;		_i2c_recibe_dato
  2932 ;;		_i2c_reinicia_com
  2933 ;; This function is called by:
  2934 ;;		_dameHoraActual
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text6
  2939  0021C4                     __ptext6:
  2940                           	opt callstack 0
  2941  0021C4                     _leer_rtc:
  2942                           	opt callstack 25
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;incstack = 0
  2946                           ;leer_rtc@direccion stored from wreg
  2947  0021C4  6E03               	movwf	leer_rtc@direccion^0,c
  2948  0021C6                     
  2949                           ;./RTC.h: 14:     unsigned char dato;;./RTC.h: 15:     i2c_inicia_com();
  2950  0021C6  EC83  F011         	call	_i2c_inicia_com	;wreg free
  2951                           
  2952                           ;./RTC.h: 16:     i2c_envia_dato(0xD0);
  2953  0021CA  0ED0               	movlw	208
  2954  0021CC  EC6F  F011         	call	_i2c_envia_dato
  2955                           
  2956                           ;./RTC.h: 17:     i2c_envia_dato(direccion);
  2957  0021D0  5003               	movf	leer_rtc@direccion^0,w,c
  2958  0021D2  EC6F  F011         	call	_i2c_envia_dato
  2959                           
  2960                           ;./RTC.h: 18:     i2c_reinicia_com();
  2961  0021D6  EC7F  F011         	call	_i2c_reinicia_com	;wreg free
  2962                           
  2963                           ;./RTC.h: 19:     i2c_envia_dato(0xD1);
  2964  0021DA  0ED1               	movlw	209
  2965  0021DC  EC6F  F011         	call	_i2c_envia_dato
  2966                           
  2967                           ;./RTC.h: 20:     dato = i2c_recibe_dato();
  2968  0021E0  EC4C  F011         	call	_i2c_recibe_dato	;wreg free
  2969  0021E4  6E04               	movwf	leer_rtc@dato^0,c
  2970                           
  2971                           ;./RTC.h: 21:     i2c_detener();
  2972  0021E6  EC87  F011         	call	_i2c_detener	;wreg free
  2973  0021EA                     
  2974                           ;./RTC.h: 22:     return dato;
  2975  0021EA  5004               	movf	leer_rtc@dato^0,w,c
  2976  0021EC  0012               	return		;funcret
  2977  0021EE                     __end_of_leer_rtc:
  2978                           	opt callstack 0
  2979                           
  2980 ;; *************** function _convertirDato *****************
  2981 ;; Defined at:
  2982 ;;		line 28 in file "./RTC.h"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  dato            1    wreg     unsigned char 
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  dato            1    1[COMRAM] unsigned char 
  2987 ;;  datoR           1    2[COMRAM] unsigned char 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  1    wreg      unsigned char 
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, status,0, prodl, prodh
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2997 ;;      Params:         0       0       0       0       0       0       0       0       0
  2998 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2999 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3000 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3001 ;;Total ram usage:        3 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; Hardware stack levels required when called:    1
  3004 ;; This function calls:
  3005 ;;		Nothing
  3006 ;; This function is called by:
  3007 ;;		_dameHoraActual
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           	psect	text7
  3012  00223A                     __ptext7:
  3013                           	opt callstack 0
  3014  00223A                     _convertirDato:
  3015                           	opt callstack 27
  3016                           
  3017                           ;incstack = 0
  3018                           ;convertirDato@dato stored from wreg
  3019  00223A  6E02               	movwf	convertirDato@dato^0,c
  3020  00223C                     
  3021                           ;./RTC.h: 30:     datoR = (dato & 0xF0) >> 4;
  3022  00223C  3802               	swapf	convertirDato@dato^0,w,c
  3023  00223E  0B0F               	andlw	15
  3024  002240  0B0F               	andlw	15
  3025  002242  6E03               	movwf	convertirDato@datoR^0,c
  3026  002244                     
  3027                           ;./RTC.h: 31:     datoR = (datoR * 10) + (dato & 0x0F);
  3028  002244  C002  F001         	movff	convertirDato@dato,??_convertirDato
  3029  002248  0E0F               	movlw	15
  3030  00224A  1601               	andwf	??_convertirDato^0,f,c
  3031  00224C  5003               	movf	convertirDato@datoR^0,w,c
  3032  00224E  0D0A               	mullw	10
  3033  002250  50F3               	movf	243,w,c
  3034  002252  2401               	addwf	??_convertirDato^0,w,c
  3035  002254  6E03               	movwf	convertirDato@datoR^0,c
  3036  002256                     
  3037                           ;./RTC.h: 32:     return datoR;
  3038  002256  5003               	movf	convertirDato@datoR^0,w,c
  3039  002258  0012               	return		;funcret
  3040  00225A                     __end_of_convertirDato:
  3041                           	opt callstack 0
  3042                           
  3043 ;; *************** function _sistemaPrincipal *****************
  3044 ;; Defined at:
  3045 ;;		line 483 in file "main.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;  opcion          1    wreg     unsigned char 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;  opcion          1   93[COMRAM] unsigned char 
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3059 ;;      Params:         0       0       0       0       0       0       0       0       0
  3060 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3061 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3062 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3063 ;;Total ram usage:        3 bytes
  3064 ;; Hardware stack levels used:    1
  3065 ;; Hardware stack levels required when called:   11
  3066 ;; This function calls:
  3067 ;;		_UART_printf
  3068 ;;		_asignarHorarios
  3069 ;;		_dameDatosSistema
  3070 ;;		_fijaHoraRtc
  3071 ;;		_mostrarDatosSensores
  3072 ;;		_mostrarDatosSensoresWIFI
  3073 ;;		_mostrarMenu
  3074 ;;		_setTiempoRegar
  3075 ;; This function is called by:
  3076 ;;		_main
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           	psect	text8
  3081  001710                     __ptext8:
  3082                           	opt callstack 0
  3083  001710                     _sistemaPrincipal:
  3084                           	opt callstack 19
  3085                           
  3086                           ;incstack = 0
  3087                           ;sistemaPrincipal@opcion stored from wreg
  3088  001710  6E5E               	movwf	sistemaPrincipal@opcion^0,c
  3089  001712                     
  3090                           ;main.c: 485:     PIE1bits.RCIE = 0;
  3091  001712  9A9D               	bcf	157,5,c	;volatile
  3092                           
  3093                           ;main.c: 487:     switch (opcion) {
  3094  001714  EFB5  F00B         	goto	l3535
  3095  001718                     l3517:
  3096                           
  3097                           ;main.c: 490:             fijaHoraRtc();
  3098  001718  ECB2  F00D         	call	_fijaHoraRtc	;wreg free
  3099                           
  3100                           ;main.c: 491:             break;
  3101  00171C  EFD6  F00B         	goto	l3537
  3102  001720                     l3519:
  3103                           
  3104                           ;main.c: 494:             asignarHorarios();
  3105  001720  ECC3  F00C         	call	_asignarHorarios	;wreg free
  3106                           
  3107                           ;main.c: 495:             break;
  3108  001724  EFD6  F00B         	goto	l3537
  3109  001728                     l3521:
  3110                           
  3111                           ;main.c: 498:             setTiempoRegar();
  3112  001728  ECDA  F00B         	call	_setTiempoRegar	;wreg free
  3113                           
  3114                           ;main.c: 499:             break;
  3115  00172C  EFD6  F00B         	goto	l3537
  3116  001730                     l3523:
  3117                           
  3118                           ;main.c: 502:             dameDatosSistema();
  3119  001730  ECD0  F008         	call	_dameDatosSistema	;wreg free
  3120                           
  3121                           ;main.c: 503:             break;
  3122  001734  EFD6  F00B         	goto	l3537
  3123  001738                     l3525:
  3124                           
  3125                           ;main.c: 506:             if (MODO_COMUNICACION)
  3126  001738  0100               	movlb	0	; () banked
  3127  00173A  51F3               	movf	_MODO_COMUNICACION& (0+255),w,b
  3128  00173C  B4D8               	btfsc	status,2,c
  3129  00173E  EFA3  F00B         	goto	u2491
  3130  001742  EFA5  F00B         	goto	u2490
  3131  001746                     u2491:
  3132  001746  EFA9  F00B         	goto	l3529
  3133  00174A                     u2490:
  3134  00174A                     
  3135                           ; BSR set to: 0
  3136                           ;main.c: 507:                 mostrarDatosSensoresWIFI();
  3137  00174A  EC62  F007         	call	_mostrarDatosSensoresWIFI	;wreg free
  3138  00174E  EFD6  F00B         	goto	l3537
  3139  001752                     l3529:
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;main.c: 509:                 mostrarDatosSensores();
  3143  001752  EC59  F008         	call	_mostrarDatosSensores	;wreg free
  3144  001756  EFD6  F00B         	goto	l3537
  3145  00175A                     l3531:
  3146                           
  3147                           ;main.c: 514:             UART_printf("\r\n Solo se permiten numeros del 1 al 3 \r\n");
  3148  00175A  0E65               	movlw	low STR_24
  3149  00175C  6E02               	movwf	UART_printf@cadena^0,c
  3150  00175E  0E7D               	movlw	high STR_24
  3151  001760  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3152  001762  EC79  F00E         	call	_UART_printf	;wreg free
  3153                           
  3154                           ;main.c: 515:             break;
  3155  001766  EFD6  F00B         	goto	l3537
  3156  00176A                     l3535:
  3157  00176A  505E               	movf	sistemaPrincipal@opcion^0,w,c
  3158  00176C  6E5C               	movwf	??_sistemaPrincipal^0,c
  3159  00176E  6A5D               	clrf	(??_sistemaPrincipal+1)^0,c
  3160                           
  3161                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3162                           ; Switch size 1, requested type "simple"
  3163                           ; Number of cases is 1, Range of values is 0 to 0
  3164                           ; switch strategies available:
  3165                           ; Name         Instructions Cycles
  3166                           ; simple_byte            4     3 (average)
  3167                           ;	Chosen strategy is simple_byte
  3168  001770  505D               	movf	(??_sistemaPrincipal+1)^0,w,c
  3169  001772  0A00               	xorlw	0	; case 0
  3170  001774  B4D8               	btfsc	status,2,c
  3171  001776  EFBF  F00B         	goto	l3779
  3172  00177A  EFAD  F00B         	goto	l3531
  3173  00177E                     l3779:
  3174                           
  3175                           ; Switch size 1, requested type "simple"
  3176                           ; Number of cases is 5, Range of values is 1 to 5
  3177                           ; switch strategies available:
  3178                           ; Name         Instructions Cycles
  3179                           ; simple_byte           16     9 (average)
  3180                           ;	Chosen strategy is simple_byte
  3181  00177E  505C               	movf	??_sistemaPrincipal^0,w,c
  3182  001780  0A01               	xorlw	1	; case 1
  3183  001782  B4D8               	btfsc	status,2,c
  3184  001784  EF8C  F00B         	goto	l3517
  3185  001788  0A03               	xorlw	3	; case 2
  3186  00178A  B4D8               	btfsc	status,2,c
  3187  00178C  EF90  F00B         	goto	l3519
  3188  001790  0A01               	xorlw	1	; case 3
  3189  001792  B4D8               	btfsc	status,2,c
  3190  001794  EF94  F00B         	goto	l3521
  3191  001798  0A07               	xorlw	7	; case 4
  3192  00179A  B4D8               	btfsc	status,2,c
  3193  00179C  EF98  F00B         	goto	l3523
  3194  0017A0  0A01               	xorlw	1	; case 5
  3195  0017A2  B4D8               	btfsc	status,2,c
  3196  0017A4  EF9C  F00B         	goto	l3525
  3197  0017A8  EFAD  F00B         	goto	l3531
  3198  0017AC                     l3537:
  3199                           
  3200                           ;main.c: 518:     mostrarMenu();
  3201  0017AC  ECE6  F00D         	call	_mostrarMenu	;wreg free
  3202  0017B0                     
  3203                           ;main.c: 519:     PIE1bits.RCIE = 1;
  3204  0017B0  8A9D               	bsf	157,5,c	;volatile
  3205  0017B2  0012               	return		;funcret
  3206  0017B4                     __end_of_sistemaPrincipal:
  3207                           	opt callstack 0
  3208                           
  3209 ;; *************** function _setTiempoRegar *****************
  3210 ;; Defined at:
  3211 ;;		line 368 in file "main.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;  hora            1   15[COMRAM] unsigned char 
  3216 ;;  tiempoRegar     1   14[COMRAM] unsigned char 
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  1    wreg      void 
  3219 ;; Registers used:
  3220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3226 ;;      Params:         0       0       0       0       0       0       0       0       0
  3227 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3229 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3230 ;;Total ram usage:        2 bytes
  3231 ;; Hardware stack levels used:    1
  3232 ;; Hardware stack levels required when called:    5
  3233 ;; This function calls:
  3234 ;;		_UART_printf
  3235 ;;		_escribeHorariosMemoria
  3236 ;;		_getValue
  3237 ;; This function is called by:
  3238 ;;		_sistemaPrincipal
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           	psect	text9
  3243  0017B4                     __ptext9:
  3244                           	opt callstack 0
  3245  0017B4                     _setTiempoRegar:
  3246                           	opt callstack 24
  3247  0017B4                     
  3248                           ;main.c: 370:     unsigned char hora;;main.c: 371:     unsigned char tiempoRegar;;main.c
      +                          : 373:     UART_printf("\r\n TIEMPO DE REGADO \r\n");
  3249  0017B4  0E6E               	movlw	low STR_9
  3250  0017B6  6E02               	movwf	UART_printf@cadena^0,c
  3251  0017B8  0E7F               	movlw	high STR_9
  3252  0017BA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3253  0017BC  EC79  F00E         	call	_UART_printf	;wreg free
  3254                           
  3255                           ;main.c: 375:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  3256  0017C0  0E44               	movlw	low STR_6
  3257  0017C2  6E02               	movwf	UART_printf@cadena^0,c
  3258  0017C4  0E7C               	movlw	high STR_6
  3259  0017C6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3260  0017C8  EC79  F00E         	call	_UART_printf	;wreg free
  3261  0017CC                     
  3262                           ;main.c: 376:     hora = getValue(2);
  3263  0017CC  0E00               	movlw	0
  3264  0017CE  6E05               	movwf	(getValue@numCharacters+1)^0,c
  3265  0017D0  0E02               	movlw	2
  3266  0017D2  6E04               	movwf	getValue@numCharacters^0,c
  3267  0017D4  ECBA  F003         	call	_getValue	;wreg free
  3268  0017D8  6E10               	movwf	setTiempoRegar@hora^0,c
  3269  0017DA                     
  3270                           ;main.c: 378:     if (hora != 'F') {
  3271  0017DA  0E46               	movlw	70
  3272  0017DC  1810               	xorwf	setTiempoRegar@hora^0,w,c
  3273  0017DE  B4D8               	btfsc	status,2,c
  3274  0017E0  EFF4  F00B         	goto	u2411
  3275  0017E4  EFF6  F00B         	goto	u2410
  3276  0017E8                     u2411:
  3277  0017E8  EF29  F00C         	goto	l286
  3278  0017EC                     u2410:
  3279  0017EC                     
  3280                           ;main.c: 380:         UART_printf("\r\n Ingrese los minutos que desee que se riegue en e
      +                          se horario ej: 15 \r\n");
  3281  0017EC  0EC5               	movlw	low STR_11
  3282  0017EE  6E02               	movwf	UART_printf@cadena^0,c
  3283  0017F0  0E7B               	movlw	high STR_11
  3284  0017F2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3285  0017F4  EC79  F00E         	call	_UART_printf	;wreg free
  3286  0017F8                     
  3287                           ;main.c: 381:         tiempoRegar = getValue(2);
  3288  0017F8  0E00               	movlw	0
  3289  0017FA  6E05               	movwf	(getValue@numCharacters+1)^0,c
  3290  0017FC  0E02               	movlw	2
  3291  0017FE  6E04               	movwf	getValue@numCharacters^0,c
  3292  001800  ECBA  F003         	call	_getValue	;wreg free
  3293  001804  6E0F               	movwf	setTiempoRegar@tiempoRegar^0,c
  3294  001806                     
  3295                           ;main.c: 383:         if (tiempoRegar != 'F') {
  3296  001806  0E46               	movlw	70
  3297  001808  180F               	xorwf	setTiempoRegar@tiempoRegar^0,w,c
  3298  00180A  B4D8               	btfsc	status,2,c
  3299  00180C  EF0A  F00C         	goto	u2421
  3300  001810  EF0C  F00C         	goto	u2420
  3301  001814                     u2421:
  3302  001814  EF29  F00C         	goto	l286
  3303  001818                     u2420:
  3304  001818                     
  3305                           ;main.c: 385:             UART_printf("\r\n Minutos de riego establecidos! \r\n");
  3306  001818  0EB5               	movlw	low STR_12
  3307  00181A  6E02               	movwf	UART_printf@cadena^0,c
  3308  00181C  0E7D               	movlw	high STR_12
  3309  00181E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3310  001820  EC79  F00E         	call	_UART_printf	;wreg free
  3311  001824                     
  3312                           ;main.c: 387:             horarios[hora].tiempoRegar = tiempoRegar;
  3313  001824  5010               	movf	setTiempoRegar@hora^0,w,c
  3314  001826  0D03               	mullw	3
  3315  001828  0E02               	movlw	low (_horarios+2)
  3316  00182A  24F3               	addwf	243,w,c
  3317  00182C  6ED9               	movwf	fsr2l,c
  3318  00182E  0E01               	movlw	high (_horarios+2)
  3319  001830  20F4               	addwfc	prodh,w,c
  3320  001832  6EDA               	movwf	fsr2h,c
  3321  001834  C00F  FFDF         	movff	setTiempoRegar@tiempoRegar,indf2
  3322  001838                     
  3323                           ;main.c: 388:             minutosRegar = horarios[hora].tiempoRegar;
  3324  001838  5010               	movf	setTiempoRegar@hora^0,w,c
  3325  00183A  0D03               	mullw	3
  3326  00183C  0E02               	movlw	low (_horarios+2)
  3327  00183E  24F3               	addwf	243,w,c
  3328  001840  6ED9               	movwf	fsr2l,c
  3329  001842  0E01               	movlw	high (_horarios+2)
  3330  001844  20F4               	addwfc	prodh,w,c
  3331  001846  6EDA               	movwf	fsr2h,c
  3332  001848  50DF               	movf	indf2,w,c
  3333  00184A  0100               	movlb	0	; () banked
  3334  00184C  6FED               	movwf	_minutosRegar& (0+255),b
  3335  00184E                     
  3336                           ; BSR set to: 0
  3337                           ;main.c: 390:             escribeHorariosMemoria();
  3338  00184E  EC45  F009         	call	_escribeHorariosMemoria	;wreg free
  3339  001852                     l286:
  3340  001852  0012               	return		;funcret
  3341  001854                     __end_of_setTiempoRegar:
  3342                           	opt callstack 0
  3343                           
  3344 ;; *************** function _mostrarMenu *****************
  3345 ;; Defined at:
  3346 ;;		line 471 in file "main.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;		None
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;		None
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      void 
  3353 ;; Registers used:
  3354 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3360 ;;      Params:         0       0       0       0       0       0       0       0       0
  3361 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3362 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3363 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3364 ;;Total ram usage:        0 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; Hardware stack levels required when called:    3
  3367 ;; This function calls:
  3368 ;;		_UART_printf
  3369 ;; This function is called by:
  3370 ;;		_sistemaPrincipal
  3371 ;;		_sistemaRegado
  3372 ;;		_main
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376                           	psect	text10
  3377  001BCC                     __ptext10:
  3378                           	opt callstack 0
  3379  001BCC                     _mostrarMenu:
  3380                           	opt callstack 26
  3381  001BCC                     
  3382                           ;main.c: 473:     UART_printf("\r\n Ingresa una opcion a Realizar: \r\n");
  3383  001BCC  0EDA               	movlw	low STR_16
  3384  001BCE  6E02               	movwf	UART_printf@cadena^0,c
  3385  001BD0  0E7D               	movlw	high STR_16
  3386  001BD2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3387  001BD4  EC79  F00E         	call	_UART_printf	;wreg free
  3388                           
  3389                           ;main.c: 474:     UART_printf("\r\n 1. Fijar Hora Actual \r\n");
  3390  001BD8  0E07               	movlw	low STR_17
  3391  001BDA  6E02               	movwf	UART_printf@cadena^0,c
  3392  001BDC  0E7F               	movlw	high STR_17
  3393  001BDE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3394  001BE0  EC79  F00E         	call	_UART_printf	;wreg free
  3395                           
  3396                           ;main.c: 475:     UART_printf("\r\n 2. Asignar Horarios para regar \r\n");
  3397  001BE4  0E24               	movlw	low STR_18
  3398  001BE6  6E02               	movwf	UART_printf@cadena^0,c
  3399  001BE8  0E7E               	movlw	high STR_18
  3400  001BEA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3401  001BEC  EC79  F00E         	call	_UART_printf	;wreg free
  3402                           
  3403                           ;main.c: 476:     UART_printf("\r\n 3. Programar tiempo de riego en un horario \r\n");
  3404  001BF0  0EDC               	movlw	low STR_19
  3405  001BF2  6E02               	movwf	UART_printf@cadena^0,c
  3406  001BF4  0E7C               	movlw	high STR_19
  3407  001BF6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3408  001BF8  EC79  F00E         	call	_UART_printf	;wreg free
  3409                           
  3410                           ;main.c: 477:     UART_printf("\r\n 4. Dame datos del sistema \r\n");
  3411  001BFC  0E8B               	movlw	low STR_20
  3412  001BFE  6E02               	movwf	UART_printf@cadena^0,c
  3413  001C00  0E7E               	movlw	high STR_20
  3414  001C02  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3415  001C04  EC79  F00E         	call	_UART_printf	;wreg free
  3416                           
  3417                           ;main.c: 478:     UART_printf("\r\n 5. Mostrar valores sensores \r\n");
  3418  001C08  0E49               	movlw	low STR_21
  3419  001C0A  6E02               	movwf	UART_printf@cadena^0,c
  3420  001C0C  0E7E               	movlw	high STR_21
  3421  001C0E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3422  001C10  EC79  F00E         	call	_UART_printf	;wreg free
  3423                           
  3424                           ;main.c: 479:     UART_printf("\r\n Opcion:  \r");
  3425  001C14  0EDD               	movlw	low STR_22
  3426  001C16  6E02               	movwf	UART_printf@cadena^0,c
  3427  001C18  0E7F               	movlw	high STR_22
  3428  001C1A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3429  001C1C  EC79  F00E         	call	_UART_printf	;wreg free
  3430                           
  3431                           ;main.c: 480:     UART_printf("\r\n");
  3432  001C20  0E39               	movlw	low (STR_8+23)
  3433  001C22  6E02               	movwf	UART_printf@cadena^0,c
  3434  001C24  0E7F               	movlw	high (STR_8+23)
  3435  001C26  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3436  001C28  EC79  F00E         	call	_UART_printf	;wreg free
  3437  001C2C  0012               	return		;funcret
  3438  001C2E                     __end_of_mostrarMenu:
  3439                           	opt callstack 0
  3440                           
  3441 ;; *************** function _mostrarDatosSensoresWIFI *****************
  3442 ;; Defined at:
  3443 ;;		line 655 in file "main.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;		None
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  i               2  126[BANK0 ] int 
  3448 ;;  buffer         50   74[BANK0 ] unsigned char [50]
  3449 ;;  humedad         1  125[BANK0 ] unsigned char 
  3450 ;;  temperatura     1  124[BANK0 ] unsigned char 
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  1    wreg      void 
  3453 ;; Registers used:
  3454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3460 ;;      Params:         0       0       0       0       0       0       0       0       0
  3461 ;;      Locals:         0      54       0       0       0       0       0       0       0
  3462 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3463 ;;      Totals:         1      54       0       0       0       0       0       0       0
  3464 ;;Total ram usage:       55 bytes
  3465 ;; Hardware stack levels used:    1
  3466 ;; Hardware stack levels required when called:   10
  3467 ;; This function calls:
  3468 ;;		_UART_printf
  3469 ;;		_UART_write
  3470 ;;		_dameTemperaturaHumedad
  3471 ;;		_lecturaWifi
  3472 ;;		_sprintf
  3473 ;; This function is called by:
  3474 ;;		_sistemaPrincipal
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           	psect	text11
  3479  000EC4                     __ptext11:
  3480                           	opt callstack 0
  3481  000EC4                     _mostrarDatosSensoresWIFI:
  3482                           	opt callstack 19
  3483  000EC4                     
  3484                           ;main.c: 658:     char buffer[50];;main.c: 659:     unsigned char temperatura, humedad;;
      +                          main.c: 661:     lecturaWifi();
  3485  000EC4  ECE1  F007         	call	_lecturaWifi	;wreg free
  3486  000EC8                     
  3487                           ;main.c: 663:     UART_write('I');
  3488  000EC8  0E49               	movlw	73
  3489  000ECA  EC59  F011         	call	_UART_write
  3490  000ECE                     
  3491                           ;main.c: 666:     if (peticionLecturaSensores) {
  3492  000ECE  0100               	movlb	0	; () banked
  3493  000ED0  51EA               	movf	_peticionLecturaSensores& (0+255),w,b
  3494  000ED2  B4D8               	btfsc	status,2,c
  3495  000ED4  EF6E  F007         	goto	u2441
  3496  000ED8  EF70  F007         	goto	u2440
  3497  000EDC                     u2441:
  3498  000EDC  EFAB  F007         	goto	l3415
  3499  000EE0                     u2440:
  3500  000EE0                     
  3501                           ; BSR set to: 0
  3502                           ;main.c: 668:         for (int i = 0; i < 3; i++) {
  3503  000EE0  0E00               	movlw	0
  3504  000EE2  6FDF               	movwf	(mostrarDatosSensoresWIFI@i+1)& (0+255),b
  3505  000EE4  0E00               	movlw	0
  3506  000EE6  6FDE               	movwf	mostrarDatosSensoresWIFI@i& (0+255),b
  3507  000EE8                     l3407:
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;main.c: 670:             sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d %c
      +                          \r\n"
  3511  000EE8  0EAA               	movlw	low mostrarDatosSensoresWIFI@buffer
  3512  000EEA  6F60               	movwf	sprintf@s& (0+255),b
  3513  000EEC  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3514  000EEE  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3515  000EF0  0E0D               	movlw	low STR_31
  3516  000EF2  6F62               	movwf	sprintf@fmt& (0+255),b
  3517  000EF4  0E7D               	movlw	high STR_31
  3518  000EF6  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3519  000EF8  C0DE  F064         	movff	mostrarDatosSensoresWIFI@i,?_sprintf+4
  3520  000EFC  C0DF  F065         	movff	mostrarDatosSensoresWIFI@i+1,?_sprintf+5
  3521  000F00  90D8               	bcf	status,0,c
  3522  000F02  35DE               	rlcf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  3523  000F04  6ED9               	movwf	fsr2l,c
  3524  000F06  35DF               	rlcf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  3525  000F08  6EDA               	movwf	fsr2h,c
  3526  000F0A  0E48               	movlw	low _sensores
  3527  000F0C  26D9               	addwf	fsr2l,f,c
  3528  000F0E  0E01               	movlw	high _sensores
  3529  000F10  22DA               	addwfc	fsr2h,f,c
  3530  000F12  50DF               	movf	indf2,w,c
  3531  000F14  6E59               	movwf	??_mostrarDatosSensoresWIFI^0,c
  3532  000F16  5059               	movf	??_mostrarDatosSensoresWIFI^0,w,c
  3533  000F18  6F66               	movwf	(?_sprintf+6)& (0+255),b
  3534  000F1A  6B67               	clrf	(?_sprintf+7)& (0+255),b
  3535  000F1C  0E00               	movlw	0
  3536  000F1E  6F69               	movwf	(?_sprintf+9)& (0+255),b
  3537  000F20  0E25               	movlw	37
  3538  000F22  6F68               	movwf	(?_sprintf+8)& (0+255),b
  3539  000F24  EC2E  F00F         	call	_sprintf	;wreg free
  3540  000F28                     
  3541                           ;main.c: 672:             UART_printf(buffer);
  3542  000F28  0EAA               	movlw	low mostrarDatosSensoresWIFI@buffer
  3543  000F2A  6E02               	movwf	UART_printf@cadena^0,c
  3544  000F2C  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3545  000F2E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3546  000F30  EC79  F00E         	call	_UART_printf	;wreg free
  3547  000F34                     
  3548                           ;main.c: 674:         }
  3549  000F34  0100               	movlb	0	; () banked
  3550  000F36  4BDE               	infsnz	mostrarDatosSensoresWIFI@i& (0+255),f,b
  3551  000F38  2BDF               	incf	(mostrarDatosSensoresWIFI@i+1)& (0+255),f,b
  3552  000F3A                     
  3553                           ; BSR set to: 0
  3554  000F3A  BFDF               	btfsc	(mostrarDatosSensoresWIFI@i+1)& (0+255),7,b
  3555  000F3C  EFA9  F007         	goto	u2451
  3556  000F40  51DF               	movf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  3557  000F42  E109               	bnz	u2450
  3558  000F44  0E03               	movlw	3
  3559  000F46  5DDE               	subwf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  3560  000F48  A0D8               	btfss	status,0,c
  3561  000F4A  EFA9  F007         	goto	u2451
  3562  000F4E  EFAB  F007         	goto	u2450
  3563  000F52                     u2451:
  3564  000F52  EF74  F007         	goto	l3407
  3565  000F56                     u2450:
  3566  000F56                     l3415:
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;main.c: 678:     dameTemperaturaHumedad(&humedad, &temperatura);
  3570  000F56  0EDD               	movlw	low mostrarDatosSensoresWIFI@humedad
  3571  000F58  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  3572  000F5A  0E00               	movlw	high mostrarDatosSensoresWIFI@humedad
  3573  000F5C  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  3574  000F5E  0EDC               	movlw	low mostrarDatosSensoresWIFI@temperatura
  3575  000F60  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  3576  000F62  0E00               	movlw	high mostrarDatosSensoresWIFI@temperatura
  3577  000F64  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  3578  000F66  ECD8  F00A         	call	_dameTemperaturaHumedad	;wreg free
  3579                           
  3580                           ;main.c: 680:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", humedad);
  3581  000F6A  0EAA               	movlw	low mostrarDatosSensoresWIFI@buffer
  3582  000F6C  0100               	movlb	0	; () banked
  3583  000F6E  6F60               	movwf	sprintf@s& (0+255),b
  3584  000F70  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3585  000F72  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3586  000F74  0EAB               	movlw	low STR_29
  3587  000F76  6F62               	movwf	sprintf@fmt& (0+255),b
  3588  000F78  0E7E               	movlw	high STR_29
  3589  000F7A  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3590  000F7C  C0DD  F064         	movff	mostrarDatosSensoresWIFI@humedad,?_sprintf+4
  3591  000F80  6B65               	clrf	(?_sprintf+5)& (0+255),b
  3592  000F82  EC2E  F00F         	call	_sprintf	;wreg free
  3593  000F86                     
  3594                           ;main.c: 681:     UART_printf(buffer);
  3595  000F86  0EAA               	movlw	low mostrarDatosSensoresWIFI@buffer
  3596  000F88  6E02               	movwf	UART_printf@cadena^0,c
  3597  000F8A  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3598  000F8C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3599  000F8E  EC79  F00E         	call	_UART_printf	;wreg free
  3600  000F92                     
  3601                           ;main.c: 682:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", temperatura);
  3602  000F92  0EAA               	movlw	low mostrarDatosSensoresWIFI@buffer
  3603  000F94  0100               	movlb	0	; () banked
  3604  000F96  6F60               	movwf	sprintf@s& (0+255),b
  3605  000F98  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3606  000F9A  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3607  000F9C  0EEA               	movlw	low STR_30
  3608  000F9E  6F62               	movwf	sprintf@fmt& (0+255),b
  3609  000FA0  0E7E               	movlw	high STR_30
  3610  000FA2  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3611  000FA4  C0DC  F064         	movff	mostrarDatosSensoresWIFI@temperatura,?_sprintf+4
  3612  000FA8  6B65               	clrf	(?_sprintf+5)& (0+255),b
  3613  000FAA  EC2E  F00F         	call	_sprintf	;wreg free
  3614                           
  3615                           ;main.c: 683:     UART_printf(buffer);
  3616  000FAE  0EAA               	movlw	low mostrarDatosSensoresWIFI@buffer
  3617  000FB0  6E02               	movwf	UART_printf@cadena^0,c
  3618  000FB2  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3619  000FB4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3620  000FB6  EC79  F00E         	call	_UART_printf	;wreg free
  3621  000FBA                     
  3622                           ;main.c: 685:     UART_write('I');
  3623  000FBA  0E49               	movlw	73
  3624  000FBC  EC59  F011         	call	_UART_write
  3625  000FC0  0012               	return		;funcret
  3626  000FC2                     __end_of_mostrarDatosSensoresWIFI:
  3627                           	opt callstack 0
  3628                           
  3629 ;; *************** function _lecturaWifi *****************
  3630 ;; Defined at:
  3631 ;;		line 419 in file "main.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;		None
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  i               2   72[BANK0 ] int 
  3636 ;;  buffer         50   20[BANK0 ] unsigned char [50]
  3637 ;;  humedadMedid    1   71[BANK0 ] unsigned char 
  3638 ;;  Rx              1   70[BANK0 ] unsigned char 
  3639 ;; Return value:  Size  Location     Type
  3640 ;;                  1    wreg      void 
  3641 ;; Registers used:
  3642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3648 ;;      Params:         0       0       0       0       0       0       0       0       0
  3649 ;;      Locals:         0      54       0       0       0       0       0       0       0
  3650 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3651 ;;      Totals:         0      54       0       0       0       0       0       0       0
  3652 ;;Total ram usage:       54 bytes
  3653 ;; Hardware stack levels used:    1
  3654 ;; Hardware stack levels required when called:    9
  3655 ;; This function calls:
  3656 ;;		_UART_printf
  3657 ;;		_UART_read
  3658 ;;		_UART_write
  3659 ;;		_getValue
  3660 ;;		_restablecerDatosSensor
  3661 ;;		_sprintf
  3662 ;; This function is called by:
  3663 ;;		_sistemaRegado
  3664 ;;		_mostrarDatosSensoresWIFI
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           	psect	text12
  3669  000FC2                     __ptext12:
  3670                           	opt callstack 0
  3671  000FC2                     _lecturaWifi:
  3672                           	opt callstack 20
  3673  000FC2                     
  3674                           ;main.c: 421:     PIE1bits.RCIE = 0;
  3675  000FC2  9A9D               	bcf	157,5,c	;volatile
  3676  000FC4                     
  3677                           ;main.c: 424:     char buffer[50];;main.c: 426:     restablecerDatosSensor();
  3678  000FC4  EC57  F00F         	call	_restablecerDatosSensor	;wreg free
  3679  000FC8                     
  3680                           ;main.c: 428:     UART_write('R');
  3681  000FC8  0E52               	movlw	82
  3682  000FCA  EC59  F011         	call	_UART_write
  3683  000FCE                     
  3684                           ;main.c: 430:     UART_printf("\r\nSolicitando Muestreo de sensores\r\n\n");
  3685  000FCE  0E8F               	movlw	low STR_13
  3686  000FD0  6E02               	movwf	UART_printf@cadena^0,c
  3687  000FD2  0E7D               	movlw	high STR_13
  3688  000FD4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3689  000FD6  EC79  F00E         	call	_UART_printf	;wreg free
  3690  000FDA                     
  3691                           ;main.c: 432:     Rx = UART_read();
  3692  000FDA  EC04  F00F         	call	_UART_read	;wreg free
  3693  000FDE  0100               	movlb	0	; () banked
  3694  000FE0  6FA6               	movwf	lecturaWifi@Rx& (0+255),b
  3695  000FE2                     
  3696                           ; BSR set to: 0
  3697                           ;main.c: 434:     if (Rx == 'O') {
  3698  000FE2  0E4F               	movlw	79
  3699  000FE4  19A6               	xorwf	lecturaWifi@Rx& (0+255),w,b
  3700  000FE6  A4D8               	btfss	status,2,c
  3701  000FE8  EFF8  F007         	goto	u2211
  3702  000FEC  EFFA  F007         	goto	u2210
  3703  000FF0                     u2211:
  3704  000FF0  EF55  F008         	goto	l3221
  3705  000FF4                     u2210:
  3706  000FF4                     
  3707                           ; BSR set to: 0
  3708                           ;main.c: 436:         peticionLecturaSensores = 1;
  3709  000FF4  0E01               	movlw	1
  3710  000FF6  6FEA               	movwf	_peticionLecturaSensores& (0+255),b
  3711                           
  3712                           ;main.c: 438:         for (int i = 0; i < 3; i++) {
  3713  000FF8  0E00               	movlw	0
  3714  000FFA  6FA9               	movwf	(lecturaWifi@i+1)& (0+255),b
  3715  000FFC  0E00               	movlw	0
  3716  000FFE  6FA8               	movwf	lecturaWifi@i& (0+255),b
  3717  001000                     l3203:
  3718                           
  3719                           ; BSR set to: 0
  3720                           ;main.c: 440:             sprintf(buffer, "\r\nIngrese el porcentaje de humedad del sens
      +                          or %d\r\n", i);
  3721  001000  0E74               	movlw	low lecturaWifi@buffer
  3722  001002  6F60               	movwf	sprintf@s& (0+255),b
  3723  001004  0E00               	movlw	high lecturaWifi@buffer
  3724  001006  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3725  001008  0E77               	movlw	low STR_14
  3726  00100A  6F62               	movwf	sprintf@fmt& (0+255),b
  3727  00100C  0E7C               	movlw	high STR_14
  3728  00100E  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3729  001010  C0A8  F064         	movff	lecturaWifi@i,?_sprintf+4
  3730  001014  C0A9  F065         	movff	lecturaWifi@i+1,?_sprintf+5
  3731  001018  EC2E  F00F         	call	_sprintf	;wreg free
  3732  00101C                     
  3733                           ;main.c: 441:             UART_printf(buffer);
  3734  00101C  0E74               	movlw	low lecturaWifi@buffer
  3735  00101E  6E02               	movwf	UART_printf@cadena^0,c
  3736  001020  0E00               	movlw	high lecturaWifi@buffer
  3737  001022  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3738  001024  EC79  F00E         	call	_UART_printf	;wreg free
  3739  001028                     
  3740                           ;main.c: 443:             humedadMedida = getValue(3);
  3741  001028  0E00               	movlw	0
  3742  00102A  6E05               	movwf	(getValue@numCharacters+1)^0,c
  3743  00102C  0E03               	movlw	3
  3744  00102E  6E04               	movwf	getValue@numCharacters^0,c
  3745  001030  ECBA  F003         	call	_getValue	;wreg free
  3746  001034  0100               	movlb	0	; () banked
  3747  001036  6FA7               	movwf	lecturaWifi@humedadMedida& (0+255),b
  3748  001038                     
  3749                           ; BSR set to: 0
  3750                           ;main.c: 445:             if (humedadMedida != 'F')
  3751  001038  0E46               	movlw	70
  3752  00103A  19A7               	xorwf	lecturaWifi@humedadMedida& (0+255),w,b
  3753  00103C  B4D8               	btfsc	status,2,c
  3754  00103E  EF23  F008         	goto	u2221
  3755  001042  EF25  F008         	goto	u2220
  3756  001046                     u2221:
  3757  001046  EF32  F008         	goto	l3213
  3758  00104A                     u2220:
  3759  00104A                     
  3760                           ; BSR set to: 0
  3761                           ;main.c: 446:                 sensores[i].porcientoHumedad = humedadMedida;
  3762  00104A  90D8               	bcf	status,0,c
  3763  00104C  35A8               	rlcf	lecturaWifi@i& (0+255),w,b
  3764  00104E  6ED9               	movwf	fsr2l,c
  3765  001050  35A9               	rlcf	(lecturaWifi@i+1)& (0+255),w,b
  3766  001052  6EDA               	movwf	fsr2h,c
  3767  001054  0E48               	movlw	low _sensores
  3768  001056  26D9               	addwf	fsr2l,f,c
  3769  001058  0E01               	movlw	high _sensores
  3770  00105A  22DA               	addwfc	fsr2h,f,c
  3771  00105C  C0A7  FFDF         	movff	lecturaWifi@humedadMedida,indf2
  3772  001060  EF3D  F008         	goto	l3215
  3773  001064                     l3213:
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;main.c: 448:                 sensores[i].porcientoHumedad = 100;
  3777  001064  90D8               	bcf	status,0,c
  3778  001066  35A8               	rlcf	lecturaWifi@i& (0+255),w,b
  3779  001068  6ED9               	movwf	fsr2l,c
  3780  00106A  35A9               	rlcf	(lecturaWifi@i+1)& (0+255),w,b
  3781  00106C  6EDA               	movwf	fsr2h,c
  3782  00106E  0E48               	movlw	low _sensores
  3783  001070  26D9               	addwf	fsr2l,f,c
  3784  001072  0E01               	movlw	high _sensores
  3785  001074  22DA               	addwfc	fsr2h,f,c
  3786  001076  0E64               	movlw	100
  3787  001078  6EDF               	movwf	indf2,c
  3788  00107A                     l3215:
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;main.c: 450:         }
  3792  00107A  4BA8               	infsnz	lecturaWifi@i& (0+255),f,b
  3793  00107C  2BA9               	incf	(lecturaWifi@i+1)& (0+255),f,b
  3794  00107E                     
  3795                           ; BSR set to: 0
  3796  00107E  BFA9               	btfsc	(lecturaWifi@i+1)& (0+255),7,b
  3797  001080  EF4B  F008         	goto	u2231
  3798  001084  51A9               	movf	(lecturaWifi@i+1)& (0+255),w,b
  3799  001086  E109               	bnz	u2230
  3800  001088  0E03               	movlw	3
  3801  00108A  5DA8               	subwf	lecturaWifi@i& (0+255),w,b
  3802  00108C  A0D8               	btfss	status,0,c
  3803  00108E  EF4B  F008         	goto	u2231
  3804  001092  EF4D  F008         	goto	u2230
  3805  001096                     u2231:
  3806  001096  EF00  F008         	goto	l3203
  3807  00109A                     u2230:
  3808  00109A                     
  3809                           ; BSR set to: 0
  3810                           ;main.c: 452:         UART_printf("\r\nSensores Leidos con Exito!\r\n\n");
  3811  00109A  0E6B               	movlw	low STR_15
  3812  00109C  6E02               	movwf	UART_printf@cadena^0,c
  3813  00109E  0E7E               	movlw	high STR_15
  3814  0010A0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3815  0010A2  EC79  F00E         	call	_UART_printf	;wreg free
  3816                           
  3817                           ;main.c: 454:     } else {
  3818  0010A6  EF57  F008         	goto	l3223
  3819  0010AA                     l3221:
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;main.c: 455:         peticionLecturaSensores = 0;
  3823  0010AA  0E00               	movlw	0
  3824  0010AC  6FEA               	movwf	_peticionLecturaSensores& (0+255),b
  3825  0010AE                     l3223:
  3826                           
  3827                           ;main.c: 458:     PIE1bits.RCIE = 1;
  3828  0010AE  8A9D               	bsf	157,5,c	;volatile
  3829  0010B0  0012               	return		;funcret
  3830  0010B2                     __end_of_lecturaWifi:
  3831                           	opt callstack 0
  3832                           
  3833 ;; *************** function _restablecerDatosSensor *****************
  3834 ;; Defined at:
  3835 ;;		line 414 in file "main.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;		None
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;  i               2    4[COMRAM] int 
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  1    wreg      void 
  3842 ;; Registers used:
  3843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3849 ;;      Params:         0       0       0       0       0       0       0       0       0
  3850 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3851 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3852 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3853 ;;Total ram usage:        2 bytes
  3854 ;; Hardware stack levels used:    1
  3855 ;; Hardware stack levels required when called:    2
  3856 ;; This function calls:
  3857 ;;		_constructorSensor
  3858 ;; This function is called by:
  3859 ;;		_lecturaWifi
  3860 ;;		_main
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text13
  3865  001EAE                     __ptext13:
  3866                           	opt callstack 0
  3867  001EAE                     _restablecerDatosSensor:
  3868                           	opt callstack 26
  3869  001EAE                     
  3870                           ;main.c: 415:     for (int i = 0; i < 3; i++)
  3871  001EAE  0E00               	movlw	0
  3872  001EB0  6E06               	movwf	(restablecerDatosSensor@i+1)^0,c
  3873  001EB2  0E00               	movlw	0
  3874  001EB4  6E05               	movwf	restablecerDatosSensor@i^0,c
  3875  001EB6                     l3095:
  3876                           
  3877                           ;main.c: 416:         constructorSensor(sensores[i], 0, i);
  3878  001EB6  90D8               	bcf	status,0,c
  3879  001EB8  3405               	rlcf	restablecerDatosSensor@i^0,w,c
  3880  001EBA  6ED9               	movwf	fsr2l,c
  3881  001EBC  3406               	rlcf	(restablecerDatosSensor@i+1)^0,w,c
  3882  001EBE  6EDA               	movwf	fsr2h,c
  3883  001EC0  0E48               	movlw	low _sensores
  3884  001EC2  26D9               	addwf	fsr2l,f,c
  3885  001EC4  0E01               	movlw	high _sensores
  3886  001EC6  22DA               	addwfc	fsr2h,f,c
  3887  001EC8  CFDE F001          	movff	postinc2,constructorSensor@s
  3888  001ECC  CFDD F002          	movff	postdec2,constructorSensor@s+1
  3889  001ED0  0E00               	movlw	0
  3890  001ED2  6E03               	movwf	constructorSensor@porcientoHumedad^0,c
  3891  001ED4  C005  F004         	movff	restablecerDatosSensor@i,constructorSensor@pin
  3892  001ED8  EC75  F011         	call	_constructorSensor	;wreg free
  3893  001EDC  4A05               	infsnz	restablecerDatosSensor@i^0,f,c
  3894  001EDE  2A06               	incf	(restablecerDatosSensor@i+1)^0,f,c
  3895  001EE0  BE06               	btfsc	(restablecerDatosSensor@i+1)^0,7,c
  3896  001EE2  EF7C  F00F         	goto	u2161
  3897  001EE6  5006               	movf	(restablecerDatosSensor@i+1)^0,w,c
  3898  001EE8  E109               	bnz	u2160
  3899  001EEA  0E03               	movlw	3
  3900  001EEC  5C05               	subwf	restablecerDatosSensor@i^0,w,c
  3901  001EEE  A0D8               	btfss	status,0,c
  3902  001EF0  EF7C  F00F         	goto	u2161
  3903  001EF4  EF7E  F00F         	goto	u2160
  3904  001EF8                     u2161:
  3905  001EF8  EF5B  F00F         	goto	l3095
  3906  001EFC                     u2160:
  3907  001EFC  0012               	return		;funcret
  3908  001EFE                     __end_of_restablecerDatosSensor:
  3909                           	opt callstack 0
  3910                           
  3911 ;; *************** function _constructorSensor *****************
  3912 ;; Defined at:
  3913 ;;		line 125 in file "main.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  s               2    0[COMRAM] struct .
  3916 ;;  porcientoHum    1    2[COMRAM] unsigned char 
  3917 ;;  pin             1    3[COMRAM] unsigned char 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;		None
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      void 
  3922 ;; Registers used:
  3923 ;;		None
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3929 ;;      Params:         4       0       0       0       0       0       0       0       0
  3930 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3931 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3932 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3933 ;;Total ram usage:        4 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; Hardware stack levels required when called:    1
  3936 ;; This function calls:
  3937 ;;		Nothing
  3938 ;; This function is called by:
  3939 ;;		_restablecerDatosSensor
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text14
  3944  0022EA                     __ptext14:
  3945                           	opt callstack 0
  3946  0022EA                     _constructorSensor:
  3947                           	opt callstack 26
  3948  0022EA                     
  3949                           ;main.c: 126:     s.porcientoHumedad = porcientoHumedad;
  3950  0022EA  C003  F001         	movff	constructorSensor@porcientoHumedad,constructorSensor@s
  3951                           
  3952                           ;main.c: 127:     s.pinSensor = pin;
  3953  0022EE  C004  F002         	movff	constructorSensor@pin,constructorSensor@s+1
  3954  0022F2  0012               	return		;funcret
  3955  0022F4                     __end_of_constructorSensor:
  3956                           	opt callstack 0
  3957                           
  3958 ;; *************** function _mostrarDatosSensores *****************
  3959 ;; Defined at:
  3960 ;;		line 626 in file "main.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;		None
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;  i               2   72[BANK0 ] int 
  3965 ;;  buffer         50   20[BANK0 ] unsigned char [50]
  3966 ;;  humedad         1   71[BANK0 ] unsigned char 
  3967 ;;  temperatura     1   70[BANK0 ] unsigned char 
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  1    wreg      void 
  3970 ;; Registers used:
  3971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3977 ;;      Params:         0       0       0       0       0       0       0       0       0
  3978 ;;      Locals:         0      54       0       0       0       0       0       0       0
  3979 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3980 ;;      Totals:         1      54       0       0       0       0       0       0       0
  3981 ;;Total ram usage:       55 bytes
  3982 ;; Hardware stack levels used:    1
  3983 ;; Hardware stack levels required when called:    9
  3984 ;; This function calls:
  3985 ;;		_UART_printf
  3986 ;;		_UART_write
  3987 ;;		_dameTemperaturaHumedad
  3988 ;;		_lecturaAnalogaSensores
  3989 ;;		_sprintf
  3990 ;; This function is called by:
  3991 ;;		_sistemaPrincipal
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           	psect	text15
  3996  0010B2                     __ptext15:
  3997                           	opt callstack 0
  3998  0010B2                     _mostrarDatosSensores:
  3999                           	opt callstack 20
  4000  0010B2                     
  4001                           ;main.c: 628:     char buffer[50];;main.c: 629:     unsigned char temperatura, humedad;;
      +                          main.c: 631:     dameTemperaturaHumedad(&humedad, &temperatura);
  4002  0010B2  0EA7               	movlw	low mostrarDatosSensores@humedad
  4003  0010B4  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  4004  0010B6  0E00               	movlw	high mostrarDatosSensores@humedad
  4005  0010B8  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  4006  0010BA  0EA6               	movlw	low mostrarDatosSensores@temperatura
  4007  0010BC  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  4008  0010BE  0E00               	movlw	high mostrarDatosSensores@temperatura
  4009  0010C0  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  4010  0010C2  ECD8  F00A         	call	_dameTemperaturaHumedad	;wreg free
  4011  0010C6                     
  4012                           ;main.c: 633:     UART_write('I');
  4013  0010C6  0E49               	movlw	73
  4014  0010C8  EC59  F011         	call	_UART_write
  4015  0010CC                     
  4016                           ;main.c: 636:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", humedad);
  4017  0010CC  0E74               	movlw	low mostrarDatosSensores@buffer
  4018  0010CE  0100               	movlb	0	; () banked
  4019  0010D0  6F60               	movwf	sprintf@s& (0+255),b
  4020  0010D2  0E00               	movlw	high mostrarDatosSensores@buffer
  4021  0010D4  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4022  0010D6  0EAB               	movlw	low STR_29
  4023  0010D8  6F62               	movwf	sprintf@fmt& (0+255),b
  4024  0010DA  0E7E               	movlw	high STR_29
  4025  0010DC  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4026  0010DE  C0A7  F064         	movff	mostrarDatosSensores@humedad,?_sprintf+4
  4027  0010E2  6B65               	clrf	(?_sprintf+5)& (0+255),b
  4028  0010E4  EC2E  F00F         	call	_sprintf	;wreg free
  4029  0010E8                     
  4030                           ;main.c: 637:     UART_printf(buffer);
  4031  0010E8  0E74               	movlw	low mostrarDatosSensores@buffer
  4032  0010EA  6E02               	movwf	UART_printf@cadena^0,c
  4033  0010EC  0E00               	movlw	high mostrarDatosSensores@buffer
  4034  0010EE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4035  0010F0  EC79  F00E         	call	_UART_printf	;wreg free
  4036  0010F4                     
  4037                           ;main.c: 638:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", temperatura);
  4038  0010F4  0E74               	movlw	low mostrarDatosSensores@buffer
  4039  0010F6  0100               	movlb	0	; () banked
  4040  0010F8  6F60               	movwf	sprintf@s& (0+255),b
  4041  0010FA  0E00               	movlw	high mostrarDatosSensores@buffer
  4042  0010FC  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4043  0010FE  0EEA               	movlw	low STR_30
  4044  001100  6F62               	movwf	sprintf@fmt& (0+255),b
  4045  001102  0E7E               	movlw	high STR_30
  4046  001104  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4047  001106  C0A6  F064         	movff	mostrarDatosSensores@temperatura,?_sprintf+4
  4048  00110A  6B65               	clrf	(?_sprintf+5)& (0+255),b
  4049  00110C  EC2E  F00F         	call	_sprintf	;wreg free
  4050  001110                     
  4051                           ;main.c: 639:     UART_printf(buffer);
  4052  001110  0E74               	movlw	low mostrarDatosSensores@buffer
  4053  001112  6E02               	movwf	UART_printf@cadena^0,c
  4054  001114  0E00               	movlw	high mostrarDatosSensores@buffer
  4055  001116  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4056  001118  EC79  F00E         	call	_UART_printf	;wreg free
  4057  00111C                     
  4058                           ;main.c: 641:     lecturaAnalogaSensores();
  4059  00111C  EC32  F00B         	call	_lecturaAnalogaSensores	;wreg free
  4060  001120                     
  4061                           ;main.c: 644:     for (int i = 0; i < 3; i++) {
  4062  001120  0E00               	movlw	0
  4063  001122  0100               	movlb	0	; () banked
  4064  001124  6FA9               	movwf	(mostrarDatosSensores@i+1)& (0+255),b
  4065  001126  0E00               	movlw	0
  4066  001128  6FA8               	movwf	mostrarDatosSensores@i& (0+255),b
  4067  00112A                     l3443:
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;main.c: 646:         sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d %c\r\n
      +                          "
  4071  00112A  0E74               	movlw	low mostrarDatosSensores@buffer
  4072  00112C  6F60               	movwf	sprintf@s& (0+255),b
  4073  00112E  0E00               	movlw	high mostrarDatosSensores@buffer
  4074  001130  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4075  001132  0E0D               	movlw	low STR_31
  4076  001134  6F62               	movwf	sprintf@fmt& (0+255),b
  4077  001136  0E7D               	movlw	high STR_31
  4078  001138  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4079  00113A  C0A8  F064         	movff	mostrarDatosSensores@i,?_sprintf+4
  4080  00113E  C0A9  F065         	movff	mostrarDatosSensores@i+1,?_sprintf+5
  4081  001142  90D8               	bcf	status,0,c
  4082  001144  35A8               	rlcf	mostrarDatosSensores@i& (0+255),w,b
  4083  001146  6ED9               	movwf	fsr2l,c
  4084  001148  35A9               	rlcf	(mostrarDatosSensores@i+1)& (0+255),w,b
  4085  00114A  6EDA               	movwf	fsr2h,c
  4086  00114C  0E48               	movlw	low _sensores
  4087  00114E  26D9               	addwf	fsr2l,f,c
  4088  001150  0E01               	movlw	high _sensores
  4089  001152  22DA               	addwfc	fsr2h,f,c
  4090  001154  50DF               	movf	indf2,w,c
  4091  001156  6E59               	movwf	??_mostrarDatosSensores^0,c
  4092  001158  5059               	movf	??_mostrarDatosSensores^0,w,c
  4093  00115A  6F66               	movwf	(?_sprintf+6)& (0+255),b
  4094  00115C  6B67               	clrf	(?_sprintf+7)& (0+255),b
  4095  00115E  0E00               	movlw	0
  4096  001160  6F69               	movwf	(?_sprintf+9)& (0+255),b
  4097  001162  0E25               	movlw	37
  4098  001164  6F68               	movwf	(?_sprintf+8)& (0+255),b
  4099  001166  EC2E  F00F         	call	_sprintf	;wreg free
  4100  00116A                     
  4101                           ;main.c: 648:         UART_printf(buffer);
  4102  00116A  0E74               	movlw	low mostrarDatosSensores@buffer
  4103  00116C  6E02               	movwf	UART_printf@cadena^0,c
  4104  00116E  0E00               	movlw	high mostrarDatosSensores@buffer
  4105  001170  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4106  001172  EC79  F00E         	call	_UART_printf	;wreg free
  4107  001176                     
  4108                           ;main.c: 649:     }
  4109  001176  0100               	movlb	0	; () banked
  4110  001178  4BA8               	infsnz	mostrarDatosSensores@i& (0+255),f,b
  4111  00117A  2BA9               	incf	(mostrarDatosSensores@i+1)& (0+255),f,b
  4112  00117C                     
  4113                           ; BSR set to: 0
  4114  00117C  BFA9               	btfsc	(mostrarDatosSensores@i+1)& (0+255),7,b
  4115  00117E  EFCA  F008         	goto	u2461
  4116  001182  51A9               	movf	(mostrarDatosSensores@i+1)& (0+255),w,b
  4117  001184  E109               	bnz	u2460
  4118  001186  0E03               	movlw	3
  4119  001188  5DA8               	subwf	mostrarDatosSensores@i& (0+255),w,b
  4120  00118A  A0D8               	btfss	status,0,c
  4121  00118C  EFCA  F008         	goto	u2461
  4122  001190  EFCC  F008         	goto	u2460
  4123  001194                     u2461:
  4124  001194  EF95  F008         	goto	l3443
  4125  001198                     u2460:
  4126  001198                     
  4127                           ; BSR set to: 0
  4128                           ;main.c: 651:     UART_write('I');
  4129  001198  0E49               	movlw	73
  4130  00119A  EC59  F011         	call	_UART_write
  4131  00119E  0012               	return		;funcret
  4132  0011A0                     __end_of_mostrarDatosSensores:
  4133                           	opt callstack 0
  4134                           
  4135 ;; *************** function _lecturaAnalogaSensores *****************
  4136 ;; Defined at:
  4137 ;;		line 462 in file "main.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;		None
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;  i               2   47[COMRAM] int 
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  1    wreg      void 
  4144 ;; Registers used:
  4145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4151 ;;      Params:         0       0       0       0       0       0       0       0       0
  4152 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4153 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4154 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4155 ;;Total ram usage:        3 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; Hardware stack levels required when called:    3
  4158 ;; This function calls:
  4159 ;;		_dameHumedadSuelo
  4160 ;;		_map
  4161 ;; This function is called by:
  4162 ;;		_sistemaRegado
  4163 ;;		_mostrarDatosSensores
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           	psect	text16
  4168  001664                     __ptext16:
  4169                           	opt callstack 0
  4170  001664                     _lecturaAnalogaSensores:
  4171                           	opt callstack 26
  4172  001664                     
  4173                           ;main.c: 464:     for (int i = 0; i < 3; i++) {
  4174  001664  0E00               	movlw	0
  4175  001666  6E31               	movwf	(lecturaAnalogaSensores@i+1)^0,c
  4176  001668  0E00               	movlw	0
  4177  00166A  6E30               	movwf	lecturaAnalogaSensores@i^0,c
  4178  00166C                     l3231:
  4179                           
  4180                           ;main.c: 465:         sensores[i].porcientoHumedad = map(dameHumedadSuelo(i), 0, 1023, 1
      +                          00, 0);
  4181  00166C  90D8               	bcf	status,0,c
  4182  00166E  3430               	rlcf	lecturaAnalogaSensores@i^0,w,c
  4183  001670  6ED9               	movwf	fsr2l,c
  4184  001672  3431               	rlcf	(lecturaAnalogaSensores@i+1)^0,w,c
  4185  001674  6EDA               	movwf	fsr2h,c
  4186  001676  0E48               	movlw	low _sensores
  4187  001678  26D9               	addwf	fsr2l,f,c
  4188  00167A  0E01               	movlw	high _sensores
  4189  00167C  22DA               	addwfc	fsr2h,f,c
  4190  00167E  5030               	movf	lecturaAnalogaSensores@i^0,w,c
  4191  001680  ECA2  F00F         	call	_dameHumedadSuelo
  4192  001684  C001  F01B         	movff	?_dameHumedadSuelo,map@x
  4193  001688  C002  F01C         	movff	?_dameHumedadSuelo+1,map@x+1
  4194  00168C  0E00               	movlw	0
  4195  00168E  BE1C               	btfsc	(map@x+1)^0,7,c
  4196  001690  0EFF               	movlw	-1
  4197  001692  6E1D               	movwf	(map@x+2)^0,c
  4198  001694  6E1E               	movwf	(map@x+3)^0,c
  4199  001696  0E00               	movlw	0
  4200  001698  6E1F               	movwf	map@in_min^0,c
  4201  00169A  0E00               	movlw	0
  4202  00169C  6E20               	movwf	(map@in_min+1)^0,c
  4203  00169E  0E00               	movlw	0
  4204  0016A0  6E21               	movwf	(map@in_min+2)^0,c
  4205  0016A2  0E00               	movlw	0
  4206  0016A4  6E22               	movwf	(map@in_min+3)^0,c
  4207  0016A6  0EFF               	movlw	255
  4208  0016A8  6E23               	movwf	map@in_max^0,c
  4209  0016AA  0E03               	movlw	3
  4210  0016AC  6E24               	movwf	(map@in_max+1)^0,c
  4211  0016AE  0E00               	movlw	0
  4212  0016B0  6E25               	movwf	(map@in_max+2)^0,c
  4213  0016B2  0E00               	movlw	0
  4214  0016B4  6E26               	movwf	(map@in_max+3)^0,c
  4215  0016B6  0E64               	movlw	100
  4216  0016B8  6E27               	movwf	map@out_min^0,c
  4217  0016BA  0E00               	movlw	0
  4218  0016BC  6E28               	movwf	(map@out_min+1)^0,c
  4219  0016BE  0E00               	movlw	0
  4220  0016C0  6E29               	movwf	(map@out_min+2)^0,c
  4221  0016C2  0E00               	movlw	0
  4222  0016C4  6E2A               	movwf	(map@out_min+3)^0,c
  4223  0016C6  0E00               	movlw	0
  4224  0016C8  6E2B               	movwf	map@out_max^0,c
  4225  0016CA  0E00               	movlw	0
  4226  0016CC  6E2C               	movwf	(map@out_max+1)^0,c
  4227  0016CE  0E00               	movlw	0
  4228  0016D0  6E2D               	movwf	(map@out_max+2)^0,c
  4229  0016D2  0E00               	movlw	0
  4230  0016D4  6E2E               	movwf	(map@out_max+3)^0,c
  4231  0016D6  EC08  F00D         	call	_map	;wreg free
  4232  0016DA  501B               	movf	?_map^0,w,c
  4233  0016DC  6EDF               	movwf	indf2,c
  4234  0016DE                     
  4235                           ;main.c: 466:         _delay((unsigned long)((5)*(4000000/4000.0)));
  4236  0016DE  0E07               	movlw	7
  4237  0016E0  6E2F               	movwf	??_lecturaAnalogaSensores^0,c
  4238  0016E2  0E7D               	movlw	125
  4239  0016E4                     u2677:
  4240  0016E4  2EE8               	decfsz	wreg,f,c
  4241  0016E6  D7FE               	bra	u2677
  4242  0016E8  2E2F               	decfsz	??_lecturaAnalogaSensores^0,f,c
  4243  0016EA  D7FC               	bra	u2677
  4244  0016EC  F000               	nop	
  4245  0016EE                     
  4246                           ;main.c: 467:     }
  4247  0016EE  4A30               	infsnz	lecturaAnalogaSensores@i^0,f,c
  4248  0016F0  2A31               	incf	(lecturaAnalogaSensores@i+1)^0,f,c
  4249  0016F2  BE31               	btfsc	(lecturaAnalogaSensores@i+1)^0,7,c
  4250  0016F4  EF85  F00B         	goto	u2241
  4251  0016F8  5031               	movf	(lecturaAnalogaSensores@i+1)^0,w,c
  4252  0016FA  E109               	bnz	u2240
  4253  0016FC  0E03               	movlw	3
  4254  0016FE  5C30               	subwf	lecturaAnalogaSensores@i^0,w,c
  4255  001700  A0D8               	btfss	status,0,c
  4256  001702  EF85  F00B         	goto	u2241
  4257  001706  EF87  F00B         	goto	u2240
  4258  00170A                     u2241:
  4259  00170A  EF36  F00B         	goto	l3231
  4260  00170E                     u2240:
  4261  00170E  0012               	return		;funcret
  4262  001710                     __end_of_lecturaAnalogaSensores:
  4263                           	opt callstack 0
  4264                           
  4265 ;; *************** function _map *****************
  4266 ;; Defined at:
  4267 ;;		line 121 in file "main.c"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;  x               4   26[COMRAM] long 
  4270 ;;  in_min          4   30[COMRAM] long 
  4271 ;;  in_max          4   34[COMRAM] long 
  4272 ;;  out_min         4   38[COMRAM] long 
  4273 ;;  out_max         4   42[COMRAM] long 
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;		None
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  4   26[COMRAM] long 
  4278 ;; Registers used:
  4279 ;;		wreg, status,2, status,0, cstack
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4285 ;;      Params:        20       0       0       0       0       0       0       0       0
  4286 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4287 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4288 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4289 ;;Total ram usage:       20 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; Hardware stack levels required when called:    2
  4292 ;; This function calls:
  4293 ;;		___aldiv
  4294 ;;		___lmul
  4295 ;; This function is called by:
  4296 ;;		_lecturaAnalogaSensores
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300                           	psect	text17
  4301  001A10                     __ptext17:
  4302                           	opt callstack 0
  4303  001A10                     _map:
  4304                           	opt callstack 26
  4305  001A10                     
  4306                           ;main.c: 122:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  4307  001A10  501F               	movf	map@in_min^0,w,c
  4308  001A12  5C1B               	subwf	map@x^0,w,c
  4309  001A14  6E01               	movwf	___lmul@multiplier^0,c
  4310  001A16  5020               	movf	(map@in_min+1)^0,w,c
  4311  001A18  581C               	subwfb	(map@x+1)^0,w,c
  4312  001A1A  6E02               	movwf	(___lmul@multiplier+1)^0,c
  4313  001A1C  5021               	movf	(map@in_min+2)^0,w,c
  4314  001A1E  581D               	subwfb	(map@x+2)^0,w,c
  4315  001A20  6E03               	movwf	(___lmul@multiplier+2)^0,c
  4316  001A22  5022               	movf	(map@in_min+3)^0,w,c
  4317  001A24  581E               	subwfb	(map@x+3)^0,w,c
  4318  001A26  6E04               	movwf	(___lmul@multiplier+3)^0,c
  4319  001A28  5027               	movf	map@out_min^0,w,c
  4320  001A2A  5C2B               	subwf	map@out_max^0,w,c
  4321  001A2C  6E05               	movwf	___lmul@multiplicand^0,c
  4322  001A2E  5028               	movf	(map@out_min+1)^0,w,c
  4323  001A30  582C               	subwfb	(map@out_max+1)^0,w,c
  4324  001A32  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4325  001A34  5029               	movf	(map@out_min+2)^0,w,c
  4326  001A36  582D               	subwfb	(map@out_max+2)^0,w,c
  4327  001A38  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4328  001A3A  502A               	movf	(map@out_min+3)^0,w,c
  4329  001A3C  582E               	subwfb	(map@out_max+3)^0,w,c
  4330  001A3E  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4331  001A40  EC7D  F00D         	call	___lmul	;wreg free
  4332  001A44  C001  F00D         	movff	?___lmul,___aldiv@dividend
  4333  001A48  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  4334  001A4C  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  4335  001A50  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  4336  001A54  501F               	movf	map@in_min^0,w,c
  4337  001A56  5C23               	subwf	map@in_max^0,w,c
  4338  001A58  6E11               	movwf	___aldiv@divisor^0,c
  4339  001A5A  5020               	movf	(map@in_min+1)^0,w,c
  4340  001A5C  5824               	subwfb	(map@in_max+1)^0,w,c
  4341  001A5E  6E12               	movwf	(___aldiv@divisor+1)^0,c
  4342  001A60  5021               	movf	(map@in_min+2)^0,w,c
  4343  001A62  5825               	subwfb	(map@in_max+2)^0,w,c
  4344  001A64  6E13               	movwf	(___aldiv@divisor+2)^0,c
  4345  001A66  5022               	movf	(map@in_min+3)^0,w,c
  4346  001A68  5826               	subwfb	(map@in_max+3)^0,w,c
  4347  001A6A  6E14               	movwf	(___aldiv@divisor+3)^0,c
  4348  001A6C  ECDC  F006         	call	___aldiv	;wreg free
  4349  001A70  5027               	movf	map@out_min^0,w,c
  4350  001A72  240D               	addwf	?___aldiv^0,w,c
  4351  001A74  6E1B               	movwf	?_map^0,c
  4352  001A76  5028               	movf	(map@out_min+1)^0,w,c
  4353  001A78  200E               	addwfc	(?___aldiv+1)^0,w,c
  4354  001A7A  6E1C               	movwf	(?_map+1)^0,c
  4355  001A7C  5029               	movf	(map@out_min+2)^0,w,c
  4356  001A7E  200F               	addwfc	(?___aldiv+2)^0,w,c
  4357  001A80  6E1D               	movwf	(?_map+2)^0,c
  4358  001A82  502A               	movf	(map@out_min+3)^0,w,c
  4359  001A84  2010               	addwfc	(?___aldiv+3)^0,w,c
  4360  001A86  6E1E               	movwf	(?_map+3)^0,c
  4361  001A88  0012               	return		;funcret
  4362  001A8A                     __end_of_map:
  4363                           	opt callstack 0
  4364                           
  4365 ;; *************** function ___lmul *****************
  4366 ;; Defined at:
  4367 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;  multiplier      4    0[COMRAM] unsigned long 
  4370 ;;  multiplicand    4    4[COMRAM] unsigned long 
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;  product         4    8[COMRAM] unsigned long 
  4373 ;; Return value:  Size  Location     Type
  4374 ;;                  4    0[COMRAM] unsigned long 
  4375 ;; Registers used:
  4376 ;;		wreg, status,2, status,0
  4377 ;; Tracked objects:
  4378 ;;		On entry : 0/0
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: 0/0
  4381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4382 ;;      Params:         8       0       0       0       0       0       0       0       0
  4383 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4384 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4385 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4386 ;;Total ram usage:       12 bytes
  4387 ;; Hardware stack levels used:    1
  4388 ;; Hardware stack levels required when called:    1
  4389 ;; This function calls:
  4390 ;;		Nothing
  4391 ;; This function is called by:
  4392 ;;		_map
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395                           
  4396                           	psect	text18
  4397  001AFA                     __ptext18:
  4398                           	opt callstack 0
  4399  001AFA                     ___lmul:
  4400                           	opt callstack 26
  4401  001AFA  0E00               	movlw	0
  4402  001AFC  6E09               	movwf	___lmul@product^0,c
  4403  001AFE  0E00               	movlw	0
  4404  001B00  6E0A               	movwf	(___lmul@product+1)^0,c
  4405  001B02  0E00               	movlw	0
  4406  001B04  6E0B               	movwf	(___lmul@product+2)^0,c
  4407  001B06  0E00               	movlw	0
  4408  001B08  6E0C               	movwf	(___lmul@product+3)^0,c
  4409  001B0A                     l2863:
  4410  001B0A  A001               	btfss	___lmul@multiplier^0,0,c
  4411  001B0C  EF8A  F00D         	goto	u1951
  4412  001B10  EF8C  F00D         	goto	u1950
  4413  001B14                     u1951:
  4414  001B14  EF94  F00D         	goto	l2867
  4415  001B18                     u1950:
  4416  001B18  5005               	movf	___lmul@multiplicand^0,w,c
  4417  001B1A  2609               	addwf	___lmul@product^0,f,c
  4418  001B1C  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  4419  001B1E  220A               	addwfc	(___lmul@product+1)^0,f,c
  4420  001B20  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  4421  001B22  220B               	addwfc	(___lmul@product+2)^0,f,c
  4422  001B24  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  4423  001B26  220C               	addwfc	(___lmul@product+3)^0,f,c
  4424  001B28                     l2867:
  4425  001B28  90D8               	bcf	status,0,c
  4426  001B2A  3605               	rlcf	___lmul@multiplicand^0,f,c
  4427  001B2C  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4428  001B2E  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4429  001B30  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4430  001B32  90D8               	bcf	status,0,c
  4431  001B34  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  4432  001B36  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  4433  001B38  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  4434  001B3A  3201               	rrcf	___lmul@multiplier^0,f,c
  4435  001B3C  5001               	movf	___lmul@multiplier^0,w,c
  4436  001B3E  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  4437  001B40  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  4438  001B42  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  4439  001B44  A4D8               	btfss	status,2,c
  4440  001B46  EFA7  F00D         	goto	u1961
  4441  001B4A  EFA9  F00D         	goto	u1960
  4442  001B4E                     u1961:
  4443  001B4E  EF85  F00D         	goto	l2863
  4444  001B52                     u1960:
  4445  001B52  C009  F001         	movff	___lmul@product,?___lmul
  4446  001B56  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  4447  001B5A  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  4448  001B5E  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  4449  001B62  0012               	return		;funcret
  4450  001B64                     __end_of___lmul:
  4451                           	opt callstack 0
  4452                           
  4453 ;; *************** function _dameHumedadSuelo *****************
  4454 ;; Defined at:
  4455 ;;		line 397 in file "main.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;  canalLeer       1    wreg     unsigned char 
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;  canalLeer       1    4[COMRAM] unsigned char 
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  2    0[COMRAM] short 
  4462 ;; Registers used:
  4463 ;;		wreg, status,2, status,0
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4469 ;;      Params:         2       0       0       0       0       0       0       0       0
  4470 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4471 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4472 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4473 ;;Total ram usage:        5 bytes
  4474 ;; Hardware stack levels used:    1
  4475 ;; Hardware stack levels required when called:    1
  4476 ;; This function calls:
  4477 ;;		Nothing
  4478 ;; This function is called by:
  4479 ;;		_lecturaAnalogaSensores
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483                           	psect	text19
  4484  001F44                     __ptext19:
  4485                           	opt callstack 0
  4486  001F44                     _dameHumedadSuelo:
  4487                           	opt callstack 27
  4488                           
  4489                           ;incstack = 0
  4490                           ;dameHumedadSuelo@canalLeer stored from wreg
  4491  001F44  6E05               	movwf	dameHumedadSuelo@canalLeer^0,c
  4492  001F46                     
  4493                           ;main.c: 399:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  4494  001F46  0E06               	movlw	6
  4495  001F48                     u2687:
  4496  001F48  2EE8               	decfsz	wreg,f,c
  4497  001F4A  D7FE               	bra	u2687
  4498  001F4C  D000               	nop2	
  4499  001F4E                     
  4500                           ;main.c: 401:     ADCON0bits.ADON = 1;
  4501  001F4E  80C2               	bsf	194,0,c	;volatile
  4502  001F50                     
  4503                           ;main.c: 402:     ADCON0bits.CHS = canalLeer;
  4504  001F50  C005  F003         	movff	dameHumedadSuelo@canalLeer,??_dameHumedadSuelo
  4505  001F54  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  4506  001F56  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  4507  001F58  50C2               	movf	194,w,c	;volatile
  4508  001F5A  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  4509  001F5C  0BC3               	andlw	-61
  4510  001F5E  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  4511  001F60  6EC2               	movwf	194,c	;volatile
  4512  001F62                     
  4513                           ;main.c: 403:     ADCON0bits.GO = 1;
  4514  001F62  82C2               	bsf	194,1,c	;volatile
  4515  001F64                     
  4516                           ;main.c: 404:     ADCON0bits.GO_DONE = 1;
  4517  001F64  82C2               	bsf	194,1,c	;volatile
  4518  001F66                     l289:
  4519  001F66  B2C2               	btfsc	194,1,c	;volatile
  4520  001F68  EFB8  F00F         	goto	u2151
  4521  001F6C  EFBA  F00F         	goto	u2150
  4522  001F70                     u2151:
  4523  001F70  EFB3  F00F         	goto	l289
  4524  001F74                     u2150:
  4525  001F74                     
  4526                           ;main.c: 408:     ADCON0bits.ADON = 0;
  4527  001F74  90C2               	bcf	194,0,c	;volatile
  4528  001F76                     
  4529                           ;main.c: 410:     return (ADRESH << 8) +ADRESL;
  4530  001F76  50C4               	movf	196,w,c	;volatile
  4531  001F78  6E04               	movwf	(??_dameHumedadSuelo+1)^0,c
  4532  001F7A  6A03               	clrf	??_dameHumedadSuelo^0,c
  4533  001F7C  50C3               	movf	195,w,c	;volatile
  4534  001F7E  2403               	addwf	??_dameHumedadSuelo^0,w,c
  4535  001F80  6E01               	movwf	?_dameHumedadSuelo^0,c
  4536  001F82  0E00               	movlw	0
  4537  001F84  2004               	addwfc	(??_dameHumedadSuelo+1)^0,w,c
  4538  001F86  6E02               	movwf	(?_dameHumedadSuelo+1)^0,c
  4539  001F88  0012               	return		;funcret
  4540  001F8A                     __end_of_dameHumedadSuelo:
  4541                           	opt callstack 0
  4542                           
  4543 ;; *************** function _dameTemperaturaHumedad *****************
  4544 ;; Defined at:
  4545 ;;		line 591 in file "main.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  Humedad         2    3[COMRAM] PTR unsigned char 
  4548 ;;		 -> mostrarDatosSensoresWIFI@humedad(1), mostrarDatosSensores@humedad(1), NULL(0), 
  4549 ;;  Temperatura     2    5[COMRAM] PTR unsigned char 
  4550 ;;		 -> mostrarDatosSensoresWIFI@temperatura(1), mostrarDatosSensores@temperatura(1), estaSeco@temperatura(1), 
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;  checkSum        2    9[COMRAM] unsigned int 
  4553 ;;  temperatura     1   14[COMRAM] unsigned char 
  4554 ;;  humedad         1   13[COMRAM] unsigned char 
  4555 ;;  temperaturaD    1   12[COMRAM] unsigned char 
  4556 ;;  humedadDecim    1   11[COMRAM] unsigned char 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  1    wreg      void 
  4559 ;; Registers used:
  4560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4566 ;;      Params:         4       0       0       0       0       0       0       0       0
  4567 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4568 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4569 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4570 ;;Total ram usage:       12 bytes
  4571 ;; Hardware stack levels used:    1
  4572 ;; Hardware stack levels required when called:    3
  4573 ;; This function calls:
  4574 ;;		_DHT11_ReadData
  4575 ;;		_DHT11_Start
  4576 ;;		_UART_printf
  4577 ;;		_check_response
  4578 ;; This function is called by:
  4579 ;;		_estaSeco
  4580 ;;		_mostrarDatosSensores
  4581 ;;		_mostrarDatosSensoresWIFI
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text20
  4586  0015B0                     __ptext20:
  4587                           	opt callstack 0
  4588  0015B0                     _dameTemperaturaHumedad:
  4589                           	opt callstack 24
  4590  0015B0                     
  4591                           ;main.c: 593:     PIE1bits.RCIE = 0;
  4592  0015B0  9A9D               	bcf	157,5,c	;volatile
  4593                           
  4594                           ;main.c: 594:     T0CONbits.TMR0ON = 0;
  4595  0015B2  9ED5               	bcf	213,7,c	;volatile
  4596  0015B4                     
  4597                           ;main.c: 600:     DHT11_Start();
  4598  0015B4  EC2D  F011         	call	_DHT11_Start	;wreg free
  4599  0015B8                     
  4600                           ;main.c: 602:     if (check_response()) {
  4601  0015B8  EC09  F010         	call	_check_response	;wreg free
  4602  0015BC  0900               	iorlw	0
  4603  0015BE  B4D8               	btfsc	status,2,c
  4604  0015C0  EFE4  F00A         	goto	u2031
  4605  0015C4  EFE6  F00A         	goto	u2030
  4606  0015C8                     u2031:
  4607  0015C8  EF29  F00B         	goto	l2955
  4608  0015CC                     u2030:
  4609  0015CC                     
  4610                           ;main.c: 605:         humedad = DHT11_ReadData();
  4611  0015CC  ECA8  F00E         	call	_DHT11_ReadData	;wreg free
  4612  0015D0  6E0E               	movwf	dameTemperaturaHumedad@humedad^0,c
  4613                           
  4614                           ;main.c: 606:         humedadDecimal = DHT11_ReadData();
  4615  0015D2  ECA8  F00E         	call	_DHT11_ReadData	;wreg free
  4616  0015D6  6E0C               	movwf	dameTemperaturaHumedad@humedadDecimal^0,c
  4617                           
  4618                           ;main.c: 607:         temperatura = DHT11_ReadData();
  4619  0015D8  ECA8  F00E         	call	_DHT11_ReadData	;wreg free
  4620  0015DC  6E0F               	movwf	dameTemperaturaHumedad@temperatura^0,c
  4621                           
  4622                           ;main.c: 608:         temperaturaDecimal = DHT11_ReadData();
  4623  0015DE  ECA8  F00E         	call	_DHT11_ReadData	;wreg free
  4624  0015E2  6E0D               	movwf	dameTemperaturaHumedad@temperaturaDecimal^0,c
  4625                           
  4626                           ;main.c: 609:         checkSum = DHT11_ReadData();
  4627  0015E4  ECA8  F00E         	call	_DHT11_ReadData	;wreg free
  4628  0015E8  6E08               	movwf	??_dameTemperaturaHumedad^0,c
  4629  0015EA  5008               	movf	??_dameTemperaturaHumedad^0,w,c
  4630  0015EC  6E0A               	movwf	dameTemperaturaHumedad@checkSum^0,c
  4631  0015EE  6A0B               	clrf	(dameTemperaturaHumedad@checkSum+1)^0,c
  4632  0015F0                     
  4633                           ;main.c: 611:         if (checkSum != (humedad + humedadDecimal + temperatura + temperat
      +                          uraDecimal))
  4634  0015F0  500C               	movf	dameTemperaturaHumedad@humedadDecimal^0,w,c
  4635  0015F2  C00E  F008         	movff	dameTemperaturaHumedad@humedad,??_dameTemperaturaHumedad
  4636  0015F6  6A09               	clrf	(??_dameTemperaturaHumedad+1)^0,c
  4637  0015F8  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  4638  0015FA  0E00               	movlw	0
  4639  0015FC  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  4640  0015FE  500F               	movf	dameTemperaturaHumedad@temperatura^0,w,c
  4641  001600  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  4642  001602  0E00               	movlw	0
  4643  001604  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  4644  001606  500D               	movf	dameTemperaturaHumedad@temperaturaDecimal^0,w,c
  4645  001608  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  4646  00160A  0E00               	movlw	0
  4647  00160C  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  4648  00160E  500A               	movf	dameTemperaturaHumedad@checkSum^0,w,c
  4649  001610  1808               	xorwf	??_dameTemperaturaHumedad^0,w,c
  4650  001612  E109               	bnz	u2040
  4651  001614  500B               	movf	(dameTemperaturaHumedad@checkSum+1)^0,w,c
  4652  001616  1809               	xorwf	(??_dameTemperaturaHumedad+1)^0,w,c
  4653  001618  B4D8               	btfsc	status,2,c
  4654  00161A  EF11  F00B         	goto	u2041
  4655  00161E  EF13  F00B         	goto	u2040
  4656  001622                     u2041:
  4657  001622  EF1B  F00B         	goto	l2953
  4658  001626                     u2040:
  4659  001626                     
  4660                           ;main.c: 612:             UART_printf("Error de lectura DHT11\r\n");
  4661  001626  0E55               	movlw	low STR_27
  4662  001628  6E02               	movwf	UART_printf@cadena^0,c
  4663  00162A  0E7F               	movlw	high STR_27
  4664  00162C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4665  00162E  EC79  F00E         	call	_UART_printf	;wreg free
  4666  001632  EF2F  F00B         	goto	l2957
  4667  001636                     l2953:
  4668                           
  4669                           ;main.c: 614:             *Humedad = humedad;
  4670  001636  C004  FFD9         	movff	dameTemperaturaHumedad@Humedad,fsr2l
  4671  00163A  C005  FFDA         	movff	dameTemperaturaHumedad@Humedad+1,fsr2h
  4672  00163E  C00E  FFDF         	movff	dameTemperaturaHumedad@humedad,indf2
  4673                           
  4674                           ;main.c: 615:             *Temperatura = temperatura;
  4675  001642  C006  FFD9         	movff	dameTemperaturaHumedad@Temperatura,fsr2l
  4676  001646  C007  FFDA         	movff	dameTemperaturaHumedad@Temperatura+1,fsr2h
  4677  00164A  C00F  FFDF         	movff	dameTemperaturaHumedad@temperatura,indf2
  4678  00164E  EF2F  F00B         	goto	l2957
  4679  001652                     l2955:
  4680                           
  4681                           ;main.c: 619:         UART_printf("DHT11 NO RESPONDIO\r\n");
  4682  001652  0E85               	movlw	low STR_28
  4683  001654  6E02               	movwf	UART_printf@cadena^0,c
  4684  001656  0E7F               	movlw	high STR_28
  4685  001658  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4686  00165A  EC79  F00E         	call	_UART_printf	;wreg free
  4687  00165E                     l2957:
  4688                           
  4689                           ;main.c: 622:     PIE1bits.RCIE = 1;
  4690  00165E  8A9D               	bsf	157,5,c	;volatile
  4691  001660                     
  4692                           ;main.c: 623:     T0CONbits.TMR0ON = 1;
  4693  001660  8ED5               	bsf	213,7,c	;volatile
  4694  001662  0012               	return		;funcret
  4695  001664                     __end_of_dameTemperaturaHumedad:
  4696                           	opt callstack 0
  4697                           
  4698 ;; *************** function _check_response *****************
  4699 ;; Defined at:
  4700 ;;		line 38 in file "./DHT11.h"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;		None
  4703 ;; Auto vars:     Size  Location     Type
  4704 ;;  respuesta       1    0[COMRAM] unsigned char 
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  1    wreg      unsigned char 
  4707 ;; Registers used:
  4708 ;;		wreg, status,2
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/0
  4711 ;;		On exit  : 0/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4714 ;;      Params:         0       0       0       0       0       0       0       0       0
  4715 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4716 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4717 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4718 ;;Total ram usage:        1 bytes
  4719 ;; Hardware stack levels used:    1
  4720 ;; Hardware stack levels required when called:    1
  4721 ;; This function calls:
  4722 ;;		Nothing
  4723 ;; This function is called by:
  4724 ;;		_dameTemperaturaHumedad
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           	psect	text21
  4729  002012                     __ptext21:
  4730                           	opt callstack 0
  4731  002012                     _check_response:
  4732                           	opt callstack 25
  4733  002012                     
  4734                           ;./DHT11.h: 40:     unsigned char respuesta = 0;
  4735  002012  0E00               	movlw	0
  4736  002014  6E01               	movwf	check_response@respuesta^0,c
  4737  002016                     
  4738                           ;./DHT11.h: 41:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4739  002016  0E0D               	movlw	13
  4740  002018                     u2697:
  4741  002018  2EE8               	decfsz	wreg,f,c
  4742  00201A  D7FE               	bra	u2697
  4743  00201C  F000               	nop	
  4744  00201E                     
  4745                           ;./DHT11.h: 42:     if (!PORTDbits.RD7) {
  4746  00201E  BE83               	btfsc	131,7,c	;volatile
  4747  002020  EF14  F010         	goto	u1921
  4748  002024  EF16  F010         	goto	u1920
  4749  002028                     u1921:
  4750  002028  EF27  F010         	goto	l2847
  4751  00202C                     u1920:
  4752  00202C                     
  4753                           ;./DHT11.h: 43:         _delay((unsigned long)((80)*(4000000/4000000.0)));
  4754  00202C  0E1A               	movlw	26
  4755  00202E                     u2707:
  4756  00202E  2EE8               	decfsz	wreg,f,c
  4757  002030  D7FE               	bra	u2707
  4758  002032  D000               	nop2	
  4759  002034                     
  4760                           ;./DHT11.h: 44:         if (PORTDbits.RD7) {
  4761  002034  AE83               	btfss	131,7,c	;volatile
  4762  002036  EF1F  F010         	goto	u1931
  4763  00203A  EF21  F010         	goto	u1930
  4764  00203E                     u1931:
  4765  00203E  EF27  F010         	goto	l2847
  4766  002042                     u1930:
  4767  002042                     
  4768                           ;./DHT11.h: 45:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  4769  002042  0E10               	movlw	16
  4770  002044                     u2717:
  4771  002044  2EE8               	decfsz	wreg,f,c
  4772  002046  D7FE               	bra	u2717
  4773  002048  D000               	nop2	
  4774  00204A                     
  4775                           ;./DHT11.h: 46:             respuesta = 1;
  4776  00204A  0E01               	movlw	1
  4777  00204C  6E01               	movwf	check_response@respuesta^0,c
  4778  00204E                     l2847:
  4779                           
  4780                           ;./DHT11.h: 50:     return respuesta;
  4781  00204E  5001               	movf	check_response@respuesta^0,w,c
  4782  002050  0012               	return		;funcret
  4783  002052                     __end_of_check_response:
  4784                           	opt callstack 0
  4785                           
  4786 ;; *************** function _DHT11_Start *****************
  4787 ;; Defined at:
  4788 ;;		line 23 in file "./DHT11.h"
  4789 ;; Parameters:    Size  Location     Type
  4790 ;;		None
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;		None
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  1    wreg      void 
  4795 ;; Registers used:
  4796 ;;		wreg
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4802 ;;      Params:         0       0       0       0       0       0       0       0       0
  4803 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4804 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4805 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4806 ;;Total ram usage:        1 bytes
  4807 ;; Hardware stack levels used:    1
  4808 ;; Hardware stack levels required when called:    1
  4809 ;; This function calls:
  4810 ;;		Nothing
  4811 ;; This function is called by:
  4812 ;;		_dameTemperaturaHumedad
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text22
  4817  00225A                     __ptext22:
  4818                           	opt callstack 0
  4819  00225A                     _DHT11_Start:
  4820                           	opt callstack 25
  4821  00225A                     
  4822                           ;./DHT11.h: 24:     TRISDbits.RD7 = 0;
  4823  00225A  9E95               	bcf	149,7,c	;volatile
  4824                           
  4825                           ;./DHT11.h: 26:     LATDbits.LATD7 = 0;
  4826  00225C  9E8C               	bcf	140,7,c	;volatile
  4827  00225E                     
  4828                           ;./DHT11.h: 28:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4829  00225E  0E1A               	movlw	26
  4830  002260  6E01               	movwf	??_DHT11_Start^0,c
  4831  002262  0EF8               	movlw	248
  4832  002264                     u2727:
  4833  002264  2EE8               	decfsz	wreg,f,c
  4834  002266  D7FE               	bra	u2727
  4835  002268  2E01               	decfsz	??_DHT11_Start^0,f,c
  4836  00226A  D7FC               	bra	u2727
  4837  00226C  D000               	nop2	
  4838  00226E                     
  4839                           ;./DHT11.h: 30:     LATDbits.LATD7 = 1;
  4840  00226E  8E8C               	bsf	140,7,c	;volatile
  4841                           
  4842                           ;./DHT11.h: 32:     _delay((unsigned long)((30)*(4000000/4000000.0)));
  4843  002270  0E0A               	movlw	10
  4844  002272                     u2737:
  4845  002272  2EE8               	decfsz	wreg,f,c
  4846  002274  D7FE               	bra	u2737
  4847  002276                     
  4848                           ;./DHT11.h: 34:     TRISDbits.RD7 = 1;
  4849  002276  8E95               	bsf	149,7,c	;volatile
  4850  002278  0012               	return		;funcret
  4851  00227A                     __end_of_DHT11_Start:
  4852                           	opt callstack 0
  4853                           
  4854 ;; *************** function _DHT11_ReadData *****************
  4855 ;; Defined at:
  4856 ;;		line 9 in file "./DHT11.h"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;		None
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;  data            1    1[COMRAM] unsigned char 
  4861 ;;  i               1    0[COMRAM] unsigned char 
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  1    wreg      unsigned char 
  4864 ;; Registers used:
  4865 ;;		wreg, status,2, status,0
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4871 ;;      Params:         0       0       0       0       0       0       0       0       0
  4872 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4873 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4874 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4875 ;;Total ram usage:        2 bytes
  4876 ;; Hardware stack levels used:    1
  4877 ;; Hardware stack levels required when called:    1
  4878 ;; This function calls:
  4879 ;;		Nothing
  4880 ;; This function is called by:
  4881 ;;		_dameTemperaturaHumedad
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           	psect	text23
  4886  001D50                     __ptext23:
  4887                           	opt callstack 0
  4888  001D50                     _DHT11_ReadData:
  4889                           	opt callstack 25
  4890  001D50                     
  4891                           ;./DHT11.h: 10:     char i, data = 0;
  4892  001D50  0E00               	movlw	0
  4893  001D52  6E02               	movwf	DHT11_ReadData@data^0,c
  4894                           
  4895                           ;./DHT11.h: 11:     for (i = 0; i < 8; i++) {
  4896  001D54  0E00               	movlw	0
  4897  001D56  6E01               	movwf	DHT11_ReadData@i^0,c
  4898  001D58                     l146:
  4899  001D58  AE83               	btfss	131,7,c	;volatile
  4900  001D5A  EFB1  F00E         	goto	u1881
  4901  001D5E  EFB3  F00E         	goto	u1880
  4902  001D62                     u1881:
  4903  001D62  EFAC  F00E         	goto	l146
  4904  001D66                     u1880:
  4905  001D66                     
  4906                           ;./DHT11.h: 13:         _delay((unsigned long)((30)*(4000000/4000000.0)));
  4907  001D66  0E0A               	movlw	10
  4908  001D68                     u2747:
  4909  001D68  2EE8               	decfsz	wreg,f,c
  4910  001D6A  D7FE               	bra	u2747
  4911  001D6C                     
  4912                           ;./DHT11.h: 14:         if (PORTDbits.RD7 & 1)
  4913  001D6C  AE83               	btfss	131,7,c	;volatile
  4914  001D6E  EFBB  F00E         	goto	u1891
  4915  001D72  EFBD  F00E         	goto	u1890
  4916  001D76                     u1891:
  4917  001D76  EFC1  F00E         	goto	l2815
  4918  001D7A                     u1890:
  4919  001D7A                     
  4920                           ;./DHT11.h: 15:             data = ((data << 1) | 1);
  4921  001D7A  80D8               	bsf	status,0,c
  4922  001D7C  3602               	rlcf	DHT11_ReadData@data^0,f,c
  4923  001D7E  EFC4  F00E         	goto	l151
  4924  001D82                     l2815:
  4925                           
  4926                           ;./DHT11.h: 17:             data = (data << 1);
  4927  001D82  5002               	movf	DHT11_ReadData@data^0,w,c
  4928  001D84  2402               	addwf	DHT11_ReadData@data^0,w,c
  4929  001D86  6E02               	movwf	DHT11_ReadData@data^0,c
  4930  001D88                     l151:
  4931  001D88  BE83               	btfsc	131,7,c	;volatile
  4932  001D8A  EFC9  F00E         	goto	u1901
  4933  001D8E  EFCB  F00E         	goto	u1900
  4934  001D92                     u1901:
  4935  001D92  EFC4  F00E         	goto	l151
  4936  001D96                     u1900:
  4937  001D96                     
  4938                           ;./DHT11.h: 19:     }
  4939  001D96  2A01               	incf	DHT11_ReadData@i^0,f,c
  4940  001D98  0E07               	movlw	7
  4941  001D9A  6401               	cpfsgt	DHT11_ReadData@i^0,c
  4942  001D9C  EFD2  F00E         	goto	u1911
  4943  001DA0  EFD4  F00E         	goto	u1910
  4944  001DA4                     u1911:
  4945  001DA4  EFAC  F00E         	goto	l146
  4946  001DA8                     u1910:
  4947  001DA8                     
  4948                           ;./DHT11.h: 20:     return data;
  4949  001DA8  5002               	movf	DHT11_ReadData@data^0,w,c
  4950  001DAA  0012               	return		;funcret
  4951  001DAC                     __end_of_DHT11_ReadData:
  4952                           	opt callstack 0
  4953                           
  4954 ;; *************** function _fijaHoraRtc *****************
  4955 ;; Defined at:
  4956 ;;		line 317 in file "main.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;		None
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;		None
  4961 ;; Return value:  Size  Location     Type
  4962 ;;                  1    wreg      void 
  4963 ;; Registers used:
  4964 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4965 ;; Tracked objects:
  4966 ;;		On entry : 0/0
  4967 ;;		On exit  : 0/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4970 ;;      Params:         0       0       0       0       0       0       0       0       0
  4971 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4973 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4974 ;;Total ram usage:        0 bytes
  4975 ;; Hardware stack levels used:    1
  4976 ;; Hardware stack levels required when called:    5
  4977 ;; This function calls:
  4978 ;;		_UART_printf
  4979 ;;		_escribe_rtc
  4980 ;;		_setRtc
  4981 ;; This function is called by:
  4982 ;;		_sistemaPrincipal
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           	psect	text24
  4987  001B64                     __ptext24:
  4988                           	opt callstack 0
  4989  001B64                     _fijaHoraRtc:
  4990                           	opt callstack 24
  4991  001B64                     
  4992                           ;main.c: 319:     UART_printf("\r\n FIJA HORA \r\n");
  4993  001B64  0EBD               	movlw	low STR_1
  4994  001B66  6E02               	movwf	UART_printf@cadena^0,c
  4995  001B68  0E7F               	movlw	high STR_1
  4996  001B6A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4997  001B6C  EC79  F00E         	call	_UART_printf	;wreg free
  4998                           
  4999                           ;main.c: 322:     UART_printf("\r\n Envie las Horas en formato 24 Ej: 15 \r\n");
  5000  001B70  0E3A               	movlw	low STR_2
  5001  001B72  6E02               	movwf	UART_printf@cadena^0,c
  5002  001B74  0E7D               	movlw	high STR_2
  5003  001B76  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5004  001B78  EC79  F00E         	call	_UART_printf	;wreg free
  5005  001B7C                     
  5006                           ;main.c: 325:     if (setRtc(0x02)) {
  5007  001B7C  0E02               	movlw	2
  5008  001B7E  EC67  F010         	call	_setRtc
  5009  001B82  0900               	iorlw	0
  5010  001B84  B4D8               	btfsc	status,2,c
  5011  001B86  EFC7  F00D         	goto	u2371
  5012  001B8A  EFC9  F00D         	goto	u2370
  5013  001B8E                     u2371:
  5014  001B8E  EFE5  F00D         	goto	l276
  5015  001B92                     u2370:
  5016  001B92                     
  5017                           ;main.c: 326:         UART_printf("\r\n Envie los Minutos Ej: 25 \r\n");
  5018  001B92  0ECB               	movlw	low STR_3
  5019  001B94  6E02               	movwf	UART_printf@cadena^0,c
  5020  001B96  0E7E               	movlw	high STR_3
  5021  001B98  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5022  001B9A  EC79  F00E         	call	_UART_printf	;wreg free
  5023  001B9E                     
  5024                           ;main.c: 327:         if (setRtc(0x01)) {
  5025  001B9E  0E01               	movlw	1
  5026  001BA0  EC67  F010         	call	_setRtc
  5027  001BA4  0900               	iorlw	0
  5028  001BA6  B4D8               	btfsc	status,2,c
  5029  001BA8  EFD8  F00D         	goto	u2381
  5030  001BAC  EFDA  F00D         	goto	u2380
  5031  001BB0                     u2381:
  5032  001BB0  EFE5  F00D         	goto	l276
  5033  001BB4                     u2380:
  5034  001BB4                     
  5035                           ;main.c: 328:             UART_printf("\r\n HORA ESTABLECIDA CORRECTAMENTE \r\n");
  5036  001BB4  0EFF               	movlw	low STR_4
  5037  001BB6  6E02               	movwf	UART_printf@cadena^0,c
  5038  001BB8  0E7D               	movlw	high STR_4
  5039  001BBA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5040  001BBC  EC79  F00E         	call	_UART_printf	;wreg free
  5041  001BC0                     
  5042                           ;main.c: 329:             escribe_rtc(0x00, 0);
  5043  001BC0  0E00               	movlw	0
  5044  001BC2  6E03               	movwf	escribe_rtc@dato^0,c
  5045  001BC4  0E00               	movlw	0
  5046  001BC6  EC3D  F011         	call	_escribe_rtc
  5047  001BCA                     l276:
  5048  001BCA  0012               	return		;funcret
  5049  001BCC                     __end_of_fijaHoraRtc:
  5050                           	opt callstack 0
  5051                           
  5052 ;; *************** function _setRtc *****************
  5053 ;; Defined at:
  5054 ;;		line 166 in file "main.c"
  5055 ;; Parameters:    Size  Location     Type
  5056 ;;  direccion       1    wreg     unsigned char 
  5057 ;; Auto vars:     Size  Location     Type
  5058 ;;  direccion       1   14[COMRAM] unsigned char 
  5059 ;;  dato            1   16[COMRAM] unsigned char 
  5060 ;;  seteado         1   15[COMRAM] unsigned char 
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  1    wreg      unsigned char 
  5063 ;; Registers used:
  5064 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5070 ;;      Params:         0       0       0       0       0       0       0       0       0
  5071 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5072 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5073 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5074 ;;Total ram usage:        3 bytes
  5075 ;; Hardware stack levels used:    1
  5076 ;; Hardware stack levels required when called:    4
  5077 ;; This function calls:
  5078 ;;		_escribe_rtc
  5079 ;;		_getValue
  5080 ;; This function is called by:
  5081 ;;		_fijaHoraRtc
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           	psect	text25
  5086  0020CE                     __ptext25:
  5087                           	opt callstack 0
  5088  0020CE                     _setRtc:
  5089                           	opt callstack 24
  5090                           
  5091                           ;incstack = 0
  5092                           ;setRtc@direccion stored from wreg
  5093  0020CE  6E0F               	movwf	setRtc@direccion^0,c
  5094  0020D0                     
  5095                           ;main.c: 169:     unsigned char seteado = 0;
  5096  0020D0  0E00               	movlw	0
  5097  0020D2  6E10               	movwf	setRtc@seteado^0,c
  5098  0020D4                     
  5099                           ;main.c: 171:     dato = getValue(2);
  5100  0020D4  0E00               	movlw	0
  5101  0020D6  6E05               	movwf	(getValue@numCharacters+1)^0,c
  5102  0020D8  0E02               	movlw	2
  5103  0020DA  6E04               	movwf	getValue@numCharacters^0,c
  5104  0020DC  ECBA  F003         	call	_getValue	;wreg free
  5105  0020E0  6E11               	movwf	setRtc@dato^0,c
  5106  0020E2                     
  5107                           ;main.c: 173:     if (dato != 'F') {
  5108  0020E2  0E46               	movlw	70
  5109  0020E4  1811               	xorwf	setRtc@dato^0,w,c
  5110  0020E6  B4D8               	btfsc	status,2,c
  5111  0020E8  EF78  F010         	goto	u2191
  5112  0020EC  EF7A  F010         	goto	u2190
  5113  0020F0                     u2191:
  5114  0020F0  EF81  F010         	goto	l3159
  5115  0020F4                     u2190:
  5116  0020F4                     
  5117                           ;main.c: 174:         escribe_rtc(direccion, dato);
  5118  0020F4  C011  F003         	movff	setRtc@dato,escribe_rtc@dato
  5119  0020F8  500F               	movf	setRtc@direccion^0,w,c
  5120  0020FA  EC3D  F011         	call	_escribe_rtc
  5121  0020FE                     
  5122                           ;main.c: 175:         seteado = 1;
  5123  0020FE  0E01               	movlw	1
  5124  002100  6E10               	movwf	setRtc@seteado^0,c
  5125  002102                     l3159:
  5126                           
  5127                           ;main.c: 178:     return seteado;
  5128  002102  5010               	movf	setRtc@seteado^0,w,c
  5129  002104  0012               	return		;funcret
  5130  002106                     __end_of_setRtc:
  5131                           	opt callstack 0
  5132                           
  5133 ;; *************** function _escribe_rtc *****************
  5134 ;; Defined at:
  5135 ;;		line 2 in file "./RTC.h"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;  direccion       1    wreg     unsigned char 
  5138 ;;  dato            1    2[COMRAM] unsigned char 
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;  direccion       1    3[COMRAM] unsigned char 
  5141 ;; Return value:  Size  Location     Type
  5142 ;;                  1    wreg      void 
  5143 ;; Registers used:
  5144 ;;		wreg, status,2, status,0, cstack
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5150 ;;      Params:         1       0       0       0       0       0       0       0       0
  5151 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5152 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5153 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5154 ;;Total ram usage:        2 bytes
  5155 ;; Hardware stack levels used:    1
  5156 ;; Hardware stack levels required when called:    3
  5157 ;; This function calls:
  5158 ;;		_i2c_detener
  5159 ;;		_i2c_envia_dato
  5160 ;;		_i2c_inicia_com
  5161 ;; This function is called by:
  5162 ;;		_setRtc
  5163 ;;		_fijaHoraRtc
  5164 ;;		_setRtcDefault
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           	psect	text26
  5169  00227A                     __ptext26:
  5170                           	opt callstack 0
  5171  00227A                     _escribe_rtc:
  5172                           	opt callstack 24
  5173                           
  5174                           ;incstack = 0
  5175                           ;escribe_rtc@direccion stored from wreg
  5176  00227A  6E04               	movwf	escribe_rtc@direccion^0,c
  5177  00227C                     
  5178                           ;./RTC.h: 3:     i2c_inicia_com();
  5179  00227C  EC83  F011         	call	_i2c_inicia_com	;wreg free
  5180                           
  5181                           ;./RTC.h: 4:     i2c_envia_dato(0xD0);
  5182  002280  0ED0               	movlw	208
  5183  002282  EC6F  F011         	call	_i2c_envia_dato
  5184                           
  5185                           ;./RTC.h: 5:     i2c_envia_dato(direccion);
  5186  002286  5004               	movf	escribe_rtc@direccion^0,w,c
  5187  002288  EC6F  F011         	call	_i2c_envia_dato
  5188                           
  5189                           ;./RTC.h: 6:     i2c_envia_dato(dato);
  5190  00228C  5003               	movf	escribe_rtc@dato^0,w,c
  5191  00228E  EC6F  F011         	call	_i2c_envia_dato
  5192                           
  5193                           ;./RTC.h: 7:     i2c_detener();
  5194  002292  EC87  F011         	call	_i2c_detener	;wreg free
  5195  002296  0012               	return		;funcret
  5196  002298                     __end_of_escribe_rtc:
  5197                           	opt callstack 0
  5198                           
  5199 ;; *************** function _dameDatosSistema *****************
  5200 ;; Defined at:
  5201 ;;		line 570 in file "main.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;		None
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;  i               2   70[BANK0 ] int 
  5206 ;;  buffer         50   20[BANK0 ] unsigned char [50]
  5207 ;; Return value:  Size  Location     Type
  5208 ;;                  1    wreg      void 
  5209 ;; Registers used:
  5210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5211 ;; Tracked objects:
  5212 ;;		On entry : 0/0
  5213 ;;		On exit  : 0/0
  5214 ;;		Unchanged: 0/0
  5215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5216 ;;      Params:         0       0       0       0       0       0       0       0       0
  5217 ;;      Locals:         0      52       0       0       0       0       0       0       0
  5218 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5219 ;;      Totals:         3      52       0       0       0       0       0       0       0
  5220 ;;Total ram usage:       55 bytes
  5221 ;; Hardware stack levels used:    1
  5222 ;; Hardware stack levels required when called:    9
  5223 ;; This function calls:
  5224 ;;		_UART_printf
  5225 ;;		_UART_write
  5226 ;;		___wmul
  5227 ;;		_sprintf
  5228 ;; This function is called by:
  5229 ;;		_sistemaPrincipal
  5230 ;; This function uses a non-reentrant model
  5231 ;;
  5232                           
  5233                           	psect	text27
  5234  0011A0                     __ptext27:
  5235                           	opt callstack 0
  5236  0011A0                     _dameDatosSistema:
  5237                           	opt callstack 20
  5238  0011A0                     
  5239                           ;main.c: 572:     char buffer[50];;main.c: 574:     UART_write('I');
  5240  0011A0  0E49               	movlw	73
  5241  0011A2  EC59  F011         	call	_UART_write
  5242  0011A6                     
  5243                           ;main.c: 576:     UART_printf("\r\n\nHora | Regar(1 si 0 no) | Minutos de riego \r\n\n")
      +                          ;
  5244  0011A6  0EAA               	movlw	low STR_25
  5245  0011A8  6E02               	movwf	UART_printf@cadena^0,c
  5246  0011AA  0E7C               	movlw	high STR_25
  5247  0011AC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5248  0011AE  EC79  F00E         	call	_UART_printf	;wreg free
  5249  0011B2                     
  5250                           ;main.c: 578:     for (int i = 0; i < 24; i++) {
  5251  0011B2  0E00               	movlw	0
  5252  0011B4  0100               	movlb	0	; () banked
  5253  0011B6  6FA7               	movwf	(dameDatosSistema@i+1)& (0+255),b
  5254  0011B8  0E00               	movlw	0
  5255  0011BA  6FA6               	movwf	dameDatosSistema@i& (0+255),b
  5256  0011BC                     l3385:
  5257                           
  5258                           ; BSR set to: 0
  5259                           ;main.c: 580:         sprintf(buffer, "%d | %d | %d \r\n", horarios[i].hora, horarios[i]
      +                          .regar,
  5260  0011BC  0E74               	movlw	low dameDatosSistema@buffer
  5261  0011BE  6F60               	movwf	sprintf@s& (0+255),b
  5262  0011C0  0E00               	movlw	high dameDatosSistema@buffer
  5263  0011C2  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5264  0011C4  0ECD               	movlw	low STR_26
  5265  0011C6  6F62               	movwf	sprintf@fmt& (0+255),b
  5266  0011C8  0E7F               	movlw	high STR_26
  5267  0011CA  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5268  0011CC  C0A6  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  5269  0011D0  C0A7  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  5270  0011D4  0E00               	movlw	0
  5271  0011D6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5272  0011D8  0E03               	movlw	3
  5273  0011DA  6E03               	movwf	___wmul@multiplicand^0,c
  5274  0011DC  EC0A  F011         	call	___wmul	;wreg free
  5275  0011E0  0E00               	movlw	low _horarios
  5276  0011E2  2401               	addwf	?___wmul^0,w,c
  5277  0011E4  6ED9               	movwf	fsr2l,c
  5278  0011E6  0E01               	movlw	high _horarios
  5279  0011E8  2002               	addwfc	(?___wmul+1)^0,w,c
  5280  0011EA  6EDA               	movwf	fsr2h,c
  5281  0011EC  50DF               	movf	indf2,w,c
  5282  0011EE  6E59               	movwf	??_dameDatosSistema^0,c
  5283  0011F0  5059               	movf	??_dameDatosSistema^0,w,c
  5284  0011F2  0100               	movlb	0	; () banked
  5285  0011F4  6F64               	movwf	(?_sprintf+4)& (0+255),b
  5286  0011F6  6B65               	clrf	(?_sprintf+5)& (0+255),b
  5287  0011F8  C0A6  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  5288  0011FC  C0A7  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  5289  001200  0E00               	movlw	0
  5290  001202  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5291  001204  0E03               	movlw	3
  5292  001206  6E03               	movwf	___wmul@multiplicand^0,c
  5293  001208  EC0A  F011         	call	___wmul	;wreg free
  5294  00120C  0E01               	movlw	low (_horarios+1)
  5295  00120E  2401               	addwf	?___wmul^0,w,c
  5296  001210  6ED9               	movwf	fsr2l,c
  5297  001212  0E01               	movlw	high (_horarios+1)
  5298  001214  2002               	addwfc	(?___wmul+1)^0,w,c
  5299  001216  6EDA               	movwf	fsr2h,c
  5300  001218  50DF               	movf	indf2,w,c
  5301  00121A  6E5A               	movwf	(??_dameDatosSistema+1)^0,c
  5302  00121C  505A               	movf	(??_dameDatosSistema+1)^0,w,c
  5303  00121E  0100               	movlb	0	; () banked
  5304  001220  6F66               	movwf	(?_sprintf+6)& (0+255),b
  5305  001222  6B67               	clrf	(?_sprintf+7)& (0+255),b
  5306  001224  C0A6  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  5307  001228  C0A7  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  5308  00122C  0E00               	movlw	0
  5309  00122E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5310  001230  0E03               	movlw	3
  5311  001232  6E03               	movwf	___wmul@multiplicand^0,c
  5312  001234  EC0A  F011         	call	___wmul	;wreg free
  5313  001238  0E02               	movlw	low (_horarios+2)
  5314  00123A  2401               	addwf	?___wmul^0,w,c
  5315  00123C  6ED9               	movwf	fsr2l,c
  5316  00123E  0E01               	movlw	high (_horarios+2)
  5317  001240  2002               	addwfc	(?___wmul+1)^0,w,c
  5318  001242  6EDA               	movwf	fsr2h,c
  5319  001244  50DF               	movf	indf2,w,c
  5320  001246  6E5B               	movwf	(??_dameDatosSistema+2)^0,c
  5321  001248  505B               	movf	(??_dameDatosSistema+2)^0,w,c
  5322  00124A  0100               	movlb	0	; () banked
  5323  00124C  6F68               	movwf	(?_sprintf+8)& (0+255),b
  5324  00124E  6B69               	clrf	(?_sprintf+9)& (0+255),b
  5325  001250  EC2E  F00F         	call	_sprintf	;wreg free
  5326  001254                     
  5327                           ;main.c: 583:         UART_printf(buffer);
  5328  001254  0E74               	movlw	low dameDatosSistema@buffer
  5329  001256  6E02               	movwf	UART_printf@cadena^0,c
  5330  001258  0E00               	movlw	high dameDatosSistema@buffer
  5331  00125A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5332  00125C  EC79  F00E         	call	_UART_printf	;wreg free
  5333  001260                     
  5334                           ;main.c: 585:     }
  5335  001260  0100               	movlb	0	; () banked
  5336  001262  4BA6               	infsnz	dameDatosSistema@i& (0+255),f,b
  5337  001264  2BA7               	incf	(dameDatosSistema@i+1)& (0+255),f,b
  5338  001266                     
  5339                           ; BSR set to: 0
  5340  001266  BFA7               	btfsc	(dameDatosSistema@i+1)& (0+255),7,b
  5341  001268  EF3F  F009         	goto	u2431
  5342  00126C  51A7               	movf	(dameDatosSistema@i+1)& (0+255),w,b
  5343  00126E  E109               	bnz	u2430
  5344  001270  0E18               	movlw	24
  5345  001272  5DA6               	subwf	dameDatosSistema@i& (0+255),w,b
  5346  001274  A0D8               	btfss	status,0,c
  5347  001276  EF3F  F009         	goto	u2431
  5348  00127A  EF41  F009         	goto	u2430
  5349  00127E                     u2431:
  5350  00127E  EFDE  F008         	goto	l3385
  5351  001282                     u2430:
  5352  001282                     
  5353                           ; BSR set to: 0
  5354                           ;main.c: 587:     UART_write('I');
  5355  001282  0E49               	movlw	73
  5356  001284  EC59  F011         	call	_UART_write
  5357  001288  0012               	return		;funcret
  5358  00128A                     __end_of_dameDatosSistema:
  5359                           	opt callstack 0
  5360                           
  5361 ;; *************** function _sprintf *****************
  5362 ;; Defined at:
  5363 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;  s               2    0[BANK0 ] PTR unsigned char 
  5366 ;;		 -> mostrarDatosSensoresWIFI@buffer(50), mostrarDatosSensores@buffer(50), dameDatosSistema@buffer(50), lecturaWifi@b
      +uffer(50), 
  5367 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  5368 ;;		 -> STR_34(29), STR_33(32), STR_32(45), STR_31(45), 
  5369 ;;		 -> STR_30(29), STR_29(32), STR_26(16), STR_14(51), 
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;  f               6   14[BANK0 ] struct _IO_FILE
  5372 ;;  ap              2   12[BANK0 ] PTR void [1]
  5373 ;;		 -> ?_sprintf(2), 
  5374 ;;  ret             2    0        int 
  5375 ;; Return value:  Size  Location     Type
  5376 ;;                  2    0[BANK0 ] int 
  5377 ;; Registers used:
  5378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5379 ;; Tracked objects:
  5380 ;;		On entry : 0/0
  5381 ;;		On exit  : 0/0
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5384 ;;      Params:         0      10       0       0       0       0       0       0       0
  5385 ;;      Locals:         0      10       0       0       0       0       0       0       0
  5386 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5387 ;;      Totals:         0      20       0       0       0       0       0       0       0
  5388 ;;Total ram usage:       20 bytes
  5389 ;; Hardware stack levels used:    1
  5390 ;; Hardware stack levels required when called:    8
  5391 ;; This function calls:
  5392 ;;		_vfprintf
  5393 ;; This function is called by:
  5394 ;;		_lecturaWifi
  5395 ;;		_dameDatosSistema
  5396 ;;		_mostrarDatosSensores
  5397 ;;		_mostrarDatosSensoresWIFI
  5398 ;; This function uses a non-reentrant model
  5399 ;;
  5400                           
  5401                           	psect	text28
  5402  001E5C                     __ptext28:
  5403                           	opt callstack 0
  5404  001E5C                     _sprintf:
  5405                           	opt callstack 20
  5406  001E5C  0E64               	movlw	low (?_sprintf+4)
  5407  001E5E  0100               	movlb	0	; () banked
  5408  001E60  6F6C               	movwf	sprintf@ap& (0+255),b
  5409  001E62  0E00               	movlw	high (?_sprintf+4)
  5410  001E64  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  5411  001E66  C060  F06E         	movff	sprintf@s,sprintf@f
  5412  001E6A  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  5413  001E6E                     
  5414                           ; BSR set to: 0
  5415  001E6E  0E00               	movlw	0
  5416  001E70  6F71               	movwf	(sprintf@f+3)& (0+255),b
  5417  001E72  0E00               	movlw	0
  5418  001E74  6F70               	movwf	(sprintf@f+2)& (0+255),b
  5419  001E76                     
  5420                           ; BSR set to: 0
  5421  001E76  0E00               	movlw	0
  5422  001E78  6F73               	movwf	(sprintf@f+5)& (0+255),b
  5423  001E7A  0E00               	movlw	0
  5424  001E7C  6F72               	movwf	(sprintf@f+4)& (0+255),b
  5425  001E7E                     
  5426                           ; BSR set to: 0
  5427  001E7E  0E6E               	movlw	low sprintf@f
  5428  001E80  6E51               	movwf	vfprintf@fp^0,c
  5429  001E82  0E00               	movlw	high sprintf@f
  5430  001E84  6E52               	movwf	(vfprintf@fp+1)^0,c
  5431  001E86  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  5432  001E8A  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5433  001E8E  0E6C               	movlw	low sprintf@ap
  5434  001E90  6E55               	movwf	vfprintf@ap^0,c
  5435  001E92  0E00               	movlw	high sprintf@ap
  5436  001E94  6E56               	movwf	(vfprintf@ap+1)^0,c
  5437  001E96  EC17  F00E         	call	_vfprintf	;wreg free
  5438  001E9A  0100               	movlb	0	; () banked
  5439  001E9C  5170               	movf	(sprintf@f+2)& (0+255),w,b
  5440  001E9E  2560               	addwf	sprintf@s& (0+255),w,b
  5441  001EA0  6ED9               	movwf	fsr2l,c
  5442  001EA2  5171               	movf	(sprintf@f+3)& (0+255),w,b
  5443  001EA4  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  5444  001EA6  6EDA               	movwf	fsr2h,c
  5445  001EA8  0E00               	movlw	0
  5446  001EAA  6EDF               	movwf	indf2,c
  5447  001EAC                     
  5448                           ; BSR set to: 0
  5449  001EAC  0012               	return		;funcret
  5450  001EAE                     __end_of_sprintf:
  5451                           	opt callstack 0
  5452                           
  5453 ;; *************** function _vfprintf *****************
  5454 ;; Defined at:
  5455 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5456 ;; Parameters:    Size  Location     Type
  5457 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  5458 ;;		 -> sprintf@f(6), 
  5459 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  5460 ;;		 -> STR_34(29), STR_33(32), STR_32(45), STR_31(45), 
  5461 ;;		 -> STR_30(29), STR_29(32), STR_26(16), STR_14(51), 
  5462 ;;  ap              2   84[COMRAM] PTR PTR void 
  5463 ;;		 -> sprintf@ap(2), 
  5464 ;; Auto vars:     Size  Location     Type
  5465 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  5466 ;;		 -> STR_34(29), STR_33(32), STR_32(45), STR_31(45), 
  5467 ;;		 -> STR_30(29), STR_29(32), STR_26(16), STR_14(51), 
  5468 ;; Return value:  Size  Location     Type
  5469 ;;                  2   80[COMRAM] int 
  5470 ;; Registers used:
  5471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5472 ;; Tracked objects:
  5473 ;;		On entry : 0/0
  5474 ;;		On exit  : 0/0
  5475 ;;		Unchanged: 0/0
  5476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5477 ;;      Params:         6       0       0       0       0       0       0       0       0
  5478 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5479 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5480 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5481 ;;Total ram usage:        8 bytes
  5482 ;; Hardware stack levels used:    1
  5483 ;; Hardware stack levels required when called:    7
  5484 ;; This function calls:
  5485 ;;		_vfpfcnvrt
  5486 ;; This function is called by:
  5487 ;;		_sprintf
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491                           	psect	text29
  5492  001C2E                     __ptext29:
  5493                           	opt callstack 0
  5494  001C2E                     _vfprintf:
  5495                           	opt callstack 20
  5496  001C2E                     
  5497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5498  001C2E  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  5499  001C32  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5500  001C36                     
  5501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5502  001C36  0E00               	movlw	0
  5503  001C38  0100               	movlb	0	; () banked
  5504  001C3A  6FE1               	movwf	(_nout+1)& (0+255),b
  5505  001C3C  0E00               	movlw	0
  5506  001C3E  6FE0               	movwf	_nout& (0+255),b
  5507                           
  5508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5509  001C40  EF35  F00E         	goto	l2859
  5510  001C44                     l2857:
  5511                           
  5512                           ; BSR set to: 0
  5513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5514  001C44  C051  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  5515  001C48  C052  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5516  001C4C  0E57               	movlw	low vfprintf@cfmt
  5517  001C4E  6E42               	movwf	vfpfcnvrt@fmt^0,c
  5518  001C50  0E00               	movlw	high vfprintf@cfmt
  5519  001C52  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5520  001C54  C055  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  5521  001C58  C056  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5522  001C5C  ECA7  F002         	call	_vfpfcnvrt	;wreg free
  5523  001C60  5040               	movf	?_vfpfcnvrt^0,w,c
  5524  001C62  0100               	movlb	0	; () banked
  5525  001C64  27E0               	addwf	_nout& (0+255),f,b
  5526  001C66  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  5527  001C68  23E1               	addwfc	(_nout+1)& (0+255),f,b
  5528  001C6A                     l2859:
  5529                           
  5530                           ; BSR set to: 0
  5531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5532  001C6A  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  5533  001C6E  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5534  001C72                     	if	0	;tblptru may be non-zero
  5535  001C72                     	endif
  5536  001C72                     	if	0	;tblptru may be non-zero
  5537  001C72                     	endif
  5538  001C72  0008               	tblrd		*
  5539  001C74  50F5               	movf	tablat,w,c
  5540  001C76  0900               	iorlw	0
  5541  001C78  A4D8               	btfss	status,2,c
  5542  001C7A  EF41  F00E         	goto	u1941
  5543  001C7E  EF43  F00E         	goto	u1940
  5544  001C82                     u1941:
  5545  001C82  EF22  F00E         	goto	l2857
  5546  001C86                     u1940:
  5547  001C86                     
  5548                           ; BSR set to: 0
  5549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5550  001C86  C0E0  F051         	movff	_nout,?_vfprintf
  5551  001C8A  C0E1  F052         	movff	_nout+1,?_vfprintf+1
  5552  001C8E                     
  5553                           ; BSR set to: 0
  5554  001C8E  0012               	return		;funcret
  5555  001C90                     __end_of_vfprintf:
  5556                           	opt callstack 0
  5557                           
  5558 ;; *************** function _vfpfcnvrt *****************
  5559 ;; Defined at:
  5560 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5561 ;; Parameters:    Size  Location     Type
  5562 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  5563 ;;		 -> sprintf@f(6), 
  5564 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  5565 ;;		 -> vfprintf@cfmt(2), 
  5566 ;;  ap              2   67[COMRAM] PTR PTR void 
  5567 ;;		 -> sprintf@ap(2), 
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;  ll              8   71[COMRAM] long long 
  5570 ;;  llu             8    0        unsigned long long 
  5571 ;;  f               4    0        unsigned long long 
  5572 ;;  vp              3    0        PTR void 
  5573 ;;  ct              3    0        unsigned char [3]
  5574 ;;  cp              3    0        PTR unsigned char 
  5575 ;;  i               2    0        int 
  5576 ;;  done            2    0        int 
  5577 ;;  c               1   79[COMRAM] unsigned char 
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  2   63[COMRAM] int 
  5580 ;; Registers used:
  5581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5587 ;;      Params:         6       0       0       0       0       0       0       0       0
  5588 ;;      Locals:         9       0       0       0       0       0       0       0       0
  5589 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5590 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5591 ;;Total ram usage:       17 bytes
  5592 ;; Hardware stack levels used:    1
  5593 ;; Hardware stack levels required when called:    6
  5594 ;; This function calls:
  5595 ;;		_ctoa
  5596 ;;		_dtoa
  5597 ;;		_fputc
  5598 ;; This function is called by:
  5599 ;;		_vfprintf
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603                           	psect	text30
  5604  00054E                     __ptext30:
  5605                           	opt callstack 0
  5606  00054E                     _vfpfcnvrt:
  5607                           	opt callstack 20
  5608  00054E                     
  5609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5610  00054E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5611  000552  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5612  000556  CFDE FFF6          	movff	postinc2,tblptrl
  5613  00055A  CFDD FFF7          	movff	postdec2,tblptrh
  5614  00055E                     	if	0	;tblptru may be non-zero
  5615  00055E                     	endif
  5616  00055E                     	if	0	;tblptru may be non-zero
  5617  00055E                     	endif
  5618  00055E  0008               	tblrd		*
  5619  000560  50F5               	movf	tablat,w,c
  5620  000562  0A25               	xorlw	37
  5621  000564  A4D8               	btfss	status,2,c
  5622  000566  EFB7  F002         	goto	u1771
  5623  00056A  EFB9  F002         	goto	u1770
  5624  00056E                     u1771:
  5625  00056E  EF9E  F003         	goto	l2759
  5626  000572                     u1770:
  5627  000572                     
  5628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5629  000572  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5630  000576  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5631  00057A  2ADE               	incf	postinc2,f,c
  5632  00057C  0E00               	movlw	0
  5633  00057E  22DD               	addwfc	postdec2,f,c
  5634  000580                     
  5635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5636  000580  0E00               	movlw	0
  5637  000582  0100               	movlb	0	; () banked
  5638  000584  6FE3               	movwf	(_width+1)& (0+255),b
  5639  000586  0E00               	movlw	0
  5640  000588  6FE2               	movwf	_width& (0+255),b
  5641  00058A  C0E2  F0E6         	movff	_width,_flags
  5642  00058E  C0E3  F0E7         	movff	_width+1,_flags+1
  5643  000592                     
  5644                           ; BSR set to: 0
  5645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5646  000592  69E4               	setf	_prec& (0+255),b
  5647  000594  69E5               	setf	(_prec+1)& (0+255),b
  5648  000596                     
  5649                           ; BSR set to: 0
  5650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  5651  000596  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5652  00059A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5653  00059E  CFDE FFF6          	movff	postinc2,tblptrl
  5654  0005A2  CFDD FFF7          	movff	postdec2,tblptrh
  5655  0005A6                     	if	0	;tblptru may be non-zero
  5656  0005A6                     	endif
  5657  0005A6                     	if	0	;tblptru may be non-zero
  5658  0005A6                     	endif
  5659  0005A6  0008               	tblrd		*
  5660  0005A8  50F5               	movf	tablat,w,c
  5661  0005AA  0A63               	xorlw	99
  5662  0005AC  A4D8               	btfss	status,2,c
  5663  0005AE  EFDB  F002         	goto	u1781
  5664  0005B2  EFDD  F002         	goto	u1780
  5665  0005B6                     u1781:
  5666  0005B6  EF04  F003         	goto	l2733
  5667  0005BA                     u1780:
  5668  0005BA                     
  5669                           ; BSR set to: 0
  5670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  5671  0005BA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5672  0005BE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5673  0005C2  2ADE               	incf	postinc2,f,c
  5674  0005C4  0E00               	movlw	0
  5675  0005C6  22DD               	addwfc	postdec2,f,c
  5676                           
  5677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5678  0005C8  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5679  0005CC  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5680  0005D0  CFDF F046          	movff	indf2,??_vfpfcnvrt
  5681  0005D4  0E02               	movlw	2
  5682  0005D6  26DE               	addwf	postinc2,f,c
  5683  0005D8  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  5684  0005DC  0E00               	movlw	0
  5685  0005DE  22DD               	addwfc	postdec2,f,c
  5686  0005E0  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5687  0005E4  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5688  0005E8  50DF               	movf	indf2,w,c
  5689  0005EA  6E50               	movwf	vfpfcnvrt@c^0,c
  5690  0005EC                     
  5691                           ; BSR set to: 0
  5692                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  5693  0005EC  C040  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  5694  0005F0  C041  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  5695  0005F4  C050  F01E         	movff	vfpfcnvrt@c,ctoa@c
  5696  0005F8  ECD6  F00E         	call	_ctoa	;wreg free
  5697  0005FC  C01C  F040         	movff	?_ctoa,?_vfpfcnvrt
  5698  000600  C01D  F041         	movff	?_ctoa+1,?_vfpfcnvrt+1
  5699  000604  EFB9  F003         	goto	l484
  5700  000608                     l2733:
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5704  000608  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5705  00060C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5706  000610  CFDE FFF6          	movff	postinc2,tblptrl
  5707  000614  CFDD FFF7          	movff	postdec2,tblptrh
  5708  000618                     	if	0	;tblptru may be non-zero
  5709  000618                     	endif
  5710  000618                     	if	0	;tblptru may be non-zero
  5711  000618                     	endif
  5712  000618  0008               	tblrd		*
  5713  00061A  50F5               	movf	tablat,w,c
  5714  00061C  0A64               	xorlw	100
  5715  00061E  B4D8               	btfsc	status,2,c
  5716  000620  EF14  F003         	goto	u1791
  5717  000624  EF16  F003         	goto	u1790
  5718  000628                     u1791:
  5719  000628  EF28  F003         	goto	l2737
  5720  00062C                     u1790:
  5721  00062C                     
  5722                           ; BSR set to: 0
  5723  00062C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5724  000630  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5725  000634  CFDE FFF6          	movff	postinc2,tblptrl
  5726  000638  CFDD FFF7          	movff	postdec2,tblptrh
  5727  00063C                     	if	0	;tblptru may be non-zero
  5728  00063C                     	endif
  5729  00063C                     	if	0	;tblptru may be non-zero
  5730  00063C                     	endif
  5731  00063C  0008               	tblrd		*
  5732  00063E  50F5               	movf	tablat,w,c
  5733  000640  0A69               	xorlw	105
  5734  000642  A4D8               	btfss	status,2,c
  5735  000644  EF26  F003         	goto	u1801
  5736  000648  EF28  F003         	goto	u1800
  5737  00064C                     u1801:
  5738  00064C  EF68  F003         	goto	l2743
  5739  000650                     u1800:
  5740  000650                     l2737:
  5741                           
  5742                           ; BSR set to: 0
  5743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5744  000650  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5745  000654  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5746  000658  2ADE               	incf	postinc2,f,c
  5747  00065A  0E00               	movlw	0
  5748  00065C  22DD               	addwfc	postdec2,f,c
  5749                           
  5750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5751  00065E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5752  000662  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5753  000666  CFDF F046          	movff	indf2,??_vfpfcnvrt
  5754  00066A  0E02               	movlw	2
  5755  00066C  26DE               	addwf	postinc2,f,c
  5756  00066E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  5757  000672  0E00               	movlw	0
  5758  000674  22DD               	addwfc	postdec2,f,c
  5759  000676  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5760  00067A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5761  00067E  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  5762  000682  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  5763  000686  0E00               	movlw	0
  5764  000688  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  5765  00068A  0EFF               	movlw	-1
  5766  00068C  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  5767  00068E  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  5768  000690  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  5769  000692  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  5770  000694  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  5771  000696  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  5772  000698                     
  5773                           ; BSR set to: 0
  5774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  5775  000698  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5776  00069C  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5777  0006A0  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  5778  0006A4  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5779  0006A8  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5780  0006AC  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5781  0006B0  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5782  0006B4  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5783  0006B8  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5784  0006BC  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5785  0006C0  EC09  F000         	call	_dtoa	;wreg free
  5786  0006C4  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  5787  0006C8  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5788  0006CC  EFB9  F003         	goto	l484
  5789  0006D0                     l2743:
  5790                           
  5791                           ; BSR set to: 0
  5792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5793  0006D0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5794  0006D4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5795  0006D8  CFDE FFF6          	movff	postinc2,tblptrl
  5796  0006DC  CFDD FFF7          	movff	postdec2,tblptrh
  5797  0006E0                     	if	0	;tblptru may be non-zero
  5798  0006E0                     	endif
  5799  0006E0                     	if	0	;tblptru may be non-zero
  5800  0006E0                     	endif
  5801  0006E0  0008               	tblrd		*
  5802  0006E2  50F5               	movf	tablat,w,c
  5803  0006E4  0A25               	xorlw	37
  5804  0006E6  A4D8               	btfss	status,2,c
  5805  0006E8  EF78  F003         	goto	u1811
  5806  0006EC  EF7A  F003         	goto	u1810
  5807  0006F0                     u1811:
  5808  0006F0  EF91  F003         	goto	l2753
  5809  0006F4                     u1810:
  5810  0006F4                     
  5811                           ; BSR set to: 0
  5812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5813  0006F4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5814  0006F8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5815  0006FC  2ADE               	incf	postinc2,f,c
  5816  0006FE  0E00               	movlw	0
  5817  000700  22DD               	addwfc	postdec2,f,c
  5818  000702                     
  5819                           ; BSR set to: 0
  5820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5821  000702  0E00               	movlw	0
  5822  000704  6E02               	movwf	(fputc@c+1)^0,c
  5823  000706  0E25               	movlw	37
  5824  000708  6E01               	movwf	fputc@c^0,c
  5825  00070A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5826  00070E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5827  000712  ECAC  F009         	call	_fputc	;wreg free
  5828  000716                     l2749:
  5829                           
  5830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5831  000716  0E00               	movlw	0
  5832  000718  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5833  00071A  0E01               	movlw	1
  5834  00071C  6E40               	movwf	?_vfpfcnvrt^0,c
  5835  00071E  EFB9  F003         	goto	l484
  5836  000722                     l2753:
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5840  000722  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5841  000726  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5842  00072A  2ADE               	incf	postinc2,f,c
  5843  00072C  0E00               	movlw	0
  5844  00072E  22DD               	addwfc	postdec2,f,c
  5845  000730                     
  5846                           ; BSR set to: 0
  5847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  5848  000730  0E00               	movlw	0
  5849  000732  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5850  000734  0E00               	movlw	0
  5851  000736  6E40               	movwf	?_vfpfcnvrt^0,c
  5852  000738  EFB9  F003         	goto	l484
  5853  00073C                     l2759:
  5854                           
  5855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5856  00073C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5857  000740  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5858  000744  CFDE FFF6          	movff	postinc2,tblptrl
  5859  000748  CFDD FFF7          	movff	postdec2,tblptrh
  5860  00074C                     	if	0	;tblptru may be non-zero
  5861  00074C                     	endif
  5862  00074C                     	if	0	;tblptru may be non-zero
  5863  00074C                     	endif
  5864  00074C  0008               	tblrd		*
  5865  00074E  50F5               	movf	tablat,w,c
  5866  000750  6E01               	movwf	fputc@c^0,c
  5867  000752  6A02               	clrf	(fputc@c+1)^0,c
  5868  000754  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5869  000758  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5870  00075C  ECAC  F009         	call	_fputc	;wreg free
  5871  000760                     
  5872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5873  000760  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5874  000764  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5875  000768  2ADE               	incf	postinc2,f,c
  5876  00076A  0E00               	movlw	0
  5877  00076C  22DD               	addwfc	postdec2,f,c
  5878  00076E  EF8B  F003         	goto	l2749
  5879  000772                     l484:
  5880  000772  0012               	return		;funcret
  5881  000774                     __end_of_vfpfcnvrt:
  5882                           	opt callstack 0
  5883                           
  5884 ;; *************** function _dtoa *****************
  5885 ;; Defined at:
  5886 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5889 ;;		 -> sprintf@f(6), 
  5890 ;;  d               8   29[COMRAM] long long 
  5891 ;; Auto vars:     Size  Location     Type
  5892 ;;  n               8   53[COMRAM] long long 
  5893 ;;  i               2   61[COMRAM] int 
  5894 ;;  s               2   51[COMRAM] int 
  5895 ;;  w               2   49[COMRAM] int 
  5896 ;;  p               2   47[COMRAM] int 
  5897 ;; Return value:  Size  Location     Type
  5898 ;;                  2   27[COMRAM] int 
  5899 ;; Registers used:
  5900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5901 ;; Tracked objects:
  5902 ;;		On entry : 0/0
  5903 ;;		On exit  : 0/0
  5904 ;;		Unchanged: 0/0
  5905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5906 ;;      Params:        10       0       0       0       0       0       0       0       0
  5907 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5908 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5909 ;;      Totals:        36       0       0       0       0       0       0       0       0
  5910 ;;Total ram usage:       36 bytes
  5911 ;; Hardware stack levels used:    1
  5912 ;; Hardware stack levels required when called:    5
  5913 ;; This function calls:
  5914 ;;		___aodiv
  5915 ;;		___aomod
  5916 ;;		_abs
  5917 ;;		_pad
  5918 ;; This function is called by:
  5919 ;;		_vfpfcnvrt
  5920 ;; This function uses a non-reentrant model
  5921 ;;
  5922                           
  5923                           	psect	text31
  5924  000012                     __ptext31:
  5925                           	opt callstack 0
  5926  000012                     _dtoa:
  5927                           	opt callstack 20
  5928  000012                     
  5929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5930  000012  C01E  F036         	movff	dtoa@d,dtoa@n
  5931  000016  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5932  00001A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5933  00001E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5934  000022  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5935  000026  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5936  00002A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5937  00002E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5938  000032                     
  5939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5940  000032  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  5941  000034  EF1E  F000         	goto	u1591
  5942  000038  EF21  F000         	goto	u1590
  5943  00003C                     u1591:
  5944  00003C  0E01               	movlw	1
  5945  00003E  EF22  F000         	goto	u1600
  5946  000042                     u1590:
  5947  000042  0E00               	movlw	0
  5948  000044                     u1600:
  5949  000044  6E34               	movwf	dtoa@s^0,c
  5950  000046  6A35               	clrf	(dtoa@s+1)^0,c
  5951                           
  5952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5953  000048  5034               	movf	dtoa@s^0,w,c
  5954  00004A  1035               	iorwf	(dtoa@s+1)^0,w,c
  5955  00004C  B4D8               	btfsc	status,2,c
  5956  00004E  EF2B  F000         	goto	u1611
  5957  000052  EF2D  F000         	goto	u1610
  5958  000056                     u1611:
  5959  000056  EF3D  F000         	goto	l2653
  5960  00005A                     u1610:
  5961  00005A                     
  5962                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5963  00005A  1E3D               	comf	(dtoa@n+7)^0,f,c
  5964  00005C  1E3C               	comf	(dtoa@n+6)^0,f,c
  5965  00005E  1E3B               	comf	(dtoa@n+5)^0,f,c
  5966  000060  1E3A               	comf	(dtoa@n+4)^0,f,c
  5967  000062  1E39               	comf	(dtoa@n+3)^0,f,c
  5968  000064  1E38               	comf	(dtoa@n+2)^0,f,c
  5969  000066  1E37               	comf	(dtoa@n+1)^0,f,c
  5970  000068  6C36               	negf	dtoa@n^0,c
  5971  00006A  0E00               	movlw	0
  5972  00006C  2237               	addwfc	(dtoa@n+1)^0,f,c
  5973  00006E  2238               	addwfc	(dtoa@n+2)^0,f,c
  5974  000070  2239               	addwfc	(dtoa@n+3)^0,f,c
  5975  000072  223A               	addwfc	(dtoa@n+4)^0,f,c
  5976  000074  223B               	addwfc	(dtoa@n+5)^0,f,c
  5977  000076  223C               	addwfc	(dtoa@n+6)^0,f,c
  5978  000078  223D               	addwfc	(dtoa@n+7)^0,f,c
  5979  00007A                     l2653:
  5980                           
  5981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5982  00007A  0100               	movlb	0	; () banked
  5983  00007C  BFE5               	btfsc	(_prec+1)& (0+255),7,b
  5984  00007E  EF43  F000         	goto	u1621
  5985  000082  EF45  F000         	goto	u1620
  5986  000086                     u1621:
  5987  000086  EF46  F000         	goto	l2657
  5988  00008A                     u1620:
  5989  00008A                     
  5990                           ; BSR set to: 0
  5991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5992  00008A  93E6               	bcf	_flags& (0+255),1,b
  5993  00008C                     l2657:
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5997  00008C  BFE5               	btfsc	(_prec+1)& (0+255),7,b
  5998  00008E  EF53  F000         	goto	u1630
  5999  000092  51E5               	movf	(_prec+1)& (0+255),w,b
  6000  000094  E106               	bnz	u1631
  6001  000096  05E4               	decf	_prec& (0+255),w,b
  6002  000098  B0D8               	btfsc	status,0,c
  6003  00009A  EF51  F000         	goto	u1631
  6004  00009E  EF53  F000         	goto	u1630
  6005  0000A2                     u1631:
  6006  0000A2  EF59  F000         	goto	l459
  6007  0000A6                     u1630:
  6008  0000A6                     
  6009                           ; BSR set to: 0
  6010  0000A6  0E00               	movlw	0
  6011  0000A8  6E31               	movwf	(dtoa@p+1)^0,c
  6012  0000AA  0E01               	movlw	1
  6013  0000AC  6E30               	movwf	dtoa@p^0,c
  6014  0000AE  EF5D  F000         	goto	l461
  6015  0000B2                     l459:
  6016                           
  6017                           ; BSR set to: 0
  6018  0000B2  C0E4  F030         	movff	_prec,dtoa@p
  6019  0000B6  C0E5  F031         	movff	_prec+1,dtoa@p+1
  6020  0000BA                     l461:
  6021                           
  6022                           ; BSR set to: 0
  6023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  6024  0000BA  C0E2  F032         	movff	_width,dtoa@w
  6025  0000BE  C0E3  F033         	movff	_width+1,dtoa@w+1
  6026  0000C2                     
  6027                           ; BSR set to: 0
  6028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  6029  0000C2  5034               	movf	dtoa@s^0,w,c
  6030  0000C4  1035               	iorwf	(dtoa@s+1)^0,w,c
  6031  0000C6  A4D8               	btfss	status,2,c
  6032  0000C8  EF68  F000         	goto	u1641
  6033  0000CC  EF6A  F000         	goto	u1640
  6034  0000D0                     u1641:
  6035  0000D0  EF71  F000         	goto	l2665
  6036  0000D4                     u1640:
  6037  0000D4                     
  6038                           ; BSR set to: 0
  6039  0000D4  A5E6               	btfss	_flags& (0+255),2,b
  6040  0000D6  EF6F  F000         	goto	u1651
  6041  0000DA  EF71  F000         	goto	u1650
  6042  0000DE                     u1651:
  6043  0000DE  EF74  F000         	goto	l2667
  6044  0000E2                     u1650:
  6045  0000E2                     l2665:
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  6049  0000E2  0632               	decf	dtoa@w^0,f,c
  6050  0000E4  A0D8               	btfss	status,0,c
  6051  0000E6  0633               	decf	(dtoa@w+1)^0,f,c
  6052  0000E8                     l2667:
  6053                           
  6054                           ; BSR set to: 0
  6055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  6056  0000E8  0E00               	movlw	0
  6057  0000EA  6E3F               	movwf	(dtoa@i+1)^0,c
  6058  0000EC  0E1F               	movlw	31
  6059  0000EE  6E3E               	movwf	dtoa@i^0,c
  6060  0000F0                     
  6061                           ; BSR set to: 0
  6062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  6063  0000F0  0E00               	movlw	0
  6064  0000F2  0101               	movlb	1	; () banked
  6065  0000F4  6F77               	movwf	(_dbuf+31)& (0+255),b
  6066                           
  6067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6068  0000F6  EFF9  F000         	goto	l2681
  6069  0000FA                     l2671:
  6070                           
  6071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  6072  0000FA  063E               	decf	dtoa@i^0,f,c
  6073  0000FC  A0D8               	btfss	status,0,c
  6074  0000FE  063F               	decf	(dtoa@i+1)^0,f,c
  6075  000100                     
  6076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  6077  000100  0E58               	movlw	low _dbuf
  6078  000102  243E               	addwf	dtoa@i^0,w,c
  6079  000104  6ED9               	movwf	fsr2l,c
  6080  000106  0E01               	movlw	high _dbuf
  6081  000108  203F               	addwfc	(dtoa@i+1)^0,w,c
  6082  00010A  6EDA               	movwf	fsr2h,c
  6083  00010C  C036  F001         	movff	dtoa@n,___aomod@dividend
  6084  000110  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6085  000114  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6086  000118  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6087  00011C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6088  000120  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6089  000124  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6090  000128  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6091  00012C  0E0A               	movlw	10
  6092  00012E  6E09               	movwf	___aomod@divisor^0,c
  6093  000130  0E00               	movlw	0
  6094  000132  6E0A               	movwf	(___aomod@divisor+1)^0,c
  6095  000134  0E00               	movlw	0
  6096  000136  6E0B               	movwf	(___aomod@divisor+2)^0,c
  6097  000138  0E00               	movlw	0
  6098  00013A  6E0C               	movwf	(___aomod@divisor+3)^0,c
  6099  00013C  0E00               	movlw	0
  6100  00013E  6E0D               	movwf	(___aomod@divisor+4)^0,c
  6101  000140  0E00               	movlw	0
  6102  000142  6E0E               	movwf	(___aomod@divisor+5)^0,c
  6103  000144  0E00               	movlw	0
  6104  000146  6E0F               	movwf	(___aomod@divisor+6)^0,c
  6105  000148  0E00               	movlw	0
  6106  00014A  6E10               	movwf	(___aomod@divisor+7)^0,c
  6107  00014C  EC90  F005         	call	___aomod	;wreg free
  6108  000150  C001  F026         	movff	?___aomod,??_dtoa
  6109  000154  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6110  000158  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6111  00015C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6112  000160  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6113  000164  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6114  000168  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6115  00016C  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6116  000170  C026  F013         	movff	??_dtoa,abs@a
  6117  000174  C028  F014         	movff	??_dtoa+2,abs@a+1
  6118  000178  EC29  F010         	call	_abs	;wreg free
  6119  00017C  5013               	movf	?_abs^0,w,c
  6120  00017E  0F30               	addlw	48
  6121  000180  6EDF               	movwf	indf2,c
  6122  000182                     
  6123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  6124  000182  0630               	decf	dtoa@p^0,f,c
  6125  000184  A0D8               	btfss	status,0,c
  6126  000186  0631               	decf	(dtoa@p+1)^0,f,c
  6127  000188                     
  6128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  6129  000188  0632               	decf	dtoa@w^0,f,c
  6130  00018A  A0D8               	btfss	status,0,c
  6131  00018C  0633               	decf	(dtoa@w+1)^0,f,c
  6132  00018E                     
  6133                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  6134  00018E  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6135  000192  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6136  000196  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6137  00019A  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6138  00019E  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6139  0001A2  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6140  0001A6  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6141  0001AA  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6142  0001AE  0E0A               	movlw	10
  6143  0001B0  6E09               	movwf	___aodiv@divisor^0,c
  6144  0001B2  0E00               	movlw	0
  6145  0001B4  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  6146  0001B6  0E00               	movlw	0
  6147  0001B8  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  6148  0001BA  0E00               	movlw	0
  6149  0001BC  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  6150  0001BE  0E00               	movlw	0
  6151  0001C0  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  6152  0001C2  0E00               	movlw	0
  6153  0001C4  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  6154  0001C6  0E00               	movlw	0
  6155  0001C8  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  6156  0001CA  0E00               	movlw	0
  6157  0001CC  6E10               	movwf	(___aodiv@divisor+7)^0,c
  6158  0001CE  ECCC  F004         	call	___aodiv	;wreg free
  6159  0001D2  C001  F036         	movff	?___aodiv,dtoa@n
  6160  0001D6  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6161  0001DA  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6162  0001DE  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6163  0001E2  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6164  0001E6  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6165  0001EA  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6166  0001EE  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6167  0001F2                     l2681:
  6168                           
  6169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6170  0001F2  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  6171  0001F4  EF04  F001         	goto	u1661
  6172  0001F8  503F               	movf	(dtoa@i+1)^0,w,c
  6173  0001FA  E108               	bnz	u1660
  6174  0001FC  043E               	decf	dtoa@i^0,w,c
  6175  0001FE  A0D8               	btfss	status,0,c
  6176  000200  EF04  F001         	goto	u1661
  6177  000204  EF06  F001         	goto	u1660
  6178  000208                     u1661:
  6179  000208  EF37  F001         	goto	l2691
  6180  00020C                     u1660:
  6181  00020C  5036               	movf	dtoa@n^0,w,c
  6182  00020E  1037               	iorwf	(dtoa@n+1)^0,w,c
  6183  000210  1038               	iorwf	(dtoa@n+2)^0,w,c
  6184  000212  1039               	iorwf	(dtoa@n+3)^0,w,c
  6185  000214  103A               	iorwf	(dtoa@n+4)^0,w,c
  6186  000216  103B               	iorwf	(dtoa@n+5)^0,w,c
  6187  000218  103C               	iorwf	(dtoa@n+6)^0,w,c
  6188  00021A  103D               	iorwf	(dtoa@n+7)^0,w,c
  6189  00021C  A4D8               	btfss	status,2,c
  6190  00021E  EF13  F001         	goto	u1671
  6191  000222  EF15  F001         	goto	u1670
  6192  000226                     u1671:
  6193  000226  EF7D  F000         	goto	l2671
  6194  00022A                     u1670:
  6195  00022A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  6196  00022C  EF22  F001         	goto	u1680
  6197  000230  5031               	movf	(dtoa@p+1)^0,w,c
  6198  000232  E106               	bnz	u1681
  6199  000234  0430               	decf	dtoa@p^0,w,c
  6200  000236  B0D8               	btfsc	status,0,c
  6201  000238  EF20  F001         	goto	u1681
  6202  00023C  EF22  F001         	goto	u1680
  6203  000240                     u1681:
  6204  000240  EF7D  F000         	goto	l2671
  6205  000244                     u1680:
  6206  000244  BE33               	btfsc	(dtoa@w+1)^0,7,c
  6207  000246  EF2D  F001         	goto	u1691
  6208  00024A  5033               	movf	(dtoa@w+1)^0,w,c
  6209  00024C  E108               	bnz	u1690
  6210  00024E  0432               	decf	dtoa@w^0,w,c
  6211  000250  A0D8               	btfss	status,0,c
  6212  000252  EF2D  F001         	goto	u1691
  6213  000256  EF2F  F001         	goto	u1690
  6214  00025A                     u1691:
  6215  00025A  EF37  F001         	goto	l2691
  6216  00025E                     u1690:
  6217  00025E  0100               	movlb	0	; () banked
  6218  000260  B3E6               	btfsc	_flags& (0+255),1,b
  6219  000262  EF35  F001         	goto	u1701
  6220  000266  EF37  F001         	goto	u1700
  6221  00026A                     u1701:
  6222  00026A  EF7D  F000         	goto	l2671
  6223  00026E                     u1700:
  6224  00026E                     l2691:
  6225                           
  6226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6227  00026E  5034               	movf	dtoa@s^0,w,c
  6228  000270  1035               	iorwf	(dtoa@s+1)^0,w,c
  6229  000272  A4D8               	btfss	status,2,c
  6230  000274  EF3E  F001         	goto	u1711
  6231  000278  EF40  F001         	goto	u1710
  6232  00027C                     u1711:
  6233  00027C  EF48  F001         	goto	l2695
  6234  000280                     u1710:
  6235  000280  0100               	movlb	0	; () banked
  6236  000282  A5E6               	btfss	_flags& (0+255),2,b
  6237  000284  EF46  F001         	goto	u1721
  6238  000288  EF48  F001         	goto	u1720
  6239  00028C                     u1721:
  6240  00028C  EF66  F001         	goto	l2705
  6241  000290                     u1720:
  6242  000290                     l2695:
  6243                           
  6244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6245  000290  063E               	decf	dtoa@i^0,f,c
  6246  000292  A0D8               	btfss	status,0,c
  6247  000294  063F               	decf	(dtoa@i+1)^0,f,c
  6248  000296                     
  6249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6250  000296  5034               	movf	dtoa@s^0,w,c
  6251  000298  1035               	iorwf	(dtoa@s+1)^0,w,c
  6252  00029A  A4D8               	btfss	status,2,c
  6253  00029C  EF52  F001         	goto	u1731
  6254  0002A0  EF54  F001         	goto	u1730
  6255  0002A4                     u1731:
  6256  0002A4  EF5A  F001         	goto	l2701
  6257  0002A8                     u1730:
  6258  0002A8  0E00               	movlw	0
  6259  0002AA  6E2F               	movwf	(_dtoa$1026+1)^0,c
  6260  0002AC  0E2B               	movlw	43
  6261  0002AE  6E2E               	movwf	_dtoa$1026^0,c
  6262  0002B0  EF5E  F001         	goto	l2703
  6263  0002B4                     l2701:
  6264  0002B4  0E00               	movlw	0
  6265  0002B6  6E2F               	movwf	(_dtoa$1026+1)^0,c
  6266  0002B8  0E2D               	movlw	45
  6267  0002BA  6E2E               	movwf	_dtoa$1026^0,c
  6268  0002BC                     l2703:
  6269  0002BC  0E58               	movlw	low _dbuf
  6270  0002BE  243E               	addwf	dtoa@i^0,w,c
  6271  0002C0  6ED9               	movwf	fsr2l,c
  6272  0002C2  0E01               	movlw	high _dbuf
  6273  0002C4  203F               	addwfc	(dtoa@i+1)^0,w,c
  6274  0002C6  6EDA               	movwf	fsr2h,c
  6275  0002C8  C02E  FFDF         	movff	_dtoa$1026,indf2
  6276  0002CC                     l2705:
  6277                           
  6278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6279  0002CC  C01C  F011         	movff	dtoa@fp,pad@fp
  6280  0002D0  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6281  0002D4  0E58               	movlw	low _dbuf
  6282  0002D6  243E               	addwf	dtoa@i^0,w,c
  6283  0002D8  6E13               	movwf	pad@buf^0,c
  6284  0002DA  0E01               	movlw	high _dbuf
  6285  0002DC  203F               	addwfc	(dtoa@i+1)^0,w,c
  6286  0002DE  6E14               	movwf	(pad@buf+1)^0,c
  6287  0002E0  C032  F015         	movff	dtoa@w,pad@p
  6288  0002E4  C033  F016         	movff	dtoa@w+1,pad@p+1
  6289  0002E8  EC75  F00A         	call	_pad	;wreg free
  6290  0002EC  C011  F01C         	movff	?_pad,?_dtoa
  6291  0002F0  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6292  0002F4  0012               	return		;funcret
  6293  0002F6                     __end_of_dtoa:
  6294                           	opt callstack 0
  6295                           
  6296 ;; *************** function _abs *****************
  6297 ;; Defined at:
  6298 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;  a               2   18[COMRAM] int 
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;		None
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  2   18[COMRAM] int 
  6305 ;; Registers used:
  6306 ;;		wreg, status,2, status,0
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6312 ;;      Params:         2       0       0       0       0       0       0       0       0
  6313 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6314 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6315 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6316 ;;Total ram usage:        4 bytes
  6317 ;; Hardware stack levels used:    1
  6318 ;; Hardware stack levels required when called:    1
  6319 ;; This function calls:
  6320 ;;		Nothing
  6321 ;; This function is called by:
  6322 ;;		_dtoa
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           	psect	text32
  6327  002052                     __ptext32:
  6328                           	opt callstack 0
  6329  002052                     _abs:
  6330                           	opt callstack 23
  6331  002052  BE14               	btfsc	(abs@a+1)^0,7,c
  6332  002054  EF36  F010         	goto	u1440
  6333  002058  5014               	movf	(abs@a+1)^0,w,c
  6334  00205A  E106               	bnz	u1441
  6335  00205C  0413               	decf	abs@a^0,w,c
  6336  00205E  B0D8               	btfsc	status,0,c
  6337  002060  EF34  F010         	goto	u1441
  6338  002064  EF36  F010         	goto	u1440
  6339  002068                     u1441:
  6340  002068  EF44  F010         	goto	l1172
  6341  00206C                     u1440:
  6342  00206C  C013  F015         	movff	abs@a,??_abs
  6343  002070  C014  F016         	movff	abs@a+1,??_abs+1
  6344  002074  1E15               	comf	??_abs^0,f,c
  6345  002076  1E16               	comf	(??_abs+1)^0,f,c
  6346  002078  4A15               	infsnz	??_abs^0,f,c
  6347  00207A  2A16               	incf	(??_abs+1)^0,f,c
  6348  00207C  C015  F013         	movff	??_abs,?_abs
  6349  002080  C016  F014         	movff	??_abs+1,?_abs+1
  6350  002084  EF48  F010         	goto	l1175
  6351  002088                     l1172:
  6352  002088  C013  F013         	movff	abs@a,?_abs
  6353  00208C  C014  F014         	movff	abs@a+1,?_abs+1
  6354  002090                     l1175:
  6355  002090  0012               	return		;funcret
  6356  002092                     __end_of_abs:
  6357                           	opt callstack 0
  6358                           
  6359 ;; *************** function ___aomod *****************
  6360 ;; Defined at:
  6361 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;  dividend        8    0[COMRAM] long long 
  6364 ;;  divisor         8    8[COMRAM] long long 
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;  sign            1   17[COMRAM] unsigned char 
  6367 ;;  counter         1   16[COMRAM] unsigned char 
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  8    0[COMRAM] long long 
  6370 ;; Registers used:
  6371 ;;		wreg, status,2, status,0
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6377 ;;      Params:        16       0       0       0       0       0       0       0       0
  6378 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6379 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6380 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6381 ;;Total ram usage:       18 bytes
  6382 ;; Hardware stack levels used:    1
  6383 ;; Hardware stack levels required when called:    1
  6384 ;; This function calls:
  6385 ;;		Nothing
  6386 ;; This function is called by:
  6387 ;;		_dtoa
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           	psect	text33
  6392  000B20                     __ptext33:
  6393                           	opt callstack 0
  6394  000B20                     ___aomod:
  6395                           	opt callstack 23
  6396  000B20  0E00               	movlw	0
  6397  000B22  6E12               	movwf	___aomod@sign^0,c
  6398  000B24  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6399  000B26  EF99  F005         	goto	u1520
  6400  000B2A  EF97  F005         	goto	u1521
  6401  000B2E                     u1521:
  6402  000B2E  EFAB  F005         	goto	l2605
  6403  000B32                     u1520:
  6404  000B32  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6405  000B34  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6406  000B36  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6407  000B38  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6408  000B3A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6409  000B3C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6410  000B3E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6411  000B40  6C01               	negf	___aomod@dividend^0,c
  6412  000B42  0E00               	movlw	0
  6413  000B44  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6414  000B46  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6415  000B48  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6416  000B4A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6417  000B4C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6418  000B4E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6419  000B50  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6420  000B52  0E01               	movlw	1
  6421  000B54  6E12               	movwf	___aomod@sign^0,c
  6422  000B56                     l2605:
  6423  000B56  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6424  000B58  EFB2  F005         	goto	u1530
  6425  000B5C  EFB0  F005         	goto	u1531
  6426  000B60                     u1531:
  6427  000B60  EFC2  F005         	goto	l2609
  6428  000B64                     u1530:
  6429  000B64  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6430  000B66  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6431  000B68  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6432  000B6A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6433  000B6C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6434  000B6E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6435  000B70  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6436  000B72  6C09               	negf	___aomod@divisor^0,c
  6437  000B74  0E00               	movlw	0
  6438  000B76  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6439  000B78  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6440  000B7A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6441  000B7C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6442  000B7E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6443  000B80  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6444  000B82  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6445  000B84                     l2609:
  6446  000B84  5009               	movf	___aomod@divisor^0,w,c
  6447  000B86  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6448  000B88  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6449  000B8A  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6450  000B8C  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6451  000B8E  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6452  000B90  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6453  000B92  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6454  000B94  B4D8               	btfsc	status,2,c
  6455  000B96  EFCF  F005         	goto	u1541
  6456  000B9A  EFD1  F005         	goto	u1540
  6457  000B9E                     u1541:
  6458  000B9E  EF19  F006         	goto	l2625
  6459  000BA2                     u1540:
  6460  000BA2  0E01               	movlw	1
  6461  000BA4  6E11               	movwf	___aomod@counter^0,c
  6462  000BA6  EFDF  F005         	goto	l2615
  6463  000BAA                     l2613:
  6464  000BAA  90D8               	bcf	status,0,c
  6465  000BAC  3609               	rlcf	___aomod@divisor^0,f,c
  6466  000BAE  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6467  000BB0  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6468  000BB2  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6469  000BB4  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6470  000BB6  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6471  000BB8  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6472  000BBA  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6473  000BBC  2A11               	incf	___aomod@counter^0,f,c
  6474  000BBE                     l2615:
  6475  000BBE  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6476  000BC0  EFE4  F005         	goto	u1551
  6477  000BC4  EFE6  F005         	goto	u1550
  6478  000BC8                     u1551:
  6479  000BC8  EFD5  F005         	goto	l2613
  6480  000BCC                     u1550:
  6481  000BCC                     l2617:
  6482  000BCC  5009               	movf	___aomod@divisor^0,w,c
  6483  000BCE  5C01               	subwf	___aomod@dividend^0,w,c
  6484  000BD0  500A               	movf	(___aomod@divisor+1)^0,w,c
  6485  000BD2  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6486  000BD4  500B               	movf	(___aomod@divisor+2)^0,w,c
  6487  000BD6  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6488  000BD8  500C               	movf	(___aomod@divisor+3)^0,w,c
  6489  000BDA  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6490  000BDC  500D               	movf	(___aomod@divisor+4)^0,w,c
  6491  000BDE  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6492  000BE0  500E               	movf	(___aomod@divisor+5)^0,w,c
  6493  000BE2  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6494  000BE4  500F               	movf	(___aomod@divisor+6)^0,w,c
  6495  000BE6  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6496  000BE8  5010               	movf	(___aomod@divisor+7)^0,w,c
  6497  000BEA  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6498  000BEC  A0D8               	btfss	status,0,c
  6499  000BEE  EFFB  F005         	goto	u1561
  6500  000BF2  EFFD  F005         	goto	u1560
  6501  000BF6                     u1561:
  6502  000BF6  EF0D  F006         	goto	l2621
  6503  000BFA                     u1560:
  6504  000BFA  5009               	movf	___aomod@divisor^0,w,c
  6505  000BFC  5E01               	subwf	___aomod@dividend^0,f,c
  6506  000BFE  500A               	movf	(___aomod@divisor+1)^0,w,c
  6507  000C00  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6508  000C02  500B               	movf	(___aomod@divisor+2)^0,w,c
  6509  000C04  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6510  000C06  500C               	movf	(___aomod@divisor+3)^0,w,c
  6511  000C08  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6512  000C0A  500D               	movf	(___aomod@divisor+4)^0,w,c
  6513  000C0C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6514  000C0E  500E               	movf	(___aomod@divisor+5)^0,w,c
  6515  000C10  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6516  000C12  500F               	movf	(___aomod@divisor+6)^0,w,c
  6517  000C14  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6518  000C16  5010               	movf	(___aomod@divisor+7)^0,w,c
  6519  000C18  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6520  000C1A                     l2621:
  6521  000C1A  90D8               	bcf	status,0,c
  6522  000C1C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6523  000C1E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6524  000C20  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6525  000C22  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6526  000C24  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6527  000C26  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6528  000C28  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6529  000C2A  3209               	rrcf	___aomod@divisor^0,f,c
  6530  000C2C  2E11               	decfsz	___aomod@counter^0,f,c
  6531  000C2E  EFE6  F005         	goto	l2617
  6532  000C32                     l2625:
  6533  000C32  5012               	movf	___aomod@sign^0,w,c
  6534  000C34  B4D8               	btfsc	status,2,c
  6535  000C36  EF1F  F006         	goto	u1571
  6536  000C3A  EF21  F006         	goto	u1570
  6537  000C3E                     u1571:
  6538  000C3E  EF31  F006         	goto	l2629
  6539  000C42                     u1570:
  6540  000C42  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6541  000C44  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6542  000C46  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6543  000C48  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6544  000C4A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6545  000C4C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6546  000C4E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6547  000C50  6C01               	negf	___aomod@dividend^0,c
  6548  000C52  0E00               	movlw	0
  6549  000C54  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6550  000C56  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6551  000C58  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6552  000C5A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6553  000C5C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6554  000C5E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6555  000C60  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6556  000C62                     l2629:
  6557  000C62  C001  F001         	movff	___aomod@dividend,?___aomod
  6558  000C66  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6559  000C6A  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6560  000C6E  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6561  000C72  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6562  000C76  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6563  000C7A  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6564  000C7E  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6565  000C82  0012               	return		;funcret
  6566  000C84                     __end_of___aomod:
  6567                           	opt callstack 0
  6568                           
  6569 ;; *************** function ___aodiv *****************
  6570 ;; Defined at:
  6571 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;  dividend        8    0[COMRAM] long long 
  6574 ;;  divisor         8    8[COMRAM] long long 
  6575 ;; Auto vars:     Size  Location     Type
  6576 ;;  quotient        8   18[COMRAM] long long 
  6577 ;;  sign            1   17[COMRAM] unsigned char 
  6578 ;;  counter         1   16[COMRAM] unsigned char 
  6579 ;; Return value:  Size  Location     Type
  6580 ;;                  8    0[COMRAM] long long 
  6581 ;; Registers used:
  6582 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6583 ;; Tracked objects:
  6584 ;;		On entry : 0/0
  6585 ;;		On exit  : 0/0
  6586 ;;		Unchanged: 0/0
  6587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6588 ;;      Params:        16       0       0       0       0       0       0       0       0
  6589 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6590 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6591 ;;      Totals:        26       0       0       0       0       0       0       0       0
  6592 ;;Total ram usage:       26 bytes
  6593 ;; Hardware stack levels used:    1
  6594 ;; Hardware stack levels required when called:    1
  6595 ;; This function calls:
  6596 ;;		Nothing
  6597 ;; This function is called by:
  6598 ;;		_dtoa
  6599 ;; This function uses a non-reentrant model
  6600 ;;
  6601                           
  6602                           	psect	text34
  6603  000998                     __ptext34:
  6604                           	opt callstack 0
  6605  000998                     ___aodiv:
  6606                           	opt callstack 23
  6607  000998  0E00               	movlw	0
  6608  00099A  6E12               	movwf	___aodiv@sign^0,c
  6609  00099C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6610  00099E  EFD5  F004         	goto	u1450
  6611  0009A2  EFD3  F004         	goto	u1451
  6612  0009A6                     u1451:
  6613  0009A6  EFE7  F004         	goto	l2561
  6614  0009AA                     u1450:
  6615  0009AA  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6616  0009AC  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6617  0009AE  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6618  0009B0  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6619  0009B2  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6620  0009B4  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6621  0009B6  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6622  0009B8  6C09               	negf	___aodiv@divisor^0,c
  6623  0009BA  0E00               	movlw	0
  6624  0009BC  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6625  0009BE  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6626  0009C0  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6627  0009C2  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6628  0009C4  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6629  0009C6  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6630  0009C8  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6631  0009CA  0E01               	movlw	1
  6632  0009CC  6E12               	movwf	___aodiv@sign^0,c
  6633  0009CE                     l2561:
  6634  0009CE  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6635  0009D0  EFEE  F004         	goto	u1460
  6636  0009D4  EFEC  F004         	goto	u1461
  6637  0009D8                     u1461:
  6638  0009D8  EF00  F005         	goto	l2567
  6639  0009DC                     u1460:
  6640  0009DC  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6641  0009DE  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6642  0009E0  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6643  0009E2  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6644  0009E4  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6645  0009E6  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6646  0009E8  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6647  0009EA  6C01               	negf	___aodiv@dividend^0,c
  6648  0009EC  0E00               	movlw	0
  6649  0009EE  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6650  0009F0  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6651  0009F2  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6652  0009F4  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6653  0009F6  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6654  0009F8  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6655  0009FA  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6656  0009FC  0E01               	movlw	1
  6657  0009FE  1A12               	xorwf	___aodiv@sign^0,f,c
  6658  000A00                     l2567:
  6659  000A00  EE20  F013         	lfsr	2,___aodiv@quotient
  6660  000A04  0E07               	movlw	7
  6661  000A06                     u1471:
  6662  000A06  6ADE               	clrf	postinc2,c
  6663  000A08  06E8               	decf	wreg,f,c
  6664  000A0A  E2FD               	bc	u1471
  6665  000A0C  5009               	movf	___aodiv@divisor^0,w,c
  6666  000A0E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6667  000A10  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6668  000A12  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6669  000A14  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6670  000A16  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6671  000A18  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6672  000A1A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6673  000A1C  B4D8               	btfsc	status,2,c
  6674  000A1E  EF13  F005         	goto	u1481
  6675  000A22  EF15  F005         	goto	u1480
  6676  000A26                     u1481:
  6677  000A26  EF67  F005         	goto	l2589
  6678  000A2A                     u1480:
  6679  000A2A  0E01               	movlw	1
  6680  000A2C  6E11               	movwf	___aodiv@counter^0,c
  6681  000A2E  EF23  F005         	goto	l2575
  6682  000A32                     l2573:
  6683  000A32  90D8               	bcf	status,0,c
  6684  000A34  3609               	rlcf	___aodiv@divisor^0,f,c
  6685  000A36  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6686  000A38  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6687  000A3A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6688  000A3C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6689  000A3E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6690  000A40  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6691  000A42  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6692  000A44  2A11               	incf	___aodiv@counter^0,f,c
  6693  000A46                     l2575:
  6694  000A46  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6695  000A48  EF28  F005         	goto	u1491
  6696  000A4C  EF2A  F005         	goto	u1490
  6697  000A50                     u1491:
  6698  000A50  EF19  F005         	goto	l2573
  6699  000A54                     u1490:
  6700  000A54                     l2577:
  6701  000A54  90D8               	bcf	status,0,c
  6702  000A56  3613               	rlcf	___aodiv@quotient^0,f,c
  6703  000A58  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6704  000A5A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6705  000A5C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6706  000A5E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6707  000A60  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6708  000A62  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6709  000A64  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6710  000A66  5009               	movf	___aodiv@divisor^0,w,c
  6711  000A68  5C01               	subwf	___aodiv@dividend^0,w,c
  6712  000A6A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6713  000A6C  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6714  000A6E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6715  000A70  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6716  000A72  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6717  000A74  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6718  000A76  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6719  000A78  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6720  000A7A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6721  000A7C  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6722  000A7E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6723  000A80  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6724  000A82  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6725  000A84  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6726  000A86  A0D8               	btfss	status,0,c
  6727  000A88  EF48  F005         	goto	u1501
  6728  000A8C  EF4A  F005         	goto	u1500
  6729  000A90                     u1501:
  6730  000A90  EF5B  F005         	goto	l2585
  6731  000A94                     u1500:
  6732  000A94  5009               	movf	___aodiv@divisor^0,w,c
  6733  000A96  5E01               	subwf	___aodiv@dividend^0,f,c
  6734  000A98  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6735  000A9A  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6736  000A9C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6737  000A9E  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6738  000AA0  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6739  000AA2  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6740  000AA4  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6741  000AA6  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6742  000AA8  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6743  000AAA  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6744  000AAC  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6745  000AAE  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6746  000AB0  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6747  000AB2  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6748  000AB4  8013               	bsf	___aodiv@quotient^0,0,c
  6749  000AB6                     l2585:
  6750  000AB6  90D8               	bcf	status,0,c
  6751  000AB8  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6752  000ABA  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6753  000ABC  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6754  000ABE  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6755  000AC0  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6756  000AC2  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6757  000AC4  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6758  000AC6  3209               	rrcf	___aodiv@divisor^0,f,c
  6759  000AC8  2E11               	decfsz	___aodiv@counter^0,f,c
  6760  000ACA  EF2A  F005         	goto	l2577
  6761  000ACE                     l2589:
  6762  000ACE  5012               	movf	___aodiv@sign^0,w,c
  6763  000AD0  B4D8               	btfsc	status,2,c
  6764  000AD2  EF6D  F005         	goto	u1511
  6765  000AD6  EF6F  F005         	goto	u1510
  6766  000ADA                     u1511:
  6767  000ADA  EF7F  F005         	goto	l2593
  6768  000ADE                     u1510:
  6769  000ADE  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6770  000AE0  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6771  000AE2  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6772  000AE4  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6773  000AE6  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6774  000AE8  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6775  000AEA  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6776  000AEC  6C13               	negf	___aodiv@quotient^0,c
  6777  000AEE  0E00               	movlw	0
  6778  000AF0  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6779  000AF2  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6780  000AF4  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6781  000AF6  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6782  000AF8  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6783  000AFA  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6784  000AFC  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6785  000AFE                     l2593:
  6786  000AFE  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6787  000B02  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6788  000B06  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6789  000B0A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6790  000B0E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6791  000B12  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6792  000B16  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6793  000B1A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6794  000B1E  0012               	return		;funcret
  6795  000B20                     __end_of___aodiv:
  6796                           	opt callstack 0
  6797                           
  6798 ;; *************** function _ctoa *****************
  6799 ;; Defined at:
  6800 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6803 ;;		 -> sprintf@f(6), 
  6804 ;;  c               1   29[COMRAM] unsigned char 
  6805 ;; Auto vars:     Size  Location     Type
  6806 ;;  w               2   30[COMRAM] int 
  6807 ;;  l               2    0        int 
  6808 ;; Return value:  Size  Location     Type
  6809 ;;                  2   27[COMRAM] int 
  6810 ;; Registers used:
  6811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6812 ;; Tracked objects:
  6813 ;;		On entry : 0/0
  6814 ;;		On exit  : 0/0
  6815 ;;		Unchanged: 0/0
  6816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6817 ;;      Params:         3       0       0       0       0       0       0       0       0
  6818 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6819 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6820 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6821 ;;Total ram usage:        5 bytes
  6822 ;; Hardware stack levels used:    1
  6823 ;; Hardware stack levels required when called:    5
  6824 ;; This function calls:
  6825 ;;		_pad
  6826 ;; This function is called by:
  6827 ;;		_vfpfcnvrt
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831                           	psect	text35
  6832  001DAC                     __ptext35:
  6833                           	opt callstack 0
  6834  001DAC                     _ctoa:
  6835                           	opt callstack 20
  6836  001DAC                     
  6837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  6838  001DAC  0100               	movlb	0	; () banked
  6839  001DAE  51E2               	movf	_width& (0+255),w,b
  6840  001DB0  11E3               	iorwf	(_width+1)& (0+255),w,b
  6841  001DB2  A4D8               	btfss	status,2,c
  6842  001DB4  EFDE  F00E         	goto	u1581
  6843  001DB8  EFE0  F00E         	goto	u1580
  6844  001DBC                     u1581:
  6845  001DBC  EFE6  F00E         	goto	l2637
  6846  001DC0                     u1580:
  6847  001DC0                     
  6848                           ; BSR set to: 0
  6849  001DC0  C0E2  F01F         	movff	_width,ctoa@w
  6850  001DC4  C0E3  F020         	movff	_width+1,ctoa@w+1
  6851  001DC8  EFEC  F00E         	goto	l2639
  6852  001DCC                     l2637:
  6853                           
  6854                           ; BSR set to: 0
  6855  001DCC  0EFF               	movlw	255
  6856  001DCE  25E2               	addwf	_width& (0+255),w,b
  6857  001DD0  6E1F               	movwf	ctoa@w^0,c
  6858  001DD2  0EFF               	movlw	255
  6859  001DD4  21E3               	addwfc	(_width+1)& (0+255),w,b
  6860  001DD6  6E20               	movwf	(ctoa@w+1)^0,c
  6861  001DD8                     l2639:
  6862                           
  6863                           ; BSR set to: 0
  6864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  6865  001DD8  C01E  F158         	movff	ctoa@c,_dbuf
  6866  001DDC                     
  6867                           ; BSR set to: 0
  6868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  6869  001DDC  0E00               	movlw	0
  6870  001DDE  0101               	movlb	1	; () banked
  6871  001DE0  6F59               	movwf	(_dbuf+1)& (0+255),b
  6872  001DE2                     
  6873                           ; BSR set to: 1
  6874                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  6875  001DE2  C01C  F011         	movff	ctoa@fp,pad@fp
  6876  001DE6  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  6877  001DEA  0E58               	movlw	low _dbuf
  6878  001DEC  6E13               	movwf	pad@buf^0,c
  6879  001DEE  0E01               	movlw	high _dbuf
  6880  001DF0  6E14               	movwf	(pad@buf+1)^0,c
  6881  001DF2  C01F  F015         	movff	ctoa@w,pad@p
  6882  001DF6  C020  F016         	movff	ctoa@w+1,pad@p+1
  6883  001DFA  EC75  F00A         	call	_pad	;wreg free
  6884  001DFE  C011  F01C         	movff	?_pad,?_ctoa
  6885  001E02  C012  F01D         	movff	?_pad+1,?_ctoa+1
  6886  001E06  0012               	return		;funcret
  6887  001E08                     __end_of_ctoa:
  6888                           	opt callstack 0
  6889                           
  6890 ;; *************** function _pad *****************
  6891 ;; Defined at:
  6892 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6895 ;;		 -> sprintf@f(6), 
  6896 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6897 ;;		 -> dbuf(32), 
  6898 ;;  p               2   20[COMRAM] int 
  6899 ;; Auto vars:     Size  Location     Type
  6900 ;;  w               2   25[COMRAM] int 
  6901 ;;  i               2   23[COMRAM] int 
  6902 ;; Return value:  Size  Location     Type
  6903 ;;                  2   16[COMRAM] int 
  6904 ;; Registers used:
  6905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6906 ;; Tracked objects:
  6907 ;;		On entry : 0/0
  6908 ;;		On exit  : 0/0
  6909 ;;		Unchanged: 0/0
  6910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6911 ;;      Params:         6       0       0       0       0       0       0       0       0
  6912 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6913 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6914 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6915 ;;Total ram usage:       11 bytes
  6916 ;; Hardware stack levels used:    1
  6917 ;; Hardware stack levels required when called:    4
  6918 ;; This function calls:
  6919 ;;		_fputc
  6920 ;;		_fputs
  6921 ;;		_strlen
  6922 ;; This function is called by:
  6923 ;;		_ctoa
  6924 ;;		_dtoa
  6925 ;; This function uses a non-reentrant model
  6926 ;;
  6927                           
  6928                           	psect	text36
  6929  0014EA                     __ptext36:
  6930                           	opt callstack 0
  6931  0014EA                     _pad:
  6932                           	opt callstack 20
  6933  0014EA                     
  6934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6935  0014EA  0100               	movlb	0	; () banked
  6936  0014EC  A1E6               	btfss	_flags& (0+255),0,b
  6937  0014EE  EF7B  F00A         	goto	u1401
  6938  0014F2  EF7D  F00A         	goto	u1400
  6939  0014F6                     u1401:
  6940  0014F6  EF87  F00A         	goto	l2531
  6941  0014FA                     u1400:
  6942  0014FA                     
  6943                           ; BSR set to: 0
  6944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6945  0014FA  C013  F00A         	movff	pad@buf,fputs@s
  6946  0014FE  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6947  001502  C011  F00C         	movff	pad@fp,fputs@fp
  6948  001506  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6949  00150A  ECE7  F00F         	call	_fputs	;wreg free
  6950  00150E                     l2531:
  6951                           
  6952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6953  00150E  BE16               	btfsc	(pad@p+1)^0,7,c
  6954  001510  EF8C  F00A         	goto	u1411
  6955  001514  EF8E  F00A         	goto	u1410
  6956  001518                     u1411:
  6957  001518  EF94  F00A         	goto	l2535
  6958  00151C                     u1410:
  6959  00151C  C015  F01A         	movff	pad@p,pad@w
  6960  001520  C016  F01B         	movff	pad@p+1,pad@w+1
  6961  001524  EF98  F00A         	goto	l441
  6962  001528                     l2535:
  6963  001528  0E00               	movlw	0
  6964  00152A  6E1B               	movwf	(pad@w+1)^0,c
  6965  00152C  0E00               	movlw	0
  6966  00152E  6E1A               	movwf	pad@w^0,c
  6967  001530                     l441:
  6968                           
  6969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6970  001530  0E00               	movlw	0
  6971  001532  6E19               	movwf	(pad@i+1)^0,c
  6972  001534  0E00               	movlw	0
  6973  001536  6E18               	movwf	pad@i^0,c
  6974                           
  6975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6976  001538  EFAA  F00A         	goto	l2541
  6977  00153C                     l2537:
  6978                           
  6979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6980  00153C  0E00               	movlw	0
  6981  00153E  6E02               	movwf	(fputc@c+1)^0,c
  6982  001540  0E20               	movlw	32
  6983  001542  6E01               	movwf	fputc@c^0,c
  6984  001544  C011  F003         	movff	pad@fp,fputc@fp
  6985  001548  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6986  00154C  ECAC  F009         	call	_fputc	;wreg free
  6987  001550                     
  6988                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6989  001550  4A18               	infsnz	pad@i^0,f,c
  6990  001552  2A19               	incf	(pad@i+1)^0,f,c
  6991  001554                     l2541:
  6992                           
  6993                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6994  001554  501A               	movf	pad@w^0,w,c
  6995  001556  5C18               	subwf	pad@i^0,w,c
  6996  001558  5019               	movf	(pad@i+1)^0,w,c
  6997  00155A  0A80               	xorlw	128
  6998  00155C  6E17               	movwf	??_pad^0,c
  6999  00155E  501B               	movf	(pad@w+1)^0,w,c
  7000  001560  0A80               	xorlw	128
  7001  001562  5817               	subwfb	??_pad^0,w,c
  7002  001564  A0D8               	btfss	status,0,c
  7003  001566  EFB7  F00A         	goto	u1421
  7004  00156A  EFB9  F00A         	goto	u1420
  7005  00156E                     u1421:
  7006  00156E  EF9E  F00A         	goto	l2537
  7007  001572                     u1420:
  7008  001572                     
  7009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  7010  001572  0100               	movlb	0	; () banked
  7011  001574  B1E6               	btfsc	_flags& (0+255),0,b
  7012  001576  EFBF  F00A         	goto	u1431
  7013  00157A  EFC1  F00A         	goto	u1430
  7014  00157E                     u1431:
  7015  00157E  EFCB  F00A         	goto	l2545
  7016  001582                     u1430:
  7017  001582                     
  7018                           ; BSR set to: 0
  7019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  7020  001582  C013  F00A         	movff	pad@buf,fputs@s
  7021  001586  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7022  00158A  C011  F00C         	movff	pad@fp,fputs@fp
  7023  00158E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7024  001592  ECE7  F00F         	call	_fputs	;wreg free
  7025  001596                     l2545:
  7026                           
  7027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  7028  001596  C013  F001         	movff	pad@buf,strlen@s
  7029  00159A  C014  F002         	movff	pad@buf+1,strlen@s+1
  7030  00159E  EC83  F010         	call	_strlen	;wreg free
  7031  0015A2  501A               	movf	pad@w^0,w,c
  7032  0015A4  2401               	addwf	?_strlen^0,w,c
  7033  0015A6  6E11               	movwf	?_pad^0,c
  7034  0015A8  501B               	movf	(pad@w+1)^0,w,c
  7035  0015AA  2002               	addwfc	(?_strlen+1)^0,w,c
  7036  0015AC  6E12               	movwf	(?_pad+1)^0,c
  7037  0015AE  0012               	return		;funcret
  7038  0015B0                     __end_of_pad:
  7039                           	opt callstack 0
  7040                           
  7041 ;; *************** function _strlen *****************
  7042 ;; Defined at:
  7043 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7046 ;;		 -> dbuf(32), 
  7047 ;; Auto vars:     Size  Location     Type
  7048 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7049 ;;		 -> dbuf(32), 
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  2    0[COMRAM] unsigned int 
  7052 ;; Registers used:
  7053 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7059 ;;      Params:         2       0       0       0       0       0       0       0       0
  7060 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7061 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7062 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7063 ;;Total ram usage:        4 bytes
  7064 ;; Hardware stack levels used:    1
  7065 ;; Hardware stack levels required when called:    1
  7066 ;; This function calls:
  7067 ;;		Nothing
  7068 ;; This function is called by:
  7069 ;;		_pad
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073                           	psect	text37
  7074  002106                     __ptext37:
  7075                           	opt callstack 0
  7076  002106                     _strlen:
  7077                           	opt callstack 22
  7078  002106  C001  F003         	movff	strlen@s,strlen@a
  7079  00210A  C002  F004         	movff	strlen@s+1,strlen@a+1
  7080  00210E  EF8B  F010         	goto	l2521
  7081  002112                     l2519:
  7082  002112  4A01               	infsnz	strlen@s^0,f,c
  7083  002114  2A02               	incf	(strlen@s+1)^0,f,c
  7084  002116                     l2521:
  7085  002116  C001  FFD9         	movff	strlen@s,fsr2l
  7086  00211A  C002  FFDA         	movff	strlen@s+1,fsr2h
  7087  00211E  50DF               	movf	indf2,w,c
  7088  002120  A4D8               	btfss	status,2,c
  7089  002122  EF95  F010         	goto	u1391
  7090  002126  EF97  F010         	goto	u1390
  7091  00212A                     u1391:
  7092  00212A  EF89  F010         	goto	l2519
  7093  00212E                     u1390:
  7094  00212E  5003               	movf	strlen@a^0,w,c
  7095  002130  5C01               	subwf	strlen@s^0,w,c
  7096  002132  6E01               	movwf	?_strlen^0,c
  7097  002134  5004               	movf	(strlen@a+1)^0,w,c
  7098  002136  5802               	subwfb	(strlen@s+1)^0,w,c
  7099  002138  6E02               	movwf	(?_strlen+1)^0,c
  7100  00213A  0012               	return		;funcret
  7101  00213C                     __end_of_strlen:
  7102                           	opt callstack 0
  7103                           
  7104 ;; *************** function _fputs *****************
  7105 ;; Defined at:
  7106 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  7107 ;; Parameters:    Size  Location     Type
  7108 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7109 ;;		 -> dbuf(32), 
  7110 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7111 ;;		 -> sprintf@f(6), 
  7112 ;; Auto vars:     Size  Location     Type
  7113 ;;  i               2   14[COMRAM] int 
  7114 ;;  c               1   13[COMRAM] unsigned char 
  7115 ;; Return value:  Size  Location     Type
  7116 ;;                  2    9[COMRAM] int 
  7117 ;; Registers used:
  7118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7119 ;; Tracked objects:
  7120 ;;		On entry : 0/0
  7121 ;;		On exit  : 0/0
  7122 ;;		Unchanged: 0/0
  7123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7124 ;;      Params:         4       0       0       0       0       0       0       0       0
  7125 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7127 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7128 ;;Total ram usage:        7 bytes
  7129 ;; Hardware stack levels used:    1
  7130 ;; Hardware stack levels required when called:    3
  7131 ;; This function calls:
  7132 ;;		_fputc
  7133 ;; This function is called by:
  7134 ;;		_pad
  7135 ;; This function uses a non-reentrant model
  7136 ;;
  7137                           
  7138                           	psect	text38
  7139  001FCE                     __ptext38:
  7140                           	opt callstack 0
  7141  001FCE                     _fputs:
  7142                           	opt callstack 20
  7143  001FCE  0E00               	movlw	0
  7144  001FD0  6E10               	movwf	(fputs@i+1)^0,c
  7145  001FD2  0E00               	movlw	0
  7146  001FD4  6E0F               	movwf	fputs@i^0,c
  7147  001FD6  EFF8  F00F         	goto	l2515
  7148  001FDA                     l2511:
  7149  001FDA  C00E  F001         	movff	fputs@c,fputc@c
  7150  001FDE  6A02               	clrf	(fputc@c+1)^0,c
  7151  001FE0  C00C  F003         	movff	fputs@fp,fputc@fp
  7152  001FE4  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7153  001FE8  ECAC  F009         	call	_fputc	;wreg free
  7154  001FEC  4A0F               	infsnz	fputs@i^0,f,c
  7155  001FEE  2A10               	incf	(fputs@i+1)^0,f,c
  7156  001FF0                     l2515:
  7157  001FF0  500F               	movf	fputs@i^0,w,c
  7158  001FF2  240A               	addwf	fputs@s^0,w,c
  7159  001FF4  6ED9               	movwf	fsr2l,c
  7160  001FF6  5010               	movf	(fputs@i+1)^0,w,c
  7161  001FF8  200B               	addwfc	(fputs@s+1)^0,w,c
  7162  001FFA  6EDA               	movwf	fsr2h,c
  7163  001FFC  50DF               	movf	indf2,w,c
  7164  001FFE  6E0E               	movwf	fputs@c^0,c
  7165  002000  500E               	movf	fputs@c^0,w,c
  7166  002002  A4D8               	btfss	status,2,c
  7167  002004  EF06  F010         	goto	u1381
  7168  002008  EF08  F010         	goto	u1380
  7169  00200C                     u1381:
  7170  00200C  EFED  F00F         	goto	l2511
  7171  002010                     u1380:
  7172  002010  0012               	return		;funcret
  7173  002012                     __end_of_fputs:
  7174                           	opt callstack 0
  7175                           
  7176 ;; *************** function _fputc *****************
  7177 ;; Defined at:
  7178 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;  c               2    0[COMRAM] int 
  7181 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7182 ;;		 -> sprintf@f(6), 
  7183 ;; Auto vars:     Size  Location     Type
  7184 ;;		None
  7185 ;; Return value:  Size  Location     Type
  7186 ;;                  2    0[COMRAM] int 
  7187 ;; Registers used:
  7188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7189 ;; Tracked objects:
  7190 ;;		On entry : 0/0
  7191 ;;		On exit  : 0/0
  7192 ;;		Unchanged: 0/0
  7193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7194 ;;      Params:         4       0       0       0       0       0       0       0       0
  7195 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7196 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7197 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7198 ;;Total ram usage:        9 bytes
  7199 ;; Hardware stack levels used:    1
  7200 ;; Hardware stack levels required when called:    2
  7201 ;; This function calls:
  7202 ;;		_putch
  7203 ;; This function is called by:
  7204 ;;		_pad
  7205 ;;		_vfpfcnvrt
  7206 ;;		_fputs
  7207 ;; This function uses a non-reentrant model
  7208 ;;
  7209                           
  7210                           	psect	text39
  7211  001358                     __ptext39:
  7212                           	opt callstack 0
  7213  001358                     _fputc:
  7214                           	opt callstack 23
  7215  001358  5003               	movf	fputc@fp^0,w,c
  7216  00135A  1004               	iorwf	(fputc@fp+1)^0,w,c
  7217  00135C  B4D8               	btfsc	status,2,c
  7218  00135E  EFB3  F009         	goto	u1341
  7219  001362  EFB5  F009         	goto	u1340
  7220  001366                     u1341:
  7221  001366  EFBE  F009         	goto	l2499
  7222  00136A                     u1340:
  7223  00136A  5003               	movf	fputc@fp^0,w,c
  7224  00136C  1004               	iorwf	(fputc@fp+1)^0,w,c
  7225  00136E  A4D8               	btfss	status,2,c
  7226  001370  EFBC  F009         	goto	u1351
  7227  001374  EFBE  F009         	goto	u1350
  7228  001378                     u1351:
  7229  001378  EFC3  F009         	goto	l2501
  7230  00137C                     u1350:
  7231  00137C                     l2499:
  7232  00137C  5001               	movf	fputc@c^0,w,c
  7233  00137E  EC8D  F011         	call	_putch
  7234  001382  EF10  F00A         	goto	l1187
  7235  001386                     l2501:
  7236  001386  EE20 F004          	lfsr	2,4
  7237  00138A  5003               	movf	fputc@fp^0,w,c
  7238  00138C  26D9               	addwf	fsr2l,f,c
  7239  00138E  5004               	movf	(fputc@fp+1)^0,w,c
  7240  001390  22DA               	addwfc	fsr2h,f,c
  7241  001392  50DE               	movf	postinc2,w,c
  7242  001394  10DE               	iorwf	postinc2,w,c
  7243  001396  B4D8               	btfsc	status,2,c
  7244  001398  EFD0  F009         	goto	u1361
  7245  00139C  EFD2  F009         	goto	u1360
  7246  0013A0                     u1361:
  7247  0013A0  EFED  F009         	goto	l2505
  7248  0013A4                     u1360:
  7249  0013A4  EE20 F004          	lfsr	2,4
  7250  0013A8  5003               	movf	fputc@fp^0,w,c
  7251  0013AA  26D9               	addwf	fsr2l,f,c
  7252  0013AC  5004               	movf	(fputc@fp+1)^0,w,c
  7253  0013AE  22DA               	addwfc	fsr2h,f,c
  7254  0013B0  EE10 F002          	lfsr	1,2
  7255  0013B4  5003               	movf	fputc@fp^0,w,c
  7256  0013B6  26E1               	addwf	fsr1l,f,c
  7257  0013B8  5004               	movf	(fputc@fp+1)^0,w,c
  7258  0013BA  22E2               	addwfc	fsr1h,f,c
  7259  0013BC  50DE               	movf	postinc2,w,c
  7260  0013BE  5CE6               	subwf	postinc1,w,c
  7261  0013C0  50E6               	movf	postinc1,w,c
  7262  0013C2  0A80               	xorlw	128
  7263  0013C4  6E09               	movwf	(??_fputc+4)^0,c
  7264  0013C6  50DE               	movf	postinc2,w,c
  7265  0013C8  0A80               	xorlw	128
  7266  0013CA  5809               	subwfb	(??_fputc+4)^0,w,c
  7267  0013CC  B0D8               	btfsc	status,0,c
  7268  0013CE  EFEB  F009         	goto	u1371
  7269  0013D2  EFED  F009         	goto	u1370
  7270  0013D6                     u1371:
  7271  0013D6  EF10  F00A         	goto	l1187
  7272  0013DA                     u1370:
  7273  0013DA                     l2505:
  7274  0013DA  EE20 F002          	lfsr	2,2
  7275  0013DE  5003               	movf	fputc@fp^0,w,c
  7276  0013E0  26D9               	addwf	fsr2l,f,c
  7277  0013E2  5004               	movf	(fputc@fp+1)^0,w,c
  7278  0013E4  22DA               	addwfc	fsr2h,f,c
  7279  0013E6  CFDE F005          	movff	postinc2,??_fputc
  7280  0013EA  CFDD F006          	movff	postdec2,??_fputc+1
  7281  0013EE  C003  FFD9         	movff	fputc@fp,fsr2l
  7282  0013F2  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7283  0013F6  CFDE F007          	movff	postinc2,??_fputc+2
  7284  0013FA  CFDD F008          	movff	postdec2,??_fputc+3
  7285  0013FE  5005               	movf	??_fputc^0,w,c
  7286  001400  2407               	addwf	(??_fputc+2)^0,w,c
  7287  001402  6ED9               	movwf	fsr2l,c
  7288  001404  5006               	movf	(??_fputc+1)^0,w,c
  7289  001406  2008               	addwfc	(??_fputc+3)^0,w,c
  7290  001408  6EDA               	movwf	fsr2h,c
  7291  00140A  C001  FFDF         	movff	fputc@c,indf2
  7292  00140E  EE20 F002          	lfsr	2,2
  7293  001412  5003               	movf	fputc@fp^0,w,c
  7294  001414  26D9               	addwf	fsr2l,f,c
  7295  001416  5004               	movf	(fputc@fp+1)^0,w,c
  7296  001418  22DA               	addwfc	fsr2h,f,c
  7297  00141A  2ADE               	incf	postinc2,f,c
  7298  00141C  0E00               	movlw	0
  7299  00141E  22DD               	addwfc	postdec2,f,c
  7300  001420                     l1187:
  7301  001420  0012               	return		;funcret
  7302  001422                     __end_of_fputc:
  7303                           	opt callstack 0
  7304                           
  7305 ;; *************** function _putch *****************
  7306 ;; Defined at:
  7307 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  7308 ;; Parameters:    Size  Location     Type
  7309 ;;  c               1    wreg     unsigned char 
  7310 ;; Auto vars:     Size  Location     Type
  7311 ;;  c               1    0[COMRAM] unsigned char 
  7312 ;; Return value:  Size  Location     Type
  7313 ;;                  1    wreg      void 
  7314 ;; Registers used:
  7315 ;;		wreg
  7316 ;; Tracked objects:
  7317 ;;		On entry : 0/0
  7318 ;;		On exit  : 0/0
  7319 ;;		Unchanged: 0/0
  7320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7321 ;;      Params:         0       0       0       0       0       0       0       0       0
  7322 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7323 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7324 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7325 ;;Total ram usage:        0 bytes
  7326 ;; Hardware stack levels used:    1
  7327 ;; Hardware stack levels required when called:    1
  7328 ;; This function calls:
  7329 ;;		Nothing
  7330 ;; This function is called by:
  7331 ;;		_fputc
  7332 ;; This function uses a non-reentrant model
  7333 ;;
  7334                           
  7335                           	psect	text40
  7336  00231A                     __ptext40:
  7337                           	opt callstack 0
  7338  00231A                     _putch:
  7339                           	opt callstack 23
  7340  00231A  0012               	return		;funcret
  7341  00231C                     __end_of_putch:
  7342                           	opt callstack 0
  7343                           
  7344 ;; *************** function _asignarHorarios *****************
  7345 ;; Defined at:
  7346 ;;		line 336 in file "main.c"
  7347 ;; Parameters:    Size  Location     Type
  7348 ;;		None
  7349 ;; Auto vars:     Size  Location     Type
  7350 ;;  Rx              1   15[COMRAM] unsigned char 
  7351 ;;  hora            1   14[COMRAM] unsigned char 
  7352 ;; Return value:  Size  Location     Type
  7353 ;;                  1    wreg      void 
  7354 ;; Registers used:
  7355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7356 ;; Tracked objects:
  7357 ;;		On entry : 0/0
  7358 ;;		On exit  : 0/0
  7359 ;;		Unchanged: 0/0
  7360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7361 ;;      Params:         0       0       0       0       0       0       0       0       0
  7362 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7363 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7364 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7365 ;;Total ram usage:        2 bytes
  7366 ;; Hardware stack levels used:    1
  7367 ;; Hardware stack levels required when called:    5
  7368 ;; This function calls:
  7369 ;;		_UART_printf
  7370 ;;		_escribeHorariosMemoria
  7371 ;;		_getValue
  7372 ;; This function is called by:
  7373 ;;		_sistemaPrincipal
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377                           	psect	text41
  7378  001986                     __ptext41:
  7379                           	opt callstack 0
  7380  001986                     _asignarHorarios:
  7381                           	opt callstack 24
  7382  001986                     
  7383                           ;main.c: 338:     unsigned char hora;;main.c: 339:     unsigned char Rx;;main.c: 341:   
      +                            UART_printf("\r\n OPCIONES DE REGADO \r\n");
  7384  001986  0E3C               	movlw	low STR_5
  7385  001988  6E02               	movwf	UART_printf@cadena^0,c
  7386  00198A  0E7F               	movlw	high STR_5
  7387  00198C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7388  00198E  EC79  F00E         	call	_UART_printf	;wreg free
  7389                           
  7390                           ;main.c: 343:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  7391  001992  0E44               	movlw	low STR_6
  7392  001994  6E02               	movwf	UART_printf@cadena^0,c
  7393  001996  0E7C               	movlw	high STR_6
  7394  001998  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7395  00199A  EC79  F00E         	call	_UART_printf	;wreg free
  7396  00199E                     
  7397                           ;main.c: 344:     hora = getValue(2);
  7398  00199E  0E00               	movlw	0
  7399  0019A0  6E05               	movwf	(getValue@numCharacters+1)^0,c
  7400  0019A2  0E02               	movlw	2
  7401  0019A4  6E04               	movwf	getValue@numCharacters^0,c
  7402  0019A6  ECBA  F003         	call	_getValue	;wreg free
  7403  0019AA  6E0F               	movwf	asignarHorarios@hora^0,c
  7404  0019AC                     
  7405                           ;main.c: 346:     if (hora != 'F') {
  7406  0019AC  0E46               	movlw	70
  7407  0019AE  180F               	xorwf	asignarHorarios@hora^0,w,c
  7408  0019B0  B4D8               	btfsc	status,2,c
  7409  0019B2  EFDD  F00C         	goto	u2391
  7410  0019B6  EFDF  F00C         	goto	u2390
  7411  0019BA                     u2391:
  7412  0019BA  EF07  F00D         	goto	l281
  7413  0019BE                     u2390:
  7414  0019BE                     
  7415                           ;main.c: 348:         UART_printf("\r\n Ingrese 1 para regar || ingrese 0 para no regar:
      +                           \r\n");
  7416  0019BE  0E0D               	movlw	low STR_7
  7417  0019C0  6E02               	movwf	UART_printf@cadena^0,c
  7418  0019C2  0E7C               	movlw	high STR_7
  7419  0019C4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7420  0019C6  EC79  F00E         	call	_UART_printf	;wreg free
  7421  0019CA                     
  7422                           ;main.c: 350:         Rx = getValue(1);
  7423  0019CA  0E00               	movlw	0
  7424  0019CC  6E05               	movwf	(getValue@numCharacters+1)^0,c
  7425  0019CE  0E01               	movlw	1
  7426  0019D0  6E04               	movwf	getValue@numCharacters^0,c
  7427  0019D2  ECBA  F003         	call	_getValue	;wreg free
  7428  0019D6  6E10               	movwf	asignarHorarios@Rx^0,c
  7429  0019D8                     
  7430                           ;main.c: 353:         if (Rx != 'F') {
  7431  0019D8  0E46               	movlw	70
  7432  0019DA  1810               	xorwf	asignarHorarios@Rx^0,w,c
  7433  0019DC  B4D8               	btfsc	status,2,c
  7434  0019DE  EFF3  F00C         	goto	u2401
  7435  0019E2  EFF5  F00C         	goto	u2400
  7436  0019E6                     u2401:
  7437  0019E6  EF07  F00D         	goto	l281
  7438  0019EA                     u2400:
  7439  0019EA                     
  7440                           ;main.c: 355:             horarios[hora].regar = Rx;
  7441  0019EA  500F               	movf	asignarHorarios@hora^0,w,c
  7442  0019EC  0D03               	mullw	3
  7443  0019EE  0E01               	movlw	low (_horarios+1)
  7444  0019F0  24F3               	addwf	243,w,c
  7445  0019F2  6ED9               	movwf	fsr2l,c
  7446  0019F4  0E01               	movlw	high (_horarios+1)
  7447  0019F6  20F4               	addwfc	prodh,w,c
  7448  0019F8  6EDA               	movwf	fsr2h,c
  7449  0019FA  C010  FFDF         	movff	asignarHorarios@Rx,indf2
  7450  0019FE                     
  7451                           ;main.c: 357:             escribeHorariosMemoria();
  7452  0019FE  EC45  F009         	call	_escribeHorariosMemoria	;wreg free
  7453  001A02                     
  7454                           ;main.c: 360:             UART_printf("\r\n Horario Modificado! \r\n");
  7455  001A02  0E22               	movlw	low STR_8
  7456  001A04  6E02               	movwf	UART_printf@cadena^0,c
  7457  001A06  0E7F               	movlw	high STR_8
  7458  001A08  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7459  001A0A  EC79  F00E         	call	_UART_printf	;wreg free
  7460  001A0E                     l281:
  7461  001A0E  0012               	return		;funcret
  7462  001A10                     __end_of_asignarHorarios:
  7463                           	opt callstack 0
  7464                           
  7465 ;; *************** function _getValue *****************
  7466 ;; Defined at:
  7467 ;;		line 699 in file "main.c"
  7468 ;; Parameters:    Size  Location     Type
  7469 ;;  numCharacter    2    3[COMRAM] short 
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;  i               2   10[COMRAM] int 
  7472 ;;  i               2    8[COMRAM] int 
  7473 ;;  Rx              1   13[COMRAM] unsigned char 
  7474 ;;  dato            1   12[COMRAM] unsigned char 
  7475 ;;  datoIncorrec    1    7[COMRAM] unsigned char 
  7476 ;; Return value:  Size  Location     Type
  7477 ;;                  1    wreg      unsigned char 
  7478 ;; Registers used:
  7479 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7480 ;; Tracked objects:
  7481 ;;		On entry : 0/0
  7482 ;;		On exit  : 0/0
  7483 ;;		Unchanged: 0/0
  7484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7485 ;;      Params:         2       0       0       0       0       0       0       0       0
  7486 ;;      Locals:         7       0       0       0       0       0       0       0       0
  7487 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7488 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7489 ;;Total ram usage:       11 bytes
  7490 ;; Hardware stack levels used:    1
  7491 ;; Hardware stack levels required when called:    3
  7492 ;; This function calls:
  7493 ;;		_UART_printf
  7494 ;;		_UART_read
  7495 ;;		_UART_write
  7496 ;; This function is called by:
  7497 ;;		_setRtc
  7498 ;;		_asignarHorarios
  7499 ;;		_setTiempoRegar
  7500 ;;		_lecturaWifi
  7501 ;; This function uses a non-reentrant model
  7502 ;;
  7503                           
  7504                           	psect	text42
  7505  000774                     __ptext42:
  7506                           	opt callstack 0
  7507  000774                     _getValue:
  7508                           	opt callstack 25
  7509  000774                     
  7510                           ;main.c: 702:     unsigned char datoIncorrecto = 0;
  7511  000774  0E00               	movlw	0
  7512  000776  6E08               	movwf	getValue@datoIncorrecto^0,c
  7513                           
  7514                           ;main.c: 703:     unsigned char dato = 0;
  7515  000778  0E00               	movlw	0
  7516  00077A  6E0D               	movwf	getValue@dato^0,c
  7517                           
  7518                           ;main.c: 705:     switch (numCharacters) {
  7519  00077C  EF96  F004         	goto	l3041
  7520  000780                     l2963:
  7521                           
  7522                           ;main.c: 708:             Rx = UART_read();
  7523  000780  EC04  F00F         	call	_UART_read	;wreg free
  7524  000784  6E0E               	movwf	getValue@Rx^0,c
  7525  000786                     
  7526                           ;main.c: 710:             if (Rx >= 48 && Rx <= 57) {
  7527  000786  0E2F               	movlw	47
  7528  000788  640E               	cpfsgt	getValue@Rx^0,c
  7529  00078A  EFC9  F003         	goto	u2051
  7530  00078E  EFCB  F003         	goto	u2050
  7531  000792                     u2051:
  7532  000792  EFD9  F003         	goto	l2973
  7533  000796                     u2050:
  7534  000796  0E3A               	movlw	58
  7535  000798  600E               	cpfslt	getValue@Rx^0,c
  7536  00079A  EFD1  F003         	goto	u2061
  7537  00079E  EFD3  F003         	goto	u2060
  7538  0007A2                     u2061:
  7539  0007A2  EFD9  F003         	goto	l2973
  7540  0007A6                     u2060:
  7541  0007A6                     
  7542                           ;main.c: 711:                 Rx -= 48;
  7543  0007A6  0E30               	movlw	48
  7544  0007A8  5E0E               	subwf	getValue@Rx^0,f,c
  7545  0007AA                     
  7546                           ;main.c: 712:                 dato = Rx;
  7547  0007AA  C00E  F00D         	movff	getValue@Rx,getValue@dato
  7548                           
  7549                           ;main.c: 713:             } else {
  7550  0007AE  EFB0  F004         	goto	l3043
  7551  0007B2                     l2973:
  7552                           
  7553                           ;main.c: 714:                 UART_write('F');
  7554  0007B2  0E46               	movlw	70
  7555  0007B4  EC59  F011         	call	_UART_write
  7556  0007B8                     
  7557                           ;main.c: 715:                 datoIncorrecto = 1;
  7558  0007B8  0E01               	movlw	1
  7559  0007BA  6E08               	movwf	getValue@datoIncorrecto^0,c
  7560  0007BC  EFB0  F004         	goto	l3043
  7561  0007C0                     l2977:
  7562                           
  7563                           ;main.c: 721:             for (int i = 0; i < 2; i++) {
  7564  0007C0  0E00               	movlw	0
  7565  0007C2  6E0A               	movwf	(getValue@i+1)^0,c
  7566  0007C4  0E00               	movlw	0
  7567  0007C6  6E09               	movwf	getValue@i^0,c
  7568  0007C8                     l2983:
  7569                           
  7570                           ;main.c: 723:                 Rx = UART_read();
  7571  0007C8  EC04  F00F         	call	_UART_read	;wreg free
  7572  0007CC  6E0E               	movwf	getValue@Rx^0,c
  7573  0007CE                     
  7574                           ;main.c: 725:                 if (Rx >= 48 && Rx <= 57) {
  7575  0007CE  0E2F               	movlw	47
  7576  0007D0  640E               	cpfsgt	getValue@Rx^0,c
  7577  0007D2  EFED  F003         	goto	u2071
  7578  0007D6  EFEF  F003         	goto	u2070
  7579  0007DA                     u2071:
  7580  0007DA  EF1D  F004         	goto	l2999
  7581  0007DE                     u2070:
  7582  0007DE  0E3A               	movlw	58
  7583  0007E0  600E               	cpfslt	getValue@Rx^0,c
  7584  0007E2  EFF5  F003         	goto	u2081
  7585  0007E6  EFF7  F003         	goto	u2080
  7586  0007EA                     u2081:
  7587  0007EA  EF1D  F004         	goto	l2999
  7588  0007EE                     u2080:
  7589  0007EE                     
  7590                           ;main.c: 727:                     Rx -= 48;
  7591  0007EE  0E30               	movlw	48
  7592  0007F0  5E0E               	subwf	getValue@Rx^0,f,c
  7593                           
  7594                           ;main.c: 729:                     switch (i) {
  7595  0007F2  EF07  F004         	goto	l2997
  7596  0007F6                     l383:
  7597                           
  7598                           ;main.c: 731:                             dato = Rx;
  7599  0007F6  C00E  F00D         	movff	getValue@Rx,getValue@dato
  7600  0007FA                     
  7601                           ;main.c: 732:                             dato *= 10;
  7602  0007FA  0E0A               	movlw	10
  7603  0007FC  020D               	mulwf	getValue@dato^0,c
  7604  0007FE  50F3               	movf	prodl,w,c
  7605  000800  6E0D               	movwf	getValue@dato^0,c
  7606                           
  7607                           ;main.c: 733:                             break;
  7608  000802  EF24  F004         	goto	l3003
  7609  000806                     l2993:
  7610                           
  7611                           ;main.c: 736:                             dato += Rx;
  7612  000806  500E               	movf	getValue@Rx^0,w,c
  7613  000808  260D               	addwf	getValue@dato^0,f,c
  7614                           
  7615                           ;main.c: 737:                             break;
  7616  00080A  EF24  F004         	goto	l3003
  7617  00080E                     l2997:
  7618  00080E  C009  F006         	movff	getValue@i,??_getValue
  7619  000812  C00A  F007         	movff	getValue@i+1,??_getValue+1
  7620                           
  7621                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7622                           ; Switch size 1, requested type "simple"
  7623                           ; Number of cases is 1, Range of values is 0 to 0
  7624                           ; switch strategies available:
  7625                           ; Name         Instructions Cycles
  7626                           ; simple_byte            4     3 (average)
  7627                           ;	Chosen strategy is simple_byte
  7628  000816  5007               	movf	(??_getValue+1)^0,w,c
  7629  000818  0A00               	xorlw	0	; case 0
  7630  00081A  B4D8               	btfsc	status,2,c
  7631  00081C  EF12  F004         	goto	l3781
  7632  000820  EF24  F004         	goto	l3003
  7633  000824                     l3781:
  7634                           
  7635                           ; Switch size 1, requested type "simple"
  7636                           ; Number of cases is 2, Range of values is 0 to 1
  7637                           ; switch strategies available:
  7638                           ; Name         Instructions Cycles
  7639                           ; simple_byte            7     4 (average)
  7640                           ;	Chosen strategy is simple_byte
  7641  000824  5006               	movf	??_getValue^0,w,c
  7642  000826  0A00               	xorlw	0	; case 0
  7643  000828  B4D8               	btfsc	status,2,c
  7644  00082A  EFFB  F003         	goto	l383
  7645  00082E  0A01               	xorlw	1	; case 1
  7646  000830  B4D8               	btfsc	status,2,c
  7647  000832  EF03  F004         	goto	l2993
  7648  000836  EF24  F004         	goto	l3003
  7649  00083A                     l2999:
  7650                           
  7651                           ;main.c: 745:                     datoIncorrecto = 1;
  7652  00083A  0E01               	movlw	1
  7653  00083C  6E08               	movwf	getValue@datoIncorrecto^0,c
  7654  00083E                     
  7655                           ;main.c: 746:                     UART_write('F');
  7656  00083E  0E46               	movlw	70
  7657  000840  EC59  F011         	call	_UART_write
  7658                           
  7659                           ;main.c: 747:                     break;
  7660  000844  EFB0  F004         	goto	l3043
  7661  000848                     l3003:
  7662                           
  7663                           ;main.c: 749:             }
  7664  000848  4A09               	infsnz	getValue@i^0,f,c
  7665  00084A  2A0A               	incf	(getValue@i+1)^0,f,c
  7666  00084C  BE0A               	btfsc	(getValue@i+1)^0,7,c
  7667  00084E  EF32  F004         	goto	u2091
  7668  000852  500A               	movf	(getValue@i+1)^0,w,c
  7669  000854  E109               	bnz	u2090
  7670  000856  0E02               	movlw	2
  7671  000858  5C09               	subwf	getValue@i^0,w,c
  7672  00085A  A0D8               	btfss	status,0,c
  7673  00085C  EF32  F004         	goto	u2091
  7674  000860  EF34  F004         	goto	u2090
  7675  000864                     u2091:
  7676  000864  EFE4  F003         	goto	l2983
  7677  000868                     u2090:
  7678  000868  EFB0  F004         	goto	l3043
  7679  00086C                     l3007:
  7680                           
  7681                           ;main.c: 753:             for (int i = 0; i < 3; i++) {
  7682  00086C  0E00               	movlw	0
  7683  00086E  6E0C               	movwf	(getValue@i_951+1)^0,c
  7684  000870  0E00               	movlw	0
  7685  000872  6E0B               	movwf	getValue@i_951^0,c
  7686  000874                     l3013:
  7687                           
  7688                           ;main.c: 755:                 Rx = UART_read();
  7689  000874  EC04  F00F         	call	_UART_read	;wreg free
  7690  000878  6E0E               	movwf	getValue@Rx^0,c
  7691  00087A                     
  7692                           ;main.c: 757:                 if (Rx >= 48 && Rx <= 57) {
  7693  00087A  0E2F               	movlw	47
  7694  00087C  640E               	cpfsgt	getValue@Rx^0,c
  7695  00087E  EF43  F004         	goto	u2101
  7696  000882  EF45  F004         	goto	u2100
  7697  000886                     u2101:
  7698  000886  EF7D  F004         	goto	l3031
  7699  00088A                     u2100:
  7700  00088A  0E3A               	movlw	58
  7701  00088C  600E               	cpfslt	getValue@Rx^0,c
  7702  00088E  EF4B  F004         	goto	u2111
  7703  000892  EF4D  F004         	goto	u2110
  7704  000896                     u2111:
  7705  000896  EF7D  F004         	goto	l3031
  7706  00089A                     u2110:
  7707  00089A                     
  7708                           ;main.c: 759:                     Rx -= 48;
  7709  00089A  0E30               	movlw	48
  7710  00089C  5E0E               	subwf	getValue@Rx^0,f,c
  7711                           
  7712                           ;main.c: 761:                     switch (i) {
  7713  00089E  EF63  F004         	goto	l3029
  7714  0008A2                     l393:
  7715                           
  7716                           ;main.c: 763:                             dato = Rx;
  7717  0008A2  C00E  F00D         	movff	getValue@Rx,getValue@dato
  7718  0008A6                     
  7719                           ;main.c: 764:                             dato *= 100;
  7720  0008A6  0E64               	movlw	100
  7721  0008A8  020D               	mulwf	getValue@dato^0,c
  7722  0008AA  50F3               	movf	prodl,w,c
  7723  0008AC  6E0D               	movwf	getValue@dato^0,c
  7724                           
  7725                           ;main.c: 765:                             break;
  7726  0008AE  EF84  F004         	goto	l3035
  7727  0008B2                     l3023:
  7728                           
  7729                           ;main.c: 768:                             dato += (Rx * 10);
  7730  0008B2  500E               	movf	getValue@Rx^0,w,c
  7731  0008B4  0D0A               	mullw	10
  7732  0008B6  50F3               	movf	243,w,c
  7733  0008B8  260D               	addwf	getValue@dato^0,f,c
  7734                           
  7735                           ;main.c: 769:                             break;
  7736  0008BA  EF84  F004         	goto	l3035
  7737  0008BE                     l3025:
  7738                           
  7739                           ;main.c: 772:                             dato += Rx;
  7740  0008BE  500E               	movf	getValue@Rx^0,w,c
  7741  0008C0  260D               	addwf	getValue@dato^0,f,c
  7742                           
  7743                           ;main.c: 773:                             break;
  7744  0008C2  EF84  F004         	goto	l3035
  7745  0008C6                     l3029:
  7746  0008C6  C00B  F006         	movff	getValue@i_951,??_getValue
  7747  0008CA  C00C  F007         	movff	getValue@i_951+1,??_getValue+1
  7748                           
  7749                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7750                           ; Switch size 1, requested type "simple"
  7751                           ; Number of cases is 1, Range of values is 0 to 0
  7752                           ; switch strategies available:
  7753                           ; Name         Instructions Cycles
  7754                           ; simple_byte            4     3 (average)
  7755                           ;	Chosen strategy is simple_byte
  7756  0008CE  5007               	movf	(??_getValue+1)^0,w,c
  7757  0008D0  0A00               	xorlw	0	; case 0
  7758  0008D2  B4D8               	btfsc	status,2,c
  7759  0008D4  EF6E  F004         	goto	l3783
  7760  0008D8  EF84  F004         	goto	l3035
  7761  0008DC                     l3783:
  7762                           
  7763                           ; Switch size 1, requested type "simple"
  7764                           ; Number of cases is 3, Range of values is 0 to 2
  7765                           ; switch strategies available:
  7766                           ; Name         Instructions Cycles
  7767                           ; simple_byte           10     6 (average)
  7768                           ;	Chosen strategy is simple_byte
  7769  0008DC  5006               	movf	??_getValue^0,w,c
  7770  0008DE  0A00               	xorlw	0	; case 0
  7771  0008E0  B4D8               	btfsc	status,2,c
  7772  0008E2  EF51  F004         	goto	l393
  7773  0008E6  0A01               	xorlw	1	; case 1
  7774  0008E8  B4D8               	btfsc	status,2,c
  7775  0008EA  EF59  F004         	goto	l3023
  7776  0008EE  0A03               	xorlw	3	; case 2
  7777  0008F0  B4D8               	btfsc	status,2,c
  7778  0008F2  EF5F  F004         	goto	l3025
  7779  0008F6  EF84  F004         	goto	l3035
  7780  0008FA                     l3031:
  7781                           
  7782                           ;main.c: 781:                     datoIncorrecto = 1;
  7783  0008FA  0E01               	movlw	1
  7784  0008FC  6E08               	movwf	getValue@datoIncorrecto^0,c
  7785  0008FE                     
  7786                           ;main.c: 782:                     UART_write('F');
  7787  0008FE  0E46               	movlw	70
  7788  000900  EC59  F011         	call	_UART_write
  7789                           
  7790                           ;main.c: 783:                     break;
  7791  000904  EFB0  F004         	goto	l3043
  7792  000908                     l3035:
  7793                           
  7794                           ;main.c: 785:             }
  7795  000908  4A0B               	infsnz	getValue@i_951^0,f,c
  7796  00090A  2A0C               	incf	(getValue@i_951+1)^0,f,c
  7797  00090C  BE0C               	btfsc	(getValue@i_951+1)^0,7,c
  7798  00090E  EF92  F004         	goto	u2121
  7799  000912  500C               	movf	(getValue@i_951+1)^0,w,c
  7800  000914  E109               	bnz	u2120
  7801  000916  0E03               	movlw	3
  7802  000918  5C0B               	subwf	getValue@i_951^0,w,c
  7803  00091A  A0D8               	btfss	status,0,c
  7804  00091C  EF92  F004         	goto	u2121
  7805  000920  EF94  F004         	goto	u2120
  7806  000924                     u2121:
  7807  000924  EF3A  F004         	goto	l3013
  7808  000928                     u2120:
  7809  000928  EFB0  F004         	goto	l3043
  7810  00092C                     l3041:
  7811  00092C  C004  F006         	movff	getValue@numCharacters,??_getValue
  7812  000930  C005  F007         	movff	getValue@numCharacters+1,??_getValue+1
  7813                           
  7814                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7815                           ; Switch size 1, requested type "simple"
  7816                           ; Number of cases is 1, Range of values is 0 to 0
  7817                           ; switch strategies available:
  7818                           ; Name         Instructions Cycles
  7819                           ; simple_byte            4     3 (average)
  7820                           ;	Chosen strategy is simple_byte
  7821  000934  5007               	movf	(??_getValue+1)^0,w,c
  7822  000936  0A00               	xorlw	0	; case 0
  7823  000938  B4D8               	btfsc	status,2,c
  7824  00093A  EFA1  F004         	goto	l3785
  7825  00093E  EFB0  F004         	goto	l3043
  7826  000942                     l3785:
  7827                           
  7828                           ; Switch size 1, requested type "simple"
  7829                           ; Number of cases is 3, Range of values is 1 to 3
  7830                           ; switch strategies available:
  7831                           ; Name         Instructions Cycles
  7832                           ; simple_byte           10     6 (average)
  7833                           ;	Chosen strategy is simple_byte
  7834  000942  5006               	movf	??_getValue^0,w,c
  7835  000944  0A01               	xorlw	1	; case 1
  7836  000946  B4D8               	btfsc	status,2,c
  7837  000948  EFC0  F003         	goto	l2963
  7838  00094C  0A03               	xorlw	3	; case 2
  7839  00094E  B4D8               	btfsc	status,2,c
  7840  000950  EFE0  F003         	goto	l2977
  7841  000954  0A01               	xorlw	1	; case 3
  7842  000956  B4D8               	btfsc	status,2,c
  7843  000958  EF36  F004         	goto	l3007
  7844  00095C  EFB0  F004         	goto	l3043
  7845  000960                     l3043:
  7846                           
  7847                           ;main.c: 794:     if (esperandoDatos || datoIncorrecto) {
  7848  000960  0100               	movlb	0	; () banked
  7849  000962  51F4               	movf	_esperandoDatos& (0+255),w,b
  7850  000964  A4D8               	btfss	status,2,c
  7851  000966  EFB7  F004         	goto	u2131
  7852  00096A  EFB9  F004         	goto	u2130
  7853  00096E                     u2131:
  7854  00096E  EFC1  F004         	goto	l3047
  7855  000972                     u2130:
  7856  000972                     
  7857                           ; BSR set to: 0
  7858  000972  5008               	movf	getValue@datoIncorrecto^0,w,c
  7859  000974  B4D8               	btfsc	status,2,c
  7860  000976  EFBF  F004         	goto	u2141
  7861  00097A  EFC1  F004         	goto	u2140
  7862  00097E                     u2141:
  7863  00097E  EFCA  F004         	goto	l3055
  7864  000982                     u2140:
  7865  000982                     l3047:
  7866                           
  7867                           ; BSR set to: 0
  7868                           ;main.c: 796:         UART_printf("\nFALLO EL SETEO\r\n");
  7869  000982  0E9A               	movlw	low STR_38
  7870  000984  6E02               	movwf	UART_printf@cadena^0,c
  7871  000986  0E7F               	movlw	high STR_38
  7872  000988  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7873  00098A  EC79  F00E         	call	_UART_printf	;wreg free
  7874  00098E                     
  7875                           ;main.c: 797:         return 'F';
  7876  00098E  0E46               	movlw	70
  7877  000990  EFCB  F004         	goto	l403
  7878  000994                     l3055:
  7879                           
  7880                           ; BSR set to: 0
  7881                           ;main.c: 799:         return dato;
  7882  000994  500D               	movf	getValue@dato^0,w,c
  7883  000996                     l403:
  7884  000996  0012               	return		;funcret
  7885  000998                     __end_of_getValue:
  7886                           	opt callstack 0
  7887                           
  7888 ;; *************** function _UART_read *****************
  7889 ;; Defined at:
  7890 ;;		line 34 in file "./UART.h"
  7891 ;; Parameters:    Size  Location     Type
  7892 ;;		None
  7893 ;; Auto vars:     Size  Location     Type
  7894 ;;		None
  7895 ;; Return value:  Size  Location     Type
  7896 ;;                  1    wreg      unsigned char 
  7897 ;; Registers used:
  7898 ;;		wreg, status,2
  7899 ;; Tracked objects:
  7900 ;;		On entry : 0/0
  7901 ;;		On exit  : 0/0
  7902 ;;		Unchanged: 0/0
  7903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7904 ;;      Params:         0       0       0       0       0       0       0       0       0
  7905 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7906 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7907 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7908 ;;Total ram usage:        0 bytes
  7909 ;; Hardware stack levels used:    1
  7910 ;; Hardware stack levels required when called:    1
  7911 ;; This function calls:
  7912 ;;		Nothing
  7913 ;; This function is called by:
  7914 ;;		_lecturaWifi
  7915 ;;		_getValue
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           	psect	text43
  7920  001E08                     __ptext43:
  7921                           	opt callstack 0
  7922  001E08                     _UART_read:
  7923                           	opt callstack 26
  7924  001E08                     
  7925                           ;./UART.h: 36:     TMR0 = VALOR_TIMER0UART;
  7926  001E08  0E67               	movlw	103
  7927  001E0A  6ED7               	movwf	215,c	;volatile
  7928  001E0C  0E69               	movlw	105
  7929  001E0E  6ED6               	movwf	214,c	;volatile
  7930                           
  7931                           ;./UART.h: 37:     esperaDatoConcluida = 0;
  7932  001E10  0E00               	movlw	0
  7933  001E12  0100               	movlb	0	; () banked
  7934  001E14  6FF5               	movwf	_esperaDatoConcluida& (0+255),b
  7935                           
  7936                           ;./UART.h: 38:     esperandoDatos = 1;
  7937  001E16  0E01               	movlw	1
  7938  001E18  6FF4               	movwf	_esperandoDatos& (0+255),b
  7939                           
  7940                           ;./UART.h: 39:     byteUart = 0;
  7941  001E1A  0E00               	movlw	0
  7942  001E1C  6FF6               	movwf	_byteUart& (0+255),b
  7943                           
  7944                           ;./UART.h: 40:     tiempoInactividadTrans = 0;
  7945  001E1E  0E00               	movlw	0
  7946  001E20  6FF7               	movwf	_tiempoInactividadTrans& (0+255),b
  7947  001E22                     l123:
  7948                           
  7949                           ; BSR set to: 0
  7950  001E22  BA9E               	btfsc	158,5,c	;volatile
  7951  001E24  EF16  F00F         	goto	u1821
  7952  001E28  EF18  F00F         	goto	u1820
  7953  001E2C                     u1821:
  7954  001E2C  EF20  F00F         	goto	l2787
  7955  001E30                     u1820:
  7956  001E30                     
  7957                           ; BSR set to: 0
  7958  001E30  51F5               	movf	_esperaDatoConcluida& (0+255),w,b
  7959  001E32  B4D8               	btfsc	status,2,c
  7960  001E34  EF1E  F00F         	goto	u1831
  7961  001E38  EF20  F00F         	goto	u1830
  7962  001E3C                     u1831:
  7963  001E3C  EF11  F00F         	goto	l123
  7964  001E40                     u1830:
  7965  001E40                     l2787:
  7966                           
  7967                           ; BSR set to: 0
  7968                           ;./UART.h: 44:     if (!esperaDatoConcluida) {
  7969  001E40  51F5               	movf	_esperaDatoConcluida& (0+255),w,b
  7970  001E42  A4D8               	btfss	status,2,c
  7971  001E44  EF26  F00F         	goto	u1841
  7972  001E48  EF28  F00F         	goto	u1840
  7973  001E4C                     u1841:
  7974  001E4C  EF2C  F00F         	goto	l128
  7975  001E50                     u1840:
  7976  001E50                     
  7977                           ; BSR set to: 0
  7978                           ;./UART.h: 45:         byteUart = RCREG;
  7979  001E50  CFAE F0F6          	movff	4014,_byteUart	;volatile
  7980  001E54                     
  7981                           ; BSR set to: 0
  7982                           ;./UART.h: 46:         esperandoDatos = 0;
  7983  001E54  0E00               	movlw	0
  7984  001E56  6FF4               	movwf	_esperandoDatos& (0+255),b
  7985  001E58                     l128:
  7986                           
  7987                           ; BSR set to: 0
  7988                           ;./UART.h: 49:     return byteUart;
  7989  001E58  51F6               	movf	_byteUart& (0+255),w,b
  7990  001E5A                     
  7991                           ; BSR set to: 0
  7992  001E5A  0012               	return		;funcret
  7993  001E5C                     __end_of_UART_read:
  7994                           	opt callstack 0
  7995                           
  7996 ;; *************** function _UART_printf *****************
  7997 ;; Defined at:
  7998 ;;		line 57 in file "./UART.h"
  7999 ;; Parameters:    Size  Location     Type
  8000 ;;  cadena          2    1[COMRAM] PTR unsigned char 
  8001 ;;		 -> STR_38(18), STR_37(11), STR_36(9), STR_35(17), 
  8002 ;;		 -> mostrarDatosSensoresWIFI@buffer(50), mostrarDatosSensores@buffer(50), STR_28(21), STR_27(25), 
  8003 ;;		 -> dameDatosSistema@buffer(50), STR_25(50), STR_24(42), STR_23(3), 
  8004 ;;		 -> STR_22(14), STR_21(34), STR_20(32), STR_19(49), 
  8005 ;;		 -> STR_18(37), STR_17(27), STR_16(37), STR_15(32), 
  8006 ;;		 -> lecturaWifi@buffer(50), STR_13(38), STR_12(37), STR_11(72), 
  8007 ;;		 -> STR_10(51), STR_9(23), STR_8(26), STR_7(55), 
  8008 ;;		 -> STR_6(51), STR_5(25), STR_4(37), STR_3(31), 
  8009 ;;		 -> STR_2(43), STR_1(16), 
  8010 ;; Auto vars:     Size  Location     Type
  8011 ;;		None
  8012 ;; Return value:  Size  Location     Type
  8013 ;;                  1    wreg      void 
  8014 ;; Registers used:
  8015 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8016 ;; Tracked objects:
  8017 ;;		On entry : 0/0
  8018 ;;		On exit  : 0/0
  8019 ;;		Unchanged: 0/0
  8020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8021 ;;      Params:         2       0       0       0       0       0       0       0       0
  8022 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8023 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8024 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8025 ;;Total ram usage:        2 bytes
  8026 ;; Hardware stack levels used:    1
  8027 ;; Hardware stack levels required when called:    2
  8028 ;; This function calls:
  8029 ;;		_UART_write
  8030 ;; This function is called by:
  8031 ;;		_fijaHoraRtc
  8032 ;;		_asignarHorarios
  8033 ;;		_setTiempoRegar
  8034 ;;		_lecturaWifi
  8035 ;;		_mostrarMenu
  8036 ;;		_sistemaPrincipal
  8037 ;;		_dameDatosSistema
  8038 ;;		_dameTemperaturaHumedad
  8039 ;;		_mostrarDatosSensores
  8040 ;;		_mostrarDatosSensoresWIFI
  8041 ;;		_getValue
  8042 ;;		_configBluetoothHC_06
  8043 ;; This function uses a non-reentrant model
  8044 ;;
  8045                           
  8046                           	psect	text44
  8047  001CF2                     __ptext44:
  8048                           	opt callstack 0
  8049  001CF2                     _UART_printf:
  8050                           	opt callstack 26
  8051  001CF2                     
  8052                           ;./UART.h: 58:     while (*cadena) {
  8053  001CF2  EF8F  F00E         	goto	l2801
  8054  001CF6                     l2797:
  8055                           
  8056                           ;./UART.h: 59:         UART_write(*cadena++);
  8057  001CF6  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  8058  001CFA  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  8059  001CFE  6AF8               	clrf	tblptru,c
  8060  001D00  0E07               	movlw	(high __ramtop+-1)
  8061  001D02  64F7               	cpfsgt	tblptrh,c
  8062  001D04  D003               	bra	u1857
  8063  001D06  0008               	tblrd		*
  8064  001D08  50F5               	movf	tablat,w,c
  8065  001D0A  D005               	bra	u1850
  8066  001D0C                     u1857:
  8067  001D0C  CFF6 FFE1          	movff	tblptrl,fsr1l
  8068  001D10  CFF7 FFE2          	movff	tblptrh,fsr1h
  8069  001D14  50E7               	movf	indf1,w,c
  8070  001D16                     u1850:
  8071  001D16  EC59  F011         	call	_UART_write
  8072  001D1A  4A02               	infsnz	UART_printf@cadena^0,f,c
  8073  001D1C  2A03               	incf	(UART_printf@cadena+1)^0,f,c
  8074  001D1E                     l2801:
  8075                           
  8076                           ;./UART.h: 58:     while (*cadena) {
  8077  001D1E  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  8078  001D22  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  8079  001D26  6AF8               	clrf	tblptru,c
  8080  001D28  0E07               	movlw	(high __ramtop+-1)
  8081  001D2A  64F7               	cpfsgt	tblptrh,c
  8082  001D2C  D003               	bra	u1867
  8083  001D2E  0008               	tblrd		*
  8084  001D30  50F5               	movf	tablat,w,c
  8085  001D32  D005               	bra	u1860
  8086  001D34                     u1867:
  8087  001D34  CFF6 FFE1          	movff	tblptrl,fsr1l
  8088  001D38  CFF7 FFE2          	movff	tblptrh,fsr1h
  8089  001D3C  50E7               	movf	indf1,w,c
  8090  001D3E                     u1860:
  8091  001D3E  0900               	iorlw	0
  8092  001D40  A4D8               	btfss	status,2,c
  8093  001D42  EFA5  F00E         	goto	u1871
  8094  001D46  EFA7  F00E         	goto	u1870
  8095  001D4A                     u1871:
  8096  001D4A  EF7B  F00E         	goto	l2797
  8097  001D4E                     u1870:
  8098  001D4E  0012               	return		;funcret
  8099  001D50                     __end_of_UART_printf:
  8100                           	opt callstack 0
  8101                           
  8102 ;; *************** function _UART_write *****************
  8103 ;; Defined at:
  8104 ;;		line 52 in file "./UART.h"
  8105 ;; Parameters:    Size  Location     Type
  8106 ;;  dato            1    wreg     unsigned char 
  8107 ;; Auto vars:     Size  Location     Type
  8108 ;;  dato            1    0[COMRAM] unsigned char 
  8109 ;; Return value:  Size  Location     Type
  8110 ;;                  1    wreg      void 
  8111 ;; Registers used:
  8112 ;;		wreg
  8113 ;; Tracked objects:
  8114 ;;		On entry : 0/0
  8115 ;;		On exit  : 0/0
  8116 ;;		Unchanged: 0/0
  8117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8118 ;;      Params:         0       0       0       0       0       0       0       0       0
  8119 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8121 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8122 ;;Total ram usage:        1 bytes
  8123 ;; Hardware stack levels used:    1
  8124 ;; Hardware stack levels required when called:    1
  8125 ;; This function calls:
  8126 ;;		Nothing
  8127 ;; This function is called by:
  8128 ;;		_UART_printf
  8129 ;;		_lecturaWifi
  8130 ;;		_dameDatosSistema
  8131 ;;		_mostrarDatosSensores
  8132 ;;		_mostrarDatosSensoresWIFI
  8133 ;;		_getValue
  8134 ;; This function uses a non-reentrant model
  8135 ;;
  8136                           
  8137                           	psect	text45
  8138  0022B2                     __ptext45:
  8139                           	opt callstack 0
  8140  0022B2                     _UART_write:
  8141                           	opt callstack 26
  8142                           
  8143                           ;incstack = 0
  8144                           ;UART_write@dato stored from wreg
  8145  0022B2  6E01               	movwf	UART_write@dato^0,c
  8146  0022B4                     
  8147                           ;./UART.h: 53:     TXREG = dato;
  8148  0022B4  C001  FFAD         	movff	UART_write@dato,4013	;volatile
  8149  0022B8                     l132:
  8150  0022B8  A2AC               	btfss	172,1,c	;volatile
  8151  0022BA  EF61  F011         	goto	u1761
  8152  0022BE  EF63  F011         	goto	u1760
  8153  0022C2                     u1761:
  8154  0022C2  EF5C  F011         	goto	l132
  8155  0022C6                     u1760:
  8156  0022C6  0012               	return		;funcret
  8157  0022C8                     __end_of_UART_write:
  8158                           	opt callstack 0
  8159                           
  8160 ;; *************** function _escribeHorariosMemoria *****************
  8161 ;; Defined at:
  8162 ;;		line 210 in file "main.c"
  8163 ;; Parameters:    Size  Location     Type
  8164 ;;		None
  8165 ;; Auto vars:     Size  Location     Type
  8166 ;;  i               2   12[COMRAM] int 
  8167 ;;  contMemoria     2   10[COMRAM] int 
  8168 ;; Return value:  Size  Location     Type
  8169 ;;                  1    wreg      void 
  8170 ;; Registers used:
  8171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8172 ;; Tracked objects:
  8173 ;;		On entry : 0/0
  8174 ;;		On exit  : 0/0
  8175 ;;		Unchanged: 0/0
  8176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8177 ;;      Params:         0       0       0       0       0       0       0       0       0
  8178 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8179 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8180 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8181 ;;Total ram usage:        4 bytes
  8182 ;; Hardware stack levels used:    1
  8183 ;; Hardware stack levels required when called:    4
  8184 ;; This function calls:
  8185 ;;		___wmul
  8186 ;;		_escribe_eeprom
  8187 ;; This function is called by:
  8188 ;;		_asignarHorarios
  8189 ;;		_setTiempoRegar
  8190 ;; This function uses a non-reentrant model
  8191 ;;
  8192                           
  8193                           	psect	text46
  8194  00128A                     __ptext46:
  8195                           	opt callstack 0
  8196  00128A                     _escribeHorariosMemoria:
  8197                           	opt callstack 24
  8198  00128A                     
  8199                           ;main.c: 212:     int contMemoria = 0;
  8200  00128A  0E00               	movlw	0
  8201  00128C  6E0C               	movwf	(escribeHorariosMemoria@contMemoria+1)^0,c
  8202  00128E  0E00               	movlw	0
  8203  001290  6E0B               	movwf	escribeHorariosMemoria@contMemoria^0,c
  8204                           
  8205                           ;main.c: 213:     for (int i = 0; i < 24; i++) {
  8206  001292  0E00               	movlw	0
  8207  001294  6E0E               	movwf	(escribeHorariosMemoria@i+1)^0,c
  8208  001296  0E00               	movlw	0
  8209  001298  6E0D               	movwf	escribeHorariosMemoria@i^0,c
  8210  00129A                     l3169:
  8211                           
  8212                           ;main.c: 214:         escribe_eeprom(contMemoria++, horarios[i].hora);
  8213  00129A  C00B  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  8214  00129E  C00C  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  8215  0012A2  C00D  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  8216  0012A6  C00E  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  8217  0012AA  0E00               	movlw	0
  8218  0012AC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8219  0012AE  0E03               	movlw	3
  8220  0012B0  6E03               	movwf	___wmul@multiplicand^0,c
  8221  0012B2  EC0A  F011         	call	___wmul	;wreg free
  8222  0012B6  0E00               	movlw	low _horarios
  8223  0012B8  2401               	addwf	?___wmul^0,w,c
  8224  0012BA  6ED9               	movwf	fsr2l,c
  8225  0012BC  0E01               	movlw	high _horarios
  8226  0012BE  2002               	addwfc	(?___wmul+1)^0,w,c
  8227  0012C0  6EDA               	movwf	fsr2h,c
  8228  0012C2  50DF               	movf	indf2,w,c
  8229  0012C4  6E09               	movwf	escribe_eeprom@dato^0,c
  8230  0012C6  EC9E  F010         	call	_escribe_eeprom	;wreg free
  8231  0012CA  4A0B               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  8232  0012CC  2A0C               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  8233  0012CE                     
  8234                           ;main.c: 215:         escribe_eeprom(contMemoria++, horarios[i].regar);
  8235  0012CE  C00B  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  8236  0012D2  C00C  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  8237  0012D6  C00D  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  8238  0012DA  C00E  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  8239  0012DE  0E00               	movlw	0
  8240  0012E0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8241  0012E2  0E03               	movlw	3
  8242  0012E4  6E03               	movwf	___wmul@multiplicand^0,c
  8243  0012E6  EC0A  F011         	call	___wmul	;wreg free
  8244  0012EA  0E01               	movlw	low (_horarios+1)
  8245  0012EC  2401               	addwf	?___wmul^0,w,c
  8246  0012EE  6ED9               	movwf	fsr2l,c
  8247  0012F0  0E01               	movlw	high (_horarios+1)
  8248  0012F2  2002               	addwfc	(?___wmul+1)^0,w,c
  8249  0012F4  6EDA               	movwf	fsr2h,c
  8250  0012F6  50DF               	movf	indf2,w,c
  8251  0012F8  6E09               	movwf	escribe_eeprom@dato^0,c
  8252  0012FA  EC9E  F010         	call	_escribe_eeprom	;wreg free
  8253  0012FE  4A0B               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  8254  001300  2A0C               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  8255  001302                     
  8256                           ;main.c: 216:         escribe_eeprom(contMemoria++, horarios[i].tiempoRegar);
  8257  001302  C00B  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  8258  001306  C00C  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  8259  00130A  C00D  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  8260  00130E  C00E  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  8261  001312  0E00               	movlw	0
  8262  001314  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8263  001316  0E03               	movlw	3
  8264  001318  6E03               	movwf	___wmul@multiplicand^0,c
  8265  00131A  EC0A  F011         	call	___wmul	;wreg free
  8266  00131E  0E02               	movlw	low (_horarios+2)
  8267  001320  2401               	addwf	?___wmul^0,w,c
  8268  001322  6ED9               	movwf	fsr2l,c
  8269  001324  0E01               	movlw	high (_horarios+2)
  8270  001326  2002               	addwfc	(?___wmul+1)^0,w,c
  8271  001328  6EDA               	movwf	fsr2h,c
  8272  00132A  50DF               	movf	indf2,w,c
  8273  00132C  6E09               	movwf	escribe_eeprom@dato^0,c
  8274  00132E  EC9E  F010         	call	_escribe_eeprom	;wreg free
  8275  001332  4A0B               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  8276  001334  2A0C               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  8277  001336                     
  8278                           ;main.c: 217:     }
  8279  001336  4A0D               	infsnz	escribeHorariosMemoria@i^0,f,c
  8280  001338  2A0E               	incf	(escribeHorariosMemoria@i+1)^0,f,c
  8281  00133A  BE0E               	btfsc	(escribeHorariosMemoria@i+1)^0,7,c
  8282  00133C  EFA9  F009         	goto	u2201
  8283  001340  500E               	movf	(escribeHorariosMemoria@i+1)^0,w,c
  8284  001342  E109               	bnz	u2200
  8285  001344  0E18               	movlw	24
  8286  001346  5C0D               	subwf	escribeHorariosMemoria@i^0,w,c
  8287  001348  A0D8               	btfss	status,0,c
  8288  00134A  EFA9  F009         	goto	u2201
  8289  00134E  EFAB  F009         	goto	u2200
  8290  001352                     u2201:
  8291  001352  EF4D  F009         	goto	l3169
  8292  001356                     u2200:
  8293  001356  0012               	return		;funcret
  8294  001358                     __end_of_escribeHorariosMemoria:
  8295                           	opt callstack 0
  8296                           
  8297 ;; *************** function _escribe_eeprom *****************
  8298 ;; Defined at:
  8299 ;;		line 181 in file "main.c"
  8300 ;; Parameters:    Size  Location     Type
  8301 ;;  direccion       2    6[COMRAM] unsigned short 
  8302 ;;  dato            1    8[COMRAM] unsigned char 
  8303 ;; Auto vars:     Size  Location     Type
  8304 ;;		None
  8305 ;; Return value:  Size  Location     Type
  8306 ;;                  1    wreg      void 
  8307 ;; Registers used:
  8308 ;;		wreg, status,2, status,0, cstack
  8309 ;; Tracked objects:
  8310 ;;		On entry : 0/0
  8311 ;;		On exit  : 0/0
  8312 ;;		Unchanged: 0/0
  8313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8314 ;;      Params:         3       0       0       0       0       0       0       0       0
  8315 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8316 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8317 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8318 ;;Total ram usage:        4 bytes
  8319 ;; Hardware stack levels used:    1
  8320 ;; Hardware stack levels required when called:    3
  8321 ;; This function calls:
  8322 ;;		_i2c_detener
  8323 ;;		_i2c_envia_dato
  8324 ;;		_i2c_inicia_com
  8325 ;; This function is called by:
  8326 ;;		_escribeHorariosMemoria
  8327 ;; This function uses a non-reentrant model
  8328 ;;
  8329                           
  8330                           	psect	text47
  8331  00213C                     __ptext47:
  8332                           	opt callstack 0
  8333  00213C                     _escribe_eeprom:
  8334                           	opt callstack 24
  8335  00213C                     
  8336                           ;main.c: 182:     i2c_inicia_com();
  8337  00213C  EC83  F011         	call	_i2c_inicia_com	;wreg free
  8338                           
  8339                           ;main.c: 183:     i2c_envia_dato(0xAE);
  8340  002140  0EAE               	movlw	174
  8341  002142  EC6F  F011         	call	_i2c_envia_dato
  8342                           
  8343                           ;main.c: 184:     i2c_envia_dato(direccion >> 8);
  8344  002146  5008               	movf	(escribe_eeprom@direccion+1)^0,w,c
  8345  002148  EC6F  F011         	call	_i2c_envia_dato
  8346                           
  8347                           ;main.c: 186:     i2c_envia_dato(direccion);
  8348  00214C  5007               	movf	escribe_eeprom@direccion^0,w,c
  8349  00214E  EC6F  F011         	call	_i2c_envia_dato
  8350                           
  8351                           ;main.c: 188:     i2c_envia_dato(dato);
  8352  002152  5009               	movf	escribe_eeprom@dato^0,w,c
  8353  002154  EC6F  F011         	call	_i2c_envia_dato
  8354                           
  8355                           ;main.c: 189:     i2c_detener();
  8356  002158  EC87  F011         	call	_i2c_detener	;wreg free
  8357  00215C                     
  8358                           ;main.c: 190:     _delay((unsigned long)((10)*(4000000/4000.0)));
  8359  00215C  0E0D               	movlw	13
  8360  00215E  6E0A               	movwf	??_escribe_eeprom^0,c
  8361  002160  0EFC               	movlw	252
  8362  002162                     u2757:
  8363  002162  2EE8               	decfsz	wreg,f,c
  8364  002164  D7FE               	bra	u2757
  8365  002166  2E0A               	decfsz	??_escribe_eeprom^0,f,c
  8366  002168  D7FC               	bra	u2757
  8367  00216A  0012               	return		;funcret
  8368  00216C                     __end_of_escribe_eeprom:
  8369                           	opt callstack 0
  8370                           
  8371 ;; *************** function _leeHorariosMemoria *****************
  8372 ;; Defined at:
  8373 ;;		line 220 in file "main.c"
  8374 ;; Parameters:    Size  Location     Type
  8375 ;;		None
  8376 ;; Auto vars:     Size  Location     Type
  8377 ;;  i               2    8[COMRAM] int 
  8378 ;;  contMemoria     2    6[COMRAM] int 
  8379 ;; Return value:  Size  Location     Type
  8380 ;;                  1    wreg      void 
  8381 ;; Registers used:
  8382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8383 ;; Tracked objects:
  8384 ;;		On entry : 0/0
  8385 ;;		On exit  : 0/0
  8386 ;;		Unchanged: 0/0
  8387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8388 ;;      Params:         0       0       0       0       0       0       0       0       0
  8389 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8390 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8391 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8392 ;;Total ram usage:        4 bytes
  8393 ;; Hardware stack levels used:    1
  8394 ;; Hardware stack levels required when called:    4
  8395 ;; This function calls:
  8396 ;;		___wmul
  8397 ;;		_leer_eeprom
  8398 ;; This function is called by:
  8399 ;;		_main
  8400 ;; This function uses a non-reentrant model
  8401 ;;
  8402                           
  8403                           	psect	text48
  8404  001422                     __ptext48:
  8405                           	opt callstack 0
  8406  001422                     _leeHorariosMemoria:
  8407                           	opt callstack 26
  8408  001422                     
  8409                           ;main.c: 222:     int contMemoria = 0;
  8410  001422  0E00               	movlw	0
  8411  001424  6E08               	movwf	(leeHorariosMemoria@contMemoria+1)^0,c
  8412  001426  0E00               	movlw	0
  8413  001428  6E07               	movwf	leeHorariosMemoria@contMemoria^0,c
  8414                           
  8415                           ;main.c: 224:     for (int i = 0; i < 24; i++) {
  8416  00142A  0E00               	movlw	0
  8417  00142C  6E0A               	movwf	(leeHorariosMemoria@i+1)^0,c
  8418  00142E  0E00               	movlw	0
  8419  001430  6E09               	movwf	leeHorariosMemoria@i^0,c
  8420  001432                     l3501:
  8421                           
  8422                           ;main.c: 225:         horarios[i].hora = leer_eeprom(contMemoria++);
  8423  001432  C009  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  8424  001436  C00A  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  8425  00143A  0E00               	movlw	0
  8426  00143C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8427  00143E  0E03               	movlw	3
  8428  001440  6E03               	movwf	___wmul@multiplicand^0,c
  8429  001442  EC0A  F011         	call	___wmul	;wreg free
  8430  001446  0E00               	movlw	low _horarios
  8431  001448  2401               	addwf	?___wmul^0,w,c
  8432  00144A  6ED9               	movwf	fsr2l,c
  8433  00144C  0E01               	movlw	high _horarios
  8434  00144E  2002               	addwfc	(?___wmul+1)^0,w,c
  8435  001450  6EDA               	movwf	fsr2h,c
  8436  001452  C007  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  8437  001456  C008  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  8438  00145A  EC49  F010         	call	_leer_eeprom	;wreg free
  8439  00145E  6EDF               	movwf	indf2,c
  8440  001460  4A07               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  8441  001462  2A08               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  8442  001464                     
  8443                           ;main.c: 226:         horarios[i].regar = leer_eeprom(contMemoria++);
  8444  001464  C009  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  8445  001468  C00A  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  8446  00146C  0E00               	movlw	0
  8447  00146E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8448  001470  0E03               	movlw	3
  8449  001472  6E03               	movwf	___wmul@multiplicand^0,c
  8450  001474  EC0A  F011         	call	___wmul	;wreg free
  8451  001478  0E01               	movlw	low (_horarios+1)
  8452  00147A  2401               	addwf	?___wmul^0,w,c
  8453  00147C  6ED9               	movwf	fsr2l,c
  8454  00147E  0E01               	movlw	high (_horarios+1)
  8455  001480  2002               	addwfc	(?___wmul+1)^0,w,c
  8456  001482  6EDA               	movwf	fsr2h,c
  8457  001484  C007  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  8458  001488  C008  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  8459  00148C  EC49  F010         	call	_leer_eeprom	;wreg free
  8460  001490  6EDF               	movwf	indf2,c
  8461  001492  4A07               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  8462  001494  2A08               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  8463  001496                     
  8464                           ;main.c: 227:         horarios[i].tiempoRegar = leer_eeprom(contMemoria++);
  8465  001496  C009  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  8466  00149A  C00A  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  8467  00149E  0E00               	movlw	0
  8468  0014A0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8469  0014A2  0E03               	movlw	3
  8470  0014A4  6E03               	movwf	___wmul@multiplicand^0,c
  8471  0014A6  EC0A  F011         	call	___wmul	;wreg free
  8472  0014AA  0E02               	movlw	low (_horarios+2)
  8473  0014AC  2401               	addwf	?___wmul^0,w,c
  8474  0014AE  6ED9               	movwf	fsr2l,c
  8475  0014B0  0E01               	movlw	high (_horarios+2)
  8476  0014B2  2002               	addwfc	(?___wmul+1)^0,w,c
  8477  0014B4  6EDA               	movwf	fsr2h,c
  8478  0014B6  C007  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  8479  0014BA  C008  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  8480  0014BE  EC49  F010         	call	_leer_eeprom	;wreg free
  8481  0014C2  6EDF               	movwf	indf2,c
  8482  0014C4  4A07               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  8483  0014C6  2A08               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  8484  0014C8                     
  8485                           ;main.c: 228:     }
  8486  0014C8  4A09               	infsnz	leeHorariosMemoria@i^0,f,c
  8487  0014CA  2A0A               	incf	(leeHorariosMemoria@i+1)^0,f,c
  8488  0014CC  BE0A               	btfsc	(leeHorariosMemoria@i+1)^0,7,c
  8489  0014CE  EF72  F00A         	goto	u2481
  8490  0014D2  500A               	movf	(leeHorariosMemoria@i+1)^0,w,c
  8491  0014D4  E109               	bnz	u2480
  8492  0014D6  0E18               	movlw	24
  8493  0014D8  5C09               	subwf	leeHorariosMemoria@i^0,w,c
  8494  0014DA  A0D8               	btfss	status,0,c
  8495  0014DC  EF72  F00A         	goto	u2481
  8496  0014E0  EF74  F00A         	goto	u2480
  8497  0014E4                     u2481:
  8498  0014E4  EF19  F00A         	goto	l3501
  8499  0014E8                     u2480:
  8500  0014E8  0012               	return		;funcret
  8501  0014EA                     __end_of_leeHorariosMemoria:
  8502                           	opt callstack 0
  8503                           
  8504 ;; *************** function _leer_eeprom *****************
  8505 ;; Defined at:
  8506 ;;		line 193 in file "main.c"
  8507 ;; Parameters:    Size  Location     Type
  8508 ;;  direccion       2    2[COMRAM] unsigned short 
  8509 ;; Auto vars:     Size  Location     Type
  8510 ;;  dato            1    5[COMRAM] unsigned char 
  8511 ;; Return value:  Size  Location     Type
  8512 ;;                  1    wreg      unsigned char 
  8513 ;; Registers used:
  8514 ;;		wreg, status,2, status,0, cstack
  8515 ;; Tracked objects:
  8516 ;;		On entry : 0/0
  8517 ;;		On exit  : 0/0
  8518 ;;		Unchanged: 0/0
  8519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8520 ;;      Params:         2       0       0       0       0       0       0       0       0
  8521 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8522 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8523 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8524 ;;Total ram usage:        4 bytes
  8525 ;; Hardware stack levels used:    1
  8526 ;; Hardware stack levels required when called:    3
  8527 ;; This function calls:
  8528 ;;		_i2c_detener
  8529 ;;		_i2c_envia_dato
  8530 ;;		_i2c_inicia_com
  8531 ;;		_i2c_recibe_dato
  8532 ;;		_i2c_reinicia_com
  8533 ;; This function is called by:
  8534 ;;		_leeHorariosMemoria
  8535 ;; This function uses a non-reentrant model
  8536 ;;
  8537                           
  8538                           	psect	text49
  8539  002092                     __ptext49:
  8540                           	opt callstack 0
  8541  002092                     _leer_eeprom:
  8542                           	opt callstack 26
  8543  002092                     
  8544                           ;main.c: 195:     unsigned char dato;;main.c: 197:     i2c_inicia_com();
  8545  002092  EC83  F011         	call	_i2c_inicia_com	;wreg free
  8546                           
  8547                           ;main.c: 198:     i2c_envia_dato(0xAE);
  8548  002096  0EAE               	movlw	174
  8549  002098  EC6F  F011         	call	_i2c_envia_dato
  8550                           
  8551                           ;main.c: 199:     i2c_envia_dato(direccion >> 8);
  8552  00209C  5004               	movf	(leer_eeprom@direccion+1)^0,w,c
  8553  00209E  EC6F  F011         	call	_i2c_envia_dato
  8554                           
  8555                           ;main.c: 200:     i2c_envia_dato(direccion);
  8556  0020A2  5003               	movf	leer_eeprom@direccion^0,w,c
  8557  0020A4  EC6F  F011         	call	_i2c_envia_dato
  8558                           
  8559                           ;main.c: 201:     i2c_reinicia_com();
  8560  0020A8  EC7F  F011         	call	_i2c_reinicia_com	;wreg free
  8561                           
  8562                           ;main.c: 202:     i2c_envia_dato(0xAF);
  8563  0020AC  0EAF               	movlw	175
  8564  0020AE  EC6F  F011         	call	_i2c_envia_dato
  8565                           
  8566                           ;main.c: 203:     dato = i2c_recibe_dato();
  8567  0020B2  EC4C  F011         	call	_i2c_recibe_dato	;wreg free
  8568  0020B6  6E06               	movwf	leer_eeprom@dato^0,c
  8569                           
  8570                           ;main.c: 204:     i2c_detener();
  8571  0020B8  EC87  F011         	call	_i2c_detener	;wreg free
  8572  0020BC                     
  8573                           ;main.c: 205:     _delay((unsigned long)((10)*(4000000/4000.0)));
  8574  0020BC  0E0D               	movlw	13
  8575  0020BE  6E05               	movwf	??_leer_eeprom^0,c
  8576  0020C0  0EFC               	movlw	252
  8577  0020C2                     u2767:
  8578  0020C2  2EE8               	decfsz	wreg,f,c
  8579  0020C4  D7FE               	bra	u2767
  8580  0020C6  2E05               	decfsz	??_leer_eeprom^0,f,c
  8581  0020C8  D7FC               	bra	u2767
  8582  0020CA                     
  8583                           ;main.c: 207:     return dato;
  8584  0020CA  5006               	movf	leer_eeprom@dato^0,w,c
  8585  0020CC  0012               	return		;funcret
  8586  0020CE                     __end_of_leer_eeprom:
  8587                           	opt callstack 0
  8588                           
  8589 ;; *************** function _i2c_reinicia_com *****************
  8590 ;; Defined at:
  8591 ;;		line 37 in file "./I2C.h"
  8592 ;; Parameters:    Size  Location     Type
  8593 ;;		None
  8594 ;; Auto vars:     Size  Location     Type
  8595 ;;		None
  8596 ;; Return value:  Size  Location     Type
  8597 ;;                  1    wreg      void 
  8598 ;; Registers used:
  8599 ;;		wreg, status,2, status,0, cstack
  8600 ;; Tracked objects:
  8601 ;;		On entry : 0/0
  8602 ;;		On exit  : 0/0
  8603 ;;		Unchanged: 0/0
  8604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8605 ;;      Params:         0       0       0       0       0       0       0       0       0
  8606 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8607 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8608 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8609 ;;Total ram usage:        0 bytes
  8610 ;; Hardware stack levels used:    1
  8611 ;; Hardware stack levels required when called:    2
  8612 ;; This function calls:
  8613 ;;		_i2c_espera
  8614 ;; This function is called by:
  8615 ;;		_leer_rtc
  8616 ;;		_leer_eeprom
  8617 ;; This function uses a non-reentrant model
  8618 ;;
  8619                           
  8620                           	psect	text50
  8621  0022FE                     __ptext50:
  8622                           	opt callstack 0
  8623  0022FE                     _i2c_reinicia_com:
  8624                           	opt callstack 25
  8625  0022FE                     
  8626                           ;./I2C.h: 38:     i2c_espera();
  8627  0022FE  ECF7  F010         	call	_i2c_espera	;wreg free
  8628  002302                     
  8629                           ;./I2C.h: 39:     SSPCON2bits.RSEN = 1;
  8630  002302  82C5               	bsf	197,1,c	;volatile
  8631  002304  0012               	return		;funcret
  8632  002306                     __end_of_i2c_reinicia_com:
  8633                           	opt callstack 0
  8634                           
  8635 ;; *************** function _i2c_recibe_dato *****************
  8636 ;; Defined at:
  8637 ;;		line 68 in file "./I2C.h"
  8638 ;; Parameters:    Size  Location     Type
  8639 ;;		None
  8640 ;; Auto vars:     Size  Location     Type
  8641 ;;  datoleido       1    1[COMRAM] unsigned char 
  8642 ;; Return value:  Size  Location     Type
  8643 ;;                  1    wreg      unsigned char 
  8644 ;; Registers used:
  8645 ;;		wreg, status,2, status,0, cstack
  8646 ;; Tracked objects:
  8647 ;;		On entry : 0/0
  8648 ;;		On exit  : 0/0
  8649 ;;		Unchanged: 0/0
  8650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8651 ;;      Params:         0       0       0       0       0       0       0       0       0
  8652 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8653 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8654 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8655 ;;Total ram usage:        1 bytes
  8656 ;; Hardware stack levels used:    1
  8657 ;; Hardware stack levels required when called:    2
  8658 ;; This function calls:
  8659 ;;		_i2c_espera
  8660 ;; This function is called by:
  8661 ;;		_leer_rtc
  8662 ;;		_leer_eeprom
  8663 ;; This function uses a non-reentrant model
  8664 ;;
  8665                           
  8666                           	psect	text51
  8667  002298                     __ptext51:
  8668                           	opt callstack 0
  8669  002298                     _i2c_recibe_dato:
  8670                           	opt callstack 25
  8671  002298                     
  8672                           ;./I2C.h: 70:     unsigned char datoleido;;./I2C.h: 73:     i2c_espera();
  8673  002298  ECF7  F010         	call	_i2c_espera	;wreg free
  8674  00229C                     
  8675                           ;./I2C.h: 74:     SSPCON2bits.RCEN = 1;
  8676  00229C  86C5               	bsf	197,3,c	;volatile
  8677                           
  8678                           ;./I2C.h: 76:     i2c_espera();
  8679  00229E  ECF7  F010         	call	_i2c_espera	;wreg free
  8680  0022A2                     
  8681                           ;./I2C.h: 77:     datoleido = SSPBUF;
  8682  0022A2  CFC9 F002          	movff	4041,i2c_recibe_dato@datoleido	;volatile
  8683                           
  8684                           ;./I2C.h: 80:     i2c_espera();
  8685  0022A6  ECF7  F010         	call	_i2c_espera	;wreg free
  8686  0022AA                     
  8687                           ;./I2C.h: 82:     SSPCON2bits.ACKDT = 1;
  8688  0022AA  8AC5               	bsf	197,5,c	;volatile
  8689  0022AC                     
  8690                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
  8691  0022AC  88C5               	bsf	197,4,c	;volatile
  8692  0022AE                     
  8693                           ;./I2C.h: 91:     return datoleido;
  8694  0022AE  5002               	movf	i2c_recibe_dato@datoleido^0,w,c
  8695  0022B0  0012               	return		;funcret
  8696  0022B2                     __end_of_i2c_recibe_dato:
  8697                           	opt callstack 0
  8698                           
  8699 ;; *************** function _i2c_inicia_com *****************
  8700 ;; Defined at:
  8701 ;;		line 28 in file "./I2C.h"
  8702 ;; Parameters:    Size  Location     Type
  8703 ;;		None
  8704 ;; Auto vars:     Size  Location     Type
  8705 ;;		None
  8706 ;; Return value:  Size  Location     Type
  8707 ;;                  1    wreg      void 
  8708 ;; Registers used:
  8709 ;;		wreg, status,2, status,0, cstack
  8710 ;; Tracked objects:
  8711 ;;		On entry : 0/0
  8712 ;;		On exit  : 0/0
  8713 ;;		Unchanged: 0/0
  8714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8715 ;;      Params:         0       0       0       0       0       0       0       0       0
  8716 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8717 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8718 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8719 ;;Total ram usage:        0 bytes
  8720 ;; Hardware stack levels used:    1
  8721 ;; Hardware stack levels required when called:    2
  8722 ;; This function calls:
  8723 ;;		_i2c_espera
  8724 ;; This function is called by:
  8725 ;;		_escribe_rtc
  8726 ;;		_leer_rtc
  8727 ;;		_escribe_eeprom
  8728 ;;		_leer_eeprom
  8729 ;; This function uses a non-reentrant model
  8730 ;;
  8731                           
  8732                           	psect	text52
  8733  002306                     __ptext52:
  8734                           	opt callstack 0
  8735  002306                     _i2c_inicia_com:
  8736                           	opt callstack 25
  8737  002306                     
  8738                           ;./I2C.h: 29:     i2c_espera();
  8739  002306  ECF7  F010         	call	_i2c_espera	;wreg free
  8740  00230A                     
  8741                           ;./I2C.h: 30:     SSPCON2bits.SEN = 1;
  8742  00230A  80C5               	bsf	197,0,c	;volatile
  8743  00230C  0012               	return		;funcret
  8744  00230E                     __end_of_i2c_inicia_com:
  8745                           	opt callstack 0
  8746                           
  8747 ;; *************** function _i2c_envia_dato *****************
  8748 ;; Defined at:
  8749 ;;		line 57 in file "./I2C.h"
  8750 ;; Parameters:    Size  Location     Type
  8751 ;;  dato            1    wreg     unsigned char 
  8752 ;; Auto vars:     Size  Location     Type
  8753 ;;  dato            1    1[COMRAM] unsigned char 
  8754 ;; Return value:  Size  Location     Type
  8755 ;;                  1    wreg      unsigned char 
  8756 ;; Registers used:
  8757 ;;		wreg, status,2, status,0, cstack
  8758 ;; Tracked objects:
  8759 ;;		On entry : 0/0
  8760 ;;		On exit  : 0/0
  8761 ;;		Unchanged: 0/0
  8762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8763 ;;      Params:         0       0       0       0       0       0       0       0       0
  8764 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8765 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8766 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8767 ;;Total ram usage:        1 bytes
  8768 ;; Hardware stack levels used:    1
  8769 ;; Hardware stack levels required when called:    2
  8770 ;; This function calls:
  8771 ;;		_i2c_espera
  8772 ;; This function is called by:
  8773 ;;		_escribe_rtc
  8774 ;;		_leer_rtc
  8775 ;;		_escribe_eeprom
  8776 ;;		_leer_eeprom
  8777 ;; This function uses a non-reentrant model
  8778 ;;
  8779                           
  8780                           	psect	text53
  8781  0022DE                     __ptext53:
  8782                           	opt callstack 0
  8783  0022DE                     _i2c_envia_dato:
  8784                           	opt callstack 25
  8785                           
  8786                           ;incstack = 0
  8787                           ;i2c_envia_dato@dato stored from wreg
  8788  0022DE  6E02               	movwf	i2c_envia_dato@dato^0,c
  8789  0022E0                     
  8790                           ;./I2C.h: 58:     i2c_espera();
  8791  0022E0  ECF7  F010         	call	_i2c_espera	;wreg free
  8792  0022E4                     
  8793                           ;./I2C.h: 59:     SSPBUF = dato;
  8794  0022E4  C002  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
  8795  0022E8  0012               	return		;funcret
  8796  0022EA                     __end_of_i2c_envia_dato:
  8797                           	opt callstack 0
  8798                           
  8799 ;; *************** function _i2c_detener *****************
  8800 ;; Defined at:
  8801 ;;		line 46 in file "./I2C.h"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;		None
  8804 ;; Auto vars:     Size  Location     Type
  8805 ;;		None
  8806 ;; Return value:  Size  Location     Type
  8807 ;;                  1    wreg      void 
  8808 ;; Registers used:
  8809 ;;		wreg, status,2, status,0, cstack
  8810 ;; Tracked objects:
  8811 ;;		On entry : 0/0
  8812 ;;		On exit  : 0/0
  8813 ;;		Unchanged: 0/0
  8814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8815 ;;      Params:         0       0       0       0       0       0       0       0       0
  8816 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8817 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8818 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8819 ;;Total ram usage:        0 bytes
  8820 ;; Hardware stack levels used:    1
  8821 ;; Hardware stack levels required when called:    2
  8822 ;; This function calls:
  8823 ;;		_i2c_espera
  8824 ;; This function is called by:
  8825 ;;		_escribe_rtc
  8826 ;;		_leer_rtc
  8827 ;;		_escribe_eeprom
  8828 ;;		_leer_eeprom
  8829 ;; This function uses a non-reentrant model
  8830 ;;
  8831                           
  8832                           	psect	text54
  8833  00230E                     __ptext54:
  8834                           	opt callstack 0
  8835  00230E                     _i2c_detener:
  8836                           	opt callstack 25
  8837  00230E                     
  8838                           ;./I2C.h: 47:     i2c_espera();
  8839  00230E  ECF7  F010         	call	_i2c_espera	;wreg free
  8840  002312                     
  8841                           ;./I2C.h: 48:     SSPCON2bits.PEN = 1;
  8842  002312  84C5               	bsf	197,2,c	;volatile
  8843  002314  0012               	return		;funcret
  8844  002316                     __end_of_i2c_detener:
  8845                           	opt callstack 0
  8846                           
  8847 ;; *************** function _i2c_espera *****************
  8848 ;; Defined at:
  8849 ;;		line 20 in file "./I2C.h"
  8850 ;; Parameters:    Size  Location     Type
  8851 ;;		None
  8852 ;; Auto vars:     Size  Location     Type
  8853 ;;		None
  8854 ;; Return value:  Size  Location     Type
  8855 ;;                  1    wreg      void 
  8856 ;; Registers used:
  8857 ;;		wreg, status,2, status,0
  8858 ;; Tracked objects:
  8859 ;;		On entry : 0/0
  8860 ;;		On exit  : 0/0
  8861 ;;		Unchanged: 0/0
  8862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8863 ;;      Params:         0       0       0       0       0       0       0       0       0
  8864 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8865 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8866 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8867 ;;Total ram usage:        1 bytes
  8868 ;; Hardware stack levels used:    1
  8869 ;; Hardware stack levels required when called:    1
  8870 ;; This function calls:
  8871 ;;		Nothing
  8872 ;; This function is called by:
  8873 ;;		_i2c_inicia_com
  8874 ;;		_i2c_reinicia_com
  8875 ;;		_i2c_detener
  8876 ;;		_i2c_envia_dato
  8877 ;;		_i2c_recibe_dato
  8878 ;; This function uses a non-reentrant model
  8879 ;;
  8880                           
  8881                           	psect	text55
  8882  0021EE                     __ptext55:
  8883                           	opt callstack 0
  8884  0021EE                     _i2c_espera:
  8885                           	opt callstack 25
  8886  0021EE                     l2711:
  8887  0021EE  CFC5 F001          	movff	4037,??_i2c_espera	;volatile
  8888  0021F2  0E1F               	movlw	31
  8889  0021F4  1601               	andwf	??_i2c_espera^0,f,c
  8890  0021F6  A4D8               	btfss	status,2,c
  8891  0021F8  EF00  F011         	goto	u1741
  8892  0021FC  EF02  F011         	goto	u1740
  8893  002200                     u1741:
  8894  002200  EFF7  F010         	goto	l2711
  8895  002204                     u1740:
  8896  002204  B4C7               	btfsc	199,2,c	;volatile
  8897  002206  EF07  F011         	goto	u1751
  8898  00220A  EF09  F011         	goto	u1750
  8899  00220E                     u1751:
  8900  00220E  EFF7  F010         	goto	l2711
  8901  002212                     u1750:
  8902  002212  0012               	return		;funcret
  8903  002214                     __end_of_i2c_espera:
  8904                           	opt callstack 0
  8905                           
  8906 ;; *************** function _inicializarObjetos *****************
  8907 ;; Defined at:
  8908 ;;		line 149 in file "main.c"
  8909 ;; Parameters:    Size  Location     Type
  8910 ;;		None
  8911 ;; Auto vars:     Size  Location     Type
  8912 ;;  i               2    6[COMRAM] int 
  8913 ;; Return value:  Size  Location     Type
  8914 ;;                  1    wreg      void 
  8915 ;; Registers used:
  8916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8917 ;; Tracked objects:
  8918 ;;		On entry : 0/0
  8919 ;;		On exit  : 0/0
  8920 ;;		Unchanged: 0/0
  8921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8922 ;;      Params:         0       0       0       0       0       0       0       0       0
  8923 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8924 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8925 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8926 ;;Total ram usage:        2 bytes
  8927 ;; Hardware stack levels used:    1
  8928 ;; Hardware stack levels required when called:    2
  8929 ;; This function calls:
  8930 ;;		___wmul
  8931 ;; This function is called by:
  8932 ;;		_main
  8933 ;; This function uses a non-reentrant model
  8934 ;;
  8935                           
  8936                           	psect	text56
  8937  0018F0                     __ptext56:
  8938                           	opt callstack 0
  8939  0018F0                     _inicializarObjetos:
  8940                           	opt callstack 28
  8941  0018F0                     
  8942                           ;main.c: 151:     for (int i = 0; i < 24; i++) {
  8943  0018F0  0E00               	movlw	0
  8944  0018F2  6E08               	movwf	(inicializarObjetos@i+1)^0,c
  8945  0018F4  0E00               	movlw	0
  8946  0018F6  6E07               	movwf	inicializarObjetos@i^0,c
  8947  0018F8                     l3489:
  8948                           
  8949                           ;main.c: 152:         horarios[i].hora = i;
  8950  0018F8  C007  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  8951  0018FC  C008  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  8952  001900  0E00               	movlw	0
  8953  001902  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8954  001904  0E03               	movlw	3
  8955  001906  6E03               	movwf	___wmul@multiplicand^0,c
  8956  001908  EC0A  F011         	call	___wmul	;wreg free
  8957  00190C  0E00               	movlw	low _horarios
  8958  00190E  2401               	addwf	?___wmul^0,w,c
  8959  001910  6ED9               	movwf	fsr2l,c
  8960  001912  0E01               	movlw	high _horarios
  8961  001914  2002               	addwfc	(?___wmul+1)^0,w,c
  8962  001916  6EDA               	movwf	fsr2h,c
  8963  001918  C007  FFDF         	movff	inicializarObjetos@i,indf2
  8964                           
  8965                           ;main.c: 153:         horarios[i].regar = 0;
  8966  00191C  C007  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  8967  001920  C008  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  8968  001924  0E00               	movlw	0
  8969  001926  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8970  001928  0E03               	movlw	3
  8971  00192A  6E03               	movwf	___wmul@multiplicand^0,c
  8972  00192C  EC0A  F011         	call	___wmul	;wreg free
  8973  001930  0E01               	movlw	low (_horarios+1)
  8974  001932  2401               	addwf	?___wmul^0,w,c
  8975  001934  6ED9               	movwf	fsr2l,c
  8976  001936  0E01               	movlw	high (_horarios+1)
  8977  001938  2002               	addwfc	(?___wmul+1)^0,w,c
  8978  00193A  6EDA               	movwf	fsr2h,c
  8979  00193C  0E00               	movlw	0
  8980  00193E  6EDF               	movwf	indf2,c
  8981                           
  8982                           ;main.c: 154:         horarios[i].tiempoRegar = 15;
  8983  001940  C007  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  8984  001944  C008  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  8985  001948  0E00               	movlw	0
  8986  00194A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8987  00194C  0E03               	movlw	3
  8988  00194E  6E03               	movwf	___wmul@multiplicand^0,c
  8989  001950  EC0A  F011         	call	___wmul	;wreg free
  8990  001954  0E02               	movlw	low (_horarios+2)
  8991  001956  2401               	addwf	?___wmul^0,w,c
  8992  001958  6ED9               	movwf	fsr2l,c
  8993  00195A  0E01               	movlw	high (_horarios+2)
  8994  00195C  2002               	addwfc	(?___wmul+1)^0,w,c
  8995  00195E  6EDA               	movwf	fsr2h,c
  8996  001960  0E0F               	movlw	15
  8997  001962  6EDF               	movwf	indf2,c
  8998  001964                     
  8999                           ;main.c: 155:     }
  9000  001964  4A07               	infsnz	inicializarObjetos@i^0,f,c
  9001  001966  2A08               	incf	(inicializarObjetos@i+1)^0,f,c
  9002  001968  BE08               	btfsc	(inicializarObjetos@i+1)^0,7,c
  9003  00196A  EFC0  F00C         	goto	u2471
  9004  00196E  5008               	movf	(inicializarObjetos@i+1)^0,w,c
  9005  001970  E109               	bnz	u2470
  9006  001972  0E18               	movlw	24
  9007  001974  5C07               	subwf	inicializarObjetos@i^0,w,c
  9008  001976  A0D8               	btfss	status,0,c
  9009  001978  EFC0  F00C         	goto	u2471
  9010  00197C  EFC2  F00C         	goto	u2470
  9011  001980                     u2471:
  9012  001980  EF7C  F00C         	goto	l3489
  9013  001984                     u2470:
  9014  001984  0012               	return		;funcret
  9015  001986                     __end_of_inicializarObjetos:
  9016                           	opt callstack 0
  9017                           
  9018 ;; *************** function ___wmul *****************
  9019 ;; Defined at:
  9020 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  9021 ;; Parameters:    Size  Location     Type
  9022 ;;  multiplier      2    0[COMRAM] unsigned int 
  9023 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9024 ;; Auto vars:     Size  Location     Type
  9025 ;;  product         2    4[COMRAM] unsigned int 
  9026 ;; Return value:  Size  Location     Type
  9027 ;;                  2    0[COMRAM] unsigned int 
  9028 ;; Registers used:
  9029 ;;		wreg, status,2, status,0, prodl, prodh
  9030 ;; Tracked objects:
  9031 ;;		On entry : 0/0
  9032 ;;		On exit  : 0/0
  9033 ;;		Unchanged: 0/0
  9034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9035 ;;      Params:         4       0       0       0       0       0       0       0       0
  9036 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9037 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9038 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9039 ;;Total ram usage:        6 bytes
  9040 ;; Hardware stack levels used:    1
  9041 ;; Hardware stack levels required when called:    1
  9042 ;; This function calls:
  9043 ;;		Nothing
  9044 ;; This function is called by:
  9045 ;;		_inicializarObjetos
  9046 ;;		_escribeHorariosMemoria
  9047 ;;		_leeHorariosMemoria
  9048 ;;		_dameDatosSistema
  9049 ;; This function uses a non-reentrant model
  9050 ;;
  9051                           
  9052                           	psect	text57
  9053  002214                     __ptext57:
  9054                           	opt callstack 0
  9055  002214                     ___wmul:
  9056                           	opt callstack 26
  9057  002214  5001               	movf	___wmul@multiplier^0,w,c
  9058  002216  0203               	mulwf	___wmul@multiplicand^0,c
  9059  002218  CFF3 F005          	movff	prodl,___wmul@product
  9060  00221C  CFF4 F006          	movff	prodh,___wmul@product+1
  9061  002220  5001               	movf	___wmul@multiplier^0,w,c
  9062  002222  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9063  002224  50F3               	movf	243,w,c
  9064  002226  2606               	addwf	(___wmul@product+1)^0,f,c
  9065  002228  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9066  00222A  0203               	mulwf	___wmul@multiplicand^0,c
  9067  00222C  50F3               	movf	243,w,c
  9068  00222E  2606               	addwf	(___wmul@product+1)^0,f,c
  9069  002230  C005  F001         	movff	___wmul@product,?___wmul
  9070  002234  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9071  002238  0012               	return		;funcret
  9072  00223A                     __end_of___wmul:
  9073                           	opt callstack 0
  9074                           
  9075 ;; *************** function _i2c_iniciar *****************
  9076 ;; Defined at:
  9077 ;;		line 4 in file "./I2C.h"
  9078 ;; Parameters:    Size  Location     Type
  9079 ;;		None
  9080 ;; Auto vars:     Size  Location     Type
  9081 ;;		None
  9082 ;; Return value:  Size  Location     Type
  9083 ;;                  1    wreg      void 
  9084 ;; Registers used:
  9085 ;;		wreg, status,2
  9086 ;; Tracked objects:
  9087 ;;		On entry : 0/0
  9088 ;;		On exit  : 0/0
  9089 ;;		Unchanged: 0/0
  9090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9091 ;;      Params:         0       0       0       0       0       0       0       0       0
  9092 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9094 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9095 ;;Total ram usage:        0 bytes
  9096 ;; Hardware stack levels used:    1
  9097 ;; Hardware stack levels required when called:    1
  9098 ;; This function calls:
  9099 ;;		Nothing
  9100 ;; This function is called by:
  9101 ;;		_main
  9102 ;; This function uses a non-reentrant model
  9103 ;;
  9104                           
  9105                           	psect	text58
  9106  0022C8                     __ptext58:
  9107                           	opt callstack 0
  9108  0022C8                     _i2c_iniciar:
  9109                           	opt callstack 29
  9110  0022C8                     
  9111                           ;./I2C.h: 5:     TRISBbits.RB0 = 1;
  9112  0022C8  8093               	bsf	147,0,c	;volatile
  9113                           
  9114                           ;./I2C.h: 6:     TRISBbits.RB1 = 1;
  9115  0022CA  8293               	bsf	147,1,c	;volatile
  9116  0022CC                     
  9117                           ;./I2C.h: 7:     SSPSTAT = 0b10000000;
  9118  0022CC  0E80               	movlw	128
  9119  0022CE  6EC7               	movwf	199,c	;volatile
  9120                           
  9121                           ;./I2C.h: 8:     SSPCON1 = 0b00101000;
  9122  0022D0  0E28               	movlw	40
  9123  0022D2  6EC6               	movwf	198,c	;volatile
  9124                           
  9125                           ;./I2C.h: 9:     SSPCON2 = 0b00000000;
  9126  0022D4  0E00               	movlw	0
  9127  0022D6  6EC5               	movwf	197,c	;volatile
  9128                           
  9129                           ;./I2C.h: 10:     SSPADD = 9;
  9130  0022D8  0E09               	movlw	9
  9131  0022DA  6EC8               	movwf	200,c	;volatile
  9132  0022DC  0012               	return		;funcret
  9133  0022DE                     __end_of_i2c_iniciar:
  9134                           	opt callstack 0
  9135                           
  9136 ;; *************** function _configurarAdc *****************
  9137 ;; Defined at:
  9138 ;;		line 130 in file "main.c"
  9139 ;; Parameters:    Size  Location     Type
  9140 ;;		None
  9141 ;; Auto vars:     Size  Location     Type
  9142 ;;		None
  9143 ;; Return value:  Size  Location     Type
  9144 ;;                  1    wreg      void 
  9145 ;; Registers used:
  9146 ;;		wreg, status,2
  9147 ;; Tracked objects:
  9148 ;;		On entry : 0/0
  9149 ;;		On exit  : 0/0
  9150 ;;		Unchanged: 0/0
  9151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9152 ;;      Params:         0       0       0       0       0       0       0       0       0
  9153 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9154 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9155 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9156 ;;Total ram usage:        0 bytes
  9157 ;; Hardware stack levels used:    1
  9158 ;; Hardware stack levels required when called:    1
  9159 ;; This function calls:
  9160 ;;		Nothing
  9161 ;; This function is called by:
  9162 ;;		_main
  9163 ;; This function uses a non-reentrant model
  9164 ;;
  9165                           
  9166                           	psect	text59
  9167  0022F4                     __ptext59:
  9168                           	opt callstack 0
  9169  0022F4                     _configurarAdc:
  9170                           	opt callstack 29
  9171  0022F4                     
  9172                           ;main.c: 131:     ADCON1 = 0b00000000;
  9173  0022F4  0E00               	movlw	0
  9174  0022F6  6EC1               	movwf	193,c	;volatile
  9175                           
  9176                           ;main.c: 132:     ADCON2 = 0b10100101;
  9177  0022F8  0EA5               	movlw	165
  9178  0022FA  6EC0               	movwf	192,c	;volatile
  9179  0022FC  0012               	return		;funcret
  9180  0022FE                     __end_of_configurarAdc:
  9181                           	opt callstack 0
  9182                           
  9183 ;; *************** function _UART_init *****************
  9184 ;; Defined at:
  9185 ;;		line 12 in file "./UART.h"
  9186 ;; Parameters:    Size  Location     Type
  9187 ;;  BAUD            4   26[COMRAM] long 
  9188 ;; Auto vars:     Size  Location     Type
  9189 ;;  frecuenciaCr    4    0        long 
  9190 ;; Return value:  Size  Location     Type
  9191 ;;                  1    wreg      void 
  9192 ;; Registers used:
  9193 ;;		wreg, status,2, status,0, cstack
  9194 ;; Tracked objects:
  9195 ;;		On entry : 0/0
  9196 ;;		On exit  : 0/0
  9197 ;;		Unchanged: 0/0
  9198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9199 ;;      Params:         4       0       0       0       0       0       0       0       0
  9200 ;;      Locals:         8       0       0       0       0       0       0       0       0
  9201 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9202 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9203 ;;Total ram usage:       12 bytes
  9204 ;; Hardware stack levels used:    1
  9205 ;; Hardware stack levels required when called:    2
  9206 ;; This function calls:
  9207 ;;		___aldiv
  9208 ;; This function is called by:
  9209 ;;		_main
  9210 ;; This function uses a non-reentrant model
  9211 ;;
  9212                           
  9213                           	psect	text60
  9214  001A8A                     __ptext60:
  9215                           	opt callstack 0
  9216  001A8A                     _UART_init:
  9217                           	opt callstack 28
  9218  001A8A                     
  9219                           ;./UART.h: 14:     TRISCbits.TRISC6 = 0;
  9220  001A8A  9C94               	bcf	148,6,c	;volatile
  9221  001A8C                     
  9222                           ;./UART.h: 15:     TRISCbits.TRISC7 = 1;
  9223  001A8C  8E94               	bsf	148,7,c	;volatile
  9224  001A8E                     
  9225                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  9226  001A8E  0E10               	movlw	16
  9227  001A90  6E11               	movwf	___aldiv@divisor^0,c
  9228  001A92  0E00               	movlw	0
  9229  001A94  6E12               	movwf	(___aldiv@divisor+1)^0,c
  9230  001A96  0E00               	movlw	0
  9231  001A98  6E13               	movwf	(___aldiv@divisor+2)^0,c
  9232  001A9A  0E00               	movlw	0
  9233  001A9C  6E14               	movwf	(___aldiv@divisor+3)^0,c
  9234  001A9E  0E00               	movlw	0
  9235  001AA0  6E0D               	movwf	___aldiv@dividend^0,c
  9236  001AA2  0E09               	movlw	9
  9237  001AA4  6E0E               	movwf	(___aldiv@dividend+1)^0,c
  9238  001AA6  0E3D               	movlw	61
  9239  001AA8  6E0F               	movwf	(___aldiv@dividend+2)^0,c
  9240  001AAA  0E00               	movlw	0
  9241  001AAC  6E10               	movwf	(___aldiv@dividend+3)^0,c
  9242  001AAE  ECDC  F006         	call	___aldiv	;wreg free
  9243  001AB2  C00D  F023         	movff	?___aldiv,_UART_init$1806
  9244  001AB6  C00E  F024         	movff	?___aldiv+1,_UART_init$1806+1
  9245  001ABA  C00F  F025         	movff	?___aldiv+2,_UART_init$1806+2
  9246  001ABE  C010  F026         	movff	?___aldiv+3,_UART_init$1806+3
  9247  001AC2                     
  9248                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  9249  001AC2  C023  F00D         	movff	_UART_init$1806,___aldiv@dividend
  9250  001AC6  C024  F00E         	movff	_UART_init$1806+1,___aldiv@dividend+1
  9251  001ACA  C025  F00F         	movff	_UART_init$1806+2,___aldiv@dividend+2
  9252  001ACE  C026  F010         	movff	_UART_init$1806+3,___aldiv@dividend+3
  9253  001AD2  C01B  F011         	movff	UART_init@BAUD,___aldiv@divisor
  9254  001AD6  C01C  F012         	movff	UART_init@BAUD+1,___aldiv@divisor+1
  9255  001ADA  C01D  F013         	movff	UART_init@BAUD+2,___aldiv@divisor+2
  9256  001ADE  C01E  F014         	movff	UART_init@BAUD+3,___aldiv@divisor+3
  9257  001AE2  ECDC  F006         	call	___aldiv	;wreg free
  9258  001AE6  040D               	decf	?___aldiv^0,w,c
  9259  001AE8  6EAF               	movwf	175,c	;volatile
  9260  001AEA                     
  9261                           ;./UART.h: 21:     TXSTAbits.BRGH = 1;
  9262  001AEA  84AC               	bsf	172,2,c	;volatile
  9263  001AEC                     
  9264                           ;./UART.h: 22:     TXSTAbits.SYNC = 0;
  9265  001AEC  98AC               	bcf	172,4,c	;volatile
  9266  001AEE                     
  9267                           ;./UART.h: 23:     RCSTAbits.SPEN = 1;
  9268  001AEE  8EAB               	bsf	171,7,c	;volatile
  9269  001AF0                     
  9270                           ;./UART.h: 26:     TXSTAbits.TX9 = 0;
  9271  001AF0  9CAC               	bcf	172,6,c	;volatile
  9272  001AF2                     
  9273                           ;./UART.h: 27:     TXSTAbits.TXEN = 1;
  9274  001AF2  8AAC               	bsf	172,5,c	;volatile
  9275  001AF4                     
  9276                           ;./UART.h: 30:     RCSTAbits.RC9 = 0;
  9277  001AF4  9CAB               	bcf	171,6,c	;volatile
  9278  001AF6                     
  9279                           ;./UART.h: 31:     RCSTAbits.CREN = 1;
  9280  001AF6  88AB               	bsf	171,4,c	;volatile
  9281  001AF8  0012               	return		;funcret
  9282  001AFA                     __end_of_UART_init:
  9283                           	opt callstack 0
  9284                           
  9285 ;; *************** function ___aldiv *****************
  9286 ;; Defined at:
  9287 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  9288 ;; Parameters:    Size  Location     Type
  9289 ;;  dividend        4   12[COMRAM] long 
  9290 ;;  divisor         4   16[COMRAM] long 
  9291 ;; Auto vars:     Size  Location     Type
  9292 ;;  quotient        4   22[COMRAM] long 
  9293 ;;  sign            1   21[COMRAM] unsigned char 
  9294 ;;  counter         1   20[COMRAM] unsigned char 
  9295 ;; Return value:  Size  Location     Type
  9296 ;;                  4   12[COMRAM] long 
  9297 ;; Registers used:
  9298 ;;		wreg, status,2, status,0
  9299 ;; Tracked objects:
  9300 ;;		On entry : 0/0
  9301 ;;		On exit  : 0/0
  9302 ;;		Unchanged: 0/0
  9303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9304 ;;      Params:         8       0       0       0       0       0       0       0       0
  9305 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9306 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9307 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9308 ;;Total ram usage:       14 bytes
  9309 ;; Hardware stack levels used:    1
  9310 ;; Hardware stack levels required when called:    1
  9311 ;; This function calls:
  9312 ;;		Nothing
  9313 ;; This function is called by:
  9314 ;;		_UART_init
  9315 ;;		_map
  9316 ;; This function uses a non-reentrant model
  9317 ;;
  9318                           
  9319                           	psect	text61
  9320  000DB8                     __ptext61:
  9321                           	opt callstack 0
  9322  000DB8                     ___aldiv:
  9323                           	opt callstack 26
  9324  000DB8  0E00               	movlw	0
  9325  000DBA  6E16               	movwf	___aldiv@sign^0,c
  9326  000DBC  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
  9327  000DBE  EFE5  F006         	goto	u1970
  9328  000DC2  EFE3  F006         	goto	u1971
  9329  000DC6                     u1971:
  9330  000DC6  EFEF  F006         	goto	l2879
  9331  000DCA                     u1970:
  9332  000DCA  1E14               	comf	(___aldiv@divisor+3)^0,f,c
  9333  000DCC  1E13               	comf	(___aldiv@divisor+2)^0,f,c
  9334  000DCE  1E12               	comf	(___aldiv@divisor+1)^0,f,c
  9335  000DD0  6C11               	negf	___aldiv@divisor^0,c
  9336  000DD2  0E00               	movlw	0
  9337  000DD4  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
  9338  000DD6  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
  9339  000DD8  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
  9340  000DDA  0E01               	movlw	1
  9341  000DDC  6E16               	movwf	___aldiv@sign^0,c
  9342  000DDE                     l2879:
  9343  000DDE  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
  9344  000DE0  EFF6  F006         	goto	u1980
  9345  000DE4  EFF4  F006         	goto	u1981
  9346  000DE8                     u1981:
  9347  000DE8  EF00  F007         	goto	l2885
  9348  000DEC                     u1980:
  9349  000DEC  1E10               	comf	(___aldiv@dividend+3)^0,f,c
  9350  000DEE  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
  9351  000DF0  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
  9352  000DF2  6C0D               	negf	___aldiv@dividend^0,c
  9353  000DF4  0E00               	movlw	0
  9354  000DF6  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
  9355  000DF8  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
  9356  000DFA  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
  9357  000DFC  0E01               	movlw	1
  9358  000DFE  1A16               	xorwf	___aldiv@sign^0,f,c
  9359  000E00                     l2885:
  9360  000E00  0E00               	movlw	0
  9361  000E02  6E17               	movwf	___aldiv@quotient^0,c
  9362  000E04  0E00               	movlw	0
  9363  000E06  6E18               	movwf	(___aldiv@quotient+1)^0,c
  9364  000E08  0E00               	movlw	0
  9365  000E0A  6E19               	movwf	(___aldiv@quotient+2)^0,c
  9366  000E0C  0E00               	movlw	0
  9367  000E0E  6E1A               	movwf	(___aldiv@quotient+3)^0,c
  9368  000E10  5011               	movf	___aldiv@divisor^0,w,c
  9369  000E12  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
  9370  000E14  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
  9371  000E16  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
  9372  000E18  B4D8               	btfsc	status,2,c
  9373  000E1A  EF11  F007         	goto	u1991
  9374  000E1E  EF13  F007         	goto	u1990
  9375  000E22                     u1991:
  9376  000E22  EF49  F007         	goto	l2907
  9377  000E26                     u1990:
  9378  000E26  0E01               	movlw	1
  9379  000E28  6E15               	movwf	___aldiv@counter^0,c
  9380  000E2A  EF1D  F007         	goto	l2893
  9381  000E2E                     l2891:
  9382  000E2E  90D8               	bcf	status,0,c
  9383  000E30  3611               	rlcf	___aldiv@divisor^0,f,c
  9384  000E32  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
  9385  000E34  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
  9386  000E36  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
  9387  000E38  2A15               	incf	___aldiv@counter^0,f,c
  9388  000E3A                     l2893:
  9389  000E3A  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
  9390  000E3C  EF22  F007         	goto	u2001
  9391  000E40  EF24  F007         	goto	u2000
  9392  000E44                     u2001:
  9393  000E44  EF17  F007         	goto	l2891
  9394  000E48                     u2000:
  9395  000E48                     l2895:
  9396  000E48  90D8               	bcf	status,0,c
  9397  000E4A  3617               	rlcf	___aldiv@quotient^0,f,c
  9398  000E4C  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
  9399  000E4E  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
  9400  000E50  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
  9401  000E52  5011               	movf	___aldiv@divisor^0,w,c
  9402  000E54  5C0D               	subwf	___aldiv@dividend^0,w,c
  9403  000E56  5012               	movf	(___aldiv@divisor+1)^0,w,c
  9404  000E58  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
  9405  000E5A  5013               	movf	(___aldiv@divisor+2)^0,w,c
  9406  000E5C  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
  9407  000E5E  5014               	movf	(___aldiv@divisor+3)^0,w,c
  9408  000E60  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
  9409  000E62  A0D8               	btfss	status,0,c
  9410  000E64  EF36  F007         	goto	u2011
  9411  000E68  EF38  F007         	goto	u2010
  9412  000E6C                     u2011:
  9413  000E6C  EF41  F007         	goto	l2903
  9414  000E70                     u2010:
  9415  000E70  5011               	movf	___aldiv@divisor^0,w,c
  9416  000E72  5E0D               	subwf	___aldiv@dividend^0,f,c
  9417  000E74  5012               	movf	(___aldiv@divisor+1)^0,w,c
  9418  000E76  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
  9419  000E78  5013               	movf	(___aldiv@divisor+2)^0,w,c
  9420  000E7A  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
  9421  000E7C  5014               	movf	(___aldiv@divisor+3)^0,w,c
  9422  000E7E  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
  9423  000E80  8017               	bsf	___aldiv@quotient^0,0,c
  9424  000E82                     l2903:
  9425  000E82  90D8               	bcf	status,0,c
  9426  000E84  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
  9427  000E86  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
  9428  000E88  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
  9429  000E8A  3211               	rrcf	___aldiv@divisor^0,f,c
  9430  000E8C  2E15               	decfsz	___aldiv@counter^0,f,c
  9431  000E8E  EF24  F007         	goto	l2895
  9432  000E92                     l2907:
  9433  000E92  5016               	movf	___aldiv@sign^0,w,c
  9434  000E94  B4D8               	btfsc	status,2,c
  9435  000E96  EF4F  F007         	goto	u2021
  9436  000E9A  EF51  F007         	goto	u2020
  9437  000E9E                     u2021:
  9438  000E9E  EF59  F007         	goto	l2911
  9439  000EA2                     u2020:
  9440  000EA2  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
  9441  000EA4  1E19               	comf	(___aldiv@quotient+2)^0,f,c
  9442  000EA6  1E18               	comf	(___aldiv@quotient+1)^0,f,c
  9443  000EA8  6C17               	negf	___aldiv@quotient^0,c
  9444  000EAA  0E00               	movlw	0
  9445  000EAC  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
  9446  000EAE  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
  9447  000EB0  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
  9448  000EB2                     l2911:
  9449  000EB2  C017  F00D         	movff	___aldiv@quotient,?___aldiv
  9450  000EB6  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
  9451  000EBA  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
  9452  000EBE  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
  9453  000EC2  0012               	return		;funcret
  9454  000EC4                     __end_of___aldiv:
  9455                           	opt callstack 0
  9456                           
  9457 ;; *************** function _desbordamiento *****************
  9458 ;; Defined at:
  9459 ;;		line 92 in file "main.c"
  9460 ;; Parameters:    Size  Location     Type
  9461 ;;		None
  9462 ;; Auto vars:     Size  Location     Type
  9463 ;;		None
  9464 ;; Return value:  Size  Location     Type
  9465 ;;                  1    wreg      void 
  9466 ;; Registers used:
  9467 ;;		wreg, status,2, status,0
  9468 ;; Tracked objects:
  9469 ;;		On entry : 0/0
  9470 ;;		On exit  : 0/0
  9471 ;;		Unchanged: 0/0
  9472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9473 ;;      Params:         0       0       0       0       0       0       0       0       0
  9474 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9475 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9476 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9477 ;;Total ram usage:        0 bytes
  9478 ;; Hardware stack levels used:    1
  9479 ;; This function calls:
  9480 ;;		Nothing
  9481 ;; This function is called by:
  9482 ;;		Interrupt level 2
  9483 ;; This function uses a non-reentrant model
  9484 ;;
  9485                           
  9486                           	psect	intcode
  9487  000008                     __pintcode:
  9488                           	opt callstack 0
  9489  000008                     _desbordamiento:
  9490                           	opt callstack 19
  9491                           
  9492                           ;incstack = 0
  9493  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9494  00000A  ED48  F00E         	call	int_func,f	;refresh shadow registers
  9495                           
  9496                           	psect	intcode_body
  9497  001C90                     __pintcode_body:
  9498                           	opt callstack 19
  9499  001C90                     int_func:
  9500                           	opt callstack 19
  9501  001C90  0006               	pop		; remove dummy address from shadow register refresh
  9502  001C92                     
  9503                           ;main.c: 94:     if (INTCONbits.TMR0IF) {
  9504  001C92  A4F2               	btfss	242,2,c	;volatile
  9505  001C94  EF4E  F00E         	goto	i2u261_41
  9506  001C98  EF50  F00E         	goto	i2u261_40
  9507  001C9C                     i2u261_41:
  9508  001C9C  EF6B  F00E         	goto	i2l3605
  9509  001CA0                     i2u261_40:
  9510  001CA0                     
  9511                           ;main.c: 96:         if (esperandoDatos) {
  9512  001CA0  0100               	movlb	0	; () banked
  9513  001CA2  51F4               	movf	_esperandoDatos& (0+255),w,b
  9514  001CA4  B4D8               	btfsc	status,2,c
  9515  001CA6  EF57  F00E         	goto	i2u262_41
  9516  001CAA  EF59  F00E         	goto	i2u262_40
  9517  001CAE                     i2u262_41:
  9518  001CAE  EF64  F00E         	goto	i2l3601
  9519  001CB2                     i2u262_40:
  9520  001CB2                     
  9521                           ; BSR set to: 0
  9522                           ;main.c: 98:             tiempoInactividadTrans++;
  9523  001CB2  2BF7               	incf	_tiempoInactividadTrans& (0+255),f,b
  9524  001CB4                     
  9525                           ; BSR set to: 0
  9526                           ;main.c: 100:             if (tiempoInactividadTrans == 1)
  9527  001CB4  05F7               	decf	_tiempoInactividadTrans& (0+255),w,b
  9528  001CB6  A4D8               	btfss	status,2,c
  9529  001CB8  EF60  F00E         	goto	i2u263_41
  9530  001CBC  EF62  F00E         	goto	i2u263_40
  9531  001CC0                     i2u263_41:
  9532  001CC0  EF64  F00E         	goto	i2l3601
  9533  001CC4                     i2u263_40:
  9534  001CC4                     
  9535                           ; BSR set to: 0
  9536                           ;main.c: 101:                 esperaDatoConcluida = 1;
  9537  001CC4  0E01               	movlw	1
  9538  001CC6  6FF5               	movwf	_esperaDatoConcluida& (0+255),b
  9539  001CC8                     i2l3601:
  9540                           
  9541                           ; BSR set to: 0
  9542                           ;main.c: 106:         INTCONbits.TMR0IF = 0;
  9543  001CC8  94F2               	bcf	242,2,c	;volatile
  9544  001CCA                     
  9545                           ; BSR set to: 0
  9546                           ;main.c: 107:         TMR0 = VALOR_TIMER0;
  9547  001CCA  C0F8  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  9548  001CCE  C0F9  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  9549                           
  9550                           ;main.c: 108:         overflowTimer = 1;
  9551  001CD2  0E01               	movlw	1
  9552  001CD4  6FEE               	movwf	_overflowTimer& (0+255),b
  9553  001CD6                     i2l3605:
  9554                           
  9555                           ;main.c: 112:     if (PIR1bits.RCIF) {
  9556  001CD6  AA9E               	btfss	158,5,c	;volatile
  9557  001CD8  EF70  F00E         	goto	i2u264_41
  9558  001CDC  EF72  F00E         	goto	i2u264_40
  9559  001CE0                     i2u264_41:
  9560  001CE0  EF77  F00E         	goto	i2l199
  9561  001CE4                     i2u264_40:
  9562  001CE4                     
  9563                           ;main.c: 114:         byteUart = RCREG;
  9564  001CE4  CFAE F0F6          	movff	4014,_byteUart	;volatile
  9565  001CE8                     
  9566                           ;main.c: 115:         datoRecibido = 1;
  9567  001CE8  0E01               	movlw	1
  9568  001CEA  0100               	movlb	0	; () banked
  9569  001CEC  6FEF               	movwf	_datoRecibido& (0+255),b
  9570  001CEE                     i2l199:
  9571  001CEE  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9572  001CF0  0011               	retfie		f
  9573  001CF2                     __end_of_desbordamiento:
  9574                           	opt callstack 0
  9575                           
  9576                           	psect	rparam
  9577  0000                     
  9578                           	psect	temp
  9579  00005F                     btemp:
  9580                           	opt callstack 0
  9581  00005F                     	ds	1
  9582  0000                     int$flags	set	btemp
  9583  0000                     wtemp8	set	btemp+1
  9584  0000                     ttemp5	set	btemp+1
  9585  0000                     ttemp6	set	btemp+4
  9586  0000                     ttemp7	set	btemp+8
  9587                           tosu	equ	0xFFF
  9588                           tosh	equ	0xFFE
  9589                           tosl	equ	0xFFD
  9590                           stkptr	equ	0xFFC
  9591                           pclatu	equ	0xFFB
  9592                           pclath	equ	0xFFA
  9593                           pcl	equ	0xFF9
  9594                           tblptru	equ	0xFF8
  9595                           tblptrh	equ	0xFF7
  9596                           tblptrl	equ	0xFF6
  9597                           tablat	equ	0xFF5
  9598                           prodh	equ	0xFF4
  9599                           prodl	equ	0xFF3
  9600                           indf0	equ	0xFEF
  9601                           postinc0	equ	0xFEE
  9602                           postdec0	equ	0xFED
  9603                           preinc0	equ	0xFEC
  9604                           plusw0	equ	0xFEB
  9605                           fsr0h	equ	0xFEA
  9606                           fsr0l	equ	0xFE9
  9607                           wreg	equ	0xFE8
  9608                           indf1	equ	0xFE7
  9609                           postinc1	equ	0xFE6
  9610                           postdec1	equ	0xFE5
  9611                           preinc1	equ	0xFE4
  9612                           plusw1	equ	0xFE3
  9613                           fsr1h	equ	0xFE2
  9614                           fsr1l	equ	0xFE1
  9615                           bsr	equ	0xFE0
  9616                           indf2	equ	0xFDF
  9617                           postinc2	equ	0xFDE
  9618                           postdec2	equ	0xFDD
  9619                           preinc2	equ	0xFDC
  9620                           plusw2	equ	0xFDB
  9621                           fsr2h	equ	0xFDA
  9622                           fsr2l	equ	0xFD9
  9623                           status	equ	0xFD8


Data Sizes:
    Strings     1082
    Constant    0
    Data        4
    BSS         144
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    128     156
    BANK1           256      0     120
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_34(CODE[29]), STR_33(CODE[32]), STR_32(CODE[45]), STR_31(CODE[45]), 
		 -> STR_30(CODE[29]), STR_29(CODE[32]), STR_26(CODE[16]), STR_14(CODE[51]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), lecturaWifi@buffer(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), lecturaWifi@buffer(BANK0[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1487_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), lecturaWifi@buffer(BANK0[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), lecturaWifi@buffer(BANK0[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_34(CODE[29]), STR_33(CODE[32]), STR_32(CODE[45]), STR_31(CODE[45]), 
		 -> STR_30(CODE[29]), STR_29(CODE[32]), STR_26(CODE[16]), STR_14(CODE[51]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 51
		 -> STR_34(CODE[29]), STR_33(CODE[32]), STR_32(CODE[45]), STR_31(CODE[45]), 
		 -> STR_30(CODE[29]), STR_29(CODE[32]), STR_26(CODE[16]), STR_14(CODE[51]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    dameTemperaturaHumedad@Temperatura	PTR unsigned char  size(2) Largest target is 1
		 -> mostrarDatosSensoresWIFI@temperatura(BANK0[1]), mostrarDatosSensores@temperatura(BANK0[1]), estaSeco@temperatura(COMRAM[1]), 

    dameTemperaturaHumedad@Humedad	PTR unsigned char  size(2) Largest target is 1
		 -> mostrarDatosSensoresWIFI@humedad(BANK0[1]), mostrarDatosSensores@humedad(BANK0[1]), NULL(NULL[0]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 72
		 -> STR_38(CODE[18]), STR_37(CODE[11]), STR_36(CODE[9]), STR_35(CODE[17]), 
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), STR_28(CODE[21]), STR_27(CODE[25]), 
		 -> dameDatosSistema@buffer(BANK0[50]), STR_25(CODE[50]), STR_24(CODE[42]), STR_23(CODE[3]), 
		 -> STR_22(CODE[14]), STR_21(CODE[34]), STR_20(CODE[32]), STR_19(CODE[49]), 
		 -> STR_18(CODE[37]), STR_17(CODE[27]), STR_16(CODE[37]), STR_15(CODE[32]), 
		 -> lecturaWifi@buffer(BANK0[50]), STR_13(CODE[38]), STR_12(CODE[37]), STR_11(CODE[72]), 
		 -> STR_10(CODE[51]), STR_9(CODE[23]), STR_8(CODE[26]), STR_7(CODE[55]), 
		 -> STR_6(CODE[51]), STR_5(CODE[25]), STR_4(CODE[37]), STR_3(CODE[31]), 
		 -> STR_2(CODE[43]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_sistemaPrincipal
    _encenderBombas->_estaSeco
    _estaSeco->_dameTemperaturaHumedad
    _dameHoraActual->_leer_rtc
    _leer_rtc->_i2c_envia_dato
    _leer_rtc->_i2c_recibe_dato
    _sistemaPrincipal->_dameDatosSistema
    _setTiempoRegar->_escribeHorariosMemoria
    _setTiempoRegar->_getValue
    _mostrarMenu->_UART_printf
    _restablecerDatosSensor->_constructorSensor
    _lecturaAnalogaSensores->_map
    _map->___aldiv
    _dameTemperaturaHumedad->_UART_printf
    _fijaHoraRtc->_setRtc
    _setRtc->_getValue
    _escribe_rtc->_i2c_envia_dato
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _asignarHorarios->_escribeHorariosMemoria
    _asignarHorarios->_getValue
    _getValue->_UART_printf
    _UART_printf->_UART_write
    _escribeHorariosMemoria->_escribe_eeprom
    _escribe_eeprom->___wmul
    _leeHorariosMemoria->___wmul
    _leeHorariosMemoria->_leer_eeprom
    _leer_eeprom->_i2c_envia_dato
    _leer_eeprom->_i2c_recibe_dato
    _i2c_reinicia_com->_i2c_espera
    _i2c_recibe_dato->_i2c_espera
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera
    _inicializarObjetos->___wmul
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _desbordamiento in COMRAM

    None.

Critical Paths under _main in BANK0

    _sistemaRegado->_lecturaWifi
    _sistemaPrincipal->_mostrarDatosSensoresWIFI
    _mostrarDatosSensoresWIFI->_lecturaWifi
    _lecturaWifi->_sprintf
    _mostrarDatosSensores->_sprintf
    _dameDatosSistema->_sprintf

Critical Paths under _desbordamiento in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _desbordamiento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _desbordamiento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _desbordamiento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _desbordamiento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _desbordamiento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _desbordamiento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _desbordamiento in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  143478
                          _UART_init
                      _configurarAdc
                        _i2c_iniciar
                 _inicializarObjetos
                 _leeHorariosMemoria
                        _mostrarMenu
             _restablecerDatosSensor
                   _sistemaPrincipal
                      _sistemaRegado
 ---------------------------------------------------------------------------------
 (1) _sistemaRegado                                        0     0      0   28172
                     _dameHoraActual
                     _encenderBombas
                          _horaRegar
             _lecturaAnalogaSensores
                        _lecturaWifi
                        _mostrarMenu
 ---------------------------------------------------------------------------------
 (2) _horaRegar                                            3     1      2       0
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _encenderBombas                                       5     5      0    4729
                                             19 COMRAM     5     5      0
                           _estaSeco
 ---------------------------------------------------------------------------------
 (3) _estaSeco                                             4     2      2    4454
                                             15 COMRAM     4     2      2
             _dameTemperaturaHumedad
 ---------------------------------------------------------------------------------
 (2) _dameHoraActual                                       0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (3) _leer_rtc                                             2     2      0      90
                                              2 COMRAM     2     2      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (3) _convertirDato                                        3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _sistemaPrincipal                                     3     3      0  106166
                                             91 COMRAM     3     3      0
                        _UART_printf
                    _asignarHorarios
                   _dameDatosSistema
                        _fijaHoraRtc
               _mostrarDatosSensores
           _mostrarDatosSensoresWIFI
                        _mostrarMenu
                     _setTiempoRegar
 ---------------------------------------------------------------------------------
 (2) _setTiempoRegar                                       2     2      0    9833
                                             14 COMRAM     2     2      0
                        _UART_printf
             _escribeHorariosMemoria
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _mostrarMenu                                          0     0      0    2955
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensoresWIFI                            55    55      0   36607
                                             88 COMRAM     1     1      0
                                             74 BANK0     54    54      0
                        _UART_printf
                         _UART_write
             _dameTemperaturaHumedad
                        _lecturaWifi
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaWifi                                         54    54      0   18535
                                             20 BANK0     54    54      0
                        _UART_printf
                          _UART_read
                         _UART_write
                           _getValue
             _restablecerDatosSensor
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _restablecerDatosSensor                               2     2      0     387
                                              4 COMRAM     2     2      0
                  _constructorSensor
 ---------------------------------------------------------------------------------
 (4) _constructorSensor                                    4     0      4     297
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensores                                55    55      0   19844
                                             88 COMRAM     1     1      0
                                             20 BANK0     54    54      0
                        _UART_printf
                         _UART_write
             _dameTemperaturaHumedad
             _lecturaAnalogaSensores
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaAnalogaSensores                               3     3      0    1772
                                             46 COMRAM     3     3      0
                   _dameHumedadSuelo
                                _map
 ---------------------------------------------------------------------------------
 (3) _map                                                 20     0     20    1660
                                             26 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
                   _dameHumedadSuelo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _dameHumedadSuelo                                     5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _dameTemperaturaHumedad                              12     8      4    3754
                                              3 COMRAM    12     8      4
                     _DHT11_ReadData
                        _DHT11_Start
                        _UART_printf
                     _check_response
 ---------------------------------------------------------------------------------
 (5) _check_response                                       1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fijaHoraRtc                                          0     0      0    7858
                        _UART_printf
                        _escribe_rtc
                             _setRtc
 ---------------------------------------------------------------------------------
 (3) _setRtc                                               3     3      0    4457
                                             14 COMRAM     3     3      0
                        _escribe_rtc
                           _getValue
 ---------------------------------------------------------------------------------
 (4) _escribe_rtc                                          2     1      1     446
                                              2 COMRAM     2     1      1
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (2) _dameDatosSistema                                    55    55      0   16281
                                             88 COMRAM     3     3      0
                                             20 BANK0     52    52      0
                        _UART_printf
                         _UART_write
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             20    10     10   11021
                                              0 BANK0     20    10     10
                             ___wmul (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    9604
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    9247
                                             63 COMRAM    17    11      6
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4586
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 7     4      3    3157
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2937
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _asignarHorarios                                      2     2      0    9811
                                             14 COMRAM     2     2      0
                        _UART_printf
             _escribeHorariosMemoria
                           _getValue
 ---------------------------------------------------------------------------------
 (3) _getValue                                            11     9      2    3919
                                              3 COMRAM    11     9      2
                        _UART_printf
                          _UART_read
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2    2955
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _escribeHorariosMemoria                               4     4      0    2847
                                             10 COMRAM     4     4      0
                             ___wmul
                     _escribe_eeprom
 ---------------------------------------------------------------------------------
 (4) _escribe_eeprom                                       4     1      3     544
                                              6 COMRAM     4     1      3
                             ___wmul (ARG)
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (1) _leeHorariosMemoria                                   4     4      0    2643
                                              6 COMRAM     4     4      0
                             ___wmul
                        _leer_eeprom
 ---------------------------------------------------------------------------------
 (2) _leer_eeprom                                          4     2      2     340
                                              2 COMRAM     4     2      2
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_recibe_dato                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializarObjetos                                   2     2      0    2255
                                              6 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2121
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     900
                                             26 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     756
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _desbordamiento                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _configurarAdc
   _i2c_iniciar
   _inicializarObjetos
     ___wmul
   _leeHorariosMemoria
     ___wmul
     _leer_eeprom
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
       _i2c_recibe_dato
         _i2c_espera
       _i2c_reinicia_com
         _i2c_espera
   _mostrarMenu
     _UART_printf
       _UART_write
   _restablecerDatosSensor
     _constructorSensor
   _sistemaPrincipal
     _UART_printf
       _UART_write
     _asignarHorarios
       _UART_printf
         _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
     _dameDatosSistema
       _UART_printf
         _UART_write
       _UART_write
       ___wmul
       _sprintf
         ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _fijaHoraRtc
       _UART_printf
         _UART_write
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
       _setRtc
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
     _mostrarDatosSensores
       _UART_printf
         _UART_write
       _UART_write
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaAnalogaSensores
         _dameHumedadSuelo
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
           _dameHumedadSuelo (ARG)
       _sprintf
         ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _mostrarDatosSensoresWIFI
       _UART_printf
         _UART_write
       _UART_write
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaWifi
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
         _restablecerDatosSensor
           _constructorSensor
         _sprintf
           ___wmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
       _sprintf
         ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _mostrarMenu
       _UART_printf
         _UART_write
     _setTiempoRegar
       _UART_printf
         _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
   _sistemaRegado
     _dameHoraActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _encenderBombas
       _estaSeco
         _dameTemperaturaHumedad
           _DHT11_ReadData
           _DHT11_Start
           _UART_printf
             _UART_write
           _check_response
     _horaRegar
     _lecturaAnalogaSensores
       _dameHumedadSuelo
       _map
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _dameHumedadSuelo (ARG)
     _lecturaWifi
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
       _restablecerDatosSensor
         _constructorSensor
       _sprintf
         ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _mostrarMenu
       _UART_printf
         _UART_write

 _desbordamiento (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      78       7       46.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     80      9C       5       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     172      20        0.0%
DATA                 0      0     172       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jun 11 16:30:04 2020

                 __size_of_escribe_eeprom 0030                                        l83 2212  
                                      l92 2314                                        l77 22DC  
                                      l86 230C                                        l95 22E8  
                                      l89 2304                                        l98 22B0  
                          ?_configurarAdc 0001                       ___wmul@multiplicand 0003  
                             __CFG_BORV$3 000000            __end_of_dameTemperaturaHumedad 1664  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                                     l101 2296                                       l120 1AF8  
                                     l104 21EC                                       l202 1A88  
                                     l123 1E22                                       l107 2258  
                                     l132 22B8                                       l221 1984  
                                     l141 1D4E                                       l205 22F2  
                                     l213 1FCC                                       l231 216A  
                                     l135 22C6                                       l151 1D88  
                                     l311 170E                                       l208 22FC  
                                     l128 1E58                                       l224 21C2  
                                     l216 2196                                       l129 1E5A  
                                     l234 20CC                                       l154 1DAA  
                                     l146 1D58                                       l162 2050  
                                     l306 10B0                                       l314 1C2C  
                                     l403 0996                                       l244 14E8  
                                     l228 2104                                       l157 2278  
                                     l239 1356                                       l327 17B2  
                                     l271 054C                                       l344 0DB6  
                                     l281 1A0E                                       l441 1530  
                                     l361 119E                                       l611 0B1E  
                                     l291 1F74                                       l444 1572  
                                     l276 1BCA                                       l356 1662  
                                     l292 1F88                                       l508 1B52  
                                     l453 1E06                                       l461 00BA  
                                     l349 1288                                       l509 1B62  
                                     l446 15AE                                       l286 1852  
                                     l383 07F6                                       l367 0FC0  
                                     l624 0C82                                       l393 08A2  
                                     l289 1F66                                       l297 1EFC  
                                     l459 00B2                                       l484 0772  
                                     l493 1C86                                       l494 1C8E  
                                     l479 02F4                                       l576 0EC2  
                                     l497 2238                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                              __CFG_BOR$OFF 000000  
                                     _abs 2052                                       _pad 14EA  
                                     _map 1A10                                       prod 000FF3  
                                     wreg 000FE8                  __end_of_dameDatosSistema 128A  
                            __CFG_LVP$OFF 000000                         ?_i2c_reinicia_com 0001  
                            ?_escribe_rtc 0003                              __CFG_WDT$OFF 000000  
                                    l1202 1EAC                                      l1211 213A  
                                    ?_abs 0013                                      l1205 231A  
                                    l3001 083E                                      l3003 0848  
                                    l1172 2088                                      l3021 08A6  
                                    l3013 0874                                      l3005 084C  
                                    l3101 1E5C                                      l3023 08B2  
                                    l3031 08FA                                      l3015 087A  
                                    l3007 086C                                      l1175 2090  
                                    l3103 1E6E                                      l3113 2214  
                                    l3033 08FE                                      l3025 08BE  
                                    l3017 088A                                      l3041 092C  
                                    l3105 1E76                                      l3121 21EA  
                                    l3115 2230                                      l3035 0908  
                                    l3019 089A                                      l3043 0960  
                                    l1187 1420                                      l1195 2010  
                                    l3107 1E7E                                      l3211 104A  
                                    l3203 1000                                      l3131 2256  
                                    l3045 0972                                      l3037 090C  
                                    l3029 08C6                                      l2501 1386  
                                    l3109 1E9A                                      l3213 1064  
                                    l3205 101C                                      l3221 10AA  
                                    l3125 223C                                      l3141 1FB2  
                                    l3301 0484                                      l3071 213C  
                                    l3055 0994                                      l3047 0982  
                                    l2503 13A4                                      l2511 1FDA  
                                    l3151 20D4                                      l3231 166C  
                                    l3223 10AE                                      l3215 107A  
                                    l3207 1028                                      l3127 223C  
                                    l3119 21C6                                      l3143 1FC2  
                                    l3135 1F8A                                      l3303 04B4  
                                    l3311 0516                                      l3073 215C  
                                    l3049 098E                                      l2505 13DA  
                                    l2513 1FEC                                      l2521 2116  
                                    l2601 0B32                                      l3153 20E2  
                                    l3081 1F62                                      l3233 16DE  
                                    l3225 1664                                      l3217 107E  
                                    l3209 1038                                      l3401 0EE0  
                                    l3129 2244                                      l3145 1FC6  
                                    l3137 1F9E                                      l3313 051A  
                                    l3171 12CA                                      l3163 128A  
                                    l2515 1FF0                                      l2523 212E  
                                    l2531 150E                                      l2611 0BA2  
                                    l2603 0B52                                      l3155 20F4  
                                    l3331 1BB4                                      l3323 1B64  
                                    l3083 1F64                                      l3075 1F46  
                                    l3235 16EE                                      l3219 109A  
                                    l3411 0F34                                      l3243 2198  
                                    l3139 1FA2                                      l3315 0536  
                                    l3245 2092                                      l3501 1432  
                                    l3181 133A                                      l3173 12CE  
                                    l3341 19BE                                      l2509 1FCE  
                                    l2517 2106                                      l2541 1554  
                                    l2533 151C                                      l2621 0C1A  
                                    l2613 0BAA                                      l2605 0B56  
                                    l2701 02B4                                      l3157 20FE  
                                    l3149 20D0                                      l3333 1BC0  
                                    l3325 1B7C                                      l3085 1F76  
                                    l3077 1F4E                                      l3237 16F2  
                                    l3421 0FBA                                      l3413 0F3A  
                                    l3317 0546                                      l3261 0336  
                                    l3309 04BA                                      l3253 02F6  
                                    l2711 21EE                                      l3247 20BC  
                                    l3511 14C8                                      l3503 1460  
                                    l3175 1302                                      l3351 1A02  
                                    l3343 19CA                                      l3335 1986  
                                    l2519 2112                                      l2543 1582  
                                    l2535 1528                                      l2527 14EA  
                                    l2623 0C2C                                      l2615 0BBE  
                                    l2607 0B64                                      l2551 206C  
                                    l2703 02BC                                      l3159 2102  
                                    l3327 1B92                                      l3079 1F50  
                                    l3431 10F4                                      l3423 10B2  
                                    l3095 1EB6                                      l3191 0FCE  
                                    l3183 0FC2                                      l3407 0EE8  
                                    l3415 0F56                                      l3271 0376  
                                    l3263 0338                                      l3239 216C  
                                    l2713 2204                                      l3249 20CA  
                                    l3513 14CC                                      l3505 1464  
                                    l3177 1332                                      l3169 129A  
                                    l2801 1D1E                                      l3345 19D8  
                                    l3337 199E                                      l2545 1596  
                                    l2537 153C                                      l2529 14FA  
                                    l2641 1DDC                                      l2633 1DAC  
                                    l2561 09CE                                      l2553 0998  
                                    l2617 0BCC                                      l2625 0C32  
                                    l2609 0B84                                      l2705 02CC  
                                    l2721 0580                                      l3329 1B9E  
                                    l3433 1110                                      l3425 10C6  
                                    l3097 1EDC                                      l3089 1EAE  
                                    l3193 0FDA                                      l3185 0FC4  
                                    l3417 0F86                                      l3409 0F28  
                                    l3361 17F8                                      l3353 17B4  
                                    l3521 1728                                      l3273 03A6  
                                    l3265 0340                                      l3507 1496  
                                    l3179 1336                                      l2715 22B4  
                                    l3347 19EA                                      l3339 19AC  
                                    l2539 1550                                      l2643 1DE2  
                                    l2635 1DC0                                      l2571 0A2A  
                                    l2563 09DC                                      l2555 099C  
                                    l2627 0C42                                      l2619 0BFA  
                                    l2651 005A                                      l2723 0592  
                                    l2811 1D6C                                      l2803 1D50  
                                    l3451 1198                                      l3443 112A  
                                    l3435 111C                                      l3427 10CC  
                                    l3099 1EE0                                      l3195 0FE2  
                                    l3187 0FC4                                      l3419 0F92  
                                    l3371 184E                                      l3363 1806  
                                    l3355 17CC                                      l3531 175A  
                                    l3523 1730                                      l3515 1712  
                                    l3291 0448                                      l3283 03E2  
                                    l3267 0370                                      l3259 0306  
                                    l2901 0E80                                      l3461 1A8C  
                                    l3453 22C8                                      l2709 21EE  
                                    l3509 14C4                                      l3349 19FE  
                                    l2637 1DCC                                      l2581 0A94  
                                    l2573 0A32                                      l2565 09FC  
                                    l2557 09AA                                      l2629 0C62  
                                    l2549 2052                                      l2661 00C2  
                                    l2653 007A                                      l2733 0608  
                                    l2725 0596                                      l2717 054E  
                                    l2821 1DA8                                      l2813 1D7A  
                                    l3445 116A                                      l3437 1120  
                                    l3429 10E8                                      l3197 0FF4  
                                    l3189 0FC8                                      l3373 1BCC  
                                    l3365 1818                                      l3357 17DA  
                                    l3525 1738                                      l3517 1718  
                                    l3285 0412                                      l3277 03AC  
                                    l2911 0EB2                                      l2903 0E82  
                                    l3471 1AEE                                      l3463 1A8E  
                                    l3455 22CC                                      l2495 1358  
                                    l2639 1DD8                                      l2591 0ADE  
                                    l2583 0AB4                                      l2575 0A46  
                                    l2567 0A00                                      l2559 09CA  
                                    l2671 00FA                                      l2663 00D4  
                                    l2655 008A                                      l2647 0012  
                                    l2743 06D0                                      l2735 062C  
                                    l2727 05BA                                      l2719 0572  
                                    l3391 1266                                      l3375 11A0  
                                    l2815 1D82                                      l2831 2276  
                                    l3447 1176                                      l3367 1824  
                                    l3359 17EC                                      l3527 174A  
                                    l3519 1720                                      l3535 176A  
                                    l3295 044E                                      l3279 03DC  
                                    l3551 0CAE                                      l3631 1854  
                                    l2905 0E8C                                      l3473 1AF0  
                                    l3465 1AC2                                      l3457 1A8A  
                                    l3481 22F4                                      l2921 229C  
                                    l2497 136A                                      l2593 0AFE  
                                    l2585 0AB6                                      l2577 0A54  
                                    l2569 0A0C                                      l2673 0100  
                                    l2681 01F2                                      l2665 00E2  
                                    l2657 008C                                      l2649 0032  
                                    l2761 0760                                      l2745 06F4  
                                    l2753 0722                                      l2737 0650  
                                    l2729 05EC                                      l3393 1282  
                                    l3385 11BC                                      l3377 11A6  
                                    l2817 1D96                                      l2809 1D66  
                                    l2825 225A                                      l2841 2034  
                                    l2833 2012                                      l3449 117C  
                                    l3369 1838                                      l3529 1752  
                                    l3537 17AC                                      l3297 047E  
                                    l3289 0418                                      l3561 0CDE  
                                    l3553 0CB6                                      l3545 0C84  
                                    l3641 187C                                      l3633 185E  
                                    l2907 0E92                                      l3475 1AF2  
                                    l3467 1AEA                                      l3459 1A8A  
                                    l3491 1964                                      l3483 18F0  
                                    l2771 230E                                      l2923 22A2  
                                    l2915 22FE                                      l2499 137C  
                                    l2587 0AC8                                      l2579 0A66  
                                    l2683 020C                                      l2691 026E  
                                    l2675 0182                                      l2667 00E8  
                                    l2659 00A6                                      l2755 0730  
                                    l2747 0702                                      l2739 0698  
                                    l3387 1254                                      l3379 11B2  
                                    l2819 1D98                                      l2827 225E  
                                    l2843 2042                                      l2835 2016  
                                    l2851 22EA                                      l3395 0EC4  
                                    l3539 17B0                                      l3571 0D40  
                                    l3563 0CF0                                      l3555 0CB8  
                                    l3547 0C96                                      l3651 1890  
                                    l3643 1880                                      l3635 1862  
                                    l2909 0EA2                                      l3477 1AF4  
                                    l3469 1AEC                                      l3493 1968  
                                    l2773 2312                                      l2925 22AA  
                                    l2917 2302                                      l2589 0ACE  
                                    l2597 0B20                                      l2693 0280  
                                    l2685 022A                                      l2677 0188  
                                    l2669 00F0                                      l2749 0716  
                                    l2853 1C2E                                      l3389 1260  
                                    l2933 227C                                      l2829 226E  
                                    l2845 204A                                      l2837 201E  
                                    l2941 15B4                                      l2861 1AFA  
                                    l3397 0EC8                                      l3581 0D8C  
                                    l3573 0D52                                      l3565 0D06  
                                    l3557 0CCA                                      l3549 0C9A  
                                    l3661 18A4                                      l3653 1894  
                                    l3645 1884                                      l3637 1864  
                                    ?_map 001B                                      ?_pad 0011  
                                    l2871 0DB8                                      l3479 1AF6  
                                    l2775 22E0                                      l2767 2306  
                                    l2927 22AC                                      l2919 2298  
                                    l3495 1422                                      l2791 1E54  
                                    l2783 1E08                                      l2599 0B24  
                                    l2695 0290                                      l2687 0244  
                                    l2679 018E                                      l2759 073C  
                                    l2855 1C36                                      l2839 202C  
                                    l2847 204E                                      l2951 1626  
                                    l2943 15B4                                      l2863 1B0A  
                                    l2935 1A10                                      l3399 0ECE  
                                    l3583 0D90                                      l3575 0D62  
                                    l3567 0D18                                      l3559 0CDA  
                                    l3671 18CA                                      l3663 18AA  
                                    l3655 189C                                      l3647 1888  
                                    l3639 1868                                      l2881 0DEC  
                                    l2873 0DBC                                      l3489 18F8  
                                    l2777 22E4                                      l2769 230A  
                                    l2929 22AE                                      l2785 1E30  
                                    l2961 0774                                      l2697 0296  
                                    l2689 025E                                      l2857 1C44  
                                    l2953 1636                                      l2945 15B8  
                                    l2865 1B18                                      l3577 0D66  
                                    l3585 0D98                                      l3569 0D2A  
                                    l3673 18DC                                      l3665 18BC  
                                    l3657 189E                                      l3649 188C  
                                    l2891 0E2E                                      l2883 0DFC  
                                    l2875 0DCA                                      l2779 22E8  
                                    l2795 1CF2                                      l2787 1E40  
                                    l2971 07AA                                      l2963 0780  
                                    l2699 02A8                                      l2859 1C6A  
                                    l2947 15CC                                      l2955 1652  
                                    l2939 15B0                                      l2867 1B28  
                                    l3587 0D9C                                      l3579 0D78  
                                    l3675 18E4                                      l3667 18C0  
                                    l3659 18A0                                      l2893 0E3A  
                                    l2885 0E00                                      l2877 0DDA  
                                    l2797 1CF6                                      l2789 1E50  
                                    l3781 0824                                      l2973 07B2  
                                    l2965 0786                                      l2957 165E  
                                    l2949 15F0                                      l2869 1B32  
                                    l3589 0DB2                                      l3669 18C4  
                                    l2895 0E48                                      l2887 0E10  
                                    l2879 0DDE                                      l2799 1D1A  
                                    l3783 08DC                                      l2991 07FA  
                                    l2983 07C8                                      l2975 07B8  
                                    l2967 0796                                      l2959 1660  
                                    l2897 0E52                                      l2889 0E26  
                                    l3785 0942                                      l2993 0806  
                                    l2985 07CE                                      l2977 07C0  
                                    l2969 07A6                                      l3777 04D0  
                                    l2899 0E70                                      l2987 07DE  
                                    l3779 177E                                      l2997 080E  
                                    l2989 07EE                                      l2999 083A  
                            ?_leer_eeprom 0003                                      STR_1 7FBD  
                                    STR_2 7D3A                                      STR_3 7ECB  
                                    STR_4 7DFF                                      STR_5 7F3C  
                                    STR_6 7C44                                      STR_7 7C0D  
                                    STR_8 7F22                                      STR_9 7F6E  
                                    u2000 0E48                                      u2001 0E44  
                                    u2010 0E70                                      u2011 0E6C  
                                    u2020 0EA2                                      u2100 088A  
                                    u2021 0E9E                                      u2101 0886  
                                    u2110 089A                                      u2030 15CC  
                                    u2111 0896                                      u2031 15C8  
                                    u2200 1356                                      u2120 0928  
                                    u1400 14FA                                      u2040 1626  
                                    u2201 1352                                      u2121 0924  
                                    u1401 14F6                                      u2041 1622  
                                    u2130 0972                                      u2050 0796  
                                    u1410 151C                                      u2210 0FF4  
                                    u2131 096E                                      u2051 0792  
                                    u1411 1518                                      u2211 0FF0  
                                    u2140 0982                                      u2060 07A6  
                                    u1340 136A                                      u1420 1572  
                                    u1500 0A94                                      u2220 104A  
                                    u2300 03DC                                      u2141 097E  
                                    u2061 07A2                                      u1341 1366  
                                    u1421 156E                                      u1501 0A90  
                                    u2221 1046                                      u2301 03D8  
                                    u2070 07DE                                      u1350 137C  
                                    u1430 1582                                      u1510 0ADE  
                                    u2150 1F74                                      u2230 109A  
                                    u2310 0412                                      u2071 07DA  
                                    u1351 1378                                      u1431 157E  
                                    u1511 0ADA                                      u2151 1F70  
                                    u2231 1096                                      u2311 040E  
                                    u2080 07EE                                      u2400 19EA  
                                    u1360 13A4                                      u1520 0B32  
                                    u1440 206C                                      u1600 0044  
                                    u2240 170E                                      u2160 1EFC  
                                    u2320 0448                                      _LATD 000F8C  
                                    u2081 07EA                                      u2401 19E6  
                                    u1361 13A0                                      u1521 0B2E  
                                    u1441 2068                                      u2241 170A  
                                    u2161 1EF8                                      u2321 0444  
                                    u2090 0868                                      u1370 13DA  
                                    u1450 09AA                                      u1530 0B64  
                                    u1610 005A                                      u2410 17EC  
                                    u2170 1FB2                                      u2330 047E  
                                    u2250 2190                                      u2091 0864  
                                    u1371 13D6                                      u1451 09A6  
                                    u1531 0B60                                      u1611 0056  
                                    u2411 17E8                                      u2171 1FAE  
                                    u2331 047A                                      u2251 218A  
                                    u1380 2010                                      u1460 09DC  
                                    u1540 0BA2                                      u1700 026E  
                                    u1620 008A                                      u2420 1818  
                                    u2180 1FC2                                      u2340 04B4  
                                    u2260 2192                                      u2500 0C96  
                                    u1381 200C                                      u1461 09D8  
                                    u1541 0B9E                                      u1701 026A  
                                    u1621 0086                                      u2421 1814  
                                    u2181 1FBE                                      u2341 04B0  
                                    u2501 0C92                                      u1390 212E  
                                    u1550 0BCC                                      u1710 0280  
                                    u1630 00A6                                      u2430 1282  
                                    u2190 20F4                                      u2350 0536  
                                    u2270 0336                                      u2510 0CAE  
                                    u1391 212A                                      u1471 0A06  
                                    u1551 0BC8                                      u1711 027C  
                                    u1631 00A2                                      u2431 127E  
                                    u2191 20F0                                      u2351 0532  
                                    u2271 0332                                      u2511 0CAA  
                                    u1480 0A2A                                      u1560 0BFA  
                                    u1720 0290                                      u1640 00D4  
                                    u1800 0650                                      u2440 0EE0  
                                    u2360 0546                                      u2280 0370  
                                    u2600 0D78                                      u2520 0CCA  
                                    u1481 0A26                                      u1561 0BF6  
                                    u1721 028C                                      u1641 00D0  
                                    u1801 064C                                      u2441 0EDC  
                                    u2361 0542                                      u2281 036C  
                                    u2601 0D74                                      u2521 0CC6  
                                    u1490 0A54                                      u1570 0C42  
                                    u1730 02A8                                      u1650 00E2  
                                    u1810 06F4                                      u2370 1B92  
                                    u2450 0F56                                      u2290 03A6  
                                    u2530 0CF0                                      u1491 0A50  
                                    u1571 0C3E                                      u1731 02A4  
                                    u1651 00DE                                      u1811 06F0  
                                    u2371 1B8E                                      u2451 0F52  
                                    u2291 03A2                                      u2531 0CEC  
                                    u1740 2204                                      u1820 1E30  
                                    u1580 1DC0                                      u1660 020C  
                                    u2380 1BB4                                      u1900 1D96  
                                    u2460 1198                                      u2540 0D06  
                                    u1741 2200                                      u1821 1E2C  
                                    u1581 1DBC                                      u1661 0208  
                                    u2381 1BB0                                      u1901 1D92  
                                    u2461 1194                                      u2541 0D02  
                                    u2470 1984                                      u1750 2212  
                                    u1830 1E40                                      u2390 19BE  
                                    u1670 022A                                      u1590 0042  
                                    u1910 1DA8                                      u2550 0D18  
                                    u2471 1980                                      u1751 220E  
                                    u1831 1E3C                                      u2391 19BA  
                                    u1671 0226                                      u1591 003C  
                                    u1911 1DA4                                      u2551 0D14  
                                    u2480 14E8                                      u1760 22C6  
                                    u1840 1E50                                      u1680 0244  
                                    u1920 202C                                      u2560 0D2A  
                                    u2481 14E4                                      u1761 22C2  
                                    u1841 1E4C                                      u1681 0240  
                                    u1921 2028                                      u2561 0D26  
                                    u1850 1D16                                      u1690 025E  
                                    u1770 0572                                      u1930 2042  
                                    u2490 174A                                      u2570 0D40  
                                    u2650 18BC                                      u1691 025A  
                                    u1771 056E                                      u1931 203E  
                                    u2707 202E                                      u2491 1746  
                                    u2571 0D3C                                      u2651 18B8  
                                    u1860 1D3E                                      u1780 05BA  
                                    u1940 1C86                                      u2580 0D52  
                                    u2660 18DC                                      u1781 05B6  
                                    u1941 1C82                                      u2717 2044  
                                    u2581 0D4E                                      u2661 18D8  
                                    u1870 1D4E                                      u1790 062C  
                                    u1950 1B18                                      u2590 0D62  
                                    u1871 1D4A                                      u1791 0628  
                                    u2727 2264                                      u1951 1B14  
                                    u2591 0D5E                                      u1880 1D66  
                                    u1960 1B52                                      u1857 1D0C  
                                    u1881 1D62                                      u2737 2272  
                                    u1961 1B4E                                      u1970 0DCA  
                                    u1890 1D7A                                      u1971 0DC6  
                                    u1867 1D34                                      u1891 1D76  
                                    u2747 1D68                                      u1980 0DEC  
                                    u1981 0DE8                                      u2757 2162  
                                    u2677 16E4                                      u1990 0E26  
                                    u1991 0E22                                      u2767 20C2  
                                    u2687 1F48                                      u2697 2018  
                                    _TMR0 000FD6                      _minutosTranscurridos 00EC  
                      ??_i2c_reinicia_com 0002                            _check_response 2012  
                 escribeHorariosMemoria@i 000D                             ??_i2c_detener 0002  
                                    abs@a 0013                                      _dbuf 0158  
                                    _ctoa 1DAC                                      _main 1854  
                                    _dtoa 0012                                      _hora 00F2  
                                    _prec 00E4                                      _nout 00E0  
                                    pad@i 0018                                      pad@p 0015  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    indf1 000FE7                                      indf2 000FDF  
                                    fsr1l 000FE1                                      pad@w 001A  
                                    map@x 001B                                      fsr2l 000FD9  
                                    btemp 005F                            ?_sistemaRegado 0001  
                __size_of_asignarHorarios 008A                             ??_i2c_iniciar 0001  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 000E                  ??_restablecerDatosSensor 0005  
                           __CFG_IESO$OFF 000000                          ??_DHT11_ReadData 0001  
                       _constructorSensor 22EA                      __size_of_DHT11_Start 0020  
                            ?_lecturaWifi 0001                   __size_of_setTiempoRegar 00A0  
                            ___param_bank 000000                        ?_constructorSensor 0001  
                      setTiempoRegar@hora 0010                        _leeHorariosMemoria 1422  
                        ??_encenderBombas 0014                                     ??_abs 0015  
                                   ??_map 002F                                     ??_pad 0017  
                          _i2c_envia_dato 22DE                             __CFG_PLLDIV$1 000000  
                          _i2c_inicia_com 2306                           __end_of___aldiv 0EC4  
                         __end_of___aodiv 0B20                                     ?_ctoa 001C  
                                   ?_main 0001                                     ?_dtoa 001C  
                         __end_of___aomod 0C84                             _convertirDato 223A  
                                   STR_10 7C44                                     STR_11 7BC5  
                                   STR_20 7E8B                                     STR_12 7DB5  
                                   STR_21 7E49                                     STR_13 7D8F  
                                   STR_22 7FDD                                     STR_30 7EEA  
                                   STR_14 7C77                                     STR_23 7F39  
                                   STR_15 7E6B                                     STR_31 7D0D  
                                   STR_32 7D0D                                     STR_16 7DDA  
                                   STR_24 7D65                                     STR_33 7EAB  
                                   STR_17 7F07                                     STR_25 7CAA  
                                   STR_34 7EEA                                     STR_26 7FCD  
                                   STR_18 7E24                                     STR_35 7FAC  
                                   STR_27 7F55                                     STR_19 7CDC  
                                   STR_36 7FF6                                     STR_28 7F85  
                                   STR_37 7FEB                                     STR_29 7EAB  
                                   STR_38 7F9A                       ??_constructorSensor 0005  
                       convertirDato@dato 0002                                     _T0CON 000FD5  
                     ?_leeHorariosMemoria 0001                                     i2l199 1CEE  
                                   _RCREG 000FAE                              vfpfcnvrt@fmt 0042  
                                   _SPBRG 000FAF                             __CFG_USBDIV$1 000000  
                                   _TRISD 000F95                                     _TXREG 000FAD  
                           __CFG_PWRT$OFF 000000                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                     ___lmul@multiplicand 0005                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                        __size_of_UART_init 0070  
                      __size_of_UART_read 0054                                     _flags 00E6  
                                   _fputc 1358                                     _fputs 1FCE  
                  __end_of_check_response 2052                               ?_UART_write 0001  
                                   pad@fp 0011                                     _width 00E2  
                                   ctoa@c 001E                                     _putch 231A  
                                   ctoa@w 001F                                     dtoa@d 001E  
                                   dtoa@i 003E                                     dtoa@n 0036  
                                   dtoa@p 0030                                     dtoa@s 0034  
                                   dtoa@w 0032                                     tablat 000FF5  
       __size_of_mostrarDatosSensoresWIFI 00FE                                     ttemp5 0060  
                                   ttemp6 0063                                     ttemp7 0067  
                                   status 000FD8                 ?_mostrarDatosSensoresWIFI 0001  
                                   wtemp8 0060                           __end_of_sprintf 1EAE  
                      escribe_eeprom@dato 0009                 __end_of_constructorSensor 22F4  
                    ??_leeHorariosMemoria 0007                            __CFG_ICPRT$OFF 000000  
                              _i2c_espera 21EE                          ??_dameHoraActual 0005  
                          __CFG_MCLRE$OFF 000000                           __initialization 1EFE  
                     __end_of_i2c_detener 2316           __size_of_lecturaAnalogaSensores 00AC  
                  __end_of_i2c_envia_dato 22EA                              __end_of_ctoa 1E08  
                            __end_of_main 18F0                              __end_of_dtoa 02F6  
                ??_escribeHorariosMemoria 000B                           ??_configurarAdc 0001  
                  __end_of_i2c_inicia_com 230E                        _inicializarObjetos 18F0  
                     __end_of_i2c_iniciar 22DE                    sistemaPrincipal@opcion 005E  
                        _dameHumedadSuelo 1F44                            ?_convertirDato 0001  
                    __size_of_fijaHoraRtc 0068                                    ??_ctoa 001F  
                                  ??_main 005F                                    ??_dtoa 0026  
               setTiempoRegar@tiempoRegar 000F                             __activetblptr 000002  
                     ?_inicializarObjetos 0001                        i2c_envia_dato@dato 0002  
                         __CFG_CCP2MX$OFF 000000                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    ?_fputc 0001  
                                  ?_fputs 000A                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                           ?_check_response 0001  
                  encenderBombas@flagSeco 0016                                    ?_putch 0001  
                      convertirDato@datoR 0003                                    i2l3601 1CC8  
                                  i2l3603 1CCA                                    i2l3605 1CD6  
                                  i2l3607 1CE4                                    i2l3609 1CE8  
                                  i2l3591 1C92                                    i2l3593 1CA0  
                                  i2l3595 1CB2                                    i2l3597 1CB4  
                                  i2l3599 1CC4                           ??_sistemaRegado 0059  
                                  _SSPADD 000FC8                                    _SSPBUF 000FC9  
                    ??_inicializarObjetos 0007           __size_of_restablecerDatosSensor 0050  
                          __CFG_XINST$OFF 000000                          __end_of_getValue 0998  
                            vfprintf@cfmt 0057                  __end_of_sistemaPrincipal 17B4  
                          _escribe_eeprom 213C                                    ___lmul 1AFA  
                         ?_i2c_envia_dato 0001                                 ??___aldiv 0015  
                               ??___aodiv 0011                                 ??___aomod 0011  
                                  ___wmul 2214                         __end_of_UART_init 1AFA  
                       __end_of_UART_read 1E5C                         ??_asignarHorarios 000F  
                        __end_of_leer_rtc 21EE                           ?_i2c_inicia_com 0001  
                        __end_of_estaSeco 1FCE                       __size_of_UART_write 0016  
                            ?_UART_printf 0002                                    clear_0 1F24  
                                  clear_1 1F30                                    _setRtc 20CE  
                                  pad@buf 0013                                    ctoa@fp 001C  
     mostrarDatosSensoresWIFI@temperatura 00DC                                    dtoa@fp 001C  
                                  _strlen 2106                           _i2c_recibe_dato 2298  
                            ?_mostrarMenu 0001                                    fputc@c 0001  
                                  fputs@c 000E                                    fputs@i 000F  
                                  fputs@s 000A                      escribe_rtc@direccion 0004  
                            __mediumconst 7BC4                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                  _lecturaAnalogaSensores 1664              __end_of_mostrarDatosSensores 11A0  
                                  putch@c 0001                          __end_of_vfprintf 1C90  
                               ??_sprintf 0059                                __accesstop 0060  
                 __end_of__initialization 1F36                      __size_of_escribe_rtc 001E  
                         __CFG_PBADEN$OFF 000000                      __size_of_leer_eeprom 003C  
                         __CFG_FOSC$XT_XT 000000                               _i2c_detener 230E  
              __size_of_constructorSensor 000A                             ___rparam_used 000001  
                             _i2c_iniciar 22C8                    __end_of_escribe_eeprom 216C  
                             ?_i2c_espera 0001                            _setTiempoRegar 17B4  
                          __pcstackCOMRAM 0001                              leer_rtc@dato 0004  
                            __pidataBANK0 2316                      __size_of_lecturaWifi 00F0  
         __size_of_escribeHorariosMemoria 00CE                           ??_convertirDato 0001  
                           __end_of_fputc 1422                             __end_of_fputs 2012  
                     estaSeco@temperatura 0013                             __end_of_putch 231C  
                  _restablecerDatosSensor 1EAE                              _datoRecibido 00EF  
                       ?_dameDatosSistema 0001                                   ??_fputc 0005  
                                 ??_fputs 000E                                   ??_putch 0001  
                              __pbssBANK0 00E0                                __pbssBANK1 0100  
                      ??_dameDatosSistema 0059                   __size_of_desbordamiento 1CEA  
                      __size_of_horaRegar 002C                    __end_of_setTiempoRegar 1854  
       constructorSensor@porcientoHumedad 0003                              lecturaWifi@i 00A8  
                         ?_escribe_eeprom 0007             dameTemperaturaHumedad@Humedad 0004  
                      _contInterrupciones 00E8                 __size_of_i2c_reinicia_com 0008  
                                 ?___lmul 0001                                   ?___wmul 0001  
              mostrarDatosSensores@buffer 0074                   __end_of_i2c_recibe_dato 22B2  
                                 _ACKSTAT 007E2E                            ___lmul@product 0009  
                                 ?_setRtc 0001                                   ?_strlen 0001  
         mostrarDatosSensores@temperatura 00A6             dameTemperaturaHumedad@humedad 000E  
                      __size_of_vfpfcnvrt 0226                       __size_of_i2c_espera 0026  
                               ?_getValue 0004                    _escribeHorariosMemoria 128A  
                                 _SSPCON1 000FC6                                   _SSPCON2 000FC5  
                            ??_UART_write 0001                                   _SSPSTAT 000FC7  
                __end_of_dameHumedadSuelo 1F8A                                 ?_leer_rtc 0001  
                               ?_estaSeco 0010                           __CFG_VREGEN$OFF 000000  
                           ??_DHT11_Start 0001                           ?_setTiempoRegar 0001  
                                 __Hparam 0000                                   __Lparam 0000  
       dameTemperaturaHumedad@Temperatura 0006                                   ___aldiv 0DB8  
                                 ___aodiv 0998                                   ___aomod 0B20  
                         __size_of___lmul 006A                      _mostrarDatosSensores 10B2  
                         __size_of___wmul 0026                                 ?_vfprintf 0051  
                         __CFG_STVREN$OFF 000000                                   __pcinit 1EFE  
                                 __ramtop 0800                        __end_of_UART_write 22C8  
                         __size_of_setRtc 0038                                   __ptext0 1854  
                                 __ptext1 0C84                                   __ptext2 216C  
                                 __ptext3 02F6                                   __ptext4 1F8A  
                                 __ptext5 2198                                   __ptext6 21C4  
                                 __ptext7 223A                                   __ptext8 1710  
                                 __ptext9 17B4                   check_response@respuesta 0001  
                       __end_of_horaRegar 2198                                 _T0CONbits 000FD5  
                         __size_of_strlen 0036                      __size_of_UART_printf 005E  
                            __size_of_abs 0040                              __size_of_pad 00C6  
                            __size_of_map 007A                          ??_check_response 0001  
                                 _regando 00EB                          ___aldiv@dividend 000D  
                                 _minutos 00F1                      __size_of_mostrarMenu 0062  
                              ??_getValue 0006                                   _sprintf 1E5C  
                          __pintcode_body 1C90                      end_of_initialization 1F36  
          mostrarDatosSensoresWIFI@buffer 00AA                                ??_leer_rtc 0003  
                              ??_estaSeco 0012                                   fputc@fp 0003  
                         _asignarHorarios 1986                             __Lmediumconst 7BC4  
                                 int_func 1C90                                   fputs@fp 000C  
                        ??_i2c_envia_dato 0002               __size_of_leeHorariosMemoria 00C8  
                        ??_i2c_inicia_com 0002                          _VALOR_TIMER0UART 00FA  
                       __end_of_vfpfcnvrt 0774                  ??_dameTemperaturaHumedad 0008  
                               _RCSTAbits 000FAB                          ___aldiv@quotient 0017  
                   ?_mostrarDatosSensores 0001                       __end_of_DHT11_Start 227A  
                                 postdec1 000FE5                                   postdec2 000FDD  
                       ?_sistemaPrincipal 0001                   _peticionLecturaSensores 00EA  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                             ??_fijaHoraRtc 0012  
                        ?_i2c_recibe_dato 0001                                ??_vfprintf 0057  
                   __end_of_configurarAdc 22FE                        ??_sistemaPrincipal 005C  
                                 strlen@a 0003                                   strlen@s 0001  
                               _UART_init 1A8A                                getValue@Rx 000E  
                               _UART_read 1E08                                 _PORTDbits 000F83  
                 __size_of_DHT11_ReadData 005C                   ?_lecturaAnalogaSensores 0001  
                           setRtc@seteado 0010                 dameHumedadSuelo@canalLeer 0005  
                 lecturaAnalogaSensores@i 0030                                 _TRISBbits 000F93  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                 __size_of_encenderBombas 0258                  _mostrarDatosSensoresWIFI 0EC4  
                       lecturaWifi@buffer 0074                                map@out_max 002B  
                              map@out_min 0027                            _desbordamiento 0008  
                          _esperandoDatos 00F4                            _UART_init$1806 0023  
                            ?_i2c_detener 0001                     __end_of_sistemaRegado 0DB8  
                               _TXSTAbits 000FAC                         dameDatosSistema@i 00A6  
             __size_of_inicializarObjetos 0096                              ?_i2c_iniciar 0001  
                            ??_i2c_espera 0001                         _MODO_COMUNICACION 00F3  
                      DHT11_ReadData@data 0002                          _i2c_reinicia_com 22FE  
                          __end_of___lmul 1B64                               vfpfcnvrt@ap 0044  
                             vfpfcnvrt@fp 0040                               vfpfcnvrt@ll 0048  
                          __end_of___wmul 223A                   ?_restablecerDatosSensor 0001  
          __end_of_lecturaAnalogaSensores 1710                                ?_UART_init 001B  
                              ?_UART_read 0001                   __size_of_dameHoraActual 002C  
                          __end_of_setRtc 2106                       __end_of_fijaHoraRtc 1BCC  
                          __end_of_strlen 213C                       start_initialization 1EFE  
                            _estaSeco$782 0012                               __end_of_abs 2092  
                 __end_of_asignarHorarios 1A10                               __end_of_pad 15B0  
                             __end_of_map 1A8A         escribeHorariosMemoria@contMemoria 000B  
                  __end_of_desbordamiento 1CF2                        __end_of_i2c_espera 2214  
                           ??_escribe_rtc 0004                             ??_leer_eeprom 0005  
                        ??_escribe_eeprom 000A                       leeHorariosMemoria@i 0009  
                    constructorSensor@pin 0004                               _DHT11_Start 225A  
                           ??_lecturaWifi 0059                    ??_mostrarDatosSensores 0059  
                             vfprintf@fmt 0053                 __size_of_dameDatosSistema 00EA  
         __size_of_dameTemperaturaHumedad 00B4                                  ??___lmul 0009  
                                ??___wmul 0005            __end_of_restablecerDatosSensor 1EFE  
                             __pdataBANK0 00F8                          __CFG_LPT1OSC$OFF 000000  
                       leer_rtc@direccion 0003                                  ??_setRtc 000F  
                   __end_of_convertirDato 225A                                  ??_strlen 0003  
                 ?_escribeHorariosMemoria 0001                             __pcstackBANK0 0060  
                        ___aodiv@dividend 0001                           ?_desbordamiento 0001  
                        ??_setTiempoRegar 000F                         __size_of_getValue 0224  
                       ?_dameHumedadSuelo 0001                    getValue@datoIncorrecto 0008  
                       UART_printf@cadena 0002                             lecturaWifi@Rx 00A6  
                      ??_dameHumedadSuelo 0003                         __size_of_leer_rtc 002A  
                       __size_of_estaSeco 0044                       __end_of_escribe_rtc 2298  
                     __end_of_leer_eeprom 20CE                                 _dtoa$1026 002E  
                               __pintcode 0008                             __pmediumconst 7BC4  
                                ?___aldiv 000D                                  ?___aodiv 0001  
                                ?___aomod 0001                          ___aodiv@quotient 0013  
                             _fijaHoraRtc 1B64                       __end_of_lecturaWifi 10B2  
                          _DHT11_ReadData 1D50                                setRtc@dato 0011  
                             ??_UART_init 001F                               ??_UART_read 0001  
                       __size_of_vfprintf 0062               mostrarDatosSensores@humedad 00A7  
          __end_of_escribeHorariosMemoria 1358                            _encenderBombas 02F6  
                               _horaRegar 216C            dameTemperaturaHumedad@checkSum 000A  
                  _dameTemperaturaHumedad 15B0                          ?_asignarHorarios 0001  
                                ?_sprintf 0060                            __size_of_fputc 00CA  
                          __size_of_fputs 0044                            __size_of_putch 0002  
                         ___aldiv@divisor 0011                           ___aldiv@counter 0015  
                          ___wmul@product 0005                                  _LATDbits 000F8C  
                                _PIE1bits 000F9D                      __size_of_i2c_detener 0008  
                                i2u261_40 1CA0                                  i2u261_41 1C9C  
                                i2u262_40 1CB2                                  i2u262_41 1CAE  
                                i2u263_40 1CC4                                  i2u263_41 1CC0  
                                i2u264_40 1CE4                                  i2u264_41 1CE0  
                                _PIR1bits 000F9E                   restablecerDatosSensor@i 0005  
                    __size_of_i2c_iniciar 0016                          __CFG_WDTPS$32768 000000  
                  _tiempoInactividadTrans 00F7             leeHorariosMemoria@contMemoria 0007  
                     asignarHorarios@hora 000F                    __end_of_DHT11_ReadData 1DAC  
                               getValue@i 0009                             ??_UART_printf 0004  
                  dameDatosSistema@buffer 0074                                 _vfpfcnvrt 054E  
                               map@in_max 0023                                 map@in_min 001F  
                              _ADCON0bits 000FC2                            _dameHoraActual 2198  
                       ___wmul@multiplier 0001                ??_mostrarDatosSensoresWIFI 0059  
                  __end_of_encenderBombas 054E                             ??_mostrarMenu 0004  
                          UART_write@dato 0001                                ?_horaRegar 0001  
                   mostrarDatosSensores@i 00A8                 __size_of_sistemaPrincipal 00A4  
                __end_of_i2c_reinicia_com 2306                                vfpfcnvrt@c 0050  
                       ___lmul@multiplier 0001                                 copy_data0 1F12  
                             _escribe_rtc 227A                               _leer_eeprom 2092  
                            _VALOR_TIMER0 00F8                __end_of_leeHorariosMemoria 14EA  
                               estaSeco@s 0010                                  __Hrparam 0000  
                   getValue@numCharacters 0004                              _minutosRegar 00ED  
                             _lecturaWifi 0FC2                             UART_init@BAUD 001B  
                              vfprintf@ap 0055                                  __Lrparam 0000  
                              vfprintf@fp 0051                          _dameDatosSistema 11A0  
dameTemperaturaHumedad@temperaturaDecimal 000D                       _esperaDatoConcluida 00F5  
                        __size_of___aldiv 010C                           ?_DHT11_ReadData 0001  
                        __size_of___aodiv 0188                          __size_of___aomod 0164  
                  __end_of_dameHoraActual 21C4                                ?_vfpfcnvrt 0040  
                         DHT11_ReadData@i 0001                           ___aodiv@divisor 0009  
                         ___aodiv@counter 0011                           ?_encenderBombas 0001  
                              sprintf@fmt 0062                  __size_of_i2c_recibe_dato 001A  
                     __end_of_UART_printf 1D50                                  __ptext10 1BCC  
                                __ptext11 0EC4                                  __ptext20 15B0  
                                __ptext12 0FC2                                  __ptext21 2012  
                                __ptext13 1EAE                                  __ptext30 054E  
                                __ptext22 225A                                  __ptext14 22EA  
                                __ptext31 0012                                  __ptext23 1D50  
                                __ptext15 10B2                                  __ptext40 231A  
                                __ptext32 2052                                  __ptext24 1B64  
                                __ptext16 1664                                  __ptext41 1986  
                                __ptext33 0B20                                  __ptext25 20CE  
                                __ptext17 1A10                                  __ptext50 22FE  
                                __ptext42 0774                                  __ptext34 0998  
                                __ptext26 227A                                  __ptext18 1AFA  
                                __ptext51 2298                                  __ptext43 1E08  
                                __ptext35 1DAC                                  __ptext27 11A0  
                                __ptext19 1F44                                  __ptext60 1A8A  
                                __ptext52 2306                                  __ptext44 1CF2  
                                __ptext36 14EA                                  __ptext28 1E5C  
                                __ptext61 0DB8                                  __ptext53 22DE  
                                __ptext45 22B2                                  __ptext37 2106  
                                __ptext29 1C2E                                  __ptext54 230E  
                                __ptext46 128A                                  __ptext38 1FCE  
                                __ptext55 21EE                                  __ptext47 213C  
                                __ptext39 1358                                  __ptext56 18F0  
                                __ptext48 1422                                  __ptext57 2214  
                                __ptext49 2092                                  __ptext58 22C8  
                                __ptext59 22F4                                  _getValue 0774  
                     __end_of_mostrarMenu 1C2E                          __size_of_sprintf 0052  
                                _leer_rtc 21C4                                  _estaSeco 1F8A  
              __end_of_inicializarObjetos 1986                                  _byteUart 00F6  
                  __size_of_configurarAdc 000A                  lecturaWifi@humedadMedida 00A7  
                 __size_of_check_response 0040                       inicializarObjetos@i 0007  
                           __size_of_ctoa 005C                             __size_of_main 009C  
                           __size_of_dtoa 02E4                                  _horarios 0100  
                            ?_DHT11_Start 0001      dameTemperaturaHumedad@humedadDecimal 000C  
                                _segundos 00F0                           encenderBombas@i 0017  
                                _sensores 0148                 mostrarDatosSensoresWIFI@i 00DE  
                                int$flags 005F                                  _vfprintf 1C2E  
                         ?_dameHoraActual 0001                   __size_of_i2c_envia_dato 000C  
                           getValue@i_951 000B                   __size_of_i2c_inicia_com 0008  
                i2c_recibe_dato@datoleido 0002                          ___aomod@dividend 0001  
                   __CFG_CPUDIV$OSC1_PLL2 000000                          ??_desbordamiento 0001  
                  __size_of_sistemaRegado 0134                                _INTCONbits 000FF2  
                      constructorSensor@s 0001                               ??_horaRegar 0003  
         mostrarDatosSensoresWIFI@humedad 00DD                   escribe_eeprom@direccion 0007  
                                intlevel2 0000                                 sprintf@ap 006C  
                         escribe_rtc@dato 0003                           setRtc@direccion 000F  
                       asignarHorarios@Rx 0010             __size_of_mostrarDatosSensores 00EE  
                           _overflowTimer 00EE                              ?_fijaHoraRtc 0001  
       dameTemperaturaHumedad@temperatura 000F                           ___aomod@divisor 0009  
                            getValue@dato 000D                 __size_of_dameHumedadSuelo 0046  
                             ??_vfpfcnvrt 0046                           ___aomod@counter 0011  
                             _UART_printf 1CF2                             _configurarAdc 22F4  
        __end_of_mostrarDatosSensoresWIFI 0FC2                                  sprintf@f 006E  
                                sprintf@s 0060                   ?_dameTemperaturaHumedad 0004  
                             _mostrarMenu 1BCC                              ___aldiv@sign 0016  
                        _sistemaPrincipal 1710                           leer_eeprom@dato 0006  
                             _SSPCON2bits 000FC5                                _UART_write 22B2  
                            ___aodiv@sign 0012                         ??_i2c_recibe_dato 0002  
                  __size_of_convertirDato 0020                      leer_eeprom@direccion 0003  
                           _sistemaRegado 0C84                              ___aomod@sign 0012  
                ??_lecturaAnalogaSensores 002F  
