

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jun 18 21:06:13 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    87                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    88                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    89                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    90  0000                     
    91                           ; Version 2.10
    92                           ; Generated 31/07/2019 GMT
    93                           ; 
    94                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC18F4550 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125  0000                     
   126                           	psect	idataBANK0
   127  00328E                     __pidataBANK0:
   128                           	opt callstack 0
   129                           
   130                           ;initializer for stoa@F1144
   131  00328E  28                 	db	40
   132  00328F  6E                 	db	110
   133  003290  75                 	db	117
   134  003291  6C                 	db	108
   135  003292  6C                 	db	108
   136  003293  29                 	db	41
   137  003294  00                 	db	0
   138                           
   139                           ;initializer for _VALOR_TIMER0
   140  003295  6769               	dw	26473
   141                           
   142                           ;initializer for _VALOR_TIMER0UART
   143  003297  6769               	dw	26473
   144  0000                     _TMR0	set	4054
   145  0000                     _TRISD	set	3989
   146  0000                     _T0CON	set	4053
   147  0000                     _T0CONbits	set	4053
   148  0000                     _LATD	set	3980
   149  0000                     _PIE1bits	set	3997
   150  0000                     _ADRESL	set	4035
   151  0000                     _ADRESH	set	4036
   152  0000                     _ADCON0bits	set	4034
   153  0000                     _ADCON2	set	4032
   154  0000                     _ADCON1	set	4033
   155  0000                     _INTCONbits	set	4082
   156  0000                     _LATDbits	set	3980
   157  0000                     _TRISDbits	set	3989
   158  0000                     _PORTDbits	set	3971
   159  0000                     _TXREG	set	4013
   160  0000                     _RCREG	set	4014
   161  0000                     _PIR1bits	set	3998
   162  0000                     _RCSTAbits	set	4011
   163  0000                     _TXSTAbits	set	4012
   164  0000                     _SPBRG	set	4015
   165  0000                     _TRISCbits	set	3988
   166  0000                     _SSPBUF	set	4041
   167  0000                     _SSPCON2bits	set	4037
   168  0000                     _SSPADD	set	4040
   169  0000                     _SSPCON2	set	4037
   170  0000                     _SSPCON1	set	4038
   171  0000                     _SSPSTAT	set	4039
   172  0000                     _TRISBbits	set	3987
   173  0000                     _ACKSTAT	set	32302
   174                           
   175                           	psect	mediumconst
   176  00793C                     __pmediumconst:
   177                           	opt callstack 0
   178  00793C  00                 	db	0
   179  00793D                     STR_16:
   180  00793D  0D                 	db	13
   181  00793E  0A                 	db	10
   182  00793F  20                 	db	32
   183  007940  49                 	db	73	;'I'
   184  007941  6E                 	db	110	;'n'
   185  007942  67                 	db	103	;'g'
   186  007943  72                 	db	114	;'r'
   187  007944  65                 	db	101	;'e'
   188  007945  73                 	db	115	;'s'
   189  007946  65                 	db	101	;'e'
   190  007947  20                 	db	32
   191  007948  6C                 	db	108	;'l'
   192  007949  6F                 	db	111	;'o'
   193  00794A  73                 	db	115	;'s'
   194  00794B  20                 	db	32
   195  00794C  6D                 	db	109	;'m'
   196  00794D  69                 	db	105	;'i'
   197  00794E  6E                 	db	110	;'n'
   198  00794F  75                 	db	117	;'u'
   199  007950  74                 	db	116	;'t'
   200  007951  6F                 	db	111	;'o'
   201  007952  73                 	db	115	;'s'
   202  007953  20                 	db	32
   203  007954  71                 	db	113	;'q'
   204  007955  75                 	db	117	;'u'
   205  007956  65                 	db	101	;'e'
   206  007957  20                 	db	32
   207  007958  64                 	db	100	;'d'
   208  007959  65                 	db	101	;'e'
   209  00795A  73                 	db	115	;'s'
   210  00795B  65                 	db	101	;'e'
   211  00795C  65                 	db	101	;'e'
   212  00795D  20                 	db	32
   213  00795E  71                 	db	113	;'q'
   214  00795F  75                 	db	117	;'u'
   215  007960  65                 	db	101	;'e'
   216  007961  20                 	db	32
   217  007962  73                 	db	115	;'s'
   218  007963  65                 	db	101	;'e'
   219  007964  20                 	db	32
   220  007965  72                 	db	114	;'r'
   221  007966  69                 	db	105	;'i'
   222  007967  65                 	db	101	;'e'
   223  007968  67                 	db	103	;'g'
   224  007969  75                 	db	117	;'u'
   225  00796A  65                 	db	101	;'e'
   226  00796B  20                 	db	32
   227  00796C  65                 	db	101	;'e'
   228  00796D  6E                 	db	110	;'n'
   229  00796E  20                 	db	32
   230  00796F  65                 	db	101	;'e'
   231  007970  73                 	db	115	;'s'
   232  007971  65                 	db	101	;'e'
   233  007972  20                 	db	32
   234  007973  68                 	db	104	;'h'
   235  007974  6F                 	db	111	;'o'
   236  007975  72                 	db	114	;'r'
   237  007976  61                 	db	97	;'a'
   238  007977  72                 	db	114	;'r'
   239  007978  69                 	db	105	;'i'
   240  007979  6F                 	db	111	;'o'
   241  00797A  20                 	db	32
   242  00797B  65                 	db	101	;'e'
   243  00797C  6A                 	db	106	;'j'
   244  00797D  3A                 	db	58	;':'
   245  00797E  20                 	db	32
   246  00797F  31                 	db	49	;'1'
   247  007980  35                 	db	53	;'5'
   248  007981  20                 	db	32
   249  007982  0D                 	db	13
   250  007983  0A                 	db	10
   251  007984  00                 	db	0
   252  007985                     STR_1:
   253  007985  0D                 	db	13
   254  007986  0A                 	db	10
   255  007987  20                 	db	32
   256  007988  45                 	db	69	;'E'
   257  007989  6E                 	db	110	;'n'
   258  00798A  76                 	db	118	;'v'
   259  00798B  69                 	db	105	;'i'
   260  00798C  65                 	db	101	;'e'
   261  00798D  20                 	db	32
   262  00798E  65                 	db	101	;'e'
   263  00798F  6C                 	db	108	;'l'
   264  007990  20                 	db	32
   265  007991  64                 	db	100	;'d'
   266  007992  69                 	db	105	;'i'
   267  007993  61                 	db	97	;'a'
   268  007994  20                 	db	32
   269  007995  64                 	db	100	;'d'
   270  007996  65                 	db	101	;'e'
   271  007997  20                 	db	32
   272  007998  6C                 	db	108	;'l'
   273  007999  61                 	db	97	;'a'
   274  00799A  20                 	db	32
   275  00799B  73                 	db	115	;'s'
   276  00799C  65                 	db	101	;'e'
   277  00799D  6D                 	db	109	;'m'
   278  00799E  61                 	db	97	;'a'
   279  00799F  6E                 	db	110	;'n'
   280  0079A0  61                 	db	97	;'a'
   281  0079A1  20                 	db	32
   282  0079A2  45                 	db	69	;'E'
   283  0079A3  6A                 	db	106	;'j'
   284  0079A4  3A                 	db	58	;':'
   285  0079A5  20                 	db	32
   286  0079A6  30                 	db	48	;'0'
   287  0079A7  31                 	db	49	;'1'
   288  0079A8  20                 	db	32
   289  0079A9  3D                 	db	61	;'='
   290  0079AA  20                 	db	32
   291  0079AB  44                 	db	68	;'D'
   292  0079AC  4F                 	db	79	;'O'
   293  0079AD  4D                 	db	77	;'M'
   294  0079AE  49                 	db	73	;'I'
   295  0079AF  4E                 	db	78	;'N'
   296  0079B0  47                 	db	71	;'G'
   297  0079B1  4F                 	db	79	;'O'
   298  0079B2  20                 	db	32
   299  0079B3  2E                 	db	46
   300  0079B4  2E                 	db	46
   301  0079B5  2E                 	db	46
   302  0079B6  20                 	db	32
   303  0079B7  30                 	db	48	;'0'
   304  0079B8  37                 	db	55	;'7'
   305  0079B9  20                 	db	32
   306  0079BA  3D                 	db	61	;'='
   307  0079BB  20                 	db	32
   308  0079BC  53                 	db	83	;'S'
   309  0079BD  41                 	db	65	;'A'
   310  0079BE  42                 	db	66	;'B'
   311  0079BF  41                 	db	65	;'A'
   312  0079C0  44                 	db	68	;'D'
   313  0079C1  4F                 	db	79	;'O'
   314  0079C2  20                 	db	32
   315  0079C3  0D                 	db	13
   316  0079C4  0A                 	db	10
   317  0079C5  00                 	db	0
   318  0079C6                     STR_32:
   319  0079C6  0D                 	db	13
   320  0079C7  0A                 	db	10
   321  0079C8  0A                 	db	10
   322  0079C9  48                 	db	72	;'H'
   323  0079CA  6F                 	db	111	;'o'
   324  0079CB  72                 	db	114	;'r'
   325  0079CC  61                 	db	97	;'a'
   326  0079CD  20                 	db	32
   327  0079CE  7C                 	db	124
   328  0079CF  20                 	db	32
   329  0079D0  52                 	db	82	;'R'
   330  0079D1  65                 	db	101	;'e'
   331  0079D2  67                 	db	103	;'g'
   332  0079D3  61                 	db	97	;'a'
   333  0079D4  72                 	db	114	;'r'
   334  0079D5  28                 	db	40
   335  0079D6  31                 	db	49	;'1'
   336  0079D7  20                 	db	32
   337  0079D8  73                 	db	115	;'s'
   338  0079D9  69                 	db	105	;'i'
   339  0079DA  20                 	db	32
   340  0079DB  30                 	db	48	;'0'
   341  0079DC  20                 	db	32
   342  0079DD  6E                 	db	110	;'n'
   343  0079DE  6F                 	db	111	;'o'
   344  0079DF  29                 	db	41
   345  0079E0  20                 	db	32
   346  0079E1  7C                 	db	124
   347  0079E2  20                 	db	32
   348  0079E3  4D                 	db	77	;'M'
   349  0079E4  69                 	db	105	;'i'
   350  0079E5  6E                 	db	110	;'n'
   351  0079E6  75                 	db	117	;'u'
   352  0079E7  74                 	db	116	;'t'
   353  0079E8  6F                 	db	111	;'o'
   354  0079E9  73                 	db	115	;'s'
   355  0079EA  20                 	db	32
   356  0079EB  64                 	db	100	;'d'
   357  0079EC  65                 	db	101	;'e'
   358  0079ED  20                 	db	32
   359  0079EE  72                 	db	114	;'r'
   360  0079EF  69                 	db	105	;'i'
   361  0079F0  65                 	db	101	;'e'
   362  0079F1  67                 	db	103	;'g'
   363  0079F2  6F                 	db	111	;'o'
   364  0079F3  20                 	db	32
   365  0079F4  7C                 	db	124
   366  0079F5  20                 	db	32
   367  0079F6  44                 	db	68	;'D'
   368  0079F7  49                 	db	73	;'I'
   369  0079F8  41                 	db	65	;'A'
   370  0079F9  53                 	db	83	;'S'
   371  0079FA  20                 	db	32
   372  0079FB  52                 	db	82	;'R'
   373  0079FC  45                 	db	69	;'E'
   374  0079FD  47                 	db	71	;'G'
   375  0079FE  41                 	db	65	;'A'
   376  0079FF  52                 	db	82	;'R'
   377  007A00  0D                 	db	13
   378  007A01  0A                 	db	10
   379  007A02  0A                 	db	10
   380  007A03  00                 	db	0
   381  007A04                     STR_9:
   382  007A04  0D                 	db	13
   383  007A05  0A                 	db	10
   384  007A06  20                 	db	32
   385  007A07  49                 	db	73	;'I'
   386  007A08  6E                 	db	110	;'n'
   387  007A09  67                 	db	103	;'g'
   388  007A0A  72                 	db	114	;'r'
   389  007A0B  65                 	db	101	;'e'
   390  007A0C  73                 	db	115	;'s'
   391  007A0D  65                 	db	101	;'e'
   392  007A0E  20                 	db	32
   393  007A0F  31                 	db	49	;'1'
   394  007A10  20                 	db	32
   395  007A11  70                 	db	112	;'p'
   396  007A12  61                 	db	97	;'a'
   397  007A13  72                 	db	114	;'r'
   398  007A14  61                 	db	97	;'a'
   399  007A15  20                 	db	32
   400  007A16  61                 	db	97	;'a'
   401  007A17  63                 	db	99	;'c'
   402  007A18  74                 	db	116	;'t'
   403  007A19  69                 	db	105	;'i'
   404  007A1A  76                 	db	118	;'v'
   405  007A1B  61                 	db	97	;'a'
   406  007A1C  72                 	db	114	;'r'
   407  007A1D  20                 	db	32
   408  007A1E  7C                 	db	124
   409  007A1F  7C                 	db	124
   410  007A20  20                 	db	32
   411  007A21  69                 	db	105	;'i'
   412  007A22  6E                 	db	110	;'n'
   413  007A23  67                 	db	103	;'g'
   414  007A24  72                 	db	114	;'r'
   415  007A25  65                 	db	101	;'e'
   416  007A26  73                 	db	115	;'s'
   417  007A27  65                 	db	101	;'e'
   418  007A28  20                 	db	32
   419  007A29  30                 	db	48	;'0'
   420  007A2A  20                 	db	32
   421  007A2B  70                 	db	112	;'p'
   422  007A2C  61                 	db	97	;'a'
   423  007A2D  72                 	db	114	;'r'
   424  007A2E  61                 	db	97	;'a'
   425  007A2F  20                 	db	32
   426  007A30  64                 	db	100	;'d'
   427  007A31  65                 	db	101	;'e'
   428  007A32  73                 	db	115	;'s'
   429  007A33  61                 	db	97	;'a'
   430  007A34  63                 	db	99	;'c'
   431  007A35  74                 	db	116	;'t'
   432  007A36  69                 	db	105	;'i'
   433  007A37  76                 	db	118	;'v'
   434  007A38  61                 	db	97	;'a'
   435  007A39  72                 	db	114	;'r'
   436  007A3A  3A                 	db	58	;':'
   437  007A3B  20                 	db	32
   438  007A3C  0D                 	db	13
   439  007A3D  0A                 	db	10
   440  007A3E  00                 	db	0
   441  007A3F                     STR_56:
   442  007A3F  0D                 	db	13
   443  007A40  0A                 	db	10
   444  007A41  20                 	db	32
   445  007A42  59                 	db	89	;'Y'
   446  007A43  61                 	db	97	;'a'
   447  007A44  20                 	db	32
   448  007A45  73                 	db	115	;'s'
   449  007A46  65                 	db	101	;'e'
   450  007A47  20                 	db	32
   451  007A48  65                 	db	101	;'e'
   452  007A49  73                 	db	115	;'s'
   453  007A4A  74                 	db	116	;'t'
   454  007A4B  61                 	db	97	;'a'
   455  007A4C  20                 	db	32
   456  007A4D  65                 	db	101	;'e'
   457  007A4E  66                 	db	102	;'f'
   458  007A4F  65                 	db	101	;'e'
   459  007A50  63                 	db	99	;'c'
   460  007A51  74                 	db	116	;'t'
   461  007A52  75                 	db	117	;'u'
   462  007A53  61                 	db	97	;'a'
   463  007A54  6E                 	db	110	;'n'
   464  007A55  64                 	db	100	;'d'
   465  007A56  6F                 	db	111	;'o'
   466  007A57  20                 	db	32
   467  007A58  75                 	db	117	;'u'
   468  007A59  6E                 	db	110	;'n'
   469  007A5A  20                 	db	32
   470  007A5B  72                 	db	114	;'r'
   471  007A5C  69                 	db	105	;'i'
   472  007A5D  65                 	db	101	;'e'
   473  007A5E  67                 	db	103	;'g'
   474  007A5F  6F                 	db	111	;'o'
   475  007A60  2C                 	db	44
   476  007A61  20                 	db	32
   477  007A62  69                 	db	105	;'i'
   478  007A63  6E                 	db	110	;'n'
   479  007A64  74                 	db	116	;'t'
   480  007A65  65                 	db	101	;'e'
   481  007A66  6E                 	db	110	;'n'
   482  007A67  74                 	db	116	;'t'
   483  007A68  65                 	db	101	;'e'
   484  007A69  6C                 	db	108	;'l'
   485  007A6A  6F                 	db	111	;'o'
   486  007A6B  20                 	db	32
   487  007A6C  6D                 	db	109	;'m'
   488  007A6D  61                 	db	97	;'a'
   489  007A6E  73                 	db	115	;'s'
   490  007A6F  20                 	db	32
   491  007A70  74                 	db	116	;'t'
   492  007A71  61                 	db	97	;'a'
   493  007A72  72                 	db	114	;'r'
   494  007A73  64                 	db	100	;'d'
   495  007A74  65                 	db	101	;'e'
   496  007A75  20                 	db	32
   497  007A76  0D                 	db	13
   498  007A77  0A                 	db	10
   499  007A78  00                 	db	0
   500  007A79                     STR_55:
   501  007A79  0D                 	db	13
   502  007A7A  0A                 	db	10
   503  007A7B  20                 	db	32
   504  007A7C  49                 	db	73	;'I'
   505  007A7D  6E                 	db	110	;'n'
   506  007A7E  67                 	db	103	;'g'
   507  007A7F  72                 	db	114	;'r'
   508  007A80  65                 	db	101	;'e'
   509  007A81  73                 	db	115	;'s'
   510  007A82  65                 	db	101	;'e'
   511  007A83  20                 	db	32
   512  007A84  65                 	db	101	;'e'
   513  007A85  6C                 	db	108	;'l'
   514  007A86  20                 	db	32
   515  007A87  6E                 	db	110	;'n'
   516  007A88  75                 	db	117	;'u'
   517  007A89  6D                 	db	109	;'m'
   518  007A8A  65                 	db	101	;'e'
   519  007A8B  72                 	db	114	;'r'
   520  007A8C  6F                 	db	111	;'o'
   521  007A8D  20                 	db	32
   522  007A8E  64                 	db	100	;'d'
   523  007A8F  65                 	db	101	;'e'
   524  007A90  20                 	db	32
   525  007A91  73                 	db	115	;'s'
   526  007A92  65                 	db	101	;'e'
   527  007A93  6E                 	db	110	;'n'
   528  007A94  73                 	db	115	;'s'
   529  007A95  6F                 	db	111	;'o'
   530  007A96  72                 	db	114	;'r'
   531  007A97  20                 	db	32
   532  007A98  64                 	db	100	;'d'
   533  007A99  65                 	db	101	;'e'
   534  007A9A  6C                 	db	108	;'l'
   535  007A9B  20                 	db	32
   536  007A9C  61                 	db	97	;'a'
   537  007A9D  72                 	db	114	;'r'
   538  007A9E  65                 	db	101	;'e'
   539  007A9F  61                 	db	97	;'a'
   540  007AA0  20                 	db	32
   541  007AA1  61                 	db	97	;'a'
   542  007AA2  20                 	db	32
   543  007AA3  72                 	db	114	;'r'
   544  007AA4  65                 	db	101	;'e'
   545  007AA5  67                 	db	103	;'g'
   546  007AA6  61                 	db	97	;'a'
   547  007AA7  72                 	db	114	;'r'
   548  007AA8  20                 	db	32
   549  007AA9  65                 	db	101	;'e'
   550  007AAA  6A                 	db	106	;'j'
   551  007AAB  3A                 	db	58	;':'
   552  007AAC  20                 	db	32
   553  007AAD  35                 	db	53	;'5'
   554  007AAE  20                 	db	32
   555  007AAF  0D                 	db	13
   556  007AB0  0A                 	db	10
   557  007AB1  00                 	db	0
   558  007AB2                     STR_54:
   559  007AB2  0D                 	db	13
   560  007AB3  0A                 	db	10
   561  007AB4  20                 	db	32
   562  007AB5  49                 	db	73	;'I'
   563  007AB6  6E                 	db	110	;'n'
   564  007AB7  67                 	db	103	;'g'
   565  007AB8  72                 	db	114	;'r'
   566  007AB9  65                 	db	101	;'e'
   567  007ABA  73                 	db	115	;'s'
   568  007ABB  65                 	db	101	;'e'
   569  007ABC  20                 	db	32
   570  007ABD  6C                 	db	108	;'l'
   571  007ABE  6F                 	db	111	;'o'
   572  007ABF  73                 	db	115	;'s'
   573  007AC0  20                 	db	32
   574  007AC1  6D                 	db	109	;'m'
   575  007AC2  69                 	db	105	;'i'
   576  007AC3  6E                 	db	110	;'n'
   577  007AC4  75                 	db	117	;'u'
   578  007AC5  74                 	db	116	;'t'
   579  007AC6  6F                 	db	111	;'o'
   580  007AC7  73                 	db	115	;'s'
   581  007AC8  20                 	db	32
   582  007AC9  71                 	db	113	;'q'
   583  007ACA  75                 	db	117	;'u'
   584  007ACB  65                 	db	101	;'e'
   585  007ACC  20                 	db	32
   586  007ACD  64                 	db	100	;'d'
   587  007ACE  65                 	db	101	;'e'
   588  007ACF  73                 	db	115	;'s'
   589  007AD0  65                 	db	101	;'e'
   590  007AD1  65                 	db	101	;'e'
   591  007AD2  20                 	db	32
   592  007AD3  71                 	db	113	;'q'
   593  007AD4  75                 	db	117	;'u'
   594  007AD5  65                 	db	101	;'e'
   595  007AD6  20                 	db	32
   596  007AD7  73                 	db	115	;'s'
   597  007AD8  65                 	db	101	;'e'
   598  007AD9  20                 	db	32
   599  007ADA  72                 	db	114	;'r'
   600  007ADB  69                 	db	105	;'i'
   601  007ADC  65                 	db	101	;'e'
   602  007ADD  67                 	db	103	;'g'
   603  007ADE  75                 	db	117	;'u'
   604  007ADF  65                 	db	101	;'e'
   605  007AE0  20                 	db	32
   606  007AE1  65                 	db	101	;'e'
   607  007AE2  6A                 	db	106	;'j'
   608  007AE3  3A                 	db	58	;':'
   609  007AE4  20                 	db	32
   610  007AE5  31                 	db	49	;'1'
   611  007AE6  35                 	db	53	;'5'
   612  007AE7  20                 	db	32
   613  007AE8  0D                 	db	13
   614  007AE9  0A                 	db	10
   615  007AEA  00                 	db	0
   616  007AEB                     STR_33:
   617  007AEB  20                 	db	32
   618  007AEC  20                 	db	32
   619  007AED  20                 	db	32
   620  007AEE  20                 	db	32
   621  007AEF  20                 	db	32
   622  007AF0  20                 	db	32
   623  007AF1  20                 	db	32
   624  007AF2  20                 	db	32
   625  007AF3  20                 	db	32
   626  007AF4  20                 	db	32
   627  007AF5  20                 	db	32
   628  007AF6  20                 	db	32
   629  007AF7  20                 	db	32
   630  007AF8  20                 	db	32
   631  007AF9  20                 	db	32
   632  007AFA  20                 	db	32
   633  007AFB  20                 	db	32
   634  007AFC  20                 	db	32
   635  007AFD  20                 	db	32
   636  007AFE  20                 	db	32
   637  007AFF  20                 	db	32
   638  007B00  20                 	db	32
   639  007B01  20                 	db	32
   640  007B02  20                 	db	32
   641  007B03  20                 	db	32
   642  007B04  20                 	db	32
   643  007B05  20                 	db	32
   644  007B06  20                 	db	32
   645  007B07  20                 	db	32
   646  007B08  20                 	db	32
   647  007B09  20                 	db	32
   648  007B0A  20                 	db	32
   649  007B0B  20                 	db	32
   650  007B0C  20                 	db	32
   651  007B0D  20                 	db	32
   652  007B0E  20                 	db	32
   653  007B0F  20                 	db	32
   654  007B10  20                 	db	32
   655  007B11  20                 	db	32
   656  007B12  20                 	db	32
   657  007B13  20                 	db	32
   658  007B14  20                 	db	32
   659  007B15  20                 	db	32
   660  007B16  20                 	db	32
   661  007B17  20                 	db	32
   662  007B18  44                 	db	68	;'D'
   663  007B19  4C                 	db	76	;'L'
   664  007B1A  4D                 	db	77	;'M'
   665  007B1B  49                 	db	73	;'I'
   666  007B1C  4A                 	db	74	;'J'
   667  007B1D  56                 	db	86	;'V'
   668  007B1E  53                 	db	83	;'S'
   669  007B1F  0D                 	db	13
   670  007B20  0A                 	db	10
   671  007B21  00                 	db	0
   672  007B22                     STR_34:
   673  007B22  20                 	db	32
   674  007B23  25                 	db	37
   675  007B24  32                 	db	50	;'2'
   676  007B25  64                 	db	100	;'d'
   677  007B26  20                 	db	32
   678  007B27  20                 	db	32
   679  007B28  7C                 	db	124
   680  007B29  20                 	db	32
   681  007B2A  20                 	db	32
   682  007B2B  20                 	db	32
   683  007B2C  20                 	db	32
   684  007B2D  20                 	db	32
   685  007B2E  20                 	db	32
   686  007B2F  20                 	db	32
   687  007B30  20                 	db	32
   688  007B31  20                 	db	32
   689  007B32  20                 	db	32
   690  007B33  25                 	db	37
   691  007B34  64                 	db	100	;'d'
   692  007B35  20                 	db	32
   693  007B36  20                 	db	32
   694  007B37  20                 	db	32
   695  007B38  20                 	db	32
   696  007B39  20                 	db	32
   697  007B3A  20                 	db	32
   698  007B3B  20                 	db	32
   699  007B3C  7C                 	db	124
   700  007B3D  20                 	db	32
   701  007B3E  20                 	db	32
   702  007B3F  20                 	db	32
   703  007B40  20                 	db	32
   704  007B41  20                 	db	32
   705  007B42  20                 	db	32
   706  007B43  20                 	db	32
   707  007B44  20                 	db	32
   708  007B45  20                 	db	32
   709  007B46  25                 	db	37
   710  007B47  32                 	db	50	;'2'
   711  007B48  64                 	db	100	;'d'
   712  007B49  20                 	db	32
   713  007B4A  20                 	db	32
   714  007B4B  20                 	db	32
   715  007B4C  20                 	db	32
   716  007B4D  20                 	db	32
   717  007B4E  20                 	db	32
   718  007B4F  20                 	db	32
   719  007B50  7C                 	db	124
   720  007B51  20                 	db	32
   721  007B52  25                 	db	37
   722  007B53  73                 	db	115	;'s'
   723  007B54  0D                 	db	13
   724  007B55  0A                 	db	10
   725  007B56  00                 	db	0
   726  007B57                     STR_8:
   727  007B57  0D                 	db	13
   728  007B58  0A                 	db	10
   729  007B59  20                 	db	32
   730  007B5A  49                 	db	73	;'I'
   731  007B5B  6E                 	db	110	;'n'
   732  007B5C  67                 	db	103	;'g'
   733  007B5D  72                 	db	114	;'r'
   734  007B5E  65                 	db	101	;'e'
   735  007B5F  73                 	db	115	;'s'
   736  007B60  65                 	db	101	;'e'
   737  007B61  20                 	db	32
   738  007B62  75                 	db	117	;'u'
   739  007B63  6E                 	db	110	;'n'
   740  007B64  61                 	db	97	;'a'
   741  007B65  20                 	db	32
   742  007B66  68                 	db	104	;'h'
   743  007B67  6F                 	db	111	;'o'
   744  007B68  72                 	db	114	;'r'
   745  007B69  61                 	db	97	;'a'
   746  007B6A  20                 	db	32
   747  007B6B  65                 	db	101	;'e'
   748  007B6C  6E                 	db	110	;'n'
   749  007B6D  20                 	db	32
   750  007B6E  66                 	db	102	;'f'
   751  007B6F  6F                 	db	111	;'o'
   752  007B70  72                 	db	114	;'r'
   753  007B71  6D                 	db	109	;'m'
   754  007B72  61                 	db	97	;'a'
   755  007B73  74                 	db	116	;'t'
   756  007B74  6F                 	db	111	;'o'
   757  007B75  20                 	db	32
   758  007B76  64                 	db	100	;'d'
   759  007B77  65                 	db	101	;'e'
   760  007B78  20                 	db	32
   761  007B79  32                 	db	50	;'2'
   762  007B7A  34                 	db	52	;'4'
   763  007B7B  20                 	db	32
   764  007B7C  68                 	db	104	;'h'
   765  007B7D  72                 	db	114	;'r'
   766  007B7E  73                 	db	115	;'s'
   767  007B7F  20                 	db	32
   768  007B80  65                 	db	101	;'e'
   769  007B81  6A                 	db	106	;'j'
   770  007B82  3A                 	db	58	;':'
   771  007B83  20                 	db	32
   772  007B84  31                 	db	49	;'1'
   773  007B85  35                 	db	53	;'5'
   774  007B86  20                 	db	32
   775  007B87  0D                 	db	13
   776  007B88  0A                 	db	10
   777  007B89  00                 	db	0
   778  007B8A                     STR_19:
   779  007B8A  0D                 	db	13
   780  007B8B  0A                 	db	10
   781  007B8C  49                 	db	73	;'I'
   782  007B8D  6E                 	db	110	;'n'
   783  007B8E  67                 	db	103	;'g'
   784  007B8F  72                 	db	114	;'r'
   785  007B90  65                 	db	101	;'e'
   786  007B91  73                 	db	115	;'s'
   787  007B92  65                 	db	101	;'e'
   788  007B93  20                 	db	32
   789  007B94  65                 	db	101	;'e'
   790  007B95  6C                 	db	108	;'l'
   791  007B96  20                 	db	32
   792  007B97  70                 	db	112	;'p'
   793  007B98  6F                 	db	111	;'o'
   794  007B99  72                 	db	114	;'r'
   795  007B9A  63                 	db	99	;'c'
   796  007B9B  65                 	db	101	;'e'
   797  007B9C  6E                 	db	110	;'n'
   798  007B9D  74                 	db	116	;'t'
   799  007B9E  61                 	db	97	;'a'
   800  007B9F  6A                 	db	106	;'j'
   801  007BA0  65                 	db	101	;'e'
   802  007BA1  20                 	db	32
   803  007BA2  64                 	db	100	;'d'
   804  007BA3  65                 	db	101	;'e'
   805  007BA4  20                 	db	32
   806  007BA5  68                 	db	104	;'h'
   807  007BA6  75                 	db	117	;'u'
   808  007BA7  6D                 	db	109	;'m'
   809  007BA8  65                 	db	101	;'e'
   810  007BA9  64                 	db	100	;'d'
   811  007BAA  61                 	db	97	;'a'
   812  007BAB  64                 	db	100	;'d'
   813  007BAC  20                 	db	32
   814  007BAD  64                 	db	100	;'d'
   815  007BAE  65                 	db	101	;'e'
   816  007BAF  6C                 	db	108	;'l'
   817  007BB0  20                 	db	32
   818  007BB1  73                 	db	115	;'s'
   819  007BB2  65                 	db	101	;'e'
   820  007BB3  6E                 	db	110	;'n'
   821  007BB4  73                 	db	115	;'s'
   822  007BB5  6F                 	db	111	;'o'
   823  007BB6  72                 	db	114	;'r'
   824  007BB7  20                 	db	32
   825  007BB8  25                 	db	37
   826  007BB9  64                 	db	100	;'d'
   827  007BBA  0D                 	db	13
   828  007BBB  0A                 	db	10
   829  007BBC  00                 	db	0
   830  007BBD                     STR_24:
   831  007BBD  0D                 	db	13
   832  007BBE  0A                 	db	10
   833  007BBF  20                 	db	32
   834  007BC0  33                 	db	51	;'3'
   835  007BC1  2E                 	db	46
   836  007BC2  20                 	db	32
   837  007BC3  50                 	db	80	;'P'
   838  007BC4  72                 	db	114	;'r'
   839  007BC5  6F                 	db	111	;'o'
   840  007BC6  67                 	db	103	;'g'
   841  007BC7  72                 	db	114	;'r'
   842  007BC8  61                 	db	97	;'a'
   843  007BC9  6D                 	db	109	;'m'
   844  007BCA  61                 	db	97	;'a'
   845  007BCB  72                 	db	114	;'r'
   846  007BCC  20                 	db	32
   847  007BCD  74                 	db	116	;'t'
   848  007BCE  69                 	db	105	;'i'
   849  007BCF  65                 	db	101	;'e'
   850  007BD0  6D                 	db	109	;'m'
   851  007BD1  70                 	db	112	;'p'
   852  007BD2  6F                 	db	111	;'o'
   853  007BD3  20                 	db	32
   854  007BD4  64                 	db	100	;'d'
   855  007BD5  65                 	db	101	;'e'
   856  007BD6  20                 	db	32
   857  007BD7  72                 	db	114	;'r'
   858  007BD8  69                 	db	105	;'i'
   859  007BD9  65                 	db	101	;'e'
   860  007BDA  67                 	db	103	;'g'
   861  007BDB  6F                 	db	111	;'o'
   862  007BDC  20                 	db	32
   863  007BDD  65                 	db	101	;'e'
   864  007BDE  6E                 	db	110	;'n'
   865  007BDF  20                 	db	32
   866  007BE0  75                 	db	117	;'u'
   867  007BE1  6E                 	db	110	;'n'
   868  007BE2  20                 	db	32
   869  007BE3  68                 	db	104	;'h'
   870  007BE4  6F                 	db	111	;'o'
   871  007BE5  72                 	db	114	;'r'
   872  007BE6  61                 	db	97	;'a'
   873  007BE7  72                 	db	114	;'r'
   874  007BE8  69                 	db	105	;'i'
   875  007BE9  6F                 	db	111	;'o'
   876  007BEA  20                 	db	32
   877  007BEB  0D                 	db	13
   878  007BEC  0A                 	db	10
   879  007BED  00                 	db	0
   880  007BEE                     STR_45:
   881  007BEE  0D                 	db	13
   882  007BEF  0A                 	db	10
   883  007BF0  0A                 	db	10
   884  007BF1  50                 	db	80	;'P'
   885  007BF2  6F                 	db	111	;'o'
   886  007BF3  72                 	db	114	;'r'
   887  007BF4  63                 	db	99	;'c'
   888  007BF5  65                 	db	101	;'e'
   889  007BF6  6E                 	db	110	;'n'
   890  007BF7  74                 	db	116	;'t'
   891  007BF8  61                 	db	97	;'a'
   892  007BF9  6A                 	db	106	;'j'
   893  007BFA  65                 	db	101	;'e'
   894  007BFB  20                 	db	32
   895  007BFC  48                 	db	72	;'H'
   896  007BFD  75                 	db	117	;'u'
   897  007BFE  6D                 	db	109	;'m'
   898  007BFF  65                 	db	101	;'e'
   899  007C00  64                 	db	100	;'d'
   900  007C01  61                 	db	97	;'a'
   901  007C02  64                 	db	100	;'d'
   902  007C03  20                 	db	32
   903  007C04  64                 	db	100	;'d'
   904  007C05  65                 	db	101	;'e'
   905  007C06  6C                 	db	108	;'l'
   906  007C07  20                 	db	32
   907  007C08  73                 	db	115	;'s'
   908  007C09  65                 	db	101	;'e'
   909  007C0A  6E                 	db	110	;'n'
   910  007C0B  73                 	db	115	;'s'
   911  007C0C  6F                 	db	111	;'o'
   912  007C0D  72                 	db	114	;'r'
   913  007C0E  20                 	db	32
   914  007C0F  25                 	db	37
   915  007C10  64                 	db	100	;'d'
   916  007C11  3A                 	db	58	;':'
   917  007C12  20                 	db	32
   918  007C13  25                 	db	37
   919  007C14  64                 	db	100	;'d'
   920  007C15  20                 	db	32
   921  007C16  25                 	db	37
   922  007C17  63                 	db	99	;'c'
   923  007C18  0D                 	db	13
   924  007C19  0A                 	db	10
   925  007C1A  00                 	db	0
   926  007C1B                     STR_4:
   927  007C1B  0D                 	db	13
   928  007C1C  0A                 	db	10
   929  007C1D  20                 	db	32
   930  007C1E  45                 	db	69	;'E'
   931  007C1F  6E                 	db	110	;'n'
   932  007C20  76                 	db	118	;'v'
   933  007C21  69                 	db	105	;'i'
   934  007C22  65                 	db	101	;'e'
   935  007C23  20                 	db	32
   936  007C24  6C                 	db	108	;'l'
   937  007C25  61                 	db	97	;'a'
   938  007C26  73                 	db	115	;'s'
   939  007C27  20                 	db	32
   940  007C28  48                 	db	72	;'H'
   941  007C29  6F                 	db	111	;'o'
   942  007C2A  72                 	db	114	;'r'
   943  007C2B  61                 	db	97	;'a'
   944  007C2C  73                 	db	115	;'s'
   945  007C2D  20                 	db	32
   946  007C2E  65                 	db	101	;'e'
   947  007C2F  6E                 	db	110	;'n'
   948  007C30  20                 	db	32
   949  007C31  66                 	db	102	;'f'
   950  007C32  6F                 	db	111	;'o'
   951  007C33  72                 	db	114	;'r'
   952  007C34  6D                 	db	109	;'m'
   953  007C35  61                 	db	97	;'a'
   954  007C36  74                 	db	116	;'t'
   955  007C37  6F                 	db	111	;'o'
   956  007C38  20                 	db	32
   957  007C39  32                 	db	50	;'2'
   958  007C3A  34                 	db	52	;'4'
   959  007C3B  20                 	db	32
   960  007C3C  45                 	db	69	;'E'
   961  007C3D  6A                 	db	106	;'j'
   962  007C3E  3A                 	db	58	;':'
   963  007C3F  20                 	db	32
   964  007C40  31                 	db	49	;'1'
   965  007C41  35                 	db	53	;'5'
   966  007C42  20                 	db	32
   967  007C43  0D                 	db	13
   968  007C44  0A                 	db	10
   969  007C45  00                 	db	0
   970  007C46                     STR_31:
   971  007C46  0D                 	db	13
   972  007C47  0A                 	db	10
   973  007C48  20                 	db	32
   974  007C49  53                 	db	83	;'S'
   975  007C4A  6F                 	db	111	;'o'
   976  007C4B  6C                 	db	108	;'l'
   977  007C4C  6F                 	db	111	;'o'
   978  007C4D  20                 	db	32
   979  007C4E  73                 	db	115	;'s'
   980  007C4F  65                 	db	101	;'e'
   981  007C50  20                 	db	32
   982  007C51  70                 	db	112	;'p'
   983  007C52  65                 	db	101	;'e'
   984  007C53  72                 	db	114	;'r'
   985  007C54  6D                 	db	109	;'m'
   986  007C55  69                 	db	105	;'i'
   987  007C56  74                 	db	116	;'t'
   988  007C57  65                 	db	101	;'e'
   989  007C58  6E                 	db	110	;'n'
   990  007C59  20                 	db	32
   991  007C5A  6E                 	db	110	;'n'
   992  007C5B  75                 	db	117	;'u'
   993  007C5C  6D                 	db	109	;'m'
   994  007C5D  65                 	db	101	;'e'
   995  007C5E  72                 	db	114	;'r'
   996  007C5F  6F                 	db	111	;'o'
   997  007C60  73                 	db	115	;'s'
   998  007C61  20                 	db	32
   999  007C62  64                 	db	100	;'d'
  1000  007C63  65                 	db	101	;'e'
  1001  007C64  6C                 	db	108	;'l'
  1002  007C65  20                 	db	32
  1003  007C66  31                 	db	49	;'1'
  1004  007C67  20                 	db	32
  1005  007C68  61                 	db	97	;'a'
  1006  007C69  6C                 	db	108	;'l'
  1007  007C6A  20                 	db	32
  1008  007C6B  37                 	db	55	;'7'
  1009  007C6C  20                 	db	32
  1010  007C6D  0D                 	db	13
  1011  007C6E  0A                 	db	10
  1012  007C6F  00                 	db	0
  1013  007C70                     STR_18:
  1014  007C70  0D                 	db	13
  1015  007C71  0A                 	db	10
  1016  007C72  53                 	db	83	;'S'
  1017  007C73  6F                 	db	111	;'o'
  1018  007C74  6C                 	db	108	;'l'
  1019  007C75  69                 	db	105	;'i'
  1020  007C76  63                 	db	99	;'c'
  1021  007C77  69                 	db	105	;'i'
  1022  007C78  74                 	db	116	;'t'
  1023  007C79  61                 	db	97	;'a'
  1024  007C7A  6E                 	db	110	;'n'
  1025  007C7B  64                 	db	100	;'d'
  1026  007C7C  6F                 	db	111	;'o'
  1027  007C7D  20                 	db	32
  1028  007C7E  4D                 	db	77	;'M'
  1029  007C7F  75                 	db	117	;'u'
  1030  007C80  65                 	db	101	;'e'
  1031  007C81  73                 	db	115	;'s'
  1032  007C82  74                 	db	116	;'t'
  1033  007C83  72                 	db	114	;'r'
  1034  007C84  65                 	db	101	;'e'
  1035  007C85  6F                 	db	111	;'o'
  1036  007C86  20                 	db	32
  1037  007C87  64                 	db	100	;'d'
  1038  007C88  65                 	db	101	;'e'
  1039  007C89  20                 	db	32
  1040  007C8A  73                 	db	115	;'s'
  1041  007C8B  65                 	db	101	;'e'
  1042  007C8C  6E                 	db	110	;'n'
  1043  007C8D  73                 	db	115	;'s'
  1044  007C8E  6F                 	db	111	;'o'
  1045  007C8F  72                 	db	114	;'r'
  1046  007C90  65                 	db	101	;'e'
  1047  007C91  73                 	db	115	;'s'
  1048  007C92  0D                 	db	13
  1049  007C93  0A                 	db	10
  1050  007C94  0A                 	db	10
  1051  007C95  00                 	db	0
  1052  007C96                     STR_17:
  1053  007C96  0D                 	db	13
  1054  007C97  0A                 	db	10
  1055  007C98  20                 	db	32
  1056  007C99  4D                 	db	77	;'M'
  1057  007C9A  69                 	db	105	;'i'
  1058  007C9B  6E                 	db	110	;'n'
  1059  007C9C  75                 	db	117	;'u'
  1060  007C9D  74                 	db	116	;'t'
  1061  007C9E  6F                 	db	111	;'o'
  1062  007C9F  73                 	db	115	;'s'
  1063  007CA0  20                 	db	32
  1064  007CA1  64                 	db	100	;'d'
  1065  007CA2  65                 	db	101	;'e'
  1066  007CA3  20                 	db	32
  1067  007CA4  72                 	db	114	;'r'
  1068  007CA5  69                 	db	105	;'i'
  1069  007CA6  65                 	db	101	;'e'
  1070  007CA7  67                 	db	103	;'g'
  1071  007CA8  6F                 	db	111	;'o'
  1072  007CA9  20                 	db	32
  1073  007CAA  65                 	db	101	;'e'
  1074  007CAB  73                 	db	115	;'s'
  1075  007CAC  74                 	db	116	;'t'
  1076  007CAD  61                 	db	97	;'a'
  1077  007CAE  62                 	db	98	;'b'
  1078  007CAF  6C                 	db	108	;'l'
  1079  007CB0  65                 	db	101	;'e'
  1080  007CB1  63                 	db	99	;'c'
  1081  007CB2  69                 	db	105	;'i'
  1082  007CB3  64                 	db	100	;'d'
  1083  007CB4  6F                 	db	111	;'o'
  1084  007CB5  73                 	db	115	;'s'
  1085  007CB6  21                 	db	33
  1086  007CB7  20                 	db	32
  1087  007CB8  0D                 	db	13
  1088  007CB9  0A                 	db	10
  1089  007CBA  00                 	db	0
  1090  007CBB                     STR_21:
  1091  007CBB  0D                 	db	13
  1092  007CBC  0A                 	db	10
  1093  007CBD  20                 	db	32
  1094  007CBE  49                 	db	73	;'I'
  1095  007CBF  6E                 	db	110	;'n'
  1096  007CC0  67                 	db	103	;'g'
  1097  007CC1  72                 	db	114	;'r'
  1098  007CC2  65                 	db	101	;'e'
  1099  007CC3  73                 	db	115	;'s'
  1100  007CC4  61                 	db	97	;'a'
  1101  007CC5  20                 	db	32
  1102  007CC6  75                 	db	117	;'u'
  1103  007CC7  6E                 	db	110	;'n'
  1104  007CC8  61                 	db	97	;'a'
  1105  007CC9  20                 	db	32
  1106  007CCA  6F                 	db	111	;'o'
  1107  007CCB  70                 	db	112	;'p'
  1108  007CCC  63                 	db	99	;'c'
  1109  007CCD  69                 	db	105	;'i'
  1110  007CCE  6F                 	db	111	;'o'
  1111  007CCF  6E                 	db	110	;'n'
  1112  007CD0  20                 	db	32
  1113  007CD1  61                 	db	97	;'a'
  1114  007CD2  20                 	db	32
  1115  007CD3  52                 	db	82	;'R'
  1116  007CD4  65                 	db	101	;'e'
  1117  007CD5  61                 	db	97	;'a'
  1118  007CD6  6C                 	db	108	;'l'
  1119  007CD7  69                 	db	105	;'i'
  1120  007CD8  7A                 	db	122	;'z'
  1121  007CD9  61                 	db	97	;'a'
  1122  007CDA  72                 	db	114	;'r'
  1123  007CDB  3A                 	db	58	;':'
  1124  007CDC  20                 	db	32
  1125  007CDD  0D                 	db	13
  1126  007CDE  0A                 	db	10
  1127  007CDF  00                 	db	0
  1128  007CE0                     STR_6:
  1129  007CE0  0D                 	db	13
  1130  007CE1  0A                 	db	10
  1131  007CE2  20                 	db	32
  1132  007CE3  48                 	db	72	;'H'
  1133  007CE4  4F                 	db	79	;'O'
  1134  007CE5  52                 	db	82	;'R'
  1135  007CE6  41                 	db	65	;'A'
  1136  007CE7  20                 	db	32
  1137  007CE8  45                 	db	69	;'E'
  1138  007CE9  53                 	db	83	;'S'
  1139  007CEA  54                 	db	84	;'T'
  1140  007CEB  41                 	db	65	;'A'
  1141  007CEC  42                 	db	66	;'B'
  1142  007CED  4C                 	db	76	;'L'
  1143  007CEE  45                 	db	69	;'E'
  1144  007CEF  43                 	db	67	;'C'
  1145  007CF0  49                 	db	73	;'I'
  1146  007CF1  44                 	db	68	;'D'
  1147  007CF2  41                 	db	65	;'A'
  1148  007CF3  20                 	db	32
  1149  007CF4  43                 	db	67	;'C'
  1150  007CF5  4F                 	db	79	;'O'
  1151  007CF6  52                 	db	82	;'R'
  1152  007CF7  52                 	db	82	;'R'
  1153  007CF8  45                 	db	69	;'E'
  1154  007CF9  43                 	db	67	;'C'
  1155  007CFA  54                 	db	84	;'T'
  1156  007CFB  41                 	db	65	;'A'
  1157  007CFC  4D                 	db	77	;'M'
  1158  007CFD  45                 	db	69	;'E'
  1159  007CFE  4E                 	db	78	;'N'
  1160  007CFF  54                 	db	84	;'T'
  1161  007D00  45                 	db	69	;'E'
  1162  007D01  20                 	db	32
  1163  007D02  0D                 	db	13
  1164  007D03  0A                 	db	10
  1165  007D04  00                 	db	0
  1166  007D05                     STR_11:
  1167  007D05  0D                 	db	13
  1168  007D06  0A                 	db	10
  1169  007D07  20                 	db	32
  1170  007D08  44                 	db	68	;'D'
  1171  007D09  4F                 	db	79	;'O'
  1172  007D0A  4D                 	db	77	;'M'
  1173  007D0B  49                 	db	73	;'I'
  1174  007D0C  4E                 	db	78	;'N'
  1175  007D0D  47                 	db	71	;'G'
  1176  007D0E  4F                 	db	79	;'O'
  1177  007D0F  20                 	db	32
  1178  007D10  3D                 	db	61	;'='
  1179  007D11  20                 	db	32
  1180  007D12  5B                 	db	91	;'['
  1181  007D13  31                 	db	49	;'1'
  1182  007D14  5D                 	db	93	;']'
  1183  007D15  20                 	db	32
  1184  007D16  2E                 	db	46
  1185  007D17  2E                 	db	46
  1186  007D18  2E                 	db	46
  1187  007D19  20                 	db	32
  1188  007D1A  53                 	db	83	;'S'
  1189  007D1B  41                 	db	65	;'A'
  1190  007D1C  42                 	db	66	;'B'
  1191  007D1D  41                 	db	65	;'A'
  1192  007D1E  44                 	db	68	;'D'
  1193  007D1F  4F                 	db	79	;'O'
  1194  007D20  20                 	db	32
  1195  007D21  3D                 	db	61	;'='
  1196  007D22  20                 	db	32
  1197  007D23  5B                 	db	91	;'['
  1198  007D24  37                 	db	55	;'7'
  1199  007D25  5D                 	db	93	;']'
  1200  007D26  20                 	db	32
  1201  007D27  0D                 	db	13
  1202  007D28  0A                 	db	10
  1203  007D29  00                 	db	0
  1204  007D2A                     STR_23:
  1205  007D2A  0D                 	db	13
  1206  007D2B  0A                 	db	10
  1207  007D2C  20                 	db	32
  1208  007D2D  32                 	db	50	;'2'
  1209  007D2E  2E                 	db	46
  1210  007D2F  20                 	db	32
  1211  007D30  41                 	db	65	;'A'
  1212  007D31  73                 	db	115	;'s'
  1213  007D32  69                 	db	105	;'i'
  1214  007D33  67                 	db	103	;'g'
  1215  007D34  6E                 	db	110	;'n'
  1216  007D35  61                 	db	97	;'a'
  1217  007D36  72                 	db	114	;'r'
  1218  007D37  20                 	db	32
  1219  007D38  48                 	db	72	;'H'
  1220  007D39  6F                 	db	111	;'o'
  1221  007D3A  72                 	db	114	;'r'
  1222  007D3B  61                 	db	97	;'a'
  1223  007D3C  72                 	db	114	;'r'
  1224  007D3D  69                 	db	105	;'i'
  1225  007D3E  6F                 	db	111	;'o'
  1226  007D3F  73                 	db	115	;'s'
  1227  007D40  20                 	db	32
  1228  007D41  70                 	db	112	;'p'
  1229  007D42  61                 	db	97	;'a'
  1230  007D43  72                 	db	114	;'r'
  1231  007D44  61                 	db	97	;'a'
  1232  007D45  20                 	db	32
  1233  007D46  72                 	db	114	;'r'
  1234  007D47  65                 	db	101	;'e'
  1235  007D48  67                 	db	103	;'g'
  1236  007D49  61                 	db	97	;'a'
  1237  007D4A  72                 	db	114	;'r'
  1238  007D4B  20                 	db	32
  1239  007D4C  0D                 	db	13
  1240  007D4D  0A                 	db	10
  1241  007D4E  00                 	db	0
  1242  007D4F                     STR_2:
  1243  007D4F  0D                 	db	13
  1244  007D50  0A                 	db	10
  1245  007D51  20                 	db	32
  1246  007D52  44                 	db	68	;'D'
  1247  007D53  49                 	db	73	;'I'
  1248  007D54  41                 	db	65	;'A'
  1249  007D55  20                 	db	32
  1250  007D56  45                 	db	69	;'E'
  1251  007D57  53                 	db	83	;'S'
  1252  007D58  54                 	db	84	;'T'
  1253  007D59  41                 	db	65	;'A'
  1254  007D5A  42                 	db	66	;'B'
  1255  007D5B  4C                 	db	76	;'L'
  1256  007D5C  45                 	db	69	;'E'
  1257  007D5D  43                 	db	67	;'C'
  1258  007D5E  49                 	db	73	;'I'
  1259  007D5F  44                 	db	68	;'D'
  1260  007D60  4F                 	db	79	;'O'
  1261  007D61  20                 	db	32
  1262  007D62  43                 	db	67	;'C'
  1263  007D63  4F                 	db	79	;'O'
  1264  007D64  52                 	db	82	;'R'
  1265  007D65  52                 	db	82	;'R'
  1266  007D66  45                 	db	69	;'E'
  1267  007D67  43                 	db	67	;'C'
  1268  007D68  54                 	db	84	;'T'
  1269  007D69  41                 	db	65	;'A'
  1270  007D6A  4D                 	db	77	;'M'
  1271  007D6B  45                 	db	69	;'E'
  1272  007D6C  4E                 	db	78	;'N'
  1273  007D6D  54                 	db	84	;'T'
  1274  007D6E  45                 	db	69	;'E'
  1275  007D6F  20                 	db	32
  1276  007D70  0D                 	db	13
  1277  007D71  0A                 	db	10
  1278  007D72  00                 	db	0
  1279  007D73                     STR_26:
  1280  007D73  0D                 	db	13
  1281  007D74  0A                 	db	10
  1282  007D75  20                 	db	32
  1283  007D76  35                 	db	53	;'5'
  1284  007D77  2E                 	db	46
  1285  007D78  20                 	db	32
  1286  007D79  4D                 	db	77	;'M'
  1287  007D7A  6F                 	db	111	;'o'
  1288  007D7B  73                 	db	115	;'s'
  1289  007D7C  74                 	db	116	;'t'
  1290  007D7D  72                 	db	114	;'r'
  1291  007D7E  61                 	db	97	;'a'
  1292  007D7F  72                 	db	114	;'r'
  1293  007D80  20                 	db	32
  1294  007D81  76                 	db	118	;'v'
  1295  007D82  61                 	db	97	;'a'
  1296  007D83  6C                 	db	108	;'l'
  1297  007D84  6F                 	db	111	;'o'
  1298  007D85  72                 	db	114	;'r'
  1299  007D86  65                 	db	101	;'e'
  1300  007D87  73                 	db	115	;'s'
  1301  007D88  20                 	db	32
  1302  007D89  73                 	db	115	;'s'
  1303  007D8A  65                 	db	101	;'e'
  1304  007D8B  6E                 	db	110	;'n'
  1305  007D8C  73                 	db	115	;'s'
  1306  007D8D  6F                 	db	111	;'o'
  1307  007D8E  72                 	db	114	;'r'
  1308  007D8F  65                 	db	101	;'e'
  1309  007D90  73                 	db	115	;'s'
  1310  007D91  20                 	db	32
  1311  007D92  0D                 	db	13
  1312  007D93  0A                 	db	10
  1313  007D94  00                 	db	0
  1314  007D95                     STR_20:
  1315  007D95  0D                 	db	13
  1316  007D96  0A                 	db	10
  1317  007D97  53                 	db	83	;'S'
  1318  007D98  65                 	db	101	;'e'
  1319  007D99  6E                 	db	110	;'n'
  1320  007D9A  73                 	db	115	;'s'
  1321  007D9B  6F                 	db	111	;'o'
  1322  007D9C  72                 	db	114	;'r'
  1323  007D9D  65                 	db	101	;'e'
  1324  007D9E  73                 	db	115	;'s'
  1325  007D9F  20                 	db	32
  1326  007DA0  4C                 	db	76	;'L'
  1327  007DA1  65                 	db	101	;'e'
  1328  007DA2  69                 	db	105	;'i'
  1329  007DA3  64                 	db	100	;'d'
  1330  007DA4  6F                 	db	111	;'o'
  1331  007DA5  73                 	db	115	;'s'
  1332  007DA6  20                 	db	32
  1333  007DA7  63                 	db	99	;'c'
  1334  007DA8  6F                 	db	111	;'o'
  1335  007DA9  6E                 	db	110	;'n'
  1336  007DAA  20                 	db	32
  1337  007DAB  45                 	db	69	;'E'
  1338  007DAC  78                 	db	120	;'x'
  1339  007DAD  69                 	db	105	;'i'
  1340  007DAE  74                 	db	116	;'t'
  1341  007DAF  6F                 	db	111	;'o'
  1342  007DB0  21                 	db	33
  1343  007DB1  0D                 	db	13
  1344  007DB2  0A                 	db	10
  1345  007DB3  0A                 	db	10
  1346  007DB4  00                 	db	0
  1347  007DB5                     STR_25:
  1348  007DB5  0D                 	db	13
  1349  007DB6  0A                 	db	10
  1350  007DB7  20                 	db	32
  1351  007DB8  34                 	db	52	;'4'
  1352  007DB9  2E                 	db	46
  1353  007DBA  20                 	db	32
  1354  007DBB  44                 	db	68	;'D'
  1355  007DBC  61                 	db	97	;'a'
  1356  007DBD  6D                 	db	109	;'m'
  1357  007DBE  65                 	db	101	;'e'
  1358  007DBF  20                 	db	32
  1359  007DC0  64                 	db	100	;'d'
  1360  007DC1  61                 	db	97	;'a'
  1361  007DC2  74                 	db	116	;'t'
  1362  007DC3  6F                 	db	111	;'o'
  1363  007DC4  73                 	db	115	;'s'
  1364  007DC5  20                 	db	32
  1365  007DC6  64                 	db	100	;'d'
  1366  007DC7  65                 	db	101	;'e'
  1367  007DC8  6C                 	db	108	;'l'
  1368  007DC9  20                 	db	32
  1369  007DCA  73                 	db	115	;'s'
  1370  007DCB  69                 	db	105	;'i'
  1371  007DCC  73                 	db	115	;'s'
  1372  007DCD  74                 	db	116	;'t'
  1373  007DCE  65                 	db	101	;'e'
  1374  007DCF  6D                 	db	109	;'m'
  1375  007DD0  61                 	db	97	;'a'
  1376  007DD1  20                 	db	32
  1377  007DD2  0D                 	db	13
  1378  007DD3  0A                 	db	10
  1379  007DD4  00                 	db	0
  1380  007DD5                     STR_43:
  1381  007DD5  0D                 	db	13
  1382  007DD6  0A                 	db	10
  1383  007DD7  0A                 	db	10
  1384  007DD8  4C                 	db	76	;'L'
  1385  007DD9  61                 	db	97	;'a'
  1386  007DDA  20                 	db	32
  1387  007DDB  48                 	db	72	;'H'
  1388  007DDC  75                 	db	117	;'u'
  1389  007DDD  6D                 	db	109	;'m'
  1390  007DDE  65                 	db	101	;'e'
  1391  007DDF  64                 	db	100	;'d'
  1392  007DE0  61                 	db	97	;'a'
  1393  007DE1  64                 	db	100	;'d'
  1394  007DE2  20                 	db	32
  1395  007DE3  41                 	db	65	;'A'
  1396  007DE4  6D                 	db	109	;'m'
  1397  007DE5  62                 	db	98	;'b'
  1398  007DE6  69                 	db	105	;'i'
  1399  007DE7  65                 	db	101	;'e'
  1400  007DE8  6E                 	db	110	;'n'
  1401  007DE9  74                 	db	116	;'t'
  1402  007DEA  65                 	db	101	;'e'
  1403  007DEB  20                 	db	32
  1404  007DEC  65                 	db	101	;'e'
  1405  007DED  73                 	db	115	;'s'
  1406  007DEE  3A                 	db	58	;':'
  1407  007DEF  20                 	db	32
  1408  007DF0  25                 	db	37
  1409  007DF1  64                 	db	100	;'d'
  1410  007DF2  0D                 	db	13
  1411  007DF3  0A                 	db	10
  1412  007DF4  00                 	db	0
  1413  007DF5                     STR_5:
  1414  007DF5  0D                 	db	13
  1415  007DF6  0A                 	db	10
  1416  007DF7  20                 	db	32
  1417  007DF8  45                 	db	69	;'E'
  1418  007DF9  6E                 	db	110	;'n'
  1419  007DFA  76                 	db	118	;'v'
  1420  007DFB  69                 	db	105	;'i'
  1421  007DFC  65                 	db	101	;'e'
  1422  007DFD  20                 	db	32
  1423  007DFE  6C                 	db	108	;'l'
  1424  007DFF  6F                 	db	111	;'o'
  1425  007E00  73                 	db	115	;'s'
  1426  007E01  20                 	db	32
  1427  007E02  4D                 	db	77	;'M'
  1428  007E03  69                 	db	105	;'i'
  1429  007E04  6E                 	db	110	;'n'
  1430  007E05  75                 	db	117	;'u'
  1431  007E06  74                 	db	116	;'t'
  1432  007E07  6F                 	db	111	;'o'
  1433  007E08  73                 	db	115	;'s'
  1434  007E09  20                 	db	32
  1435  007E0A  45                 	db	69	;'E'
  1436  007E0B  6A                 	db	106	;'j'
  1437  007E0C  3A                 	db	58	;':'
  1438  007E0D  20                 	db	32
  1439  007E0E  32                 	db	50	;'2'
  1440  007E0F  35                 	db	53	;'5'
  1441  007E10  20                 	db	32
  1442  007E11  0D                 	db	13
  1443  007E12  0A                 	db	10
  1444  007E13  00                 	db	0
  1445  007E14                     STR_44:
  1446  007E14  0D                 	db	13
  1447  007E15  0A                 	db	10
  1448  007E16  0A                 	db	10
  1449  007E17  4C                 	db	76	;'L'
  1450  007E18  61                 	db	97	;'a'
  1451  007E19  20                 	db	32
  1452  007E1A  54                 	db	84	;'T'
  1453  007E1B  65                 	db	101	;'e'
  1454  007E1C  6D                 	db	109	;'m'
  1455  007E1D  70                 	db	112	;'p'
  1456  007E1E  65                 	db	101	;'e'
  1457  007E1F  72                 	db	114	;'r'
  1458  007E20  61                 	db	97	;'a'
  1459  007E21  74                 	db	116	;'t'
  1460  007E22  75                 	db	117	;'u'
  1461  007E23  72                 	db	114	;'r'
  1462  007E24  61                 	db	97	;'a'
  1463  007E25  20                 	db	32
  1464  007E26  65                 	db	101	;'e'
  1465  007E27  73                 	db	115	;'s'
  1466  007E28  3A                 	db	58	;':'
  1467  007E29  20                 	db	32
  1468  007E2A  25                 	db	37
  1469  007E2B  64                 	db	100	;'d'
  1470  007E2C  20                 	db	32
  1471  007E2D  43                 	db	67	;'C'
  1472  007E2E  0D                 	db	13
  1473  007E2F  0A                 	db	10
  1474  007E30  00                 	db	0
  1475  007E31                     STR_22:
  1476  007E31  0D                 	db	13
  1477  007E32  0A                 	db	10
  1478  007E33  20                 	db	32
  1479  007E34  31                 	db	49	;'1'
  1480  007E35  2E                 	db	46
  1481  007E36  20                 	db	32
  1482  007E37  46                 	db	70	;'F'
  1483  007E38  69                 	db	105	;'i'
  1484  007E39  6A                 	db	106	;'j'
  1485  007E3A  61                 	db	97	;'a'
  1486  007E3B  72                 	db	114	;'r'
  1487  007E3C  20                 	db	32
  1488  007E3D  48                 	db	72	;'H'
  1489  007E3E  6F                 	db	111	;'o'
  1490  007E3F  72                 	db	114	;'r'
  1491  007E40  61                 	db	97	;'a'
  1492  007E41  20                 	db	32
  1493  007E42  41                 	db	65	;'A'
  1494  007E43  63                 	db	99	;'c'
  1495  007E44  74                 	db	116	;'t'
  1496  007E45  75                 	db	117	;'u'
  1497  007E46  61                 	db	97	;'a'
  1498  007E47  6C                 	db	108	;'l'
  1499  007E48  20                 	db	32
  1500  007E49  0D                 	db	13
  1501  007E4A  0A                 	db	10
  1502  007E4B  00                 	db	0
  1503  007E4C                     STR_38:
  1504  007E4C  0D                 	db	13
  1505  007E4D  0A                 	db	10
  1506  007E4E  25                 	db	37
  1507  007E4F  30                 	db	48	;'0'
  1508  007E50  2E                 	db	46
  1509  007E51  32                 	db	50	;'2'
  1510  007E52  64                 	db	100	;'d'
  1511  007E53  3A                 	db	58	;':'
  1512  007E54  25                 	db	37
  1513  007E55  30                 	db	48	;'0'
  1514  007E56  2E                 	db	46
  1515  007E57  32                 	db	50	;'2'
  1516  007E58  64                 	db	100	;'d'
  1517  007E59  7C                 	db	124
  1518  007E5A  20                 	db	32
  1519  007E5B  4D                 	db	77	;'M'
  1520  007E5C  49                 	db	73	;'I'
  1521  007E5D  45                 	db	69	;'E'
  1522  007E5E  52                 	db	82	;'R'
  1523  007E5F  43                 	db	67	;'C'
  1524  007E60  4F                 	db	79	;'O'
  1525  007E61  4C                 	db	76	;'L'
  1526  007E62  45                 	db	69	;'E'
  1527  007E63  53                 	db	83	;'S'
  1528  007E64  0D                 	db	13
  1529  007E65  0A                 	db	10
  1530  007E66  00                 	db	0
  1531  007E67                     STR_13:
  1532  007E67  0D                 	db	13
  1533  007E68  0A                 	db	10
  1534  007E69  20                 	db	32
  1535  007E6A  48                 	db	72	;'H'
  1536  007E6B  6F                 	db	111	;'o'
  1537  007E6C  72                 	db	114	;'r'
  1538  007E6D  61                 	db	97	;'a'
  1539  007E6E  72                 	db	114	;'r'
  1540  007E6F  69                 	db	105	;'i'
  1541  007E70  6F                 	db	111	;'o'
  1542  007E71  20                 	db	32
  1543  007E72  4D                 	db	77	;'M'
  1544  007E73  6F                 	db	111	;'o'
  1545  007E74  64                 	db	100	;'d'
  1546  007E75  69                 	db	105	;'i'
  1547  007E76  66                 	db	102	;'f'
  1548  007E77  69                 	db	105	;'i'
  1549  007E78  63                 	db	99	;'c'
  1550  007E79  61                 	db	97	;'a'
  1551  007E7A  64                 	db	100	;'d'
  1552  007E7B  6F                 	db	111	;'o'
  1553  007E7C  21                 	db	33
  1554  007E7D  20                 	db	32
  1555  007E7E  0D                 	db	13
  1556  007E7F  0A                 	db	10
  1557  007E80  00                 	db	0
  1558  007E81                     STR_28:
  1559  007E81  0D                 	db	13
  1560  007E82  0A                 	db	10
  1561  007E83  20                 	db	32
  1562  007E84  37                 	db	55	;'7'
  1563  007E85  2E                 	db	46
  1564  007E86  20                 	db	32
  1565  007E87  46                 	db	70	;'F'
  1566  007E88  69                 	db	105	;'i'
  1567  007E89  6A                 	db	106	;'j'
  1568  007E8A  61                 	db	97	;'a'
  1569  007E8B  72                 	db	114	;'r'
  1570  007E8C  20                 	db	32
  1571  007E8D  44                 	db	68	;'D'
  1572  007E8E  69                 	db	105	;'i'
  1573  007E8F  61                 	db	97	;'a'
  1574  007E90  20                 	db	32
  1575  007E91  41                 	db	65	;'A'
  1576  007E92  63                 	db	99	;'c'
  1577  007E93  74                 	db	116	;'t'
  1578  007E94  75                 	db	117	;'u'
  1579  007E95  61                 	db	97	;'a'
  1580  007E96  6C                 	db	108	;'l'
  1581  007E97  20                 	db	32
  1582  007E98  0D                 	db	13
  1583  007E99  0A                 	db	10
  1584  007E9A  00                 	db	0
  1585  007E9B                     STR_7:
  1586  007E9B  0D                 	db	13
  1587  007E9C  0A                 	db	10
  1588  007E9D  20                 	db	32
  1589  007E9E  4F                 	db	79	;'O'
  1590  007E9F  50                 	db	80	;'P'
  1591  007EA0  43                 	db	67	;'C'
  1592  007EA1  49                 	db	73	;'I'
  1593  007EA2  4F                 	db	79	;'O'
  1594  007EA3  4E                 	db	78	;'N'
  1595  007EA4  45                 	db	69	;'E'
  1596  007EA5  53                 	db	83	;'S'
  1597  007EA6  20                 	db	32
  1598  007EA7  44                 	db	68	;'D'
  1599  007EA8  45                 	db	69	;'E'
  1600  007EA9  20                 	db	32
  1601  007EAA  52                 	db	82	;'R'
  1602  007EAB  45                 	db	69	;'E'
  1603  007EAC  47                 	db	71	;'G'
  1604  007EAD  41                 	db	65	;'A'
  1605  007EAE  44                 	db	68	;'D'
  1606  007EAF  4F                 	db	79	;'O'
  1607  007EB0  20                 	db	32
  1608  007EB1  0D                 	db	13
  1609  007EB2  0A                 	db	10
  1610  007EB3  00                 	db	0
  1611  007EB4                     STR_42:
  1612  007EB4  45                 	db	69	;'E'
  1613  007EB5  72                 	db	114	;'r'
  1614  007EB6  72                 	db	114	;'r'
  1615  007EB7  6F                 	db	111	;'o'
  1616  007EB8  72                 	db	114	;'r'
  1617  007EB9  20                 	db	32
  1618  007EBA  64                 	db	100	;'d'
  1619  007EBB  65                 	db	101	;'e'
  1620  007EBC  20                 	db	32
  1621  007EBD  6C                 	db	108	;'l'
  1622  007EBE  65                 	db	101	;'e'
  1623  007EBF  63                 	db	99	;'c'
  1624  007EC0  74                 	db	116	;'t'
  1625  007EC1  75                 	db	117	;'u'
  1626  007EC2  72                 	db	114	;'r'
  1627  007EC3  61                 	db	97	;'a'
  1628  007EC4  20                 	db	32
  1629  007EC5  44                 	db	68	;'D'
  1630  007EC6  48                 	db	72	;'H'
  1631  007EC7  54                 	db	84	;'T'
  1632  007EC8  31                 	db	49	;'1'
  1633  007EC9  31                 	db	49	;'1'
  1634  007ECA  0D                 	db	13
  1635  007ECB  0A                 	db	10
  1636  007ECC  00                 	db	0
  1637  007ECD                     STR_35:
  1638  007ECD  0D                 	db	13
  1639  007ECE  0A                 	db	10
  1640  007ECF  25                 	db	37
  1641  007ED0  30                 	db	48	;'0'
  1642  007ED1  2E                 	db	46
  1643  007ED2  32                 	db	50	;'2'
  1644  007ED3  64                 	db	100	;'d'
  1645  007ED4  3A                 	db	58	;':'
  1646  007ED5  25                 	db	37
  1647  007ED6  30                 	db	48	;'0'
  1648  007ED7  2E                 	db	46
  1649  007ED8  32                 	db	50	;'2'
  1650  007ED9  64                 	db	100	;'d'
  1651  007EDA  7C                 	db	124
  1652  007EDB  20                 	db	32
  1653  007EDC  44                 	db	68	;'D'
  1654  007EDD  4F                 	db	79	;'O'
  1655  007EDE  4D                 	db	77	;'M'
  1656  007EDF  49                 	db	73	;'I'
  1657  007EE0  4E                 	db	78	;'N'
  1658  007EE1  47                 	db	71	;'G'
  1659  007EE2  4F                 	db	79	;'O'
  1660  007EE3  0D                 	db	13
  1661  007EE4  0A                 	db	10
  1662  007EE5  00                 	db	0
  1663  007EE6                     STR_40:
  1664  007EE6  0D                 	db	13
  1665  007EE7  0A                 	db	10
  1666  007EE8  25                 	db	37
  1667  007EE9  30                 	db	48	;'0'
  1668  007EEA  2E                 	db	46
  1669  007EEB  32                 	db	50	;'2'
  1670  007EEC  64                 	db	100	;'d'
  1671  007EED  3A                 	db	58	;':'
  1672  007EEE  25                 	db	37
  1673  007EEF  30                 	db	48	;'0'
  1674  007EF0  2E                 	db	46
  1675  007EF1  32                 	db	50	;'2'
  1676  007EF2  64                 	db	100	;'d'
  1677  007EF3  7C                 	db	124
  1678  007EF4  20                 	db	32
  1679  007EF5  56                 	db	86	;'V'
  1680  007EF6  49                 	db	73	;'I'
  1681  007EF7  45                 	db	69	;'E'
  1682  007EF8  52                 	db	82	;'R'
  1683  007EF9  4E                 	db	78	;'N'
  1684  007EFA  45                 	db	69	;'E'
  1685  007EFB  53                 	db	83	;'S'
  1686  007EFC  0D                 	db	13
  1687  007EFD  0A                 	db	10
  1688  007EFE  00                 	db	0
  1689  007EFF                     STR_41:
  1690  007EFF  0D                 	db	13
  1691  007F00  0A                 	db	10
  1692  007F01  25                 	db	37
  1693  007F02  30                 	db	48	;'0'
  1694  007F03  2E                 	db	46
  1695  007F04  32                 	db	50	;'2'
  1696  007F05  64                 	db	100	;'d'
  1697  007F06  3A                 	db	58	;':'
  1698  007F07  25                 	db	37
  1699  007F08  30                 	db	48	;'0'
  1700  007F09  2E                 	db	46
  1701  007F0A  32                 	db	50	;'2'
  1702  007F0B  64                 	db	100	;'d'
  1703  007F0C  7C                 	db	124
  1704  007F0D  20                 	db	32
  1705  007F0E  53                 	db	83	;'S'
  1706  007F0F  41                 	db	65	;'A'
  1707  007F10  42                 	db	66	;'B'
  1708  007F11  41                 	db	65	;'A'
  1709  007F12  44                 	db	68	;'D'
  1710  007F13  4F                 	db	79	;'O'
  1711  007F14  0D                 	db	13
  1712  007F15  0A                 	db	10
  1713  007F16  00                 	db	0
  1714  007F17                     STR_37:
  1715  007F17  0D                 	db	13
  1716  007F18  0A                 	db	10
  1717  007F19  25                 	db	37
  1718  007F1A  30                 	db	48	;'0'
  1719  007F1B  2E                 	db	46
  1720  007F1C  32                 	db	50	;'2'
  1721  007F1D  64                 	db	100	;'d'
  1722  007F1E  3A                 	db	58	;':'
  1723  007F1F  25                 	db	37
  1724  007F20  30                 	db	48	;'0'
  1725  007F21  2E                 	db	46
  1726  007F22  32                 	db	50	;'2'
  1727  007F23  64                 	db	100	;'d'
  1728  007F24  7C                 	db	124
  1729  007F25  20                 	db	32
  1730  007F26  4D                 	db	77	;'M'
  1731  007F27  41                 	db	65	;'A'
  1732  007F28  52                 	db	82	;'R'
  1733  007F29  54                 	db	84	;'T'
  1734  007F2A  45                 	db	69	;'E'
  1735  007F2B  53                 	db	83	;'S'
  1736  007F2C  0D                 	db	13
  1737  007F2D  0A                 	db	10
  1738  007F2E  00                 	db	0
  1739  007F2F                     STR_39:
  1740  007F2F  0D                 	db	13
  1741  007F30  0A                 	db	10
  1742  007F31  25                 	db	37
  1743  007F32  30                 	db	48	;'0'
  1744  007F33  2E                 	db	46
  1745  007F34  32                 	db	50	;'2'
  1746  007F35  64                 	db	100	;'d'
  1747  007F36  3A                 	db	58	;':'
  1748  007F37  25                 	db	37
  1749  007F38  30                 	db	48	;'0'
  1750  007F39  2E                 	db	46
  1751  007F3A  32                 	db	50	;'2'
  1752  007F3B  64                 	db	100	;'d'
  1753  007F3C  7C                 	db	124
  1754  007F3D  20                 	db	32
  1755  007F3E  4A                 	db	74	;'J'
  1756  007F3F  55                 	db	85	;'U'
  1757  007F40  45                 	db	69	;'E'
  1758  007F41  56                 	db	86	;'V'
  1759  007F42  45                 	db	69	;'E'
  1760  007F43  53                 	db	83	;'S'
  1761  007F44  0D                 	db	13
  1762  007F45  0A                 	db	10
  1763  007F46  00                 	db	0
  1764  007F47                     STR_14:
  1765  007F47  0D                 	db	13
  1766  007F48  0A                 	db	10
  1767  007F49  20                 	db	32
  1768  007F4A  54                 	db	84	;'T'
  1769  007F4B  49                 	db	73	;'I'
  1770  007F4C  45                 	db	69	;'E'
  1771  007F4D  4D                 	db	77	;'M'
  1772  007F4E  50                 	db	80	;'P'
  1773  007F4F  4F                 	db	79	;'O'
  1774  007F50  20                 	db	32
  1775  007F51  44                 	db	68	;'D'
  1776  007F52  45                 	db	69	;'E'
  1777  007F53  20                 	db	32
  1778  007F54  52                 	db	82	;'R'
  1779  007F55  45                 	db	69	;'E'
  1780  007F56  47                 	db	71	;'G'
  1781  007F57  41                 	db	65	;'A'
  1782  007F58  44                 	db	68	;'D'
  1783  007F59  4F                 	db	79	;'O'
  1784  007F5A  20                 	db	32
  1785  007F5B  0D                 	db	13
  1786  007F5C  0A                 	db	10
  1787  007F5D  00                 	db	0
  1788  007F5E                     STR_27:
  1789  007F5E  0D                 	db	13
  1790  007F5F  0A                 	db	10
  1791  007F60  20                 	db	32
  1792  007F61  36                 	db	54	;'6'
  1793  007F62  2E                 	db	46
  1794  007F63  20                 	db	32
  1795  007F64  52                 	db	82	;'R'
  1796  007F65  65                 	db	101	;'e'
  1797  007F66  67                 	db	103	;'g'
  1798  007F67  61                 	db	97	;'a'
  1799  007F68  64                 	db	100	;'d'
  1800  007F69  6F                 	db	111	;'o'
  1801  007F6A  20                 	db	32
  1802  007F6B  72                 	db	114	;'r'
  1803  007F6C  61                 	db	97	;'a'
  1804  007F6D  70                 	db	112	;'p'
  1805  007F6E  69                 	db	105	;'i'
  1806  007F6F  64                 	db	100	;'d'
  1807  007F70  6F                 	db	111	;'o'
  1808  007F71  20                 	db	32
  1809  007F72  0D                 	db	13
  1810  007F73  0A                 	db	10
  1811  007F74  00                 	db	0
  1812  007F75                     STR_36:
  1813  007F75  0D                 	db	13
  1814  007F76  0A                 	db	10
  1815  007F77  25                 	db	37
  1816  007F78  30                 	db	48	;'0'
  1817  007F79  2E                 	db	46
  1818  007F7A  32                 	db	50	;'2'
  1819  007F7B  64                 	db	100	;'d'
  1820  007F7C  3A                 	db	58	;':'
  1821  007F7D  25                 	db	37
  1822  007F7E  30                 	db	48	;'0'
  1823  007F7F  2E                 	db	46
  1824  007F80  32                 	db	50	;'2'
  1825  007F81  64                 	db	100	;'d'
  1826  007F82  7C                 	db	124
  1827  007F83  20                 	db	32
  1828  007F84  4C                 	db	76	;'L'
  1829  007F85  55                 	db	85	;'U'
  1830  007F86  4E                 	db	78	;'N'
  1831  007F87  45                 	db	69	;'E'
  1832  007F88  53                 	db	83	;'S'
  1833  007F89  0D                 	db	13
  1834  007F8A  0A                 	db	10
  1835  007F8B  00                 	db	0
  1836  007F8C                     STR_53:
  1837  007F8C  0D                 	db	13
  1838  007F8D  0A                 	db	10
  1839  007F8E  20                 	db	32
  1840  007F8F  52                 	db	82	;'R'
  1841  007F90  45                 	db	69	;'E'
  1842  007F91  47                 	db	71	;'G'
  1843  007F92  41                 	db	65	;'A'
  1844  007F93  44                 	db	68	;'D'
  1845  007F94  4F                 	db	79	;'O'
  1846  007F95  20                 	db	32
  1847  007F96  52                 	db	82	;'R'
  1848  007F97  41                 	db	65	;'A'
  1849  007F98  50                 	db	80	;'P'
  1850  007F99  49                 	db	73	;'I'
  1851  007F9A  44                 	db	68	;'D'
  1852  007F9B  4F                 	db	79	;'O'
  1853  007F9C  20                 	db	32
  1854  007F9D  0D                 	db	13
  1855  007F9E  0A                 	db	10
  1856  007F9F  00                 	db	0
  1857  007FA0                     STR_52:
  1858  007FA0  0A                 	db	10
  1859  007FA1  46                 	db	70	;'F'
  1860  007FA2  41                 	db	65	;'A'
  1861  007FA3  4C                 	db	76	;'L'
  1862  007FA4  4C                 	db	76	;'L'
  1863  007FA5  4F                 	db	79	;'O'
  1864  007FA6  20                 	db	32
  1865  007FA7  45                 	db	69	;'E'
  1866  007FA8  4C                 	db	76	;'L'
  1867  007FA9  20                 	db	32
  1868  007FAA  53                 	db	83	;'S'
  1869  007FAB  45                 	db	69	;'E'
  1870  007FAC  54                 	db	84	;'T'
  1871  007FAD  45                 	db	69	;'E'
  1872  007FAE  4F                 	db	79	;'O'
  1873  007FAF  0D                 	db	13
  1874  007FB0  0A                 	db	10
  1875  007FB1  00                 	db	0
  1876  007FB2  41                 	db	65	;'A'
  1877  007FB3  54                 	db	84	;'T'
  1878  007FB4  2B                 	db	43
  1879  007FB5  4E                 	db	78	;'N'
  1880  007FB6  41                 	db	65	;'A'
  1881  007FB7  4D                 	db	77	;'M'
  1882  007FB8  45                 	db	69	;'E'
  1883  007FB9  53                 	db	83	;'S'
  1884  007FBA  4D                 	db	77	;'M'
  1885  007FBB  41                 	db	65	;'A'
  1886  007FBC  52                 	db	82	;'R'
  1887  007FBD  54                 	db	84	;'T'
  1888  007FBE  48                 	db	72	;'H'
  1889  007FBF  4F                 	db	79	;'O'
  1890  007FC0  4D                 	db	77	;'M'
  1891  007FC1  45                 	db	69	;'E'
  1892  007FC2  00                 	db	0
  1893  007FC3                     STR_3:
  1894  007FC3  0D                 	db	13
  1895  007FC4  0A                 	db	10
  1896  007FC5  20                 	db	32
  1897  007FC6  46                 	db	70	;'F'
  1898  007FC7  49                 	db	73	;'I'
  1899  007FC8  4A                 	db	74	;'J'
  1900  007FC9  41                 	db	65	;'A'
  1901  007FCA  20                 	db	32
  1902  007FCB  48                 	db	72	;'H'
  1903  007FCC  4F                 	db	79	;'O'
  1904  007FCD  52                 	db	82	;'R'
  1905  007FCE  41                 	db	65	;'A'
  1906  007FCF  20                 	db	32
  1907  007FD0  0D                 	db	13
  1908  007FD1  0A                 	db	10
  1909  007FD2  00                 	db	0
  1910  007FD3                     STR_29:
  1911  007FD3  0D                 	db	13
  1912  007FD4  0A                 	db	10
  1913  007FD5  20                 	db	32
  1914  007FD6  4F                 	db	79	;'O'
  1915  007FD7  70                 	db	112	;'p'
  1916  007FD8  63                 	db	99	;'c'
  1917  007FD9  69                 	db	105	;'i'
  1918  007FDA  6F                 	db	111	;'o'
  1919  007FDB  6E                 	db	110	;'n'
  1920  007FDC  3A                 	db	58	;':'
  1921  007FDD  20                 	db	32
  1922  007FDE  20                 	db	32
  1923  007FDF  0D                 	db	13
  1924  007FE0  00                 	db	0
  1925  007FE1  41                 	db	65	;'A'
  1926  007FE2  54                 	db	84	;'T'
  1927  007FE3  2B                 	db	43
  1928  007FE4  50                 	db	80	;'P'
  1929  007FE5  49                 	db	73	;'I'
  1930  007FE6  4E                 	db	78	;'N'
  1931  007FE7  32                 	db	50	;'2'
  1932  007FE8  35                 	db	53	;'5'
  1933  007FE9  30                 	db	48	;'0'
  1934  007FEA  31                 	db	49	;'1'
  1935  007FEB  00                 	db	0
  1936  007FEC                     STR_12:
  1937  007FEC  0D                 	db	13
  1938  007FED  0A                 	db	10
  1939  007FEE  5B                 	db	91	;'['
  1940  007FEF  25                 	db	37
  1941  007FF0  64                 	db	100	;'d'
  1942  007FF1  5D                 	db	93	;']'
  1943  007FF2  3A                 	db	58	;':'
  1944  007FF3  20                 	db	32
  1945  007FF4  00                 	db	0
  1946  007FF5  41                 	db	65	;'A'
  1947  007FF6  54                 	db	84	;'T'
  1948  007FF7  2B                 	db	43
  1949  007FF8  42                 	db	66	;'B'
  1950  007FF9  41                 	db	65	;'A'
  1951  007FFA  55                 	db	85	;'U'
  1952  007FFB  44                 	db	68	;'D'
  1953  007FFC  34                 	db	52	;'4'
  1954  007FFD  00                 	db	0
  1955  0000                     
  1956                           ; #config settings
  1957  007FFE  00                 	db	0	; dummy byte at the end
  1958  0000                     
  1959                           	psect	cinit
  1960  002CE6                     __pcinit:
  1961                           	opt callstack 0
  1962  002CE6                     start_initialization:
  1963                           	opt callstack 0
  1964  002CE6                     __initialization:
  1965                           	opt callstack 0
  1966                           
  1967                           ; Initialize objects allocated to BANK0 (11 bytes)
  1968                           ; load TBLPTR registers with __pidataBANK0
  1969  002CE6  0E8E               	movlw	low __pidataBANK0
  1970  002CE8  6EF6               	movwf	tblptrl,c
  1971  002CEA  0E32               	movlw	high __pidataBANK0
  1972  002CEC  6EF7               	movwf	tblptrh,c
  1973  002CEE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1974  002CF0  6EF8               	movwf	tblptru,c
  1975  002CF2  EE00  F0E4         	lfsr	0,__pdataBANK0
  1976  002CF6  EE10 F00B          	lfsr	1,11
  1977  002CFA                     copy_data0:
  1978  002CFA  0009               	tblrd		*+
  1979  002CFC  CFF5 FFEE          	movff	tablat,postinc0
  1980  002D00  50E5               	movf	postdec1,w,c
  1981  002D02  50E1               	movf	fsr1l,w,c
  1982  002D04  E1FA               	bnz	copy_data0
  1983                           
  1984                           ; Clear objects allocated to BIGRAM (288 bytes)
  1985  002D06  EE01  F046         	lfsr	0,__pbssBIGRAM
  1986  002D0A  EE11 F020          	lfsr	1,288
  1987  002D0E                     clear_0:
  1988  002D0E  6AEE               	clrf	postinc0,c
  1989  002D10  50E5               	movf	postdec1,w,c
  1990  002D12  50E1               	movf	fsr1l,w,c
  1991  002D14  E1FC               	bnz	clear_0
  1992  002D16  50E2               	movf	fsr1h,w,c
  1993  002D18  E1FA               	bnz	clear_0
  1994                           
  1995                           ; Clear objects allocated to BANK1 (70 bytes)
  1996  002D1A  EE01  F000         	lfsr	0,__pbssBANK1
  1997  002D1E  0E46               	movlw	70
  1998  002D20                     clear_1:
  1999  002D20  6AEE               	clrf	postinc0,c
  2000  002D22  06E8               	decf	wreg,f,c
  2001  002D24  E1FD               	bnz	clear_1
  2002                           
  2003                           ; Clear objects allocated to BANK0 (87 bytes)
  2004  002D26  EE00  F060         	lfsr	0,__pbssBANK0
  2005  002D2A  0E57               	movlw	87
  2006  002D2C                     clear_2:
  2007  002D2C  6AEE               	clrf	postinc0,c
  2008  002D2E  06E8               	decf	wreg,f,c
  2009  002D30  E1FD               	bnz	clear_2
  2010  002D32                     end_of_initialization:
  2011                           	opt callstack 0
  2012  002D32                     __end_of__initialization:
  2013                           	opt callstack 0
  2014  002D32  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2015  002D34  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2016  002D36  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2017  002D38  6EF8               	movwf	tblptru,c
  2018  002D3A  0100               	movlb	0
  2019  002D3C  EF8A  F013         	goto	_main	;jump to C main() function
  2020                           
  2021                           	psect	bssBANK0
  2022  000060                     __pbssBANK0:
  2023                           	opt callstack 0
  2024  000060                     _sensores:
  2025                           	opt callstack 0
  2026  000060                     	ds	16
  2027  000070                     _nout:
  2028                           	opt callstack 0
  2029  000070                     	ds	2
  2030  000072                     _width:
  2031                           	opt callstack 0
  2032  000072                     	ds	2
  2033  000074                     _prec:
  2034                           	opt callstack 0
  2035  000074                     	ds	2
  2036  000076                     _flags:
  2037                           	opt callstack 0
  2038  000076                     	ds	2
  2039  000078                     _contInterrupciones:
  2040                           	opt callstack 0
  2041  000078                     	ds	2
  2042  00007A                     _peticionLecturaSensores:
  2043                           	opt callstack 0
  2044  00007A                     	ds	1
  2045  00007B                     _regando:
  2046                           	opt callstack 0
  2047  00007B                     	ds	1
  2048  00007C                     _minutosTranscurridos:
  2049                           	opt callstack 0
  2050  00007C                     	ds	1
  2051  00007D                     _minutosRegar:
  2052                           	opt callstack 0
  2053  00007D                     	ds	1
  2054  00007E                     _Humedad:
  2055                           	opt callstack 0
  2056  00007E                     	ds	1
  2057  00007F                     _Temperatura:
  2058                           	opt callstack 0
  2059  00007F                     	ds	1
  2060  000080                     _flagRegado:
  2061                           	opt callstack 0
  2062  000080                     	ds	1
  2063  000081                     _tempHora:
  2064                           	opt callstack 0
  2065  000081                     	ds	1
  2066  000082                     _overflowTimer:
  2067                           	opt callstack 0
  2068  000082                     	ds	1
  2069  000083                     _datoRecibido:
  2070                           	opt callstack 0
  2071  000083                     	ds	1
  2072  000084                     _diaActual:
  2073                           	opt callstack 0
  2074  000084                     	ds	1
  2075  000085                     _segundos:
  2076                           	opt callstack 0
  2077  000085                     	ds	1
  2078  000086                     _minutos:
  2079                           	opt callstack 0
  2080  000086                     	ds	1
  2081  000087                     _hora:
  2082                           	opt callstack 0
  2083  000087                     	ds	1
  2084  000088                     _MODO_COMUNICACION:
  2085                           	opt callstack 0
  2086  000088                     	ds	1
  2087  000089                     _esperandoDatos:
  2088                           	opt callstack 0
  2089  000089                     	ds	1
  2090  00008A                     _esperaDatoConcluida:
  2091                           	opt callstack 0
  2092  00008A                     	ds	1
  2093  00008B                     _byteUart:
  2094                           	opt callstack 0
  2095  00008B                     	ds	1
  2096  00008C                     _tiempoInactividadTrans:
  2097                           	opt callstack 0
  2098  00008C                     	ds	1
  2099  00008D                     _dbuf:
  2100                           	opt callstack 0
  2101  00008D                     	ds	32
  2102  0000AD                     _bufferDias:
  2103                           	opt callstack 0
  2104  0000AD                     	ds	10
  2105                           
  2106                           	psect	dataBANK0
  2107  0000E4                     __pdataBANK0:
  2108                           	opt callstack 0
  2109  0000E4                     stoa@F1144:
  2110                           	opt callstack 0
  2111  0000E4                     	ds	7
  2112  0000EB                     _VALOR_TIMER0:
  2113                           	opt callstack 0
  2114  0000EB                     	ds	2
  2115  0000ED                     _VALOR_TIMER0UART:
  2116                           	opt callstack 0
  2117  0000ED                     	ds	2
  2118                           
  2119                           	psect	bssBANK1
  2120  000100                     __pbssBANK1:
  2121                           	opt callstack 0
  2122  000100                     _buffer:
  2123                           	opt callstack 0
  2124  000100                     	ds	70
  2125                           
  2126                           	psect	bssBIGRAM
  2127  000146                     __pbssBIGRAM:
  2128                           	opt callstack 0
  2129  000146                     _horarios:
  2130                           	opt callstack 0
  2131  000146                     	ds	288
  2132                           
  2133                           	psect	cstackBANK0
  2134  0000B7                     __pcstackBANK0:
  2135                           	opt callstack 0
  2136  0000B7                     ?_vfprintf:
  2137                           	opt callstack 0
  2138  0000B7                     vfprintf@fp:
  2139                           	opt callstack 0
  2140                           
  2141                           ; 2 bytes @ 0x0
  2142  0000B7                     	ds	2
  2143  0000B9                     vfprintf@fmt:
  2144                           	opt callstack 0
  2145                           
  2146                           ; 2 bytes @ 0x2
  2147  0000B9                     	ds	2
  2148  0000BB                     vfprintf@ap:
  2149                           	opt callstack 0
  2150                           
  2151                           ; 2 bytes @ 0x4
  2152  0000BB                     	ds	2
  2153  0000BD                     ?_sprintf:
  2154                           	opt callstack 0
  2155  0000BD                     sprintf@s:
  2156                           	opt callstack 0
  2157                           
  2158                           ; 2 bytes @ 0x6
  2159  0000BD                     	ds	2
  2160  0000BF                     sprintf@fmt:
  2161                           	opt callstack 0
  2162                           
  2163                           ; 2 bytes @ 0x8
  2164  0000BF                     	ds	12
  2165  0000CB                     sprintf@ap:
  2166                           	opt callstack 0
  2167                           
  2168                           ; 2 bytes @ 0x14
  2169  0000CB                     	ds	2
  2170  0000CD                     sprintf@f:
  2171                           	opt callstack 0
  2172                           
  2173                           ; 6 bytes @ 0x16
  2174  0000CD                     	ds	6
  2175  0000D3                     ??_dameDatosSistema:
  2176  0000D3                     asignarHorarios@Rx:
  2177                           	opt callstack 0
  2178  0000D3                     lecturaWifi@Rx:
  2179                           	opt callstack 0
  2180  0000D3                     mostrarDatosSensores@i:
  2181                           	opt callstack 0
  2182                           
  2183                           ; 2 bytes @ 0x1C
  2184  0000D3                     	ds	1
  2185  0000D4                     asignarHorarios@diaRegar:
  2186                           	opt callstack 0
  2187  0000D4                     lecturaWifi@humedadMedida:
  2188                           	opt callstack 0
  2189                           
  2190                           ; 1 bytes @ 0x1D
  2191  0000D4                     	ds	1
  2192  0000D5                     asignarHorarios@hora:
  2193                           	opt callstack 0
  2194  0000D5                     lecturaWifi@i:
  2195                           	opt callstack 0
  2196                           
  2197                           ; 2 bytes @ 0x1E
  2198  0000D5                     	ds	1
  2199  0000D6                     asignarHorarios@i:
  2200                           	opt callstack 0
  2201                           
  2202                           ; 2 bytes @ 0x1F
  2203  0000D6                     	ds	1
  2204  0000D7                     mostrarDatosSensoresWIFI@i:
  2205                           	opt callstack 0
  2206  0000D7                     _dameDatosSistema$1912:
  2207                           	opt callstack 0
  2208                           
  2209                           ; 2 bytes @ 0x20
  2210  0000D7                     	ds	2
  2211  0000D9                     _dameDatosSistema$1913:
  2212                           	opt callstack 0
  2213                           
  2214                           ; 2 bytes @ 0x22
  2215  0000D9                     	ds	2
  2216  0000DB                     _dameDatosSistema$1914:
  2217                           	opt callstack 0
  2218                           
  2219                           ; 2 bytes @ 0x24
  2220  0000DB                     	ds	2
  2221  0000DD                     dameDatosSistema@j:
  2222                           	opt callstack 0
  2223                           
  2224                           ; 2 bytes @ 0x26
  2225  0000DD                     	ds	2
  2226  0000DF                     dameDatosSistema@i:
  2227                           	opt callstack 0
  2228                           
  2229                           ; 2 bytes @ 0x28
  2230  0000DF                     	ds	2
  2231  0000E1                     ??_sistemaPrincipal:
  2232                           
  2233                           ; 1 bytes @ 0x2A
  2234  0000E1                     	ds	2
  2235  0000E3                     sistemaPrincipal@opcion:
  2236                           	opt callstack 0
  2237                           
  2238                           ; 1 bytes @ 0x2C
  2239  0000E3                     	ds	1
  2240                           
  2241                           	psect	cstackCOMRAM
  2242  000001                     __pcstackCOMRAM:
  2243                           	opt callstack 0
  2244  000001                     ??_i2c_espera:
  2245  000001                     ??_convertirDato:
  2246  000001                     ??_DHT11_Start:
  2247  000001                     ?_strlen:
  2248                           	opt callstack 0
  2249  000001                     ?_isdigit:
  2250                           	opt callstack 0
  2251  000001                     ?_isspace:
  2252                           	opt callstack 0
  2253  000001                     ?_horaRegar:
  2254                           	opt callstack 0
  2255  000001                     ?_dameHumedadSuelo:
  2256                           	opt callstack 0
  2257  000001                     ?___wmul:
  2258                           	opt callstack 0
  2259  000001                     ?___awdiv:
  2260                           	opt callstack 0
  2261  000001                     ?___awmod:
  2262                           	opt callstack 0
  2263  000001                     ?___lmul:
  2264                           	opt callstack 0
  2265  000001                     ?___aodiv:
  2266                           	opt callstack 0
  2267  000001                     ?___aomod:
  2268                           	opt callstack 0
  2269  000001                     UART_write@dato:
  2270                           	opt callstack 0
  2271  000001                     DHT11_ReadData@i:
  2272                           	opt callstack 0
  2273  000001                     check_response@respuesta:
  2274                           	opt callstack 0
  2275  000001                     constructorSensor@s:
  2276                           	opt callstack 0
  2277  000001                     ___wmul@multiplier:
  2278                           	opt callstack 0
  2279  000001                     ___awdiv@dividend:
  2280                           	opt callstack 0
  2281  000001                     ___awmod@dividend:
  2282                           	opt callstack 0
  2283  000001                     isdigit@c:
  2284                           	opt callstack 0
  2285  000001                     isspace@c:
  2286                           	opt callstack 0
  2287  000001                     fputc@c:
  2288                           	opt callstack 0
  2289  000001                     strlen@s:
  2290                           	opt callstack 0
  2291  000001                     ___lmul@multiplier:
  2292                           	opt callstack 0
  2293  000001                     ___aodiv@dividend:
  2294                           	opt callstack 0
  2295  000001                     ___aomod@dividend:
  2296                           	opt callstack 0
  2297                           
  2298                           ; 8 bytes @ 0x0
  2299  000001                     	ds	1
  2300  000002                     i2c_envia_dato@dato:
  2301                           	opt callstack 0
  2302  000002                     i2c_recibe_dato@datoleido:
  2303                           	opt callstack 0
  2304  000002                     convertirDato@dato:
  2305                           	opt callstack 0
  2306  000002                     DHT11_ReadData@data:
  2307                           	opt callstack 0
  2308  000002                     UART_printf@cadena:
  2309                           	opt callstack 0
  2310                           
  2311                           ; 2 bytes @ 0x1
  2312  000002                     	ds	1
  2313  000003                     ??_isdigit:
  2314  000003                     ??_isspace:
  2315  000003                     ??_horaRegar:
  2316  000003                     ??_dameHumedadSuelo:
  2317  000003                     escribe_rtc@dato:
  2318                           	opt callstack 0
  2319  000003                     leer_rtc@direccion:
  2320                           	opt callstack 0
  2321  000003                     convertirDato@datoR:
  2322                           	opt callstack 0
  2323  000003                     constructorSensor@porcientoHumedad:
  2324                           	opt callstack 0
  2325  000003                     leer_eeprom@direccion:
  2326                           	opt callstack 0
  2327  000003                     ___wmul@multiplicand:
  2328                           	opt callstack 0
  2329  000003                     ___awdiv@divisor:
  2330                           	opt callstack 0
  2331  000003                     ___awmod@divisor:
  2332                           	opt callstack 0
  2333  000003                     fputc@fp:
  2334                           	opt callstack 0
  2335  000003                     strlen@a:
  2336                           	opt callstack 0
  2337                           
  2338                           ; 2 bytes @ 0x2
  2339  000003                     	ds	1
  2340  000004                     ??_dameTemperaturaHumedad:
  2341  000004                     escribe_rtc@direccion:
  2342                           	opt callstack 0
  2343  000004                     leer_rtc@dato:
  2344                           	opt callstack 0
  2345  000004                     constructorSensor@pin:
  2346                           	opt callstack 0
  2347  000004                     getValue@numCharacters:
  2348                           	opt callstack 0
  2349                           
  2350                           ; 2 bytes @ 0x3
  2351  000004                     	ds	1
  2352  000005                     ??_fputc:
  2353  000005                     ??_leer_eeprom:
  2354  000005                     _horaRegar$803:
  2355                           	opt callstack 0
  2356  000005                     dameHumedadSuelo@canalLeer:
  2357                           	opt callstack 0
  2358  000005                     ___awdiv@counter:
  2359                           	opt callstack 0
  2360  000005                     ___awmod@counter:
  2361                           	opt callstack 0
  2362  000005                     restablecerDatosSensor@i:
  2363                           	opt callstack 0
  2364  000005                     ___wmul@product:
  2365                           	opt callstack 0
  2366  000005                     ___lmul@multiplicand:
  2367                           	opt callstack 0
  2368                           
  2369                           ; 4 bytes @ 0x4
  2370  000005                     	ds	1
  2371  000006                     ??_getValue:
  2372  000006                     leer_eeprom@dato:
  2373                           	opt callstack 0
  2374  000006                     ___awdiv@sign:
  2375                           	opt callstack 0
  2376  000006                     ___awmod@sign:
  2377                           	opt callstack 0
  2378  000006                     dameTemperaturaHumedad@checkSum:
  2379                           	opt callstack 0
  2380                           
  2381                           ; 2 bytes @ 0x5
  2382  000006                     	ds	1
  2383  000007                     ??_inicializarObjetos:
  2384  000007                     ??_leeHorariosMemoria:
  2385  000007                     _isspace$1578:
  2386                           	opt callstack 0
  2387  000007                     escribe_eeprom@direccion:
  2388                           	opt callstack 0
  2389  000007                     ___awdiv@quotient:
  2390                           	opt callstack 0
  2391                           
  2392                           ; 2 bytes @ 0x6
  2393  000007                     	ds	1
  2394  000008                     ?_atoi:
  2395                           	opt callstack 0
  2396  000008                     dameTemperaturaHumedad@humedadDecimal:
  2397                           	opt callstack 0
  2398  000008                     getValue@datoIncorrecto:
  2399                           	opt callstack 0
  2400  000008                     atoi@s:
  2401                           	opt callstack 0
  2402                           
  2403                           ; 2 bytes @ 0x7
  2404  000008                     	ds	1
  2405  000009                     escribe_eeprom@dato:
  2406                           	opt callstack 0
  2407  000009                     dameTemperaturaHumedad@temperaturaDecimal:
  2408                           	opt callstack 0
  2409  000009                     inicializarObjetos@j:
  2410                           	opt callstack 0
  2411  000009                     leeHorariosMemoria@j:
  2412                           	opt callstack 0
  2413  000009                     getValue@i:
  2414                           	opt callstack 0
  2415  000009                     ___lmul@product:
  2416                           	opt callstack 0
  2417  000009                     ___aodiv@divisor:
  2418                           	opt callstack 0
  2419  000009                     ___aomod@divisor:
  2420                           	opt callstack 0
  2421                           
  2422                           ; 8 bytes @ 0x8
  2423  000009                     	ds	1
  2424  00000A                     ??_atoi:
  2425  00000A                     ??_escribe_eeprom:
  2426  00000A                     ?_stoa:
  2427                           	opt callstack 0
  2428  00000A                     dameTemperaturaHumedad@humedad:
  2429                           	opt callstack 0
  2430  00000A                     stoa@fp:
  2431                           	opt callstack 0
  2432  00000A                     fputs@s:
  2433                           	opt callstack 0
  2434                           
  2435                           ; 2 bytes @ 0x9
  2436  00000A                     	ds	1
  2437  00000B                     ??_escribeHorariosMemoria:
  2438  00000B                     dameTemperaturaHumedad@temperatura:
  2439                           	opt callstack 0
  2440  00000B                     inicializarObjetos@i_806:
  2441                           	opt callstack 0
  2442  00000B                     leeHorariosMemoria@contMemoria:
  2443                           	opt callstack 0
  2444  00000B                     getValue@i_983:
  2445                           	opt callstack 0
  2446                           
  2447                           ; 2 bytes @ 0xA
  2448  00000B                     	ds	1
  2449  00000C                     ?_estaSeco:
  2450                           	opt callstack 0
  2451  00000C                     estaSeco@s:
  2452                           	opt callstack 0
  2453  00000C                     stoa@s:
  2454                           	opt callstack 0
  2455  00000C                     fputs@fp:
  2456                           	opt callstack 0
  2457                           
  2458                           ; 2 bytes @ 0xB
  2459  00000C                     	ds	1
  2460  00000D                     ?___aldiv:
  2461                           	opt callstack 0
  2462  00000D                     getValue@dato:
  2463                           	opt callstack 0
  2464  00000D                     inicializarObjetos@i:
  2465                           	opt callstack 0
  2466  00000D                     escribeHorariosMemoria@j:
  2467                           	opt callstack 0
  2468  00000D                     leeHorariosMemoria@i:
  2469                           	opt callstack 0
  2470  00000D                     ___aldiv@dividend:
  2471                           	opt callstack 0
  2472                           
  2473                           ; 4 bytes @ 0xC
  2474  00000D                     	ds	1
  2475  00000E                     ??_stoa:
  2476  00000E                     _estaSeco$796:
  2477                           	opt callstack 0
  2478  00000E                     getValue@Rx:
  2479                           	opt callstack 0
  2480  00000E                     fputs@c:
  2481                           	opt callstack 0
  2482  00000E                     atoi@neg:
  2483                           	opt callstack 0
  2484                           
  2485                           ; 2 bytes @ 0xD
  2486  00000E                     	ds	1
  2487  00000F                     ??_regadoRapido:
  2488  00000F                     ??_encenderBombas:
  2489  00000F                     setRtc@direccion:
  2490                           	opt callstack 0
  2491  00000F                     escribeHorariosMemoria@contMemoria:
  2492                           	opt callstack 0
  2493  00000F                     fputs@i:
  2494                           	opt callstack 0
  2495  00000F                     stoa@nuls:
  2496                           	opt callstack 0
  2497                           
  2498                           ; 7 bytes @ 0xE
  2499  00000F                     	ds	1
  2500  000010                     setRtc@seteado:
  2501                           	opt callstack 0
  2502  000010                     _atoi$1560:
  2503                           	opt callstack 0
  2504                           
  2505                           ; 2 bytes @ 0xF
  2506  000010                     	ds	1
  2507  000011                     ?_pad:
  2508                           	opt callstack 0
  2509  000011                     setRtc@datoRtc:
  2510                           	opt callstack 0
  2511  000011                     encenderBombas@flagSeco:
  2512                           	opt callstack 0
  2513  000011                     regadoRapido@tiempoRegar:
  2514                           	opt callstack 0
  2515  000011                     ___aodiv@counter:
  2516                           	opt callstack 0
  2517  000011                     ___aomod@counter:
  2518                           	opt callstack 0
  2519  000011                     escribeHorariosMemoria@i:
  2520                           	opt callstack 0
  2521  000011                     pad@fp:
  2522                           	opt callstack 0
  2523  000011                     ___aldiv@divisor:
  2524                           	opt callstack 0
  2525                           
  2526                           ; 4 bytes @ 0x10
  2527  000011                     	ds	1
  2528  000012                     setRtc@dato:
  2529                           	opt callstack 0
  2530  000012                     regadoRapido@areaRegar:
  2531                           	opt callstack 0
  2532  000012                     ___aodiv@sign:
  2533                           	opt callstack 0
  2534  000012                     ___aomod@sign:
  2535                           	opt callstack 0
  2536  000012                     encenderBombas@i:
  2537                           	opt callstack 0
  2538  000012                     _atoi$1562:
  2539                           	opt callstack 0
  2540                           
  2541                           ; 2 bytes @ 0x11
  2542  000012                     	ds	1
  2543  000013                     ?_abs:
  2544                           	opt callstack 0
  2545  000013                     setTiempoRegar@tiempoRegar:
  2546                           	opt callstack 0
  2547  000013                     pad@buf:
  2548                           	opt callstack 0
  2549  000013                     abs@a:
  2550                           	opt callstack 0
  2551  000013                     ___aodiv@quotient:
  2552                           	opt callstack 0
  2553                           
  2554                           ; 8 bytes @ 0x12
  2555  000013                     	ds	1
  2556  000014                     setTiempoRegar@hora:
  2557                           	opt callstack 0
  2558  000014                     _atoi$1561:
  2559                           	opt callstack 0
  2560                           
  2561                           ; 1 bytes @ 0x13
  2562  000014                     	ds	1
  2563  000015                     ??_abs:
  2564  000015                     ___aldiv@counter:
  2565                           	opt callstack 0
  2566  000015                     pad@p:
  2567                           	opt callstack 0
  2568  000015                     atoi@n:
  2569                           	opt callstack 0
  2570                           
  2571                           ; 2 bytes @ 0x14
  2572  000015                     	ds	1
  2573  000016                     ___aldiv@sign:
  2574                           	opt callstack 0
  2575  000016                     stoa@i:
  2576                           	opt callstack 0
  2577                           
  2578                           ; 2 bytes @ 0x15
  2579  000016                     	ds	1
  2580  000017                     ??_pad:
  2581  000017                     ___aldiv@quotient:
  2582                           	opt callstack 0
  2583                           
  2584                           ; 4 bytes @ 0x16
  2585  000017                     	ds	1
  2586  000018                     pad@i:
  2587                           	opt callstack 0
  2588  000018                     stoa@w:
  2589                           	opt callstack 0
  2590                           
  2591                           ; 2 bytes @ 0x17
  2592  000018                     	ds	2
  2593  00001A                     pad@w:
  2594                           	opt callstack 0
  2595  00001A                     stoa@cp:
  2596                           	opt callstack 0
  2597                           
  2598                           ; 2 bytes @ 0x19
  2599  00001A                     	ds	1
  2600  00001B                     ?_map:
  2601                           	opt callstack 0
  2602  00001B                     UART_init@BAUD:
  2603                           	opt callstack 0
  2604  00001B                     map@x:
  2605                           	opt callstack 0
  2606                           
  2607                           ; 4 bytes @ 0x1A
  2608  00001B                     	ds	1
  2609  00001C                     ?_ctoa:
  2610                           	opt callstack 0
  2611  00001C                     ?_dtoa:
  2612                           	opt callstack 0
  2613  00001C                     ctoa@fp:
  2614                           	opt callstack 0
  2615  00001C                     dtoa@fp:
  2616                           	opt callstack 0
  2617  00001C                     stoa@p:
  2618                           	opt callstack 0
  2619                           
  2620                           ; 2 bytes @ 0x1B
  2621  00001C                     	ds	2
  2622  00001E                     ctoa@c:
  2623                           	opt callstack 0
  2624  00001E                     stoa@l:
  2625                           	opt callstack 0
  2626  00001E                     dtoa@d:
  2627                           	opt callstack 0
  2628                           
  2629                           ; 8 bytes @ 0x1D
  2630  00001E                     	ds	1
  2631  00001F                     ctoa@w:
  2632                           	opt callstack 0
  2633  00001F                     map@in_min:
  2634                           	opt callstack 0
  2635                           
  2636                           ; 4 bytes @ 0x1E
  2637  00001F                     	ds	4
  2638  000023                     map@in_max:
  2639                           	opt callstack 0
  2640  000023                     _UART_init$1911:
  2641                           	opt callstack 0
  2642                           
  2643                           ; 4 bytes @ 0x22
  2644  000023                     	ds	3
  2645  000026                     ??_dtoa:
  2646                           
  2647                           ; 1 bytes @ 0x25
  2648  000026                     	ds	1
  2649  000027                     map@out_min:
  2650                           	opt callstack 0
  2651                           
  2652                           ; 4 bytes @ 0x26
  2653  000027                     	ds	4
  2654  00002B                     map@out_max:
  2655                           	opt callstack 0
  2656                           
  2657                           ; 4 bytes @ 0x2A
  2658  00002B                     	ds	3
  2659  00002E                     _dtoa$1075:
  2660                           	opt callstack 0
  2661                           
  2662                           ; 2 bytes @ 0x2D
  2663  00002E                     	ds	1
  2664  00002F                     ??_lecturaAnalogaSensores:
  2665                           
  2666                           ; 1 bytes @ 0x2E
  2667  00002F                     	ds	1
  2668  000030                     lecturaAnalogaSensores@i:
  2669                           	opt callstack 0
  2670  000030                     dtoa@p:
  2671                           	opt callstack 0
  2672                           
  2673                           ; 2 bytes @ 0x2F
  2674  000030                     	ds	2
  2675  000032                     dtoa@w:
  2676                           	opt callstack 0
  2677                           
  2678                           ; 2 bytes @ 0x31
  2679  000032                     	ds	2
  2680  000034                     dtoa@s:
  2681                           	opt callstack 0
  2682                           
  2683                           ; 2 bytes @ 0x33
  2684  000034                     	ds	2
  2685  000036                     dtoa@n:
  2686                           	opt callstack 0
  2687                           
  2688                           ; 8 bytes @ 0x35
  2689  000036                     	ds	8
  2690  00003E                     dtoa@i:
  2691                           	opt callstack 0
  2692                           
  2693                           ; 2 bytes @ 0x3D
  2694  00003E                     	ds	2
  2695  000040                     ?_vfpfcnvrt:
  2696                           	opt callstack 0
  2697  000040                     vfpfcnvrt@fp:
  2698                           	opt callstack 0
  2699                           
  2700                           ; 2 bytes @ 0x3F
  2701  000040                     	ds	2
  2702  000042                     vfpfcnvrt@fmt:
  2703                           	opt callstack 0
  2704                           
  2705                           ; 2 bytes @ 0x41
  2706  000042                     	ds	2
  2707  000044                     vfpfcnvrt@ap:
  2708                           	opt callstack 0
  2709                           
  2710                           ; 2 bytes @ 0x43
  2711  000044                     	ds	2
  2712  000046                     ??_vfpfcnvrt:
  2713                           
  2714                           ; 1 bytes @ 0x45
  2715  000046                     	ds	4
  2716  00004A                     vfpfcnvrt@ll:
  2717                           	opt callstack 0
  2718                           
  2719                           ; 8 bytes @ 0x49
  2720  00004A                     	ds	8
  2721  000052                     vfpfcnvrt@cp:
  2722                           	opt callstack 0
  2723                           
  2724                           ; 2 bytes @ 0x51
  2725  000052                     	ds	2
  2726  000054                     vfpfcnvrt@done:
  2727                           	opt callstack 0
  2728                           
  2729                           ; 2 bytes @ 0x53
  2730  000054                     	ds	2
  2731  000056                     _vfpfcnvrt$1100:
  2732                           	opt callstack 0
  2733                           
  2734                           ; 2 bytes @ 0x55
  2735  000056                     	ds	2
  2736  000058                     _vfpfcnvrt$1101:
  2737                           	opt callstack 0
  2738                           
  2739                           ; 2 bytes @ 0x57
  2740  000058                     	ds	2
  2741  00005A                     vfpfcnvrt@c:
  2742                           	opt callstack 0
  2743                           
  2744                           ; 1 bytes @ 0x59
  2745  00005A                     	ds	1
  2746  00005B                     vfprintf@cfmt:
  2747                           	opt callstack 0
  2748                           
  2749                           ; 2 bytes @ 0x5A
  2750  00005B                     	ds	2
  2751  00005D                     ??_mostrarDatosSensoresWIFI:
  2752  00005D                     ??_mostrarDatosSensores:
  2753  00005D                     ??_asignarHorarios:
  2754  00005D                     
  2755                           ; 1 bytes @ 0x5C
  2756  00005D                     	ds	2
  2757  00005F                     
  2758                           ; 1 bytes @ 0x5E
  2759 ;;
  2760 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2761 ;;
  2762 ;; *************** function _main *****************
  2763 ;; Defined at:
  2764 ;;		line 1005 in file "main.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;		None
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;		None
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      void 
  2771 ;; Registers used:
  2772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2778 ;;      Params:         0       0       0       0       0       0       0       0       0
  2779 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2781 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2782 ;;Total ram usage:        0 bytes
  2783 ;; Hardware stack levels required when called:   12
  2784 ;; This function calls:
  2785 ;;		_UART_init
  2786 ;;		_configurarAdc
  2787 ;;		_i2c_iniciar
  2788 ;;		_inicializarObjetos
  2789 ;;		_leeHorariosMemoria
  2790 ;;		_mostrarMenu
  2791 ;;		_restablecerDatosSensor
  2792 ;;		_sistemaPrincipal
  2793 ;;		_sistemaRegado
  2794 ;; This function is called by:
  2795 ;;		Startup code after reset
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           	psect	text0
  2800  002714                     __ptext0:
  2801                           	opt callstack 0
  2802  002714                     _main:
  2803                           	opt callstack 19
  2804  002714                     
  2805                           ;main.c: 1007:     INTCONbits.GIE = 1;
  2806  002714  8EF2               	bsf	242,7,c	;volatile
  2807                           
  2808                           ;main.c: 1008:     INTCONbits.PEIE = 1;
  2809  002716  8CF2               	bsf	242,6,c	;volatile
  2810                           
  2811                           ;main.c: 1009:     INTCONbits.TMR0IE = 1;
  2812  002718  8AF2               	bsf	242,5,c	;volatile
  2813                           
  2814                           ;main.c: 1011:     PIE1bits.RCIE = 1;
  2815  00271A  8A9D               	bsf	157,5,c	;volatile
  2816  00271C                     
  2817                           ;main.c: 1013:     T0CON = 0b00000111;
  2818  00271C  0E07               	movlw	7
  2819  00271E  6ED5               	movwf	213,c	;volatile
  2820  002720                     
  2821                           ;main.c: 1018:     restablecerDatosSensor();
  2822  002720  EC49  F017         	call	_restablecerDatosSensor	;wreg free
  2823  002724                     
  2824                           ;main.c: 1019:     i2c_iniciar();
  2825  002724  EC2E  F019         	call	_i2c_iniciar	;wreg free
  2826  002728                     
  2827                           ;main.c: 1020:     configurarAdc();
  2828  002728  EC52  F019         	call	_configurarAdc	;wreg free
  2829  00272C                     
  2830                           ;main.c: 1021:     UART_init(9600);
  2831  00272C  0E80               	movlw	128
  2832  00272E  6E1B               	movwf	UART_init@BAUD^0,c
  2833  002730  0E25               	movlw	37
  2834  002732  6E1C               	movwf	(UART_init@BAUD+1)^0,c
  2835  002734  0E00               	movlw	0
  2836  002736  6E1D               	movwf	(UART_init@BAUD+2)^0,c
  2837  002738  0E00               	movlw	0
  2838  00273A  6E1E               	movwf	(UART_init@BAUD+3)^0,c
  2839  00273C  EC13  F015         	call	_UART_init	;wreg free
  2840  002740                     
  2841                           ;main.c: 1022:     inicializarObjetos();
  2842  002740  EC37  F00B         	call	_inicializarObjetos	;wreg free
  2843  002744                     
  2844                           ;main.c: 1025:     leeHorariosMemoria();
  2845  002744  ECE3  F00D         	call	_leeHorariosMemoria	;wreg free
  2846  002748                     
  2847                           ;main.c: 1029:     TRISD = 0;
  2848  002748  0E00               	movlw	0
  2849  00274A  6E95               	movwf	149,c	;volatile
  2850  00274C                     
  2851                           ;main.c: 1030:     LATD = 0;
  2852  00274C  0E00               	movlw	0
  2853  00274E  6E8C               	movwf	140,c	;volatile
  2854  002750                     
  2855                           ;main.c: 1032:     TMR0 = VALOR_TIMER0;
  2856  002750  C0EB  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  2857  002754  C0EC  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  2858  002758                     
  2859                           ;main.c: 1034:     INTCONbits.TMR0IF = 1;
  2860  002758  84F2               	bsf	242,2,c	;volatile
  2861  00275A                     
  2862                           ;main.c: 1037:     T0CONbits.TMR0ON = 1;
  2863  00275A  8ED5               	bsf	213,7,c	;volatile
  2864  00275C                     
  2865                           ;main.c: 1039:     mostrarMenu();
  2866  00275C  EC61  F014         	call	_mostrarMenu	;wreg free
  2867  002760                     
  2868                           ;main.c: 1041:     MODO_COMUNICACION = 0;
  2869  002760  0E00               	movlw	0
  2870  002762  0100               	movlb	0	; () banked
  2871  002764  6F88               	movwf	_MODO_COMUNICACION& (0+255),b
  2872  002766                     l4840:
  2873                           
  2874                           ;main.c: 1046:         if (datoRecibido) {
  2875  002766  0100               	movlb	0	; () banked
  2876  002768  5183               	movf	_datoRecibido& (0+255),w,b
  2877  00276A  B4D8               	btfsc	status,2,c
  2878  00276C  EFBA  F013         	goto	u3811
  2879  002770  EFBC  F013         	goto	u3810
  2880  002774                     u3811:
  2881  002774  EFC3  F013         	goto	l4848
  2882  002778                     u3810:
  2883  002778                     
  2884                           ; BSR set to: 0
  2885                           ;main.c: 1048:             datoRecibido = 0;
  2886  002778  0E00               	movlw	0
  2887  00277A  6F83               	movwf	_datoRecibido& (0+255),b
  2888  00277C                     
  2889                           ; BSR set to: 0
  2890                           ;main.c: 1049:             byteUart -= 48;
  2891  00277C  0E30               	movlw	48
  2892  00277E  5F8B               	subwf	_byteUart& (0+255),f,b
  2893  002780                     
  2894                           ; BSR set to: 0
  2895                           ;main.c: 1050:             sistemaPrincipal(byteUart);
  2896  002780  518B               	movf	_byteUart& (0+255),w,b
  2897  002782  EC64  F011         	call	_sistemaPrincipal
  2898  002786                     l4848:
  2899                           
  2900                           ;main.c: 1054:         if (overflowTimer) {
  2901  002786  0100               	movlb	0	; () banked
  2902  002788  5182               	movf	_overflowTimer& (0+255),w,b
  2903  00278A  B4D8               	btfsc	status,2,c
  2904  00278C  EFCA  F013         	goto	u3821
  2905  002790  EFCC  F013         	goto	u3820
  2906  002794                     u3821:
  2907  002794  EFB3  F013         	goto	l4840
  2908  002798                     u3820:
  2909  002798                     
  2910                           ; BSR set to: 0
  2911                           ;main.c: 1056:             esperandoDatos = 0;
  2912  002798  0E00               	movlw	0
  2913  00279A  6F89               	movwf	_esperandoDatos& (0+255),b
  2914                           
  2915                           ;main.c: 1057:             overflowTimer = 0;
  2916  00279C  0E00               	movlw	0
  2917  00279E  6F82               	movwf	_overflowTimer& (0+255),b
  2918  0027A0                     
  2919                           ; BSR set to: 0
  2920                           ;main.c: 1058:             sistemaRegado();
  2921  0027A0  EC81  F00A         	call	_sistemaRegado	;wreg free
  2922  0027A4  EFB3  F013         	goto	l4840
  2923  0027A8  EF07  F000         	goto	start
  2924  0027AC                     __end_of_main:
  2925                           	opt callstack 0
  2926                           
  2927 ;; *************** function _sistemaRegado *****************
  2928 ;; Defined at:
  2929 ;;		line 602 in file "main.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;		None
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;		None
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  1    wreg      void 
  2936 ;; Registers used:
  2937 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2943 ;;      Params:         0       0       0       0       0       0       0       0       0
  2944 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2945 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2946 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2947 ;;Total ram usage:        0 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; Hardware stack levels required when called:   10
  2950 ;; This function calls:
  2951 ;;		_dameDiaActual
  2952 ;;		_dameHoraActual
  2953 ;;		_encenderBombas
  2954 ;;		_horaRegar
  2955 ;;		_lecturaAnalogaSensores
  2956 ;;		_lecturaWifi
  2957 ;;		_mostrarMenu
  2958 ;; This function is called by:
  2959 ;;		_main
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           	psect	text1
  2964  001502                     __ptext1:
  2965                           	opt callstack 0
  2966  001502                     _sistemaRegado:
  2967                           	opt callstack 20
  2968  001502                     
  2969                           ;main.c: 606:     if (regando) {
  2970  001502  0100               	movlb	0	; () banked
  2971  001504  517B               	movf	_regando& (0+255),w,b
  2972  001506  B4D8               	btfsc	status,2,c
  2973  001508  EF88  F00A         	goto	u3661
  2974  00150C  EF8A  F00A         	goto	u3660
  2975  001510                     u3661:
  2976  001510  EFBA  F00A         	goto	l4734
  2977  001514                     u3660:
  2978  001514                     
  2979                           ; BSR set to: 0
  2980                           ;main.c: 608:         contInterrupciones++;
  2981  001514  4B78               	infsnz	_contInterrupciones& (0+255),f,b
  2982  001516  2B79               	incf	(_contInterrupciones+1)& (0+255),f,b
  2983  001518                     
  2984                           ; BSR set to: 0
  2985                           ;main.c: 610:         if (contInterrupciones == 6) {
  2986  001518  0E06               	movlw	6
  2987  00151A  1978               	xorwf	_contInterrupciones& (0+255),w,b
  2988  00151C  1179               	iorwf	(_contInterrupciones+1)& (0+255),w,b
  2989  00151E  A4D8               	btfss	status,2,c
  2990  001520  EF94  F00A         	goto	u3671
  2991  001524  EF96  F00A         	goto	u3670
  2992  001528                     u3671:
  2993  001528  EF36  F00B         	goto	l383
  2994  00152C                     u3670:
  2995  00152C                     
  2996                           ; BSR set to: 0
  2997                           ;main.c: 611:             contInterrupciones = 0;
  2998  00152C  0E00               	movlw	0
  2999  00152E  6F79               	movwf	(_contInterrupciones+1)& (0+255),b
  3000  001530  0E00               	movlw	0
  3001  001532  6F78               	movwf	_contInterrupciones& (0+255),b
  3002  001534                     
  3003                           ; BSR set to: 0
  3004                           ;main.c: 612:             minutosTranscurridos++;
  3005  001534  2B7C               	incf	_minutosTranscurridos& (0+255),f,b
  3006  001536                     
  3007                           ; BSR set to: 0
  3008                           ;main.c: 615:             if (minutosTranscurridos >= minutosRegar) {
  3009  001536  517D               	movf	_minutosRegar& (0+255),w,b
  3010  001538  5D7C               	subwf	_minutosTranscurridos& (0+255),w,b
  3011  00153A  A0D8               	btfss	status,0,c
  3012  00153C  EFA2  F00A         	goto	u3681
  3013  001540  EFA4  F00A         	goto	u3680
  3014  001544                     u3681:
  3015  001544  EF36  F00B         	goto	l383
  3016  001548                     u3680:
  3017  001548                     
  3018                           ; BSR set to: 0
  3019                           ;main.c: 617:                 LATD = 0;
  3020  001548  0E00               	movlw	0
  3021  00154A  6E8C               	movwf	140,c	;volatile
  3022                           
  3023                           ;main.c: 618:                 minutosTranscurridos = 0;
  3024  00154C  0E00               	movlw	0
  3025  00154E  6F7C               	movwf	_minutosTranscurridos& (0+255),b
  3026                           
  3027                           ;main.c: 619:                 regando = 0;
  3028  001550  0E00               	movlw	0
  3029  001552  6F7B               	movwf	_regando& (0+255),b
  3030  001554                     
  3031                           ; BSR set to: 0
  3032                           ;main.c: 620:                 horarios[hora].regado = 1;
  3033  001554  5187               	movf	_hora& (0+255),w,b
  3034  001556  0D0C               	mullw	12
  3035  001558  0E50               	movlw	low (_horarios+10)
  3036  00155A  24F3               	addwf	243,w,c
  3037  00155C  6ED9               	movwf	fsr2l,c
  3038  00155E  0E01               	movlw	high (_horarios+10)
  3039  001560  20F4               	addwfc	prodh,w,c
  3040  001562  6EDA               	movwf	fsr2h,c
  3041  001564  0E01               	movlw	1
  3042  001566  6EDF               	movwf	indf2,c
  3043  001568                     
  3044                           ; BSR set to: 0
  3045                           ;main.c: 621:                 tempHora = hora;
  3046  001568  C087  F081         	movff	_hora,_tempHora
  3047  00156C                     
  3048                           ; BSR set to: 0
  3049                           ;main.c: 622:                 flagRegado = 0;
  3050  00156C  0E00               	movlw	0
  3051  00156E  6F80               	movwf	_flagRegado& (0+255),b
  3052  001570  EF36  F00B         	goto	l383
  3053  001574                     l4734:
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;main.c: 628:         dameHoraActual();
  3057  001574  EC96  F018         	call	_dameHoraActual	;wreg free
  3058                           
  3059                           ;main.c: 629:         dameDiaActual();
  3060  001578  EC39  F019         	call	_dameDiaActual	;wreg free
  3061  00157C                     
  3062                           ;main.c: 631:         if (hora != tempHora && !flagRegado) {
  3063  00157C  0100               	movlb	0	; () banked
  3064  00157E  5181               	movf	_tempHora& (0+255),w,b
  3065  001580  1987               	xorwf	_hora& (0+255),w,b
  3066  001582  B4D8               	btfsc	status,2,c
  3067  001584  EFC6  F00A         	goto	u3691
  3068  001588  EFC8  F00A         	goto	u3690
  3069  00158C                     u3691:
  3070  00158C  EFDC  F00A         	goto	l4744
  3071  001590                     u3690:
  3072  001590                     
  3073                           ; BSR set to: 0
  3074  001590  5180               	movf	_flagRegado& (0+255),w,b
  3075  001592  A4D8               	btfss	status,2,c
  3076  001594  EFCE  F00A         	goto	u3701
  3077  001598  EFD0  F00A         	goto	u3700
  3078  00159C                     u3701:
  3079  00159C  EFDC  F00A         	goto	l4744
  3080  0015A0                     u3700:
  3081  0015A0                     
  3082                           ; BSR set to: 0
  3083                           ;main.c: 632:             horarios[tempHora].regado = 0;
  3084  0015A0  5181               	movf	_tempHora& (0+255),w,b
  3085  0015A2  0D0C               	mullw	12
  3086  0015A4  0E50               	movlw	low (_horarios+10)
  3087  0015A6  24F3               	addwf	243,w,c
  3088  0015A8  6ED9               	movwf	fsr2l,c
  3089  0015AA  0E01               	movlw	high (_horarios+10)
  3090  0015AC  20F4               	addwfc	prodh,w,c
  3091  0015AE  6EDA               	movwf	fsr2h,c
  3092  0015B0  0E00               	movlw	0
  3093  0015B2  6EDF               	movwf	indf2,c
  3094  0015B4                     
  3095                           ; BSR set to: 0
  3096                           ;main.c: 633:             flagRegado = 1;
  3097  0015B4  0E01               	movlw	1
  3098  0015B6  6F80               	movwf	_flagRegado& (0+255),b
  3099  0015B8                     l4744:
  3100                           
  3101                           ; BSR set to: 0
  3102                           ;main.c: 636:         if ((!MODO_COMUNICACION && horaRegar()) || (MODO_COMUNICACION
  3103  0015B8  5188               	movf	_MODO_COMUNICACION& (0+255),w,b
  3104  0015BA  A4D8               	btfss	status,2,c
  3105  0015BC  EFE2  F00A         	goto	u3711
  3106  0015C0  EFE4  F00A         	goto	u3710
  3107  0015C4                     u3711:
  3108  0015C4  EFEF  F00A         	goto	l4748
  3109  0015C8                     u3710:
  3110  0015C8                     
  3111                           ; BSR set to: 0
  3112  0015C8  EC20  F014         	call	_horaRegar	;wreg free
  3113  0015CC  5001               	movf	?_horaRegar^0,w,c
  3114  0015CE  1002               	iorwf	(?_horaRegar+1)^0,w,c
  3115  0015D0  A4D8               	btfss	status,2,c
  3116  0015D2  EFED  F00A         	goto	u3721
  3117  0015D6  EFEF  F00A         	goto	u3720
  3118  0015DA                     u3721:
  3119  0015DA  EF03  F00B         	goto	l4752
  3120  0015DE                     u3720:
  3121  0015DE                     l4748:
  3122  0015DE  0100               	movlb	0	; () banked
  3123  0015E0  5188               	movf	_MODO_COMUNICACION& (0+255),w,b
  3124  0015E2  B4D8               	btfsc	status,2,c
  3125  0015E4  EFF6  F00A         	goto	u3731
  3126  0015E8  EFF8  F00A         	goto	u3730
  3127  0015EC                     u3731:
  3128  0015EC  EF36  F00B         	goto	l383
  3129  0015F0                     u3730:
  3130  0015F0                     
  3131                           ; BSR set to: 0
  3132  0015F0  EC20  F014         	call	_horaRegar	;wreg free
  3133  0015F4  5001               	movf	?_horaRegar^0,w,c
  3134  0015F6  1002               	iorwf	(?_horaRegar+1)^0,w,c
  3135  0015F8  B4D8               	btfsc	status,2,c
  3136  0015FA  EF01  F00B         	goto	u3741
  3137  0015FE  EF03  F00B         	goto	u3740
  3138  001602                     u3741:
  3139  001602  EF36  F00B         	goto	l383
  3140  001606                     u3740:
  3141  001606                     l4752:
  3142                           
  3143                           ;main.c: 637:                 && horaRegar())) {;main.c: 641:             if (MODO_COMUN
      +                          ICACION) {
  3144  001606  0100               	movlb	0	; () banked
  3145  001608  5188               	movf	_MODO_COMUNICACION& (0+255),w,b
  3146  00160A  B4D8               	btfsc	status,2,c
  3147  00160C  EF0A  F00B         	goto	u3751
  3148  001610  EF0C  F00B         	goto	u3750
  3149  001614                     u3751:
  3150  001614  EF27  F00B         	goto	l4764
  3151  001618                     u3750:
  3152  001618                     
  3153                           ; BSR set to: 0
  3154                           ;main.c: 642:                 lecturaWifi();
  3155  001618  ECA1  F00F         	call	_lecturaWifi	;wreg free
  3156  00161C                     
  3157                           ;main.c: 643:                 if (peticionLecturaSensores) {
  3158  00161C  0100               	movlb	0	; () banked
  3159  00161E  517A               	movf	_peticionLecturaSensores& (0+255),w,b
  3160  001620  B4D8               	btfsc	status,2,c
  3161  001622  EF15  F00B         	goto	u3761
  3162  001626  EF17  F00B         	goto	u3760
  3163  00162A                     u3761:
  3164  00162A  EF23  F00B         	goto	l4762
  3165  00162E                     u3760:
  3166  00162E                     
  3167                           ; BSR set to: 0
  3168                           ;main.c: 644:                     minutosRegar = horarios[hora].tiempoRegar;
  3169  00162E  5187               	movf	_hora& (0+255),w,b
  3170  001630  0D0C               	mullw	12
  3171  001632  0E51               	movlw	low (_horarios+11)
  3172  001634  24F3               	addwf	243,w,c
  3173  001636  6ED9               	movwf	fsr2l,c
  3174  001638  0E01               	movlw	high (_horarios+11)
  3175  00163A  20F4               	addwfc	prodh,w,c
  3176  00163C  6EDA               	movwf	fsr2h,c
  3177  00163E  50DF               	movf	indf2,w,c
  3178  001640  6F7D               	movwf	_minutosRegar& (0+255),b
  3179  001642                     
  3180                           ; BSR set to: 0
  3181                           ;main.c: 645:                     encenderBombas();
  3182  001642  ECEA  F005         	call	_encenderBombas	;wreg free
  3183  001646                     l4762:
  3184                           
  3185                           ;main.c: 647:                 mostrarMenu();
  3186  001646  EC61  F014         	call	_mostrarMenu	;wreg free
  3187                           
  3188                           ;main.c: 648:             } else {
  3189  00164A  EF36  F00B         	goto	l383
  3190  00164E                     l4764:
  3191                           
  3192                           ; BSR set to: 0
  3193                           ;main.c: 649:                 lecturaAnalogaSensores();
  3194  00164E  ECE4  F012         	call	_lecturaAnalogaSensores	;wreg free
  3195  001652                     
  3196                           ;main.c: 650:                 minutosRegar = horarios[hora].tiempoRegar;
  3197  001652  0100               	movlb	0	; () banked
  3198  001654  5187               	movf	_hora& (0+255),w,b
  3199  001656  0D0C               	mullw	12
  3200  001658  0E51               	movlw	low (_horarios+11)
  3201  00165A  24F3               	addwf	243,w,c
  3202  00165C  6ED9               	movwf	fsr2l,c
  3203  00165E  0E01               	movlw	high (_horarios+11)
  3204  001660  20F4               	addwfc	prodh,w,c
  3205  001662  6EDA               	movwf	fsr2h,c
  3206  001664  50DF               	movf	indf2,w,c
  3207  001666  6F7D               	movwf	_minutosRegar& (0+255),b
  3208  001668                     
  3209                           ; BSR set to: 0
  3210                           ;main.c: 651:                 encenderBombas();
  3211  001668  ECEA  F005         	call	_encenderBombas	;wreg free
  3212  00166C                     l383:
  3213  00166C  0012               	return		;funcret
  3214  00166E                     __end_of_sistemaRegado:
  3215                           	opt callstack 0
  3216                           
  3217 ;; *************** function _horaRegar *****************
  3218 ;; Defined at:
  3219 ;;		line 156 in file "main.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;		None
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;		None
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  2    0[COMRAM] int 
  3226 ;; Registers used:
  3227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3233 ;;      Params:         2       0       0       0       0       0       0       0       0
  3234 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3235 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3236 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3237 ;;Total ram usage:        5 bytes
  3238 ;; Hardware stack levels used:    1
  3239 ;; Hardware stack levels required when called:    1
  3240 ;; This function calls:
  3241 ;;		Nothing
  3242 ;; This function is called by:
  3243 ;;		_sistemaRegado
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247                           	psect	text2
  3248  002840                     __ptext2:
  3249                           	opt callstack 0
  3250  002840                     _horaRegar:
  3251                           	opt callstack 28
  3252  002840                     
  3253                           ;main.c: 158:     return (horarios[hora].regar) && (!horarios[hora].regado) &&
  3254  002840  0E00               	movlw	0
  3255  002842  6E05               	movwf	_horaRegar$803^0,c
  3256  002844  0100               	movlb	0	; () banked
  3257  002846  5187               	movf	_hora& (0+255),w,b
  3258  002848  0D0C               	mullw	12
  3259  00284A  0E4F               	movlw	low (_horarios+9)
  3260  00284C  24F3               	addwf	243,w,c
  3261  00284E  6ED9               	movwf	fsr2l,c
  3262  002850  0E01               	movlw	high (_horarios+9)
  3263  002852  20F4               	addwfc	prodh,w,c
  3264  002854  6EDA               	movwf	fsr2h,c
  3265  002856  50DF               	movf	indf2,w,c
  3266  002858  B4D8               	btfsc	status,2,c
  3267  00285A  EF31  F014         	goto	u3291
  3268  00285E  EF33  F014         	goto	u3290
  3269  002862                     u3291:
  3270  002862  EF5D  F014         	goto	l4246
  3271  002866                     u3290:
  3272  002866                     
  3273                           ; BSR set to: 0
  3274  002866  5187               	movf	_hora& (0+255),w,b
  3275  002868  0D0C               	mullw	12
  3276  00286A  0E50               	movlw	low (_horarios+10)
  3277  00286C  24F3               	addwf	243,w,c
  3278  00286E  6ED9               	movwf	fsr2l,c
  3279  002870  0E01               	movlw	high (_horarios+10)
  3280  002872  20F4               	addwfc	prodh,w,c
  3281  002874  6EDA               	movwf	fsr2h,c
  3282  002876  50DF               	movf	indf2,w,c
  3283  002878  A4D8               	btfss	status,2,c
  3284  00287A  EF41  F014         	goto	u3301
  3285  00287E  EF43  F014         	goto	u3300
  3286  002882                     u3301:
  3287  002882  EF5D  F014         	goto	l4246
  3288  002886                     u3300:
  3289  002886                     
  3290                           ; BSR set to: 0
  3291  002886  5187               	movf	_hora& (0+255),w,b
  3292  002888  0D0C               	mullw	12
  3293  00288A  0E46               	movlw	low _horarios
  3294  00288C  6E03               	movwf	??_horaRegar^0,c
  3295  00288E  0E01               	movlw	high _horarios
  3296  002890  6E04               	movwf	(??_horaRegar+1)^0,c
  3297  002892  50F3               	movf	243,w,c
  3298  002894  2603               	addwf	??_horaRegar^0,f,c
  3299  002896  50F4               	movf	244,w,c
  3300  002898  2204               	addwfc	(??_horaRegar+1)^0,f,c
  3301  00289A  5184               	movf	_diaActual& (0+255),w,b
  3302  00289C  2403               	addwf	??_horaRegar^0,w,c
  3303  00289E  6ED9               	movwf	fsr2l,c
  3304  0028A0  0E00               	movlw	0
  3305  0028A2  2004               	addwfc	(??_horaRegar+1)^0,w,c
  3306  0028A4  6EDA               	movwf	fsr2h,c
  3307  0028A6  50DF               	movf	indf2,w,c
  3308  0028A8  B4D8               	btfsc	status,2,c
  3309  0028AA  EF59  F014         	goto	u3311
  3310  0028AE  EF5B  F014         	goto	u3310
  3311  0028B2                     u3311:
  3312  0028B2  EF5D  F014         	goto	l4246
  3313  0028B6                     u3310:
  3314  0028B6                     
  3315                           ; BSR set to: 0
  3316  0028B6  0E01               	movlw	1
  3317  0028B8  6E05               	movwf	_horaRegar$803^0,c
  3318  0028BA                     l4246:
  3319                           
  3320                           ; BSR set to: 0
  3321  0028BA  C005  F001         	movff	_horaRegar$803,?_horaRegar
  3322  0028BE  6A02               	clrf	(?_horaRegar+1)^0,c
  3323  0028C0                     
  3324                           ; BSR set to: 0
  3325  0028C0  0012               	return		;funcret
  3326  0028C2                     __end_of_horaRegar:
  3327                           	opt callstack 0
  3328                           
  3329 ;; *************** function _encenderBombas *****************
  3330 ;; Defined at:
  3331 ;;		line 296 in file "main.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;		None
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  i               2   17[COMRAM] int 
  3336 ;;  flagSeco        1   16[COMRAM] unsigned char 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      void 
  3339 ;; Registers used:
  3340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3346 ;;      Params:         0       0       0       0       0       0       0       0       0
  3347 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3348 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3349 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3350 ;;Total ram usage:        5 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    5
  3353 ;; This function calls:
  3354 ;;		_estaSeco
  3355 ;; This function is called by:
  3356 ;;		_sistemaRegado
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           	psect	text3
  3361  000BD4                     __ptext3:
  3362                           	opt callstack 0
  3363  000BD4                     _encenderBombas:
  3364                           	opt callstack 24
  3365  000BD4                     
  3366                           ;main.c: 298:     char flagSeco = 0;
  3367  000BD4  0E00               	movlw	0
  3368  000BD6  6E11               	movwf	encenderBombas@flagSeco^0,c
  3369                           
  3370                           ;main.c: 300:     for (int i = 0; i < 3; i++) {
  3371  000BD8  0E00               	movlw	0
  3372  000BDA  6E13               	movwf	(encenderBombas@i+1)^0,c
  3373  000BDC  0E00               	movlw	0
  3374  000BDE  6E12               	movwf	encenderBombas@i^0,c
  3375  000BE0  EFCC  F006         	goto	l4324
  3376  000BE4                     l4274:
  3377                           
  3378                           ;main.c: 305:                 if (estaSeco(sensores[i])) {
  3379  000BE4  90D8               	bcf	status,0,c
  3380  000BE6  3412               	rlcf	encenderBombas@i^0,w,c
  3381  000BE8  6ED9               	movwf	fsr2l,c
  3382  000BEA  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3383  000BEC  6EDA               	movwf	fsr2h,c
  3384  000BEE  0E60               	movlw	low _sensores
  3385  000BF0  26D9               	addwf	fsr2l,f,c
  3386  000BF2  0E00               	movlw	high _sensores
  3387  000BF4  22DA               	addwfc	fsr2h,f,c
  3388  000BF6  CFDE F00C          	movff	postinc2,estaSeco@s
  3389  000BFA  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3390  000BFE  EC30  F018         	call	_estaSeco	;wreg free
  3391  000C02  500C               	movf	?_estaSeco^0,w,c
  3392  000C04  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3393  000C06  B4D8               	btfsc	status,2,c
  3394  000C08  EF08  F006         	goto	u3331
  3395  000C0C  EF0A  F006         	goto	u3330
  3396  000C10                     u3331:
  3397  000C10  EFFA  F006         	goto	l4326
  3398  000C14                     u3330:
  3399  000C14                     
  3400                           ;main.c: 306:                     LATDbits.LATD0 = 1;
  3401  000C14  808C               	bsf	140,0,c	;volatile
  3402  000C16                     l4278:
  3403                           
  3404                           ;main.c: 307:                     flagSeco = 1;
  3405  000C16  0E01               	movlw	1
  3406  000C18  6E11               	movwf	encenderBombas@flagSeco^0,c
  3407  000C1A  EFFA  F006         	goto	l4326
  3408  000C1E                     l4280:
  3409                           
  3410                           ;main.c: 312:                 if (estaSeco(sensores[i])) {
  3411  000C1E  90D8               	bcf	status,0,c
  3412  000C20  3412               	rlcf	encenderBombas@i^0,w,c
  3413  000C22  6ED9               	movwf	fsr2l,c
  3414  000C24  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3415  000C26  6EDA               	movwf	fsr2h,c
  3416  000C28  0E60               	movlw	low _sensores
  3417  000C2A  26D9               	addwf	fsr2l,f,c
  3418  000C2C  0E00               	movlw	high _sensores
  3419  000C2E  22DA               	addwfc	fsr2h,f,c
  3420  000C30  CFDE F00C          	movff	postinc2,estaSeco@s
  3421  000C34  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3422  000C38  EC30  F018         	call	_estaSeco	;wreg free
  3423  000C3C  500C               	movf	?_estaSeco^0,w,c
  3424  000C3E  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3425  000C40  B4D8               	btfsc	status,2,c
  3426  000C42  EF25  F006         	goto	u3341
  3427  000C46  EF27  F006         	goto	u3340
  3428  000C4A                     u3341:
  3429  000C4A  EFFA  F006         	goto	l4326
  3430  000C4E                     u3340:
  3431  000C4E                     
  3432                           ;main.c: 313:                     LATDbits.LATD1 = 1;
  3433  000C4E  828C               	bsf	140,1,c	;volatile
  3434  000C50  EF0B  F006         	goto	l4278
  3435  000C54                     l4286:
  3436                           
  3437                           ;main.c: 319:                 if (estaSeco(sensores[i])) {
  3438  000C54  90D8               	bcf	status,0,c
  3439  000C56  3412               	rlcf	encenderBombas@i^0,w,c
  3440  000C58  6ED9               	movwf	fsr2l,c
  3441  000C5A  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3442  000C5C  6EDA               	movwf	fsr2h,c
  3443  000C5E  0E60               	movlw	low _sensores
  3444  000C60  26D9               	addwf	fsr2l,f,c
  3445  000C62  0E00               	movlw	high _sensores
  3446  000C64  22DA               	addwfc	fsr2h,f,c
  3447  000C66  CFDE F00C          	movff	postinc2,estaSeco@s
  3448  000C6A  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3449  000C6E  EC30  F018         	call	_estaSeco	;wreg free
  3450  000C72  500C               	movf	?_estaSeco^0,w,c
  3451  000C74  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3452  000C76  B4D8               	btfsc	status,2,c
  3453  000C78  EF40  F006         	goto	u3351
  3454  000C7C  EF42  F006         	goto	u3350
  3455  000C80                     u3351:
  3456  000C80  EFFA  F006         	goto	l4326
  3457  000C84                     u3350:
  3458  000C84                     
  3459                           ;main.c: 320:                     LATDbits.LATD2 = 1;
  3460  000C84  848C               	bsf	140,2,c	;volatile
  3461  000C86  EF0B  F006         	goto	l4278
  3462  000C8A                     l4292:
  3463                           
  3464                           ;main.c: 326:                 if (estaSeco(sensores[i])) {
  3465  000C8A  90D8               	bcf	status,0,c
  3466  000C8C  3412               	rlcf	encenderBombas@i^0,w,c
  3467  000C8E  6ED9               	movwf	fsr2l,c
  3468  000C90  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3469  000C92  6EDA               	movwf	fsr2h,c
  3470  000C94  0E60               	movlw	low _sensores
  3471  000C96  26D9               	addwf	fsr2l,f,c
  3472  000C98  0E00               	movlw	high _sensores
  3473  000C9A  22DA               	addwfc	fsr2h,f,c
  3474  000C9C  CFDE F00C          	movff	postinc2,estaSeco@s
  3475  000CA0  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3476  000CA4  EC30  F018         	call	_estaSeco	;wreg free
  3477  000CA8  500C               	movf	?_estaSeco^0,w,c
  3478  000CAA  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3479  000CAC  B4D8               	btfsc	status,2,c
  3480  000CAE  EF5B  F006         	goto	u3361
  3481  000CB2  EF5D  F006         	goto	u3360
  3482  000CB6                     u3361:
  3483  000CB6  EFFA  F006         	goto	l4326
  3484  000CBA                     u3360:
  3485  000CBA                     
  3486                           ;main.c: 327:                     LATDbits.LATD3 = 1;
  3487  000CBA  868C               	bsf	140,3,c	;volatile
  3488  000CBC  EF0B  F006         	goto	l4278
  3489  000CC0                     l4298:
  3490                           
  3491                           ;main.c: 333:                 if (estaSeco(sensores[i])) {
  3492  000CC0  90D8               	bcf	status,0,c
  3493  000CC2  3412               	rlcf	encenderBombas@i^0,w,c
  3494  000CC4  6ED9               	movwf	fsr2l,c
  3495  000CC6  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3496  000CC8  6EDA               	movwf	fsr2h,c
  3497  000CCA  0E60               	movlw	low _sensores
  3498  000CCC  26D9               	addwf	fsr2l,f,c
  3499  000CCE  0E00               	movlw	high _sensores
  3500  000CD0  22DA               	addwfc	fsr2h,f,c
  3501  000CD2  CFDE F00C          	movff	postinc2,estaSeco@s
  3502  000CD6  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3503  000CDA  EC30  F018         	call	_estaSeco	;wreg free
  3504  000CDE  500C               	movf	?_estaSeco^0,w,c
  3505  000CE0  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3506  000CE2  B4D8               	btfsc	status,2,c
  3507  000CE4  EF76  F006         	goto	u3371
  3508  000CE8  EF78  F006         	goto	u3370
  3509  000CEC                     u3371:
  3510  000CEC  EFFA  F006         	goto	l4326
  3511  000CF0                     u3370:
  3512  000CF0                     
  3513                           ;main.c: 334:                     LATDbits.LATD4 = 1;
  3514  000CF0  888C               	bsf	140,4,c	;volatile
  3515  000CF2  EF0B  F006         	goto	l4278
  3516  000CF6                     l4304:
  3517                           
  3518                           ;main.c: 340:                 if (estaSeco(sensores[i])) {
  3519  000CF6  90D8               	bcf	status,0,c
  3520  000CF8  3412               	rlcf	encenderBombas@i^0,w,c
  3521  000CFA  6ED9               	movwf	fsr2l,c
  3522  000CFC  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3523  000CFE  6EDA               	movwf	fsr2h,c
  3524  000D00  0E60               	movlw	low _sensores
  3525  000D02  26D9               	addwf	fsr2l,f,c
  3526  000D04  0E00               	movlw	high _sensores
  3527  000D06  22DA               	addwfc	fsr2h,f,c
  3528  000D08  CFDE F00C          	movff	postinc2,estaSeco@s
  3529  000D0C  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3530  000D10  EC30  F018         	call	_estaSeco	;wreg free
  3531  000D14  500C               	movf	?_estaSeco^0,w,c
  3532  000D16  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3533  000D18  B4D8               	btfsc	status,2,c
  3534  000D1A  EF91  F006         	goto	u3381
  3535  000D1E  EF93  F006         	goto	u3380
  3536  000D22                     u3381:
  3537  000D22  EFFA  F006         	goto	l4326
  3538  000D26                     u3380:
  3539  000D26                     
  3540                           ;main.c: 341:                     LATDbits.LATD5 = 1;
  3541  000D26  8A8C               	bsf	140,5,c	;volatile
  3542  000D28  EF0B  F006         	goto	l4278
  3543  000D2C                     l4310:
  3544                           
  3545                           ;main.c: 347:                 if (estaSeco(sensores[i])) {
  3546  000D2C  90D8               	bcf	status,0,c
  3547  000D2E  3412               	rlcf	encenderBombas@i^0,w,c
  3548  000D30  6ED9               	movwf	fsr2l,c
  3549  000D32  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3550  000D34  6EDA               	movwf	fsr2h,c
  3551  000D36  0E60               	movlw	low _sensores
  3552  000D38  26D9               	addwf	fsr2l,f,c
  3553  000D3A  0E00               	movlw	high _sensores
  3554  000D3C  22DA               	addwfc	fsr2h,f,c
  3555  000D3E  CFDE F00C          	movff	postinc2,estaSeco@s
  3556  000D42  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3557  000D46  EC30  F018         	call	_estaSeco	;wreg free
  3558  000D4A  500C               	movf	?_estaSeco^0,w,c
  3559  000D4C  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3560  000D4E  B4D8               	btfsc	status,2,c
  3561  000D50  EFAC  F006         	goto	u3391
  3562  000D54  EFAE  F006         	goto	u3390
  3563  000D58                     u3391:
  3564  000D58  EFFA  F006         	goto	l4326
  3565  000D5C                     u3390:
  3566  000D5C                     
  3567                           ;main.c: 348:                     LATDbits.LATD6 = 1;
  3568  000D5C  8C8C               	bsf	140,6,c	;volatile
  3569  000D5E  EF0B  F006         	goto	l4278
  3570  000D62                     l4316:
  3571                           
  3572                           ;main.c: 354:                 if (estaSeco(sensores[i])) {
  3573  000D62  90D8               	bcf	status,0,c
  3574  000D64  3412               	rlcf	encenderBombas@i^0,w,c
  3575  000D66  6ED9               	movwf	fsr2l,c
  3576  000D68  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3577  000D6A  6EDA               	movwf	fsr2h,c
  3578  000D6C  0E60               	movlw	low _sensores
  3579  000D6E  26D9               	addwf	fsr2l,f,c
  3580  000D70  0E00               	movlw	high _sensores
  3581  000D72  22DA               	addwfc	fsr2h,f,c
  3582  000D74  CFDE F00C          	movff	postinc2,estaSeco@s
  3583  000D78  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3584  000D7C  EC30  F018         	call	_estaSeco	;wreg free
  3585  000D80  500C               	movf	?_estaSeco^0,w,c
  3586  000D82  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3587  000D84  B4D8               	btfsc	status,2,c
  3588  000D86  EFC7  F006         	goto	u3401
  3589  000D8A  EFC9  F006         	goto	u3400
  3590  000D8E                     u3401:
  3591  000D8E  EFFA  F006         	goto	l4326
  3592  000D92                     u3400:
  3593  000D92                     
  3594                           ;main.c: 355:                     LATDbits.LATD7 = 1;
  3595  000D92  8E8C               	bsf	140,7,c	;volatile
  3596  000D94  EF0B  F006         	goto	l4278
  3597  000D98                     l4324:
  3598  000D98  C012  F00F         	movff	encenderBombas@i,??_encenderBombas
  3599  000D9C  C013  F010         	movff	encenderBombas@i+1,??_encenderBombas+1
  3600                           
  3601                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3602                           ; Switch size 1, requested type "simple"
  3603                           ; Number of cases is 1, Range of values is 0 to 0
  3604                           ; switch strategies available:
  3605                           ; Name         Instructions Cycles
  3606                           ; simple_byte            4     3 (average)
  3607                           ;	Chosen strategy is simple_byte
  3608  000DA0  5010               	movf	(??_encenderBombas+1)^0,w,c
  3609  000DA2  0A00               	xorlw	0	; case 0
  3610  000DA4  B4D8               	btfsc	status,2,c
  3611  000DA6  EFD7  F006         	goto	l5064
  3612  000DAA  EFFA  F006         	goto	l4326
  3613  000DAE                     l5064:
  3614                           
  3615                           ; Switch size 1, requested type "simple"
  3616                           ; Number of cases is 8, Range of values is 0 to 7
  3617                           ; switch strategies available:
  3618                           ; Name         Instructions Cycles
  3619                           ; simple_byte           25    13 (average)
  3620                           ;	Chosen strategy is simple_byte
  3621  000DAE  500F               	movf	??_encenderBombas^0,w,c
  3622  000DB0  0A00               	xorlw	0	; case 0
  3623  000DB2  B4D8               	btfsc	status,2,c
  3624  000DB4  EFF2  F005         	goto	l4274
  3625  000DB8  0A01               	xorlw	1	; case 1
  3626  000DBA  B4D8               	btfsc	status,2,c
  3627  000DBC  EF0F  F006         	goto	l4280
  3628  000DC0  0A03               	xorlw	3	; case 2
  3629  000DC2  B4D8               	btfsc	status,2,c
  3630  000DC4  EF2A  F006         	goto	l4286
  3631  000DC8  0A01               	xorlw	1	; case 3
  3632  000DCA  B4D8               	btfsc	status,2,c
  3633  000DCC  EF45  F006         	goto	l4292
  3634  000DD0  0A07               	xorlw	7	; case 4
  3635  000DD2  B4D8               	btfsc	status,2,c
  3636  000DD4  EF60  F006         	goto	l4298
  3637  000DD8  0A01               	xorlw	1	; case 5
  3638  000DDA  B4D8               	btfsc	status,2,c
  3639  000DDC  EF7B  F006         	goto	l4304
  3640  000DE0  0A03               	xorlw	3	; case 6
  3641  000DE2  B4D8               	btfsc	status,2,c
  3642  000DE4  EF96  F006         	goto	l4310
  3643  000DE8  0A01               	xorlw	1	; case 7
  3644  000DEA  B4D8               	btfsc	status,2,c
  3645  000DEC  EFB1  F006         	goto	l4316
  3646  000DF0  EFFA  F006         	goto	l4326
  3647  000DF4                     l4326:
  3648                           
  3649                           ;main.c: 361:     }
  3650  000DF4  4A12               	infsnz	encenderBombas@i^0,f,c
  3651  000DF6  2A13               	incf	(encenderBombas@i+1)^0,f,c
  3652  000DF8  BE13               	btfsc	(encenderBombas@i+1)^0,7,c
  3653  000DFA  EF08  F007         	goto	u3411
  3654  000DFE  5013               	movf	(encenderBombas@i+1)^0,w,c
  3655  000E00  E109               	bnz	u3410
  3656  000E02  0E03               	movlw	3
  3657  000E04  5C12               	subwf	encenderBombas@i^0,w,c
  3658  000E06  A0D8               	btfss	status,0,c
  3659  000E08  EF08  F007         	goto	u3411
  3660  000E0C  EF0A  F007         	goto	u3410
  3661  000E10                     u3411:
  3662  000E10  EFCC  F006         	goto	l4324
  3663  000E14                     u3410:
  3664  000E14                     
  3665                           ;main.c: 363:     if (flagSeco) {
  3666  000E14  5011               	movf	encenderBombas@flagSeco^0,w,c
  3667  000E16  B4D8               	btfsc	status,2,c
  3668  000E18  EF10  F007         	goto	u3421
  3669  000E1C  EF12  F007         	goto	u3420
  3670  000E20                     u3421:
  3671  000E20  EF1F  F007         	goto	l306
  3672  000E24                     u3420:
  3673  000E24                     
  3674                           ;main.c: 364:         regando = 1;
  3675  000E24  0E01               	movlw	1
  3676  000E26  0100               	movlb	0	; () banked
  3677  000E28  6F7B               	movwf	_regando& (0+255),b
  3678  000E2A                     
  3679                           ; BSR set to: 0
  3680                           ;main.c: 365:         horarios[hora].regado = 0;
  3681  000E2A  5187               	movf	_hora& (0+255),w,b
  3682  000E2C  0D0C               	mullw	12
  3683  000E2E  0E50               	movlw	low (_horarios+10)
  3684  000E30  24F3               	addwf	243,w,c
  3685  000E32  6ED9               	movwf	fsr2l,c
  3686  000E34  0E01               	movlw	high (_horarios+10)
  3687  000E36  20F4               	addwfc	prodh,w,c
  3688  000E38  6EDA               	movwf	fsr2h,c
  3689  000E3A  0E00               	movlw	0
  3690  000E3C  6EDF               	movwf	indf2,c
  3691  000E3E                     l306:
  3692  000E3E  0012               	return		;funcret
  3693  000E40                     __end_of_encenderBombas:
  3694                           	opt callstack 0
  3695                           
  3696 ;; *************** function _estaSeco *****************
  3697 ;; Defined at:
  3698 ;;		line 148 in file "main.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;  s               2   11[COMRAM] struct .
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;		None
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  2   11[COMRAM] int 
  3705 ;; Registers used:
  3706 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3712 ;;      Params:         2       0       0       0       0       0       0       0       0
  3713 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3714 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3715 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3716 ;;Total ram usage:        3 bytes
  3717 ;; Hardware stack levels used:    1
  3718 ;; Hardware stack levels required when called:    4
  3719 ;; This function calls:
  3720 ;;		_dameTemperaturaHumedad
  3721 ;; This function is called by:
  3722 ;;		_encenderBombas
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text4
  3727  003060                     __ptext4:
  3728                           	opt callstack 0
  3729  003060                     _estaSeco:
  3730                           	opt callstack 24
  3731  003060                     
  3732                           ;main.c: 150:     dameTemperaturaHumedad();
  3733  003060  ECD6  F013         	call	_dameTemperaturaHumedad	;wreg free
  3734  003064                     
  3735                           ;main.c: 153:     return (s.porcientoHumedad < 94) && (Temperatura < 34);
  3736  003064  0E00               	movlw	0
  3737  003066  6E0E               	movwf	_estaSeco$796^0,c
  3738  003068  0E5E               	movlw	94
  3739  00306A  600C               	cpfslt	estaSeco@s^0,c
  3740  00306C  EF3A  F018         	goto	u3201
  3741  003070  EF3C  F018         	goto	u3200
  3742  003074                     u3201:
  3743  003074  EF47  F018         	goto	l4130
  3744  003078                     u3200:
  3745  003078  0E22               	movlw	34
  3746  00307A  0100               	movlb	0	; () banked
  3747  00307C  617F               	cpfslt	_Temperatura& (0+255),b
  3748  00307E  EF43  F018         	goto	u3211
  3749  003082  EF45  F018         	goto	u3210
  3750  003086                     u3211:
  3751  003086  EF47  F018         	goto	l4130
  3752  00308A                     u3210:
  3753  00308A                     
  3754                           ; BSR set to: 0
  3755  00308A  0E01               	movlw	1
  3756  00308C  6E0E               	movwf	_estaSeco$796^0,c
  3757  00308E                     l4130:
  3758  00308E  C00E  F00C         	movff	_estaSeco$796,?_estaSeco
  3759  003092  6A0D               	clrf	(?_estaSeco+1)^0,c
  3760  003094  0012               	return		;funcret
  3761  003096                     __end_of_estaSeco:
  3762                           	opt callstack 0
  3763                           
  3764 ;; *************** function _dameHoraActual *****************
  3765 ;; Defined at:
  3766 ;;		line 181 in file "main.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;		None
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;		None
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1    wreg      void 
  3773 ;; Registers used:
  3774 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3780 ;;      Params:         0       0       0       0       0       0       0       0       0
  3781 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3782 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3783 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3784 ;;Total ram usage:        0 bytes
  3785 ;; Hardware stack levels used:    1
  3786 ;; Hardware stack levels required when called:    4
  3787 ;; This function calls:
  3788 ;;		_convertirDato
  3789 ;;		_leer_rtc
  3790 ;; This function is called by:
  3791 ;;		_sistemaRegado
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           	psect	text5
  3796  00312C                     __ptext5:
  3797                           	opt callstack 0
  3798  00312C                     _dameHoraActual:
  3799                           	opt callstack 25
  3800  00312C                     
  3801                           ;main.c: 183:     segundos = convertirDato(leer_rtc(0x00));
  3802  00312C  0E00               	movlw	0
  3803  00312E  ECAC  F018         	call	_leer_rtc
  3804  003132  ECE7  F018         	call	_convertirDato
  3805  003136  0100               	movlb	0	; () banked
  3806  003138  6F85               	movwf	_segundos& (0+255),b
  3807                           
  3808                           ;main.c: 184:     minutos = convertirDato(leer_rtc(0x01));
  3809  00313A  0E01               	movlw	1
  3810  00313C  ECAC  F018         	call	_leer_rtc
  3811  003140  ECE7  F018         	call	_convertirDato
  3812  003144  0100               	movlb	0	; () banked
  3813  003146  6F86               	movwf	_minutos& (0+255),b
  3814                           
  3815                           ;main.c: 185:     hora = convertirDato(leer_rtc(0x02));
  3816  003148  0E02               	movlw	2
  3817  00314A  ECAC  F018         	call	_leer_rtc
  3818  00314E  ECE7  F018         	call	_convertirDato
  3819  003152  0100               	movlb	0	; () banked
  3820  003154  6F87               	movwf	_hora& (0+255),b
  3821  003156                     
  3822                           ; BSR set to: 0
  3823  003156  0012               	return		;funcret
  3824  003158                     __end_of_dameHoraActual:
  3825                           	opt callstack 0
  3826                           
  3827 ;; *************** function _dameDiaActual *****************
  3828 ;; Defined at:
  3829 ;;		line 188 in file "main.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;		None
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;		None
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  1    wreg      void 
  3836 ;; Registers used:
  3837 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3843 ;;      Params:         0       0       0       0       0       0       0       0       0
  3844 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3845 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3846 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3847 ;;Total ram usage:        0 bytes
  3848 ;; Hardware stack levels used:    1
  3849 ;; Hardware stack levels required when called:    4
  3850 ;; This function calls:
  3851 ;;		_convertirDato
  3852 ;;		_leer_rtc
  3853 ;; This function is called by:
  3854 ;;		_sistemaRegado
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           	psect	text6
  3859  003272                     __ptext6:
  3860                           	opt callstack 0
  3861  003272                     _dameDiaActual:
  3862                           	opt callstack 25
  3863  003272                     
  3864                           ;main.c: 190:     diaActual = convertirDato(leer_rtc(0x03));
  3865  003272  0E03               	movlw	3
  3866  003274  ECAC  F018         	call	_leer_rtc
  3867  003278  ECE7  F018         	call	_convertirDato
  3868  00327C  0100               	movlb	0	; () banked
  3869  00327E  6F84               	movwf	_diaActual& (0+255),b
  3870  003280                     
  3871                           ; BSR set to: 0
  3872  003280  0012               	return		;funcret
  3873  003282                     __end_of_dameDiaActual:
  3874                           	opt callstack 0
  3875                           
  3876 ;; *************** function _leer_rtc *****************
  3877 ;; Defined at:
  3878 ;;		line 13 in file "./RTC.h"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;  direccion       1    wreg     unsigned char 
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;  direccion       1    2[COMRAM] unsigned char 
  3883 ;;  dato            1    3[COMRAM] unsigned char 
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  1    wreg      unsigned char 
  3886 ;; Registers used:
  3887 ;;		wreg, status,2, status,0, cstack
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3893 ;;      Params:         0       0       0       0       0       0       0       0       0
  3894 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3895 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3896 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3897 ;;Total ram usage:        2 bytes
  3898 ;; Hardware stack levels used:    1
  3899 ;; Hardware stack levels required when called:    3
  3900 ;; This function calls:
  3901 ;;		_i2c_detener
  3902 ;;		_i2c_envia_dato
  3903 ;;		_i2c_inicia_com
  3904 ;;		_i2c_recibe_dato
  3905 ;;		_i2c_reinicia_com
  3906 ;; This function is called by:
  3907 ;;		_dameHoraActual
  3908 ;;		_dameDiaActual
  3909 ;; This function uses a non-reentrant model
  3910 ;;
  3911                           
  3912                           	psect	text7
  3913  003158                     __ptext7:
  3914                           	opt callstack 0
  3915  003158                     _leer_rtc:
  3916                           	opt callstack 25
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;incstack = 0
  3920                           ;leer_rtc@direccion stored from wreg
  3921  003158  6E03               	movwf	leer_rtc@direccion^0,c
  3922  00315A                     
  3923                           ;./RTC.h: 14:     unsigned char dato;;./RTC.h: 15:     i2c_inicia_com();
  3924  00315A  EC5B  F019         	call	_i2c_inicia_com	;wreg free
  3925                           
  3926                           ;./RTC.h: 16:     i2c_envia_dato(0xD0);
  3927  00315E  0ED0               	movlw	208
  3928  003160  EC41  F019         	call	_i2c_envia_dato
  3929                           
  3930                           ;./RTC.h: 17:     i2c_envia_dato(direccion);
  3931  003164  5003               	movf	leer_rtc@direccion^0,w,c
  3932  003166  EC41  F019         	call	_i2c_envia_dato
  3933                           
  3934                           ;./RTC.h: 18:     i2c_reinicia_com();
  3935  00316A  EC57  F019         	call	_i2c_reinicia_com	;wreg free
  3936                           
  3937                           ;./RTC.h: 19:     i2c_envia_dato(0xD1);
  3938  00316E  0ED1               	movlw	209
  3939  003170  EC41  F019         	call	_i2c_envia_dato
  3940                           
  3941                           ;./RTC.h: 20:     dato = i2c_recibe_dato();
  3942  003174  EC16  F019         	call	_i2c_recibe_dato	;wreg free
  3943  003178  6E04               	movwf	leer_rtc@dato^0,c
  3944                           
  3945                           ;./RTC.h: 21:     i2c_detener();
  3946  00317A  EC5F  F019         	call	_i2c_detener	;wreg free
  3947  00317E                     
  3948                           ;./RTC.h: 22:     return dato;
  3949  00317E  5004               	movf	leer_rtc@dato^0,w,c
  3950  003180  0012               	return		;funcret
  3951  003182                     __end_of_leer_rtc:
  3952                           	opt callstack 0
  3953                           
  3954 ;; *************** function _convertirDato *****************
  3955 ;; Defined at:
  3956 ;;		line 28 in file "./RTC.h"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  dato            1    wreg     unsigned char 
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;  dato            1    1[COMRAM] unsigned char 
  3961 ;;  datoR           1    2[COMRAM] unsigned char 
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1    wreg      unsigned char 
  3964 ;; Registers used:
  3965 ;;		wreg, status,2, status,0, prodl, prodh
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3971 ;;      Params:         0       0       0       0       0       0       0       0       0
  3972 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3973 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3974 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3975 ;;Total ram usage:        3 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; Hardware stack levels required when called:    1
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_dameHoraActual
  3982 ;;		_dameDiaActual
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           	psect	text8
  3987  0031CE                     __ptext8:
  3988                           	opt callstack 0
  3989  0031CE                     _convertirDato:
  3990                           	opt callstack 27
  3991                           
  3992                           ;incstack = 0
  3993                           ;convertirDato@dato stored from wreg
  3994  0031CE  6E02               	movwf	convertirDato@dato^0,c
  3995  0031D0                     
  3996                           ;./RTC.h: 30:     datoR = (dato & 0xF0) >> 4;
  3997  0031D0  3802               	swapf	convertirDato@dato^0,w,c
  3998  0031D2  0B0F               	andlw	15
  3999  0031D4  0B0F               	andlw	15
  4000  0031D6  6E03               	movwf	convertirDato@datoR^0,c
  4001  0031D8                     
  4002                           ;./RTC.h: 31:     datoR = (datoR * 10) + (dato & 0x0F);
  4003  0031D8  C002  F001         	movff	convertirDato@dato,??_convertirDato
  4004  0031DC  0E0F               	movlw	15
  4005  0031DE  1601               	andwf	??_convertirDato^0,f,c
  4006  0031E0  5003               	movf	convertirDato@datoR^0,w,c
  4007  0031E2  0D0A               	mullw	10
  4008  0031E4  50F3               	movf	243,w,c
  4009  0031E6  2401               	addwf	??_convertirDato^0,w,c
  4010  0031E8  6E03               	movwf	convertirDato@datoR^0,c
  4011  0031EA                     
  4012                           ;./RTC.h: 32:     return datoR;
  4013  0031EA  5003               	movf	convertirDato@datoR^0,w,c
  4014  0031EC  0012               	return		;funcret
  4015  0031EE                     __end_of_convertirDato:
  4016                           	opt callstack 0
  4017                           
  4018 ;; *************** function _sistemaPrincipal *****************
  4019 ;; Defined at:
  4020 ;;		line 555 in file "main.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;  opcion          1    wreg     unsigned char 
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;  opcion          1   44[BANK0 ] unsigned char 
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    wreg      void 
  4027 ;; Registers used:
  4028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4034 ;;      Params:         0       0       0       0       0       0       0       0       0
  4035 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4036 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4037 ;;      Totals:         0       3       0       0       0       0       0       0       0
  4038 ;;Total ram usage:        3 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:   11
  4041 ;; This function calls:
  4042 ;;		_UART_printf
  4043 ;;		_asignarHorarios
  4044 ;;		_dameDatosSistema
  4045 ;;		_fijaDiaRtc
  4046 ;;		_fijaHoraRtc
  4047 ;;		_mostrarDatosSensores
  4048 ;;		_mostrarDatosSensoresWIFI
  4049 ;;		_mostrarMenu
  4050 ;;		_regadoRapido
  4051 ;;		_setTiempoRegar
  4052 ;; This function is called by:
  4053 ;;		_main
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           	psect	text9
  4058  0022C8                     __ptext9:
  4059                           	opt callstack 0
  4060  0022C8                     _sistemaPrincipal:
  4061                           	opt callstack 19
  4062                           
  4063                           ;incstack = 0
  4064                           ;sistemaPrincipal@opcion stored from wreg
  4065  0022C8  0100               	movlb	0	; () banked
  4066  0022CA  6FE3               	movwf	sistemaPrincipal@opcion& (0+255),b
  4067  0022CC                     
  4068                           ;main.c: 557:     PIE1bits.RCIE = 0;
  4069  0022CC  9A9D               	bcf	157,5,c	;volatile
  4070                           
  4071                           ;main.c: 559:     switch (opcion) {
  4072  0022CE  EF99  F011         	goto	l4704
  4073  0022D2                     l4682:
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;main.c: 562:             fijaHoraRtc();
  4077  0022D2  EC80  F015         	call	_fijaHoraRtc	;wreg free
  4078                           
  4079                           ;main.c: 563:             break;
  4080  0022D6  EFC3  F011         	goto	l4706
  4081  0022DA                     l4684:
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;main.c: 566:             asignarHorarios();
  4085  0022DA  EC9E  F00C         	call	_asignarHorarios	;wreg free
  4086                           
  4087                           ;main.c: 567:             break;
  4088  0022DE  EFC3  F011         	goto	l4706
  4089  0022E2                     l4686:
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;main.c: 570:             setTiempoRegar();
  4093  0022E2  EC3A  F013         	call	_setTiempoRegar	;wreg free
  4094                           
  4095                           ;main.c: 571:             break;
  4096  0022E6  EFC3  F011         	goto	l4706
  4097  0022EA                     l4688:
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;main.c: 574:             dameDatosSistema();
  4101  0022EA  ECCA  F002         	call	_dameDatosSistema	;wreg free
  4102                           
  4103                           ;main.c: 575:             break;
  4104  0022EE  EFC3  F011         	goto	l4706
  4105  0022F2                     l4690:
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;main.c: 578:             if (MODO_COMUNICACION)
  4109  0022F2  5188               	movf	_MODO_COMUNICACION& (0+255),w,b
  4110  0022F4  B4D8               	btfsc	status,2,c
  4111  0022F6  EF7F  F011         	goto	u3651
  4112  0022FA  EF81  F011         	goto	u3650
  4113  0022FE                     u3651:
  4114  0022FE  EF85  F011         	goto	l4694
  4115  002302                     u3650:
  4116  002302                     
  4117                           ; BSR set to: 0
  4118                           ;main.c: 579:                 mostrarDatosSensoresWIFI();
  4119  002302  EC19  F010         	call	_mostrarDatosSensoresWIFI	;wreg free
  4120  002306  EFC3  F011         	goto	l4706
  4121  00230A                     l4694:
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;main.c: 581:                 mostrarDatosSensores();
  4125  00230A  EC90  F010         	call	_mostrarDatosSensores	;wreg free
  4126  00230E  EFC3  F011         	goto	l4706
  4127  002312                     l4696:
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;main.c: 585:             regadoRapido();
  4131  002312  EC80  F00E         	call	_regadoRapido	;wreg free
  4132                           
  4133                           ;main.c: 586:             break;
  4134  002316  EFC3  F011         	goto	l4706
  4135  00231A                     l4698:
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;main.c: 589:             fijaDiaRtc();
  4139  00231A  EC66  F018         	call	_fijaDiaRtc	;wreg free
  4140                           
  4141                           ;main.c: 590:             break;
  4142  00231E  EFC3  F011         	goto	l4706
  4143  002322                     l4700:
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;main.c: 593:             UART_printf("\r\n Solo se permiten numeros del 1 al 7 \r\n");
  4147  002322  0E46               	movlw	low STR_31
  4148  002324  6E02               	movwf	UART_printf@cadena^0,c
  4149  002326  0E7C               	movlw	high STR_31
  4150  002328  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4151  00232A  EC16  F016         	call	_UART_printf	;wreg free
  4152                           
  4153                           ;main.c: 594:             break;
  4154  00232E  EFC3  F011         	goto	l4706
  4155  002332                     l4704:
  4156  002332  0100               	movlb	0	; () banked
  4157  002334  51E3               	movf	sistemaPrincipal@opcion& (0+255),w,b
  4158  002336  6FE1               	movwf	??_sistemaPrincipal& (0+255),b
  4159  002338  6BE2               	clrf	(??_sistemaPrincipal+1)& (0+255),b
  4160                           
  4161                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4162                           ; Switch size 1, requested type "simple"
  4163                           ; Number of cases is 1, Range of values is 0 to 0
  4164                           ; switch strategies available:
  4165                           ; Name         Instructions Cycles
  4166                           ; simple_byte            4     3 (average)
  4167                           ;	Chosen strategy is simple_byte
  4168  00233A  51E2               	movf	(??_sistemaPrincipal+1)& (0+255),w,b
  4169  00233C  0A00               	xorlw	0	; case 0
  4170  00233E  B4D8               	btfsc	status,2,c
  4171  002340  EFA4  F011         	goto	l5066
  4172  002344  EF91  F011         	goto	l4700
  4173  002348                     l5066:
  4174                           
  4175                           ; BSR set to: 0
  4176                           ; Switch size 1, requested type "simple"
  4177                           ; Number of cases is 7, Range of values is 1 to 7
  4178                           ; switch strategies available:
  4179                           ; Name         Instructions Cycles
  4180                           ; simple_byte           22    12 (average)
  4181                           ;	Chosen strategy is simple_byte
  4182  002348  51E1               	movf	??_sistemaPrincipal& (0+255),w,b
  4183  00234A  0A01               	xorlw	1	; case 1
  4184  00234C  B4D8               	btfsc	status,2,c
  4185  00234E  EF69  F011         	goto	l4682
  4186  002352  0A03               	xorlw	3	; case 2
  4187  002354  B4D8               	btfsc	status,2,c
  4188  002356  EF6D  F011         	goto	l4684
  4189  00235A  0A01               	xorlw	1	; case 3
  4190  00235C  B4D8               	btfsc	status,2,c
  4191  00235E  EF71  F011         	goto	l4686
  4192  002362  0A07               	xorlw	7	; case 4
  4193  002364  B4D8               	btfsc	status,2,c
  4194  002366  EF75  F011         	goto	l4688
  4195  00236A  0A01               	xorlw	1	; case 5
  4196  00236C  B4D8               	btfsc	status,2,c
  4197  00236E  EF79  F011         	goto	l4690
  4198  002372  0A03               	xorlw	3	; case 6
  4199  002374  B4D8               	btfsc	status,2,c
  4200  002376  EF89  F011         	goto	l4696
  4201  00237A  0A01               	xorlw	1	; case 7
  4202  00237C  B4D8               	btfsc	status,2,c
  4203  00237E  EF8D  F011         	goto	l4698
  4204  002382  EF91  F011         	goto	l4700
  4205  002386                     l4706:
  4206                           
  4207                           ;main.c: 597:     mostrarMenu();
  4208  002386  EC61  F014         	call	_mostrarMenu	;wreg free
  4209  00238A                     
  4210                           ;main.c: 598:     PIE1bits.RCIE = 1;
  4211  00238A  8A9D               	bsf	157,5,c	;volatile
  4212  00238C  0012               	return		;funcret
  4213  00238E                     __end_of_sistemaPrincipal:
  4214                           	opt callstack 0
  4215                           
  4216 ;; *************** function _setTiempoRegar *****************
  4217 ;; Defined at:
  4218 ;;		line 437 in file "main.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;		None
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;  hora            1   19[COMRAM] unsigned char 
  4223 ;;  tiempoRegar     1   18[COMRAM] unsigned char 
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1    wreg      void 
  4226 ;; Registers used:
  4227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4233 ;;      Params:         0       0       0       0       0       0       0       0       0
  4234 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4235 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4236 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4237 ;;Total ram usage:        2 bytes
  4238 ;; Hardware stack levels used:    1
  4239 ;; Hardware stack levels required when called:    5
  4240 ;; This function calls:
  4241 ;;		_UART_printf
  4242 ;;		_escribeHorariosMemoria
  4243 ;;		_getValue
  4244 ;; This function is called by:
  4245 ;;		_sistemaPrincipal
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249                           	psect	text10
  4250  002674                     __ptext10:
  4251                           	opt callstack 0
  4252  002674                     _setTiempoRegar:
  4253                           	opt callstack 24
  4254  002674                     
  4255                           ;main.c: 439:     unsigned char hora;;main.c: 440:     unsigned char tiempoRegar;;main.c
      +                          : 442:     UART_printf("\r\n TIEMPO DE REGADO \r\n");
  4256  002674  0E47               	movlw	low STR_14
  4257  002676  6E02               	movwf	UART_printf@cadena^0,c
  4258  002678  0E7F               	movlw	high STR_14
  4259  00267A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4260  00267C  EC16  F016         	call	_UART_printf	;wreg free
  4261                           
  4262                           ;main.c: 444:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  4263  002680  0E57               	movlw	low STR_8
  4264  002682  6E02               	movwf	UART_printf@cadena^0,c
  4265  002684  0E7B               	movlw	high STR_8
  4266  002686  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4267  002688  EC16  F016         	call	_UART_printf	;wreg free
  4268  00268C                     
  4269                           ;main.c: 445:     hora = getValue(2);
  4270  00268C  0E00               	movlw	0
  4271  00268E  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4272  002690  0E02               	movlw	2
  4273  002692  6E04               	movwf	getValue@numCharacters^0,c
  4274  002694  EC20  F007         	call	_getValue	;wreg free
  4275  002698  6E14               	movwf	setTiempoRegar@hora^0,c
  4276  00269A                     
  4277                           ;main.c: 447:     if (hora != '@') {
  4278  00269A  0E40               	movlw	64
  4279  00269C  1814               	xorwf	setTiempoRegar@hora^0,w,c
  4280  00269E  B4D8               	btfsc	status,2,c
  4281  0026A0  EF54  F013         	goto	u3491
  4282  0026A4  EF56  F013         	goto	u3490
  4283  0026A8                     u3491:
  4284  0026A8  EF89  F013         	goto	l324
  4285  0026AC                     u3490:
  4286  0026AC                     
  4287                           ;main.c: 449:         UART_printf("\r\n Ingrese los minutos que desee que se riegue en e
      +                          se horario ej: 15 \r\n");
  4288  0026AC  0E3D               	movlw	low STR_16
  4289  0026AE  6E02               	movwf	UART_printf@cadena^0,c
  4290  0026B0  0E79               	movlw	high STR_16
  4291  0026B2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4292  0026B4  EC16  F016         	call	_UART_printf	;wreg free
  4293  0026B8                     
  4294                           ;main.c: 450:         tiempoRegar = getValue(2);
  4295  0026B8  0E00               	movlw	0
  4296  0026BA  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4297  0026BC  0E02               	movlw	2
  4298  0026BE  6E04               	movwf	getValue@numCharacters^0,c
  4299  0026C0  EC20  F007         	call	_getValue	;wreg free
  4300  0026C4  6E13               	movwf	setTiempoRegar@tiempoRegar^0,c
  4301  0026C6                     
  4302                           ;main.c: 452:         if (tiempoRegar != '@') {
  4303  0026C6  0E40               	movlw	64
  4304  0026C8  1813               	xorwf	setTiempoRegar@tiempoRegar^0,w,c
  4305  0026CA  B4D8               	btfsc	status,2,c
  4306  0026CC  EF6A  F013         	goto	u3501
  4307  0026D0  EF6C  F013         	goto	u3500
  4308  0026D4                     u3501:
  4309  0026D4  EF89  F013         	goto	l324
  4310  0026D8                     u3500:
  4311  0026D8                     
  4312                           ;main.c: 456:             UART_printf("\r\n Minutos de riego establecidos! \r\n");
  4313  0026D8  0E96               	movlw	low STR_17
  4314  0026DA  6E02               	movwf	UART_printf@cadena^0,c
  4315  0026DC  0E7C               	movlw	high STR_17
  4316  0026DE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4317  0026E0  EC16  F016         	call	_UART_printf	;wreg free
  4318  0026E4                     
  4319                           ;main.c: 458:             horarios[hora].tiempoRegar = tiempoRegar;
  4320  0026E4  5014               	movf	setTiempoRegar@hora^0,w,c
  4321  0026E6  0D0C               	mullw	12
  4322  0026E8  0E51               	movlw	low (_horarios+11)
  4323  0026EA  24F3               	addwf	243,w,c
  4324  0026EC  6ED9               	movwf	fsr2l,c
  4325  0026EE  0E01               	movlw	high (_horarios+11)
  4326  0026F0  20F4               	addwfc	prodh,w,c
  4327  0026F2  6EDA               	movwf	fsr2h,c
  4328  0026F4  C013  FFDF         	movff	setTiempoRegar@tiempoRegar,indf2
  4329  0026F8                     
  4330                           ;main.c: 459:             minutosRegar = horarios[hora].tiempoRegar;
  4331  0026F8  5014               	movf	setTiempoRegar@hora^0,w,c
  4332  0026FA  0D0C               	mullw	12
  4333  0026FC  0E51               	movlw	low (_horarios+11)
  4334  0026FE  24F3               	addwf	243,w,c
  4335  002700  6ED9               	movwf	fsr2l,c
  4336  002702  0E01               	movlw	high (_horarios+11)
  4337  002704  20F4               	addwfc	prodh,w,c
  4338  002706  6EDA               	movwf	fsr2h,c
  4339  002708  50DF               	movf	indf2,w,c
  4340  00270A  0100               	movlb	0	; () banked
  4341  00270C  6F7D               	movwf	_minutosRegar& (0+255),b
  4342  00270E                     
  4343                           ; BSR set to: 0
  4344                           ;main.c: 461:             escribeHorariosMemoria();
  4345  00270E  EC42  F00D         	call	_escribeHorariosMemoria	;wreg free
  4346  002712                     l324:
  4347  002712  0012               	return		;funcret
  4348  002714                     __end_of_setTiempoRegar:
  4349                           	opt callstack 0
  4350                           
  4351 ;; *************** function _regadoRapido *****************
  4352 ;; Defined at:
  4353 ;;		line 935 in file "main.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;		None
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;  areaRegar       1   17[COMRAM] unsigned char 
  4358 ;;  tiempoRegar     1   16[COMRAM] unsigned char 
  4359 ;; Return value:  Size  Location     Type
  4360 ;;                  1    wreg      void 
  4361 ;; Registers used:
  4362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4363 ;; Tracked objects:
  4364 ;;		On entry : 0/0
  4365 ;;		On exit  : 0/0
  4366 ;;		Unchanged: 0/0
  4367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4368 ;;      Params:         0       0       0       0       0       0       0       0       0
  4369 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4370 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4371 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4372 ;;Total ram usage:        4 bytes
  4373 ;; Hardware stack levels used:    1
  4374 ;; Hardware stack levels required when called:    4
  4375 ;; This function calls:
  4376 ;;		_UART_printf
  4377 ;;		_getValue
  4378 ;; This function is called by:
  4379 ;;		_sistemaPrincipal
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	text11
  4384  001D00                     __ptext11:
  4385                           	opt callstack 0
  4386  001D00                     _regadoRapido:
  4387                           	opt callstack 25
  4388  001D00                     
  4389                           ;main.c: 937:     unsigned char tiempoRegar;;main.c: 938:     unsigned char areaRegar;;m
      +                          ain.c: 940:     UART_printf("\r\n REGADO RAPIDO \r\n");
  4390  001D00  0E8C               	movlw	low STR_53
  4391  001D02  6E02               	movwf	UART_printf@cadena^0,c
  4392  001D04  0E7F               	movlw	high STR_53
  4393  001D06  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4394  001D08  EC16  F016         	call	_UART_printf	;wreg free
  4395  001D0C                     
  4396                           ;main.c: 942:     if (!regando) {
  4397  001D0C  0100               	movlb	0	; () banked
  4398  001D0E  517B               	movf	_regando& (0+255),w,b
  4399  001D10  A4D8               	btfss	status,2,c
  4400  001D12  EF8D  F00E         	goto	u3571
  4401  001D16  EF8F  F00E         	goto	u3570
  4402  001D1A                     u3571:
  4403  001D1A  EF14  F00F         	goto	l4576
  4404  001D1E                     u3570:
  4405  001D1E                     
  4406                           ; BSR set to: 0
  4407                           ;main.c: 943:         UART_printf("\r\n Ingrese los minutos que desee que se riegue ej: 
      +                          15 \r\n");
  4408  001D1E  0EB2               	movlw	low STR_54
  4409  001D20  6E02               	movwf	UART_printf@cadena^0,c
  4410  001D22  0E7A               	movlw	high STR_54
  4411  001D24  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4412  001D26  EC16  F016         	call	_UART_printf	;wreg free
  4413  001D2A                     
  4414                           ;main.c: 944:         tiempoRegar = getValue(2);
  4415  001D2A  0E00               	movlw	0
  4416  001D2C  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4417  001D2E  0E02               	movlw	2
  4418  001D30  6E04               	movwf	getValue@numCharacters^0,c
  4419  001D32  EC20  F007         	call	_getValue	;wreg free
  4420  001D36  6E11               	movwf	regadoRapido@tiempoRegar^0,c
  4421  001D38                     
  4422                           ;main.c: 946:         if (tiempoRegar != '@') {
  4423  001D38  0E40               	movlw	64
  4424  001D3A  1811               	xorwf	regadoRapido@tiempoRegar^0,w,c
  4425  001D3C  B4D8               	btfsc	status,2,c
  4426  001D3E  EFA3  F00E         	goto	u3581
  4427  001D42  EFA5  F00E         	goto	u3580
  4428  001D46                     u3581:
  4429  001D46  EF1A  F00F         	goto	l478
  4430  001D4A                     u3580:
  4431  001D4A                     
  4432                           ;main.c: 948:             UART_printf("\r\n Ingrese el numero de sensor del area a regar
      +                           ej: 5 \r\n");
  4433  001D4A  0E79               	movlw	low STR_55
  4434  001D4C  6E02               	movwf	UART_printf@cadena^0,c
  4435  001D4E  0E7A               	movlw	high STR_55
  4436  001D50  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4437  001D52  EC16  F016         	call	_UART_printf	;wreg free
  4438  001D56                     
  4439                           ;main.c: 949:             areaRegar = getValue(1);
  4440  001D56  0E00               	movlw	0
  4441  001D58  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4442  001D5A  0E01               	movlw	1
  4443  001D5C  6E04               	movwf	getValue@numCharacters^0,c
  4444  001D5E  EC20  F007         	call	_getValue	;wreg free
  4445  001D62  6E12               	movwf	regadoRapido@areaRegar^0,c
  4446  001D64                     
  4447                           ;main.c: 951:             if (areaRegar != '@') {
  4448  001D64  0E40               	movlw	64
  4449  001D66  1812               	xorwf	regadoRapido@areaRegar^0,w,c
  4450  001D68  B4D8               	btfsc	status,2,c
  4451  001D6A  EFB9  F00E         	goto	u3591
  4452  001D6E  EFBB  F00E         	goto	u3590
  4453  001D72                     u3591:
  4454  001D72  EF1A  F00F         	goto	l478
  4455  001D76                     u3590:
  4456  001D76                     
  4457                           ;main.c: 953:                 areaRegar--;
  4458  001D76  0612               	decf	regadoRapido@areaRegar^0,f,c
  4459                           
  4460                           ;main.c: 955:                 switch (areaRegar) {
  4461  001D78  EFD6  F00E         	goto	l4568
  4462  001D7C                     l468:
  4463                           
  4464                           ;main.c: 958:                         LATDbits.LATD0 = 1;
  4465  001D7C  808C               	bsf	140,0,c	;volatile
  4466                           
  4467                           ;main.c: 959:                         break;
  4468  001D7E  EF03  F00F         	goto	l4570
  4469  001D82                     l470:
  4470                           
  4471                           ;main.c: 962:                         LATDbits.LATD1 = 1;
  4472  001D82  828C               	bsf	140,1,c	;volatile
  4473                           
  4474                           ;main.c: 963:                         break;
  4475  001D84  EF03  F00F         	goto	l4570
  4476  001D88                     l471:
  4477                           
  4478                           ;main.c: 966:                         LATDbits.LATD2 = 1;
  4479  001D88  848C               	bsf	140,2,c	;volatile
  4480                           
  4481                           ;main.c: 967:                         break;
  4482  001D8A  EF03  F00F         	goto	l4570
  4483  001D8E                     l472:
  4484                           
  4485                           ;main.c: 970:                         LATDbits.LATD3 = 1;
  4486  001D8E  868C               	bsf	140,3,c	;volatile
  4487                           
  4488                           ;main.c: 971:                         break;
  4489  001D90  EF03  F00F         	goto	l4570
  4490  001D94                     l473:
  4491                           
  4492                           ;main.c: 974:                         LATDbits.LATD4 = 1;
  4493  001D94  888C               	bsf	140,4,c	;volatile
  4494                           
  4495                           ;main.c: 975:                         break;
  4496  001D96  EF03  F00F         	goto	l4570
  4497  001D9A                     l474:
  4498                           
  4499                           ;main.c: 978:                         LATDbits.LATD5 = 1;
  4500  001D9A  8A8C               	bsf	140,5,c	;volatile
  4501                           
  4502                           ;main.c: 979:                         break;
  4503  001D9C  EF03  F00F         	goto	l4570
  4504  001DA0                     l475:
  4505                           
  4506                           ;main.c: 982:                         LATDbits.LATD6 = 1;
  4507  001DA0  8C8C               	bsf	140,6,c	;volatile
  4508                           
  4509                           ;main.c: 983:                         break;
  4510  001DA2  EF03  F00F         	goto	l4570
  4511  001DA6                     l476:
  4512                           
  4513                           ;main.c: 986:                         LATDbits.LATD7 = 1;
  4514  001DA6  8E8C               	bsf	140,7,c	;volatile
  4515                           
  4516                           ;main.c: 987:                         break;
  4517  001DA8  EF03  F00F         	goto	l4570
  4518  001DAC                     l4568:
  4519  001DAC  5012               	movf	regadoRapido@areaRegar^0,w,c
  4520  001DAE  6E0F               	movwf	??_regadoRapido^0,c
  4521  001DB0  6A10               	clrf	(??_regadoRapido+1)^0,c
  4522                           
  4523                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4524                           ; Switch size 1, requested type "simple"
  4525                           ; Number of cases is 1, Range of values is 0 to 0
  4526                           ; switch strategies available:
  4527                           ; Name         Instructions Cycles
  4528                           ; simple_byte            4     3 (average)
  4529                           ;	Chosen strategy is simple_byte
  4530  001DB2  5010               	movf	(??_regadoRapido+1)^0,w,c
  4531  001DB4  0A00               	xorlw	0	; case 0
  4532  001DB6  B4D8               	btfsc	status,2,c
  4533  001DB8  EFE0  F00E         	goto	l5068
  4534  001DBC  EF03  F00F         	goto	l4570
  4535  001DC0                     l5068:
  4536                           
  4537                           ; Switch size 1, requested type "simple"
  4538                           ; Number of cases is 8, Range of values is 0 to 7
  4539                           ; switch strategies available:
  4540                           ; Name         Instructions Cycles
  4541                           ; simple_byte           25    13 (average)
  4542                           ;	Chosen strategy is simple_byte
  4543  001DC0  500F               	movf	??_regadoRapido^0,w,c
  4544  001DC2  0A00               	xorlw	0	; case 0
  4545  001DC4  B4D8               	btfsc	status,2,c
  4546  001DC6  EFBE  F00E         	goto	l468
  4547  001DCA  0A01               	xorlw	1	; case 1
  4548  001DCC  B4D8               	btfsc	status,2,c
  4549  001DCE  EFC1  F00E         	goto	l470
  4550  001DD2  0A03               	xorlw	3	; case 2
  4551  001DD4  B4D8               	btfsc	status,2,c
  4552  001DD6  EFC4  F00E         	goto	l471
  4553  001DDA  0A01               	xorlw	1	; case 3
  4554  001DDC  B4D8               	btfsc	status,2,c
  4555  001DDE  EFC7  F00E         	goto	l472
  4556  001DE2  0A07               	xorlw	7	; case 4
  4557  001DE4  B4D8               	btfsc	status,2,c
  4558  001DE6  EFCA  F00E         	goto	l473
  4559  001DEA  0A01               	xorlw	1	; case 5
  4560  001DEC  B4D8               	btfsc	status,2,c
  4561  001DEE  EFCD  F00E         	goto	l474
  4562  001DF2  0A03               	xorlw	3	; case 6
  4563  001DF4  B4D8               	btfsc	status,2,c
  4564  001DF6  EFD0  F00E         	goto	l475
  4565  001DFA  0A01               	xorlw	1	; case 7
  4566  001DFC  B4D8               	btfsc	status,2,c
  4567  001DFE  EFD3  F00E         	goto	l476
  4568  001E02  EF03  F00F         	goto	l4570
  4569  001E06                     l4570:
  4570                           
  4571                           ;main.c: 991:                 regando = 1;
  4572  001E06  0E01               	movlw	1
  4573  001E08  0100               	movlb	0	; () banked
  4574  001E0A  6F7B               	movwf	_regando& (0+255),b
  4575  001E0C                     
  4576                           ; BSR set to: 0
  4577                           ;main.c: 992:                 horarios[hora].regado = 0;
  4578  001E0C  5187               	movf	_hora& (0+255),w,b
  4579  001E0E  0D0C               	mullw	12
  4580  001E10  0E50               	movlw	low (_horarios+10)
  4581  001E12  24F3               	addwf	243,w,c
  4582  001E14  6ED9               	movwf	fsr2l,c
  4583  001E16  0E01               	movlw	high (_horarios+10)
  4584  001E18  20F4               	addwfc	prodh,w,c
  4585  001E1A  6EDA               	movwf	fsr2h,c
  4586  001E1C  0E00               	movlw	0
  4587  001E1E  6EDF               	movwf	indf2,c
  4588  001E20                     
  4589                           ; BSR set to: 0
  4590                           ;main.c: 993:                 minutosRegar = tiempoRegar;
  4591  001E20  C011  F07D         	movff	regadoRapido@tiempoRegar,_minutosRegar
  4592  001E24  EF1A  F00F         	goto	l478
  4593  001E28                     l4576:
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;main.c: 1000:         UART_printf("\r\n Ya se esta efectuando un riego, intentelo mas t
      +                          arde \r\n");
  4597  001E28  0E3F               	movlw	low STR_56
  4598  001E2A  6E02               	movwf	UART_printf@cadena^0,c
  4599  001E2C  0E7A               	movlw	high STR_56
  4600  001E2E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4601  001E30  EC16  F016         	call	_UART_printf	;wreg free
  4602  001E34                     l478:
  4603  001E34  0012               	return		;funcret
  4604  001E36                     __end_of_regadoRapido:
  4605                           	opt callstack 0
  4606                           
  4607 ;; *************** function _mostrarMenu *****************
  4608 ;; Defined at:
  4609 ;;		line 541 in file "main.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;		None
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;		None
  4614 ;; Return value:  Size  Location     Type
  4615 ;;                  1    wreg      void 
  4616 ;; Registers used:
  4617 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4623 ;;      Params:         0       0       0       0       0       0       0       0       0
  4624 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4625 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4626 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4627 ;;Total ram usage:        0 bytes
  4628 ;; Hardware stack levels used:    1
  4629 ;; Hardware stack levels required when called:    3
  4630 ;; This function calls:
  4631 ;;		_UART_printf
  4632 ;; This function is called by:
  4633 ;;		_sistemaPrincipal
  4634 ;;		_sistemaRegado
  4635 ;;		_main
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639                           	psect	text12
  4640  0028C2                     __ptext12:
  4641                           	opt callstack 0
  4642  0028C2                     _mostrarMenu:
  4643                           	opt callstack 26
  4644  0028C2                     
  4645                           ;main.c: 543:     UART_printf("\r\n Ingresa una opcion a Realizar: \r\n");
  4646  0028C2  0EBB               	movlw	low STR_21
  4647  0028C4  6E02               	movwf	UART_printf@cadena^0,c
  4648  0028C6  0E7C               	movlw	high STR_21
  4649  0028C8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4650  0028CA  EC16  F016         	call	_UART_printf	;wreg free
  4651                           
  4652                           ;main.c: 544:     UART_printf("\r\n 1. Fijar Hora Actual \r\n");
  4653  0028CE  0E31               	movlw	low STR_22
  4654  0028D0  6E02               	movwf	UART_printf@cadena^0,c
  4655  0028D2  0E7E               	movlw	high STR_22
  4656  0028D4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4657  0028D6  EC16  F016         	call	_UART_printf	;wreg free
  4658                           
  4659                           ;main.c: 545:     UART_printf("\r\n 2. Asignar Horarios para regar \r\n");
  4660  0028DA  0E2A               	movlw	low STR_23
  4661  0028DC  6E02               	movwf	UART_printf@cadena^0,c
  4662  0028DE  0E7D               	movlw	high STR_23
  4663  0028E0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4664  0028E2  EC16  F016         	call	_UART_printf	;wreg free
  4665                           
  4666                           ;main.c: 546:     UART_printf("\r\n 3. Programar tiempo de riego en un horario \r\n");
  4667  0028E6  0EBD               	movlw	low STR_24
  4668  0028E8  6E02               	movwf	UART_printf@cadena^0,c
  4669  0028EA  0E7B               	movlw	high STR_24
  4670  0028EC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4671  0028EE  EC16  F016         	call	_UART_printf	;wreg free
  4672                           
  4673                           ;main.c: 547:     UART_printf("\r\n 4. Dame datos del sistema \r\n");
  4674  0028F2  0EB5               	movlw	low STR_25
  4675  0028F4  6E02               	movwf	UART_printf@cadena^0,c
  4676  0028F6  0E7D               	movlw	high STR_25
  4677  0028F8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4678  0028FA  EC16  F016         	call	_UART_printf	;wreg free
  4679                           
  4680                           ;main.c: 548:     UART_printf("\r\n 5. Mostrar valores sensores \r\n");
  4681  0028FE  0E73               	movlw	low STR_26
  4682  002900  6E02               	movwf	UART_printf@cadena^0,c
  4683  002902  0E7D               	movlw	high STR_26
  4684  002904  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4685  002906  EC16  F016         	call	_UART_printf	;wreg free
  4686                           
  4687                           ;main.c: 549:     UART_printf("\r\n 6. Regado rapido \r\n");
  4688  00290A  0E5E               	movlw	low STR_27
  4689  00290C  6E02               	movwf	UART_printf@cadena^0,c
  4690  00290E  0E7F               	movlw	high STR_27
  4691  002910  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4692  002912  EC16  F016         	call	_UART_printf	;wreg free
  4693                           
  4694                           ;main.c: 550:     UART_printf("\r\n 7. Fijar Dia Actual \r\n");
  4695  002916  0E81               	movlw	low STR_28
  4696  002918  6E02               	movwf	UART_printf@cadena^0,c
  4697  00291A  0E7E               	movlw	high STR_28
  4698  00291C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4699  00291E  EC16  F016         	call	_UART_printf	;wreg free
  4700                           
  4701                           ;main.c: 551:     UART_printf("\r\n Opcion:  \r");
  4702  002922  0ED3               	movlw	low STR_29
  4703  002924  6E02               	movwf	UART_printf@cadena^0,c
  4704  002926  0E7F               	movlw	high STR_29
  4705  002928  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4706  00292A  EC16  F016         	call	_UART_printf	;wreg free
  4707                           
  4708                           ;main.c: 552:     UART_printf("\r\n");
  4709  00292E  0E7E               	movlw	low (STR_13+23)
  4710  002930  6E02               	movwf	UART_printf@cadena^0,c
  4711  002932  0E7E               	movlw	high (STR_13+23)
  4712  002934  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4713  002936  EC16  F016         	call	_UART_printf	;wreg free
  4714  00293A  0012               	return		;funcret
  4715  00293C                     __end_of_mostrarMenu:
  4716                           	opt callstack 0
  4717                           
  4718 ;; *************** function _mostrarDatosSensoresWIFI *****************
  4719 ;; Defined at:
  4720 ;;		line 791 in file "main.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;		None
  4723 ;; Auto vars:     Size  Location     Type
  4724 ;;  i               2   32[BANK0 ] int 
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  1    wreg      void 
  4727 ;; Registers used:
  4728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4734 ;;      Params:         0       0       0       0       0       0       0       0       0
  4735 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4736 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4737 ;;      Totals:         1       2       0       0       0       0       0       0       0
  4738 ;;Total ram usage:        3 bytes
  4739 ;; Hardware stack levels used:    1
  4740 ;; Hardware stack levels required when called:   10
  4741 ;; This function calls:
  4742 ;;		_UART_printf
  4743 ;;		_UART_write
  4744 ;;		_dameTemperaturaHumedad
  4745 ;;		_lecturaWifi
  4746 ;;		_sprintf
  4747 ;; This function is called by:
  4748 ;;		_sistemaPrincipal
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           	psect	text13
  4753  002032                     __ptext13:
  4754                           	opt callstack 0
  4755  002032                     _mostrarDatosSensoresWIFI:
  4756                           	opt callstack 19
  4757  002032                     
  4758                           ;main.c: 793:     dameTemperaturaHumedad();
  4759  002032  ECD6  F013         	call	_dameTemperaturaHumedad	;wreg free
  4760  002036                     
  4761                           ;main.c: 795:     UART_write('I');
  4762  002036  0E49               	movlw	73
  4763  002038  EC23  F019         	call	_UART_write
  4764  00203C                     
  4765                           ;main.c: 798:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", Humedad);
  4766  00203C  0E00               	movlw	low _buffer
  4767  00203E  0100               	movlb	0	; () banked
  4768  002040  6FBD               	movwf	sprintf@s& (0+255),b
  4769  002042  0E01               	movlw	high _buffer
  4770  002044  6FBE               	movwf	(sprintf@s+1)& (0+255),b
  4771  002046  0ED5               	movlw	low STR_43
  4772  002048  6FBF               	movwf	sprintf@fmt& (0+255),b
  4773  00204A  0E7D               	movlw	high STR_43
  4774  00204C  6FC0               	movwf	(sprintf@fmt+1)& (0+255),b
  4775  00204E  C07E  F0C1         	movff	_Humedad,?_sprintf+4
  4776  002052  6BC2               	clrf	(?_sprintf+5)& (0+255),b
  4777  002054  ECF7  F016         	call	_sprintf	;wreg free
  4778  002058                     
  4779                           ;main.c: 799:     UART_printf(buffer);
  4780  002058  0E00               	movlw	low _buffer
  4781  00205A  6E02               	movwf	UART_printf@cadena^0,c
  4782  00205C  0E01               	movlw	high _buffer
  4783  00205E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4784  002060  EC16  F016         	call	_UART_printf	;wreg free
  4785  002064                     
  4786                           ;main.c: 800:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", Temperatura);
  4787  002064  0E00               	movlw	low _buffer
  4788  002066  0100               	movlb	0	; () banked
  4789  002068  6FBD               	movwf	sprintf@s& (0+255),b
  4790  00206A  0E01               	movlw	high _buffer
  4791  00206C  6FBE               	movwf	(sprintf@s+1)& (0+255),b
  4792  00206E  0E14               	movlw	low STR_44
  4793  002070  6FBF               	movwf	sprintf@fmt& (0+255),b
  4794  002072  0E7E               	movlw	high STR_44
  4795  002074  6FC0               	movwf	(sprintf@fmt+1)& (0+255),b
  4796  002076  C07F  F0C1         	movff	_Temperatura,?_sprintf+4
  4797  00207A  6BC2               	clrf	(?_sprintf+5)& (0+255),b
  4798  00207C  ECF7  F016         	call	_sprintf	;wreg free
  4799  002080                     
  4800                           ;main.c: 801:     UART_printf(buffer);
  4801  002080  0E00               	movlw	low _buffer
  4802  002082  6E02               	movwf	UART_printf@cadena^0,c
  4803  002084  0E01               	movlw	high _buffer
  4804  002086  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4805  002088  EC16  F016         	call	_UART_printf	;wreg free
  4806  00208C                     
  4807                           ;main.c: 803:     lecturaWifi();
  4808  00208C  ECA1  F00F         	call	_lecturaWifi	;wreg free
  4809  002090                     
  4810                           ;main.c: 805:     if (peticionLecturaSensores) {
  4811  002090  0100               	movlb	0	; () banked
  4812  002092  517A               	movf	_peticionLecturaSensores& (0+255),w,b
  4813  002094  B4D8               	btfsc	status,2,c
  4814  002096  EF4F  F010         	goto	u3541
  4815  00209A  EF51  F010         	goto	u3540
  4816  00209E                     u3541:
  4817  00209E  EF8C  F010         	goto	l4516
  4818  0020A2                     u3540:
  4819  0020A2                     
  4820                           ; BSR set to: 0
  4821                           ;main.c: 807:         for (int i = 0; i < 3; i++) {
  4822  0020A2  0E00               	movlw	0
  4823  0020A4  6FD8               	movwf	(mostrarDatosSensoresWIFI@i+1)& (0+255),b
  4824  0020A6  0E00               	movlw	0
  4825  0020A8  6FD7               	movwf	mostrarDatosSensoresWIFI@i& (0+255),b
  4826  0020AA                     l4508:
  4827                           
  4828                           ; BSR set to: 0
  4829                           ;main.c: 809:             sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d %c
      +                          \r\n"
  4830  0020AA  0E00               	movlw	low _buffer
  4831  0020AC  6FBD               	movwf	sprintf@s& (0+255),b
  4832  0020AE  0E01               	movlw	high _buffer
  4833  0020B0  6FBE               	movwf	(sprintf@s+1)& (0+255),b
  4834  0020B2  0EEE               	movlw	low STR_45
  4835  0020B4  6FBF               	movwf	sprintf@fmt& (0+255),b
  4836  0020B6  0E7B               	movlw	high STR_45
  4837  0020B8  6FC0               	movwf	(sprintf@fmt+1)& (0+255),b
  4838  0020BA  C0D7  F0C1         	movff	mostrarDatosSensoresWIFI@i,?_sprintf+4
  4839  0020BE  C0D8  F0C2         	movff	mostrarDatosSensoresWIFI@i+1,?_sprintf+5
  4840  0020C2  90D8               	bcf	status,0,c
  4841  0020C4  35D7               	rlcf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  4842  0020C6  6ED9               	movwf	fsr2l,c
  4843  0020C8  35D8               	rlcf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  4844  0020CA  6EDA               	movwf	fsr2h,c
  4845  0020CC  0E60               	movlw	low _sensores
  4846  0020CE  26D9               	addwf	fsr2l,f,c
  4847  0020D0  0E00               	movlw	high _sensores
  4848  0020D2  22DA               	addwfc	fsr2h,f,c
  4849  0020D4  50DF               	movf	indf2,w,c
  4850  0020D6  6E5D               	movwf	??_mostrarDatosSensoresWIFI^0,c
  4851  0020D8  505D               	movf	??_mostrarDatosSensoresWIFI^0,w,c
  4852  0020DA  6FC3               	movwf	(?_sprintf+6)& (0+255),b
  4853  0020DC  6BC4               	clrf	(?_sprintf+7)& (0+255),b
  4854  0020DE  0E00               	movlw	0
  4855  0020E0  6FC6               	movwf	(?_sprintf+9)& (0+255),b
  4856  0020E2  0E25               	movlw	37
  4857  0020E4  6FC5               	movwf	(?_sprintf+8)& (0+255),b
  4858  0020E6  ECF7  F016         	call	_sprintf	;wreg free
  4859  0020EA                     
  4860                           ;main.c: 811:             UART_printf(buffer);
  4861  0020EA  0E00               	movlw	low _buffer
  4862  0020EC  6E02               	movwf	UART_printf@cadena^0,c
  4863  0020EE  0E01               	movlw	high _buffer
  4864  0020F0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4865  0020F2  EC16  F016         	call	_UART_printf	;wreg free
  4866  0020F6                     
  4867                           ;main.c: 813:         }
  4868  0020F6  0100               	movlb	0	; () banked
  4869  0020F8  4BD7               	infsnz	mostrarDatosSensoresWIFI@i& (0+255),f,b
  4870  0020FA  2BD8               	incf	(mostrarDatosSensoresWIFI@i+1)& (0+255),f,b
  4871  0020FC                     
  4872                           ; BSR set to: 0
  4873  0020FC  BFD8               	btfsc	(mostrarDatosSensoresWIFI@i+1)& (0+255),7,b
  4874  0020FE  EF8A  F010         	goto	u3551
  4875  002102  51D8               	movf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  4876  002104  E109               	bnz	u3550
  4877  002106  0E03               	movlw	3
  4878  002108  5DD7               	subwf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  4879  00210A  A0D8               	btfss	status,0,c
  4880  00210C  EF8A  F010         	goto	u3551
  4881  002110  EF8C  F010         	goto	u3550
  4882  002114                     u3551:
  4883  002114  EF55  F010         	goto	l4508
  4884  002118                     u3550:
  4885  002118                     l4516:
  4886                           
  4887                           ; BSR set to: 0
  4888                           ;main.c: 817:     UART_write('I');
  4889  002118  0E49               	movlw	73
  4890  00211A  EC23  F019         	call	_UART_write
  4891  00211E  0012               	return		;funcret
  4892  002120                     __end_of_mostrarDatosSensoresWIFI:
  4893                           	opt callstack 0
  4894                           
  4895 ;; *************** function _lecturaWifi *****************
  4896 ;; Defined at:
  4897 ;;		line 490 in file "main.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;		None
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;  i               2   30[BANK0 ] int 
  4902 ;;  humedadMedid    1   29[BANK0 ] unsigned char 
  4903 ;;  Rx              1   28[BANK0 ] unsigned char 
  4904 ;; Return value:  Size  Location     Type
  4905 ;;                  1    wreg      void 
  4906 ;; Registers used:
  4907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4908 ;; Tracked objects:
  4909 ;;		On entry : 0/0
  4910 ;;		On exit  : 0/0
  4911 ;;		Unchanged: 0/0
  4912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4913 ;;      Params:         0       0       0       0       0       0       0       0       0
  4914 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4915 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4916 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4917 ;;Total ram usage:        4 bytes
  4918 ;; Hardware stack levels used:    1
  4919 ;; Hardware stack levels required when called:    9
  4920 ;; This function calls:
  4921 ;;		_UART_printf
  4922 ;;		_UART_read
  4923 ;;		_UART_write
  4924 ;;		_getValue
  4925 ;;		_restablecerDatosSensor
  4926 ;;		_sprintf
  4927 ;; This function is called by:
  4928 ;;		_sistemaRegado
  4929 ;;		_mostrarDatosSensoresWIFI
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           	psect	text14
  4934  001F42                     __ptext14:
  4935                           	opt callstack 0
  4936  001F42                     _lecturaWifi:
  4937                           	opt callstack 20
  4938  001F42                     
  4939                           ;main.c: 492:     PIE1bits.RCIE = 0;
  4940  001F42  9A9D               	bcf	157,5,c	;volatile
  4941  001F44                     
  4942                           ;main.c: 496:     restablecerDatosSensor();
  4943  001F44  EC49  F017         	call	_restablecerDatosSensor	;wreg free
  4944  001F48                     
  4945                           ;main.c: 498:     UART_write('R');
  4946  001F48  0E52               	movlw	82
  4947  001F4A  EC23  F019         	call	_UART_write
  4948  001F4E                     
  4949                           ;main.c: 500:     UART_printf("\r\nSolicitando Muestreo de sensores\r\n\n");
  4950  001F4E  0E70               	movlw	low STR_18
  4951  001F50  6E02               	movwf	UART_printf@cadena^0,c
  4952  001F52  0E7C               	movlw	high STR_18
  4953  001F54  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4954  001F56  EC16  F016         	call	_UART_printf	;wreg free
  4955  001F5A                     
  4956                           ;main.c: 502:     Rx = UART_read();
  4957  001F5A  ECCD  F016         	call	_UART_read	;wreg free
  4958  001F5E  0100               	movlb	0	; () banked
  4959  001F60  6FD3               	movwf	lecturaWifi@Rx& (0+255),b
  4960  001F62                     
  4961                           ; BSR set to: 0
  4962                           ;main.c: 504:     if (Rx == 'O') {
  4963  001F62  0E4F               	movlw	79
  4964  001F64  19D3               	xorwf	lecturaWifi@Rx& (0+255),w,b
  4965  001F66  A4D8               	btfss	status,2,c
  4966  001F68  EFB8  F00F         	goto	u3251
  4967  001F6C  EFBA  F00F         	goto	u3250
  4968  001F70                     u3251:
  4969  001F70  EF15  F010         	goto	l4218
  4970  001F74                     u3250:
  4971  001F74                     
  4972                           ; BSR set to: 0
  4973                           ;main.c: 506:         peticionLecturaSensores = 1;
  4974  001F74  0E01               	movlw	1
  4975  001F76  6F7A               	movwf	_peticionLecturaSensores& (0+255),b
  4976                           
  4977                           ;main.c: 508:         for (int i = 0; i < 3; i++) {
  4978  001F78  0E00               	movlw	0
  4979  001F7A  6FD6               	movwf	(lecturaWifi@i+1)& (0+255),b
  4980  001F7C  0E00               	movlw	0
  4981  001F7E  6FD5               	movwf	lecturaWifi@i& (0+255),b
  4982  001F80                     l4200:
  4983                           
  4984                           ; BSR set to: 0
  4985                           ;main.c: 510:             sprintf(buffer, "\r\nIngrese el porcentaje de humedad del sens
      +                          or %d\r\n", i);
  4986  001F80  0E00               	movlw	low _buffer
  4987  001F82  6FBD               	movwf	sprintf@s& (0+255),b
  4988  001F84  0E01               	movlw	high _buffer
  4989  001F86  6FBE               	movwf	(sprintf@s+1)& (0+255),b
  4990  001F88  0E8A               	movlw	low STR_19
  4991  001F8A  6FBF               	movwf	sprintf@fmt& (0+255),b
  4992  001F8C  0E7B               	movlw	high STR_19
  4993  001F8E  6FC0               	movwf	(sprintf@fmt+1)& (0+255),b
  4994  001F90  C0D5  F0C1         	movff	lecturaWifi@i,?_sprintf+4
  4995  001F94  C0D6  F0C2         	movff	lecturaWifi@i+1,?_sprintf+5
  4996  001F98  ECF7  F016         	call	_sprintf	;wreg free
  4997  001F9C                     
  4998                           ;main.c: 511:             UART_printf(buffer);
  4999  001F9C  0E00               	movlw	low _buffer
  5000  001F9E  6E02               	movwf	UART_printf@cadena^0,c
  5001  001FA0  0E01               	movlw	high _buffer
  5002  001FA2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5003  001FA4  EC16  F016         	call	_UART_printf	;wreg free
  5004  001FA8                     
  5005                           ;main.c: 513:             humedadMedida = getValue(3);
  5006  001FA8  0E00               	movlw	0
  5007  001FAA  6E05               	movwf	(getValue@numCharacters+1)^0,c
  5008  001FAC  0E03               	movlw	3
  5009  001FAE  6E04               	movwf	getValue@numCharacters^0,c
  5010  001FB0  EC20  F007         	call	_getValue	;wreg free
  5011  001FB4  0100               	movlb	0	; () banked
  5012  001FB6  6FD4               	movwf	lecturaWifi@humedadMedida& (0+255),b
  5013  001FB8                     
  5014                           ; BSR set to: 0
  5015                           ;main.c: 515:             if (humedadMedida != '@')
  5016  001FB8  0E40               	movlw	64
  5017  001FBA  19D4               	xorwf	lecturaWifi@humedadMedida& (0+255),w,b
  5018  001FBC  B4D8               	btfsc	status,2,c
  5019  001FBE  EFE3  F00F         	goto	u3261
  5020  001FC2  EFE5  F00F         	goto	u3260
  5021  001FC6                     u3261:
  5022  001FC6  EFF2  F00F         	goto	l4210
  5023  001FCA                     u3260:
  5024  001FCA                     
  5025                           ; BSR set to: 0
  5026                           ;main.c: 516:                 sensores[i].porcientoHumedad = humedadMedida;
  5027  001FCA  90D8               	bcf	status,0,c
  5028  001FCC  35D5               	rlcf	lecturaWifi@i& (0+255),w,b
  5029  001FCE  6ED9               	movwf	fsr2l,c
  5030  001FD0  35D6               	rlcf	(lecturaWifi@i+1)& (0+255),w,b
  5031  001FD2  6EDA               	movwf	fsr2h,c
  5032  001FD4  0E60               	movlw	low _sensores
  5033  001FD6  26D9               	addwf	fsr2l,f,c
  5034  001FD8  0E00               	movlw	high _sensores
  5035  001FDA  22DA               	addwfc	fsr2h,f,c
  5036  001FDC  C0D4  FFDF         	movff	lecturaWifi@humedadMedida,indf2
  5037  001FE0  EFFD  F00F         	goto	l4212
  5038  001FE4                     l4210:
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;main.c: 518:                 sensores[i].porcientoHumedad = 100;
  5042  001FE4  90D8               	bcf	status,0,c
  5043  001FE6  35D5               	rlcf	lecturaWifi@i& (0+255),w,b
  5044  001FE8  6ED9               	movwf	fsr2l,c
  5045  001FEA  35D6               	rlcf	(lecturaWifi@i+1)& (0+255),w,b
  5046  001FEC  6EDA               	movwf	fsr2h,c
  5047  001FEE  0E60               	movlw	low _sensores
  5048  001FF0  26D9               	addwf	fsr2l,f,c
  5049  001FF2  0E00               	movlw	high _sensores
  5050  001FF4  22DA               	addwfc	fsr2h,f,c
  5051  001FF6  0E64               	movlw	100
  5052  001FF8  6EDF               	movwf	indf2,c
  5053  001FFA                     l4212:
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;main.c: 520:         }
  5057  001FFA  4BD5               	infsnz	lecturaWifi@i& (0+255),f,b
  5058  001FFC  2BD6               	incf	(lecturaWifi@i+1)& (0+255),f,b
  5059  001FFE                     
  5060                           ; BSR set to: 0
  5061  001FFE  BFD6               	btfsc	(lecturaWifi@i+1)& (0+255),7,b
  5062  002000  EF0B  F010         	goto	u3271
  5063  002004  51D6               	movf	(lecturaWifi@i+1)& (0+255),w,b
  5064  002006  E109               	bnz	u3270
  5065  002008  0E03               	movlw	3
  5066  00200A  5DD5               	subwf	lecturaWifi@i& (0+255),w,b
  5067  00200C  A0D8               	btfss	status,0,c
  5068  00200E  EF0B  F010         	goto	u3271
  5069  002012  EF0D  F010         	goto	u3270
  5070  002016                     u3271:
  5071  002016  EFC0  F00F         	goto	l4200
  5072  00201A                     u3270:
  5073  00201A                     
  5074                           ; BSR set to: 0
  5075                           ;main.c: 522:         UART_printf("\r\nSensores Leidos con Exito!\r\n\n");
  5076  00201A  0E95               	movlw	low STR_20
  5077  00201C  6E02               	movwf	UART_printf@cadena^0,c
  5078  00201E  0E7D               	movlw	high STR_20
  5079  002020  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5080  002022  EC16  F016         	call	_UART_printf	;wreg free
  5081                           
  5082                           ;main.c: 524:     } else {
  5083  002026  EF17  F010         	goto	l4220
  5084  00202A                     l4218:
  5085                           
  5086                           ; BSR set to: 0
  5087                           ;main.c: 525:         peticionLecturaSensores = 0;
  5088  00202A  0E00               	movlw	0
  5089  00202C  6F7A               	movwf	_peticionLecturaSensores& (0+255),b
  5090  00202E                     l4220:
  5091                           
  5092                           ;main.c: 528:     PIE1bits.RCIE = 1;
  5093  00202E  8A9D               	bsf	157,5,c	;volatile
  5094  002030  0012               	return		;funcret
  5095  002032                     __end_of_lecturaWifi:
  5096                           	opt callstack 0
  5097                           
  5098 ;; *************** function _restablecerDatosSensor *****************
  5099 ;; Defined at:
  5100 ;;		line 485 in file "main.c"
  5101 ;; Parameters:    Size  Location     Type
  5102 ;;		None
  5103 ;; Auto vars:     Size  Location     Type
  5104 ;;  i               2    4[COMRAM] int 
  5105 ;; Return value:  Size  Location     Type
  5106 ;;                  1    wreg      void 
  5107 ;; Registers used:
  5108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5109 ;; Tracked objects:
  5110 ;;		On entry : 0/0
  5111 ;;		On exit  : 0/0
  5112 ;;		Unchanged: 0/0
  5113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5114 ;;      Params:         0       0       0       0       0       0       0       0       0
  5115 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5116 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5117 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5118 ;;Total ram usage:        2 bytes
  5119 ;; Hardware stack levels used:    1
  5120 ;; Hardware stack levels required when called:    2
  5121 ;; This function calls:
  5122 ;;		_constructorSensor
  5123 ;; This function is called by:
  5124 ;;		_lecturaWifi
  5125 ;;		_main
  5126 ;; This function uses a non-reentrant model
  5127 ;;
  5128                           
  5129                           	psect	text15
  5130  002E92                     __ptext15:
  5131                           	opt callstack 0
  5132  002E92                     _restablecerDatosSensor:
  5133                           	opt callstack 26
  5134  002E92                     
  5135                           ;main.c: 486:     for (int i = 0; i < 3; i++)
  5136  002E92  0E00               	movlw	0
  5137  002E94  6E06               	movwf	(restablecerDatosSensor@i+1)^0,c
  5138  002E96  0E00               	movlw	0
  5139  002E98  6E05               	movwf	restablecerDatosSensor@i^0,c
  5140  002E9A                     l4018:
  5141                           
  5142                           ;main.c: 487:         constructorSensor(sensores[i], 0, i);
  5143  002E9A  90D8               	bcf	status,0,c
  5144  002E9C  3405               	rlcf	restablecerDatosSensor@i^0,w,c
  5145  002E9E  6ED9               	movwf	fsr2l,c
  5146  002EA0  3406               	rlcf	(restablecerDatosSensor@i+1)^0,w,c
  5147  002EA2  6EDA               	movwf	fsr2h,c
  5148  002EA4  0E60               	movlw	low _sensores
  5149  002EA6  26D9               	addwf	fsr2l,f,c
  5150  002EA8  0E00               	movlw	high _sensores
  5151  002EAA  22DA               	addwfc	fsr2h,f,c
  5152  002EAC  CFDE F001          	movff	postinc2,constructorSensor@s
  5153  002EB0  CFDD F002          	movff	postdec2,constructorSensor@s+1
  5154  002EB4  0E00               	movlw	0
  5155  002EB6  6E03               	movwf	constructorSensor@porcientoHumedad^0,c
  5156  002EB8  C005  F004         	movff	restablecerDatosSensor@i,constructorSensor@pin
  5157  002EBC  EC4D  F019         	call	_constructorSensor	;wreg free
  5158  002EC0  4A05               	infsnz	restablecerDatosSensor@i^0,f,c
  5159  002EC2  2A06               	incf	(restablecerDatosSensor@i+1)^0,f,c
  5160  002EC4  BE06               	btfsc	(restablecerDatosSensor@i+1)^0,7,c
  5161  002EC6  EF6E  F017         	goto	u3071
  5162  002ECA  5006               	movf	(restablecerDatosSensor@i+1)^0,w,c
  5163  002ECC  E109               	bnz	u3070
  5164  002ECE  0E03               	movlw	3
  5165  002ED0  5C05               	subwf	restablecerDatosSensor@i^0,w,c
  5166  002ED2  A0D8               	btfss	status,0,c
  5167  002ED4  EF6E  F017         	goto	u3071
  5168  002ED8  EF70  F017         	goto	u3070
  5169  002EDC                     u3071:
  5170  002EDC  EF4D  F017         	goto	l4018
  5171  002EE0                     u3070:
  5172  002EE0  0012               	return		;funcret
  5173  002EE2                     __end_of_restablecerDatosSensor:
  5174                           	opt callstack 0
  5175                           
  5176 ;; *************** function _constructorSensor *****************
  5177 ;; Defined at:
  5178 ;;		line 138 in file "main.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;  s               2    0[COMRAM] struct .
  5181 ;;  porcientoHum    1    2[COMRAM] unsigned char 
  5182 ;;  pin             1    3[COMRAM] unsigned char 
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;		None
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  1    wreg      void 
  5187 ;; Registers used:
  5188 ;;		None
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5194 ;;      Params:         4       0       0       0       0       0       0       0       0
  5195 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5196 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5197 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5198 ;;Total ram usage:        4 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; Hardware stack levels required when called:    1
  5201 ;; This function calls:
  5202 ;;		Nothing
  5203 ;; This function is called by:
  5204 ;;		_restablecerDatosSensor
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208                           	psect	text16
  5209  00329A                     __ptext16:
  5210                           	opt callstack 0
  5211  00329A                     _constructorSensor:
  5212                           	opt callstack 26
  5213  00329A                     
  5214                           ;main.c: 139:     s.porcientoHumedad = porcientoHumedad;
  5215  00329A  C003  F001         	movff	constructorSensor@porcientoHumedad,constructorSensor@s
  5216                           
  5217                           ;main.c: 140:     s.pinSensor = pin;
  5218  00329E  C004  F002         	movff	constructorSensor@pin,constructorSensor@s+1
  5219  0032A2  0012               	return		;funcret
  5220  0032A4                     __end_of_constructorSensor:
  5221                           	opt callstack 0
  5222                           
  5223 ;; *************** function _mostrarDatosSensores *****************
  5224 ;; Defined at:
  5225 ;;		line 765 in file "main.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;		None
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;  i               2   28[BANK0 ] int 
  5230 ;; Return value:  Size  Location     Type
  5231 ;;                  1    wreg      void 
  5232 ;; Registers used:
  5233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5239 ;;      Params:         0       0       0       0       0       0       0       0       0
  5240 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5241 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5242 ;;      Totals:         1       2       0       0       0       0       0       0       0
  5243 ;;Total ram usage:        3 bytes
  5244 ;; Hardware stack levels used:    1
  5245 ;; Hardware stack levels required when called:    9
  5246 ;; This function calls:
  5247 ;;		_UART_printf
  5248 ;;		_UART_write
  5249 ;;		_dameTemperaturaHumedad
  5250 ;;		_lecturaAnalogaSensores
  5251 ;;		_sprintf
  5252 ;; This function is called by:
  5253 ;;		_sistemaPrincipal
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257                           	psect	text17
  5258  002120                     __ptext17:
  5259                           	opt callstack 0
  5260  002120                     _mostrarDatosSensores:
  5261                           	opt callstack 20
  5262  002120                     
  5263                           ;main.c: 767:     dameTemperaturaHumedad();
  5264  002120  ECD6  F013         	call	_dameTemperaturaHumedad	;wreg free
  5265  002124                     
  5266                           ;main.c: 769:     UART_write('I');
  5267  002124  0E49               	movlw	73
  5268  002126  EC23  F019         	call	_UART_write
  5269  00212A                     
  5270                           ;main.c: 772:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", Humedad);
  5271  00212A  0E00               	movlw	low _buffer
  5272  00212C  0100               	movlb	0	; () banked
  5273  00212E  6FBD               	movwf	sprintf@s& (0+255),b
  5274  002130  0E01               	movlw	high _buffer
  5275  002132  6FBE               	movwf	(sprintf@s+1)& (0+255),b
  5276  002134  0ED5               	movlw	low STR_43
  5277  002136  6FBF               	movwf	sprintf@fmt& (0+255),b
  5278  002138  0E7D               	movlw	high STR_43
  5279  00213A  6FC0               	movwf	(sprintf@fmt+1)& (0+255),b
  5280  00213C  C07E  F0C1         	movff	_Humedad,?_sprintf+4
  5281  002140  6BC2               	clrf	(?_sprintf+5)& (0+255),b
  5282  002142  ECF7  F016         	call	_sprintf	;wreg free
  5283  002146                     
  5284                           ;main.c: 773:     UART_printf(buffer);
  5285  002146  0E00               	movlw	low _buffer
  5286  002148  6E02               	movwf	UART_printf@cadena^0,c
  5287  00214A  0E01               	movlw	high _buffer
  5288  00214C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5289  00214E  EC16  F016         	call	_UART_printf	;wreg free
  5290  002152                     
  5291                           ;main.c: 774:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", Temperatura);
  5292  002152  0E00               	movlw	low _buffer
  5293  002154  0100               	movlb	0	; () banked
  5294  002156  6FBD               	movwf	sprintf@s& (0+255),b
  5295  002158  0E01               	movlw	high _buffer
  5296  00215A  6FBE               	movwf	(sprintf@s+1)& (0+255),b
  5297  00215C  0E14               	movlw	low STR_44
  5298  00215E  6FBF               	movwf	sprintf@fmt& (0+255),b
  5299  002160  0E7E               	movlw	high STR_44
  5300  002162  6FC0               	movwf	(sprintf@fmt+1)& (0+255),b
  5301  002164  C07F  F0C1         	movff	_Temperatura,?_sprintf+4
  5302  002168  6BC2               	clrf	(?_sprintf+5)& (0+255),b
  5303  00216A  ECF7  F016         	call	_sprintf	;wreg free
  5304  00216E                     
  5305                           ;main.c: 775:     UART_printf(buffer);
  5306  00216E  0E00               	movlw	low _buffer
  5307  002170  6E02               	movwf	UART_printf@cadena^0,c
  5308  002172  0E01               	movlw	high _buffer
  5309  002174  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5310  002176  EC16  F016         	call	_UART_printf	;wreg free
  5311  00217A                     
  5312                           ;main.c: 777:     lecturaAnalogaSensores();
  5313  00217A  ECE4  F012         	call	_lecturaAnalogaSensores	;wreg free
  5314  00217E                     
  5315                           ;main.c: 780:     for (int i = 0; i < 3; i++) {
  5316  00217E  0E00               	movlw	0
  5317  002180  0100               	movlb	0	; () banked
  5318  002182  6FD4               	movwf	(mostrarDatosSensores@i+1)& (0+255),b
  5319  002184  0E00               	movlw	0
  5320  002186  6FD3               	movwf	mostrarDatosSensores@i& (0+255),b
  5321  002188                     l4538:
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;main.c: 782:         sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d %c\r\n
      +                          "
  5325  002188  0E00               	movlw	low _buffer
  5326  00218A  6FBD               	movwf	sprintf@s& (0+255),b
  5327  00218C  0E01               	movlw	high _buffer
  5328  00218E  6FBE               	movwf	(sprintf@s+1)& (0+255),b
  5329  002190  0EEE               	movlw	low STR_45
  5330  002192  6FBF               	movwf	sprintf@fmt& (0+255),b
  5331  002194  0E7B               	movlw	high STR_45
  5332  002196  6FC0               	movwf	(sprintf@fmt+1)& (0+255),b
  5333  002198  C0D3  F0C1         	movff	mostrarDatosSensores@i,?_sprintf+4
  5334  00219C  C0D4  F0C2         	movff	mostrarDatosSensores@i+1,?_sprintf+5
  5335  0021A0  90D8               	bcf	status,0,c
  5336  0021A2  35D3               	rlcf	mostrarDatosSensores@i& (0+255),w,b
  5337  0021A4  6ED9               	movwf	fsr2l,c
  5338  0021A6  35D4               	rlcf	(mostrarDatosSensores@i+1)& (0+255),w,b
  5339  0021A8  6EDA               	movwf	fsr2h,c
  5340  0021AA  0E60               	movlw	low _sensores
  5341  0021AC  26D9               	addwf	fsr2l,f,c
  5342  0021AE  0E00               	movlw	high _sensores
  5343  0021B0  22DA               	addwfc	fsr2h,f,c
  5344  0021B2  50DF               	movf	indf2,w,c
  5345  0021B4  6E5D               	movwf	??_mostrarDatosSensores^0,c
  5346  0021B6  505D               	movf	??_mostrarDatosSensores^0,w,c
  5347  0021B8  6FC3               	movwf	(?_sprintf+6)& (0+255),b
  5348  0021BA  6BC4               	clrf	(?_sprintf+7)& (0+255),b
  5349  0021BC  0E00               	movlw	0
  5350  0021BE  6FC6               	movwf	(?_sprintf+9)& (0+255),b
  5351  0021C0  0E25               	movlw	37
  5352  0021C2  6FC5               	movwf	(?_sprintf+8)& (0+255),b
  5353  0021C4  ECF7  F016         	call	_sprintf	;wreg free
  5354  0021C8                     
  5355                           ;main.c: 784:         UART_printf(buffer);
  5356  0021C8  0E00               	movlw	low _buffer
  5357  0021CA  6E02               	movwf	UART_printf@cadena^0,c
  5358  0021CC  0E01               	movlw	high _buffer
  5359  0021CE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5360  0021D0  EC16  F016         	call	_UART_printf	;wreg free
  5361  0021D4                     
  5362                           ;main.c: 785:     }
  5363  0021D4  0100               	movlb	0	; () banked
  5364  0021D6  4BD3               	infsnz	mostrarDatosSensores@i& (0+255),f,b
  5365  0021D8  2BD4               	incf	(mostrarDatosSensores@i+1)& (0+255),f,b
  5366  0021DA                     
  5367                           ; BSR set to: 0
  5368  0021DA  BFD4               	btfsc	(mostrarDatosSensores@i+1)& (0+255),7,b
  5369  0021DC  EFF9  F010         	goto	u3561
  5370  0021E0  51D4               	movf	(mostrarDatosSensores@i+1)& (0+255),w,b
  5371  0021E2  E109               	bnz	u3560
  5372  0021E4  0E03               	movlw	3
  5373  0021E6  5DD3               	subwf	mostrarDatosSensores@i& (0+255),w,b
  5374  0021E8  A0D8               	btfss	status,0,c
  5375  0021EA  EFF9  F010         	goto	u3561
  5376  0021EE  EFFB  F010         	goto	u3560
  5377  0021F2                     u3561:
  5378  0021F2  EFC4  F010         	goto	l4538
  5379  0021F6                     u3560:
  5380  0021F6                     
  5381                           ; BSR set to: 0
  5382                           ;main.c: 787:     UART_write('I');
  5383  0021F6  0E49               	movlw	73
  5384  0021F8  EC23  F019         	call	_UART_write
  5385  0021FC  0012               	return		;funcret
  5386  0021FE                     __end_of_mostrarDatosSensores:
  5387                           	opt callstack 0
  5388                           
  5389 ;; *************** function _lecturaAnalogaSensores *****************
  5390 ;; Defined at:
  5391 ;;		line 532 in file "main.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;		None
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;  i               2   47[COMRAM] int 
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  1    wreg      void 
  5398 ;; Registers used:
  5399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5405 ;;      Params:         0       0       0       0       0       0       0       0       0
  5406 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5407 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5408 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5409 ;;Total ram usage:        3 bytes
  5410 ;; Hardware stack levels used:    1
  5411 ;; Hardware stack levels required when called:    3
  5412 ;; This function calls:
  5413 ;;		_dameHumedadSuelo
  5414 ;;		_map
  5415 ;; This function is called by:
  5416 ;;		_sistemaRegado
  5417 ;;		_mostrarDatosSensores
  5418 ;; This function uses a non-reentrant model
  5419 ;;
  5420                           
  5421                           	psect	text18
  5422  0025C8                     __ptext18:
  5423                           	opt callstack 0
  5424  0025C8                     _lecturaAnalogaSensores:
  5425                           	opt callstack 26
  5426  0025C8                     
  5427                           ;main.c: 534:     for (int i = 0; i < 3; i++) {
  5428  0025C8  0E00               	movlw	0
  5429  0025CA  6E31               	movwf	(lecturaAnalogaSensores@i+1)^0,c
  5430  0025CC  0E00               	movlw	0
  5431  0025CE  6E30               	movwf	lecturaAnalogaSensores@i^0,c
  5432  0025D0                     l4228:
  5433                           
  5434                           ;main.c: 535:         sensores[i].porcientoHumedad = map(dameHumedadSuelo(i), 0, 1023, 1
      +                          00, 0);
  5435  0025D0  90D8               	bcf	status,0,c
  5436  0025D2  3430               	rlcf	lecturaAnalogaSensores@i^0,w,c
  5437  0025D4  6ED9               	movwf	fsr2l,c
  5438  0025D6  3431               	rlcf	(lecturaAnalogaSensores@i+1)^0,w,c
  5439  0025D8  6EDA               	movwf	fsr2h,c
  5440  0025DA  0E60               	movlw	low _sensores
  5441  0025DC  26D9               	addwf	fsr2l,f,c
  5442  0025DE  0E00               	movlw	high _sensores
  5443  0025E0  22DA               	addwfc	fsr2h,f,c
  5444  0025E2  5030               	movf	lecturaAnalogaSensores@i^0,w,c
  5445  0025E4  EC71  F017         	call	_dameHumedadSuelo
  5446  0025E8  C001  F01B         	movff	?_dameHumedadSuelo,map@x
  5447  0025EC  C002  F01C         	movff	?_dameHumedadSuelo+1,map@x+1
  5448  0025F0  0E00               	movlw	0
  5449  0025F2  BE1C               	btfsc	(map@x+1)^0,7,c
  5450  0025F4  0EFF               	movlw	-1
  5451  0025F6  6E1D               	movwf	(map@x+2)^0,c
  5452  0025F8  6E1E               	movwf	(map@x+3)^0,c
  5453  0025FA  0E00               	movlw	0
  5454  0025FC  6E1F               	movwf	map@in_min^0,c
  5455  0025FE  0E00               	movlw	0
  5456  002600  6E20               	movwf	(map@in_min+1)^0,c
  5457  002602  0E00               	movlw	0
  5458  002604  6E21               	movwf	(map@in_min+2)^0,c
  5459  002606  0E00               	movlw	0
  5460  002608  6E22               	movwf	(map@in_min+3)^0,c
  5461  00260A  0EFF               	movlw	255
  5462  00260C  6E23               	movwf	map@in_max^0,c
  5463  00260E  0E03               	movlw	3
  5464  002610  6E24               	movwf	(map@in_max+1)^0,c
  5465  002612  0E00               	movlw	0
  5466  002614  6E25               	movwf	(map@in_max+2)^0,c
  5467  002616  0E00               	movlw	0
  5468  002618  6E26               	movwf	(map@in_max+3)^0,c
  5469  00261A  0E64               	movlw	100
  5470  00261C  6E27               	movwf	map@out_min^0,c
  5471  00261E  0E00               	movlw	0
  5472  002620  6E28               	movwf	(map@out_min+1)^0,c
  5473  002622  0E00               	movlw	0
  5474  002624  6E29               	movwf	(map@out_min+2)^0,c
  5475  002626  0E00               	movlw	0
  5476  002628  6E2A               	movwf	(map@out_min+3)^0,c
  5477  00262A  0E00               	movlw	0
  5478  00262C  6E2B               	movwf	map@out_max^0,c
  5479  00262E  0E00               	movlw	0
  5480  002630  6E2C               	movwf	(map@out_max+1)^0,c
  5481  002632  0E00               	movlw	0
  5482  002634  6E2D               	movwf	(map@out_max+2)^0,c
  5483  002636  0E00               	movlw	0
  5484  002638  6E2E               	movwf	(map@out_max+3)^0,c
  5485  00263A  EC9E  F014         	call	_map	;wreg free
  5486  00263E  501B               	movf	?_map^0,w,c
  5487  002640  6EDF               	movwf	indf2,c
  5488  002642                     
  5489                           ;main.c: 536:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5490  002642  0E07               	movlw	7
  5491  002644  6E2F               	movwf	??_lecturaAnalogaSensores^0,c
  5492  002646  0E7D               	movlw	125
  5493  002648                     u3837:
  5494  002648  2EE8               	decfsz	wreg,f,c
  5495  00264A  D7FE               	bra	u3837
  5496  00264C  2E2F               	decfsz	??_lecturaAnalogaSensores^0,f,c
  5497  00264E  D7FC               	bra	u3837
  5498  002650  F000               	nop	
  5499  002652                     
  5500                           ;main.c: 537:     }
  5501  002652  4A30               	infsnz	lecturaAnalogaSensores@i^0,f,c
  5502  002654  2A31               	incf	(lecturaAnalogaSensores@i+1)^0,f,c
  5503  002656  BE31               	btfsc	(lecturaAnalogaSensores@i+1)^0,7,c
  5504  002658  EF37  F013         	goto	u3281
  5505  00265C  5031               	movf	(lecturaAnalogaSensores@i+1)^0,w,c
  5506  00265E  E109               	bnz	u3280
  5507  002660  0E03               	movlw	3
  5508  002662  5C30               	subwf	lecturaAnalogaSensores@i^0,w,c
  5509  002664  A0D8               	btfss	status,0,c
  5510  002666  EF37  F013         	goto	u3281
  5511  00266A  EF39  F013         	goto	u3280
  5512  00266E                     u3281:
  5513  00266E  EFE8  F012         	goto	l4228
  5514  002672                     u3280:
  5515  002672  0012               	return		;funcret
  5516  002674                     __end_of_lecturaAnalogaSensores:
  5517                           	opt callstack 0
  5518                           
  5519 ;; *************** function _map *****************
  5520 ;; Defined at:
  5521 ;;		line 134 in file "main.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;  x               4   26[COMRAM] long 
  5524 ;;  in_min          4   30[COMRAM] long 
  5525 ;;  in_max          4   34[COMRAM] long 
  5526 ;;  out_min         4   38[COMRAM] long 
  5527 ;;  out_max         4   42[COMRAM] long 
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;		None
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  4   26[COMRAM] long 
  5532 ;; Registers used:
  5533 ;;		wreg, status,2, status,0, cstack
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5539 ;;      Params:        20       0       0       0       0       0       0       0       0
  5540 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5542 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5543 ;;Total ram usage:       20 bytes
  5544 ;; Hardware stack levels used:    1
  5545 ;; Hardware stack levels required when called:    2
  5546 ;; This function calls:
  5547 ;;		___aldiv
  5548 ;;		___lmul
  5549 ;; This function is called by:
  5550 ;;		_lecturaAnalogaSensores
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           
  5554                           	psect	text19
  5555  00293C                     __ptext19:
  5556                           	opt callstack 0
  5557  00293C                     _map:
  5558                           	opt callstack 26
  5559  00293C                     
  5560                           ;main.c: 135:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  5561  00293C  501F               	movf	map@in_min^0,w,c
  5562  00293E  5C1B               	subwf	map@x^0,w,c
  5563  002940  6E01               	movwf	___lmul@multiplier^0,c
  5564  002942  5020               	movf	(map@in_min+1)^0,w,c
  5565  002944  581C               	subwfb	(map@x+1)^0,w,c
  5566  002946  6E02               	movwf	(___lmul@multiplier+1)^0,c
  5567  002948  5021               	movf	(map@in_min+2)^0,w,c
  5568  00294A  581D               	subwfb	(map@x+2)^0,w,c
  5569  00294C  6E03               	movwf	(___lmul@multiplier+2)^0,c
  5570  00294E  5022               	movf	(map@in_min+3)^0,w,c
  5571  002950  581E               	subwfb	(map@x+3)^0,w,c
  5572  002952  6E04               	movwf	(___lmul@multiplier+3)^0,c
  5573  002954  5027               	movf	map@out_min^0,w,c
  5574  002956  5C2B               	subwf	map@out_max^0,w,c
  5575  002958  6E05               	movwf	___lmul@multiplicand^0,c
  5576  00295A  5028               	movf	(map@out_min+1)^0,w,c
  5577  00295C  582C               	subwfb	(map@out_max+1)^0,w,c
  5578  00295E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5579  002960  5029               	movf	(map@out_min+2)^0,w,c
  5580  002962  582D               	subwfb	(map@out_max+2)^0,w,c
  5581  002964  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5582  002966  502A               	movf	(map@out_min+3)^0,w,c
  5583  002968  582E               	subwfb	(map@out_max+3)^0,w,c
  5584  00296A  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5585  00296C  EC4B  F015         	call	___lmul	;wreg free
  5586  002970  C001  F00D         	movff	?___lmul,___aldiv@dividend
  5587  002974  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  5588  002978  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  5589  00297C  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  5590  002980  501F               	movf	map@in_min^0,w,c
  5591  002982  5C23               	subwf	map@in_max^0,w,c
  5592  002984  6E11               	movwf	___aldiv@divisor^0,c
  5593  002986  5020               	movf	(map@in_min+1)^0,w,c
  5594  002988  5824               	subwfb	(map@in_max+1)^0,w,c
  5595  00298A  6E12               	movwf	(___aldiv@divisor+1)^0,c
  5596  00298C  5021               	movf	(map@in_min+2)^0,w,c
  5597  00298E  5825               	subwfb	(map@in_max+2)^0,w,c
  5598  002990  6E13               	movwf	(___aldiv@divisor+2)^0,c
  5599  002992  5022               	movf	(map@in_min+3)^0,w,c
  5600  002994  5826               	subwfb	(map@in_max+3)^0,w,c
  5601  002996  6E14               	movwf	(___aldiv@divisor+3)^0,c
  5602  002998  EC1B  F00F         	call	___aldiv	;wreg free
  5603  00299C  5027               	movf	map@out_min^0,w,c
  5604  00299E  240D               	addwf	?___aldiv^0,w,c
  5605  0029A0  6E1B               	movwf	?_map^0,c
  5606  0029A2  5028               	movf	(map@out_min+1)^0,w,c
  5607  0029A4  200E               	addwfc	(?___aldiv+1)^0,w,c
  5608  0029A6  6E1C               	movwf	(?_map+1)^0,c
  5609  0029A8  5029               	movf	(map@out_min+2)^0,w,c
  5610  0029AA  200F               	addwfc	(?___aldiv+2)^0,w,c
  5611  0029AC  6E1D               	movwf	(?_map+2)^0,c
  5612  0029AE  502A               	movf	(map@out_min+3)^0,w,c
  5613  0029B0  2010               	addwfc	(?___aldiv+3)^0,w,c
  5614  0029B2  6E1E               	movwf	(?_map+3)^0,c
  5615  0029B4  0012               	return		;funcret
  5616  0029B6                     __end_of_map:
  5617                           	opt callstack 0
  5618                           
  5619 ;; *************** function ___lmul *****************
  5620 ;; Defined at:
  5621 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  5622 ;; Parameters:    Size  Location     Type
  5623 ;;  multiplier      4    0[COMRAM] unsigned long 
  5624 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5625 ;; Auto vars:     Size  Location     Type
  5626 ;;  product         4    8[COMRAM] unsigned long 
  5627 ;; Return value:  Size  Location     Type
  5628 ;;                  4    0[COMRAM] unsigned long 
  5629 ;; Registers used:
  5630 ;;		wreg, status,2, status,0
  5631 ;; Tracked objects:
  5632 ;;		On entry : 0/0
  5633 ;;		On exit  : 0/0
  5634 ;;		Unchanged: 0/0
  5635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5636 ;;      Params:         8       0       0       0       0       0       0       0       0
  5637 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5638 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5639 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5640 ;;Total ram usage:       12 bytes
  5641 ;; Hardware stack levels used:    1
  5642 ;; Hardware stack levels required when called:    1
  5643 ;; This function calls:
  5644 ;;		Nothing
  5645 ;; This function is called by:
  5646 ;;		_map
  5647 ;; This function uses a non-reentrant model
  5648 ;;
  5649                           
  5650                           	psect	text20
  5651  002A96                     __ptext20:
  5652                           	opt callstack 0
  5653  002A96                     ___lmul:
  5654                           	opt callstack 26
  5655  002A96  0E00               	movlw	0
  5656  002A98  6E09               	movwf	___lmul@product^0,c
  5657  002A9A  0E00               	movlw	0
  5658  002A9C  6E0A               	movwf	(___lmul@product+1)^0,c
  5659  002A9E  0E00               	movlw	0
  5660  002AA0  6E0B               	movwf	(___lmul@product+2)^0,c
  5661  002AA2  0E00               	movlw	0
  5662  002AA4  6E0C               	movwf	(___lmul@product+3)^0,c
  5663  002AA6                     l3780:
  5664  002AA6  A001               	btfss	___lmul@multiplier^0,0,c
  5665  002AA8  EF58  F015         	goto	u2861
  5666  002AAC  EF5A  F015         	goto	u2860
  5667  002AB0                     u2861:
  5668  002AB0  EF62  F015         	goto	l3784
  5669  002AB4                     u2860:
  5670  002AB4  5005               	movf	___lmul@multiplicand^0,w,c
  5671  002AB6  2609               	addwf	___lmul@product^0,f,c
  5672  002AB8  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5673  002ABA  220A               	addwfc	(___lmul@product+1)^0,f,c
  5674  002ABC  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5675  002ABE  220B               	addwfc	(___lmul@product+2)^0,f,c
  5676  002AC0  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5677  002AC2  220C               	addwfc	(___lmul@product+3)^0,f,c
  5678  002AC4                     l3784:
  5679  002AC4  90D8               	bcf	status,0,c
  5680  002AC6  3605               	rlcf	___lmul@multiplicand^0,f,c
  5681  002AC8  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5682  002ACA  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5683  002ACC  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5684  002ACE  90D8               	bcf	status,0,c
  5685  002AD0  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5686  002AD2  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5687  002AD4  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5688  002AD6  3201               	rrcf	___lmul@multiplier^0,f,c
  5689  002AD8  5001               	movf	___lmul@multiplier^0,w,c
  5690  002ADA  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5691  002ADC  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5692  002ADE  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5693  002AE0  A4D8               	btfss	status,2,c
  5694  002AE2  EF75  F015         	goto	u2871
  5695  002AE6  EF77  F015         	goto	u2870
  5696  002AEA                     u2871:
  5697  002AEA  EF53  F015         	goto	l3780
  5698  002AEE                     u2870:
  5699  002AEE  C009  F001         	movff	___lmul@product,?___lmul
  5700  002AF2  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5701  002AF6  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5702  002AFA  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5703  002AFE  0012               	return		;funcret
  5704  002B00                     __end_of___lmul:
  5705                           	opt callstack 0
  5706                           
  5707 ;; *************** function _dameHumedadSuelo *****************
  5708 ;; Defined at:
  5709 ;;		line 468 in file "main.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;  canalLeer       1    wreg     unsigned char 
  5712 ;; Auto vars:     Size  Location     Type
  5713 ;;  canalLeer       1    4[COMRAM] unsigned char 
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  2    0[COMRAM] short 
  5716 ;; Registers used:
  5717 ;;		wreg, status,2, status,0
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5723 ;;      Params:         2       0       0       0       0       0       0       0       0
  5724 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5725 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5726 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5727 ;;Total ram usage:        5 bytes
  5728 ;; Hardware stack levels used:    1
  5729 ;; Hardware stack levels required when called:    1
  5730 ;; This function calls:
  5731 ;;		Nothing
  5732 ;; This function is called by:
  5733 ;;		_lecturaAnalogaSensores
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           	psect	text21
  5738  002EE2                     __ptext21:
  5739                           	opt callstack 0
  5740  002EE2                     _dameHumedadSuelo:
  5741                           	opt callstack 27
  5742                           
  5743                           ;incstack = 0
  5744                           ;dameHumedadSuelo@canalLeer stored from wreg
  5745  002EE2  6E05               	movwf	dameHumedadSuelo@canalLeer^0,c
  5746  002EE4                     
  5747                           ;main.c: 470:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  5748  002EE4  0E06               	movlw	6
  5749  002EE6                     u3847:
  5750  002EE6  2EE8               	decfsz	wreg,f,c
  5751  002EE8  D7FE               	bra	u3847
  5752  002EEA  D000               	nop2	
  5753  002EEC                     
  5754                           ;main.c: 472:     ADCON0bits.ADON = 1;
  5755  002EEC  80C2               	bsf	194,0,c	;volatile
  5756  002EEE                     
  5757                           ;main.c: 473:     ADCON0bits.CHS = canalLeer;
  5758  002EEE  C005  F003         	movff	dameHumedadSuelo@canalLeer,??_dameHumedadSuelo
  5759  002EF2  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  5760  002EF4  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  5761  002EF6  50C2               	movf	194,w,c	;volatile
  5762  002EF8  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  5763  002EFA  0BC3               	andlw	-61
  5764  002EFC  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  5765  002EFE  6EC2               	movwf	194,c	;volatile
  5766  002F00                     
  5767                           ;main.c: 474:     ADCON0bits.GO = 1;
  5768  002F00  82C2               	bsf	194,1,c	;volatile
  5769  002F02                     
  5770                           ;main.c: 475:     ADCON0bits.GO_DONE = 1;
  5771  002F02  82C2               	bsf	194,1,c	;volatile
  5772  002F04                     l327:
  5773  002F04  B2C2               	btfsc	194,1,c	;volatile
  5774  002F06  EF87  F017         	goto	u3061
  5775  002F0A  EF89  F017         	goto	u3060
  5776  002F0E                     u3061:
  5777  002F0E  EF82  F017         	goto	l327
  5778  002F12                     u3060:
  5779  002F12                     
  5780                           ;main.c: 479:     ADCON0bits.ADON = 0;
  5781  002F12  90C2               	bcf	194,0,c	;volatile
  5782  002F14                     
  5783                           ;main.c: 481:     return (ADRESH << 8) +ADRESL;
  5784  002F14  50C4               	movf	196,w,c	;volatile
  5785  002F16  6E04               	movwf	(??_dameHumedadSuelo+1)^0,c
  5786  002F18  6A03               	clrf	??_dameHumedadSuelo^0,c
  5787  002F1A  50C3               	movf	195,w,c	;volatile
  5788  002F1C  2403               	addwf	??_dameHumedadSuelo^0,w,c
  5789  002F1E  6E01               	movwf	?_dameHumedadSuelo^0,c
  5790  002F20  0E00               	movlw	0
  5791  002F22  2004               	addwfc	(??_dameHumedadSuelo+1)^0,w,c
  5792  002F24  6E02               	movwf	(?_dameHumedadSuelo+1)^0,c
  5793  002F26  0012               	return		;funcret
  5794  002F28                     __end_of_dameHumedadSuelo:
  5795                           	opt callstack 0
  5796                           
  5797 ;; *************** function _dameTemperaturaHumedad *****************
  5798 ;; Defined at:
  5799 ;;		line 731 in file "main.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;		None
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;  checkSum        2    5[COMRAM] unsigned int 
  5804 ;;  temperatura     1   10[COMRAM] unsigned char 
  5805 ;;  humedad         1    9[COMRAM] unsigned char 
  5806 ;;  temperaturaD    1    8[COMRAM] unsigned char 
  5807 ;;  humedadDecim    1    7[COMRAM] unsigned char 
  5808 ;; Return value:  Size  Location     Type
  5809 ;;                  1    wreg      void 
  5810 ;; Registers used:
  5811 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5817 ;;      Params:         0       0       0       0       0       0       0       0       0
  5818 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5819 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5820 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5821 ;;Total ram usage:        8 bytes
  5822 ;; Hardware stack levels used:    1
  5823 ;; Hardware stack levels required when called:    3
  5824 ;; This function calls:
  5825 ;;		_DHT11_ReadData
  5826 ;;		_DHT11_Start
  5827 ;;		_UART_printf
  5828 ;;		_check_response
  5829 ;; This function is called by:
  5830 ;;		_estaSeco
  5831 ;;		_mostrarDatosSensores
  5832 ;;		_mostrarDatosSensoresWIFI
  5833 ;; This function uses a non-reentrant model
  5834 ;;
  5835                           
  5836                           	psect	text22
  5837  0027AC                     __ptext22:
  5838                           	opt callstack 0
  5839  0027AC                     _dameTemperaturaHumedad:
  5840                           	opt callstack 24
  5841  0027AC                     
  5842                           ;main.c: 733:     PIE1bits.RCIE = 0;
  5843  0027AC  9A9D               	bcf	157,5,c	;volatile
  5844                           
  5845                           ;main.c: 734:     T0CONbits.TMR0ON = 0;
  5846  0027AE  9ED5               	bcf	213,7,c	;volatile
  5847  0027B0                     l3860:
  5848                           
  5849                           ;main.c: 740:     DHT11_Start();
  5850  0027B0  ECF7  F018         	call	_DHT11_Start	;wreg free
  5851  0027B4                     
  5852                           ;main.c: 742:     while (!(check_response())) {
  5853  0027B4  ECB6  F017         	call	_check_response	;wreg free
  5854  0027B8  0900               	iorlw	0
  5855  0027BA  B4D8               	btfsc	status,2,c
  5856  0027BC  EFE2  F013         	goto	u2941
  5857  0027C0  EFE4  F013         	goto	u2940
  5858  0027C4                     u2941:
  5859  0027C4  EFD8  F013         	goto	l3860
  5860  0027C8                     u2940:
  5861  0027C8                     
  5862                           ;main.c: 748:     humedad = DHT11_ReadData();
  5863  0027C8  EC45  F016         	call	_DHT11_ReadData	;wreg free
  5864  0027CC  6E0A               	movwf	dameTemperaturaHumedad@humedad^0,c
  5865                           
  5866                           ;main.c: 749:     humedadDecimal = DHT11_ReadData();
  5867  0027CE  EC45  F016         	call	_DHT11_ReadData	;wreg free
  5868  0027D2  6E08               	movwf	dameTemperaturaHumedad@humedadDecimal^0,c
  5869                           
  5870                           ;main.c: 750:     temperatura = DHT11_ReadData();
  5871  0027D4  EC45  F016         	call	_DHT11_ReadData	;wreg free
  5872  0027D8  6E0B               	movwf	dameTemperaturaHumedad@temperatura^0,c
  5873                           
  5874                           ;main.c: 751:     temperaturaDecimal = DHT11_ReadData();
  5875  0027DA  EC45  F016         	call	_DHT11_ReadData	;wreg free
  5876  0027DE  6E09               	movwf	dameTemperaturaHumedad@temperaturaDecimal^0,c
  5877                           
  5878                           ;main.c: 752:     checkSum = DHT11_ReadData();
  5879  0027E0  EC45  F016         	call	_DHT11_ReadData	;wreg free
  5880  0027E4  6E04               	movwf	??_dameTemperaturaHumedad^0,c
  5881  0027E6  5004               	movf	??_dameTemperaturaHumedad^0,w,c
  5882  0027E8  6E06               	movwf	dameTemperaturaHumedad@checkSum^0,c
  5883  0027EA  6A07               	clrf	(dameTemperaturaHumedad@checkSum+1)^0,c
  5884  0027EC                     
  5885                           ;main.c: 754:     if (checkSum != (humedad + humedadDecimal + temperatura + temperaturaD
      +                          ecimal))
  5886  0027EC  5008               	movf	dameTemperaturaHumedad@humedadDecimal^0,w,c
  5887  0027EE  C00A  F004         	movff	dameTemperaturaHumedad@humedad,??_dameTemperaturaHumedad
  5888  0027F2  6A05               	clrf	(??_dameTemperaturaHumedad+1)^0,c
  5889  0027F4  2604               	addwf	??_dameTemperaturaHumedad^0,f,c
  5890  0027F6  0E00               	movlw	0
  5891  0027F8  2205               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  5892  0027FA  500B               	movf	dameTemperaturaHumedad@temperatura^0,w,c
  5893  0027FC  2604               	addwf	??_dameTemperaturaHumedad^0,f,c
  5894  0027FE  0E00               	movlw	0
  5895  002800  2205               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  5896  002802  5009               	movf	dameTemperaturaHumedad@temperaturaDecimal^0,w,c
  5897  002804  2604               	addwf	??_dameTemperaturaHumedad^0,f,c
  5898  002806  0E00               	movlw	0
  5899  002808  2205               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  5900  00280A  5006               	movf	dameTemperaturaHumedad@checkSum^0,w,c
  5901  00280C  1804               	xorwf	??_dameTemperaturaHumedad^0,w,c
  5902  00280E  E109               	bnz	u2950
  5903  002810  5007               	movf	(dameTemperaturaHumedad@checkSum+1)^0,w,c
  5904  002812  1805               	xorwf	(??_dameTemperaturaHumedad+1)^0,w,c
  5905  002814  B4D8               	btfsc	status,2,c
  5906  002816  EF0F  F014         	goto	u2951
  5907  00281A  EF11  F014         	goto	u2950
  5908  00281E                     u2951:
  5909  00281E  EF19  F014         	goto	l411
  5910  002822                     u2950:
  5911  002822                     
  5912                           ;main.c: 755:         UART_printf("Error de lectura DHT11\r\n");
  5913  002822  0EB4               	movlw	low STR_42
  5914  002824  6E02               	movwf	UART_printf@cadena^0,c
  5915  002826  0E7E               	movlw	high STR_42
  5916  002828  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5917  00282A  EC16  F016         	call	_UART_printf	;wreg free
  5918  00282E  EF1D  F014         	goto	l412
  5919  002832                     l411:
  5920                           
  5921                           ;main.c: 757:         Humedad = humedad;
  5922  002832  C00A  F07E         	movff	dameTemperaturaHumedad@humedad,_Humedad
  5923                           
  5924                           ;main.c: 758:         Temperatura = temperatura;
  5925  002836  C00B  F07F         	movff	dameTemperaturaHumedad@temperatura,_Temperatura
  5926  00283A                     l412:
  5927                           
  5928                           ;main.c: 761:     PIE1bits.RCIE = 1;
  5929  00283A  8A9D               	bsf	157,5,c	;volatile
  5930                           
  5931                           ;main.c: 762:     T0CONbits.TMR0ON = 1;
  5932  00283C  8ED5               	bsf	213,7,c	;volatile
  5933  00283E  0012               	return		;funcret
  5934  002840                     __end_of_dameTemperaturaHumedad:
  5935                           	opt callstack 0
  5936                           
  5937 ;; *************** function _check_response *****************
  5938 ;; Defined at:
  5939 ;;		line 38 in file "./DHT11.h"
  5940 ;; Parameters:    Size  Location     Type
  5941 ;;		None
  5942 ;; Auto vars:     Size  Location     Type
  5943 ;;  respuesta       1    0[COMRAM] unsigned char 
  5944 ;; Return value:  Size  Location     Type
  5945 ;;                  1    wreg      unsigned char 
  5946 ;; Registers used:
  5947 ;;		wreg, status,2
  5948 ;; Tracked objects:
  5949 ;;		On entry : 0/0
  5950 ;;		On exit  : 0/0
  5951 ;;		Unchanged: 0/0
  5952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5953 ;;      Params:         0       0       0       0       0       0       0       0       0
  5954 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5955 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5956 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5957 ;;Total ram usage:        1 bytes
  5958 ;; Hardware stack levels used:    1
  5959 ;; Hardware stack levels required when called:    1
  5960 ;; This function calls:
  5961 ;;		Nothing
  5962 ;; This function is called by:
  5963 ;;		_dameTemperaturaHumedad
  5964 ;; This function uses a non-reentrant model
  5965 ;;
  5966                           
  5967                           	psect	text23
  5968  002F6C                     __ptext23:
  5969                           	opt callstack 0
  5970  002F6C                     _check_response:
  5971                           	opt callstack 25
  5972  002F6C                     
  5973                           ;./DHT11.h: 40:     unsigned char respuesta = 0;
  5974  002F6C  0E00               	movlw	0
  5975  002F6E  6E01               	movwf	check_response@respuesta^0,c
  5976  002F70                     
  5977                           ;./DHT11.h: 41:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  5978  002F70  0E0D               	movlw	13
  5979  002F72                     u3857:
  5980  002F72  2EE8               	decfsz	wreg,f,c
  5981  002F74  D7FE               	bra	u3857
  5982  002F76  F000               	nop	
  5983  002F78                     
  5984                           ;./DHT11.h: 42:     if (!PORTDbits.RD7) {
  5985  002F78  BE83               	btfsc	131,7,c	;volatile
  5986  002F7A  EFC1  F017         	goto	u2831
  5987  002F7E  EFC3  F017         	goto	u2830
  5988  002F82                     u2831:
  5989  002F82  EFD4  F017         	goto	l3764
  5990  002F86                     u2830:
  5991  002F86                     
  5992                           ;./DHT11.h: 43:         _delay((unsigned long)((80)*(4000000/4000000.0)));
  5993  002F86  0E1A               	movlw	26
  5994  002F88                     u3867:
  5995  002F88  2EE8               	decfsz	wreg,f,c
  5996  002F8A  D7FE               	bra	u3867
  5997  002F8C  D000               	nop2	
  5998  002F8E                     
  5999                           ;./DHT11.h: 44:         if (PORTDbits.RD7) {
  6000  002F8E  AE83               	btfss	131,7,c	;volatile
  6001  002F90  EFCC  F017         	goto	u2841
  6002  002F94  EFCE  F017         	goto	u2840
  6003  002F98                     u2841:
  6004  002F98  EFD4  F017         	goto	l3764
  6005  002F9C                     u2840:
  6006  002F9C                     
  6007                           ;./DHT11.h: 45:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  6008  002F9C  0E10               	movlw	16
  6009  002F9E                     u3877:
  6010  002F9E  2EE8               	decfsz	wreg,f,c
  6011  002FA0  D7FE               	bra	u3877
  6012  002FA2  D000               	nop2	
  6013  002FA4                     
  6014                           ;./DHT11.h: 46:             respuesta = 1;
  6015  002FA4  0E01               	movlw	1
  6016  002FA6  6E01               	movwf	check_response@respuesta^0,c
  6017  002FA8                     l3764:
  6018                           
  6019                           ;./DHT11.h: 50:     return respuesta;
  6020  002FA8  5001               	movf	check_response@respuesta^0,w,c
  6021  002FAA  0012               	return		;funcret
  6022  002FAC                     __end_of_check_response:
  6023                           	opt callstack 0
  6024                           
  6025 ;; *************** function _DHT11_Start *****************
  6026 ;; Defined at:
  6027 ;;		line 23 in file "./DHT11.h"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;		None
  6030 ;; Auto vars:     Size  Location     Type
  6031 ;;		None
  6032 ;; Return value:  Size  Location     Type
  6033 ;;                  1    wreg      void 
  6034 ;; Registers used:
  6035 ;;		wreg
  6036 ;; Tracked objects:
  6037 ;;		On entry : 0/0
  6038 ;;		On exit  : 0/0
  6039 ;;		Unchanged: 0/0
  6040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6041 ;;      Params:         0       0       0       0       0       0       0       0       0
  6042 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6043 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6044 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6045 ;;Total ram usage:        1 bytes
  6046 ;; Hardware stack levels used:    1
  6047 ;; Hardware stack levels required when called:    1
  6048 ;; This function calls:
  6049 ;;		Nothing
  6050 ;; This function is called by:
  6051 ;;		_dameTemperaturaHumedad
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           	psect	text24
  6056  0031EE                     __ptext24:
  6057                           	opt callstack 0
  6058  0031EE                     _DHT11_Start:
  6059                           	opt callstack 25
  6060  0031EE                     
  6061                           ;./DHT11.h: 24:     TRISDbits.RD7 = 0;
  6062  0031EE  9E95               	bcf	149,7,c	;volatile
  6063                           
  6064                           ;./DHT11.h: 26:     LATDbits.LATD7 = 0;
  6065  0031F0  9E8C               	bcf	140,7,c	;volatile
  6066  0031F2                     
  6067                           ;./DHT11.h: 28:     _delay((unsigned long)((20)*(4000000/4000.0)));
  6068  0031F2  0E1A               	movlw	26
  6069  0031F4  6E01               	movwf	??_DHT11_Start^0,c
  6070  0031F6  0EF8               	movlw	248
  6071  0031F8                     u3887:
  6072  0031F8  2EE8               	decfsz	wreg,f,c
  6073  0031FA  D7FE               	bra	u3887
  6074  0031FC  2E01               	decfsz	??_DHT11_Start^0,f,c
  6075  0031FE  D7FC               	bra	u3887
  6076  003200  D000               	nop2	
  6077  003202                     
  6078                           ;./DHT11.h: 30:     LATDbits.LATD7 = 1;
  6079  003202  8E8C               	bsf	140,7,c	;volatile
  6080                           
  6081                           ;./DHT11.h: 32:     _delay((unsigned long)((30)*(4000000/4000000.0)));
  6082  003204  0E0A               	movlw	10
  6083  003206                     u3897:
  6084  003206  2EE8               	decfsz	wreg,f,c
  6085  003208  D7FE               	bra	u3897
  6086  00320A                     
  6087                           ;./DHT11.h: 34:     TRISDbits.RD7 = 1;
  6088  00320A  8E95               	bsf	149,7,c	;volatile
  6089  00320C  0012               	return		;funcret
  6090  00320E                     __end_of_DHT11_Start:
  6091                           	opt callstack 0
  6092                           
  6093 ;; *************** function _DHT11_ReadData *****************
  6094 ;; Defined at:
  6095 ;;		line 9 in file "./DHT11.h"
  6096 ;; Parameters:    Size  Location     Type
  6097 ;;		None
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;  data            1    1[COMRAM] unsigned char 
  6100 ;;  i               1    0[COMRAM] unsigned char 
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  1    wreg      unsigned char 
  6103 ;; Registers used:
  6104 ;;		wreg, status,2, status,0
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6110 ;;      Params:         0       0       0       0       0       0       0       0       0
  6111 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6112 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6113 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6114 ;;Total ram usage:        2 bytes
  6115 ;; Hardware stack levels used:    1
  6116 ;; Hardware stack levels required when called:    1
  6117 ;; This function calls:
  6118 ;;		Nothing
  6119 ;; This function is called by:
  6120 ;;		_dameTemperaturaHumedad
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text25
  6125  002C8A                     __ptext25:
  6126                           	opt callstack 0
  6127  002C8A                     _DHT11_ReadData:
  6128                           	opt callstack 25
  6129  002C8A                     
  6130                           ;./DHT11.h: 10:     char i, data = 0;
  6131  002C8A  0E00               	movlw	0
  6132  002C8C  6E02               	movwf	DHT11_ReadData@data^0,c
  6133                           
  6134                           ;./DHT11.h: 11:     for (i = 0; i < 8; i++) {
  6135  002C8E  0E00               	movlw	0
  6136  002C90  6E01               	movwf	DHT11_ReadData@i^0,c
  6137  002C92                     l150:
  6138  002C92  AE83               	btfss	131,7,c	;volatile
  6139  002C94  EF4E  F016         	goto	u2791
  6140  002C98  EF50  F016         	goto	u2790
  6141  002C9C                     u2791:
  6142  002C9C  EF49  F016         	goto	l150
  6143  002CA0                     u2790:
  6144  002CA0                     
  6145                           ;./DHT11.h: 13:         _delay((unsigned long)((30)*(4000000/4000000.0)));
  6146  002CA0  0E0A               	movlw	10
  6147  002CA2                     u3907:
  6148  002CA2  2EE8               	decfsz	wreg,f,c
  6149  002CA4  D7FE               	bra	u3907
  6150  002CA6                     
  6151                           ;./DHT11.h: 14:         if (PORTDbits.RD7 & 1)
  6152  002CA6  AE83               	btfss	131,7,c	;volatile
  6153  002CA8  EF58  F016         	goto	u2801
  6154  002CAC  EF5A  F016         	goto	u2800
  6155  002CB0                     u2801:
  6156  002CB0  EF5E  F016         	goto	l3732
  6157  002CB4                     u2800:
  6158  002CB4                     
  6159                           ;./DHT11.h: 15:             data = ((data << 1) | 1);
  6160  002CB4  80D8               	bsf	status,0,c
  6161  002CB6  3602               	rlcf	DHT11_ReadData@data^0,f,c
  6162  002CB8  EF61  F016         	goto	l155
  6163  002CBC                     l3732:
  6164                           
  6165                           ;./DHT11.h: 17:             data = (data << 1);
  6166  002CBC  5002               	movf	DHT11_ReadData@data^0,w,c
  6167  002CBE  2402               	addwf	DHT11_ReadData@data^0,w,c
  6168  002CC0  6E02               	movwf	DHT11_ReadData@data^0,c
  6169  002CC2                     l155:
  6170  002CC2  BE83               	btfsc	131,7,c	;volatile
  6171  002CC4  EF66  F016         	goto	u2811
  6172  002CC8  EF68  F016         	goto	u2810
  6173  002CCC                     u2811:
  6174  002CCC  EF61  F016         	goto	l155
  6175  002CD0                     u2810:
  6176  002CD0                     
  6177                           ;./DHT11.h: 19:     }
  6178  002CD0  2A01               	incf	DHT11_ReadData@i^0,f,c
  6179  002CD2  0E07               	movlw	7
  6180  002CD4  6401               	cpfsgt	DHT11_ReadData@i^0,c
  6181  002CD6  EF6F  F016         	goto	u2821
  6182  002CDA  EF71  F016         	goto	u2820
  6183  002CDE                     u2821:
  6184  002CDE  EF49  F016         	goto	l150
  6185  002CE2                     u2820:
  6186  002CE2                     
  6187                           ;./DHT11.h: 20:     return data;
  6188  002CE2  5002               	movf	DHT11_ReadData@data^0,w,c
  6189  002CE4  0012               	return		;funcret
  6190  002CE6                     __end_of_DHT11_ReadData:
  6191                           	opt callstack 0
  6192                           
  6193 ;; *************** function _fijaHoraRtc *****************
  6194 ;; Defined at:
  6195 ;;		line 370 in file "main.c"
  6196 ;; Parameters:    Size  Location     Type
  6197 ;;		None
  6198 ;; Auto vars:     Size  Location     Type
  6199 ;;		None
  6200 ;; Return value:  Size  Location     Type
  6201 ;;                  1    wreg      void 
  6202 ;; Registers used:
  6203 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6204 ;; Tracked objects:
  6205 ;;		On entry : 0/0
  6206 ;;		On exit  : 0/0
  6207 ;;		Unchanged: 0/0
  6208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6209 ;;      Params:         0       0       0       0       0       0       0       0       0
  6210 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6211 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6212 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6213 ;;Total ram usage:        0 bytes
  6214 ;; Hardware stack levels used:    1
  6215 ;; Hardware stack levels required when called:    5
  6216 ;; This function calls:
  6217 ;;		_UART_printf
  6218 ;;		_escribe_rtc
  6219 ;;		_setRtc
  6220 ;; This function is called by:
  6221 ;;		_sistemaPrincipal
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           
  6225                           	psect	text26
  6226  002B00                     __ptext26:
  6227                           	opt callstack 0
  6228  002B00                     _fijaHoraRtc:
  6229                           	opt callstack 24
  6230  002B00                     
  6231                           ;main.c: 372:     UART_printf("\r\n FIJA HORA \r\n");
  6232  002B00  0EC3               	movlw	low STR_3
  6233  002B02  6E02               	movwf	UART_printf@cadena^0,c
  6234  002B04  0E7F               	movlw	high STR_3
  6235  002B06  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6236  002B08  EC16  F016         	call	_UART_printf	;wreg free
  6237                           
  6238                           ;main.c: 375:     UART_printf("\r\n Envie las Horas en formato 24 Ej: 15 \r\n");
  6239  002B0C  0E1B               	movlw	low STR_4
  6240  002B0E  6E02               	movwf	UART_printf@cadena^0,c
  6241  002B10  0E7C               	movlw	high STR_4
  6242  002B12  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6243  002B14  EC16  F016         	call	_UART_printf	;wreg free
  6244  002B18                     
  6245                           ;main.c: 378:     if (setRtc(0x02)) {
  6246  002B18  0E02               	movlw	2
  6247  002B1A  ECDB  F014         	call	_setRtc
  6248  002B1E  0900               	iorlw	0
  6249  002B20  B4D8               	btfsc	status,2,c
  6250  002B22  EF95  F015         	goto	u3431
  6251  002B26  EF97  F015         	goto	u3430
  6252  002B2A                     u3431:
  6253  002B2A  EFB3  F015         	goto	l311
  6254  002B2E                     u3430:
  6255  002B2E                     
  6256                           ;main.c: 379:         UART_printf("\r\n Envie los Minutos Ej: 25 \r\n");
  6257  002B2E  0EF5               	movlw	low STR_5
  6258  002B30  6E02               	movwf	UART_printf@cadena^0,c
  6259  002B32  0E7D               	movlw	high STR_5
  6260  002B34  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6261  002B36  EC16  F016         	call	_UART_printf	;wreg free
  6262  002B3A                     
  6263                           ;main.c: 380:         if (setRtc(0x01)) {
  6264  002B3A  0E01               	movlw	1
  6265  002B3C  ECDB  F014         	call	_setRtc
  6266  002B40  0900               	iorlw	0
  6267  002B42  B4D8               	btfsc	status,2,c
  6268  002B44  EFA6  F015         	goto	u3441
  6269  002B48  EFA8  F015         	goto	u3440
  6270  002B4C                     u3441:
  6271  002B4C  EFB3  F015         	goto	l311
  6272  002B50                     u3440:
  6273  002B50                     
  6274                           ;main.c: 381:             UART_printf("\r\n HORA ESTABLECIDA CORRECTAMENTE \r\n");
  6275  002B50  0EE0               	movlw	low STR_6
  6276  002B52  6E02               	movwf	UART_printf@cadena^0,c
  6277  002B54  0E7C               	movlw	high STR_6
  6278  002B56  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6279  002B58  EC16  F016         	call	_UART_printf	;wreg free
  6280  002B5C                     
  6281                           ;main.c: 382:             escribe_rtc(0x00, 0);
  6282  002B5C  0E00               	movlw	0
  6283  002B5E  6E03               	movwf	escribe_rtc@dato^0,c
  6284  002B60  0E00               	movlw	0
  6285  002B62  EC07  F019         	call	_escribe_rtc
  6286  002B66                     l311:
  6287  002B66  0012               	return		;funcret
  6288  002B68                     __end_of_fijaHoraRtc:
  6289                           	opt callstack 0
  6290                           
  6291 ;; *************** function _fijaDiaRtc *****************
  6292 ;; Defined at:
  6293 ;;		line 193 in file "main.c"
  6294 ;; Parameters:    Size  Location     Type
  6295 ;;		None
  6296 ;; Auto vars:     Size  Location     Type
  6297 ;;		None
  6298 ;; Return value:  Size  Location     Type
  6299 ;;                  1    wreg      void 
  6300 ;; Registers used:
  6301 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6302 ;; Tracked objects:
  6303 ;;		On entry : 0/0
  6304 ;;		On exit  : 0/0
  6305 ;;		Unchanged: 0/0
  6306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6307 ;;      Params:         0       0       0       0       0       0       0       0       0
  6308 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6309 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6310 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6311 ;;Total ram usage:        0 bytes
  6312 ;; Hardware stack levels used:    1
  6313 ;; Hardware stack levels required when called:    5
  6314 ;; This function calls:
  6315 ;;		_UART_printf
  6316 ;;		_setRtc
  6317 ;; This function is called by:
  6318 ;;		_sistemaPrincipal
  6319 ;; This function uses a non-reentrant model
  6320 ;;
  6321                           
  6322                           	psect	text27
  6323  0030CC                     __ptext27:
  6324                           	opt callstack 0
  6325  0030CC                     _fijaDiaRtc:
  6326                           	opt callstack 24
  6327  0030CC                     
  6328                           ;main.c: 195:     UART_printf("\r\n Envie el dia de la semana Ej: 01 = DOMINGO ... 07 = 
      +                          SABADO \r\n");
  6329  0030CC  0E85               	movlw	low STR_1
  6330  0030CE  6E02               	movwf	UART_printf@cadena^0,c
  6331  0030D0  0E79               	movlw	high STR_1
  6332  0030D2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6333  0030D4  EC16  F016         	call	_UART_printf	;wreg free
  6334  0030D8                     
  6335                           ;main.c: 197:     if (setRtc(0x03)) {
  6336  0030D8  0E03               	movlw	3
  6337  0030DA  ECDB  F014         	call	_setRtc
  6338  0030DE  0900               	iorlw	0
  6339  0030E0  B4D8               	btfsc	status,2,c
  6340  0030E2  EF75  F018         	goto	u3321
  6341  0030E6  EF77  F018         	goto	u3320
  6342  0030EA                     u3321:
  6343  0030EA  EF7D  F018         	goto	l255
  6344  0030EE                     u3320:
  6345  0030EE                     
  6346                           ;main.c: 198:         UART_printf("\r\n DIA ESTABLECIDO CORRECTAMENTE \r\n");
  6347  0030EE  0E4F               	movlw	low STR_2
  6348  0030F0  6E02               	movwf	UART_printf@cadena^0,c
  6349  0030F2  0E7D               	movlw	high STR_2
  6350  0030F4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6351  0030F6  EC16  F016         	call	_UART_printf	;wreg free
  6352  0030FA                     l255:
  6353  0030FA  0012               	return		;funcret
  6354  0030FC                     __end_of_fijaDiaRtc:
  6355                           	opt callstack 0
  6356                           
  6357 ;; *************** function _setRtc *****************
  6358 ;; Defined at:
  6359 ;;		line 203 in file "main.c"
  6360 ;; Parameters:    Size  Location     Type
  6361 ;;  direccion       1    wreg     unsigned char 
  6362 ;; Auto vars:     Size  Location     Type
  6363 ;;  direccion       1   14[COMRAM] unsigned char 
  6364 ;;  dato            1   17[COMRAM] unsigned char 
  6365 ;;  datoRtc         1   16[COMRAM] unsigned char 
  6366 ;;  seteado         1   15[COMRAM] unsigned char 
  6367 ;; Return value:  Size  Location     Type
  6368 ;;                  1    wreg      unsigned char 
  6369 ;; Registers used:
  6370 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6371 ;; Tracked objects:
  6372 ;;		On entry : 0/0
  6373 ;;		On exit  : 0/0
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6376 ;;      Params:         0       0       0       0       0       0       0       0       0
  6377 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6378 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6379 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6380 ;;Total ram usage:        4 bytes
  6381 ;; Hardware stack levels used:    1
  6382 ;; Hardware stack levels required when called:    4
  6383 ;; This function calls:
  6384 ;;		___awdiv
  6385 ;;		___awmod
  6386 ;;		_escribe_rtc
  6387 ;;		_getValue
  6388 ;; This function is called by:
  6389 ;;		_fijaDiaRtc
  6390 ;;		_fijaHoraRtc
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394                           	psect	text28
  6395  0029B6                     __ptext28:
  6396                           	opt callstack 0
  6397  0029B6                     _setRtc:
  6398                           	opt callstack 24
  6399                           
  6400                           ;incstack = 0
  6401                           ;setRtc@direccion stored from wreg
  6402  0029B6  6E0F               	movwf	setRtc@direccion^0,c
  6403  0029B8                     
  6404                           ;main.c: 206:     unsigned char seteado = 0;
  6405  0029B8  0E00               	movlw	0
  6406  0029BA  6E10               	movwf	setRtc@seteado^0,c
  6407                           
  6408                           ;main.c: 207:     unsigned char datoRtc = 0;
  6409  0029BC  0E00               	movlw	0
  6410  0029BE  6E11               	movwf	setRtc@datoRtc^0,c
  6411  0029C0                     
  6412                           ;main.c: 209:     dato = getValue(2);
  6413  0029C0  0E00               	movlw	0
  6414  0029C2  6E05               	movwf	(getValue@numCharacters+1)^0,c
  6415  0029C4  0E02               	movlw	2
  6416  0029C6  6E04               	movwf	getValue@numCharacters^0,c
  6417  0029C8  EC20  F007         	call	_getValue	;wreg free
  6418  0029CC  6E12               	movwf	setRtc@dato^0,c
  6419  0029CE                     
  6420                           ;main.c: 211:     if (dato != '@') {
  6421  0029CE  0E40               	movlw	64
  6422  0029D0  1812               	xorwf	setRtc@dato^0,w,c
  6423  0029D2  B4D8               	btfsc	status,2,c
  6424  0029D4  EFEE  F014         	goto	u3221
  6425  0029D8  EFF0  F014         	goto	u3220
  6426  0029DC                     u3221:
  6427  0029DC  EF11  F015         	goto	l4144
  6428  0029E0                     u3220:
  6429  0029E0                     
  6430                           ;main.c: 213:         datoRtc = ((dato / 10) & 0x0F) << 4;
  6431  0029E0  C012  F001         	movff	setRtc@dato,___awdiv@dividend
  6432  0029E4  6A02               	clrf	(___awdiv@dividend+1)^0,c
  6433  0029E6  0E00               	movlw	0
  6434  0029E8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6435  0029EA  0E0A               	movlw	10
  6436  0029EC  6E03               	movwf	___awdiv@divisor^0,c
  6437  0029EE  EC2A  F012         	call	___awdiv	;wreg free
  6438  0029F2  0E0F               	movlw	15
  6439  0029F4  1601               	andwf	?___awdiv^0,f,c
  6440  0029F6  3801               	swapf	?___awdiv^0,w,c
  6441  0029F8  0BF0               	andlw	240
  6442  0029FA  6E11               	movwf	setRtc@datoRtc^0,c
  6443                           
  6444                           ;main.c: 214:         datoRtc |= (dato % 10) & 0x0F;
  6445  0029FC  C012  F001         	movff	setRtc@dato,___awmod@dividend
  6446  002A00  6A02               	clrf	(___awmod@dividend+1)^0,c
  6447  002A02  0E00               	movlw	0
  6448  002A04  6E04               	movwf	(___awmod@divisor+1)^0,c
  6449  002A06  0E0A               	movlw	10
  6450  002A08  6E03               	movwf	___awmod@divisor^0,c
  6451  002A0A  EC8C  F012         	call	___awmod	;wreg free
  6452  002A0E  5001               	movf	?___awmod^0,w,c
  6453  002A10  0B0F               	andlw	15
  6454  002A12  1211               	iorwf	setRtc@datoRtc^0,f,c
  6455                           
  6456                           ;main.c: 215:         escribe_rtc(direccion, datoRtc);
  6457  002A14  C011  F003         	movff	setRtc@datoRtc,escribe_rtc@dato
  6458  002A18  500F               	movf	setRtc@direccion^0,w,c
  6459  002A1A  EC07  F019         	call	_escribe_rtc
  6460  002A1E                     
  6461                           ;main.c: 216:         seteado = 1;
  6462  002A1E  0E01               	movlw	1
  6463  002A20  6E10               	movwf	setRtc@seteado^0,c
  6464  002A22                     l4144:
  6465                           
  6466                           ;main.c: 219:     return seteado;
  6467  002A22  5010               	movf	setRtc@seteado^0,w,c
  6468  002A24  0012               	return		;funcret
  6469  002A26                     __end_of_setRtc:
  6470                           	opt callstack 0
  6471                           
  6472 ;; *************** function _escribe_rtc *****************
  6473 ;; Defined at:
  6474 ;;		line 2 in file "./RTC.h"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;  direccion       1    wreg     unsigned char 
  6477 ;;  dato            1    2[COMRAM] unsigned char 
  6478 ;; Auto vars:     Size  Location     Type
  6479 ;;  direccion       1    3[COMRAM] unsigned char 
  6480 ;; Return value:  Size  Location     Type
  6481 ;;                  1    wreg      void 
  6482 ;; Registers used:
  6483 ;;		wreg, status,2, status,0, cstack
  6484 ;; Tracked objects:
  6485 ;;		On entry : 0/0
  6486 ;;		On exit  : 0/0
  6487 ;;		Unchanged: 0/0
  6488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6489 ;;      Params:         1       0       0       0       0       0       0       0       0
  6490 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6491 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6492 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6493 ;;Total ram usage:        2 bytes
  6494 ;; Hardware stack levels used:    1
  6495 ;; Hardware stack levels required when called:    3
  6496 ;; This function calls:
  6497 ;;		_i2c_detener
  6498 ;;		_i2c_envia_dato
  6499 ;;		_i2c_inicia_com
  6500 ;; This function is called by:
  6501 ;;		_setRtc
  6502 ;;		_fijaHoraRtc
  6503 ;;		_setRtcDefault
  6504 ;; This function uses a non-reentrant model
  6505 ;;
  6506                           
  6507                           	psect	text29
  6508  00320E                     __ptext29:
  6509                           	opt callstack 0
  6510  00320E                     _escribe_rtc:
  6511                           	opt callstack 24
  6512                           
  6513                           ;incstack = 0
  6514                           ;escribe_rtc@direccion stored from wreg
  6515  00320E  6E04               	movwf	escribe_rtc@direccion^0,c
  6516  003210                     
  6517                           ;./RTC.h: 3:     i2c_inicia_com();
  6518  003210  EC5B  F019         	call	_i2c_inicia_com	;wreg free
  6519                           
  6520                           ;./RTC.h: 4:     i2c_envia_dato(0xD0);
  6521  003214  0ED0               	movlw	208
  6522  003216  EC41  F019         	call	_i2c_envia_dato
  6523                           
  6524                           ;./RTC.h: 5:     i2c_envia_dato(direccion);
  6525  00321A  5004               	movf	escribe_rtc@direccion^0,w,c
  6526  00321C  EC41  F019         	call	_i2c_envia_dato
  6527                           
  6528                           ;./RTC.h: 6:     i2c_envia_dato(dato);
  6529  003220  5003               	movf	escribe_rtc@dato^0,w,c
  6530  003222  EC41  F019         	call	_i2c_envia_dato
  6531                           
  6532                           ;./RTC.h: 7:     i2c_detener();
  6533  003226  EC5F  F019         	call	_i2c_detener	;wreg free
  6534  00322A  0012               	return		;funcret
  6535  00322C                     __end_of_escribe_rtc:
  6536                           	opt callstack 0
  6537                           
  6538 ;; *************** function ___awmod *****************
  6539 ;; Defined at:
  6540 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  6541 ;; Parameters:    Size  Location     Type
  6542 ;;  dividend        2    0[COMRAM] int 
  6543 ;;  divisor         2    2[COMRAM] int 
  6544 ;; Auto vars:     Size  Location     Type
  6545 ;;  sign            1    5[COMRAM] unsigned char 
  6546 ;;  counter         1    4[COMRAM] unsigned char 
  6547 ;; Return value:  Size  Location     Type
  6548 ;;                  2    0[COMRAM] int 
  6549 ;; Registers used:
  6550 ;;		wreg, status,2, status,0
  6551 ;; Tracked objects:
  6552 ;;		On entry : 0/0
  6553 ;;		On exit  : 0/0
  6554 ;;		Unchanged: 0/0
  6555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6556 ;;      Params:         4       0       0       0       0       0       0       0       0
  6557 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6558 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6559 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6560 ;;Total ram usage:        6 bytes
  6561 ;; Hardware stack levels used:    1
  6562 ;; Hardware stack levels required when called:    1
  6563 ;; This function calls:
  6564 ;;		Nothing
  6565 ;; This function is called by:
  6566 ;;		_setRtc
  6567 ;; This function uses a non-reentrant model
  6568 ;;
  6569                           
  6570                           	psect	text30
  6571  002518                     __ptext30:
  6572                           	opt callstack 0
  6573  002518                     ___awmod:
  6574                           	opt callstack 26
  6575  002518  0E00               	movlw	0
  6576  00251A  6E06               	movwf	___awmod@sign^0,c
  6577  00251C  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6578  00251E  EF95  F012         	goto	u3140
  6579  002522  EF93  F012         	goto	u3141
  6580  002526                     u3141:
  6581  002526  EF9B  F012         	goto	l4076
  6582  00252A                     u3140:
  6583  00252A  6C01               	negf	___awmod@dividend^0,c
  6584  00252C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6585  00252E  B0D8               	btfsc	status,0,c
  6586  002530  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6587  002532  0E01               	movlw	1
  6588  002534  6E06               	movwf	___awmod@sign^0,c
  6589  002536                     l4076:
  6590  002536  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6591  002538  EFA2  F012         	goto	u3150
  6592  00253C  EFA0  F012         	goto	u3151
  6593  002540                     u3151:
  6594  002540  EFA6  F012         	goto	l4080
  6595  002544                     u3150:
  6596  002544  6C03               	negf	___awmod@divisor^0,c
  6597  002546  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6598  002548  B0D8               	btfsc	status,0,c
  6599  00254A  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6600  00254C                     l4080:
  6601  00254C  5003               	movf	___awmod@divisor^0,w,c
  6602  00254E  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6603  002550  B4D8               	btfsc	status,2,c
  6604  002552  EFAD  F012         	goto	u3161
  6605  002556  EFAF  F012         	goto	u3160
  6606  00255A                     u3161:
  6607  00255A  EFD3  F012         	goto	l4096
  6608  00255E                     u3160:
  6609  00255E  0E01               	movlw	1
  6610  002560  6E05               	movwf	___awmod@counter^0,c
  6611  002562  EFB7  F012         	goto	l4086
  6612  002566                     l4084:
  6613  002566  90D8               	bcf	status,0,c
  6614  002568  3603               	rlcf	___awmod@divisor^0,f,c
  6615  00256A  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6616  00256C  2A05               	incf	___awmod@counter^0,f,c
  6617  00256E                     l4086:
  6618  00256E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6619  002570  EFBC  F012         	goto	u3171
  6620  002574  EFBE  F012         	goto	u3170
  6621  002578                     u3171:
  6622  002578  EFB3  F012         	goto	l4084
  6623  00257C                     u3170:
  6624  00257C                     l4088:
  6625  00257C  5003               	movf	___awmod@divisor^0,w,c
  6626  00257E  5C01               	subwf	___awmod@dividend^0,w,c
  6627  002580  5004               	movf	(___awmod@divisor+1)^0,w,c
  6628  002582  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6629  002584  A0D8               	btfss	status,0,c
  6630  002586  EFC7  F012         	goto	u3181
  6631  00258A  EFC9  F012         	goto	u3180
  6632  00258E                     u3181:
  6633  00258E  EFCD  F012         	goto	l4092
  6634  002592                     u3180:
  6635  002592  5003               	movf	___awmod@divisor^0,w,c
  6636  002594  5E01               	subwf	___awmod@dividend^0,f,c
  6637  002596  5004               	movf	(___awmod@divisor+1)^0,w,c
  6638  002598  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6639  00259A                     l4092:
  6640  00259A  90D8               	bcf	status,0,c
  6641  00259C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6642  00259E  3203               	rrcf	___awmod@divisor^0,f,c
  6643  0025A0  2E05               	decfsz	___awmod@counter^0,f,c
  6644  0025A2  EFBE  F012         	goto	l4088
  6645  0025A6                     l4096:
  6646  0025A6  5006               	movf	___awmod@sign^0,w,c
  6647  0025A8  B4D8               	btfsc	status,2,c
  6648  0025AA  EFD9  F012         	goto	u3191
  6649  0025AE  EFDB  F012         	goto	u3190
  6650  0025B2                     u3191:
  6651  0025B2  EFDF  F012         	goto	l4100
  6652  0025B6                     u3190:
  6653  0025B6  6C01               	negf	___awmod@dividend^0,c
  6654  0025B8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6655  0025BA  B0D8               	btfsc	status,0,c
  6656  0025BC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6657  0025BE                     l4100:
  6658  0025BE  C001  F001         	movff	___awmod@dividend,?___awmod
  6659  0025C2  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6660  0025C6  0012               	return		;funcret
  6661  0025C8                     __end_of___awmod:
  6662                           	opt callstack 0
  6663                           
  6664 ;; *************** function ___awdiv *****************
  6665 ;; Defined at:
  6666 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  6667 ;; Parameters:    Size  Location     Type
  6668 ;;  dividend        2    0[COMRAM] int 
  6669 ;;  divisor         2    2[COMRAM] int 
  6670 ;; Auto vars:     Size  Location     Type
  6671 ;;  quotient        2    6[COMRAM] int 
  6672 ;;  sign            1    5[COMRAM] unsigned char 
  6673 ;;  counter         1    4[COMRAM] unsigned char 
  6674 ;; Return value:  Size  Location     Type
  6675 ;;                  2    0[COMRAM] int 
  6676 ;; Registers used:
  6677 ;;		wreg, status,2, status,0
  6678 ;; Tracked objects:
  6679 ;;		On entry : 0/0
  6680 ;;		On exit  : 0/0
  6681 ;;		Unchanged: 0/0
  6682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6683 ;;      Params:         4       0       0       0       0       0       0       0       0
  6684 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6685 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6686 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6687 ;;Total ram usage:        8 bytes
  6688 ;; Hardware stack levels used:    1
  6689 ;; Hardware stack levels required when called:    1
  6690 ;; This function calls:
  6691 ;;		Nothing
  6692 ;; This function is called by:
  6693 ;;		_setRtc
  6694 ;; This function uses a non-reentrant model
  6695 ;;
  6696                           
  6697                           	psect	text31
  6698  002454                     __ptext31:
  6699                           	opt callstack 0
  6700  002454                     ___awdiv:
  6701                           	opt callstack 26
  6702  002454  0E00               	movlw	0
  6703  002456  6E06               	movwf	___awdiv@sign^0,c
  6704  002458  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6705  00245A  EF33  F012         	goto	u3080
  6706  00245E  EF31  F012         	goto	u3081
  6707  002462                     u3081:
  6708  002462  EF39  F012         	goto	l4032
  6709  002466                     u3080:
  6710  002466  6C03               	negf	___awdiv@divisor^0,c
  6711  002468  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6712  00246A  B0D8               	btfsc	status,0,c
  6713  00246C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6714  00246E  0E01               	movlw	1
  6715  002470  6E06               	movwf	___awdiv@sign^0,c
  6716  002472                     l4032:
  6717  002472  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6718  002474  EF40  F012         	goto	u3090
  6719  002478  EF3E  F012         	goto	u3091
  6720  00247C                     u3091:
  6721  00247C  EF46  F012         	goto	l4038
  6722  002480                     u3090:
  6723  002480  6C01               	negf	___awdiv@dividend^0,c
  6724  002482  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6725  002484  B0D8               	btfsc	status,0,c
  6726  002486  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6727  002488  0E01               	movlw	1
  6728  00248A  1A06               	xorwf	___awdiv@sign^0,f,c
  6729  00248C                     l4038:
  6730  00248C  0E00               	movlw	0
  6731  00248E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6732  002490  0E00               	movlw	0
  6733  002492  6E07               	movwf	___awdiv@quotient^0,c
  6734  002494  5003               	movf	___awdiv@divisor^0,w,c
  6735  002496  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6736  002498  B4D8               	btfsc	status,2,c
  6737  00249A  EF51  F012         	goto	u3101
  6738  00249E  EF53  F012         	goto	u3100
  6739  0024A2                     u3101:
  6740  0024A2  EF7B  F012         	goto	l4060
  6741  0024A6                     u3100:
  6742  0024A6  0E01               	movlw	1
  6743  0024A8  6E05               	movwf	___awdiv@counter^0,c
  6744  0024AA  EF5B  F012         	goto	l4046
  6745  0024AE                     l4044:
  6746  0024AE  90D8               	bcf	status,0,c
  6747  0024B0  3603               	rlcf	___awdiv@divisor^0,f,c
  6748  0024B2  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6749  0024B4  2A05               	incf	___awdiv@counter^0,f,c
  6750  0024B6                     l4046:
  6751  0024B6  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6752  0024B8  EF60  F012         	goto	u3111
  6753  0024BC  EF62  F012         	goto	u3110
  6754  0024C0                     u3111:
  6755  0024C0  EF57  F012         	goto	l4044
  6756  0024C4                     u3110:
  6757  0024C4                     l4048:
  6758  0024C4  90D8               	bcf	status,0,c
  6759  0024C6  3607               	rlcf	___awdiv@quotient^0,f,c
  6760  0024C8  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6761  0024CA  5003               	movf	___awdiv@divisor^0,w,c
  6762  0024CC  5C01               	subwf	___awdiv@dividend^0,w,c
  6763  0024CE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6764  0024D0  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6765  0024D2  A0D8               	btfss	status,0,c
  6766  0024D4  EF6E  F012         	goto	u3121
  6767  0024D8  EF70  F012         	goto	u3120
  6768  0024DC                     u3121:
  6769  0024DC  EF75  F012         	goto	l4056
  6770  0024E0                     u3120:
  6771  0024E0  5003               	movf	___awdiv@divisor^0,w,c
  6772  0024E2  5E01               	subwf	___awdiv@dividend^0,f,c
  6773  0024E4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6774  0024E6  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6775  0024E8  8007               	bsf	___awdiv@quotient^0,0,c
  6776  0024EA                     l4056:
  6777  0024EA  90D8               	bcf	status,0,c
  6778  0024EC  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6779  0024EE  3203               	rrcf	___awdiv@divisor^0,f,c
  6780  0024F0  2E05               	decfsz	___awdiv@counter^0,f,c
  6781  0024F2  EF62  F012         	goto	l4048
  6782  0024F6                     l4060:
  6783  0024F6  5006               	movf	___awdiv@sign^0,w,c
  6784  0024F8  B4D8               	btfsc	status,2,c
  6785  0024FA  EF81  F012         	goto	u3131
  6786  0024FE  EF83  F012         	goto	u3130
  6787  002502                     u3131:
  6788  002502  EF87  F012         	goto	l4064
  6789  002506                     u3130:
  6790  002506  6C07               	negf	___awdiv@quotient^0,c
  6791  002508  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6792  00250A  B0D8               	btfsc	status,0,c
  6793  00250C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6794  00250E                     l4064:
  6795  00250E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6796  002512  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6797  002516  0012               	return		;funcret
  6798  002518                     __end_of___awdiv:
  6799                           	opt callstack 0
  6800                           
  6801 ;; *************** function _dameDatosSistema *****************
  6802 ;; Defined at:
  6803 ;;		line 658 in file "main.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;		None
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;  j               2   38[BANK0 ] int 
  6808 ;;  i               2   40[BANK0 ] int 
  6809 ;; Return value:  Size  Location     Type
  6810 ;;                  1    wreg      void 
  6811 ;; Registers used:
  6812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6813 ;; Tracked objects:
  6814 ;;		On entry : 0/0
  6815 ;;		On exit  : 0/0
  6816 ;;		Unchanged: 0/0
  6817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6818 ;;      Params:         0       0       0       0       0       0       0       0       0
  6819 ;;      Locals:         0      10       0       0       0       0       0       0       0
  6820 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6821 ;;      Totals:         0      14       0       0       0       0       0       0       0
  6822 ;;Total ram usage:       14 bytes
  6823 ;; Hardware stack levels used:    1
  6824 ;; Hardware stack levels required when called:    9
  6825 ;; This function calls:
  6826 ;;		_UART_printf
  6827 ;;		_UART_write
  6828 ;;		___wmul
  6829 ;;		_sprintf
  6830 ;; This function is called by:
  6831 ;;		_sistemaPrincipal
  6832 ;; This function uses a non-reentrant model
  6833 ;;
  6834                           
  6835                           	psect	text32
  6836  000594                     __ptext32:
  6837                           	opt callstack 0
  6838  000594                     _dameDatosSistema:
  6839                           	opt callstack 20
  6840  000594                     
  6841                           ;main.c: 660:     UART_write('I');
  6842  000594  0E49               	movlw	73
  6843  000596  EC23  F019         	call	_UART_write
  6844  00059A                     
  6845                           ;main.c: 662:     UART_printf("\r\n\nHora | Regar(1 si 0 no) | Minutos de riego | DIAS R
      +                          EGAR\r\n\n");
  6846  00059A  0EC6               	movlw	low STR_32
  6847  00059C  6E02               	movwf	UART_printf@cadena^0,c
  6848  00059E  0E79               	movlw	high STR_32
  6849  0005A0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6850  0005A2  EC16  F016         	call	_UART_printf	;wreg free
  6851  0005A6                     
  6852                           ;main.c: 663:     UART_printf("                                             DLMIJVS\r\n"
      +                          );
  6853  0005A6  0EEB               	movlw	low STR_33
  6854  0005A8  6E02               	movwf	UART_printf@cadena^0,c
  6855  0005AA  0E7A               	movlw	high STR_33
  6856  0005AC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6857  0005AE  EC16  F016         	call	_UART_printf	;wreg free
  6858  0005B2                     
  6859                           ;main.c: 665:     for (int i = 0; i < 24; i++) {
  6860  0005B2  0E00               	movlw	0
  6861  0005B4  0100               	movlb	0	; () banked
  6862  0005B6  6FE0               	movwf	(dameDatosSistema@i+1)& (0+255),b
  6863  0005B8  0E00               	movlw	0
  6864  0005BA  6FDF               	movwf	dameDatosSistema@i& (0+255),b
  6865  0005BC                     l4426:
  6866                           
  6867                           ; BSR set to: 0
  6868                           ;main.c: 667:         if (horarios[i].regar) {
  6869  0005BC  C0DF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6870  0005C0  C0E0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6871  0005C4  0E00               	movlw	0
  6872  0005C6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6873  0005C8  0E0C               	movlw	12
  6874  0005CA  6E03               	movwf	___wmul@multiplicand^0,c
  6875  0005CC  ECD4  F018         	call	___wmul	;wreg free
  6876  0005D0  0E4F               	movlw	low (_horarios+9)
  6877  0005D2  2401               	addwf	?___wmul^0,w,c
  6878  0005D4  6ED9               	movwf	fsr2l,c
  6879  0005D6  0E01               	movlw	high (_horarios+9)
  6880  0005D8  2002               	addwfc	(?___wmul+1)^0,w,c
  6881  0005DA  6EDA               	movwf	fsr2h,c
  6882  0005DC  50DF               	movf	indf2,w,c
  6883  0005DE  B4D8               	btfsc	status,2,c
  6884  0005E0  EFF4  F002         	goto	u3511
  6885  0005E4  EFF6  F002         	goto	u3510
  6886  0005E8                     u3511:
  6887  0005E8  EFB5  F003         	goto	l4452
  6888  0005EC                     u3510:
  6889  0005EC                     
  6890                           ;main.c: 669:             for (int j = 0; j < 7; j++) {
  6891  0005EC  0E00               	movlw	0
  6892  0005EE  0100               	movlb	0	; () banked
  6893  0005F0  6FDE               	movwf	(dameDatosSistema@j+1)& (0+255),b
  6894  0005F2  0E00               	movlw	0
  6895  0005F4  6FDD               	movwf	dameDatosSistema@j& (0+255),b
  6896  0005F6  EF11  F003         	goto	l4440
  6897  0005FA                     l4434:
  6898                           
  6899                           ; BSR set to: 0
  6900                           ;main.c: 672:                         bufferDias[j] = '0';
  6901  0005FA  0EAD               	movlw	low _bufferDias
  6902  0005FC  25DD               	addwf	dameDatosSistema@j& (0+255),w,b
  6903  0005FE  6ED9               	movwf	fsr2l,c
  6904  000600  0E00               	movlw	high _bufferDias
  6905  000602  21DE               	addwfc	(dameDatosSistema@j+1)& (0+255),w,b
  6906  000604  6EDA               	movwf	fsr2h,c
  6907  000606  0E30               	movlw	48
  6908  000608  6EDF               	movwf	indf2,c
  6909                           
  6910                           ;main.c: 673:                         break;
  6911  00060A  EF43  F003         	goto	l4442
  6912  00060E                     l4436:
  6913                           
  6914                           ; BSR set to: 0
  6915                           ;main.c: 676:                         bufferDias[j] = '1';
  6916  00060E  0EAD               	movlw	low _bufferDias
  6917  000610  25DD               	addwf	dameDatosSistema@j& (0+255),w,b
  6918  000612  6ED9               	movwf	fsr2l,c
  6919  000614  0E00               	movlw	high _bufferDias
  6920  000616  21DE               	addwfc	(dameDatosSistema@j+1)& (0+255),w,b
  6921  000618  6EDA               	movwf	fsr2h,c
  6922  00061A  0E31               	movlw	49
  6923  00061C  6EDF               	movwf	indf2,c
  6924                           
  6925                           ;main.c: 677:                         break;
  6926  00061E  EF43  F003         	goto	l4442
  6927  000622                     l4440:
  6928                           
  6929                           ; BSR set to: 0
  6930  000622  C0DF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6931  000626  C0E0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6932  00062A  0E00               	movlw	0
  6933  00062C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6934  00062E  0E0C               	movlw	12
  6935  000630  6E03               	movwf	___wmul@multiplicand^0,c
  6936  000632  ECD4  F018         	call	___wmul	;wreg free
  6937  000636  0E46               	movlw	low _horarios
  6938  000638  0100               	movlb	0	; () banked
  6939  00063A  6FD3               	movwf	??_dameDatosSistema& (0+255),b
  6940  00063C  0E01               	movlw	high _horarios
  6941  00063E  6FD4               	movwf	(??_dameDatosSistema+1)& (0+255),b
  6942  000640  0E01               	movlw	1
  6943  000642  27D3               	addwf	??_dameDatosSistema& (0+255),f,b
  6944  000644  0E00               	movlw	0
  6945  000646  23D4               	addwfc	(??_dameDatosSistema+1)& (0+255),f,b
  6946  000648  5001               	movf	?___wmul^0,w,c
  6947  00064A  27D3               	addwf	??_dameDatosSistema& (0+255),f,b
  6948  00064C  5002               	movf	(?___wmul+1)^0,w,c
  6949  00064E  23D4               	addwfc	(??_dameDatosSistema+1)& (0+255),f,b
  6950  000650  51DD               	movf	dameDatosSistema@j& (0+255),w,b
  6951  000652  25D3               	addwf	??_dameDatosSistema& (0+255),w,b
  6952  000654  6ED9               	movwf	fsr2l,c
  6953  000656  51DE               	movf	(dameDatosSistema@j+1)& (0+255),w,b
  6954  000658  21D4               	addwfc	(??_dameDatosSistema+1)& (0+255),w,b
  6955  00065A  6EDA               	movwf	fsr2h,c
  6956  00065C  50DF               	movf	indf2,w,c
  6957  00065E  6FD5               	movwf	(??_dameDatosSistema+2)& (0+255),b
  6958  000660  6BD6               	clrf	(??_dameDatosSistema+3)& (0+255),b
  6959                           
  6960                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6961                           ; Switch size 1, requested type "simple"
  6962                           ; Number of cases is 1, Range of values is 0 to 0
  6963                           ; switch strategies available:
  6964                           ; Name         Instructions Cycles
  6965                           ; simple_byte            4     3 (average)
  6966                           ;	Chosen strategy is simple_byte
  6967  000662  51D6               	movf	(??_dameDatosSistema+3)& (0+255),w,b
  6968  000664  0A00               	xorlw	0	; case 0
  6969  000666  B4D8               	btfsc	status,2,c
  6970  000668  EF38  F003         	goto	l5070
  6971  00066C  EF43  F003         	goto	l4442
  6972  000670                     l5070:
  6973                           
  6974                           ; BSR set to: 0
  6975                           ; Switch size 1, requested type "simple"
  6976                           ; Number of cases is 2, Range of values is 0 to 1
  6977                           ; switch strategies available:
  6978                           ; Name         Instructions Cycles
  6979                           ; simple_byte            7     4 (average)
  6980                           ;	Chosen strategy is simple_byte
  6981  000670  51D5               	movf	(??_dameDatosSistema+2)& (0+255),w,b
  6982  000672  0A00               	xorlw	0	; case 0
  6983  000674  B4D8               	btfsc	status,2,c
  6984  000676  EFFD  F002         	goto	l4434
  6985  00067A  0A01               	xorlw	1	; case 1
  6986  00067C  B4D8               	btfsc	status,2,c
  6987  00067E  EF07  F003         	goto	l4436
  6988  000682  EF43  F003         	goto	l4442
  6989  000686                     l4442:
  6990                           
  6991                           ; BSR set to: 0
  6992                           ;main.c: 679:             }
  6993  000686  4BDD               	infsnz	dameDatosSistema@j& (0+255),f,b
  6994  000688  2BDE               	incf	(dameDatosSistema@j+1)& (0+255),f,b
  6995  00068A                     
  6996                           ; BSR set to: 0
  6997  00068A  BFDE               	btfsc	(dameDatosSistema@j+1)& (0+255),7,b
  6998  00068C  EF51  F003         	goto	u3521
  6999  000690  51DE               	movf	(dameDatosSistema@j+1)& (0+255),w,b
  7000  000692  E109               	bnz	u3520
  7001  000694  0E07               	movlw	7
  7002  000696  5DDD               	subwf	dameDatosSistema@j& (0+255),w,b
  7003  000698  A0D8               	btfss	status,0,c
  7004  00069A  EF51  F003         	goto	u3521
  7005  00069E  EF53  F003         	goto	u3520
  7006  0006A2                     u3521:
  7007  0006A2  EF11  F003         	goto	l4440
  7008  0006A6                     u3520:
  7009  0006A6                     
  7010                           ; BSR set to: 0
  7011                           ;main.c: 681:             sprintf(buffer, " %2d  |          %d       |         %2d      
      +                           | %s\r\n",
  7012  0006A6  C0DF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  7013  0006AA  C0E0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  7014  0006AE  0E00               	movlw	0
  7015  0006B0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7016  0006B2  0E0C               	movlw	12
  7017  0006B4  6E03               	movwf	___wmul@multiplicand^0,c
  7018  0006B6  ECD4  F018         	call	___wmul	;wreg free
  7019  0006BA  0E46               	movlw	low _horarios
  7020  0006BC  2401               	addwf	?___wmul^0,w,c
  7021  0006BE  6ED9               	movwf	fsr2l,c
  7022  0006C0  0E01               	movlw	high _horarios
  7023  0006C2  2002               	addwfc	(?___wmul+1)^0,w,c
  7024  0006C4  6EDA               	movwf	fsr2h,c
  7025  0006C6  50DF               	movf	indf2,w,c
  7026  0006C8  0100               	movlb	0	; () banked
  7027  0006CA  6FD3               	movwf	??_dameDatosSistema& (0+255),b
  7028  0006CC  51D3               	movf	??_dameDatosSistema& (0+255),w,b
  7029  0006CE  6FD7               	movwf	_dameDatosSistema$1912& (0+255),b
  7030  0006D0  6BD8               	clrf	(_dameDatosSistema$1912+1)& (0+255),b
  7031                           
  7032                           ;main.c: 681:             sprintf(buffer, " %2d  |          %d       |         %2d      
      +                           | %s\r\n",
  7033  0006D2  C0DF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  7034  0006D6  C0E0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  7035  0006DA  0E00               	movlw	0
  7036  0006DC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7037  0006DE  0E0C               	movlw	12
  7038  0006E0  6E03               	movwf	___wmul@multiplicand^0,c
  7039  0006E2  ECD4  F018         	call	___wmul	;wreg free
  7040  0006E6  0E4F               	movlw	low (_horarios+9)
  7041  0006E8  2401               	addwf	?___wmul^0,w,c
  7042  0006EA  6ED9               	movwf	fsr2l,c
  7043  0006EC  0E01               	movlw	high (_horarios+9)
  7044  0006EE  2002               	addwfc	(?___wmul+1)^0,w,c
  7045  0006F0  6EDA               	movwf	fsr2h,c
  7046  0006F2  50DF               	movf	indf2,w,c
  7047  0006F4  0100               	movlb	0	; () banked
  7048  0006F6  6FD3               	movwf	??_dameDatosSistema& (0+255),b
  7049  0006F8  51D3               	movf	??_dameDatosSistema& (0+255),w,b
  7050  0006FA  6FD9               	movwf	_dameDatosSistema$1913& (0+255),b
  7051  0006FC  6BDA               	clrf	(_dameDatosSistema$1913+1)& (0+255),b
  7052                           
  7053                           ;main.c: 681:             sprintf(buffer, " %2d  |          %d       |         %2d      
      +                           | %s\r\n",
  7054  0006FE  C0DF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  7055  000702  C0E0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  7056  000706  0E00               	movlw	0
  7057  000708  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7058  00070A  0E0C               	movlw	12
  7059  00070C  6E03               	movwf	___wmul@multiplicand^0,c
  7060  00070E  ECD4  F018         	call	___wmul	;wreg free
  7061  000712  0E51               	movlw	low (_horarios+11)
  7062  000714  2401               	addwf	?___wmul^0,w,c
  7063  000716  6ED9               	movwf	fsr2l,c
  7064  000718  0E01               	movlw	high (_horarios+11)
  7065  00071A  2002               	addwfc	(?___wmul+1)^0,w,c
  7066  00071C  6EDA               	movwf	fsr2h,c
  7067  00071E  50DF               	movf	indf2,w,c
  7068  000720  0100               	movlb	0	; () banked
  7069  000722  6FD3               	movwf	??_dameDatosSistema& (0+255),b
  7070  000724  51D3               	movf	??_dameDatosSistema& (0+255),w,b
  7071  000726  6FDB               	movwf	_dameDatosSistema$1914& (0+255),b
  7072  000728  6BDC               	clrf	(_dameDatosSistema$1914+1)& (0+255),b
  7073  00072A                     
  7074                           ; BSR set to: 0
  7075                           ;main.c: 681:             sprintf(buffer, " %2d  |          %d       |         %2d      
      +                           | %s\r\n",
  7076  00072A  0E00               	movlw	low _buffer
  7077  00072C  6FBD               	movwf	sprintf@s& (0+255),b
  7078  00072E  0E01               	movlw	high _buffer
  7079  000730  6FBE               	movwf	(sprintf@s+1)& (0+255),b
  7080  000732  0E22               	movlw	low STR_34
  7081  000734  6FBF               	movwf	sprintf@fmt& (0+255),b
  7082  000736  0E7B               	movlw	high STR_34
  7083  000738  6FC0               	movwf	(sprintf@fmt+1)& (0+255),b
  7084  00073A  C0D7  F0C1         	movff	_dameDatosSistema$1912,?_sprintf+4
  7085  00073E  C0D8  F0C2         	movff	_dameDatosSistema$1912+1,?_sprintf+5
  7086  000742  C0D9  F0C3         	movff	_dameDatosSistema$1913,?_sprintf+6
  7087  000746  C0DA  F0C4         	movff	_dameDatosSistema$1913+1,?_sprintf+7
  7088  00074A  C0DB  F0C5         	movff	_dameDatosSistema$1914,?_sprintf+8
  7089  00074E  C0DC  F0C6         	movff	_dameDatosSistema$1914+1,?_sprintf+9
  7090  000752  0EAD               	movlw	low _bufferDias
  7091  000754  6FC7               	movwf	(?_sprintf+10)& (0+255),b
  7092  000756  0E00               	movlw	high _bufferDias
  7093  000758  6FC8               	movwf	(?_sprintf+11)& (0+255),b
  7094  00075A  ECF7  F016         	call	_sprintf	;wreg free
  7095  00075E                     
  7096                           ;main.c: 685:             UART_printf(buffer);
  7097  00075E  0E00               	movlw	low _buffer
  7098  000760  6E02               	movwf	UART_printf@cadena^0,c
  7099  000762  0E01               	movlw	high _buffer
  7100  000764  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7101  000766  EC16  F016         	call	_UART_printf	;wreg free
  7102  00076A                     l4452:
  7103                           
  7104                           ;main.c: 689:     }
  7105  00076A  0100               	movlb	0	; () banked
  7106  00076C  4BDF               	infsnz	dameDatosSistema@i& (0+255),f,b
  7107  00076E  2BE0               	incf	(dameDatosSistema@i+1)& (0+255),f,b
  7108  000770                     
  7109                           ; BSR set to: 0
  7110  000770  BFE0               	btfsc	(dameDatosSistema@i+1)& (0+255),7,b
  7111  000772  EFC4  F003         	goto	u3531
  7112  000776  51E0               	movf	(dameDatosSistema@i+1)& (0+255),w,b
  7113  000778  E109               	bnz	u3530
  7114  00077A  0E18               	movlw	24
  7115  00077C  5DDF               	subwf	dameDatosSistema@i& (0+255),w,b
  7116  00077E  A0D8               	btfss	status,0,c
  7117  000780  EFC4  F003         	goto	u3531
  7118  000784  EFC6  F003         	goto	u3530
  7119  000788                     u3531:
  7120  000788  EFDE  F002         	goto	l4426
  7121  00078C                     u3530:
  7122  00078C  EF46  F004         	goto	l4472
  7123  000790                     l4456:
  7124                           
  7125                           ; BSR set to: 0
  7126                           ;main.c: 693:             sprintf(buffer, "\r\n%0.2d:%0.2d| DOMINGO\r\n", hora, minutos)
      +                          ;
  7127  000790  0E00               	movlw	low _buffer
  7128  000792  6FBD               	movwf	sprintf@s& (0+255),b
  7129  000794  0E01               	movlw	high _buffer
  7130  000796  6FBE               	movwf	(sprintf@s+1)& (0+255),b
  7131  000798  0ECD               	movlw	low STR_35
  7132  00079A  6FBF               	movwf	sprintf@fmt& (0+255),b
  7133  00079C  0E7E               	movlw	high STR_35
  7134  00079E  6FC0               	movwf	(sprintf@fmt+1)& (0+255),b
  7135  0007A0  C087  F0C1         	movff	_hora,?_sprintf+4
  7136  0007A4  6BC2               	clrf	(?_sprintf+5)& (0+255),b
  7137  0007A6  C086  F0C3         	movff	_minutos,?_sprintf+6
  7138  0007AA  6BC4               	clrf	(?_sprintf+7)& (0+255),b
  7139  0007AC  ECF7  F016         	call	_sprintf	;wreg free
  7140                           
  7141                           ;main.c: 694:             break;
  7142  0007B0  EF6F  F004         	goto	l4474
  7143  0007B4                     l4458:
  7144                           
  7145                           ; BSR set to: 0
  7146                           ;main.c: 697:             sprintf(buffer, "\r\n%0.2d:%0.2d| LUNES\r\n", hora, minutos);
  7147  0007B4  0E00               	movlw	low _buffer
  7148  0007B6  6FBD               	movwf	sprintf@s& (0+255),b
  7149  0007B8  0E01               	movlw	high _buffer
  7150  0007BA  6FBE               	movwf	(sprintf@s+1)& (0+255),b
  7151  0007BC  0E75               	movlw	low STR_36
  7152  0007BE  6FBF               	movwf	sprintf@fmt& (0+255),b
  7153  0007C0  0E7F               	movlw	high STR_36
  7154  0007C2  6FC0               	movwf	(sprintf@fmt+1)& (0+255),b
  7155  0007C4  C087  F0C1         	movff	_hora,?_sprintf+4
  7156  0007C8  6BC2               	clrf	(?_sprintf+5)& (0+255),b
  7157  0007CA  C086  F0C3         	movff	_minutos,?_sprintf+6
  7158  0007CE  6BC4               	clrf	(?_sprintf+7)& (0+255),b
  7159  0007D0  ECF7  F016         	call	_sprintf	;wreg free
  7160                           
  7161                           ;main.c: 698:             break;
  7162  0007D4  EF6F  F004         	goto	l4474
  7163  0007D8                     l4460:
  7164                           
  7165                           ; BSR set to: 0
  7166                           ;main.c: 701:             sprintf(buffer, "\r\n%0.2d:%0.2d| MARTES\r\n", hora, minutos);
  7167  0007D8  0E00               	movlw	low _buffer
  7168  0007DA  6FBD               	movwf	sprintf@s& (0+255),b
  7169  0007DC  0E01               	movlw	high _buffer
  7170  0007DE  6FBE               	movwf	(sprintf@s+1)& (0+255),b
  7171  0007E0  0E17               	movlw	low STR_37
  7172  0007E2  6FBF               	movwf	sprintf@fmt& (0+255),b
  7173  0007E4  0E7F               	movlw	high STR_37
  7174  0007E6  6FC0               	movwf	(sprintf@fmt+1)& (0+255),b
  7175  0007E8  C087  F0C1         	movff	_hora,?_sprintf+4
  7176  0007EC  6BC2               	clrf	(?_sprintf+5)& (0+255),b
  7177  0007EE  C086  F0C3         	movff	_minutos,?_sprintf+6
  7178  0007F2  6BC4               	clrf	(?_sprintf+7)& (0+255),b
  7179  0007F4  ECF7  F016         	call	_sprintf	;wreg free
  7180                           
  7181                           ;main.c: 702:             break;
  7182  0007F8  EF6F  F004         	goto	l4474
  7183  0007FC                     l4462:
  7184                           
  7185                           ; BSR set to: 0
  7186                           ;main.c: 705:             sprintf(buffer, "\r\n%0.2d:%0.2d| MIERCOLES\r\n", hora, minuto
      +                          s);
  7187  0007FC  0E00               	movlw	low _buffer
  7188  0007FE  6FBD               	movwf	sprintf@s& (0+255),b
  7189  000800  0E01               	movlw	high _buffer
  7190  000802  6FBE               	movwf	(sprintf@s+1)& (0+255),b
  7191  000804  0E4C               	movlw	low STR_38
  7192  000806  6FBF               	movwf	sprintf@fmt& (0+255),b
  7193  000808  0E7E               	movlw	high STR_38
  7194  00080A  6FC0               	movwf	(sprintf@fmt+1)& (0+255),b
  7195  00080C  C087  F0C1         	movff	_hora,?_sprintf+4
  7196  000810  6BC2               	clrf	(?_sprintf+5)& (0+255),b
  7197  000812  C086  F0C3         	movff	_minutos,?_sprintf+6
  7198  000816  6BC4               	clrf	(?_sprintf+7)& (0+255),b
  7199  000818  ECF7  F016         	call	_sprintf	;wreg free
  7200                           
  7201                           ;main.c: 706:             break;
  7202  00081C  EF6F  F004         	goto	l4474
  7203  000820                     l4464:
  7204                           
  7205                           ; BSR set to: 0
  7206                           ;main.c: 709:             sprintf(buffer, "\r\n%0.2d:%0.2d| JUEVES\r\n", hora, minutos);
  7207  000820  0E00               	movlw	low _buffer
  7208  000822  6FBD               	movwf	sprintf@s& (0+255),b
  7209  000824  0E01               	movlw	high _buffer
  7210  000826  6FBE               	movwf	(sprintf@s+1)& (0+255),b
  7211  000828  0E2F               	movlw	low STR_39
  7212  00082A  6FBF               	movwf	sprintf@fmt& (0+255),b
  7213  00082C  0E7F               	movlw	high STR_39
  7214  00082E  6FC0               	movwf	(sprintf@fmt+1)& (0+255),b
  7215  000830  C087  F0C1         	movff	_hora,?_sprintf+4
  7216  000834  6BC2               	clrf	(?_sprintf+5)& (0+255),b
  7217  000836  C086  F0C3         	movff	_minutos,?_sprintf+6
  7218  00083A  6BC4               	clrf	(?_sprintf+7)& (0+255),b
  7219  00083C  ECF7  F016         	call	_sprintf	;wreg free
  7220                           
  7221                           ;main.c: 710:             break;
  7222  000840  EF6F  F004         	goto	l4474
  7223  000844                     l4466:
  7224                           
  7225                           ; BSR set to: 0
  7226                           ;main.c: 713:             sprintf(buffer, "\r\n%0.2d:%0.2d| VIERNES\r\n", hora, minutos)
      +                          ;
  7227  000844  0E00               	movlw	low _buffer
  7228  000846  6FBD               	movwf	sprintf@s& (0+255),b
  7229  000848  0E01               	movlw	high _buffer
  7230  00084A  6FBE               	movwf	(sprintf@s+1)& (0+255),b
  7231  00084C  0EE6               	movlw	low STR_40
  7232  00084E  6FBF               	movwf	sprintf@fmt& (0+255),b
  7233  000850  0E7E               	movlw	high STR_40
  7234  000852  6FC0               	movwf	(sprintf@fmt+1)& (0+255),b
  7235  000854  C087  F0C1         	movff	_hora,?_sprintf+4
  7236  000858  6BC2               	clrf	(?_sprintf+5)& (0+255),b
  7237  00085A  C086  F0C3         	movff	_minutos,?_sprintf+6
  7238  00085E  6BC4               	clrf	(?_sprintf+7)& (0+255),b
  7239  000860  ECF7  F016         	call	_sprintf	;wreg free
  7240                           
  7241                           ;main.c: 714:             break;
  7242  000864  EF6F  F004         	goto	l4474
  7243  000868                     l4468:
  7244                           
  7245                           ; BSR set to: 0
  7246                           ;main.c: 717:             sprintf(buffer, "\r\n%0.2d:%0.2d| SABADO\r\n", hora, minutos);
  7247  000868  0E00               	movlw	low _buffer
  7248  00086A  6FBD               	movwf	sprintf@s& (0+255),b
  7249  00086C  0E01               	movlw	high _buffer
  7250  00086E  6FBE               	movwf	(sprintf@s+1)& (0+255),b
  7251  000870  0EFF               	movlw	low STR_41
  7252  000872  6FBF               	movwf	sprintf@fmt& (0+255),b
  7253  000874  0E7E               	movlw	high STR_41
  7254  000876  6FC0               	movwf	(sprintf@fmt+1)& (0+255),b
  7255  000878  C087  F0C1         	movff	_hora,?_sprintf+4
  7256  00087C  6BC2               	clrf	(?_sprintf+5)& (0+255),b
  7257  00087E  C086  F0C3         	movff	_minutos,?_sprintf+6
  7258  000882  6BC4               	clrf	(?_sprintf+7)& (0+255),b
  7259  000884  ECF7  F016         	call	_sprintf	;wreg free
  7260                           
  7261                           ;main.c: 718:             break;
  7262  000888  EF6F  F004         	goto	l4474
  7263  00088C                     l4472:
  7264                           
  7265                           ; BSR set to: 0
  7266  00088C  5184               	movf	_diaActual& (0+255),w,b
  7267  00088E  6FD3               	movwf	??_dameDatosSistema& (0+255),b
  7268  000890  6BD4               	clrf	(??_dameDatosSistema+1)& (0+255),b
  7269                           
  7270                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7271                           ; Switch size 1, requested type "simple"
  7272                           ; Number of cases is 1, Range of values is 0 to 0
  7273                           ; switch strategies available:
  7274                           ; Name         Instructions Cycles
  7275                           ; simple_byte            4     3 (average)
  7276                           ;	Chosen strategy is simple_byte
  7277  000892  51D4               	movf	(??_dameDatosSistema+1)& (0+255),w,b
  7278  000894  0A00               	xorlw	0	; case 0
  7279  000896  B4D8               	btfsc	status,2,c
  7280  000898  EF50  F004         	goto	l5072
  7281  00089C  EF6F  F004         	goto	l4474
  7282  0008A0                     l5072:
  7283                           
  7284                           ; BSR set to: 0
  7285                           ; Switch size 1, requested type "simple"
  7286                           ; Number of cases is 7, Range of values is 1 to 7
  7287                           ; switch strategies available:
  7288                           ; Name         Instructions Cycles
  7289                           ; simple_byte           22    12 (average)
  7290                           ;	Chosen strategy is simple_byte
  7291  0008A0  51D3               	movf	??_dameDatosSistema& (0+255),w,b
  7292  0008A2  0A01               	xorlw	1	; case 1
  7293  0008A4  B4D8               	btfsc	status,2,c
  7294  0008A6  EFC8  F003         	goto	l4456
  7295  0008AA  0A03               	xorlw	3	; case 2
  7296  0008AC  B4D8               	btfsc	status,2,c
  7297  0008AE  EFDA  F003         	goto	l4458
  7298  0008B2  0A01               	xorlw	1	; case 3
  7299  0008B4  B4D8               	btfsc	status,2,c
  7300  0008B6  EFEC  F003         	goto	l4460
  7301  0008BA  0A07               	xorlw	7	; case 4
  7302  0008BC  B4D8               	btfsc	status,2,c
  7303  0008BE  EFFE  F003         	goto	l4462
  7304  0008C2  0A01               	xorlw	1	; case 5
  7305  0008C4  B4D8               	btfsc	status,2,c
  7306  0008C6  EF10  F004         	goto	l4464
  7307  0008CA  0A03               	xorlw	3	; case 6
  7308  0008CC  B4D8               	btfsc	status,2,c
  7309  0008CE  EF22  F004         	goto	l4466
  7310  0008D2  0A01               	xorlw	1	; case 7
  7311  0008D4  B4D8               	btfsc	status,2,c
  7312  0008D6  EF34  F004         	goto	l4468
  7313  0008DA  EF6F  F004         	goto	l4474
  7314  0008DE                     l4474:
  7315                           
  7316                           ;main.c: 725:     UART_printf(buffer);
  7317  0008DE  0E00               	movlw	low _buffer
  7318  0008E0  6E02               	movwf	UART_printf@cadena^0,c
  7319  0008E2  0E01               	movlw	high _buffer
  7320  0008E4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7321  0008E6  EC16  F016         	call	_UART_printf	;wreg free
  7322  0008EA                     
  7323                           ;main.c: 727:     UART_write('I');
  7324  0008EA  0E49               	movlw	73
  7325  0008EC  EC23  F019         	call	_UART_write
  7326  0008F0  0012               	return		;funcret
  7327  0008F2                     __end_of_dameDatosSistema:
  7328                           	opt callstack 0
  7329                           
  7330 ;; *************** function _asignarHorarios *****************
  7331 ;; Defined at:
  7332 ;;		line 389 in file "main.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;		None
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;  i               2   31[BANK0 ] int 
  7337 ;;  hora            1   30[BANK0 ] unsigned char 
  7338 ;;  diaRegar        1   29[BANK0 ] unsigned char 
  7339 ;;  Rx              1   28[BANK0 ] unsigned char 
  7340 ;; Return value:  Size  Location     Type
  7341 ;;                  1    wreg      void 
  7342 ;; Registers used:
  7343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7344 ;; Tracked objects:
  7345 ;;		On entry : 0/0
  7346 ;;		On exit  : 0/0
  7347 ;;		Unchanged: 0/0
  7348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7349 ;;      Params:         0       0       0       0       0       0       0       0       0
  7350 ;;      Locals:         0       5       0       0       0       0       0       0       0
  7351 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7352 ;;      Totals:         2       5       0       0       0       0       0       0       0
  7353 ;;Total ram usage:        7 bytes
  7354 ;; Hardware stack levels used:    1
  7355 ;; Hardware stack levels required when called:    9
  7356 ;; This function calls:
  7357 ;;		_UART_printf
  7358 ;;		_escribeHorariosMemoria
  7359 ;;		_getValue
  7360 ;;		_sprintf
  7361 ;; This function is called by:
  7362 ;;		_sistemaPrincipal
  7363 ;; This function uses a non-reentrant model
  7364 ;;
  7365                           
  7366                           	psect	text33
  7367  00193C                     __ptext33:
  7368                           	opt callstack 0
  7369  00193C                     _asignarHorarios:
  7370                           	opt callstack 20
  7371  00193C                     
  7372                           ;main.c: 391:     unsigned char hora;;main.c: 392:     unsigned char Rx;;main.c: 393:   
      +                            unsigned char diaRegar;;main.c: 395:     UART_printf("\r\n OPCIONES DE REGADO \r\n");
  7373  00193C  0E9B               	movlw	low STR_7
  7374  00193E  6E02               	movwf	UART_printf@cadena^0,c
  7375  001940  0E7E               	movlw	high STR_7
  7376  001942  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7377  001944  EC16  F016         	call	_UART_printf	;wreg free
  7378                           
  7379                           ;main.c: 397:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  7380  001948  0E57               	movlw	low STR_8
  7381  00194A  6E02               	movwf	UART_printf@cadena^0,c
  7382  00194C  0E7B               	movlw	high STR_8
  7383  00194E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7384  001950  EC16  F016         	call	_UART_printf	;wreg free
  7385  001954                     
  7386                           ;main.c: 398:     hora = getValue(2);
  7387  001954  0E00               	movlw	0
  7388  001956  6E05               	movwf	(getValue@numCharacters+1)^0,c
  7389  001958  0E02               	movlw	2
  7390  00195A  6E04               	movwf	getValue@numCharacters^0,c
  7391  00195C  EC20  F007         	call	_getValue	;wreg free
  7392  001960  0100               	movlb	0	; () banked
  7393  001962  6FD5               	movwf	asignarHorarios@hora& (0+255),b
  7394  001964                     
  7395                           ; BSR set to: 0
  7396                           ;main.c: 400:     if (hora != '@') {
  7397  001964  0E40               	movlw	64
  7398  001966  19D5               	xorwf	asignarHorarios@hora& (0+255),w,b
  7399  001968  B4D8               	btfsc	status,2,c
  7400  00196A  EFB9  F00C         	goto	u3451
  7401  00196E  EFBB  F00C         	goto	u3450
  7402  001972                     u3451:
  7403  001972  EF41  F00D         	goto	l319
  7404  001976                     u3450:
  7405  001976                     
  7406                           ; BSR set to: 0
  7407                           ;main.c: 402:         UART_printf("\r\n Ingrese 1 para activar || ingrese 0 para desacti
      +                          var: \r\n");
  7408  001976  0E04               	movlw	low STR_9
  7409  001978  6E02               	movwf	UART_printf@cadena^0,c
  7410  00197A  0E7A               	movlw	high STR_9
  7411  00197C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7412  00197E  EC16  F016         	call	_UART_printf	;wreg free
  7413  001982                     
  7414                           ;main.c: 404:         Rx = getValue(1);
  7415  001982  0E00               	movlw	0
  7416  001984  6E05               	movwf	(getValue@numCharacters+1)^0,c
  7417  001986  0E01               	movlw	1
  7418  001988  6E04               	movwf	getValue@numCharacters^0,c
  7419  00198A  EC20  F007         	call	_getValue	;wreg free
  7420  00198E  0100               	movlb	0	; () banked
  7421  001990  6FD3               	movwf	asignarHorarios@Rx& (0+255),b
  7422  001992                     
  7423                           ; BSR set to: 0
  7424                           ;main.c: 407:         if (Rx == 1) {
  7425  001992  05D3               	decf	asignarHorarios@Rx& (0+255),w,b
  7426  001994  A4D8               	btfss	status,2,c
  7427  001996  EFCF  F00C         	goto	u3461
  7428  00199A  EFD1  F00C         	goto	u3460
  7429  00199E                     u3461:
  7430  00199E  EF41  F00D         	goto	l319
  7431  0019A2                     u3460:
  7432  0019A2                     
  7433                           ; BSR set to: 0
  7434                           ;main.c: 409:             UART_printf("\r\n Ingrese 1 para activar || ingrese 0 para des
      +                          activar: \r\n");
  7435  0019A2  0E04               	movlw	low STR_9
  7436  0019A4  6E02               	movwf	UART_printf@cadena^0,c
  7437  0019A6  0E7A               	movlw	high STR_9
  7438  0019A8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7439  0019AA  EC16  F016         	call	_UART_printf	;wreg free
  7440                           
  7441                           ;main.c: 410:             UART_printf("\r\n DOMINGO = [1] ... SABADO = [7] \r\n");
  7442  0019AE  0E05               	movlw	low STR_11
  7443  0019B0  6E02               	movwf	UART_printf@cadena^0,c
  7444  0019B2  0E7D               	movlw	high STR_11
  7445  0019B4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7446  0019B6  EC16  F016         	call	_UART_printf	;wreg free
  7447  0019BA                     
  7448                           ;main.c: 412:             for (int i = 0; i < 7; i++) {
  7449  0019BA  0E00               	movlw	0
  7450  0019BC  0100               	movlb	0	; () banked
  7451  0019BE  6FD7               	movwf	(asignarHorarios@i+1)& (0+255),b
  7452  0019C0  0E00               	movlw	0
  7453  0019C2  6FD6               	movwf	asignarHorarios@i& (0+255),b
  7454  0019C4                     l4372:
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;main.c: 413:                 sprintf(buffer, "\r\n[%d]: ", i + 1);
  7458  0019C4  0E00               	movlw	low _buffer
  7459  0019C6  6FBD               	movwf	sprintf@s& (0+255),b
  7460  0019C8  0E01               	movlw	high _buffer
  7461  0019CA  6FBE               	movwf	(sprintf@s+1)& (0+255),b
  7462  0019CC  0EEC               	movlw	low STR_12
  7463  0019CE  6FBF               	movwf	sprintf@fmt& (0+255),b
  7464  0019D0  0E7F               	movlw	high STR_12
  7465  0019D2  6FC0               	movwf	(sprintf@fmt+1)& (0+255),b
  7466  0019D4  0E01               	movlw	1
  7467  0019D6  25D6               	addwf	asignarHorarios@i& (0+255),w,b
  7468  0019D8  6FC1               	movwf	(?_sprintf+4)& (0+255),b
  7469  0019DA  0E00               	movlw	0
  7470  0019DC  21D7               	addwfc	(asignarHorarios@i+1)& (0+255),w,b
  7471  0019DE  6FC2               	movwf	(?_sprintf+5)& (0+255),b
  7472  0019E0  ECF7  F016         	call	_sprintf	;wreg free
  7473  0019E4                     
  7474                           ;main.c: 414:                 UART_printf(buffer);
  7475  0019E4  0E00               	movlw	low _buffer
  7476  0019E6  6E02               	movwf	UART_printf@cadena^0,c
  7477  0019E8  0E01               	movlw	high _buffer
  7478  0019EA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7479  0019EC  EC16  F016         	call	_UART_printf	;wreg free
  7480  0019F0                     
  7481                           ;main.c: 415:                 diaRegar = getValue(1);
  7482  0019F0  0E00               	movlw	0
  7483  0019F2  6E05               	movwf	(getValue@numCharacters+1)^0,c
  7484  0019F4  0E01               	movlw	1
  7485  0019F6  6E04               	movwf	getValue@numCharacters^0,c
  7486  0019F8  EC20  F007         	call	_getValue	;wreg free
  7487  0019FC  0100               	movlb	0	; () banked
  7488  0019FE  6FD4               	movwf	asignarHorarios@diaRegar& (0+255),b
  7489  001A00                     
  7490                           ; BSR set to: 0
  7491                           ;main.c: 417:                 if (diaRegar != '@') {
  7492  001A00  0E40               	movlw	64
  7493  001A02  19D4               	xorwf	asignarHorarios@diaRegar& (0+255),w,b
  7494  001A04  B4D8               	btfsc	status,2,c
  7495  001A06  EF07  F00D         	goto	u3471
  7496  001A0A  EF09  F00D         	goto	u3470
  7497  001A0E                     u3471:
  7498  001A0E  EF1F  F00D         	goto	l4382
  7499  001A12                     u3470:
  7500  001A12                     
  7501                           ; BSR set to: 0
  7502                           ;main.c: 419:                     horarios[hora].dias[i] = diaRegar;
  7503  001A12  51D5               	movf	asignarHorarios@hora& (0+255),w,b
  7504  001A14  0D0C               	mullw	12
  7505  001A16  0E46               	movlw	low _horarios
  7506  001A18  6E5D               	movwf	??_asignarHorarios^0,c
  7507  001A1A  0E01               	movlw	high _horarios
  7508  001A1C  6E5E               	movwf	(??_asignarHorarios+1)^0,c
  7509  001A1E  0E01               	movlw	1
  7510  001A20  265D               	addwf	??_asignarHorarios^0,f,c
  7511  001A22  0E00               	movlw	0
  7512  001A24  225E               	addwfc	(??_asignarHorarios+1)^0,f,c
  7513  001A26  50F3               	movf	243,w,c
  7514  001A28  265D               	addwf	??_asignarHorarios^0,f,c
  7515  001A2A  50F4               	movf	244,w,c
  7516  001A2C  225E               	addwfc	(??_asignarHorarios+1)^0,f,c
  7517  001A2E  51D6               	movf	asignarHorarios@i& (0+255),w,b
  7518  001A30  245D               	addwf	??_asignarHorarios^0,w,c
  7519  001A32  6ED9               	movwf	fsr2l,c
  7520  001A34  51D7               	movf	(asignarHorarios@i+1)& (0+255),w,b
  7521  001A36  205E               	addwfc	(??_asignarHorarios+1)^0,w,c
  7522  001A38  6EDA               	movwf	fsr2h,c
  7523  001A3A  C0D4  FFDF         	movff	asignarHorarios@diaRegar,indf2
  7524  001A3E                     l4382:
  7525                           
  7526                           ; BSR set to: 0
  7527                           ;main.c: 422:             }
  7528  001A3E  4BD6               	infsnz	asignarHorarios@i& (0+255),f,b
  7529  001A40  2BD7               	incf	(asignarHorarios@i+1)& (0+255),f,b
  7530  001A42                     
  7531                           ; BSR set to: 0
  7532  001A42  BFD7               	btfsc	(asignarHorarios@i+1)& (0+255),7,b
  7533  001A44  EF2D  F00D         	goto	u3481
  7534  001A48  51D7               	movf	(asignarHorarios@i+1)& (0+255),w,b
  7535  001A4A  E109               	bnz	u3480
  7536  001A4C  0E07               	movlw	7
  7537  001A4E  5DD6               	subwf	asignarHorarios@i& (0+255),w,b
  7538  001A50  A0D8               	btfss	status,0,c
  7539  001A52  EF2D  F00D         	goto	u3481
  7540  001A56  EF2F  F00D         	goto	u3480
  7541  001A5A                     u3481:
  7542  001A5A  EFE2  F00C         	goto	l4372
  7543  001A5E                     u3480:
  7544  001A5E                     
  7545                           ; BSR set to: 0
  7546                           ;main.c: 424:             horarios[hora].regar = Rx;
  7547  001A5E  51D5               	movf	asignarHorarios@hora& (0+255),w,b
  7548  001A60  0D0C               	mullw	12
  7549  001A62  0E4F               	movlw	low (_horarios+9)
  7550  001A64  24F3               	addwf	243,w,c
  7551  001A66  6ED9               	movwf	fsr2l,c
  7552  001A68  0E01               	movlw	high (_horarios+9)
  7553  001A6A  20F4               	addwfc	prodh,w,c
  7554  001A6C  6EDA               	movwf	fsr2h,c
  7555  001A6E  C0D3  FFDF         	movff	asignarHorarios@Rx,indf2
  7556  001A72                     
  7557                           ; BSR set to: 0
  7558                           ;main.c: 426:             escribeHorariosMemoria();
  7559  001A72  EC42  F00D         	call	_escribeHorariosMemoria	;wreg free
  7560  001A76                     
  7561                           ;main.c: 429:             UART_printf("\r\n Horario Modificado! \r\n");
  7562  001A76  0E67               	movlw	low STR_13
  7563  001A78  6E02               	movwf	UART_printf@cadena^0,c
  7564  001A7A  0E7E               	movlw	high STR_13
  7565  001A7C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7566  001A7E  EC16  F016         	call	_UART_printf	;wreg free
  7567  001A82                     l319:
  7568  001A82  0012               	return		;funcret
  7569  001A84                     __end_of_asignarHorarios:
  7570                           	opt callstack 0
  7571                           
  7572 ;; *************** function _sprintf *****************
  7573 ;; Defined at:
  7574 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  7575 ;; Parameters:    Size  Location     Type
  7576 ;;  s               2    6[BANK0 ] PTR unsigned char 
  7577 ;;		 -> buffer(70), 
  7578 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  7579 ;;		 -> STR_48(45), STR_47(29), STR_46(32), STR_45(45), 
  7580 ;;		 -> STR_44(29), STR_43(32), STR_41(24), STR_40(25), 
  7581 ;;		 -> STR_39(24), STR_38(27), STR_37(24), STR_36(23), 
  7582 ;;		 -> STR_35(25), STR_34(53), STR_19(51), STR_12(9), 
  7583 ;; Auto vars:     Size  Location     Type
  7584 ;;  f               6   22[BANK0 ] struct _IO_FILE
  7585 ;;  ap              2   20[BANK0 ] PTR void [1]
  7586 ;;		 -> ?_sprintf(2), 
  7587 ;;  ret             2    0        int 
  7588 ;; Return value:  Size  Location     Type
  7589 ;;                  2    6[BANK0 ] int 
  7590 ;; Registers used:
  7591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7592 ;; Tracked objects:
  7593 ;;		On entry : 0/0
  7594 ;;		On exit  : 0/0
  7595 ;;		Unchanged: 0/0
  7596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7597 ;;      Params:         0      12       0       0       0       0       0       0       0
  7598 ;;      Locals:         0      10       0       0       0       0       0       0       0
  7599 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7600 ;;      Totals:         0      22       0       0       0       0       0       0       0
  7601 ;;Total ram usage:       22 bytes
  7602 ;; Hardware stack levels used:    1
  7603 ;; Hardware stack levels required when called:    8
  7604 ;; This function calls:
  7605 ;;		_vfprintf
  7606 ;; This function is called by:
  7607 ;;		_asignarHorarios
  7608 ;;		_lecturaWifi
  7609 ;;		_dameDatosSistema
  7610 ;;		_mostrarDatosSensores
  7611 ;;		_mostrarDatosSensoresWIFI
  7612 ;; This function uses a non-reentrant model
  7613 ;;
  7614                           
  7615                           	psect	text34
  7616  002DEE                     __ptext34:
  7617                           	opt callstack 0
  7618  002DEE                     _sprintf:
  7619                           	opt callstack 20
  7620  002DEE  0EC1               	movlw	low (?_sprintf+4)
  7621  002DF0  0100               	movlb	0	; () banked
  7622  002DF2  6FCB               	movwf	sprintf@ap& (0+255),b
  7623  002DF4  0E00               	movlw	high (?_sprintf+4)
  7624  002DF6  6FCC               	movwf	(sprintf@ap+1)& (0+255),b
  7625  002DF8  C0BD  F0CD         	movff	sprintf@s,sprintf@f
  7626  002DFC  C0BE  F0CE         	movff	sprintf@s+1,sprintf@f+1
  7627  002E00                     
  7628                           ; BSR set to: 0
  7629  002E00  0E00               	movlw	0
  7630  002E02  6FD0               	movwf	(sprintf@f+3)& (0+255),b
  7631  002E04  0E00               	movlw	0
  7632  002E06  6FCF               	movwf	(sprintf@f+2)& (0+255),b
  7633  002E08                     
  7634                           ; BSR set to: 0
  7635  002E08  0E00               	movlw	0
  7636  002E0A  6FD2               	movwf	(sprintf@f+5)& (0+255),b
  7637  002E0C  0E00               	movlw	0
  7638  002E0E  6FD1               	movwf	(sprintf@f+4)& (0+255),b
  7639  002E10                     
  7640                           ; BSR set to: 0
  7641  002E10  0ECD               	movlw	low sprintf@f
  7642  002E12  6FB7               	movwf	vfprintf@fp& (0+255),b
  7643  002E14  0E00               	movlw	high sprintf@f
  7644  002E16  6FB8               	movwf	(vfprintf@fp+1)& (0+255),b
  7645  002E18  C0BF  F0B9         	movff	sprintf@fmt,vfprintf@fmt
  7646  002E1C  C0C0  F0BA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7647  002E20  0ECB               	movlw	low sprintf@ap
  7648  002E22  6FBB               	movwf	vfprintf@ap& (0+255),b
  7649  002E24  0E00               	movlw	high sprintf@ap
  7650  002E26  6FBC               	movwf	(vfprintf@ap+1)& (0+255),b
  7651  002E28  ECB4  F015         	call	_vfprintf	;wreg free
  7652  002E2C  0100               	movlb	0	; () banked
  7653  002E2E  51CF               	movf	(sprintf@f+2)& (0+255),w,b
  7654  002E30  25BD               	addwf	sprintf@s& (0+255),w,b
  7655  002E32  6ED9               	movwf	fsr2l,c
  7656  002E34  51D0               	movf	(sprintf@f+3)& (0+255),w,b
  7657  002E36  21BE               	addwfc	(sprintf@s+1)& (0+255),w,b
  7658  002E38  6EDA               	movwf	fsr2h,c
  7659  002E3A  0E00               	movlw	0
  7660  002E3C  6EDF               	movwf	indf2,c
  7661  002E3E                     
  7662                           ; BSR set to: 0
  7663  002E3E  0012               	return		;funcret
  7664  002E40                     __end_of_sprintf:
  7665                           	opt callstack 0
  7666                           
  7667 ;; *************** function _vfprintf *****************
  7668 ;; Defined at:
  7669 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7670 ;; Parameters:    Size  Location     Type
  7671 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7672 ;;		 -> sprintf@f(6), 
  7673 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  7674 ;;		 -> STR_48(45), STR_47(29), STR_46(32), STR_45(45), 
  7675 ;;		 -> STR_44(29), STR_43(32), STR_41(24), STR_40(25), 
  7676 ;;		 -> STR_39(24), STR_38(27), STR_37(24), STR_36(23), 
  7677 ;;		 -> STR_35(25), STR_34(53), STR_19(51), STR_12(9), 
  7678 ;;  ap              2    4[BANK0 ] PTR PTR void 
  7679 ;;		 -> sprintf@ap(2), 
  7680 ;; Auto vars:     Size  Location     Type
  7681 ;;  cfmt            2   90[COMRAM] PTR unsigned char 
  7682 ;;		 -> STR_48(45), STR_47(29), STR_46(32), STR_45(45), 
  7683 ;;		 -> STR_44(29), STR_43(32), STR_41(24), STR_40(25), 
  7684 ;;		 -> STR_39(24), STR_38(27), STR_37(24), STR_36(23), 
  7685 ;;		 -> STR_35(25), STR_34(53), STR_19(51), STR_12(9), 
  7686 ;; Return value:  Size  Location     Type
  7687 ;;                  2    0[BANK0 ] int 
  7688 ;; Registers used:
  7689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7690 ;; Tracked objects:
  7691 ;;		On entry : 0/0
  7692 ;;		On exit  : 0/0
  7693 ;;		Unchanged: 0/0
  7694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7695 ;;      Params:         0       6       0       0       0       0       0       0       0
  7696 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7697 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7698 ;;      Totals:         2       6       0       0       0       0       0       0       0
  7699 ;;Total ram usage:        8 bytes
  7700 ;; Hardware stack levels used:    1
  7701 ;; Hardware stack levels required when called:    7
  7702 ;; This function calls:
  7703 ;;		_vfpfcnvrt
  7704 ;; This function is called by:
  7705 ;;		_sprintf
  7706 ;; This function uses a non-reentrant model
  7707 ;;
  7708                           
  7709                           	psect	text35
  7710  002B68                     __ptext35:
  7711                           	opt callstack 0
  7712  002B68                     _vfprintf:
  7713                           	opt callstack 20
  7714  002B68                     
  7715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  7716  002B68  C0B9  F05B         	movff	vfprintf@fmt,vfprintf@cfmt
  7717  002B6C  C0BA  F05C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7718  002B70                     
  7719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  7720  002B70  0E00               	movlw	0
  7721  002B72  0100               	movlb	0	; () banked
  7722  002B74  6F71               	movwf	(_nout+1)& (0+255),b
  7723  002B76  0E00               	movlw	0
  7724  002B78  6F70               	movwf	_nout& (0+255),b
  7725                           
  7726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7727  002B7A  EFD2  F015         	goto	l3776
  7728  002B7E                     l3774:
  7729                           
  7730                           ; BSR set to: 0
  7731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  7732  002B7E  C0B7  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  7733  002B82  C0B8  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7734  002B86  0E5B               	movlw	low vfprintf@cfmt
  7735  002B88  6E42               	movwf	vfpfcnvrt@fmt^0,c
  7736  002B8A  0E00               	movlw	high vfprintf@cfmt
  7737  002B8C  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  7738  002B8E  C0BB  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  7739  002B92  C0BC  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7740  002B96  EC09  F000         	call	_vfpfcnvrt	;wreg free
  7741  002B9A  5040               	movf	?_vfpfcnvrt^0,w,c
  7742  002B9C  0100               	movlb	0	; () banked
  7743  002B9E  2770               	addwf	_nout& (0+255),f,b
  7744  002BA0  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  7745  002BA2  2371               	addwfc	(_nout+1)& (0+255),f,b
  7746  002BA4                     l3776:
  7747                           
  7748                           ; BSR set to: 0
  7749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7750  002BA4  C05B  FFF6         	movff	vfprintf@cfmt,tblptrl
  7751  002BA8  C05C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7752  002BAC                     	if	0	;tblptru may be non-zero
  7753  002BAC                     	endif
  7754  002BAC                     	if	0	;tblptru may be non-zero
  7755  002BAC                     	endif
  7756  002BAC  0008               	tblrd		*
  7757  002BAE  50F5               	movf	tablat,w,c
  7758  002BB0  0900               	iorlw	0
  7759  002BB2  A4D8               	btfss	status,2,c
  7760  002BB4  EFDE  F015         	goto	u2851
  7761  002BB8  EFE0  F015         	goto	u2850
  7762  002BBC                     u2851:
  7763  002BBC  EFBF  F015         	goto	l3774
  7764  002BC0                     u2850:
  7765  002BC0                     
  7766                           ; BSR set to: 0
  7767                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  7768  002BC0  C070  F0B7         	movff	_nout,?_vfprintf
  7769  002BC4  C071  F0B8         	movff	_nout+1,?_vfprintf+1
  7770  002BC8                     
  7771                           ; BSR set to: 0
  7772  002BC8  0012               	return		;funcret
  7773  002BCA                     __end_of_vfprintf:
  7774                           	opt callstack 0
  7775                           
  7776 ;; *************** function _vfpfcnvrt *****************
  7777 ;; Defined at:
  7778 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7779 ;; Parameters:    Size  Location     Type
  7780 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  7781 ;;		 -> sprintf@f(6), 
  7782 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  7783 ;;		 -> vfprintf@cfmt(2), 
  7784 ;;  ap              2   67[COMRAM] PTR PTR void 
  7785 ;;		 -> sprintf@ap(2), 
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;  ll              8   73[COMRAM] long long 
  7788 ;;  llu             8    0        unsigned long long 
  7789 ;;  f               4    0        unsigned long long 
  7790 ;;  vp              3    0        PTR void 
  7791 ;;  ct              3    0        unsigned char [3]
  7792 ;;  done            2   83[COMRAM] int 
  7793 ;;  cp              2   81[COMRAM] PTR unsigned char 
  7794 ;;		 -> ?_sprintf(2), bufferDias(10), 
  7795 ;;  i               2    0        int 
  7796 ;;  c               1   89[COMRAM] unsigned char 
  7797 ;; Return value:  Size  Location     Type
  7798 ;;                  2   63[COMRAM] int 
  7799 ;; Registers used:
  7800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7801 ;; Tracked objects:
  7802 ;;		On entry : 0/0
  7803 ;;		On exit  : 0/0
  7804 ;;		Unchanged: 0/0
  7805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7806 ;;      Params:         6       0       0       0       0       0       0       0       0
  7807 ;;      Locals:        17       0       0       0       0       0       0       0       0
  7808 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7809 ;;      Totals:        27       0       0       0       0       0       0       0       0
  7810 ;;Total ram usage:       27 bytes
  7811 ;; Hardware stack levels used:    1
  7812 ;; Hardware stack levels required when called:    6
  7813 ;; This function calls:
  7814 ;;		_atoi
  7815 ;;		_ctoa
  7816 ;;		_dtoa
  7817 ;;		_fputc
  7818 ;;		_isdigit
  7819 ;;		_stoa
  7820 ;; This function is called by:
  7821 ;;		_vfprintf
  7822 ;; This function uses a non-reentrant model
  7823 ;;
  7824                           
  7825                           	psect	text36
  7826  000012                     __ptext36:
  7827                           	opt callstack 0
  7828  000012                     _vfpfcnvrt:
  7829                           	opt callstack 20
  7830  000012                     
  7831                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  7832  000012  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7833  000016  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7834  00001A  CFDE FFF6          	movff	postinc2,tblptrl
  7835  00001E  CFDD FFF7          	movff	postdec2,tblptrh
  7836  000022                     	if	0	;tblptru may be non-zero
  7837  000022                     	endif
  7838  000022                     	if	0	;tblptru may be non-zero
  7839  000022                     	endif
  7840  000022  0008               	tblrd		*
  7841  000024  50F5               	movf	tablat,w,c
  7842  000026  0A25               	xorlw	37
  7843  000028  A4D8               	btfss	status,2,c
  7844  00002A  EF19  F000         	goto	u2551
  7845  00002E  EF1B  F000         	goto	u2550
  7846  000032                     u2551:
  7847  000032  EFAE  F002         	goto	l3670
  7848  000036                     u2550:
  7849  000036                     
  7850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  7851  000036  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7852  00003A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7853  00003E  2ADE               	incf	postinc2,f,c
  7854  000040  0E00               	movlw	0
  7855  000042  22DD               	addwfc	postdec2,f,c
  7856  000044                     
  7857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  7858  000044  0E00               	movlw	0
  7859  000046  0100               	movlb	0	; () banked
  7860  000048  6F73               	movwf	(_width+1)& (0+255),b
  7861  00004A  0E00               	movlw	0
  7862  00004C  6F72               	movwf	_width& (0+255),b
  7863  00004E  C072  F076         	movff	_width,_flags
  7864  000052  C073  F077         	movff	_width+1,_flags+1
  7865  000056                     
  7866                           ; BSR set to: 0
  7867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  7868  000056  6974               	setf	_prec& (0+255),b
  7869  000058  6975               	setf	(_prec+1)& (0+255),b
  7870  00005A                     
  7871                           ; BSR set to: 0
  7872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  7873  00005A  0E00               	movlw	0
  7874  00005C  6E55               	movwf	(vfpfcnvrt@done+1)^0,c
  7875  00005E  0E00               	movlw	0
  7876  000060  6E54               	movwf	vfpfcnvrt@done^0,c
  7877                           
  7878                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  7879  000062  EF7E  F000         	goto	l3586
  7880  000066                     l3560:
  7881                           
  7882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  7883  000066  0100               	movlb	0	; () banked
  7884  000068  8176               	bsf	_flags& (0+255),0,b
  7885  00006A                     l3562:
  7886                           
  7887                           ; BSR set to: 0
  7888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  7889  00006A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7890  00006E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7891  000072  2ADE               	incf	postinc2,f,c
  7892  000074  0E00               	movlw	0
  7893  000076  22DD               	addwfc	postdec2,f,c
  7894                           
  7895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  7896  000078  EF7E  F000         	goto	l3586
  7897  00007C                     l3564:
  7898                           
  7899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  7900  00007C  0100               	movlb	0	; () banked
  7901  00007E  8376               	bsf	_flags& (0+255),1,b
  7902  000080  EF35  F000         	goto	l3562
  7903  000084                     l3568:
  7904                           
  7905                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  7906  000084  0100               	movlb	0	; () banked
  7907  000086  8576               	bsf	_flags& (0+255),2,b
  7908  000088  EF35  F000         	goto	l3562
  7909  00008C                     l3572:
  7910                           
  7911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  7912  00008C  0100               	movlb	0	; () banked
  7913  00008E  8776               	bsf	_flags& (0+255),3,b
  7914  000090  EF35  F000         	goto	l3562
  7915  000094                     l3576:
  7916                           
  7917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  7918  000094  0100               	movlb	0	; () banked
  7919  000096  8976               	bsf	_flags& (0+255),4,b
  7920  000098  EF35  F000         	goto	l3562
  7921  00009C                     l3580:
  7922                           
  7923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  7924  00009C  0E00               	movlw	0
  7925  00009E  6E55               	movwf	(vfpfcnvrt@done+1)^0,c
  7926  0000A0  0E01               	movlw	1
  7927  0000A2  6E54               	movwf	vfpfcnvrt@done^0,c
  7928                           
  7929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  7930  0000A4  EF7E  F000         	goto	l3586
  7931  0000A8                     l3584:
  7932  0000A8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7933  0000AC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7934  0000B0  CFDE FFF6          	movff	postinc2,tblptrl
  7935  0000B4  CFDD FFF7          	movff	postdec2,tblptrh
  7936  0000B8                     	if	0	;tblptru may be non-zero
  7937  0000B8                     	endif
  7938  0000B8                     	if	0	;tblptru may be non-zero
  7939  0000B8                     	endif
  7940  0000B8  0008               	tblrd		*
  7941  0000BA  50F5               	movf	tablat,w,c
  7942  0000BC  6E46               	movwf	??_vfpfcnvrt^0,c
  7943  0000BE  6A47               	clrf	(??_vfpfcnvrt+1)^0,c
  7944                           
  7945                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7946                           ; Switch size 1, requested type "simple"
  7947                           ; Number of cases is 1, Range of values is 0 to 0
  7948                           ; switch strategies available:
  7949                           ; Name         Instructions Cycles
  7950                           ; simple_byte            4     3 (average)
  7951                           ;	Chosen strategy is simple_byte
  7952  0000C0  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  7953  0000C2  0A00               	xorlw	0	; case 0
  7954  0000C4  B4D8               	btfsc	status,2,c
  7955  0000C6  EF67  F000         	goto	l5074
  7956  0000CA  EF4E  F000         	goto	l3580
  7957  0000CE                     l5074:
  7958                           
  7959                           ; Switch size 1, requested type "simple"
  7960                           ; Number of cases is 5, Range of values is 32 to 48
  7961                           ; switch strategies available:
  7962                           ; Name         Instructions Cycles
  7963                           ; simple_byte           16     9 (average)
  7964                           ;	Chosen strategy is simple_byte
  7965  0000CE  5046               	movf	??_vfpfcnvrt^0,w,c
  7966  0000D0  0A20               	xorlw	32	; case 32
  7967  0000D2  B4D8               	btfsc	status,2,c
  7968  0000D4  EF46  F000         	goto	l3572
  7969  0000D8  0A03               	xorlw	3	; case 35
  7970  0000DA  B4D8               	btfsc	status,2,c
  7971  0000DC  EF4A  F000         	goto	l3576
  7972  0000E0  0A08               	xorlw	8	; case 43
  7973  0000E2  B4D8               	btfsc	status,2,c
  7974  0000E4  EF42  F000         	goto	l3568
  7975  0000E8  0A06               	xorlw	6	; case 45
  7976  0000EA  B4D8               	btfsc	status,2,c
  7977  0000EC  EF33  F000         	goto	l3560
  7978  0000F0  0A1D               	xorlw	29	; case 48
  7979  0000F2  B4D8               	btfsc	status,2,c
  7980  0000F4  EF3E  F000         	goto	l3564
  7981  0000F8  EF4E  F000         	goto	l3580
  7982  0000FC                     l3586:
  7983                           
  7984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  7985  0000FC  5054               	movf	vfpfcnvrt@done^0,w,c
  7986  0000FE  1055               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  7987  000100  B4D8               	btfsc	status,2,c
  7988  000102  EF85  F000         	goto	u2561
  7989  000106  EF87  F000         	goto	u2560
  7990  00010A                     u2561:
  7991  00010A  EF54  F000         	goto	l3584
  7992  00010E                     u2560:
  7993  00010E                     
  7994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  7995  00010E  0100               	movlb	0	; () banked
  7996  000110  A176               	btfss	_flags& (0+255),0,b
  7997  000112  EF8D  F000         	goto	u2571
  7998  000116  EF8F  F000         	goto	u2570
  7999  00011A                     u2571:
  8000  00011A  EF90  F000         	goto	l3590
  8001  00011E                     u2570:
  8002  00011E                     
  8003                           ; BSR set to: 0
  8004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  8005  00011E  9376               	bcf	_flags& (0+255),1,b
  8006  000120                     l3590:
  8007                           
  8008                           ; BSR set to: 0
  8009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  8010  000120  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8011  000124  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8012  000128  CFDE FFF6          	movff	postinc2,tblptrl
  8013  00012C  CFDD FFF7          	movff	postdec2,tblptrh
  8014  000130                     	if	0	;tblptru may be non-zero
  8015  000130                     	endif
  8016  000130                     	if	0	;tblptru may be non-zero
  8017  000130                     	endif
  8018  000130  0008               	tblrd		*
  8019  000132  50F5               	movf	tablat,w,c
  8020  000134  0A2A               	xorlw	42
  8021  000136  A4D8               	btfss	status,2,c
  8022  000138  EFA0  F000         	goto	u2581
  8023  00013C  EFA2  F000         	goto	u2580
  8024  000140                     u2581:
  8025  000140  EFCB  F000         	goto	l3598
  8026  000144                     u2580:
  8027  000144                     
  8028                           ; BSR set to: 0
  8029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  8030  000144  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8031  000148  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8032  00014C  2ADE               	incf	postinc2,f,c
  8033  00014E  0E00               	movlw	0
  8034  000150  22DD               	addwfc	postdec2,f,c
  8035                           
  8036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  8037  000152  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8038  000156  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8039  00015A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  8040  00015E  0E02               	movlw	2
  8041  000160  26DE               	addwf	postinc2,f,c
  8042  000162  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  8043  000166  0E00               	movlw	0
  8044  000168  22DD               	addwfc	postdec2,f,c
  8045  00016A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8046  00016E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8047  000172  CFDE F072          	movff	postinc2,_width
  8048  000176  CFDD F073          	movff	postdec2,_width+1
  8049  00017A                     
  8050                           ; BSR set to: 0
  8051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  8052  00017A  BF73               	btfsc	(_width+1)& (0+255),7,b
  8053  00017C  EFC4  F000         	goto	u2590
  8054  000180  EFC2  F000         	goto	u2591
  8055  000184                     u2591:
  8056  000184  EF0E  F001         	goto	l3608
  8057  000188                     u2590:
  8058  000188                     
  8059                           ; BSR set to: 0
  8060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  8061  000188  8176               	bsf	_flags& (0+255),0,b
  8062                           
  8063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  8064  00018A  6D72               	negf	_width& (0+255),b
  8065  00018C  1F73               	comf	(_width+1)& (0+255),f,b
  8066  00018E  B0D8               	btfsc	status,0,c
  8067  000190  2B73               	incf	(_width+1)& (0+255),f,b
  8068  000192  EF0E  F001         	goto	l3608
  8069  000196                     l3598:
  8070                           
  8071                           ; BSR set to: 0
  8072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  8073  000196  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8074  00019A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8075  00019E  CFDE F008          	movff	postinc2,atoi@s
  8076  0001A2  CFDD F009          	movff	postdec2,atoi@s+1
  8077  0001A6  EC32  F008         	call	_atoi	;wreg free
  8078  0001AA  C008  F072         	movff	?_atoi,_width
  8079  0001AE  C009  F073         	movff	?_atoi+1,_width+1
  8080                           
  8081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8082  0001B2  EFE2  F000         	goto	l3602
  8083  0001B6                     l3600:
  8084                           
  8085                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  8086  0001B6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8087  0001BA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8088  0001BE  2ADE               	incf	postinc2,f,c
  8089  0001C0  0E00               	movlw	0
  8090  0001C2  22DD               	addwfc	postdec2,f,c
  8091  0001C4                     l3602:
  8092  0001C4  0ED0               	movlw	208
  8093  0001C6  6E46               	movwf	??_vfpfcnvrt^0,c
  8094  0001C8  0EFF               	movlw	255
  8095  0001CA  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  8096  0001CC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8097  0001D0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8098  0001D4  CFDE FFF6          	movff	postinc2,tblptrl
  8099  0001D8  CFDD FFF7          	movff	postdec2,tblptrh
  8100  0001DC                     	if	0	;tblptru may be non-zero
  8101  0001DC                     	endif
  8102  0001DC                     	if	0	;tblptru may be non-zero
  8103  0001DC                     	endif
  8104  0001DC  0008               	tblrd		*
  8105  0001DE  50F5               	movf	tablat,w,c
  8106  0001E0  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  8107  0001E2  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  8108  0001E4  5046               	movf	??_vfpfcnvrt^0,w,c
  8109  0001E6  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  8110  0001E8  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  8111  0001EA  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  8112  0001EC  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  8113  0001EE  E10A               	bnz	u2600
  8114  0001F0  0E0A               	movlw	10
  8115  0001F2  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  8116  0001F4  A0D8               	btfss	status,0,c
  8117  0001F6  EFFF  F000         	goto	u2601
  8118  0001FA  EF02  F001         	goto	u2600
  8119  0001FE                     u2601:
  8120  0001FE  0E01               	movlw	1
  8121  000200  EF03  F001         	goto	u2610
  8122  000204                     u2600:
  8123  000204  0E00               	movlw	0
  8124  000206                     u2610:
  8125  000206  6E56               	movwf	_vfpfcnvrt$1100^0,c
  8126  000208  6A57               	clrf	(_vfpfcnvrt$1100+1)^0,c
  8127  00020A  5056               	movf	_vfpfcnvrt$1100^0,w,c
  8128  00020C  1057               	iorwf	(_vfpfcnvrt$1100+1)^0,w,c
  8129  00020E  A4D8               	btfss	status,2,c
  8130  000210  EF0C  F001         	goto	u2621
  8131  000214  EF0E  F001         	goto	u2620
  8132  000218                     u2621:
  8133  000218  EFDB  F000         	goto	l3600
  8134  00021C                     u2620:
  8135  00021C                     l3608:
  8136                           
  8137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  8138  00021C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8139  000220  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8140  000224  CFDE FFF6          	movff	postinc2,tblptrl
  8141  000228  CFDD FFF7          	movff	postdec2,tblptrh
  8142  00022C                     	if	0	;tblptru may be non-zero
  8143  00022C                     	endif
  8144  00022C                     	if	0	;tblptru may be non-zero
  8145  00022C                     	endif
  8146  00022C  0008               	tblrd		*
  8147  00022E  50F5               	movf	tablat,w,c
  8148  000230  0A2E               	xorlw	46
  8149  000232  A4D8               	btfss	status,2,c
  8150  000234  EF1E  F001         	goto	u2631
  8151  000238  EF20  F001         	goto	u2630
  8152  00023C                     u2631:
  8153  00023C  EF9E  F001         	goto	l3628
  8154  000240                     u2630:
  8155  000240                     
  8156                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  8157  000240  0E00               	movlw	0
  8158  000242  0100               	movlb	0	; () banked
  8159  000244  6F75               	movwf	(_prec+1)& (0+255),b
  8160  000246  0E00               	movlw	0
  8161  000248  6F74               	movwf	_prec& (0+255),b
  8162  00024A                     
  8163                           ; BSR set to: 0
  8164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  8165  00024A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8166  00024E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8167  000252  2ADE               	incf	postinc2,f,c
  8168  000254  0E00               	movlw	0
  8169  000256  22DD               	addwfc	postdec2,f,c
  8170  000258                     
  8171                           ; BSR set to: 0
  8172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  8173  000258  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8174  00025C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8175  000260  CFDE FFF6          	movff	postinc2,tblptrl
  8176  000264  CFDD FFF7          	movff	postdec2,tblptrh
  8177  000268                     	if	0	;tblptru may be non-zero
  8178  000268                     	endif
  8179  000268                     	if	0	;tblptru may be non-zero
  8180  000268                     	endif
  8181  000268  0008               	tblrd		*
  8182  00026A  50F5               	movf	tablat,w,c
  8183  00026C  0A2A               	xorlw	42
  8184  00026E  A4D8               	btfss	status,2,c
  8185  000270  EF3C  F001         	goto	u2641
  8186  000274  EF3E  F001         	goto	u2640
  8187  000278                     u2641:
  8188  000278  EF5B  F001         	goto	l3618
  8189  00027C                     u2640:
  8190  00027C                     
  8191                           ; BSR set to: 0
  8192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  8193  00027C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8194  000280  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8195  000284  2ADE               	incf	postinc2,f,c
  8196  000286  0E00               	movlw	0
  8197  000288  22DD               	addwfc	postdec2,f,c
  8198                           
  8199                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  8200  00028A  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8201  00028E  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8202  000292  CFDF F046          	movff	indf2,??_vfpfcnvrt
  8203  000296  0E02               	movlw	2
  8204  000298  26DE               	addwf	postinc2,f,c
  8205  00029A  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  8206  00029E  0E00               	movlw	0
  8207  0002A0  22DD               	addwfc	postdec2,f,c
  8208  0002A2  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8209  0002A6  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8210  0002AA  CFDE F074          	movff	postinc2,_prec
  8211  0002AE  CFDD F075          	movff	postdec2,_prec+1
  8212                           
  8213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  8214  0002B2  EF9E  F001         	goto	l3628
  8215  0002B6                     l3618:
  8216                           
  8217                           ; BSR set to: 0
  8218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  8219  0002B6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8220  0002BA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8221  0002BE  CFDE F008          	movff	postinc2,atoi@s
  8222  0002C2  CFDD F009          	movff	postdec2,atoi@s+1
  8223  0002C6  EC32  F008         	call	_atoi	;wreg free
  8224  0002CA  C008  F074         	movff	?_atoi,_prec
  8225  0002CE  C009  F075         	movff	?_atoi+1,_prec+1
  8226                           
  8227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8228  0002D2  EF72  F001         	goto	l3622
  8229  0002D6                     l3620:
  8230                           
  8231                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  8232  0002D6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8233  0002DA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8234  0002DE  2ADE               	incf	postinc2,f,c
  8235  0002E0  0E00               	movlw	0
  8236  0002E2  22DD               	addwfc	postdec2,f,c
  8237  0002E4                     l3622:
  8238  0002E4  0ED0               	movlw	208
  8239  0002E6  6E46               	movwf	??_vfpfcnvrt^0,c
  8240  0002E8  0EFF               	movlw	255
  8241  0002EA  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  8242  0002EC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8243  0002F0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8244  0002F4  CFDE FFF6          	movff	postinc2,tblptrl
  8245  0002F8  CFDD FFF7          	movff	postdec2,tblptrh
  8246  0002FC                     	if	0	;tblptru may be non-zero
  8247  0002FC                     	endif
  8248  0002FC                     	if	0	;tblptru may be non-zero
  8249  0002FC                     	endif
  8250  0002FC  0008               	tblrd		*
  8251  0002FE  50F5               	movf	tablat,w,c
  8252  000300  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  8253  000302  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  8254  000304  5046               	movf	??_vfpfcnvrt^0,w,c
  8255  000306  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  8256  000308  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  8257  00030A  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  8258  00030C  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  8259  00030E  E10A               	bnz	u2650
  8260  000310  0E0A               	movlw	10
  8261  000312  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  8262  000314  A0D8               	btfss	status,0,c
  8263  000316  EF8F  F001         	goto	u2651
  8264  00031A  EF92  F001         	goto	u2650
  8265  00031E                     u2651:
  8266  00031E  0E01               	movlw	1
  8267  000320  EF93  F001         	goto	u2660
  8268  000324                     u2650:
  8269  000324  0E00               	movlw	0
  8270  000326                     u2660:
  8271  000326  6E58               	movwf	_vfpfcnvrt$1101^0,c
  8272  000328  6A59               	clrf	(_vfpfcnvrt$1101+1)^0,c
  8273  00032A  5058               	movf	_vfpfcnvrt$1101^0,w,c
  8274  00032C  1059               	iorwf	(_vfpfcnvrt$1101+1)^0,w,c
  8275  00032E  A4D8               	btfss	status,2,c
  8276  000330  EF9C  F001         	goto	u2671
  8277  000334  EF9E  F001         	goto	u2670
  8278  000338                     u2671:
  8279  000338  EF6B  F001         	goto	l3620
  8280  00033C                     u2670:
  8281  00033C                     l3628:
  8282                           
  8283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  8284  00033C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8285  000340  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8286  000344  CFDE FFF6          	movff	postinc2,tblptrl
  8287  000348  CFDD FFF7          	movff	postdec2,tblptrh
  8288  00034C                     	if	0	;tblptru may be non-zero
  8289  00034C                     	endif
  8290  00034C                     	if	0	;tblptru may be non-zero
  8291  00034C                     	endif
  8292  00034C  0008               	tblrd		*
  8293  00034E  50F5               	movf	tablat,w,c
  8294  000350  0A63               	xorlw	99
  8295  000352  A4D8               	btfss	status,2,c
  8296  000354  EFAE  F001         	goto	u2681
  8297  000358  EFB0  F001         	goto	u2680
  8298  00035C                     u2681:
  8299  00035C  EFD7  F001         	goto	l3636
  8300  000360                     u2680:
  8301  000360                     
  8302                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  8303  000360  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8304  000364  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8305  000368  2ADE               	incf	postinc2,f,c
  8306  00036A  0E00               	movlw	0
  8307  00036C  22DD               	addwfc	postdec2,f,c
  8308                           
  8309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8310  00036E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8311  000372  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8312  000376  CFDF F046          	movff	indf2,??_vfpfcnvrt
  8313  00037A  0E02               	movlw	2
  8314  00037C  26DE               	addwf	postinc2,f,c
  8315  00037E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  8316  000382  0E00               	movlw	0
  8317  000384  22DD               	addwfc	postdec2,f,c
  8318  000386  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8319  00038A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8320  00038E  50DF               	movf	indf2,w,c
  8321  000390  6E5A               	movwf	vfpfcnvrt@c^0,c
  8322  000392                     
  8323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  8324  000392  C040  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  8325  000396  C041  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  8326  00039A  C05A  F01E         	movff	vfpfcnvrt@c,ctoa@c
  8327  00039E  ECA0  F016         	call	_ctoa	;wreg free
  8328  0003A2  C01C  F040         	movff	?_ctoa,?_vfpfcnvrt
  8329  0003A6  C01D  F041         	movff	?_ctoa+1,?_vfpfcnvrt+1
  8330  0003AA  EFC9  F002         	goto	l617
  8331  0003AE                     l3636:
  8332                           
  8333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8334  0003AE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8335  0003B2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8336  0003B6  CFDE FFF6          	movff	postinc2,tblptrl
  8337  0003BA  CFDD FFF7          	movff	postdec2,tblptrh
  8338  0003BE                     	if	0	;tblptru may be non-zero
  8339  0003BE                     	endif
  8340  0003BE                     	if	0	;tblptru may be non-zero
  8341  0003BE                     	endif
  8342  0003BE  0008               	tblrd		*
  8343  0003C0  50F5               	movf	tablat,w,c
  8344  0003C2  0A64               	xorlw	100
  8345  0003C4  B4D8               	btfsc	status,2,c
  8346  0003C6  EFE7  F001         	goto	u2691
  8347  0003CA  EFE9  F001         	goto	u2690
  8348  0003CE                     u2691:
  8349  0003CE  EFFB  F001         	goto	l3640
  8350  0003D2                     u2690:
  8351  0003D2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8352  0003D6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8353  0003DA  CFDE FFF6          	movff	postinc2,tblptrl
  8354  0003DE  CFDD FFF7          	movff	postdec2,tblptrh
  8355  0003E2                     	if	0	;tblptru may be non-zero
  8356  0003E2                     	endif
  8357  0003E2                     	if	0	;tblptru may be non-zero
  8358  0003E2                     	endif
  8359  0003E2  0008               	tblrd		*
  8360  0003E4  50F5               	movf	tablat,w,c
  8361  0003E6  0A69               	xorlw	105
  8362  0003E8  A4D8               	btfss	status,2,c
  8363  0003EA  EFF9  F001         	goto	u2701
  8364  0003EE  EFFB  F001         	goto	u2700
  8365  0003F2                     u2701:
  8366  0003F2  EF3B  F002         	goto	l3646
  8367  0003F6                     u2700:
  8368  0003F6                     l3640:
  8369                           
  8370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  8371  0003F6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8372  0003FA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8373  0003FE  2ADE               	incf	postinc2,f,c
  8374  000400  0E00               	movlw	0
  8375  000402  22DD               	addwfc	postdec2,f,c
  8376                           
  8377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8378  000404  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8379  000408  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8380  00040C  CFDF F046          	movff	indf2,??_vfpfcnvrt
  8381  000410  0E02               	movlw	2
  8382  000412  26DE               	addwf	postinc2,f,c
  8383  000414  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  8384  000418  0E00               	movlw	0
  8385  00041A  22DD               	addwfc	postdec2,f,c
  8386  00041C  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8387  000420  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8388  000424  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  8389  000428  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  8390  00042C  0E00               	movlw	0
  8391  00042E  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  8392  000430  0EFF               	movlw	-1
  8393  000432  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  8394  000434  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  8395  000436  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  8396  000438  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  8397  00043A  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  8398  00043C  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  8399  00043E                     
  8400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  8401  00043E  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  8402  000442  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8403  000446  C04A  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  8404  00044A  C04B  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  8405  00044E  C04C  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  8406  000452  C04D  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  8407  000456  C04E  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  8408  00045A  C04F  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  8409  00045E  C050  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  8410  000462  C051  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  8411  000466  EC79  F004         	call	_dtoa	;wreg free
  8412  00046A  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  8413  00046E  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  8414  000472  EFC9  F002         	goto	l617
  8415  000476                     l3646:
  8416                           
  8417                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  8418  000476  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8419  00047A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8420  00047E  CFDE FFF6          	movff	postinc2,tblptrl
  8421  000482  CFDD FFF7          	movff	postdec2,tblptrh
  8422  000486                     	if	0	;tblptru may be non-zero
  8423  000486                     	endif
  8424  000486                     	if	0	;tblptru may be non-zero
  8425  000486                     	endif
  8426  000486  0008               	tblrd		*
  8427  000488  50F5               	movf	tablat,w,c
  8428  00048A  0A73               	xorlw	115
  8429  00048C  A4D8               	btfss	status,2,c
  8430  00048E  EF4B  F002         	goto	u2711
  8431  000492  EF4D  F002         	goto	u2710
  8432  000496                     u2711:
  8433  000496  EF78  F002         	goto	l3654
  8434  00049A                     u2710:
  8435  00049A                     
  8436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  8437  00049A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8438  00049E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8439  0004A2  2ADE               	incf	postinc2,f,c
  8440  0004A4  0E00               	movlw	0
  8441  0004A6  22DD               	addwfc	postdec2,f,c
  8442                           
  8443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  8444  0004A8  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8445  0004AC  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8446  0004B0  CFDF F046          	movff	indf2,??_vfpfcnvrt
  8447  0004B4  0E02               	movlw	2
  8448  0004B6  26DE               	addwf	postinc2,f,c
  8449  0004B8  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  8450  0004BC  0E00               	movlw	0
  8451  0004BE  22DD               	addwfc	postdec2,f,c
  8452  0004C0  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8453  0004C4  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8454  0004C8  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  8455  0004CC  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  8456  0004D0                     
  8457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  8458  0004D0  C040  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  8459  0004D4  C041  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  8460  0004D8  C052  F00C         	movff	vfpfcnvrt@cp,stoa@s
  8461  0004DC  C053  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  8462  0004E0  ECBE  F009         	call	_stoa	;wreg free
  8463  0004E4  C00A  F040         	movff	?_stoa,?_vfpfcnvrt
  8464  0004E8  C00B  F041         	movff	?_stoa+1,?_vfpfcnvrt+1
  8465  0004EC  EFC9  F002         	goto	l617
  8466  0004F0                     l3654:
  8467                           
  8468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  8469  0004F0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8470  0004F4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8471  0004F8  CFDE FFF6          	movff	postinc2,tblptrl
  8472  0004FC  CFDD FFF7          	movff	postdec2,tblptrh
  8473  000500                     	if	0	;tblptru may be non-zero
  8474  000500                     	endif
  8475  000500                     	if	0	;tblptru may be non-zero
  8476  000500                     	endif
  8477  000500  0008               	tblrd		*
  8478  000502  50F5               	movf	tablat,w,c
  8479  000504  0A25               	xorlw	37
  8480  000506  A4D8               	btfss	status,2,c
  8481  000508  EF88  F002         	goto	u2721
  8482  00050C  EF8A  F002         	goto	u2720
  8483  000510                     u2721:
  8484  000510  EFA1  F002         	goto	l3664
  8485  000514                     u2720:
  8486  000514                     
  8487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  8488  000514  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8489  000518  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8490  00051C  2ADE               	incf	postinc2,f,c
  8491  00051E  0E00               	movlw	0
  8492  000520  22DD               	addwfc	postdec2,f,c
  8493  000522                     
  8494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  8495  000522  0E00               	movlw	0
  8496  000524  6E02               	movwf	(fputc@c+1)^0,c
  8497  000526  0E25               	movlw	37
  8498  000528  6E01               	movwf	fputc@c^0,c
  8499  00052A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  8500  00052E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8501  000532  ECFF  F010         	call	_fputc	;wreg free
  8502  000536                     l3660:
  8503                           
  8504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  8505  000536  0E00               	movlw	0
  8506  000538  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  8507  00053A  0E01               	movlw	1
  8508  00053C  6E40               	movwf	?_vfpfcnvrt^0,c
  8509  00053E  EFC9  F002         	goto	l617
  8510  000542                     l3664:
  8511                           
  8512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  8513  000542  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8514  000546  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8515  00054A  2ADE               	incf	postinc2,f,c
  8516  00054C  0E00               	movlw	0
  8517  00054E  22DD               	addwfc	postdec2,f,c
  8518  000550                     
  8519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  8520  000550  0E00               	movlw	0
  8521  000552  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  8522  000554  0E00               	movlw	0
  8523  000556  6E40               	movwf	?_vfpfcnvrt^0,c
  8524  000558  EFC9  F002         	goto	l617
  8525  00055C                     l3670:
  8526                           
  8527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  8528  00055C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8529  000560  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8530  000564  CFDE FFF6          	movff	postinc2,tblptrl
  8531  000568  CFDD FFF7          	movff	postdec2,tblptrh
  8532  00056C                     	if	0	;tblptru may be non-zero
  8533  00056C                     	endif
  8534  00056C                     	if	0	;tblptru may be non-zero
  8535  00056C                     	endif
  8536  00056C  0008               	tblrd		*
  8537  00056E  50F5               	movf	tablat,w,c
  8538  000570  6E01               	movwf	fputc@c^0,c
  8539  000572  6A02               	clrf	(fputc@c+1)^0,c
  8540  000574  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  8541  000578  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8542  00057C  ECFF  F010         	call	_fputc	;wreg free
  8543  000580                     
  8544                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  8545  000580  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8546  000584  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8547  000588  2ADE               	incf	postinc2,f,c
  8548  00058A  0E00               	movlw	0
  8549  00058C  22DD               	addwfc	postdec2,f,c
  8550  00058E  EF9B  F002         	goto	l3660
  8551  000592                     l617:
  8552  000592  0012               	return		;funcret
  8553  000594                     __end_of_vfpfcnvrt:
  8554                           	opt callstack 0
  8555                           
  8556 ;; *************** function _stoa *****************
  8557 ;; Defined at:
  8558 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8559 ;; Parameters:    Size  Location     Type
  8560 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  8561 ;;		 -> sprintf@f(6), 
  8562 ;;  s               2   11[COMRAM] PTR unsigned char 
  8563 ;;		 -> ?_sprintf(2), bufferDias(10), 
  8564 ;; Auto vars:     Size  Location     Type
  8565 ;;  nuls            7   14[COMRAM] unsigned char [7]
  8566 ;;  l               2   29[COMRAM] int 
  8567 ;;  p               2   27[COMRAM] int 
  8568 ;;  cp              2   25[COMRAM] PTR unsigned char 
  8569 ;;		 -> ?_sprintf(2), stoa@nuls(7), bufferDias(10), 
  8570 ;;  w               2   23[COMRAM] int 
  8571 ;;  i               2   21[COMRAM] int 
  8572 ;; Return value:  Size  Location     Type
  8573 ;;                  2    9[COMRAM] int 
  8574 ;; Registers used:
  8575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8576 ;; Tracked objects:
  8577 ;;		On entry : 0/0
  8578 ;;		On exit  : 0/0
  8579 ;;		Unchanged: 0/0
  8580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8581 ;;      Params:         4       0       0       0       0       0       0       0       0
  8582 ;;      Locals:        17       0       0       0       0       0       0       0       0
  8583 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8584 ;;      Totals:        22       0       0       0       0       0       0       0       0
  8585 ;;Total ram usage:       22 bytes
  8586 ;; Hardware stack levels used:    1
  8587 ;; Hardware stack levels required when called:    3
  8588 ;; This function calls:
  8589 ;;		_fputc
  8590 ;;		_strlen
  8591 ;; This function is called by:
  8592 ;;		_vfpfcnvrt
  8593 ;; This function uses a non-reentrant model
  8594 ;;
  8595                           
  8596                           	psect	text37
  8597  00137C                     __ptext37:
  8598                           	opt callstack 0
  8599  00137C                     _stoa:
  8600                           	opt callstack 22
  8601  00137C                     
  8602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8603  00137C  EE20  F0E4         	lfsr	2,stoa@F1144
  8604  001380  EE10  F00F         	lfsr	1,stoa@nuls
  8605  001384  0E06               	movlw	6
  8606  001386                     u2361:
  8607  001386  CFDB FFE3          	movff	plusw2,plusw1
  8608  00138A  06E8               	decf	wreg,f,c
  8609  00138C  E2FC               	bc	u2361
  8610  00138E                     
  8611                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8612  00138E  C00C  F01A         	movff	stoa@s,stoa@cp
  8613  001392  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  8614  001396                     
  8615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8616  001396  501A               	movf	stoa@cp^0,w,c
  8617  001398  101B               	iorwf	(stoa@cp+1)^0,w,c
  8618  00139A  A4D8               	btfss	status,2,c
  8619  00139C  EFD2  F009         	goto	u2371
  8620  0013A0  EFD4  F009         	goto	u2370
  8621  0013A4                     u2371:
  8622  0013A4  EFD8  F009         	goto	l3466
  8623  0013A8                     u2370:
  8624  0013A8                     
  8625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8626  0013A8  0E0F               	movlw	low stoa@nuls
  8627  0013AA  6E1A               	movwf	stoa@cp^0,c
  8628  0013AC  0E00               	movlw	high stoa@nuls
  8629  0013AE  6E1B               	movwf	(stoa@cp+1)^0,c
  8630  0013B0                     l3466:
  8631                           
  8632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8633  0013B0  C01A  F001         	movff	stoa@cp,strlen@s
  8634  0013B4  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  8635  0013B8  EC4B  F018         	call	_strlen	;wreg free
  8636  0013BC  C001  F01E         	movff	?_strlen,stoa@l
  8637  0013C0  C002  F01F         	movff	?_strlen+1,stoa@l+1
  8638  0013C4                     
  8639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8640  0013C4  C074  F01C         	movff	_prec,stoa@p
  8641  0013C8  C075  F01D         	movff	_prec+1,stoa@p+1
  8642  0013CC                     
  8643                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8644  0013CC  BE1D               	btfsc	(stoa@p+1)^0,7,c
  8645  0013CE  EFEB  F009         	goto	u2381
  8646  0013D2  EFED  F009         	goto	u2380
  8647  0013D6                     u2381:
  8648  0013D6  EF02  F00A         	goto	l566
  8649  0013DA                     u2380:
  8650  0013DA  501E               	movf	stoa@l^0,w,c
  8651  0013DC  5C1C               	subwf	stoa@p^0,w,c
  8652  0013DE  501D               	movf	(stoa@p+1)^0,w,c
  8653  0013E0  0A80               	xorlw	128
  8654  0013E2  6E0E               	movwf	??_stoa^0,c
  8655  0013E4  501F               	movf	(stoa@l+1)^0,w,c
  8656  0013E6  0A80               	xorlw	128
  8657  0013E8  580E               	subwfb	??_stoa^0,w,c
  8658  0013EA  A0D8               	btfss	status,0,c
  8659  0013EC  EFFA  F009         	goto	u2391
  8660  0013F0  EFFC  F009         	goto	u2390
  8661  0013F4                     u2391:
  8662  0013F4  EFFE  F009         	goto	l564
  8663  0013F8                     u2390:
  8664  0013F8  EF02  F00A         	goto	l566
  8665  0013FC                     l564:
  8666  0013FC  C01C  F01E         	movff	stoa@p,stoa@l
  8667  001400  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  8668  001404                     l566:
  8669                           
  8670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8671  001404  C01E  F01C         	movff	stoa@l,stoa@p
  8672  001408  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  8673                           
  8674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8675  00140C  C072  F018         	movff	_width,stoa@w
  8676  001410  C073  F019         	movff	_width+1,stoa@w+1
  8677                           
  8678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8679  001414  0100               	movlb	0	; () banked
  8680  001416  B176               	btfsc	_flags& (0+255),0,b
  8681  001418  EF10  F00A         	goto	u2401
  8682  00141C  EF12  F00A         	goto	u2400
  8683  001420                     u2401:
  8684  001420  EF2F  F00A         	goto	l3482
  8685  001424                     u2400:
  8686  001424  EF20  F00A         	goto	l3480
  8687  001428                     l3476:
  8688                           
  8689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8690  001428  0E00               	movlw	0
  8691  00142A  6E02               	movwf	(fputc@c+1)^0,c
  8692  00142C  0E20               	movlw	32
  8693  00142E  6E01               	movwf	fputc@c^0,c
  8694  001430  C00A  F003         	movff	stoa@fp,fputc@fp
  8695  001434  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8696  001438  ECFF  F010         	call	_fputc	;wreg free
  8697  00143C                     
  8698                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8699  00143C  4A1E               	infsnz	stoa@l^0,f,c
  8700  00143E  2A1F               	incf	(stoa@l+1)^0,f,c
  8701  001440                     l3480:
  8702                           
  8703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8704  001440  5018               	movf	stoa@w^0,w,c
  8705  001442  5C1E               	subwf	stoa@l^0,w,c
  8706  001444  501F               	movf	(stoa@l+1)^0,w,c
  8707  001446  0A80               	xorlw	128
  8708  001448  6E0E               	movwf	??_stoa^0,c
  8709  00144A  5019               	movf	(stoa@w+1)^0,w,c
  8710  00144C  0A80               	xorlw	128
  8711  00144E  580E               	subwfb	??_stoa^0,w,c
  8712  001450  A0D8               	btfss	status,0,c
  8713  001452  EF2D  F00A         	goto	u2411
  8714  001456  EF2F  F00A         	goto	u2410
  8715  00145A                     u2411:
  8716  00145A  EF14  F00A         	goto	l3476
  8717  00145E                     u2410:
  8718  00145E                     l3482:
  8719                           
  8720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8721  00145E  0E00               	movlw	0
  8722  001460  6E17               	movwf	(stoa@i+1)^0,c
  8723  001462  0E00               	movlw	0
  8724  001464  6E16               	movwf	stoa@i^0,c
  8725                           
  8726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8727  001466  EF48  F00A         	goto	l3490
  8728  00146A                     l3484:
  8729                           
  8730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8731  00146A  C01A  FFD9         	movff	stoa@cp,fsr2l
  8732  00146E  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  8733  001472  50DF               	movf	indf2,w,c
  8734  001474  6E0E               	movwf	??_stoa^0,c
  8735  001476  500E               	movf	??_stoa^0,w,c
  8736  001478  6E01               	movwf	fputc@c^0,c
  8737  00147A  6A02               	clrf	(fputc@c+1)^0,c
  8738  00147C  C00A  F003         	movff	stoa@fp,fputc@fp
  8739  001480  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8740  001484  ECFF  F010         	call	_fputc	;wreg free
  8741  001488                     
  8742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8743  001488  4A1A               	infsnz	stoa@cp^0,f,c
  8744  00148A  2A1B               	incf	(stoa@cp+1)^0,f,c
  8745  00148C                     
  8746                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8747  00148C  4A16               	infsnz	stoa@i^0,f,c
  8748  00148E  2A17               	incf	(stoa@i+1)^0,f,c
  8749  001490                     l3490:
  8750                           
  8751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8752  001490  501C               	movf	stoa@p^0,w,c
  8753  001492  5C16               	subwf	stoa@i^0,w,c
  8754  001494  5017               	movf	(stoa@i+1)^0,w,c
  8755  001496  0A80               	xorlw	128
  8756  001498  6E0E               	movwf	??_stoa^0,c
  8757  00149A  501D               	movf	(stoa@p+1)^0,w,c
  8758  00149C  0A80               	xorlw	128
  8759  00149E  580E               	subwfb	??_stoa^0,w,c
  8760  0014A0  A0D8               	btfss	status,0,c
  8761  0014A2  EF55  F00A         	goto	u2421
  8762  0014A6  EF57  F00A         	goto	u2420
  8763  0014AA                     u2421:
  8764  0014AA  EF35  F00A         	goto	l3484
  8765  0014AE                     u2420:
  8766  0014AE                     
  8767                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8768  0014AE  0100               	movlb	0	; () banked
  8769  0014B0  A176               	btfss	_flags& (0+255),0,b
  8770  0014B2  EF5D  F00A         	goto	u2431
  8771  0014B6  EF5F  F00A         	goto	u2430
  8772  0014BA                     u2431:
  8773  0014BA  EF7C  F00A         	goto	l576
  8774  0014BE                     u2430:
  8775  0014BE  EF6D  F00A         	goto	l3498
  8776  0014C2                     l3494:
  8777                           
  8778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8779  0014C2  0E00               	movlw	0
  8780  0014C4  6E02               	movwf	(fputc@c+1)^0,c
  8781  0014C6  0E20               	movlw	32
  8782  0014C8  6E01               	movwf	fputc@c^0,c
  8783  0014CA  C00A  F003         	movff	stoa@fp,fputc@fp
  8784  0014CE  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8785  0014D2  ECFF  F010         	call	_fputc	;wreg free
  8786  0014D6                     
  8787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8788  0014D6  4A1E               	infsnz	stoa@l^0,f,c
  8789  0014D8  2A1F               	incf	(stoa@l+1)^0,f,c
  8790  0014DA                     l3498:
  8791                           
  8792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8793  0014DA  5018               	movf	stoa@w^0,w,c
  8794  0014DC  5C1E               	subwf	stoa@l^0,w,c
  8795  0014DE  501F               	movf	(stoa@l+1)^0,w,c
  8796  0014E0  0A80               	xorlw	128
  8797  0014E2  6E0E               	movwf	??_stoa^0,c
  8798  0014E4  5019               	movf	(stoa@w+1)^0,w,c
  8799  0014E6  0A80               	xorlw	128
  8800  0014E8  580E               	subwfb	??_stoa^0,w,c
  8801  0014EA  A0D8               	btfss	status,0,c
  8802  0014EC  EF7A  F00A         	goto	u2441
  8803  0014F0  EF7C  F00A         	goto	u2440
  8804  0014F4                     u2441:
  8805  0014F4  EF61  F00A         	goto	l3494
  8806  0014F8                     u2440:
  8807  0014F8                     l576:
  8808                           
  8809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8810  0014F8  C01E  F00A         	movff	stoa@l,?_stoa
  8811  0014FC  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  8812  001500  0012               	return		;funcret
  8813  001502                     __end_of_stoa:
  8814                           	opt callstack 0
  8815                           
  8816 ;; *************** function _dtoa *****************
  8817 ;; Defined at:
  8818 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8819 ;; Parameters:    Size  Location     Type
  8820 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8821 ;;		 -> sprintf@f(6), 
  8822 ;;  d               8   29[COMRAM] long long 
  8823 ;; Auto vars:     Size  Location     Type
  8824 ;;  n               8   53[COMRAM] long long 
  8825 ;;  i               2   61[COMRAM] int 
  8826 ;;  s               2   51[COMRAM] int 
  8827 ;;  w               2   49[COMRAM] int 
  8828 ;;  p               2   47[COMRAM] int 
  8829 ;; Return value:  Size  Location     Type
  8830 ;;                  2   27[COMRAM] int 
  8831 ;; Registers used:
  8832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8833 ;; Tracked objects:
  8834 ;;		On entry : 0/0
  8835 ;;		On exit  : 0/0
  8836 ;;		Unchanged: 0/0
  8837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8838 ;;      Params:        10       0       0       0       0       0       0       0       0
  8839 ;;      Locals:        18       0       0       0       0       0       0       0       0
  8840 ;;      Temps:          8       0       0       0       0       0       0       0       0
  8841 ;;      Totals:        36       0       0       0       0       0       0       0       0
  8842 ;;Total ram usage:       36 bytes
  8843 ;; Hardware stack levels used:    1
  8844 ;; Hardware stack levels required when called:    5
  8845 ;; This function calls:
  8846 ;;		___aodiv
  8847 ;;		___aomod
  8848 ;;		_abs
  8849 ;;		_pad
  8850 ;; This function is called by:
  8851 ;;		_vfpfcnvrt
  8852 ;; This function uses a non-reentrant model
  8853 ;;
  8854                           
  8855                           	psect	text38
  8856  0008F2                     __ptext38:
  8857                           	opt callstack 0
  8858  0008F2                     _dtoa:
  8859                           	opt callstack 20
  8860  0008F2                     
  8861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8862  0008F2  C01E  F036         	movff	dtoa@d,dtoa@n
  8863  0008F6  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  8864  0008FA  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  8865  0008FE  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  8866  000902  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  8867  000906  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  8868  00090A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  8869  00090E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  8870  000912                     
  8871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  8872  000912  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  8873  000914  EF8E  F004         	goto	u2211
  8874  000918  EF91  F004         	goto	u2210
  8875  00091C                     u2211:
  8876  00091C  0E01               	movlw	1
  8877  00091E  EF92  F004         	goto	u2220
  8878  000922                     u2210:
  8879  000922  0E00               	movlw	0
  8880  000924                     u2220:
  8881  000924  6E34               	movwf	dtoa@s^0,c
  8882  000926  6A35               	clrf	(dtoa@s+1)^0,c
  8883                           
  8884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  8885  000928  5034               	movf	dtoa@s^0,w,c
  8886  00092A  1035               	iorwf	(dtoa@s+1)^0,w,c
  8887  00092C  B4D8               	btfsc	status,2,c
  8888  00092E  EF9B  F004         	goto	u2231
  8889  000932  EF9D  F004         	goto	u2230
  8890  000936                     u2231:
  8891  000936  EFAD  F004         	goto	l3402
  8892  00093A                     u2230:
  8893  00093A                     
  8894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  8895  00093A  1E3D               	comf	(dtoa@n+7)^0,f,c
  8896  00093C  1E3C               	comf	(dtoa@n+6)^0,f,c
  8897  00093E  1E3B               	comf	(dtoa@n+5)^0,f,c
  8898  000940  1E3A               	comf	(dtoa@n+4)^0,f,c
  8899  000942  1E39               	comf	(dtoa@n+3)^0,f,c
  8900  000944  1E38               	comf	(dtoa@n+2)^0,f,c
  8901  000946  1E37               	comf	(dtoa@n+1)^0,f,c
  8902  000948  6C36               	negf	dtoa@n^0,c
  8903  00094A  0E00               	movlw	0
  8904  00094C  2237               	addwfc	(dtoa@n+1)^0,f,c
  8905  00094E  2238               	addwfc	(dtoa@n+2)^0,f,c
  8906  000950  2239               	addwfc	(dtoa@n+3)^0,f,c
  8907  000952  223A               	addwfc	(dtoa@n+4)^0,f,c
  8908  000954  223B               	addwfc	(dtoa@n+5)^0,f,c
  8909  000956  223C               	addwfc	(dtoa@n+6)^0,f,c
  8910  000958  223D               	addwfc	(dtoa@n+7)^0,f,c
  8911  00095A                     l3402:
  8912                           
  8913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  8914  00095A  0100               	movlb	0	; () banked
  8915  00095C  BF75               	btfsc	(_prec+1)& (0+255),7,b
  8916  00095E  EFB3  F004         	goto	u2241
  8917  000962  EFB5  F004         	goto	u2240
  8918  000966                     u2241:
  8919  000966  EFB6  F004         	goto	l3406
  8920  00096A                     u2240:
  8921  00096A                     
  8922                           ; BSR set to: 0
  8923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  8924  00096A  9376               	bcf	_flags& (0+255),1,b
  8925  00096C                     l3406:
  8926                           
  8927                           ; BSR set to: 0
  8928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  8929  00096C  BF75               	btfsc	(_prec+1)& (0+255),7,b
  8930  00096E  EFC3  F004         	goto	u2250
  8931  000972  5175               	movf	(_prec+1)& (0+255),w,b
  8932  000974  E106               	bnz	u2251
  8933  000976  0574               	decf	_prec& (0+255),w,b
  8934  000978  B0D8               	btfsc	status,0,c
  8935  00097A  EFC1  F004         	goto	u2251
  8936  00097E  EFC3  F004         	goto	u2250
  8937  000982                     u2251:
  8938  000982  EFC9  F004         	goto	l537
  8939  000986                     u2250:
  8940  000986                     
  8941                           ; BSR set to: 0
  8942  000986  0E00               	movlw	0
  8943  000988  6E31               	movwf	(dtoa@p+1)^0,c
  8944  00098A  0E01               	movlw	1
  8945  00098C  6E30               	movwf	dtoa@p^0,c
  8946  00098E  EFCD  F004         	goto	l539
  8947  000992                     l537:
  8948                           
  8949                           ; BSR set to: 0
  8950  000992  C074  F030         	movff	_prec,dtoa@p
  8951  000996  C075  F031         	movff	_prec+1,dtoa@p+1
  8952  00099A                     l539:
  8953                           
  8954                           ; BSR set to: 0
  8955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  8956  00099A  C072  F032         	movff	_width,dtoa@w
  8957  00099E  C073  F033         	movff	_width+1,dtoa@w+1
  8958  0009A2                     
  8959                           ; BSR set to: 0
  8960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  8961  0009A2  5034               	movf	dtoa@s^0,w,c
  8962  0009A4  1035               	iorwf	(dtoa@s+1)^0,w,c
  8963  0009A6  A4D8               	btfss	status,2,c
  8964  0009A8  EFD8  F004         	goto	u2261
  8965  0009AC  EFDA  F004         	goto	u2260
  8966  0009B0                     u2261:
  8967  0009B0  EFE1  F004         	goto	l3414
  8968  0009B4                     u2260:
  8969  0009B4                     
  8970                           ; BSR set to: 0
  8971  0009B4  A576               	btfss	_flags& (0+255),2,b
  8972  0009B6  EFDF  F004         	goto	u2271
  8973  0009BA  EFE1  F004         	goto	u2270
  8974  0009BE                     u2271:
  8975  0009BE  EFE4  F004         	goto	l3416
  8976  0009C2                     u2270:
  8977  0009C2                     l3414:
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  8981  0009C2  0632               	decf	dtoa@w^0,f,c
  8982  0009C4  A0D8               	btfss	status,0,c
  8983  0009C6  0633               	decf	(dtoa@w+1)^0,f,c
  8984  0009C8                     l3416:
  8985                           
  8986                           ; BSR set to: 0
  8987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  8988  0009C8  0E00               	movlw	0
  8989  0009CA  6E3F               	movwf	(dtoa@i+1)^0,c
  8990  0009CC  0E1F               	movlw	31
  8991  0009CE  6E3E               	movwf	dtoa@i^0,c
  8992  0009D0                     
  8993                           ; BSR set to: 0
  8994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  8995  0009D0  0E00               	movlw	0
  8996  0009D2  6FAC               	movwf	(_dbuf+31)& (0+255),b
  8997                           
  8998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8999  0009D4  EF68  F005         	goto	l3430
  9000  0009D8                     l3420:
  9001                           
  9002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  9003  0009D8  063E               	decf	dtoa@i^0,f,c
  9004  0009DA  A0D8               	btfss	status,0,c
  9005  0009DC  063F               	decf	(dtoa@i+1)^0,f,c
  9006  0009DE                     
  9007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  9008  0009DE  0E8D               	movlw	low _dbuf
  9009  0009E0  243E               	addwf	dtoa@i^0,w,c
  9010  0009E2  6ED9               	movwf	fsr2l,c
  9011  0009E4  0E00               	movlw	high _dbuf
  9012  0009E6  203F               	addwfc	(dtoa@i+1)^0,w,c
  9013  0009E8  6EDA               	movwf	fsr2h,c
  9014  0009EA  C036  F001         	movff	dtoa@n,___aomod@dividend
  9015  0009EE  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  9016  0009F2  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  9017  0009F6  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  9018  0009FA  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  9019  0009FE  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  9020  000A02  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  9021  000A06  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  9022  000A0A  0E0A               	movlw	10
  9023  000A0C  6E09               	movwf	___aomod@divisor^0,c
  9024  000A0E  0E00               	movlw	0
  9025  000A10  6E0A               	movwf	(___aomod@divisor+1)^0,c
  9026  000A12  0E00               	movlw	0
  9027  000A14  6E0B               	movwf	(___aomod@divisor+2)^0,c
  9028  000A16  0E00               	movlw	0
  9029  000A18  6E0C               	movwf	(___aomod@divisor+3)^0,c
  9030  000A1A  0E00               	movlw	0
  9031  000A1C  6E0D               	movwf	(___aomod@divisor+4)^0,c
  9032  000A1E  0E00               	movlw	0
  9033  000A20  6E0E               	movwf	(___aomod@divisor+5)^0,c
  9034  000A22  0E00               	movlw	0
  9035  000A24  6E0F               	movwf	(___aomod@divisor+6)^0,c
  9036  000A26  0E00               	movlw	0
  9037  000A28  6E10               	movwf	(___aomod@divisor+7)^0,c
  9038  000A2A  ECEC  F00B         	call	___aomod	;wreg free
  9039  000A2E  C001  F026         	movff	?___aomod,??_dtoa
  9040  000A32  C002  F027         	movff	?___aomod+1,??_dtoa+1
  9041  000A36  C003  F028         	movff	?___aomod+2,??_dtoa+2
  9042  000A3A  C004  F029         	movff	?___aomod+3,??_dtoa+3
  9043  000A3E  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  9044  000A42  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  9045  000A46  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  9046  000A4A  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  9047  000A4E  C026  F013         	movff	??_dtoa,abs@a
  9048  000A52  C028  F014         	movff	??_dtoa+2,abs@a+1
  9049  000A56  ECD6  F017         	call	_abs	;wreg free
  9050  000A5A  5013               	movf	?_abs^0,w,c
  9051  000A5C  0F30               	addlw	48
  9052  000A5E  6EDF               	movwf	indf2,c
  9053  000A60                     
  9054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  9055  000A60  0630               	decf	dtoa@p^0,f,c
  9056  000A62  A0D8               	btfss	status,0,c
  9057  000A64  0631               	decf	(dtoa@p+1)^0,f,c
  9058  000A66                     
  9059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  9060  000A66  0632               	decf	dtoa@w^0,f,c
  9061  000A68  A0D8               	btfss	status,0,c
  9062  000A6A  0633               	decf	(dtoa@w+1)^0,f,c
  9063  000A6C                     
  9064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  9065  000A6C  C036  F001         	movff	dtoa@n,___aodiv@dividend
  9066  000A70  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  9067  000A74  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  9068  000A78  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  9069  000A7C  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  9070  000A80  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  9071  000A84  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  9072  000A88  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  9073  000A8C  0E0A               	movlw	10
  9074  000A8E  6E09               	movwf	___aodiv@divisor^0,c
  9075  000A90  0E00               	movlw	0
  9076  000A92  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  9077  000A94  0E00               	movlw	0
  9078  000A96  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  9079  000A98  0E00               	movlw	0
  9080  000A9A  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  9081  000A9C  0E00               	movlw	0
  9082  000A9E  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  9083  000AA0  0E00               	movlw	0
  9084  000AA2  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  9085  000AA4  0E00               	movlw	0
  9086  000AA6  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  9087  000AA8  0E00               	movlw	0
  9088  000AAA  6E10               	movwf	(___aodiv@divisor+7)^0,c
  9089  000AAC  ECFA  F008         	call	___aodiv	;wreg free
  9090  000AB0  C001  F036         	movff	?___aodiv,dtoa@n
  9091  000AB4  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  9092  000AB8  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  9093  000ABC  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  9094  000AC0  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  9095  000AC4  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  9096  000AC8  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  9097  000ACC  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  9098  000AD0                     l3430:
  9099                           
  9100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9101  000AD0  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  9102  000AD2  EF73  F005         	goto	u2281
  9103  000AD6  503F               	movf	(dtoa@i+1)^0,w,c
  9104  000AD8  E108               	bnz	u2280
  9105  000ADA  043E               	decf	dtoa@i^0,w,c
  9106  000ADC  A0D8               	btfss	status,0,c
  9107  000ADE  EF73  F005         	goto	u2281
  9108  000AE2  EF75  F005         	goto	u2280
  9109  000AE6                     u2281:
  9110  000AE6  EFA6  F005         	goto	l3440
  9111  000AEA                     u2280:
  9112  000AEA  5036               	movf	dtoa@n^0,w,c
  9113  000AEC  1037               	iorwf	(dtoa@n+1)^0,w,c
  9114  000AEE  1038               	iorwf	(dtoa@n+2)^0,w,c
  9115  000AF0  1039               	iorwf	(dtoa@n+3)^0,w,c
  9116  000AF2  103A               	iorwf	(dtoa@n+4)^0,w,c
  9117  000AF4  103B               	iorwf	(dtoa@n+5)^0,w,c
  9118  000AF6  103C               	iorwf	(dtoa@n+6)^0,w,c
  9119  000AF8  103D               	iorwf	(dtoa@n+7)^0,w,c
  9120  000AFA  A4D8               	btfss	status,2,c
  9121  000AFC  EF82  F005         	goto	u2291
  9122  000B00  EF84  F005         	goto	u2290
  9123  000B04                     u2291:
  9124  000B04  EFEC  F004         	goto	l3420
  9125  000B08                     u2290:
  9126  000B08  BE31               	btfsc	(dtoa@p+1)^0,7,c
  9127  000B0A  EF91  F005         	goto	u2300
  9128  000B0E  5031               	movf	(dtoa@p+1)^0,w,c
  9129  000B10  E106               	bnz	u2301
  9130  000B12  0430               	decf	dtoa@p^0,w,c
  9131  000B14  B0D8               	btfsc	status,0,c
  9132  000B16  EF8F  F005         	goto	u2301
  9133  000B1A  EF91  F005         	goto	u2300
  9134  000B1E                     u2301:
  9135  000B1E  EFEC  F004         	goto	l3420
  9136  000B22                     u2300:
  9137  000B22  BE33               	btfsc	(dtoa@w+1)^0,7,c
  9138  000B24  EF9C  F005         	goto	u2311
  9139  000B28  5033               	movf	(dtoa@w+1)^0,w,c
  9140  000B2A  E108               	bnz	u2310
  9141  000B2C  0432               	decf	dtoa@w^0,w,c
  9142  000B2E  A0D8               	btfss	status,0,c
  9143  000B30  EF9C  F005         	goto	u2311
  9144  000B34  EF9E  F005         	goto	u2310
  9145  000B38                     u2311:
  9146  000B38  EFA6  F005         	goto	l3440
  9147  000B3C                     u2310:
  9148  000B3C  0100               	movlb	0	; () banked
  9149  000B3E  B376               	btfsc	_flags& (0+255),1,b
  9150  000B40  EFA4  F005         	goto	u2321
  9151  000B44  EFA6  F005         	goto	u2320
  9152  000B48                     u2321:
  9153  000B48  EFEC  F004         	goto	l3420
  9154  000B4C                     u2320:
  9155  000B4C                     l3440:
  9156                           
  9157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  9158  000B4C  5034               	movf	dtoa@s^0,w,c
  9159  000B4E  1035               	iorwf	(dtoa@s+1)^0,w,c
  9160  000B50  A4D8               	btfss	status,2,c
  9161  000B52  EFAD  F005         	goto	u2331
  9162  000B56  EFAF  F005         	goto	u2330
  9163  000B5A                     u2331:
  9164  000B5A  EFB7  F005         	goto	l3444
  9165  000B5E                     u2330:
  9166  000B5E  0100               	movlb	0	; () banked
  9167  000B60  A576               	btfss	_flags& (0+255),2,b
  9168  000B62  EFB5  F005         	goto	u2341
  9169  000B66  EFB7  F005         	goto	u2340
  9170  000B6A                     u2341:
  9171  000B6A  EFD5  F005         	goto	l3454
  9172  000B6E                     u2340:
  9173  000B6E                     l3444:
  9174                           
  9175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  9176  000B6E  063E               	decf	dtoa@i^0,f,c
  9177  000B70  A0D8               	btfss	status,0,c
  9178  000B72  063F               	decf	(dtoa@i+1)^0,f,c
  9179  000B74                     
  9180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9181  000B74  5034               	movf	dtoa@s^0,w,c
  9182  000B76  1035               	iorwf	(dtoa@s+1)^0,w,c
  9183  000B78  A4D8               	btfss	status,2,c
  9184  000B7A  EFC1  F005         	goto	u2351
  9185  000B7E  EFC3  F005         	goto	u2350
  9186  000B82                     u2351:
  9187  000B82  EFC9  F005         	goto	l3450
  9188  000B86                     u2350:
  9189  000B86  0E00               	movlw	0
  9190  000B88  6E2F               	movwf	(_dtoa$1075+1)^0,c
  9191  000B8A  0E2B               	movlw	43
  9192  000B8C  6E2E               	movwf	_dtoa$1075^0,c
  9193  000B8E  EFCD  F005         	goto	l3452
  9194  000B92                     l3450:
  9195  000B92  0E00               	movlw	0
  9196  000B94  6E2F               	movwf	(_dtoa$1075+1)^0,c
  9197  000B96  0E2D               	movlw	45
  9198  000B98  6E2E               	movwf	_dtoa$1075^0,c
  9199  000B9A                     l3452:
  9200  000B9A  0E8D               	movlw	low _dbuf
  9201  000B9C  243E               	addwf	dtoa@i^0,w,c
  9202  000B9E  6ED9               	movwf	fsr2l,c
  9203  000BA0  0E00               	movlw	high _dbuf
  9204  000BA2  203F               	addwfc	(dtoa@i+1)^0,w,c
  9205  000BA4  6EDA               	movwf	fsr2h,c
  9206  000BA6  C02E  FFDF         	movff	_dtoa$1075,indf2
  9207  000BAA                     l3454:
  9208                           
  9209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9210  000BAA  C01C  F011         	movff	dtoa@fp,pad@fp
  9211  000BAE  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  9212  000BB2  0E8D               	movlw	low _dbuf
  9213  000BB4  243E               	addwf	dtoa@i^0,w,c
  9214  000BB6  6E13               	movwf	pad@buf^0,c
  9215  000BB8  0E00               	movlw	high _dbuf
  9216  000BBA  203F               	addwfc	(dtoa@i+1)^0,w,c
  9217  000BBC  6E14               	movwf	(pad@buf+1)^0,c
  9218  000BBE  C032  F015         	movff	dtoa@w,pad@p
  9219  000BC2  C033  F016         	movff	dtoa@w+1,pad@p+1
  9220  000BC6  ECC7  F011         	call	_pad	;wreg free
  9221  000BCA  C011  F01C         	movff	?_pad,?_dtoa
  9222  000BCE  C012  F01D         	movff	?_pad+1,?_dtoa+1
  9223  000BD2  0012               	return		;funcret
  9224  000BD4                     __end_of_dtoa:
  9225                           	opt callstack 0
  9226                           
  9227 ;; *************** function _abs *****************
  9228 ;; Defined at:
  9229 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  9230 ;; Parameters:    Size  Location     Type
  9231 ;;  a               2   18[COMRAM] int 
  9232 ;; Auto vars:     Size  Location     Type
  9233 ;;		None
  9234 ;; Return value:  Size  Location     Type
  9235 ;;                  2   18[COMRAM] int 
  9236 ;; Registers used:
  9237 ;;		wreg, status,2, status,0
  9238 ;; Tracked objects:
  9239 ;;		On entry : 0/0
  9240 ;;		On exit  : 0/0
  9241 ;;		Unchanged: 0/0
  9242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9243 ;;      Params:         2       0       0       0       0       0       0       0       0
  9244 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9245 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9246 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9247 ;;Total ram usage:        4 bytes
  9248 ;; Hardware stack levels used:    1
  9249 ;; Hardware stack levels required when called:    1
  9250 ;; This function calls:
  9251 ;;		Nothing
  9252 ;; This function is called by:
  9253 ;;		_dtoa
  9254 ;; This function uses a non-reentrant model
  9255 ;;
  9256                           
  9257                           	psect	text39
  9258  002FAC                     __ptext39:
  9259                           	opt callstack 0
  9260  002FAC                     _abs:
  9261                           	opt callstack 23
  9262  002FAC  BE14               	btfsc	(abs@a+1)^0,7,c
  9263  002FAE  EFE3  F017         	goto	u2020
  9264  002FB2  5014               	movf	(abs@a+1)^0,w,c
  9265  002FB4  E106               	bnz	u2021
  9266  002FB6  0413               	decf	abs@a^0,w,c
  9267  002FB8  B0D8               	btfsc	status,0,c
  9268  002FBA  EFE1  F017         	goto	u2021
  9269  002FBE  EFE3  F017         	goto	u2020
  9270  002FC2                     u2021:
  9271  002FC2  EFF1  F017         	goto	l1306
  9272  002FC6                     u2020:
  9273  002FC6  C013  F015         	movff	abs@a,??_abs
  9274  002FCA  C014  F016         	movff	abs@a+1,??_abs+1
  9275  002FCE  1E15               	comf	??_abs^0,f,c
  9276  002FD0  1E16               	comf	(??_abs+1)^0,f,c
  9277  002FD2  4A15               	infsnz	??_abs^0,f,c
  9278  002FD4  2A16               	incf	(??_abs+1)^0,f,c
  9279  002FD6  C015  F013         	movff	??_abs,?_abs
  9280  002FDA  C016  F014         	movff	??_abs+1,?_abs+1
  9281  002FDE  EFF5  F017         	goto	l1309
  9282  002FE2                     l1306:
  9283  002FE2  C013  F013         	movff	abs@a,?_abs
  9284  002FE6  C014  F014         	movff	abs@a+1,?_abs+1
  9285  002FEA                     l1309:
  9286  002FEA  0012               	return		;funcret
  9287  002FEC                     __end_of_abs:
  9288                           	opt callstack 0
  9289                           
  9290 ;; *************** function ___aomod *****************
  9291 ;; Defined at:
  9292 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  9293 ;; Parameters:    Size  Location     Type
  9294 ;;  dividend        8    0[COMRAM] long long 
  9295 ;;  divisor         8    8[COMRAM] long long 
  9296 ;; Auto vars:     Size  Location     Type
  9297 ;;  sign            1   17[COMRAM] unsigned char 
  9298 ;;  counter         1   16[COMRAM] unsigned char 
  9299 ;; Return value:  Size  Location     Type
  9300 ;;                  8    0[COMRAM] long long 
  9301 ;; Registers used:
  9302 ;;		wreg, status,2, status,0
  9303 ;; Tracked objects:
  9304 ;;		On entry : 0/0
  9305 ;;		On exit  : 0/0
  9306 ;;		Unchanged: 0/0
  9307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9308 ;;      Params:        16       0       0       0       0       0       0       0       0
  9309 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9310 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9311 ;;      Totals:        18       0       0       0       0       0       0       0       0
  9312 ;;Total ram usage:       18 bytes
  9313 ;; Hardware stack levels used:    1
  9314 ;; Hardware stack levels required when called:    1
  9315 ;; This function calls:
  9316 ;;		Nothing
  9317 ;; This function is called by:
  9318 ;;		_dtoa
  9319 ;; This function uses a non-reentrant model
  9320 ;;
  9321                           
  9322                           	psect	text40
  9323  0017D8                     __ptext40:
  9324                           	opt callstack 0
  9325  0017D8                     ___aomod:
  9326                           	opt callstack 23
  9327  0017D8  0E00               	movlw	0
  9328  0017DA  6E12               	movwf	___aomod@sign^0,c
  9329  0017DC  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  9330  0017DE  EFF5  F00B         	goto	u2120
  9331  0017E2  EFF3  F00B         	goto	u2121
  9332  0017E6                     u2121:
  9333  0017E6  EF07  F00C         	goto	l3342
  9334  0017EA                     u2120:
  9335  0017EA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  9336  0017EC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  9337  0017EE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  9338  0017F0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  9339  0017F2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  9340  0017F4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  9341  0017F6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  9342  0017F8  6C01               	negf	___aomod@dividend^0,c
  9343  0017FA  0E00               	movlw	0
  9344  0017FC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  9345  0017FE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  9346  001800  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  9347  001802  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  9348  001804  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  9349  001806  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  9350  001808  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  9351  00180A  0E01               	movlw	1
  9352  00180C  6E12               	movwf	___aomod@sign^0,c
  9353  00180E                     l3342:
  9354  00180E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  9355  001810  EF0E  F00C         	goto	u2130
  9356  001814  EF0C  F00C         	goto	u2131
  9357  001818                     u2131:
  9358  001818  EF1E  F00C         	goto	l3346
  9359  00181C                     u2130:
  9360  00181C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  9361  00181E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  9362  001820  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  9363  001822  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  9364  001824  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  9365  001826  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  9366  001828  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  9367  00182A  6C09               	negf	___aomod@divisor^0,c
  9368  00182C  0E00               	movlw	0
  9369  00182E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  9370  001830  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  9371  001832  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  9372  001834  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  9373  001836  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  9374  001838  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  9375  00183A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  9376  00183C                     l3346:
  9377  00183C  5009               	movf	___aomod@divisor^0,w,c
  9378  00183E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  9379  001840  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  9380  001842  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  9381  001844  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  9382  001846  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  9383  001848  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  9384  00184A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  9385  00184C  B4D8               	btfsc	status,2,c
  9386  00184E  EF2B  F00C         	goto	u2141
  9387  001852  EF2D  F00C         	goto	u2140
  9388  001856                     u2141:
  9389  001856  EF75  F00C         	goto	l3362
  9390  00185A                     u2140:
  9391  00185A  0E01               	movlw	1
  9392  00185C  6E11               	movwf	___aomod@counter^0,c
  9393  00185E  EF3B  F00C         	goto	l3352
  9394  001862                     l3350:
  9395  001862  90D8               	bcf	status,0,c
  9396  001864  3609               	rlcf	___aomod@divisor^0,f,c
  9397  001866  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  9398  001868  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  9399  00186A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  9400  00186C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  9401  00186E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  9402  001870  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  9403  001872  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  9404  001874  2A11               	incf	___aomod@counter^0,f,c
  9405  001876                     l3352:
  9406  001876  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  9407  001878  EF40  F00C         	goto	u2151
  9408  00187C  EF42  F00C         	goto	u2150
  9409  001880                     u2151:
  9410  001880  EF31  F00C         	goto	l3350
  9411  001884                     u2150:
  9412  001884                     l3354:
  9413  001884  5009               	movf	___aomod@divisor^0,w,c
  9414  001886  5C01               	subwf	___aomod@dividend^0,w,c
  9415  001888  500A               	movf	(___aomod@divisor+1)^0,w,c
  9416  00188A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  9417  00188C  500B               	movf	(___aomod@divisor+2)^0,w,c
  9418  00188E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  9419  001890  500C               	movf	(___aomod@divisor+3)^0,w,c
  9420  001892  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  9421  001894  500D               	movf	(___aomod@divisor+4)^0,w,c
  9422  001896  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  9423  001898  500E               	movf	(___aomod@divisor+5)^0,w,c
  9424  00189A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  9425  00189C  500F               	movf	(___aomod@divisor+6)^0,w,c
  9426  00189E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  9427  0018A0  5010               	movf	(___aomod@divisor+7)^0,w,c
  9428  0018A2  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  9429  0018A4  A0D8               	btfss	status,0,c
  9430  0018A6  EF57  F00C         	goto	u2161
  9431  0018AA  EF59  F00C         	goto	u2160
  9432  0018AE                     u2161:
  9433  0018AE  EF69  F00C         	goto	l3358
  9434  0018B2                     u2160:
  9435  0018B2  5009               	movf	___aomod@divisor^0,w,c
  9436  0018B4  5E01               	subwf	___aomod@dividend^0,f,c
  9437  0018B6  500A               	movf	(___aomod@divisor+1)^0,w,c
  9438  0018B8  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  9439  0018BA  500B               	movf	(___aomod@divisor+2)^0,w,c
  9440  0018BC  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  9441  0018BE  500C               	movf	(___aomod@divisor+3)^0,w,c
  9442  0018C0  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  9443  0018C2  500D               	movf	(___aomod@divisor+4)^0,w,c
  9444  0018C4  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  9445  0018C6  500E               	movf	(___aomod@divisor+5)^0,w,c
  9446  0018C8  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  9447  0018CA  500F               	movf	(___aomod@divisor+6)^0,w,c
  9448  0018CC  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  9449  0018CE  5010               	movf	(___aomod@divisor+7)^0,w,c
  9450  0018D0  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  9451  0018D2                     l3358:
  9452  0018D2  90D8               	bcf	status,0,c
  9453  0018D4  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  9454  0018D6  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  9455  0018D8  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  9456  0018DA  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  9457  0018DC  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  9458  0018DE  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  9459  0018E0  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  9460  0018E2  3209               	rrcf	___aomod@divisor^0,f,c
  9461  0018E4  2E11               	decfsz	___aomod@counter^0,f,c
  9462  0018E6  EF42  F00C         	goto	l3354
  9463  0018EA                     l3362:
  9464  0018EA  5012               	movf	___aomod@sign^0,w,c
  9465  0018EC  B4D8               	btfsc	status,2,c
  9466  0018EE  EF7B  F00C         	goto	u2171
  9467  0018F2  EF7D  F00C         	goto	u2170
  9468  0018F6                     u2171:
  9469  0018F6  EF8D  F00C         	goto	l3366
  9470  0018FA                     u2170:
  9471  0018FA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  9472  0018FC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  9473  0018FE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  9474  001900  1E05               	comf	(___aomod@dividend+4)^0,f,c
  9475  001902  1E04               	comf	(___aomod@dividend+3)^0,f,c
  9476  001904  1E03               	comf	(___aomod@dividend+2)^0,f,c
  9477  001906  1E02               	comf	(___aomod@dividend+1)^0,f,c
  9478  001908  6C01               	negf	___aomod@dividend^0,c
  9479  00190A  0E00               	movlw	0
  9480  00190C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  9481  00190E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  9482  001910  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  9483  001912  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  9484  001914  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  9485  001916  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  9486  001918  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  9487  00191A                     l3366:
  9488  00191A  C001  F001         	movff	___aomod@dividend,?___aomod
  9489  00191E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  9490  001922  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  9491  001926  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  9492  00192A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  9493  00192E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  9494  001932  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  9495  001936  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  9496  00193A  0012               	return		;funcret
  9497  00193C                     __end_of___aomod:
  9498                           	opt callstack 0
  9499                           
  9500 ;; *************** function ___aodiv *****************
  9501 ;; Defined at:
  9502 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  9503 ;; Parameters:    Size  Location     Type
  9504 ;;  dividend        8    0[COMRAM] long long 
  9505 ;;  divisor         8    8[COMRAM] long long 
  9506 ;; Auto vars:     Size  Location     Type
  9507 ;;  quotient        8   18[COMRAM] long long 
  9508 ;;  sign            1   17[COMRAM] unsigned char 
  9509 ;;  counter         1   16[COMRAM] unsigned char 
  9510 ;; Return value:  Size  Location     Type
  9511 ;;                  8    0[COMRAM] long long 
  9512 ;; Registers used:
  9513 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9514 ;; Tracked objects:
  9515 ;;		On entry : 0/0
  9516 ;;		On exit  : 0/0
  9517 ;;		Unchanged: 0/0
  9518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9519 ;;      Params:        16       0       0       0       0       0       0       0       0
  9520 ;;      Locals:        10       0       0       0       0       0       0       0       0
  9521 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9522 ;;      Totals:        26       0       0       0       0       0       0       0       0
  9523 ;;Total ram usage:       26 bytes
  9524 ;; Hardware stack levels used:    1
  9525 ;; Hardware stack levels required when called:    1
  9526 ;; This function calls:
  9527 ;;		Nothing
  9528 ;; This function is called by:
  9529 ;;		_dtoa
  9530 ;; This function uses a non-reentrant model
  9531 ;;
  9532                           
  9533                           	psect	text41
  9534  0011F4                     __ptext41:
  9535                           	opt callstack 0
  9536  0011F4                     ___aodiv:
  9537                           	opt callstack 23
  9538  0011F4  0E00               	movlw	0
  9539  0011F6  6E12               	movwf	___aodiv@sign^0,c
  9540  0011F8  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  9541  0011FA  EF03  F009         	goto	u2050
  9542  0011FE  EF01  F009         	goto	u2051
  9543  001202                     u2051:
  9544  001202  EF15  F009         	goto	l3298
  9545  001206                     u2050:
  9546  001206  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  9547  001208  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  9548  00120A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  9549  00120C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  9550  00120E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  9551  001210  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  9552  001212  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  9553  001214  6C09               	negf	___aodiv@divisor^0,c
  9554  001216  0E00               	movlw	0
  9555  001218  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  9556  00121A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  9557  00121C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  9558  00121E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  9559  001220  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  9560  001222  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  9561  001224  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  9562  001226  0E01               	movlw	1
  9563  001228  6E12               	movwf	___aodiv@sign^0,c
  9564  00122A                     l3298:
  9565  00122A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  9566  00122C  EF1C  F009         	goto	u2060
  9567  001230  EF1A  F009         	goto	u2061
  9568  001234                     u2061:
  9569  001234  EF2E  F009         	goto	l3304
  9570  001238                     u2060:
  9571  001238  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  9572  00123A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  9573  00123C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  9574  00123E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  9575  001240  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  9576  001242  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  9577  001244  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  9578  001246  6C01               	negf	___aodiv@dividend^0,c
  9579  001248  0E00               	movlw	0
  9580  00124A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  9581  00124C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  9582  00124E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  9583  001250  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  9584  001252  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  9585  001254  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  9586  001256  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  9587  001258  0E01               	movlw	1
  9588  00125A  1A12               	xorwf	___aodiv@sign^0,f,c
  9589  00125C                     l3304:
  9590  00125C  EE20  F013         	lfsr	2,___aodiv@quotient
  9591  001260  0E07               	movlw	7
  9592  001262                     u2071:
  9593  001262  6ADE               	clrf	postinc2,c
  9594  001264  06E8               	decf	wreg,f,c
  9595  001266  E2FD               	bc	u2071
  9596  001268  5009               	movf	___aodiv@divisor^0,w,c
  9597  00126A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  9598  00126C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  9599  00126E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  9600  001270  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  9601  001272  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  9602  001274  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  9603  001276  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  9604  001278  B4D8               	btfsc	status,2,c
  9605  00127A  EF41  F009         	goto	u2081
  9606  00127E  EF43  F009         	goto	u2080
  9607  001282                     u2081:
  9608  001282  EF95  F009         	goto	l3326
  9609  001286                     u2080:
  9610  001286  0E01               	movlw	1
  9611  001288  6E11               	movwf	___aodiv@counter^0,c
  9612  00128A  EF51  F009         	goto	l3312
  9613  00128E                     l3310:
  9614  00128E  90D8               	bcf	status,0,c
  9615  001290  3609               	rlcf	___aodiv@divisor^0,f,c
  9616  001292  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  9617  001294  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  9618  001296  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  9619  001298  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  9620  00129A  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  9621  00129C  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  9622  00129E  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  9623  0012A0  2A11               	incf	___aodiv@counter^0,f,c
  9624  0012A2                     l3312:
  9625  0012A2  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  9626  0012A4  EF56  F009         	goto	u2091
  9627  0012A8  EF58  F009         	goto	u2090
  9628  0012AC                     u2091:
  9629  0012AC  EF47  F009         	goto	l3310
  9630  0012B0                     u2090:
  9631  0012B0                     l3314:
  9632  0012B0  90D8               	bcf	status,0,c
  9633  0012B2  3613               	rlcf	___aodiv@quotient^0,f,c
  9634  0012B4  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  9635  0012B6  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  9636  0012B8  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  9637  0012BA  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  9638  0012BC  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  9639  0012BE  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  9640  0012C0  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  9641  0012C2  5009               	movf	___aodiv@divisor^0,w,c
  9642  0012C4  5C01               	subwf	___aodiv@dividend^0,w,c
  9643  0012C6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9644  0012C8  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  9645  0012CA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9646  0012CC  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  9647  0012CE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9648  0012D0  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  9649  0012D2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9650  0012D4  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  9651  0012D6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9652  0012D8  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  9653  0012DA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9654  0012DC  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  9655  0012DE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9656  0012E0  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  9657  0012E2  A0D8               	btfss	status,0,c
  9658  0012E4  EF76  F009         	goto	u2101
  9659  0012E8  EF78  F009         	goto	u2100
  9660  0012EC                     u2101:
  9661  0012EC  EF89  F009         	goto	l3322
  9662  0012F0                     u2100:
  9663  0012F0  5009               	movf	___aodiv@divisor^0,w,c
  9664  0012F2  5E01               	subwf	___aodiv@dividend^0,f,c
  9665  0012F4  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9666  0012F6  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  9667  0012F8  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9668  0012FA  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  9669  0012FC  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9670  0012FE  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  9671  001300  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9672  001302  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  9673  001304  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9674  001306  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  9675  001308  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9676  00130A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  9677  00130C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9678  00130E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  9679  001310  8013               	bsf	___aodiv@quotient^0,0,c
  9680  001312                     l3322:
  9681  001312  90D8               	bcf	status,0,c
  9682  001314  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  9683  001316  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  9684  001318  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  9685  00131A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  9686  00131C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  9687  00131E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  9688  001320  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  9689  001322  3209               	rrcf	___aodiv@divisor^0,f,c
  9690  001324  2E11               	decfsz	___aodiv@counter^0,f,c
  9691  001326  EF58  F009         	goto	l3314
  9692  00132A                     l3326:
  9693  00132A  5012               	movf	___aodiv@sign^0,w,c
  9694  00132C  B4D8               	btfsc	status,2,c
  9695  00132E  EF9B  F009         	goto	u2111
  9696  001332  EF9D  F009         	goto	u2110
  9697  001336                     u2111:
  9698  001336  EFAD  F009         	goto	l3330
  9699  00133A                     u2110:
  9700  00133A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  9701  00133C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  9702  00133E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  9703  001340  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  9704  001342  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  9705  001344  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  9706  001346  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  9707  001348  6C13               	negf	___aodiv@quotient^0,c
  9708  00134A  0E00               	movlw	0
  9709  00134C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  9710  00134E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  9711  001350  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  9712  001352  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  9713  001354  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  9714  001356  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  9715  001358  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  9716  00135A                     l3330:
  9717  00135A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  9718  00135E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  9719  001362  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  9720  001366  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  9721  00136A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  9722  00136E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  9723  001372  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  9724  001376  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  9725  00137A  0012               	return		;funcret
  9726  00137C                     __end_of___aodiv:
  9727                           	opt callstack 0
  9728                           
  9729 ;; *************** function _ctoa *****************
  9730 ;; Defined at:
  9731 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9732 ;; Parameters:    Size  Location     Type
  9733 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9734 ;;		 -> sprintf@f(6), 
  9735 ;;  c               1   29[COMRAM] unsigned char 
  9736 ;; Auto vars:     Size  Location     Type
  9737 ;;  w               2   30[COMRAM] int 
  9738 ;;  l               2    0        int 
  9739 ;; Return value:  Size  Location     Type
  9740 ;;                  2   27[COMRAM] int 
  9741 ;; Registers used:
  9742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9743 ;; Tracked objects:
  9744 ;;		On entry : 0/0
  9745 ;;		On exit  : 0/0
  9746 ;;		Unchanged: 0/0
  9747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9748 ;;      Params:         3       0       0       0       0       0       0       0       0
  9749 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9750 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9751 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9752 ;;Total ram usage:        5 bytes
  9753 ;; Hardware stack levels used:    1
  9754 ;; Hardware stack levels required when called:    5
  9755 ;; This function calls:
  9756 ;;		_pad
  9757 ;; This function is called by:
  9758 ;;		_vfpfcnvrt
  9759 ;; This function uses a non-reentrant model
  9760 ;;
  9761                           
  9762                           	psect	text42
  9763  002D40                     __ptext42:
  9764                           	opt callstack 0
  9765  002D40                     _ctoa:
  9766                           	opt callstack 20
  9767  002D40                     
  9768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  9769  002D40  0100               	movlb	0	; () banked
  9770  002D42  5172               	movf	_width& (0+255),w,b
  9771  002D44  1173               	iorwf	(_width+1)& (0+255),w,b
  9772  002D46  A4D8               	btfss	status,2,c
  9773  002D48  EFA8  F016         	goto	u2201
  9774  002D4C  EFAA  F016         	goto	u2200
  9775  002D50                     u2201:
  9776  002D50  EFB0  F016         	goto	l3386
  9777  002D54                     u2200:
  9778  002D54                     
  9779                           ; BSR set to: 0
  9780  002D54  C072  F01F         	movff	_width,ctoa@w
  9781  002D58  C073  F020         	movff	_width+1,ctoa@w+1
  9782  002D5C  EFB6  F016         	goto	l3388
  9783  002D60                     l3386:
  9784                           
  9785                           ; BSR set to: 0
  9786  002D60  0EFF               	movlw	255
  9787  002D62  2572               	addwf	_width& (0+255),w,b
  9788  002D64  6E1F               	movwf	ctoa@w^0,c
  9789  002D66  0EFF               	movlw	255
  9790  002D68  2173               	addwfc	(_width+1)& (0+255),w,b
  9791  002D6A  6E20               	movwf	(ctoa@w+1)^0,c
  9792  002D6C                     l3388:
  9793                           
  9794                           ; BSR set to: 0
  9795                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  9796  002D6C  C01E  F08D         	movff	ctoa@c,_dbuf
  9797  002D70                     
  9798                           ; BSR set to: 0
  9799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  9800  002D70  0E00               	movlw	0
  9801  002D72  6F8E               	movwf	(_dbuf+1)& (0+255),b
  9802  002D74                     
  9803                           ; BSR set to: 0
  9804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  9805  002D74  C01C  F011         	movff	ctoa@fp,pad@fp
  9806  002D78  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  9807  002D7C  0E8D               	movlw	low _dbuf
  9808  002D7E  6E13               	movwf	pad@buf^0,c
  9809  002D80  0E00               	movlw	high _dbuf
  9810  002D82  6E14               	movwf	(pad@buf+1)^0,c
  9811  002D84  C01F  F015         	movff	ctoa@w,pad@p
  9812  002D88  C020  F016         	movff	ctoa@w+1,pad@p+1
  9813  002D8C  ECC7  F011         	call	_pad	;wreg free
  9814  002D90  C011  F01C         	movff	?_pad,?_ctoa
  9815  002D94  C012  F01D         	movff	?_pad+1,?_ctoa+1
  9816  002D98  0012               	return		;funcret
  9817  002D9A                     __end_of_ctoa:
  9818                           	opt callstack 0
  9819                           
  9820 ;; *************** function _pad *****************
  9821 ;; Defined at:
  9822 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9823 ;; Parameters:    Size  Location     Type
  9824 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9825 ;;		 -> sprintf@f(6), 
  9826 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9827 ;;		 -> dbuf(32), 
  9828 ;;  p               2   20[COMRAM] int 
  9829 ;; Auto vars:     Size  Location     Type
  9830 ;;  w               2   25[COMRAM] int 
  9831 ;;  i               2   23[COMRAM] int 
  9832 ;; Return value:  Size  Location     Type
  9833 ;;                  2   16[COMRAM] int 
  9834 ;; Registers used:
  9835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9836 ;; Tracked objects:
  9837 ;;		On entry : 0/0
  9838 ;;		On exit  : 0/0
  9839 ;;		Unchanged: 0/0
  9840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9841 ;;      Params:         6       0       0       0       0       0       0       0       0
  9842 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9843 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9844 ;;      Totals:        11       0       0       0       0       0       0       0       0
  9845 ;;Total ram usage:       11 bytes
  9846 ;; Hardware stack levels used:    1
  9847 ;; Hardware stack levels required when called:    4
  9848 ;; This function calls:
  9849 ;;		_fputc
  9850 ;;		_fputs
  9851 ;;		_strlen
  9852 ;; This function is called by:
  9853 ;;		_ctoa
  9854 ;;		_dtoa
  9855 ;; This function uses a non-reentrant model
  9856 ;;
  9857                           
  9858                           	psect	text43
  9859  00238E                     __ptext43:
  9860                           	opt callstack 0
  9861  00238E                     _pad:
  9862                           	opt callstack 20
  9863  00238E                     
  9864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9865  00238E  0100               	movlb	0	; () banked
  9866  002390  A176               	btfss	_flags& (0+255),0,b
  9867  002392  EFCD  F011         	goto	u1981
  9868  002396  EFCF  F011         	goto	u1980
  9869  00239A                     u1981:
  9870  00239A  EFD9  F011         	goto	l3258
  9871  00239E                     u1980:
  9872  00239E                     
  9873                           ; BSR set to: 0
  9874                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9875  00239E  C013  F00A         	movff	pad@buf,fputs@s
  9876  0023A2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9877  0023A6  C011  F00C         	movff	pad@fp,fputs@fp
  9878  0023AA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9879  0023AE  EC94  F017         	call	_fputs	;wreg free
  9880  0023B2                     l3258:
  9881                           
  9882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9883  0023B2  BE16               	btfsc	(pad@p+1)^0,7,c
  9884  0023B4  EFDE  F011         	goto	u1991
  9885  0023B8  EFE0  F011         	goto	u1990
  9886  0023BC                     u1991:
  9887  0023BC  EFE6  F011         	goto	l3262
  9888  0023C0                     u1990:
  9889  0023C0  C015  F01A         	movff	pad@p,pad@w
  9890  0023C4  C016  F01B         	movff	pad@p+1,pad@w+1
  9891  0023C8  EFEA  F011         	goto	l519
  9892  0023CC                     l3262:
  9893  0023CC  0E00               	movlw	0
  9894  0023CE  6E1B               	movwf	(pad@w+1)^0,c
  9895  0023D0  0E00               	movlw	0
  9896  0023D2  6E1A               	movwf	pad@w^0,c
  9897  0023D4                     l519:
  9898                           
  9899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  9900  0023D4  0E00               	movlw	0
  9901  0023D6  6E19               	movwf	(pad@i+1)^0,c
  9902  0023D8  0E00               	movlw	0
  9903  0023DA  6E18               	movwf	pad@i^0,c
  9904                           
  9905                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9906  0023DC  EFFC  F011         	goto	l3268
  9907  0023E0                     l3264:
  9908                           
  9909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  9910  0023E0  0E00               	movlw	0
  9911  0023E2  6E02               	movwf	(fputc@c+1)^0,c
  9912  0023E4  0E20               	movlw	32
  9913  0023E6  6E01               	movwf	fputc@c^0,c
  9914  0023E8  C011  F003         	movff	pad@fp,fputc@fp
  9915  0023EC  C012  F004         	movff	pad@fp+1,fputc@fp+1
  9916  0023F0  ECFF  F010         	call	_fputc	;wreg free
  9917  0023F4                     
  9918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  9919  0023F4  4A18               	infsnz	pad@i^0,f,c
  9920  0023F6  2A19               	incf	(pad@i+1)^0,f,c
  9921  0023F8                     l3268:
  9922                           
  9923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9924  0023F8  501A               	movf	pad@w^0,w,c
  9925  0023FA  5C18               	subwf	pad@i^0,w,c
  9926  0023FC  5019               	movf	(pad@i+1)^0,w,c
  9927  0023FE  0A80               	xorlw	128
  9928  002400  6E17               	movwf	??_pad^0,c
  9929  002402  501B               	movf	(pad@w+1)^0,w,c
  9930  002404  0A80               	xorlw	128
  9931  002406  5817               	subwfb	??_pad^0,w,c
  9932  002408  A0D8               	btfss	status,0,c
  9933  00240A  EF09  F012         	goto	u2001
  9934  00240E  EF0B  F012         	goto	u2000
  9935  002412                     u2001:
  9936  002412  EFF0  F011         	goto	l3264
  9937  002416                     u2000:
  9938  002416                     
  9939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9940  002416  0100               	movlb	0	; () banked
  9941  002418  B176               	btfsc	_flags& (0+255),0,b
  9942  00241A  EF11  F012         	goto	u2011
  9943  00241E  EF13  F012         	goto	u2010
  9944  002422                     u2011:
  9945  002422  EF1D  F012         	goto	l3272
  9946  002426                     u2010:
  9947  002426                     
  9948                           ; BSR set to: 0
  9949                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9950  002426  C013  F00A         	movff	pad@buf,fputs@s
  9951  00242A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9952  00242E  C011  F00C         	movff	pad@fp,fputs@fp
  9953  002432  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9954  002436  EC94  F017         	call	_fputs	;wreg free
  9955  00243A                     l3272:
  9956                           
  9957                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  9958  00243A  C013  F001         	movff	pad@buf,strlen@s
  9959  00243E  C014  F002         	movff	pad@buf+1,strlen@s+1
  9960  002442  EC4B  F018         	call	_strlen	;wreg free
  9961  002446  501A               	movf	pad@w^0,w,c
  9962  002448  2401               	addwf	?_strlen^0,w,c
  9963  00244A  6E11               	movwf	?_pad^0,c
  9964  00244C  501B               	movf	(pad@w+1)^0,w,c
  9965  00244E  2002               	addwfc	(?_strlen+1)^0,w,c
  9966  002450  6E12               	movwf	(?_pad+1)^0,c
  9967  002452  0012               	return		;funcret
  9968  002454                     __end_of_pad:
  9969                           	opt callstack 0
  9970                           
  9971 ;; *************** function _strlen *****************
  9972 ;; Defined at:
  9973 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  9974 ;; Parameters:    Size  Location     Type
  9975 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9976 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), bufferDias(10), 
  9977 ;; Auto vars:     Size  Location     Type
  9978 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9979 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), bufferDias(10), 
  9980 ;; Return value:  Size  Location     Type
  9981 ;;                  2    0[COMRAM] unsigned int 
  9982 ;; Registers used:
  9983 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9984 ;; Tracked objects:
  9985 ;;		On entry : 0/0
  9986 ;;		On exit  : 0/0
  9987 ;;		Unchanged: 0/0
  9988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9989 ;;      Params:         2       0       0       0       0       0       0       0       0
  9990 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9991 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9992 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9993 ;;Total ram usage:        4 bytes
  9994 ;; Hardware stack levels used:    1
  9995 ;; Hardware stack levels required when called:    1
  9996 ;; This function calls:
  9997 ;;		Nothing
  9998 ;; This function is called by:
  9999 ;;		_pad
 10000 ;;		_stoa
 10001 ;; This function uses a non-reentrant model
 10002 ;;
 10003                           
 10004                           	psect	text44
 10005  003096                     __ptext44:
 10006                           	opt callstack 0
 10007  003096                     _strlen:
 10008                           	opt callstack 23
 10009  003096  C001  F003         	movff	strlen@s,strlen@a
 10010  00309A  C002  F004         	movff	strlen@s+1,strlen@a+1
 10011  00309E  EF53  F018         	goto	l3248
 10012  0030A2                     l3246:
 10013  0030A2  4A01               	infsnz	strlen@s^0,f,c
 10014  0030A4  2A02               	incf	(strlen@s+1)^0,f,c
 10015  0030A6                     l3248:
 10016  0030A6  C001  FFD9         	movff	strlen@s,fsr2l
 10017  0030AA  C002  FFDA         	movff	strlen@s+1,fsr2h
 10018  0030AE  50DF               	movf	indf2,w,c
 10019  0030B0  A4D8               	btfss	status,2,c
 10020  0030B2  EF5D  F018         	goto	u1971
 10021  0030B6  EF5F  F018         	goto	u1970
 10022  0030BA                     u1971:
 10023  0030BA  EF51  F018         	goto	l3246
 10024  0030BE                     u1970:
 10025  0030BE  5003               	movf	strlen@a^0,w,c
 10026  0030C0  5C01               	subwf	strlen@s^0,w,c
 10027  0030C2  6E01               	movwf	?_strlen^0,c
 10028  0030C4  5004               	movf	(strlen@a+1)^0,w,c
 10029  0030C6  5802               	subwfb	(strlen@s+1)^0,w,c
 10030  0030C8  6E02               	movwf	(?_strlen+1)^0,c
 10031  0030CA  0012               	return		;funcret
 10032  0030CC                     __end_of_strlen:
 10033                           	opt callstack 0
 10034                           
 10035 ;; *************** function _fputs *****************
 10036 ;; Defined at:
 10037 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 10038 ;; Parameters:    Size  Location     Type
 10039 ;;  s               2    9[COMRAM] PTR const unsigned char 
 10040 ;;		 -> dbuf(32), 
 10041 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 10042 ;;		 -> sprintf@f(6), 
 10043 ;; Auto vars:     Size  Location     Type
 10044 ;;  i               2   14[COMRAM] int 
 10045 ;;  c               1   13[COMRAM] unsigned char 
 10046 ;; Return value:  Size  Location     Type
 10047 ;;                  2    9[COMRAM] int 
 10048 ;; Registers used:
 10049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10050 ;; Tracked objects:
 10051 ;;		On entry : 0/0
 10052 ;;		On exit  : 0/0
 10053 ;;		Unchanged: 0/0
 10054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10055 ;;      Params:         4       0       0       0       0       0       0       0       0
 10056 ;;      Locals:         3       0       0       0       0       0       0       0       0
 10057 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10058 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10059 ;;Total ram usage:        7 bytes
 10060 ;; Hardware stack levels used:    1
 10061 ;; Hardware stack levels required when called:    3
 10062 ;; This function calls:
 10063 ;;		_fputc
 10064 ;; This function is called by:
 10065 ;;		_pad
 10066 ;; This function uses a non-reentrant model
 10067 ;;
 10068                           
 10069                           	psect	text45
 10070  002F28                     __ptext45:
 10071                           	opt callstack 0
 10072  002F28                     _fputs:
 10073                           	opt callstack 20
 10074  002F28  0E00               	movlw	0
 10075  002F2A  6E10               	movwf	(fputs@i+1)^0,c
 10076  002F2C  0E00               	movlw	0
 10077  002F2E  6E0F               	movwf	fputs@i^0,c
 10078  002F30  EFA5  F017         	goto	l3242
 10079  002F34                     l3238:
 10080  002F34  C00E  F001         	movff	fputs@c,fputc@c
 10081  002F38  6A02               	clrf	(fputc@c+1)^0,c
 10082  002F3A  C00C  F003         	movff	fputs@fp,fputc@fp
 10083  002F3E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 10084  002F42  ECFF  F010         	call	_fputc	;wreg free
 10085  002F46  4A0F               	infsnz	fputs@i^0,f,c
 10086  002F48  2A10               	incf	(fputs@i+1)^0,f,c
 10087  002F4A                     l3242:
 10088  002F4A  500F               	movf	fputs@i^0,w,c
 10089  002F4C  240A               	addwf	fputs@s^0,w,c
 10090  002F4E  6ED9               	movwf	fsr2l,c
 10091  002F50  5010               	movf	(fputs@i+1)^0,w,c
 10092  002F52  200B               	addwfc	(fputs@s+1)^0,w,c
 10093  002F54  6EDA               	movwf	fsr2h,c
 10094  002F56  50DF               	movf	indf2,w,c
 10095  002F58  6E0E               	movwf	fputs@c^0,c
 10096  002F5A  500E               	movf	fputs@c^0,w,c
 10097  002F5C  A4D8               	btfss	status,2,c
 10098  002F5E  EFB3  F017         	goto	u1961
 10099  002F62  EFB5  F017         	goto	u1960
 10100  002F66                     u1961:
 10101  002F66  EF9A  F017         	goto	l3238
 10102  002F6A                     u1960:
 10103  002F6A  0012               	return		;funcret
 10104  002F6C                     __end_of_fputs:
 10105                           	opt callstack 0
 10106                           
 10107 ;; *************** function _fputc *****************
 10108 ;; Defined at:
 10109 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 10110 ;; Parameters:    Size  Location     Type
 10111 ;;  c               2    0[COMRAM] int 
 10112 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 10113 ;;		 -> sprintf@f(6), 
 10114 ;; Auto vars:     Size  Location     Type
 10115 ;;		None
 10116 ;; Return value:  Size  Location     Type
 10117 ;;                  2    0[COMRAM] int 
 10118 ;; Registers used:
 10119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10120 ;; Tracked objects:
 10121 ;;		On entry : 0/0
 10122 ;;		On exit  : 0/0
 10123 ;;		Unchanged: 0/0
 10124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10125 ;;      Params:         4       0       0       0       0       0       0       0       0
 10126 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10127 ;;      Temps:          5       0       0       0       0       0       0       0       0
 10128 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10129 ;;Total ram usage:        9 bytes
 10130 ;; Hardware stack levels used:    1
 10131 ;; Hardware stack levels required when called:    2
 10132 ;; This function calls:
 10133 ;;		_putch
 10134 ;; This function is called by:
 10135 ;;		_pad
 10136 ;;		_stoa
 10137 ;;		_vfpfcnvrt
 10138 ;;		_fputs
 10139 ;; This function uses a non-reentrant model
 10140 ;;
 10141                           
 10142                           	psect	text46
 10143  0021FE                     __ptext46:
 10144                           	opt callstack 0
 10145  0021FE                     _fputc:
 10146                           	opt callstack 22
 10147  0021FE  5003               	movf	fputc@fp^0,w,c
 10148  002200  1004               	iorwf	(fputc@fp+1)^0,w,c
 10149  002202  B4D8               	btfsc	status,2,c
 10150  002204  EF06  F011         	goto	u1921
 10151  002208  EF08  F011         	goto	u1920
 10152  00220C                     u1921:
 10153  00220C  EF11  F011         	goto	l3226
 10154  002210                     u1920:
 10155  002210  5003               	movf	fputc@fp^0,w,c
 10156  002212  1004               	iorwf	(fputc@fp+1)^0,w,c
 10157  002214  A4D8               	btfss	status,2,c
 10158  002216  EF0F  F011         	goto	u1931
 10159  00221A  EF11  F011         	goto	u1930
 10160  00221E                     u1931:
 10161  00221E  EF16  F011         	goto	l3228
 10162  002222                     u1930:
 10163  002222                     l3226:
 10164  002222  5001               	movf	fputc@c^0,w,c
 10165  002224  EC63  F019         	call	_putch
 10166  002228  EF63  F011         	goto	l1366
 10167  00222C                     l3228:
 10168  00222C  EE20 F004          	lfsr	2,4
 10169  002230  5003               	movf	fputc@fp^0,w,c
 10170  002232  26D9               	addwf	fsr2l,f,c
 10171  002234  5004               	movf	(fputc@fp+1)^0,w,c
 10172  002236  22DA               	addwfc	fsr2h,f,c
 10173  002238  50DE               	movf	postinc2,w,c
 10174  00223A  10DE               	iorwf	postinc2,w,c
 10175  00223C  B4D8               	btfsc	status,2,c
 10176  00223E  EF23  F011         	goto	u1941
 10177  002242  EF25  F011         	goto	u1940
 10178  002246                     u1941:
 10179  002246  EF40  F011         	goto	l3232
 10180  00224A                     u1940:
 10181  00224A  EE20 F004          	lfsr	2,4
 10182  00224E  5003               	movf	fputc@fp^0,w,c
 10183  002250  26D9               	addwf	fsr2l,f,c
 10184  002252  5004               	movf	(fputc@fp+1)^0,w,c
 10185  002254  22DA               	addwfc	fsr2h,f,c
 10186  002256  EE10 F002          	lfsr	1,2
 10187  00225A  5003               	movf	fputc@fp^0,w,c
 10188  00225C  26E1               	addwf	fsr1l,f,c
 10189  00225E  5004               	movf	(fputc@fp+1)^0,w,c
 10190  002260  22E2               	addwfc	fsr1h,f,c
 10191  002262  50DE               	movf	postinc2,w,c
 10192  002264  5CE6               	subwf	postinc1,w,c
 10193  002266  50E6               	movf	postinc1,w,c
 10194  002268  0A80               	xorlw	128
 10195  00226A  6E09               	movwf	(??_fputc+4)^0,c
 10196  00226C  50DE               	movf	postinc2,w,c
 10197  00226E  0A80               	xorlw	128
 10198  002270  5809               	subwfb	(??_fputc+4)^0,w,c
 10199  002272  B0D8               	btfsc	status,0,c
 10200  002274  EF3E  F011         	goto	u1951
 10201  002278  EF40  F011         	goto	u1950
 10202  00227C                     u1951:
 10203  00227C  EF63  F011         	goto	l1366
 10204  002280                     u1950:
 10205  002280                     l3232:
 10206  002280  EE20 F002          	lfsr	2,2
 10207  002284  5003               	movf	fputc@fp^0,w,c
 10208  002286  26D9               	addwf	fsr2l,f,c
 10209  002288  5004               	movf	(fputc@fp+1)^0,w,c
 10210  00228A  22DA               	addwfc	fsr2h,f,c
 10211  00228C  CFDE F005          	movff	postinc2,??_fputc
 10212  002290  CFDD F006          	movff	postdec2,??_fputc+1
 10213  002294  C003  FFD9         	movff	fputc@fp,fsr2l
 10214  002298  C004  FFDA         	movff	fputc@fp+1,fsr2h
 10215  00229C  CFDE F007          	movff	postinc2,??_fputc+2
 10216  0022A0  CFDD F008          	movff	postdec2,??_fputc+3
 10217  0022A4  5005               	movf	??_fputc^0,w,c
 10218  0022A6  2407               	addwf	(??_fputc+2)^0,w,c
 10219  0022A8  6ED9               	movwf	fsr2l,c
 10220  0022AA  5006               	movf	(??_fputc+1)^0,w,c
 10221  0022AC  2008               	addwfc	(??_fputc+3)^0,w,c
 10222  0022AE  6EDA               	movwf	fsr2h,c
 10223  0022B0  C001  FFDF         	movff	fputc@c,indf2
 10224  0022B4  EE20 F002          	lfsr	2,2
 10225  0022B8  5003               	movf	fputc@fp^0,w,c
 10226  0022BA  26D9               	addwf	fsr2l,f,c
 10227  0022BC  5004               	movf	(fputc@fp+1)^0,w,c
 10228  0022BE  22DA               	addwfc	fsr2h,f,c
 10229  0022C0  2ADE               	incf	postinc2,f,c
 10230  0022C2  0E00               	movlw	0
 10231  0022C4  22DD               	addwfc	postdec2,f,c
 10232  0022C6                     l1366:
 10233  0022C6  0012               	return		;funcret
 10234  0022C8                     __end_of_fputc:
 10235                           	opt callstack 0
 10236                           
 10237 ;; *************** function _putch *****************
 10238 ;; Defined at:
 10239 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
 10240 ;; Parameters:    Size  Location     Type
 10241 ;;  c               1    wreg     unsigned char 
 10242 ;; Auto vars:     Size  Location     Type
 10243 ;;  c               1    0[COMRAM] unsigned char 
 10244 ;; Return value:  Size  Location     Type
 10245 ;;                  1    wreg      void 
 10246 ;; Registers used:
 10247 ;;		wreg
 10248 ;; Tracked objects:
 10249 ;;		On entry : 0/0
 10250 ;;		On exit  : 0/0
 10251 ;;		Unchanged: 0/0
 10252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10253 ;;      Params:         0       0       0       0       0       0       0       0       0
 10254 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10255 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10256 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10257 ;;Total ram usage:        0 bytes
 10258 ;; Hardware stack levels used:    1
 10259 ;; Hardware stack levels required when called:    1
 10260 ;; This function calls:
 10261 ;;		Nothing
 10262 ;; This function is called by:
 10263 ;;		_fputc
 10264 ;; This function uses a non-reentrant model
 10265 ;;
 10266                           
 10267                           	psect	text47
 10268  0032C6                     __ptext47:
 10269                           	opt callstack 0
 10270  0032C6                     _putch:
 10271                           	opt callstack 22
 10272  0032C6  0012               	return		;funcret
 10273  0032C8                     __end_of_putch:
 10274                           	opt callstack 0
 10275                           
 10276 ;; *************** function _atoi *****************
 10277 ;; Defined at:
 10278 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 10279 ;; Parameters:    Size  Location     Type
 10280 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10281 ;;		 -> STR_48(45), STR_47(29), STR_46(32), STR_45(45), 
 10282 ;;		 -> STR_44(29), STR_43(32), STR_41(24), STR_40(25), 
 10283 ;;		 -> STR_39(24), STR_38(27), STR_37(24), STR_36(23), 
 10284 ;;		 -> STR_35(25), STR_34(53), STR_19(51), STR_12(9), 
 10285 ;; Auto vars:     Size  Location     Type
 10286 ;;  n               2   20[COMRAM] int 
 10287 ;;  neg             2   13[COMRAM] int 
 10288 ;; Return value:  Size  Location     Type
 10289 ;;                  2    7[COMRAM] int 
 10290 ;; Registers used:
 10291 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10292 ;; Tracked objects:
 10293 ;;		On entry : 0/0
 10294 ;;		On exit  : 0/0
 10295 ;;		Unchanged: 0/0
 10296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10297 ;;      Params:         2       0       0       0       0       0       0       0       0
 10298 ;;      Locals:         9       0       0       0       0       0       0       0       0
 10299 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10300 ;;      Totals:        15       0       0       0       0       0       0       0       0
 10301 ;;Total ram usage:       15 bytes
 10302 ;; Hardware stack levels used:    1
 10303 ;; Hardware stack levels required when called:    2
 10304 ;; This function calls:
 10305 ;;		___wmul
 10306 ;;		_isdigit
 10307 ;;		_isspace
 10308 ;; This function is called by:
 10309 ;;		_vfpfcnvrt
 10310 ;; This function uses a non-reentrant model
 10311 ;;
 10312                           
 10313                           	psect	text48
 10314  001064                     __ptext48:
 10315                           	opt callstack 0
 10316  001064                     _atoi:
 10317                           	opt callstack 23
 10318  001064  0E00               	movlw	0
 10319  001066  6E16               	movwf	(atoi@n+1)^0,c
 10320  001068  0E00               	movlw	0
 10321  00106A  6E15               	movwf	atoi@n^0,c
 10322  00106C  0E00               	movlw	0
 10323  00106E  6E0F               	movwf	(atoi@neg+1)^0,c
 10324  001070  0E00               	movlw	0
 10325  001072  6E0E               	movwf	atoi@neg^0,c
 10326  001074  EF3E  F008         	goto	l3504
 10327  001078                     l3502:
 10328  001078  4A08               	infsnz	atoi@s^0,f,c
 10329  00107A  2A09               	incf	(atoi@s+1)^0,f,c
 10330  00107C                     l3504:
 10331  00107C  0E01               	movlw	1
 10332  00107E  6E14               	movwf	_atoi$1561^0,c
 10333  001080  C008  FFF6         	movff	atoi@s,tblptrl
 10334  001084  C009  FFF7         	movff	atoi@s+1,tblptrh
 10335  001088                     	if	0	;tblptru may be non-zero
 10336  001088                     	endif
 10337  001088                     	if	0	;tblptru may be non-zero
 10338  001088                     	endif
 10339  001088  0008               	tblrd		*
 10340  00108A  50F5               	movf	tablat,w,c
 10341  00108C  0A20               	xorlw	32
 10342  00108E  B4D8               	btfsc	status,2,c
 10343  001090  EF4C  F008         	goto	u2451
 10344  001094  EF4E  F008         	goto	u2450
 10345  001098                     u2451:
 10346  001098  EF6B  F008         	goto	l3512
 10347  00109C                     u2450:
 10348  00109C  0EF7               	movlw	247
 10349  00109E  6E0A               	movwf	??_atoi^0,c
 10350  0010A0  0EFF               	movlw	255
 10351  0010A2  6E0B               	movwf	(??_atoi+1)^0,c
 10352  0010A4  C008  FFF6         	movff	atoi@s,tblptrl
 10353  0010A8  C009  FFF7         	movff	atoi@s+1,tblptrh
 10354  0010AC                     	if	0	;tblptru may be non-zero
 10355  0010AC                     	endif
 10356  0010AC                     	if	0	;tblptru may be non-zero
 10357  0010AC                     	endif
 10358  0010AC  0008               	tblrd		*
 10359  0010AE  50F5               	movf	tablat,w,c
 10360  0010B0  6E0C               	movwf	(??_atoi+2)^0,c
 10361  0010B2  6A0D               	clrf	(??_atoi+3)^0,c
 10362  0010B4  500A               	movf	??_atoi^0,w,c
 10363  0010B6  260C               	addwf	(??_atoi+2)^0,f,c
 10364  0010B8  500B               	movf	(??_atoi+1)^0,w,c
 10365  0010BA  220D               	addwfc	(??_atoi+3)^0,f,c
 10366  0010BC  500D               	movf	(??_atoi+3)^0,w,c
 10367  0010BE  E109               	bnz	u2460
 10368  0010C0  0E05               	movlw	5
 10369  0010C2  5C0C               	subwf	(??_atoi+2)^0,w,c
 10370  0010C4  A0D8               	btfss	status,0,c
 10371  0010C6  EF67  F008         	goto	u2461
 10372  0010CA  EF69  F008         	goto	u2460
 10373  0010CE                     u2461:
 10374  0010CE  EF6B  F008         	goto	l3512
 10375  0010D2                     u2460:
 10376  0010D2  0E00               	movlw	0
 10377  0010D4  6E14               	movwf	_atoi$1561^0,c
 10378  0010D6                     l3512:
 10379  0010D6  C014  F010         	movff	_atoi$1561,_atoi$1560
 10380  0010DA  6A11               	clrf	(_atoi$1560+1)^0,c
 10381  0010DC  5010               	movf	_atoi$1560^0,w,c
 10382  0010DE  1011               	iorwf	(_atoi$1560+1)^0,w,c
 10383  0010E0  A4D8               	btfss	status,2,c
 10384  0010E2  EF75  F008         	goto	u2471
 10385  0010E6  EF77  F008         	goto	u2470
 10386  0010EA                     u2471:
 10387  0010EA  EF3C  F008         	goto	l3502
 10388  0010EE                     u2470:
 10389  0010EE  EF81  F008         	goto	l3522
 10390  0010F2                     l3518:
 10391  0010F2  0E00               	movlw	0
 10392  0010F4  6E0F               	movwf	(atoi@neg+1)^0,c
 10393  0010F6  0E01               	movlw	1
 10394  0010F8  6E0E               	movwf	atoi@neg^0,c
 10395  0010FA                     l3520:
 10396  0010FA  4A08               	infsnz	atoi@s^0,f,c
 10397  0010FC  2A09               	incf	(atoi@s+1)^0,f,c
 10398  0010FE  EFB6  F008         	goto	l3528
 10399  001102                     l3522:
 10400  001102  C008  FFF6         	movff	atoi@s,tblptrl
 10401  001106  C009  FFF7         	movff	atoi@s+1,tblptrh
 10402  00110A                     	if	0	;tblptru may be non-zero
 10403  00110A                     	endif
 10404  00110A                     	if	0	;tblptru may be non-zero
 10405  00110A                     	endif
 10406  00110A  0008               	tblrd		*
 10407  00110C  50F5               	movf	tablat,w,c
 10408  00110E  6E0A               	movwf	??_atoi^0,c
 10409  001110  6A0B               	clrf	(??_atoi+1)^0,c
 10410                           
 10411                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10412                           ; Switch size 1, requested type "simple"
 10413                           ; Number of cases is 1, Range of values is 0 to 0
 10414                           ; switch strategies available:
 10415                           ; Name         Instructions Cycles
 10416                           ; simple_byte            4     3 (average)
 10417                           ;	Chosen strategy is simple_byte
 10418  001112  500B               	movf	(??_atoi+1)^0,w,c
 10419  001114  0A00               	xorlw	0	; case 0
 10420  001116  B4D8               	btfsc	status,2,c
 10421  001118  EF90  F008         	goto	l5076
 10422  00111C  EFB6  F008         	goto	l3528
 10423  001120                     l5076:
 10424                           
 10425                           ; Switch size 1, requested type "simple"
 10426                           ; Number of cases is 2, Range of values is 43 to 45
 10427                           ; switch strategies available:
 10428                           ; Name         Instructions Cycles
 10429                           ; simple_byte            7     4 (average)
 10430                           ;	Chosen strategy is simple_byte
 10431  001120  500A               	movf	??_atoi^0,w,c
 10432  001122  0A2B               	xorlw	43	; case 43
 10433  001124  B4D8               	btfsc	status,2,c
 10434  001126  EF7D  F008         	goto	l3520
 10435  00112A  0A06               	xorlw	6	; case 45
 10436  00112C  B4D8               	btfsc	status,2,c
 10437  00112E  EF79  F008         	goto	l3518
 10438  001132  EFB6  F008         	goto	l3528
 10439  001136                     l3524:
 10440  001136  C015  F001         	movff	atoi@n,___wmul@multiplier
 10441  00113A  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 10442  00113E  0E00               	movlw	0
 10443  001140  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10444  001142  0E0A               	movlw	10
 10445  001144  6E03               	movwf	___wmul@multiplicand^0,c
 10446  001146  ECD4  F018         	call	___wmul	;wreg free
 10447  00114A  C008  FFF6         	movff	atoi@s,tblptrl
 10448  00114E  C009  FFF7         	movff	atoi@s+1,tblptrh
 10449  001152                     	if	0	;tblptru may be non-zero
 10450  001152                     	endif
 10451  001152                     	if	0	;tblptru may be non-zero
 10452  001152                     	endif
 10453  001152  0008               	tblrd		*
 10454  001154  50F5               	movf	tablat,w,c
 10455  001156  5E01               	subwf	?___wmul^0,f,c
 10456  001158  0E00               	movlw	0
 10457  00115A  5A02               	subwfb	(?___wmul+1)^0,f,c
 10458  00115C  0E30               	movlw	48
 10459  00115E  2401               	addwf	?___wmul^0,w,c
 10460  001160  6E15               	movwf	atoi@n^0,c
 10461  001162  0E00               	movlw	0
 10462  001164  2002               	addwfc	(?___wmul+1)^0,w,c
 10463  001166  6E16               	movwf	(atoi@n+1)^0,c
 10464  001168  EF7D  F008         	goto	l3520
 10465  00116C                     l3528:
 10466  00116C  0ED0               	movlw	208
 10467  00116E  6E0A               	movwf	??_atoi^0,c
 10468  001170  0EFF               	movlw	255
 10469  001172  6E0B               	movwf	(??_atoi+1)^0,c
 10470  001174  C008  FFF6         	movff	atoi@s,tblptrl
 10471  001178  C009  FFF7         	movff	atoi@s+1,tblptrh
 10472  00117C                     	if	0	;tblptru may be non-zero
 10473  00117C                     	endif
 10474  00117C                     	if	0	;tblptru may be non-zero
 10475  00117C                     	endif
 10476  00117C  0008               	tblrd		*
 10477  00117E  50F5               	movf	tablat,w,c
 10478  001180  6E0C               	movwf	(??_atoi+2)^0,c
 10479  001182  6A0D               	clrf	(??_atoi+3)^0,c
 10480  001184  500A               	movf	??_atoi^0,w,c
 10481  001186  260C               	addwf	(??_atoi+2)^0,f,c
 10482  001188  500B               	movf	(??_atoi+1)^0,w,c
 10483  00118A  220D               	addwfc	(??_atoi+3)^0,f,c
 10484  00118C  500D               	movf	(??_atoi+3)^0,w,c
 10485  00118E  E10A               	bnz	u2480
 10486  001190  0E0A               	movlw	10
 10487  001192  5C0C               	subwf	(??_atoi+2)^0,w,c
 10488  001194  A0D8               	btfss	status,0,c
 10489  001196  EFCF  F008         	goto	u2481
 10490  00119A  EFD2  F008         	goto	u2480
 10491  00119E                     u2481:
 10492  00119E  0E01               	movlw	1
 10493  0011A0  EFD3  F008         	goto	u2490
 10494  0011A4                     u2480:
 10495  0011A4  0E00               	movlw	0
 10496  0011A6                     u2490:
 10497  0011A6  6E12               	movwf	_atoi$1562^0,c
 10498  0011A8  6A13               	clrf	(_atoi$1562+1)^0,c
 10499  0011AA  5012               	movf	_atoi$1562^0,w,c
 10500  0011AC  1013               	iorwf	(_atoi$1562+1)^0,w,c
 10501  0011AE  A4D8               	btfss	status,2,c
 10502  0011B0  EFDC  F008         	goto	u2501
 10503  0011B4  EFDE  F008         	goto	u2500
 10504  0011B8                     u2501:
 10505  0011B8  EF9B  F008         	goto	l3524
 10506  0011BC                     u2500:
 10507  0011BC  500E               	movf	atoi@neg^0,w,c
 10508  0011BE  100F               	iorwf	(atoi@neg+1)^0,w,c
 10509  0011C0  A4D8               	btfss	status,2,c
 10510  0011C2  EFE5  F008         	goto	u2511
 10511  0011C6  EFE7  F008         	goto	u2510
 10512  0011CA                     u2511:
 10513  0011CA  EFF5  F008         	goto	l1337
 10514  0011CE                     u2510:
 10515  0011CE  C015  F00A         	movff	atoi@n,??_atoi
 10516  0011D2  C016  F00B         	movff	atoi@n+1,??_atoi+1
 10517  0011D6  1E0A               	comf	??_atoi^0,f,c
 10518  0011D8  1E0B               	comf	(??_atoi+1)^0,f,c
 10519  0011DA  4A0A               	infsnz	??_atoi^0,f,c
 10520  0011DC  2A0B               	incf	(??_atoi+1)^0,f,c
 10521  0011DE  C00A  F008         	movff	??_atoi,?_atoi
 10522  0011E2  C00B  F009         	movff	??_atoi+1,?_atoi+1
 10523  0011E6  EFF9  F008         	goto	l1340
 10524  0011EA                     l1337:
 10525  0011EA  C015  F008         	movff	atoi@n,?_atoi
 10526  0011EE  C016  F009         	movff	atoi@n+1,?_atoi+1
 10527  0011F2                     l1340:
 10528  0011F2  0012               	return		;funcret
 10529  0011F4                     __end_of_atoi:
 10530                           	opt callstack 0
 10531                           
 10532 ;; *************** function _isspace *****************
 10533 ;; Defined at:
 10534 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 10535 ;; Parameters:    Size  Location     Type
 10536 ;;  c               2    0[COMRAM] int 
 10537 ;; Auto vars:     Size  Location     Type
 10538 ;;		None
 10539 ;; Return value:  Size  Location     Type
 10540 ;;                  2    0[COMRAM] int 
 10541 ;; Registers used:
 10542 ;;		wreg, status,2, status,0
 10543 ;; Tracked objects:
 10544 ;;		On entry : 0/0
 10545 ;;		On exit  : 0/0
 10546 ;;		Unchanged: 0/0
 10547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10548 ;;      Params:         2       0       0       0       0       0       0       0       0
 10549 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10550 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10551 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10552 ;;Total ram usage:        7 bytes
 10553 ;; Hardware stack levels used:    1
 10554 ;; Hardware stack levels required when called:    1
 10555 ;; This function calls:
 10556 ;;		Nothing
 10557 ;; This function is called by:
 10558 ;;		_atoi
 10559 ;; This function uses a non-reentrant model
 10560 ;;
 10561                           
 10562                           	psect	text49
 10563  002E40                     __ptext49:
 10564                           	opt callstack 0
 10565  002E40                     _isspace:
 10566                           	opt callstack 23
 10567  002E40  0E01               	movlw	1
 10568  002E42  6E07               	movwf	_isspace$1578^0,c
 10569  002E44  0E20               	movlw	32
 10570  002E46  1801               	xorwf	isspace@c^0,w,c
 10571  002E48  1002               	iorwf	(isspace@c+1)^0,w,c
 10572  002E4A  B4D8               	btfsc	status,2,c
 10573  002E4C  EF2A  F017         	goto	u2181
 10574  002E50  EF2C  F017         	goto	u2180
 10575  002E54                     u2181:
 10576  002E54  EF45  F017         	goto	l3378
 10577  002E58                     u2180:
 10578  002E58  0EF7               	movlw	247
 10579  002E5A  6E03               	movwf	??_isspace^0,c
 10580  002E5C  0EFF               	movlw	255
 10581  002E5E  6E04               	movwf	(??_isspace+1)^0,c
 10582  002E60  C001  F005         	movff	isspace@c,??_isspace+2
 10583  002E64  C002  F006         	movff	isspace@c+1,??_isspace+3
 10584  002E68  5003               	movf	??_isspace^0,w,c
 10585  002E6A  2605               	addwf	(??_isspace+2)^0,f,c
 10586  002E6C  5004               	movf	(??_isspace+1)^0,w,c
 10587  002E6E  2206               	addwfc	(??_isspace+3)^0,f,c
 10588  002E70  5006               	movf	(??_isspace+3)^0,w,c
 10589  002E72  E109               	bnz	u2190
 10590  002E74  0E05               	movlw	5
 10591  002E76  5C05               	subwf	(??_isspace+2)^0,w,c
 10592  002E78  A0D8               	btfss	status,0,c
 10593  002E7A  EF41  F017         	goto	u2191
 10594  002E7E  EF43  F017         	goto	u2190
 10595  002E82                     u2191:
 10596  002E82  EF45  F017         	goto	l3378
 10597  002E86                     u2190:
 10598  002E86  0E00               	movlw	0
 10599  002E88  6E07               	movwf	_isspace$1578^0,c
 10600  002E8A                     l3378:
 10601  002E8A  C007  F001         	movff	_isspace$1578,?_isspace
 10602  002E8E  6A02               	clrf	(?_isspace+1)^0,c
 10603  002E90  0012               	return		;funcret
 10604  002E92                     __end_of_isspace:
 10605                           	opt callstack 0
 10606                           
 10607 ;; *************** function _isdigit *****************
 10608 ;; Defined at:
 10609 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 10610 ;; Parameters:    Size  Location     Type
 10611 ;;  c               2    0[COMRAM] int 
 10612 ;; Auto vars:     Size  Location     Type
 10613 ;;		None
 10614 ;; Return value:  Size  Location     Type
 10615 ;;                  2    0[COMRAM] int 
 10616 ;; Registers used:
 10617 ;;		wreg, status,2, status,0
 10618 ;; Tracked objects:
 10619 ;;		On entry : 0/0
 10620 ;;		On exit  : 0/0
 10621 ;;		Unchanged: 0/0
 10622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10623 ;;      Params:         2       0       0       0       0       0       0       0       0
 10624 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10625 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10626 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10627 ;;Total ram usage:        6 bytes
 10628 ;; Hardware stack levels used:    1
 10629 ;; Hardware stack levels required when called:    1
 10630 ;; This function calls:
 10631 ;;		Nothing
 10632 ;; This function is called by:
 10633 ;;		_vfpfcnvrt
 10634 ;;		_atoi
 10635 ;; This function uses a non-reentrant model
 10636 ;;
 10637                           
 10638                           	psect	text50
 10639  003028                     __ptext50:
 10640                           	opt callstack 0
 10641  003028                     _isdigit:
 10642                           	opt callstack 24
 10643  003028  0ED0               	movlw	208
 10644  00302A  6E03               	movwf	??_isdigit^0,c
 10645  00302C  0EFF               	movlw	255
 10646  00302E  6E04               	movwf	(??_isdigit+1)^0,c
 10647  003030  C001  F005         	movff	isdigit@c,??_isdigit+2
 10648  003034  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10649  003038  5003               	movf	??_isdigit^0,w,c
 10650  00303A  2605               	addwf	(??_isdigit+2)^0,f,c
 10651  00303C  5004               	movf	(??_isdigit+1)^0,w,c
 10652  00303E  2206               	addwfc	(??_isdigit+3)^0,f,c
 10653  003040  5006               	movf	(??_isdigit+3)^0,w,c
 10654  003042  E10A               	bnz	u2030
 10655  003044  0E0A               	movlw	10
 10656  003046  5C05               	subwf	(??_isdigit+2)^0,w,c
 10657  003048  A0D8               	btfss	status,0,c
 10658  00304A  EF29  F018         	goto	u2031
 10659  00304E  EF2C  F018         	goto	u2030
 10660  003052                     u2031:
 10661  003052  0E01               	movlw	1
 10662  003054  EF2D  F018         	goto	u2040
 10663  003058                     u2030:
 10664  003058  0E00               	movlw	0
 10665  00305A                     u2040:
 10666  00305A  6E01               	movwf	?_isdigit^0,c
 10667  00305C  6A02               	clrf	(?_isdigit+1)^0,c
 10668  00305E  0012               	return		;funcret
 10669  003060                     __end_of_isdigit:
 10670                           	opt callstack 0
 10671                           
 10672 ;; *************** function _getValue *****************
 10673 ;; Defined at:
 10674 ;;		line 831 in file "main.c"
 10675 ;; Parameters:    Size  Location     Type
 10676 ;;  numCharacter    2    3[COMRAM] short 
 10677 ;; Auto vars:     Size  Location     Type
 10678 ;;  i               2   10[COMRAM] int 
 10679 ;;  i               2    8[COMRAM] int 
 10680 ;;  Rx              1   13[COMRAM] unsigned char 
 10681 ;;  dato            1   12[COMRAM] unsigned char 
 10682 ;;  datoIncorrec    1    7[COMRAM] unsigned char 
 10683 ;; Return value:  Size  Location     Type
 10684 ;;                  1    wreg      unsigned char 
 10685 ;; Registers used:
 10686 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10687 ;; Tracked objects:
 10688 ;;		On entry : 0/0
 10689 ;;		On exit  : 0/0
 10690 ;;		Unchanged: 0/0
 10691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10692 ;;      Params:         2       0       0       0       0       0       0       0       0
 10693 ;;      Locals:         7       0       0       0       0       0       0       0       0
 10694 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10695 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10696 ;;Total ram usage:       11 bytes
 10697 ;; Hardware stack levels used:    1
 10698 ;; Hardware stack levels required when called:    3
 10699 ;; This function calls:
 10700 ;;		_UART_printf
 10701 ;;		_UART_read
 10702 ;;		_UART_write
 10703 ;; This function is called by:
 10704 ;;		_setRtc
 10705 ;;		_asignarHorarios
 10706 ;;		_setTiempoRegar
 10707 ;;		_lecturaWifi
 10708 ;;		_regadoRapido
 10709 ;; This function uses a non-reentrant model
 10710 ;;
 10711                           
 10712                           	psect	text51
 10713  000E40                     __ptext51:
 10714                           	opt callstack 0
 10715  000E40                     _getValue:
 10716                           	opt callstack 25
 10717  000E40                     
 10718                           ;main.c: 834:     unsigned char datoIncorrecto = 0;
 10719  000E40  0E00               	movlw	0
 10720  000E42  6E08               	movwf	getValue@datoIncorrecto^0,c
 10721                           
 10722                           ;main.c: 835:     unsigned char dato = 0;
 10723  000E44  0E00               	movlw	0
 10724  000E46  6E0D               	movwf	getValue@dato^0,c
 10725                           
 10726                           ;main.c: 837:     switch (numCharacters) {
 10727  000E48  EFFC  F007         	goto	l3952
 10728  000E4C                     l3874:
 10729                           
 10730                           ;main.c: 840:             Rx = UART_read();
 10731  000E4C  ECCD  F016         	call	_UART_read	;wreg free
 10732  000E50  6E0E               	movwf	getValue@Rx^0,c
 10733  000E52                     
 10734                           ;main.c: 842:             if (Rx >= 48 && Rx <= 57) {
 10735  000E52  0E2F               	movlw	47
 10736  000E54  640E               	cpfsgt	getValue@Rx^0,c
 10737  000E56  EF2F  F007         	goto	u2961
 10738  000E5A  EF31  F007         	goto	u2960
 10739  000E5E                     u2961:
 10740  000E5E  EF3F  F007         	goto	l3884
 10741  000E62                     u2960:
 10742  000E62  0E3A               	movlw	58
 10743  000E64  600E               	cpfslt	getValue@Rx^0,c
 10744  000E66  EF37  F007         	goto	u2971
 10745  000E6A  EF39  F007         	goto	u2970
 10746  000E6E                     u2971:
 10747  000E6E  EF3F  F007         	goto	l3884
 10748  000E72                     u2970:
 10749  000E72                     
 10750                           ;main.c: 843:                 Rx -= 48;
 10751  000E72  0E30               	movlw	48
 10752  000E74  5E0E               	subwf	getValue@Rx^0,f,c
 10753  000E76                     
 10754                           ;main.c: 844:                 dato = Rx;
 10755  000E76  C00E  F00D         	movff	getValue@Rx,getValue@dato
 10756                           
 10757                           ;main.c: 845:             } else {
 10758  000E7A  EF16  F008         	goto	l3954
 10759  000E7E                     l3884:
 10760                           
 10761                           ;main.c: 846:                 UART_write('@');
 10762  000E7E  0E40               	movlw	64
 10763  000E80  EC23  F019         	call	_UART_write
 10764  000E84                     
 10765                           ;main.c: 847:                 datoIncorrecto = 1;
 10766  000E84  0E01               	movlw	1
 10767  000E86  6E08               	movwf	getValue@datoIncorrecto^0,c
 10768  000E88  EF16  F008         	goto	l3954
 10769  000E8C                     l3888:
 10770                           
 10771                           ;main.c: 853:             for (int i = 0; i < 2; i++) {
 10772  000E8C  0E00               	movlw	0
 10773  000E8E  6E0A               	movwf	(getValue@i+1)^0,c
 10774  000E90  0E00               	movlw	0
 10775  000E92  6E09               	movwf	getValue@i^0,c
 10776  000E94                     l3894:
 10777                           
 10778                           ;main.c: 855:                 Rx = UART_read();
 10779  000E94  ECCD  F016         	call	_UART_read	;wreg free
 10780  000E98  6E0E               	movwf	getValue@Rx^0,c
 10781  000E9A                     
 10782                           ;main.c: 857:                 if (Rx >= 48 && Rx <= 57) {
 10783  000E9A  0E2F               	movlw	47
 10784  000E9C  640E               	cpfsgt	getValue@Rx^0,c
 10785  000E9E  EF53  F007         	goto	u2981
 10786  000EA2  EF55  F007         	goto	u2980
 10787  000EA6                     u2981:
 10788  000EA6  EF83  F007         	goto	l3910
 10789  000EAA                     u2980:
 10790  000EAA  0E3A               	movlw	58
 10791  000EAC  600E               	cpfslt	getValue@Rx^0,c
 10792  000EAE  EF5B  F007         	goto	u2991
 10793  000EB2  EF5D  F007         	goto	u2990
 10794  000EB6                     u2991:
 10795  000EB6  EF83  F007         	goto	l3910
 10796  000EBA                     u2990:
 10797  000EBA                     
 10798                           ;main.c: 859:                     Rx -= 48;
 10799  000EBA  0E30               	movlw	48
 10800  000EBC  5E0E               	subwf	getValue@Rx^0,f,c
 10801                           
 10802                           ;main.c: 861:                     switch (i) {
 10803  000EBE  EF6D  F007         	goto	l3908
 10804  000EC2                     l440:
 10805                           
 10806                           ;main.c: 863:                             dato = Rx;
 10807  000EC2  C00E  F00D         	movff	getValue@Rx,getValue@dato
 10808  000EC6                     
 10809                           ;main.c: 864:                             dato *= 10;
 10810  000EC6  0E0A               	movlw	10
 10811  000EC8  020D               	mulwf	getValue@dato^0,c
 10812  000ECA  50F3               	movf	prodl,w,c
 10813  000ECC  6E0D               	movwf	getValue@dato^0,c
 10814                           
 10815                           ;main.c: 865:                             break;
 10816  000ECE  EF8A  F007         	goto	l3914
 10817  000ED2                     l3904:
 10818                           
 10819                           ;main.c: 868:                             dato += Rx;
 10820  000ED2  500E               	movf	getValue@Rx^0,w,c
 10821  000ED4  260D               	addwf	getValue@dato^0,f,c
 10822                           
 10823                           ;main.c: 869:                             break;
 10824  000ED6  EF8A  F007         	goto	l3914
 10825  000EDA                     l3908:
 10826  000EDA  C009  F006         	movff	getValue@i,??_getValue
 10827  000EDE  C00A  F007         	movff	getValue@i+1,??_getValue+1
 10828                           
 10829                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10830                           ; Switch size 1, requested type "simple"
 10831                           ; Number of cases is 1, Range of values is 0 to 0
 10832                           ; switch strategies available:
 10833                           ; Name         Instructions Cycles
 10834                           ; simple_byte            4     3 (average)
 10835                           ;	Chosen strategy is simple_byte
 10836  000EE2  5007               	movf	(??_getValue+1)^0,w,c
 10837  000EE4  0A00               	xorlw	0	; case 0
 10838  000EE6  B4D8               	btfsc	status,2,c
 10839  000EE8  EF78  F007         	goto	l5078
 10840  000EEC  EF8A  F007         	goto	l3914
 10841  000EF0                     l5078:
 10842                           
 10843                           ; Switch size 1, requested type "simple"
 10844                           ; Number of cases is 2, Range of values is 0 to 1
 10845                           ; switch strategies available:
 10846                           ; Name         Instructions Cycles
 10847                           ; simple_byte            7     4 (average)
 10848                           ;	Chosen strategy is simple_byte
 10849  000EF0  5006               	movf	??_getValue^0,w,c
 10850  000EF2  0A00               	xorlw	0	; case 0
 10851  000EF4  B4D8               	btfsc	status,2,c
 10852  000EF6  EF61  F007         	goto	l440
 10853  000EFA  0A01               	xorlw	1	; case 1
 10854  000EFC  B4D8               	btfsc	status,2,c
 10855  000EFE  EF69  F007         	goto	l3904
 10856  000F02  EF8A  F007         	goto	l3914
 10857  000F06                     l3910:
 10858                           
 10859                           ;main.c: 877:                     datoIncorrecto = 1;
 10860  000F06  0E01               	movlw	1
 10861  000F08  6E08               	movwf	getValue@datoIncorrecto^0,c
 10862  000F0A                     
 10863                           ;main.c: 878:                     UART_write('@');
 10864  000F0A  0E40               	movlw	64
 10865  000F0C  EC23  F019         	call	_UART_write
 10866                           
 10867                           ;main.c: 879:                     break;
 10868  000F10  EF16  F008         	goto	l3954
 10869  000F14                     l3914:
 10870                           
 10871                           ;main.c: 881:             }
 10872  000F14  4A09               	infsnz	getValue@i^0,f,c
 10873  000F16  2A0A               	incf	(getValue@i+1)^0,f,c
 10874  000F18  BE0A               	btfsc	(getValue@i+1)^0,7,c
 10875  000F1A  EF98  F007         	goto	u3001
 10876  000F1E  500A               	movf	(getValue@i+1)^0,w,c
 10877  000F20  E109               	bnz	u3000
 10878  000F22  0E02               	movlw	2
 10879  000F24  5C09               	subwf	getValue@i^0,w,c
 10880  000F26  A0D8               	btfss	status,0,c
 10881  000F28  EF98  F007         	goto	u3001
 10882  000F2C  EF9A  F007         	goto	u3000
 10883  000F30                     u3001:
 10884  000F30  EF4A  F007         	goto	l3894
 10885  000F34                     u3000:
 10886  000F34  EF16  F008         	goto	l3954
 10887  000F38                     l3918:
 10888                           
 10889                           ;main.c: 885:             for (int i = 0; i < 3; i++) {
 10890  000F38  0E00               	movlw	0
 10891  000F3A  6E0C               	movwf	(getValue@i_983+1)^0,c
 10892  000F3C  0E00               	movlw	0
 10893  000F3E  6E0B               	movwf	getValue@i_983^0,c
 10894  000F40                     l3924:
 10895                           
 10896                           ;main.c: 887:                 Rx = UART_read();
 10897  000F40  ECCD  F016         	call	_UART_read	;wreg free
 10898  000F44  6E0E               	movwf	getValue@Rx^0,c
 10899  000F46                     
 10900                           ;main.c: 889:                 if (Rx >= 48 && Rx <= 57) {
 10901  000F46  0E2F               	movlw	47
 10902  000F48  640E               	cpfsgt	getValue@Rx^0,c
 10903  000F4A  EFA9  F007         	goto	u3011
 10904  000F4E  EFAB  F007         	goto	u3010
 10905  000F52                     u3011:
 10906  000F52  EFE3  F007         	goto	l3942
 10907  000F56                     u3010:
 10908  000F56  0E3A               	movlw	58
 10909  000F58  600E               	cpfslt	getValue@Rx^0,c
 10910  000F5A  EFB1  F007         	goto	u3021
 10911  000F5E  EFB3  F007         	goto	u3020
 10912  000F62                     u3021:
 10913  000F62  EFE3  F007         	goto	l3942
 10914  000F66                     u3020:
 10915  000F66                     
 10916                           ;main.c: 891:                     Rx -= 48;
 10917  000F66  0E30               	movlw	48
 10918  000F68  5E0E               	subwf	getValue@Rx^0,f,c
 10919                           
 10920                           ;main.c: 893:                     switch (i) {
 10921  000F6A  EFC9  F007         	goto	l3940
 10922  000F6E                     l450:
 10923                           
 10924                           ;main.c: 895:                             dato = Rx;
 10925  000F6E  C00E  F00D         	movff	getValue@Rx,getValue@dato
 10926  000F72                     
 10927                           ;main.c: 896:                             dato *= 100;
 10928  000F72  0E64               	movlw	100
 10929  000F74  020D               	mulwf	getValue@dato^0,c
 10930  000F76  50F3               	movf	prodl,w,c
 10931  000F78  6E0D               	movwf	getValue@dato^0,c
 10932                           
 10933                           ;main.c: 897:                             break;
 10934  000F7A  EFEA  F007         	goto	l3946
 10935  000F7E                     l3934:
 10936                           
 10937                           ;main.c: 900:                             dato += (Rx * 10);
 10938  000F7E  500E               	movf	getValue@Rx^0,w,c
 10939  000F80  0D0A               	mullw	10
 10940  000F82  50F3               	movf	243,w,c
 10941  000F84  260D               	addwf	getValue@dato^0,f,c
 10942                           
 10943                           ;main.c: 901:                             break;
 10944  000F86  EFEA  F007         	goto	l3946
 10945  000F8A                     l3936:
 10946                           
 10947                           ;main.c: 904:                             dato += Rx;
 10948  000F8A  500E               	movf	getValue@Rx^0,w,c
 10949  000F8C  260D               	addwf	getValue@dato^0,f,c
 10950                           
 10951                           ;main.c: 905:                             break;
 10952  000F8E  EFEA  F007         	goto	l3946
 10953  000F92                     l3940:
 10954  000F92  C00B  F006         	movff	getValue@i_983,??_getValue
 10955  000F96  C00C  F007         	movff	getValue@i_983+1,??_getValue+1
 10956                           
 10957                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10958                           ; Switch size 1, requested type "simple"
 10959                           ; Number of cases is 1, Range of values is 0 to 0
 10960                           ; switch strategies available:
 10961                           ; Name         Instructions Cycles
 10962                           ; simple_byte            4     3 (average)
 10963                           ;	Chosen strategy is simple_byte
 10964  000F9A  5007               	movf	(??_getValue+1)^0,w,c
 10965  000F9C  0A00               	xorlw	0	; case 0
 10966  000F9E  B4D8               	btfsc	status,2,c
 10967  000FA0  EFD4  F007         	goto	l5080
 10968  000FA4  EFEA  F007         	goto	l3946
 10969  000FA8                     l5080:
 10970                           
 10971                           ; Switch size 1, requested type "simple"
 10972                           ; Number of cases is 3, Range of values is 0 to 2
 10973                           ; switch strategies available:
 10974                           ; Name         Instructions Cycles
 10975                           ; simple_byte           10     6 (average)
 10976                           ;	Chosen strategy is simple_byte
 10977  000FA8  5006               	movf	??_getValue^0,w,c
 10978  000FAA  0A00               	xorlw	0	; case 0
 10979  000FAC  B4D8               	btfsc	status,2,c
 10980  000FAE  EFB7  F007         	goto	l450
 10981  000FB2  0A01               	xorlw	1	; case 1
 10982  000FB4  B4D8               	btfsc	status,2,c
 10983  000FB6  EFBF  F007         	goto	l3934
 10984  000FBA  0A03               	xorlw	3	; case 2
 10985  000FBC  B4D8               	btfsc	status,2,c
 10986  000FBE  EFC5  F007         	goto	l3936
 10987  000FC2  EFEA  F007         	goto	l3946
 10988  000FC6                     l3942:
 10989                           
 10990                           ;main.c: 913:                     datoIncorrecto = 1;
 10991  000FC6  0E01               	movlw	1
 10992  000FC8  6E08               	movwf	getValue@datoIncorrecto^0,c
 10993  000FCA                     
 10994                           ;main.c: 914:                     UART_write('@');
 10995  000FCA  0E40               	movlw	64
 10996  000FCC  EC23  F019         	call	_UART_write
 10997                           
 10998                           ;main.c: 915:                     break;
 10999  000FD0  EF16  F008         	goto	l3954
 11000  000FD4                     l3946:
 11001                           
 11002                           ;main.c: 917:             }
 11003  000FD4  4A0B               	infsnz	getValue@i_983^0,f,c
 11004  000FD6  2A0C               	incf	(getValue@i_983+1)^0,f,c
 11005  000FD8  BE0C               	btfsc	(getValue@i_983+1)^0,7,c
 11006  000FDA  EFF8  F007         	goto	u3031
 11007  000FDE  500C               	movf	(getValue@i_983+1)^0,w,c
 11008  000FE0  E109               	bnz	u3030
 11009  000FE2  0E03               	movlw	3
 11010  000FE4  5C0B               	subwf	getValue@i_983^0,w,c
 11011  000FE6  A0D8               	btfss	status,0,c
 11012  000FE8  EFF8  F007         	goto	u3031
 11013  000FEC  EFFA  F007         	goto	u3030
 11014  000FF0                     u3031:
 11015  000FF0  EFA0  F007         	goto	l3924
 11016  000FF4                     u3030:
 11017  000FF4  EF16  F008         	goto	l3954
 11018  000FF8                     l3952:
 11019  000FF8  C004  F006         	movff	getValue@numCharacters,??_getValue
 11020  000FFC  C005  F007         	movff	getValue@numCharacters+1,??_getValue+1
 11021                           
 11022                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11023                           ; Switch size 1, requested type "simple"
 11024                           ; Number of cases is 1, Range of values is 0 to 0
 11025                           ; switch strategies available:
 11026                           ; Name         Instructions Cycles
 11027                           ; simple_byte            4     3 (average)
 11028                           ;	Chosen strategy is simple_byte
 11029  001000  5007               	movf	(??_getValue+1)^0,w,c
 11030  001002  0A00               	xorlw	0	; case 0
 11031  001004  B4D8               	btfsc	status,2,c
 11032  001006  EF07  F008         	goto	l5082
 11033  00100A  EF16  F008         	goto	l3954
 11034  00100E                     l5082:
 11035                           
 11036                           ; Switch size 1, requested type "simple"
 11037                           ; Number of cases is 3, Range of values is 1 to 3
 11038                           ; switch strategies available:
 11039                           ; Name         Instructions Cycles
 11040                           ; simple_byte           10     6 (average)
 11041                           ;	Chosen strategy is simple_byte
 11042  00100E  5006               	movf	??_getValue^0,w,c
 11043  001010  0A01               	xorlw	1	; case 1
 11044  001012  B4D8               	btfsc	status,2,c
 11045  001014  EF26  F007         	goto	l3874
 11046  001018  0A03               	xorlw	3	; case 2
 11047  00101A  B4D8               	btfsc	status,2,c
 11048  00101C  EF46  F007         	goto	l3888
 11049  001020  0A01               	xorlw	1	; case 3
 11050  001022  B4D8               	btfsc	status,2,c
 11051  001024  EF9C  F007         	goto	l3918
 11052  001028  EF16  F008         	goto	l3954
 11053  00102C                     l3954:
 11054                           
 11055                           ;main.c: 926:     if (esperandoDatos || datoIncorrecto) {
 11056  00102C  0100               	movlb	0	; () banked
 11057  00102E  5189               	movf	_esperandoDatos& (0+255),w,b
 11058  001030  A4D8               	btfss	status,2,c
 11059  001032  EF1D  F008         	goto	u3041
 11060  001036  EF1F  F008         	goto	u3040
 11061  00103A                     u3041:
 11062  00103A  EF27  F008         	goto	l3958
 11063  00103E                     u3040:
 11064  00103E                     
 11065                           ; BSR set to: 0
 11066  00103E  5008               	movf	getValue@datoIncorrecto^0,w,c
 11067  001040  B4D8               	btfsc	status,2,c
 11068  001042  EF25  F008         	goto	u3051
 11069  001046  EF27  F008         	goto	u3050
 11070  00104A                     u3051:
 11071  00104A  EF30  F008         	goto	l3966
 11072  00104E                     u3050:
 11073  00104E                     l3958:
 11074                           
 11075                           ; BSR set to: 0
 11076                           ;main.c: 928:         UART_printf("\nFALLO EL SETEO\r\n");
 11077  00104E  0EA0               	movlw	low STR_52
 11078  001050  6E02               	movwf	UART_printf@cadena^0,c
 11079  001052  0E7F               	movlw	high STR_52
 11080  001054  6E03               	movwf	(UART_printf@cadena+1)^0,c
 11081  001056  EC16  F016         	call	_UART_printf	;wreg free
 11082  00105A                     
 11083                           ;main.c: 929:         return '@';
 11084  00105A  0E40               	movlw	64
 11085  00105C  EF31  F008         	goto	l460
 11086  001060                     l3966:
 11087                           
 11088                           ; BSR set to: 0
 11089                           ;main.c: 931:         return dato;
 11090  001060  500D               	movf	getValue@dato^0,w,c
 11091  001062                     l460:
 11092  001062  0012               	return		;funcret
 11093  001064                     __end_of_getValue:
 11094                           	opt callstack 0
 11095                           
 11096 ;; *************** function _UART_read *****************
 11097 ;; Defined at:
 11098 ;;		line 34 in file "./UART.h"
 11099 ;; Parameters:    Size  Location     Type
 11100 ;;		None
 11101 ;; Auto vars:     Size  Location     Type
 11102 ;;		None
 11103 ;; Return value:  Size  Location     Type
 11104 ;;                  1    wreg      unsigned char 
 11105 ;; Registers used:
 11106 ;;		wreg, status,2
 11107 ;; Tracked objects:
 11108 ;;		On entry : 0/0
 11109 ;;		On exit  : 0/0
 11110 ;;		Unchanged: 0/0
 11111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11112 ;;      Params:         0       0       0       0       0       0       0       0       0
 11113 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11114 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11115 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11116 ;;Total ram usage:        0 bytes
 11117 ;; Hardware stack levels used:    1
 11118 ;; Hardware stack levels required when called:    1
 11119 ;; This function calls:
 11120 ;;		Nothing
 11121 ;; This function is called by:
 11122 ;;		_lecturaWifi
 11123 ;;		_getValue
 11124 ;; This function uses a non-reentrant model
 11125 ;;
 11126                           
 11127                           	psect	text52
 11128  002D9A                     __ptext52:
 11129                           	opt callstack 0
 11130  002D9A                     _UART_read:
 11131                           	opt callstack 26
 11132  002D9A                     
 11133                           ;./UART.h: 36:     TMR0 = VALOR_TIMER0UART;
 11134  002D9A  0E67               	movlw	103
 11135  002D9C  6ED7               	movwf	215,c	;volatile
 11136  002D9E  0E69               	movlw	105
 11137  002DA0  6ED6               	movwf	214,c	;volatile
 11138                           
 11139                           ;./UART.h: 37:     esperaDatoConcluida = 0;
 11140  002DA2  0E00               	movlw	0
 11141  002DA4  0100               	movlb	0	; () banked
 11142  002DA6  6F8A               	movwf	_esperaDatoConcluida& (0+255),b
 11143                           
 11144                           ;./UART.h: 38:     esperandoDatos = 1;
 11145  002DA8  0E01               	movlw	1
 11146  002DAA  6F89               	movwf	_esperandoDatos& (0+255),b
 11147                           
 11148                           ;./UART.h: 39:     byteUart = 0;
 11149  002DAC  0E00               	movlw	0
 11150  002DAE  6F8B               	movwf	_byteUart& (0+255),b
 11151                           
 11152                           ;./UART.h: 40:     tiempoInactividadTrans = 0;
 11153  002DB0  0E00               	movlw	0
 11154  002DB2  6F8C               	movwf	_tiempoInactividadTrans& (0+255),b
 11155  002DB4                     l127:
 11156                           
 11157                           ; BSR set to: 0
 11158  002DB4  BA9E               	btfsc	158,5,c	;volatile
 11159  002DB6  EFDF  F016         	goto	u2731
 11160  002DBA  EFE1  F016         	goto	u2730
 11161  002DBE                     u2731:
 11162  002DBE  EFE9  F016         	goto	l3704
 11163  002DC2                     u2730:
 11164  002DC2                     
 11165                           ; BSR set to: 0
 11166  002DC2  518A               	movf	_esperaDatoConcluida& (0+255),w,b
 11167  002DC4  B4D8               	btfsc	status,2,c
 11168  002DC6  EFE7  F016         	goto	u2741
 11169  002DCA  EFE9  F016         	goto	u2740
 11170  002DCE                     u2741:
 11171  002DCE  EFDA  F016         	goto	l127
 11172  002DD2                     u2740:
 11173  002DD2                     l3704:
 11174                           
 11175                           ; BSR set to: 0
 11176                           ;./UART.h: 44:     if (!esperaDatoConcluida) {
 11177  002DD2  518A               	movf	_esperaDatoConcluida& (0+255),w,b
 11178  002DD4  A4D8               	btfss	status,2,c
 11179  002DD6  EFEF  F016         	goto	u2751
 11180  002DDA  EFF1  F016         	goto	u2750
 11181  002DDE                     u2751:
 11182  002DDE  EFF5  F016         	goto	l132
 11183  002DE2                     u2750:
 11184  002DE2                     
 11185                           ; BSR set to: 0
 11186                           ;./UART.h: 45:         byteUart = RCREG;
 11187  002DE2  CFAE F08B          	movff	4014,_byteUart	;volatile
 11188  002DE6                     
 11189                           ; BSR set to: 0
 11190                           ;./UART.h: 46:         esperandoDatos = 0;
 11191  002DE6  0E00               	movlw	0
 11192  002DE8  6F89               	movwf	_esperandoDatos& (0+255),b
 11193  002DEA                     l132:
 11194                           
 11195                           ; BSR set to: 0
 11196                           ;./UART.h: 49:     return byteUart;
 11197  002DEA  518B               	movf	_byteUart& (0+255),w,b
 11198  002DEC                     
 11199                           ; BSR set to: 0
 11200  002DEC  0012               	return		;funcret
 11201  002DEE                     __end_of_UART_read:
 11202                           	opt callstack 0
 11203                           
 11204 ;; *************** function _UART_printf *****************
 11205 ;; Defined at:
 11206 ;;		line 57 in file "./UART.h"
 11207 ;; Parameters:    Size  Location     Type
 11208 ;;  cadena          2    1[COMRAM] PTR unsigned char 
 11209 ;;		 -> STR_56(58), STR_55(57), STR_54(57), STR_53(20), 
 11210 ;;		 -> STR_52(18), STR_51(11), STR_50(9), STR_49(17), 
 11211 ;;		 -> STR_42(25), STR_33(55), STR_32(62), STR_31(42), 
 11212 ;;		 -> STR_30(3), STR_29(14), STR_28(26), STR_27(23), 
 11213 ;;		 -> STR_26(34), STR_25(32), STR_24(49), STR_23(37), 
 11214 ;;		 -> STR_22(27), STR_21(37), STR_20(32), STR_18(38), 
 11215 ;;		 -> STR_17(37), STR_16(72), STR_15(51), STR_14(23), 
 11216 ;;		 -> STR_13(26), buffer(70), STR_11(37), STR_10(59), 
 11217 ;;		 -> STR_9(59), STR_8(51), STR_7(25), STR_6(37), 
 11218 ;;		 -> STR_5(31), STR_4(43), STR_3(16), STR_2(36), 
 11219 ;;		 -> STR_1(65), 
 11220 ;; Auto vars:     Size  Location     Type
 11221 ;;		None
 11222 ;; Return value:  Size  Location     Type
 11223 ;;                  1    wreg      void 
 11224 ;; Registers used:
 11225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11226 ;; Tracked objects:
 11227 ;;		On entry : 0/0
 11228 ;;		On exit  : 0/0
 11229 ;;		Unchanged: 0/0
 11230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11231 ;;      Params:         2       0       0       0       0       0       0       0       0
 11232 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11233 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11234 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11235 ;;Total ram usage:        2 bytes
 11236 ;; Hardware stack levels used:    1
 11237 ;; Hardware stack levels required when called:    2
 11238 ;; This function calls:
 11239 ;;		_UART_write
 11240 ;; This function is called by:
 11241 ;;		_fijaDiaRtc
 11242 ;;		_fijaHoraRtc
 11243 ;;		_asignarHorarios
 11244 ;;		_setTiempoRegar
 11245 ;;		_lecturaWifi
 11246 ;;		_mostrarMenu
 11247 ;;		_sistemaPrincipal
 11248 ;;		_dameDatosSistema
 11249 ;;		_dameTemperaturaHumedad
 11250 ;;		_mostrarDatosSensores
 11251 ;;		_mostrarDatosSensoresWIFI
 11252 ;;		_getValue
 11253 ;;		_regadoRapido
 11254 ;;		_configBluetoothHC_06
 11255 ;; This function uses a non-reentrant model
 11256 ;;
 11257                           
 11258                           	psect	text53
 11259  002C2C                     __ptext53:
 11260                           	opt callstack 0
 11261  002C2C                     _UART_printf:
 11262                           	opt callstack 26
 11263  002C2C                     
 11264                           ;./UART.h: 58:     while (*cadena) {
 11265  002C2C  EF2C  F016         	goto	l3718
 11266  002C30                     l3714:
 11267                           
 11268                           ;./UART.h: 59:         UART_write(*cadena++);
 11269  002C30  C002  FFF6         	movff	UART_printf@cadena,tblptrl
 11270  002C34  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
 11271  002C38  6AF8               	clrf	tblptru,c
 11272  002C3A  0E07               	movlw	(high __ramtop+-1)
 11273  002C3C  64F7               	cpfsgt	tblptrh,c
 11274  002C3E  D003               	bra	u2767
 11275  002C40  0008               	tblrd		*
 11276  002C42  50F5               	movf	tablat,w,c
 11277  002C44  D005               	bra	u2760
 11278  002C46                     u2767:
 11279  002C46  CFF6 FFE1          	movff	tblptrl,fsr1l
 11280  002C4A  CFF7 FFE2          	movff	tblptrh,fsr1h
 11281  002C4E  50E7               	movf	indf1,w,c
 11282  002C50                     u2760:
 11283  002C50  EC23  F019         	call	_UART_write
 11284  002C54  4A02               	infsnz	UART_printf@cadena^0,f,c
 11285  002C56  2A03               	incf	(UART_printf@cadena+1)^0,f,c
 11286  002C58                     l3718:
 11287                           
 11288                           ;./UART.h: 58:     while (*cadena) {
 11289  002C58  C002  FFF6         	movff	UART_printf@cadena,tblptrl
 11290  002C5C  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
 11291  002C60  6AF8               	clrf	tblptru,c
 11292  002C62  0E07               	movlw	(high __ramtop+-1)
 11293  002C64  64F7               	cpfsgt	tblptrh,c
 11294  002C66  D003               	bra	u2777
 11295  002C68  0008               	tblrd		*
 11296  002C6A  50F5               	movf	tablat,w,c
 11297  002C6C  D005               	bra	u2770
 11298  002C6E                     u2777:
 11299  002C6E  CFF6 FFE1          	movff	tblptrl,fsr1l
 11300  002C72  CFF7 FFE2          	movff	tblptrh,fsr1h
 11301  002C76  50E7               	movf	indf1,w,c
 11302  002C78                     u2770:
 11303  002C78  0900               	iorlw	0
 11304  002C7A  A4D8               	btfss	status,2,c
 11305  002C7C  EF42  F016         	goto	u2781
 11306  002C80  EF44  F016         	goto	u2780
 11307  002C84                     u2781:
 11308  002C84  EF18  F016         	goto	l3714
 11309  002C88                     u2780:
 11310  002C88  0012               	return		;funcret
 11311  002C8A                     __end_of_UART_printf:
 11312                           	opt callstack 0
 11313                           
 11314 ;; *************** function _UART_write *****************
 11315 ;; Defined at:
 11316 ;;		line 52 in file "./UART.h"
 11317 ;; Parameters:    Size  Location     Type
 11318 ;;  dato            1    wreg     unsigned char 
 11319 ;; Auto vars:     Size  Location     Type
 11320 ;;  dato            1    0[COMRAM] unsigned char 
 11321 ;; Return value:  Size  Location     Type
 11322 ;;                  1    wreg      void 
 11323 ;; Registers used:
 11324 ;;		wreg
 11325 ;; Tracked objects:
 11326 ;;		On entry : 0/0
 11327 ;;		On exit  : 0/0
 11328 ;;		Unchanged: 0/0
 11329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11330 ;;      Params:         0       0       0       0       0       0       0       0       0
 11331 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11332 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11333 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11334 ;;Total ram usage:        1 bytes
 11335 ;; Hardware stack levels used:    1
 11336 ;; Hardware stack levels required when called:    1
 11337 ;; This function calls:
 11338 ;;		Nothing
 11339 ;; This function is called by:
 11340 ;;		_UART_printf
 11341 ;;		_lecturaWifi
 11342 ;;		_dameDatosSistema
 11343 ;;		_mostrarDatosSensores
 11344 ;;		_mostrarDatosSensoresWIFI
 11345 ;;		_getValue
 11346 ;; This function uses a non-reentrant model
 11347 ;;
 11348                           
 11349                           	psect	text54
 11350  003246                     __ptext54:
 11351                           	opt callstack 0
 11352  003246                     _UART_write:
 11353                           	opt callstack 26
 11354                           
 11355                           ;incstack = 0
 11356                           ;UART_write@dato stored from wreg
 11357  003246  6E01               	movwf	UART_write@dato^0,c
 11358  003248                     
 11359                           ;./UART.h: 53:     TXREG = dato;
 11360  003248  C001  FFAD         	movff	UART_write@dato,4013	;volatile
 11361  00324C                     l136:
 11362  00324C  A2AC               	btfss	172,1,c	;volatile
 11363  00324E  EF2B  F019         	goto	u2541
 11364  003252  EF2D  F019         	goto	u2540
 11365  003256                     u2541:
 11366  003256  EF26  F019         	goto	l136
 11367  00325A                     u2540:
 11368  00325A  0012               	return		;funcret
 11369  00325C                     __end_of_UART_write:
 11370                           	opt callstack 0
 11371                           
 11372 ;; *************** function _escribeHorariosMemoria *****************
 11373 ;; Defined at:
 11374 ;;		line 251 in file "main.c"
 11375 ;; Parameters:    Size  Location     Type
 11376 ;;		None
 11377 ;; Auto vars:     Size  Location     Type
 11378 ;;  j               2   12[COMRAM] int 
 11379 ;;  i               2   16[COMRAM] int 
 11380 ;;  contMemoria     2   14[COMRAM] int 
 11381 ;; Return value:  Size  Location     Type
 11382 ;;                  1    wreg      void 
 11383 ;; Registers used:
 11384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11385 ;; Tracked objects:
 11386 ;;		On entry : 0/0
 11387 ;;		On exit  : 0/0
 11388 ;;		Unchanged: 0/0
 11389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11390 ;;      Params:         0       0       0       0       0       0       0       0       0
 11391 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11392 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11393 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11394 ;;Total ram usage:        8 bytes
 11395 ;; Hardware stack levels used:    1
 11396 ;; Hardware stack levels required when called:    4
 11397 ;; This function calls:
 11398 ;;		___wmul
 11399 ;;		_escribe_eeprom
 11400 ;; This function is called by:
 11401 ;;		_asignarHorarios
 11402 ;;		_setTiempoRegar
 11403 ;; This function uses a non-reentrant model
 11404 ;;
 11405                           
 11406                           	psect	text55
 11407  001A84                     __ptext55:
 11408                           	opt callstack 0
 11409  001A84                     _escribeHorariosMemoria:
 11410                           	opt callstack 24
 11411  001A84                     
 11412                           ;main.c: 253:     int contMemoria = 0;
 11413  001A84  0E00               	movlw	0
 11414  001A86  6E10               	movwf	(escribeHorariosMemoria@contMemoria+1)^0,c
 11415  001A88  0E00               	movlw	0
 11416  001A8A  6E0F               	movwf	escribeHorariosMemoria@contMemoria^0,c
 11417                           
 11418                           ;main.c: 254:     for (int i = 0; i < 24; i++) {
 11419  001A8C  0E00               	movlw	0
 11420  001A8E  6E12               	movwf	(escribeHorariosMemoria@i+1)^0,c
 11421  001A90  0E00               	movlw	0
 11422  001A92  6E11               	movwf	escribeHorariosMemoria@i^0,c
 11423  001A94                     l4154:
 11424                           
 11425                           ;main.c: 255:         escribe_eeprom(contMemoria++, horarios[i].hora);
 11426  001A94  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 11427  001A98  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 11428  001A9C  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 11429  001AA0  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 11430  001AA4  0E00               	movlw	0
 11431  001AA6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11432  001AA8  0E0C               	movlw	12
 11433  001AAA  6E03               	movwf	___wmul@multiplicand^0,c
 11434  001AAC  ECD4  F018         	call	___wmul	;wreg free
 11435  001AB0  0E46               	movlw	low _horarios
 11436  001AB2  2401               	addwf	?___wmul^0,w,c
 11437  001AB4  6ED9               	movwf	fsr2l,c
 11438  001AB6  0E01               	movlw	high _horarios
 11439  001AB8  2002               	addwfc	(?___wmul+1)^0,w,c
 11440  001ABA  6EDA               	movwf	fsr2h,c
 11441  001ABC  50DF               	movf	indf2,w,c
 11442  001ABE  6E09               	movwf	escribe_eeprom@dato^0,c
 11443  001AC0  EC7E  F018         	call	_escribe_eeprom	;wreg free
 11444  001AC4  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 11445  001AC6  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 11446  001AC8                     
 11447                           ;main.c: 257:         for (int j = 0; j < 7; j++) {
 11448  001AC8  0E00               	movlw	0
 11449  001ACA  6E0E               	movwf	(escribeHorariosMemoria@j+1)^0,c
 11450  001ACC  0E00               	movlw	0
 11451  001ACE  6E0D               	movwf	escribeHorariosMemoria@j^0,c
 11452  001AD0                     l4164:
 11453                           
 11454                           ;main.c: 258:             escribe_eeprom(contMemoria++, horarios[i].dias[j]);
 11455  001AD0  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 11456  001AD4  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 11457  001AD8  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 11458  001ADC  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 11459  001AE0  0E00               	movlw	0
 11460  001AE2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11461  001AE4  0E0C               	movlw	12
 11462  001AE6  6E03               	movwf	___wmul@multiplicand^0,c
 11463  001AE8  ECD4  F018         	call	___wmul	;wreg free
 11464  001AEC  0E46               	movlw	low _horarios
 11465  001AEE  6E0B               	movwf	??_escribeHorariosMemoria^0,c
 11466  001AF0  0E01               	movlw	high _horarios
 11467  001AF2  6E0C               	movwf	(??_escribeHorariosMemoria+1)^0,c
 11468  001AF4  0E01               	movlw	1
 11469  001AF6  260B               	addwf	??_escribeHorariosMemoria^0,f,c
 11470  001AF8  0E00               	movlw	0
 11471  001AFA  220C               	addwfc	(??_escribeHorariosMemoria+1)^0,f,c
 11472  001AFC  5001               	movf	?___wmul^0,w,c
 11473  001AFE  260B               	addwf	??_escribeHorariosMemoria^0,f,c
 11474  001B00  5002               	movf	(?___wmul+1)^0,w,c
 11475  001B02  220C               	addwfc	(??_escribeHorariosMemoria+1)^0,f,c
 11476  001B04  500D               	movf	escribeHorariosMemoria@j^0,w,c
 11477  001B06  240B               	addwf	??_escribeHorariosMemoria^0,w,c
 11478  001B08  6ED9               	movwf	fsr2l,c
 11479  001B0A  500E               	movf	(escribeHorariosMemoria@j+1)^0,w,c
 11480  001B0C  200C               	addwfc	(??_escribeHorariosMemoria+1)^0,w,c
 11481  001B0E  6EDA               	movwf	fsr2h,c
 11482  001B10  50DF               	movf	indf2,w,c
 11483  001B12  6E09               	movwf	escribe_eeprom@dato^0,c
 11484  001B14  EC7E  F018         	call	_escribe_eeprom	;wreg free
 11485  001B18  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 11486  001B1A  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 11487  001B1C                     
 11488                           ;main.c: 259:         }
 11489  001B1C  4A0D               	infsnz	escribeHorariosMemoria@j^0,f,c
 11490  001B1E  2A0E               	incf	(escribeHorariosMemoria@j+1)^0,f,c
 11491  001B20  BE0E               	btfsc	(escribeHorariosMemoria@j+1)^0,7,c
 11492  001B22  EF9C  F00D         	goto	u3231
 11493  001B26  500E               	movf	(escribeHorariosMemoria@j+1)^0,w,c
 11494  001B28  E109               	bnz	u3230
 11495  001B2A  0E07               	movlw	7
 11496  001B2C  5C0D               	subwf	escribeHorariosMemoria@j^0,w,c
 11497  001B2E  A0D8               	btfss	status,0,c
 11498  001B30  EF9C  F00D         	goto	u3231
 11499  001B34  EF9E  F00D         	goto	u3230
 11500  001B38                     u3231:
 11501  001B38  EF68  F00D         	goto	l4164
 11502  001B3C                     u3230:
 11503  001B3C                     
 11504                           ;main.c: 261:         escribe_eeprom(contMemoria++, horarios[i].regar);
 11505  001B3C  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 11506  001B40  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 11507  001B44  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 11508  001B48  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 11509  001B4C  0E00               	movlw	0
 11510  001B4E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11511  001B50  0E0C               	movlw	12
 11512  001B52  6E03               	movwf	___wmul@multiplicand^0,c
 11513  001B54  ECD4  F018         	call	___wmul	;wreg free
 11514  001B58  0E4F               	movlw	low (_horarios+9)
 11515  001B5A  2401               	addwf	?___wmul^0,w,c
 11516  001B5C  6ED9               	movwf	fsr2l,c
 11517  001B5E  0E01               	movlw	high (_horarios+9)
 11518  001B60  2002               	addwfc	(?___wmul+1)^0,w,c
 11519  001B62  6EDA               	movwf	fsr2h,c
 11520  001B64  50DF               	movf	indf2,w,c
 11521  001B66  6E09               	movwf	escribe_eeprom@dato^0,c
 11522  001B68  EC7E  F018         	call	_escribe_eeprom	;wreg free
 11523  001B6C  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 11524  001B6E  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 11525  001B70                     
 11526                           ;main.c: 262:         escribe_eeprom(contMemoria++, horarios[i].tiempoRegar);
 11527  001B70  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 11528  001B74  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 11529  001B78  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 11530  001B7C  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 11531  001B80  0E00               	movlw	0
 11532  001B82  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11533  001B84  0E0C               	movlw	12
 11534  001B86  6E03               	movwf	___wmul@multiplicand^0,c
 11535  001B88  ECD4  F018         	call	___wmul	;wreg free
 11536  001B8C  0E51               	movlw	low (_horarios+11)
 11537  001B8E  2401               	addwf	?___wmul^0,w,c
 11538  001B90  6ED9               	movwf	fsr2l,c
 11539  001B92  0E01               	movlw	high (_horarios+11)
 11540  001B94  2002               	addwfc	(?___wmul+1)^0,w,c
 11541  001B96  6EDA               	movwf	fsr2h,c
 11542  001B98  50DF               	movf	indf2,w,c
 11543  001B9A  6E09               	movwf	escribe_eeprom@dato^0,c
 11544  001B9C  EC7E  F018         	call	_escribe_eeprom	;wreg free
 11545  001BA0  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 11546  001BA2  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 11547                           
 11548                           ;main.c: 263:     }
 11549  001BA4  4A11               	infsnz	escribeHorariosMemoria@i^0,f,c
 11550  001BA6  2A12               	incf	(escribeHorariosMemoria@i+1)^0,f,c
 11551  001BA8  BE12               	btfsc	(escribeHorariosMemoria@i+1)^0,7,c
 11552  001BAA  EFE0  F00D         	goto	u3241
 11553  001BAE  5012               	movf	(escribeHorariosMemoria@i+1)^0,w,c
 11554  001BB0  E109               	bnz	u3240
 11555  001BB2  0E18               	movlw	24
 11556  001BB4  5C11               	subwf	escribeHorariosMemoria@i^0,w,c
 11557  001BB6  A0D8               	btfss	status,0,c
 11558  001BB8  EFE0  F00D         	goto	u3241
 11559  001BBC  EFE2  F00D         	goto	u3240
 11560  001BC0                     u3241:
 11561  001BC0  EF4A  F00D         	goto	l4154
 11562  001BC4                     u3240:
 11563  001BC4  0012               	return		;funcret
 11564  001BC6                     __end_of_escribeHorariosMemoria:
 11565                           	opt callstack 0
 11566                           
 11567 ;; *************** function _escribe_eeprom *****************
 11568 ;; Defined at:
 11569 ;;		line 222 in file "main.c"
 11570 ;; Parameters:    Size  Location     Type
 11571 ;;  direccion       2    6[COMRAM] unsigned short 
 11572 ;;  dato            1    8[COMRAM] unsigned char 
 11573 ;; Auto vars:     Size  Location     Type
 11574 ;;		None
 11575 ;; Return value:  Size  Location     Type
 11576 ;;                  1    wreg      void 
 11577 ;; Registers used:
 11578 ;;		wreg, status,2, status,0, cstack
 11579 ;; Tracked objects:
 11580 ;;		On entry : 0/0
 11581 ;;		On exit  : 0/0
 11582 ;;		Unchanged: 0/0
 11583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11584 ;;      Params:         3       0       0       0       0       0       0       0       0
 11585 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11586 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11587 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11588 ;;Total ram usage:        4 bytes
 11589 ;; Hardware stack levels used:    1
 11590 ;; Hardware stack levels required when called:    3
 11591 ;; This function calls:
 11592 ;;		_i2c_detener
 11593 ;;		_i2c_envia_dato
 11594 ;;		_i2c_inicia_com
 11595 ;; This function is called by:
 11596 ;;		_escribeHorariosMemoria
 11597 ;; This function uses a non-reentrant model
 11598 ;;
 11599                           
 11600                           	psect	text56
 11601  0030FC                     __ptext56:
 11602                           	opt callstack 0
 11603  0030FC                     _escribe_eeprom:
 11604                           	opt callstack 24
 11605  0030FC                     
 11606                           ;main.c: 223:     i2c_inicia_com();
 11607  0030FC  EC5B  F019         	call	_i2c_inicia_com	;wreg free
 11608                           
 11609                           ;main.c: 224:     i2c_envia_dato(0xAE);
 11610  003100  0EAE               	movlw	174
 11611  003102  EC41  F019         	call	_i2c_envia_dato
 11612                           
 11613                           ;main.c: 225:     i2c_envia_dato(direccion >> 8);
 11614  003106  5008               	movf	(escribe_eeprom@direccion+1)^0,w,c
 11615  003108  EC41  F019         	call	_i2c_envia_dato
 11616                           
 11617                           ;main.c: 227:     i2c_envia_dato(direccion);
 11618  00310C  5007               	movf	escribe_eeprom@direccion^0,w,c
 11619  00310E  EC41  F019         	call	_i2c_envia_dato
 11620                           
 11621                           ;main.c: 229:     i2c_envia_dato(dato);
 11622  003112  5009               	movf	escribe_eeprom@dato^0,w,c
 11623  003114  EC41  F019         	call	_i2c_envia_dato
 11624                           
 11625                           ;main.c: 230:     i2c_detener();
 11626  003118  EC5F  F019         	call	_i2c_detener	;wreg free
 11627  00311C                     
 11628                           ;main.c: 231:     _delay((unsigned long)((10)*(4000000/4000.0)));
 11629  00311C  0E0D               	movlw	13
 11630  00311E  6E0A               	movwf	??_escribe_eeprom^0,c
 11631  003120  0EFC               	movlw	252
 11632  003122                     u3917:
 11633  003122  2EE8               	decfsz	wreg,f,c
 11634  003124  D7FE               	bra	u3917
 11635  003126  2E0A               	decfsz	??_escribe_eeprom^0,f,c
 11636  003128  D7FC               	bra	u3917
 11637  00312A  0012               	return		;funcret
 11638  00312C                     __end_of_escribe_eeprom:
 11639                           	opt callstack 0
 11640                           
 11641 ;; *************** function _leeHorariosMemoria *****************
 11642 ;; Defined at:
 11643 ;;		line 266 in file "main.c"
 11644 ;; Parameters:    Size  Location     Type
 11645 ;;		None
 11646 ;; Auto vars:     Size  Location     Type
 11647 ;;  j               2    8[COMRAM] int 
 11648 ;;  i               2   12[COMRAM] int 
 11649 ;;  contMemoria     2   10[COMRAM] int 
 11650 ;; Return value:  Size  Location     Type
 11651 ;;                  1    wreg      void 
 11652 ;; Registers used:
 11653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11654 ;; Tracked objects:
 11655 ;;		On entry : 0/0
 11656 ;;		On exit  : 0/0
 11657 ;;		Unchanged: 0/0
 11658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11659 ;;      Params:         0       0       0       0       0       0       0       0       0
 11660 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11661 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11662 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11663 ;;Total ram usage:        8 bytes
 11664 ;; Hardware stack levels used:    1
 11665 ;; Hardware stack levels required when called:    4
 11666 ;; This function calls:
 11667 ;;		___wmul
 11668 ;;		_leer_eeprom
 11669 ;; This function is called by:
 11670 ;;		_main
 11671 ;; This function uses a non-reentrant model
 11672 ;;
 11673                           
 11674                           	psect	text57
 11675  001BC6                     __ptext57:
 11676                           	opt callstack 0
 11677  001BC6                     _leeHorariosMemoria:
 11678                           	opt callstack 26
 11679  001BC6                     
 11680                           ;main.c: 268:     int contMemoria = 0;
 11681  001BC6  0E00               	movlw	0
 11682  001BC8  6E0C               	movwf	(leeHorariosMemoria@contMemoria+1)^0,c
 11683  001BCA  0E00               	movlw	0
 11684  001BCC  6E0B               	movwf	leeHorariosMemoria@contMemoria^0,c
 11685                           
 11686                           ;main.c: 270:     for (int i = 0; i < 24; i++) {
 11687  001BCE  0E00               	movlw	0
 11688  001BD0  6E0E               	movwf	(leeHorariosMemoria@i+1)^0,c
 11689  001BD2  0E00               	movlw	0
 11690  001BD4  6E0D               	movwf	leeHorariosMemoria@i^0,c
 11691  001BD6                     l4654:
 11692                           
 11693                           ;main.c: 271:         horarios[i].hora = leer_eeprom(contMemoria++);
 11694  001BD6  C00D  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
 11695  001BDA  C00E  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
 11696  001BDE  0E00               	movlw	0
 11697  001BE0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11698  001BE2  0E0C               	movlw	12
 11699  001BE4  6E03               	movwf	___wmul@multiplicand^0,c
 11700  001BE6  ECD4  F018         	call	___wmul	;wreg free
 11701  001BEA  0E46               	movlw	low _horarios
 11702  001BEC  2401               	addwf	?___wmul^0,w,c
 11703  001BEE  6ED9               	movwf	fsr2l,c
 11704  001BF0  0E01               	movlw	high _horarios
 11705  001BF2  2002               	addwfc	(?___wmul+1)^0,w,c
 11706  001BF4  6EDA               	movwf	fsr2h,c
 11707  001BF6  C00B  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
 11708  001BFA  C00C  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
 11709  001BFE  ECF6  F017         	call	_leer_eeprom	;wreg free
 11710  001C02  6EDF               	movwf	indf2,c
 11711  001C04  4A0B               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
 11712  001C06  2A0C               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
 11713  001C08                     
 11714                           ;main.c: 273:         for (int j = 0; j < 7; j++) {
 11715  001C08  0E00               	movlw	0
 11716  001C0A  6E0A               	movwf	(leeHorariosMemoria@j+1)^0,c
 11717  001C0C  0E00               	movlw	0
 11718  001C0E  6E09               	movwf	leeHorariosMemoria@j^0,c
 11719  001C10                     l4664:
 11720                           
 11721                           ;main.c: 274:             horarios[i].dias[j] = leer_eeprom(contMemoria++);
 11722  001C10  C00D  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
 11723  001C14  C00E  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
 11724  001C18  0E00               	movlw	0
 11725  001C1A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11726  001C1C  0E0C               	movlw	12
 11727  001C1E  6E03               	movwf	___wmul@multiplicand^0,c
 11728  001C20  ECD4  F018         	call	___wmul	;wreg free
 11729  001C24  0E46               	movlw	low _horarios
 11730  001C26  6E07               	movwf	??_leeHorariosMemoria^0,c
 11731  001C28  0E01               	movlw	high _horarios
 11732  001C2A  6E08               	movwf	(??_leeHorariosMemoria+1)^0,c
 11733  001C2C  0E01               	movlw	1
 11734  001C2E  2607               	addwf	??_leeHorariosMemoria^0,f,c
 11735  001C30  0E00               	movlw	0
 11736  001C32  2208               	addwfc	(??_leeHorariosMemoria+1)^0,f,c
 11737  001C34  5001               	movf	?___wmul^0,w,c
 11738  001C36  2607               	addwf	??_leeHorariosMemoria^0,f,c
 11739  001C38  5002               	movf	(?___wmul+1)^0,w,c
 11740  001C3A  2208               	addwfc	(??_leeHorariosMemoria+1)^0,f,c
 11741  001C3C  5009               	movf	leeHorariosMemoria@j^0,w,c
 11742  001C3E  2407               	addwf	??_leeHorariosMemoria^0,w,c
 11743  001C40  6ED9               	movwf	fsr2l,c
 11744  001C42  500A               	movf	(leeHorariosMemoria@j+1)^0,w,c
 11745  001C44  2008               	addwfc	(??_leeHorariosMemoria+1)^0,w,c
 11746  001C46  6EDA               	movwf	fsr2h,c
 11747  001C48  C00B  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
 11748  001C4C  C00C  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
 11749  001C50  ECF6  F017         	call	_leer_eeprom	;wreg free
 11750  001C54  6EDF               	movwf	indf2,c
 11751  001C56  4A0B               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
 11752  001C58  2A0C               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
 11753  001C5A                     
 11754                           ;main.c: 275:         }
 11755  001C5A  4A09               	infsnz	leeHorariosMemoria@j^0,f,c
 11756  001C5C  2A0A               	incf	(leeHorariosMemoria@j+1)^0,f,c
 11757  001C5E  BE0A               	btfsc	(leeHorariosMemoria@j+1)^0,7,c
 11758  001C60  EF3B  F00E         	goto	u3631
 11759  001C64  500A               	movf	(leeHorariosMemoria@j+1)^0,w,c
 11760  001C66  E109               	bnz	u3630
 11761  001C68  0E07               	movlw	7
 11762  001C6A  5C09               	subwf	leeHorariosMemoria@j^0,w,c
 11763  001C6C  A0D8               	btfss	status,0,c
 11764  001C6E  EF3B  F00E         	goto	u3631
 11765  001C72  EF3D  F00E         	goto	u3630
 11766  001C76                     u3631:
 11767  001C76  EF08  F00E         	goto	l4664
 11768  001C7A                     u3630:
 11769  001C7A                     
 11770                           ;main.c: 277:         horarios[i].regar = leer_eeprom(contMemoria++);
 11771  001C7A  C00D  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
 11772  001C7E  C00E  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
 11773  001C82  0E00               	movlw	0
 11774  001C84  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11775  001C86  0E0C               	movlw	12
 11776  001C88  6E03               	movwf	___wmul@multiplicand^0,c
 11777  001C8A  ECD4  F018         	call	___wmul	;wreg free
 11778  001C8E  0E4F               	movlw	low (_horarios+9)
 11779  001C90  2401               	addwf	?___wmul^0,w,c
 11780  001C92  6ED9               	movwf	fsr2l,c
 11781  001C94  0E01               	movlw	high (_horarios+9)
 11782  001C96  2002               	addwfc	(?___wmul+1)^0,w,c
 11783  001C98  6EDA               	movwf	fsr2h,c
 11784  001C9A  C00B  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
 11785  001C9E  C00C  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
 11786  001CA2  ECF6  F017         	call	_leer_eeprom	;wreg free
 11787  001CA6  6EDF               	movwf	indf2,c
 11788  001CA8  4A0B               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
 11789  001CAA  2A0C               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
 11790  001CAC                     
 11791                           ;main.c: 278:         horarios[i].tiempoRegar = leer_eeprom(contMemoria++);
 11792  001CAC  C00D  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
 11793  001CB0  C00E  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
 11794  001CB4  0E00               	movlw	0
 11795  001CB6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11796  001CB8  0E0C               	movlw	12
 11797  001CBA  6E03               	movwf	___wmul@multiplicand^0,c
 11798  001CBC  ECD4  F018         	call	___wmul	;wreg free
 11799  001CC0  0E51               	movlw	low (_horarios+11)
 11800  001CC2  2401               	addwf	?___wmul^0,w,c
 11801  001CC4  6ED9               	movwf	fsr2l,c
 11802  001CC6  0E01               	movlw	high (_horarios+11)
 11803  001CC8  2002               	addwfc	(?___wmul+1)^0,w,c
 11804  001CCA  6EDA               	movwf	fsr2h,c
 11805  001CCC  C00B  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
 11806  001CD0  C00C  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
 11807  001CD4  ECF6  F017         	call	_leer_eeprom	;wreg free
 11808  001CD8  6EDF               	movwf	indf2,c
 11809  001CDA  4A0B               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
 11810  001CDC  2A0C               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
 11811                           
 11812                           ;main.c: 279:     }
 11813  001CDE  4A0D               	infsnz	leeHorariosMemoria@i^0,f,c
 11814  001CE0  2A0E               	incf	(leeHorariosMemoria@i+1)^0,f,c
 11815  001CE2  BE0E               	btfsc	(leeHorariosMemoria@i+1)^0,7,c
 11816  001CE4  EF7D  F00E         	goto	u3641
 11817  001CE8  500E               	movf	(leeHorariosMemoria@i+1)^0,w,c
 11818  001CEA  E109               	bnz	u3640
 11819  001CEC  0E18               	movlw	24
 11820  001CEE  5C0D               	subwf	leeHorariosMemoria@i^0,w,c
 11821  001CF0  A0D8               	btfss	status,0,c
 11822  001CF2  EF7D  F00E         	goto	u3641
 11823  001CF6  EF7F  F00E         	goto	u3640
 11824  001CFA                     u3641:
 11825  001CFA  EFEB  F00D         	goto	l4654
 11826  001CFE                     u3640:
 11827  001CFE  0012               	return		;funcret
 11828  001D00                     __end_of_leeHorariosMemoria:
 11829                           	opt callstack 0
 11830                           
 11831 ;; *************** function _leer_eeprom *****************
 11832 ;; Defined at:
 11833 ;;		line 234 in file "main.c"
 11834 ;; Parameters:    Size  Location     Type
 11835 ;;  direccion       2    2[COMRAM] unsigned short 
 11836 ;; Auto vars:     Size  Location     Type
 11837 ;;  dato            1    5[COMRAM] unsigned char 
 11838 ;; Return value:  Size  Location     Type
 11839 ;;                  1    wreg      unsigned char 
 11840 ;; Registers used:
 11841 ;;		wreg, status,2, status,0, cstack
 11842 ;; Tracked objects:
 11843 ;;		On entry : 0/0
 11844 ;;		On exit  : 0/0
 11845 ;;		Unchanged: 0/0
 11846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11847 ;;      Params:         2       0       0       0       0       0       0       0       0
 11848 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11849 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11850 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11851 ;;Total ram usage:        4 bytes
 11852 ;; Hardware stack levels used:    1
 11853 ;; Hardware stack levels required when called:    3
 11854 ;; This function calls:
 11855 ;;		_i2c_detener
 11856 ;;		_i2c_envia_dato
 11857 ;;		_i2c_inicia_com
 11858 ;;		_i2c_recibe_dato
 11859 ;;		_i2c_reinicia_com
 11860 ;; This function is called by:
 11861 ;;		_leeHorariosMemoria
 11862 ;; This function uses a non-reentrant model
 11863 ;;
 11864                           
 11865                           	psect	text58
 11866  002FEC                     __ptext58:
 11867                           	opt callstack 0
 11868  002FEC                     _leer_eeprom:
 11869                           	opt callstack 26
 11870  002FEC                     
 11871                           ;main.c: 236:     unsigned char dato;;main.c: 238:     i2c_inicia_com();
 11872  002FEC  EC5B  F019         	call	_i2c_inicia_com	;wreg free
 11873                           
 11874                           ;main.c: 239:     i2c_envia_dato(0xAE);
 11875  002FF0  0EAE               	movlw	174
 11876  002FF2  EC41  F019         	call	_i2c_envia_dato
 11877                           
 11878                           ;main.c: 240:     i2c_envia_dato(direccion >> 8);
 11879  002FF6  5004               	movf	(leer_eeprom@direccion+1)^0,w,c
 11880  002FF8  EC41  F019         	call	_i2c_envia_dato
 11881                           
 11882                           ;main.c: 241:     i2c_envia_dato(direccion);
 11883  002FFC  5003               	movf	leer_eeprom@direccion^0,w,c
 11884  002FFE  EC41  F019         	call	_i2c_envia_dato
 11885                           
 11886                           ;main.c: 242:     i2c_reinicia_com();
 11887  003002  EC57  F019         	call	_i2c_reinicia_com	;wreg free
 11888                           
 11889                           ;main.c: 243:     i2c_envia_dato(0xAF);
 11890  003006  0EAF               	movlw	175
 11891  003008  EC41  F019         	call	_i2c_envia_dato
 11892                           
 11893                           ;main.c: 244:     dato = i2c_recibe_dato();
 11894  00300C  EC16  F019         	call	_i2c_recibe_dato	;wreg free
 11895  003010  6E06               	movwf	leer_eeprom@dato^0,c
 11896                           
 11897                           ;main.c: 245:     i2c_detener();
 11898  003012  EC5F  F019         	call	_i2c_detener	;wreg free
 11899  003016                     
 11900                           ;main.c: 246:     _delay((unsigned long)((10)*(4000000/4000.0)));
 11901  003016  0E0D               	movlw	13
 11902  003018  6E05               	movwf	??_leer_eeprom^0,c
 11903  00301A  0EFC               	movlw	252
 11904  00301C                     u3927:
 11905  00301C  2EE8               	decfsz	wreg,f,c
 11906  00301E  D7FE               	bra	u3927
 11907  003020  2E05               	decfsz	??_leer_eeprom^0,f,c
 11908  003022  D7FC               	bra	u3927
 11909  003024                     
 11910                           ;main.c: 248:     return dato;
 11911  003024  5006               	movf	leer_eeprom@dato^0,w,c
 11912  003026  0012               	return		;funcret
 11913  003028                     __end_of_leer_eeprom:
 11914                           	opt callstack 0
 11915                           
 11916 ;; *************** function _i2c_reinicia_com *****************
 11917 ;; Defined at:
 11918 ;;		line 37 in file "./I2C.h"
 11919 ;; Parameters:    Size  Location     Type
 11920 ;;		None
 11921 ;; Auto vars:     Size  Location     Type
 11922 ;;		None
 11923 ;; Return value:  Size  Location     Type
 11924 ;;                  1    wreg      void 
 11925 ;; Registers used:
 11926 ;;		wreg, status,2, status,0, cstack
 11927 ;; Tracked objects:
 11928 ;;		On entry : 0/0
 11929 ;;		On exit  : 0/0
 11930 ;;		Unchanged: 0/0
 11931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11932 ;;      Params:         0       0       0       0       0       0       0       0       0
 11933 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11934 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11935 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11936 ;;Total ram usage:        0 bytes
 11937 ;; Hardware stack levels used:    1
 11938 ;; Hardware stack levels required when called:    2
 11939 ;; This function calls:
 11940 ;;		_i2c_espera
 11941 ;; This function is called by:
 11942 ;;		_leer_rtc
 11943 ;;		_leer_eeprom
 11944 ;; This function uses a non-reentrant model
 11945 ;;
 11946                           
 11947                           	psect	text59
 11948  0032AE                     __ptext59:
 11949                           	opt callstack 0
 11950  0032AE                     _i2c_reinicia_com:
 11951                           	opt callstack 25
 11952  0032AE                     
 11953                           ;./I2C.h: 38:     i2c_espera();
 11954  0032AE  ECC1  F018         	call	_i2c_espera	;wreg free
 11955  0032B2                     
 11956                           ;./I2C.h: 39:     SSPCON2bits.RSEN = 1;
 11957  0032B2  82C5               	bsf	197,1,c	;volatile
 11958  0032B4  0012               	return		;funcret
 11959  0032B6                     __end_of_i2c_reinicia_com:
 11960                           	opt callstack 0
 11961                           
 11962 ;; *************** function _i2c_recibe_dato *****************
 11963 ;; Defined at:
 11964 ;;		line 68 in file "./I2C.h"
 11965 ;; Parameters:    Size  Location     Type
 11966 ;;		None
 11967 ;; Auto vars:     Size  Location     Type
 11968 ;;  datoleido       1    1[COMRAM] unsigned char 
 11969 ;; Return value:  Size  Location     Type
 11970 ;;                  1    wreg      unsigned char 
 11971 ;; Registers used:
 11972 ;;		wreg, status,2, status,0, cstack
 11973 ;; Tracked objects:
 11974 ;;		On entry : 0/0
 11975 ;;		On exit  : 0/0
 11976 ;;		Unchanged: 0/0
 11977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11978 ;;      Params:         0       0       0       0       0       0       0       0       0
 11979 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11980 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11981 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11982 ;;Total ram usage:        1 bytes
 11983 ;; Hardware stack levels used:    1
 11984 ;; Hardware stack levels required when called:    2
 11985 ;; This function calls:
 11986 ;;		_i2c_espera
 11987 ;; This function is called by:
 11988 ;;		_leer_rtc
 11989 ;;		_leer_eeprom
 11990 ;; This function uses a non-reentrant model
 11991 ;;
 11992                           
 11993                           	psect	text60
 11994  00322C                     __ptext60:
 11995                           	opt callstack 0
 11996  00322C                     _i2c_recibe_dato:
 11997                           	opt callstack 25
 11998  00322C                     
 11999                           ;./I2C.h: 70:     unsigned char datoleido;;./I2C.h: 73:     i2c_espera();
 12000  00322C  ECC1  F018         	call	_i2c_espera	;wreg free
 12001  003230                     
 12002                           ;./I2C.h: 74:     SSPCON2bits.RCEN = 1;
 12003  003230  86C5               	bsf	197,3,c	;volatile
 12004                           
 12005                           ;./I2C.h: 76:     i2c_espera();
 12006  003232  ECC1  F018         	call	_i2c_espera	;wreg free
 12007  003236                     
 12008                           ;./I2C.h: 77:     datoleido = SSPBUF;
 12009  003236  CFC9 F002          	movff	4041,i2c_recibe_dato@datoleido	;volatile
 12010                           
 12011                           ;./I2C.h: 80:     i2c_espera();
 12012  00323A  ECC1  F018         	call	_i2c_espera	;wreg free
 12013  00323E                     
 12014                           ;./I2C.h: 82:     SSPCON2bits.ACKDT = 1;
 12015  00323E  8AC5               	bsf	197,5,c	;volatile
 12016  003240                     
 12017                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
 12018  003240  88C5               	bsf	197,4,c	;volatile
 12019  003242                     
 12020                           ;./I2C.h: 91:     return datoleido;
 12021  003242  5002               	movf	i2c_recibe_dato@datoleido^0,w,c
 12022  003244  0012               	return		;funcret
 12023  003246                     __end_of_i2c_recibe_dato:
 12024                           	opt callstack 0
 12025                           
 12026 ;; *************** function _i2c_inicia_com *****************
 12027 ;; Defined at:
 12028 ;;		line 28 in file "./I2C.h"
 12029 ;; Parameters:    Size  Location     Type
 12030 ;;		None
 12031 ;; Auto vars:     Size  Location     Type
 12032 ;;		None
 12033 ;; Return value:  Size  Location     Type
 12034 ;;                  1    wreg      void 
 12035 ;; Registers used:
 12036 ;;		wreg, status,2, status,0, cstack
 12037 ;; Tracked objects:
 12038 ;;		On entry : 0/0
 12039 ;;		On exit  : 0/0
 12040 ;;		Unchanged: 0/0
 12041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12042 ;;      Params:         0       0       0       0       0       0       0       0       0
 12043 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12044 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12045 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12046 ;;Total ram usage:        0 bytes
 12047 ;; Hardware stack levels used:    1
 12048 ;; Hardware stack levels required when called:    2
 12049 ;; This function calls:
 12050 ;;		_i2c_espera
 12051 ;; This function is called by:
 12052 ;;		_escribe_rtc
 12053 ;;		_leer_rtc
 12054 ;;		_escribe_eeprom
 12055 ;;		_leer_eeprom
 12056 ;; This function uses a non-reentrant model
 12057 ;;
 12058                           
 12059                           	psect	text61
 12060  0032B6                     __ptext61:
 12061                           	opt callstack 0
 12062  0032B6                     _i2c_inicia_com:
 12063                           	opt callstack 25
 12064  0032B6                     
 12065                           ;./I2C.h: 29:     i2c_espera();
 12066  0032B6  ECC1  F018         	call	_i2c_espera	;wreg free
 12067  0032BA                     
 12068                           ;./I2C.h: 30:     SSPCON2bits.SEN = 1;
 12069  0032BA  80C5               	bsf	197,0,c	;volatile
 12070  0032BC  0012               	return		;funcret
 12071  0032BE                     __end_of_i2c_inicia_com:
 12072                           	opt callstack 0
 12073                           
 12074 ;; *************** function _i2c_envia_dato *****************
 12075 ;; Defined at:
 12076 ;;		line 57 in file "./I2C.h"
 12077 ;; Parameters:    Size  Location     Type
 12078 ;;  dato            1    wreg     unsigned char 
 12079 ;; Auto vars:     Size  Location     Type
 12080 ;;  dato            1    1[COMRAM] unsigned char 
 12081 ;; Return value:  Size  Location     Type
 12082 ;;                  1    wreg      unsigned char 
 12083 ;; Registers used:
 12084 ;;		wreg, status,2, status,0, cstack
 12085 ;; Tracked objects:
 12086 ;;		On entry : 0/0
 12087 ;;		On exit  : 0/0
 12088 ;;		Unchanged: 0/0
 12089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12090 ;;      Params:         0       0       0       0       0       0       0       0       0
 12091 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12092 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12093 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12094 ;;Total ram usage:        1 bytes
 12095 ;; Hardware stack levels used:    1
 12096 ;; Hardware stack levels required when called:    2
 12097 ;; This function calls:
 12098 ;;		_i2c_espera
 12099 ;; This function is called by:
 12100 ;;		_escribe_rtc
 12101 ;;		_leer_rtc
 12102 ;;		_escribe_eeprom
 12103 ;;		_leer_eeprom
 12104 ;; This function uses a non-reentrant model
 12105 ;;
 12106                           
 12107                           	psect	text62
 12108  003282                     __ptext62:
 12109                           	opt callstack 0
 12110  003282                     _i2c_envia_dato:
 12111                           	opt callstack 25
 12112                           
 12113                           ;incstack = 0
 12114                           ;i2c_envia_dato@dato stored from wreg
 12115  003282  6E02               	movwf	i2c_envia_dato@dato^0,c
 12116  003284                     
 12117                           ;./I2C.h: 58:     i2c_espera();
 12118  003284  ECC1  F018         	call	_i2c_espera	;wreg free
 12119  003288                     
 12120                           ;./I2C.h: 59:     SSPBUF = dato;
 12121  003288  C002  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
 12122  00328C  0012               	return		;funcret
 12123  00328E                     __end_of_i2c_envia_dato:
 12124                           	opt callstack 0
 12125                           
 12126 ;; *************** function _i2c_detener *****************
 12127 ;; Defined at:
 12128 ;;		line 46 in file "./I2C.h"
 12129 ;; Parameters:    Size  Location     Type
 12130 ;;		None
 12131 ;; Auto vars:     Size  Location     Type
 12132 ;;		None
 12133 ;; Return value:  Size  Location     Type
 12134 ;;                  1    wreg      void 
 12135 ;; Registers used:
 12136 ;;		wreg, status,2, status,0, cstack
 12137 ;; Tracked objects:
 12138 ;;		On entry : 0/0
 12139 ;;		On exit  : 0/0
 12140 ;;		Unchanged: 0/0
 12141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12142 ;;      Params:         0       0       0       0       0       0       0       0       0
 12143 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12144 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12145 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12146 ;;Total ram usage:        0 bytes
 12147 ;; Hardware stack levels used:    1
 12148 ;; Hardware stack levels required when called:    2
 12149 ;; This function calls:
 12150 ;;		_i2c_espera
 12151 ;; This function is called by:
 12152 ;;		_escribe_rtc
 12153 ;;		_leer_rtc
 12154 ;;		_escribe_eeprom
 12155 ;;		_leer_eeprom
 12156 ;; This function uses a non-reentrant model
 12157 ;;
 12158                           
 12159                           	psect	text63
 12160  0032BE                     __ptext63:
 12161                           	opt callstack 0
 12162  0032BE                     _i2c_detener:
 12163                           	opt callstack 25
 12164  0032BE                     
 12165                           ;./I2C.h: 47:     i2c_espera();
 12166  0032BE  ECC1  F018         	call	_i2c_espera	;wreg free
 12167  0032C2                     
 12168                           ;./I2C.h: 48:     SSPCON2bits.PEN = 1;
 12169  0032C2  84C5               	bsf	197,2,c	;volatile
 12170  0032C4  0012               	return		;funcret
 12171  0032C6                     __end_of_i2c_detener:
 12172                           	opt callstack 0
 12173                           
 12174 ;; *************** function _i2c_espera *****************
 12175 ;; Defined at:
 12176 ;;		line 20 in file "./I2C.h"
 12177 ;; Parameters:    Size  Location     Type
 12178 ;;		None
 12179 ;; Auto vars:     Size  Location     Type
 12180 ;;		None
 12181 ;; Return value:  Size  Location     Type
 12182 ;;                  1    wreg      void 
 12183 ;; Registers used:
 12184 ;;		wreg, status,2, status,0
 12185 ;; Tracked objects:
 12186 ;;		On entry : 0/0
 12187 ;;		On exit  : 0/0
 12188 ;;		Unchanged: 0/0
 12189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12190 ;;      Params:         0       0       0       0       0       0       0       0       0
 12191 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12192 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12193 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12194 ;;Total ram usage:        1 bytes
 12195 ;; Hardware stack levels used:    1
 12196 ;; Hardware stack levels required when called:    1
 12197 ;; This function calls:
 12198 ;;		Nothing
 12199 ;; This function is called by:
 12200 ;;		_i2c_inicia_com
 12201 ;;		_i2c_reinicia_com
 12202 ;;		_i2c_detener
 12203 ;;		_i2c_envia_dato
 12204 ;;		_i2c_recibe_dato
 12205 ;; This function uses a non-reentrant model
 12206 ;;
 12207                           
 12208                           	psect	text64
 12209  003182                     __ptext64:
 12210                           	opt callstack 0
 12211  003182                     _i2c_espera:
 12212                           	opt callstack 25
 12213  003182                     l3544:
 12214  003182  CFC5 F001          	movff	4037,??_i2c_espera	;volatile
 12215  003186  0E1F               	movlw	31
 12216  003188  1601               	andwf	??_i2c_espera^0,f,c
 12217  00318A  A4D8               	btfss	status,2,c
 12218  00318C  EFCA  F018         	goto	u2521
 12219  003190  EFCC  F018         	goto	u2520
 12220  003194                     u2521:
 12221  003194  EFC1  F018         	goto	l3544
 12222  003198                     u2520:
 12223  003198  B4C7               	btfsc	199,2,c	;volatile
 12224  00319A  EFD1  F018         	goto	u2531
 12225  00319E  EFD3  F018         	goto	u2530
 12226  0031A2                     u2531:
 12227  0031A2  EFC1  F018         	goto	l3544
 12228  0031A6                     u2530:
 12229  0031A6  0012               	return		;funcret
 12230  0031A8                     __end_of_i2c_espera:
 12231                           	opt callstack 0
 12232                           
 12233 ;; *************** function _inicializarObjetos *****************
 12234 ;; Defined at:
 12235 ;;		line 162 in file "main.c"
 12236 ;; Parameters:    Size  Location     Type
 12237 ;;		None
 12238 ;; Auto vars:     Size  Location     Type
 12239 ;;  j               2    8[COMRAM] int 
 12240 ;;  i               2   10[COMRAM] int 
 12241 ;;  i               2   12[COMRAM] int 
 12242 ;; Return value:  Size  Location     Type
 12243 ;;                  1    wreg      void 
 12244 ;; Registers used:
 12245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12246 ;; Tracked objects:
 12247 ;;		On entry : 0/0
 12248 ;;		On exit  : 0/0
 12249 ;;		Unchanged: 0/0
 12250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12251 ;;      Params:         0       0       0       0       0       0       0       0       0
 12252 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12253 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12254 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12255 ;;Total ram usage:        8 bytes
 12256 ;; Hardware stack levels used:    1
 12257 ;; Hardware stack levels required when called:    2
 12258 ;; This function calls:
 12259 ;;		___wmul
 12260 ;; This function is called by:
 12261 ;;		_main
 12262 ;; This function uses a non-reentrant model
 12263 ;;
 12264                           
 12265                           	psect	text65
 12266  00166E                     __ptext65:
 12267                           	opt callstack 0
 12268  00166E                     _inicializarObjetos:
 12269                           	opt callstack 28
 12270  00166E                     
 12271                           ;main.c: 164:     for (int i = 0; i < 24; i++) {
 12272  00166E  0E00               	movlw	0
 12273  001670  6E0E               	movwf	(inicializarObjetos@i+1)^0,c
 12274  001672  0E00               	movlw	0
 12275  001674  6E0D               	movwf	inicializarObjetos@i^0,c
 12276  001676                     l4618:
 12277                           
 12278                           ;main.c: 165:         horarios[i].hora = i;
 12279  001676  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 12280  00167A  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 12281  00167E  0E00               	movlw	0
 12282  001680  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12283  001682  0E0C               	movlw	12
 12284  001684  6E03               	movwf	___wmul@multiplicand^0,c
 12285  001686  ECD4  F018         	call	___wmul	;wreg free
 12286  00168A  0E46               	movlw	low _horarios
 12287  00168C  2401               	addwf	?___wmul^0,w,c
 12288  00168E  6ED9               	movwf	fsr2l,c
 12289  001690  0E01               	movlw	high _horarios
 12290  001692  2002               	addwfc	(?___wmul+1)^0,w,c
 12291  001694  6EDA               	movwf	fsr2h,c
 12292  001696  C00D  FFDF         	movff	inicializarObjetos@i,indf2
 12293                           
 12294                           ;main.c: 166:         horarios[i].regar = 0;
 12295  00169A  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 12296  00169E  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 12297  0016A2  0E00               	movlw	0
 12298  0016A4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12299  0016A6  0E0C               	movlw	12
 12300  0016A8  6E03               	movwf	___wmul@multiplicand^0,c
 12301  0016AA  ECD4  F018         	call	___wmul	;wreg free
 12302  0016AE  0E4F               	movlw	low (_horarios+9)
 12303  0016B0  2401               	addwf	?___wmul^0,w,c
 12304  0016B2  6ED9               	movwf	fsr2l,c
 12305  0016B4  0E01               	movlw	high (_horarios+9)
 12306  0016B6  2002               	addwfc	(?___wmul+1)^0,w,c
 12307  0016B8  6EDA               	movwf	fsr2h,c
 12308  0016BA  0E00               	movlw	0
 12309  0016BC  6EDF               	movwf	indf2,c
 12310                           
 12311                           ;main.c: 167:         horarios[i].regado = 0;
 12312  0016BE  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 12313  0016C2  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 12314  0016C6  0E00               	movlw	0
 12315  0016C8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12316  0016CA  0E0C               	movlw	12
 12317  0016CC  6E03               	movwf	___wmul@multiplicand^0,c
 12318  0016CE  ECD4  F018         	call	___wmul	;wreg free
 12319  0016D2  0E50               	movlw	low (_horarios+10)
 12320  0016D4  2401               	addwf	?___wmul^0,w,c
 12321  0016D6  6ED9               	movwf	fsr2l,c
 12322  0016D8  0E01               	movlw	high (_horarios+10)
 12323  0016DA  2002               	addwfc	(?___wmul+1)^0,w,c
 12324  0016DC  6EDA               	movwf	fsr2h,c
 12325  0016DE  0E00               	movlw	0
 12326  0016E0  6EDF               	movwf	indf2,c
 12327                           
 12328                           ;main.c: 168:         horarios[i].tiempoRegar = 15;
 12329  0016E2  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 12330  0016E6  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 12331  0016EA  0E00               	movlw	0
 12332  0016EC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12333  0016EE  0E0C               	movlw	12
 12334  0016F0  6E03               	movwf	___wmul@multiplicand^0,c
 12335  0016F2  ECD4  F018         	call	___wmul	;wreg free
 12336  0016F6  0E51               	movlw	low (_horarios+11)
 12337  0016F8  2401               	addwf	?___wmul^0,w,c
 12338  0016FA  6ED9               	movwf	fsr2l,c
 12339  0016FC  0E01               	movlw	high (_horarios+11)
 12340  0016FE  2002               	addwfc	(?___wmul+1)^0,w,c
 12341  001700  6EDA               	movwf	fsr2h,c
 12342  001702  0E0F               	movlw	15
 12343  001704  6EDF               	movwf	indf2,c
 12344  001706                     
 12345                           ;main.c: 169:     }
 12346  001706  4A0D               	infsnz	inicializarObjetos@i^0,f,c
 12347  001708  2A0E               	incf	(inicializarObjetos@i+1)^0,f,c
 12348  00170A  BE0E               	btfsc	(inicializarObjetos@i+1)^0,7,c
 12349  00170C  EF91  F00B         	goto	u3601
 12350  001710  500E               	movf	(inicializarObjetos@i+1)^0,w,c
 12351  001712  E109               	bnz	u3600
 12352  001714  0E18               	movlw	24
 12353  001716  5C0D               	subwf	inicializarObjetos@i^0,w,c
 12354  001718  A0D8               	btfss	status,0,c
 12355  00171A  EF91  F00B         	goto	u3601
 12356  00171E  EF93  F00B         	goto	u3600
 12357  001722                     u3601:
 12358  001722  EF3B  F00B         	goto	l4618
 12359  001726                     u3600:
 12360  001726                     
 12361                           ;main.c: 171:     for (int i = 0; i < 24; i++) {
 12362  001726  0E00               	movlw	0
 12363  001728  6E0C               	movwf	(inicializarObjetos@i_806+1)^0,c
 12364  00172A  0E00               	movlw	0
 12365  00172C  6E0B               	movwf	inicializarObjetos@i_806^0,c
 12366  00172E                     l4630:
 12367                           
 12368                           ;main.c: 173:         for (int j = 0; j < 7; j++)
 12369  00172E  0E00               	movlw	0
 12370  001730  6E0A               	movwf	(inicializarObjetos@j+1)^0,c
 12371  001732  0E00               	movlw	0
 12372  001734  6E09               	movwf	inicializarObjetos@j^0,c
 12373  001736                     l4636:
 12374                           
 12375                           ;main.c: 174:             horarios[i].dias[j] = 0;
 12376  001736  C00B  F001         	movff	inicializarObjetos@i_806,___wmul@multiplier
 12377  00173A  C00C  F002         	movff	inicializarObjetos@i_806+1,___wmul@multiplier+1
 12378  00173E  0E00               	movlw	0
 12379  001740  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12380  001742  0E0C               	movlw	12
 12381  001744  6E03               	movwf	___wmul@multiplicand^0,c
 12382  001746  ECD4  F018         	call	___wmul	;wreg free
 12383  00174A  0E46               	movlw	low _horarios
 12384  00174C  6E07               	movwf	??_inicializarObjetos^0,c
 12385  00174E  0E01               	movlw	high _horarios
 12386  001750  6E08               	movwf	(??_inicializarObjetos+1)^0,c
 12387  001752  0E01               	movlw	1
 12388  001754  2607               	addwf	??_inicializarObjetos^0,f,c
 12389  001756  0E00               	movlw	0
 12390  001758  2208               	addwfc	(??_inicializarObjetos+1)^0,f,c
 12391  00175A  5001               	movf	?___wmul^0,w,c
 12392  00175C  2607               	addwf	??_inicializarObjetos^0,f,c
 12393  00175E  5002               	movf	(?___wmul+1)^0,w,c
 12394  001760  2208               	addwfc	(??_inicializarObjetos+1)^0,f,c
 12395  001762  5009               	movf	inicializarObjetos@j^0,w,c
 12396  001764  2407               	addwf	??_inicializarObjetos^0,w,c
 12397  001766  6ED9               	movwf	fsr2l,c
 12398  001768  500A               	movf	(inicializarObjetos@j+1)^0,w,c
 12399  00176A  2008               	addwfc	(??_inicializarObjetos+1)^0,w,c
 12400  00176C  6EDA               	movwf	fsr2h,c
 12401  00176E  0E00               	movlw	0
 12402  001770  6EDF               	movwf	indf2,c
 12403  001772  4A09               	infsnz	inicializarObjetos@j^0,f,c
 12404  001774  2A0A               	incf	(inicializarObjetos@j+1)^0,f,c
 12405  001776  BE0A               	btfsc	(inicializarObjetos@j+1)^0,7,c
 12406  001778  EFC7  F00B         	goto	u3611
 12407  00177C  500A               	movf	(inicializarObjetos@j+1)^0,w,c
 12408  00177E  E109               	bnz	u3610
 12409  001780  0E07               	movlw	7
 12410  001782  5C09               	subwf	inicializarObjetos@j^0,w,c
 12411  001784  A0D8               	btfss	status,0,c
 12412  001786  EFC7  F00B         	goto	u3611
 12413  00178A  EFC9  F00B         	goto	u3610
 12414  00178E                     u3611:
 12415  00178E  EF9B  F00B         	goto	l4636
 12416  001792                     u3610:
 12417  001792                     
 12418                           ;main.c: 176:         horarios[i].dias[7] = '\0';
 12419  001792  C00B  F001         	movff	inicializarObjetos@i_806,___wmul@multiplier
 12420  001796  C00C  F002         	movff	inicializarObjetos@i_806+1,___wmul@multiplier+1
 12421  00179A  0E00               	movlw	0
 12422  00179C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12423  00179E  0E0C               	movlw	12
 12424  0017A0  6E03               	movwf	___wmul@multiplicand^0,c
 12425  0017A2  ECD4  F018         	call	___wmul	;wreg free
 12426  0017A6  0E4E               	movlw	low (_horarios+8)
 12427  0017A8  2401               	addwf	?___wmul^0,w,c
 12428  0017AA  6ED9               	movwf	fsr2l,c
 12429  0017AC  0E01               	movlw	high (_horarios+8)
 12430  0017AE  2002               	addwfc	(?___wmul+1)^0,w,c
 12431  0017B0  6EDA               	movwf	fsr2h,c
 12432  0017B2  0E00               	movlw	0
 12433  0017B4  6EDF               	movwf	indf2,c
 12434  0017B6                     
 12435                           ;main.c: 177:     }
 12436  0017B6  4A0B               	infsnz	inicializarObjetos@i_806^0,f,c
 12437  0017B8  2A0C               	incf	(inicializarObjetos@i_806+1)^0,f,c
 12438  0017BA  BE0C               	btfsc	(inicializarObjetos@i_806+1)^0,7,c
 12439  0017BC  EFE9  F00B         	goto	u3621
 12440  0017C0  500C               	movf	(inicializarObjetos@i_806+1)^0,w,c
 12441  0017C2  E109               	bnz	u3620
 12442  0017C4  0E18               	movlw	24
 12443  0017C6  5C0B               	subwf	inicializarObjetos@i_806^0,w,c
 12444  0017C8  A0D8               	btfss	status,0,c
 12445  0017CA  EFE9  F00B         	goto	u3621
 12446  0017CE  EFEB  F00B         	goto	u3620
 12447  0017D2                     u3621:
 12448  0017D2  EF97  F00B         	goto	l4630
 12449  0017D6                     u3620:
 12450  0017D6  0012               	return		;funcret
 12451  0017D8                     __end_of_inicializarObjetos:
 12452                           	opt callstack 0
 12453                           
 12454 ;; *************** function ___wmul *****************
 12455 ;; Defined at:
 12456 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 12457 ;; Parameters:    Size  Location     Type
 12458 ;;  multiplier      2    0[COMRAM] unsigned int 
 12459 ;;  multiplicand    2    2[COMRAM] unsigned int 
 12460 ;; Auto vars:     Size  Location     Type
 12461 ;;  product         2    4[COMRAM] unsigned int 
 12462 ;; Return value:  Size  Location     Type
 12463 ;;                  2    0[COMRAM] unsigned int 
 12464 ;; Registers used:
 12465 ;;		wreg, status,2, status,0, prodl, prodh
 12466 ;; Tracked objects:
 12467 ;;		On entry : 0/0
 12468 ;;		On exit  : 0/0
 12469 ;;		Unchanged: 0/0
 12470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12471 ;;      Params:         4       0       0       0       0       0       0       0       0
 12472 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12473 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12474 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12475 ;;Total ram usage:        6 bytes
 12476 ;; Hardware stack levels used:    1
 12477 ;; Hardware stack levels required when called:    1
 12478 ;; This function calls:
 12479 ;;		Nothing
 12480 ;; This function is called by:
 12481 ;;		_inicializarObjetos
 12482 ;;		_escribeHorariosMemoria
 12483 ;;		_leeHorariosMemoria
 12484 ;;		_dameDatosSistema
 12485 ;;		_atoi
 12486 ;; This function uses a non-reentrant model
 12487 ;;
 12488                           
 12489                           	psect	text66
 12490  0031A8                     __ptext66:
 12491                           	opt callstack 0
 12492  0031A8                     ___wmul:
 12493                           	opt callstack 23
 12494  0031A8  5001               	movf	___wmul@multiplier^0,w,c
 12495  0031AA  0203               	mulwf	___wmul@multiplicand^0,c
 12496  0031AC  CFF3 F005          	movff	prodl,___wmul@product
 12497  0031B0  CFF4 F006          	movff	prodh,___wmul@product+1
 12498  0031B4  5001               	movf	___wmul@multiplier^0,w,c
 12499  0031B6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 12500  0031B8  50F3               	movf	243,w,c
 12501  0031BA  2606               	addwf	(___wmul@product+1)^0,f,c
 12502  0031BC  5002               	movf	(___wmul@multiplier+1)^0,w,c
 12503  0031BE  0203               	mulwf	___wmul@multiplicand^0,c
 12504  0031C0  50F3               	movf	243,w,c
 12505  0031C2  2606               	addwf	(___wmul@product+1)^0,f,c
 12506  0031C4  C005  F001         	movff	___wmul@product,?___wmul
 12507  0031C8  C006  F002         	movff	___wmul@product+1,?___wmul+1
 12508  0031CC  0012               	return		;funcret
 12509  0031CE                     __end_of___wmul:
 12510                           	opt callstack 0
 12511                           
 12512 ;; *************** function _i2c_iniciar *****************
 12513 ;; Defined at:
 12514 ;;		line 4 in file "./I2C.h"
 12515 ;; Parameters:    Size  Location     Type
 12516 ;;		None
 12517 ;; Auto vars:     Size  Location     Type
 12518 ;;		None
 12519 ;; Return value:  Size  Location     Type
 12520 ;;                  1    wreg      void 
 12521 ;; Registers used:
 12522 ;;		wreg, status,2
 12523 ;; Tracked objects:
 12524 ;;		On entry : 0/0
 12525 ;;		On exit  : 0/0
 12526 ;;		Unchanged: 0/0
 12527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12528 ;;      Params:         0       0       0       0       0       0       0       0       0
 12529 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12530 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12531 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12532 ;;Total ram usage:        0 bytes
 12533 ;; Hardware stack levels used:    1
 12534 ;; Hardware stack levels required when called:    1
 12535 ;; This function calls:
 12536 ;;		Nothing
 12537 ;; This function is called by:
 12538 ;;		_main
 12539 ;; This function uses a non-reentrant model
 12540 ;;
 12541                           
 12542                           	psect	text67
 12543  00325C                     __ptext67:
 12544                           	opt callstack 0
 12545  00325C                     _i2c_iniciar:
 12546                           	opt callstack 29
 12547  00325C                     
 12548                           ;./I2C.h: 5:     TRISBbits.RB0 = 1;
 12549  00325C  8093               	bsf	147,0,c	;volatile
 12550                           
 12551                           ;./I2C.h: 6:     TRISBbits.RB1 = 1;
 12552  00325E  8293               	bsf	147,1,c	;volatile
 12553  003260                     
 12554                           ;./I2C.h: 7:     SSPSTAT = 0b10000000;
 12555  003260  0E80               	movlw	128
 12556  003262  6EC7               	movwf	199,c	;volatile
 12557                           
 12558                           ;./I2C.h: 8:     SSPCON1 = 0b00101000;
 12559  003264  0E28               	movlw	40
 12560  003266  6EC6               	movwf	198,c	;volatile
 12561                           
 12562                           ;./I2C.h: 9:     SSPCON2 = 0b00000000;
 12563  003268  0E00               	movlw	0
 12564  00326A  6EC5               	movwf	197,c	;volatile
 12565                           
 12566                           ;./I2C.h: 10:     SSPADD = 9;
 12567  00326C  0E09               	movlw	9
 12568  00326E  6EC8               	movwf	200,c	;volatile
 12569  003270  0012               	return		;funcret
 12570  003272                     __end_of_i2c_iniciar:
 12571                           	opt callstack 0
 12572                           
 12573 ;; *************** function _configurarAdc *****************
 12574 ;; Defined at:
 12575 ;;		line 143 in file "main.c"
 12576 ;; Parameters:    Size  Location     Type
 12577 ;;		None
 12578 ;; Auto vars:     Size  Location     Type
 12579 ;;		None
 12580 ;; Return value:  Size  Location     Type
 12581 ;;                  1    wreg      void 
 12582 ;; Registers used:
 12583 ;;		wreg, status,2
 12584 ;; Tracked objects:
 12585 ;;		On entry : 0/0
 12586 ;;		On exit  : 0/0
 12587 ;;		Unchanged: 0/0
 12588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12589 ;;      Params:         0       0       0       0       0       0       0       0       0
 12590 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12591 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12592 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12593 ;;Total ram usage:        0 bytes
 12594 ;; Hardware stack levels used:    1
 12595 ;; Hardware stack levels required when called:    1
 12596 ;; This function calls:
 12597 ;;		Nothing
 12598 ;; This function is called by:
 12599 ;;		_main
 12600 ;; This function uses a non-reentrant model
 12601 ;;
 12602                           
 12603                           	psect	text68
 12604  0032A4                     __ptext68:
 12605                           	opt callstack 0
 12606  0032A4                     _configurarAdc:
 12607                           	opt callstack 29
 12608  0032A4                     
 12609                           ;main.c: 144:     ADCON1 = 0b00000000;
 12610  0032A4  0E00               	movlw	0
 12611  0032A6  6EC1               	movwf	193,c	;volatile
 12612                           
 12613                           ;main.c: 145:     ADCON2 = 0b10100101;
 12614  0032A8  0EA5               	movlw	165
 12615  0032AA  6EC0               	movwf	192,c	;volatile
 12616  0032AC  0012               	return		;funcret
 12617  0032AE                     __end_of_configurarAdc:
 12618                           	opt callstack 0
 12619                           
 12620 ;; *************** function _UART_init *****************
 12621 ;; Defined at:
 12622 ;;		line 12 in file "./UART.h"
 12623 ;; Parameters:    Size  Location     Type
 12624 ;;  BAUD            4   26[COMRAM] long 
 12625 ;; Auto vars:     Size  Location     Type
 12626 ;;  frecuenciaCr    4    0        long 
 12627 ;; Return value:  Size  Location     Type
 12628 ;;                  1    wreg      void 
 12629 ;; Registers used:
 12630 ;;		wreg, status,2, status,0, cstack
 12631 ;; Tracked objects:
 12632 ;;		On entry : 0/0
 12633 ;;		On exit  : 0/0
 12634 ;;		Unchanged: 0/0
 12635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12636 ;;      Params:         4       0       0       0       0       0       0       0       0
 12637 ;;      Locals:         8       0       0       0       0       0       0       0       0
 12638 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12639 ;;      Totals:        12       0       0       0       0       0       0       0       0
 12640 ;;Total ram usage:       12 bytes
 12641 ;; Hardware stack levels used:    1
 12642 ;; Hardware stack levels required when called:    2
 12643 ;; This function calls:
 12644 ;;		___aldiv
 12645 ;; This function is called by:
 12646 ;;		_main
 12647 ;; This function uses a non-reentrant model
 12648 ;;
 12649                           
 12650                           	psect	text69
 12651  002A26                     __ptext69:
 12652                           	opt callstack 0
 12653  002A26                     _UART_init:
 12654                           	opt callstack 28
 12655  002A26                     
 12656                           ;./UART.h: 14:     TRISCbits.TRISC6 = 0;
 12657  002A26  9C94               	bcf	148,6,c	;volatile
 12658  002A28                     
 12659                           ;./UART.h: 15:     TRISCbits.TRISC7 = 1;
 12660  002A28  8E94               	bsf	148,7,c	;volatile
 12661  002A2A                     
 12662                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 12663  002A2A  0E10               	movlw	16
 12664  002A2C  6E11               	movwf	___aldiv@divisor^0,c
 12665  002A2E  0E00               	movlw	0
 12666  002A30  6E12               	movwf	(___aldiv@divisor+1)^0,c
 12667  002A32  0E00               	movlw	0
 12668  002A34  6E13               	movwf	(___aldiv@divisor+2)^0,c
 12669  002A36  0E00               	movlw	0
 12670  002A38  6E14               	movwf	(___aldiv@divisor+3)^0,c
 12671  002A3A  0E00               	movlw	0
 12672  002A3C  6E0D               	movwf	___aldiv@dividend^0,c
 12673  002A3E  0E09               	movlw	9
 12674  002A40  6E0E               	movwf	(___aldiv@dividend+1)^0,c
 12675  002A42  0E3D               	movlw	61
 12676  002A44  6E0F               	movwf	(___aldiv@dividend+2)^0,c
 12677  002A46  0E00               	movlw	0
 12678  002A48  6E10               	movwf	(___aldiv@dividend+3)^0,c
 12679  002A4A  EC1B  F00F         	call	___aldiv	;wreg free
 12680  002A4E  C00D  F023         	movff	?___aldiv,_UART_init$1911
 12681  002A52  C00E  F024         	movff	?___aldiv+1,_UART_init$1911+1
 12682  002A56  C00F  F025         	movff	?___aldiv+2,_UART_init$1911+2
 12683  002A5A  C010  F026         	movff	?___aldiv+3,_UART_init$1911+3
 12684  002A5E                     
 12685                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 12686  002A5E  C023  F00D         	movff	_UART_init$1911,___aldiv@dividend
 12687  002A62  C024  F00E         	movff	_UART_init$1911+1,___aldiv@dividend+1
 12688  002A66  C025  F00F         	movff	_UART_init$1911+2,___aldiv@dividend+2
 12689  002A6A  C026  F010         	movff	_UART_init$1911+3,___aldiv@dividend+3
 12690  002A6E  C01B  F011         	movff	UART_init@BAUD,___aldiv@divisor
 12691  002A72  C01C  F012         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 12692  002A76  C01D  F013         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 12693  002A7A  C01E  F014         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 12694  002A7E  EC1B  F00F         	call	___aldiv	;wreg free
 12695  002A82  040D               	decf	?___aldiv^0,w,c
 12696  002A84  6EAF               	movwf	175,c	;volatile
 12697  002A86                     
 12698                           ;./UART.h: 21:     TXSTAbits.BRGH = 1;
 12699  002A86  84AC               	bsf	172,2,c	;volatile
 12700  002A88                     
 12701                           ;./UART.h: 22:     TXSTAbits.SYNC = 0;
 12702  002A88  98AC               	bcf	172,4,c	;volatile
 12703  002A8A                     
 12704                           ;./UART.h: 23:     RCSTAbits.SPEN = 1;
 12705  002A8A  8EAB               	bsf	171,7,c	;volatile
 12706  002A8C                     
 12707                           ;./UART.h: 26:     TXSTAbits.TX9 = 0;
 12708  002A8C  9CAC               	bcf	172,6,c	;volatile
 12709  002A8E                     
 12710                           ;./UART.h: 27:     TXSTAbits.TXEN = 1;
 12711  002A8E  8AAC               	bsf	172,5,c	;volatile
 12712  002A90                     
 12713                           ;./UART.h: 30:     RCSTAbits.RC9 = 0;
 12714  002A90  9CAB               	bcf	171,6,c	;volatile
 12715  002A92                     
 12716                           ;./UART.h: 31:     RCSTAbits.CREN = 1;
 12717  002A92  88AB               	bsf	171,4,c	;volatile
 12718  002A94  0012               	return		;funcret
 12719  002A96                     __end_of_UART_init:
 12720                           	opt callstack 0
 12721                           
 12722 ;; *************** function ___aldiv *****************
 12723 ;; Defined at:
 12724 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 12725 ;; Parameters:    Size  Location     Type
 12726 ;;  dividend        4   12[COMRAM] long 
 12727 ;;  divisor         4   16[COMRAM] long 
 12728 ;; Auto vars:     Size  Location     Type
 12729 ;;  quotient        4   22[COMRAM] long 
 12730 ;;  sign            1   21[COMRAM] unsigned char 
 12731 ;;  counter         1   20[COMRAM] unsigned char 
 12732 ;; Return value:  Size  Location     Type
 12733 ;;                  4   12[COMRAM] long 
 12734 ;; Registers used:
 12735 ;;		wreg, status,2, status,0
 12736 ;; Tracked objects:
 12737 ;;		On entry : 0/0
 12738 ;;		On exit  : 0/0
 12739 ;;		Unchanged: 0/0
 12740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12741 ;;      Params:         8       0       0       0       0       0       0       0       0
 12742 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12743 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12744 ;;      Totals:        14       0       0       0       0       0       0       0       0
 12745 ;;Total ram usage:       14 bytes
 12746 ;; Hardware stack levels used:    1
 12747 ;; Hardware stack levels required when called:    1
 12748 ;; This function calls:
 12749 ;;		Nothing
 12750 ;; This function is called by:
 12751 ;;		_UART_init
 12752 ;;		_map
 12753 ;; This function uses a non-reentrant model
 12754 ;;
 12755                           
 12756                           	psect	text70
 12757  001E36                     __ptext70:
 12758                           	opt callstack 0
 12759  001E36                     ___aldiv:
 12760                           	opt callstack 26
 12761  001E36  0E00               	movlw	0
 12762  001E38  6E16               	movwf	___aldiv@sign^0,c
 12763  001E3A  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
 12764  001E3C  EF24  F00F         	goto	u2880
 12765  001E40  EF22  F00F         	goto	u2881
 12766  001E44                     u2881:
 12767  001E44  EF2E  F00F         	goto	l3796
 12768  001E48                     u2880:
 12769  001E48  1E14               	comf	(___aldiv@divisor+3)^0,f,c
 12770  001E4A  1E13               	comf	(___aldiv@divisor+2)^0,f,c
 12771  001E4C  1E12               	comf	(___aldiv@divisor+1)^0,f,c
 12772  001E4E  6C11               	negf	___aldiv@divisor^0,c
 12773  001E50  0E00               	movlw	0
 12774  001E52  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
 12775  001E54  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
 12776  001E56  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
 12777  001E58  0E01               	movlw	1
 12778  001E5A  6E16               	movwf	___aldiv@sign^0,c
 12779  001E5C                     l3796:
 12780  001E5C  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
 12781  001E5E  EF35  F00F         	goto	u2890
 12782  001E62  EF33  F00F         	goto	u2891
 12783  001E66                     u2891:
 12784  001E66  EF3F  F00F         	goto	l3802
 12785  001E6A                     u2890:
 12786  001E6A  1E10               	comf	(___aldiv@dividend+3)^0,f,c
 12787  001E6C  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
 12788  001E6E  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
 12789  001E70  6C0D               	negf	___aldiv@dividend^0,c
 12790  001E72  0E00               	movlw	0
 12791  001E74  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
 12792  001E76  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
 12793  001E78  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
 12794  001E7A  0E01               	movlw	1
 12795  001E7C  1A16               	xorwf	___aldiv@sign^0,f,c
 12796  001E7E                     l3802:
 12797  001E7E  0E00               	movlw	0
 12798  001E80  6E17               	movwf	___aldiv@quotient^0,c
 12799  001E82  0E00               	movlw	0
 12800  001E84  6E18               	movwf	(___aldiv@quotient+1)^0,c
 12801  001E86  0E00               	movlw	0
 12802  001E88  6E19               	movwf	(___aldiv@quotient+2)^0,c
 12803  001E8A  0E00               	movlw	0
 12804  001E8C  6E1A               	movwf	(___aldiv@quotient+3)^0,c
 12805  001E8E  5011               	movf	___aldiv@divisor^0,w,c
 12806  001E90  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
 12807  001E92  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
 12808  001E94  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
 12809  001E96  B4D8               	btfsc	status,2,c
 12810  001E98  EF50  F00F         	goto	u2901
 12811  001E9C  EF52  F00F         	goto	u2900
 12812  001EA0                     u2901:
 12813  001EA0  EF88  F00F         	goto	l3824
 12814  001EA4                     u2900:
 12815  001EA4  0E01               	movlw	1
 12816  001EA6  6E15               	movwf	___aldiv@counter^0,c
 12817  001EA8  EF5C  F00F         	goto	l3810
 12818  001EAC                     l3808:
 12819  001EAC  90D8               	bcf	status,0,c
 12820  001EAE  3611               	rlcf	___aldiv@divisor^0,f,c
 12821  001EB0  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
 12822  001EB2  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
 12823  001EB4  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
 12824  001EB6  2A15               	incf	___aldiv@counter^0,f,c
 12825  001EB8                     l3810:
 12826  001EB8  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
 12827  001EBA  EF61  F00F         	goto	u2911
 12828  001EBE  EF63  F00F         	goto	u2910
 12829  001EC2                     u2911:
 12830  001EC2  EF56  F00F         	goto	l3808
 12831  001EC6                     u2910:
 12832  001EC6                     l3812:
 12833  001EC6  90D8               	bcf	status,0,c
 12834  001EC8  3617               	rlcf	___aldiv@quotient^0,f,c
 12835  001ECA  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
 12836  001ECC  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
 12837  001ECE  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
 12838  001ED0  5011               	movf	___aldiv@divisor^0,w,c
 12839  001ED2  5C0D               	subwf	___aldiv@dividend^0,w,c
 12840  001ED4  5012               	movf	(___aldiv@divisor+1)^0,w,c
 12841  001ED6  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
 12842  001ED8  5013               	movf	(___aldiv@divisor+2)^0,w,c
 12843  001EDA  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
 12844  001EDC  5014               	movf	(___aldiv@divisor+3)^0,w,c
 12845  001EDE  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
 12846  001EE0  A0D8               	btfss	status,0,c
 12847  001EE2  EF75  F00F         	goto	u2921
 12848  001EE6  EF77  F00F         	goto	u2920
 12849  001EEA                     u2921:
 12850  001EEA  EF80  F00F         	goto	l3820
 12851  001EEE                     u2920:
 12852  001EEE  5011               	movf	___aldiv@divisor^0,w,c
 12853  001EF0  5E0D               	subwf	___aldiv@dividend^0,f,c
 12854  001EF2  5012               	movf	(___aldiv@divisor+1)^0,w,c
 12855  001EF4  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
 12856  001EF6  5013               	movf	(___aldiv@divisor+2)^0,w,c
 12857  001EF8  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
 12858  001EFA  5014               	movf	(___aldiv@divisor+3)^0,w,c
 12859  001EFC  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
 12860  001EFE  8017               	bsf	___aldiv@quotient^0,0,c
 12861  001F00                     l3820:
 12862  001F00  90D8               	bcf	status,0,c
 12863  001F02  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
 12864  001F04  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
 12865  001F06  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
 12866  001F08  3211               	rrcf	___aldiv@divisor^0,f,c
 12867  001F0A  2E15               	decfsz	___aldiv@counter^0,f,c
 12868  001F0C  EF63  F00F         	goto	l3812
 12869  001F10                     l3824:
 12870  001F10  5016               	movf	___aldiv@sign^0,w,c
 12871  001F12  B4D8               	btfsc	status,2,c
 12872  001F14  EF8E  F00F         	goto	u2931
 12873  001F18  EF90  F00F         	goto	u2930
 12874  001F1C                     u2931:
 12875  001F1C  EF98  F00F         	goto	l3828
 12876  001F20                     u2930:
 12877  001F20  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
 12878  001F22  1E19               	comf	(___aldiv@quotient+2)^0,f,c
 12879  001F24  1E18               	comf	(___aldiv@quotient+1)^0,f,c
 12880  001F26  6C17               	negf	___aldiv@quotient^0,c
 12881  001F28  0E00               	movlw	0
 12882  001F2A  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
 12883  001F2C  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
 12884  001F2E  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
 12885  001F30                     l3828:
 12886  001F30  C017  F00D         	movff	___aldiv@quotient,?___aldiv
 12887  001F34  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
 12888  001F38  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
 12889  001F3C  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
 12890  001F40  0012               	return		;funcret
 12891  001F42                     __end_of___aldiv:
 12892                           	opt callstack 0
 12893                           
 12894 ;; *************** function _desbordamiento *****************
 12895 ;; Defined at:
 12896 ;;		line 105 in file "main.c"
 12897 ;; Parameters:    Size  Location     Type
 12898 ;;		None
 12899 ;; Auto vars:     Size  Location     Type
 12900 ;;		None
 12901 ;; Return value:  Size  Location     Type
 12902 ;;                  1    wreg      void 
 12903 ;; Registers used:
 12904 ;;		wreg, status,2, status,0
 12905 ;; Tracked objects:
 12906 ;;		On entry : 0/0
 12907 ;;		On exit  : 0/0
 12908 ;;		Unchanged: 0/0
 12909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12910 ;;      Params:         0       0       0       0       0       0       0       0       0
 12911 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12912 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12913 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12914 ;;Total ram usage:        0 bytes
 12915 ;; Hardware stack levels used:    1
 12916 ;; This function calls:
 12917 ;;		Nothing
 12918 ;; This function is called by:
 12919 ;;		Interrupt level 2
 12920 ;; This function uses a non-reentrant model
 12921 ;;
 12922                           
 12923                           	psect	intcode
 12924  000008                     __pintcode:
 12925                           	opt callstack 0
 12926  000008                     _desbordamiento:
 12927                           	opt callstack 19
 12928                           
 12929                           ;incstack = 0
 12930  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12931  00000A  EDE5  F015         	call	int_func,f	;refresh shadow registers
 12932                           
 12933                           	psect	intcode_body
 12934  002BCA                     __pintcode_body:
 12935                           	opt callstack 19
 12936  002BCA                     int_func:
 12937                           	opt callstack 19
 12938  002BCA  0006               	pop		; remove dummy address from shadow register refresh
 12939  002BCC                     
 12940                           ;main.c: 107:     if (INTCONbits.TMR0IF) {
 12941  002BCC  A4F2               	btfss	242,2,c	;volatile
 12942  002BCE  EFEB  F015         	goto	i2u377_41
 12943  002BD2  EFED  F015         	goto	i2u377_40
 12944  002BD6                     i2u377_41:
 12945  002BD6  EF08  F016         	goto	i2l4784
 12946  002BDA                     i2u377_40:
 12947  002BDA                     
 12948                           ;main.c: 109:         if (esperandoDatos) {
 12949  002BDA  0100               	movlb	0	; () banked
 12950  002BDC  5189               	movf	_esperandoDatos& (0+255),w,b
 12951  002BDE  B4D8               	btfsc	status,2,c
 12952  002BE0  EFF4  F015         	goto	i2u378_41
 12953  002BE4  EFF6  F015         	goto	i2u378_40
 12954  002BE8                     i2u378_41:
 12955  002BE8  EF01  F016         	goto	i2l4780
 12956  002BEC                     i2u378_40:
 12957  002BEC                     
 12958                           ; BSR set to: 0
 12959                           ;main.c: 111:             tiempoInactividadTrans++;
 12960  002BEC  2B8C               	incf	_tiempoInactividadTrans& (0+255),f,b
 12961  002BEE                     
 12962                           ; BSR set to: 0
 12963                           ;main.c: 113:             if (tiempoInactividadTrans == 1)
 12964  002BEE  058C               	decf	_tiempoInactividadTrans& (0+255),w,b
 12965  002BF0  A4D8               	btfss	status,2,c
 12966  002BF2  EFFD  F015         	goto	i2u379_41
 12967  002BF6  EFFF  F015         	goto	i2u379_40
 12968  002BFA                     i2u379_41:
 12969  002BFA  EF01  F016         	goto	i2l4780
 12970  002BFE                     i2u379_40:
 12971  002BFE                     
 12972                           ; BSR set to: 0
 12973                           ;main.c: 114:                 esperaDatoConcluida = 1;
 12974  002BFE  0E01               	movlw	1
 12975  002C00  6F8A               	movwf	_esperaDatoConcluida& (0+255),b
 12976  002C02                     i2l4780:
 12977                           
 12978                           ; BSR set to: 0
 12979                           ;main.c: 119:         INTCONbits.TMR0IF = 0;
 12980  002C02  94F2               	bcf	242,2,c	;volatile
 12981  002C04                     
 12982                           ; BSR set to: 0
 12983                           ;main.c: 120:         TMR0 = VALOR_TIMER0;
 12984  002C04  C0EB  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
 12985  002C08  C0EC  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
 12986                           
 12987                           ;main.c: 121:         overflowTimer = 1;
 12988  002C0C  0E01               	movlw	1
 12989  002C0E  6F82               	movwf	_overflowTimer& (0+255),b
 12990  002C10                     i2l4784:
 12991                           
 12992                           ;main.c: 125:     if (PIR1bits.RCIF) {
 12993  002C10  AA9E               	btfss	158,5,c	;volatile
 12994  002C12  EF0D  F016         	goto	i2u380_41
 12995  002C16  EF0F  F016         	goto	i2u380_40
 12996  002C1A                     i2u380_41:
 12997  002C1A  EF14  F016         	goto	i2l217
 12998  002C1E                     i2u380_40:
 12999  002C1E                     
 13000                           ;main.c: 127:         byteUart = RCREG;
 13001  002C1E  CFAE F08B          	movff	4014,_byteUart	;volatile
 13002  002C22                     
 13003                           ;main.c: 128:         datoRecibido = 1;
 13004  002C22  0E01               	movlw	1
 13005  002C24  0100               	movlb	0	; () banked
 13006  002C26  6F83               	movwf	_datoRecibido& (0+255),b
 13007  002C28                     i2l217:
 13008  002C28  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13009  002C2A  0011               	retfie		f
 13010  002C2C                     __end_of_desbordamiento:
 13011                           	opt callstack 0
 13012                           
 13013                           	psect	rparam
 13014  0000                     
 13015                           	psect	temp
 13016  00005F                     btemp:
 13017                           	opt callstack 0
 13018  00005F                     	ds	1
 13019  0000                     int$flags	set	btemp
 13020  0000                     wtemp8	set	btemp+1
 13021  0000                     ttemp5	set	btemp+1
 13022  0000                     ttemp6	set	btemp+4
 13023  0000                     ttemp7	set	btemp+8
 13024                           tosu	equ	0xFFF
 13025                           tosh	equ	0xFFE
 13026                           tosl	equ	0xFFD
 13027                           stkptr	equ	0xFFC
 13028                           pclatu	equ	0xFFB
 13029                           pclath	equ	0xFFA
 13030                           pcl	equ	0xFF9
 13031                           tblptru	equ	0xFF8
 13032                           tblptrh	equ	0xFF7
 13033                           tblptrl	equ	0xFF6
 13034                           tablat	equ	0xFF5
 13035                           prodh	equ	0xFF4
 13036                           prodl	equ	0xFF3
 13037                           indf0	equ	0xFEF
 13038                           postinc0	equ	0xFEE
 13039                           postdec0	equ	0xFED
 13040                           preinc0	equ	0xFEC
 13041                           plusw0	equ	0xFEB
 13042                           fsr0h	equ	0xFEA
 13043                           fsr0l	equ	0xFE9
 13044                           wreg	equ	0xFE8
 13045                           indf1	equ	0xFE7
 13046                           postinc1	equ	0xFE6
 13047                           postdec1	equ	0xFE5
 13048                           preinc1	equ	0xFE4
 13049                           plusw1	equ	0xFE3
 13050                           fsr1h	equ	0xFE2
 13051                           fsr1l	equ	0xFE1
 13052                           bsr	equ	0xFE0
 13053                           indf2	equ	0xFDF
 13054                           postinc2	equ	0xFDE
 13055                           postdec2	equ	0xFDD
 13056                           preinc2	equ	0xFDC
 13057                           plusw2	equ	0xFDB
 13058                           fsr2h	equ	0xFDA
 13059                           fsr2l	equ	0xFD9
 13060                           status	equ	0xFD8


Data Sizes:
    Strings     1729
    Constant    0
    Data        11
    BSS         445
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     45     143
    BANK1           256      0      70
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), bufferDias(BANK0[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), bufferDias(BANK0[10]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 53
		 -> STR_48(CODE[45]), STR_47(CODE[29]), STR_46(CODE[32]), STR_45(CODE[45]), 
		 -> STR_44(CODE[29]), STR_43(CODE[32]), STR_41(CODE[24]), STR_40(CODE[25]), 
		 -> STR_39(CODE[24]), STR_38(CODE[27]), STR_37(CODE[24]), STR_36(CODE[23]), 
		 -> STR_35(CODE[25]), STR_34(CODE[53]), STR_19(CODE[51]), STR_12(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 70
		 -> buffer(BANK1[70]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 70
		 -> buffer(BANK1[70]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1582_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 70
		 -> buffer(BANK1[70]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 70
		 -> buffer(BANK1[70]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 53
		 -> STR_48(CODE[45]), STR_47(CODE[29]), STR_46(CODE[32]), STR_45(CODE[45]), 
		 -> STR_44(CODE[29]), STR_43(CODE[32]), STR_41(CODE[24]), STR_40(CODE[25]), 
		 -> STR_39(CODE[24]), STR_38(CODE[27]), STR_37(CODE[24]), STR_36(CODE[23]), 
		 -> STR_35(CODE[25]), STR_34(CODE[53]), STR_19(CODE[51]), STR_12(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 53
		 -> STR_48(CODE[45]), STR_47(CODE[29]), STR_46(CODE[32]), STR_45(CODE[45]), 
		 -> STR_44(CODE[29]), STR_43(CODE[32]), STR_41(CODE[24]), STR_40(CODE[25]), 
		 -> STR_39(CODE[24]), STR_38(CODE[27]), STR_37(CODE[24]), STR_36(CODE[23]), 
		 -> STR_35(CODE[25]), STR_34(CODE[53]), STR_19(CODE[51]), STR_12(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 53
		 -> STR_48(CODE[45]), STR_47(CODE[29]), STR_46(CODE[32]), STR_45(CODE[45]), 
		 -> STR_44(CODE[29]), STR_43(CODE[32]), STR_41(CODE[24]), STR_40(CODE[25]), 
		 -> STR_39(CODE[24]), STR_38(CODE[27]), STR_37(CODE[24]), STR_36(CODE[23]), 
		 -> STR_35(CODE[25]), STR_34(CODE[53]), STR_19(CODE[51]), STR_12(CODE[9]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), bufferDias(BANK0[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), bufferDias(BANK0[10]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), bufferDias(BANK0[10]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 72
		 -> STR_56(CODE[58]), STR_55(CODE[57]), STR_54(CODE[57]), STR_53(CODE[20]), 
		 -> STR_52(CODE[18]), STR_51(CODE[11]), STR_50(CODE[9]), STR_49(CODE[17]), 
		 -> STR_42(CODE[25]), STR_33(CODE[55]), STR_32(CODE[62]), STR_31(CODE[42]), 
		 -> STR_30(CODE[3]), STR_29(CODE[14]), STR_28(CODE[26]), STR_27(CODE[23]), 
		 -> STR_26(CODE[34]), STR_25(CODE[32]), STR_24(CODE[49]), STR_23(CODE[37]), 
		 -> STR_22(CODE[27]), STR_21(CODE[37]), STR_20(CODE[32]), STR_18(CODE[38]), 
		 -> STR_17(CODE[37]), STR_16(CODE[72]), STR_15(CODE[51]), STR_14(CODE[23]), 
		 -> STR_13(CODE[26]), buffer(BANK1[70]), STR_11(CODE[37]), STR_10(CODE[59]), 
		 -> STR_9(CODE[59]), STR_8(CODE[51]), STR_7(CODE[25]), STR_6(CODE[37]), 
		 -> STR_5(CODE[31]), STR_4(CODE[43]), STR_3(CODE[16]), STR_2(CODE[36]), 
		 -> STR_1(CODE[65]), 


Critical Paths under _main in COMRAM

    _encenderBombas->_estaSeco
    _estaSeco->_dameTemperaturaHumedad
    _dameHoraActual->_leer_rtc
    _dameDiaActual->_leer_rtc
    _leer_rtc->_i2c_envia_dato
    _leer_rtc->_i2c_recibe_dato
    _sistemaPrincipal->_asignarHorarios
    _setTiempoRegar->_escribeHorariosMemoria
    _regadoRapido->_getValue
    _mostrarMenu->_UART_printf
    _restablecerDatosSensor->_constructorSensor
    _lecturaAnalogaSensores->_map
    _map->___aldiv
    _dameTemperaturaHumedad->_UART_printf
    _fijaHoraRtc->_setRtc
    _fijaDiaRtc->_setRtc
    _setRtc->_getValue
    _escribe_rtc->_i2c_envia_dato
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _getValue->_UART_printf
    _UART_printf->_UART_write
    _escribeHorariosMemoria->_escribe_eeprom
    _escribe_eeprom->___wmul
    _leeHorariosMemoria->___wmul
    _leeHorariosMemoria->_leer_eeprom
    _leer_eeprom->_i2c_envia_dato
    _leer_eeprom->_i2c_recibe_dato
    _i2c_reinicia_com->_i2c_espera
    _i2c_recibe_dato->_i2c_espera
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera
    _inicializarObjetos->___wmul
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _desbordamiento in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sistemaPrincipal
    _sistemaRegado->_lecturaWifi
    _sistemaPrincipal->_dameDatosSistema
    _mostrarDatosSensoresWIFI->_lecturaWifi
    _lecturaWifi->_sprintf
    _mostrarDatosSensores->_sprintf
    _dameDatosSistema->_sprintf
    _asignarHorarios->_sprintf
    _sprintf->_vfprintf

Critical Paths under _desbordamiento in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _desbordamiento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _desbordamiento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _desbordamiento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _desbordamiento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _desbordamiento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _desbordamiento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _desbordamiento in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  266986
                          _UART_init
                      _configurarAdc
                        _i2c_iniciar
                 _inicializarObjetos
                 _leeHorariosMemoria
                        _mostrarMenu
             _restablecerDatosSensor
                   _sistemaPrincipal
                      _sistemaRegado
 ---------------------------------------------------------------------------------
 (1) _sistemaRegado                                        0     0      0   42839
                      _dameDiaActual
                     _dameHoraActual
                     _encenderBombas
                          _horaRegar
             _lecturaAnalogaSensores
                        _lecturaWifi
                        _mostrarMenu
 ---------------------------------------------------------------------------------
 (2) _horaRegar                                            5     3      2      24
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _encenderBombas                                       5     5      0    5095
                                             14 COMRAM     5     5      0
                           _estaSeco
 ---------------------------------------------------------------------------------
 (3) _estaSeco                                             3     1      2    4820
                                             11 COMRAM     3     1      2
             _dameTemperaturaHumedad
 ---------------------------------------------------------------------------------
 (2) _dameHoraActual                                       0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (2) _dameDiaActual                                        0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (3) _leer_rtc                                             2     2      0      90
                                              2 COMRAM     2     2      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (3) _convertirDato                                        3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _sistemaPrincipal                                     3     3      0  211202
                                             42 BANK0      3     3      0
                        _UART_printf
                    _asignarHorarios
                   _dameDatosSistema
                         _fijaDiaRtc
                        _fijaHoraRtc
               _mostrarDatosSensores
           _mostrarDatosSensoresWIFI
                        _mostrarMenu
                       _regadoRapido
                     _setTiempoRegar
 ---------------------------------------------------------------------------------
 (2) _setTiempoRegar                                       2     2      0   13412
                                             18 COMRAM     2     2      0
                        _UART_printf
             _escribeHorariosMemoria
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _regadoRapido                                         4     4      0    9017
                                             14 COMRAM     4     4      0
                        _UART_printf
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _mostrarMenu                                          0     0      0    3867
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensoresWIFI                             3     3      0   62067
                                             92 COMRAM     1     1      0
                                             32 BANK0      2     2      0
                        _UART_printf
                         _UART_write
             _dameTemperaturaHumedad
                        _lecturaWifi
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaWifi                                          4     4      0   31719
                                             28 BANK0      4     4      0
                        _UART_printf
                          _UART_read
                         _UART_write
                           _getValue
             _restablecerDatosSensor
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _restablecerDatosSensor                               2     2      0     387
                                              4 COMRAM     2     2      0
                  _constructorSensor
 ---------------------------------------------------------------------------------
 (4) _constructorSensor                                    4     0      4     297
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensores                                 3     3      0   32120
                                             92 COMRAM     1     1      0
                                             28 BANK0      2     2      0
                        _UART_printf
                         _UART_write
             _dameTemperaturaHumedad
             _lecturaAnalogaSensores
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaAnalogaSensores                               3     3      0    1772
                                             46 COMRAM     3     3      0
                   _dameHumedadSuelo
                                _map
 ---------------------------------------------------------------------------------
 (3) _map                                                 20     0     20    1660
                                             26 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
                   _dameHumedadSuelo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _dameHumedadSuelo                                     5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _dameTemperaturaHumedad                               8     8      0    4166
                                              3 COMRAM     8     8      0
                     _DHT11_ReadData
                        _DHT11_Start
                        _UART_printf
                     _check_response
 ---------------------------------------------------------------------------------
 (5) _check_response                                       1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fijaHoraRtc                                          0     0      0   10857
                        _UART_printf
                        _escribe_rtc
                             _setRtc
 ---------------------------------------------------------------------------------
 (2) _fijaDiaRtc                                           0     0      0   10411
                        _UART_printf
                             _setRtc
 ---------------------------------------------------------------------------------
 (3) _setRtc                                               4     4      0    6544
                                             14 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                        _escribe_rtc
                           _getValue
 ---------------------------------------------------------------------------------
 (4) _escribe_rtc                                          2     1      1     446
                                              2 COMRAM     2     1      1
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _dameDatosSistema                                    14    14      0   29812
                                             28 BANK0     14    14      0
                        _UART_printf
                         _UART_write
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _asignarHorarios                                      7     7      0   35750
                                             92 COMRAM     2     2      0
                                             28 BANK0      5     5      0
                        _UART_printf
             _escribeHorariosMemoria
                           _getValue
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             22    10     12   22203
                                              6 BANK0     22    10     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   19564
                                             90 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           47    41      6   19174
                                             63 COMRAM    27    21      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5574
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 7     4      3    4145
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3925
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    4376
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _getValue                                            11     9      2    5059
                                              3 COMRAM    11     9      2
                        _UART_printf
                          _UART_read
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2    3867
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _escribeHorariosMemoria                               8     8      0    4374
                                             10 COMRAM     8     8      0
                             ___wmul
                     _escribe_eeprom
 ---------------------------------------------------------------------------------
 (4) _escribe_eeprom                                       4     1      3     696
                                              6 COMRAM     4     1      3
                             ___wmul (ARG)
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (1) _leeHorariosMemoria                                   8     8      0    4094
                                              6 COMRAM     8     8      0
                             ___wmul
                        _leer_eeprom
 ---------------------------------------------------------------------------------
 (2) _leer_eeprom                                          4     2      2     416
                                              2 COMRAM     4     2      2
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_recibe_dato                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializarObjetos                                   8     8      0    3697
                                              6 COMRAM     8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    3383
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     900
                                             26 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     756
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _desbordamiento                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _configurarAdc
   _i2c_iniciar
   _inicializarObjetos
     ___wmul
   _leeHorariosMemoria
     ___wmul
     _leer_eeprom
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
       _i2c_recibe_dato
         _i2c_espera
       _i2c_reinicia_com
         _i2c_espera
   _mostrarMenu
     _UART_printf
       _UART_write
   _restablecerDatosSensor
     _constructorSensor
   _sistemaPrincipal
     _UART_printf
       _UART_write
     _asignarHorarios
       _UART_printf
         _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _dameDatosSistema
       _UART_printf
         _UART_write
       _UART_write
       ___wmul
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _fijaDiaRtc
       _UART_printf
         _UART_write
       _setRtc
         ___awdiv
         ___awmod
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
     _fijaHoraRtc
       _UART_printf
         _UART_write
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
       _setRtc
         ___awdiv
         ___awmod
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
     _mostrarDatosSensores
       _UART_printf
         _UART_write
       _UART_write
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaAnalogaSensores
         _dameHumedadSuelo
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
           _dameHumedadSuelo (ARG)
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _mostrarDatosSensoresWIFI
       _UART_printf
         _UART_write
       _UART_write
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaWifi
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
         _restablecerDatosSensor
           _constructorSensor
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _stoa
                 _fputc
                   _putch
                 _strlen
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _mostrarMenu
       _UART_printf
         _UART_write
     _regadoRapido
       _UART_printf
         _UART_write
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
     _setTiempoRegar
       _UART_printf
         _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
   _sistemaRegado
     _dameDiaActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _dameHoraActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _encenderBombas
       _estaSeco
         _dameTemperaturaHumedad
           _DHT11_ReadData
           _DHT11_Start
           _UART_printf
             _UART_write
           _check_response
     _horaRegar
     _lecturaAnalogaSensores
       _dameHumedadSuelo
       _map
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _dameHumedadSuelo (ARG)
     _lecturaWifi
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
       _restablecerDatosSensor
         _constructorSensor
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _mostrarMenu
       _UART_printf
         _UART_write

 _desbordamiento (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     120      21       14.1%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      46       7       27.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2D      8F       5       89.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     133      20        0.0%
DATA                 0      0     253       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jun 18 21:06:13 2020

                 __size_of_escribe_eeprom 0030                                        l81 3270  
                                      l90 32BC                                        l93 32B4  
                                      l87 31A6                                        l96 32C4  
                                      l99 328C                              ___awdiv@sign 0006  
                          ?_configurarAdc 0001                       ___wmul@multiplicand 0003  
                             __CFG_BORV$3 000000            __end_of_dameTemperaturaHumedad 2840  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                 regadoRapido@tiempoRegar 0011                                       l102 3244  
                                     l111 31EC                                       l105 322A  
                                     l124 2A94                                       l132 2DEA  
                                     l220 29B4                                       l108 3180  
                                     l133 2DEC                                       l150 2C92  
                                     l127 2DB4                                       l311 2B66  
                                     l223 32A2                                       l231 3094  
                                     l136 324C                                       l145 2C88  
                                     l161 320C                                       l226 32AC  
                                     l330 2F26                                       l306 0E3E  
                                     l139 325A                                       l155 2CC2  
                                     l411 2832                                       l251 3280  
                                     l412 283A                                       l324 2712  
                                     l236 28C0                                       l245 17D6  
                                     l405 08F0                                       l413 283E  
                                     l262 312A                                       l158 2CE4  
                                     l166 2FAA                                       l319 1A82  
                                     l255 30FA                                       l327 2F04  
                                     l335 2EE0                                       l272 1BC4  
                                     l440 0EC2                                       l344 2030  
                                     l424 211E                                       l352 293A  
                                     l248 3156                                       l265 3026  
                                     l329 2F12                                       l450 0F6E  
                                     l522 2416                                       l418 21FC  
                                     l531 2D98                                       l259 2A24  
                                     l460 1062                                       l524 2452  
                                     l349 2672                                       l710 1F40  
                                     l470 1D82                                       l631 31CC  
                                     l279 1CFE                                       l519 23D4  
                                     l471 1D88                                       l367 238C  
                                     l383 166C                                       l472 1D8E  
                                     l537 0992                                       l617 0592  
                                     l473 1D94                                       l642 2AEE  
                                     l474 1D9A                                       l539 099A  
                                     l627 2BC0                                       l643 2AFE  
                                     l475 1DA0                                       l580 1500  
                                     l564 13FC                                       l628 2BC8  
                                     l476 1DA6                                       l468 1D7C  
                                     l557 0BD2                                       l566 1404  
                                     l478 1E34                                       l575 14AE  
                                     l576 14F8                                       l745 137A  
                                     l594 010E                                       l758 193A  
                                     l862 2516                                       l875 25C6  
                            __CFG_CPB$OFF 000000                              __CFG_CPD$OFF 000000  
                            __CFG_BOR$OFF 000000                                       _abs 2FAC  
                                     _pad 238E                                       _map 293C  
                            ___awmod@sign 0006                                       prod 000FF3  
                                     wreg 000FE8                  __end_of_dameDatosSistema 08F2  
                            __CFG_LVP$OFF 000000                         ?_i2c_reinicia_com 0001  
                            ?_escribe_rtc 0003                              __CFG_WDT$OFF 000000  
                                    ?_abs 0013                                      l1306 2FE2  
                                    l1340 11F2                                      l1309 2FEA  
                                    l1343 305E                                      l1351 2E90  
                                    l4000 2EEC                                      l1337 11EA  
                                    l4002 2EEE                                      l3300 1238  
                                    l4100 25BE                                      l4004 2F00  
                                    l4020 2EC0                                      l4012 2E92  
                                    l1381 2E3E                                      l3230 224A  
                                    l1366 22C6                                      l3222 21FE  
                                    l1374 2F6A                                      l1390 30CA  
                                    l3310 128E                                      l3302 1258  
                                    l4030 246E                                      l4006 2F02  
                                    l4022 2EC4                                      l4110 31D0  
                                    l1384 32C6                                      l3232 2280  
                                    l3224 2210                                      l3240 2F46  
                                    l3320 1310                                      l3312 12A2  
                                    l3304 125C                                      l3400 093A  
                                    l4040 2494                                      l4032 2472  
                                    l4024 2454                                      l4008 2F14  
                                    l4200 1F80                                      l4112 31D0  
                                    l4104 315A                                      l4120 3060  
                                    l3226 2222                                      l3242 2F4A  
                                    l3250 30BE                                      l3330 135A  
                                    l3322 1312                                      l3314 12B0  
                                    l3306 1268                                      l3410 09A2  
                                    l3402 095A                                      l4050 24CA  
                                    l4042 24A6                                      l4034 2480  
                                    l4026 2458                                      l4018 2E9A  
                                    l4210 1FE4                                      l4202 1F9C  
                                    l4114 31D8                                      l4106 317E  
                                    l4130 308E                                      l4122 3064  
                                    l3500 1064                                      l3228 222C  
                                    l3236 2F28                                      l3244 3096  
                                    l3260 23C0                                      l3324 1324  
                                    l3316 12C2                                      l3308 1286  
                                    l3340 180A                                      l3420 09D8  
                                    l3412 09B4                                      l3404 096A  
                                    l4052 24E0                                      l4044 24AE  
                                    l4060 24F6                                      l4036 2488  
                                    l4028 2466                                      l4140 29E0  
                                    l4220 202E                                      l4212 1FFA  
                                    l4204 1FA8                                      l4116 31EA  
                                    l4124 3068                                      l4300 0CF0  
                                    l3510 10D2                                      l3502 1078  
                                    l3238 2F34                                      l3246 30A2  
                                    l3270 2426                                      l3262 23CC  
                                    l3254 238E                                      l3318 12F0  
                                    l3326 132A                                      l3350 1862  
                                    l3342 180E                                      l3334 17D8  
                                    l3422 09DE                                      l3430 0AD0  
                                    l3414 09C2                                      l3406 096C  
                                    l4062 2506                                      l4054 24E8  
                                    l4046 24B6                                      l4038 248C  
                                    l4070 251C                                      l4142 2A1E  
                                    l4134 29B8                                      l4230 2642  
                                    l4222 25C8                                      l4214 1FFE  
                                    l4206 1FB8                                      l4126 3078  
                                    l4310 0D2C                                      l3280 3028  
                                    l3520 10FA                                      l3512 10D6  
                                    l3504 107C                                      l3248 30A6  
                                    l3272 243A                                      l3264 23E0  
                                    l3256 239E                                      l3328 133A  
                                    l3360 18E4                                      l3352 1876  
                                    l3344 181C                                      l3336 17DC  
                                    l3432 0AEA                                      l3440 0B4C  
                                    l3424 0A60                                      l3416 09C8  
                                    l3408 0986                                      l3600 01B6  
                                    l4064 250E                                      l4056 24EA  
                                    l4048 24C4                                      l4080 254C  
                                    l4072 252A                                      l4144 2A22  
                                    l4136 29C0                                      l4232 2652  
                                    l4216 201A                                      l4208 1FCA  
                                    l4400 26B8                                      l4128 308A  
                                    l4312 0D5C                                      l4304 0CF6  
                                    l4240 2866                                      l4170 1B20  
                                    l4154 1A94                                      l3370 2E40  
                                    l3522 1102                                      l3506 1080  
                                    l3266 23F4                                      l3258 23B2  
                                    l3290 11F4                                      l3354 1884  
                                    l3362 18EA                                      l3346 183C  
                                    l3338 17EA                                      l3450 0B92  
                                    l3442 0B5E                                      l3434 0B08  
                                    l3426 0A66                                      l3418 09D0  
                                    l3610 0240                                      l3602 01C4  
                                    l4058 24F0                                      l4090 2592  
                                    l4082 255E                                      l4074 2532  
                                    l4138 29CE                                      l4234 2656  
                                    l4218 202A                                      l4410 270E  
                                    l4402 26C6                                      l4250 312C  
                                    l4330 0E14                                      l4306 0D26  
                                    l4242 2886                                      l3284 31A8  
                                    l4260 2FEC                                      l4172 1B3C  
                                    l4164 1AD0                                      l4156 1AC4  
                                    l4148 1A84                                      l3700 2D9A  
                                    l3372 2E44                                      l3532 11AA  
                                    l3524 1136                                      l3516 10DC  
                                    l3508 109C                                      l3268 23F8  
                                    l3292 11F8                                      l3364 18FA  
                                    l3356 18B2                                      l3348 185A  
                                    l3276 2FAC                                      l3452 0B9A  
                                    l3444 0B6E                                      l3436 0B22  
                                    l3428 0A6C                                      l3460 138E  
                                    l3620 02D6                                      l3612 024A  
                                    l4420 05B2                                      l4092 259A  
                                    l4084 2566                                      l4076 2536  
                                    l4068 2518                                      l4340 2B00  
                                    l4228 25D0                                      l4180 1F42  
                                    l4500 2090                                      l4412 28C2  
                                    l4404 26D8                                      l4252 3272  
                                    l4332 0E24                                      l4316 0D62  
                                    l4324 0D98                                      l4244 28B6  
                                    l4236 2840                                      l3286 31C4  
                                    l3542 3182                                      l4262 3016  
                                    l4174 1B6C                                      l4166 1B18  
                                    l4158 1AC8                                      l3702 2DC2  
                                    l3374 2E58                                      l3534 11BC  
                                    l3518 10F2                                      l3390 2D70  
                                    l3382 2D40                                      l3294 1206  
                                    l3366 191A                                      l3358 18D2  
                                    l3278 2FC6                                      l3446 0B74  
                                    l3454 0BAA                                      l3438 0B3C  
                                    l3470 13CC                                      l3462 1396  
                                    l3630 0360                                      l3622 02E4  
                                    l3614 0258                                      l3606 020A  
                                    l3550 0012                                      l5070 0670  
                                    l4414 0594                                      l4094 25A0  
                                    l4086 256E                                      l4078 2544  
                                    l4254 30CC                                      l4350 2B5C  
                                    l4342 2B18                                      l4190 1F5A  
                                    l4182 1F44                                      l4510 20EA  
                                    l4502 20A2                                      l4406 26E4  
                                    l4334 0E2A                                      l4318 0D92  
                                    l4326 0DF4                                      l4246 28BA  
                                    l4238 2844                                      l3800 1E7A  
                                    l4600 2A8A                                      l3544 3182  
                                    l4264 3024                                      l4176 1B70  
                                    l4168 1B1C                                      l3712 2C2C  
                                    l3704 2DD2                                      l5080 0FA8  
                                    l3376 2E86                                      l3536 11CE  
                                    l3528 116C                                      l3392 2D74  
                                    l3384 2D54                                      l3296 1226  
                                    l3448 0B86                                      l3480 1440  
                                    l3472 13DA                                      l3464 13A8  
                                    l3640 03F6                                      l3632 0392  
                                    l3616 027C                                      l3608 021C  
                                    l3560 0066                                      l3552 0036  
                                    l4360 1982                                      l4352 193C  
                                    l5072 08A0                                      l4440 0622  
                                    l4416 059A                                      l4088 257C  
                                    l4096 25A6                                      l4256 30D8  
                                    l4344 2B2E                                      l3720 2C8A  
                                    l4520 2124                                      l4192 1F62  
                                    l4184 1F44                                      l4512 20F6  
                                    l4408 26F8                                      l4328 0DF8  
                                    l5064 0DAE                                      l4280 0C1E  
                                    l3810 1EB8                                      l3802 1E7E  
                                    l4602 2A8C                                      l4610 32A4  
                                    l3546 3198                                      l4178 1BA8  
                                    l3714 2C30                                      l3706 2DE2  
                                    l5082 100E                                      l3378 2E8A  
                                    l3386 2D60                                      l3298 122A  
                                    l3490 1490                                      l3482 145E  
                                    l3466 13B0                                      l3458 137C  
                                    l3650 04D0                                      l3642 043E  
                                    l3626 032A                                      l3618 02B6  
                                    l5074 00CE                                      l3562 006A  
                                    l3554 0044                                      l4362 1992  
                                    l4354 1954                                      l4450 075E  
                                    l4442 0686                                      l4434 05FA  
                                    l4426 05BC                                      l4418 05A6  
                                    l4098 25B6                                      l4258 30EE  
                                    l4346 2B3A                                      l3730 2CB4  
                                    l4530 217A                                      l4522 212A  
                                    l4194 1F74                                      l4186 1F48  
                                    l4514 20FC                                      l5066 2348  
                                    l4282 0C4E                                      l4274 0BE4  
                                    l3820 1F00                                      l3812 1EC6  
                                    l3804 1E8E                                      l4604 2A8E  
                                    l4620 1706                                      l4612 166E  
                                    l3548 3248                                      l3716 2C54  
                                    l3708 2DE6                                      l3900 0EBA  
                                    l5076 1120                                      l3388 2D6C  
                                    l3396 08F2                                      l3484 146A  
                                    l3476 1428                                      l3468 13C4  
                                    l3660 0536                                      l3636 03AE  
                                    l3628 033C                                      l3580 009C  
                                    l3572 008C                                      l3564 007C  
                                    l3556 0056                                      l4380 1A12  
                                    l4372 19C4                                      l4364 19A2  
                                    l4356 1964                                      l4460 07D8  
                                    l4444 068A                                      l4436 060E  
                                    l4428 05EC                                      l4452 076A  
                                    l4348 2B50                                      l3732 2CBC  
                                    l4540 21C8                                      l4532 217E  
                                    l4524 2146                                      l4188 1F4E  
                                    l4508 20AA                                      l4516 2118  
                                    l5068 1DC0                                      l4700 2322  
                                    l4292 0C8A                                      l4276 0C14  
                                    l4268 0BD4                                      l3822 1F0A  
                                    l3814 1ED0                                      l3806 1EA4  
                                    l4606 2A90                                      l4630 172E  
                                    l4622 170A                                      l3718 2C58  
                                    l5078 0EF0                                      l3902 0EC6  
                                    l3910 0F06                                      l3398 0912  
                                    l3494 14C2                                      l3486 1488  
                                    l3478 143C                                      l3654 04F0  
                                    l3646 0476                                      l3638 03D2  
                                    l3590 0120                                      l3558 005A  
                                    l3670 055C                                      l4390 1A76  
                                    l4382 1A3E                                      l4374 19E4  
                                    l4366 19BA                                      l4358 1976  
                                    l4462 07FC                                      l4454 0770  
                                    l4446 06A6                                      l3734 2CD0  
                                    l3726 2CA0                                      l3742 31EE  
                                    l3750 2F6C                                      l4542 21D4  
                                    l4526 2152                                      l4518 2120  
                                    l4550 1D0C                                      l4294 0CBA  
                                    l4286 0C54                                      l4278 0C16  
                                    ?_map 001B                                      ?_pad 0011  
                                    l3816 1EEE                                      l3808 1EAC  
                                    l3824 1F10                                      l4608 2A92  
                                    l4640 1776                                      l4624 1726  
                                    l3840 3236                                      l3832 32AE  
                                    l3912 0F0A                                      l3904 0ED2  
                                    l3496 14D6                                      l3488 148C  
                                    l3672 0580                                      l3656 0514  
                                    l3664 0542                                      l3648 049A  
                                    l3592 0144                                      l3584 00A8  
                                    l3576 0094                                      l3568 0084  
                                    l4384 1A42                                      l4376 19F0  
                                    l4464 0820                                      l4456 0790  
                                    l4472 088C                                      l4448 072A  
                                    l3736 2CD2                                      l3728 2CA6  
                                    l3744 31F2                                      l3760 2F9C  
                                    l3752 2F70                                      l4544 21DA  
                                    l4528 216E                                      l4560 1D56  
                                    l4552 1D1E                                      l4392 2674  
                                    l4704 2332                                      l4288 0C84  
                                    l4720 152C                                      l3826 1F20  
                                    l3818 1EFE                                      l4642 1792  
                                    l4618 1676                                      l3690 32C2  
                                    l3842 323E                                      l3834 32B2  
                                    l3930 0F66                                      l3914 0F14  
                                    l3498 14DA                                      l3666 0550  
                                    l3658 0522                                      l3594 017A  
                                    l3586 00FC                                      l3770 2B68  
                                    l4386 1A5E                                      l4378 1A00  
                                    l4466 0844                                      l4458 07B4  
                                    l4474 08DE                                      l3850 3210  
                                    l3738 2CE2                                      l3746 3202  
                                    l3762 2FA4                                      l3754 2F78  
                                    l4546 21F6                                      l4538 2188  
                                    l4490 203C                                      l4570 1E06  
                                    l4562 1D64                                      l4554 1D2A  
                                    l4394 268C                                      l4706 2386  
                                    l4298 0CC0                                      l4730 1568  
                                    l4722 1534                                      l4714 1502  
                                    l4810 2714                                      l3828 1F30  
                                    l4644 17B6                                      l4636 1736  
                                    l3692 3284                                      l3684 32B6  
                                    l3844 3240                                      l3836 322C  
                                    l3932 0F72                                      l3940 0F92  
                                    l3924 0F40                                      l3916 0F18  
                                    l3908 0EDA                                      l3596 0188  
                                    l3588 011E                                      l3772 2B70  
                                    l4388 1A72                                      l4476 08EA  
                                    l4468 0868                                      l3748 320A  
                                    l3756 2F86                                      l3764 2FA8  
                                    l3860 27B0                                      l3780 2AA6  
                                    l3852 293C                                      l4492 2058  
                                    l4572 1E0C                                      l4564 1D76  
                                    l4556 1D38                                      l4548 1D00  
                                    l4396 269A                                      l4708 238A  
                                    l4740 15A0                                      l4732 156C  
                                    l4724 1536                                      l4716 1514  
                                    l4820 272C                                      l4812 271C  
                                    l3790 1E3A                                      l4590 2A28  
                                    l4582 325C                                      l4646 17BA  
                                    l4638 1772                                      l3694 3288  
                                    l3686 32BA                                      l3846 3242  
                                    l3838 3230                                      l4670 1C5E  
                                    l4654 1BD6                                      l3934 0F7E  
                                    l3942 0FC6                                      l3926 0F46  
                                    l3918 0F38                                      l3598 0196  
                                    l3774 2B7E                                      l3758 2F8E  
                                    l3870 2822                                      l3782 2AB4  
                                    l4494 2064                                      l4486 2032  
                                    l4574 1E20                                      l4558 1D4A  
                                    l4398 26AC                                      l4750 15F0  
                                    l4742 15B4                                      l4726 1548  
                                    l4718 1518                                      l4734 1574  
                                    l4830 2750                                      l4822 2740  
                                    l4814 2720                                      l3792 1E48  
                                    l4592 2A2A                                      l4584 3260  
                                    l3688 32BE                                      l3696 328C  
                                    l4672 1C7A                                      l4664 1C10  
                                    l4656 1C04                                      l4648 1BC6  
                                    l3960 105A                                      l3944 0FCA  
                                    l3936 0F8A                                      l3928 0F56  
                                    l3880 0E72                                      l3952 0FF8  
                                    l3872 0E40                                      l3776 2BA4  
                                    l3864 27B4                                      l3856 27AC  
                                    l3784 2AC4                                      l3768 329A  
                                    l4496 2080                                      l4488 2036  
                                    l4568 1DAC                                      l4576 1E28  
                                    l4680 22CC                                      l4760 1642  
                                    l4752 1606                                      l4744 15B8  
                                    l4736 157C                                      l4728 1554  
                                    l4840 2766                                      l4832 2758  
                                    l4824 2744                                      l4816 2724  
                                    l3794 1E58                                      l4594 2A5E  
                                    l4586 2A26                                      l4674 1CA8  
                                    l4666 1C56                                      l4658 1C08  
                                    l3946 0FD4                                      l3954 102C  
                                    l3882 0E76                                      l3874 0E4C  
                                    l3866 27C8                                      l3858 27B0  
                                    l3786 2ACE                                      l3778 2A96  
                                    l4498 208C                                      l4690 22F2  
                                    l4682 22D2                                      l4762 1646  
                                    l4754 1618                                      l4746 15C8  
                                    l4738 1590                                      l4850 2798  
                                    l4842 2778                                      l4834 275A  
                                    l4826 2748                                      l4818 2728  
                                    l3796 1E5C                                      l3788 1E36  
                                    l4596 2A86                                      l4588 2A26  
                                    l4676 1CAC                                      l4668 1C5A  
                                    l3956 103E                                      l3948 0FD8  
                                    l3884 0E7E                                      l3876 0E52  
                                    l3868 27EC                                      l4692 2302  
                                    l4684 22DA                                      l4756 161C  
                                    l4764 164E                                      l4748 15DE  
                                    l4852 27A0                                      l4844 277C  
                                    l4836 275C                                      l4828 274C  
                                    l3798 1E6A                                      l4598 2A88  
                                    l4678 1CE2                                      l3982 30FC  
                                    l3966 1060                                      l3958 104E  
                                    l3894 0E94                                      l3886 0E84  
                                    l3878 0E62                                      l3990 2E08  
                                    l4694 230A                                      l4686 22E2  
                                    l4766 1652                                      l4758 162E  
                                    l4846 2780                                      l4838 2760  
                                    l3984 311C                                      l3896 0E9A  
                                    l3888 0E8C                                      l3992 2E10  
                                    l4696 2312                                      l4688 22EA  
                                    l4768 1668                                      l4848 2786  
                                    l3898 0EAA                                      l3994 2E2C  
                                    l3986 2DEE                                      l4698 231A  
                                    l3988 2E00                                      l3998 2EE4  
                            ?_leer_eeprom 0003                                      STR_1 7985  
                                    STR_2 7D4F                                      STR_3 7FC3  
                                    STR_4 7C1B                                      STR_5 7DF5  
                                    STR_6 7CE0                                      STR_7 7E9B  
                                    STR_8 7B57                                      STR_9 7A04  
                                    u2000 2416                                      u2001 2412  
                                    u2010 2426                                      u2011 2422  
                                    u2100 12F0                                      u2020 2FC6  
                                    u2101 12EC                                      u2021 2FC2  
                                    u2030 3058                                      u2110 133A  
                                    u2031 3052                                      u2111 1336  
                                    u3000 0F34                                      u2040 305A  
                                    u2200 2D54                                      u2120 17EA  
                                    u3001 0F30                                      u2201 2D50  
                                    u2121 17E6                                      u3010 0F56  
                                    u2050 1206                                      u2130 181C  
                                    u2210 0922                                      u3011 0F52  
                                    u2051 1202                                      u2131 1818  
                                    u2211 091C                                      u3020 0F66  
                                    u2060 1238                                      u2140 185A  
                                    u2300 0B22                                      u2220 0924  
                                    u3100 24A6                                      u3021 0F62  
                                    u2061 1234                                      u2141 1856  
                                    u2301 0B1E                                      u3101 24A2  
                                    u3030 0FF4                                      u2150 1884  
                                    u2310 0B3C                                      u2230 093A  
                                    u3110 24C4                                      u3031 0FF0  
                                    u2071 1262                                      u2151 1880  
                                    u2311 0B38                                      u2231 0936  
                                    u3111 24C0                                      u3040 103E  
                                    u2080 1286                                      u2160 18B2  
                                    u2320 0B4C                                      u2240 096A  
                                    u2400 1424                                      u3120 24E0  
                                    u3200 3078                                      _LATD 000F8C  
                                    u3041 103A                                      u2081 1282  
                                    u2161 18AE                                      u2321 0B48  
                                    u2241 0966                                      u2401 1420  
                                    u3121 24DC                                      u3201 3074  
                                    u3050 104E                                      u2090 12B0  
                                    u2170 18FA                                      u2330 0B5E  
                                    u2250 0986                                      u2410 145E  
                                    u3130 2506                                      u3210 308A  
                                    u3051 104A                                      u2091 12AC  
                                    u2171 18F6                                      u2331 0B5A  
                                    u2251 0982                                      u2411 145A  
                                    u3131 2502                                      u3211 3086  
                                    u2180 2E58                                      u2500 11BC  
                                    u2340 0B6E                                      u2260 09B4  
                                    u2420 14AE                                      u3140 252A  
                                    u3220 29E0                                      u3060 2F12  
                                    u3300 2886                                      u2181 2E54  
                                    u2501 11B8                                      u2341 0B6A  
                                    u2261 09B0                                      u2421 14AA  
                                    u3141 2526                                      u3221 29DC  
                                    u3061 2F0E                                      u3301 2882  
                                    u3230 1B3C                                      u2190 2E86  
                                    u2510 11CE                                      u2350 0B86  
                                    u2270 09C2                                      u2430 14BE  
                                    u3150 2544                                      u3070 2EE0  
                                    u3310 28B6                                      u3231 1B38  
                                    u2191 2E82                                      u2511 11CA  
                                    u2351 0B82                                      u2271 09BE  
                                    u2431 14BA                                      u3151 2540  
                                    u3071 2EDC                                      u3311 28B2  
                                    u2520 3198                                      u3240 1BC4  
                                    u2280 0AEA                                      u2440 14F8  
                                    u2600 0204                                      u3080 2466  
                                    u3160 255E                                      u3320 30EE  
                                    u3400 0D92                                      u2521 3194  
                                    u3241 1BC0                                      u2281 0AE6  
                                    u2441 14F4                                      u2361 1386  
                                    u2601 01FE                                      u3081 2462  
                                    u3161 255A                                      u3321 30EA  
                                    u3401 0D8E                                      u2530 31A6  
                                    u2450 109C                                      u2290 0B08  
                                    u2370 13A8                                      u2610 0206  
                                    u3090 2480                                      u3170 257C  
                                    u3250 1F74                                      u3410 0E14  
                                    u3330 0C14                                      u2531 31A2  
                                    u2451 1098                                      u2291 0B04  
                                    u2371 13A4                                      u3091 247C  
                                    u3171 2578                                      u3251 1F70  
                                    u3411 0E10                                      u3331 0C10  
                                    u2540 325A                                      u2460 10D2  
                                    u2380 13DA                                      u2700 03F6  
                                    u2620 021C                                      u3180 2592  
                                    u3260 1FCA                                      u3500 26D8  
                                    u3420 0E24                                      u3340 0C4E  
                                    u2541 3256                                      u2461 10CE  
                                    u2381 13D6                                      u2701 03F2  
                                    u2621 0218                                      u3181 258E  
                                    u3261 1FC6                                      u3501 26D4  
                                    u3421 0E20                                      u3341 0C4A  
                                    u2470 10EE                                      u2390 13F8  
                                    u2710 049A                                      u2630 0240  
                                    u2550 0036                                      u3510 05EC  
                                    u3190 25B6                                      u3430 2B2E  
                                    u3270 201A                                      u3350 0C84  
                                    u2471 10EA                                      u2391 13F4  
                                    u2711 0496                                      u2631 023C  
                                    u2551 0032                                      u3511 05E8  
                                    u3191 25B2                                      u3431 2B2A  
                                    u3271 2016                                      u3351 0C80  
                                    u3600 1726                                      u2480 11A4  
                                    u1920 2210                                      u2720 0514  
                                    u2640 027C                                      u2560 010E  
                                    u3520 06A6                                      u3440 2B50  
                                    u2800 2CB4                                      u3280 2672  
                                    u3360 0CBA                                      u3601 1722  
                                    u2481 119E                                      u1921 220C  
                                    u2721 0510                                      u2641 0278  
                                    u2561 010A                                      u3521 06A2  
                                    u3441 2B4C                                      u2801 2CB0  
                                    u3281 266E                                      u3361 0CB6  
                                    u3610 1792                                      u2730 2DC2  
                                    u2490 11A6                                      u1930 2222  
                                    u2650 0324                                      u2570 011E  
                                    u3450 1976                                      u3530 078C  
                                    u2810 2CD0                                      u3370 0CF0  
                                    u3290 2866                                      u3611 178E  
                                    u2731 2DBE                                      u1931 221E  
                                    u2651 031E                                      u2571 011A  
                                    u3451 1972                                      u3531 0788  
                                    u2811 2CCC                                      u3371 0CEC  
                                    u3291 2862                                      u2900 1EA4  
                                    u3620 17D6                                      u2740 2DD2  
                                    u1940 224A                                      u2660 0326  
                                    u2580 0144                                      u3460 19A2  
                                    u2820 2CE2                                      u3540 20A2  
                                    u3380 0D26                                      u3700 15A0  
                                    u2901 1EA0                                      u3621 17D2  
                                    u2741 2DCE                                      u1941 2246  
                                    u2581 0140                                      u3461 199E  
                                    u2821 2CDE                                      u3541 209E  
                                    u3381 0D22                                      u3701 159C  
                                    u2910 1EC6                                      u3630 1C7A  
                                    u2750 2DE2                                      u1950 2280  
                                    u2670 033C                                      u2590 0188  
                                    u3470 1A12                                      u2830 2F86  
                                    u3550 2118                                      u3390 0D5C  
                                    u3710 15C8                                      u2911 1EC2  
                                    u3631 1C76                                      u2751 2DDE  
                                    u1951 227C                                      u2671 0338  
                                    u2591 0184                                      u3471 1A0E  
                                    u2831 2F82                                      u3551 2114  
                                    u3391 0D58                                      u3711 15C4  
                                    u2920 1EEE                                      u3640 1CFE  
                                    u2760 2C50                                      u1960 2F6A  
                                    u2680 0360                                      u3480 1A5E  
                                    u2840 2F9C                                      u3560 21F6  
                                    u3720 15DE                                      u2921 1EEA  
                                    u3641 1CFA                                      u1961 2F66  
                                    u2681 035C                                      u3481 1A5A  
                                    u2841 2F98                                      u3561 21F2  
                                    u3721 15DA                                      u2930 1F20  
                                    u2770 2C78                                      u1970 30BE  
                                    u2690 03D2                                      u2850 2BC0  
                                    u3570 1D1E                                      u3490 26AC  
                                    u3650 2302                                      u3730 15F0  
                                    u3810 2778                                      u2931 1F1C  
                                    u1971 30BA                                      u2691 03CE  
                                    u2851 2BBC                                      u3571 1D1A  
                                    u3491 26A8                                      u3651 22FE  
                                    u3731 15EC                                      u3811 2774  
                                    u2780 2C88                                      u1980 239E  
                                    u2940 27C8                                      u2860 2AB4  
                                    u3580 1D4A                                      u3740 1606  
                                    u3660 1514                                      u3820 2798  
                                    u2781 2C84                                      u1981 239A  
                                    u2941 27C4                                      u2861 2AB0  
                                    u3581 1D46                                      u3741 1602  
                                    u3661 1510                                      u3821 2794  
                                    u1990 23C0                                      u2790 2CA0  
                                    u2950 2822                                      u2870 2AEE  
                                    u3590 1D76                                      u3750 1618  
                                    u3670 152C                                      u2767 2C46  
                                    u1991 23BC                                      u2791 2C9C  
                                    u2951 281E                                      u2871 2AEA  
                                    u3591 1D72                                      u3751 1614  
                                    u3671 1528                                      u2880 1E48  
                                    u2960 0E62                                      u3760 162E  
                                    u3680 1548                                      u2881 1E44  
                                    u2777 2C6E                                      u2961 0E5E  
                                    u3761 162A                                      u3681 1544  
                                    u2890 1E6A                                      u2970 0E72  
                                    u3690 1590                                      u2891 1E66  
                                    u2971 0E6E                                      u3907 2CA2  
                                    u3691 158C                                      u2980 0EAA  
                                    u3917 3122                                      u2981 0EA6  
                                    u3837 2648                                      u2990 0EBA  
                                    u3927 301C                                      u2991 0EB6  
                                    u3847 2EE6                                      u3857 2F72  
                                    u3867 2F88                                      u3877 2F9E  
                                    u3887 31F8                                      u3897 3206  
                                    _TMR0 000FD6                      _minutosTranscurridos 007C  
                      ??_i2c_reinicia_com 0002                            _check_response 2F6C  
                 escribeHorariosMemoria@i 0011                   escribeHorariosMemoria@j 000D  
                           ??_i2c_detener 0002                                      abs@a 0013  
                                    _dbuf 008D                                      _atoi 1064  
                                    _ctoa 2D40                                      _main 2714  
                                    _dtoa 08F2                                      _hora 0087  
                                    _prec 0074                                      _nout 0070  
                                    pad@i 0018                                      pad@p 0015  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    indf1 000FE7                                      indf2 000FDF  
                                    fsr1l 000FE1                                      pad@w 001A  
                                    map@x 001B                                      fsr2l 000FD9  
                                    _stoa 137C                                      btemp 005F  
                          ?_sistemaRegado 0001                  __size_of_asignarHorarios 0148  
                           ??_i2c_iniciar 0001                                      prodh 000FF4  
                                    prodl 000FF3                                      start 000E  
                ??_restablecerDatosSensor 0005                             __CFG_IESO$OFF 000000  
                        ??_DHT11_ReadData 0001                         _constructorSensor 329A  
                    __size_of_DHT11_Start 0020                              ?_lecturaWifi 0001  
                 __size_of_setTiempoRegar 00A0                             __CFG_MCLRE$ON 000000  
                            ___param_bank 000000                        ?_constructorSensor 0001  
                      setTiempoRegar@hora 0014                        _leeHorariosMemoria 1BC6  
                        ??_encenderBombas 000F                                     ??_abs 0015  
                                   ??_map 002F                                     ??_pad 0017  
                          _i2c_envia_dato 3282                             __CFG_PLLDIV$1 000000  
                          _i2c_inicia_com 32B6                           __end_of___aldiv 1F42  
                         __end_of___aodiv 137C                                     ?_atoi 0008  
                                   ?_ctoa 001C                                     ?_main 0001  
                                   ?_dtoa 001C                           __end_of___aomod 193C  
                           _convertirDato 31CE                           __end_of___awdiv 2518  
                                   STR_10 7A04                                     STR_11 7D05  
                                   STR_12 7FEC                                     STR_20 7D95  
                                   STR_13 7E67                                     STR_21 7CBB  
                                   STR_30 7E7E                                     STR_14 7F47  
                                   STR_22 7E31                                     STR_15 7B57  
                                   STR_23 7D2A                                     STR_31 7C46  
                                   STR_40 7EE6                                     STR_24 7BBD  
                                   STR_32 79C6                                     STR_16 793D  
                                   STR_41 7EFF                                     STR_25 7DB5  
                                   STR_17 7C96                                     STR_33 7AEB  
                                   STR_50 7FF5                                     STR_42 7EB4  
                                   STR_26 7D73                                     STR_18 7C70  
                                   STR_34 7B22                                     STR_51 7FE1  
                                   STR_27 7F5E                                     STR_35 7ECD  
                                   STR_43 7DD5                                     STR_19 7B8A  
                                   STR_52 7FA0                                     STR_36 7F75  
                                   STR_28 7E81                                     STR_44 7E14  
                         __end_of___awmod 25C8                                     STR_29 7FD3  
                                   STR_53 7F8C                                     STR_37 7F17  
                                   STR_45 7BEE                                     STR_46 7DD5  
                                   STR_38 7E4C                                     STR_54 7AB2  
                                   STR_47 7E14                                     STR_39 7F2F  
                                   STR_55 7A79                                     STR_48 7BEE  
                                   STR_56 7A3F                                     STR_49 7FB2  
                     ??_constructorSensor 0005                                     ?_stoa 000A  
                       convertirDato@dato 0002                                     _T0CON 000FD5  
                         ___awdiv@divisor 0003                                     i2l217 2C28  
                     ?_leeHorariosMemoria 0001                           ___awdiv@counter 0005  
                                   _RCREG 000FAE                              vfpfcnvrt@fmt 0042  
                                   _SPBRG 000FAF                             __CFG_USBDIV$1 000000  
                                   _TRISD 000F95                                     _TXREG 000FAD  
                           __CFG_PWRT$OFF 000000                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                     ___lmul@multiplicand 0005                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                        __size_of_UART_init 0070  
                      __size_of_UART_read 0054                                     _flags 0076  
                                   _fputc 21FE                                     _fputs 2F28  
                         __end_of_isdigit 3060                    __end_of_check_response 2FAC  
                             ?_UART_write 0001                                     atoi@n 0015  
                                   pad@fp 0011                                     atoi@s 0008  
                                   _width 0072                                     ctoa@c 001E  
                                   _putch 32C6                                     ctoa@w 001F  
                                   dtoa@d 001E                                     dtoa@i 003E  
                                   dtoa@n 0036                                     dtoa@p 0030  
                                   dtoa@s 0034                                     dtoa@w 0032  
                         __end_of_isspace 2E92                                     tablat 000FF5  
                                   plusw1 000FE3                                     plusw2 000FDB  
                                   stoa@i 0016                                     stoa@l 001E  
                                   stoa@p 001C                                     stoa@s 000C  
       __size_of_mostrarDatosSensoresWIFI 00EE                                     stoa@w 0018  
                                   ttemp5 0060                                     ttemp6 0063  
                                   ttemp7 0067                                     status 000FD8  
               ?_mostrarDatosSensoresWIFI 0001                                     wtemp8 0060  
                         __end_of_sprintf 2E40                        escribe_eeprom@dato 0009  
               __end_of_constructorSensor 32A4                      ??_leeHorariosMemoria 0007  
                          __CFG_ICPRT$OFF 000000                                _i2c_espera 3182  
                        ??_dameHoraActual 0005                           __initialization 2CE6  
                     __end_of_i2c_detener 32C6           __size_of_lecturaAnalogaSensores 00AC  
                  __end_of_i2c_envia_dato 328E                              __end_of_atoi 11F4  
                            __end_of_ctoa 2D9A                              __end_of_main 27AC  
                            __end_of_dtoa 0BD4                  ??_escribeHorariosMemoria 000B  
                         ??_configurarAdc 0001                              __end_of_stoa 1502  
                  __end_of_i2c_inicia_com 32BE                        _inicializarObjetos 166E  
                     __end_of_i2c_iniciar 3272                    sistemaPrincipal@opcion 00E3  
                        _dameHumedadSuelo 2EE2                            ?_convertirDato 0001  
                    __size_of_fijaHoraRtc 0068                                    ??_atoi 000A  
                                  ??_ctoa 001F                                    ??_main 005F  
                                  ??_dtoa 0026                                    ??_stoa 000E  
               setTiempoRegar@tiempoRegar 0013                             __activetblptr 000002  
                     ?_inicializarObjetos 0001                        i2c_envia_dato@dato 0002  
                         __CFG_CCP2MX$OFF 000000                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    ?_fputc 0001  
                                  ?_fputs 000A                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                           ?_check_response 0001  
                        ___awdiv@dividend 0001                    encenderBombas@flagSeco 0011  
                                  ?_putch 0001                        convertirDato@datoR 0003  
                           _horaRegar$803 0005                                    i2l4770 2BCC  
                                  i2l4780 2C02                                    i2l4772 2BDA  
                                  i2l4782 2C04                                    i2l4774 2BEC  
                                  i2l4776 2BEE                                    i2l4784 2C10  
                                  i2l4786 2C1E                                    i2l4778 2BFE  
                                  i2l4788 2C22                           ??_sistemaRegado 005D  
                           vfpfcnvrt@done 0054                                    _SSPADD 000FC8  
                                  _SSPBUF 000FC9                      ??_inicializarObjetos 0007  
         __size_of_restablecerDatosSensor 0050                            __CFG_XINST$OFF 000000  
                        __end_of_getValue 1064                              vfprintf@cfmt 005B  
                __end_of_sistemaPrincipal 238E                            _escribe_eeprom 30FC  
                                  ___lmul 2A96                           ?_i2c_envia_dato 0001  
                               ??___aldiv 0015                                 ??___aodiv 0011  
                               ??___aomod 0011                                    ___wmul 31A8  
                       __end_of_UART_init 2A96                         __end_of_UART_read 2DEE  
                               ??___awdiv 0005                                 ??___awmod 0005  
                       ??_asignarHorarios 005D                          __end_of_leer_rtc 3182  
                         ?_i2c_inicia_com 0001                          __end_of_estaSeco 3096  
                                  _buffer 0100                       __size_of_UART_write 0016  
                            ?_UART_printf 0002                                    clear_0 2D0E  
                                  clear_1 2D20                                    clear_2 2D2C  
                        ___awdiv@quotient 0007                           ___awmod@divisor 0003  
                                  _setRtc 29B6                           ___awmod@counter 0005  
                                  pad@buf 0013                                    ctoa@fp 001C  
                                  dtoa@fp 001C                                    _strlen 3096  
                         _i2c_recibe_dato 322C                    __size_of_dameDiaActual 0010  
                            ?_mostrarMenu 0001                                    fputc@c 0001  
                                  fputs@c 000E                                    fputs@i 000F  
                                  fputs@s 000A                                 ??_isdigit 0003  
                    escribe_rtc@direccion 0004                              __mediumconst 793C  
                               ??_isspace 0003                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                  _lecturaAnalogaSensores 25C8              __end_of_mostrarDatosSensores 21FE  
                                  stoa@cp 001A                                    stoa@fp 000A  
                                  putch@c 0001                          __end_of_vfprintf 2BCA  
                               ??_sprintf 005D                             ?_regadoRapido 0001  
                              __accesstop 0060                   __end_of__initialization 2D32  
                    __size_of_escribe_rtc 001E                           __CFG_PBADEN$OFF 000000  
                    __size_of_leer_eeprom 003C                           __CFG_FOSC$XT_XT 000000  
                             _i2c_detener 32BE                __size_of_constructorSensor 000A  
                           ___rparam_used 000001                               _i2c_iniciar 325C  
                  __end_of_escribe_eeprom 312C                               ?_i2c_espera 0001  
                          _setTiempoRegar 2674                            __pcstackCOMRAM 0001  
                            leer_rtc@dato 0004                              __pidataBANK0 328E  
                    __size_of_lecturaWifi 00F0           __size_of_escribeHorariosMemoria 0142  
                         ??_convertirDato 0001                             __end_of_fputc 22C8  
                           __end_of_fputs 2F6C                             __end_of_putch 32C8  
                  _restablecerDatosSensor 2E92                              _datoRecibido 0083  
                       ?_dameDatosSistema 0001                            ??_regadoRapido 000F  
                                 ??_fputc 0005                                   ??_fputs 000E  
                                 ??_putch 0001                                __pbssBANK0 0060  
                              __pbssBANK1 0100                        ??_dameDatosSistema 00D3  
                 __size_of_desbordamiento 2C24                        __size_of_horaRegar 0082  
                  __end_of_setTiempoRegar 2714                             _dameDiaActual 3272  
       constructorSensor@porcientoHumedad 0003                              lecturaWifi@i 00D5  
                         ?_escribe_eeprom 0007                                _fijaDiaRtc 30CC  
                      _contInterrupciones 0078                 __size_of_i2c_reinicia_com 0008  
                                 ?___lmul 0001                                   ?___wmul 0001  
                              _flagRegado 0080                   __end_of_i2c_recibe_dato 3246  
                                 _ACKSTAT 007E2E                            ___lmul@product 0009  
                                 ?_setRtc 0001                                   ?_strlen 0001  
                              _bufferDias 00AD             dameTemperaturaHumedad@humedad 000A  
                      __size_of_vfpfcnvrt 0582                       __size_of_i2c_espera 0026  
                               ?_getValue 0004                    _escribeHorariosMemoria 1A84  
                                 _SSPCON1 000FC6                                   _SSPCON2 000FC5  
                            ??_UART_write 0001                                   _SSPSTAT 000FC7  
                __end_of_dameHumedadSuelo 2F28                                 ?_leer_rtc 0001  
                               ?_estaSeco 000C                           __CFG_VREGEN$OFF 000000  
                          ?_dameDiaActual 0001                             ??_DHT11_Start 0001  
                         ?_setTiempoRegar 0001                                   _Humedad 007E  
                                 __Hparam 0000                                   __Lparam 0000  
                                 ___aldiv 1E36                                   ___aodiv 11F4  
                                 ___aomod 17D8                                   ___awdiv 2454  
                         __size_of___lmul 006A                      _mostrarDatosSensores 2120  
                                 ___awmod 2518                           __size_of___wmul 0026  
                               ?_vfprintf 00B7                           __CFG_STVREN$OFF 000000  
                             _Temperatura 007F                                   __pcinit 2CE6  
                                 __ramtop 0800                        __end_of_UART_write 325C  
                         __size_of_setRtc 0070                                   __ptext0 2714  
                                 __ptext1 1502                                   __ptext2 2840  
                                 __ptext3 0BD4                                   __ptext4 3060  
                                 __ptext5 312C                                   __ptext6 3272  
                                 __ptext7 3158                                   __ptext8 31CE  
                                 __ptext9 22C8                   check_response@respuesta 0001  
                       __end_of_horaRegar 28C2                                 _T0CONbits 000FD5  
                         __size_of_strlen 0036                      __size_of_UART_printf 005E  
                            __size_of_abs 0040                              __size_of_pad 00C6  
                            __size_of_map 007A                          ??_check_response 0001  
                                 _isdigit 3028                          ___awmod@dividend 0001  
                                 _regando 007B                     regadoRapido@areaRegar 0012  
                        ___aldiv@dividend 000D                                   _isspace 2E40  
                                 _minutos 0086                      __size_of_mostrarMenu 007A  
                                 atoi@neg 000E                                ??_getValue 0006  
                                 _sprintf 2DEE                            __pintcode_body 2BCA  
                    end_of_initialization 2D32                                ??_leer_rtc 0003  
                              ??_estaSeco 000E                                   fputc@fp 0003  
                         _asignarHorarios 193C                             __Lmediumconst 793C  
                                 int_func 2BCA                                   fputs@fp 000C  
                        ??_i2c_envia_dato 0002               __size_of_leeHorariosMemoria 013A  
                        ??_i2c_inicia_com 0002                               ?_fijaDiaRtc 0001  
                        _VALOR_TIMER0UART 00ED                         __end_of_vfpfcnvrt 0594  
                ??_dameTemperaturaHumedad 0004                                 _RCSTAbits 000FAB  
                        ___aldiv@quotient 0017                     ?_mostrarDatosSensores 0001  
                     __end_of_DHT11_Start 320E                                   postdec1 000FE5  
                                 postdec2 000FDD                         ?_sistemaPrincipal 0001  
                 _peticionLecturaSensores 007A                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                           ??_fijaHoraRtc 0013                      __end_of_regadoRapido 1E36  
                        ?_i2c_recibe_dato 0001                                ??_vfprintf 005B  
                           setRtc@datoRtc 0011                     __end_of_configurarAdc 32AE  
                      ??_sistemaPrincipal 00E1                                   strlen@a 0003  
                                 strlen@s 0001                                 _UART_init 2A26  
                              getValue@Rx 000E                                 _UART_read 2D9A  
                               _PORTDbits 000F83                   __size_of_DHT11_ReadData 005C  
                 ?_lecturaAnalogaSensores 0001                             setRtc@seteado 0010  
               dameHumedadSuelo@canalLeer 0005                   lecturaAnalogaSensores@i 0030  
                               _TRISBbits 000F93                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                   __size_of_encenderBombas 026C  
                _mostrarDatosSensoresWIFI 2032                           ??_dameDiaActual 0005  
                              map@out_max 002B                                map@out_min 0027  
                          _desbordamiento 0008                            _esperandoDatos 0089  
                          _UART_init$1911 0023                              ?_i2c_detener 0001  
                   __end_of_sistemaRegado 166E                                 _TXSTAbits 000FAC  
                       dameDatosSistema@i 00DF                         dameDatosSistema@j 00DD  
             __size_of_inicializarObjetos 016A                              ?_i2c_iniciar 0001  
                            ??_i2c_espera 0001                         _MODO_COMUNICACION 0088  
                      DHT11_ReadData@data 0002                          _i2c_reinicia_com 32AE  
                          __end_of___lmul 2B00                               vfpfcnvrt@ap 0044  
                             vfpfcnvrt@cp 0052                               vfpfcnvrt@fp 0040  
                             vfpfcnvrt@ll 004A                            __end_of___wmul 31CE  
                 ?_restablecerDatosSensor 0001            __end_of_lecturaAnalogaSensores 2674  
                              ?_UART_init 001B                                ?_UART_read 0001  
                 __size_of_dameHoraActual 002C                            __end_of_setRtc 2A26  
                     __end_of_fijaHoraRtc 2B68                            __end_of_strlen 30CC  
                     start_initialization 2CE6                              _estaSeco$796 000E  
                             __end_of_abs 2FEC                               __end_of_pad 2454  
                 __end_of_asignarHorarios 1A84                               __end_of_map 29B6  
                     __size_of_fijaDiaRtc 0030         escribeHorariosMemoria@contMemoria 000F  
                  __end_of_desbordamiento 2C2C                        __end_of_i2c_espera 31A8  
                           ??_escribe_rtc 0004                             ??_leer_eeprom 0005  
                        ??_escribe_eeprom 000A                       leeHorariosMemoria@i 000D  
                     leeHorariosMemoria@j 0009                      constructorSensor@pin 0004  
                             _DHT11_Start 31EE                     _dameDatosSistema$1912 00D7  
                   _dameDatosSistema$1913 00D9                     _dameDatosSistema$1914 00DB  
                           ??_lecturaWifi 005D                    ??_mostrarDatosSensores 005D  
                             vfprintf@fmt 00B9                 __size_of_dameDatosSistema 035E  
         __size_of_dameTemperaturaHumedad 0094                                  ??___lmul 0009  
                                ??___wmul 0005            __end_of_restablecerDatosSensor 2EE2  
                             __pdataBANK0 00E4                          __CFG_LPT1OSC$OFF 000000  
                       leer_rtc@direccion 0003                                  ??_setRtc 000F  
                   __end_of_convertirDato 31EE                                  ??_strlen 0003  
                             __pbssBIGRAM 0146                   ?_escribeHorariosMemoria 0001  
                           __pcstackBANK0 00B7                          ___aodiv@dividend 0001  
                         ?_desbordamiento 0001                          ??_setTiempoRegar 0013  
                               _diaActual 0084                   inicializarObjetos@i_806 000B  
                       __size_of_getValue 0224                         ?_dameHumedadSuelo 0001  
                  getValue@datoIncorrecto 0008                         UART_printf@cadena 0002  
                           lecturaWifi@Rx 00D3                                 _atoi$1560 0010  
                               _atoi$1561 0014                                 _atoi$1562 0012  
                      ??_dameHumedadSuelo 0003                         __size_of_leer_rtc 002A  
                       __size_of_estaSeco 0036                       __end_of_escribe_rtc 322C  
                     __end_of_leer_eeprom 3028                     __size_of_regadoRapido 0136  
                               _dtoa$1075 002E                                 __pintcode 0008  
                           __pmediumconst 793C                                  ?___aldiv 000D  
                                ?___aodiv 0001                                  ?___aomod 0001  
                                ?___awdiv 0001                          ___aodiv@quotient 0013  
                                ?___awmod 0001                               _fijaHoraRtc 2B00  
                     __end_of_lecturaWifi 2032                            _DHT11_ReadData 2C8A  
                              setRtc@dato 0012                               ??_UART_init 001F  
                             ??_UART_read 0001                         __size_of_vfprintf 0062  
          __end_of_escribeHorariosMemoria 1BC6                                  ?_isdigit 0001  
                          _encenderBombas 0BD4                                  ?_isspace 0001  
                               _horaRegar 2840            dameTemperaturaHumedad@checkSum 0006  
                  _dameTemperaturaHumedad 27AC                          ?_asignarHorarios 0001  
                                ?_sprintf 00BD                            __size_of_fputc 00CA  
                          __size_of_fputs 0044                              _regadoRapido 1D00  
                          __size_of_putch 0002                           ___aldiv@divisor 0011  
                         ___aldiv@counter 0015                            ___wmul@product 0005  
                                _LATDbits 000F8C                                  _PIE1bits 000F9D  
                    __size_of_i2c_detener 0008                              ??_fijaDiaRtc 0013  
                                _PIR1bits 000F9E                                  i2u380_40 2C1E  
                                i2u380_41 2C1A                                  i2u377_40 2BDA  
                                i2u377_41 2BD6                                  i2u378_40 2BEC  
                                i2u378_41 2BE8                                  i2u379_40 2BFE  
                                i2u379_41 2BFA                   restablecerDatosSensor@i 0005  
                    __size_of_i2c_iniciar 0016                          __CFG_WDTPS$32768 000000  
                  _tiempoInactividadTrans 008C             leeHorariosMemoria@contMemoria 000B  
                     asignarHorarios@hora 00D5                    __end_of_DHT11_ReadData 2CE6  
                               getValue@i 0009                             ??_UART_printf 0004  
                               _vfpfcnvrt 0012                                 map@in_max 0023  
                               map@in_min 001F                                _ADCON0bits 000FC2  
                          _dameHoraActual 312C                         ___wmul@multiplier 0001  
              ??_mostrarDatosSensoresWIFI 005D                    __end_of_encenderBombas 0E40  
                           ??_mostrarMenu 0004                            UART_write@dato 0001  
                              ?_horaRegar 0001                     mostrarDatosSensores@i 00D3  
                            _isspace$1578 0007                 __size_of_sistemaPrincipal 00C6  
                __end_of_i2c_reinicia_com 32B6                                vfpfcnvrt@c 005A  
                      __end_of_fijaDiaRtc 30FC                         ___lmul@multiplier 0001  
                               copy_data0 2CFA                               _escribe_rtc 320E  
                             _leer_eeprom 2FEC                              _VALOR_TIMER0 00EB  
              __end_of_leeHorariosMemoria 1D00                                 estaSeco@s 000C  
                 asignarHorarios@diaRegar 00D4                                  __Hrparam 0000  
                   getValue@numCharacters 0004                              _minutosRegar 007D  
                             _lecturaWifi 1F42                             UART_init@BAUD 001B  
                              vfprintf@ap 00BB                                  __Lrparam 0000  
                              vfprintf@fp 00B7                          _dameDatosSistema 0594  
dameTemperaturaHumedad@temperaturaDecimal 0009                       _esperaDatoConcluida 008A  
                        __size_of___aldiv 010C                           ?_DHT11_ReadData 0001  
                        __size_of___aodiv 0188                          __size_of___aomod 0164  
                        __size_of___awdiv 00C4                    __end_of_dameHoraActual 3158  
                        __size_of___awmod 00B0                                ?_vfpfcnvrt 0040  
                         DHT11_ReadData@i 0001                           ___aodiv@divisor 0009  
                         ___aodiv@counter 0011                           ?_encenderBombas 0001  
                              sprintf@fmt 00BF                  __size_of_i2c_recibe_dato 001A  
                     __end_of_UART_printf 2C8A                          __size_of_isdigit 0038  
                        __size_of_isspace 0052                                  __ptext10 2674  
                                __ptext11 1D00                                  __ptext20 2A96  
                                __ptext12 28C2                                  __ptext21 2EE2  
                                __ptext13 2032                                  __ptext30 2518  
                                __ptext22 27AC                                  __ptext14 1F42  
                                __ptext31 2454                                  __ptext23 2F6C  
                                __ptext15 2E92                                  __ptext40 17D8  
                                __ptext32 0594                                  __ptext24 31EE  
                                __ptext16 329A                                  __ptext41 11F4  
                                __ptext33 193C                                  __ptext25 2C8A  
                                __ptext17 2120                                  __ptext50 3028  
                                __ptext42 2D40                                  __ptext34 2DEE  
                                __ptext26 2B00                                  __ptext18 25C8  
                                __ptext51 0E40                                  __ptext43 238E  
                                __ptext35 2B68                                  __ptext27 30CC  
                                __ptext19 293C                                  __ptext60 322C  
                                __ptext52 2D9A                                  __ptext44 3096  
                                __ptext36 0012                                  __ptext28 29B6  
                                __ptext61 32B6                                  __ptext53 2C2C  
                                __ptext45 2F28                                  __ptext37 137C  
                                __ptext29 320E                                  __ptext70 1E36  
                                __ptext62 3282                                  __ptext54 3246  
                                __ptext46 21FE                                  __ptext38 08F2  
                                __ptext63 32BE                                  __ptext55 1A84  
                                __ptext47 32C6                                  __ptext39 2FAC  
                                __ptext64 3182                                  __ptext56 30FC  
                                __ptext48 1064                                  __ptext65 166E  
                                __ptext57 1BC6                                  __ptext49 2E40  
                                __ptext66 31A8                                  __ptext58 2FEC  
                                __ptext67 325C                                  __ptext59 32AE  
                                __ptext68 32A4                                  __ptext69 2A26  
                                _getValue 0E40                       __end_of_mostrarMenu 293C  
                        __size_of_sprintf 0052                                  _leer_rtc 3158  
                                _estaSeco 3060                __end_of_inicializarObjetos 17D8  
                                _byteUart 008B                    __size_of_configurarAdc 000A  
                lecturaWifi@humedadMedida 00D4                   __size_of_check_response 0040  
                   __end_of_dameDiaActual 3282                       inicializarObjetos@i 000D  
                     inicializarObjetos@j 0009                             __size_of_atoi 0190  
                           __size_of_ctoa 005A                             __size_of_main 0098  
                           __size_of_dtoa 02E2                                  _horarios 0146  
                            ?_DHT11_Start 0001                             __size_of_stoa 0186  
    dameTemperaturaHumedad@humedadDecimal 0008                                  _tempHora 0081  
                                _segundos 0085                                 stoa@F1144 00E4  
                         encenderBombas@i 0012                                  _sensores 0060  
               mostrarDatosSensoresWIFI@i 00D7                                  int$flags 005F  
                                _vfprintf 2B68                           ?_dameHoraActual 0001  
                 __size_of_i2c_envia_dato 000C                             getValue@i_983 000B  
                 __size_of_i2c_inicia_com 0008                  i2c_recibe_dato@datoleido 0002  
                        ___aomod@dividend 0001                     __CFG_CPUDIV$OSC1_PLL2 000000  
                        ??_desbordamiento 0001                            _vfpfcnvrt$1100 0056  
                          _vfpfcnvrt$1101 0058                    __size_of_sistemaRegado 016C  
                              _INTCONbits 000FF2                        constructorSensor@s 0001  
                             ??_horaRegar 0003                   escribe_eeprom@direccion 0007  
                                isdigit@c 0001                                  intlevel2 0000  
                               sprintf@ap 00CB                           escribe_rtc@dato 0003  
                                isspace@c 0001                           setRtc@direccion 000F  
                       asignarHorarios@Rx 00D3             __size_of_mostrarDatosSensores 00DE  
                           _overflowTimer 0082                              ?_fijaHoraRtc 0001  
       dameTemperaturaHumedad@temperatura 000B                           ___aomod@divisor 0009  
                            getValue@dato 000D                 __size_of_dameHumedadSuelo 0046  
                             ??_vfpfcnvrt 0046                                  stoa@nuls 000F  
                         ___aomod@counter 0011                               _UART_printf 2C2C  
                           _configurarAdc 32A4          __end_of_mostrarDatosSensoresWIFI 2120  
                                sprintf@f 00CD                                  sprintf@s 00BD  
                 ?_dameTemperaturaHumedad 0001                               _mostrarMenu 28C2  
                            ___aldiv@sign 0016                          asignarHorarios@i 00D6  
                        _sistemaPrincipal 22C8                           leer_eeprom@dato 0006  
                             _SSPCON2bits 000FC5                                _UART_write 3246  
                            ___aodiv@sign 0012                         ??_i2c_recibe_dato 0002  
                  __size_of_convertirDato 0020                      leer_eeprom@direccion 0003  
                           _sistemaRegado 1502                              ___aomod@sign 0012  
                ??_lecturaAnalogaSensores 002F  
