

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat May 02 00:46:50 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    79  0000                     
    80                           ; Version 2.10
    81                           ; Generated 31/07/2019 GMT
    82                           ; 
    83                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC18F4550 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     
   115                           	psect	idataBANK0
   116  0022FA                     __pidataBANK0:
   117                           	opt callstack 0
   118                           
   119                           ;initializer for _VALOR_TIMER0
   120  0022FA  6769               	dw	26473
   121                           
   122                           ;initializer for _VALOR_TIMER0UART
   123  0022FC  6769               	dw	26473
   124  0000                     _TMR0	set	4054
   125  0000                     _TRISD	set	3989
   126  0000                     _T0CON	set	4053
   127  0000                     _T0CONbits	set	4053
   128  0000                     _LATD	set	3980
   129  0000                     _PIE1bits	set	3997
   130  0000                     _ADRESL	set	4035
   131  0000                     _ADRESH	set	4036
   132  0000                     _ADCON0bits	set	4034
   133  0000                     _ADCON2	set	4032
   134  0000                     _ADCON1	set	4033
   135  0000                     _INTCONbits	set	4082
   136  0000                     _LATDbits	set	3980
   137  0000                     _TRISDbits	set	3989
   138  0000                     _PORTDbits	set	3971
   139  0000                     _TXREG	set	4013
   140  0000                     _RCREG	set	4014
   141  0000                     _PIR1bits	set	3998
   142  0000                     _RCSTAbits	set	4011
   143  0000                     _TXSTAbits	set	4012
   144  0000                     _SPBRG	set	4015
   145  0000                     _TRISCbits	set	3988
   146  0000                     _SSPBUF	set	4041
   147  0000                     _SSPCON2bits	set	4037
   148  0000                     _SSPADD	set	4040
   149  0000                     _SSPCON2	set	4037
   150  0000                     _SSPCON1	set	4038
   151  0000                     _SSPSTAT	set	4039
   152  0000                     _TRISBbits	set	3987
   153  0000                     _ACKSTAT	set	32302
   154                           
   155                           	psect	mediumconst
   156  007BC6                     __pmediumconst:
   157                           	opt callstack 0
   158  007BC6  00                 	db	0
   159  007BC7                     STR_11:
   160  007BC7  0D                 	db	13
   161  007BC8  0A                 	db	10
   162  007BC9  20                 	db	32
   163  007BCA  49                 	db	73	;'I'
   164  007BCB  6E                 	db	110	;'n'
   165  007BCC  67                 	db	103	;'g'
   166  007BCD  72                 	db	114	;'r'
   167  007BCE  65                 	db	101	;'e'
   168  007BCF  73                 	db	115	;'s'
   169  007BD0  65                 	db	101	;'e'
   170  007BD1  20                 	db	32
   171  007BD2  6C                 	db	108	;'l'
   172  007BD3  6F                 	db	111	;'o'
   173  007BD4  73                 	db	115	;'s'
   174  007BD5  20                 	db	32
   175  007BD6  6D                 	db	109	;'m'
   176  007BD7  69                 	db	105	;'i'
   177  007BD8  6E                 	db	110	;'n'
   178  007BD9  75                 	db	117	;'u'
   179  007BDA  74                 	db	116	;'t'
   180  007BDB  6F                 	db	111	;'o'
   181  007BDC  73                 	db	115	;'s'
   182  007BDD  20                 	db	32
   183  007BDE  71                 	db	113	;'q'
   184  007BDF  75                 	db	117	;'u'
   185  007BE0  65                 	db	101	;'e'
   186  007BE1  20                 	db	32
   187  007BE2  64                 	db	100	;'d'
   188  007BE3  65                 	db	101	;'e'
   189  007BE4  73                 	db	115	;'s'
   190  007BE5  65                 	db	101	;'e'
   191  007BE6  65                 	db	101	;'e'
   192  007BE7  20                 	db	32
   193  007BE8  71                 	db	113	;'q'
   194  007BE9  75                 	db	117	;'u'
   195  007BEA  65                 	db	101	;'e'
   196  007BEB  20                 	db	32
   197  007BEC  73                 	db	115	;'s'
   198  007BED  65                 	db	101	;'e'
   199  007BEE  20                 	db	32
   200  007BEF  72                 	db	114	;'r'
   201  007BF0  69                 	db	105	;'i'
   202  007BF1  65                 	db	101	;'e'
   203  007BF2  67                 	db	103	;'g'
   204  007BF3  75                 	db	117	;'u'
   205  007BF4  65                 	db	101	;'e'
   206  007BF5  20                 	db	32
   207  007BF6  65                 	db	101	;'e'
   208  007BF7  6E                 	db	110	;'n'
   209  007BF8  20                 	db	32
   210  007BF9  65                 	db	101	;'e'
   211  007BFA  73                 	db	115	;'s'
   212  007BFB  65                 	db	101	;'e'
   213  007BFC  20                 	db	32
   214  007BFD  68                 	db	104	;'h'
   215  007BFE  6F                 	db	111	;'o'
   216  007BFF  72                 	db	114	;'r'
   217  007C00  61                 	db	97	;'a'
   218  007C01  72                 	db	114	;'r'
   219  007C02  69                 	db	105	;'i'
   220  007C03  6F                 	db	111	;'o'
   221  007C04  20                 	db	32
   222  007C05  65                 	db	101	;'e'
   223  007C06  6A                 	db	106	;'j'
   224  007C07  3A                 	db	58	;':'
   225  007C08  20                 	db	32
   226  007C09  31                 	db	49	;'1'
   227  007C0A  35                 	db	53	;'5'
   228  007C0B  20                 	db	32
   229  007C0C  0D                 	db	13
   230  007C0D  0A                 	db	10
   231  007C0E  00                 	db	0
   232  007C0F                     STR_7:
   233  007C0F  0D                 	db	13
   234  007C10  0A                 	db	10
   235  007C11  20                 	db	32
   236  007C12  49                 	db	73	;'I'
   237  007C13  6E                 	db	110	;'n'
   238  007C14  67                 	db	103	;'g'
   239  007C15  72                 	db	114	;'r'
   240  007C16  65                 	db	101	;'e'
   241  007C17  73                 	db	115	;'s'
   242  007C18  65                 	db	101	;'e'
   243  007C19  20                 	db	32
   244  007C1A  31                 	db	49	;'1'
   245  007C1B  20                 	db	32
   246  007C1C  70                 	db	112	;'p'
   247  007C1D  61                 	db	97	;'a'
   248  007C1E  72                 	db	114	;'r'
   249  007C1F  61                 	db	97	;'a'
   250  007C20  20                 	db	32
   251  007C21  72                 	db	114	;'r'
   252  007C22  65                 	db	101	;'e'
   253  007C23  67                 	db	103	;'g'
   254  007C24  61                 	db	97	;'a'
   255  007C25  72                 	db	114	;'r'
   256  007C26  20                 	db	32
   257  007C27  7C                 	db	124
   258  007C28  7C                 	db	124
   259  007C29  20                 	db	32
   260  007C2A  69                 	db	105	;'i'
   261  007C2B  6E                 	db	110	;'n'
   262  007C2C  67                 	db	103	;'g'
   263  007C2D  72                 	db	114	;'r'
   264  007C2E  65                 	db	101	;'e'
   265  007C2F  73                 	db	115	;'s'
   266  007C30  65                 	db	101	;'e'
   267  007C31  20                 	db	32
   268  007C32  30                 	db	48	;'0'
   269  007C33  20                 	db	32
   270  007C34  70                 	db	112	;'p'
   271  007C35  61                 	db	97	;'a'
   272  007C36  72                 	db	114	;'r'
   273  007C37  61                 	db	97	;'a'
   274  007C38  20                 	db	32
   275  007C39  6E                 	db	110	;'n'
   276  007C3A  6F                 	db	111	;'o'
   277  007C3B  20                 	db	32
   278  007C3C  72                 	db	114	;'r'
   279  007C3D  65                 	db	101	;'e'
   280  007C3E  67                 	db	103	;'g'
   281  007C3F  61                 	db	97	;'a'
   282  007C40  72                 	db	114	;'r'
   283  007C41  3A                 	db	58	;':'
   284  007C42  20                 	db	32
   285  007C43  0D                 	db	13
   286  007C44  0A                 	db	10
   287  007C45  00                 	db	0
   288  007C46                     STR_6:
   289  007C46  0D                 	db	13
   290  007C47  0A                 	db	10
   291  007C48  20                 	db	32
   292  007C49  49                 	db	73	;'I'
   293  007C4A  6E                 	db	110	;'n'
   294  007C4B  67                 	db	103	;'g'
   295  007C4C  72                 	db	114	;'r'
   296  007C4D  65                 	db	101	;'e'
   297  007C4E  73                 	db	115	;'s'
   298  007C4F  65                 	db	101	;'e'
   299  007C50  20                 	db	32
   300  007C51  75                 	db	117	;'u'
   301  007C52  6E                 	db	110	;'n'
   302  007C53  61                 	db	97	;'a'
   303  007C54  20                 	db	32
   304  007C55  68                 	db	104	;'h'
   305  007C56  6F                 	db	111	;'o'
   306  007C57  72                 	db	114	;'r'
   307  007C58  61                 	db	97	;'a'
   308  007C59  20                 	db	32
   309  007C5A  65                 	db	101	;'e'
   310  007C5B  6E                 	db	110	;'n'
   311  007C5C  20                 	db	32
   312  007C5D  66                 	db	102	;'f'
   313  007C5E  6F                 	db	111	;'o'
   314  007C5F  72                 	db	114	;'r'
   315  007C60  6D                 	db	109	;'m'
   316  007C61  61                 	db	97	;'a'
   317  007C62  74                 	db	116	;'t'
   318  007C63  6F                 	db	111	;'o'
   319  007C64  20                 	db	32
   320  007C65  64                 	db	100	;'d'
   321  007C66  65                 	db	101	;'e'
   322  007C67  20                 	db	32
   323  007C68  32                 	db	50	;'2'
   324  007C69  34                 	db	52	;'4'
   325  007C6A  20                 	db	32
   326  007C6B  68                 	db	104	;'h'
   327  007C6C  72                 	db	114	;'r'
   328  007C6D  73                 	db	115	;'s'
   329  007C6E  20                 	db	32
   330  007C6F  65                 	db	101	;'e'
   331  007C70  6A                 	db	106	;'j'
   332  007C71  3A                 	db	58	;':'
   333  007C72  20                 	db	32
   334  007C73  31                 	db	49	;'1'
   335  007C74  35                 	db	53	;'5'
   336  007C75  20                 	db	32
   337  007C76  0D                 	db	13
   338  007C77  0A                 	db	10
   339  007C78  00                 	db	0
   340  007C79                     STR_25:
   341  007C79  0D                 	db	13
   342  007C7A  0A                 	db	10
   343  007C7B  0A                 	db	10
   344  007C7C  48                 	db	72	;'H'
   345  007C7D  6F                 	db	111	;'o'
   346  007C7E  72                 	db	114	;'r'
   347  007C7F  61                 	db	97	;'a'
   348  007C80  20                 	db	32
   349  007C81  7C                 	db	124
   350  007C82  20                 	db	32
   351  007C83  52                 	db	82	;'R'
   352  007C84  65                 	db	101	;'e'
   353  007C85  67                 	db	103	;'g'
   354  007C86  61                 	db	97	;'a'
   355  007C87  72                 	db	114	;'r'
   356  007C88  28                 	db	40
   357  007C89  31                 	db	49	;'1'
   358  007C8A  20                 	db	32
   359  007C8B  73                 	db	115	;'s'
   360  007C8C  69                 	db	105	;'i'
   361  007C8D  20                 	db	32
   362  007C8E  30                 	db	48	;'0'
   363  007C8F  20                 	db	32
   364  007C90  6E                 	db	110	;'n'
   365  007C91  6F                 	db	111	;'o'
   366  007C92  29                 	db	41
   367  007C93  20                 	db	32
   368  007C94  7C                 	db	124
   369  007C95  20                 	db	32
   370  007C96  4D                 	db	77	;'M'
   371  007C97  69                 	db	105	;'i'
   372  007C98  6E                 	db	110	;'n'
   373  007C99  75                 	db	117	;'u'
   374  007C9A  74                 	db	116	;'t'
   375  007C9B  6F                 	db	111	;'o'
   376  007C9C  73                 	db	115	;'s'
   377  007C9D  20                 	db	32
   378  007C9E  64                 	db	100	;'d'
   379  007C9F  65                 	db	101	;'e'
   380  007CA0  20                 	db	32
   381  007CA1  72                 	db	114	;'r'
   382  007CA2  69                 	db	105	;'i'
   383  007CA3  65                 	db	101	;'e'
   384  007CA4  67                 	db	103	;'g'
   385  007CA5  6F                 	db	111	;'o'
   386  007CA6  20                 	db	32
   387  007CA7  0D                 	db	13
   388  007CA8  0A                 	db	10
   389  007CA9  0A                 	db	10
   390  007CAA  00                 	db	0
   391  007CAB                     STR_19:
   392  007CAB  0D                 	db	13
   393  007CAC  0A                 	db	10
   394  007CAD  20                 	db	32
   395  007CAE  33                 	db	51	;'3'
   396  007CAF  2E                 	db	46
   397  007CB0  20                 	db	32
   398  007CB1  50                 	db	80	;'P'
   399  007CB2  72                 	db	114	;'r'
   400  007CB3  6F                 	db	111	;'o'
   401  007CB4  67                 	db	103	;'g'
   402  007CB5  72                 	db	114	;'r'
   403  007CB6  61                 	db	97	;'a'
   404  007CB7  6D                 	db	109	;'m'
   405  007CB8  61                 	db	97	;'a'
   406  007CB9  72                 	db	114	;'r'
   407  007CBA  20                 	db	32
   408  007CBB  74                 	db	116	;'t'
   409  007CBC  69                 	db	105	;'i'
   410  007CBD  65                 	db	101	;'e'
   411  007CBE  6D                 	db	109	;'m'
   412  007CBF  70                 	db	112	;'p'
   413  007CC0  6F                 	db	111	;'o'
   414  007CC1  20                 	db	32
   415  007CC2  64                 	db	100	;'d'
   416  007CC3  65                 	db	101	;'e'
   417  007CC4  20                 	db	32
   418  007CC5  72                 	db	114	;'r'
   419  007CC6  69                 	db	105	;'i'
   420  007CC7  65                 	db	101	;'e'
   421  007CC8  67                 	db	103	;'g'
   422  007CC9  6F                 	db	111	;'o'
   423  007CCA  20                 	db	32
   424  007CCB  65                 	db	101	;'e'
   425  007CCC  6E                 	db	110	;'n'
   426  007CCD  20                 	db	32
   427  007CCE  75                 	db	117	;'u'
   428  007CCF  6E                 	db	110	;'n'
   429  007CD0  20                 	db	32
   430  007CD1  68                 	db	104	;'h'
   431  007CD2  6F                 	db	111	;'o'
   432  007CD3  72                 	db	114	;'r'
   433  007CD4  61                 	db	97	;'a'
   434  007CD5  72                 	db	114	;'r'
   435  007CD6  69                 	db	105	;'i'
   436  007CD7  6F                 	db	111	;'o'
   437  007CD8  20                 	db	32
   438  007CD9  0D                 	db	13
   439  007CDA  0A                 	db	10
   440  007CDB  00                 	db	0
   441  007CDC                     STR_2:
   442  007CDC  0D                 	db	13
   443  007CDD  0A                 	db	10
   444  007CDE  20                 	db	32
   445  007CDF  45                 	db	69	;'E'
   446  007CE0  6E                 	db	110	;'n'
   447  007CE1  76                 	db	118	;'v'
   448  007CE2  69                 	db	105	;'i'
   449  007CE3  65                 	db	101	;'e'
   450  007CE4  20                 	db	32
   451  007CE5  6C                 	db	108	;'l'
   452  007CE6  61                 	db	97	;'a'
   453  007CE7  73                 	db	115	;'s'
   454  007CE8  20                 	db	32
   455  007CE9  48                 	db	72	;'H'
   456  007CEA  6F                 	db	111	;'o'
   457  007CEB  72                 	db	114	;'r'
   458  007CEC  61                 	db	97	;'a'
   459  007CED  73                 	db	115	;'s'
   460  007CEE  20                 	db	32
   461  007CEF  65                 	db	101	;'e'
   462  007CF0  6E                 	db	110	;'n'
   463  007CF1  20                 	db	32
   464  007CF2  66                 	db	102	;'f'
   465  007CF3  6F                 	db	111	;'o'
   466  007CF4  72                 	db	114	;'r'
   467  007CF5  6D                 	db	109	;'m'
   468  007CF6  61                 	db	97	;'a'
   469  007CF7  74                 	db	116	;'t'
   470  007CF8  6F                 	db	111	;'o'
   471  007CF9  20                 	db	32
   472  007CFA  32                 	db	50	;'2'
   473  007CFB  34                 	db	52	;'4'
   474  007CFC  20                 	db	32
   475  007CFD  45                 	db	69	;'E'
   476  007CFE  6A                 	db	106	;'j'
   477  007CFF  3A                 	db	58	;':'
   478  007D00  20                 	db	32
   479  007D01  31                 	db	49	;'1'
   480  007D02  35                 	db	53	;'5'
   481  007D03  20                 	db	32
   482  007D04  0D                 	db	13
   483  007D05  0A                 	db	10
   484  007D06  00                 	db	0
   485  007D07                     STR_24:
   486  007D07  0D                 	db	13
   487  007D08  0A                 	db	10
   488  007D09  20                 	db	32
   489  007D0A  53                 	db	83	;'S'
   490  007D0B  6F                 	db	111	;'o'
   491  007D0C  6C                 	db	108	;'l'
   492  007D0D  6F                 	db	111	;'o'
   493  007D0E  20                 	db	32
   494  007D0F  73                 	db	115	;'s'
   495  007D10  65                 	db	101	;'e'
   496  007D11  20                 	db	32
   497  007D12  70                 	db	112	;'p'
   498  007D13  65                 	db	101	;'e'
   499  007D14  72                 	db	114	;'r'
   500  007D15  6D                 	db	109	;'m'
   501  007D16  69                 	db	105	;'i'
   502  007D17  74                 	db	116	;'t'
   503  007D18  65                 	db	101	;'e'
   504  007D19  6E                 	db	110	;'n'
   505  007D1A  20                 	db	32
   506  007D1B  6E                 	db	110	;'n'
   507  007D1C  75                 	db	117	;'u'
   508  007D1D  6D                 	db	109	;'m'
   509  007D1E  65                 	db	101	;'e'
   510  007D1F  72                 	db	114	;'r'
   511  007D20  6F                 	db	111	;'o'
   512  007D21  73                 	db	115	;'s'
   513  007D22  20                 	db	32
   514  007D23  64                 	db	100	;'d'
   515  007D24  65                 	db	101	;'e'
   516  007D25  6C                 	db	108	;'l'
   517  007D26  20                 	db	32
   518  007D27  31                 	db	49	;'1'
   519  007D28  20                 	db	32
   520  007D29  61                 	db	97	;'a'
   521  007D2A  6C                 	db	108	;'l'
   522  007D2B  20                 	db	32
   523  007D2C  33                 	db	51	;'3'
   524  007D2D  20                 	db	32
   525  007D2E  0D                 	db	13
   526  007D2F  0A                 	db	10
   527  007D30  00                 	db	0
   528  007D31                     STR_31:
   529  007D31  0D                 	db	13
   530  007D32  0A                 	db	10
   531  007D33  0A                 	db	10
   532  007D34  50                 	db	80	;'P'
   533  007D35  6F                 	db	111	;'o'
   534  007D36  72                 	db	114	;'r'
   535  007D37  63                 	db	99	;'c'
   536  007D38  65                 	db	101	;'e'
   537  007D39  6E                 	db	110	;'n'
   538  007D3A  74                 	db	116	;'t'
   539  007D3B  61                 	db	97	;'a'
   540  007D3C  6A                 	db	106	;'j'
   541  007D3D  65                 	db	101	;'e'
   542  007D3E  20                 	db	32
   543  007D3F  48                 	db	72	;'H'
   544  007D40  75                 	db	117	;'u'
   545  007D41  6D                 	db	109	;'m'
   546  007D42  65                 	db	101	;'e'
   547  007D43  64                 	db	100	;'d'
   548  007D44  61                 	db	97	;'a'
   549  007D45  64                 	db	100	;'d'
   550  007D46  20                 	db	32
   551  007D47  64                 	db	100	;'d'
   552  007D48  65                 	db	101	;'e'
   553  007D49  6C                 	db	108	;'l'
   554  007D4A  20                 	db	32
   555  007D4B  73                 	db	115	;'s'
   556  007D4C  65                 	db	101	;'e'
   557  007D4D  6E                 	db	110	;'n'
   558  007D4E  73                 	db	115	;'s'
   559  007D4F  6F                 	db	111	;'o'
   560  007D50  72                 	db	114	;'r'
   561  007D51  20                 	db	32
   562  007D52  25                 	db	37
   563  007D53  64                 	db	100	;'d'
   564  007D54  3A                 	db	58	;':'
   565  007D55  20                 	db	32
   566  007D56  25                 	db	37
   567  007D57  64                 	db	100	;'d'
   568  007D58  0D                 	db	13
   569  007D59  0A                 	db	10
   570  007D5A  00                 	db	0
   571  007D5B                     STR_33:
   572  007D5B  0D                 	db	13
   573  007D5C  0A                 	db	10
   574  007D5D  0A                 	db	10
   575  007D5E  45                 	db	69	;'E'
   576  007D5F  6C                 	db	108	;'l'
   577  007D60  20                 	db	32
   578  007D61  73                 	db	115	;'s'
   579  007D62  65                 	db	101	;'e'
   580  007D63  6E                 	db	110	;'n'
   581  007D64  73                 	db	115	;'s'
   582  007D65  6F                 	db	111	;'o'
   583  007D66  72                 	db	114	;'r'
   584  007D67  20                 	db	32
   585  007D68  25                 	db	37
   586  007D69  64                 	db	100	;'d'
   587  007D6A  20                 	db	32
   588  007D6B  64                 	db	100	;'d'
   589  007D6C  65                 	db	101	;'e'
   590  007D6D  74                 	db	116	;'t'
   591  007D6E  65                 	db	101	;'e'
   592  007D6F  63                 	db	99	;'c'
   593  007D70  74                 	db	116	;'t'
   594  007D71  61                 	db	97	;'a'
   595  007D72  20                 	db	32
   596  007D73  74                 	db	116	;'t'
   597  007D74  69                 	db	105	;'i'
   598  007D75  65                 	db	101	;'e'
   599  007D76  72                 	db	114	;'r'
   600  007D77  72                 	db	114	;'r'
   601  007D78  61                 	db	97	;'a'
   602  007D79  20                 	db	32
   603  007D7A  68                 	db	104	;'h'
   604  007D7B  75                 	db	117	;'u'
   605  007D7C  6D                 	db	109	;'m'
   606  007D7D  65                 	db	101	;'e'
   607  007D7E  64                 	db	100	;'d'
   608  007D7F  61                 	db	97	;'a'
   609  007D80  0D                 	db	13
   610  007D81  0A                 	db	10
   611  007D82  00                 	db	0
   612  007D83                     STR_13:
   613  007D83  0D                 	db	13
   614  007D84  0A                 	db	10
   615  007D85  53                 	db	83	;'S'
   616  007D86  6F                 	db	111	;'o'
   617  007D87  6C                 	db	108	;'l'
   618  007D88  69                 	db	105	;'i'
   619  007D89  63                 	db	99	;'c'
   620  007D8A  69                 	db	105	;'i'
   621  007D8B  74                 	db	116	;'t'
   622  007D8C  61                 	db	97	;'a'
   623  007D8D  6E                 	db	110	;'n'
   624  007D8E  64                 	db	100	;'d'
   625  007D8F  6F                 	db	111	;'o'
   626  007D90  20                 	db	32
   627  007D91  4D                 	db	77	;'M'
   628  007D92  75                 	db	117	;'u'
   629  007D93  65                 	db	101	;'e'
   630  007D94  73                 	db	115	;'s'
   631  007D95  74                 	db	116	;'t'
   632  007D96  72                 	db	114	;'r'
   633  007D97  65                 	db	101	;'e'
   634  007D98  6F                 	db	111	;'o'
   635  007D99  20                 	db	32
   636  007D9A  64                 	db	100	;'d'
   637  007D9B  65                 	db	101	;'e'
   638  007D9C  20                 	db	32
   639  007D9D  73                 	db	115	;'s'
   640  007D9E  65                 	db	101	;'e'
   641  007D9F  6E                 	db	110	;'n'
   642  007DA0  73                 	db	115	;'s'
   643  007DA1  6F                 	db	111	;'o'
   644  007DA2  72                 	db	114	;'r'
   645  007DA3  65                 	db	101	;'e'
   646  007DA4  73                 	db	115	;'s'
   647  007DA5  0D                 	db	13
   648  007DA6  0A                 	db	10
   649  007DA7  0A                 	db	10
   650  007DA8  00                 	db	0
   651  007DA9                     STR_32:
   652  007DA9  0D                 	db	13
   653  007DAA  0A                 	db	10
   654  007DAB  0A                 	db	10
   655  007DAC  45                 	db	69	;'E'
   656  007DAD  6C                 	db	108	;'l'
   657  007DAE  20                 	db	32
   658  007DAF  73                 	db	115	;'s'
   659  007DB0  65                 	db	101	;'e'
   660  007DB1  6E                 	db	110	;'n'
   661  007DB2  73                 	db	115	;'s'
   662  007DB3  6F                 	db	111	;'o'
   663  007DB4  72                 	db	114	;'r'
   664  007DB5  20                 	db	32
   665  007DB6  25                 	db	37
   666  007DB7  64                 	db	100	;'d'
   667  007DB8  20                 	db	32
   668  007DB9  64                 	db	100	;'d'
   669  007DBA  65                 	db	101	;'e'
   670  007DBB  74                 	db	116	;'t'
   671  007DBC  65                 	db	101	;'e'
   672  007DBD  63                 	db	99	;'c'
   673  007DBE  74                 	db	116	;'t'
   674  007DBF  61                 	db	97	;'a'
   675  007DC0  20                 	db	32
   676  007DC1  74                 	db	116	;'t'
   677  007DC2  69                 	db	105	;'i'
   678  007DC3  65                 	db	101	;'e'
   679  007DC4  72                 	db	114	;'r'
   680  007DC5  72                 	db	114	;'r'
   681  007DC6  61                 	db	97	;'a'
   682  007DC7  20                 	db	32
   683  007DC8  73                 	db	115	;'s'
   684  007DC9  65                 	db	101	;'e'
   685  007DCA  63                 	db	99	;'c'
   686  007DCB  61                 	db	97	;'a'
   687  007DCC  0D                 	db	13
   688  007DCD  0A                 	db	10
   689  007DCE  00                 	db	0
   690  007DCF                     STR_12:
   691  007DCF  0D                 	db	13
   692  007DD0  0A                 	db	10
   693  007DD1  20                 	db	32
   694  007DD2  4D                 	db	77	;'M'
   695  007DD3  69                 	db	105	;'i'
   696  007DD4  6E                 	db	110	;'n'
   697  007DD5  75                 	db	117	;'u'
   698  007DD6  74                 	db	116	;'t'
   699  007DD7  6F                 	db	111	;'o'
   700  007DD8  73                 	db	115	;'s'
   701  007DD9  20                 	db	32
   702  007DDA  64                 	db	100	;'d'
   703  007DDB  65                 	db	101	;'e'
   704  007DDC  20                 	db	32
   705  007DDD  72                 	db	114	;'r'
   706  007DDE  69                 	db	105	;'i'
   707  007DDF  65                 	db	101	;'e'
   708  007DE0  67                 	db	103	;'g'
   709  007DE1  6F                 	db	111	;'o'
   710  007DE2  20                 	db	32
   711  007DE3  65                 	db	101	;'e'
   712  007DE4  73                 	db	115	;'s'
   713  007DE5  74                 	db	116	;'t'
   714  007DE6  61                 	db	97	;'a'
   715  007DE7  62                 	db	98	;'b'
   716  007DE8  6C                 	db	108	;'l'
   717  007DE9  65                 	db	101	;'e'
   718  007DEA  63                 	db	99	;'c'
   719  007DEB  69                 	db	105	;'i'
   720  007DEC  64                 	db	100	;'d'
   721  007DED  6F                 	db	111	;'o'
   722  007DEE  73                 	db	115	;'s'
   723  007DEF  21                 	db	33
   724  007DF0  20                 	db	32
   725  007DF1  0D                 	db	13
   726  007DF2  0A                 	db	10
   727  007DF3  00                 	db	0
   728  007DF4                     STR_16:
   729  007DF4  0D                 	db	13
   730  007DF5  0A                 	db	10
   731  007DF6  20                 	db	32
   732  007DF7  49                 	db	73	;'I'
   733  007DF8  6E                 	db	110	;'n'
   734  007DF9  67                 	db	103	;'g'
   735  007DFA  72                 	db	114	;'r'
   736  007DFB  65                 	db	101	;'e'
   737  007DFC  73                 	db	115	;'s'
   738  007DFD  61                 	db	97	;'a'
   739  007DFE  20                 	db	32
   740  007DFF  75                 	db	117	;'u'
   741  007E00  6E                 	db	110	;'n'
   742  007E01  61                 	db	97	;'a'
   743  007E02  20                 	db	32
   744  007E03  6F                 	db	111	;'o'
   745  007E04  70                 	db	112	;'p'
   746  007E05  63                 	db	99	;'c'
   747  007E06  69                 	db	105	;'i'
   748  007E07  6F                 	db	111	;'o'
   749  007E08  6E                 	db	110	;'n'
   750  007E09  20                 	db	32
   751  007E0A  61                 	db	97	;'a'
   752  007E0B  20                 	db	32
   753  007E0C  52                 	db	82	;'R'
   754  007E0D  65                 	db	101	;'e'
   755  007E0E  61                 	db	97	;'a'
   756  007E0F  6C                 	db	108	;'l'
   757  007E10  69                 	db	105	;'i'
   758  007E11  7A                 	db	122	;'z'
   759  007E12  61                 	db	97	;'a'
   760  007E13  72                 	db	114	;'r'
   761  007E14  3A                 	db	58	;':'
   762  007E15  20                 	db	32
   763  007E16  0D                 	db	13
   764  007E17  0A                 	db	10
   765  007E18  00                 	db	0
   766  007E19                     STR_4:
   767  007E19  0D                 	db	13
   768  007E1A  0A                 	db	10
   769  007E1B  20                 	db	32
   770  007E1C  48                 	db	72	;'H'
   771  007E1D  4F                 	db	79	;'O'
   772  007E1E  52                 	db	82	;'R'
   773  007E1F  41                 	db	65	;'A'
   774  007E20  20                 	db	32
   775  007E21  45                 	db	69	;'E'
   776  007E22  53                 	db	83	;'S'
   777  007E23  54                 	db	84	;'T'
   778  007E24  41                 	db	65	;'A'
   779  007E25  42                 	db	66	;'B'
   780  007E26  4C                 	db	76	;'L'
   781  007E27  45                 	db	69	;'E'
   782  007E28  43                 	db	67	;'C'
   783  007E29  49                 	db	73	;'I'
   784  007E2A  44                 	db	68	;'D'
   785  007E2B  41                 	db	65	;'A'
   786  007E2C  20                 	db	32
   787  007E2D  43                 	db	67	;'C'
   788  007E2E  4F                 	db	79	;'O'
   789  007E2F  52                 	db	82	;'R'
   790  007E30  52                 	db	82	;'R'
   791  007E31  45                 	db	69	;'E'
   792  007E32  43                 	db	67	;'C'
   793  007E33  54                 	db	84	;'T'
   794  007E34  41                 	db	65	;'A'
   795  007E35  4D                 	db	77	;'M'
   796  007E36  45                 	db	69	;'E'
   797  007E37  4E                 	db	78	;'N'
   798  007E38  54                 	db	84	;'T'
   799  007E39  45                 	db	69	;'E'
   800  007E3A  20                 	db	32
   801  007E3B  0D                 	db	13
   802  007E3C  0A                 	db	10
   803  007E3D  00                 	db	0
   804  007E3E                     STR_18:
   805  007E3E  0D                 	db	13
   806  007E3F  0A                 	db	10
   807  007E40  20                 	db	32
   808  007E41  32                 	db	50	;'2'
   809  007E42  2E                 	db	46
   810  007E43  20                 	db	32
   811  007E44  41                 	db	65	;'A'
   812  007E45  73                 	db	115	;'s'
   813  007E46  69                 	db	105	;'i'
   814  007E47  67                 	db	103	;'g'
   815  007E48  6E                 	db	110	;'n'
   816  007E49  61                 	db	97	;'a'
   817  007E4A  72                 	db	114	;'r'
   818  007E4B  20                 	db	32
   819  007E4C  48                 	db	72	;'H'
   820  007E4D  6F                 	db	111	;'o'
   821  007E4E  72                 	db	114	;'r'
   822  007E4F  61                 	db	97	;'a'
   823  007E50  72                 	db	114	;'r'
   824  007E51  69                 	db	105	;'i'
   825  007E52  6F                 	db	111	;'o'
   826  007E53  73                 	db	115	;'s'
   827  007E54  20                 	db	32
   828  007E55  70                 	db	112	;'p'
   829  007E56  61                 	db	97	;'a'
   830  007E57  72                 	db	114	;'r'
   831  007E58  61                 	db	97	;'a'
   832  007E59  20                 	db	32
   833  007E5A  72                 	db	114	;'r'
   834  007E5B  65                 	db	101	;'e'
   835  007E5C  67                 	db	103	;'g'
   836  007E5D  61                 	db	97	;'a'
   837  007E5E  72                 	db	114	;'r'
   838  007E5F  20                 	db	32
   839  007E60  0D                 	db	13
   840  007E61  0A                 	db	10
   841  007E62  00                 	db	0
   842  007E63                     STR_21:
   843  007E63  0D                 	db	13
   844  007E64  0A                 	db	10
   845  007E65  20                 	db	32
   846  007E66  35                 	db	53	;'5'
   847  007E67  2E                 	db	46
   848  007E68  20                 	db	32
   849  007E69  4D                 	db	77	;'M'
   850  007E6A  6F                 	db	111	;'o'
   851  007E6B  73                 	db	115	;'s'
   852  007E6C  74                 	db	116	;'t'
   853  007E6D  72                 	db	114	;'r'
   854  007E6E  61                 	db	97	;'a'
   855  007E6F  72                 	db	114	;'r'
   856  007E70  20                 	db	32
   857  007E71  76                 	db	118	;'v'
   858  007E72  61                 	db	97	;'a'
   859  007E73  6C                 	db	108	;'l'
   860  007E74  6F                 	db	111	;'o'
   861  007E75  72                 	db	114	;'r'
   862  007E76  65                 	db	101	;'e'
   863  007E77  73                 	db	115	;'s'
   864  007E78  20                 	db	32
   865  007E79  73                 	db	115	;'s'
   866  007E7A  65                 	db	101	;'e'
   867  007E7B  6E                 	db	110	;'n'
   868  007E7C  73                 	db	115	;'s'
   869  007E7D  6F                 	db	111	;'o'
   870  007E7E  72                 	db	114	;'r'
   871  007E7F  65                 	db	101	;'e'
   872  007E80  73                 	db	115	;'s'
   873  007E81  20                 	db	32
   874  007E82  0D                 	db	13
   875  007E83  0A                 	db	10
   876  007E84  00                 	db	0
   877  007E85                     STR_15:
   878  007E85  0D                 	db	13
   879  007E86  0A                 	db	10
   880  007E87  53                 	db	83	;'S'
   881  007E88  65                 	db	101	;'e'
   882  007E89  6E                 	db	110	;'n'
   883  007E8A  73                 	db	115	;'s'
   884  007E8B  6F                 	db	111	;'o'
   885  007E8C  72                 	db	114	;'r'
   886  007E8D  65                 	db	101	;'e'
   887  007E8E  73                 	db	115	;'s'
   888  007E8F  20                 	db	32
   889  007E90  4C                 	db	76	;'L'
   890  007E91  65                 	db	101	;'e'
   891  007E92  69                 	db	105	;'i'
   892  007E93  64                 	db	100	;'d'
   893  007E94  6F                 	db	111	;'o'
   894  007E95  73                 	db	115	;'s'
   895  007E96  20                 	db	32
   896  007E97  63                 	db	99	;'c'
   897  007E98  6F                 	db	111	;'o'
   898  007E99  6E                 	db	110	;'n'
   899  007E9A  20                 	db	32
   900  007E9B  45                 	db	69	;'E'
   901  007E9C  78                 	db	120	;'x'
   902  007E9D  69                 	db	105	;'i'
   903  007E9E  74                 	db	116	;'t'
   904  007E9F  6F                 	db	111	;'o'
   905  007EA0  21                 	db	33
   906  007EA1  0D                 	db	13
   907  007EA2  0A                 	db	10
   908  007EA3  0A                 	db	10
   909  007EA4  00                 	db	0
   910  007EA5                     STR_20:
   911  007EA5  0D                 	db	13
   912  007EA6  0A                 	db	10
   913  007EA7  20                 	db	32
   914  007EA8  34                 	db	52	;'4'
   915  007EA9  2E                 	db	46
   916  007EAA  20                 	db	32
   917  007EAB  44                 	db	68	;'D'
   918  007EAC  61                 	db	97	;'a'
   919  007EAD  6D                 	db	109	;'m'
   920  007EAE  65                 	db	101	;'e'
   921  007EAF  20                 	db	32
   922  007EB0  64                 	db	100	;'d'
   923  007EB1  61                 	db	97	;'a'
   924  007EB2  74                 	db	116	;'t'
   925  007EB3  6F                 	db	111	;'o'
   926  007EB4  73                 	db	115	;'s'
   927  007EB5  20                 	db	32
   928  007EB6  64                 	db	100	;'d'
   929  007EB7  65                 	db	101	;'e'
   930  007EB8  6C                 	db	108	;'l'
   931  007EB9  20                 	db	32
   932  007EBA  73                 	db	115	;'s'
   933  007EBB  69                 	db	105	;'i'
   934  007EBC  73                 	db	115	;'s'
   935  007EBD  74                 	db	116	;'t'
   936  007EBE  65                 	db	101	;'e'
   937  007EBF  6D                 	db	109	;'m'
   938  007EC0  61                 	db	97	;'a'
   939  007EC1  20                 	db	32
   940  007EC2  0D                 	db	13
   941  007EC3  0A                 	db	10
   942  007EC4  00                 	db	0
   943  007EC5                     STR_29:
   944  007EC5  0D                 	db	13
   945  007EC6  0A                 	db	10
   946  007EC7  0A                 	db	10
   947  007EC8  4C                 	db	76	;'L'
   948  007EC9  61                 	db	97	;'a'
   949  007ECA  20                 	db	32
   950  007ECB  48                 	db	72	;'H'
   951  007ECC  75                 	db	117	;'u'
   952  007ECD  6D                 	db	109	;'m'
   953  007ECE  65                 	db	101	;'e'
   954  007ECF  64                 	db	100	;'d'
   955  007ED0  61                 	db	97	;'a'
   956  007ED1  64                 	db	100	;'d'
   957  007ED2  20                 	db	32
   958  007ED3  41                 	db	65	;'A'
   959  007ED4  6D                 	db	109	;'m'
   960  007ED5  62                 	db	98	;'b'
   961  007ED6  69                 	db	105	;'i'
   962  007ED7  65                 	db	101	;'e'
   963  007ED8  6E                 	db	110	;'n'
   964  007ED9  74                 	db	116	;'t'
   965  007EDA  65                 	db	101	;'e'
   966  007EDB  20                 	db	32
   967  007EDC  65                 	db	101	;'e'
   968  007EDD  73                 	db	115	;'s'
   969  007EDE  3A                 	db	58	;':'
   970  007EDF  20                 	db	32
   971  007EE0  25                 	db	37
   972  007EE1  64                 	db	100	;'d'
   973  007EE2  0D                 	db	13
   974  007EE3  0A                 	db	10
   975  007EE4  00                 	db	0
   976  007EE5                     STR_3:
   977  007EE5  0D                 	db	13
   978  007EE6  0A                 	db	10
   979  007EE7  20                 	db	32
   980  007EE8  45                 	db	69	;'E'
   981  007EE9  6E                 	db	110	;'n'
   982  007EEA  76                 	db	118	;'v'
   983  007EEB  69                 	db	105	;'i'
   984  007EEC  65                 	db	101	;'e'
   985  007EED  20                 	db	32
   986  007EEE  6C                 	db	108	;'l'
   987  007EEF  6F                 	db	111	;'o'
   988  007EF0  73                 	db	115	;'s'
   989  007EF1  20                 	db	32
   990  007EF2  4D                 	db	77	;'M'
   991  007EF3  69                 	db	105	;'i'
   992  007EF4  6E                 	db	110	;'n'
   993  007EF5  75                 	db	117	;'u'
   994  007EF6  74                 	db	116	;'t'
   995  007EF7  6F                 	db	111	;'o'
   996  007EF8  73                 	db	115	;'s'
   997  007EF9  20                 	db	32
   998  007EFA  45                 	db	69	;'E'
   999  007EFB  6A                 	db	106	;'j'
  1000  007EFC  3A                 	db	58	;':'
  1001  007EFD  20                 	db	32
  1002  007EFE  32                 	db	50	;'2'
  1003  007EFF  35                 	db	53	;'5'
  1004  007F00  20                 	db	32
  1005  007F01  0D                 	db	13
  1006  007F02  0A                 	db	10
  1007  007F03  00                 	db	0
  1008  007F04                     STR_30:
  1009  007F04  0D                 	db	13
  1010  007F05  0A                 	db	10
  1011  007F06  0A                 	db	10
  1012  007F07  4C                 	db	76	;'L'
  1013  007F08  61                 	db	97	;'a'
  1014  007F09  20                 	db	32
  1015  007F0A  54                 	db	84	;'T'
  1016  007F0B  65                 	db	101	;'e'
  1017  007F0C  6D                 	db	109	;'m'
  1018  007F0D  70                 	db	112	;'p'
  1019  007F0E  65                 	db	101	;'e'
  1020  007F0F  72                 	db	114	;'r'
  1021  007F10  61                 	db	97	;'a'
  1022  007F11  74                 	db	116	;'t'
  1023  007F12  75                 	db	117	;'u'
  1024  007F13  72                 	db	114	;'r'
  1025  007F14  61                 	db	97	;'a'
  1026  007F15  20                 	db	32
  1027  007F16  65                 	db	101	;'e'
  1028  007F17  73                 	db	115	;'s'
  1029  007F18  3A                 	db	58	;':'
  1030  007F19  20                 	db	32
  1031  007F1A  25                 	db	37
  1032  007F1B  64                 	db	100	;'d'
  1033  007F1C  20                 	db	32
  1034  007F1D  43                 	db	67	;'C'
  1035  007F1E  0D                 	db	13
  1036  007F1F  0A                 	db	10
  1037  007F20  00                 	db	0
  1038  007F21                     STR_14:
  1039  007F21  0D                 	db	13
  1040  007F22  0A                 	db	10
  1041  007F23  44                 	db	68	;'D'
  1042  007F24  61                 	db	97	;'a'
  1043  007F25  6D                 	db	109	;'m'
  1044  007F26  65                 	db	101	;'e'
  1045  007F27  20                 	db	32
  1046  007F28  44                 	db	68	;'D'
  1047  007F29  41                 	db	65	;'A'
  1048  007F2A  54                 	db	84	;'T'
  1049  007F2B  4F                 	db	79	;'O'
  1050  007F2C  53                 	db	83	;'S'
  1051  007F2D  20                 	db	32
  1052  007F2E  44                 	db	68	;'D'
  1053  007F2F  45                 	db	69	;'E'
  1054  007F30  4C                 	db	76	;'L'
  1055  007F31  20                 	db	32
  1056  007F32  53                 	db	83	;'S'
  1057  007F33  45                 	db	69	;'E'
  1058  007F34  4E                 	db	78	;'N'
  1059  007F35  53                 	db	83	;'S'
  1060  007F36  4F                 	db	79	;'O'
  1061  007F37  52                 	db	82	;'R'
  1062  007F38  20                 	db	32
  1063  007F39  3A                 	db	58	;':'
  1064  007F3A  0D                 	db	13
  1065  007F3B  0A                 	db	10
  1066  007F3C  00                 	db	0
  1067  007F3D                     STR_17:
  1068  007F3D  0D                 	db	13
  1069  007F3E  0A                 	db	10
  1070  007F3F  20                 	db	32
  1071  007F40  31                 	db	49	;'1'
  1072  007F41  2E                 	db	46
  1073  007F42  20                 	db	32
  1074  007F43  46                 	db	70	;'F'
  1075  007F44  69                 	db	105	;'i'
  1076  007F45  6A                 	db	106	;'j'
  1077  007F46  61                 	db	97	;'a'
  1078  007F47  72                 	db	114	;'r'
  1079  007F48  20                 	db	32
  1080  007F49  48                 	db	72	;'H'
  1081  007F4A  6F                 	db	111	;'o'
  1082  007F4B  72                 	db	114	;'r'
  1083  007F4C  61                 	db	97	;'a'
  1084  007F4D  20                 	db	32
  1085  007F4E  41                 	db	65	;'A'
  1086  007F4F  63                 	db	99	;'c'
  1087  007F50  74                 	db	116	;'t'
  1088  007F51  75                 	db	117	;'u'
  1089  007F52  61                 	db	97	;'a'
  1090  007F53  6C                 	db	108	;'l'
  1091  007F54  20                 	db	32
  1092  007F55  0D                 	db	13
  1093  007F56  0A                 	db	10
  1094  007F57  00                 	db	0
  1095  007F58                     STR_8:
  1096  007F58  0D                 	db	13
  1097  007F59  0A                 	db	10
  1098  007F5A  20                 	db	32
  1099  007F5B  48                 	db	72	;'H'
  1100  007F5C  6F                 	db	111	;'o'
  1101  007F5D  72                 	db	114	;'r'
  1102  007F5E  61                 	db	97	;'a'
  1103  007F5F  72                 	db	114	;'r'
  1104  007F60  69                 	db	105	;'i'
  1105  007F61  6F                 	db	111	;'o'
  1106  007F62  20                 	db	32
  1107  007F63  4D                 	db	77	;'M'
  1108  007F64  6F                 	db	111	;'o'
  1109  007F65  64                 	db	100	;'d'
  1110  007F66  69                 	db	105	;'i'
  1111  007F67  66                 	db	102	;'f'
  1112  007F68  69                 	db	105	;'i'
  1113  007F69  63                 	db	99	;'c'
  1114  007F6A  61                 	db	97	;'a'
  1115  007F6B  64                 	db	100	;'d'
  1116  007F6C  6F                 	db	111	;'o'
  1117  007F6D  21                 	db	33
  1118  007F6E  20                 	db	32
  1119  007F6F  0D                 	db	13
  1120  007F70  0A                 	db	10
  1121  007F71  00                 	db	0
  1122  007F72                     STR_5:
  1123  007F72  0D                 	db	13
  1124  007F73  0A                 	db	10
  1125  007F74  20                 	db	32
  1126  007F75  4F                 	db	79	;'O'
  1127  007F76  50                 	db	80	;'P'
  1128  007F77  43                 	db	67	;'C'
  1129  007F78  49                 	db	73	;'I'
  1130  007F79  4F                 	db	79	;'O'
  1131  007F7A  4E                 	db	78	;'N'
  1132  007F7B  45                 	db	69	;'E'
  1133  007F7C  53                 	db	83	;'S'
  1134  007F7D  20                 	db	32
  1135  007F7E  44                 	db	68	;'D'
  1136  007F7F  45                 	db	69	;'E'
  1137  007F80  20                 	db	32
  1138  007F81  52                 	db	82	;'R'
  1139  007F82  45                 	db	69	;'E'
  1140  007F83  47                 	db	71	;'G'
  1141  007F84  41                 	db	65	;'A'
  1142  007F85  44                 	db	68	;'D'
  1143  007F86  4F                 	db	79	;'O'
  1144  007F87  20                 	db	32
  1145  007F88  0D                 	db	13
  1146  007F89  0A                 	db	10
  1147  007F8A  00                 	db	0
  1148  007F8B                     STR_27:
  1149  007F8B  45                 	db	69	;'E'
  1150  007F8C  72                 	db	114	;'r'
  1151  007F8D  72                 	db	114	;'r'
  1152  007F8E  6F                 	db	111	;'o'
  1153  007F8F  72                 	db	114	;'r'
  1154  007F90  20                 	db	32
  1155  007F91  64                 	db	100	;'d'
  1156  007F92  65                 	db	101	;'e'
  1157  007F93  20                 	db	32
  1158  007F94  6C                 	db	108	;'l'
  1159  007F95  65                 	db	101	;'e'
  1160  007F96  63                 	db	99	;'c'
  1161  007F97  74                 	db	116	;'t'
  1162  007F98  75                 	db	117	;'u'
  1163  007F99  72                 	db	114	;'r'
  1164  007F9A  61                 	db	97	;'a'
  1165  007F9B  20                 	db	32
  1166  007F9C  44                 	db	68	;'D'
  1167  007F9D  48                 	db	72	;'H'
  1168  007F9E  54                 	db	84	;'T'
  1169  007F9F  31                 	db	49	;'1'
  1170  007FA0  31                 	db	49	;'1'
  1171  007FA1  0D                 	db	13
  1172  007FA2  0A                 	db	10
  1173  007FA3  00                 	db	0
  1174  007FA4                     STR_9:
  1175  007FA4  0D                 	db	13
  1176  007FA5  0A                 	db	10
  1177  007FA6  20                 	db	32
  1178  007FA7  54                 	db	84	;'T'
  1179  007FA8  49                 	db	73	;'I'
  1180  007FA9  45                 	db	69	;'E'
  1181  007FAA  4D                 	db	77	;'M'
  1182  007FAB  50                 	db	80	;'P'
  1183  007FAC  4F                 	db	79	;'O'
  1184  007FAD  20                 	db	32
  1185  007FAE  44                 	db	68	;'D'
  1186  007FAF  45                 	db	69	;'E'
  1187  007FB0  20                 	db	32
  1188  007FB1  52                 	db	82	;'R'
  1189  007FB2  45                 	db	69	;'E'
  1190  007FB3  47                 	db	71	;'G'
  1191  007FB4  41                 	db	65	;'A'
  1192  007FB5  44                 	db	68	;'D'
  1193  007FB6  4F                 	db	79	;'O'
  1194  007FB7  20                 	db	32
  1195  007FB8  0D                 	db	13
  1196  007FB9  0A                 	db	10
  1197  007FBA  00                 	db	0
  1198  007FBB                     STR_28:
  1199  007FBB  44                 	db	68	;'D'
  1200  007FBC  48                 	db	72	;'H'
  1201  007FBD  54                 	db	84	;'T'
  1202  007FBE  31                 	db	49	;'1'
  1203  007FBF  31                 	db	49	;'1'
  1204  007FC0  20                 	db	32
  1205  007FC1  4E                 	db	78	;'N'
  1206  007FC2  4F                 	db	79	;'O'
  1207  007FC3  20                 	db	32
  1208  007FC4  52                 	db	82	;'R'
  1209  007FC5  45                 	db	69	;'E'
  1210  007FC6  53                 	db	83	;'S'
  1211  007FC7  50                 	db	80	;'P'
  1212  007FC8  4F                 	db	79	;'O'
  1213  007FC9  4E                 	db	78	;'N'
  1214  007FCA  44                 	db	68	;'D'
  1215  007FCB  49                 	db	73	;'I'
  1216  007FCC  4F                 	db	79	;'O'
  1217  007FCD  0D                 	db	13
  1218  007FCE  0A                 	db	10
  1219  007FCF  00                 	db	0
  1220  007FD0                     STR_1:
  1221  007FD0  0D                 	db	13
  1222  007FD1  0A                 	db	10
  1223  007FD2  20                 	db	32
  1224  007FD3  46                 	db	70	;'F'
  1225  007FD4  49                 	db	73	;'I'
  1226  007FD5  4A                 	db	74	;'J'
  1227  007FD6  41                 	db	65	;'A'
  1228  007FD7  20                 	db	32
  1229  007FD8  48                 	db	72	;'H'
  1230  007FD9  4F                 	db	79	;'O'
  1231  007FDA  52                 	db	82	;'R'
  1232  007FDB  41                 	db	65	;'A'
  1233  007FDC  20                 	db	32
  1234  007FDD  0D                 	db	13
  1235  007FDE  0A                 	db	10
  1236  007FDF  00                 	db	0
  1237  007FE0                     STR_26:
  1238  007FE0  25                 	db	37
  1239  007FE1  64                 	db	100	;'d'
  1240  007FE2  20                 	db	32
  1241  007FE3  7C                 	db	124
  1242  007FE4  20                 	db	32
  1243  007FE5  25                 	db	37
  1244  007FE6  64                 	db	100	;'d'
  1245  007FE7  20                 	db	32
  1246  007FE8  7C                 	db	124
  1247  007FE9  20                 	db	32
  1248  007FEA  25                 	db	37
  1249  007FEB  64                 	db	100	;'d'
  1250  007FEC  20                 	db	32
  1251  007FED  0D                 	db	13
  1252  007FEE  0A                 	db	10
  1253  007FEF  00                 	db	0
  1254  007FF0                     STR_22:
  1255  007FF0  0D                 	db	13
  1256  007FF1  0A                 	db	10
  1257  007FF2  20                 	db	32
  1258  007FF3  4F                 	db	79	;'O'
  1259  007FF4  70                 	db	112	;'p'
  1260  007FF5  63                 	db	99	;'c'
  1261  007FF6  69                 	db	105	;'i'
  1262  007FF7  6F                 	db	111	;'o'
  1263  007FF8  6E                 	db	110	;'n'
  1264  007FF9  3A                 	db	58	;':'
  1265  007FFA  20                 	db	32
  1266  007FFB  20                 	db	32
  1267  007FFC  0D                 	db	13
  1268  007FFD  00                 	db	0
  1269  0000                     
  1270                           ; #config settings
  1271  007FFE  00                 	db	0	; dummy byte at the end
  1272  0000                     
  1273                           	psect	cinit
  1274  001F5A                     __pcinit:
  1275                           	opt callstack 0
  1276  001F5A                     start_initialization:
  1277                           	opt callstack 0
  1278  001F5A                     __initialization:
  1279                           	opt callstack 0
  1280                           
  1281                           ; Initialize objects allocated to BANK0 (4 bytes)
  1282                           ; load TBLPTR registers with __pidataBANK0
  1283  001F5A  0EFA               	movlw	low __pidataBANK0
  1284  001F5C  6EF6               	movwf	tblptrl,c
  1285  001F5E  0E22               	movlw	high __pidataBANK0
  1286  001F60  6EF7               	movwf	tblptrh,c
  1287  001F62  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1288  001F64  6EF8               	movwf	tblptru,c
  1289  001F66  EE00  F0F9         	lfsr	0,__pdataBANK0
  1290  001F6A  EE10 F004          	lfsr	1,4
  1291  001F6E                     copy_data0:
  1292  001F6E  0009               	tblrd		*+
  1293  001F70  CFF5 FFEE          	movff	tablat,postinc0
  1294  001F74  50E5               	movf	postdec1,w,c
  1295  001F76  50E1               	movf	fsr1l,w,c
  1296  001F78  E1FA               	bnz	copy_data0
  1297                           
  1298                           ; Clear objects allocated to BANK1 (72 bytes)
  1299  001F7A  EE01  F000         	lfsr	0,__pbssBANK1
  1300  001F7E  0E48               	movlw	72
  1301  001F80                     clear_0:
  1302  001F80  6AEE               	clrf	postinc0,c
  1303  001F82  06E8               	decf	wreg,f,c
  1304  001F84  E1FD               	bnz	clear_0
  1305                           
  1306                           ; Clear objects allocated to BANK0 (78 bytes)
  1307  001F86  EE00  F060         	lfsr	0,__pbssBANK0
  1308  001F8A  0E4E               	movlw	78
  1309  001F8C                     clear_1:
  1310  001F8C  6AEE               	clrf	postinc0,c
  1311  001F8E  06E8               	decf	wreg,f,c
  1312  001F90  E1FD               	bnz	clear_1
  1313                           
  1314                           ; Clear objects allocated to COMRAM (1 bytes)
  1315  001F92  6A5E               	clrf	__pbssCOMRAM& (0+255),c
  1316  001F94                     end_of_initialization:
  1317                           	opt callstack 0
  1318  001F94                     __end_of__initialization:
  1319                           	opt callstack 0
  1320  001F94  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1321  001F96  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1322  001F98  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1323  001F9A  6EF8               	movwf	tblptru,c
  1324  001F9C  0100               	movlb	0
  1325  001F9E  EF22  F00C         	goto	_main	;jump to C main() function
  1326                           
  1327                           	psect	bssCOMRAM
  1328  00005E                     __pbssCOMRAM:
  1329                           	opt callstack 0
  1330  00005E                     _esperandoDatos:
  1331                           	opt callstack 0
  1332  00005E                     	ds	1
  1333                           
  1334                           	psect	bssBANK0
  1335  000060                     __pbssBANK0:
  1336                           	opt callstack 0
  1337  000060                     _sensores:
  1338                           	opt callstack 0
  1339  000060                     	ds	24
  1340  000078                     _nout:
  1341                           	opt callstack 0
  1342  000078                     	ds	2
  1343  00007A                     _width:
  1344                           	opt callstack 0
  1345  00007A                     	ds	2
  1346  00007C                     _prec:
  1347                           	opt callstack 0
  1348  00007C                     	ds	2
  1349  00007E                     _flags:
  1350                           	opt callstack 0
  1351  00007E                     	ds	2
  1352  000080                     _contInterrupciones:
  1353                           	opt callstack 0
  1354  000080                     	ds	2
  1355  000082                     _peticionLecturaSensores:
  1356                           	opt callstack 0
  1357  000082                     	ds	1
  1358  000083                     _regando:
  1359                           	opt callstack 0
  1360  000083                     	ds	1
  1361  000084                     _minutosTranscurridos:
  1362                           	opt callstack 0
  1363  000084                     	ds	1
  1364  000085                     _minutosRegar:
  1365                           	opt callstack 0
  1366  000085                     	ds	1
  1367  000086                     _overflowTimer:
  1368                           	opt callstack 0
  1369  000086                     	ds	1
  1370  000087                     _datoRecibido:
  1371                           	opt callstack 0
  1372  000087                     	ds	1
  1373  000088                     _segundos:
  1374                           	opt callstack 0
  1375  000088                     	ds	1
  1376  000089                     _minutos:
  1377                           	opt callstack 0
  1378  000089                     	ds	1
  1379  00008A                     _hora:
  1380                           	opt callstack 0
  1381  00008A                     	ds	1
  1382  00008B                     _esperaDatoConcluida:
  1383                           	opt callstack 0
  1384  00008B                     	ds	1
  1385  00008C                     _byteUart:
  1386                           	opt callstack 0
  1387  00008C                     	ds	1
  1388  00008D                     _tiempoInactividadTrans:
  1389                           	opt callstack 0
  1390  00008D                     	ds	1
  1391  00008E                     _dbuf:
  1392                           	opt callstack 0
  1393  00008E                     	ds	32
  1394                           
  1395                           	psect	dataBANK0
  1396  0000F9                     __pdataBANK0:
  1397                           	opt callstack 0
  1398  0000F9                     _VALOR_TIMER0:
  1399                           	opt callstack 0
  1400  0000F9                     	ds	2
  1401  0000FB                     _VALOR_TIMER0UART:
  1402                           	opt callstack 0
  1403  0000FB                     	ds	2
  1404                           
  1405                           	psect	bssBANK1
  1406  000100                     __pbssBANK1:
  1407                           	opt callstack 0
  1408  000100                     _horarios:
  1409                           	opt callstack 0
  1410  000100                     	ds	72
  1411                           
  1412                           	psect	cstackBANK0
  1413  0000AE                     __pcstackBANK0:
  1414                           	opt callstack 0
  1415  0000AE                     ?_sprintf:
  1416                           	opt callstack 0
  1417  0000AE                     sprintf@s:
  1418                           	opt callstack 0
  1419                           
  1420                           ; 2 bytes @ 0x0
  1421  0000AE                     	ds	2
  1422  0000B0                     sprintf@fmt:
  1423                           	opt callstack 0
  1424                           
  1425                           ; 2 bytes @ 0x2
  1426  0000B0                     	ds	10
  1427  0000BA                     sprintf@ap:
  1428                           	opt callstack 0
  1429                           
  1430                           ; 2 bytes @ 0xC
  1431  0000BA                     	ds	2
  1432  0000BC                     sprintf@f:
  1433                           	opt callstack 0
  1434                           
  1435                           ; 6 bytes @ 0xE
  1436  0000BC                     	ds	6
  1437  0000C2                     dameDatosSistema@buffer:
  1438                           	opt callstack 0
  1439  0000C2                     mostrarDatosSensores@buffer:
  1440                           	opt callstack 0
  1441  0000C2                     mostrarDatosSensoresWIFI@buffer:
  1442                           	opt callstack 0
  1443                           
  1444                           ; 50 bytes @ 0x14
  1445  0000C2                     	ds	50
  1446  0000F4                     mostrarDatosSensores@porcentajeHumedad:
  1447                           	opt callstack 0
  1448  0000F4                     mostrarDatosSensoresWIFI@temperatura:
  1449                           	opt callstack 0
  1450  0000F4                     dameDatosSistema@i:
  1451                           	opt callstack 0
  1452                           
  1453                           ; 2 bytes @ 0x46
  1454  0000F4                     	ds	1
  1455  0000F5                     mostrarDatosSensores@temperatura:
  1456                           	opt callstack 0
  1457  0000F5                     mostrarDatosSensoresWIFI@humedad:
  1458                           	opt callstack 0
  1459                           
  1460                           ; 1 bytes @ 0x47
  1461  0000F5                     	ds	1
  1462  0000F6                     mostrarDatosSensores@humedad:
  1463                           	opt callstack 0
  1464  0000F6                     mostrarDatosSensoresWIFI@i:
  1465                           	opt callstack 0
  1466                           
  1467                           ; 2 bytes @ 0x48
  1468  0000F6                     	ds	1
  1469  0000F7                     mostrarDatosSensores@i:
  1470                           	opt callstack 0
  1471                           
  1472                           ; 2 bytes @ 0x49
  1473  0000F7                     	ds	2
  1474                           
  1475                           	psect	cstackCOMRAM
  1476  000001                     __pcstackCOMRAM:
  1477                           	opt callstack 0
  1478  000001                     ??_i2c_espera:
  1479  000001                     ??_convertirDato:
  1480  000001                     ??_DHT11_Start:
  1481  000001                     ?_strlen:
  1482                           	opt callstack 0
  1483  000001                     ?_horaRegar:
  1484                           	opt callstack 0
  1485  000001                     ?_dameHumedadSuelo:
  1486                           	opt callstack 0
  1487  000001                     ?___wmul:
  1488                           	opt callstack 0
  1489  000001                     ?___lmul:
  1490                           	opt callstack 0
  1491  000001                     ?___aodiv:
  1492                           	opt callstack 0
  1493  000001                     ?___aomod:
  1494                           	opt callstack 0
  1495  000001                     UART_write@dato:
  1496                           	opt callstack 0
  1497  000001                     DHT11_ReadData@i:
  1498                           	opt callstack 0
  1499  000001                     check_response@respuesta:
  1500                           	opt callstack 0
  1501  000001                     ___wmul@multiplier:
  1502                           	opt callstack 0
  1503  000001                     fputc@c:
  1504                           	opt callstack 0
  1505  000001                     strlen@s:
  1506                           	opt callstack 0
  1507  000001                     ___lmul@multiplier:
  1508                           	opt callstack 0
  1509  000001                     ___aodiv@dividend:
  1510                           	opt callstack 0
  1511  000001                     ___aomod@dividend:
  1512                           	opt callstack 0
  1513                           
  1514                           ; 8 bytes @ 0x0
  1515  000001                     	ds	1
  1516  000002                     i2c_envia_dato@dato:
  1517                           	opt callstack 0
  1518  000002                     i2c_recibe_dato@datoleido:
  1519                           	opt callstack 0
  1520  000002                     convertirDato@dato:
  1521                           	opt callstack 0
  1522  000002                     DHT11_ReadData@data:
  1523                           	opt callstack 0
  1524  000002                     UART_printf@cadena:
  1525                           	opt callstack 0
  1526                           
  1527                           ; 2 bytes @ 0x1
  1528  000002                     	ds	1
  1529  000003                     ??_dameHumedadSuelo:
  1530  000003                     escribe_rtc@dato:
  1531                           	opt callstack 0
  1532  000003                     leer_rtc@direccion:
  1533                           	opt callstack 0
  1534  000003                     convertirDato@datoR:
  1535                           	opt callstack 0
  1536  000003                     leer_eeprom@direccion:
  1537                           	opt callstack 0
  1538  000003                     ___wmul@multiplicand:
  1539                           	opt callstack 0
  1540  000003                     fputc@fp:
  1541                           	opt callstack 0
  1542  000003                     strlen@a:
  1543                           	opt callstack 0
  1544                           
  1545                           ; 2 bytes @ 0x2
  1546  000003                     	ds	1
  1547  000004                     escribe_rtc@direccion:
  1548                           	opt callstack 0
  1549  000004                     leer_rtc@dato:
  1550                           	opt callstack 0
  1551  000004                     dameTemperaturaHumedad@Humedad:
  1552                           	opt callstack 0
  1553                           
  1554                           ; 2 bytes @ 0x3
  1555  000004                     	ds	1
  1556  000005                     ??_fputc:
  1557  000005                     ??_setRtc:
  1558  000005                     ??_leer_eeprom:
  1559  000005                     dameHumedadSuelo@canalLeer:
  1560                           	opt callstack 0
  1561  000005                     ___wmul@product:
  1562                           	opt callstack 0
  1563  000005                     ___lmul@multiplicand:
  1564                           	opt callstack 0
  1565                           
  1566                           ; 4 bytes @ 0x4
  1567  000005                     	ds	1
  1568  000006                     setRtc@direccion:
  1569                           	opt callstack 0
  1570  000006                     leer_eeprom@dato:
  1571                           	opt callstack 0
  1572  000006                     dameTemperaturaHumedad@Temperatura:
  1573                           	opt callstack 0
  1574                           
  1575                           ; 2 bytes @ 0x5
  1576  000006                     	ds	1
  1577  000007                     ??_lecturaAnalogaSensores:
  1578  000007                     setRtc@dato:
  1579                           	opt callstack 0
  1580  000007                     inicializarObjetos@i:
  1581                           	opt callstack 0
  1582  000007                     escribe_eeprom@direccion:
  1583                           	opt callstack 0
  1584  000007                     leeHorariosMemoria@contMemoria:
  1585                           	opt callstack 0
  1586  000007                     constructorSensor@s:
  1587                           	opt callstack 0
  1588                           
  1589                           ; 3 bytes @ 0x6
  1590  000007                     	ds	1
  1591  000008                     ??_dameTemperaturaHumedad:
  1592  000008                     setRtc@datoCapturado:
  1593                           	opt callstack 0
  1594  000008                     lecturaAnalogaSensores@i:
  1595                           	opt callstack 0
  1596                           
  1597                           ; 2 bytes @ 0x7
  1598  000008                     	ds	1
  1599  000009                     escribe_eeprom@dato:
  1600                           	opt callstack 0
  1601  000009                     setRtc@i:
  1602                           	opt callstack 0
  1603  000009                     leeHorariosMemoria@i:
  1604                           	opt callstack 0
  1605  000009                     ___lmul@product:
  1606                           	opt callstack 0
  1607  000009                     ___aodiv@divisor:
  1608                           	opt callstack 0
  1609  000009                     ___aomod@divisor:
  1610                           	opt callstack 0
  1611                           
  1612                           ; 8 bytes @ 0x8
  1613  000009                     	ds	1
  1614  00000A                     ??_escribe_eeprom:
  1615  00000A                     constructorSensor@humedad:
  1616                           	opt callstack 0
  1617  00000A                     dameTemperaturaHumedad@checkSum:
  1618                           	opt callstack 0
  1619  00000A                     fputs@s:
  1620                           	opt callstack 0
  1621                           
  1622                           ; 2 bytes @ 0x9
  1623  00000A                     	ds	1
  1624  00000B                     constructorSensor@pin:
  1625                           	opt callstack 0
  1626  00000B                     setRtc@Rx:
  1627                           	opt callstack 0
  1628  00000B                     escribeHorariosMemoria@contMemoria:
  1629                           	opt callstack 0
  1630                           
  1631                           ; 2 bytes @ 0xA
  1632  00000B                     	ds	1
  1633  00000C                     dameTemperaturaHumedad@humedadDecimal:
  1634                           	opt callstack 0
  1635  00000C                     restablecerDatosSensor@i:
  1636                           	opt callstack 0
  1637  00000C                     fputs@fp:
  1638                           	opt callstack 0
  1639                           
  1640                           ; 2 bytes @ 0xB
  1641  00000C                     	ds	1
  1642  00000D                     ?___aldiv:
  1643                           	opt callstack 0
  1644  00000D                     dameTemperaturaHumedad@temperaturaDecimal:
  1645                           	opt callstack 0
  1646  00000D                     escribeHorariosMemoria@i:
  1647                           	opt callstack 0
  1648  00000D                     ___aldiv@dividend:
  1649                           	opt callstack 0
  1650                           
  1651                           ; 4 bytes @ 0xC
  1652  00000D                     	ds	1
  1653  00000E                     lecturaWifi@Rx:
  1654                           	opt callstack 0
  1655  00000E                     dameTemperaturaHumedad@humedad:
  1656                           	opt callstack 0
  1657  00000E                     fputs@c:
  1658                           	opt callstack 0
  1659                           
  1660                           ; 1 bytes @ 0xD
  1661  00000E                     	ds	1
  1662  00000F                     asignarHorarios@hora:
  1663                           	opt callstack 0
  1664  00000F                     setTiempoRegar@tiempoRegar:
  1665                           	opt callstack 0
  1666  00000F                     dameTemperaturaHumedad@temperatura:
  1667                           	opt callstack 0
  1668  00000F                     lecturaWifi@i:
  1669                           	opt callstack 0
  1670  00000F                     fputs@i:
  1671                           	opt callstack 0
  1672                           
  1673                           ; 2 bytes @ 0xE
  1674  00000F                     	ds	1
  1675  000010                     ?_estaSeco:
  1676                           	opt callstack 0
  1677  000010                     asignarHorarios@datoCapturado:
  1678                           	opt callstack 0
  1679  000010                     setTiempoRegar@hora:
  1680                           	opt callstack 0
  1681  000010                     estaSeco@s:
  1682                           	opt callstack 0
  1683                           
  1684                           ; 3 bytes @ 0xF
  1685  000010                     	ds	1
  1686  000011                     ?_pad:
  1687                           	opt callstack 0
  1688  000011                     ___aodiv@counter:
  1689                           	opt callstack 0
  1690  000011                     ___aomod@counter:
  1691                           	opt callstack 0
  1692  000011                     asignarHorarios@i:
  1693                           	opt callstack 0
  1694  000011                     setTiempoRegar@i:
  1695                           	opt callstack 0
  1696  000011                     pad@fp:
  1697                           	opt callstack 0
  1698  000011                     ___aldiv@divisor:
  1699                           	opt callstack 0
  1700                           
  1701                           ; 4 bytes @ 0x10
  1702  000011                     	ds	1
  1703  000012                     ___aodiv@sign:
  1704                           	opt callstack 0
  1705  000012                     ___aomod@sign:
  1706                           	opt callstack 0
  1707                           
  1708                           ; 1 bytes @ 0x11
  1709  000012                     	ds	1
  1710  000013                     ?_abs:
  1711                           	opt callstack 0
  1712  000013                     _estaSeco$776:
  1713                           	opt callstack 0
  1714  000013                     asignarHorarios@Rx:
  1715                           	opt callstack 0
  1716  000013                     setTiempoRegar@i_840:
  1717                           	opt callstack 0
  1718  000013                     pad@buf:
  1719                           	opt callstack 0
  1720  000013                     abs@a:
  1721                           	opt callstack 0
  1722  000013                     ___aodiv@quotient:
  1723                           	opt callstack 0
  1724                           
  1725                           ; 8 bytes @ 0x12
  1726  000013                     	ds	1
  1727  000014                     estaSeco@temperatura:
  1728                           	opt callstack 0
  1729                           
  1730                           ; 1 bytes @ 0x13
  1731  000014                     	ds	1
  1732  000015                     ??_abs:
  1733  000015                     ??_encenderBombas:
  1734  000015                     setTiempoRegar@datoCapturado:
  1735                           	opt callstack 0
  1736  000015                     ___aldiv@counter:
  1737                           	opt callstack 0
  1738  000015                     pad@p:
  1739                           	opt callstack 0
  1740                           
  1741                           ; 2 bytes @ 0x14
  1742  000015                     	ds	1
  1743  000016                     setTiempoRegar@Rx:
  1744                           	opt callstack 0
  1745  000016                     ___aldiv@sign:
  1746                           	opt callstack 0
  1747                           
  1748                           ; 1 bytes @ 0x15
  1749  000016                     	ds	1
  1750  000017                     ??_pad:
  1751  000017                     encenderBombas@flagSeco:
  1752                           	opt callstack 0
  1753  000017                     ___aldiv@quotient:
  1754                           	opt callstack 0
  1755                           
  1756                           ; 4 bytes @ 0x16
  1757  000017                     	ds	1
  1758  000018                     encenderBombas@i:
  1759                           	opt callstack 0
  1760  000018                     pad@i:
  1761                           	opt callstack 0
  1762                           
  1763                           ; 2 bytes @ 0x17
  1764  000018                     	ds	2
  1765  00001A                     pad@w:
  1766                           	opt callstack 0
  1767                           
  1768                           ; 2 bytes @ 0x19
  1769  00001A                     	ds	1
  1770  00001B                     ?_map:
  1771                           	opt callstack 0
  1772  00001B                     UART_init@BAUD:
  1773                           	opt callstack 0
  1774  00001B                     map@x:
  1775                           	opt callstack 0
  1776                           
  1777                           ; 4 bytes @ 0x1A
  1778  00001B                     	ds	1
  1779  00001C                     ?_dtoa:
  1780                           	opt callstack 0
  1781  00001C                     dtoa@fp:
  1782                           	opt callstack 0
  1783                           
  1784                           ; 2 bytes @ 0x1B
  1785  00001C                     	ds	2
  1786  00001E                     dtoa@d:
  1787                           	opt callstack 0
  1788                           
  1789                           ; 8 bytes @ 0x1D
  1790  00001E                     	ds	1
  1791  00001F                     map@in_min:
  1792                           	opt callstack 0
  1793                           
  1794                           ; 4 bytes @ 0x1E
  1795  00001F                     	ds	4
  1796  000023                     map@in_max:
  1797                           	opt callstack 0
  1798  000023                     _UART_init$1787:
  1799                           	opt callstack 0
  1800                           
  1801                           ; 4 bytes @ 0x22
  1802  000023                     	ds	3
  1803  000026                     ??_dtoa:
  1804                           
  1805                           ; 1 bytes @ 0x25
  1806  000026                     	ds	1
  1807  000027                     map@out_min:
  1808                           	opt callstack 0
  1809                           
  1810                           ; 4 bytes @ 0x26
  1811  000027                     	ds	4
  1812  00002B                     map@out_max:
  1813                           	opt callstack 0
  1814                           
  1815                           ; 4 bytes @ 0x2A
  1816  00002B                     	ds	3
  1817  00002E                     _dtoa$1012:
  1818                           	opt callstack 0
  1819                           
  1820                           ; 2 bytes @ 0x2D
  1821  00002E                     	ds	1
  1822  00002F                     
  1823                           ; 1 bytes @ 0x2E
  1824  00002F                     	ds	1
  1825  000030                     dtoa@p:
  1826                           	opt callstack 0
  1827                           
  1828                           ; 2 bytes @ 0x2F
  1829  000030                     	ds	2
  1830  000032                     dtoa@w:
  1831                           	opt callstack 0
  1832                           
  1833                           ; 2 bytes @ 0x31
  1834  000032                     	ds	2
  1835  000034                     dtoa@s:
  1836                           	opt callstack 0
  1837                           
  1838                           ; 2 bytes @ 0x33
  1839  000034                     	ds	2
  1840  000036                     dtoa@n:
  1841                           	opt callstack 0
  1842                           
  1843                           ; 8 bytes @ 0x35
  1844  000036                     	ds	8
  1845  00003E                     dtoa@i:
  1846                           	opt callstack 0
  1847                           
  1848                           ; 2 bytes @ 0x3D
  1849  00003E                     	ds	2
  1850  000040                     ?_vfpfcnvrt:
  1851                           	opt callstack 0
  1852  000040                     vfpfcnvrt@fp:
  1853                           	opt callstack 0
  1854                           
  1855                           ; 2 bytes @ 0x3F
  1856  000040                     	ds	2
  1857  000042                     vfpfcnvrt@fmt:
  1858                           	opt callstack 0
  1859                           
  1860                           ; 2 bytes @ 0x41
  1861  000042                     	ds	2
  1862  000044                     vfpfcnvrt@ap:
  1863                           	opt callstack 0
  1864                           
  1865                           ; 2 bytes @ 0x43
  1866  000044                     	ds	2
  1867  000046                     ??_vfpfcnvrt:
  1868                           
  1869                           ; 1 bytes @ 0x45
  1870  000046                     	ds	2
  1871  000048                     vfpfcnvrt@ll:
  1872                           	opt callstack 0
  1873                           
  1874                           ; 8 bytes @ 0x47
  1875  000048                     	ds	8
  1876  000050                     ?_vfprintf:
  1877                           	opt callstack 0
  1878  000050                     vfprintf@fp:
  1879                           	opt callstack 0
  1880                           
  1881                           ; 2 bytes @ 0x4F
  1882  000050                     	ds	2
  1883  000052                     vfprintf@fmt:
  1884                           	opt callstack 0
  1885                           
  1886                           ; 2 bytes @ 0x51
  1887  000052                     	ds	2
  1888  000054                     vfprintf@ap:
  1889                           	opt callstack 0
  1890                           
  1891                           ; 2 bytes @ 0x53
  1892  000054                     	ds	2
  1893  000056                     vfprintf@cfmt:
  1894                           	opt callstack 0
  1895                           
  1896                           ; 2 bytes @ 0x55
  1897  000056                     	ds	2
  1898  000058                     ??_dameDatosSistema:
  1899  000058                     
  1900                           ; 1 bytes @ 0x57
  1901  000058                     	ds	3
  1902  00005B                     ??_sistemaPrincipal:
  1903                           
  1904                           ; 1 bytes @ 0x5A
  1905  00005B                     	ds	2
  1906  00005D                     sistemaPrincipal@opcion:
  1907                           	opt callstack 0
  1908                           
  1909                           ; 1 bytes @ 0x5C
  1910  00005D                     	ds	1
  1911  00005E                     
  1912                           ; 1 bytes @ 0x5D
  1913 ;;
  1914 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1915 ;;
  1916 ;; *************** function _main *****************
  1917 ;; Defined at:
  1918 ;;		line 772 in file "main.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;		None
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;  temperatura     1    0        unsigned char 
  1923 ;;  humedad         1    0        unsigned char 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1933 ;;      Params:         0       0       0       0       0       0       0       0       0
  1934 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1935 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1936 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1937 ;;Total ram usage:        0 bytes
  1938 ;; Hardware stack levels required when called:   11
  1939 ;; This function calls:
  1940 ;;		_UART_init
  1941 ;;		_configurarAdc
  1942 ;;		_i2c_iniciar
  1943 ;;		_inicializarObjetos
  1944 ;;		_leeHorariosMemoria
  1945 ;;		_mostrarMenu
  1946 ;;		_restablecerDatosSensor
  1947 ;;		_sistemaPrincipal
  1948 ;;		_sistemaRegado
  1949 ;; This function is called by:
  1950 ;;		Startup code after reset
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text0
  1955  001844                     __ptext0:
  1956                           	opt callstack 0
  1957  001844                     _main:
  1958                           	opt callstack 20
  1959  001844                     
  1960                           ;main.c: 774:     unsigned char humedad, temperatura;;main.c: 776:     INTCONbits.GIE = 
      +                          1;
  1961  001844  8EF2               	bsf	242,7,c	;volatile
  1962                           
  1963                           ;main.c: 777:     INTCONbits.PEIE = 1;
  1964  001846  8CF2               	bsf	242,6,c	;volatile
  1965                           
  1966                           ;main.c: 778:     INTCONbits.TMR0IE = 0;
  1967  001848  9AF2               	bcf	242,5,c	;volatile
  1968                           
  1969                           ;main.c: 779:     INTCONbits.TMR0IF = 0;
  1970  00184A  94F2               	bcf	242,2,c	;volatile
  1971                           
  1972                           ;main.c: 780:     PIE1bits.RCIE = 1;
  1973  00184C  8A9D               	bsf	157,5,c	;volatile
  1974  00184E                     
  1975                           ;main.c: 782:     T0CON = 0b00000111;
  1976  00184E  0E07               	movlw	7
  1977  001850  6ED5               	movwf	213,c	;volatile
  1978  001852                     
  1979                           ;main.c: 784:     INTCONbits.TMR0IE = 1;
  1980  001852  8AF2               	bsf	242,5,c	;volatile
  1981  001854                     
  1982                           ;main.c: 789:     restablecerDatosSensor();
  1983  001854  EC73  F00E         	call	_restablecerDatosSensor	;wreg free
  1984  001858                     
  1985                           ;main.c: 791:     UART_init(9600);
  1986  001858  0E80               	movlw	128
  1987  00185A  6E1B               	movwf	UART_init@BAUD^0,c
  1988  00185C  0E25               	movlw	37
  1989  00185E  6E1C               	movwf	(UART_init@BAUD+1)^0,c
  1990  001860  0E00               	movlw	0
  1991  001862  6E1D               	movwf	(UART_init@BAUD+2)^0,c
  1992  001864  0E00               	movlw	0
  1993  001866  6E1E               	movwf	(UART_init@BAUD+3)^0,c
  1994  001868  EC3A  F00D         	call	_UART_init	;wreg free
  1995  00186C                     
  1996                           ;main.c: 792:     i2c_iniciar();
  1997  00186C  EC55  F011         	call	_i2c_iniciar	;wreg free
  1998  001870                     
  1999                           ;main.c: 793:     configurarAdc();
  2000  001870  EC6C  F011         	call	_configurarAdc	;wreg free
  2001  001874                     
  2002                           ;main.c: 794:     inicializarObjetos();
  2003  001874  EC6D  F00C         	call	_inicializarObjetos	;wreg free
  2004  001878                     
  2005                           ;main.c: 796:     leeHorariosMemoria();
  2006  001878  EC4D  F00A         	call	_leeHorariosMemoria	;wreg free
  2007  00187C                     
  2008                           ;main.c: 799:     TRISD = 0;
  2009  00187C  0E00               	movlw	0
  2010  00187E  6E95               	movwf	149,c	;volatile
  2011  001880                     
  2012                           ;main.c: 800:     LATD = 0;
  2013  001880  0E00               	movlw	0
  2014  001882  6E8C               	movwf	140,c	;volatile
  2015  001884                     
  2016                           ;main.c: 802:     TMR0 = VALOR_TIMER0;
  2017  001884  C0F9  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  2018  001888  C0FA  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  2019  00188C                     
  2020                           ;main.c: 804:     INTCONbits.TMR0IF = 1;
  2021  00188C  84F2               	bsf	242,2,c	;volatile
  2022  00188E                     
  2023                           ;main.c: 806:     T0CONbits.TMR0ON = 1;
  2024  00188E  8ED5               	bsf	213,7,c	;volatile
  2025  001890                     
  2026                           ;main.c: 808:     mostrarMenu();
  2027  001890  EC42  F00E         	call	_mostrarMenu	;wreg free
  2028  001894                     l3560:
  2029                           
  2030                           ;main.c: 813:         if (datoRecibido) {
  2031  001894  0100               	movlb	0	; () banked
  2032  001896  5187               	movf	_datoRecibido& (0+255),w,b
  2033  001898  B4D8               	btfsc	status,2,c
  2034  00189A  EF51  F00C         	goto	u2731
  2035  00189E  EF53  F00C         	goto	u2730
  2036  0018A2                     u2731:
  2037  0018A2  EF5A  F00C         	goto	l3568
  2038  0018A6                     u2730:
  2039  0018A6                     
  2040                           ; BSR set to: 0
  2041                           ;main.c: 815:             datoRecibido = 0;
  2042  0018A6  0E00               	movlw	0
  2043  0018A8  6F87               	movwf	_datoRecibido& (0+255),b
  2044  0018AA                     
  2045                           ; BSR set to: 0
  2046                           ;main.c: 816:             byteUart -= 48;
  2047  0018AA  0E30               	movlw	48
  2048  0018AC  5F8C               	subwf	_byteUart& (0+255),f,b
  2049  0018AE                     
  2050                           ; BSR set to: 0
  2051                           ;main.c: 817:             sistemaPrincipal(byteUart);
  2052  0018AE  518C               	movf	_byteUart& (0+255),w,b
  2053  0018B0  ECB8  F00C         	call	_sistemaPrincipal
  2054  0018B4                     l3568:
  2055                           
  2056                           ;main.c: 821:         if (overflowTimer) {
  2057  0018B4  0100               	movlb	0	; () banked
  2058  0018B6  5186               	movf	_overflowTimer& (0+255),w,b
  2059  0018B8  B4D8               	btfsc	status,2,c
  2060  0018BA  EF61  F00C         	goto	u2741
  2061  0018BE  EF63  F00C         	goto	u2740
  2062  0018C2                     u2741:
  2063  0018C2  EF4A  F00C         	goto	l3560
  2064  0018C6                     u2740:
  2065  0018C6                     
  2066                           ; BSR set to: 0
  2067                           ;main.c: 823:             esperandoDatos = 0;
  2068  0018C6  0E00               	movlw	0
  2069  0018C8  6E5E               	movwf	_esperandoDatos^0,c
  2070                           
  2071                           ;main.c: 824:             overflowTimer = 0;
  2072  0018CA  0E00               	movlw	0
  2073  0018CC  6F86               	movwf	_overflowTimer& (0+255),b
  2074  0018CE                     
  2075                           ; BSR set to: 0
  2076                           ;main.c: 825:             sistemaRegado();
  2077  0018CE  ECD1  F00B         	call	_sistemaRegado	;wreg free
  2078  0018D2  EF4A  F00C         	goto	l3560
  2079  0018D6  EF07  F000         	goto	start
  2080  0018DA                     __end_of_main:
  2081                           	opt callstack 0
  2082                           
  2083 ;; *************** function _sistemaRegado *****************
  2084 ;; Defined at:
  2085 ;;		line 598 in file "main.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;		None
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;		None
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2099 ;;      Params:         0       0       0       0       0       0       0       0       0
  2100 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2101 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2102 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2103 ;;Total ram usage:        0 bytes
  2104 ;; Hardware stack levels used:    1
  2105 ;; Hardware stack levels required when called:    6
  2106 ;; This function calls:
  2107 ;;		_dameHoraActual
  2108 ;;		_encenderBombas
  2109 ;;		_horaRegar
  2110 ;;		_lecturaAnalogaSensores
  2111 ;;		_lecturaWifi
  2112 ;;		_mostrarMenu
  2113 ;; This function is called by:
  2114 ;;		_main
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text1
  2119  0017A2                     __ptext1:
  2120                           	opt callstack 0
  2121  0017A2                     _sistemaRegado:
  2122                           	opt callstack 24
  2123  0017A2                     
  2124                           ;main.c: 602:     if (regando) {
  2125  0017A2  0100               	movlb	0	; () banked
  2126  0017A4  5183               	movf	_regando& (0+255),w,b
  2127  0017A6  B4D8               	btfsc	status,2,c
  2128  0017A8  EFD8  F00B         	goto	u2641
  2129  0017AC  EFDA  F00B         	goto	u2640
  2130  0017B0                     u2641:
  2131  0017B0  EFFC  F00B         	goto	l3476
  2132  0017B4                     u2640:
  2133  0017B4                     
  2134                           ; BSR set to: 0
  2135                           ;main.c: 603:         contInterrupciones++;
  2136  0017B4  4B80               	infsnz	_contInterrupciones& (0+255),f,b
  2137  0017B6  2B81               	incf	(_contInterrupciones+1)& (0+255),f,b
  2138  0017B8                     
  2139                           ; BSR set to: 0
  2140                           ;main.c: 605:         if (contInterrupciones == 6) {
  2141  0017B8  0E06               	movlw	6
  2142  0017BA  1980               	xorwf	_contInterrupciones& (0+255),w,b
  2143  0017BC  1181               	iorwf	(_contInterrupciones+1)& (0+255),w,b
  2144  0017BE  A4D8               	btfss	status,2,c
  2145  0017C0  EFE4  F00B         	goto	u2651
  2146  0017C4  EFE6  F00B         	goto	u2650
  2147  0017C8                     u2651:
  2148  0017C8  EF21  F00C         	goto	l360
  2149  0017CC                     u2650:
  2150  0017CC                     
  2151                           ; BSR set to: 0
  2152                           ;main.c: 606:             contInterrupciones = 0;
  2153  0017CC  0E00               	movlw	0
  2154  0017CE  6F81               	movwf	(_contInterrupciones+1)& (0+255),b
  2155  0017D0  0E00               	movlw	0
  2156  0017D2  6F80               	movwf	_contInterrupciones& (0+255),b
  2157  0017D4                     
  2158                           ; BSR set to: 0
  2159                           ;main.c: 607:             minutosTranscurridos++;
  2160  0017D4  2B84               	incf	_minutosTranscurridos& (0+255),f,b
  2161  0017D6                     
  2162                           ; BSR set to: 0
  2163                           ;main.c: 610:             if (minutosTranscurridos >= minutosRegar) {
  2164  0017D6  5185               	movf	_minutosRegar& (0+255),w,b
  2165  0017D8  5D84               	subwf	_minutosTranscurridos& (0+255),w,b
  2166  0017DA  A0D8               	btfss	status,0,c
  2167  0017DC  EFF2  F00B         	goto	u2661
  2168  0017E0  EFF4  F00B         	goto	u2660
  2169  0017E4                     u2661:
  2170  0017E4  EF21  F00C         	goto	l360
  2171  0017E8                     u2660:
  2172  0017E8                     
  2173                           ; BSR set to: 0
  2174                           ;main.c: 612:                 LATD = 0;
  2175  0017E8  0E00               	movlw	0
  2176  0017EA  6E8C               	movwf	140,c	;volatile
  2177                           
  2178                           ;main.c: 613:                 minutosTranscurridos = 0;
  2179  0017EC  0E00               	movlw	0
  2180  0017EE  6F84               	movwf	_minutosTranscurridos& (0+255),b
  2181                           
  2182                           ;main.c: 614:                 regando = 0;
  2183  0017F0  0E00               	movlw	0
  2184  0017F2  6F83               	movwf	_regando& (0+255),b
  2185  0017F4  EF21  F00C         	goto	l360
  2186  0017F8                     l3476:
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;main.c: 620:         dameHoraActual();
  2190  0017F8  ECBD  F010         	call	_dameHoraActual	;wreg free
  2191  0017FC                     
  2192                           ;main.c: 622:         if (horaRegar() && !minutos) {
  2193  0017FC  ECA7  F010         	call	_horaRegar	;wreg free
  2194  001800  5001               	movf	?_horaRegar^0,w,c
  2195  001802  1002               	iorwf	(?_horaRegar+1)^0,w,c
  2196  001804  B4D8               	btfsc	status,2,c
  2197  001806  EF07  F00C         	goto	u2671
  2198  00180A  EF09  F00C         	goto	u2670
  2199  00180E                     u2671:
  2200  00180E  EF21  F00C         	goto	l360
  2201  001812                     u2670:
  2202  001812  0100               	movlb	0	; () banked
  2203  001814  5189               	movf	_minutos& (0+255),w,b
  2204  001816  A4D8               	btfss	status,2,c
  2205  001818  EF10  F00C         	goto	u2681
  2206  00181C  EF12  F00C         	goto	u2680
  2207  001820                     u2681:
  2208  001820  EF21  F00C         	goto	l360
  2209  001824                     u2680:
  2210  001824                     
  2211                           ; BSR set to: 0
  2212                           ;main.c: 634:                 lecturaAnalogaSensores();
  2213  001824  ECA7  F00D         	call	_lecturaAnalogaSensores	;wreg free
  2214  001828                     
  2215                           ;main.c: 635:                 minutosRegar = horarios[hora].tiempoRegar;
  2216  001828  0100               	movlb	0	; () banked
  2217  00182A  518A               	movf	_hora& (0+255),w,b
  2218  00182C  0D03               	mullw	3
  2219  00182E  0E02               	movlw	low (_horarios+2)
  2220  001830  24F3               	addwf	243,w,c
  2221  001832  6ED9               	movwf	fsr2l,c
  2222  001834  0E01               	movlw	high (_horarios+2)
  2223  001836  20F4               	addwfc	prodh,w,c
  2224  001838  6EDA               	movwf	fsr2h,c
  2225  00183A  50DF               	movf	indf2,w,c
  2226  00183C  6F85               	movwf	_minutosRegar& (0+255),b
  2227  00183E                     
  2228                           ; BSR set to: 0
  2229                           ;main.c: 636:                 encenderBombas();
  2230  00183E  EC09  F000         	call	_encenderBombas	;wreg free
  2231  001842                     l360:
  2232  001842  0012               	return		;funcret
  2233  001844                     __end_of_sistemaRegado:
  2234                           	opt callstack 0
  2235                           
  2236 ;; *************** function _horaRegar *****************
  2237 ;; Defined at:
  2238 ;;		line 141 in file "main.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;		None
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;		None
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  2    0[COMRAM] int 
  2245 ;; Registers used:
  2246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2252 ;;      Params:         2       0       0       0       0       0       0       0       0
  2253 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2254 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2255 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2256 ;;Total ram usage:        3 bytes
  2257 ;; Hardware stack levels used:    1
  2258 ;; Hardware stack levels required when called:    1
  2259 ;; This function calls:
  2260 ;;		Nothing
  2261 ;; This function is called by:
  2262 ;;		_sistemaRegado
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           	psect	text2
  2267  00214E                     __ptext2:
  2268                           	opt callstack 0
  2269  00214E                     _horaRegar:
  2270                           	opt callstack 28
  2271  00214E                     
  2272                           ;main.c: 143:     return horarios[hora].regar == 1;
  2273  00214E  0100               	movlb	0	; () banked
  2274  002150  518A               	movf	_hora& (0+255),w,b
  2275  002152  0D03               	mullw	3
  2276  002154  0E01               	movlw	low (_horarios+1)
  2277  002156  24F3               	addwf	243,w,c
  2278  002158  6ED9               	movwf	fsr2l,c
  2279  00215A  0E01               	movlw	high (_horarios+1)
  2280  00215C  20F4               	addwfc	prodh,w,c
  2281  00215E  6EDA               	movwf	fsr2h,c
  2282  002160  04DE               	decf	postinc2,w,c
  2283  002162  B4D8               	btfsc	status,2,c
  2284  002164  EFB6  F010         	goto	u2221
  2285  002168  EFB9  F010         	goto	u2220
  2286  00216C                     u2221:
  2287  00216C  0E01               	movlw	1
  2288  00216E  EFBA  F010         	goto	u2230
  2289  002172                     u2220:
  2290  002172  0E00               	movlw	0
  2291  002174                     u2230:
  2292  002174  6E01               	movwf	?_horaRegar^0,c
  2293  002176  6A02               	clrf	(?_horaRegar+1)^0,c
  2294  002178                     
  2295                           ; BSR set to: 0
  2296  002178  0012               	return		;funcret
  2297  00217A                     __end_of_horaRegar:
  2298                           	opt callstack 0
  2299                           
  2300 ;; *************** function _encenderBombas *****************
  2301 ;; Defined at:
  2302 ;;		line 252 in file "main.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;		None
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  i               2   23[COMRAM] int 
  2307 ;;  flagSeco        1   22[COMRAM] unsigned char 
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  1    wreg      void 
  2310 ;; Registers used:
  2311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2317 ;;      Params:         0       0       0       0       0       0       0       0       0
  2318 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2319 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2320 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2321 ;;Total ram usage:        5 bytes
  2322 ;; Hardware stack levels used:    1
  2323 ;; Hardware stack levels required when called:    5
  2324 ;; This function calls:
  2325 ;;		___wmul
  2326 ;;		_estaSeco
  2327 ;; This function is called by:
  2328 ;;		_sistemaRegado
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           	psect	text3
  2333  000012                     __ptext3:
  2334                           	opt callstack 0
  2335  000012                     _encenderBombas:
  2336                           	opt callstack 24
  2337  000012                     
  2338                           ;main.c: 254:     char flagSeco = 0;
  2339  000012  0E00               	movlw	0
  2340  000014  6E17               	movwf	encenderBombas@flagSeco^0,c
  2341                           
  2342                           ;main.c: 256:     for (int i = 0; i < 3; i++) {
  2343  000016  0E00               	movlw	0
  2344  000018  6E19               	movwf	(encenderBombas@i+1)^0,c
  2345  00001A  0E00               	movlw	0
  2346  00001C  6E18               	movwf	encenderBombas@i^0,c
  2347  00001E  EF33  F001         	goto	l3102
  2348  000022                     l3052:
  2349                           
  2350                           ;main.c: 261:                 if (estaSeco(sensores[i])) {
  2351  000022  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2352  000026  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2353  00002A  0E00               	movlw	0
  2354  00002C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2355  00002E  0E03               	movlw	3
  2356  000030  6E03               	movwf	___wmul@multiplicand^0,c
  2357  000032  ECFB  F010         	call	___wmul	;wreg free
  2358  000036  0E60               	movlw	low _sensores
  2359  000038  2401               	addwf	?___wmul^0,w,c
  2360  00003A  6ED9               	movwf	fsr2l,c
  2361  00003C  0E00               	movlw	high _sensores
  2362  00003E  2002               	addwfc	(?___wmul+1)^0,w,c
  2363  000040  6EDA               	movwf	fsr2h,c
  2364  000042  CFDE F010          	movff	postinc2,estaSeco@s
  2365  000046  CFDE F011          	movff	postinc2,estaSeco@s+1
  2366  00004A  CFDD F012          	movff	postdec2,estaSeco@s+2
  2367  00004E  EC85  F00F         	call	_estaSeco	;wreg free
  2368  000052  5010               	movf	?_estaSeco^0,w,c
  2369  000054  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2370  000056  B4D8               	btfsc	status,2,c
  2371  000058  EF30  F000         	goto	u2241
  2372  00005C  EF32  F000         	goto	u2240
  2373  000060                     u2241:
  2374  000060  EF61  F001         	goto	l3104
  2375  000064                     u2240:
  2376  000064                     
  2377                           ;main.c: 262:                     LATDbits.LATD0 = 1;
  2378  000064  808C               	bsf	140,0,c	;volatile
  2379  000066                     l3056:
  2380                           
  2381                           ;main.c: 263:                     flagSeco = 1;
  2382  000066  0E01               	movlw	1
  2383  000068  6E17               	movwf	encenderBombas@flagSeco^0,c
  2384  00006A  EF61  F001         	goto	l3104
  2385  00006E                     l3058:
  2386                           
  2387                           ;main.c: 268:                 if (estaSeco(sensores[i])) {
  2388  00006E  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2389  000072  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2390  000076  0E00               	movlw	0
  2391  000078  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2392  00007A  0E03               	movlw	3
  2393  00007C  6E03               	movwf	___wmul@multiplicand^0,c
  2394  00007E  ECFB  F010         	call	___wmul	;wreg free
  2395  000082  0E60               	movlw	low _sensores
  2396  000084  2401               	addwf	?___wmul^0,w,c
  2397  000086  6ED9               	movwf	fsr2l,c
  2398  000088  0E00               	movlw	high _sensores
  2399  00008A  2002               	addwfc	(?___wmul+1)^0,w,c
  2400  00008C  6EDA               	movwf	fsr2h,c
  2401  00008E  CFDE F010          	movff	postinc2,estaSeco@s
  2402  000092  CFDE F011          	movff	postinc2,estaSeco@s+1
  2403  000096  CFDD F012          	movff	postdec2,estaSeco@s+2
  2404  00009A  EC85  F00F         	call	_estaSeco	;wreg free
  2405  00009E  5010               	movf	?_estaSeco^0,w,c
  2406  0000A0  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2407  0000A2  B4D8               	btfsc	status,2,c
  2408  0000A4  EF56  F000         	goto	u2251
  2409  0000A8  EF58  F000         	goto	u2250
  2410  0000AC                     u2251:
  2411  0000AC  EF61  F001         	goto	l3104
  2412  0000B0                     u2250:
  2413  0000B0                     
  2414                           ;main.c: 269:                     LATDbits.LATD1 = 1;
  2415  0000B0  828C               	bsf	140,1,c	;volatile
  2416  0000B2  EF33  F000         	goto	l3056
  2417  0000B6                     l3064:
  2418                           
  2419                           ;main.c: 275:                 if (estaSeco(sensores[i])) {
  2420  0000B6  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2421  0000BA  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2422  0000BE  0E00               	movlw	0
  2423  0000C0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2424  0000C2  0E03               	movlw	3
  2425  0000C4  6E03               	movwf	___wmul@multiplicand^0,c
  2426  0000C6  ECFB  F010         	call	___wmul	;wreg free
  2427  0000CA  0E60               	movlw	low _sensores
  2428  0000CC  2401               	addwf	?___wmul^0,w,c
  2429  0000CE  6ED9               	movwf	fsr2l,c
  2430  0000D0  0E00               	movlw	high _sensores
  2431  0000D2  2002               	addwfc	(?___wmul+1)^0,w,c
  2432  0000D4  6EDA               	movwf	fsr2h,c
  2433  0000D6  CFDE F010          	movff	postinc2,estaSeco@s
  2434  0000DA  CFDE F011          	movff	postinc2,estaSeco@s+1
  2435  0000DE  CFDD F012          	movff	postdec2,estaSeco@s+2
  2436  0000E2  EC85  F00F         	call	_estaSeco	;wreg free
  2437  0000E6  5010               	movf	?_estaSeco^0,w,c
  2438  0000E8  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2439  0000EA  B4D8               	btfsc	status,2,c
  2440  0000EC  EF7A  F000         	goto	u2261
  2441  0000F0  EF7C  F000         	goto	u2260
  2442  0000F4                     u2261:
  2443  0000F4  EF61  F001         	goto	l3104
  2444  0000F8                     u2260:
  2445  0000F8                     
  2446                           ;main.c: 276:                     LATDbits.LATD2 = 1;
  2447  0000F8  848C               	bsf	140,2,c	;volatile
  2448  0000FA  EF33  F000         	goto	l3056
  2449  0000FE                     l3070:
  2450                           
  2451                           ;main.c: 282:                 if (estaSeco(sensores[i])) {
  2452  0000FE  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2453  000102  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2454  000106  0E00               	movlw	0
  2455  000108  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2456  00010A  0E03               	movlw	3
  2457  00010C  6E03               	movwf	___wmul@multiplicand^0,c
  2458  00010E  ECFB  F010         	call	___wmul	;wreg free
  2459  000112  0E60               	movlw	low _sensores
  2460  000114  2401               	addwf	?___wmul^0,w,c
  2461  000116  6ED9               	movwf	fsr2l,c
  2462  000118  0E00               	movlw	high _sensores
  2463  00011A  2002               	addwfc	(?___wmul+1)^0,w,c
  2464  00011C  6EDA               	movwf	fsr2h,c
  2465  00011E  CFDE F010          	movff	postinc2,estaSeco@s
  2466  000122  CFDE F011          	movff	postinc2,estaSeco@s+1
  2467  000126  CFDD F012          	movff	postdec2,estaSeco@s+2
  2468  00012A  EC85  F00F         	call	_estaSeco	;wreg free
  2469  00012E  5010               	movf	?_estaSeco^0,w,c
  2470  000130  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2471  000132  B4D8               	btfsc	status,2,c
  2472  000134  EF9E  F000         	goto	u2271
  2473  000138  EFA0  F000         	goto	u2270
  2474  00013C                     u2271:
  2475  00013C  EF61  F001         	goto	l3104
  2476  000140                     u2270:
  2477  000140                     
  2478                           ;main.c: 283:                     LATDbits.LATD3 = 1;
  2479  000140  868C               	bsf	140,3,c	;volatile
  2480  000142  EF33  F000         	goto	l3056
  2481  000146                     l3076:
  2482                           
  2483                           ;main.c: 289:                 if (estaSeco(sensores[i])) {
  2484  000146  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2485  00014A  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2486  00014E  0E00               	movlw	0
  2487  000150  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2488  000152  0E03               	movlw	3
  2489  000154  6E03               	movwf	___wmul@multiplicand^0,c
  2490  000156  ECFB  F010         	call	___wmul	;wreg free
  2491  00015A  0E60               	movlw	low _sensores
  2492  00015C  2401               	addwf	?___wmul^0,w,c
  2493  00015E  6ED9               	movwf	fsr2l,c
  2494  000160  0E00               	movlw	high _sensores
  2495  000162  2002               	addwfc	(?___wmul+1)^0,w,c
  2496  000164  6EDA               	movwf	fsr2h,c
  2497  000166  CFDE F010          	movff	postinc2,estaSeco@s
  2498  00016A  CFDE F011          	movff	postinc2,estaSeco@s+1
  2499  00016E  CFDD F012          	movff	postdec2,estaSeco@s+2
  2500  000172  EC85  F00F         	call	_estaSeco	;wreg free
  2501  000176  5010               	movf	?_estaSeco^0,w,c
  2502  000178  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2503  00017A  B4D8               	btfsc	status,2,c
  2504  00017C  EFC2  F000         	goto	u2281
  2505  000180  EFC4  F000         	goto	u2280
  2506  000184                     u2281:
  2507  000184  EF61  F001         	goto	l3104
  2508  000188                     u2280:
  2509  000188                     
  2510                           ;main.c: 290:                     LATDbits.LATD4 = 1;
  2511  000188  888C               	bsf	140,4,c	;volatile
  2512  00018A  EF33  F000         	goto	l3056
  2513  00018E                     l3082:
  2514                           
  2515                           ;main.c: 296:                 if (estaSeco(sensores[i])) {
  2516  00018E  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2517  000192  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2518  000196  0E00               	movlw	0
  2519  000198  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2520  00019A  0E03               	movlw	3
  2521  00019C  6E03               	movwf	___wmul@multiplicand^0,c
  2522  00019E  ECFB  F010         	call	___wmul	;wreg free
  2523  0001A2  0E60               	movlw	low _sensores
  2524  0001A4  2401               	addwf	?___wmul^0,w,c
  2525  0001A6  6ED9               	movwf	fsr2l,c
  2526  0001A8  0E00               	movlw	high _sensores
  2527  0001AA  2002               	addwfc	(?___wmul+1)^0,w,c
  2528  0001AC  6EDA               	movwf	fsr2h,c
  2529  0001AE  CFDE F010          	movff	postinc2,estaSeco@s
  2530  0001B2  CFDE F011          	movff	postinc2,estaSeco@s+1
  2531  0001B6  CFDD F012          	movff	postdec2,estaSeco@s+2
  2532  0001BA  EC85  F00F         	call	_estaSeco	;wreg free
  2533  0001BE  5010               	movf	?_estaSeco^0,w,c
  2534  0001C0  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2535  0001C2  B4D8               	btfsc	status,2,c
  2536  0001C4  EFE6  F000         	goto	u2291
  2537  0001C8  EFE8  F000         	goto	u2290
  2538  0001CC                     u2291:
  2539  0001CC  EF61  F001         	goto	l3104
  2540  0001D0                     u2290:
  2541  0001D0                     
  2542                           ;main.c: 297:                     LATDbits.LATD5 = 1;
  2543  0001D0  8A8C               	bsf	140,5,c	;volatile
  2544  0001D2  EF33  F000         	goto	l3056
  2545  0001D6                     l3088:
  2546                           
  2547                           ;main.c: 303:                 if (estaSeco(sensores[i])) {
  2548  0001D6  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2549  0001DA  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2550  0001DE  0E00               	movlw	0
  2551  0001E0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2552  0001E2  0E03               	movlw	3
  2553  0001E4  6E03               	movwf	___wmul@multiplicand^0,c
  2554  0001E6  ECFB  F010         	call	___wmul	;wreg free
  2555  0001EA  0E60               	movlw	low _sensores
  2556  0001EC  2401               	addwf	?___wmul^0,w,c
  2557  0001EE  6ED9               	movwf	fsr2l,c
  2558  0001F0  0E00               	movlw	high _sensores
  2559  0001F2  2002               	addwfc	(?___wmul+1)^0,w,c
  2560  0001F4  6EDA               	movwf	fsr2h,c
  2561  0001F6  CFDE F010          	movff	postinc2,estaSeco@s
  2562  0001FA  CFDE F011          	movff	postinc2,estaSeco@s+1
  2563  0001FE  CFDD F012          	movff	postdec2,estaSeco@s+2
  2564  000202  EC85  F00F         	call	_estaSeco	;wreg free
  2565  000206  5010               	movf	?_estaSeco^0,w,c
  2566  000208  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2567  00020A  B4D8               	btfsc	status,2,c
  2568  00020C  EF0A  F001         	goto	u2301
  2569  000210  EF0C  F001         	goto	u2300
  2570  000214                     u2301:
  2571  000214  EF61  F001         	goto	l3104
  2572  000218                     u2300:
  2573  000218                     
  2574                           ;main.c: 304:                     LATDbits.LATD6 = 1;
  2575  000218  8C8C               	bsf	140,6,c	;volatile
  2576  00021A  EF33  F000         	goto	l3056
  2577  00021E                     l3094:
  2578                           
  2579                           ;main.c: 310:                 if (estaSeco(sensores[i])) {
  2580  00021E  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2581  000222  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2582  000226  0E00               	movlw	0
  2583  000228  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2584  00022A  0E03               	movlw	3
  2585  00022C  6E03               	movwf	___wmul@multiplicand^0,c
  2586  00022E  ECFB  F010         	call	___wmul	;wreg free
  2587  000232  0E60               	movlw	low _sensores
  2588  000234  2401               	addwf	?___wmul^0,w,c
  2589  000236  6ED9               	movwf	fsr2l,c
  2590  000238  0E00               	movlw	high _sensores
  2591  00023A  2002               	addwfc	(?___wmul+1)^0,w,c
  2592  00023C  6EDA               	movwf	fsr2h,c
  2593  00023E  CFDE F010          	movff	postinc2,estaSeco@s
  2594  000242  CFDE F011          	movff	postinc2,estaSeco@s+1
  2595  000246  CFDD F012          	movff	postdec2,estaSeco@s+2
  2596  00024A  EC85  F00F         	call	_estaSeco	;wreg free
  2597  00024E  5010               	movf	?_estaSeco^0,w,c
  2598  000250  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2599  000252  B4D8               	btfsc	status,2,c
  2600  000254  EF2E  F001         	goto	u2311
  2601  000258  EF30  F001         	goto	u2310
  2602  00025C                     u2311:
  2603  00025C  EF61  F001         	goto	l3104
  2604  000260                     u2310:
  2605  000260                     
  2606                           ;main.c: 311:                     LATDbits.LATD7 = 1;
  2607  000260  8E8C               	bsf	140,7,c	;volatile
  2608  000262  EF33  F000         	goto	l3056
  2609  000266                     l3102:
  2610  000266  C018  F015         	movff	encenderBombas@i,??_encenderBombas
  2611  00026A  C019  F016         	movff	encenderBombas@i+1,??_encenderBombas+1
  2612                           
  2613                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2614                           ; Switch size 1, requested type "simple"
  2615                           ; Number of cases is 1, Range of values is 0 to 0
  2616                           ; switch strategies available:
  2617                           ; Name         Instructions Cycles
  2618                           ; simple_byte            4     3 (average)
  2619                           ;	Chosen strategy is simple_byte
  2620  00026E  5016               	movf	(??_encenderBombas+1)^0,w,c
  2621  000270  0A00               	xorlw	0	; case 0
  2622  000272  B4D8               	btfsc	status,2,c
  2623  000274  EF3E  F001         	goto	l3614
  2624  000278  EF61  F001         	goto	l3104
  2625  00027C                     l3614:
  2626                           
  2627                           ; Switch size 1, requested type "simple"
  2628                           ; Number of cases is 8, Range of values is 0 to 7
  2629                           ; switch strategies available:
  2630                           ; Name         Instructions Cycles
  2631                           ; simple_byte           25    13 (average)
  2632                           ;	Chosen strategy is simple_byte
  2633  00027C  5015               	movf	??_encenderBombas^0,w,c
  2634  00027E  0A00               	xorlw	0	; case 0
  2635  000280  B4D8               	btfsc	status,2,c
  2636  000282  EF11  F000         	goto	l3052
  2637  000286  0A01               	xorlw	1	; case 1
  2638  000288  B4D8               	btfsc	status,2,c
  2639  00028A  EF37  F000         	goto	l3058
  2640  00028E  0A03               	xorlw	3	; case 2
  2641  000290  B4D8               	btfsc	status,2,c
  2642  000292  EF5B  F000         	goto	l3064
  2643  000296  0A01               	xorlw	1	; case 3
  2644  000298  B4D8               	btfsc	status,2,c
  2645  00029A  EF7F  F000         	goto	l3070
  2646  00029E  0A07               	xorlw	7	; case 4
  2647  0002A0  B4D8               	btfsc	status,2,c
  2648  0002A2  EFA3  F000         	goto	l3076
  2649  0002A6  0A01               	xorlw	1	; case 5
  2650  0002A8  B4D8               	btfsc	status,2,c
  2651  0002AA  EFC7  F000         	goto	l3082
  2652  0002AE  0A03               	xorlw	3	; case 6
  2653  0002B0  B4D8               	btfsc	status,2,c
  2654  0002B2  EFEB  F000         	goto	l3088
  2655  0002B6  0A01               	xorlw	1	; case 7
  2656  0002B8  B4D8               	btfsc	status,2,c
  2657  0002BA  EF0F  F001         	goto	l3094
  2658  0002BE  EF61  F001         	goto	l3104
  2659  0002C2                     l3104:
  2660                           
  2661                           ;main.c: 317:     }
  2662  0002C2  4A18               	infsnz	encenderBombas@i^0,f,c
  2663  0002C4  2A19               	incf	(encenderBombas@i+1)^0,f,c
  2664  0002C6  BE19               	btfsc	(encenderBombas@i+1)^0,7,c
  2665  0002C8  EF6F  F001         	goto	u2321
  2666  0002CC  5019               	movf	(encenderBombas@i+1)^0,w,c
  2667  0002CE  E109               	bnz	u2320
  2668  0002D0  0E03               	movlw	3
  2669  0002D2  5C18               	subwf	encenderBombas@i^0,w,c
  2670  0002D4  A0D8               	btfss	status,0,c
  2671  0002D6  EF6F  F001         	goto	u2321
  2672  0002DA  EF71  F001         	goto	u2320
  2673  0002DE                     u2321:
  2674  0002DE  EF33  F001         	goto	l3102
  2675  0002E2                     u2320:
  2676  0002E2                     
  2677                           ;main.c: 319:     if (flagSeco)
  2678  0002E2  5017               	movf	encenderBombas@flagSeco^0,w,c
  2679  0002E4  B4D8               	btfsc	status,2,c
  2680  0002E6  EF77  F001         	goto	u2331
  2681  0002EA  EF79  F001         	goto	u2330
  2682  0002EE                     u2331:
  2683  0002EE  EF7C  F001         	goto	l273
  2684  0002F2                     u2330:
  2685  0002F2                     
  2686                           ;main.c: 320:         regando = 1;
  2687  0002F2  0E01               	movlw	1
  2688  0002F4  0100               	movlb	0	; () banked
  2689  0002F6  6F83               	movwf	_regando& (0+255),b
  2690  0002F8                     l273:
  2691  0002F8  0012               	return		;funcret
  2692  0002FA                     __end_of_encenderBombas:
  2693                           	opt callstack 0
  2694                           
  2695 ;; *************** function _estaSeco *****************
  2696 ;; Defined at:
  2697 ;;		line 132 in file "main.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;  s               3   15[COMRAM] struct .
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;  temperatura     1   19[COMRAM] unsigned char 
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  2   15[COMRAM] int 
  2704 ;; Registers used:
  2705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2711 ;;      Params:         3       0       0       0       0       0       0       0       0
  2712 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2714 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2715 ;;Total ram usage:        5 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; Hardware stack levels required when called:    4
  2718 ;; This function calls:
  2719 ;;		_dameTemperaturaHumedad
  2720 ;; This function is called by:
  2721 ;;		_encenderBombas
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text4
  2726  001F0A                     __ptext4:
  2727                           	opt callstack 0
  2728  001F0A                     _estaSeco:
  2729                           	opt callstack 24
  2730  001F0A                     
  2731                           ;main.c: 133:     unsigned char temperatura;;main.c: 135:     dameTemperaturaHumedad(((v
      +                          oid*)0), &temperatura);
  2732  001F0A  0E00               	movlw	0
  2733  001F0C  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  2734  001F0E  0E00               	movlw	0
  2735  001F10  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  2736  001F12  0E14               	movlw	low estaSeco@temperatura
  2737  001F14  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  2738  001F16  0E00               	movlw	high estaSeco@temperatura
  2739  001F18  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  2740  001F1A  EC77  F00B         	call	_dameTemperaturaHumedad	;wreg free
  2741  001F1E                     
  2742                           ;main.c: 138:     return (s.humedadMedida >= 60) && (temperatura < 34);
  2743  001F1E  0E00               	movlw	0
  2744  001F20  6E13               	movwf	_estaSeco$776^0,c
  2745  001F22  BE11               	btfsc	(estaSeco@s+1)^0,7,c
  2746  001F24  EF9D  F00F         	goto	u2091
  2747  001F28  5011               	movf	(estaSeco@s+1)^0,w,c
  2748  001F2A  E109               	bnz	u2090
  2749  001F2C  0E3C               	movlw	60
  2750  001F2E  5C10               	subwf	estaSeco@s^0,w,c
  2751  001F30  A0D8               	btfss	status,0,c
  2752  001F32  EF9D  F00F         	goto	u2091
  2753  001F36  EF9F  F00F         	goto	u2090
  2754  001F3A                     u2091:
  2755  001F3A  EFA9  F00F         	goto	l2906
  2756  001F3E                     u2090:
  2757  001F3E  0E22               	movlw	34
  2758  001F40  6014               	cpfslt	estaSeco@temperatura^0,c
  2759  001F42  EFA5  F00F         	goto	u2101
  2760  001F46  EFA7  F00F         	goto	u2100
  2761  001F4A                     u2101:
  2762  001F4A  EFA9  F00F         	goto	l2906
  2763  001F4E                     u2100:
  2764  001F4E  0E01               	movlw	1
  2765  001F50  6E13               	movwf	_estaSeco$776^0,c
  2766  001F52                     l2906:
  2767  001F52  C013  F010         	movff	_estaSeco$776,?_estaSeco
  2768  001F56  6A11               	clrf	(?_estaSeco+1)^0,c
  2769  001F58  0012               	return		;funcret
  2770  001F5A                     __end_of_estaSeco:
  2771                           	opt callstack 0
  2772                           
  2773 ;; *************** function _dameHoraActual *****************
  2774 ;; Defined at:
  2775 ;;		line 156 in file "main.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;		None
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;		None
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  1    wreg      void 
  2782 ;; Registers used:
  2783 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2789 ;;      Params:         0       0       0       0       0       0       0       0       0
  2790 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2791 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2792 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2793 ;;Total ram usage:        0 bytes
  2794 ;; Hardware stack levels used:    1
  2795 ;; Hardware stack levels required when called:    4
  2796 ;; This function calls:
  2797 ;;		_convertirDato
  2798 ;;		_leer_rtc
  2799 ;; This function is called by:
  2800 ;;		_sistemaRegado
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text5
  2805  00217A                     __ptext5:
  2806                           	opt callstack 0
  2807  00217A                     _dameHoraActual:
  2808                           	opt callstack 25
  2809  00217A                     
  2810                           ;main.c: 158:     segundos = convertirDato(leer_rtc(0x00));
  2811  00217A  0E00               	movlw	0
  2812  00217C  ECD3  F010         	call	_leer_rtc
  2813  002180  EC0E  F011         	call	_convertirDato
  2814  002184  0100               	movlb	0	; () banked
  2815  002186  6F88               	movwf	_segundos& (0+255),b
  2816                           
  2817                           ;main.c: 159:     minutos = convertirDato(leer_rtc(0x01));
  2818  002188  0E01               	movlw	1
  2819  00218A  ECD3  F010         	call	_leer_rtc
  2820  00218E  EC0E  F011         	call	_convertirDato
  2821  002192  0100               	movlb	0	; () banked
  2822  002194  6F89               	movwf	_minutos& (0+255),b
  2823                           
  2824                           ;main.c: 160:     hora = convertirDato(leer_rtc(0x02));
  2825  002196  0E02               	movlw	2
  2826  002198  ECD3  F010         	call	_leer_rtc
  2827  00219C  EC0E  F011         	call	_convertirDato
  2828  0021A0  0100               	movlb	0	; () banked
  2829  0021A2  6F8A               	movwf	_hora& (0+255),b
  2830  0021A4                     
  2831                           ; BSR set to: 0
  2832  0021A4  0012               	return		;funcret
  2833  0021A6                     __end_of_dameHoraActual:
  2834                           	opt callstack 0
  2835                           
  2836 ;; *************** function _leer_rtc *****************
  2837 ;; Defined at:
  2838 ;;		line 13 in file "./RTC.h"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;  direccion       1    wreg     unsigned char 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;  direccion       1    2[COMRAM] unsigned char 
  2843 ;;  dato            1    3[COMRAM] unsigned char 
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  1    wreg      unsigned char 
  2846 ;; Registers used:
  2847 ;;		wreg, status,2, status,0, cstack
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2853 ;;      Params:         0       0       0       0       0       0       0       0       0
  2854 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2855 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2856 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2857 ;;Total ram usage:        2 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; Hardware stack levels required when called:    3
  2860 ;; This function calls:
  2861 ;;		_i2c_detener
  2862 ;;		_i2c_envia_dato
  2863 ;;		_i2c_inicia_com
  2864 ;;		_i2c_recibe_dato
  2865 ;;		_i2c_reinicia_com
  2866 ;; This function is called by:
  2867 ;;		_dameHoraActual
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           	psect	text6
  2872  0021A6                     __ptext6:
  2873                           	opt callstack 0
  2874  0021A6                     _leer_rtc:
  2875                           	opt callstack 25
  2876                           
  2877                           ; BSR set to: 0
  2878                           ;incstack = 0
  2879                           ;leer_rtc@direccion stored from wreg
  2880  0021A6  6E03               	movwf	leer_rtc@direccion^0,c
  2881  0021A8                     
  2882                           ;./RTC.h: 14:     unsigned char dato;;./RTC.h: 15:     i2c_inicia_com();
  2883  0021A8  EC75  F011         	call	_i2c_inicia_com	;wreg free
  2884                           
  2885                           ;./RTC.h: 16:     i2c_envia_dato(0xD0);
  2886  0021AC  0ED0               	movlw	208
  2887  0021AE  EC66  F011         	call	_i2c_envia_dato
  2888                           
  2889                           ;./RTC.h: 17:     i2c_envia_dato(direccion);
  2890  0021B2  5003               	movf	leer_rtc@direccion^0,w,c
  2891  0021B4  EC66  F011         	call	_i2c_envia_dato
  2892                           
  2893                           ;./RTC.h: 18:     i2c_reinicia_com();
  2894  0021B8  EC71  F011         	call	_i2c_reinicia_com	;wreg free
  2895                           
  2896                           ;./RTC.h: 19:     i2c_envia_dato(0xD1);
  2897  0021BC  0ED1               	movlw	209
  2898  0021BE  EC66  F011         	call	_i2c_envia_dato
  2899                           
  2900                           ;./RTC.h: 20:     dato = i2c_recibe_dato();
  2901  0021C2  EC3D  F011         	call	_i2c_recibe_dato	;wreg free
  2902  0021C6  6E04               	movwf	leer_rtc@dato^0,c
  2903                           
  2904                           ;./RTC.h: 21:     i2c_detener();
  2905  0021C8  EC79  F011         	call	_i2c_detener	;wreg free
  2906  0021CC                     
  2907                           ;./RTC.h: 22:     return dato;
  2908  0021CC  5004               	movf	leer_rtc@dato^0,w,c
  2909  0021CE  0012               	return		;funcret
  2910  0021D0                     __end_of_leer_rtc:
  2911                           	opt callstack 0
  2912                           
  2913 ;; *************** function _convertirDato *****************
  2914 ;; Defined at:
  2915 ;;		line 28 in file "./RTC.h"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;  dato            1    wreg     unsigned char 
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;  dato            1    1[COMRAM] unsigned char 
  2920 ;;  datoR           1    2[COMRAM] unsigned char 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      unsigned char 
  2923 ;; Registers used:
  2924 ;;		wreg, status,2, status,0, prodl, prodh
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2930 ;;      Params:         0       0       0       0       0       0       0       0       0
  2931 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2932 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2933 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2934 ;;Total ram usage:        3 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:    1
  2937 ;; This function calls:
  2938 ;;		Nothing
  2939 ;; This function is called by:
  2940 ;;		_dameHoraActual
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text7
  2945  00221C                     __ptext7:
  2946                           	opt callstack 0
  2947  00221C                     _convertirDato:
  2948                           	opt callstack 27
  2949                           
  2950                           ;incstack = 0
  2951                           ;convertirDato@dato stored from wreg
  2952  00221C  6E02               	movwf	convertirDato@dato^0,c
  2953  00221E                     
  2954                           ;./RTC.h: 30:     datoR = (dato & 0xF0) >> 4;
  2955  00221E  3802               	swapf	convertirDato@dato^0,w,c
  2956  002220  0B0F               	andlw	15
  2957  002222  0B0F               	andlw	15
  2958  002224  6E03               	movwf	convertirDato@datoR^0,c
  2959  002226                     
  2960                           ;./RTC.h: 31:     datoR = (datoR * 10) + (dato & 0x0F);
  2961  002226  C002  F001         	movff	convertirDato@dato,??_convertirDato
  2962  00222A  0E0F               	movlw	15
  2963  00222C  1601               	andwf	??_convertirDato^0,f,c
  2964  00222E  5003               	movf	convertirDato@datoR^0,w,c
  2965  002230  0D0A               	mullw	10
  2966  002232  50F3               	movf	243,w,c
  2967  002234  2401               	addwf	??_convertirDato^0,w,c
  2968  002236  6E03               	movwf	convertirDato@datoR^0,c
  2969  002238                     
  2970                           ;./RTC.h: 32:     return datoR;
  2971  002238  5003               	movf	convertirDato@datoR^0,w,c
  2972  00223A  0012               	return		;funcret
  2973  00223C                     __end_of_convertirDato:
  2974                           	opt callstack 0
  2975                           
  2976 ;; *************** function _sistemaPrincipal *****************
  2977 ;; Defined at:
  2978 ;;		line 558 in file "main.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  opcion          1    wreg     unsigned char 
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;  opcion          1   92[COMRAM] unsigned char 
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      void 
  2985 ;; Registers used:
  2986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2992 ;;      Params:         0       0       0       0       0       0       0       0       0
  2993 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2994 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2995 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2996 ;;Total ram usage:        3 bytes
  2997 ;; Hardware stack levels used:    1
  2998 ;; Hardware stack levels required when called:   10
  2999 ;; This function calls:
  3000 ;;		_UART_printf
  3001 ;;		_asignarHorarios
  3002 ;;		_dameDatosSistema
  3003 ;;		_fijaHoraRtc
  3004 ;;		_mostrarDatosSensores
  3005 ;;		_mostrarDatosSensoresWIFI
  3006 ;;		_mostrarMenu
  3007 ;;		_setTiempoRegar
  3008 ;; This function is called by:
  3009 ;;		_main
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013                           	psect	text8
  3014  001970                     __ptext8:
  3015                           	opt callstack 0
  3016  001970                     _sistemaPrincipal:
  3017                           	opt callstack 20
  3018                           
  3019                           ;incstack = 0
  3020                           ;sistemaPrincipal@opcion stored from wreg
  3021  001970  6E5D               	movwf	sistemaPrincipal@opcion^0,c
  3022  001972                     
  3023                           ;main.c: 560:     PIE1bits.RCIE = 0;
  3024  001972  9A9D               	bcf	157,5,c	;volatile
  3025                           
  3026                           ;main.c: 562:     switch (opcion) {
  3027  001974  EFD8  F00C         	goto	l3452
  3028  001978                     l3436:
  3029                           
  3030                           ;main.c: 565:             fijaHoraRtc();
  3031  001978  ECDB  F00D         	call	_fijaHoraRtc	;wreg free
  3032                           
  3033                           ;main.c: 566:             break;
  3034  00197C  EFF9  F00C         	goto	l3454
  3035  001980                     l3438:
  3036                           
  3037                           ;main.c: 569:             asignarHorarios();
  3038  001980  ECC8  F006         	call	_asignarHorarios	;wreg free
  3039                           
  3040                           ;main.c: 570:             break;
  3041  001984  EFF9  F00C         	goto	l3454
  3042  001988                     l3440:
  3043                           
  3044                           ;main.c: 573:             setTiempoRegar();
  3045  001988  ECEE  F002         	call	_setTiempoRegar	;wreg free
  3046                           
  3047                           ;main.c: 574:             break;
  3048  00198C  EFF9  F00C         	goto	l3454
  3049  001990                     l3442:
  3050                           
  3051                           ;main.c: 577:             dameDatosSistema();
  3052  001990  EC0C  F009         	call	_dameDatosSistema	;wreg free
  3053                           
  3054                           ;main.c: 578:             break;
  3055  001994  EFF9  F00C         	goto	l3454
  3056  001998                     l3446:
  3057                           
  3058                           ;main.c: 584:                 mostrarDatosSensores();
  3059  001998  EC22  F006         	call	_mostrarDatosSensores	;wreg free
  3060  00199C  EFF9  F00C         	goto	l3454
  3061  0019A0                     l3448:
  3062                           
  3063                           ;main.c: 589:             UART_printf("\r\n Solo se permiten numeros del 1 al 3 \r\n");
  3064  0019A0  0E07               	movlw	low STR_24
  3065  0019A2  6E02               	movwf	UART_printf@cadena^0,c
  3066  0019A4  0E7D               	movlw	high STR_24
  3067  0019A6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3068  0019A8  ECD5  F00E         	call	_UART_printf	;wreg free
  3069                           
  3070                           ;main.c: 590:             break;
  3071  0019AC  EFF9  F00C         	goto	l3454
  3072  0019B0                     l3452:
  3073  0019B0  505D               	movf	sistemaPrincipal@opcion^0,w,c
  3074  0019B2  6E5B               	movwf	??_sistemaPrincipal^0,c
  3075  0019B4  6A5C               	clrf	(??_sistemaPrincipal+1)^0,c
  3076                           
  3077                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3078                           ; Switch size 1, requested type "simple"
  3079                           ; Number of cases is 1, Range of values is 0 to 0
  3080                           ; switch strategies available:
  3081                           ; Name         Instructions Cycles
  3082                           ; simple_byte            4     3 (average)
  3083                           ;	Chosen strategy is simple_byte
  3084  0019B6  505C               	movf	(??_sistemaPrincipal+1)^0,w,c
  3085  0019B8  0A00               	xorlw	0	; case 0
  3086  0019BA  B4D8               	btfsc	status,2,c
  3087  0019BC  EFE2  F00C         	goto	l3616
  3088  0019C0  EFD0  F00C         	goto	l3448
  3089  0019C4                     l3616:
  3090                           
  3091                           ; Switch size 1, requested type "simple"
  3092                           ; Number of cases is 5, Range of values is 1 to 5
  3093                           ; switch strategies available:
  3094                           ; Name         Instructions Cycles
  3095                           ; simple_byte           16     9 (average)
  3096                           ;	Chosen strategy is simple_byte
  3097  0019C4  505B               	movf	??_sistemaPrincipal^0,w,c
  3098  0019C6  0A01               	xorlw	1	; case 1
  3099  0019C8  B4D8               	btfsc	status,2,c
  3100  0019CA  EFBC  F00C         	goto	l3436
  3101  0019CE  0A03               	xorlw	3	; case 2
  3102  0019D0  B4D8               	btfsc	status,2,c
  3103  0019D2  EFC0  F00C         	goto	l3438
  3104  0019D6  0A01               	xorlw	1	; case 3
  3105  0019D8  B4D8               	btfsc	status,2,c
  3106  0019DA  EFC4  F00C         	goto	l3440
  3107  0019DE  0A07               	xorlw	7	; case 4
  3108  0019E0  B4D8               	btfsc	status,2,c
  3109  0019E2  EFC8  F00C         	goto	l3442
  3110  0019E6  0A01               	xorlw	1	; case 5
  3111  0019E8  B4D8               	btfsc	status,2,c
  3112  0019EA  EFCC  F00C         	goto	l3446
  3113  0019EE  EFD0  F00C         	goto	l3448
  3114  0019F2                     l3454:
  3115                           
  3116                           ;main.c: 593:     mostrarMenu();
  3117  0019F2  EC42  F00E         	call	_mostrarMenu	;wreg free
  3118  0019F6                     
  3119                           ;main.c: 594:     PIE1bits.RCIE = 1;
  3120  0019F6  8A9D               	bsf	157,5,c	;volatile
  3121  0019F8  0012               	return		;funcret
  3122  0019FA                     __end_of_sistemaPrincipal:
  3123                           	opt callstack 0
  3124                           
  3125 ;; *************** function _setTiempoRegar *****************
  3126 ;; Defined at:
  3127 ;;		line 404 in file "main.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;		None
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;  i               2   18[COMRAM] int 
  3132 ;;  i               2   16[COMRAM] int 
  3133 ;;  Rx              1   21[COMRAM] unsigned char 
  3134 ;;  datoCapturad    1   20[COMRAM] unsigned char 
  3135 ;;  hora            1   15[COMRAM] unsigned char 
  3136 ;;  tiempoRegar     1   14[COMRAM] unsigned char 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  1    wreg      void 
  3139 ;; Registers used:
  3140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3146 ;;      Params:         0       0       0       0       0       0       0       0       0
  3147 ;;      Locals:         8       0       0       0       0       0       0       0       0
  3148 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3149 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3150 ;;Total ram usage:        8 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    5
  3153 ;; This function calls:
  3154 ;;		_UART_printf
  3155 ;;		_UART_read
  3156 ;;		_UART_write
  3157 ;;		_escribeHorariosMemoria
  3158 ;; This function is called by:
  3159 ;;		_sistemaPrincipal
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           	psect	text9
  3164  0005DC                     __ptext9:
  3165                           	opt callstack 0
  3166  0005DC                     _setTiempoRegar:
  3167                           	opt callstack 24
  3168  0005DC                     
  3169                           ;main.c: 406:     unsigned char hora;;main.c: 407:     unsigned char tiempoRegar;;main.c
      +                          : 408:     unsigned char Rx;;main.c: 409:     char datoCapturado = 0;
  3170  0005DC  0E00               	movlw	0
  3171  0005DE  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3172  0005E0                     
  3173                           ;main.c: 411:     UART_printf("\r\n TIEMPO DE REGADO \r\n");
  3174  0005E0  0EA4               	movlw	low STR_9
  3175  0005E2  6E02               	movwf	UART_printf@cadena^0,c
  3176  0005E4  0E7F               	movlw	high STR_9
  3177  0005E6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3178  0005E8  ECD5  F00E         	call	_UART_printf	;wreg free
  3179  0005EC                     
  3180                           ;main.c: 412:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  3181  0005EC  0E46               	movlw	low STR_6
  3182  0005EE  6E02               	movwf	UART_printf@cadena^0,c
  3183  0005F0  0E7C               	movlw	high STR_6
  3184  0005F2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3185  0005F4  ECD5  F00E         	call	_UART_printf	;wreg free
  3186                           
  3187                           ;main.c: 414:     for (int i = 0; i < 2; i++) {
  3188  0005F8  0E00               	movlw	0
  3189  0005FA  6E12               	movwf	(setTiempoRegar@i+1)^0,c
  3190  0005FC  0E00               	movlw	0
  3191  0005FE  6E11               	movwf	setTiempoRegar@i^0,c
  3192  000600                     l3204:
  3193                           
  3194                           ;main.c: 415:         Rx = UART_read();
  3195  000600  EC32  F00F         	call	_UART_read	;wreg free
  3196  000604  6E16               	movwf	setTiempoRegar@Rx^0,c
  3197  000606                     
  3198                           ;main.c: 416:         if (Rx >= 48 && Rx <= 57) {
  3199  000606  0E2F               	movlw	47
  3200  000608  6416               	cpfsgt	setTiempoRegar@Rx^0,c
  3201  00060A  EF09  F003         	goto	u2451
  3202  00060E  EF0B  F003         	goto	u2450
  3203  000612                     u2451:
  3204  000612  EF2E  F003         	goto	l3224
  3205  000616                     u2450:
  3206  000616  0E3A               	movlw	58
  3207  000618  6016               	cpfslt	setTiempoRegar@Rx^0,c
  3208  00061A  EF11  F003         	goto	u2461
  3209  00061E  EF13  F003         	goto	u2460
  3210  000622                     u2461:
  3211  000622  EF2E  F003         	goto	l3224
  3212  000626                     u2460:
  3213  000626                     
  3214                           ;main.c: 417:             if (!i) {
  3215  000626  5011               	movf	setTiempoRegar@i^0,w,c
  3216  000628  1012               	iorwf	(setTiempoRegar@i+1)^0,w,c
  3217  00062A  A4D8               	btfss	status,2,c
  3218  00062C  EF1A  F003         	goto	u2471
  3219  000630  EF1C  F003         	goto	u2470
  3220  000634                     u2471:
  3221  000634  EF26  F003         	goto	l3218
  3222  000638                     u2470:
  3223  000638                     
  3224                           ;main.c: 418:                 Rx -= 48;
  3225  000638  0E30               	movlw	48
  3226  00063A  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  3227  00063C                     
  3228                           ;main.c: 419:                 hora = Rx;
  3229  00063C  C016  F010         	movff	setTiempoRegar@Rx,setTiempoRegar@hora
  3230  000640                     
  3231                           ;main.c: 420:                 hora *= 10;
  3232  000640  0E0A               	movlw	10
  3233  000642  0210               	mulwf	setTiempoRegar@hora^0,c
  3234  000644  50F3               	movf	prodl,w,c
  3235  000646  6E10               	movwf	setTiempoRegar@hora^0,c
  3236                           
  3237                           ;main.c: 421:             } else {
  3238  000648  EF35  F003         	goto	l3228
  3239  00064C                     l3218:
  3240                           
  3241                           ;main.c: 422:                 datoCapturado = 1;
  3242  00064C  0E01               	movlw	1
  3243  00064E  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3244  000650                     
  3245                           ;main.c: 423:                 Rx -= 48;
  3246  000650  0E30               	movlw	48
  3247  000652  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  3248  000654                     
  3249                           ;main.c: 424:                 hora += Rx;
  3250  000654  5016               	movf	setTiempoRegar@Rx^0,w,c
  3251  000656  2610               	addwf	setTiempoRegar@hora^0,f,c
  3252  000658  EF35  F003         	goto	l3228
  3253  00065C                     l3224:
  3254                           
  3255                           ;main.c: 427:             datoCapturado = 0;
  3256  00065C  0E00               	movlw	0
  3257  00065E  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3258  000660                     
  3259                           ;main.c: 429:             UART_write('F');
  3260  000660  0E46               	movlw	70
  3261  000662  EC4A  F011         	call	_UART_write
  3262                           
  3263                           ;main.c: 430:             break;
  3264  000666  EF45  F003         	goto	l3232
  3265  00066A                     l3228:
  3266                           
  3267                           ;main.c: 432:     }
  3268  00066A  4A11               	infsnz	setTiempoRegar@i^0,f,c
  3269  00066C  2A12               	incf	(setTiempoRegar@i+1)^0,f,c
  3270  00066E  BE12               	btfsc	(setTiempoRegar@i+1)^0,7,c
  3271  000670  EF43  F003         	goto	u2481
  3272  000674  5012               	movf	(setTiempoRegar@i+1)^0,w,c
  3273  000676  E109               	bnz	u2480
  3274  000678  0E02               	movlw	2
  3275  00067A  5C11               	subwf	setTiempoRegar@i^0,w,c
  3276  00067C  A0D8               	btfss	status,0,c
  3277  00067E  EF43  F003         	goto	u2481
  3278  000682  EF45  F003         	goto	u2480
  3279  000686                     u2481:
  3280  000686  EF00  F003         	goto	l3204
  3281  00068A                     u2480:
  3282  00068A                     l3232:
  3283                           
  3284                           ;main.c: 434:     if (datoCapturado && !esperandoDatos) {
  3285  00068A  5015               	movf	setTiempoRegar@datoCapturado^0,w,c
  3286  00068C  B4D8               	btfsc	status,2,c
  3287  00068E  EF4B  F003         	goto	u2491
  3288  000692  EF4D  F003         	goto	u2490
  3289  000696                     u2491:
  3290  000696  EFD1  F003         	goto	l308
  3291  00069A                     u2490:
  3292  00069A  505E               	movf	_esperandoDatos^0,w,c
  3293  00069C  A4D8               	btfss	status,2,c
  3294  00069E  EF53  F003         	goto	u2501
  3295  0006A2  EF55  F003         	goto	u2500
  3296  0006A6                     u2501:
  3297  0006A6  EFD1  F003         	goto	l308
  3298  0006AA                     u2500:
  3299  0006AA                     
  3300                           ;main.c: 436:         UART_printf("\r\n Ingrese los minutos que desee que se riegue en e
      +                          se horario ej: 15 \r\n");
  3301  0006AA  0EC7               	movlw	low STR_11
  3302  0006AC  6E02               	movwf	UART_printf@cadena^0,c
  3303  0006AE  0E7B               	movlw	high STR_11
  3304  0006B0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3305  0006B2  ECD5  F00E         	call	_UART_printf	;wreg free
  3306  0006B6                     
  3307                           ;main.c: 438:         for (int i = 0; i < 2; i++) {
  3308  0006B6  0E00               	movlw	0
  3309  0006B8  6E14               	movwf	(setTiempoRegar@i_840+1)^0,c
  3310  0006BA  0E00               	movlw	0
  3311  0006BC  6E13               	movwf	setTiempoRegar@i_840^0,c
  3312  0006BE                     l3244:
  3313                           
  3314                           ;main.c: 439:             Rx = UART_read();
  3315  0006BE  EC32  F00F         	call	_UART_read	;wreg free
  3316  0006C2  6E16               	movwf	setTiempoRegar@Rx^0,c
  3317  0006C4                     
  3318                           ;main.c: 440:             if (Rx >= 48 && Rx <= 57) {
  3319  0006C4  0E2F               	movlw	47
  3320  0006C6  6416               	cpfsgt	setTiempoRegar@Rx^0,c
  3321  0006C8  EF68  F003         	goto	u2511
  3322  0006CC  EF6A  F003         	goto	u2510
  3323  0006D0                     u2511:
  3324  0006D0  EF8D  F003         	goto	l3264
  3325  0006D4                     u2510:
  3326  0006D4  0E3A               	movlw	58
  3327  0006D6  6016               	cpfslt	setTiempoRegar@Rx^0,c
  3328  0006D8  EF70  F003         	goto	u2521
  3329  0006DC  EF72  F003         	goto	u2520
  3330  0006E0                     u2521:
  3331  0006E0  EF8D  F003         	goto	l3264
  3332  0006E4                     u2520:
  3333  0006E4                     
  3334                           ;main.c: 441:                 if (!i) {
  3335  0006E4  5013               	movf	setTiempoRegar@i_840^0,w,c
  3336  0006E6  1014               	iorwf	(setTiempoRegar@i_840+1)^0,w,c
  3337  0006E8  A4D8               	btfss	status,2,c
  3338  0006EA  EF79  F003         	goto	u2531
  3339  0006EE  EF7B  F003         	goto	u2530
  3340  0006F2                     u2531:
  3341  0006F2  EF85  F003         	goto	l3258
  3342  0006F6                     u2530:
  3343  0006F6                     
  3344                           ;main.c: 442:                     Rx -= 48;
  3345  0006F6  0E30               	movlw	48
  3346  0006F8  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  3347  0006FA                     
  3348                           ;main.c: 443:                     tiempoRegar = Rx;
  3349  0006FA  C016  F00F         	movff	setTiempoRegar@Rx,setTiempoRegar@tiempoRegar
  3350  0006FE                     
  3351                           ;main.c: 444:                     tiempoRegar *= 10;
  3352  0006FE  0E0A               	movlw	10
  3353  000700  020F               	mulwf	setTiempoRegar@tiempoRegar^0,c
  3354  000702  50F3               	movf	prodl,w,c
  3355  000704  6E0F               	movwf	setTiempoRegar@tiempoRegar^0,c
  3356                           
  3357                           ;main.c: 445:                 } else {
  3358  000706  EF94  F003         	goto	l3268
  3359  00070A                     l3258:
  3360                           
  3361                           ;main.c: 446:                     datoCapturado = 1;
  3362  00070A  0E01               	movlw	1
  3363  00070C  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3364  00070E                     
  3365                           ;main.c: 447:                     Rx -= 48;
  3366  00070E  0E30               	movlw	48
  3367  000710  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  3368  000712                     
  3369                           ;main.c: 448:                     tiempoRegar += Rx;
  3370  000712  5016               	movf	setTiempoRegar@Rx^0,w,c
  3371  000714  260F               	addwf	setTiempoRegar@tiempoRegar^0,f,c
  3372  000716  EF94  F003         	goto	l3268
  3373  00071A                     l3264:
  3374                           
  3375                           ;main.c: 451:                 datoCapturado = 0;
  3376  00071A  0E00               	movlw	0
  3377  00071C  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3378  00071E                     
  3379                           ;main.c: 453:                 UART_write('F');
  3380  00071E  0E46               	movlw	70
  3381  000720  EC4A  F011         	call	_UART_write
  3382                           
  3383                           ;main.c: 454:                 break;
  3384  000724  EFA4  F003         	goto	l3272
  3385  000728                     l3268:
  3386                           
  3387                           ;main.c: 456:         }
  3388  000728  4A13               	infsnz	setTiempoRegar@i_840^0,f,c
  3389  00072A  2A14               	incf	(setTiempoRegar@i_840+1)^0,f,c
  3390  00072C  BE14               	btfsc	(setTiempoRegar@i_840+1)^0,7,c
  3391  00072E  EFA2  F003         	goto	u2541
  3392  000732  5014               	movf	(setTiempoRegar@i_840+1)^0,w,c
  3393  000734  E109               	bnz	u2540
  3394  000736  0E02               	movlw	2
  3395  000738  5C13               	subwf	setTiempoRegar@i_840^0,w,c
  3396  00073A  A0D8               	btfss	status,0,c
  3397  00073C  EFA2  F003         	goto	u2541
  3398  000740  EFA4  F003         	goto	u2540
  3399  000744                     u2541:
  3400  000744  EF5F  F003         	goto	l3244
  3401  000748                     u2540:
  3402  000748                     l3272:
  3403                           
  3404                           ;main.c: 458:         if (datoCapturado && !esperandoDatos) {
  3405  000748  5015               	movf	setTiempoRegar@datoCapturado^0,w,c
  3406  00074A  B4D8               	btfsc	status,2,c
  3407  00074C  EFAA  F003         	goto	u2551
  3408  000750  EFAC  F003         	goto	u2550
  3409  000754                     u2551:
  3410  000754  EFD1  F003         	goto	l308
  3411  000758                     u2550:
  3412  000758  505E               	movf	_esperandoDatos^0,w,c
  3413  00075A  A4D8               	btfss	status,2,c
  3414  00075C  EFB2  F003         	goto	u2561
  3415  000760  EFB4  F003         	goto	u2560
  3416  000764                     u2561:
  3417  000764  EFD1  F003         	goto	l308
  3418  000768                     u2560:
  3419  000768                     
  3420                           ;main.c: 460:             UART_printf("\r\n Minutos de riego establecidos! \r\n");
  3421  000768  0ECF               	movlw	low STR_12
  3422  00076A  6E02               	movwf	UART_printf@cadena^0,c
  3423  00076C  0E7D               	movlw	high STR_12
  3424  00076E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3425  000770  ECD5  F00E         	call	_UART_printf	;wreg free
  3426  000774                     
  3427                           ;main.c: 462:             horarios[hora].tiempoRegar = tiempoRegar;
  3428  000774  5010               	movf	setTiempoRegar@hora^0,w,c
  3429  000776  0D03               	mullw	3
  3430  000778  0E02               	movlw	low (_horarios+2)
  3431  00077A  24F3               	addwf	243,w,c
  3432  00077C  6ED9               	movwf	fsr2l,c
  3433  00077E  0E01               	movlw	high (_horarios+2)
  3434  000780  20F4               	addwfc	prodh,w,c
  3435  000782  6EDA               	movwf	fsr2h,c
  3436  000784  C00F  FFDF         	movff	setTiempoRegar@tiempoRegar,indf2
  3437  000788                     
  3438                           ;main.c: 463:             minutosRegar = horarios[hora].tiempoRegar;
  3439  000788  5010               	movf	setTiempoRegar@hora^0,w,c
  3440  00078A  0D03               	mullw	3
  3441  00078C  0E02               	movlw	low (_horarios+2)
  3442  00078E  24F3               	addwf	243,w,c
  3443  000790  6ED9               	movwf	fsr2l,c
  3444  000792  0E01               	movlw	high (_horarios+2)
  3445  000794  20F4               	addwfc	prodh,w,c
  3446  000796  6EDA               	movwf	fsr2h,c
  3447  000798  50DF               	movf	indf2,w,c
  3448  00079A  0100               	movlb	0	; () banked
  3449  00079C  6F85               	movwf	_minutosRegar& (0+255),b
  3450  00079E                     
  3451                           ; BSR set to: 0
  3452                           ;main.c: 465:             escribeHorariosMemoria();
  3453  00079E  EC81  F009         	call	_escribeHorariosMemoria	;wreg free
  3454  0007A2                     l308:
  3455  0007A2  0012               	return		;funcret
  3456  0007A4                     __end_of_setTiempoRegar:
  3457                           	opt callstack 0
  3458                           
  3459 ;; *************** function _mostrarMenu *****************
  3460 ;; Defined at:
  3461 ;;		line 546 in file "main.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;		None
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      void 
  3468 ;; Registers used:
  3469 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3475 ;;      Params:         0       0       0       0       0       0       0       0       0
  3476 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3477 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3478 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3479 ;;Total ram usage:        0 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; Hardware stack levels required when called:    3
  3482 ;; This function calls:
  3483 ;;		_UART_printf
  3484 ;; This function is called by:
  3485 ;;		_sistemaPrincipal
  3486 ;;		_sistemaRegado
  3487 ;;		_main
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           	psect	text10
  3492  001C84                     __ptext10:
  3493                           	opt callstack 0
  3494  001C84                     _mostrarMenu:
  3495                           	opt callstack 26
  3496  001C84                     
  3497                           ;main.c: 548:     UART_printf("\r\n Ingresa una opcion a Realizar: \r\n");
  3498  001C84  0EF4               	movlw	low STR_16
  3499  001C86  6E02               	movwf	UART_printf@cadena^0,c
  3500  001C88  0E7D               	movlw	high STR_16
  3501  001C8A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3502  001C8C  ECD5  F00E         	call	_UART_printf	;wreg free
  3503                           
  3504                           ;main.c: 549:     UART_printf("\r\n 1. Fijar Hora Actual \r\n");
  3505  001C90  0E3D               	movlw	low STR_17
  3506  001C92  6E02               	movwf	UART_printf@cadena^0,c
  3507  001C94  0E7F               	movlw	high STR_17
  3508  001C96  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3509  001C98  ECD5  F00E         	call	_UART_printf	;wreg free
  3510                           
  3511                           ;main.c: 550:     UART_printf("\r\n 2. Asignar Horarios para regar \r\n");
  3512  001C9C  0E3E               	movlw	low STR_18
  3513  001C9E  6E02               	movwf	UART_printf@cadena^0,c
  3514  001CA0  0E7E               	movlw	high STR_18
  3515  001CA2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3516  001CA4  ECD5  F00E         	call	_UART_printf	;wreg free
  3517                           
  3518                           ;main.c: 551:     UART_printf("\r\n 3. Programar tiempo de riego en un horario \r\n");
  3519  001CA8  0EAB               	movlw	low STR_19
  3520  001CAA  6E02               	movwf	UART_printf@cadena^0,c
  3521  001CAC  0E7C               	movlw	high STR_19
  3522  001CAE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3523  001CB0  ECD5  F00E         	call	_UART_printf	;wreg free
  3524                           
  3525                           ;main.c: 552:     UART_printf("\r\n 4. Dame datos del sistema \r\n");
  3526  001CB4  0EA5               	movlw	low STR_20
  3527  001CB6  6E02               	movwf	UART_printf@cadena^0,c
  3528  001CB8  0E7E               	movlw	high STR_20
  3529  001CBA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3530  001CBC  ECD5  F00E         	call	_UART_printf	;wreg free
  3531                           
  3532                           ;main.c: 553:     UART_printf("\r\n 5. Mostrar valores sensores \r\n");
  3533  001CC0  0E63               	movlw	low STR_21
  3534  001CC2  6E02               	movwf	UART_printf@cadena^0,c
  3535  001CC4  0E7E               	movlw	high STR_21
  3536  001CC6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3537  001CC8  ECD5  F00E         	call	_UART_printf	;wreg free
  3538                           
  3539                           ;main.c: 554:     UART_printf("\r\n Opcion:  \r");
  3540  001CCC  0EF0               	movlw	low STR_22
  3541  001CCE  6E02               	movwf	UART_printf@cadena^0,c
  3542  001CD0  0E7F               	movlw	high STR_22
  3543  001CD2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3544  001CD4  ECD5  F00E         	call	_UART_printf	;wreg free
  3545                           
  3546                           ;main.c: 555:     UART_printf("\r\n");
  3547  001CD8  0E6F               	movlw	low (STR_8+23)
  3548  001CDA  6E02               	movwf	UART_printf@cadena^0,c
  3549  001CDC  0E7F               	movlw	high (STR_8+23)
  3550  001CDE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3551  001CE0  ECD5  F00E         	call	_UART_printf	;wreg free
  3552  001CE4  0012               	return		;funcret
  3553  001CE6                     __end_of_mostrarMenu:
  3554                           	opt callstack 0
  3555                           
  3556 ;; *************** function _mostrarDatosSensoresWIFI *****************
  3557 ;; Defined at:
  3558 ;;		line 732 in file "main.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;		None
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;  i               2   72[BANK0 ] int 
  3563 ;;  buffer         50   20[BANK0 ] unsigned char [50]
  3564 ;;  humedad         1   71[BANK0 ] unsigned char 
  3565 ;;  temperatura     1   70[BANK0 ] unsigned char 
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      void 
  3568 ;; Registers used:
  3569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3575 ;;      Params:         0       0       0       0       0       0       0       0       0
  3576 ;;      Locals:         0      54       0       0       0       0       0       0       0
  3577 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3578 ;;      Totals:         2      54       0       0       0       0       0       0       0
  3579 ;;Total ram usage:       56 bytes
  3580 ;; Hardware stack levels used:    1
  3581 ;; Hardware stack levels required when called:    9
  3582 ;; This function calls:
  3583 ;;		_UART_printf
  3584 ;;		_UART_write
  3585 ;;		___wmul
  3586 ;;		_dameTemperaturaHumedad
  3587 ;;		_lecturaWifi
  3588 ;;		_sprintf
  3589 ;; This function is called by:
  3590 ;;		_sistemaPrincipal
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           	psect	text11
  3595  000ED8                     __ptext11:
  3596                           	opt callstack 0
  3597  000ED8                     _mostrarDatosSensoresWIFI:
  3598                           	opt callstack 20
  3599  000ED8                     
  3600                           ;main.c: 735:     char buffer[50];;main.c: 736:     unsigned char temperatura, humedad;;
      +                          main.c: 738:     lecturaWifi();
  3601  000ED8  EC93  F008         	call	_lecturaWifi	;wreg free
  3602  000EDC                     
  3603                           ;main.c: 740:     UART_write('I');
  3604  000EDC  0E49               	movlw	73
  3605  000EDE  EC4A  F011         	call	_UART_write
  3606  000EE2                     
  3607                           ;main.c: 743:     if (peticionLecturaSensores) {
  3608  000EE2  0100               	movlb	0	; () banked
  3609  000EE4  5182               	movf	_peticionLecturaSensores& (0+255),w,b
  3610  000EE6  B4D8               	btfsc	status,2,c
  3611  000EE8  EF78  F007         	goto	u2581
  3612  000EEC  EF7A  F007         	goto	u2580
  3613  000EF0                     u2581:
  3614  000EF0  EFD7  F007         	goto	l3332
  3615  000EF4                     u2580:
  3616  000EF4                     
  3617                           ; BSR set to: 0
  3618                           ;main.c: 745:         for (int i = 0; i < 3; i++) {
  3619  000EF4  0E00               	movlw	0
  3620  000EF6  6FF7               	movwf	(mostrarDatosSensoresWIFI@i+1)& (0+255),b
  3621  000EF8  0E00               	movlw	0
  3622  000EFA  6FF6               	movwf	mostrarDatosSensoresWIFI@i& (0+255),b
  3623  000EFC                     l3318:
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;main.c: 747:             if (sensores[i].humedadMedida >= 60) {
  3627  000EFC  C0F6  F001         	movff	mostrarDatosSensoresWIFI@i,___wmul@multiplier
  3628  000F00  C0F7  F002         	movff	mostrarDatosSensoresWIFI@i+1,___wmul@multiplier+1
  3629  000F04  0E00               	movlw	0
  3630  000F06  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3631  000F08  0E03               	movlw	3
  3632  000F0A  6E03               	movwf	___wmul@multiplicand^0,c
  3633  000F0C  ECFB  F010         	call	___wmul	;wreg free
  3634  000F10  0E60               	movlw	low _sensores
  3635  000F12  2401               	addwf	?___wmul^0,w,c
  3636  000F14  6ED9               	movwf	fsr2l,c
  3637  000F16  0E00               	movlw	high _sensores
  3638  000F18  2002               	addwfc	(?___wmul+1)^0,w,c
  3639  000F1A  6EDA               	movwf	fsr2h,c
  3640  000F1C  0E01               	movlw	1
  3641  000F1E  BEDB               	btfsc	plusw2,7,c
  3642  000F20  EF9C  F007         	goto	u2591
  3643  000F24  0E01               	movlw	1
  3644  000F26  50DB               	movf	plusw2,w,c
  3645  000F28  E109               	bnz	u2590
  3646  000F2A  0E3C               	movlw	60
  3647  000F2C  5CDE               	subwf	postinc2,w,c
  3648  000F2E  A0D8               	btfss	status,0,c
  3649  000F30  EF9C  F007         	goto	u2591
  3650  000F34  EF9E  F007         	goto	u2590
  3651  000F38                     u2591:
  3652  000F38  EFB5  F007         	goto	l3324
  3653  000F3C                     u2590:
  3654  000F3C                     
  3655                           ;main.c: 748:                 sprintf(buffer, "\r\n\nEl sensor %d detecta tierra seca\r\
      +                          n", i);
  3656  000F3C  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3657  000F3E  0100               	movlb	0	; () banked
  3658  000F40  6FAE               	movwf	sprintf@s& (0+255),b
  3659  000F42  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3660  000F44  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3661  000F46  0EA9               	movlw	low STR_32
  3662  000F48  6FB0               	movwf	sprintf@fmt& (0+255),b
  3663  000F4A  0E7D               	movlw	high STR_32
  3664  000F4C  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3665  000F4E  C0F6  F0B2         	movff	mostrarDatosSensoresWIFI@i,?_sprintf+4
  3666  000F52  C0F7  F0B3         	movff	mostrarDatosSensoresWIFI@i+1,?_sprintf+5
  3667  000F56  EC5C  F00F         	call	_sprintf	;wreg free
  3668  000F5A                     l3322:
  3669                           
  3670                           ;main.c: 749:                 UART_printf(buffer);
  3671  000F5A  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3672  000F5C  6E02               	movwf	UART_printf@cadena^0,c
  3673  000F5E  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3674  000F60  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3675  000F62  ECD5  F00E         	call	_UART_printf	;wreg free
  3676                           
  3677                           ;main.c: 752:             } else {
  3678  000F66  EFC6  F007         	goto	l3328
  3679  000F6A                     l3324:
  3680                           
  3681                           ;main.c: 753:                 sprintf(buffer, "\r\n\nEl sensor %d detecta tierra humeda\
      +                          r\n", i);
  3682  000F6A  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3683  000F6C  0100               	movlb	0	; () banked
  3684  000F6E  6FAE               	movwf	sprintf@s& (0+255),b
  3685  000F70  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3686  000F72  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3687  000F74  0E5B               	movlw	low STR_33
  3688  000F76  6FB0               	movwf	sprintf@fmt& (0+255),b
  3689  000F78  0E7D               	movlw	high STR_33
  3690  000F7A  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3691  000F7C  C0F6  F0B2         	movff	mostrarDatosSensoresWIFI@i,?_sprintf+4
  3692  000F80  C0F7  F0B3         	movff	mostrarDatosSensoresWIFI@i+1,?_sprintf+5
  3693  000F84  EC5C  F00F         	call	_sprintf	;wreg free
  3694  000F88  EFAD  F007         	goto	l3322
  3695  000F8C                     l3328:
  3696                           
  3697                           ;main.c: 757:         }
  3698  000F8C  0100               	movlb	0	; () banked
  3699  000F8E  4BF6               	infsnz	mostrarDatosSensoresWIFI@i& (0+255),f,b
  3700  000F90  2BF7               	incf	(mostrarDatosSensoresWIFI@i+1)& (0+255),f,b
  3701  000F92                     
  3702                           ; BSR set to: 0
  3703  000F92  BFF7               	btfsc	(mostrarDatosSensoresWIFI@i+1)& (0+255),7,b
  3704  000F94  EFD5  F007         	goto	u2601
  3705  000F98  51F7               	movf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  3706  000F9A  E109               	bnz	u2600
  3707  000F9C  0E03               	movlw	3
  3708  000F9E  5DF6               	subwf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  3709  000FA0  A0D8               	btfss	status,0,c
  3710  000FA2  EFD5  F007         	goto	u2601
  3711  000FA6  EFD7  F007         	goto	u2600
  3712  000FAA                     u2601:
  3713  000FAA  EF7E  F007         	goto	l3318
  3714  000FAE                     u2600:
  3715  000FAE                     l3332:
  3716                           
  3717                           ; BSR set to: 0
  3718                           ;main.c: 761:     dameTemperaturaHumedad(&humedad, &temperatura);
  3719  000FAE  0EF5               	movlw	low mostrarDatosSensoresWIFI@humedad
  3720  000FB0  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  3721  000FB2  0E00               	movlw	high mostrarDatosSensoresWIFI@humedad
  3722  000FB4  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  3723  000FB6  0EF4               	movlw	low mostrarDatosSensoresWIFI@temperatura
  3724  000FB8  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  3725  000FBA  0E00               	movlw	high mostrarDatosSensoresWIFI@temperatura
  3726  000FBC  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  3727  000FBE  EC77  F00B         	call	_dameTemperaturaHumedad	;wreg free
  3728                           
  3729                           ;main.c: 763:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", humedad);
  3730  000FC2  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3731  000FC4  0100               	movlb	0	; () banked
  3732  000FC6  6FAE               	movwf	sprintf@s& (0+255),b
  3733  000FC8  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3734  000FCA  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3735  000FCC  0EC5               	movlw	low STR_29
  3736  000FCE  6FB0               	movwf	sprintf@fmt& (0+255),b
  3737  000FD0  0E7E               	movlw	high STR_29
  3738  000FD2  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3739  000FD4  C0F5  F0B2         	movff	mostrarDatosSensoresWIFI@humedad,?_sprintf+4
  3740  000FD8  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  3741  000FDA  EC5C  F00F         	call	_sprintf	;wreg free
  3742  000FDE                     
  3743                           ;main.c: 764:     UART_printf(buffer);
  3744  000FDE  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3745  000FE0  6E02               	movwf	UART_printf@cadena^0,c
  3746  000FE2  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3747  000FE4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3748  000FE6  ECD5  F00E         	call	_UART_printf	;wreg free
  3749  000FEA                     
  3750                           ;main.c: 765:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", temperatura);
  3751  000FEA  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3752  000FEC  0100               	movlb	0	; () banked
  3753  000FEE  6FAE               	movwf	sprintf@s& (0+255),b
  3754  000FF0  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3755  000FF2  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3756  000FF4  0E04               	movlw	low STR_30
  3757  000FF6  6FB0               	movwf	sprintf@fmt& (0+255),b
  3758  000FF8  0E7F               	movlw	high STR_30
  3759  000FFA  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3760  000FFC  C0F4  F0B2         	movff	mostrarDatosSensoresWIFI@temperatura,?_sprintf+4
  3761  001000  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  3762  001002  EC5C  F00F         	call	_sprintf	;wreg free
  3763                           
  3764                           ;main.c: 766:     UART_printf(buffer);
  3765  001006  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3766  001008  6E02               	movwf	UART_printf@cadena^0,c
  3767  00100A  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3768  00100C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3769  00100E  ECD5  F00E         	call	_UART_printf	;wreg free
  3770  001012                     
  3771                           ;main.c: 768:     UART_write('I');
  3772  001012  0E49               	movlw	73
  3773  001014  EC4A  F011         	call	_UART_write
  3774  001018  0012               	return		;funcret
  3775  00101A                     __end_of_mostrarDatosSensoresWIFI:
  3776                           	opt callstack 0
  3777                           
  3778 ;; *************** function _lecturaWifi *****************
  3779 ;; Defined at:
  3780 ;;		line 495 in file "main.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;		None
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;  i               2   14[COMRAM] int 
  3785 ;;  Rx              1   13[COMRAM] unsigned char 
  3786 ;; Return value:  Size  Location     Type
  3787 ;;                  1    wreg      void 
  3788 ;; Registers used:
  3789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3795 ;;      Params:         0       0       0       0       0       0       0       0       0
  3796 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3797 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3798 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3799 ;;Total ram usage:        3 bytes
  3800 ;; Hardware stack levels used:    1
  3801 ;; Hardware stack levels required when called:    3
  3802 ;; This function calls:
  3803 ;;		_UART_printf
  3804 ;;		_UART_read
  3805 ;;		_UART_write
  3806 ;;		___wmul
  3807 ;;		_restablecerDatosSensor
  3808 ;; This function is called by:
  3809 ;;		_sistemaRegado
  3810 ;;		_mostrarDatosSensoresWIFI
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           	psect	text12
  3815  001126                     __ptext12:
  3816                           	opt callstack 0
  3817  001126                     _lecturaWifi:
  3818                           	opt callstack 26
  3819  001126                     
  3820                           ;main.c: 497:     PIE1bits.RCIE = 0;
  3821  001126  9A9D               	bcf	157,5,c	;volatile
  3822  001128                     
  3823                           ;main.c: 501:     restablecerDatosSensor();
  3824  001128  EC73  F00E         	call	_restablecerDatosSensor	;wreg free
  3825  00112C                     
  3826                           ;main.c: 503:     UART_write('R');
  3827  00112C  0E52               	movlw	82
  3828  00112E  EC4A  F011         	call	_UART_write
  3829  001132                     
  3830                           ;main.c: 505:     UART_printf("\r\nSolicitando Muestreo de sensores\r\n\n");
  3831  001132  0E83               	movlw	low STR_13
  3832  001134  6E02               	movwf	UART_printf@cadena^0,c
  3833  001136  0E7D               	movlw	high STR_13
  3834  001138  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3835  00113A  ECD5  F00E         	call	_UART_printf	;wreg free
  3836  00113E                     
  3837                           ;main.c: 507:     Rx = UART_read();
  3838  00113E  EC32  F00F         	call	_UART_read	;wreg free
  3839  001142  6E0E               	movwf	lecturaWifi@Rx^0,c
  3840  001144                     
  3841                           ;main.c: 509:     if (Rx == 'O') {
  3842  001144  0E4F               	movlw	79
  3843  001146  180E               	xorwf	lecturaWifi@Rx^0,w,c
  3844  001148  A4D8               	btfss	status,2,c
  3845  00114A  EFA9  F008         	goto	u2181
  3846  00114E  EFAB  F008         	goto	u2180
  3847  001152                     u2181:
  3848  001152  EF07  F009         	goto	l3002
  3849  001156                     u2180:
  3850  001156                     
  3851                           ;main.c: 511:         peticionLecturaSensores = 1;
  3852  001156  0E01               	movlw	1
  3853  001158  0100               	movlb	0	; () banked
  3854  00115A  6F82               	movwf	_peticionLecturaSensores& (0+255),b
  3855                           
  3856                           ;main.c: 513:         for (int i = 0; i < 3; i++) {
  3857  00115C  0E00               	movlw	0
  3858  00115E  6E10               	movwf	(lecturaWifi@i+1)^0,c
  3859  001160  0E00               	movlw	0
  3860  001162  6E0F               	movwf	lecturaWifi@i^0,c
  3861  001164                     l2984:
  3862                           
  3863                           ;main.c: 515:             UART_printf("\r\nDame DATOS DEL SENSOR :\r\n");
  3864  001164  0E21               	movlw	low STR_14
  3865  001166  6E02               	movwf	UART_printf@cadena^0,c
  3866  001168  0E7F               	movlw	high STR_14
  3867  00116A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3868  00116C  ECD5  F00E         	call	_UART_printf	;wreg free
  3869  001170                     
  3870                           ;main.c: 517:             Rx = UART_read();
  3871  001170  EC32  F00F         	call	_UART_read	;wreg free
  3872  001174  6E0E               	movwf	lecturaWifi@Rx^0,c
  3873  001176                     
  3874                           ;main.c: 518:             Rx -= 48;
  3875  001176  0E30               	movlw	48
  3876  001178  5E0E               	subwf	lecturaWifi@Rx^0,f,c
  3877  00117A                     
  3878                           ;main.c: 520:             if (Rx == 1)
  3879  00117A  040E               	decf	lecturaWifi@Rx^0,w,c
  3880  00117C  A4D8               	btfss	status,2,c
  3881  00117E  EFC3  F008         	goto	u2191
  3882  001182  EFC5  F008         	goto	u2190
  3883  001186                     u2191:
  3884  001186  EFDB  F008         	goto	l2994
  3885  00118A                     u2190:
  3886  00118A                     
  3887                           ;main.c: 521:                 sensores[i].humedadMedida = 60;
  3888  00118A  C00F  F001         	movff	lecturaWifi@i,___wmul@multiplier
  3889  00118E  C010  F002         	movff	lecturaWifi@i+1,___wmul@multiplier+1
  3890  001192  0E00               	movlw	0
  3891  001194  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3892  001196  0E03               	movlw	3
  3893  001198  6E03               	movwf	___wmul@multiplicand^0,c
  3894  00119A  ECFB  F010         	call	___wmul	;wreg free
  3895  00119E  0E60               	movlw	low _sensores
  3896  0011A0  2401               	addwf	?___wmul^0,w,c
  3897  0011A2  6ED9               	movwf	fsr2l,c
  3898  0011A4  0E00               	movlw	high _sensores
  3899  0011A6  2002               	addwfc	(?___wmul+1)^0,w,c
  3900  0011A8  6EDA               	movwf	fsr2h,c
  3901  0011AA  0E3C               	movlw	60
  3902  0011AC  6EDE               	movwf	postinc2,c
  3903  0011AE  0E00               	movlw	0
  3904  0011B0  6EDD               	movwf	postdec2,c
  3905  0011B2  EFEF  F008         	goto	l2996
  3906  0011B6                     l2994:
  3907                           
  3908                           ;main.c: 523:                 sensores[i].humedadMedida = 0;
  3909  0011B6  C00F  F001         	movff	lecturaWifi@i,___wmul@multiplier
  3910  0011BA  C010  F002         	movff	lecturaWifi@i+1,___wmul@multiplier+1
  3911  0011BE  0E00               	movlw	0
  3912  0011C0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3913  0011C2  0E03               	movlw	3
  3914  0011C4  6E03               	movwf	___wmul@multiplicand^0,c
  3915  0011C6  ECFB  F010         	call	___wmul	;wreg free
  3916  0011CA  0E60               	movlw	low _sensores
  3917  0011CC  2401               	addwf	?___wmul^0,w,c
  3918  0011CE  6ED9               	movwf	fsr2l,c
  3919  0011D0  0E00               	movlw	high _sensores
  3920  0011D2  2002               	addwfc	(?___wmul+1)^0,w,c
  3921  0011D4  6EDA               	movwf	fsr2h,c
  3922  0011D6  0E00               	movlw	0
  3923  0011D8  6EDE               	movwf	postinc2,c
  3924  0011DA  0E00               	movlw	0
  3925  0011DC  6EDD               	movwf	postdec2,c
  3926  0011DE                     l2996:
  3927                           
  3928                           ;main.c: 525:         }
  3929  0011DE  4A0F               	infsnz	lecturaWifi@i^0,f,c
  3930  0011E0  2A10               	incf	(lecturaWifi@i+1)^0,f,c
  3931  0011E2  BE10               	btfsc	(lecturaWifi@i+1)^0,7,c
  3932  0011E4  EFFD  F008         	goto	u2201
  3933  0011E8  5010               	movf	(lecturaWifi@i+1)^0,w,c
  3934  0011EA  E109               	bnz	u2200
  3935  0011EC  0E03               	movlw	3
  3936  0011EE  5C0F               	subwf	lecturaWifi@i^0,w,c
  3937  0011F0  A0D8               	btfss	status,0,c
  3938  0011F2  EFFD  F008         	goto	u2201
  3939  0011F6  EFFF  F008         	goto	u2200
  3940  0011FA                     u2201:
  3941  0011FA  EFB2  F008         	goto	l2984
  3942  0011FE                     u2200:
  3943  0011FE                     
  3944                           ;main.c: 527:         UART_printf("\r\nSensores Leidos con Exito!\r\n\n");
  3945  0011FE  0E85               	movlw	low STR_15
  3946  001200  6E02               	movwf	UART_printf@cadena^0,c
  3947  001202  0E7E               	movlw	high STR_15
  3948  001204  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3949  001206  ECD5  F00E         	call	_UART_printf	;wreg free
  3950                           
  3951                           ;main.c: 529:     } else {
  3952  00120A  EF0A  F009         	goto	l3004
  3953  00120E                     l3002:
  3954                           
  3955                           ;main.c: 530:         peticionLecturaSensores = 0;
  3956  00120E  0E00               	movlw	0
  3957  001210  0100               	movlb	0	; () banked
  3958  001212  6F82               	movwf	_peticionLecturaSensores& (0+255),b
  3959  001214                     l3004:
  3960                           
  3961                           ;main.c: 533:     PIE1bits.RCIE = 1;
  3962  001214  8A9D               	bsf	157,5,c	;volatile
  3963  001216  0012               	return		;funcret
  3964  001218                     __end_of_lecturaWifi:
  3965                           	opt callstack 0
  3966                           
  3967 ;; *************** function _restablecerDatosSensor *****************
  3968 ;; Defined at:
  3969 ;;		line 490 in file "main.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;		None
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;  i               2   11[COMRAM] int 
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  1    wreg      void 
  3976 ;; Registers used:
  3977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3983 ;;      Params:         0       0       0       0       0       0       0       0       0
  3984 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3985 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3986 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3987 ;;Total ram usage:        2 bytes
  3988 ;; Hardware stack levels used:    1
  3989 ;; Hardware stack levels required when called:    2
  3990 ;; This function calls:
  3991 ;;		___wmul
  3992 ;;		_constructorSensor
  3993 ;; This function is called by:
  3994 ;;		_lecturaWifi
  3995 ;;		_main
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text13
  4000  001CE6                     __ptext13:
  4001                           	opt callstack 0
  4002  001CE6                     _restablecerDatosSensor:
  4003                           	opt callstack 26
  4004  001CE6                     
  4005                           ;main.c: 491:     for (int i = 0; i < 3; i++)
  4006  001CE6  0E00               	movlw	0
  4007  001CE8  6E0D               	movwf	(restablecerDatosSensor@i+1)^0,c
  4008  001CEA  0E00               	movlw	0
  4009  001CEC  6E0C               	movwf	restablecerDatosSensor@i^0,c
  4010  001CEE                     l2808:
  4011                           
  4012                           ;main.c: 492:         constructorSensor(sensores[i], 0, i);
  4013  001CEE  C00C  F001         	movff	restablecerDatosSensor@i,___wmul@multiplier
  4014  001CF2  C00D  F002         	movff	restablecerDatosSensor@i+1,___wmul@multiplier+1
  4015  001CF6  0E00               	movlw	0
  4016  001CF8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4017  001CFA  0E03               	movlw	3
  4018  001CFC  6E03               	movwf	___wmul@multiplicand^0,c
  4019  001CFE  ECFB  F010         	call	___wmul	;wreg free
  4020  001D02  0E60               	movlw	low _sensores
  4021  001D04  2401               	addwf	?___wmul^0,w,c
  4022  001D06  6ED9               	movwf	fsr2l,c
  4023  001D08  0E00               	movlw	high _sensores
  4024  001D0A  2002               	addwfc	(?___wmul+1)^0,w,c
  4025  001D0C  6EDA               	movwf	fsr2h,c
  4026  001D0E  CFDE F007          	movff	postinc2,constructorSensor@s
  4027  001D12  CFDE F008          	movff	postinc2,constructorSensor@s+1
  4028  001D16  CFDD F009          	movff	postdec2,constructorSensor@s+2
  4029  001D1A  0E00               	movlw	0
  4030  001D1C  6E0A               	movwf	constructorSensor@humedad^0,c
  4031  001D1E  C00C  F00B         	movff	restablecerDatosSensor@i,constructorSensor@pin
  4032  001D22  EC60  F011         	call	_constructorSensor	;wreg free
  4033  001D26  4A0C               	infsnz	restablecerDatosSensor@i^0,f,c
  4034  001D28  2A0D               	incf	(restablecerDatosSensor@i+1)^0,f,c
  4035  001D2A  BE0D               	btfsc	(restablecerDatosSensor@i+1)^0,7,c
  4036  001D2C  EFA1  F00E         	goto	u1991
  4037  001D30  500D               	movf	(restablecerDatosSensor@i+1)^0,w,c
  4038  001D32  E109               	bnz	u1990
  4039  001D34  0E03               	movlw	3
  4040  001D36  5C0C               	subwf	restablecerDatosSensor@i^0,w,c
  4041  001D38  A0D8               	btfss	status,0,c
  4042  001D3A  EFA1  F00E         	goto	u1991
  4043  001D3E  EFA3  F00E         	goto	u1990
  4044  001D42                     u1991:
  4045  001D42  EF77  F00E         	goto	l2808
  4046  001D46                     u1990:
  4047  001D46  0012               	return		;funcret
  4048  001D48                     __end_of_restablecerDatosSensor:
  4049                           	opt callstack 0
  4050                           
  4051 ;; *************** function _constructorSensor *****************
  4052 ;; Defined at:
  4053 ;;		line 121 in file "main.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  s               3    6[COMRAM] struct .
  4056 ;;  humedad         1    9[COMRAM] unsigned char 
  4057 ;;  pin             1   10[COMRAM] unsigned char 
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;		None
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  1    wreg      void 
  4062 ;; Registers used:
  4063 ;;		None
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4069 ;;      Params:         5       0       0       0       0       0       0       0       0
  4070 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4071 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4072 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4073 ;;Total ram usage:        5 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; Hardware stack levels required when called:    1
  4076 ;; This function calls:
  4077 ;;		Nothing
  4078 ;; This function is called by:
  4079 ;;		_restablecerDatosSensor
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           	psect	text14
  4084  0022C0                     __ptext14:
  4085                           	opt callstack 0
  4086  0022C0                     _constructorSensor:
  4087                           	opt callstack 26
  4088  0022C0                     
  4089                           ;main.c: 123:     s.humedadMedida = humedad;
  4090  0022C0  C00A  F007         	movff	constructorSensor@humedad,constructorSensor@s
  4091  0022C4  6A08               	clrf	(constructorSensor@s+1)^0,c
  4092                           
  4093                           ;main.c: 124:     s.pinSensor = pin;
  4094  0022C6  C00B  F009         	movff	constructorSensor@pin,constructorSensor@s+2
  4095  0022CA  0012               	return		;funcret
  4096  0022CC                     __end_of_constructorSensor:
  4097                           	opt callstack 0
  4098                           
  4099 ;; *************** function _mostrarDatosSensores *****************
  4100 ;; Defined at:
  4101 ;;		line 699 in file "main.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;		None
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;  i               2   73[BANK0 ] int 
  4106 ;;  buffer         50   20[BANK0 ] unsigned char [50]
  4107 ;;  humedad         1   72[BANK0 ] unsigned char 
  4108 ;;  temperatura     1   71[BANK0 ] unsigned char 
  4109 ;;  porcentajeHu    1   70[BANK0 ] unsigned char 
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  1    wreg      void 
  4112 ;; Registers used:
  4113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4119 ;;      Params:         0       0       0       0       0       0       0       0       0
  4120 ;;      Locals:         0      55       0       0       0       0       0       0       0
  4121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4122 ;;      Totals:         0      55       0       0       0       0       0       0       0
  4123 ;;Total ram usage:       55 bytes
  4124 ;; Hardware stack levels used:    1
  4125 ;; Hardware stack levels required when called:    9
  4126 ;; This function calls:
  4127 ;;		_UART_printf
  4128 ;;		_UART_write
  4129 ;;		___wmul
  4130 ;;		_dameTemperaturaHumedad
  4131 ;;		_lecturaAnalogaSensores
  4132 ;;		_map
  4133 ;;		_sprintf
  4134 ;; This function is called by:
  4135 ;;		_sistemaPrincipal
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139                           	psect	text15
  4140  000C44                     __ptext15:
  4141                           	opt callstack 0
  4142  000C44                     _mostrarDatosSensores:
  4143                           	opt callstack 20
  4144  000C44                     
  4145                           ;main.c: 701:     char buffer[50];;main.c: 702:     unsigned char temperatura, humedad, 
      +                          porcentajeHumedad;;main.c: 704:     dameTemperaturaHumedad(&humedad, &temperatura);
  4146  000C44  0EF6               	movlw	low mostrarDatosSensores@humedad
  4147  000C46  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  4148  000C48  0E00               	movlw	high mostrarDatosSensores@humedad
  4149  000C4A  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  4150  000C4C  0EF5               	movlw	low mostrarDatosSensores@temperatura
  4151  000C4E  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  4152  000C50  0E00               	movlw	high mostrarDatosSensores@temperatura
  4153  000C52  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  4154  000C54  EC77  F00B         	call	_dameTemperaturaHumedad	;wreg free
  4155  000C58                     
  4156                           ;main.c: 706:     UART_write('I');
  4157  000C58  0E49               	movlw	73
  4158  000C5A  EC4A  F011         	call	_UART_write
  4159  000C5E                     
  4160                           ;main.c: 709:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", humedad);
  4161  000C5E  0EC2               	movlw	low mostrarDatosSensores@buffer
  4162  000C60  0100               	movlb	0	; () banked
  4163  000C62  6FAE               	movwf	sprintf@s& (0+255),b
  4164  000C64  0E00               	movlw	high mostrarDatosSensores@buffer
  4165  000C66  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  4166  000C68  0EC5               	movlw	low STR_29
  4167  000C6A  6FB0               	movwf	sprintf@fmt& (0+255),b
  4168  000C6C  0E7E               	movlw	high STR_29
  4169  000C6E  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  4170  000C70  C0F6  F0B2         	movff	mostrarDatosSensores@humedad,?_sprintf+4
  4171  000C74  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  4172  000C76  EC5C  F00F         	call	_sprintf	;wreg free
  4173  000C7A                     
  4174                           ;main.c: 710:     UART_printf(buffer);
  4175  000C7A  0EC2               	movlw	low mostrarDatosSensores@buffer
  4176  000C7C  6E02               	movwf	UART_printf@cadena^0,c
  4177  000C7E  0E00               	movlw	high mostrarDatosSensores@buffer
  4178  000C80  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4179  000C82  ECD5  F00E         	call	_UART_printf	;wreg free
  4180  000C86                     
  4181                           ;main.c: 711:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", temperatura);
  4182  000C86  0EC2               	movlw	low mostrarDatosSensores@buffer
  4183  000C88  0100               	movlb	0	; () banked
  4184  000C8A  6FAE               	movwf	sprintf@s& (0+255),b
  4185  000C8C  0E00               	movlw	high mostrarDatosSensores@buffer
  4186  000C8E  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  4187  000C90  0E04               	movlw	low STR_30
  4188  000C92  6FB0               	movwf	sprintf@fmt& (0+255),b
  4189  000C94  0E7F               	movlw	high STR_30
  4190  000C96  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  4191  000C98  C0F5  F0B2         	movff	mostrarDatosSensores@temperatura,?_sprintf+4
  4192  000C9C  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  4193  000C9E  EC5C  F00F         	call	_sprintf	;wreg free
  4194  000CA2                     
  4195                           ;main.c: 712:     UART_printf(buffer);
  4196  000CA2  0EC2               	movlw	low mostrarDatosSensores@buffer
  4197  000CA4  6E02               	movwf	UART_printf@cadena^0,c
  4198  000CA6  0E00               	movlw	high mostrarDatosSensores@buffer
  4199  000CA8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4200  000CAA  ECD5  F00E         	call	_UART_printf	;wreg free
  4201  000CAE                     
  4202                           ;main.c: 714:     lecturaAnalogaSensores();
  4203  000CAE  ECA7  F00D         	call	_lecturaAnalogaSensores	;wreg free
  4204  000CB2                     
  4205                           ;main.c: 717:     for (int i = 0; i < 3; i++) {
  4206  000CB2  0E00               	movlw	0
  4207  000CB4  0100               	movlb	0	; () banked
  4208  000CB6  6FF8               	movwf	(mostrarDatosSensores@i+1)& (0+255),b
  4209  000CB8  0E00               	movlw	0
  4210  000CBA  6FF7               	movwf	mostrarDatosSensores@i& (0+255),b
  4211  000CBC                     l3360:
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;main.c: 719:         porcentajeHumedad = map(sensores[i].humedadMedida, 0, 1023, 100, 0
      +                          );
  4215  000CBC  C0F7  F001         	movff	mostrarDatosSensores@i,___wmul@multiplier
  4216  000CC0  C0F8  F002         	movff	mostrarDatosSensores@i+1,___wmul@multiplier+1
  4217  000CC4  0E00               	movlw	0
  4218  000CC6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4219  000CC8  0E03               	movlw	3
  4220  000CCA  6E03               	movwf	___wmul@multiplicand^0,c
  4221  000CCC  ECFB  F010         	call	___wmul	;wreg free
  4222  000CD0  0E60               	movlw	low _sensores
  4223  000CD2  2401               	addwf	?___wmul^0,w,c
  4224  000CD4  6ED9               	movwf	fsr2l,c
  4225  000CD6  0E00               	movlw	high _sensores
  4226  000CD8  2002               	addwfc	(?___wmul+1)^0,w,c
  4227  000CDA  6EDA               	movwf	fsr2h,c
  4228  000CDC  CFDE F01B          	movff	postinc2,map@x
  4229  000CE0  CFDD F01C          	movff	postdec2,map@x+1
  4230  000CE4  0E00               	movlw	0
  4231  000CE6  BE1C               	btfsc	(map@x+1)^0,7,c
  4232  000CE8  0EFF               	movlw	-1
  4233  000CEA  6E1D               	movwf	(map@x+2)^0,c
  4234  000CEC  6E1E               	movwf	(map@x+3)^0,c
  4235  000CEE  0E00               	movlw	0
  4236  000CF0  6E1F               	movwf	map@in_min^0,c
  4237  000CF2  0E00               	movlw	0
  4238  000CF4  6E20               	movwf	(map@in_min+1)^0,c
  4239  000CF6  0E00               	movlw	0
  4240  000CF8  6E21               	movwf	(map@in_min+2)^0,c
  4241  000CFA  0E00               	movlw	0
  4242  000CFC  6E22               	movwf	(map@in_min+3)^0,c
  4243  000CFE  0EFF               	movlw	255
  4244  000D00  6E23               	movwf	map@in_max^0,c
  4245  000D02  0E03               	movlw	3
  4246  000D04  6E24               	movwf	(map@in_max+1)^0,c
  4247  000D06  0E00               	movlw	0
  4248  000D08  6E25               	movwf	(map@in_max+2)^0,c
  4249  000D0A  0E00               	movlw	0
  4250  000D0C  6E26               	movwf	(map@in_max+3)^0,c
  4251  000D0E  0E64               	movlw	100
  4252  000D10  6E27               	movwf	map@out_min^0,c
  4253  000D12  0E00               	movlw	0
  4254  000D14  6E28               	movwf	(map@out_min+1)^0,c
  4255  000D16  0E00               	movlw	0
  4256  000D18  6E29               	movwf	(map@out_min+2)^0,c
  4257  000D1A  0E00               	movlw	0
  4258  000D1C  6E2A               	movwf	(map@out_min+3)^0,c
  4259  000D1E  0E00               	movlw	0
  4260  000D20  6E2B               	movwf	map@out_max^0,c
  4261  000D22  0E00               	movlw	0
  4262  000D24  6E2C               	movwf	(map@out_max+1)^0,c
  4263  000D26  0E00               	movlw	0
  4264  000D28  6E2D               	movwf	(map@out_max+2)^0,c
  4265  000D2A  0E00               	movlw	0
  4266  000D2C  6E2E               	movwf	(map@out_max+3)^0,c
  4267  000D2E  ECFD  F00C         	call	_map	;wreg free
  4268  000D32  501B               	movf	?_map^0,w,c
  4269  000D34  0100               	movlb	0	; () banked
  4270  000D36  6FF4               	movwf	mostrarDatosSensores@porcentajeHumedad& (0+255),b
  4271  000D38                     
  4272                           ; BSR set to: 0
  4273                           ;main.c: 721:         sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d\r\n"
  4274  000D38  0EC2               	movlw	low mostrarDatosSensores@buffer
  4275  000D3A  6FAE               	movwf	sprintf@s& (0+255),b
  4276  000D3C  0E00               	movlw	high mostrarDatosSensores@buffer
  4277  000D3E  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  4278  000D40  0E31               	movlw	low STR_31
  4279  000D42  6FB0               	movwf	sprintf@fmt& (0+255),b
  4280  000D44  0E7D               	movlw	high STR_31
  4281  000D46  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  4282  000D48  C0F7  F0B2         	movff	mostrarDatosSensores@i,?_sprintf+4
  4283  000D4C  C0F8  F0B3         	movff	mostrarDatosSensores@i+1,?_sprintf+5
  4284  000D50  C0F4  F0B4         	movff	mostrarDatosSensores@porcentajeHumedad,?_sprintf+6
  4285  000D54  6BB5               	clrf	(?_sprintf+7)& (0+255),b
  4286  000D56  EC5C  F00F         	call	_sprintf	;wreg free
  4287  000D5A                     
  4288                           ;main.c: 723:         UART_printf(buffer);
  4289  000D5A  0EC2               	movlw	low mostrarDatosSensores@buffer
  4290  000D5C  6E02               	movwf	UART_printf@cadena^0,c
  4291  000D5E  0E00               	movlw	high mostrarDatosSensores@buffer
  4292  000D60  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4293  000D62  ECD5  F00E         	call	_UART_printf	;wreg free
  4294  000D66                     
  4295                           ;main.c: 726:     }
  4296  000D66  0100               	movlb	0	; () banked
  4297  000D68  4BF7               	infsnz	mostrarDatosSensores@i& (0+255),f,b
  4298  000D6A  2BF8               	incf	(mostrarDatosSensores@i+1)& (0+255),f,b
  4299  000D6C                     
  4300                           ; BSR set to: 0
  4301  000D6C  BFF8               	btfsc	(mostrarDatosSensores@i+1)& (0+255),7,b
  4302  000D6E  EFC2  F006         	goto	u2611
  4303  000D72  51F8               	movf	(mostrarDatosSensores@i+1)& (0+255),w,b
  4304  000D74  E109               	bnz	u2610
  4305  000D76  0E03               	movlw	3
  4306  000D78  5DF7               	subwf	mostrarDatosSensores@i& (0+255),w,b
  4307  000D7A  A0D8               	btfss	status,0,c
  4308  000D7C  EFC2  F006         	goto	u2611
  4309  000D80  EFC4  F006         	goto	u2610
  4310  000D84                     u2611:
  4311  000D84  EF5E  F006         	goto	l3360
  4312  000D88                     u2610:
  4313  000D88                     
  4314                           ; BSR set to: 0
  4315                           ;main.c: 728:     UART_write('I');
  4316  000D88  0E49               	movlw	73
  4317  000D8A  EC4A  F011         	call	_UART_write
  4318  000D8E  0012               	return		;funcret
  4319  000D90                     __end_of_mostrarDatosSensores:
  4320                           	opt callstack 0
  4321                           
  4322 ;; *************** function _map *****************
  4323 ;; Defined at:
  4324 ;;		line 117 in file "main.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;  x               4   26[COMRAM] long 
  4327 ;;  in_min          4   30[COMRAM] long 
  4328 ;;  in_max          4   34[COMRAM] long 
  4329 ;;  out_min         4   38[COMRAM] long 
  4330 ;;  out_max         4   42[COMRAM] long 
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;		None
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  4   26[COMRAM] long 
  4335 ;; Registers used:
  4336 ;;		wreg, status,2, status,0, cstack
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4342 ;;      Params:        20       0       0       0       0       0       0       0       0
  4343 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4345 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4346 ;;Total ram usage:       20 bytes
  4347 ;; Hardware stack levels used:    1
  4348 ;; Hardware stack levels required when called:    2
  4349 ;; This function calls:
  4350 ;;		___aldiv
  4351 ;;		___lmul
  4352 ;; This function is called by:
  4353 ;;		_mostrarDatosSensores
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           	psect	text16
  4358  0019FA                     __ptext16:
  4359                           	opt callstack 0
  4360  0019FA                     _map:
  4361                           	opt callstack 26
  4362  0019FA                     
  4363                           ;main.c: 118:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  4364  0019FA  501F               	movf	map@in_min^0,w,c
  4365  0019FC  5C1B               	subwf	map@x^0,w,c
  4366  0019FE  6E01               	movwf	___lmul@multiplier^0,c
  4367  001A00  5020               	movf	(map@in_min+1)^0,w,c
  4368  001A02  581C               	subwfb	(map@x+1)^0,w,c
  4369  001A04  6E02               	movwf	(___lmul@multiplier+1)^0,c
  4370  001A06  5021               	movf	(map@in_min+2)^0,w,c
  4371  001A08  581D               	subwfb	(map@x+2)^0,w,c
  4372  001A0A  6E03               	movwf	(___lmul@multiplier+2)^0,c
  4373  001A0C  5022               	movf	(map@in_min+3)^0,w,c
  4374  001A0E  581E               	subwfb	(map@x+3)^0,w,c
  4375  001A10  6E04               	movwf	(___lmul@multiplier+3)^0,c
  4376  001A12  5027               	movf	map@out_min^0,w,c
  4377  001A14  5C2B               	subwf	map@out_max^0,w,c
  4378  001A16  6E05               	movwf	___lmul@multiplicand^0,c
  4379  001A18  5028               	movf	(map@out_min+1)^0,w,c
  4380  001A1A  582C               	subwfb	(map@out_max+1)^0,w,c
  4381  001A1C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4382  001A1E  5029               	movf	(map@out_min+2)^0,w,c
  4383  001A20  582D               	subwfb	(map@out_max+2)^0,w,c
  4384  001A22  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4385  001A24  502A               	movf	(map@out_min+3)^0,w,c
  4386  001A26  582E               	subwfb	(map@out_max+3)^0,w,c
  4387  001A28  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4388  001A2A  EC72  F00D         	call	___lmul	;wreg free
  4389  001A2E  C001  F00D         	movff	?___lmul,___aldiv@dividend
  4390  001A32  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  4391  001A36  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  4392  001A3A  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  4393  001A3E  501F               	movf	map@in_min^0,w,c
  4394  001A40  5C23               	subwf	map@in_max^0,w,c
  4395  001A42  6E11               	movwf	___aldiv@divisor^0,c
  4396  001A44  5020               	movf	(map@in_min+1)^0,w,c
  4397  001A46  5824               	subwfb	(map@in_max+1)^0,w,c
  4398  001A48  6E12               	movwf	(___aldiv@divisor+1)^0,c
  4399  001A4A  5021               	movf	(map@in_min+2)^0,w,c
  4400  001A4C  5825               	subwfb	(map@in_max+2)^0,w,c
  4401  001A4E  6E13               	movwf	(___aldiv@divisor+2)^0,c
  4402  001A50  5022               	movf	(map@in_min+3)^0,w,c
  4403  001A52  5826               	subwfb	(map@in_max+3)^0,w,c
  4404  001A54  6E14               	movwf	(___aldiv@divisor+3)^0,c
  4405  001A56  EC0D  F008         	call	___aldiv	;wreg free
  4406  001A5A  5027               	movf	map@out_min^0,w,c
  4407  001A5C  240D               	addwf	?___aldiv^0,w,c
  4408  001A5E  6E1B               	movwf	?_map^0,c
  4409  001A60  5028               	movf	(map@out_min+1)^0,w,c
  4410  001A62  200E               	addwfc	(?___aldiv+1)^0,w,c
  4411  001A64  6E1C               	movwf	(?_map+1)^0,c
  4412  001A66  5029               	movf	(map@out_min+2)^0,w,c
  4413  001A68  200F               	addwfc	(?___aldiv+2)^0,w,c
  4414  001A6A  6E1D               	movwf	(?_map+2)^0,c
  4415  001A6C  502A               	movf	(map@out_min+3)^0,w,c
  4416  001A6E  2010               	addwfc	(?___aldiv+3)^0,w,c
  4417  001A70  6E1E               	movwf	(?_map+3)^0,c
  4418  001A72  0012               	return		;funcret
  4419  001A74                     __end_of_map:
  4420                           	opt callstack 0
  4421                           
  4422 ;; *************** function ___lmul *****************
  4423 ;; Defined at:
  4424 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  multiplier      4    0[COMRAM] unsigned long 
  4427 ;;  multiplicand    4    4[COMRAM] unsigned long 
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;  product         4    8[COMRAM] unsigned long 
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  4    0[COMRAM] unsigned long 
  4432 ;; Registers used:
  4433 ;;		wreg, status,2, status,0
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4439 ;;      Params:         8       0       0       0       0       0       0       0       0
  4440 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4441 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4442 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4443 ;;Total ram usage:       12 bytes
  4444 ;; Hardware stack levels used:    1
  4445 ;; Hardware stack levels required when called:    1
  4446 ;; This function calls:
  4447 ;;		Nothing
  4448 ;; This function is called by:
  4449 ;;		_map
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           	psect	text17
  4454  001AE4                     __ptext17:
  4455                           	opt callstack 0
  4456  001AE4                     ___lmul:
  4457                           	opt callstack 26
  4458  001AE4  0E00               	movlw	0
  4459  001AE6  6E09               	movwf	___lmul@product^0,c
  4460  001AE8  0E00               	movlw	0
  4461  001AEA  6E0A               	movwf	(___lmul@product+1)^0,c
  4462  001AEC  0E00               	movlw	0
  4463  001AEE  6E0B               	movwf	(___lmul@product+2)^0,c
  4464  001AF0  0E00               	movlw	0
  4465  001AF2  6E0C               	movwf	(___lmul@product+3)^0,c
  4466  001AF4                     l2824:
  4467  001AF4  A001               	btfss	___lmul@multiplier^0,0,c
  4468  001AF6  EF7F  F00D         	goto	u2011
  4469  001AFA  EF81  F00D         	goto	u2010
  4470  001AFE                     u2011:
  4471  001AFE  EF89  F00D         	goto	l2828
  4472  001B02                     u2010:
  4473  001B02  5005               	movf	___lmul@multiplicand^0,w,c
  4474  001B04  2609               	addwf	___lmul@product^0,f,c
  4475  001B06  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  4476  001B08  220A               	addwfc	(___lmul@product+1)^0,f,c
  4477  001B0A  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  4478  001B0C  220B               	addwfc	(___lmul@product+2)^0,f,c
  4479  001B0E  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  4480  001B10  220C               	addwfc	(___lmul@product+3)^0,f,c
  4481  001B12                     l2828:
  4482  001B12  90D8               	bcf	status,0,c
  4483  001B14  3605               	rlcf	___lmul@multiplicand^0,f,c
  4484  001B16  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4485  001B18  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4486  001B1A  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4487  001B1C  90D8               	bcf	status,0,c
  4488  001B1E  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  4489  001B20  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  4490  001B22  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  4491  001B24  3201               	rrcf	___lmul@multiplier^0,f,c
  4492  001B26  5001               	movf	___lmul@multiplier^0,w,c
  4493  001B28  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  4494  001B2A  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  4495  001B2C  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  4496  001B2E  A4D8               	btfss	status,2,c
  4497  001B30  EF9C  F00D         	goto	u2021
  4498  001B34  EF9E  F00D         	goto	u2020
  4499  001B38                     u2021:
  4500  001B38  EF7A  F00D         	goto	l2824
  4501  001B3C                     u2020:
  4502  001B3C  C009  F001         	movff	___lmul@product,?___lmul
  4503  001B40  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  4504  001B44  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  4505  001B48  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  4506  001B4C  0012               	return		;funcret
  4507  001B4E                     __end_of___lmul:
  4508                           	opt callstack 0
  4509                           
  4510 ;; *************** function _lecturaAnalogaSensores *****************
  4511 ;; Defined at:
  4512 ;;		line 537 in file "main.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;		None
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;  i               2    7[COMRAM] int 
  4517 ;; Return value:  Size  Location     Type
  4518 ;;                  1    wreg      void 
  4519 ;; Registers used:
  4520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4526 ;;      Params:         0       0       0       0       0       0       0       0       0
  4527 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4528 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4529 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4530 ;;Total ram usage:        3 bytes
  4531 ;; Hardware stack levels used:    1
  4532 ;; Hardware stack levels required when called:    2
  4533 ;; This function calls:
  4534 ;;		___wmul
  4535 ;;		_dameHumedadSuelo
  4536 ;; This function is called by:
  4537 ;;		_sistemaRegado
  4538 ;;		_mostrarDatosSensores
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           	psect	text18
  4543  001B4E                     __ptext18:
  4544                           	opt callstack 0
  4545  001B4E                     _lecturaAnalogaSensores:
  4546                           	opt callstack 27
  4547  001B4E                     
  4548                           ;main.c: 539:     for (int i = 0; i < 3; i++) {
  4549  001B4E  0E00               	movlw	0
  4550  001B50  6E09               	movwf	(lecturaAnalogaSensores@i+1)^0,c
  4551  001B52  0E00               	movlw	0
  4552  001B54  6E08               	movwf	lecturaAnalogaSensores@i^0,c
  4553  001B56                     l3012:
  4554                           
  4555                           ;main.c: 540:         sensores[i].humedadMedida = dameHumedadSuelo(i);
  4556  001B56  C008  F001         	movff	lecturaAnalogaSensores@i,___wmul@multiplier
  4557  001B5A  C009  F002         	movff	lecturaAnalogaSensores@i+1,___wmul@multiplier+1
  4558  001B5E  0E00               	movlw	0
  4559  001B60  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4560  001B62  0E03               	movlw	3
  4561  001B64  6E03               	movwf	___wmul@multiplicand^0,c
  4562  001B66  ECFB  F010         	call	___wmul	;wreg free
  4563  001B6A  0E60               	movlw	low _sensores
  4564  001B6C  2401               	addwf	?___wmul^0,w,c
  4565  001B6E  6ED9               	movwf	fsr2l,c
  4566  001B70  0E00               	movlw	high _sensores
  4567  001B72  2002               	addwfc	(?___wmul+1)^0,w,c
  4568  001B74  6EDA               	movwf	fsr2h,c
  4569  001B76  5008               	movf	lecturaAnalogaSensores@i^0,w,c
  4570  001B78  ECD1  F00F         	call	_dameHumedadSuelo
  4571  001B7C  C001  FFDE         	movff	?_dameHumedadSuelo,postinc2
  4572  001B80  C002  FFDD         	movff	?_dameHumedadSuelo+1,postdec2
  4573  001B84                     
  4574                           ;main.c: 541:         _delay((unsigned long)((5)*(4000000/4000.0)));
  4575  001B84  0E07               	movlw	7
  4576  001B86  6E07               	movwf	??_lecturaAnalogaSensores^0,c
  4577  001B88  0E7D               	movlw	125
  4578  001B8A                     u2757:
  4579  001B8A  2EE8               	decfsz	wreg,f,c
  4580  001B8C  D7FE               	bra	u2757
  4581  001B8E  2E07               	decfsz	??_lecturaAnalogaSensores^0,f,c
  4582  001B90  D7FC               	bra	u2757
  4583  001B92  F000               	nop	
  4584  001B94                     
  4585                           ;main.c: 542:     }
  4586  001B94  4A08               	infsnz	lecturaAnalogaSensores@i^0,f,c
  4587  001B96  2A09               	incf	(lecturaAnalogaSensores@i+1)^0,f,c
  4588  001B98  BE09               	btfsc	(lecturaAnalogaSensores@i+1)^0,7,c
  4589  001B9A  EFD8  F00D         	goto	u2211
  4590  001B9E  5009               	movf	(lecturaAnalogaSensores@i+1)^0,w,c
  4591  001BA0  E109               	bnz	u2210
  4592  001BA2  0E03               	movlw	3
  4593  001BA4  5C08               	subwf	lecturaAnalogaSensores@i^0,w,c
  4594  001BA6  A0D8               	btfss	status,0,c
  4595  001BA8  EFD8  F00D         	goto	u2211
  4596  001BAC  EFDA  F00D         	goto	u2210
  4597  001BB0                     u2211:
  4598  001BB0  EFAB  F00D         	goto	l3012
  4599  001BB4                     u2210:
  4600  001BB4  0012               	return		;funcret
  4601  001BB6                     __end_of_lecturaAnalogaSensores:
  4602                           	opt callstack 0
  4603                           
  4604 ;; *************** function _dameHumedadSuelo *****************
  4605 ;; Defined at:
  4606 ;;		line 473 in file "main.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;  canalLeer       1    wreg     unsigned char 
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;  canalLeer       1    4[COMRAM] unsigned char 
  4611 ;; Return value:  Size  Location     Type
  4612 ;;                  2    0[COMRAM] short 
  4613 ;; Registers used:
  4614 ;;		wreg, status,2, status,0
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4620 ;;      Params:         2       0       0       0       0       0       0       0       0
  4621 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4622 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4623 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4624 ;;Total ram usage:        5 bytes
  4625 ;; Hardware stack levels used:    1
  4626 ;; Hardware stack levels required when called:    1
  4627 ;; This function calls:
  4628 ;;		Nothing
  4629 ;; This function is called by:
  4630 ;;		_lecturaAnalogaSensores
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634                           	psect	text19
  4635  001FA2                     __ptext19:
  4636                           	opt callstack 0
  4637  001FA2                     _dameHumedadSuelo:
  4638                           	opt callstack 27
  4639                           
  4640                           ;incstack = 0
  4641                           ;dameHumedadSuelo@canalLeer stored from wreg
  4642  001FA2  6E05               	movwf	dameHumedadSuelo@canalLeer^0,c
  4643  001FA4                     
  4644                           ;main.c: 475:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  4645  001FA4  0E06               	movlw	6
  4646  001FA6                     u2767:
  4647  001FA6  2EE8               	decfsz	wreg,f,c
  4648  001FA8  D7FE               	bra	u2767
  4649  001FAA  D000               	nop2	
  4650  001FAC                     
  4651                           ;main.c: 477:     ADCON0bits.ADON = 1;
  4652  001FAC  80C2               	bsf	194,0,c	;volatile
  4653  001FAE                     
  4654                           ;main.c: 478:     ADCON0bits.CHS = canalLeer;
  4655  001FAE  C005  F003         	movff	dameHumedadSuelo@canalLeer,??_dameHumedadSuelo
  4656  001FB2  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  4657  001FB4  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  4658  001FB6  50C2               	movf	194,w,c	;volatile
  4659  001FB8  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  4660  001FBA  0BC3               	andlw	-61
  4661  001FBC  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  4662  001FBE  6EC2               	movwf	194,c	;volatile
  4663  001FC0                     
  4664                           ;main.c: 479:     ADCON0bits.GO = 1;
  4665  001FC0  82C2               	bsf	194,1,c	;volatile
  4666  001FC2                     
  4667                           ;main.c: 480:     ADCON0bits.GO_DONE = 1;
  4668  001FC2  82C2               	bsf	194,1,c	;volatile
  4669  001FC4                     l311:
  4670  001FC4  B2C2               	btfsc	194,1,c	;volatile
  4671  001FC6  EFE7  F00F         	goto	u1981
  4672  001FCA  EFE9  F00F         	goto	u1980
  4673  001FCE                     u1981:
  4674  001FCE  EFE2  F00F         	goto	l311
  4675  001FD2                     u1980:
  4676  001FD2                     
  4677                           ;main.c: 484:     ADCON0bits.ADON = 0;
  4678  001FD2  90C2               	bcf	194,0,c	;volatile
  4679  001FD4                     
  4680                           ;main.c: 486:     return (ADRESH << 8) +ADRESL;
  4681  001FD4  50C4               	movf	196,w,c	;volatile
  4682  001FD6  6E04               	movwf	(??_dameHumedadSuelo+1)^0,c
  4683  001FD8  6A03               	clrf	??_dameHumedadSuelo^0,c
  4684  001FDA  50C3               	movf	195,w,c	;volatile
  4685  001FDC  2403               	addwf	??_dameHumedadSuelo^0,w,c
  4686  001FDE  6E01               	movwf	?_dameHumedadSuelo^0,c
  4687  001FE0  0E00               	movlw	0
  4688  001FE2  2004               	addwfc	(??_dameHumedadSuelo+1)^0,w,c
  4689  001FE4  6E02               	movwf	(?_dameHumedadSuelo+1)^0,c
  4690  001FE6  0012               	return		;funcret
  4691  001FE8                     __end_of_dameHumedadSuelo:
  4692                           	opt callstack 0
  4693                           
  4694 ;; *************** function _dameTemperaturaHumedad *****************
  4695 ;; Defined at:
  4696 ;;		line 664 in file "main.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;  Humedad         2    3[COMRAM] PTR unsigned char 
  4699 ;;		 -> mostrarDatosSensoresWIFI@humedad(1), mostrarDatosSensores@humedad(1), NULL(0), 
  4700 ;;  Temperatura     2    5[COMRAM] PTR unsigned char 
  4701 ;;		 -> mostrarDatosSensoresWIFI@temperatura(1), mostrarDatosSensores@temperatura(1), estaSeco@temperatura(1), 
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;  checkSum        2    9[COMRAM] unsigned int 
  4704 ;;  temperatura     1   14[COMRAM] unsigned char 
  4705 ;;  humedad         1   13[COMRAM] unsigned char 
  4706 ;;  temperaturaD    1   12[COMRAM] unsigned char 
  4707 ;;  humedadDecim    1   11[COMRAM] unsigned char 
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  1    wreg      void 
  4710 ;; Registers used:
  4711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4717 ;;      Params:         4       0       0       0       0       0       0       0       0
  4718 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4719 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4720 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4721 ;;Total ram usage:       12 bytes
  4722 ;; Hardware stack levels used:    1
  4723 ;; Hardware stack levels required when called:    3
  4724 ;; This function calls:
  4725 ;;		_DHT11_ReadData
  4726 ;;		_DHT11_Start
  4727 ;;		_UART_printf
  4728 ;;		_check_response
  4729 ;; This function is called by:
  4730 ;;		_estaSeco
  4731 ;;		_mostrarDatosSensores
  4732 ;;		_mostrarDatosSensoresWIFI
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735                           
  4736                           	psect	text20
  4737  0016EE                     __ptext20:
  4738                           	opt callstack 0
  4739  0016EE                     _dameTemperaturaHumedad:
  4740                           	opt callstack 24
  4741  0016EE                     
  4742                           ;main.c: 666:     PIE1bits.RCIE = 0;
  4743  0016EE  9A9D               	bcf	157,5,c	;volatile
  4744                           
  4745                           ;main.c: 667:     T0CONbits.TMR0ON = 0;
  4746  0016F0  9ED5               	bcf	213,7,c	;volatile
  4747  0016F2                     
  4748                           ;main.c: 673:     DHT11_Start();
  4749  0016F2  EC1E  F011         	call	_DHT11_Start	;wreg free
  4750  0016F6                     
  4751                           ;main.c: 675:     if (check_response()) {
  4752  0016F6  EC16  F010         	call	_check_response	;wreg free
  4753  0016FA  0900               	iorlw	0
  4754  0016FC  B4D8               	btfsc	status,2,c
  4755  0016FE  EF83  F00B         	goto	u1961
  4756  001702  EF85  F00B         	goto	u1960
  4757  001706                     u1961:
  4758  001706  EFC8  F00B         	goto	l2778
  4759  00170A                     u1960:
  4760  00170A                     
  4761                           ;main.c: 678:         humedad = DHT11_ReadData();
  4762  00170A  EC04  F00F         	call	_DHT11_ReadData	;wreg free
  4763  00170E  6E0E               	movwf	dameTemperaturaHumedad@humedad^0,c
  4764                           
  4765                           ;main.c: 679:         humedadDecimal = DHT11_ReadData();
  4766  001710  EC04  F00F         	call	_DHT11_ReadData	;wreg free
  4767  001714  6E0C               	movwf	dameTemperaturaHumedad@humedadDecimal^0,c
  4768                           
  4769                           ;main.c: 680:         temperatura = DHT11_ReadData();
  4770  001716  EC04  F00F         	call	_DHT11_ReadData	;wreg free
  4771  00171A  6E0F               	movwf	dameTemperaturaHumedad@temperatura^0,c
  4772                           
  4773                           ;main.c: 681:         temperaturaDecimal = DHT11_ReadData();
  4774  00171C  EC04  F00F         	call	_DHT11_ReadData	;wreg free
  4775  001720  6E0D               	movwf	dameTemperaturaHumedad@temperaturaDecimal^0,c
  4776                           
  4777                           ;main.c: 682:         checkSum = DHT11_ReadData();
  4778  001722  EC04  F00F         	call	_DHT11_ReadData	;wreg free
  4779  001726  6E08               	movwf	??_dameTemperaturaHumedad^0,c
  4780  001728  5008               	movf	??_dameTemperaturaHumedad^0,w,c
  4781  00172A  6E0A               	movwf	dameTemperaturaHumedad@checkSum^0,c
  4782  00172C  6A0B               	clrf	(dameTemperaturaHumedad@checkSum+1)^0,c
  4783  00172E                     
  4784                           ;main.c: 684:         if (checkSum != (humedad + humedadDecimal + temperatura + temperat
      +                          uraDecimal))
  4785  00172E  500C               	movf	dameTemperaturaHumedad@humedadDecimal^0,w,c
  4786  001730  C00E  F008         	movff	dameTemperaturaHumedad@humedad,??_dameTemperaturaHumedad
  4787  001734  6A09               	clrf	(??_dameTemperaturaHumedad+1)^0,c
  4788  001736  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  4789  001738  0E00               	movlw	0
  4790  00173A  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  4791  00173C  500F               	movf	dameTemperaturaHumedad@temperatura^0,w,c
  4792  00173E  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  4793  001740  0E00               	movlw	0
  4794  001742  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  4795  001744  500D               	movf	dameTemperaturaHumedad@temperaturaDecimal^0,w,c
  4796  001746  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  4797  001748  0E00               	movlw	0
  4798  00174A  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  4799  00174C  500A               	movf	dameTemperaturaHumedad@checkSum^0,w,c
  4800  00174E  1808               	xorwf	??_dameTemperaturaHumedad^0,w,c
  4801  001750  E109               	bnz	u1970
  4802  001752  500B               	movf	(dameTemperaturaHumedad@checkSum+1)^0,w,c
  4803  001754  1809               	xorwf	(??_dameTemperaturaHumedad+1)^0,w,c
  4804  001756  B4D8               	btfsc	status,2,c
  4805  001758  EFB0  F00B         	goto	u1971
  4806  00175C  EFB2  F00B         	goto	u1970
  4807  001760                     u1971:
  4808  001760  EFBA  F00B         	goto	l2776
  4809  001764                     u1970:
  4810  001764                     
  4811                           ;main.c: 685:             UART_printf("Error de lectura DHT11\r\n");
  4812  001764  0E8B               	movlw	low STR_27
  4813  001766  6E02               	movwf	UART_printf@cadena^0,c
  4814  001768  0E7F               	movlw	high STR_27
  4815  00176A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4816  00176C  ECD5  F00E         	call	_UART_printf	;wreg free
  4817  001770  EFCE  F00B         	goto	l2780
  4818  001774                     l2776:
  4819                           
  4820                           ;main.c: 687:             *Humedad = humedad;
  4821  001774  C004  FFD9         	movff	dameTemperaturaHumedad@Humedad,fsr2l
  4822  001778  C005  FFDA         	movff	dameTemperaturaHumedad@Humedad+1,fsr2h
  4823  00177C  C00E  FFDF         	movff	dameTemperaturaHumedad@humedad,indf2
  4824                           
  4825                           ;main.c: 688:             *Temperatura = temperatura;
  4826  001780  C006  FFD9         	movff	dameTemperaturaHumedad@Temperatura,fsr2l
  4827  001784  C007  FFDA         	movff	dameTemperaturaHumedad@Temperatura+1,fsr2h
  4828  001788  C00F  FFDF         	movff	dameTemperaturaHumedad@temperatura,indf2
  4829  00178C  EFCE  F00B         	goto	l2780
  4830  001790                     l2778:
  4831                           
  4832                           ;main.c: 692:         UART_printf("DHT11 NO RESPONDIO\r\n");
  4833  001790  0EBB               	movlw	low STR_28
  4834  001792  6E02               	movwf	UART_printf@cadena^0,c
  4835  001794  0E7F               	movlw	high STR_28
  4836  001796  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4837  001798  ECD5  F00E         	call	_UART_printf	;wreg free
  4838  00179C                     l2780:
  4839                           
  4840                           ;main.c: 695:     PIE1bits.RCIE = 1;
  4841  00179C  8A9D               	bsf	157,5,c	;volatile
  4842  00179E                     
  4843                           ;main.c: 696:     T0CONbits.TMR0ON = 1;
  4844  00179E  8ED5               	bsf	213,7,c	;volatile
  4845  0017A0  0012               	return		;funcret
  4846  0017A2                     __end_of_dameTemperaturaHumedad:
  4847                           	opt callstack 0
  4848                           
  4849 ;; *************** function _check_response *****************
  4850 ;; Defined at:
  4851 ;;		line 38 in file "./DHT11.h"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;		None
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;  respuesta       1    0[COMRAM] unsigned char 
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  1    wreg      unsigned char 
  4858 ;; Registers used:
  4859 ;;		wreg, status,2
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4865 ;;      Params:         0       0       0       0       0       0       0       0       0
  4866 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4867 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4868 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4869 ;;Total ram usage:        1 bytes
  4870 ;; Hardware stack levels used:    1
  4871 ;; Hardware stack levels required when called:    1
  4872 ;; This function calls:
  4873 ;;		Nothing
  4874 ;; This function is called by:
  4875 ;;		_dameTemperaturaHumedad
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           	psect	text21
  4880  00202C                     __ptext21:
  4881                           	opt callstack 0
  4882  00202C                     _check_response:
  4883                           	opt callstack 25
  4884  00202C                     
  4885                           ;./DHT11.h: 40:     unsigned char respuesta = 0;
  4886  00202C  0E00               	movlw	0
  4887  00202E  6E01               	movwf	check_response@respuesta^0,c
  4888  002030                     
  4889                           ;./DHT11.h: 41:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4890  002030  0E0D               	movlw	13
  4891  002032                     u2777:
  4892  002032  2EE8               	decfsz	wreg,f,c
  4893  002034  D7FE               	bra	u2777
  4894  002036  F000               	nop	
  4895  002038                     
  4896                           ;./DHT11.h: 42:     if (!PORTDbits.RD7) {
  4897  002038  BE83               	btfsc	131,7,c	;volatile
  4898  00203A  EF21  F010         	goto	u1871
  4899  00203E  EF23  F010         	goto	u1870
  4900  002042                     u1871:
  4901  002042  EF34  F010         	goto	l2676
  4902  002046                     u1870:
  4903  002046                     
  4904                           ;./DHT11.h: 43:         _delay((unsigned long)((80)*(4000000/4000000.0)));
  4905  002046  0E1A               	movlw	26
  4906  002048                     u2787:
  4907  002048  2EE8               	decfsz	wreg,f,c
  4908  00204A  D7FE               	bra	u2787
  4909  00204C  D000               	nop2	
  4910  00204E                     
  4911                           ;./DHT11.h: 44:         if (PORTDbits.RD7) {
  4912  00204E  AE83               	btfss	131,7,c	;volatile
  4913  002050  EF2C  F010         	goto	u1881
  4914  002054  EF2E  F010         	goto	u1880
  4915  002058                     u1881:
  4916  002058  EF34  F010         	goto	l2676
  4917  00205C                     u1880:
  4918  00205C                     
  4919                           ;./DHT11.h: 45:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  4920  00205C  0E10               	movlw	16
  4921  00205E                     u2797:
  4922  00205E  2EE8               	decfsz	wreg,f,c
  4923  002060  D7FE               	bra	u2797
  4924  002062  D000               	nop2	
  4925  002064                     
  4926                           ;./DHT11.h: 46:             respuesta = 1;
  4927  002064  0E01               	movlw	1
  4928  002066  6E01               	movwf	check_response@respuesta^0,c
  4929  002068                     l2676:
  4930                           
  4931                           ;./DHT11.h: 50:     return respuesta;
  4932  002068  5001               	movf	check_response@respuesta^0,w,c
  4933  00206A  0012               	return		;funcret
  4934  00206C                     __end_of_check_response:
  4935                           	opt callstack 0
  4936                           
  4937 ;; *************** function _DHT11_Start *****************
  4938 ;; Defined at:
  4939 ;;		line 23 in file "./DHT11.h"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;		None
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;		None
  4944 ;; Return value:  Size  Location     Type
  4945 ;;                  1    wreg      void 
  4946 ;; Registers used:
  4947 ;;		wreg
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4953 ;;      Params:         0       0       0       0       0       0       0       0       0
  4954 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4955 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4956 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4957 ;;Total ram usage:        1 bytes
  4958 ;; Hardware stack levels used:    1
  4959 ;; Hardware stack levels required when called:    1
  4960 ;; This function calls:
  4961 ;;		Nothing
  4962 ;; This function is called by:
  4963 ;;		_dameTemperaturaHumedad
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           	psect	text22
  4968  00223C                     __ptext22:
  4969                           	opt callstack 0
  4970  00223C                     _DHT11_Start:
  4971                           	opt callstack 25
  4972  00223C                     
  4973                           ;./DHT11.h: 24:     TRISDbits.RD7 = 0;
  4974  00223C  9E95               	bcf	149,7,c	;volatile
  4975                           
  4976                           ;./DHT11.h: 26:     LATDbits.LATD7 = 0;
  4977  00223E  9E8C               	bcf	140,7,c	;volatile
  4978  002240                     
  4979                           ;./DHT11.h: 28:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4980  002240  0E1A               	movlw	26
  4981  002242  6E01               	movwf	??_DHT11_Start^0,c
  4982  002244  0EF8               	movlw	248
  4983  002246                     u2807:
  4984  002246  2EE8               	decfsz	wreg,f,c
  4985  002248  D7FE               	bra	u2807
  4986  00224A  2E01               	decfsz	??_DHT11_Start^0,f,c
  4987  00224C  D7FC               	bra	u2807
  4988  00224E  D000               	nop2	
  4989  002250                     
  4990                           ;./DHT11.h: 30:     LATDbits.LATD7 = 1;
  4991  002250  8E8C               	bsf	140,7,c	;volatile
  4992                           
  4993                           ;./DHT11.h: 32:     _delay((unsigned long)((30)*(4000000/4000000.0)));
  4994  002252  0E0A               	movlw	10
  4995  002254                     u2817:
  4996  002254  2EE8               	decfsz	wreg,f,c
  4997  002256  D7FE               	bra	u2817
  4998  002258                     
  4999                           ;./DHT11.h: 34:     TRISDbits.RD7 = 1;
  5000  002258  8E95               	bsf	149,7,c	;volatile
  5001  00225A  0012               	return		;funcret
  5002  00225C                     __end_of_DHT11_Start:
  5003                           	opt callstack 0
  5004                           
  5005 ;; *************** function _DHT11_ReadData *****************
  5006 ;; Defined at:
  5007 ;;		line 9 in file "./DHT11.h"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;		None
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;  data            1    1[COMRAM] unsigned char 
  5012 ;;  i               1    0[COMRAM] unsigned char 
  5013 ;; Return value:  Size  Location     Type
  5014 ;;                  1    wreg      unsigned char 
  5015 ;; Registers used:
  5016 ;;		wreg, status,2, status,0
  5017 ;; Tracked objects:
  5018 ;;		On entry : 0/0
  5019 ;;		On exit  : 0/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5022 ;;      Params:         0       0       0       0       0       0       0       0       0
  5023 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5024 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5025 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5026 ;;Total ram usage:        2 bytes
  5027 ;; Hardware stack levels used:    1
  5028 ;; Hardware stack levels required when called:    1
  5029 ;; This function calls:
  5030 ;;		Nothing
  5031 ;; This function is called by:
  5032 ;;		_dameTemperaturaHumedad
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           
  5036                           	psect	text23
  5037  001E08                     __ptext23:
  5038                           	opt callstack 0
  5039  001E08                     _DHT11_ReadData:
  5040                           	opt callstack 25
  5041  001E08                     
  5042                           ;./DHT11.h: 10:     char i, data = 0;
  5043  001E08  0E00               	movlw	0
  5044  001E0A  6E02               	movwf	DHT11_ReadData@data^0,c
  5045                           
  5046                           ;./DHT11.h: 11:     for (i = 0; i < 8; i++) {
  5047  001E0C  0E00               	movlw	0
  5048  001E0E  6E01               	movwf	DHT11_ReadData@i^0,c
  5049  001E10                     l144:
  5050  001E10  AE83               	btfss	131,7,c	;volatile
  5051  001E12  EF0D  F00F         	goto	u1831
  5052  001E16  EF0F  F00F         	goto	u1830
  5053  001E1A                     u1831:
  5054  001E1A  EF08  F00F         	goto	l144
  5055  001E1E                     u1830:
  5056  001E1E                     
  5057                           ;./DHT11.h: 13:         _delay((unsigned long)((30)*(4000000/4000000.0)));
  5058  001E1E  0E0A               	movlw	10
  5059  001E20                     u2827:
  5060  001E20  2EE8               	decfsz	wreg,f,c
  5061  001E22  D7FE               	bra	u2827
  5062  001E24                     
  5063                           ;./DHT11.h: 14:         if (PORTDbits.RD7 & 1)
  5064  001E24  AE83               	btfss	131,7,c	;volatile
  5065  001E26  EF17  F00F         	goto	u1841
  5066  001E2A  EF19  F00F         	goto	u1840
  5067  001E2E                     u1841:
  5068  001E2E  EF1D  F00F         	goto	l2644
  5069  001E32                     u1840:
  5070  001E32                     
  5071                           ;./DHT11.h: 15:             data = ((data << 1) | 1);
  5072  001E32  80D8               	bsf	status,0,c
  5073  001E34  3602               	rlcf	DHT11_ReadData@data^0,f,c
  5074  001E36  EF20  F00F         	goto	l149
  5075  001E3A                     l2644:
  5076                           
  5077                           ;./DHT11.h: 17:             data = (data << 1);
  5078  001E3A  5002               	movf	DHT11_ReadData@data^0,w,c
  5079  001E3C  2402               	addwf	DHT11_ReadData@data^0,w,c
  5080  001E3E  6E02               	movwf	DHT11_ReadData@data^0,c
  5081  001E40                     l149:
  5082  001E40  BE83               	btfsc	131,7,c	;volatile
  5083  001E42  EF25  F00F         	goto	u1851
  5084  001E46  EF27  F00F         	goto	u1850
  5085  001E4A                     u1851:
  5086  001E4A  EF20  F00F         	goto	l149
  5087  001E4E                     u1850:
  5088  001E4E                     
  5089                           ;./DHT11.h: 19:     }
  5090  001E4E  2A01               	incf	DHT11_ReadData@i^0,f,c
  5091  001E50  0E07               	movlw	7
  5092  001E52  6401               	cpfsgt	DHT11_ReadData@i^0,c
  5093  001E54  EF2E  F00F         	goto	u1861
  5094  001E58  EF30  F00F         	goto	u1860
  5095  001E5C                     u1861:
  5096  001E5C  EF08  F00F         	goto	l144
  5097  001E60                     u1860:
  5098  001E60                     
  5099                           ;./DHT11.h: 20:     return data;
  5100  001E60  5002               	movf	DHT11_ReadData@data^0,w,c
  5101  001E62  0012               	return		;funcret
  5102  001E64                     __end_of_DHT11_ReadData:
  5103                           	opt callstack 0
  5104                           
  5105 ;; *************** function _fijaHoraRtc *****************
  5106 ;; Defined at:
  5107 ;;		line 324 in file "main.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;		None
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;		None
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  1    wreg      void 
  5114 ;; Registers used:
  5115 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5121 ;;      Params:         0       0       0       0       0       0       0       0       0
  5122 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5123 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5124 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5125 ;;Total ram usage:        0 bytes
  5126 ;; Hardware stack levels used:    1
  5127 ;; Hardware stack levels required when called:    5
  5128 ;; This function calls:
  5129 ;;		_UART_printf
  5130 ;;		_escribe_rtc
  5131 ;;		_setRtc
  5132 ;; This function is called by:
  5133 ;;		_sistemaPrincipal
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137                           	psect	text24
  5138  001BB6                     __ptext24:
  5139                           	opt callstack 0
  5140  001BB6                     _fijaHoraRtc:
  5141                           	opt callstack 24
  5142  001BB6                     
  5143                           ;main.c: 326:     UART_printf("\r\n FIJA HORA \r\n");
  5144  001BB6  0ED0               	movlw	low STR_1
  5145  001BB8  6E02               	movwf	UART_printf@cadena^0,c
  5146  001BBA  0E7F               	movlw	high STR_1
  5147  001BBC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5148  001BBE  ECD5  F00E         	call	_UART_printf	;wreg free
  5149                           
  5150                           ;main.c: 329:     UART_printf("\r\n Envie las Horas en formato 24 Ej: 15 \r\n");
  5151  001BC2  0EDC               	movlw	low STR_2
  5152  001BC4  6E02               	movwf	UART_printf@cadena^0,c
  5153  001BC6  0E7C               	movlw	high STR_2
  5154  001BC8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5155  001BCA  ECD5  F00E         	call	_UART_printf	;wreg free
  5156  001BCE                     
  5157                           ;main.c: 330:     setRtc(0x02);
  5158  001BCE  0E02               	movlw	2
  5159  001BD0  ECB1  F00A         	call	_setRtc
  5160  001BD4                     
  5161                           ;main.c: 333:     if (!esperandoDatos) {
  5162  001BD4  505E               	movf	_esperandoDatos^0,w,c
  5163  001BD6  A4D8               	btfss	status,2,c
  5164  001BD8  EFF0  F00D         	goto	u2341
  5165  001BDC  EFF2  F00D         	goto	u2340
  5166  001BE0                     u2341:
  5167  001BE0  EFFB  F00D         	goto	l3126
  5168  001BE4                     u2340:
  5169  001BE4                     
  5170                           ;main.c: 334:         UART_printf("\r\n Envie los Minutos Ej: 25 \r\n");
  5171  001BE4  0EE5               	movlw	low STR_3
  5172  001BE6  6E02               	movwf	UART_printf@cadena^0,c
  5173  001BE8  0E7E               	movlw	high STR_3
  5174  001BEA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5175  001BEC  ECD5  F00E         	call	_UART_printf	;wreg free
  5176  001BF0                     
  5177                           ;main.c: 335:         setRtc(0x01);
  5178  001BF0  0E01               	movlw	1
  5179  001BF2  ECB1  F00A         	call	_setRtc
  5180  001BF6                     l3126:
  5181                           
  5182                           ;main.c: 339:     if (!esperandoDatos) {
  5183  001BF6  505E               	movf	_esperandoDatos^0,w,c
  5184  001BF8  A4D8               	btfss	status,2,c
  5185  001BFA  EF01  F00E         	goto	u2351
  5186  001BFE  EF03  F00E         	goto	u2350
  5187  001C02                     u2351:
  5188  001C02  EF0E  F00E         	goto	l278
  5189  001C06                     u2350:
  5190  001C06                     
  5191                           ;main.c: 341:         UART_printf("\r\n HORA ESTABLECIDA CORRECTAMENTE \r\n");
  5192  001C06  0E19               	movlw	low STR_4
  5193  001C08  6E02               	movwf	UART_printf@cadena^0,c
  5194  001C0A  0E7E               	movlw	high STR_4
  5195  001C0C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5196  001C0E  ECD5  F00E         	call	_UART_printf	;wreg free
  5197  001C12                     
  5198                           ;main.c: 342:         escribe_rtc(0x00, 0);
  5199  001C12  0E00               	movlw	0
  5200  001C14  6E03               	movwf	escribe_rtc@dato^0,c
  5201  001C16  0E00               	movlw	0
  5202  001C18  EC2E  F011         	call	_escribe_rtc
  5203  001C1C                     l278:
  5204  001C1C  0012               	return		;funcret
  5205  001C1E                     __end_of_fijaHoraRtc:
  5206                           	opt callstack 0
  5207                           
  5208 ;; *************** function _setRtc *****************
  5209 ;; Defined at:
  5210 ;;		line 163 in file "main.c"
  5211 ;; Parameters:    Size  Location     Type
  5212 ;;  direccion       1    wreg     unsigned char 
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;  direccion       1    5[COMRAM] unsigned char 
  5215 ;;  Rx              1   10[COMRAM] unsigned char 
  5216 ;;  i               2    8[COMRAM] int 
  5217 ;;  datoCapturad    1    7[COMRAM] unsigned char 
  5218 ;;  dato            1    6[COMRAM] unsigned char 
  5219 ;; Return value:  Size  Location     Type
  5220 ;;                  1    wreg      void 
  5221 ;; Registers used:
  5222 ;;		wreg, status,2, status,0, cstack
  5223 ;; Tracked objects:
  5224 ;;		On entry : 0/0
  5225 ;;		On exit  : 0/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5228 ;;      Params:         0       0       0       0       0       0       0       0       0
  5229 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5230 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5231 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5232 ;;Total ram usage:        7 bytes
  5233 ;; Hardware stack levels used:    1
  5234 ;; Hardware stack levels required when called:    4
  5235 ;; This function calls:
  5236 ;;		_UART_read
  5237 ;;		_UART_write
  5238 ;;		_escribe_rtc
  5239 ;; This function is called by:
  5240 ;;		_fijaHoraRtc
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           	psect	text25
  5245  001562                     __ptext25:
  5246                           	opt callstack 0
  5247  001562                     _setRtc:
  5248                           	opt callstack 24
  5249                           
  5250                           ;incstack = 0
  5251                           ;setRtc@direccion stored from wreg
  5252  001562  6E06               	movwf	setRtc@direccion^0,c
  5253  001564                     
  5254                           ;main.c: 164:     unsigned char dato;;main.c: 165:     char datoCapturado = 0;
  5255  001564  0E00               	movlw	0
  5256  001566  6E08               	movwf	setRtc@datoCapturado^0,c
  5257                           
  5258                           ;main.c: 167:     for (int i = 0; i < 2; i++) {
  5259  001568  0E00               	movlw	0
  5260  00156A  6E0A               	movwf	(setRtc@i+1)^0,c
  5261  00156C  0E00               	movlw	0
  5262  00156E  6E09               	movwf	setRtc@i^0,c
  5263  001570                     l2916:
  5264                           
  5265                           ;main.c: 168:         char Rx = UART_read();
  5266  001570  EC32  F00F         	call	_UART_read	;wreg free
  5267  001574  6E0B               	movwf	setRtc@Rx^0,c
  5268  001576                     
  5269                           ;main.c: 169:         if (Rx >= 48 && Rx <= 57) {
  5270  001576  0E2F               	movlw	47
  5271  001578  640B               	cpfsgt	setRtc@Rx^0,c
  5272  00157A  EFC1  F00A         	goto	u2111
  5273  00157E  EFC3  F00A         	goto	u2110
  5274  001582                     u2111:
  5275  001582  EFE7  F00A         	goto	l2930
  5276  001586                     u2110:
  5277  001586  0E3A               	movlw	58
  5278  001588  600B               	cpfslt	setRtc@Rx^0,c
  5279  00158A  EFC9  F00A         	goto	u2121
  5280  00158E  EFCB  F00A         	goto	u2120
  5281  001592                     u2121:
  5282  001592  EFE7  F00A         	goto	l2930
  5283  001596                     u2120:
  5284  001596                     
  5285                           ;main.c: 170:             if (!i) {
  5286  001596  5009               	movf	setRtc@i^0,w,c
  5287  001598  100A               	iorwf	(setRtc@i+1)^0,w,c
  5288  00159A  A4D8               	btfss	status,2,c
  5289  00159C  EFD2  F00A         	goto	u2131
  5290  0015A0  EFD4  F00A         	goto	u2130
  5291  0015A4                     u2131:
  5292  0015A4  EFDF  F00A         	goto	l2926
  5293  0015A8                     u2130:
  5294  0015A8                     
  5295                           ;main.c: 171:                 dato = ((Rx - 48) & 0x0F) << 4;
  5296  0015A8  C00B  F005         	movff	setRtc@Rx,??_setRtc
  5297  0015AC  0ED0               	movlw	208
  5298  0015AE  2605               	addwf	??_setRtc^0,f,c
  5299  0015B0  0E0F               	movlw	15
  5300  0015B2  1605               	andwf	??_setRtc^0,f,c
  5301  0015B4  3805               	swapf	??_setRtc^0,w,c
  5302  0015B6  0BF0               	andlw	240
  5303  0015B8  6E07               	movwf	setRtc@dato^0,c
  5304                           
  5305                           ;main.c: 172:             } else {
  5306  0015BA  EFEE  F00A         	goto	l2934
  5307  0015BE                     l2926:
  5308                           
  5309                           ;main.c: 173:                 dato |= (Rx - 48) & 0x0F;
  5310  0015BE  500B               	movf	setRtc@Rx^0,w,c
  5311  0015C0  0FD0               	addlw	208
  5312  0015C2  0B0F               	andlw	15
  5313  0015C4  1207               	iorwf	setRtc@dato^0,f,c
  5314  0015C6                     
  5315                           ;main.c: 174:                 datoCapturado = 1;
  5316  0015C6  0E01               	movlw	1
  5317  0015C8  6E08               	movwf	setRtc@datoCapturado^0,c
  5318  0015CA  EFEE  F00A         	goto	l2934
  5319  0015CE                     l2930:
  5320                           
  5321                           ;main.c: 177:             datoCapturado = 0;
  5322  0015CE  0E00               	movlw	0
  5323  0015D0  6E08               	movwf	setRtc@datoCapturado^0,c
  5324  0015D2                     
  5325                           ;main.c: 179:             UART_write('F');
  5326  0015D2  0E46               	movlw	70
  5327  0015D4  EC4A  F011         	call	_UART_write
  5328                           
  5329                           ;main.c: 180:             break;
  5330  0015D8  EFFE  F00A         	goto	l2938
  5331  0015DC                     l2934:
  5332                           
  5333                           ;main.c: 182:     }
  5334  0015DC  4A09               	infsnz	setRtc@i^0,f,c
  5335  0015DE  2A0A               	incf	(setRtc@i+1)^0,f,c
  5336  0015E0  BE0A               	btfsc	(setRtc@i+1)^0,7,c
  5337  0015E2  EFFC  F00A         	goto	u2141
  5338  0015E6  500A               	movf	(setRtc@i+1)^0,w,c
  5339  0015E8  E109               	bnz	u2140
  5340  0015EA  0E02               	movlw	2
  5341  0015EC  5C09               	subwf	setRtc@i^0,w,c
  5342  0015EE  A0D8               	btfss	status,0,c
  5343  0015F0  EFFC  F00A         	goto	u2141
  5344  0015F4  EFFE  F00A         	goto	u2140
  5345  0015F8                     u2141:
  5346  0015F8  EFB8  F00A         	goto	l2916
  5347  0015FC                     u2140:
  5348  0015FC                     l2938:
  5349                           
  5350                           ;main.c: 184:     if (datoCapturado && !esperandoDatos)
  5351  0015FC  5008               	movf	setRtc@datoCapturado^0,w,c
  5352  0015FE  B4D8               	btfsc	status,2,c
  5353  001600  EF04  F00B         	goto	u2151
  5354  001604  EF06  F00B         	goto	u2150
  5355  001608                     u2151:
  5356  001608  EF13  F00B         	goto	l230
  5357  00160C                     u2150:
  5358  00160C  505E               	movf	_esperandoDatos^0,w,c
  5359  00160E  A4D8               	btfss	status,2,c
  5360  001610  EF0C  F00B         	goto	u2161
  5361  001614  EF0E  F00B         	goto	u2160
  5362  001618                     u2161:
  5363  001618  EF13  F00B         	goto	l230
  5364  00161C                     u2160:
  5365  00161C                     
  5366                           ;main.c: 185:         escribe_rtc(direccion, dato);
  5367  00161C  C007  F003         	movff	setRtc@dato,escribe_rtc@dato
  5368  001620  5006               	movf	setRtc@direccion^0,w,c
  5369  001622  EC2E  F011         	call	_escribe_rtc
  5370  001626                     l230:
  5371  001626  0012               	return		;funcret
  5372  001628                     __end_of_setRtc:
  5373                           	opt callstack 0
  5374                           
  5375 ;; *************** function _escribe_rtc *****************
  5376 ;; Defined at:
  5377 ;;		line 2 in file "./RTC.h"
  5378 ;; Parameters:    Size  Location     Type
  5379 ;;  direccion       1    wreg     unsigned char 
  5380 ;;  dato            1    2[COMRAM] unsigned char 
  5381 ;; Auto vars:     Size  Location     Type
  5382 ;;  direccion       1    3[COMRAM] unsigned char 
  5383 ;; Return value:  Size  Location     Type
  5384 ;;                  1    wreg      void 
  5385 ;; Registers used:
  5386 ;;		wreg, status,2, status,0, cstack
  5387 ;; Tracked objects:
  5388 ;;		On entry : 0/0
  5389 ;;		On exit  : 0/0
  5390 ;;		Unchanged: 0/0
  5391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5392 ;;      Params:         1       0       0       0       0       0       0       0       0
  5393 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5394 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5395 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5396 ;;Total ram usage:        2 bytes
  5397 ;; Hardware stack levels used:    1
  5398 ;; Hardware stack levels required when called:    3
  5399 ;; This function calls:
  5400 ;;		_i2c_detener
  5401 ;;		_i2c_envia_dato
  5402 ;;		_i2c_inicia_com
  5403 ;; This function is called by:
  5404 ;;		_setRtc
  5405 ;;		_fijaHoraRtc
  5406 ;;		_setRtcDefault
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410                           	psect	text26
  5411  00225C                     __ptext26:
  5412                           	opt callstack 0
  5413  00225C                     _escribe_rtc:
  5414                           	opt callstack 24
  5415                           
  5416                           ;incstack = 0
  5417                           ;escribe_rtc@direccion stored from wreg
  5418  00225C  6E04               	movwf	escribe_rtc@direccion^0,c
  5419  00225E                     
  5420                           ;./RTC.h: 3:     i2c_inicia_com();
  5421  00225E  EC75  F011         	call	_i2c_inicia_com	;wreg free
  5422                           
  5423                           ;./RTC.h: 4:     i2c_envia_dato(0xD0);
  5424  002262  0ED0               	movlw	208
  5425  002264  EC66  F011         	call	_i2c_envia_dato
  5426                           
  5427                           ;./RTC.h: 5:     i2c_envia_dato(direccion);
  5428  002268  5004               	movf	escribe_rtc@direccion^0,w,c
  5429  00226A  EC66  F011         	call	_i2c_envia_dato
  5430                           
  5431                           ;./RTC.h: 6:     i2c_envia_dato(dato);
  5432  00226E  5003               	movf	escribe_rtc@dato^0,w,c
  5433  002270  EC66  F011         	call	_i2c_envia_dato
  5434                           
  5435                           ;./RTC.h: 7:     i2c_detener();
  5436  002274  EC79  F011         	call	_i2c_detener	;wreg free
  5437  002278  0012               	return		;funcret
  5438  00227A                     __end_of_escribe_rtc:
  5439                           	opt callstack 0
  5440                           
  5441 ;; *************** function _dameDatosSistema *****************
  5442 ;; Defined at:
  5443 ;;		line 643 in file "main.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;		None
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;  i               2   70[BANK0 ] int 
  5448 ;;  buffer         50   20[BANK0 ] unsigned char [50]
  5449 ;; Return value:  Size  Location     Type
  5450 ;;                  1    wreg      void 
  5451 ;; Registers used:
  5452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5453 ;; Tracked objects:
  5454 ;;		On entry : 0/0
  5455 ;;		On exit  : 0/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5458 ;;      Params:         0       0       0       0       0       0       0       0       0
  5459 ;;      Locals:         0      52       0       0       0       0       0       0       0
  5460 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5461 ;;      Totals:         3      52       0       0       0       0       0       0       0
  5462 ;;Total ram usage:       55 bytes
  5463 ;; Hardware stack levels used:    1
  5464 ;; Hardware stack levels required when called:    9
  5465 ;; This function calls:
  5466 ;;		_UART_printf
  5467 ;;		_UART_write
  5468 ;;		___wmul
  5469 ;;		_sprintf
  5470 ;; This function is called by:
  5471 ;;		_sistemaPrincipal
  5472 ;; This function uses a non-reentrant model
  5473 ;;
  5474                           
  5475                           	psect	text27
  5476  001218                     __ptext27:
  5477                           	opt callstack 0
  5478  001218                     _dameDatosSistema:
  5479                           	opt callstack 20
  5480  001218                     
  5481                           ;main.c: 645:     char buffer[50];;main.c: 647:     UART_write('I');
  5482  001218  0E49               	movlw	73
  5483  00121A  EC4A  F011         	call	_UART_write
  5484  00121E                     
  5485                           ;main.c: 649:     UART_printf("\r\n\nHora | Regar(1 si 0 no) | Minutos de riego \r\n\n")
      +                          ;
  5486  00121E  0E79               	movlw	low STR_25
  5487  001220  6E02               	movwf	UART_printf@cadena^0,c
  5488  001222  0E7C               	movlw	high STR_25
  5489  001224  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5490  001226  ECD5  F00E         	call	_UART_printf	;wreg free
  5491  00122A                     
  5492                           ;main.c: 651:     for (int i = 0; i < 24; i++) {
  5493  00122A  0E00               	movlw	0
  5494  00122C  0100               	movlb	0	; () banked
  5495  00122E  6FF5               	movwf	(dameDatosSistema@i+1)& (0+255),b
  5496  001230  0E00               	movlw	0
  5497  001232  6FF4               	movwf	dameDatosSistema@i& (0+255),b
  5498  001234                     l3296:
  5499                           
  5500                           ; BSR set to: 0
  5501                           ;main.c: 653:         sprintf(buffer, "%d | %d | %d \r\n", horarios[i].hora, horarios[i]
      +                          .regar,
  5502  001234  0EC2               	movlw	low dameDatosSistema@buffer
  5503  001236  6FAE               	movwf	sprintf@s& (0+255),b
  5504  001238  0E00               	movlw	high dameDatosSistema@buffer
  5505  00123A  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  5506  00123C  0EE0               	movlw	low STR_26
  5507  00123E  6FB0               	movwf	sprintf@fmt& (0+255),b
  5508  001240  0E7F               	movlw	high STR_26
  5509  001242  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  5510  001244  C0F4  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  5511  001248  C0F5  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  5512  00124C  0E00               	movlw	0
  5513  00124E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5514  001250  0E03               	movlw	3
  5515  001252  6E03               	movwf	___wmul@multiplicand^0,c
  5516  001254  ECFB  F010         	call	___wmul	;wreg free
  5517  001258  0E00               	movlw	low _horarios
  5518  00125A  2401               	addwf	?___wmul^0,w,c
  5519  00125C  6ED9               	movwf	fsr2l,c
  5520  00125E  0E01               	movlw	high _horarios
  5521  001260  2002               	addwfc	(?___wmul+1)^0,w,c
  5522  001262  6EDA               	movwf	fsr2h,c
  5523  001264  50DF               	movf	indf2,w,c
  5524  001266  6E58               	movwf	??_dameDatosSistema^0,c
  5525  001268  5058               	movf	??_dameDatosSistema^0,w,c
  5526  00126A  0100               	movlb	0	; () banked
  5527  00126C  6FB2               	movwf	(?_sprintf+4)& (0+255),b
  5528  00126E  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  5529  001270  C0F4  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  5530  001274  C0F5  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  5531  001278  0E00               	movlw	0
  5532  00127A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5533  00127C  0E03               	movlw	3
  5534  00127E  6E03               	movwf	___wmul@multiplicand^0,c
  5535  001280  ECFB  F010         	call	___wmul	;wreg free
  5536  001284  0E01               	movlw	low (_horarios+1)
  5537  001286  2401               	addwf	?___wmul^0,w,c
  5538  001288  6ED9               	movwf	fsr2l,c
  5539  00128A  0E01               	movlw	high (_horarios+1)
  5540  00128C  2002               	addwfc	(?___wmul+1)^0,w,c
  5541  00128E  6EDA               	movwf	fsr2h,c
  5542  001290  50DF               	movf	indf2,w,c
  5543  001292  6E59               	movwf	(??_dameDatosSistema+1)^0,c
  5544  001294  5059               	movf	(??_dameDatosSistema+1)^0,w,c
  5545  001296  0100               	movlb	0	; () banked
  5546  001298  6FB4               	movwf	(?_sprintf+6)& (0+255),b
  5547  00129A  6BB5               	clrf	(?_sprintf+7)& (0+255),b
  5548  00129C  C0F4  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  5549  0012A0  C0F5  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  5550  0012A4  0E00               	movlw	0
  5551  0012A6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5552  0012A8  0E03               	movlw	3
  5553  0012AA  6E03               	movwf	___wmul@multiplicand^0,c
  5554  0012AC  ECFB  F010         	call	___wmul	;wreg free
  5555  0012B0  0E02               	movlw	low (_horarios+2)
  5556  0012B2  2401               	addwf	?___wmul^0,w,c
  5557  0012B4  6ED9               	movwf	fsr2l,c
  5558  0012B6  0E01               	movlw	high (_horarios+2)
  5559  0012B8  2002               	addwfc	(?___wmul+1)^0,w,c
  5560  0012BA  6EDA               	movwf	fsr2h,c
  5561  0012BC  50DF               	movf	indf2,w,c
  5562  0012BE  6E5A               	movwf	(??_dameDatosSistema+2)^0,c
  5563  0012C0  505A               	movf	(??_dameDatosSistema+2)^0,w,c
  5564  0012C2  0100               	movlb	0	; () banked
  5565  0012C4  6FB6               	movwf	(?_sprintf+8)& (0+255),b
  5566  0012C6  6BB7               	clrf	(?_sprintf+9)& (0+255),b
  5567  0012C8  EC5C  F00F         	call	_sprintf	;wreg free
  5568  0012CC                     
  5569                           ;main.c: 656:         UART_printf(buffer);
  5570  0012CC  0EC2               	movlw	low dameDatosSistema@buffer
  5571  0012CE  6E02               	movwf	UART_printf@cadena^0,c
  5572  0012D0  0E00               	movlw	high dameDatosSistema@buffer
  5573  0012D2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5574  0012D4  ECD5  F00E         	call	_UART_printf	;wreg free
  5575  0012D8                     
  5576                           ;main.c: 658:     }
  5577  0012D8  0100               	movlb	0	; () banked
  5578  0012DA  4BF4               	infsnz	dameDatosSistema@i& (0+255),f,b
  5579  0012DC  2BF5               	incf	(dameDatosSistema@i+1)& (0+255),f,b
  5580  0012DE                     
  5581                           ; BSR set to: 0
  5582  0012DE  BFF5               	btfsc	(dameDatosSistema@i+1)& (0+255),7,b
  5583  0012E0  EF7B  F009         	goto	u2571
  5584  0012E4  51F5               	movf	(dameDatosSistema@i+1)& (0+255),w,b
  5585  0012E6  E109               	bnz	u2570
  5586  0012E8  0E18               	movlw	24
  5587  0012EA  5DF4               	subwf	dameDatosSistema@i& (0+255),w,b
  5588  0012EC  A0D8               	btfss	status,0,c
  5589  0012EE  EF7B  F009         	goto	u2571
  5590  0012F2  EF7D  F009         	goto	u2570
  5591  0012F6                     u2571:
  5592  0012F6  EF1A  F009         	goto	l3296
  5593  0012FA                     u2570:
  5594  0012FA                     
  5595                           ; BSR set to: 0
  5596                           ;main.c: 660:     UART_write('I');
  5597  0012FA  0E49               	movlw	73
  5598  0012FC  EC4A  F011         	call	_UART_write
  5599  001300  0012               	return		;funcret
  5600  001302                     __end_of_dameDatosSistema:
  5601                           	opt callstack 0
  5602                           
  5603 ;; *************** function _sprintf *****************
  5604 ;; Defined at:
  5605 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;  s               2    0[BANK0 ] PTR unsigned char 
  5608 ;;		 -> mostrarDatosSensoresWIFI@buffer(50), mostrarDatosSensores@buffer(50), dameDatosSistema@buffer(50), 
  5609 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  5610 ;;		 -> STR_35(29), STR_34(32), STR_33(40), STR_32(38), 
  5611 ;;		 -> STR_31(42), STR_30(29), STR_29(32), STR_26(16), 
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;  f               6   14[BANK0 ] struct _IO_FILE
  5614 ;;  ap              2   12[BANK0 ] PTR void [1]
  5615 ;;		 -> ?_sprintf(2), 
  5616 ;;  ret             2    0        int 
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  2    0[BANK0 ] int 
  5619 ;; Registers used:
  5620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5626 ;;      Params:         0      10       0       0       0       0       0       0       0
  5627 ;;      Locals:         0      10       0       0       0       0       0       0       0
  5628 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5629 ;;      Totals:         0      20       0       0       0       0       0       0       0
  5630 ;;Total ram usage:       20 bytes
  5631 ;; Hardware stack levels used:    1
  5632 ;; Hardware stack levels required when called:    8
  5633 ;; This function calls:
  5634 ;;		_vfprintf
  5635 ;; This function is called by:
  5636 ;;		_dameDatosSistema
  5637 ;;		_mostrarDatosSensores
  5638 ;;		_mostrarDatosSensoresWIFI
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           	psect	text28
  5643  001EB8                     __ptext28:
  5644                           	opt callstack 0
  5645  001EB8                     _sprintf:
  5646                           	opt callstack 20
  5647  001EB8  0EB2               	movlw	low (?_sprintf+4)
  5648  001EBA  0100               	movlb	0	; () banked
  5649  001EBC  6FBA               	movwf	sprintf@ap& (0+255),b
  5650  001EBE  0E00               	movlw	high (?_sprintf+4)
  5651  001EC0  6FBB               	movwf	(sprintf@ap+1)& (0+255),b
  5652  001EC2  C0AE  F0BC         	movff	sprintf@s,sprintf@f
  5653  001EC6  C0AF  F0BD         	movff	sprintf@s+1,sprintf@f+1
  5654  001ECA                     
  5655                           ; BSR set to: 0
  5656  001ECA  0E00               	movlw	0
  5657  001ECC  6FBF               	movwf	(sprintf@f+3)& (0+255),b
  5658  001ECE  0E00               	movlw	0
  5659  001ED0  6FBE               	movwf	(sprintf@f+2)& (0+255),b
  5660  001ED2                     
  5661                           ; BSR set to: 0
  5662  001ED2  0E00               	movlw	0
  5663  001ED4  6FC1               	movwf	(sprintf@f+5)& (0+255),b
  5664  001ED6  0E00               	movlw	0
  5665  001ED8  6FC0               	movwf	(sprintf@f+4)& (0+255),b
  5666  001EDA                     
  5667                           ; BSR set to: 0
  5668  001EDA  0EBC               	movlw	low sprintf@f
  5669  001EDC  6E50               	movwf	vfprintf@fp^0,c
  5670  001EDE  0E00               	movlw	high sprintf@f
  5671  001EE0  6E51               	movwf	(vfprintf@fp+1)^0,c
  5672  001EE2  C0B0  F052         	movff	sprintf@fmt,vfprintf@fmt
  5673  001EE6  C0B1  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5674  001EEA  0EBA               	movlw	low sprintf@ap
  5675  001EEC  6E54               	movwf	vfprintf@ap^0,c
  5676  001EEE  0E00               	movlw	high sprintf@ap
  5677  001EF0  6E55               	movwf	(vfprintf@ap+1)^0,c
  5678  001EF2  ECA4  F00E         	call	_vfprintf	;wreg free
  5679  001EF6  0100               	movlb	0	; () banked
  5680  001EF8  51BE               	movf	(sprintf@f+2)& (0+255),w,b
  5681  001EFA  25AE               	addwf	sprintf@s& (0+255),w,b
  5682  001EFC  6ED9               	movwf	fsr2l,c
  5683  001EFE  51BF               	movf	(sprintf@f+3)& (0+255),w,b
  5684  001F00  21AF               	addwfc	(sprintf@s+1)& (0+255),w,b
  5685  001F02  6EDA               	movwf	fsr2h,c
  5686  001F04  0E00               	movlw	0
  5687  001F06  6EDF               	movwf	indf2,c
  5688  001F08                     
  5689                           ; BSR set to: 0
  5690  001F08  0012               	return		;funcret
  5691  001F0A                     __end_of_sprintf:
  5692                           	opt callstack 0
  5693                           
  5694 ;; *************** function _vfprintf *****************
  5695 ;; Defined at:
  5696 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  5699 ;;		 -> sprintf@f(6), 
  5700 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  5701 ;;		 -> STR_35(29), STR_34(32), STR_33(40), STR_32(38), 
  5702 ;;		 -> STR_31(42), STR_30(29), STR_29(32), STR_26(16), 
  5703 ;;  ap              2   83[COMRAM] PTR PTR void 
  5704 ;;		 -> sprintf@ap(2), 
  5705 ;; Auto vars:     Size  Location     Type
  5706 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  5707 ;;		 -> STR_35(29), STR_34(32), STR_33(40), STR_32(38), 
  5708 ;;		 -> STR_31(42), STR_30(29), STR_29(32), STR_26(16), 
  5709 ;; Return value:  Size  Location     Type
  5710 ;;                  2   79[COMRAM] int 
  5711 ;; Registers used:
  5712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5713 ;; Tracked objects:
  5714 ;;		On entry : 0/0
  5715 ;;		On exit  : 0/0
  5716 ;;		Unchanged: 0/0
  5717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5718 ;;      Params:         6       0       0       0       0       0       0       0       0
  5719 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5720 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5721 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5722 ;;Total ram usage:        8 bytes
  5723 ;; Hardware stack levels used:    1
  5724 ;; Hardware stack levels required when called:    7
  5725 ;; This function calls:
  5726 ;;		_vfpfcnvrt
  5727 ;; This function is called by:
  5728 ;;		_sprintf
  5729 ;; This function uses a non-reentrant model
  5730 ;;
  5731                           
  5732                           	psect	text29
  5733  001D48                     __ptext29:
  5734                           	opt callstack 0
  5735  001D48                     _vfprintf:
  5736                           	opt callstack 20
  5737  001D48                     
  5738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5739  001D48  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  5740  001D4C  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5741  001D50                     
  5742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5743  001D50  0E00               	movlw	0
  5744  001D52  0100               	movlb	0	; () banked
  5745  001D54  6F79               	movwf	(_nout+1)& (0+255),b
  5746  001D56  0E00               	movlw	0
  5747  001D58  6F78               	movwf	_nout& (0+255),b
  5748                           
  5749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5750  001D5A  EFC2  F00E         	goto	l2820
  5751  001D5E                     l2818:
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5755  001D5E  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  5756  001D62  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5757  001D66  0E56               	movlw	low vfprintf@cfmt
  5758  001D68  6E42               	movwf	vfpfcnvrt@fmt^0,c
  5759  001D6A  0E00               	movlw	high vfprintf@cfmt
  5760  001D6C  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5761  001D6E  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  5762  001D72  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5763  001D76  ECD2  F003         	call	_vfpfcnvrt	;wreg free
  5764  001D7A  5040               	movf	?_vfpfcnvrt^0,w,c
  5765  001D7C  0100               	movlb	0	; () banked
  5766  001D7E  2778               	addwf	_nout& (0+255),f,b
  5767  001D80  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  5768  001D82  2379               	addwfc	(_nout+1)& (0+255),f,b
  5769  001D84                     l2820:
  5770                           
  5771                           ; BSR set to: 0
  5772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5773  001D84  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  5774  001D88  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5775  001D8C                     	if	0	;tblptru may be non-zero
  5776  001D8C                     	endif
  5777  001D8C                     	if	0	;tblptru may be non-zero
  5778  001D8C                     	endif
  5779  001D8C  0008               	tblrd		*
  5780  001D8E  50F5               	movf	tablat,w,c
  5781  001D90  0900               	iorlw	0
  5782  001D92  A4D8               	btfss	status,2,c
  5783  001D94  EFCE  F00E         	goto	u2001
  5784  001D98  EFD0  F00E         	goto	u2000
  5785  001D9C                     u2001:
  5786  001D9C  EFAF  F00E         	goto	l2818
  5787  001DA0                     u2000:
  5788  001DA0                     
  5789                           ; BSR set to: 0
  5790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5791  001DA0  C078  F050         	movff	_nout,?_vfprintf
  5792  001DA4  C079  F051         	movff	_nout+1,?_vfprintf+1
  5793  001DA8                     
  5794                           ; BSR set to: 0
  5795  001DA8  0012               	return		;funcret
  5796  001DAA                     __end_of_vfprintf:
  5797                           	opt callstack 0
  5798                           
  5799 ;; *************** function _vfpfcnvrt *****************
  5800 ;; Defined at:
  5801 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  5804 ;;		 -> sprintf@f(6), 
  5805 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  5806 ;;		 -> vfprintf@cfmt(2), 
  5807 ;;  ap              2   67[COMRAM] PTR PTR void 
  5808 ;;		 -> sprintf@ap(2), 
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;  ll              8   71[COMRAM] long long 
  5811 ;;  llu             8    0        unsigned long long 
  5812 ;;  f               4    0        unsigned long long 
  5813 ;;  vp              3    0        PTR void 
  5814 ;;  ct              3    0        unsigned char [3]
  5815 ;;  cp              3    0        PTR unsigned char 
  5816 ;;  i               2    0        int 
  5817 ;;  done            2    0        int 
  5818 ;;  c               1    0        unsigned char 
  5819 ;; Return value:  Size  Location     Type
  5820 ;;                  2   63[COMRAM] int 
  5821 ;; Registers used:
  5822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5823 ;; Tracked objects:
  5824 ;;		On entry : 0/0
  5825 ;;		On exit  : 0/0
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5828 ;;      Params:         6       0       0       0       0       0       0       0       0
  5829 ;;      Locals:         8       0       0       0       0       0       0       0       0
  5830 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5831 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5832 ;;Total ram usage:       16 bytes
  5833 ;; Hardware stack levels used:    1
  5834 ;; Hardware stack levels required when called:    6
  5835 ;; This function calls:
  5836 ;;		_dtoa
  5837 ;;		_fputc
  5838 ;; This function is called by:
  5839 ;;		_vfprintf
  5840 ;; This function uses a non-reentrant model
  5841 ;;
  5842                           
  5843                           	psect	text30
  5844  0007A4                     __ptext30:
  5845                           	opt callstack 0
  5846  0007A4                     _vfpfcnvrt:
  5847                           	opt callstack 20
  5848  0007A4                     
  5849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5850  0007A4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5851  0007A8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5852  0007AC  CFDE FFF6          	movff	postinc2,tblptrl
  5853  0007B0  CFDD FFF7          	movff	postdec2,tblptrh
  5854  0007B4                     	if	0	;tblptru may be non-zero
  5855  0007B4                     	endif
  5856  0007B4                     	if	0	;tblptru may be non-zero
  5857  0007B4                     	endif
  5858  0007B4  0008               	tblrd		*
  5859  0007B6  50F5               	movf	tablat,w,c
  5860  0007B8  0A25               	xorlw	37
  5861  0007BA  A4D8               	btfss	status,2,c
  5862  0007BC  EFE2  F003         	goto	u1891
  5863  0007C0  EFE4  F003         	goto	u1890
  5864  0007C4                     u1891:
  5865  0007C4  EF90  F004         	goto	l2716
  5866  0007C8                     u1890:
  5867  0007C8                     
  5868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5869  0007C8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5870  0007CC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5871  0007D0  2ADE               	incf	postinc2,f,c
  5872  0007D2  0E00               	movlw	0
  5873  0007D4  22DD               	addwfc	postdec2,f,c
  5874  0007D6                     
  5875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5876  0007D6  0E00               	movlw	0
  5877  0007D8  0100               	movlb	0	; () banked
  5878  0007DA  6F7B               	movwf	(_width+1)& (0+255),b
  5879  0007DC  0E00               	movlw	0
  5880  0007DE  6F7A               	movwf	_width& (0+255),b
  5881  0007E0  C07A  F07E         	movff	_width,_flags
  5882  0007E4  C07B  F07F         	movff	_width+1,_flags+1
  5883  0007E8                     
  5884                           ; BSR set to: 0
  5885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5886  0007E8  697C               	setf	_prec& (0+255),b
  5887  0007EA  697D               	setf	(_prec+1)& (0+255),b
  5888  0007EC                     
  5889                           ; BSR set to: 0
  5890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5891  0007EC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5892  0007F0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5893  0007F4  CFDE FFF6          	movff	postinc2,tblptrl
  5894  0007F8  CFDD FFF7          	movff	postdec2,tblptrh
  5895  0007FC                     	if	0	;tblptru may be non-zero
  5896  0007FC                     	endif
  5897  0007FC                     	if	0	;tblptru may be non-zero
  5898  0007FC                     	endif
  5899  0007FC  0008               	tblrd		*
  5900  0007FE  50F5               	movf	tablat,w,c
  5901  000800  0A64               	xorlw	100
  5902  000802  B4D8               	btfsc	status,2,c
  5903  000804  EF06  F004         	goto	u1901
  5904  000808  EF08  F004         	goto	u1900
  5905  00080C                     u1901:
  5906  00080C  EF1A  F004         	goto	l2694
  5907  000810                     u1900:
  5908  000810                     
  5909                           ; BSR set to: 0
  5910  000810  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5911  000814  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5912  000818  CFDE FFF6          	movff	postinc2,tblptrl
  5913  00081C  CFDD FFF7          	movff	postdec2,tblptrh
  5914  000820                     	if	0	;tblptru may be non-zero
  5915  000820                     	endif
  5916  000820                     	if	0	;tblptru may be non-zero
  5917  000820                     	endif
  5918  000820  0008               	tblrd		*
  5919  000822  50F5               	movf	tablat,w,c
  5920  000824  0A69               	xorlw	105
  5921  000826  A4D8               	btfss	status,2,c
  5922  000828  EF18  F004         	goto	u1911
  5923  00082C  EF1A  F004         	goto	u1910
  5924  000830                     u1911:
  5925  000830  EF5A  F004         	goto	l2700
  5926  000834                     u1910:
  5927  000834                     l2694:
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5931  000834  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5932  000838  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5933  00083C  2ADE               	incf	postinc2,f,c
  5934  00083E  0E00               	movlw	0
  5935  000840  22DD               	addwfc	postdec2,f,c
  5936                           
  5937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5938  000842  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5939  000846  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5940  00084A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  5941  00084E  0E02               	movlw	2
  5942  000850  26DE               	addwf	postinc2,f,c
  5943  000852  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  5944  000856  0E00               	movlw	0
  5945  000858  22DD               	addwfc	postdec2,f,c
  5946  00085A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5947  00085E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5948  000862  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  5949  000866  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  5950  00086A  0E00               	movlw	0
  5951  00086C  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  5952  00086E  0EFF               	movlw	-1
  5953  000870  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  5954  000872  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  5955  000874  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  5956  000876  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  5957  000878  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  5958  00087A  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  5959  00087C                     
  5960                           ; BSR set to: 0
  5961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  5962  00087C  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5963  000880  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5964  000884  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  5965  000888  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5966  00088C  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5967  000890  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5968  000894  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5969  000898  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5970  00089C  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5971  0008A0  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5972  0008A4  EC7D  F001         	call	_dtoa	;wreg free
  5973  0008A8  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  5974  0008AC  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5975  0008B0  EFAB  F004         	goto	l460
  5976  0008B4                     l2700:
  5977                           
  5978                           ; BSR set to: 0
  5979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5980  0008B4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5981  0008B8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5982  0008BC  CFDE FFF6          	movff	postinc2,tblptrl
  5983  0008C0  CFDD FFF7          	movff	postdec2,tblptrh
  5984  0008C4                     	if	0	;tblptru may be non-zero
  5985  0008C4                     	endif
  5986  0008C4                     	if	0	;tblptru may be non-zero
  5987  0008C4                     	endif
  5988  0008C4  0008               	tblrd		*
  5989  0008C6  50F5               	movf	tablat,w,c
  5990  0008C8  0A25               	xorlw	37
  5991  0008CA  A4D8               	btfss	status,2,c
  5992  0008CC  EF6A  F004         	goto	u1921
  5993  0008D0  EF6C  F004         	goto	u1920
  5994  0008D4                     u1921:
  5995  0008D4  EF83  F004         	goto	l2710
  5996  0008D8                     u1920:
  5997  0008D8                     
  5998                           ; BSR set to: 0
  5999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  6000  0008D8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6001  0008DC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6002  0008E0  2ADE               	incf	postinc2,f,c
  6003  0008E2  0E00               	movlw	0
  6004  0008E4  22DD               	addwfc	postdec2,f,c
  6005  0008E6                     
  6006                           ; BSR set to: 0
  6007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  6008  0008E6  0E00               	movlw	0
  6009  0008E8  6E02               	movwf	(fputc@c+1)^0,c
  6010  0008EA  0E25               	movlw	37
  6011  0008EC  6E01               	movwf	fputc@c^0,c
  6012  0008EE  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6013  0008F2  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6014  0008F6  ECE8  F009         	call	_fputc	;wreg free
  6015  0008FA                     l2706:
  6016                           
  6017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  6018  0008FA  0E00               	movlw	0
  6019  0008FC  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  6020  0008FE  0E01               	movlw	1
  6021  000900  6E40               	movwf	?_vfpfcnvrt^0,c
  6022  000902  EFAB  F004         	goto	l460
  6023  000906                     l2710:
  6024                           
  6025                           ; BSR set to: 0
  6026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  6027  000906  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6028  00090A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6029  00090E  2ADE               	incf	postinc2,f,c
  6030  000910  0E00               	movlw	0
  6031  000912  22DD               	addwfc	postdec2,f,c
  6032  000914                     
  6033                           ; BSR set to: 0
  6034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  6035  000914  0E00               	movlw	0
  6036  000916  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  6037  000918  0E00               	movlw	0
  6038  00091A  6E40               	movwf	?_vfpfcnvrt^0,c
  6039  00091C  EFAB  F004         	goto	l460
  6040  000920                     l2716:
  6041                           
  6042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  6043  000920  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6044  000924  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6045  000928  CFDE FFF6          	movff	postinc2,tblptrl
  6046  00092C  CFDD FFF7          	movff	postdec2,tblptrh
  6047  000930                     	if	0	;tblptru may be non-zero
  6048  000930                     	endif
  6049  000930                     	if	0	;tblptru may be non-zero
  6050  000930                     	endif
  6051  000930  0008               	tblrd		*
  6052  000932  50F5               	movf	tablat,w,c
  6053  000934  6E01               	movwf	fputc@c^0,c
  6054  000936  6A02               	clrf	(fputc@c+1)^0,c
  6055  000938  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6056  00093C  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6057  000940  ECE8  F009         	call	_fputc	;wreg free
  6058  000944                     
  6059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  6060  000944  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6061  000948  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6062  00094C  2ADE               	incf	postinc2,f,c
  6063  00094E  0E00               	movlw	0
  6064  000950  22DD               	addwfc	postdec2,f,c
  6065  000952  EF7D  F004         	goto	l2706
  6066  000956                     l460:
  6067  000956  0012               	return		;funcret
  6068  000958                     __end_of_vfpfcnvrt:
  6069                           	opt callstack 0
  6070                           
  6071 ;; *************** function _dtoa *****************
  6072 ;; Defined at:
  6073 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6076 ;;		 -> sprintf@f(6), 
  6077 ;;  d               8   29[COMRAM] long long 
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;  n               8   53[COMRAM] long long 
  6080 ;;  i               2   61[COMRAM] int 
  6081 ;;  s               2   51[COMRAM] int 
  6082 ;;  w               2   49[COMRAM] int 
  6083 ;;  p               2   47[COMRAM] int 
  6084 ;; Return value:  Size  Location     Type
  6085 ;;                  2   27[COMRAM] int 
  6086 ;; Registers used:
  6087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6088 ;; Tracked objects:
  6089 ;;		On entry : 0/0
  6090 ;;		On exit  : 0/0
  6091 ;;		Unchanged: 0/0
  6092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6093 ;;      Params:        10       0       0       0       0       0       0       0       0
  6094 ;;      Locals:        18       0       0       0       0       0       0       0       0
  6095 ;;      Temps:          8       0       0       0       0       0       0       0       0
  6096 ;;      Totals:        36       0       0       0       0       0       0       0       0
  6097 ;;Total ram usage:       36 bytes
  6098 ;; Hardware stack levels used:    1
  6099 ;; Hardware stack levels required when called:    5
  6100 ;; This function calls:
  6101 ;;		___aodiv
  6102 ;;		___aomod
  6103 ;;		_abs
  6104 ;;		_pad
  6105 ;; This function is called by:
  6106 ;;		_vfpfcnvrt
  6107 ;; This function uses a non-reentrant model
  6108 ;;
  6109                           
  6110                           	psect	text31
  6111  0002FA                     __ptext31:
  6112                           	opt callstack 0
  6113  0002FA                     _dtoa:
  6114                           	opt callstack 20
  6115  0002FA                     
  6116                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  6117  0002FA  C01E  F036         	movff	dtoa@d,dtoa@n
  6118  0002FE  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  6119  000302  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  6120  000306  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  6121  00030A  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  6122  00030E  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  6123  000312  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  6124  000316  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  6125  00031A                     
  6126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  6127  00031A  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  6128  00031C  EF92  F001         	goto	u1651
  6129  000320  EF95  F001         	goto	u1650
  6130  000324                     u1651:
  6131  000324  0E01               	movlw	1
  6132  000326  EF96  F001         	goto	u1660
  6133  00032A                     u1650:
  6134  00032A  0E00               	movlw	0
  6135  00032C                     u1660:
  6136  00032C  6E34               	movwf	dtoa@s^0,c
  6137  00032E  6A35               	clrf	(dtoa@s+1)^0,c
  6138                           
  6139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  6140  000330  5034               	movf	dtoa@s^0,w,c
  6141  000332  1035               	iorwf	(dtoa@s+1)^0,w,c
  6142  000334  B4D8               	btfsc	status,2,c
  6143  000336  EF9F  F001         	goto	u1671
  6144  00033A  EFA1  F001         	goto	u1670
  6145  00033E                     u1671:
  6146  00033E  EFB1  F001         	goto	l2552
  6147  000342                     u1670:
  6148  000342                     
  6149                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  6150  000342  1E3D               	comf	(dtoa@n+7)^0,f,c
  6151  000344  1E3C               	comf	(dtoa@n+6)^0,f,c
  6152  000346  1E3B               	comf	(dtoa@n+5)^0,f,c
  6153  000348  1E3A               	comf	(dtoa@n+4)^0,f,c
  6154  00034A  1E39               	comf	(dtoa@n+3)^0,f,c
  6155  00034C  1E38               	comf	(dtoa@n+2)^0,f,c
  6156  00034E  1E37               	comf	(dtoa@n+1)^0,f,c
  6157  000350  6C36               	negf	dtoa@n^0,c
  6158  000352  0E00               	movlw	0
  6159  000354  2237               	addwfc	(dtoa@n+1)^0,f,c
  6160  000356  2238               	addwfc	(dtoa@n+2)^0,f,c
  6161  000358  2239               	addwfc	(dtoa@n+3)^0,f,c
  6162  00035A  223A               	addwfc	(dtoa@n+4)^0,f,c
  6163  00035C  223B               	addwfc	(dtoa@n+5)^0,f,c
  6164  00035E  223C               	addwfc	(dtoa@n+6)^0,f,c
  6165  000360  223D               	addwfc	(dtoa@n+7)^0,f,c
  6166  000362                     l2552:
  6167                           
  6168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  6169  000362  0100               	movlb	0	; () banked
  6170  000364  BF7D               	btfsc	(_prec+1)& (0+255),7,b
  6171  000366  EFB7  F001         	goto	u1681
  6172  00036A  EFB9  F001         	goto	u1680
  6173  00036E                     u1681:
  6174  00036E  EFBA  F001         	goto	l2556
  6175  000372                     u1680:
  6176  000372                     
  6177                           ; BSR set to: 0
  6178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  6179  000372  937E               	bcf	_flags& (0+255),1,b
  6180  000374                     l2556:
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  6184  000374  BF7D               	btfsc	(_prec+1)& (0+255),7,b
  6185  000376  EFC7  F001         	goto	u1690
  6186  00037A  517D               	movf	(_prec+1)& (0+255),w,b
  6187  00037C  E106               	bnz	u1691
  6188  00037E  057C               	decf	_prec& (0+255),w,b
  6189  000380  B0D8               	btfsc	status,0,c
  6190  000382  EFC5  F001         	goto	u1691
  6191  000386  EFC7  F001         	goto	u1690
  6192  00038A                     u1691:
  6193  00038A  EFCD  F001         	goto	l433
  6194  00038E                     u1690:
  6195  00038E                     
  6196                           ; BSR set to: 0
  6197  00038E  0E00               	movlw	0
  6198  000390  6E31               	movwf	(dtoa@p+1)^0,c
  6199  000392  0E01               	movlw	1
  6200  000394  6E30               	movwf	dtoa@p^0,c
  6201  000396  EFD1  F001         	goto	l435
  6202  00039A                     l433:
  6203                           
  6204                           ; BSR set to: 0
  6205  00039A  C07C  F030         	movff	_prec,dtoa@p
  6206  00039E  C07D  F031         	movff	_prec+1,dtoa@p+1
  6207  0003A2                     l435:
  6208                           
  6209                           ; BSR set to: 0
  6210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  6211  0003A2  C07A  F032         	movff	_width,dtoa@w
  6212  0003A6  C07B  F033         	movff	_width+1,dtoa@w+1
  6213  0003AA                     
  6214                           ; BSR set to: 0
  6215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  6216  0003AA  5034               	movf	dtoa@s^0,w,c
  6217  0003AC  1035               	iorwf	(dtoa@s+1)^0,w,c
  6218  0003AE  A4D8               	btfss	status,2,c
  6219  0003B0  EFDC  F001         	goto	u1701
  6220  0003B4  EFDE  F001         	goto	u1700
  6221  0003B8                     u1701:
  6222  0003B8  EFE5  F001         	goto	l2564
  6223  0003BC                     u1700:
  6224  0003BC                     
  6225                           ; BSR set to: 0
  6226  0003BC  A57E               	btfss	_flags& (0+255),2,b
  6227  0003BE  EFE3  F001         	goto	u1711
  6228  0003C2  EFE5  F001         	goto	u1710
  6229  0003C6                     u1711:
  6230  0003C6  EFE8  F001         	goto	l2566
  6231  0003CA                     u1710:
  6232  0003CA                     l2564:
  6233                           
  6234                           ; BSR set to: 0
  6235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  6236  0003CA  0632               	decf	dtoa@w^0,f,c
  6237  0003CC  A0D8               	btfss	status,0,c
  6238  0003CE  0633               	decf	(dtoa@w+1)^0,f,c
  6239  0003D0                     l2566:
  6240                           
  6241                           ; BSR set to: 0
  6242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  6243  0003D0  0E00               	movlw	0
  6244  0003D2  6E3F               	movwf	(dtoa@i+1)^0,c
  6245  0003D4  0E1F               	movlw	31
  6246  0003D6  6E3E               	movwf	dtoa@i^0,c
  6247  0003D8                     
  6248                           ; BSR set to: 0
  6249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  6250  0003D8  0E00               	movlw	0
  6251  0003DA  6FAD               	movwf	(_dbuf+31)& (0+255),b
  6252                           
  6253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6254  0003DC  EF6C  F002         	goto	l2580
  6255  0003E0                     l2570:
  6256                           
  6257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  6258  0003E0  063E               	decf	dtoa@i^0,f,c
  6259  0003E2  A0D8               	btfss	status,0,c
  6260  0003E4  063F               	decf	(dtoa@i+1)^0,f,c
  6261  0003E6                     
  6262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  6263  0003E6  0E8E               	movlw	low _dbuf
  6264  0003E8  243E               	addwf	dtoa@i^0,w,c
  6265  0003EA  6ED9               	movwf	fsr2l,c
  6266  0003EC  0E00               	movlw	high _dbuf
  6267  0003EE  203F               	addwfc	(dtoa@i+1)^0,w,c
  6268  0003F0  6EDA               	movwf	fsr2h,c
  6269  0003F2  C036  F001         	movff	dtoa@n,___aomod@dividend
  6270  0003F6  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6271  0003FA  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6272  0003FE  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6273  000402  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6274  000406  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6275  00040A  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6276  00040E  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6277  000412  0E0A               	movlw	10
  6278  000414  6E09               	movwf	___aomod@divisor^0,c
  6279  000416  0E00               	movlw	0
  6280  000418  6E0A               	movwf	(___aomod@divisor+1)^0,c
  6281  00041A  0E00               	movlw	0
  6282  00041C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  6283  00041E  0E00               	movlw	0
  6284  000420  6E0C               	movwf	(___aomod@divisor+3)^0,c
  6285  000422  0E00               	movlw	0
  6286  000424  6E0D               	movwf	(___aomod@divisor+4)^0,c
  6287  000426  0E00               	movlw	0
  6288  000428  6E0E               	movwf	(___aomod@divisor+5)^0,c
  6289  00042A  0E00               	movlw	0
  6290  00042C  6E0F               	movwf	(___aomod@divisor+6)^0,c
  6291  00042E  0E00               	movlw	0
  6292  000430  6E10               	movwf	(___aomod@divisor+7)^0,c
  6293  000432  EC70  F005         	call	___aomod	;wreg free
  6294  000436  C001  F026         	movff	?___aomod,??_dtoa
  6295  00043A  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6296  00043E  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6297  000442  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6298  000446  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6299  00044A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6300  00044E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6301  000452  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6302  000456  C026  F013         	movff	??_dtoa,abs@a
  6303  00045A  C028  F014         	movff	??_dtoa+2,abs@a+1
  6304  00045E  EC36  F010         	call	_abs	;wreg free
  6305  000462  5013               	movf	?_abs^0,w,c
  6306  000464  0F30               	addlw	48
  6307  000466  6EDF               	movwf	indf2,c
  6308  000468                     
  6309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  6310  000468  0630               	decf	dtoa@p^0,f,c
  6311  00046A  A0D8               	btfss	status,0,c
  6312  00046C  0631               	decf	(dtoa@p+1)^0,f,c
  6313  00046E                     
  6314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  6315  00046E  0632               	decf	dtoa@w^0,f,c
  6316  000470  A0D8               	btfss	status,0,c
  6317  000472  0633               	decf	(dtoa@w+1)^0,f,c
  6318  000474                     
  6319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  6320  000474  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6321  000478  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6322  00047C  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6323  000480  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6324  000484  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6325  000488  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6326  00048C  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6327  000490  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6328  000494  0E0A               	movlw	10
  6329  000496  6E09               	movwf	___aodiv@divisor^0,c
  6330  000498  0E00               	movlw	0
  6331  00049A  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  6332  00049C  0E00               	movlw	0
  6333  00049E  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  6334  0004A0  0E00               	movlw	0
  6335  0004A2  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  6336  0004A4  0E00               	movlw	0
  6337  0004A6  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  6338  0004A8  0E00               	movlw	0
  6339  0004AA  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  6340  0004AC  0E00               	movlw	0
  6341  0004AE  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  6342  0004B0  0E00               	movlw	0
  6343  0004B2  6E10               	movwf	(___aodiv@divisor+7)^0,c
  6344  0004B4  ECAC  F004         	call	___aodiv	;wreg free
  6345  0004B8  C001  F036         	movff	?___aodiv,dtoa@n
  6346  0004BC  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6347  0004C0  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6348  0004C4  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6349  0004C8  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6350  0004CC  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6351  0004D0  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6352  0004D4  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6353  0004D8                     l2580:
  6354                           
  6355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6356  0004D8  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  6357  0004DA  EF77  F002         	goto	u1721
  6358  0004DE  503F               	movf	(dtoa@i+1)^0,w,c
  6359  0004E0  E108               	bnz	u1720
  6360  0004E2  043E               	decf	dtoa@i^0,w,c
  6361  0004E4  A0D8               	btfss	status,0,c
  6362  0004E6  EF77  F002         	goto	u1721
  6363  0004EA  EF79  F002         	goto	u1720
  6364  0004EE                     u1721:
  6365  0004EE  EFAA  F002         	goto	l2590
  6366  0004F2                     u1720:
  6367  0004F2  5036               	movf	dtoa@n^0,w,c
  6368  0004F4  1037               	iorwf	(dtoa@n+1)^0,w,c
  6369  0004F6  1038               	iorwf	(dtoa@n+2)^0,w,c
  6370  0004F8  1039               	iorwf	(dtoa@n+3)^0,w,c
  6371  0004FA  103A               	iorwf	(dtoa@n+4)^0,w,c
  6372  0004FC  103B               	iorwf	(dtoa@n+5)^0,w,c
  6373  0004FE  103C               	iorwf	(dtoa@n+6)^0,w,c
  6374  000500  103D               	iorwf	(dtoa@n+7)^0,w,c
  6375  000502  A4D8               	btfss	status,2,c
  6376  000504  EF86  F002         	goto	u1731
  6377  000508  EF88  F002         	goto	u1730
  6378  00050C                     u1731:
  6379  00050C  EFF0  F001         	goto	l2570
  6380  000510                     u1730:
  6381  000510  BE31               	btfsc	(dtoa@p+1)^0,7,c
  6382  000512  EF95  F002         	goto	u1740
  6383  000516  5031               	movf	(dtoa@p+1)^0,w,c
  6384  000518  E106               	bnz	u1741
  6385  00051A  0430               	decf	dtoa@p^0,w,c
  6386  00051C  B0D8               	btfsc	status,0,c
  6387  00051E  EF93  F002         	goto	u1741
  6388  000522  EF95  F002         	goto	u1740
  6389  000526                     u1741:
  6390  000526  EFF0  F001         	goto	l2570
  6391  00052A                     u1740:
  6392  00052A  BE33               	btfsc	(dtoa@w+1)^0,7,c
  6393  00052C  EFA0  F002         	goto	u1751
  6394  000530  5033               	movf	(dtoa@w+1)^0,w,c
  6395  000532  E108               	bnz	u1750
  6396  000534  0432               	decf	dtoa@w^0,w,c
  6397  000536  A0D8               	btfss	status,0,c
  6398  000538  EFA0  F002         	goto	u1751
  6399  00053C  EFA2  F002         	goto	u1750
  6400  000540                     u1751:
  6401  000540  EFAA  F002         	goto	l2590
  6402  000544                     u1750:
  6403  000544  0100               	movlb	0	; () banked
  6404  000546  B37E               	btfsc	_flags& (0+255),1,b
  6405  000548  EFA8  F002         	goto	u1761
  6406  00054C  EFAA  F002         	goto	u1760
  6407  000550                     u1761:
  6408  000550  EFF0  F001         	goto	l2570
  6409  000554                     u1760:
  6410  000554                     l2590:
  6411                           
  6412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6413  000554  5034               	movf	dtoa@s^0,w,c
  6414  000556  1035               	iorwf	(dtoa@s+1)^0,w,c
  6415  000558  A4D8               	btfss	status,2,c
  6416  00055A  EFB1  F002         	goto	u1771
  6417  00055E  EFB3  F002         	goto	u1770
  6418  000562                     u1771:
  6419  000562  EFBB  F002         	goto	l2594
  6420  000566                     u1770:
  6421  000566  0100               	movlb	0	; () banked
  6422  000568  A57E               	btfss	_flags& (0+255),2,b
  6423  00056A  EFB9  F002         	goto	u1781
  6424  00056E  EFBB  F002         	goto	u1780
  6425  000572                     u1781:
  6426  000572  EFD9  F002         	goto	l2604
  6427  000576                     u1780:
  6428  000576                     l2594:
  6429                           
  6430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6431  000576  063E               	decf	dtoa@i^0,f,c
  6432  000578  A0D8               	btfss	status,0,c
  6433  00057A  063F               	decf	(dtoa@i+1)^0,f,c
  6434  00057C                     
  6435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6436  00057C  5034               	movf	dtoa@s^0,w,c
  6437  00057E  1035               	iorwf	(dtoa@s+1)^0,w,c
  6438  000580  A4D8               	btfss	status,2,c
  6439  000582  EFC5  F002         	goto	u1791
  6440  000586  EFC7  F002         	goto	u1790
  6441  00058A                     u1791:
  6442  00058A  EFCD  F002         	goto	l2600
  6443  00058E                     u1790:
  6444  00058E  0E00               	movlw	0
  6445  000590  6E2F               	movwf	(_dtoa$1012+1)^0,c
  6446  000592  0E2B               	movlw	43
  6447  000594  6E2E               	movwf	_dtoa$1012^0,c
  6448  000596  EFD1  F002         	goto	l2602
  6449  00059A                     l2600:
  6450  00059A  0E00               	movlw	0
  6451  00059C  6E2F               	movwf	(_dtoa$1012+1)^0,c
  6452  00059E  0E2D               	movlw	45
  6453  0005A0  6E2E               	movwf	_dtoa$1012^0,c
  6454  0005A2                     l2602:
  6455  0005A2  0E8E               	movlw	low _dbuf
  6456  0005A4  243E               	addwf	dtoa@i^0,w,c
  6457  0005A6  6ED9               	movwf	fsr2l,c
  6458  0005A8  0E00               	movlw	high _dbuf
  6459  0005AA  203F               	addwfc	(dtoa@i+1)^0,w,c
  6460  0005AC  6EDA               	movwf	fsr2h,c
  6461  0005AE  C02E  FFDF         	movff	_dtoa$1012,indf2
  6462  0005B2                     l2604:
  6463                           
  6464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6465  0005B2  C01C  F011         	movff	dtoa@fp,pad@fp
  6466  0005B6  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6467  0005BA  0E8E               	movlw	low _dbuf
  6468  0005BC  243E               	addwf	dtoa@i^0,w,c
  6469  0005BE  6E13               	movwf	pad@buf^0,c
  6470  0005C0  0E00               	movlw	high _dbuf
  6471  0005C2  203F               	addwfc	(dtoa@i+1)^0,w,c
  6472  0005C4  6E14               	movwf	(pad@buf+1)^0,c
  6473  0005C6  C032  F015         	movff	dtoa@w,pad@p
  6474  0005CA  C033  F016         	movff	dtoa@w+1,pad@p+1
  6475  0005CE  EC14  F00B         	call	_pad	;wreg free
  6476  0005D2  C011  F01C         	movff	?_pad,?_dtoa
  6477  0005D6  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6478  0005DA  0012               	return		;funcret
  6479  0005DC                     __end_of_dtoa:
  6480                           	opt callstack 0
  6481                           
  6482 ;; *************** function _pad *****************
  6483 ;; Defined at:
  6484 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6487 ;;		 -> sprintf@f(6), 
  6488 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6489 ;;		 -> dbuf(32), 
  6490 ;;  p               2   20[COMRAM] int 
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;  w               2   25[COMRAM] int 
  6493 ;;  i               2   23[COMRAM] int 
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  2   16[COMRAM] int 
  6496 ;; Registers used:
  6497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6503 ;;      Params:         6       0       0       0       0       0       0       0       0
  6504 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6505 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6506 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6507 ;;Total ram usage:       11 bytes
  6508 ;; Hardware stack levels used:    1
  6509 ;; Hardware stack levels required when called:    4
  6510 ;; This function calls:
  6511 ;;		_fputc
  6512 ;;		_fputs
  6513 ;;		_strlen
  6514 ;; This function is called by:
  6515 ;;		_dtoa
  6516 ;; This function uses a non-reentrant model
  6517 ;;
  6518                           
  6519                           	psect	text32
  6520  001628                     __ptext32:
  6521                           	opt callstack 0
  6522  001628                     _pad:
  6523                           	opt callstack 20
  6524  001628                     
  6525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6526  001628  0100               	movlb	0	; () banked
  6527  00162A  A17E               	btfss	_flags& (0+255),0,b
  6528  00162C  EF1A  F00B         	goto	u1441
  6529  001630  EF1C  F00B         	goto	u1440
  6530  001634                     u1441:
  6531  001634  EF26  F00B         	goto	l2436
  6532  001638                     u1440:
  6533  001638                     
  6534                           ; BSR set to: 0
  6535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6536  001638  C013  F00A         	movff	pad@buf,fputs@s
  6537  00163C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6538  001640  C011  F00C         	movff	pad@fp,fputs@fp
  6539  001644  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6540  001648  ECF4  F00F         	call	_fputs	;wreg free
  6541  00164C                     l2436:
  6542                           
  6543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6544  00164C  BE16               	btfsc	(pad@p+1)^0,7,c
  6545  00164E  EF2B  F00B         	goto	u1451
  6546  001652  EF2D  F00B         	goto	u1450
  6547  001656                     u1451:
  6548  001656  EF33  F00B         	goto	l2440
  6549  00165A                     u1450:
  6550  00165A  C015  F01A         	movff	pad@p,pad@w
  6551  00165E  C016  F01B         	movff	pad@p+1,pad@w+1
  6552  001662  EF37  F00B         	goto	l422
  6553  001666                     l2440:
  6554  001666  0E00               	movlw	0
  6555  001668  6E1B               	movwf	(pad@w+1)^0,c
  6556  00166A  0E00               	movlw	0
  6557  00166C  6E1A               	movwf	pad@w^0,c
  6558  00166E                     l422:
  6559                           
  6560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6561  00166E  0E00               	movlw	0
  6562  001670  6E19               	movwf	(pad@i+1)^0,c
  6563  001672  0E00               	movlw	0
  6564  001674  6E18               	movwf	pad@i^0,c
  6565                           
  6566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6567  001676  EF49  F00B         	goto	l2446
  6568  00167A                     l2442:
  6569                           
  6570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6571  00167A  0E00               	movlw	0
  6572  00167C  6E02               	movwf	(fputc@c+1)^0,c
  6573  00167E  0E20               	movlw	32
  6574  001680  6E01               	movwf	fputc@c^0,c
  6575  001682  C011  F003         	movff	pad@fp,fputc@fp
  6576  001686  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6577  00168A  ECE8  F009         	call	_fputc	;wreg free
  6578  00168E                     
  6579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6580  00168E  4A18               	infsnz	pad@i^0,f,c
  6581  001690  2A19               	incf	(pad@i+1)^0,f,c
  6582  001692                     l2446:
  6583                           
  6584                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6585  001692  501A               	movf	pad@w^0,w,c
  6586  001694  5C18               	subwf	pad@i^0,w,c
  6587  001696  5019               	movf	(pad@i+1)^0,w,c
  6588  001698  0A80               	xorlw	128
  6589  00169A  6E17               	movwf	??_pad^0,c
  6590  00169C  501B               	movf	(pad@w+1)^0,w,c
  6591  00169E  0A80               	xorlw	128
  6592  0016A0  5817               	subwfb	??_pad^0,w,c
  6593  0016A2  A0D8               	btfss	status,0,c
  6594  0016A4  EF56  F00B         	goto	u1461
  6595  0016A8  EF58  F00B         	goto	u1460
  6596  0016AC                     u1461:
  6597  0016AC  EF3D  F00B         	goto	l2442
  6598  0016B0                     u1460:
  6599  0016B0                     
  6600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6601  0016B0  0100               	movlb	0	; () banked
  6602  0016B2  B17E               	btfsc	_flags& (0+255),0,b
  6603  0016B4  EF5E  F00B         	goto	u1471
  6604  0016B8  EF60  F00B         	goto	u1470
  6605  0016BC                     u1471:
  6606  0016BC  EF6A  F00B         	goto	l2450
  6607  0016C0                     u1470:
  6608  0016C0                     
  6609                           ; BSR set to: 0
  6610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6611  0016C0  C013  F00A         	movff	pad@buf,fputs@s
  6612  0016C4  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6613  0016C8  C011  F00C         	movff	pad@fp,fputs@fp
  6614  0016CC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6615  0016D0  ECF4  F00F         	call	_fputs	;wreg free
  6616  0016D4                     l2450:
  6617                           
  6618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6619  0016D4  C013  F001         	movff	pad@buf,strlen@s
  6620  0016D8  C014  F002         	movff	pad@buf+1,strlen@s+1
  6621  0016DC  EC74  F010         	call	_strlen	;wreg free
  6622  0016E0  501A               	movf	pad@w^0,w,c
  6623  0016E2  2401               	addwf	?_strlen^0,w,c
  6624  0016E4  6E11               	movwf	?_pad^0,c
  6625  0016E6  501B               	movf	(pad@w+1)^0,w,c
  6626  0016E8  2002               	addwfc	(?_strlen+1)^0,w,c
  6627  0016EA  6E12               	movwf	(?_pad+1)^0,c
  6628  0016EC  0012               	return		;funcret
  6629  0016EE                     __end_of_pad:
  6630                           	opt callstack 0
  6631                           
  6632 ;; *************** function _strlen *****************
  6633 ;; Defined at:
  6634 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6637 ;;		 -> dbuf(32), 
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6640 ;;		 -> dbuf(32), 
  6641 ;; Return value:  Size  Location     Type
  6642 ;;                  2    0[COMRAM] unsigned int 
  6643 ;; Registers used:
  6644 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6645 ;; Tracked objects:
  6646 ;;		On entry : 0/0
  6647 ;;		On exit  : 0/0
  6648 ;;		Unchanged: 0/0
  6649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6650 ;;      Params:         2       0       0       0       0       0       0       0       0
  6651 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6652 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6653 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6654 ;;Total ram usage:        4 bytes
  6655 ;; Hardware stack levels used:    1
  6656 ;; Hardware stack levels required when called:    1
  6657 ;; This function calls:
  6658 ;;		Nothing
  6659 ;; This function is called by:
  6660 ;;		_pad
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           
  6664                           	psect	text33
  6665  0020E8                     __ptext33:
  6666                           	opt callstack 0
  6667  0020E8                     _strlen:
  6668                           	opt callstack 22
  6669  0020E8  C001  F003         	movff	strlen@s,strlen@a
  6670  0020EC  C002  F004         	movff	strlen@s+1,strlen@a+1
  6671  0020F0  EF7C  F010         	goto	l2426
  6672  0020F4                     l2424:
  6673  0020F4  4A01               	infsnz	strlen@s^0,f,c
  6674  0020F6  2A02               	incf	(strlen@s+1)^0,f,c
  6675  0020F8                     l2426:
  6676  0020F8  C001  FFD9         	movff	strlen@s,fsr2l
  6677  0020FC  C002  FFDA         	movff	strlen@s+1,fsr2h
  6678  002100  50DF               	movf	indf2,w,c
  6679  002102  A4D8               	btfss	status,2,c
  6680  002104  EF86  F010         	goto	u1431
  6681  002108  EF88  F010         	goto	u1430
  6682  00210C                     u1431:
  6683  00210C  EF7A  F010         	goto	l2424
  6684  002110                     u1430:
  6685  002110  5003               	movf	strlen@a^0,w,c
  6686  002112  5C01               	subwf	strlen@s^0,w,c
  6687  002114  6E01               	movwf	?_strlen^0,c
  6688  002116  5004               	movf	(strlen@a+1)^0,w,c
  6689  002118  5802               	subwfb	(strlen@s+1)^0,w,c
  6690  00211A  6E02               	movwf	(?_strlen+1)^0,c
  6691  00211C  0012               	return		;funcret
  6692  00211E                     __end_of_strlen:
  6693                           	opt callstack 0
  6694                           
  6695 ;; *************** function _fputs *****************
  6696 ;; Defined at:
  6697 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  6698 ;; Parameters:    Size  Location     Type
  6699 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6700 ;;		 -> dbuf(32), 
  6701 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6702 ;;		 -> sprintf@f(6), 
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;  i               2   14[COMRAM] int 
  6705 ;;  c               1   13[COMRAM] unsigned char 
  6706 ;; Return value:  Size  Location     Type
  6707 ;;                  2    9[COMRAM] int 
  6708 ;; Registers used:
  6709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6715 ;;      Params:         4       0       0       0       0       0       0       0       0
  6716 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6717 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6718 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6719 ;;Total ram usage:        7 bytes
  6720 ;; Hardware stack levels used:    1
  6721 ;; Hardware stack levels required when called:    3
  6722 ;; This function calls:
  6723 ;;		_fputc
  6724 ;; This function is called by:
  6725 ;;		_pad
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729                           	psect	text34
  6730  001FE8                     __ptext34:
  6731                           	opt callstack 0
  6732  001FE8                     _fputs:
  6733                           	opt callstack 20
  6734  001FE8  0E00               	movlw	0
  6735  001FEA  6E10               	movwf	(fputs@i+1)^0,c
  6736  001FEC  0E00               	movlw	0
  6737  001FEE  6E0F               	movwf	fputs@i^0,c
  6738  001FF0  EF05  F010         	goto	l2420
  6739  001FF4                     l2416:
  6740  001FF4  C00E  F001         	movff	fputs@c,fputc@c
  6741  001FF8  6A02               	clrf	(fputc@c+1)^0,c
  6742  001FFA  C00C  F003         	movff	fputs@fp,fputc@fp
  6743  001FFE  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6744  002002  ECE8  F009         	call	_fputc	;wreg free
  6745  002006  4A0F               	infsnz	fputs@i^0,f,c
  6746  002008  2A10               	incf	(fputs@i+1)^0,f,c
  6747  00200A                     l2420:
  6748  00200A  500F               	movf	fputs@i^0,w,c
  6749  00200C  240A               	addwf	fputs@s^0,w,c
  6750  00200E  6ED9               	movwf	fsr2l,c
  6751  002010  5010               	movf	(fputs@i+1)^0,w,c
  6752  002012  200B               	addwfc	(fputs@s+1)^0,w,c
  6753  002014  6EDA               	movwf	fsr2h,c
  6754  002016  50DF               	movf	indf2,w,c
  6755  002018  6E0E               	movwf	fputs@c^0,c
  6756  00201A  500E               	movf	fputs@c^0,w,c
  6757  00201C  A4D8               	btfss	status,2,c
  6758  00201E  EF13  F010         	goto	u1421
  6759  002022  EF15  F010         	goto	u1420
  6760  002026                     u1421:
  6761  002026  EFFA  F00F         	goto	l2416
  6762  00202A                     u1420:
  6763  00202A  0012               	return		;funcret
  6764  00202C                     __end_of_fputs:
  6765                           	opt callstack 0
  6766                           
  6767 ;; *************** function _fputc *****************
  6768 ;; Defined at:
  6769 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6770 ;; Parameters:    Size  Location     Type
  6771 ;;  c               2    0[COMRAM] int 
  6772 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6773 ;;		 -> sprintf@f(6), 
  6774 ;; Auto vars:     Size  Location     Type
  6775 ;;		None
  6776 ;; Return value:  Size  Location     Type
  6777 ;;                  2    0[COMRAM] int 
  6778 ;; Registers used:
  6779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6780 ;; Tracked objects:
  6781 ;;		On entry : 0/0
  6782 ;;		On exit  : 0/0
  6783 ;;		Unchanged: 0/0
  6784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6785 ;;      Params:         4       0       0       0       0       0       0       0       0
  6786 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6787 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6788 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6789 ;;Total ram usage:        9 bytes
  6790 ;; Hardware stack levels used:    1
  6791 ;; Hardware stack levels required when called:    2
  6792 ;; This function calls:
  6793 ;;		_putch
  6794 ;; This function is called by:
  6795 ;;		_pad
  6796 ;;		_vfpfcnvrt
  6797 ;;		_fputs
  6798 ;; This function uses a non-reentrant model
  6799 ;;
  6800                           
  6801                           	psect	text35
  6802  0013D0                     __ptext35:
  6803                           	opt callstack 0
  6804  0013D0                     _fputc:
  6805                           	opt callstack 23
  6806  0013D0  5003               	movf	fputc@fp^0,w,c
  6807  0013D2  1004               	iorwf	(fputc@fp+1)^0,w,c
  6808  0013D4  B4D8               	btfsc	status,2,c
  6809  0013D6  EFEF  F009         	goto	u1381
  6810  0013DA  EFF1  F009         	goto	u1380
  6811  0013DE                     u1381:
  6812  0013DE  EFFA  F009         	goto	l2404
  6813  0013E2                     u1380:
  6814  0013E2  5003               	movf	fputc@fp^0,w,c
  6815  0013E4  1004               	iorwf	(fputc@fp+1)^0,w,c
  6816  0013E6  A4D8               	btfss	status,2,c
  6817  0013E8  EFF8  F009         	goto	u1391
  6818  0013EC  EFFA  F009         	goto	u1390
  6819  0013F0                     u1391:
  6820  0013F0  EFFF  F009         	goto	l2406
  6821  0013F4                     u1390:
  6822  0013F4                     l2404:
  6823  0013F4  5001               	movf	fputc@c^0,w,c
  6824  0013F6  EC7F  F011         	call	_putch
  6825  0013FA  EF4C  F00A         	goto	l1160
  6826  0013FE                     l2406:
  6827  0013FE  EE20 F004          	lfsr	2,4
  6828  001402  5003               	movf	fputc@fp^0,w,c
  6829  001404  26D9               	addwf	fsr2l,f,c
  6830  001406  5004               	movf	(fputc@fp+1)^0,w,c
  6831  001408  22DA               	addwfc	fsr2h,f,c
  6832  00140A  50DE               	movf	postinc2,w,c
  6833  00140C  10DE               	iorwf	postinc2,w,c
  6834  00140E  B4D8               	btfsc	status,2,c
  6835  001410  EF0C  F00A         	goto	u1401
  6836  001414  EF0E  F00A         	goto	u1400
  6837  001418                     u1401:
  6838  001418  EF29  F00A         	goto	l2410
  6839  00141C                     u1400:
  6840  00141C  EE20 F004          	lfsr	2,4
  6841  001420  5003               	movf	fputc@fp^0,w,c
  6842  001422  26D9               	addwf	fsr2l,f,c
  6843  001424  5004               	movf	(fputc@fp+1)^0,w,c
  6844  001426  22DA               	addwfc	fsr2h,f,c
  6845  001428  EE10 F002          	lfsr	1,2
  6846  00142C  5003               	movf	fputc@fp^0,w,c
  6847  00142E  26E1               	addwf	fsr1l,f,c
  6848  001430  5004               	movf	(fputc@fp+1)^0,w,c
  6849  001432  22E2               	addwfc	fsr1h,f,c
  6850  001434  50DE               	movf	postinc2,w,c
  6851  001436  5CE6               	subwf	postinc1,w,c
  6852  001438  50E6               	movf	postinc1,w,c
  6853  00143A  0A80               	xorlw	128
  6854  00143C  6E09               	movwf	(??_fputc+4)^0,c
  6855  00143E  50DE               	movf	postinc2,w,c
  6856  001440  0A80               	xorlw	128
  6857  001442  5809               	subwfb	(??_fputc+4)^0,w,c
  6858  001444  B0D8               	btfsc	status,0,c
  6859  001446  EF27  F00A         	goto	u1411
  6860  00144A  EF29  F00A         	goto	u1410
  6861  00144E                     u1411:
  6862  00144E  EF4C  F00A         	goto	l1160
  6863  001452                     u1410:
  6864  001452                     l2410:
  6865  001452  EE20 F002          	lfsr	2,2
  6866  001456  5003               	movf	fputc@fp^0,w,c
  6867  001458  26D9               	addwf	fsr2l,f,c
  6868  00145A  5004               	movf	(fputc@fp+1)^0,w,c
  6869  00145C  22DA               	addwfc	fsr2h,f,c
  6870  00145E  CFDE F005          	movff	postinc2,??_fputc
  6871  001462  CFDD F006          	movff	postdec2,??_fputc+1
  6872  001466  C003  FFD9         	movff	fputc@fp,fsr2l
  6873  00146A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6874  00146E  CFDE F007          	movff	postinc2,??_fputc+2
  6875  001472  CFDD F008          	movff	postdec2,??_fputc+3
  6876  001476  5005               	movf	??_fputc^0,w,c
  6877  001478  2407               	addwf	(??_fputc+2)^0,w,c
  6878  00147A  6ED9               	movwf	fsr2l,c
  6879  00147C  5006               	movf	(??_fputc+1)^0,w,c
  6880  00147E  2008               	addwfc	(??_fputc+3)^0,w,c
  6881  001480  6EDA               	movwf	fsr2h,c
  6882  001482  C001  FFDF         	movff	fputc@c,indf2
  6883  001486  EE20 F002          	lfsr	2,2
  6884  00148A  5003               	movf	fputc@fp^0,w,c
  6885  00148C  26D9               	addwf	fsr2l,f,c
  6886  00148E  5004               	movf	(fputc@fp+1)^0,w,c
  6887  001490  22DA               	addwfc	fsr2h,f,c
  6888  001492  2ADE               	incf	postinc2,f,c
  6889  001494  0E00               	movlw	0
  6890  001496  22DD               	addwfc	postdec2,f,c
  6891  001498                     l1160:
  6892  001498  0012               	return		;funcret
  6893  00149A                     __end_of_fputc:
  6894                           	opt callstack 0
  6895                           
  6896 ;; *************** function _putch *****************
  6897 ;; Defined at:
  6898 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;  c               1    wreg     unsigned char 
  6901 ;; Auto vars:     Size  Location     Type
  6902 ;;  c               1    0[COMRAM] unsigned char 
  6903 ;; Return value:  Size  Location     Type
  6904 ;;                  1    wreg      void 
  6905 ;; Registers used:
  6906 ;;		wreg
  6907 ;; Tracked objects:
  6908 ;;		On entry : 0/0
  6909 ;;		On exit  : 0/0
  6910 ;;		Unchanged: 0/0
  6911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6912 ;;      Params:         0       0       0       0       0       0       0       0       0
  6913 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6914 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6915 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6916 ;;Total ram usage:        0 bytes
  6917 ;; Hardware stack levels used:    1
  6918 ;; Hardware stack levels required when called:    1
  6919 ;; This function calls:
  6920 ;;		Nothing
  6921 ;; This function is called by:
  6922 ;;		_fputc
  6923 ;; This function uses a non-reentrant model
  6924 ;;
  6925                           
  6926                           	psect	text36
  6927  0022FE                     __ptext36:
  6928                           	opt callstack 0
  6929  0022FE                     _putch:
  6930                           	opt callstack 23
  6931  0022FE  0012               	return		;funcret
  6932  002300                     __end_of_putch:
  6933                           	opt callstack 0
  6934                           
  6935 ;; *************** function _abs *****************
  6936 ;; Defined at:
  6937 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;  a               2   18[COMRAM] int 
  6940 ;; Auto vars:     Size  Location     Type
  6941 ;;		None
  6942 ;; Return value:  Size  Location     Type
  6943 ;;                  2   18[COMRAM] int 
  6944 ;; Registers used:
  6945 ;;		wreg, status,2, status,0
  6946 ;; Tracked objects:
  6947 ;;		On entry : 0/0
  6948 ;;		On exit  : 0/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6951 ;;      Params:         2       0       0       0       0       0       0       0       0
  6952 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6953 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6954 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6955 ;;Total ram usage:        4 bytes
  6956 ;; Hardware stack levels used:    1
  6957 ;; Hardware stack levels required when called:    1
  6958 ;; This function calls:
  6959 ;;		Nothing
  6960 ;; This function is called by:
  6961 ;;		_dtoa
  6962 ;; This function uses a non-reentrant model
  6963 ;;
  6964                           
  6965                           	psect	text37
  6966  00206C                     __ptext37:
  6967                           	opt callstack 0
  6968  00206C                     _abs:
  6969                           	opt callstack 23
  6970  00206C  BE14               	btfsc	(abs@a+1)^0,7,c
  6971  00206E  EF43  F010         	goto	u1480
  6972  002072  5014               	movf	(abs@a+1)^0,w,c
  6973  002074  E106               	bnz	u1481
  6974  002076  0413               	decf	abs@a^0,w,c
  6975  002078  B0D8               	btfsc	status,0,c
  6976  00207A  EF41  F010         	goto	u1481
  6977  00207E  EF43  F010         	goto	u1480
  6978  002082                     u1481:
  6979  002082  EF51  F010         	goto	l1145
  6980  002086                     u1480:
  6981  002086  C013  F015         	movff	abs@a,??_abs
  6982  00208A  C014  F016         	movff	abs@a+1,??_abs+1
  6983  00208E  1E15               	comf	??_abs^0,f,c
  6984  002090  1E16               	comf	(??_abs+1)^0,f,c
  6985  002092  4A15               	infsnz	??_abs^0,f,c
  6986  002094  2A16               	incf	(??_abs+1)^0,f,c
  6987  002096  C015  F013         	movff	??_abs,?_abs
  6988  00209A  C016  F014         	movff	??_abs+1,?_abs+1
  6989  00209E  EF55  F010         	goto	l1148
  6990  0020A2                     l1145:
  6991  0020A2  C013  F013         	movff	abs@a,?_abs
  6992  0020A6  C014  F014         	movff	abs@a+1,?_abs+1
  6993  0020AA                     l1148:
  6994  0020AA  0012               	return		;funcret
  6995  0020AC                     __end_of_abs:
  6996                           	opt callstack 0
  6997                           
  6998 ;; *************** function ___aomod *****************
  6999 ;; Defined at:
  7000 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;  dividend        8    0[COMRAM] long long 
  7003 ;;  divisor         8    8[COMRAM] long long 
  7004 ;; Auto vars:     Size  Location     Type
  7005 ;;  sign            1   17[COMRAM] unsigned char 
  7006 ;;  counter         1   16[COMRAM] unsigned char 
  7007 ;; Return value:  Size  Location     Type
  7008 ;;                  8    0[COMRAM] long long 
  7009 ;; Registers used:
  7010 ;;		wreg, status,2, status,0
  7011 ;; Tracked objects:
  7012 ;;		On entry : 0/0
  7013 ;;		On exit  : 0/0
  7014 ;;		Unchanged: 0/0
  7015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7016 ;;      Params:        16       0       0       0       0       0       0       0       0
  7017 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7018 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7019 ;;      Totals:        18       0       0       0       0       0       0       0       0
  7020 ;;Total ram usage:       18 bytes
  7021 ;; Hardware stack levels used:    1
  7022 ;; Hardware stack levels required when called:    1
  7023 ;; This function calls:
  7024 ;;		Nothing
  7025 ;; This function is called by:
  7026 ;;		_dtoa
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030                           	psect	text38
  7031  000AE0                     __ptext38:
  7032                           	opt callstack 0
  7033  000AE0                     ___aomod:
  7034                           	opt callstack 23
  7035  000AE0  0E00               	movlw	0
  7036  000AE2  6E12               	movwf	___aomod@sign^0,c
  7037  000AE4  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  7038  000AE6  EF79  F005         	goto	u1560
  7039  000AEA  EF77  F005         	goto	u1561
  7040  000AEE                     u1561:
  7041  000AEE  EF8B  F005         	goto	l2510
  7042  000AF2                     u1560:
  7043  000AF2  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7044  000AF4  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7045  000AF6  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7046  000AF8  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7047  000AFA  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7048  000AFC  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7049  000AFE  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7050  000B00  6C01               	negf	___aomod@dividend^0,c
  7051  000B02  0E00               	movlw	0
  7052  000B04  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7053  000B06  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7054  000B08  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7055  000B0A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7056  000B0C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7057  000B0E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7058  000B10  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7059  000B12  0E01               	movlw	1
  7060  000B14  6E12               	movwf	___aomod@sign^0,c
  7061  000B16                     l2510:
  7062  000B16  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  7063  000B18  EF92  F005         	goto	u1570
  7064  000B1C  EF90  F005         	goto	u1571
  7065  000B20                     u1571:
  7066  000B20  EFA2  F005         	goto	l2514
  7067  000B24                     u1570:
  7068  000B24  1E10               	comf	(___aomod@divisor+7)^0,f,c
  7069  000B26  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  7070  000B28  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  7071  000B2A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  7072  000B2C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  7073  000B2E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  7074  000B30  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  7075  000B32  6C09               	negf	___aomod@divisor^0,c
  7076  000B34  0E00               	movlw	0
  7077  000B36  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  7078  000B38  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  7079  000B3A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  7080  000B3C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  7081  000B3E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  7082  000B40  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  7083  000B42  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  7084  000B44                     l2514:
  7085  000B44  5009               	movf	___aomod@divisor^0,w,c
  7086  000B46  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  7087  000B48  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  7088  000B4A  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  7089  000B4C  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  7090  000B4E  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  7091  000B50  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  7092  000B52  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  7093  000B54  B4D8               	btfsc	status,2,c
  7094  000B56  EFAF  F005         	goto	u1581
  7095  000B5A  EFB1  F005         	goto	u1580
  7096  000B5E                     u1581:
  7097  000B5E  EFF9  F005         	goto	l2530
  7098  000B62                     u1580:
  7099  000B62  0E01               	movlw	1
  7100  000B64  6E11               	movwf	___aomod@counter^0,c
  7101  000B66  EFBF  F005         	goto	l2520
  7102  000B6A                     l2518:
  7103  000B6A  90D8               	bcf	status,0,c
  7104  000B6C  3609               	rlcf	___aomod@divisor^0,f,c
  7105  000B6E  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  7106  000B70  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  7107  000B72  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  7108  000B74  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  7109  000B76  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  7110  000B78  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  7111  000B7A  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  7112  000B7C  2A11               	incf	___aomod@counter^0,f,c
  7113  000B7E                     l2520:
  7114  000B7E  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  7115  000B80  EFC4  F005         	goto	u1591
  7116  000B84  EFC6  F005         	goto	u1590
  7117  000B88                     u1591:
  7118  000B88  EFB5  F005         	goto	l2518
  7119  000B8C                     u1590:
  7120  000B8C                     l2522:
  7121  000B8C  5009               	movf	___aomod@divisor^0,w,c
  7122  000B8E  5C01               	subwf	___aomod@dividend^0,w,c
  7123  000B90  500A               	movf	(___aomod@divisor+1)^0,w,c
  7124  000B92  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  7125  000B94  500B               	movf	(___aomod@divisor+2)^0,w,c
  7126  000B96  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  7127  000B98  500C               	movf	(___aomod@divisor+3)^0,w,c
  7128  000B9A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  7129  000B9C  500D               	movf	(___aomod@divisor+4)^0,w,c
  7130  000B9E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  7131  000BA0  500E               	movf	(___aomod@divisor+5)^0,w,c
  7132  000BA2  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  7133  000BA4  500F               	movf	(___aomod@divisor+6)^0,w,c
  7134  000BA6  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  7135  000BA8  5010               	movf	(___aomod@divisor+7)^0,w,c
  7136  000BAA  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  7137  000BAC  A0D8               	btfss	status,0,c
  7138  000BAE  EFDB  F005         	goto	u1601
  7139  000BB2  EFDD  F005         	goto	u1600
  7140  000BB6                     u1601:
  7141  000BB6  EFED  F005         	goto	l2526
  7142  000BBA                     u1600:
  7143  000BBA  5009               	movf	___aomod@divisor^0,w,c
  7144  000BBC  5E01               	subwf	___aomod@dividend^0,f,c
  7145  000BBE  500A               	movf	(___aomod@divisor+1)^0,w,c
  7146  000BC0  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  7147  000BC2  500B               	movf	(___aomod@divisor+2)^0,w,c
  7148  000BC4  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  7149  000BC6  500C               	movf	(___aomod@divisor+3)^0,w,c
  7150  000BC8  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  7151  000BCA  500D               	movf	(___aomod@divisor+4)^0,w,c
  7152  000BCC  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  7153  000BCE  500E               	movf	(___aomod@divisor+5)^0,w,c
  7154  000BD0  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  7155  000BD2  500F               	movf	(___aomod@divisor+6)^0,w,c
  7156  000BD4  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  7157  000BD6  5010               	movf	(___aomod@divisor+7)^0,w,c
  7158  000BD8  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  7159  000BDA                     l2526:
  7160  000BDA  90D8               	bcf	status,0,c
  7161  000BDC  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  7162  000BDE  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  7163  000BE0  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  7164  000BE2  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  7165  000BE4  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  7166  000BE6  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  7167  000BE8  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  7168  000BEA  3209               	rrcf	___aomod@divisor^0,f,c
  7169  000BEC  2E11               	decfsz	___aomod@counter^0,f,c
  7170  000BEE  EFC6  F005         	goto	l2522
  7171  000BF2                     l2530:
  7172  000BF2  5012               	movf	___aomod@sign^0,w,c
  7173  000BF4  B4D8               	btfsc	status,2,c
  7174  000BF6  EFFF  F005         	goto	u1611
  7175  000BFA  EF01  F006         	goto	u1610
  7176  000BFE                     u1611:
  7177  000BFE  EF11  F006         	goto	l2534
  7178  000C02                     u1610:
  7179  000C02  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7180  000C04  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7181  000C06  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7182  000C08  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7183  000C0A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7184  000C0C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7185  000C0E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7186  000C10  6C01               	negf	___aomod@dividend^0,c
  7187  000C12  0E00               	movlw	0
  7188  000C14  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7189  000C16  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7190  000C18  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7191  000C1A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7192  000C1C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7193  000C1E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7194  000C20  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7195  000C22                     l2534:
  7196  000C22  C001  F001         	movff	___aomod@dividend,?___aomod
  7197  000C26  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  7198  000C2A  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  7199  000C2E  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  7200  000C32  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  7201  000C36  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  7202  000C3A  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  7203  000C3E  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  7204  000C42  0012               	return		;funcret
  7205  000C44                     __end_of___aomod:
  7206                           	opt callstack 0
  7207                           
  7208 ;; *************** function ___aodiv *****************
  7209 ;; Defined at:
  7210 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  7211 ;; Parameters:    Size  Location     Type
  7212 ;;  dividend        8    0[COMRAM] long long 
  7213 ;;  divisor         8    8[COMRAM] long long 
  7214 ;; Auto vars:     Size  Location     Type
  7215 ;;  quotient        8   18[COMRAM] long long 
  7216 ;;  sign            1   17[COMRAM] unsigned char 
  7217 ;;  counter         1   16[COMRAM] unsigned char 
  7218 ;; Return value:  Size  Location     Type
  7219 ;;                  8    0[COMRAM] long long 
  7220 ;; Registers used:
  7221 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7222 ;; Tracked objects:
  7223 ;;		On entry : 0/0
  7224 ;;		On exit  : 0/0
  7225 ;;		Unchanged: 0/0
  7226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7227 ;;      Params:        16       0       0       0       0       0       0       0       0
  7228 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7229 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7230 ;;      Totals:        26       0       0       0       0       0       0       0       0
  7231 ;;Total ram usage:       26 bytes
  7232 ;; Hardware stack levels used:    1
  7233 ;; Hardware stack levels required when called:    1
  7234 ;; This function calls:
  7235 ;;		Nothing
  7236 ;; This function is called by:
  7237 ;;		_dtoa
  7238 ;; This function uses a non-reentrant model
  7239 ;;
  7240                           
  7241                           	psect	text39
  7242  000958                     __ptext39:
  7243                           	opt callstack 0
  7244  000958                     ___aodiv:
  7245                           	opt callstack 23
  7246  000958  0E00               	movlw	0
  7247  00095A  6E12               	movwf	___aodiv@sign^0,c
  7248  00095C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  7249  00095E  EFB5  F004         	goto	u1490
  7250  000962  EFB3  F004         	goto	u1491
  7251  000966                     u1491:
  7252  000966  EFC7  F004         	goto	l2466
  7253  00096A                     u1490:
  7254  00096A  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  7255  00096C  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  7256  00096E  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  7257  000970  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  7258  000972  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  7259  000974  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  7260  000976  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  7261  000978  6C09               	negf	___aodiv@divisor^0,c
  7262  00097A  0E00               	movlw	0
  7263  00097C  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  7264  00097E  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  7265  000980  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  7266  000982  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  7267  000984  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  7268  000986  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  7269  000988  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  7270  00098A  0E01               	movlw	1
  7271  00098C  6E12               	movwf	___aodiv@sign^0,c
  7272  00098E                     l2466:
  7273  00098E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  7274  000990  EFCE  F004         	goto	u1500
  7275  000994  EFCC  F004         	goto	u1501
  7276  000998                     u1501:
  7277  000998  EFE0  F004         	goto	l2472
  7278  00099C                     u1500:
  7279  00099C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  7280  00099E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  7281  0009A0  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  7282  0009A2  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  7283  0009A4  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  7284  0009A6  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  7285  0009A8  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  7286  0009AA  6C01               	negf	___aodiv@dividend^0,c
  7287  0009AC  0E00               	movlw	0
  7288  0009AE  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  7289  0009B0  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  7290  0009B2  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  7291  0009B4  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  7292  0009B6  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  7293  0009B8  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  7294  0009BA  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  7295  0009BC  0E01               	movlw	1
  7296  0009BE  1A12               	xorwf	___aodiv@sign^0,f,c
  7297  0009C0                     l2472:
  7298  0009C0  EE20  F013         	lfsr	2,___aodiv@quotient
  7299  0009C4  0E07               	movlw	7
  7300  0009C6                     u1511:
  7301  0009C6  6ADE               	clrf	postinc2,c
  7302  0009C8  06E8               	decf	wreg,f,c
  7303  0009CA  E2FD               	bc	u1511
  7304  0009CC  5009               	movf	___aodiv@divisor^0,w,c
  7305  0009CE  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  7306  0009D0  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  7307  0009D2  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  7308  0009D4  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  7309  0009D6  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  7310  0009D8  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  7311  0009DA  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  7312  0009DC  B4D8               	btfsc	status,2,c
  7313  0009DE  EFF3  F004         	goto	u1521
  7314  0009E2  EFF5  F004         	goto	u1520
  7315  0009E6                     u1521:
  7316  0009E6  EF47  F005         	goto	l2494
  7317  0009EA                     u1520:
  7318  0009EA  0E01               	movlw	1
  7319  0009EC  6E11               	movwf	___aodiv@counter^0,c
  7320  0009EE  EF03  F005         	goto	l2480
  7321  0009F2                     l2478:
  7322  0009F2  90D8               	bcf	status,0,c
  7323  0009F4  3609               	rlcf	___aodiv@divisor^0,f,c
  7324  0009F6  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  7325  0009F8  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  7326  0009FA  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  7327  0009FC  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  7328  0009FE  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  7329  000A00  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  7330  000A02  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  7331  000A04  2A11               	incf	___aodiv@counter^0,f,c
  7332  000A06                     l2480:
  7333  000A06  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  7334  000A08  EF08  F005         	goto	u1531
  7335  000A0C  EF0A  F005         	goto	u1530
  7336  000A10                     u1531:
  7337  000A10  EFF9  F004         	goto	l2478
  7338  000A14                     u1530:
  7339  000A14                     l2482:
  7340  000A14  90D8               	bcf	status,0,c
  7341  000A16  3613               	rlcf	___aodiv@quotient^0,f,c
  7342  000A18  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  7343  000A1A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  7344  000A1C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  7345  000A1E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  7346  000A20  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  7347  000A22  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  7348  000A24  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  7349  000A26  5009               	movf	___aodiv@divisor^0,w,c
  7350  000A28  5C01               	subwf	___aodiv@dividend^0,w,c
  7351  000A2A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7352  000A2C  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  7353  000A2E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7354  000A30  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  7355  000A32  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7356  000A34  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  7357  000A36  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7358  000A38  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  7359  000A3A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7360  000A3C  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  7361  000A3E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7362  000A40  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  7363  000A42  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7364  000A44  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  7365  000A46  A0D8               	btfss	status,0,c
  7366  000A48  EF28  F005         	goto	u1541
  7367  000A4C  EF2A  F005         	goto	u1540
  7368  000A50                     u1541:
  7369  000A50  EF3B  F005         	goto	l2490
  7370  000A54                     u1540:
  7371  000A54  5009               	movf	___aodiv@divisor^0,w,c
  7372  000A56  5E01               	subwf	___aodiv@dividend^0,f,c
  7373  000A58  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7374  000A5A  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  7375  000A5C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7376  000A5E  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  7377  000A60  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7378  000A62  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  7379  000A64  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7380  000A66  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  7381  000A68  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7382  000A6A  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  7383  000A6C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7384  000A6E  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  7385  000A70  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7386  000A72  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  7387  000A74  8013               	bsf	___aodiv@quotient^0,0,c
  7388  000A76                     l2490:
  7389  000A76  90D8               	bcf	status,0,c
  7390  000A78  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  7391  000A7A  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  7392  000A7C  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  7393  000A7E  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  7394  000A80  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  7395  000A82  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  7396  000A84  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  7397  000A86  3209               	rrcf	___aodiv@divisor^0,f,c
  7398  000A88  2E11               	decfsz	___aodiv@counter^0,f,c
  7399  000A8A  EF0A  F005         	goto	l2482
  7400  000A8E                     l2494:
  7401  000A8E  5012               	movf	___aodiv@sign^0,w,c
  7402  000A90  B4D8               	btfsc	status,2,c
  7403  000A92  EF4D  F005         	goto	u1551
  7404  000A96  EF4F  F005         	goto	u1550
  7405  000A9A                     u1551:
  7406  000A9A  EF5F  F005         	goto	l2498
  7407  000A9E                     u1550:
  7408  000A9E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  7409  000AA0  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  7410  000AA2  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  7411  000AA4  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  7412  000AA6  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  7413  000AA8  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  7414  000AAA  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  7415  000AAC  6C13               	negf	___aodiv@quotient^0,c
  7416  000AAE  0E00               	movlw	0
  7417  000AB0  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  7418  000AB2  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  7419  000AB4  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  7420  000AB6  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  7421  000AB8  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  7422  000ABA  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  7423  000ABC  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  7424  000ABE                     l2498:
  7425  000ABE  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7426  000AC2  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7427  000AC6  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7428  000ACA  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7429  000ACE  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7430  000AD2  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7431  000AD6  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7432  000ADA  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7433  000ADE  0012               	return		;funcret
  7434  000AE0                     __end_of___aodiv:
  7435                           	opt callstack 0
  7436                           
  7437 ;; *************** function _asignarHorarios *****************
  7438 ;; Defined at:
  7439 ;;		line 348 in file "main.c"
  7440 ;; Parameters:    Size  Location     Type
  7441 ;;		None
  7442 ;; Auto vars:     Size  Location     Type
  7443 ;;  i               2   16[COMRAM] int 
  7444 ;;  Rx              1   18[COMRAM] unsigned char 
  7445 ;;  datoCapturad    1   15[COMRAM] unsigned char 
  7446 ;;  hora            1   14[COMRAM] unsigned char 
  7447 ;; Return value:  Size  Location     Type
  7448 ;;                  1    wreg      void 
  7449 ;; Registers used:
  7450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7451 ;; Tracked objects:
  7452 ;;		On entry : 0/0
  7453 ;;		On exit  : 0/0
  7454 ;;		Unchanged: 0/0
  7455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7456 ;;      Params:         0       0       0       0       0       0       0       0       0
  7457 ;;      Locals:         5       0       0       0       0       0       0       0       0
  7458 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7459 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7460 ;;Total ram usage:        5 bytes
  7461 ;; Hardware stack levels used:    1
  7462 ;; Hardware stack levels required when called:    5
  7463 ;; This function calls:
  7464 ;;		_UART_printf
  7465 ;;		_UART_read
  7466 ;;		_UART_write
  7467 ;;		_escribeHorariosMemoria
  7468 ;; This function is called by:
  7469 ;;		_sistemaPrincipal
  7470 ;; This function uses a non-reentrant model
  7471 ;;
  7472                           
  7473                           	psect	text40
  7474  000D90                     __ptext40:
  7475                           	opt callstack 0
  7476  000D90                     _asignarHorarios:
  7477                           	opt callstack 24
  7478  000D90                     
  7479                           ;main.c: 350:     unsigned char hora;;main.c: 351:     unsigned char Rx;;main.c: 352:   
      +                            char datoCapturado = 0;
  7480  000D90  0E00               	movlw	0
  7481  000D92  6E10               	movwf	asignarHorarios@datoCapturado^0,c
  7482  000D94                     
  7483                           ;main.c: 354:     UART_printf("\r\n OPCIONES DE REGADO \r\n");
  7484  000D94  0E72               	movlw	low STR_5
  7485  000D96  6E02               	movwf	UART_printf@cadena^0,c
  7486  000D98  0E7F               	movlw	high STR_5
  7487  000D9A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7488  000D9C  ECD5  F00E         	call	_UART_printf	;wreg free
  7489  000DA0                     
  7490                           ;main.c: 355:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  7491  000DA0  0E46               	movlw	low STR_6
  7492  000DA2  6E02               	movwf	UART_printf@cadena^0,c
  7493  000DA4  0E7C               	movlw	high STR_6
  7494  000DA6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7495  000DA8  ECD5  F00E         	call	_UART_printf	;wreg free
  7496                           
  7497                           ;main.c: 357:     for (int i = 0; i < 2; i++) {
  7498  000DAC  0E00               	movlw	0
  7499  000DAE  6E12               	movwf	(asignarHorarios@i+1)^0,c
  7500  000DB0  0E00               	movlw	0
  7501  000DB2  6E11               	movwf	asignarHorarios@i^0,c
  7502  000DB4                     l3142:
  7503                           
  7504                           ;main.c: 358:         Rx = UART_read();
  7505  000DB4  EC32  F00F         	call	_UART_read	;wreg free
  7506  000DB8  6E13               	movwf	asignarHorarios@Rx^0,c
  7507  000DBA                     
  7508                           ;main.c: 359:         if (Rx >= 48 && Rx <= 57) {
  7509  000DBA  0E2F               	movlw	47
  7510  000DBC  6413               	cpfsgt	asignarHorarios@Rx^0,c
  7511  000DBE  EFE3  F006         	goto	u2361
  7512  000DC2  EFE5  F006         	goto	u2360
  7513  000DC6                     u2361:
  7514  000DC6  EF08  F007         	goto	l3162
  7515  000DCA                     u2360:
  7516  000DCA  0E3A               	movlw	58
  7517  000DCC  6013               	cpfslt	asignarHorarios@Rx^0,c
  7518  000DCE  EFEB  F006         	goto	u2371
  7519  000DD2  EFED  F006         	goto	u2370
  7520  000DD6                     u2371:
  7521  000DD6  EF08  F007         	goto	l3162
  7522  000DDA                     u2370:
  7523  000DDA                     
  7524                           ;main.c: 360:             if (!i) {
  7525  000DDA  5011               	movf	asignarHorarios@i^0,w,c
  7526  000DDC  1012               	iorwf	(asignarHorarios@i+1)^0,w,c
  7527  000DDE  A4D8               	btfss	status,2,c
  7528  000DE0  EFF4  F006         	goto	u2381
  7529  000DE4  EFF6  F006         	goto	u2380
  7530  000DE8                     u2381:
  7531  000DE8  EF00  F007         	goto	l3156
  7532  000DEC                     u2380:
  7533  000DEC                     
  7534                           ;main.c: 361:                 Rx -= 48;
  7535  000DEC  0E30               	movlw	48
  7536  000DEE  5E13               	subwf	asignarHorarios@Rx^0,f,c
  7537  000DF0                     
  7538                           ;main.c: 362:                 hora = Rx;
  7539  000DF0  C013  F00F         	movff	asignarHorarios@Rx,asignarHorarios@hora
  7540  000DF4                     
  7541                           ;main.c: 363:                 hora *= 10;
  7542  000DF4  0E0A               	movlw	10
  7543  000DF6  020F               	mulwf	asignarHorarios@hora^0,c
  7544  000DF8  50F3               	movf	prodl,w,c
  7545  000DFA  6E0F               	movwf	asignarHorarios@hora^0,c
  7546                           
  7547                           ;main.c: 364:             } else {
  7548  000DFC  EF0F  F007         	goto	l3166
  7549  000E00                     l3156:
  7550                           
  7551                           ;main.c: 365:                 datoCapturado = 1;
  7552  000E00  0E01               	movlw	1
  7553  000E02  6E10               	movwf	asignarHorarios@datoCapturado^0,c
  7554  000E04                     
  7555                           ;main.c: 366:                 Rx -= 48;
  7556  000E04  0E30               	movlw	48
  7557  000E06  5E13               	subwf	asignarHorarios@Rx^0,f,c
  7558  000E08                     
  7559                           ;main.c: 367:                 hora += Rx;
  7560  000E08  5013               	movf	asignarHorarios@Rx^0,w,c
  7561  000E0A  260F               	addwf	asignarHorarios@hora^0,f,c
  7562  000E0C  EF0F  F007         	goto	l3166
  7563  000E10                     l3162:
  7564                           
  7565                           ;main.c: 370:             datoCapturado = 0;
  7566  000E10  0E00               	movlw	0
  7567  000E12  6E10               	movwf	asignarHorarios@datoCapturado^0,c
  7568  000E14                     
  7569                           ;main.c: 372:             UART_write('F');
  7570  000E14  0E46               	movlw	70
  7571  000E16  EC4A  F011         	call	_UART_write
  7572                           
  7573                           ;main.c: 373:             break;
  7574  000E1A  EF1F  F007         	goto	l3170
  7575  000E1E                     l3166:
  7576                           
  7577                           ;main.c: 375:     }
  7578  000E1E  4A11               	infsnz	asignarHorarios@i^0,f,c
  7579  000E20  2A12               	incf	(asignarHorarios@i+1)^0,f,c
  7580  000E22  BE12               	btfsc	(asignarHorarios@i+1)^0,7,c
  7581  000E24  EF1D  F007         	goto	u2391
  7582  000E28  5012               	movf	(asignarHorarios@i+1)^0,w,c
  7583  000E2A  E109               	bnz	u2390
  7584  000E2C  0E02               	movlw	2
  7585  000E2E  5C11               	subwf	asignarHorarios@i^0,w,c
  7586  000E30  A0D8               	btfss	status,0,c
  7587  000E32  EF1D  F007         	goto	u2391
  7588  000E36  EF1F  F007         	goto	u2390
  7589  000E3A                     u2391:
  7590  000E3A  EFDA  F006         	goto	l3142
  7591  000E3E                     u2390:
  7592  000E3E                     l3170:
  7593                           
  7594                           ;main.c: 377:     if (datoCapturado && !esperandoDatos) {
  7595  000E3E  5010               	movf	asignarHorarios@datoCapturado^0,w,c
  7596  000E40  B4D8               	btfsc	status,2,c
  7597  000E42  EF25  F007         	goto	u2401
  7598  000E46  EF27  F007         	goto	u2400
  7599  000E4A                     u2401:
  7600  000E4A  EF6B  F007         	goto	l291
  7601  000E4E                     u2400:
  7602  000E4E  505E               	movf	_esperandoDatos^0,w,c
  7603  000E50  A4D8               	btfss	status,2,c
  7604  000E52  EF2D  F007         	goto	u2411
  7605  000E56  EF2F  F007         	goto	u2410
  7606  000E5A                     u2411:
  7607  000E5A  EF6B  F007         	goto	l291
  7608  000E5E                     u2410:
  7609  000E5E                     
  7610                           ;main.c: 379:         UART_printf("\r\n Ingrese 1 para regar || ingrese 0 para no regar:
      +                           \r\n");
  7611  000E5E  0E0F               	movlw	low STR_7
  7612  000E60  6E02               	movwf	UART_printf@cadena^0,c
  7613  000E62  0E7C               	movlw	high STR_7
  7614  000E64  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7615  000E66  ECD5  F00E         	call	_UART_printf	;wreg free
  7616  000E6A                     
  7617                           ;main.c: 381:         Rx = UART_read();
  7618  000E6A  EC32  F00F         	call	_UART_read	;wreg free
  7619  000E6E  6E13               	movwf	asignarHorarios@Rx^0,c
  7620  000E70                     
  7621                           ;main.c: 382:         Rx -= 48;
  7622  000E70  0E30               	movlw	48
  7623  000E72  5E13               	subwf	asignarHorarios@Rx^0,f,c
  7624  000E74                     
  7625                           ;main.c: 384:         if (Rx != 1 && Rx != 0)
  7626  000E74  0413               	decf	asignarHorarios@Rx^0,w,c
  7627  000E76  B4D8               	btfsc	status,2,c
  7628  000E78  EF40  F007         	goto	u2421
  7629  000E7C  EF42  F007         	goto	u2420
  7630  000E80                     u2421:
  7631  000E80  EF4C  F007         	goto	l288
  7632  000E84                     u2420:
  7633  000E84  5013               	movf	asignarHorarios@Rx^0,w,c
  7634  000E86  B4D8               	btfsc	status,2,c
  7635  000E88  EF48  F007         	goto	u2431
  7636  000E8C  EF4A  F007         	goto	u2430
  7637  000E90                     u2431:
  7638  000E90  EF4C  F007         	goto	l288
  7639  000E94                     u2430:
  7640  000E94                     
  7641                           ;main.c: 385:             Rx = 0;
  7642  000E94  0E00               	movlw	0
  7643  000E96  6E13               	movwf	asignarHorarios@Rx^0,c
  7644  000E98                     l288:
  7645                           
  7646                           ;main.c: 387:         if (!esperandoDatos) {
  7647  000E98  505E               	movf	_esperandoDatos^0,w,c
  7648  000E9A  A4D8               	btfss	status,2,c
  7649  000E9C  EF52  F007         	goto	u2441
  7650  000EA0  EF54  F007         	goto	u2440
  7651  000EA4                     u2441:
  7652  000EA4  EF68  F007         	goto	l3192
  7653  000EA8                     u2440:
  7654  000EA8                     
  7655                           ;main.c: 388:             UART_printf("\r\n Horario Modificado! \r\n");
  7656  000EA8  0E58               	movlw	low STR_8
  7657  000EAA  6E02               	movwf	UART_printf@cadena^0,c
  7658  000EAC  0E7F               	movlw	high STR_8
  7659  000EAE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7660  000EB0  ECD5  F00E         	call	_UART_printf	;wreg free
  7661  000EB4                     
  7662                           ;main.c: 390:             horarios[hora].regar = Rx;
  7663  000EB4  500F               	movf	asignarHorarios@hora^0,w,c
  7664  000EB6  0D03               	mullw	3
  7665  000EB8  0E01               	movlw	low (_horarios+1)
  7666  000EBA  24F3               	addwf	243,w,c
  7667  000EBC  6ED9               	movwf	fsr2l,c
  7668  000EBE  0E01               	movlw	high (_horarios+1)
  7669  000EC0  20F4               	addwfc	prodh,w,c
  7670  000EC2  6EDA               	movwf	fsr2h,c
  7671  000EC4  C013  FFDF         	movff	asignarHorarios@Rx,indf2
  7672  000EC8                     
  7673                           ;main.c: 392:             escribeHorariosMemoria();
  7674  000EC8  EC81  F009         	call	_escribeHorariosMemoria	;wreg free
  7675                           
  7676                           ;main.c: 395:         } else {
  7677  000ECC  EF6B  F007         	goto	l291
  7678  000ED0                     l3192:
  7679                           
  7680                           ;main.c: 397:             UART_write('F');
  7681  000ED0  0E46               	movlw	70
  7682  000ED2  EC4A  F011         	call	_UART_write
  7683  000ED6                     l291:
  7684  000ED6  0012               	return		;funcret
  7685  000ED8                     __end_of_asignarHorarios:
  7686                           	opt callstack 0
  7687                           
  7688 ;; *************** function _escribeHorariosMemoria *****************
  7689 ;; Defined at:
  7690 ;;		line 217 in file "main.c"
  7691 ;; Parameters:    Size  Location     Type
  7692 ;;		None
  7693 ;; Auto vars:     Size  Location     Type
  7694 ;;  i               2   12[COMRAM] int 
  7695 ;;  contMemoria     2   10[COMRAM] int 
  7696 ;; Return value:  Size  Location     Type
  7697 ;;                  1    wreg      void 
  7698 ;; Registers used:
  7699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7700 ;; Tracked objects:
  7701 ;;		On entry : 0/0
  7702 ;;		On exit  : 0/0
  7703 ;;		Unchanged: 0/0
  7704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7705 ;;      Params:         0       0       0       0       0       0       0       0       0
  7706 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7707 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7708 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7709 ;;Total ram usage:        4 bytes
  7710 ;; Hardware stack levels used:    1
  7711 ;; Hardware stack levels required when called:    4
  7712 ;; This function calls:
  7713 ;;		___wmul
  7714 ;;		_escribe_eeprom
  7715 ;; This function is called by:
  7716 ;;		_asignarHorarios
  7717 ;;		_setTiempoRegar
  7718 ;; This function uses a non-reentrant model
  7719 ;;
  7720                           
  7721                           	psect	text41
  7722  001302                     __ptext41:
  7723                           	opt callstack 0
  7724  001302                     _escribeHorariosMemoria:
  7725                           	opt callstack 24
  7726  001302                     
  7727                           ;main.c: 219:     int contMemoria = 0;
  7728  001302  0E00               	movlw	0
  7729  001304  6E0C               	movwf	(escribeHorariosMemoria@contMemoria+1)^0,c
  7730  001306  0E00               	movlw	0
  7731  001308  6E0B               	movwf	escribeHorariosMemoria@contMemoria^0,c
  7732                           
  7733                           ;main.c: 220:     for (int i = 0; i < 24; i++) {
  7734  00130A  0E00               	movlw	0
  7735  00130C  6E0E               	movwf	(escribeHorariosMemoria@i+1)^0,c
  7736  00130E  0E00               	movlw	0
  7737  001310  6E0D               	movwf	escribeHorariosMemoria@i^0,c
  7738  001312                     l2950:
  7739                           
  7740                           ;main.c: 221:         escribe_eeprom(contMemoria++, horarios[i].hora);
  7741  001312  C00B  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  7742  001316  C00C  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  7743  00131A  C00D  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  7744  00131E  C00E  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  7745  001322  0E00               	movlw	0
  7746  001324  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7747  001326  0E03               	movlw	3
  7748  001328  6E03               	movwf	___wmul@multiplicand^0,c
  7749  00132A  ECFB  F010         	call	___wmul	;wreg free
  7750  00132E  0E00               	movlw	low _horarios
  7751  001330  2401               	addwf	?___wmul^0,w,c
  7752  001332  6ED9               	movwf	fsr2l,c
  7753  001334  0E01               	movlw	high _horarios
  7754  001336  2002               	addwfc	(?___wmul+1)^0,w,c
  7755  001338  6EDA               	movwf	fsr2h,c
  7756  00133A  50DF               	movf	indf2,w,c
  7757  00133C  6E09               	movwf	escribe_eeprom@dato^0,c
  7758  00133E  EC8F  F010         	call	_escribe_eeprom	;wreg free
  7759  001342  4A0B               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  7760  001344  2A0C               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  7761  001346                     
  7762                           ;main.c: 222:         escribe_eeprom(contMemoria++, horarios[i].regar);
  7763  001346  C00B  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  7764  00134A  C00C  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  7765  00134E  C00D  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  7766  001352  C00E  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  7767  001356  0E00               	movlw	0
  7768  001358  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7769  00135A  0E03               	movlw	3
  7770  00135C  6E03               	movwf	___wmul@multiplicand^0,c
  7771  00135E  ECFB  F010         	call	___wmul	;wreg free
  7772  001362  0E01               	movlw	low (_horarios+1)
  7773  001364  2401               	addwf	?___wmul^0,w,c
  7774  001366  6ED9               	movwf	fsr2l,c
  7775  001368  0E01               	movlw	high (_horarios+1)
  7776  00136A  2002               	addwfc	(?___wmul+1)^0,w,c
  7777  00136C  6EDA               	movwf	fsr2h,c
  7778  00136E  50DF               	movf	indf2,w,c
  7779  001370  6E09               	movwf	escribe_eeprom@dato^0,c
  7780  001372  EC8F  F010         	call	_escribe_eeprom	;wreg free
  7781  001376  4A0B               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  7782  001378  2A0C               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  7783  00137A                     
  7784                           ;main.c: 223:         escribe_eeprom(contMemoria++, horarios[i].tiempoRegar);
  7785  00137A  C00B  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  7786  00137E  C00C  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  7787  001382  C00D  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  7788  001386  C00E  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  7789  00138A  0E00               	movlw	0
  7790  00138C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7791  00138E  0E03               	movlw	3
  7792  001390  6E03               	movwf	___wmul@multiplicand^0,c
  7793  001392  ECFB  F010         	call	___wmul	;wreg free
  7794  001396  0E02               	movlw	low (_horarios+2)
  7795  001398  2401               	addwf	?___wmul^0,w,c
  7796  00139A  6ED9               	movwf	fsr2l,c
  7797  00139C  0E01               	movlw	high (_horarios+2)
  7798  00139E  2002               	addwfc	(?___wmul+1)^0,w,c
  7799  0013A0  6EDA               	movwf	fsr2h,c
  7800  0013A2  50DF               	movf	indf2,w,c
  7801  0013A4  6E09               	movwf	escribe_eeprom@dato^0,c
  7802  0013A6  EC8F  F010         	call	_escribe_eeprom	;wreg free
  7803  0013AA  4A0B               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  7804  0013AC  2A0C               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  7805  0013AE                     
  7806                           ;main.c: 224:     }
  7807  0013AE  4A0D               	infsnz	escribeHorariosMemoria@i^0,f,c
  7808  0013B0  2A0E               	incf	(escribeHorariosMemoria@i+1)^0,f,c
  7809  0013B2  BE0E               	btfsc	(escribeHorariosMemoria@i+1)^0,7,c
  7810  0013B4  EFE5  F009         	goto	u2171
  7811  0013B8  500E               	movf	(escribeHorariosMemoria@i+1)^0,w,c
  7812  0013BA  E109               	bnz	u2170
  7813  0013BC  0E18               	movlw	24
  7814  0013BE  5C0D               	subwf	escribeHorariosMemoria@i^0,w,c
  7815  0013C0  A0D8               	btfss	status,0,c
  7816  0013C2  EFE5  F009         	goto	u2171
  7817  0013C6  EFE7  F009         	goto	u2170
  7818  0013CA                     u2171:
  7819  0013CA  EF89  F009         	goto	l2950
  7820  0013CE                     u2170:
  7821  0013CE  0012               	return		;funcret
  7822  0013D0                     __end_of_escribeHorariosMemoria:
  7823                           	opt callstack 0
  7824                           
  7825 ;; *************** function _escribe_eeprom *****************
  7826 ;; Defined at:
  7827 ;;		line 188 in file "main.c"
  7828 ;; Parameters:    Size  Location     Type
  7829 ;;  direccion       2    6[COMRAM] unsigned short 
  7830 ;;  dato            1    8[COMRAM] unsigned char 
  7831 ;; Auto vars:     Size  Location     Type
  7832 ;;		None
  7833 ;; Return value:  Size  Location     Type
  7834 ;;                  1    wreg      void 
  7835 ;; Registers used:
  7836 ;;		wreg, status,2, status,0, cstack
  7837 ;; Tracked objects:
  7838 ;;		On entry : 0/0
  7839 ;;		On exit  : 0/0
  7840 ;;		Unchanged: 0/0
  7841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7842 ;;      Params:         3       0       0       0       0       0       0       0       0
  7843 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7844 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7845 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7846 ;;Total ram usage:        4 bytes
  7847 ;; Hardware stack levels used:    1
  7848 ;; Hardware stack levels required when called:    3
  7849 ;; This function calls:
  7850 ;;		_i2c_detener
  7851 ;;		_i2c_envia_dato
  7852 ;;		_i2c_inicia_com
  7853 ;; This function is called by:
  7854 ;;		_escribeHorariosMemoria
  7855 ;; This function uses a non-reentrant model
  7856 ;;
  7857                           
  7858                           	psect	text42
  7859  00211E                     __ptext42:
  7860                           	opt callstack 0
  7861  00211E                     _escribe_eeprom:
  7862                           	opt callstack 24
  7863  00211E                     
  7864                           ;main.c: 189:     i2c_inicia_com();
  7865  00211E  EC75  F011         	call	_i2c_inicia_com	;wreg free
  7866                           
  7867                           ;main.c: 190:     i2c_envia_dato(0xAE);
  7868  002122  0EAE               	movlw	174
  7869  002124  EC66  F011         	call	_i2c_envia_dato
  7870                           
  7871                           ;main.c: 191:     i2c_envia_dato(direccion >> 8);
  7872  002128  5008               	movf	(escribe_eeprom@direccion+1)^0,w,c
  7873  00212A  EC66  F011         	call	_i2c_envia_dato
  7874                           
  7875                           ;main.c: 193:     i2c_envia_dato(direccion);
  7876  00212E  5007               	movf	escribe_eeprom@direccion^0,w,c
  7877  002130  EC66  F011         	call	_i2c_envia_dato
  7878                           
  7879                           ;main.c: 195:     i2c_envia_dato(dato);
  7880  002134  5009               	movf	escribe_eeprom@dato^0,w,c
  7881  002136  EC66  F011         	call	_i2c_envia_dato
  7882                           
  7883                           ;main.c: 196:     i2c_detener();
  7884  00213A  EC79  F011         	call	_i2c_detener	;wreg free
  7885  00213E                     
  7886                           ;main.c: 197:     _delay((unsigned long)((10)*(4000000/4000.0)));
  7887  00213E  0E0D               	movlw	13
  7888  002140  6E0A               	movwf	??_escribe_eeprom^0,c
  7889  002142  0EFC               	movlw	252
  7890  002144                     u2837:
  7891  002144  2EE8               	decfsz	wreg,f,c
  7892  002146  D7FE               	bra	u2837
  7893  002148  2E0A               	decfsz	??_escribe_eeprom^0,f,c
  7894  00214A  D7FC               	bra	u2837
  7895  00214C  0012               	return		;funcret
  7896  00214E                     __end_of_escribe_eeprom:
  7897                           	opt callstack 0
  7898                           
  7899 ;; *************** function _UART_read *****************
  7900 ;; Defined at:
  7901 ;;		line 34 in file "./UART.h"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;		None
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;		None
  7906 ;; Return value:  Size  Location     Type
  7907 ;;                  1    wreg      unsigned char 
  7908 ;; Registers used:
  7909 ;;		wreg, status,2
  7910 ;; Tracked objects:
  7911 ;;		On entry : 0/0
  7912 ;;		On exit  : 0/0
  7913 ;;		Unchanged: 0/0
  7914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7915 ;;      Params:         0       0       0       0       0       0       0       0       0
  7916 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7917 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7918 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7919 ;;Total ram usage:        0 bytes
  7920 ;; Hardware stack levels used:    1
  7921 ;; Hardware stack levels required when called:    1
  7922 ;; This function calls:
  7923 ;;		Nothing
  7924 ;; This function is called by:
  7925 ;;		_setRtc
  7926 ;;		_asignarHorarios
  7927 ;;		_setTiempoRegar
  7928 ;;		_lecturaWifi
  7929 ;; This function uses a non-reentrant model
  7930 ;;
  7931                           
  7932                           	psect	text43
  7933  001E64                     __ptext43:
  7934                           	opt callstack 0
  7935  001E64                     _UART_read:
  7936                           	opt callstack 27
  7937  001E64                     
  7938                           ;./UART.h: 36:     TMR0 = VALOR_TIMER0UART;
  7939  001E64  0E67               	movlw	103
  7940  001E66  6ED7               	movwf	215,c	;volatile
  7941  001E68  0E69               	movlw	105
  7942  001E6A  6ED6               	movwf	214,c	;volatile
  7943                           
  7944                           ;./UART.h: 37:     esperaDatoConcluida = 0;
  7945  001E6C  0E00               	movlw	0
  7946  001E6E  0100               	movlb	0	; () banked
  7947  001E70  6F8B               	movwf	_esperaDatoConcluida& (0+255),b
  7948                           
  7949                           ;./UART.h: 38:     esperandoDatos = 1;
  7950  001E72  0E01               	movlw	1
  7951  001E74  6E5E               	movwf	_esperandoDatos^0,c
  7952                           
  7953                           ;./UART.h: 39:     byteUart = 0;
  7954  001E76  0E00               	movlw	0
  7955  001E78  6F8C               	movwf	_byteUart& (0+255),b
  7956                           
  7957                           ;./UART.h: 40:     tiempoInactividadTrans = 0;
  7958  001E7A  0E00               	movlw	0
  7959  001E7C  6F8D               	movwf	_tiempoInactividadTrans& (0+255),b
  7960  001E7E                     l121:
  7961                           
  7962                           ; BSR set to: 0
  7963  001E7E  BA9E               	btfsc	158,5,c	;volatile
  7964  001E80  EF44  F00F         	goto	u1931
  7965  001E84  EF46  F00F         	goto	u1930
  7966  001E88                     u1931:
  7967  001E88  EF4E  F00F         	goto	l2754
  7968  001E8C                     u1930:
  7969  001E8C                     
  7970                           ; BSR set to: 0
  7971  001E8C  518B               	movf	_esperaDatoConcluida& (0+255),w,b
  7972  001E8E  B4D8               	btfsc	status,2,c
  7973  001E90  EF4C  F00F         	goto	u1941
  7974  001E94  EF4E  F00F         	goto	u1940
  7975  001E98                     u1941:
  7976  001E98  EF3F  F00F         	goto	l121
  7977  001E9C                     u1940:
  7978  001E9C                     l2754:
  7979                           
  7980                           ; BSR set to: 0
  7981                           ;./UART.h: 44:     if (!esperaDatoConcluida) {
  7982  001E9C  518B               	movf	_esperaDatoConcluida& (0+255),w,b
  7983  001E9E  A4D8               	btfss	status,2,c
  7984  001EA0  EF54  F00F         	goto	u1951
  7985  001EA4  EF56  F00F         	goto	u1950
  7986  001EA8                     u1951:
  7987  001EA8  EF5A  F00F         	goto	l126
  7988  001EAC                     u1950:
  7989  001EAC                     
  7990                           ; BSR set to: 0
  7991                           ;./UART.h: 45:         byteUart = RCREG;
  7992  001EAC  CFAE F08C          	movff	4014,_byteUart	;volatile
  7993  001EB0                     
  7994                           ; BSR set to: 0
  7995                           ;./UART.h: 46:         esperandoDatos = 0;
  7996  001EB0  0E00               	movlw	0
  7997  001EB2  6E5E               	movwf	_esperandoDatos^0,c
  7998  001EB4                     l126:
  7999                           
  8000                           ; BSR set to: 0
  8001                           ;./UART.h: 49:     return byteUart;
  8002  001EB4  518C               	movf	_byteUart& (0+255),w,b
  8003  001EB6                     
  8004                           ; BSR set to: 0
  8005  001EB6  0012               	return		;funcret
  8006  001EB8                     __end_of_UART_read:
  8007                           	opt callstack 0
  8008                           
  8009 ;; *************** function _UART_printf *****************
  8010 ;; Defined at:
  8011 ;;		line 57 in file "./UART.h"
  8012 ;; Parameters:    Size  Location     Type
  8013 ;;  cadena          2    1[COMRAM] PTR unsigned char 
  8014 ;;		 -> mostrarDatosSensoresWIFI@buffer(50), mostrarDatosSensores@buffer(50), STR_28(21), STR_27(25), 
  8015 ;;		 -> dameDatosSistema@buffer(50), STR_25(50), STR_24(42), STR_23(3), 
  8016 ;;		 -> STR_22(14), STR_21(34), STR_20(32), STR_19(49), 
  8017 ;;		 -> STR_18(37), STR_17(27), STR_16(37), STR_15(32), 
  8018 ;;		 -> STR_14(28), STR_13(38), STR_12(37), STR_11(72), 
  8019 ;;		 -> STR_10(51), STR_9(23), STR_8(26), STR_7(55), 
  8020 ;;		 -> STR_6(51), STR_5(25), STR_4(37), STR_3(31), 
  8021 ;;		 -> STR_2(43), STR_1(16), 
  8022 ;; Auto vars:     Size  Location     Type
  8023 ;;		None
  8024 ;; Return value:  Size  Location     Type
  8025 ;;                  1    wreg      void 
  8026 ;; Registers used:
  8027 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8028 ;; Tracked objects:
  8029 ;;		On entry : 0/0
  8030 ;;		On exit  : 0/0
  8031 ;;		Unchanged: 0/0
  8032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8033 ;;      Params:         2       0       0       0       0       0       0       0       0
  8034 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8035 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8036 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8037 ;;Total ram usage:        2 bytes
  8038 ;; Hardware stack levels used:    1
  8039 ;; Hardware stack levels required when called:    2
  8040 ;; This function calls:
  8041 ;;		_UART_write
  8042 ;; This function is called by:
  8043 ;;		_fijaHoraRtc
  8044 ;;		_asignarHorarios
  8045 ;;		_setTiempoRegar
  8046 ;;		_lecturaWifi
  8047 ;;		_mostrarMenu
  8048 ;;		_sistemaPrincipal
  8049 ;;		_dameDatosSistema
  8050 ;;		_dameTemperaturaHumedad
  8051 ;;		_mostrarDatosSensores
  8052 ;;		_mostrarDatosSensoresWIFI
  8053 ;; This function uses a non-reentrant model
  8054 ;;
  8055                           
  8056                           	psect	text44
  8057  001DAA                     __ptext44:
  8058                           	opt callstack 0
  8059  001DAA                     _UART_printf:
  8060                           	opt callstack 26
  8061  001DAA                     
  8062                           ;./UART.h: 58:     while (*cadena) {
  8063  001DAA  EFEB  F00E         	goto	l2630
  8064  001DAE                     l2626:
  8065                           
  8066                           ;./UART.h: 59:         UART_write(*cadena++);
  8067  001DAE  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  8068  001DB2  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  8069  001DB6  6AF8               	clrf	tblptru,c
  8070  001DB8  0E07               	movlw	(high __ramtop+-1)
  8071  001DBA  64F7               	cpfsgt	tblptrh,c
  8072  001DBC  D003               	bra	u1807
  8073  001DBE  0008               	tblrd		*
  8074  001DC0  50F5               	movf	tablat,w,c
  8075  001DC2  D005               	bra	u1800
  8076  001DC4                     u1807:
  8077  001DC4  CFF6 FFE1          	movff	tblptrl,fsr1l
  8078  001DC8  CFF7 FFE2          	movff	tblptrh,fsr1h
  8079  001DCC  50E7               	movf	indf1,w,c
  8080  001DCE                     u1800:
  8081  001DCE  EC4A  F011         	call	_UART_write
  8082  001DD2  4A02               	infsnz	UART_printf@cadena^0,f,c
  8083  001DD4  2A03               	incf	(UART_printf@cadena+1)^0,f,c
  8084  001DD6                     l2630:
  8085                           
  8086                           ;./UART.h: 58:     while (*cadena) {
  8087  001DD6  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  8088  001DDA  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  8089  001DDE  6AF8               	clrf	tblptru,c
  8090  001DE0  0E07               	movlw	(high __ramtop+-1)
  8091  001DE2  64F7               	cpfsgt	tblptrh,c
  8092  001DE4  D003               	bra	u1817
  8093  001DE6  0008               	tblrd		*
  8094  001DE8  50F5               	movf	tablat,w,c
  8095  001DEA  D005               	bra	u1810
  8096  001DEC                     u1817:
  8097  001DEC  CFF6 FFE1          	movff	tblptrl,fsr1l
  8098  001DF0  CFF7 FFE2          	movff	tblptrh,fsr1h
  8099  001DF4  50E7               	movf	indf1,w,c
  8100  001DF6                     u1810:
  8101  001DF6  0900               	iorlw	0
  8102  001DF8  A4D8               	btfss	status,2,c
  8103  001DFA  EF01  F00F         	goto	u1821
  8104  001DFE  EF03  F00F         	goto	u1820
  8105  001E02                     u1821:
  8106  001E02  EFD7  F00E         	goto	l2626
  8107  001E06                     u1820:
  8108  001E06  0012               	return		;funcret
  8109  001E08                     __end_of_UART_printf:
  8110                           	opt callstack 0
  8111                           
  8112 ;; *************** function _UART_write *****************
  8113 ;; Defined at:
  8114 ;;		line 52 in file "./UART.h"
  8115 ;; Parameters:    Size  Location     Type
  8116 ;;  dato            1    wreg     unsigned char 
  8117 ;; Auto vars:     Size  Location     Type
  8118 ;;  dato            1    0[COMRAM] unsigned char 
  8119 ;; Return value:  Size  Location     Type
  8120 ;;                  1    wreg      void 
  8121 ;; Registers used:
  8122 ;;		wreg
  8123 ;; Tracked objects:
  8124 ;;		On entry : 0/0
  8125 ;;		On exit  : 0/0
  8126 ;;		Unchanged: 0/0
  8127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8128 ;;      Params:         0       0       0       0       0       0       0       0       0
  8129 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8130 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8131 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8132 ;;Total ram usage:        1 bytes
  8133 ;; Hardware stack levels used:    1
  8134 ;; Hardware stack levels required when called:    1
  8135 ;; This function calls:
  8136 ;;		Nothing
  8137 ;; This function is called by:
  8138 ;;		_UART_printf
  8139 ;;		_setRtc
  8140 ;;		_asignarHorarios
  8141 ;;		_setTiempoRegar
  8142 ;;		_lecturaWifi
  8143 ;;		_dameDatosSistema
  8144 ;;		_mostrarDatosSensores
  8145 ;;		_mostrarDatosSensoresWIFI
  8146 ;; This function uses a non-reentrant model
  8147 ;;
  8148                           
  8149                           	psect	text45
  8150  002294                     __ptext45:
  8151                           	opt callstack 0
  8152  002294                     _UART_write:
  8153                           	opt callstack 26
  8154                           
  8155                           ;incstack = 0
  8156                           ;UART_write@dato stored from wreg
  8157  002294  6E01               	movwf	UART_write@dato^0,c
  8158  002296                     
  8159                           ;./UART.h: 53:     TXREG = dato;
  8160  002296  C001  FFAD         	movff	UART_write@dato,4013	;volatile
  8161  00229A                     l130:
  8162  00229A  A2AC               	btfss	172,1,c	;volatile
  8163  00229C  EF52  F011         	goto	u1641
  8164  0022A0  EF54  F011         	goto	u1640
  8165  0022A4                     u1641:
  8166  0022A4  EF4D  F011         	goto	l130
  8167  0022A8                     u1640:
  8168  0022A8  0012               	return		;funcret
  8169  0022AA                     __end_of_UART_write:
  8170                           	opt callstack 0
  8171                           
  8172 ;; *************** function _leeHorariosMemoria *****************
  8173 ;; Defined at:
  8174 ;;		line 227 in file "main.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;		None
  8177 ;; Auto vars:     Size  Location     Type
  8178 ;;  i               2    8[COMRAM] int 
  8179 ;;  contMemoria     2    6[COMRAM] int 
  8180 ;; Return value:  Size  Location     Type
  8181 ;;                  1    wreg      void 
  8182 ;; Registers used:
  8183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8184 ;; Tracked objects:
  8185 ;;		On entry : 0/0
  8186 ;;		On exit  : 0/0
  8187 ;;		Unchanged: 0/0
  8188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8189 ;;      Params:         0       0       0       0       0       0       0       0       0
  8190 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8191 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8192 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8193 ;;Total ram usage:        4 bytes
  8194 ;; Hardware stack levels used:    1
  8195 ;; Hardware stack levels required when called:    4
  8196 ;; This function calls:
  8197 ;;		___wmul
  8198 ;;		_leer_eeprom
  8199 ;; This function is called by:
  8200 ;;		_main
  8201 ;; This function uses a non-reentrant model
  8202 ;;
  8203                           
  8204                           	psect	text46
  8205  00149A                     __ptext46:
  8206                           	opt callstack 0
  8207  00149A                     _leeHorariosMemoria:
  8208                           	opt callstack 26
  8209  00149A                     
  8210                           ;main.c: 229:     int contMemoria = 0;
  8211  00149A  0E00               	movlw	0
  8212  00149C  6E08               	movwf	(leeHorariosMemoria@contMemoria+1)^0,c
  8213  00149E  0E00               	movlw	0
  8214  0014A0  6E07               	movwf	leeHorariosMemoria@contMemoria^0,c
  8215                           
  8216                           ;main.c: 231:     for (int i = 0; i < 24; i++) {
  8217  0014A2  0E00               	movlw	0
  8218  0014A4  6E0A               	movwf	(leeHorariosMemoria@i+1)^0,c
  8219  0014A6  0E00               	movlw	0
  8220  0014A8  6E09               	movwf	leeHorariosMemoria@i^0,c
  8221  0014AA                     l3420:
  8222                           
  8223                           ;main.c: 232:         horarios[i].hora = leer_eeprom(contMemoria++);
  8224  0014AA  C009  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  8225  0014AE  C00A  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  8226  0014B2  0E00               	movlw	0
  8227  0014B4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8228  0014B6  0E03               	movlw	3
  8229  0014B8  6E03               	movwf	___wmul@multiplicand^0,c
  8230  0014BA  ECFB  F010         	call	___wmul	;wreg free
  8231  0014BE  0E00               	movlw	low _horarios
  8232  0014C0  2401               	addwf	?___wmul^0,w,c
  8233  0014C2  6ED9               	movwf	fsr2l,c
  8234  0014C4  0E01               	movlw	high _horarios
  8235  0014C6  2002               	addwfc	(?___wmul+1)^0,w,c
  8236  0014C8  6EDA               	movwf	fsr2h,c
  8237  0014CA  C007  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  8238  0014CE  C008  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  8239  0014D2  EC56  F010         	call	_leer_eeprom	;wreg free
  8240  0014D6  6EDF               	movwf	indf2,c
  8241  0014D8  4A07               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  8242  0014DA  2A08               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  8243  0014DC                     
  8244                           ;main.c: 233:         horarios[i].regar = leer_eeprom(contMemoria++);
  8245  0014DC  C009  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  8246  0014E0  C00A  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  8247  0014E4  0E00               	movlw	0
  8248  0014E6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8249  0014E8  0E03               	movlw	3
  8250  0014EA  6E03               	movwf	___wmul@multiplicand^0,c
  8251  0014EC  ECFB  F010         	call	___wmul	;wreg free
  8252  0014F0  0E01               	movlw	low (_horarios+1)
  8253  0014F2  2401               	addwf	?___wmul^0,w,c
  8254  0014F4  6ED9               	movwf	fsr2l,c
  8255  0014F6  0E01               	movlw	high (_horarios+1)
  8256  0014F8  2002               	addwfc	(?___wmul+1)^0,w,c
  8257  0014FA  6EDA               	movwf	fsr2h,c
  8258  0014FC  C007  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  8259  001500  C008  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  8260  001504  EC56  F010         	call	_leer_eeprom	;wreg free
  8261  001508  6EDF               	movwf	indf2,c
  8262  00150A  4A07               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  8263  00150C  2A08               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  8264  00150E                     
  8265                           ;main.c: 234:         horarios[i].tiempoRegar = leer_eeprom(contMemoria++);
  8266  00150E  C009  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  8267  001512  C00A  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  8268  001516  0E00               	movlw	0
  8269  001518  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8270  00151A  0E03               	movlw	3
  8271  00151C  6E03               	movwf	___wmul@multiplicand^0,c
  8272  00151E  ECFB  F010         	call	___wmul	;wreg free
  8273  001522  0E02               	movlw	low (_horarios+2)
  8274  001524  2401               	addwf	?___wmul^0,w,c
  8275  001526  6ED9               	movwf	fsr2l,c
  8276  001528  0E01               	movlw	high (_horarios+2)
  8277  00152A  2002               	addwfc	(?___wmul+1)^0,w,c
  8278  00152C  6EDA               	movwf	fsr2h,c
  8279  00152E  C007  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  8280  001532  C008  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  8281  001536  EC56  F010         	call	_leer_eeprom	;wreg free
  8282  00153A  6EDF               	movwf	indf2,c
  8283  00153C  4A07               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  8284  00153E  2A08               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  8285  001540                     
  8286                           ;main.c: 235:     }
  8287  001540  4A09               	infsnz	leeHorariosMemoria@i^0,f,c
  8288  001542  2A0A               	incf	(leeHorariosMemoria@i+1)^0,f,c
  8289  001544  BE0A               	btfsc	(leeHorariosMemoria@i+1)^0,7,c
  8290  001546  EFAE  F00A         	goto	u2631
  8291  00154A  500A               	movf	(leeHorariosMemoria@i+1)^0,w,c
  8292  00154C  E109               	bnz	u2630
  8293  00154E  0E18               	movlw	24
  8294  001550  5C09               	subwf	leeHorariosMemoria@i^0,w,c
  8295  001552  A0D8               	btfss	status,0,c
  8296  001554  EFAE  F00A         	goto	u2631
  8297  001558  EFB0  F00A         	goto	u2630
  8298  00155C                     u2631:
  8299  00155C  EF55  F00A         	goto	l3420
  8300  001560                     u2630:
  8301  001560  0012               	return		;funcret
  8302  001562                     __end_of_leeHorariosMemoria:
  8303                           	opt callstack 0
  8304                           
  8305 ;; *************** function _leer_eeprom *****************
  8306 ;; Defined at:
  8307 ;;		line 200 in file "main.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;  direccion       2    2[COMRAM] unsigned short 
  8310 ;; Auto vars:     Size  Location     Type
  8311 ;;  dato            1    5[COMRAM] unsigned char 
  8312 ;; Return value:  Size  Location     Type
  8313 ;;                  1    wreg      unsigned char 
  8314 ;; Registers used:
  8315 ;;		wreg, status,2, status,0, cstack
  8316 ;; Tracked objects:
  8317 ;;		On entry : 0/0
  8318 ;;		On exit  : 0/0
  8319 ;;		Unchanged: 0/0
  8320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8321 ;;      Params:         2       0       0       0       0       0       0       0       0
  8322 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8323 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8324 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8325 ;;Total ram usage:        4 bytes
  8326 ;; Hardware stack levels used:    1
  8327 ;; Hardware stack levels required when called:    3
  8328 ;; This function calls:
  8329 ;;		_i2c_detener
  8330 ;;		_i2c_envia_dato
  8331 ;;		_i2c_inicia_com
  8332 ;;		_i2c_recibe_dato
  8333 ;;		_i2c_reinicia_com
  8334 ;; This function is called by:
  8335 ;;		_leeHorariosMemoria
  8336 ;; This function uses a non-reentrant model
  8337 ;;
  8338                           
  8339                           	psect	text47
  8340  0020AC                     __ptext47:
  8341                           	opt callstack 0
  8342  0020AC                     _leer_eeprom:
  8343                           	opt callstack 26
  8344  0020AC                     
  8345                           ;main.c: 202:     unsigned char dato;;main.c: 204:     i2c_inicia_com();
  8346  0020AC  EC75  F011         	call	_i2c_inicia_com	;wreg free
  8347                           
  8348                           ;main.c: 205:     i2c_envia_dato(0xAE);
  8349  0020B0  0EAE               	movlw	174
  8350  0020B2  EC66  F011         	call	_i2c_envia_dato
  8351                           
  8352                           ;main.c: 206:     i2c_envia_dato(direccion >> 8);
  8353  0020B6  5004               	movf	(leer_eeprom@direccion+1)^0,w,c
  8354  0020B8  EC66  F011         	call	_i2c_envia_dato
  8355                           
  8356                           ;main.c: 207:     i2c_envia_dato(direccion);
  8357  0020BC  5003               	movf	leer_eeprom@direccion^0,w,c
  8358  0020BE  EC66  F011         	call	_i2c_envia_dato
  8359                           
  8360                           ;main.c: 208:     i2c_reinicia_com();
  8361  0020C2  EC71  F011         	call	_i2c_reinicia_com	;wreg free
  8362                           
  8363                           ;main.c: 209:     i2c_envia_dato(0xAF);
  8364  0020C6  0EAF               	movlw	175
  8365  0020C8  EC66  F011         	call	_i2c_envia_dato
  8366                           
  8367                           ;main.c: 210:     dato = i2c_recibe_dato();
  8368  0020CC  EC3D  F011         	call	_i2c_recibe_dato	;wreg free
  8369  0020D0  6E06               	movwf	leer_eeprom@dato^0,c
  8370                           
  8371                           ;main.c: 211:     i2c_detener();
  8372  0020D2  EC79  F011         	call	_i2c_detener	;wreg free
  8373  0020D6                     
  8374                           ;main.c: 212:     _delay((unsigned long)((10)*(4000000/4000.0)));
  8375  0020D6  0E0D               	movlw	13
  8376  0020D8  6E05               	movwf	??_leer_eeprom^0,c
  8377  0020DA  0EFC               	movlw	252
  8378  0020DC                     u2847:
  8379  0020DC  2EE8               	decfsz	wreg,f,c
  8380  0020DE  D7FE               	bra	u2847
  8381  0020E0  2E05               	decfsz	??_leer_eeprom^0,f,c
  8382  0020E2  D7FC               	bra	u2847
  8383  0020E4                     
  8384                           ;main.c: 214:     return dato;
  8385  0020E4  5006               	movf	leer_eeprom@dato^0,w,c
  8386  0020E6  0012               	return		;funcret
  8387  0020E8                     __end_of_leer_eeprom:
  8388                           	opt callstack 0
  8389                           
  8390 ;; *************** function _i2c_reinicia_com *****************
  8391 ;; Defined at:
  8392 ;;		line 37 in file "./I2C.h"
  8393 ;; Parameters:    Size  Location     Type
  8394 ;;		None
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;		None
  8397 ;; Return value:  Size  Location     Type
  8398 ;;                  1    wreg      void 
  8399 ;; Registers used:
  8400 ;;		wreg, status,2, status,0, cstack
  8401 ;; Tracked objects:
  8402 ;;		On entry : 0/0
  8403 ;;		On exit  : 0/0
  8404 ;;		Unchanged: 0/0
  8405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8406 ;;      Params:         0       0       0       0       0       0       0       0       0
  8407 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8408 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8409 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8410 ;;Total ram usage:        0 bytes
  8411 ;; Hardware stack levels used:    1
  8412 ;; Hardware stack levels required when called:    2
  8413 ;; This function calls:
  8414 ;;		_i2c_espera
  8415 ;; This function is called by:
  8416 ;;		_leer_rtc
  8417 ;;		_leer_eeprom
  8418 ;; This function uses a non-reentrant model
  8419 ;;
  8420                           
  8421                           	psect	text48
  8422  0022E2                     __ptext48:
  8423                           	opt callstack 0
  8424  0022E2                     _i2c_reinicia_com:
  8425                           	opt callstack 25
  8426  0022E2                     
  8427                           ;./I2C.h: 38:     i2c_espera();
  8428  0022E2  ECE8  F010         	call	_i2c_espera	;wreg free
  8429  0022E6                     
  8430                           ;./I2C.h: 39:     SSPCON2bits.RSEN = 1;
  8431  0022E6  82C5               	bsf	197,1,c	;volatile
  8432  0022E8  0012               	return		;funcret
  8433  0022EA                     __end_of_i2c_reinicia_com:
  8434                           	opt callstack 0
  8435                           
  8436 ;; *************** function _i2c_recibe_dato *****************
  8437 ;; Defined at:
  8438 ;;		line 68 in file "./I2C.h"
  8439 ;; Parameters:    Size  Location     Type
  8440 ;;		None
  8441 ;; Auto vars:     Size  Location     Type
  8442 ;;  datoleido       1    1[COMRAM] unsigned char 
  8443 ;; Return value:  Size  Location     Type
  8444 ;;                  1    wreg      unsigned char 
  8445 ;; Registers used:
  8446 ;;		wreg, status,2, status,0, cstack
  8447 ;; Tracked objects:
  8448 ;;		On entry : 0/0
  8449 ;;		On exit  : 0/0
  8450 ;;		Unchanged: 0/0
  8451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8452 ;;      Params:         0       0       0       0       0       0       0       0       0
  8453 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8454 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8455 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8456 ;;Total ram usage:        1 bytes
  8457 ;; Hardware stack levels used:    1
  8458 ;; Hardware stack levels required when called:    2
  8459 ;; This function calls:
  8460 ;;		_i2c_espera
  8461 ;; This function is called by:
  8462 ;;		_leer_rtc
  8463 ;;		_leer_eeprom
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467                           	psect	text49
  8468  00227A                     __ptext49:
  8469                           	opt callstack 0
  8470  00227A                     _i2c_recibe_dato:
  8471                           	opt callstack 25
  8472  00227A                     
  8473                           ;./I2C.h: 70:     unsigned char datoleido;;./I2C.h: 73:     i2c_espera();
  8474  00227A  ECE8  F010         	call	_i2c_espera	;wreg free
  8475  00227E                     
  8476                           ;./I2C.h: 74:     SSPCON2bits.RCEN = 1;
  8477  00227E  86C5               	bsf	197,3,c	;volatile
  8478                           
  8479                           ;./I2C.h: 76:     i2c_espera();
  8480  002280  ECE8  F010         	call	_i2c_espera	;wreg free
  8481  002284                     
  8482                           ;./I2C.h: 77:     datoleido = SSPBUF;
  8483  002284  CFC9 F002          	movff	4041,i2c_recibe_dato@datoleido	;volatile
  8484                           
  8485                           ;./I2C.h: 80:     i2c_espera();
  8486  002288  ECE8  F010         	call	_i2c_espera	;wreg free
  8487  00228C                     
  8488                           ;./I2C.h: 82:     SSPCON2bits.ACKDT = 1;
  8489  00228C  8AC5               	bsf	197,5,c	;volatile
  8490  00228E                     
  8491                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
  8492  00228E  88C5               	bsf	197,4,c	;volatile
  8493  002290                     
  8494                           ;./I2C.h: 91:     return datoleido;
  8495  002290  5002               	movf	i2c_recibe_dato@datoleido^0,w,c
  8496  002292  0012               	return		;funcret
  8497  002294                     __end_of_i2c_recibe_dato:
  8498                           	opt callstack 0
  8499                           
  8500 ;; *************** function _i2c_inicia_com *****************
  8501 ;; Defined at:
  8502 ;;		line 28 in file "./I2C.h"
  8503 ;; Parameters:    Size  Location     Type
  8504 ;;		None
  8505 ;; Auto vars:     Size  Location     Type
  8506 ;;		None
  8507 ;; Return value:  Size  Location     Type
  8508 ;;                  1    wreg      void 
  8509 ;; Registers used:
  8510 ;;		wreg, status,2, status,0, cstack
  8511 ;; Tracked objects:
  8512 ;;		On entry : 0/0
  8513 ;;		On exit  : 0/0
  8514 ;;		Unchanged: 0/0
  8515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8516 ;;      Params:         0       0       0       0       0       0       0       0       0
  8517 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8518 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8519 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8520 ;;Total ram usage:        0 bytes
  8521 ;; Hardware stack levels used:    1
  8522 ;; Hardware stack levels required when called:    2
  8523 ;; This function calls:
  8524 ;;		_i2c_espera
  8525 ;; This function is called by:
  8526 ;;		_escribe_rtc
  8527 ;;		_leer_rtc
  8528 ;;		_escribe_eeprom
  8529 ;;		_leer_eeprom
  8530 ;; This function uses a non-reentrant model
  8531 ;;
  8532                           
  8533                           	psect	text50
  8534  0022EA                     __ptext50:
  8535                           	opt callstack 0
  8536  0022EA                     _i2c_inicia_com:
  8537                           	opt callstack 25
  8538  0022EA                     
  8539                           ;./I2C.h: 29:     i2c_espera();
  8540  0022EA  ECE8  F010         	call	_i2c_espera	;wreg free
  8541  0022EE                     
  8542                           ;./I2C.h: 30:     SSPCON2bits.SEN = 1;
  8543  0022EE  80C5               	bsf	197,0,c	;volatile
  8544  0022F0  0012               	return		;funcret
  8545  0022F2                     __end_of_i2c_inicia_com:
  8546                           	opt callstack 0
  8547                           
  8548 ;; *************** function _i2c_envia_dato *****************
  8549 ;; Defined at:
  8550 ;;		line 57 in file "./I2C.h"
  8551 ;; Parameters:    Size  Location     Type
  8552 ;;  dato            1    wreg     unsigned char 
  8553 ;; Auto vars:     Size  Location     Type
  8554 ;;  dato            1    1[COMRAM] unsigned char 
  8555 ;; Return value:  Size  Location     Type
  8556 ;;                  1    wreg      unsigned char 
  8557 ;; Registers used:
  8558 ;;		wreg, status,2, status,0, cstack
  8559 ;; Tracked objects:
  8560 ;;		On entry : 0/0
  8561 ;;		On exit  : 0/0
  8562 ;;		Unchanged: 0/0
  8563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8564 ;;      Params:         0       0       0       0       0       0       0       0       0
  8565 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8566 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8567 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8568 ;;Total ram usage:        1 bytes
  8569 ;; Hardware stack levels used:    1
  8570 ;; Hardware stack levels required when called:    2
  8571 ;; This function calls:
  8572 ;;		_i2c_espera
  8573 ;; This function is called by:
  8574 ;;		_escribe_rtc
  8575 ;;		_leer_rtc
  8576 ;;		_escribe_eeprom
  8577 ;;		_leer_eeprom
  8578 ;; This function uses a non-reentrant model
  8579 ;;
  8580                           
  8581                           	psect	text51
  8582  0022CC                     __ptext51:
  8583                           	opt callstack 0
  8584  0022CC                     _i2c_envia_dato:
  8585                           	opt callstack 25
  8586                           
  8587                           ;incstack = 0
  8588                           ;i2c_envia_dato@dato stored from wreg
  8589  0022CC  6E02               	movwf	i2c_envia_dato@dato^0,c
  8590  0022CE                     
  8591                           ;./I2C.h: 58:     i2c_espera();
  8592  0022CE  ECE8  F010         	call	_i2c_espera	;wreg free
  8593  0022D2                     
  8594                           ;./I2C.h: 59:     SSPBUF = dato;
  8595  0022D2  C002  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
  8596  0022D6  0012               	return		;funcret
  8597  0022D8                     __end_of_i2c_envia_dato:
  8598                           	opt callstack 0
  8599                           
  8600 ;; *************** function _i2c_detener *****************
  8601 ;; Defined at:
  8602 ;;		line 46 in file "./I2C.h"
  8603 ;; Parameters:    Size  Location     Type
  8604 ;;		None
  8605 ;; Auto vars:     Size  Location     Type
  8606 ;;		None
  8607 ;; Return value:  Size  Location     Type
  8608 ;;                  1    wreg      void 
  8609 ;; Registers used:
  8610 ;;		wreg, status,2, status,0, cstack
  8611 ;; Tracked objects:
  8612 ;;		On entry : 0/0
  8613 ;;		On exit  : 0/0
  8614 ;;		Unchanged: 0/0
  8615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8616 ;;      Params:         0       0       0       0       0       0       0       0       0
  8617 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8618 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8619 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8620 ;;Total ram usage:        0 bytes
  8621 ;; Hardware stack levels used:    1
  8622 ;; Hardware stack levels required when called:    2
  8623 ;; This function calls:
  8624 ;;		_i2c_espera
  8625 ;; This function is called by:
  8626 ;;		_escribe_rtc
  8627 ;;		_leer_rtc
  8628 ;;		_escribe_eeprom
  8629 ;;		_leer_eeprom
  8630 ;; This function uses a non-reentrant model
  8631 ;;
  8632                           
  8633                           	psect	text52
  8634  0022F2                     __ptext52:
  8635                           	opt callstack 0
  8636  0022F2                     _i2c_detener:
  8637                           	opt callstack 25
  8638  0022F2                     
  8639                           ;./I2C.h: 47:     i2c_espera();
  8640  0022F2  ECE8  F010         	call	_i2c_espera	;wreg free
  8641  0022F6                     
  8642                           ;./I2C.h: 48:     SSPCON2bits.PEN = 1;
  8643  0022F6  84C5               	bsf	197,2,c	;volatile
  8644  0022F8  0012               	return		;funcret
  8645  0022FA                     __end_of_i2c_detener:
  8646                           	opt callstack 0
  8647                           
  8648 ;; *************** function _i2c_espera *****************
  8649 ;; Defined at:
  8650 ;;		line 20 in file "./I2C.h"
  8651 ;; Parameters:    Size  Location     Type
  8652 ;;		None
  8653 ;; Auto vars:     Size  Location     Type
  8654 ;;		None
  8655 ;; Return value:  Size  Location     Type
  8656 ;;                  1    wreg      void 
  8657 ;; Registers used:
  8658 ;;		wreg, status,2, status,0
  8659 ;; Tracked objects:
  8660 ;;		On entry : 0/0
  8661 ;;		On exit  : 0/0
  8662 ;;		Unchanged: 0/0
  8663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8664 ;;      Params:         0       0       0       0       0       0       0       0       0
  8665 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8666 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8667 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8668 ;;Total ram usage:        1 bytes
  8669 ;; Hardware stack levels used:    1
  8670 ;; Hardware stack levels required when called:    1
  8671 ;; This function calls:
  8672 ;;		Nothing
  8673 ;; This function is called by:
  8674 ;;		_i2c_inicia_com
  8675 ;;		_i2c_reinicia_com
  8676 ;;		_i2c_detener
  8677 ;;		_i2c_envia_dato
  8678 ;;		_i2c_recibe_dato
  8679 ;; This function uses a non-reentrant model
  8680 ;;
  8681                           
  8682                           	psect	text53
  8683  0021D0                     __ptext53:
  8684                           	opt callstack 0
  8685  0021D0                     _i2c_espera:
  8686                           	opt callstack 25
  8687  0021D0                     l2540:
  8688  0021D0  CFC5 F001          	movff	4037,??_i2c_espera	;volatile
  8689  0021D4  0E1F               	movlw	31
  8690  0021D6  1601               	andwf	??_i2c_espera^0,f,c
  8691  0021D8  A4D8               	btfss	status,2,c
  8692  0021DA  EFF1  F010         	goto	u1621
  8693  0021DE  EFF3  F010         	goto	u1620
  8694  0021E2                     u1621:
  8695  0021E2  EFE8  F010         	goto	l2540
  8696  0021E6                     u1620:
  8697  0021E6  B4C7               	btfsc	199,2,c	;volatile
  8698  0021E8  EFF8  F010         	goto	u1631
  8699  0021EC  EFFA  F010         	goto	u1630
  8700  0021F0                     u1631:
  8701  0021F0  EFE8  F010         	goto	l2540
  8702  0021F4                     u1630:
  8703  0021F4  0012               	return		;funcret
  8704  0021F6                     __end_of_i2c_espera:
  8705                           	opt callstack 0
  8706                           
  8707 ;; *************** function _inicializarObjetos *****************
  8708 ;; Defined at:
  8709 ;;		line 146 in file "main.c"
  8710 ;; Parameters:    Size  Location     Type
  8711 ;;		None
  8712 ;; Auto vars:     Size  Location     Type
  8713 ;;  i               2    6[COMRAM] int 
  8714 ;; Return value:  Size  Location     Type
  8715 ;;                  1    wreg      void 
  8716 ;; Registers used:
  8717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8718 ;; Tracked objects:
  8719 ;;		On entry : 0/0
  8720 ;;		On exit  : 0/0
  8721 ;;		Unchanged: 0/0
  8722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8723 ;;      Params:         0       0       0       0       0       0       0       0       0
  8724 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8725 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8726 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8727 ;;Total ram usage:        2 bytes
  8728 ;; Hardware stack levels used:    1
  8729 ;; Hardware stack levels required when called:    2
  8730 ;; This function calls:
  8731 ;;		___wmul
  8732 ;; This function is called by:
  8733 ;;		_main
  8734 ;; This function uses a non-reentrant model
  8735 ;;
  8736                           
  8737                           	psect	text54
  8738  0018DA                     __ptext54:
  8739                           	opt callstack 0
  8740  0018DA                     _inicializarObjetos:
  8741                           	opt callstack 28
  8742  0018DA                     
  8743                           ;main.c: 148:     for (int i = 0; i < 24; i++) {
  8744  0018DA  0E00               	movlw	0
  8745  0018DC  6E08               	movwf	(inicializarObjetos@i+1)^0,c
  8746  0018DE  0E00               	movlw	0
  8747  0018E0  6E07               	movwf	inicializarObjetos@i^0,c
  8748  0018E2                     l3408:
  8749                           
  8750                           ;main.c: 149:         horarios[i].hora = i;
  8751  0018E2  C007  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  8752  0018E6  C008  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  8753  0018EA  0E00               	movlw	0
  8754  0018EC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8755  0018EE  0E03               	movlw	3
  8756  0018F0  6E03               	movwf	___wmul@multiplicand^0,c
  8757  0018F2  ECFB  F010         	call	___wmul	;wreg free
  8758  0018F6  0E00               	movlw	low _horarios
  8759  0018F8  2401               	addwf	?___wmul^0,w,c
  8760  0018FA  6ED9               	movwf	fsr2l,c
  8761  0018FC  0E01               	movlw	high _horarios
  8762  0018FE  2002               	addwfc	(?___wmul+1)^0,w,c
  8763  001900  6EDA               	movwf	fsr2h,c
  8764  001902  C007  FFDF         	movff	inicializarObjetos@i,indf2
  8765                           
  8766                           ;main.c: 150:         horarios[i].regar = 0;
  8767  001906  C007  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  8768  00190A  C008  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  8769  00190E  0E00               	movlw	0
  8770  001910  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8771  001912  0E03               	movlw	3
  8772  001914  6E03               	movwf	___wmul@multiplicand^0,c
  8773  001916  ECFB  F010         	call	___wmul	;wreg free
  8774  00191A  0E01               	movlw	low (_horarios+1)
  8775  00191C  2401               	addwf	?___wmul^0,w,c
  8776  00191E  6ED9               	movwf	fsr2l,c
  8777  001920  0E01               	movlw	high (_horarios+1)
  8778  001922  2002               	addwfc	(?___wmul+1)^0,w,c
  8779  001924  6EDA               	movwf	fsr2h,c
  8780  001926  0E00               	movlw	0
  8781  001928  6EDF               	movwf	indf2,c
  8782                           
  8783                           ;main.c: 151:         horarios[i].tiempoRegar = 15;
  8784  00192A  C007  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  8785  00192E  C008  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  8786  001932  0E00               	movlw	0
  8787  001934  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8788  001936  0E03               	movlw	3
  8789  001938  6E03               	movwf	___wmul@multiplicand^0,c
  8790  00193A  ECFB  F010         	call	___wmul	;wreg free
  8791  00193E  0E02               	movlw	low (_horarios+2)
  8792  001940  2401               	addwf	?___wmul^0,w,c
  8793  001942  6ED9               	movwf	fsr2l,c
  8794  001944  0E01               	movlw	high (_horarios+2)
  8795  001946  2002               	addwfc	(?___wmul+1)^0,w,c
  8796  001948  6EDA               	movwf	fsr2h,c
  8797  00194A  0E0F               	movlw	15
  8798  00194C  6EDF               	movwf	indf2,c
  8799  00194E                     
  8800                           ;main.c: 152:     }
  8801  00194E  4A07               	infsnz	inicializarObjetos@i^0,f,c
  8802  001950  2A08               	incf	(inicializarObjetos@i+1)^0,f,c
  8803  001952  BE08               	btfsc	(inicializarObjetos@i+1)^0,7,c
  8804  001954  EFB5  F00C         	goto	u2621
  8805  001958  5008               	movf	(inicializarObjetos@i+1)^0,w,c
  8806  00195A  E109               	bnz	u2620
  8807  00195C  0E18               	movlw	24
  8808  00195E  5C07               	subwf	inicializarObjetos@i^0,w,c
  8809  001960  A0D8               	btfss	status,0,c
  8810  001962  EFB5  F00C         	goto	u2621
  8811  001966  EFB7  F00C         	goto	u2620
  8812  00196A                     u2621:
  8813  00196A  EF71  F00C         	goto	l3408
  8814  00196E                     u2620:
  8815  00196E  0012               	return		;funcret
  8816  001970                     __end_of_inicializarObjetos:
  8817                           	opt callstack 0
  8818                           
  8819 ;; *************** function ___wmul *****************
  8820 ;; Defined at:
  8821 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  8822 ;; Parameters:    Size  Location     Type
  8823 ;;  multiplier      2    0[COMRAM] unsigned int 
  8824 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8825 ;; Auto vars:     Size  Location     Type
  8826 ;;  product         2    4[COMRAM] unsigned int 
  8827 ;; Return value:  Size  Location     Type
  8828 ;;                  2    0[COMRAM] unsigned int 
  8829 ;; Registers used:
  8830 ;;		wreg, status,2, status,0, prodl, prodh
  8831 ;; Tracked objects:
  8832 ;;		On entry : 0/0
  8833 ;;		On exit  : 0/0
  8834 ;;		Unchanged: 0/0
  8835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8836 ;;      Params:         4       0       0       0       0       0       0       0       0
  8837 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8838 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8839 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8840 ;;Total ram usage:        6 bytes
  8841 ;; Hardware stack levels used:    1
  8842 ;; Hardware stack levels required when called:    1
  8843 ;; This function calls:
  8844 ;;		Nothing
  8845 ;; This function is called by:
  8846 ;;		_inicializarObjetos
  8847 ;;		_escribeHorariosMemoria
  8848 ;;		_leeHorariosMemoria
  8849 ;;		_encenderBombas
  8850 ;;		_restablecerDatosSensor
  8851 ;;		_lecturaWifi
  8852 ;;		_lecturaAnalogaSensores
  8853 ;;		_dameDatosSistema
  8854 ;;		_mostrarDatosSensores
  8855 ;;		_mostrarDatosSensoresWIFI
  8856 ;; This function uses a non-reentrant model
  8857 ;;
  8858                           
  8859                           	psect	text55
  8860  0021F6                     __ptext55:
  8861                           	opt callstack 0
  8862  0021F6                     ___wmul:
  8863                           	opt callstack 26
  8864  0021F6  5001               	movf	___wmul@multiplier^0,w,c
  8865  0021F8  0203               	mulwf	___wmul@multiplicand^0,c
  8866  0021FA  CFF3 F005          	movff	prodl,___wmul@product
  8867  0021FE  CFF4 F006          	movff	prodh,___wmul@product+1
  8868  002202  5001               	movf	___wmul@multiplier^0,w,c
  8869  002204  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8870  002206  50F3               	movf	243,w,c
  8871  002208  2606               	addwf	(___wmul@product+1)^0,f,c
  8872  00220A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8873  00220C  0203               	mulwf	___wmul@multiplicand^0,c
  8874  00220E  50F3               	movf	243,w,c
  8875  002210  2606               	addwf	(___wmul@product+1)^0,f,c
  8876  002212  C005  F001         	movff	___wmul@product,?___wmul
  8877  002216  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8878  00221A  0012               	return		;funcret
  8879  00221C                     __end_of___wmul:
  8880                           	opt callstack 0
  8881                           
  8882 ;; *************** function _i2c_iniciar *****************
  8883 ;; Defined at:
  8884 ;;		line 4 in file "./I2C.h"
  8885 ;; Parameters:    Size  Location     Type
  8886 ;;		None
  8887 ;; Auto vars:     Size  Location     Type
  8888 ;;		None
  8889 ;; Return value:  Size  Location     Type
  8890 ;;                  1    wreg      void 
  8891 ;; Registers used:
  8892 ;;		wreg, status,2
  8893 ;; Tracked objects:
  8894 ;;		On entry : 0/0
  8895 ;;		On exit  : 0/0
  8896 ;;		Unchanged: 0/0
  8897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8898 ;;      Params:         0       0       0       0       0       0       0       0       0
  8899 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8900 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8901 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8902 ;;Total ram usage:        0 bytes
  8903 ;; Hardware stack levels used:    1
  8904 ;; Hardware stack levels required when called:    1
  8905 ;; This function calls:
  8906 ;;		Nothing
  8907 ;; This function is called by:
  8908 ;;		_main
  8909 ;; This function uses a non-reentrant model
  8910 ;;
  8911                           
  8912                           	psect	text56
  8913  0022AA                     __ptext56:
  8914                           	opt callstack 0
  8915  0022AA                     _i2c_iniciar:
  8916                           	opt callstack 29
  8917  0022AA                     
  8918                           ;./I2C.h: 5:     TRISBbits.RB0 = 1;
  8919  0022AA  8093               	bsf	147,0,c	;volatile
  8920                           
  8921                           ;./I2C.h: 6:     TRISBbits.RB1 = 1;
  8922  0022AC  8293               	bsf	147,1,c	;volatile
  8923  0022AE                     
  8924                           ;./I2C.h: 7:     SSPSTAT = 0b10000000;
  8925  0022AE  0E80               	movlw	128
  8926  0022B0  6EC7               	movwf	199,c	;volatile
  8927                           
  8928                           ;./I2C.h: 8:     SSPCON1 = 0b00101000;
  8929  0022B2  0E28               	movlw	40
  8930  0022B4  6EC6               	movwf	198,c	;volatile
  8931                           
  8932                           ;./I2C.h: 9:     SSPCON2 = 0b00000000;
  8933  0022B6  0E00               	movlw	0
  8934  0022B8  6EC5               	movwf	197,c	;volatile
  8935                           
  8936                           ;./I2C.h: 10:     SSPADD = 9;
  8937  0022BA  0E09               	movlw	9
  8938  0022BC  6EC8               	movwf	200,c	;volatile
  8939  0022BE  0012               	return		;funcret
  8940  0022C0                     __end_of_i2c_iniciar:
  8941                           	opt callstack 0
  8942                           
  8943 ;; *************** function _configurarAdc *****************
  8944 ;; Defined at:
  8945 ;;		line 127 in file "main.c"
  8946 ;; Parameters:    Size  Location     Type
  8947 ;;		None
  8948 ;; Auto vars:     Size  Location     Type
  8949 ;;		None
  8950 ;; Return value:  Size  Location     Type
  8951 ;;                  1    wreg      void 
  8952 ;; Registers used:
  8953 ;;		wreg, status,2
  8954 ;; Tracked objects:
  8955 ;;		On entry : 0/0
  8956 ;;		On exit  : 0/0
  8957 ;;		Unchanged: 0/0
  8958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8959 ;;      Params:         0       0       0       0       0       0       0       0       0
  8960 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8962 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8963 ;;Total ram usage:        0 bytes
  8964 ;; Hardware stack levels used:    1
  8965 ;; Hardware stack levels required when called:    1
  8966 ;; This function calls:
  8967 ;;		Nothing
  8968 ;; This function is called by:
  8969 ;;		_main
  8970 ;; This function uses a non-reentrant model
  8971 ;;
  8972                           
  8973                           	psect	text57
  8974  0022D8                     __ptext57:
  8975                           	opt callstack 0
  8976  0022D8                     _configurarAdc:
  8977                           	opt callstack 29
  8978  0022D8                     
  8979                           ;main.c: 128:     ADCON1 = 0b00000000;
  8980  0022D8  0E00               	movlw	0
  8981  0022DA  6EC1               	movwf	193,c	;volatile
  8982                           
  8983                           ;main.c: 129:     ADCON2 = 0b10100101;
  8984  0022DC  0EA5               	movlw	165
  8985  0022DE  6EC0               	movwf	192,c	;volatile
  8986  0022E0  0012               	return		;funcret
  8987  0022E2                     __end_of_configurarAdc:
  8988                           	opt callstack 0
  8989                           
  8990 ;; *************** function _UART_init *****************
  8991 ;; Defined at:
  8992 ;;		line 12 in file "./UART.h"
  8993 ;; Parameters:    Size  Location     Type
  8994 ;;  BAUD            4   26[COMRAM] long 
  8995 ;; Auto vars:     Size  Location     Type
  8996 ;;  frecuenciaCr    4    0        long 
  8997 ;; Return value:  Size  Location     Type
  8998 ;;                  1    wreg      void 
  8999 ;; Registers used:
  9000 ;;		wreg, status,2, status,0, cstack
  9001 ;; Tracked objects:
  9002 ;;		On entry : 0/0
  9003 ;;		On exit  : 0/0
  9004 ;;		Unchanged: 0/0
  9005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9006 ;;      Params:         4       0       0       0       0       0       0       0       0
  9007 ;;      Locals:         8       0       0       0       0       0       0       0       0
  9008 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9009 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9010 ;;Total ram usage:       12 bytes
  9011 ;; Hardware stack levels used:    1
  9012 ;; Hardware stack levels required when called:    2
  9013 ;; This function calls:
  9014 ;;		___aldiv
  9015 ;; This function is called by:
  9016 ;;		_main
  9017 ;; This function uses a non-reentrant model
  9018 ;;
  9019                           
  9020                           	psect	text58
  9021  001A74                     __ptext58:
  9022                           	opt callstack 0
  9023  001A74                     _UART_init:
  9024                           	opt callstack 28
  9025  001A74                     
  9026                           ;./UART.h: 14:     TRISCbits.TRISC6 = 0;
  9027  001A74  9C94               	bcf	148,6,c	;volatile
  9028  001A76                     
  9029                           ;./UART.h: 15:     TRISCbits.TRISC7 = 1;
  9030  001A76  8E94               	bsf	148,7,c	;volatile
  9031  001A78                     
  9032                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  9033  001A78  0E10               	movlw	16
  9034  001A7A  6E11               	movwf	___aldiv@divisor^0,c
  9035  001A7C  0E00               	movlw	0
  9036  001A7E  6E12               	movwf	(___aldiv@divisor+1)^0,c
  9037  001A80  0E00               	movlw	0
  9038  001A82  6E13               	movwf	(___aldiv@divisor+2)^0,c
  9039  001A84  0E00               	movlw	0
  9040  001A86  6E14               	movwf	(___aldiv@divisor+3)^0,c
  9041  001A88  0E00               	movlw	0
  9042  001A8A  6E0D               	movwf	___aldiv@dividend^0,c
  9043  001A8C  0E09               	movlw	9
  9044  001A8E  6E0E               	movwf	(___aldiv@dividend+1)^0,c
  9045  001A90  0E3D               	movlw	61
  9046  001A92  6E0F               	movwf	(___aldiv@dividend+2)^0,c
  9047  001A94  0E00               	movlw	0
  9048  001A96  6E10               	movwf	(___aldiv@dividend+3)^0,c
  9049  001A98  EC0D  F008         	call	___aldiv	;wreg free
  9050  001A9C  C00D  F023         	movff	?___aldiv,_UART_init$1787
  9051  001AA0  C00E  F024         	movff	?___aldiv+1,_UART_init$1787+1
  9052  001AA4  C00F  F025         	movff	?___aldiv+2,_UART_init$1787+2
  9053  001AA8  C010  F026         	movff	?___aldiv+3,_UART_init$1787+3
  9054  001AAC                     
  9055                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  9056  001AAC  C023  F00D         	movff	_UART_init$1787,___aldiv@dividend
  9057  001AB0  C024  F00E         	movff	_UART_init$1787+1,___aldiv@dividend+1
  9058  001AB4  C025  F00F         	movff	_UART_init$1787+2,___aldiv@dividend+2
  9059  001AB8  C026  F010         	movff	_UART_init$1787+3,___aldiv@dividend+3
  9060  001ABC  C01B  F011         	movff	UART_init@BAUD,___aldiv@divisor
  9061  001AC0  C01C  F012         	movff	UART_init@BAUD+1,___aldiv@divisor+1
  9062  001AC4  C01D  F013         	movff	UART_init@BAUD+2,___aldiv@divisor+2
  9063  001AC8  C01E  F014         	movff	UART_init@BAUD+3,___aldiv@divisor+3
  9064  001ACC  EC0D  F008         	call	___aldiv	;wreg free
  9065  001AD0  040D               	decf	?___aldiv^0,w,c
  9066  001AD2  6EAF               	movwf	175,c	;volatile
  9067  001AD4                     
  9068                           ;./UART.h: 21:     TXSTAbits.BRGH = 1;
  9069  001AD4  84AC               	bsf	172,2,c	;volatile
  9070  001AD6                     
  9071                           ;./UART.h: 22:     TXSTAbits.SYNC = 0;
  9072  001AD6  98AC               	bcf	172,4,c	;volatile
  9073  001AD8                     
  9074                           ;./UART.h: 23:     RCSTAbits.SPEN = 1;
  9075  001AD8  8EAB               	bsf	171,7,c	;volatile
  9076  001ADA                     
  9077                           ;./UART.h: 26:     TXSTAbits.TX9 = 0;
  9078  001ADA  9CAC               	bcf	172,6,c	;volatile
  9079  001ADC                     
  9080                           ;./UART.h: 27:     TXSTAbits.TXEN = 1;
  9081  001ADC  8AAC               	bsf	172,5,c	;volatile
  9082  001ADE                     
  9083                           ;./UART.h: 30:     RCSTAbits.RC9 = 0;
  9084  001ADE  9CAB               	bcf	171,6,c	;volatile
  9085  001AE0                     
  9086                           ;./UART.h: 31:     RCSTAbits.CREN = 1;
  9087  001AE0  88AB               	bsf	171,4,c	;volatile
  9088  001AE2  0012               	return		;funcret
  9089  001AE4                     __end_of_UART_init:
  9090                           	opt callstack 0
  9091                           
  9092 ;; *************** function ___aldiv *****************
  9093 ;; Defined at:
  9094 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  9095 ;; Parameters:    Size  Location     Type
  9096 ;;  dividend        4   12[COMRAM] long 
  9097 ;;  divisor         4   16[COMRAM] long 
  9098 ;; Auto vars:     Size  Location     Type
  9099 ;;  quotient        4   22[COMRAM] long 
  9100 ;;  sign            1   21[COMRAM] unsigned char 
  9101 ;;  counter         1   20[COMRAM] unsigned char 
  9102 ;; Return value:  Size  Location     Type
  9103 ;;                  4   12[COMRAM] long 
  9104 ;; Registers used:
  9105 ;;		wreg, status,2, status,0
  9106 ;; Tracked objects:
  9107 ;;		On entry : 0/0
  9108 ;;		On exit  : 0/0
  9109 ;;		Unchanged: 0/0
  9110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9111 ;;      Params:         8       0       0       0       0       0       0       0       0
  9112 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9113 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9114 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9115 ;;Total ram usage:       14 bytes
  9116 ;; Hardware stack levels used:    1
  9117 ;; Hardware stack levels required when called:    1
  9118 ;; This function calls:
  9119 ;;		Nothing
  9120 ;; This function is called by:
  9121 ;;		_UART_init
  9122 ;;		_map
  9123 ;; This function uses a non-reentrant model
  9124 ;;
  9125                           
  9126                           	psect	text59
  9127  00101A                     __ptext59:
  9128                           	opt callstack 0
  9129  00101A                     ___aldiv:
  9130                           	opt callstack 26
  9131  00101A  0E00               	movlw	0
  9132  00101C  6E16               	movwf	___aldiv@sign^0,c
  9133  00101E  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
  9134  001020  EF16  F008         	goto	u2030
  9135  001024  EF14  F008         	goto	u2031
  9136  001028                     u2031:
  9137  001028  EF20  F008         	goto	l2840
  9138  00102C                     u2030:
  9139  00102C  1E14               	comf	(___aldiv@divisor+3)^0,f,c
  9140  00102E  1E13               	comf	(___aldiv@divisor+2)^0,f,c
  9141  001030  1E12               	comf	(___aldiv@divisor+1)^0,f,c
  9142  001032  6C11               	negf	___aldiv@divisor^0,c
  9143  001034  0E00               	movlw	0
  9144  001036  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
  9145  001038  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
  9146  00103A  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
  9147  00103C  0E01               	movlw	1
  9148  00103E  6E16               	movwf	___aldiv@sign^0,c
  9149  001040                     l2840:
  9150  001040  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
  9151  001042  EF27  F008         	goto	u2040
  9152  001046  EF25  F008         	goto	u2041
  9153  00104A                     u2041:
  9154  00104A  EF31  F008         	goto	l2846
  9155  00104E                     u2040:
  9156  00104E  1E10               	comf	(___aldiv@dividend+3)^0,f,c
  9157  001050  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
  9158  001052  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
  9159  001054  6C0D               	negf	___aldiv@dividend^0,c
  9160  001056  0E00               	movlw	0
  9161  001058  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
  9162  00105A  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
  9163  00105C  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
  9164  00105E  0E01               	movlw	1
  9165  001060  1A16               	xorwf	___aldiv@sign^0,f,c
  9166  001062                     l2846:
  9167  001062  0E00               	movlw	0
  9168  001064  6E17               	movwf	___aldiv@quotient^0,c
  9169  001066  0E00               	movlw	0
  9170  001068  6E18               	movwf	(___aldiv@quotient+1)^0,c
  9171  00106A  0E00               	movlw	0
  9172  00106C  6E19               	movwf	(___aldiv@quotient+2)^0,c
  9173  00106E  0E00               	movlw	0
  9174  001070  6E1A               	movwf	(___aldiv@quotient+3)^0,c
  9175  001072  5011               	movf	___aldiv@divisor^0,w,c
  9176  001074  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
  9177  001076  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
  9178  001078  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
  9179  00107A  B4D8               	btfsc	status,2,c
  9180  00107C  EF42  F008         	goto	u2051
  9181  001080  EF44  F008         	goto	u2050
  9182  001084                     u2051:
  9183  001084  EF7A  F008         	goto	l2868
  9184  001088                     u2050:
  9185  001088  0E01               	movlw	1
  9186  00108A  6E15               	movwf	___aldiv@counter^0,c
  9187  00108C  EF4E  F008         	goto	l2854
  9188  001090                     l2852:
  9189  001090  90D8               	bcf	status,0,c
  9190  001092  3611               	rlcf	___aldiv@divisor^0,f,c
  9191  001094  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
  9192  001096  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
  9193  001098  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
  9194  00109A  2A15               	incf	___aldiv@counter^0,f,c
  9195  00109C                     l2854:
  9196  00109C  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
  9197  00109E  EF53  F008         	goto	u2061
  9198  0010A2  EF55  F008         	goto	u2060
  9199  0010A6                     u2061:
  9200  0010A6  EF48  F008         	goto	l2852
  9201  0010AA                     u2060:
  9202  0010AA                     l2856:
  9203  0010AA  90D8               	bcf	status,0,c
  9204  0010AC  3617               	rlcf	___aldiv@quotient^0,f,c
  9205  0010AE  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
  9206  0010B0  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
  9207  0010B2  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
  9208  0010B4  5011               	movf	___aldiv@divisor^0,w,c
  9209  0010B6  5C0D               	subwf	___aldiv@dividend^0,w,c
  9210  0010B8  5012               	movf	(___aldiv@divisor+1)^0,w,c
  9211  0010BA  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
  9212  0010BC  5013               	movf	(___aldiv@divisor+2)^0,w,c
  9213  0010BE  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
  9214  0010C0  5014               	movf	(___aldiv@divisor+3)^0,w,c
  9215  0010C2  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
  9216  0010C4  A0D8               	btfss	status,0,c
  9217  0010C6  EF67  F008         	goto	u2071
  9218  0010CA  EF69  F008         	goto	u2070
  9219  0010CE                     u2071:
  9220  0010CE  EF72  F008         	goto	l2864
  9221  0010D2                     u2070:
  9222  0010D2  5011               	movf	___aldiv@divisor^0,w,c
  9223  0010D4  5E0D               	subwf	___aldiv@dividend^0,f,c
  9224  0010D6  5012               	movf	(___aldiv@divisor+1)^0,w,c
  9225  0010D8  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
  9226  0010DA  5013               	movf	(___aldiv@divisor+2)^0,w,c
  9227  0010DC  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
  9228  0010DE  5014               	movf	(___aldiv@divisor+3)^0,w,c
  9229  0010E0  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
  9230  0010E2  8017               	bsf	___aldiv@quotient^0,0,c
  9231  0010E4                     l2864:
  9232  0010E4  90D8               	bcf	status,0,c
  9233  0010E6  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
  9234  0010E8  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
  9235  0010EA  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
  9236  0010EC  3211               	rrcf	___aldiv@divisor^0,f,c
  9237  0010EE  2E15               	decfsz	___aldiv@counter^0,f,c
  9238  0010F0  EF55  F008         	goto	l2856
  9239  0010F4                     l2868:
  9240  0010F4  5016               	movf	___aldiv@sign^0,w,c
  9241  0010F6  B4D8               	btfsc	status,2,c
  9242  0010F8  EF80  F008         	goto	u2081
  9243  0010FC  EF82  F008         	goto	u2080
  9244  001100                     u2081:
  9245  001100  EF8A  F008         	goto	l2872
  9246  001104                     u2080:
  9247  001104  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
  9248  001106  1E19               	comf	(___aldiv@quotient+2)^0,f,c
  9249  001108  1E18               	comf	(___aldiv@quotient+1)^0,f,c
  9250  00110A  6C17               	negf	___aldiv@quotient^0,c
  9251  00110C  0E00               	movlw	0
  9252  00110E  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
  9253  001110  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
  9254  001112  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
  9255  001114                     l2872:
  9256  001114  C017  F00D         	movff	___aldiv@quotient,?___aldiv
  9257  001118  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
  9258  00111C  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
  9259  001120  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
  9260  001124  0012               	return		;funcret
  9261  001126                     __end_of___aldiv:
  9262                           	opt callstack 0
  9263                           
  9264 ;; *************** function _desbordamiento *****************
  9265 ;; Defined at:
  9266 ;;		line 88 in file "main.c"
  9267 ;; Parameters:    Size  Location     Type
  9268 ;;		None
  9269 ;; Auto vars:     Size  Location     Type
  9270 ;;		None
  9271 ;; Return value:  Size  Location     Type
  9272 ;;                  1    wreg      void 
  9273 ;; Registers used:
  9274 ;;		wreg, status,2, status,0
  9275 ;; Tracked objects:
  9276 ;;		On entry : 0/0
  9277 ;;		On exit  : 0/0
  9278 ;;		Unchanged: 0/0
  9279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9280 ;;      Params:         0       0       0       0       0       0       0       0       0
  9281 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9282 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9283 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9284 ;;Total ram usage:        0 bytes
  9285 ;; Hardware stack levels used:    1
  9286 ;; This function calls:
  9287 ;;		Nothing
  9288 ;; This function is called by:
  9289 ;;		Interrupt level 2
  9290 ;; This function uses a non-reentrant model
  9291 ;;
  9292                           
  9293                           	psect	intcode
  9294  000008                     __pintcode:
  9295                           	opt callstack 0
  9296  000008                     _desbordamiento:
  9297                           	opt callstack 20
  9298                           
  9299                           ;incstack = 0
  9300  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9301  00000A  ED0F  F00E         	call	int_func,f	;refresh shadow registers
  9302                           
  9303                           	psect	intcode_body
  9304  001C1E                     __pintcode_body:
  9305                           	opt callstack 20
  9306  001C1E                     int_func:
  9307                           	opt callstack 20
  9308  001C1E  0006               	pop		; remove dummy address from shadow register refresh
  9309  001C20                     
  9310                           ;main.c: 90:     if (INTCONbits.TMR0IF) {
  9311  001C20  A4F2               	btfss	242,2,c	;volatile
  9312  001C22  EF15  F00E         	goto	i2u269_41
  9313  001C26  EF17  F00E         	goto	i2u269_40
  9314  001C2A                     i2u269_41:
  9315  001C2A  EF34  F00E         	goto	i2l3514
  9316  001C2E                     i2u269_40:
  9317  001C2E                     
  9318                           ;main.c: 92:         if (esperandoDatos) {
  9319  001C2E  505E               	movf	_esperandoDatos^0,w,c
  9320  001C30  B4D8               	btfsc	status,2,c
  9321  001C32  EF1D  F00E         	goto	i2u270_41
  9322  001C36  EF1F  F00E         	goto	i2u270_40
  9323  001C3A                     i2u270_41:
  9324  001C3A  EF2C  F00E         	goto	i2l3510
  9325  001C3E                     i2u270_40:
  9326  001C3E                     
  9327                           ;main.c: 94:             tiempoInactividadTrans++;
  9328  001C3E  0100               	movlb	0	; () banked
  9329  001C40  2B8D               	incf	_tiempoInactividadTrans& (0+255),f,b
  9330  001C42                     
  9331                           ; BSR set to: 0
  9332                           ;main.c: 96:             if (tiempoInactividadTrans == 2)
  9333  001C42  0E02               	movlw	2
  9334  001C44  198D               	xorwf	_tiempoInactividadTrans& (0+255),w,b
  9335  001C46  A4D8               	btfss	status,2,c
  9336  001C48  EF28  F00E         	goto	i2u271_41
  9337  001C4C  EF2A  F00E         	goto	i2u271_40
  9338  001C50                     i2u271_41:
  9339  001C50  EF2C  F00E         	goto	i2l3510
  9340  001C54                     i2u271_40:
  9341  001C54                     
  9342                           ; BSR set to: 0
  9343                           ;main.c: 97:                 esperaDatoConcluida = 1;
  9344  001C54  0E01               	movlw	1
  9345  001C56  6F8B               	movwf	_esperaDatoConcluida& (0+255),b
  9346  001C58                     i2l3510:
  9347                           
  9348                           ;main.c: 102:         INTCONbits.TMR0IF = 0;
  9349  001C58  94F2               	bcf	242,2,c	;volatile
  9350  001C5A                     
  9351                           ;main.c: 103:         TMR0 = VALOR_TIMER0;
  9352  001C5A  C0F9  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  9353  001C5E  C0FA  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  9354                           
  9355                           ;main.c: 104:         overflowTimer = 1;
  9356  001C62  0E01               	movlw	1
  9357  001C64  0100               	movlb	0	; () banked
  9358  001C66  6F86               	movwf	_overflowTimer& (0+255),b
  9359  001C68                     i2l3514:
  9360                           
  9361                           ;main.c: 108:     if (PIR1bits.RCIF) {
  9362  001C68  AA9E               	btfss	158,5,c	;volatile
  9363  001C6A  EF39  F00E         	goto	i2u272_41
  9364  001C6E  EF3B  F00E         	goto	i2u272_40
  9365  001C72                     i2u272_41:
  9366  001C72  EF40  F00E         	goto	i2l195
  9367  001C76                     i2u272_40:
  9368  001C76                     
  9369                           ;main.c: 110:         byteUart = RCREG;
  9370  001C76  CFAE F08C          	movff	4014,_byteUart	;volatile
  9371  001C7A                     
  9372                           ;main.c: 111:         datoRecibido = 1;
  9373  001C7A  0E01               	movlw	1
  9374  001C7C  0100               	movlb	0	; () banked
  9375  001C7E  6F87               	movwf	_datoRecibido& (0+255),b
  9376  001C80                     i2l195:
  9377  001C80  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9378  001C82  0011               	retfie		f
  9379  001C84                     __end_of_desbordamiento:
  9380                           	opt callstack 0
  9381                           
  9382                           	psect	rparam
  9383  0000                     
  9384                           	psect	temp
  9385  00005F                     btemp:
  9386                           	opt callstack 0
  9387  00005F                     	ds	1
  9388  0000                     int$flags	set	btemp
  9389  0000                     wtemp8	set	btemp+1
  9390  0000                     ttemp5	set	btemp+1
  9391  0000                     ttemp6	set	btemp+4
  9392  0000                     ttemp7	set	btemp+8
  9393                           tosu	equ	0xFFF
  9394                           tosh	equ	0xFFE
  9395                           tosl	equ	0xFFD
  9396                           stkptr	equ	0xFFC
  9397                           pclatu	equ	0xFFB
  9398                           pclath	equ	0xFFA
  9399                           pcl	equ	0xFF9
  9400                           tblptru	equ	0xFF8
  9401                           tblptrh	equ	0xFF7
  9402                           tblptrl	equ	0xFF6
  9403                           tablat	equ	0xFF5
  9404                           prodh	equ	0xFF4
  9405                           prodl	equ	0xFF3
  9406                           indf0	equ	0xFEF
  9407                           postinc0	equ	0xFEE
  9408                           postdec0	equ	0xFED
  9409                           preinc0	equ	0xFEC
  9410                           plusw0	equ	0xFEB
  9411                           fsr0h	equ	0xFEA
  9412                           fsr0l	equ	0xFE9
  9413                           wreg	equ	0xFE8
  9414                           indf1	equ	0xFE7
  9415                           postinc1	equ	0xFE6
  9416                           postdec1	equ	0xFE5
  9417                           preinc1	equ	0xFE4
  9418                           plusw1	equ	0xFE3
  9419                           fsr1h	equ	0xFE2
  9420                           fsr1l	equ	0xFE1
  9421                           bsr	equ	0xFE0
  9422                           indf2	equ	0xFDF
  9423                           postinc2	equ	0xFDE
  9424                           postdec2	equ	0xFDD
  9425                           preinc2	equ	0xFDC
  9426                           plusw2	equ	0xFDB
  9427                           fsr2h	equ	0xFDA
  9428                           fsr2l	equ	0xFD9
  9429                           status	equ	0xFD8


Data Sizes:
    Strings     1079
    Constant    0
    Data        4
    BSS         151
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160     75     157
    BANK1           256      0      72
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_35(CODE[29]), STR_34(CODE[32]), STR_33(CODE[40]), STR_32(CODE[38]), 
		 -> STR_31(CODE[42]), STR_30(CODE[29]), STR_29(CODE[32]), STR_26(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1473_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_35(CODE[29]), STR_34(CODE[32]), STR_33(CODE[40]), STR_32(CODE[38]), 
		 -> STR_31(CODE[42]), STR_30(CODE[29]), STR_29(CODE[32]), STR_26(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 42
		 -> STR_35(CODE[29]), STR_34(CODE[32]), STR_33(CODE[40]), STR_32(CODE[38]), 
		 -> STR_31(CODE[42]), STR_30(CODE[29]), STR_29(CODE[32]), STR_26(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    dameTemperaturaHumedad@Temperatura	PTR unsigned char  size(2) Largest target is 1
		 -> mostrarDatosSensoresWIFI@temperatura(BANK0[1]), mostrarDatosSensores@temperatura(BANK0[1]), estaSeco@temperatura(COMRAM[1]), 

    dameTemperaturaHumedad@Humedad	PTR unsigned char  size(2) Largest target is 1
		 -> mostrarDatosSensoresWIFI@humedad(BANK0[1]), mostrarDatosSensores@humedad(BANK0[1]), NULL(NULL[0]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 72
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), STR_28(CODE[21]), STR_27(CODE[25]), 
		 -> dameDatosSistema@buffer(BANK0[50]), STR_25(CODE[50]), STR_24(CODE[42]), STR_23(CODE[3]), 
		 -> STR_22(CODE[14]), STR_21(CODE[34]), STR_20(CODE[32]), STR_19(CODE[49]), 
		 -> STR_18(CODE[37]), STR_17(CODE[27]), STR_16(CODE[37]), STR_15(CODE[32]), 
		 -> STR_14(CODE[28]), STR_13(CODE[38]), STR_12(CODE[37]), STR_11(CODE[72]), 
		 -> STR_10(CODE[51]), STR_9(CODE[23]), STR_8(CODE[26]), STR_7(CODE[55]), 
		 -> STR_6(CODE[51]), STR_5(CODE[25]), STR_4(CODE[37]), STR_3(CODE[31]), 
		 -> STR_2(CODE[43]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_sistemaPrincipal
    _sistemaRegado->_encenderBombas
    _encenderBombas->_estaSeco
    _estaSeco->_dameTemperaturaHumedad
    _dameHoraActual->_leer_rtc
    _leer_rtc->_i2c_envia_dato
    _leer_rtc->_i2c_recibe_dato
    _sistemaPrincipal->_dameDatosSistema
    _setTiempoRegar->_escribeHorariosMemoria
    _mostrarMenu->_UART_printf
    _lecturaWifi->_restablecerDatosSensor
    _restablecerDatosSensor->_constructorSensor
    _constructorSensor->___wmul
    _map->___aldiv
    _lecturaAnalogaSensores->___wmul
    _dameTemperaturaHumedad->_UART_printf
    _fijaHoraRtc->_setRtc
    _setRtc->_escribe_rtc
    _escribe_rtc->_i2c_envia_dato
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _asignarHorarios->_escribeHorariosMemoria
    _escribeHorariosMemoria->_escribe_eeprom
    _escribe_eeprom->___wmul
    _UART_printf->_UART_write
    _leeHorariosMemoria->___wmul
    _leeHorariosMemoria->_leer_eeprom
    _leer_eeprom->_i2c_envia_dato
    _leer_eeprom->_i2c_recibe_dato
    _i2c_reinicia_com->_i2c_espera
    _i2c_recibe_dato->_i2c_espera
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera
    _inicializarObjetos->___wmul
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _desbordamiento in COMRAM

    None.

Critical Paths under _main in BANK0

    _sistemaPrincipal->_mostrarDatosSensores
    _mostrarDatosSensoresWIFI->_sprintf
    _mostrarDatosSensores->_sprintf
    _dameDatosSistema->_sprintf

Critical Paths under _desbordamiento in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _desbordamiento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _desbordamiento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _desbordamiento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _desbordamiento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _desbordamiento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _desbordamiento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _desbordamiento in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  139318
                          _UART_init
                      _configurarAdc
                        _i2c_iniciar
                 _inicializarObjetos
                 _leeHorariosMemoria
                        _mostrarMenu
             _restablecerDatosSensor
                   _sistemaPrincipal
                      _sistemaRegado
 ---------------------------------------------------------------------------------
 (1) _sistemaRegado                                        0     0      0   27607
                     _dameHoraActual
                     _encenderBombas
                          _horaRegar
             _lecturaAnalogaSensores
                        _lecturaWifi
                        _mostrarMenu
 ---------------------------------------------------------------------------------
 (2) _horaRegar                                            3     1      2       0
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _encenderBombas                                       5     5      0    8704
                                             20 COMRAM     5     5      0
                             ___wmul
                           _estaSeco
 ---------------------------------------------------------------------------------
 (3) _estaSeco                                             5     2      3    4226
                                             15 COMRAM     5     2      3
                             ___wmul (ARG)
             _dameTemperaturaHumedad
 ---------------------------------------------------------------------------------
 (2) _dameHoraActual                                       0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (3) _leer_rtc                                             2     2      0      90
                                              2 COMRAM     2     2      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (3) _convertirDato                                        3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _sistemaPrincipal                                     3     3      0   94432
                                             90 COMRAM     3     3      0
                        _UART_printf
                    _asignarHorarios
                   _dameDatosSistema
                        _fijaHoraRtc
               _mostrarDatosSensores
           _mostrarDatosSensoresWIFI
                        _mostrarMenu
                     _setTiempoRegar
 ---------------------------------------------------------------------------------
 (2) _setTiempoRegar                                       8     8      0    8117
                                             14 COMRAM     8     8      0
                        _UART_printf
                          _UART_read
                         _UART_write
             _escribeHorariosMemoria
 ---------------------------------------------------------------------------------
 (2) _mostrarMenu                                          0     0      0    2727
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensoresWIFI                            56    56      0   30064
                                             87 COMRAM     2     2      0
                                             20 BANK0     54    54      0
                        _UART_printf
                         _UART_write
                             ___wmul
             _dameTemperaturaHumedad
                        _lecturaWifi
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaWifi                                          3     3      0   11680
                                             13 COMRAM     3     3      0
                        _UART_printf
                          _UART_read
                         _UART_write
                             ___wmul
             _restablecerDatosSensor
 ---------------------------------------------------------------------------------
 (3) _restablecerDatosSensor                               2     2      0    4590
                                             11 COMRAM     2     2      0
                             ___wmul
                  _constructorSensor
 ---------------------------------------------------------------------------------
 (4) _constructorSensor                                    5     0      5     297
                                              6 COMRAM     5     0      5
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensores                                55    55      0   24316
                                             20 BANK0     55    55      0
                        _UART_printf
                         _UART_write
                             ___wmul
             _dameTemperaturaHumedad
             _lecturaAnalogaSensores
                                _map
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _map                                                 20     0     20    1660
                                             26 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _lecturaAnalogaSensores                               3     3      0    4315
                                              6 COMRAM     3     3      0
                             ___wmul
                   _dameHumedadSuelo
 ---------------------------------------------------------------------------------
 (3) _dameHumedadSuelo                                     5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _dameTemperaturaHumedad                              12     8      4    3526
                                              3 COMRAM    12     8      4
                     _DHT11_ReadData
                        _DHT11_Start
                        _UART_printf
                     _check_response
 ---------------------------------------------------------------------------------
 (5) _check_response                                       1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fijaHoraRtc                                          0     0      0    3869
                        _UART_printf
                        _escribe_rtc
                             _setRtc
 ---------------------------------------------------------------------------------
 (3) _setRtc                                               7     7      0     696
                                              4 COMRAM     7     7      0
                          _UART_read
                         _UART_write
                        _escribe_rtc
 ---------------------------------------------------------------------------------
 (4) _escribe_rtc                                          2     1      1     446
                                              2 COMRAM     2     1      1
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (2) _dameDatosSistema                                    55    55      0   14634
                                             87 COMRAM     3     3      0
                                             20 BANK0     52    52      0
                        _UART_printf
                         _UART_write
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             20    10     10    7520
                                              0 BANK0     20    10     10
                             ___wmul (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _asignarHorarios                                      5     5      0    7956
                                             14 COMRAM     5     5      0
                        _UART_printf
                          _UART_read
                         _UART_write
             _escribeHorariosMemoria
 ---------------------------------------------------------------------------------
 (3) _escribeHorariosMemoria                               4     4      0    4929
                                             10 COMRAM     4     4      0
                             ___wmul
                     _escribe_eeprom
 ---------------------------------------------------------------------------------
 (4) _escribe_eeprom                                       4     1      3     544
                                              6 COMRAM     4     1      3
                             ___wmul (ARG)
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (3) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2    2727
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _leeHorariosMemoria                                   4     4      0    4725
                                              6 COMRAM     4     4      0
                             ___wmul
                        _leer_eeprom
 ---------------------------------------------------------------------------------
 (2) _leer_eeprom                                          4     2      2     340
                                              2 COMRAM     4     2      2
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_recibe_dato                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializarObjetos                                   2     2      0    4337
                                              6 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    4203
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     900
                                             26 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     756
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _desbordamiento                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _configurarAdc
   _i2c_iniciar
   _inicializarObjetos
     ___wmul
   _leeHorariosMemoria
     ___wmul
     _leer_eeprom
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
       _i2c_recibe_dato
         _i2c_espera
       _i2c_reinicia_com
         _i2c_espera
   _mostrarMenu
     _UART_printf
       _UART_write
   _restablecerDatosSensor
     ___wmul
     _constructorSensor
       ___wmul (ARG)
   _sistemaPrincipal
     _UART_printf
       _UART_write
     _asignarHorarios
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
     _dameDatosSistema
       _UART_printf
         _UART_write
       _UART_write
       ___wmul
       _sprintf
         ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _fijaHoraRtc
       _UART_printf
         _UART_write
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
       _setRtc
         _UART_read
         _UART_write
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
     _mostrarDatosSensores
       _UART_printf
         _UART_write
       _UART_write
       ___wmul
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaAnalogaSensores
         ___wmul
         _dameHumedadSuelo
       _map
         ___aldiv
           ___lmul (ARG)
         ___lmul
         ___wmul (ARG)
       _sprintf
         ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _mostrarDatosSensoresWIFI
       _UART_printf
         _UART_write
       _UART_write
       ___wmul
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaWifi
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
         ___wmul
         _restablecerDatosSensor
           ___wmul
           _constructorSensor
             ___wmul (ARG)
       _sprintf
         ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _mostrarMenu
       _UART_printf
         _UART_write
     _setTiempoRegar
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
   _sistemaRegado
     _dameHoraActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _encenderBombas
       ___wmul
       _estaSeco
         ___wmul (ARG)
         _dameTemperaturaHumedad (ARG)
           _DHT11_ReadData
           _DHT11_Start
           _UART_printf
             _UART_write
           _check_response
     _horaRegar
     _lecturaAnalogaSensores
       ___wmul
       _dameHumedadSuelo
     _lecturaWifi
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       ___wmul
       _restablecerDatosSensor
         ___wmul
         _constructorSensor
           ___wmul (ARG)
     _mostrarMenu
       _UART_printf
         _UART_write

 _desbordamiento (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      48       7       28.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4B      9D       5       98.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     143      20        0.0%
DATA                 0      0     143       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat May 02 00:46:50 2020

                 __size_of_escribe_eeprom 0030                                        l81 21F4  
                                      l90 22F8                                        l75 22BE  
                                      l84 22F0                                        l93 22D6  
                                      l87 22E8                                        l96 2292  
                                      l99 2278                            ?_configurarAdc 0001  
                     ___wmul@multiplicand 0003                               __CFG_BORV$3 000000  
          __end_of_dameTemperaturaHumedad 17A2                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                                       l102 21CE  
                                     l121 1E7E                                       l201 22CA  
                                     l105 223A                                       l130 229A  
                                     l204 22E0                                       l220 21A4  
                                     l212 2178                                       l133 22A8  
                                     l118 1AE2                                       l126 1EB4  
                                     l230 1626                                       l127 1EB6  
                                     l311 1FC4                                       l152 1E62  
                                     l144 1E10                                       l160 206A  
                                     l217 196E                                       l233 214C  
                                     l241 13CE                                       l313 1FD2  
                                     l209 1F58                                       l314 1FE6  
                                     l139 1E06                                       l155 225A  
                                     l236 20E6                                       l308 07A2  
                                     l149 1E40                                       l333 1BB4  
                                     l246 1560                                       l422 166E  
                                     l319 1D46                                       l328 1216  
                                     l336 1CE4                                       l360 1842  
                                     l425 16B0                                       l433 039A  
                                     l273 02F8                                       l291 0ED6  
                                     l427 16EC                                       l435 03A2  
                                     l460 0956                                       l372 17A0  
                                     l453 05DA                                       l365 1300  
                                     l349 19F8                                       l470 221A  
                                     l278 1C1C                                       l198 1A72  
                                     l288 0E98                                       l481 1B3C  
                                     l377 0D8E                                       l385 1018  
                                     l466 1DA0                                       l482 1B4C  
                                     l467 1DA8                                       l549 1124  
                                     l584 0ADE                                       l597 0C42  
                            __CFG_CPB$OFF 000000                              __CFG_CPD$OFF 000000  
                            __CFG_BOR$OFF 000000                                       _abs 206C  
                                     _pad 1628                                       _map 19FA  
                                     prod 000FF3                                       wreg 000FE8  
                __end_of_dameDatosSistema 1302                              __CFG_LVP$OFF 000000  
                       ?_i2c_reinicia_com 0001                              ?_escribe_rtc 0003  
                            __CFG_WDT$OFF 000000                                      ?_abs 0013  
                                    l1160 1498                                      l3000 11FE  
                                    l1145 20A2                                      l3002 120E  
                                    l1148 20AA                                      l3020 1EB8  
                                    l3012 1B56                                      l3004 1214  
                                    l3022 1ECA                                      l3014 1B84  
                                    l3006 1B4E                                      l3110 02F2  
                                    l3102 0266                                      l1175 1F08  
                                    l3040 20D6                                      l2400 13D0  
                                    l1168 202A                                      l1184 211C  
                                    l3024 1ED2                                      l3120 1BD4  
                                    l3016 1B94                                      l3104 02C2  
                                    l3032 214E                                      l3042 20E4  
                                    l1178 22FE                                      l2410 1452  
                                    l2402 13E2                                      l3026 1EDA  
                                    l3130 1C12                                      l3122 1BE4  
                                    l3018 1B98                                      l3210 0626  
                                    l3106 02C6                                      l3132 0D90  
                                    l2404 13F4                                      l2420 200A  
                                    l3028 1EF6                                      l3300 12D8  
                                    l3124 1BF0                                      l3116 1BB6  
                                    l3220 0650                                      l3212 0638  
                                    l3204 0600                                      l3036 217A  
                                    l3108 02E2                                      l3060 00B0  
                                    l3052 0022                                      l3038 20AC  
                                    l3150 0DEC                                      l3142 0DB4  
                                    l3134 0D94                                      l2510 0B16  
                                    l2502 0AE0                                      l2406 13FE  
                                    l2414 1FE8                                      l2422 20E8  
                                    l3302 12DE                                      l3126 1BF6  
                                    l3118 1BCE                                      l3310 0EE2  
                                    l3230 066E                                      l3222 0654  
                                    l3214 063C                                      l3206 0606  
                                    l3070 00FE                                      l3054 0064  
                                    l3046 0012                                      l3400 22D8  
                                    l3160 0E08                                      l3152 0DF0  
                                    l3144 0DBA                                      l3136 0DA0  
                                    l2520 0B7E                                      l2512 0B24  
                                    l2504 0AE4                                      l2408 141C  
                                    l2416 1FF4                                      l2424 20F4  
                                    l2440 1666                                      l2432 1628  
                                    l2600 059A                                      l3304 12FA  
                                    l3128 1C06                                      l3320 0F3C  
                                    l3312 0EF4                                      l3232 068A  
                                    l3216 0640                                      l3208 0616  
                                    l3224 065C                                      l3072 0140  
                                    l3064 00B6                                      l3056 0066  
                                    l3410 194E                                      l3402 18DA  
                                    l2610 22EE                                      l3170 0E3E  
                                    l3154 0DF4                                      l3146 0DCA  
                                    l3162 0E10                                      l2522 0B8C  
                                    l2530 0BF2                                      l2514 0B44  
                                    l2506 0AF2                                      l2418 2006  
                                    l2426 20F8                                      l2450 16D4  
                                    l2442 167A                                      l2434 1638  
                                    l2602 05A2                                      l3330 0F92  
                                    l3322 0F5A                                      l3306 0ED8  
                                    l3250 06E4                                      l3234 069A  
                                    l3226 0660                                      l3218 064C  
                                    l3090 0218                                      l3082 018E  
                                    l3066 00F8                                      l3058 006E  
                                    l3412 1952                                      l2540 21D0  
                                    l2612 22F2                                      l2620 22D6  
                                    l3420 14AA                                      l3180 0E74  
                                    l3172 0E4E                                      l3164 0E14  
                                    l3156 0E00                                      l3148 0DDA  
                                    l2460 095C                                      l2532 0C02  
                                    l2524 0BBA                                      l2516 0B62  
                                    l2508 0B12                                      l2428 2110  
                                    l2444 168E                                      l2436 164C  
                                    l2604 05B2                                      l2700 08B4  
                                    l3340 0C44                                      l3324 0F6A  
                                    l3332 0FAE                                      l3308 0EDC  
                                    l3260 070E                                      l3252 06F6  
                                    l3244 06BE                                      l3236 06AA  
                                    l3228 066A                                      l3084 01D0  
                                    l3076 0146                                      l2542 21E6  
                                    l2614 22F6                                      l3430 1540  
                                    l3422 14D8                                      l3414 149A  
                                    l2630 1DD6                                      l3190 0EC8  
                                    l3182 0E84                                      l3174 0E5E  
                                    l3158 0E04                                      l3166 0E1E  
                                    l2470 09BC                                      l2462 096A  
                                    l2534 0C22                                      l2526 0BDA  
                                    l2518 0B6A                                      l2454 206C  
                                    l2446 1692                                      l2438 165A  
                                    l2550 0342                                      l2702 08D8  
                                    l2710 0906                                      l3350 0CA2  
                                    l3342 0C58                                      l3334 0FDE  
                                    l3318 0EFC                                      l3270 072C  
                                    l3262 0712                                      l3254 06FA  
                                    l3246 06C4                                      l3238 06B6  
                                    l3094 021E                                      l3078 0188  
                                    l3408 18E2                                      l2616 22CE  
                                    l2608 22EA                                      l3432 1544  
                                    l3424 14DC                                      l2544 2296  
                                    l2624 1DAA                                      l3192 0ED0  
                                    l3184 0E94                                      l3176 0E6A  
                                    l3168 0E22                                      l2480 0A06  
                                    l2472 09C0                                      l2464 098A  
                                    l2528 0BEC                                      l2456 2086  
                                    l2448 16C0                                      l2560 03AA  
                                    l2552 0362                                      l2712 0914  
                                    l2704 08E6                                      l2640 1E24  
                                    l2632 1E08                                      l3360 0CBC  
                                    l3352 0CAE                                      l3344 0C5E  
                                    l3336 0FEA                                      l3328 0F8C  
                                    l3280 0788                                      l3272 0748  
                                    l3256 06FE                                      l3248 06D4  
                                    l3264 071A                                      l3440 1988  
                                    l3096 0260                                      l3088 01D6  
                                    l2538 21D0                                      l2618 22D2  
                                    l2730 22E2                                      l3426 150E  
                                    l2626 1DAE                                      l3186 0EA8  
                                    l3178 0E70                                      l2490 0A76  
                                    l2482 0A14                                      l2474 09CC  
                                    l2466 098E                                      l2458 0958  
                                    l2570 03E0                                      l2562 03BC  
                                    l2554 0372                                      l2546 02FA  
                                    l2706 08FA                                      l3290 122A  
                                    l2650 1E60                                      l2642 1E32  
                                    l3370 0D88                                      l3362 0D38  
                                    l3354 0CB2                                      l3346 0C7A  
                                    l2810 1D26                                      l2802 1CE6  
                                    l3338 1012                                      l3282 079E  
                                    l3274 0758                                      l3266 071E  
                                    l3258 070A                                      l3194 05DC  
                                    l3442 1990                                      l3434 1972  
                                    l3530 1844                                      l3380 1A76  
                                    l3372 22AA                                      l2724 21F6  
                                    l2740 228C                                      l2732 22E6  
                                    l3428 153C                                      l2628 1DD2  
                                    l3188 0EB4                                      l2492 0A88  
                                    l2484 0A26                                      l2476 09EA  
                                    l2468 099C                                      l2572 03E6  
                                    l2580 04D8                                      l2564 03CA  
                                    l2556 0374                                      l2548 031A  
                                    l2716 0920                                      l2820 1D84  
                                    l2644 1E3A                                      l2660 2258  
                                    l3364 0D5A                                      l3348 0C86  
                                    l2812 1D2A                                      l3284 1C84  
                                    l3276 0768                                      l3268 0728  
                                    l3196 05E0                                      l3436 1978  
                                    l3452 19B0                                      l2900 1F22  
                                    l3540 186C                                      l3532 184E  
                                    l3390 1AD8                                      l3382 1A78  
                                    l3374 22AE                                      l2726 2212  
                                    l2742 228E                                      l2734 227A  
                                    l2750 1E64                                      l2486 0A54  
                                    l2478 09F2                                      l2494 0A8E  
                                    l2582 04F2                                      l2590 0554  
                                    l2574 0468                                      l2566 03D0  
                                    l2558 038E                                      l2718 0944  
                                    l2814 1D48                                      l3286 1218  
                                    l2910 1564                                      l2646 1E4E  
                                    l2638 1E1E                                      l2654 223C  
                                    l2670 204E                                      l2662 202C  
                                    l2830 1B1C                                      l2822 1AE4  
                                    l3366 0D66                                      l3278 0774  
                                    l3198 05EC                                      l3446 1998  
                                    l3438 1980                                      l3454 19F2  
                                    l2902 1F3E                                      l3614 027C  
                                    l3470 17D4                                      l3462 17A2  
                                    l3550 1880                                      l3542 1870  
                                    l3534 1852                                      l2840 1040  
                                    l2832 101A                                      l3392 1ADA  
                                    l3384 1AAC                                      l3376 1A74  
                                    l2744 2290                                      l2736 227E  
                                    l2752 1E8C                                      l2496 0A9E  
                                    l2488 0A74                                      l2592 0566  
                                    l2584 0510                                      l2576 046E  
                                    l2568 03D8                                      l2816 1D50  
                                    l3296 1234                                      l3288 121E  
                                    l2920 1586                                      l2648 1E50  
                                    l2656 2240                                      l2672 205C  
                                    l2664 2030                                      l2824 1AF4  
                                    l3368 0D6C                                      l2680 22C0  
                                    l2808 1CEE                                      l3456 19F6  
                                    l3616 19C4                                      l3448 19A0  
                                    l2904 1F4E                                      l3480 1812  
                                    l3472 17D6                                      l3464 17B4  
                                    l3560 1894                                      l3552 1884  
                                    l3544 1874                                      l3536 1854  
                                    l2850 1088                                      l2842 104E  
                                    l2834 101E                                      l3394 1ADC  
                                    l3386 1AD4                                      l3378 1A74  
                                    l2738 2284                                      l2754 1E9C  
                                    l2498 0ABE                                      l2594 0576  
                                    l2586 052A                                      l2578 0474  
                                    l2690 07EC                                      l2682 07A4  
                                    l2818 1D5E                                      l3298 12CC  
                                    l2922 1596                                      l2930 15CE  
                                    l2658 2250                                      l2674 2064  
                                    l2666 2038                                      l2770 170A  
                                    l2762 16EE                                      l2826 1B02  
                                    l2906 1F52                                      l3474 17E8  
                                    l3466 17B8                                      l3570 18C6  
                                    l3562 18A6                                      l3554 188C  
                                    l3546 1878                                      l3538 1858  
                                    l2860 10D2                                      l2852 1090  
                                    l2844 105E                                      l2836 102C  
                                    l3396 1ADE                                      l3388 1AD6  
                                    l2756 1EAC                                      l2596 057C  
                                    l2588 0544                                      l2692 0810  
                                    l2684 07C8                                      l2748 225E  
                                    l2940 160C                                      l2932 15D2  
                                    l2924 15A8                                      l2916 1570  
                                    l2668 2046                                      l2676 2068  
                                    l2780 179C                                      l2772 172E  
                                    l2764 16F2                                      l2828 1B12  
                                    l3468 17CC                                      l3476 17F8  
                                    l3572 18CE                                      l3564 18AA  
                                    l3556 188E                                      l3548 187C  
                                    l2870 1104                                      l2862 10E2  
                                    l2854 109C                                      l2846 1062  
                                    l2838 103C                                      l3398 1AE0  
                                    l2758 1EB0                                      l2950 1312  
                                    l2598 058E                                      l2694 0834  
                                    l2686 07D6                                      l2942 161C  
                                    l2934 15DC                                      l2926 15BE  
                                    l2918 1576                                      l2782 179E  
                                    l2774 1764                                      l2766 16F2  
                                    l2790 1FAC                                      l3494 1824  
                                    l3478 17FC                                      l3566 18AE  
                                    l3558 1890                                      ?_map 001B  
                                    ?_pad 0011                                      l2872 1114  
                                    l2864 10E4                                      l2856 10AA  
                                    l2848 1072                                      l2784 211E  
                                    l2960 13AE                                      l2952 1342  
                                    l2944 1302                                      l2696 087C  
                                    l2688 07E8                                      l2936 15E0  
                                    l2928 15C6                                      l2776 1774  
                                    l2768 16F6                                      l2792 1FAE  
                                    l3496 1828                                      l3568 18B4  
                                    l2866 10EE                                      l2858 10B4  
                                    l2786 213E                                      l2962 13B2  
                                    l2954 1346                                      l2938 15FC  
                                    l2778 1790                                      l2794 1FC0  
                                    l2970 112C                                      l2882 221E  
                                    l3498 183E                                      l2868 10F4  
                                    l2956 137A                                      l2796 1FC2  
                                    l2788 1FA4                                      l2892 19FA  
                                    l2972 1132                                      l2964 1126  
                                    l2884 221E                                      l2876 21A8  
                                    l2958 13AA                                      l2798 1FD4  
                                    l2990 117A                                      l2974 113E  
                                    l2966 1128                                      l2886 2226  
                                    l2878 21CC                                      l2992 118A  
                                    l2984 1164                                      l2976 1144  
                                    l2968 1128                                      l2888 2238  
                                    l2896 1F0A                                      l2994 11B6  
                                    l2986 1170                                      l2978 1156  
                                    l2898 1F1E                                      l2996 11DE  
                                    l2988 1176                                      l2998 11E2  
                            ?_leer_eeprom 0003                                      STR_1 7FD0  
                                    STR_2 7CDC                                      STR_3 7EE5  
                                    STR_4 7E19                                      STR_5 7F72  
                                    STR_6 7C46                                      STR_7 7C0F  
                                    STR_8 7F58                                      STR_9 7FA4  
                                    u2000 1DA0                                      u2001 1D9C  
                                    u2010 1B02                                      u2011 1AFE  
                                    u2020 1B3C                                      u2100 1F4E  
                                    u2021 1B38                                      u2101 1F4A  
                                    u2030 102C                                      u2110 1586  
                                    u2031 1028                                      u2111 1582  
                                    u2040 104E                                      u1400 141C  
                                    u2120 1596                                      u2200 11FE  
                                    u2041 104A                                      u1401 1418  
                                    u2121 1592                                      u2201 11FA  
                                    u2050 1088                                      u1410 1452  
                                    u2130 15A8                                      u2210 1BB4  
                                    u2051 1084                                      u1411 144E  
                                    u2131 15A4                                      u2211 1BB0  
                                    u2060 10AA                                      u1500 099C  
                                    u1420 202A                                      u2140 15FC  
                                    u2300 0218                                      u2220 2172  
                                    u2061 10A6                                      u1501 0998  
                                    u1421 2026                                      u2141 15F8  
                                    u2301 0214                                      u2221 216C  
                                    u2070 10D2                                      u1430 2110  
                                    u2150 160C                                      u2310 0260  
                                    u2230 2174                                      u2071 10CE  
                                    u1511 09C6                                      u1431 210C  
                                    u2151 1608                                      u2311 025C  
                                    u2080 1104                                      u2400 0E4E  
                                    u1520 09EA                                      u1600 0BBA  
                                    u1440 1638                                      u2160 161C  
                                    u2320 02E2                                      u2240 0064  
                                    _LATD 000F8C                                      u2081 1100  
                                    u2401 0E4A                                      u1521 09E6  
                                    u1601 0BB6                                      u1441 1634  
                                    u2161 1618                                      u2321 02DE  
                                    u2241 0060                                      u2170 13CE  
                                    u2410 0E5E                                      u1530 0A14  
                                    u1610 0C02                                      u1450 165A  
                                    u2090 1F3E                                      u2330 02F2  
                                    u2250 00B0                                      u2171 13CA  
                                    u2411 0E5A                                      u1531 0A10  
                                    u1611 0BFE                                      u1451 1656  
                                    u2091 1F3A                                      u2331 02EE  
                                    u2251 00AC                                      u1620 21E6  
                                    u2420 0E84                                      u1540 0A54  
                                    u1380 13E2                                      u1460 16B0  
                                    u1700 03BC                                      u2340 1BE4  
                                    u2180 1156                                      u2500 06AA  
                                    u2260 00F8                                      u1621 21E2  
                                    u2421 0E80                                      u1541 0A50  
                                    u1381 13DE                                      u1461 16AC  
                                    u1701 03B8                                      u2341 1BE0  
                                    u2181 1152                                      u2501 06A6  
                                    u2261 00F4                                      u1630 21F4  
                                    u2430 0E94                                      u1550 0A9E  
                                    u1390 13F4                                      u1470 16C0  
                                    u1710 03CA                                      u2350 1C06  
                                    u2190 118A                                      u2510 06D4  
                                    u2270 0140                                      u1631 21F0  
                                    u2431 0E90                                      u1551 0A9A  
                                    u1391 13F0                                      u1471 16BC  
                                    u1711 03C6                                      u2351 1C02  
                                    u2191 1186                                      u2511 06D0  
                                    u2271 013C                                      u1640 22A8  
                                    u1800 1DCE                                      u2440 0EA8  
                                    u2360 0DCA                                      u1560 0AF2  
                                    u1480 2086                                      u1720 04F2  
                                    u2600 0FAE                                      u2520 06E4  
                                    u2280 0188                                      u1641 22A4  
                                    u2441 0EA4                                      u2361 0DC6  
                                    u1561 0AEE                                      u1481 2082  
                                    u1721 04EE                                      u2601 0FAA  
                                    u2521 06E0                                      u2281 0184  
                                    u1810 1DF6                                      u2370 0DDA  
                                    u1490 096A                                      u1570 0B24  
                                    u1730 0510                                      u1650 032A  
                                    u2610 0D88                                      u2530 06F6  
                                    u2450 0616                                      u2290 01D0  
                                    u2371 0DD6                                      u1491 0966  
                                    u1571 0B20                                      u1731 050C  
                                    u1651 0324                                      u2611 0D84  
                                    u2531 06F2                                      u2451 0612  
                                    u2291 01CC                                      u2620 196E  
                                    u1820 1E06                                      u2380 0DEC  
                                    u1580 0B62                                      u1740 052A  
                                    u1660 032C                                      u1900 0810  
                                    u2540 0748                                      u2460 0626  
                                    u2621 196A                                      u1821 1E02  
                                    u2381 0DE8                                      u1581 0B5E  
                                    u1741 0526                                      u1901 080C  
                                    u2541 0744                                      u2461 0622  
                                    u2630 1560                                      u2390 0E3E  
                                    u1590 0B8C                                      u1750 0544  
                                    u1670 0342                                      u1910 0834  
                                    u1830 1E1E                                      u2550 0758  
                                    u2470 0638                                      u2631 155C  
                                    u1807 1DC4                                      u2391 0E3A  
                                    u1591 0B88                                      u1751 0540  
                                    u1671 033E                                      u1911 0830  
                                    u1831 1E1A                                      u2551 0754  
                                    u2471 0634                                      u1760 0554  
                                    u1680 0372                                      u1920 08D8  
                                    u1840 1E32                                      u2560 0768  
                                    u2480 068A                                      u2640 17B4  
                                    u1817 1DEC                                      u1761 0550  
                                    u1681 036E                                      u1921 08D4  
                                    u1841 1E2E                                      u2561 0764  
                                    u2481 0686                                      u2641 17B0  
                                    u1930 1E8C                                      u1770 0566  
                                    u1690 038E                                      u2570 12FA  
                                    u1850 1E4E                                      u2490 069A  
                                    u2650 17CC                                      u2730 18A6  
                                    u1931 1E88                                      u1771 0562  
                                    u1691 038A                                      u2571 12F6  
                                    u1851 1E4A                                      u2491 0696  
                                    u2651 17C8                                      u2731 18A2  
                                    u1940 1E9C                                      u1780 0576  
                                    u1860 1E60                                      u2580 0EF4  
                                    u2660 17E8                                      u2740 18C6  
                                    u1941 1E98                                      u1781 0572  
                                    u1861 1E5C                                      u2581 0EF0  
                                    u2661 17E4                                      u2741 18C2  
                                    u1950 1EAC                                      u1790 058E  
                                    u1870 2046                                      u2590 0F3C  
                                    u2670 1812                                      u1951 1EA8  
                                    u1791 058A                                      u2807 2246  
                                    u1871 2042                                      u2591 0F38  
                                    u2671 180E                                      u1880 205C  
                                    u1960 170A                                      u2680 1824  
                                    u2817 2254                                      u1881 2058  
                                    u1961 1706                                      u2681 1820  
                                    u1890 07C8                                      u1970 1764  
                                    u1891 07C4                                      u2827 1E20  
                                    u1971 1760                                      u1980 1FD2  
                                    u2837 2144                                      u1981 1FCE  
                                    u2757 1B8A                                      u1990 1D46  
                                    u2847 20DC                                      u2767 1FA6  
                                    u1991 1D42                                      u2777 2032  
                                    u2787 2048                                      u2797 205E  
                                    _TMR0 000FD6                      _minutosTranscurridos 0084  
                      ??_i2c_reinicia_com 0002                            _check_response 202C  
                 escribeHorariosMemoria@i 000D                             ??_i2c_detener 0002  
                                    abs@a 0013                                      _dbuf 008E  
                                    _main 1844                                      _dtoa 02FA  
                                    _hora 008A                                      _prec 007C  
                                    _nout 0078                                      pad@i 0018  
                                    pad@p 0015                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    pad@w 001A                                      map@x 001B  
                                    fsr2l 000FD9                                      btemp 005F  
                          ?_sistemaRegado 0001                  __size_of_asignarHorarios 0148  
                           ??_i2c_iniciar 0001                                      prodh 000FF4  
                                    prodl 000FF3                                      start 000E  
                ??_restablecerDatosSensor 000C                             __CFG_IESO$OFF 000000  
                        ??_DHT11_ReadData 0001                         _constructorSensor 22C0  
                    __size_of_DHT11_Start 0020                              ?_lecturaWifi 0001  
                 __size_of_setTiempoRegar 01C8                              ___param_bank 000000  
                      ?_constructorSensor 0007                        setTiempoRegar@hora 0010  
                      _leeHorariosMemoria 149A                          ??_encenderBombas 0015  
                                   ??_abs 0015                                     ??_map 002F  
                                   ??_pad 0017                            _i2c_envia_dato 22CC  
                           __CFG_PLLDIV$1 000000                            _i2c_inicia_com 22EA  
                         __end_of___aldiv 1126                           __end_of___aodiv 0AE0  
                                   ?_main 0001                                     ?_dtoa 001C  
                         __end_of___aomod 0C44                             _convertirDato 221C  
                                   STR_10 7C46                                     STR_11 7BC7  
                                   STR_20 7EA5                                     STR_12 7DCF  
                                   STR_21 7E63                                     STR_13 7D83  
                                   STR_22 7FF0                                     STR_14 7F21  
                                   STR_30 7F04                                     STR_23 7F6F  
                                   STR_15 7E85                                     STR_31 7D31  
                                   STR_16 7DF4                                     STR_32 7DA9  
                                   STR_24 7D07                                     STR_17 7F3D  
                                   STR_33 7D5B                                     STR_25 7C79  
                                   STR_34 7EC5                                     STR_26 7FE0  
                                   STR_18 7E3E                                     STR_35 7F04  
                                   STR_27 7F8B                                     STR_19 7CAB  
                                   STR_28 7FBB                                     STR_29 7EC5  
                     ??_constructorSensor 000C                         convertirDato@dato 0002  
                                   _T0CON 000FD5                       ?_leeHorariosMemoria 0001  
                                   i2l195 1C80                                     _RCREG 000FAE  
                            vfpfcnvrt@fmt 0042                                     _SPBRG 000FAF  
                           __CFG_USBDIV$1 000000                                     _TRISD 000F95  
                                   _TXREG 000FAD                             __CFG_PWRT$OFF 000000  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                       ___lmul@multiplicand 0005  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                      __size_of_UART_init 0070                        __size_of_UART_read 0054  
                                   _flags 007E                                     _fputc 13D0  
                                   _fputs 1FE8                    __end_of_check_response 206C  
                             ?_UART_write 0001                                     pad@fp 0011  
                                   _width 007A                                     _putch 22FE  
                                   dtoa@d 001E                                     dtoa@i 003E  
                                   dtoa@n 0036                                     dtoa@p 0030  
                                   dtoa@s 0034                                     dtoa@w 0032  
                                   tablat 000FF5                                     plusw2 000FDB  
       __size_of_mostrarDatosSensoresWIFI 0142                                     ttemp5 0060  
                                   ttemp6 0063                                     ttemp7 0067  
                                   status 000FD8                 ?_mostrarDatosSensoresWIFI 0001  
                                   wtemp8 0060                           __end_of_sprintf 1F0A  
                      escribe_eeprom@dato 0009                 __end_of_constructorSensor 22CC  
                    ??_leeHorariosMemoria 0007                            __CFG_ICPRT$OFF 000000  
                              _i2c_espera 21D0                          ??_dameHoraActual 0005  
                          __CFG_MCLRE$OFF 000000                           __initialization 1F5A  
                         setTiempoRegar@i 0011                       __end_of_i2c_detener 22FA  
         __size_of_lecturaAnalogaSensores 0068                    __end_of_i2c_envia_dato 22D8  
                            __end_of_main 18DA                              __end_of_dtoa 05DC  
                ??_escribeHorariosMemoria 000B                           ??_configurarAdc 0001  
                     setTiempoRegar@i_840 0013                    __end_of_i2c_inicia_com 22F2  
                      _inicializarObjetos 18DA                       __end_of_i2c_iniciar 22C0  
                  sistemaPrincipal@opcion 005D                          _dameHumedadSuelo 1FA2  
                          ?_convertirDato 0001                      __size_of_fijaHoraRtc 0068  
                                  ??_main 005E                                    ??_dtoa 0026  
               setTiempoRegar@tiempoRegar 000F                             __activetblptr 000002  
                     ?_inicializarObjetos 0001                        i2c_envia_dato@dato 0002  
                         __CFG_CCP2MX$OFF 000000                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    ?_fputc 0001  
                                  ?_fputs 000A                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                           ?_check_response 0001  
                  encenderBombas@flagSeco 0017                                    ?_putch 0001  
                      convertirDato@datoR 0003                                    i2l3500 1C20  
                                  i2l3510 1C58                                    i2l3502 1C2E  
                                  i2l3512 1C5A                                    i2l3504 1C3E  
                                  i2l3506 1C42                                    i2l3514 1C68  
                                  i2l3516 1C76                                    i2l3508 1C54  
                                  i2l3518 1C7A                           ??_sistemaRegado 001A  
   mostrarDatosSensores@porcentajeHumedad 00F4                                    _SSPADD 000FC8  
                                  _SSPBUF 000FC9                      ??_inicializarObjetos 0007  
         __size_of_restablecerDatosSensor 0062                            __CFG_XINST$OFF 000000  
                            vfprintf@cfmt 0056                  __end_of_sistemaPrincipal 19FA  
                          _escribe_eeprom 211E                                    ___lmul 1AE4  
                         ?_i2c_envia_dato 0001                                 ??___aldiv 0015  
                               ??___aodiv 0011                                 ??___aomod 0011  
                                  ___wmul 21F6                         __end_of_UART_init 1AE4  
                       __end_of_UART_read 1EB8                         ??_asignarHorarios 000F  
                        __end_of_leer_rtc 21D0                           ?_i2c_inicia_com 0001  
                        __end_of_estaSeco 1F5A                       __size_of_UART_write 0016  
                            ?_UART_printf 0002                                    clear_0 1F80  
                                  clear_1 1F8C                                    _setRtc 1562  
                                  pad@buf 0013       mostrarDatosSensoresWIFI@temperatura 00F4  
                                  dtoa@fp 001C                                    _strlen 20E8  
                         _i2c_recibe_dato 227A                              ?_mostrarMenu 0001  
                                  fputc@c 0001                                    fputs@c 000E  
                                  fputs@i 000F                                    fputs@s 000A  
                    escribe_rtc@direccion 0004                              __mediumconst 7BC6  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                    _lecturaAnalogaSensores 1B4E  
            __end_of_mostrarDatosSensores 0D90                                    putch@c 0001  
                        __end_of_vfprintf 1DAA                                 ??_sprintf 0058  
                              __accesstop 0060                   __end_of__initialization 1F94  
                    __size_of_escribe_rtc 001E                           __CFG_PBADEN$OFF 000000  
                    __size_of_leer_eeprom 003C                           __CFG_FOSC$XT_XT 000000  
                             _i2c_detener 22F2                __size_of_constructorSensor 000C  
                           ___rparam_used 000001                               _i2c_iniciar 22AA  
                  __end_of_escribe_eeprom 214E                               ?_i2c_espera 0001  
                          _setTiempoRegar 05DC                          setTiempoRegar@Rx 0016  
                          __pcstackCOMRAM 0001                              leer_rtc@dato 0004  
                            __pidataBANK0 22FA                      __size_of_lecturaWifi 00F2  
         __size_of_escribeHorariosMemoria 00CE                           ??_convertirDato 0001  
                           __end_of_fputc 149A                             __end_of_fputs 202C  
                     estaSeco@temperatura 0014                             __end_of_putch 2300  
                  _restablecerDatosSensor 1CE6                              _datoRecibido 0087  
                       ?_dameDatosSistema 0001                                   ??_fputc 0005  
                                 ??_fputs 000E                                   ??_putch 0001  
                              __pbssBANK0 0060                                __pbssBANK1 0100  
                      ??_dameDatosSistema 0058                   __size_of_desbordamiento 1C7C  
                      __size_of_horaRegar 002C                    __end_of_setTiempoRegar 07A4  
                            lecturaWifi@i 000F                           ?_escribe_eeprom 0007  
           dameTemperaturaHumedad@Humedad 0004                        _contInterrupciones 0080  
               __size_of_i2c_reinicia_com 0008                                   ?___lmul 0001  
                                 ?___wmul 0001                mostrarDatosSensores@buffer 00C2  
                 __end_of_i2c_recibe_dato 2294                                   _ACKSTAT 007E2E  
                          ___lmul@product 0009                                   ?_setRtc 0001  
                                 ?_strlen 0001           mostrarDatosSensores@temperatura 00F5  
           dameTemperaturaHumedad@humedad 000E                        __size_of_vfpfcnvrt 01B4  
                     __size_of_i2c_espera 0026                    _escribeHorariosMemoria 1302  
                                 _SSPCON1 000FC6                                   _SSPCON2 000FC5  
                            ??_UART_write 0001                                   _SSPSTAT 000FC7  
                __end_of_dameHumedadSuelo 1FE8                                 ?_leer_rtc 0001  
                               ?_estaSeco 0010                           __CFG_VREGEN$OFF 000000  
                           ??_DHT11_Start 0001                           ?_setTiempoRegar 0001  
                                 __Hparam 0000                                   __Lparam 0000  
       dameTemperaturaHumedad@Temperatura 0006                                   ___aldiv 101A  
                                 ___aodiv 0958                                   ___aomod 0AE0  
                         __size_of___lmul 006A                      _mostrarDatosSensores 0C44  
                         __size_of___wmul 0026                  constructorSensor@humedad 000A  
                               ?_vfprintf 0050                           __CFG_STVREN$OFF 000000  
                                 __pcinit 1F5A                                   __ramtop 0800  
                      __end_of_UART_write 22AA                           __size_of_setRtc 00C6  
                                 __ptext0 1844                                   __ptext1 17A2  
                                 __ptext2 214E                                   __ptext3 0012  
                                 __ptext4 1F0A                                   __ptext5 217A  
                                 __ptext6 21A6                                   __ptext7 221C  
                                 __ptext8 1970                                   __ptext9 05DC  
                 check_response@respuesta 0001                         __end_of_horaRegar 217A  
                               _T0CONbits 000FD5                           __size_of_strlen 0036  
                    __size_of_UART_printf 005E                              __size_of_abs 0040  
                            __size_of_pad 00C6                              __size_of_map 007A  
                        ??_check_response 0001                                   _regando 0083  
                        ___aldiv@dividend 000D                                   _minutos 0089  
                    __size_of_mostrarMenu 0062                                   _sprintf 1EB8  
                          __pintcode_body 1C1E                      end_of_initialization 1F94  
          mostrarDatosSensoresWIFI@buffer 00C2                                ??_leer_rtc 0003  
                              ??_estaSeco 0013                                   fputc@fp 0003  
                         _asignarHorarios 0D90                             __Lmediumconst 7BC6  
                                 int_func 1C1E                                   fputs@fp 000C  
                        ??_i2c_envia_dato 0002               __size_of_leeHorariosMemoria 00C8  
                                 setRtc@i 0009                          ??_i2c_inicia_com 0002  
                        _VALOR_TIMER0UART 00FB                         __end_of_vfpfcnvrt 0958  
                ??_dameTemperaturaHumedad 0008                                 _RCSTAbits 000FAB  
                        ___aldiv@quotient 0017                     ?_mostrarDatosSensores 0001  
                     __end_of_DHT11_Start 225C                                   postdec1 000FE5  
                                 postdec2 000FDD                         ?_sistemaPrincipal 0001  
                 _peticionLecturaSensores 0082                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                           ??_fijaHoraRtc 000C                          ?_i2c_recibe_dato 0001  
                              ??_vfprintf 0056                     __end_of_configurarAdc 22E2  
                      ??_sistemaPrincipal 005B                                   strlen@a 0003  
                                 strlen@s 0001                                 _UART_init 1A74  
                               _UART_read 1E64                                 _PORTDbits 000F83  
                 __size_of_DHT11_ReadData 005C                   ?_lecturaAnalogaSensores 0001  
               dameHumedadSuelo@canalLeer 0005                   lecturaAnalogaSensores@i 0008  
                               _TRISBbits 000F93                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                   __size_of_encenderBombas 02E8  
                _mostrarDatosSensoresWIFI 0ED8                                map@out_max 002B  
                              map@out_min 0027                            _desbordamiento 0008  
                          _esperandoDatos 005E                            _UART_init$1787 0023  
                            ?_i2c_detener 0001                     __end_of_sistemaRegado 1844  
                               _TXSTAbits 000FAC                         dameDatosSistema@i 00F4  
             __size_of_inicializarObjetos 0096                              ?_i2c_iniciar 0001  
                            ??_i2c_espera 0001                        DHT11_ReadData@data 0002  
                        _i2c_reinicia_com 22E2                            __end_of___lmul 1B4E  
             setTiempoRegar@datoCapturado 0015                               vfpfcnvrt@ap 0044  
                             vfpfcnvrt@fp 0040                               vfpfcnvrt@ll 0048  
                          __end_of___wmul 221C                   ?_restablecerDatosSensor 0001  
          __end_of_lecturaAnalogaSensores 1BB6                                ?_UART_init 001B  
                              ?_UART_read 0001                       setRtc@datoCapturado 0008  
                 __size_of_dameHoraActual 002C                            __end_of_setRtc 1628  
                     __end_of_fijaHoraRtc 1C1E                            __end_of_strlen 211E  
                     start_initialization 1F5A                              _estaSeco$776 0013  
                             __end_of_abs 20AC                   __end_of_asignarHorarios 0ED8  
                             __end_of_pad 16EE                               __end_of_map 1A74  
       escribeHorariosMemoria@contMemoria 000B                    __end_of_desbordamiento 1C84  
                      __end_of_i2c_espera 21F6                             ??_escribe_rtc 0004  
                           ??_leer_eeprom 0005                          ??_escribe_eeprom 000A  
                     leeHorariosMemoria@i 0009                      constructorSensor@pin 000B  
                             _DHT11_Start 223C                             ??_lecturaWifi 000E  
                  ??_mostrarDatosSensores 0058                               vfprintf@fmt 0052  
               __size_of_dameDatosSistema 00EA           __size_of_dameTemperaturaHumedad 00B4  
                                ??___lmul 0009                                  ??___wmul 0005  
          __end_of_restablecerDatosSensor 1D48                               __pdataBANK0 00F9  
                        __CFG_LPT1OSC$OFF 000000                         leer_rtc@direccion 0003  
                                ??_setRtc 0005                     __end_of_convertirDato 223C  
            asignarHorarios@datoCapturado 0010                                  ??_strlen 0003  
                 ?_escribeHorariosMemoria 0001                               __pbssCOMRAM 005E  
                           __pcstackBANK0 00AE                          ___aodiv@dividend 0001  
                         ?_desbordamiento 0001                          ??_setTiempoRegar 000F  
                       ?_dameHumedadSuelo 0001                         UART_printf@cadena 0002  
                           lecturaWifi@Rx 000E                        ??_dameHumedadSuelo 0003  
                       __size_of_leer_rtc 002A                         __size_of_estaSeco 0050  
                     __end_of_escribe_rtc 227A                       __end_of_leer_eeprom 20E8  
                               _dtoa$1012 002E                                 __pintcode 0008  
                           __pmediumconst 7BC6                                  ?___aldiv 000D  
                                ?___aodiv 0001                                  ?___aomod 0001  
                        ___aodiv@quotient 0013                               _fijaHoraRtc 1BB6  
                     __end_of_lecturaWifi 1218                            _DHT11_ReadData 1E08  
                              setRtc@dato 0007                               ??_UART_init 001F  
                             ??_UART_read 0001                         __size_of_vfprintf 0062  
             mostrarDatosSensores@humedad 00F6            __end_of_escribeHorariosMemoria 13D0  
                          _encenderBombas 0012                                 _horaRegar 214E  
          dameTemperaturaHumedad@checkSum 000A                    _dameTemperaturaHumedad 16EE  
                        ?_asignarHorarios 0001                                  ?_sprintf 00AE  
                          __size_of_fputc 00CA                            __size_of_fputs 0044  
                          __size_of_putch 0002                           ___aldiv@divisor 0011  
                         ___aldiv@counter 0015                            ___wmul@product 0005  
                                _LATDbits 000F8C                                  _PIE1bits 000F9D  
                    __size_of_i2c_detener 0008                                  i2u270_40 1C3E  
                                i2u270_41 1C3A                                  i2u271_40 1C54  
                                i2u271_41 1C50                                  i2u272_40 1C76  
                                i2u272_41 1C72                                  _PIR1bits 000F9E  
                                i2u269_40 1C2E                                  i2u269_41 1C2A  
                 restablecerDatosSensor@i 000C                      __size_of_i2c_iniciar 0016  
                        __CFG_WDTPS$32768 000000                    _tiempoInactividadTrans 008D  
           leeHorariosMemoria@contMemoria 0007                       asignarHorarios@hora 000F  
                  __end_of_DHT11_ReadData 1E64                             ??_UART_printf 0004  
                  dameDatosSistema@buffer 00C2                                 _vfpfcnvrt 07A4  
                               map@in_max 0023                                 map@in_min 001F  
                              _ADCON0bits 000FC2                            _dameHoraActual 217A  
                       ___wmul@multiplier 0001                ??_mostrarDatosSensoresWIFI 0058  
                  __end_of_encenderBombas 02FA                             ??_mostrarMenu 0004  
                          UART_write@dato 0001                                ?_horaRegar 0001  
                   mostrarDatosSensores@i 00F7                 __size_of_sistemaPrincipal 008A  
                __end_of_i2c_reinicia_com 22EA                         ___lmul@multiplier 0001  
                               copy_data0 1F6E                               _escribe_rtc 225C  
                             _leer_eeprom 20AC                              _VALOR_TIMER0 00F9  
              __end_of_leeHorariosMemoria 1562                                 estaSeco@s 0010  
                                __Hrparam 0000                              _minutosRegar 0085  
                             _lecturaWifi 1126                             UART_init@BAUD 001B  
                              vfprintf@ap 0054                                  __Lrparam 0000  
                              vfprintf@fp 0050                          _dameDatosSistema 1218  
dameTemperaturaHumedad@temperaturaDecimal 000D                       _esperaDatoConcluida 008B  
                        __size_of___aldiv 010C                           ?_DHT11_ReadData 0001  
                        __size_of___aodiv 0188                          __size_of___aomod 0164  
                  __end_of_dameHoraActual 21A6                                ?_vfpfcnvrt 0040  
                         DHT11_ReadData@i 0001                           ___aodiv@divisor 0009  
                         ___aodiv@counter 0011                           ?_encenderBombas 0001  
                              sprintf@fmt 00B0                  __size_of_i2c_recibe_dato 001A  
                     __end_of_UART_printf 1E08                                  __ptext10 1C84  
                                __ptext11 0ED8                                  __ptext20 16EE  
                                __ptext12 1126                                  __ptext21 202C  
                                __ptext13 1CE6                                  __ptext30 07A4  
                                __ptext22 223C                                  __ptext14 22C0  
                                __ptext31 02FA                                  __ptext23 1E08  
                                __ptext15 0C44                                  __ptext40 0D90  
                                __ptext32 1628                                  __ptext24 1BB6  
                                __ptext16 19FA                                  __ptext41 1302  
                                __ptext33 20E8                                  __ptext25 1562  
                                __ptext17 1AE4                                  __ptext50 22EA  
                                __ptext42 211E                                  __ptext34 1FE8  
                                __ptext26 225C                                  __ptext18 1B4E  
                                __ptext51 22CC                                  __ptext43 1E64  
                                __ptext35 13D0                                  __ptext27 1218  
                                __ptext19 1FA2                                  __ptext52 22F2  
                                __ptext44 1DAA                                  __ptext36 22FE  
                                __ptext28 1EB8                                  __ptext53 21D0  
                                __ptext45 2294                                  __ptext37 206C  
                                __ptext29 1D48                                  __ptext54 18DA  
                                __ptext46 149A                                  __ptext38 0AE0  
                                __ptext55 21F6                                  __ptext47 20AC  
                                __ptext39 0958                                  __ptext56 22AA  
                                __ptext48 22E2                                  __ptext57 22D8  
                                __ptext49 227A                                  __ptext58 1A74  
                                __ptext59 101A                       __end_of_mostrarMenu 1CE6  
                        __size_of_sprintf 0052                                  _leer_rtc 21A6  
                                _estaSeco 1F0A                __end_of_inicializarObjetos 1970  
                                _byteUart 008C                    __size_of_configurarAdc 000A  
                 __size_of_check_response 0040                       inicializarObjetos@i 0007  
                           __size_of_main 0096                             __size_of_dtoa 02E2  
                                _horarios 0100                              ?_DHT11_Start 0001  
    dameTemperaturaHumedad@humedadDecimal 000C                                  _segundos 0088  
                         encenderBombas@i 0018                                  _sensores 0060  
               mostrarDatosSensoresWIFI@i 00F6                                  int$flags 005F  
                                _vfprintf 1D48                           ?_dameHoraActual 0001  
                 __size_of_i2c_envia_dato 000C                   __size_of_i2c_inicia_com 0008  
                i2c_recibe_dato@datoleido 0002                          ___aomod@dividend 0001  
                   __CFG_CPUDIV$OSC1_PLL2 000000                          ??_desbordamiento 0001  
                  __size_of_sistemaRegado 00A2                                _INTCONbits 000FF2  
                      constructorSensor@s 0007                               ??_horaRegar 0003  
         mostrarDatosSensoresWIFI@humedad 00F5                   escribe_eeprom@direccion 0007  
                                intlevel2 0000                                 sprintf@ap 00BA  
                         escribe_rtc@dato 0003                                  setRtc@Rx 000B  
                         setRtc@direccion 0006                         asignarHorarios@Rx 0013  
           __size_of_mostrarDatosSensores 014C                             _overflowTimer 0086  
                            ?_fijaHoraRtc 0001         dameTemperaturaHumedad@temperatura 000F  
                         ___aomod@divisor 0009                 __size_of_dameHumedadSuelo 0046  
                             ??_vfpfcnvrt 0046                           ___aomod@counter 0011  
                             _UART_printf 1DAA                             _configurarAdc 22D8  
        __end_of_mostrarDatosSensoresWIFI 101A                                  sprintf@f 00BC  
                                sprintf@s 00AE                   ?_dameTemperaturaHumedad 0004  
                             _mostrarMenu 1C84                              ___aldiv@sign 0016  
                        asignarHorarios@i 0011                          _sistemaPrincipal 1970  
                         leer_eeprom@dato 0006                               _SSPCON2bits 000FC5  
                              _UART_write 2294                              ___aodiv@sign 0012  
                       ??_i2c_recibe_dato 0002                    __size_of_convertirDato 0020  
                    leer_eeprom@direccion 0003                             _sistemaRegado 17A2  
                            ___aomod@sign 0012                  ??_lecturaAnalogaSensores 0007  
