

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Apr 26 12:18:12 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    69                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    70  0000                     
    71                           ; Version 2.10
    72                           ; Generated 31/07/2019 GMT
    73                           ; 
    74                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F4550 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     
   106                           	psect	idataBANK0
   107  001C12                     __pidataBANK0:
   108                           	opt callstack 0
   109                           
   110                           ;initializer for _VALOR_TIMER0
   111  001C12  6769               	dw	26473
   112                           
   113                           ;initializer for _VALOR_TIMER0UART
   114  001C14  6769               	dw	26473
   115  0000                     _TMR0	set	4054
   116  0000                     _T0CONbits	set	4053
   117  0000                     _TRISD	set	3989
   118  0000                     _T0CON	set	4053
   119  0000                     _LATD	set	3980
   120  0000                     _PIE1bits	set	3997
   121  0000                     _ADRESL	set	4035
   122  0000                     _ADCON0bits	set	4034
   123  0000                     _LATDbits	set	3980
   124  0000                     _PORTE	set	3972
   125  0000                     _PORTA	set	3968
   126  0000                     _TRISE	set	3990
   127  0000                     _TRISA	set	3986
   128  0000                     _ADCON2	set	4032
   129  0000                     _ADCON1	set	4033
   130  0000                     _INTCONbits	set	4082
   131  0000                     _TXREG	set	4013
   132  0000                     _RCREG	set	4014
   133  0000                     _PIR1bits	set	3998
   134  0000                     _RCSTAbits	set	4011
   135  0000                     _TXSTAbits	set	4012
   136  0000                     _SPBRG	set	4015
   137  0000                     _TRISCbits	set	3988
   138  0000                     _SSPBUF	set	4041
   139  0000                     _SSPCON2bits	set	4037
   140  0000                     _SSPADD	set	4040
   141  0000                     _SSPCON2	set	4037
   142  0000                     _SSPCON1	set	4038
   143  0000                     _SSPSTAT	set	4039
   144  0000                     _TRISBbits	set	3987
   145  0000                     _ACKSTAT	set	32302
   146                           
   147                           	psect	mediumconst
   148  007CCC                     __pmediumconst:
   149                           	opt callstack 0
   150  007CCC  00                 	db	0
   151  007CCD                     STR_11:
   152  007CCD  0D                 	db	13
   153  007CCE  0A                 	db	10
   154  007CCF  20                 	db	32
   155  007CD0  49                 	db	73	;'I'
   156  007CD1  6E                 	db	110	;'n'
   157  007CD2  67                 	db	103	;'g'
   158  007CD3  72                 	db	114	;'r'
   159  007CD4  65                 	db	101	;'e'
   160  007CD5  73                 	db	115	;'s'
   161  007CD6  65                 	db	101	;'e'
   162  007CD7  20                 	db	32
   163  007CD8  6C                 	db	108	;'l'
   164  007CD9  6F                 	db	111	;'o'
   165  007CDA  73                 	db	115	;'s'
   166  007CDB  20                 	db	32
   167  007CDC  6D                 	db	109	;'m'
   168  007CDD  69                 	db	105	;'i'
   169  007CDE  6E                 	db	110	;'n'
   170  007CDF  75                 	db	117	;'u'
   171  007CE0  74                 	db	116	;'t'
   172  007CE1  6F                 	db	111	;'o'
   173  007CE2  73                 	db	115	;'s'
   174  007CE3  20                 	db	32
   175  007CE4  71                 	db	113	;'q'
   176  007CE5  75                 	db	117	;'u'
   177  007CE6  65                 	db	101	;'e'
   178  007CE7  20                 	db	32
   179  007CE8  64                 	db	100	;'d'
   180  007CE9  65                 	db	101	;'e'
   181  007CEA  73                 	db	115	;'s'
   182  007CEB  65                 	db	101	;'e'
   183  007CEC  65                 	db	101	;'e'
   184  007CED  20                 	db	32
   185  007CEE  71                 	db	113	;'q'
   186  007CEF  75                 	db	117	;'u'
   187  007CF0  65                 	db	101	;'e'
   188  007CF1  20                 	db	32
   189  007CF2  73                 	db	115	;'s'
   190  007CF3  65                 	db	101	;'e'
   191  007CF4  20                 	db	32
   192  007CF5  72                 	db	114	;'r'
   193  007CF6  69                 	db	105	;'i'
   194  007CF7  65                 	db	101	;'e'
   195  007CF8  67                 	db	103	;'g'
   196  007CF9  75                 	db	117	;'u'
   197  007CFA  65                 	db	101	;'e'
   198  007CFB  20                 	db	32
   199  007CFC  65                 	db	101	;'e'
   200  007CFD  6E                 	db	110	;'n'
   201  007CFE  20                 	db	32
   202  007CFF  65                 	db	101	;'e'
   203  007D00  73                 	db	115	;'s'
   204  007D01  65                 	db	101	;'e'
   205  007D02  20                 	db	32
   206  007D03  68                 	db	104	;'h'
   207  007D04  6F                 	db	111	;'o'
   208  007D05  72                 	db	114	;'r'
   209  007D06  61                 	db	97	;'a'
   210  007D07  72                 	db	114	;'r'
   211  007D08  69                 	db	105	;'i'
   212  007D09  6F                 	db	111	;'o'
   213  007D0A  20                 	db	32
   214  007D0B  65                 	db	101	;'e'
   215  007D0C  6A                 	db	106	;'j'
   216  007D0D  3A                 	db	58	;':'
   217  007D0E  20                 	db	32
   218  007D0F  31                 	db	49	;'1'
   219  007D10  35                 	db	53	;'5'
   220  007D11  20                 	db	32
   221  007D12  0D                 	db	13
   222  007D13  0A                 	db	10
   223  007D14  00                 	db	0
   224  007D15                     STR_7:
   225  007D15  0D                 	db	13
   226  007D16  0A                 	db	10
   227  007D17  20                 	db	32
   228  007D18  49                 	db	73	;'I'
   229  007D19  6E                 	db	110	;'n'
   230  007D1A  67                 	db	103	;'g'
   231  007D1B  72                 	db	114	;'r'
   232  007D1C  65                 	db	101	;'e'
   233  007D1D  73                 	db	115	;'s'
   234  007D1E  65                 	db	101	;'e'
   235  007D1F  20                 	db	32
   236  007D20  31                 	db	49	;'1'
   237  007D21  20                 	db	32
   238  007D22  70                 	db	112	;'p'
   239  007D23  61                 	db	97	;'a'
   240  007D24  72                 	db	114	;'r'
   241  007D25  61                 	db	97	;'a'
   242  007D26  20                 	db	32
   243  007D27  72                 	db	114	;'r'
   244  007D28  65                 	db	101	;'e'
   245  007D29  67                 	db	103	;'g'
   246  007D2A  61                 	db	97	;'a'
   247  007D2B  72                 	db	114	;'r'
   248  007D2C  20                 	db	32
   249  007D2D  7C                 	db	124
   250  007D2E  7C                 	db	124
   251  007D2F  20                 	db	32
   252  007D30  69                 	db	105	;'i'
   253  007D31  6E                 	db	110	;'n'
   254  007D32  67                 	db	103	;'g'
   255  007D33  72                 	db	114	;'r'
   256  007D34  65                 	db	101	;'e'
   257  007D35  73                 	db	115	;'s'
   258  007D36  65                 	db	101	;'e'
   259  007D37  20                 	db	32
   260  007D38  30                 	db	48	;'0'
   261  007D39  20                 	db	32
   262  007D3A  70                 	db	112	;'p'
   263  007D3B  61                 	db	97	;'a'
   264  007D3C  72                 	db	114	;'r'
   265  007D3D  61                 	db	97	;'a'
   266  007D3E  20                 	db	32
   267  007D3F  6E                 	db	110	;'n'
   268  007D40  6F                 	db	111	;'o'
   269  007D41  20                 	db	32
   270  007D42  72                 	db	114	;'r'
   271  007D43  65                 	db	101	;'e'
   272  007D44  67                 	db	103	;'g'
   273  007D45  61                 	db	97	;'a'
   274  007D46  72                 	db	114	;'r'
   275  007D47  3A                 	db	58	;':'
   276  007D48  20                 	db	32
   277  007D49  0D                 	db	13
   278  007D4A  0A                 	db	10
   279  007D4B  00                 	db	0
   280  007D4C                     STR_6:
   281  007D4C  0D                 	db	13
   282  007D4D  0A                 	db	10
   283  007D4E  20                 	db	32
   284  007D4F  49                 	db	73	;'I'
   285  007D50  6E                 	db	110	;'n'
   286  007D51  67                 	db	103	;'g'
   287  007D52  72                 	db	114	;'r'
   288  007D53  65                 	db	101	;'e'
   289  007D54  73                 	db	115	;'s'
   290  007D55  65                 	db	101	;'e'
   291  007D56  20                 	db	32
   292  007D57  75                 	db	117	;'u'
   293  007D58  6E                 	db	110	;'n'
   294  007D59  61                 	db	97	;'a'
   295  007D5A  20                 	db	32
   296  007D5B  68                 	db	104	;'h'
   297  007D5C  6F                 	db	111	;'o'
   298  007D5D  72                 	db	114	;'r'
   299  007D5E  61                 	db	97	;'a'
   300  007D5F  20                 	db	32
   301  007D60  65                 	db	101	;'e'
   302  007D61  6E                 	db	110	;'n'
   303  007D62  20                 	db	32
   304  007D63  66                 	db	102	;'f'
   305  007D64  6F                 	db	111	;'o'
   306  007D65  72                 	db	114	;'r'
   307  007D66  6D                 	db	109	;'m'
   308  007D67  61                 	db	97	;'a'
   309  007D68  74                 	db	116	;'t'
   310  007D69  6F                 	db	111	;'o'
   311  007D6A  20                 	db	32
   312  007D6B  64                 	db	100	;'d'
   313  007D6C  65                 	db	101	;'e'
   314  007D6D  20                 	db	32
   315  007D6E  32                 	db	50	;'2'
   316  007D6F  34                 	db	52	;'4'
   317  007D70  20                 	db	32
   318  007D71  68                 	db	104	;'h'
   319  007D72  72                 	db	114	;'r'
   320  007D73  73                 	db	115	;'s'
   321  007D74  20                 	db	32
   322  007D75  65                 	db	101	;'e'
   323  007D76  6A                 	db	106	;'j'
   324  007D77  3A                 	db	58	;':'
   325  007D78  20                 	db	32
   326  007D79  31                 	db	49	;'1'
   327  007D7A  35                 	db	53	;'5'
   328  007D7B  20                 	db	32
   329  007D7C  0D                 	db	13
   330  007D7D  0A                 	db	10
   331  007D7E  00                 	db	0
   332  007D7F                     STR_24:
   333  007D7F  0D                 	db	13
   334  007D80  0A                 	db	10
   335  007D81  0A                 	db	10
   336  007D82  48                 	db	72	;'H'
   337  007D83  6F                 	db	111	;'o'
   338  007D84  72                 	db	114	;'r'
   339  007D85  61                 	db	97	;'a'
   340  007D86  20                 	db	32
   341  007D87  7C                 	db	124
   342  007D88  20                 	db	32
   343  007D89  52                 	db	82	;'R'
   344  007D8A  65                 	db	101	;'e'
   345  007D8B  67                 	db	103	;'g'
   346  007D8C  61                 	db	97	;'a'
   347  007D8D  72                 	db	114	;'r'
   348  007D8E  28                 	db	40
   349  007D8F  31                 	db	49	;'1'
   350  007D90  20                 	db	32
   351  007D91  73                 	db	115	;'s'
   352  007D92  69                 	db	105	;'i'
   353  007D93  20                 	db	32
   354  007D94  30                 	db	48	;'0'
   355  007D95  20                 	db	32
   356  007D96  6E                 	db	110	;'n'
   357  007D97  6F                 	db	111	;'o'
   358  007D98  29                 	db	41
   359  007D99  20                 	db	32
   360  007D9A  7C                 	db	124
   361  007D9B  20                 	db	32
   362  007D9C  4D                 	db	77	;'M'
   363  007D9D  69                 	db	105	;'i'
   364  007D9E  6E                 	db	110	;'n'
   365  007D9F  75                 	db	117	;'u'
   366  007DA0  74                 	db	116	;'t'
   367  007DA1  6F                 	db	111	;'o'
   368  007DA2  73                 	db	115	;'s'
   369  007DA3  20                 	db	32
   370  007DA4  64                 	db	100	;'d'
   371  007DA5  65                 	db	101	;'e'
   372  007DA6  20                 	db	32
   373  007DA7  72                 	db	114	;'r'
   374  007DA8  69                 	db	105	;'i'
   375  007DA9  65                 	db	101	;'e'
   376  007DAA  67                 	db	103	;'g'
   377  007DAB  6F                 	db	111	;'o'
   378  007DAC  20                 	db	32
   379  007DAD  0D                 	db	13
   380  007DAE  0A                 	db	10
   381  007DAF  0A                 	db	10
   382  007DB0  00                 	db	0
   383  007DB1                     STR_19:
   384  007DB1  0D                 	db	13
   385  007DB2  0A                 	db	10
   386  007DB3  20                 	db	32
   387  007DB4  33                 	db	51	;'3'
   388  007DB5  2E                 	db	46
   389  007DB6  20                 	db	32
   390  007DB7  50                 	db	80	;'P'
   391  007DB8  72                 	db	114	;'r'
   392  007DB9  6F                 	db	111	;'o'
   393  007DBA  67                 	db	103	;'g'
   394  007DBB  72                 	db	114	;'r'
   395  007DBC  61                 	db	97	;'a'
   396  007DBD  6D                 	db	109	;'m'
   397  007DBE  61                 	db	97	;'a'
   398  007DBF  72                 	db	114	;'r'
   399  007DC0  20                 	db	32
   400  007DC1  74                 	db	116	;'t'
   401  007DC2  69                 	db	105	;'i'
   402  007DC3  65                 	db	101	;'e'
   403  007DC4  6D                 	db	109	;'m'
   404  007DC5  70                 	db	112	;'p'
   405  007DC6  6F                 	db	111	;'o'
   406  007DC7  20                 	db	32
   407  007DC8  64                 	db	100	;'d'
   408  007DC9  65                 	db	101	;'e'
   409  007DCA  20                 	db	32
   410  007DCB  72                 	db	114	;'r'
   411  007DCC  69                 	db	105	;'i'
   412  007DCD  65                 	db	101	;'e'
   413  007DCE  67                 	db	103	;'g'
   414  007DCF  6F                 	db	111	;'o'
   415  007DD0  20                 	db	32
   416  007DD1  65                 	db	101	;'e'
   417  007DD2  6E                 	db	110	;'n'
   418  007DD3  20                 	db	32
   419  007DD4  75                 	db	117	;'u'
   420  007DD5  6E                 	db	110	;'n'
   421  007DD6  20                 	db	32
   422  007DD7  68                 	db	104	;'h'
   423  007DD8  6F                 	db	111	;'o'
   424  007DD9  72                 	db	114	;'r'
   425  007DDA  61                 	db	97	;'a'
   426  007DDB  72                 	db	114	;'r'
   427  007DDC  69                 	db	105	;'i'
   428  007DDD  6F                 	db	111	;'o'
   429  007DDE  20                 	db	32
   430  007DDF  0D                 	db	13
   431  007DE0  0A                 	db	10
   432  007DE1  00                 	db	0
   433  007DE2                     STR_2:
   434  007DE2  0D                 	db	13
   435  007DE3  0A                 	db	10
   436  007DE4  20                 	db	32
   437  007DE5  45                 	db	69	;'E'
   438  007DE6  6E                 	db	110	;'n'
   439  007DE7  76                 	db	118	;'v'
   440  007DE8  69                 	db	105	;'i'
   441  007DE9  65                 	db	101	;'e'
   442  007DEA  20                 	db	32
   443  007DEB  6C                 	db	108	;'l'
   444  007DEC  61                 	db	97	;'a'
   445  007DED  73                 	db	115	;'s'
   446  007DEE  20                 	db	32
   447  007DEF  48                 	db	72	;'H'
   448  007DF0  6F                 	db	111	;'o'
   449  007DF1  72                 	db	114	;'r'
   450  007DF2  61                 	db	97	;'a'
   451  007DF3  73                 	db	115	;'s'
   452  007DF4  20                 	db	32
   453  007DF5  65                 	db	101	;'e'
   454  007DF6  6E                 	db	110	;'n'
   455  007DF7  20                 	db	32
   456  007DF8  66                 	db	102	;'f'
   457  007DF9  6F                 	db	111	;'o'
   458  007DFA  72                 	db	114	;'r'
   459  007DFB  6D                 	db	109	;'m'
   460  007DFC  61                 	db	97	;'a'
   461  007DFD  74                 	db	116	;'t'
   462  007DFE  6F                 	db	111	;'o'
   463  007DFF  20                 	db	32
   464  007E00  32                 	db	50	;'2'
   465  007E01  34                 	db	52	;'4'
   466  007E02  20                 	db	32
   467  007E03  45                 	db	69	;'E'
   468  007E04  6A                 	db	106	;'j'
   469  007E05  3A                 	db	58	;':'
   470  007E06  20                 	db	32
   471  007E07  31                 	db	49	;'1'
   472  007E08  35                 	db	53	;'5'
   473  007E09  20                 	db	32
   474  007E0A  0D                 	db	13
   475  007E0B  0A                 	db	10
   476  007E0C  00                 	db	0
   477  007E0D                     STR_23:
   478  007E0D  0D                 	db	13
   479  007E0E  0A                 	db	10
   480  007E0F  20                 	db	32
   481  007E10  53                 	db	83	;'S'
   482  007E11  6F                 	db	111	;'o'
   483  007E12  6C                 	db	108	;'l'
   484  007E13  6F                 	db	111	;'o'
   485  007E14  20                 	db	32
   486  007E15  73                 	db	115	;'s'
   487  007E16  65                 	db	101	;'e'
   488  007E17  20                 	db	32
   489  007E18  70                 	db	112	;'p'
   490  007E19  65                 	db	101	;'e'
   491  007E1A  72                 	db	114	;'r'
   492  007E1B  6D                 	db	109	;'m'
   493  007E1C  69                 	db	105	;'i'
   494  007E1D  74                 	db	116	;'t'
   495  007E1E  65                 	db	101	;'e'
   496  007E1F  6E                 	db	110	;'n'
   497  007E20  20                 	db	32
   498  007E21  6E                 	db	110	;'n'
   499  007E22  75                 	db	117	;'u'
   500  007E23  6D                 	db	109	;'m'
   501  007E24  65                 	db	101	;'e'
   502  007E25  72                 	db	114	;'r'
   503  007E26  6F                 	db	111	;'o'
   504  007E27  73                 	db	115	;'s'
   505  007E28  20                 	db	32
   506  007E29  64                 	db	100	;'d'
   507  007E2A  65                 	db	101	;'e'
   508  007E2B  6C                 	db	108	;'l'
   509  007E2C  20                 	db	32
   510  007E2D  31                 	db	49	;'1'
   511  007E2E  20                 	db	32
   512  007E2F  61                 	db	97	;'a'
   513  007E30  6C                 	db	108	;'l'
   514  007E31  20                 	db	32
   515  007E32  33                 	db	51	;'3'
   516  007E33  20                 	db	32
   517  007E34  0D                 	db	13
   518  007E35  0A                 	db	10
   519  007E36  00                 	db	0
   520  007E37  0D                 	db	13
   521  007E38  0A                 	db	10
   522  007E39  53                 	db	83	;'S'
   523  007E3A  6F                 	db	111	;'o'
   524  007E3B  6C                 	db	108	;'l'
   525  007E3C  69                 	db	105	;'i'
   526  007E3D  63                 	db	99	;'c'
   527  007E3E  69                 	db	105	;'i'
   528  007E3F  74                 	db	116	;'t'
   529  007E40  61                 	db	97	;'a'
   530  007E41  6E                 	db	110	;'n'
   531  007E42  64                 	db	100	;'d'
   532  007E43  6F                 	db	111	;'o'
   533  007E44  20                 	db	32
   534  007E45  4D                 	db	77	;'M'
   535  007E46  75                 	db	117	;'u'
   536  007E47  65                 	db	101	;'e'
   537  007E48  73                 	db	115	;'s'
   538  007E49  74                 	db	116	;'t'
   539  007E4A  72                 	db	114	;'r'
   540  007E4B  65                 	db	101	;'e'
   541  007E4C  6F                 	db	111	;'o'
   542  007E4D  20                 	db	32
   543  007E4E  64                 	db	100	;'d'
   544  007E4F  65                 	db	101	;'e'
   545  007E50  20                 	db	32
   546  007E51  73                 	db	115	;'s'
   547  007E52  65                 	db	101	;'e'
   548  007E53  6E                 	db	110	;'n'
   549  007E54  73                 	db	115	;'s'
   550  007E55  6F                 	db	111	;'o'
   551  007E56  72                 	db	114	;'r'
   552  007E57  65                 	db	101	;'e'
   553  007E58  73                 	db	115	;'s'
   554  007E59  0D                 	db	13
   555  007E5A  0A                 	db	10
   556  007E5B  0A                 	db	10
   557  007E5C  00                 	db	0
   558  007E5D                     STR_12:
   559  007E5D  0D                 	db	13
   560  007E5E  0A                 	db	10
   561  007E5F  20                 	db	32
   562  007E60  4D                 	db	77	;'M'
   563  007E61  69                 	db	105	;'i'
   564  007E62  6E                 	db	110	;'n'
   565  007E63  75                 	db	117	;'u'
   566  007E64  74                 	db	116	;'t'
   567  007E65  6F                 	db	111	;'o'
   568  007E66  73                 	db	115	;'s'
   569  007E67  20                 	db	32
   570  007E68  64                 	db	100	;'d'
   571  007E69  65                 	db	101	;'e'
   572  007E6A  20                 	db	32
   573  007E6B  72                 	db	114	;'r'
   574  007E6C  69                 	db	105	;'i'
   575  007E6D  65                 	db	101	;'e'
   576  007E6E  67                 	db	103	;'g'
   577  007E6F  6F                 	db	111	;'o'
   578  007E70  20                 	db	32
   579  007E71  65                 	db	101	;'e'
   580  007E72  73                 	db	115	;'s'
   581  007E73  74                 	db	116	;'t'
   582  007E74  61                 	db	97	;'a'
   583  007E75  62                 	db	98	;'b'
   584  007E76  6C                 	db	108	;'l'
   585  007E77  65                 	db	101	;'e'
   586  007E78  63                 	db	99	;'c'
   587  007E79  69                 	db	105	;'i'
   588  007E7A  64                 	db	100	;'d'
   589  007E7B  6F                 	db	111	;'o'
   590  007E7C  73                 	db	115	;'s'
   591  007E7D  21                 	db	33
   592  007E7E  20                 	db	32
   593  007E7F  0D                 	db	13
   594  007E80  0A                 	db	10
   595  007E81  00                 	db	0
   596  007E82                     STR_16:
   597  007E82  0D                 	db	13
   598  007E83  0A                 	db	10
   599  007E84  20                 	db	32
   600  007E85  49                 	db	73	;'I'
   601  007E86  6E                 	db	110	;'n'
   602  007E87  67                 	db	103	;'g'
   603  007E88  72                 	db	114	;'r'
   604  007E89  65                 	db	101	;'e'
   605  007E8A  73                 	db	115	;'s'
   606  007E8B  61                 	db	97	;'a'
   607  007E8C  20                 	db	32
   608  007E8D  75                 	db	117	;'u'
   609  007E8E  6E                 	db	110	;'n'
   610  007E8F  61                 	db	97	;'a'
   611  007E90  20                 	db	32
   612  007E91  6F                 	db	111	;'o'
   613  007E92  70                 	db	112	;'p'
   614  007E93  63                 	db	99	;'c'
   615  007E94  69                 	db	105	;'i'
   616  007E95  6F                 	db	111	;'o'
   617  007E96  6E                 	db	110	;'n'
   618  007E97  20                 	db	32
   619  007E98  61                 	db	97	;'a'
   620  007E99  20                 	db	32
   621  007E9A  52                 	db	82	;'R'
   622  007E9B  65                 	db	101	;'e'
   623  007E9C  61                 	db	97	;'a'
   624  007E9D  6C                 	db	108	;'l'
   625  007E9E  69                 	db	105	;'i'
   626  007E9F  7A                 	db	122	;'z'
   627  007EA0  61                 	db	97	;'a'
   628  007EA1  72                 	db	114	;'r'
   629  007EA2  3A                 	db	58	;':'
   630  007EA3  20                 	db	32
   631  007EA4  0D                 	db	13
   632  007EA5  0A                 	db	10
   633  007EA6  00                 	db	0
   634  007EA7                     STR_4:
   635  007EA7  0D                 	db	13
   636  007EA8  0A                 	db	10
   637  007EA9  20                 	db	32
   638  007EAA  48                 	db	72	;'H'
   639  007EAB  4F                 	db	79	;'O'
   640  007EAC  52                 	db	82	;'R'
   641  007EAD  41                 	db	65	;'A'
   642  007EAE  20                 	db	32
   643  007EAF  45                 	db	69	;'E'
   644  007EB0  53                 	db	83	;'S'
   645  007EB1  54                 	db	84	;'T'
   646  007EB2  41                 	db	65	;'A'
   647  007EB3  42                 	db	66	;'B'
   648  007EB4  4C                 	db	76	;'L'
   649  007EB5  45                 	db	69	;'E'
   650  007EB6  43                 	db	67	;'C'
   651  007EB7  49                 	db	73	;'I'
   652  007EB8  44                 	db	68	;'D'
   653  007EB9  41                 	db	65	;'A'
   654  007EBA  20                 	db	32
   655  007EBB  43                 	db	67	;'C'
   656  007EBC  4F                 	db	79	;'O'
   657  007EBD  52                 	db	82	;'R'
   658  007EBE  52                 	db	82	;'R'
   659  007EBF  45                 	db	69	;'E'
   660  007EC0  43                 	db	67	;'C'
   661  007EC1  54                 	db	84	;'T'
   662  007EC2  41                 	db	65	;'A'
   663  007EC3  4D                 	db	77	;'M'
   664  007EC4  45                 	db	69	;'E'
   665  007EC5  4E                 	db	78	;'N'
   666  007EC6  54                 	db	84	;'T'
   667  007EC7  45                 	db	69	;'E'
   668  007EC8  20                 	db	32
   669  007EC9  0D                 	db	13
   670  007ECA  0A                 	db	10
   671  007ECB  00                 	db	0
   672  007ECC                     STR_18:
   673  007ECC  0D                 	db	13
   674  007ECD  0A                 	db	10
   675  007ECE  20                 	db	32
   676  007ECF  32                 	db	50	;'2'
   677  007ED0  2E                 	db	46
   678  007ED1  20                 	db	32
   679  007ED2  41                 	db	65	;'A'
   680  007ED3  73                 	db	115	;'s'
   681  007ED4  69                 	db	105	;'i'
   682  007ED5  67                 	db	103	;'g'
   683  007ED6  6E                 	db	110	;'n'
   684  007ED7  61                 	db	97	;'a'
   685  007ED8  72                 	db	114	;'r'
   686  007ED9  20                 	db	32
   687  007EDA  48                 	db	72	;'H'
   688  007EDB  6F                 	db	111	;'o'
   689  007EDC  72                 	db	114	;'r'
   690  007EDD  61                 	db	97	;'a'
   691  007EDE  72                 	db	114	;'r'
   692  007EDF  69                 	db	105	;'i'
   693  007EE0  6F                 	db	111	;'o'
   694  007EE1  73                 	db	115	;'s'
   695  007EE2  20                 	db	32
   696  007EE3  70                 	db	112	;'p'
   697  007EE4  61                 	db	97	;'a'
   698  007EE5  72                 	db	114	;'r'
   699  007EE6  61                 	db	97	;'a'
   700  007EE7  20                 	db	32
   701  007EE8  72                 	db	114	;'r'
   702  007EE9  65                 	db	101	;'e'
   703  007EEA  67                 	db	103	;'g'
   704  007EEB  61                 	db	97	;'a'
   705  007EEC  72                 	db	114	;'r'
   706  007EED  20                 	db	32
   707  007EEE  0D                 	db	13
   708  007EEF  0A                 	db	10
   709  007EF0  00                 	db	0
   710  007EF1  0D                 	db	13
   711  007EF2  0A                 	db	10
   712  007EF3  53                 	db	83	;'S'
   713  007EF4  65                 	db	101	;'e'
   714  007EF5  6E                 	db	110	;'n'
   715  007EF6  73                 	db	115	;'s'
   716  007EF7  6F                 	db	111	;'o'
   717  007EF8  72                 	db	114	;'r'
   718  007EF9  65                 	db	101	;'e'
   719  007EFA  73                 	db	115	;'s'
   720  007EFB  20                 	db	32
   721  007EFC  4C                 	db	76	;'L'
   722  007EFD  65                 	db	101	;'e'
   723  007EFE  69                 	db	105	;'i'
   724  007EFF  64                 	db	100	;'d'
   725  007F00  6F                 	db	111	;'o'
   726  007F01  73                 	db	115	;'s'
   727  007F02  20                 	db	32
   728  007F03  63                 	db	99	;'c'
   729  007F04  6F                 	db	111	;'o'
   730  007F05  6E                 	db	110	;'n'
   731  007F06  20                 	db	32
   732  007F07  45                 	db	69	;'E'
   733  007F08  78                 	db	120	;'x'
   734  007F09  69                 	db	105	;'i'
   735  007F0A  74                 	db	116	;'t'
   736  007F0B  6F                 	db	111	;'o'
   737  007F0C  21                 	db	33
   738  007F0D  0D                 	db	13
   739  007F0E  0A                 	db	10
   740  007F0F  0A                 	db	10
   741  007F10  00                 	db	0
   742  007F11                     STR_20:
   743  007F11  0D                 	db	13
   744  007F12  0A                 	db	10
   745  007F13  20                 	db	32
   746  007F14  34                 	db	52	;'4'
   747  007F15  2E                 	db	46
   748  007F16  20                 	db	32
   749  007F17  44                 	db	68	;'D'
   750  007F18  61                 	db	97	;'a'
   751  007F19  6D                 	db	109	;'m'
   752  007F1A  65                 	db	101	;'e'
   753  007F1B  20                 	db	32
   754  007F1C  64                 	db	100	;'d'
   755  007F1D  61                 	db	97	;'a'
   756  007F1E  74                 	db	116	;'t'
   757  007F1F  6F                 	db	111	;'o'
   758  007F20  73                 	db	115	;'s'
   759  007F21  20                 	db	32
   760  007F22  64                 	db	100	;'d'
   761  007F23  65                 	db	101	;'e'
   762  007F24  6C                 	db	108	;'l'
   763  007F25  20                 	db	32
   764  007F26  73                 	db	115	;'s'
   765  007F27  69                 	db	105	;'i'
   766  007F28  73                 	db	115	;'s'
   767  007F29  74                 	db	116	;'t'
   768  007F2A  65                 	db	101	;'e'
   769  007F2B  6D                 	db	109	;'m'
   770  007F2C  61                 	db	97	;'a'
   771  007F2D  20                 	db	32
   772  007F2E  0D                 	db	13
   773  007F2F  0A                 	db	10
   774  007F30  00                 	db	0
   775  007F31                     STR_3:
   776  007F31  0D                 	db	13
   777  007F32  0A                 	db	10
   778  007F33  20                 	db	32
   779  007F34  45                 	db	69	;'E'
   780  007F35  6E                 	db	110	;'n'
   781  007F36  76                 	db	118	;'v'
   782  007F37  69                 	db	105	;'i'
   783  007F38  65                 	db	101	;'e'
   784  007F39  20                 	db	32
   785  007F3A  6C                 	db	108	;'l'
   786  007F3B  6F                 	db	111	;'o'
   787  007F3C  73                 	db	115	;'s'
   788  007F3D  20                 	db	32
   789  007F3E  4D                 	db	77	;'M'
   790  007F3F  69                 	db	105	;'i'
   791  007F40  6E                 	db	110	;'n'
   792  007F41  75                 	db	117	;'u'
   793  007F42  74                 	db	116	;'t'
   794  007F43  6F                 	db	111	;'o'
   795  007F44  73                 	db	115	;'s'
   796  007F45  20                 	db	32
   797  007F46  45                 	db	69	;'E'
   798  007F47  6A                 	db	106	;'j'
   799  007F48  3A                 	db	58	;':'
   800  007F49  20                 	db	32
   801  007F4A  32                 	db	50	;'2'
   802  007F4B  35                 	db	53	;'5'
   803  007F4C  20                 	db	32
   804  007F4D  0D                 	db	13
   805  007F4E  0A                 	db	10
   806  007F4F  00                 	db	0
   807  007F50  0D                 	db	13
   808  007F51  0A                 	db	10
   809  007F52  44                 	db	68	;'D'
   810  007F53  61                 	db	97	;'a'
   811  007F54  6D                 	db	109	;'m'
   812  007F55  65                 	db	101	;'e'
   813  007F56  20                 	db	32
   814  007F57  44                 	db	68	;'D'
   815  007F58  41                 	db	65	;'A'
   816  007F59  54                 	db	84	;'T'
   817  007F5A  4F                 	db	79	;'O'
   818  007F5B  53                 	db	83	;'S'
   819  007F5C  20                 	db	32
   820  007F5D  44                 	db	68	;'D'
   821  007F5E  45                 	db	69	;'E'
   822  007F5F  4C                 	db	76	;'L'
   823  007F60  20                 	db	32
   824  007F61  53                 	db	83	;'S'
   825  007F62  45                 	db	69	;'E'
   826  007F63  4E                 	db	78	;'N'
   827  007F64  53                 	db	83	;'S'
   828  007F65  4F                 	db	79	;'O'
   829  007F66  52                 	db	82	;'R'
   830  007F67  20                 	db	32
   831  007F68  3A                 	db	58	;':'
   832  007F69  0D                 	db	13
   833  007F6A  0A                 	db	10
   834  007F6B  00                 	db	0
   835  007F6C                     STR_17:
   836  007F6C  0D                 	db	13
   837  007F6D  0A                 	db	10
   838  007F6E  20                 	db	32
   839  007F6F  31                 	db	49	;'1'
   840  007F70  2E                 	db	46
   841  007F71  20                 	db	32
   842  007F72  46                 	db	70	;'F'
   843  007F73  69                 	db	105	;'i'
   844  007F74  6A                 	db	106	;'j'
   845  007F75  61                 	db	97	;'a'
   846  007F76  72                 	db	114	;'r'
   847  007F77  20                 	db	32
   848  007F78  48                 	db	72	;'H'
   849  007F79  6F                 	db	111	;'o'
   850  007F7A  72                 	db	114	;'r'
   851  007F7B  61                 	db	97	;'a'
   852  007F7C  20                 	db	32
   853  007F7D  41                 	db	65	;'A'
   854  007F7E  63                 	db	99	;'c'
   855  007F7F  74                 	db	116	;'t'
   856  007F80  75                 	db	117	;'u'
   857  007F81  61                 	db	97	;'a'
   858  007F82  6C                 	db	108	;'l'
   859  007F83  20                 	db	32
   860  007F84  0D                 	db	13
   861  007F85  0A                 	db	10
   862  007F86  00                 	db	0
   863  007F87                     STR_8:
   864  007F87  0D                 	db	13
   865  007F88  0A                 	db	10
   866  007F89  20                 	db	32
   867  007F8A  48                 	db	72	;'H'
   868  007F8B  6F                 	db	111	;'o'
   869  007F8C  72                 	db	114	;'r'
   870  007F8D  61                 	db	97	;'a'
   871  007F8E  72                 	db	114	;'r'
   872  007F8F  69                 	db	105	;'i'
   873  007F90  6F                 	db	111	;'o'
   874  007F91  20                 	db	32
   875  007F92  4D                 	db	77	;'M'
   876  007F93  6F                 	db	111	;'o'
   877  007F94  64                 	db	100	;'d'
   878  007F95  69                 	db	105	;'i'
   879  007F96  66                 	db	102	;'f'
   880  007F97  69                 	db	105	;'i'
   881  007F98  63                 	db	99	;'c'
   882  007F99  61                 	db	97	;'a'
   883  007F9A  64                 	db	100	;'d'
   884  007F9B  6F                 	db	111	;'o'
   885  007F9C  21                 	db	33
   886  007F9D  20                 	db	32
   887  007F9E  0D                 	db	13
   888  007F9F  0A                 	db	10
   889  007FA0  00                 	db	0
   890  007FA1                     STR_5:
   891  007FA1  0D                 	db	13
   892  007FA2  0A                 	db	10
   893  007FA3  20                 	db	32
   894  007FA4  4F                 	db	79	;'O'
   895  007FA5  50                 	db	80	;'P'
   896  007FA6  43                 	db	67	;'C'
   897  007FA7  49                 	db	73	;'I'
   898  007FA8  4F                 	db	79	;'O'
   899  007FA9  4E                 	db	78	;'N'
   900  007FAA  45                 	db	69	;'E'
   901  007FAB  53                 	db	83	;'S'
   902  007FAC  20                 	db	32
   903  007FAD  44                 	db	68	;'D'
   904  007FAE  45                 	db	69	;'E'
   905  007FAF  20                 	db	32
   906  007FB0  52                 	db	82	;'R'
   907  007FB1  45                 	db	69	;'E'
   908  007FB2  47                 	db	71	;'G'
   909  007FB3  41                 	db	65	;'A'
   910  007FB4  44                 	db	68	;'D'
   911  007FB5  4F                 	db	79	;'O'
   912  007FB6  20                 	db	32
   913  007FB7  0D                 	db	13
   914  007FB8  0A                 	db	10
   915  007FB9  00                 	db	0
   916  007FBA                     STR_9:
   917  007FBA  0D                 	db	13
   918  007FBB  0A                 	db	10
   919  007FBC  20                 	db	32
   920  007FBD  54                 	db	84	;'T'
   921  007FBE  49                 	db	73	;'I'
   922  007FBF  45                 	db	69	;'E'
   923  007FC0  4D                 	db	77	;'M'
   924  007FC1  50                 	db	80	;'P'
   925  007FC2  4F                 	db	79	;'O'
   926  007FC3  20                 	db	32
   927  007FC4  44                 	db	68	;'D'
   928  007FC5  45                 	db	69	;'E'
   929  007FC6  20                 	db	32
   930  007FC7  52                 	db	82	;'R'
   931  007FC8  45                 	db	69	;'E'
   932  007FC9  47                 	db	71	;'G'
   933  007FCA  41                 	db	65	;'A'
   934  007FCB  44                 	db	68	;'D'
   935  007FCC  4F                 	db	79	;'O'
   936  007FCD  20                 	db	32
   937  007FCE  0D                 	db	13
   938  007FCF  0A                 	db	10
   939  007FD0  00                 	db	0
   940  007FD1                     STR_1:
   941  007FD1  0D                 	db	13
   942  007FD2  0A                 	db	10
   943  007FD3  20                 	db	32
   944  007FD4  46                 	db	70	;'F'
   945  007FD5  49                 	db	73	;'I'
   946  007FD6  4A                 	db	74	;'J'
   947  007FD7  41                 	db	65	;'A'
   948  007FD8  20                 	db	32
   949  007FD9  48                 	db	72	;'H'
   950  007FDA  4F                 	db	79	;'O'
   951  007FDB  52                 	db	82	;'R'
   952  007FDC  41                 	db	65	;'A'
   953  007FDD  20                 	db	32
   954  007FDE  0D                 	db	13
   955  007FDF  0A                 	db	10
   956  007FE0  00                 	db	0
   957  007FE1                     STR_25:
   958  007FE1  25                 	db	37
   959  007FE2  64                 	db	100	;'d'
   960  007FE3  20                 	db	32
   961  007FE4  7C                 	db	124
   962  007FE5  20                 	db	32
   963  007FE6  25                 	db	37
   964  007FE7  64                 	db	100	;'d'
   965  007FE8  20                 	db	32
   966  007FE9  7C                 	db	124
   967  007FEA  20                 	db	32
   968  007FEB  25                 	db	37
   969  007FEC  64                 	db	100	;'d'
   970  007FED  20                 	db	32
   971  007FEE  0D                 	db	13
   972  007FEF  0A                 	db	10
   973  007FF0  00                 	db	0
   974  007FF1                     STR_21:
   975  007FF1  0D                 	db	13
   976  007FF2  0A                 	db	10
   977  007FF3  20                 	db	32
   978  007FF4  4F                 	db	79	;'O'
   979  007FF5  70                 	db	112	;'p'
   980  007FF6  63                 	db	99	;'c'
   981  007FF7  69                 	db	105	;'i'
   982  007FF8  6F                 	db	111	;'o'
   983  007FF9  6E                 	db	110	;'n'
   984  007FFA  3A                 	db	58	;':'
   985  007FFB  20                 	db	32
   986  007FFC  20                 	db	32
   987  007FFD  0D                 	db	13
   988  007FFE  00                 	db	0
   989  0000                     
   990                           ; #config settings
   991  007FFF  00                 	db	0	; dummy byte at the end
   992  0000                     
   993                           	psect	cinit
   994  0018BA                     __pcinit:
   995                           	opt callstack 0
   996  0018BA                     start_initialization:
   997                           	opt callstack 0
   998  0018BA                     __initialization:
   999                           	opt callstack 0
  1000                           
  1001                           ; Initialize objects allocated to BANK0 (4 bytes)
  1002                           ; load TBLPTR registers with __pidataBANK0
  1003  0018BA  0E12               	movlw	low __pidataBANK0
  1004  0018BC  6EF6               	movwf	tblptrl,c
  1005  0018BE  0E1C               	movlw	high __pidataBANK0
  1006  0018C0  6EF7               	movwf	tblptrh,c
  1007  0018C2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1008  0018C4  6EF8               	movwf	tblptru,c
  1009  0018C6  EE00  F0F2         	lfsr	0,__pdataBANK0
  1010  0018CA  EE10 F004          	lfsr	1,4
  1011  0018CE                     copy_data0:
  1012  0018CE  0009               	tblrd		*+
  1013  0018D0  CFF5 FFEE          	movff	tablat,postinc0
  1014  0018D4  50E5               	movf	postdec1,w,c
  1015  0018D6  50E1               	movf	fsr1l,w,c
  1016  0018D8  E1FA               	bnz	copy_data0
  1017                           
  1018                           ; Clear objects allocated to BANK1 (32 bytes)
  1019  0018DA  EE01  F000         	lfsr	0,__pbssBANK1
  1020  0018DE  0E20               	movlw	32
  1021  0018E0                     clear_0:
  1022  0018E0  6AEE               	clrf	postinc0,c
  1023  0018E2  06E8               	decf	wreg,f,c
  1024  0018E4  E1FD               	bnz	clear_0
  1025                           
  1026                           ; Clear objects allocated to BANK0 (109 bytes)
  1027  0018E6  EE00  F060         	lfsr	0,__pbssBANK0
  1028  0018EA  0E6D               	movlw	109
  1029  0018EC                     clear_1:
  1030  0018EC  6AEE               	clrf	postinc0,c
  1031  0018EE  06E8               	decf	wreg,f,c
  1032  0018F0  E1FD               	bnz	clear_1
  1033                           
  1034                           ; Clear objects allocated to COMRAM (1 bytes)
  1035  0018F2  6A5E               	clrf	__pbssCOMRAM& (0+255),c
  1036  0018F4                     end_of_initialization:
  1037                           	opt callstack 0
  1038  0018F4                     __end_of__initialization:
  1039                           	opt callstack 0
  1040  0018F4  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1041  0018F6  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1042  0018F8  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1043  0018FA  6EF8               	movwf	tblptru,c
  1044  0018FC  0100               	movlb	0
  1045  0018FE  EFBB  F009         	goto	_main	;jump to C main() function
  1046                           
  1047                           	psect	bssCOMRAM
  1048  00005E                     __pbssCOMRAM:
  1049                           	opt callstack 0
  1050  00005E                     _esperandoDatos:
  1051                           	opt callstack 0
  1052  00005E                     	ds	1
  1053                           
  1054                           	psect	bssBANK0
  1055  000060                     __pbssBANK0:
  1056                           	opt callstack 0
  1057  000060                     _horarios:
  1058                           	opt callstack 0
  1059  000060                     	ds	72
  1060  0000A8                     _sensores:
  1061                           	opt callstack 0
  1062  0000A8                     	ds	16
  1063  0000B8                     _nout:
  1064                           	opt callstack 0
  1065  0000B8                     	ds	2
  1066  0000BA                     _width:
  1067                           	opt callstack 0
  1068  0000BA                     	ds	2
  1069  0000BC                     _prec:
  1070                           	opt callstack 0
  1071  0000BC                     	ds	2
  1072  0000BE                     _flags:
  1073                           	opt callstack 0
  1074  0000BE                     	ds	2
  1075  0000C0                     _contInterrupciones:
  1076                           	opt callstack 0
  1077  0000C0                     	ds	2
  1078  0000C2                     _regando:
  1079                           	opt callstack 0
  1080  0000C2                     	ds	1
  1081  0000C3                     _minutosTranscurridos:
  1082                           	opt callstack 0
  1083  0000C3                     	ds	1
  1084  0000C4                     _minutosRegar:
  1085                           	opt callstack 0
  1086  0000C4                     	ds	1
  1087  0000C5                     _overflowTimer:
  1088                           	opt callstack 0
  1089  0000C5                     	ds	1
  1090  0000C6                     _datoRecibido:
  1091                           	opt callstack 0
  1092  0000C6                     	ds	1
  1093  0000C7                     _segundos:
  1094                           	opt callstack 0
  1095  0000C7                     	ds	1
  1096  0000C8                     _minutos:
  1097                           	opt callstack 0
  1098  0000C8                     	ds	1
  1099  0000C9                     _hora:
  1100                           	opt callstack 0
  1101  0000C9                     	ds	1
  1102  0000CA                     _esperaDatoConcluida:
  1103                           	opt callstack 0
  1104  0000CA                     	ds	1
  1105  0000CB                     _byteUart:
  1106                           	opt callstack 0
  1107  0000CB                     	ds	1
  1108  0000CC                     _tiempoInactividadTrans:
  1109                           	opt callstack 0
  1110  0000CC                     	ds	1
  1111                           
  1112                           	psect	dataBANK0
  1113  0000F2                     __pdataBANK0:
  1114                           	opt callstack 0
  1115  0000F2                     _VALOR_TIMER0:
  1116                           	opt callstack 0
  1117  0000F2                     	ds	2
  1118  0000F4                     _VALOR_TIMER0UART:
  1119                           	opt callstack 0
  1120  0000F4                     	ds	2
  1121                           
  1122                           	psect	bssBANK1
  1123  000100                     __pbssBANK1:
  1124                           	opt callstack 0
  1125  000100                     _dbuf:
  1126                           	opt callstack 0
  1127  000100                     	ds	32
  1128                           
  1129                           	psect	cstackBANK0
  1130  0000CD                     __pcstackBANK0:
  1131                           	opt callstack 0
  1132  0000CD                     ?_sprintf:
  1133                           	opt callstack 0
  1134  0000CD                     sprintf@s:
  1135                           	opt callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x0
  1138  0000CD                     	ds	2
  1139  0000CF                     sprintf@fmt:
  1140                           	opt callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x2
  1143  0000CF                     	ds	10
  1144  0000D9                     sprintf@ap:
  1145                           	opt callstack 0
  1146                           
  1147                           ; 2 bytes @ 0xC
  1148  0000D9                     	ds	2
  1149  0000DB                     sprintf@f:
  1150                           	opt callstack 0
  1151                           
  1152                           ; 6 bytes @ 0xE
  1153  0000DB                     	ds	6
  1154  0000E1                     dameDatosSistema@buffer:
  1155                           	opt callstack 0
  1156                           
  1157                           ; 15 bytes @ 0x14
  1158  0000E1                     	ds	15
  1159  0000F0                     dameDatosSistema@i:
  1160                           	opt callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x23
  1163  0000F0                     	ds	2
  1164                           
  1165                           	psect	cstackCOMRAM
  1166  000001                     __pcstackCOMRAM:
  1167                           	opt callstack 0
  1168  000001                     ??_i2c_espera:
  1169  000001                     ??_convertirDato:
  1170  000001                     ??_dameHumedadSuelo:
  1171  000001                     ?_strlen:
  1172                           	opt callstack 0
  1173  000001                     ?_estaSeco:
  1174                           	opt callstack 0
  1175  000001                     ?_horaRegar:
  1176                           	opt callstack 0
  1177  000001                     ?___wmul:
  1178                           	opt callstack 0
  1179  000001                     ?___aldiv:
  1180                           	opt callstack 0
  1181  000001                     ?___aodiv:
  1182                           	opt callstack 0
  1183  000001                     ?___aomod:
  1184                           	opt callstack 0
  1185  000001                     UART_write@dato:
  1186                           	opt callstack 0
  1187  000001                     constructorSensor@s:
  1188                           	opt callstack 0
  1189  000001                     estaSeco@s:
  1190                           	opt callstack 0
  1191  000001                     ___wmul@multiplier:
  1192                           	opt callstack 0
  1193  000001                     fputc@c:
  1194                           	opt callstack 0
  1195  000001                     strlen@s:
  1196                           	opt callstack 0
  1197  000001                     ___aldiv@dividend:
  1198                           	opt callstack 0
  1199  000001                     ___aodiv@dividend:
  1200                           	opt callstack 0
  1201  000001                     ___aomod@dividend:
  1202                           	opt callstack 0
  1203                           
  1204                           ; 8 bytes @ 0x0
  1205  000001                     	ds	1
  1206  000002                     i2c_envia_dato@dato:
  1207                           	opt callstack 0
  1208  000002                     i2c_recibe_dato@datoleido:
  1209                           	opt callstack 0
  1210  000002                     convertirDato@dato:
  1211                           	opt callstack 0
  1212  000002                     dameHumedadSuelo@canalLeer:
  1213                           	opt callstack 0
  1214  000002                     UART_printf@cadena:
  1215                           	opt callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x1
  1218  000002                     	ds	1
  1219  000003                     ??_encenderBombas:
  1220  000003                     ??_lecturaAnalogaSensores:
  1221  000003                     escribe_rtc@dato:
  1222                           	opt callstack 0
  1223  000003                     leer_rtc@direccion:
  1224                           	opt callstack 0
  1225  000003                     convertirDato@datoR:
  1226                           	opt callstack 0
  1227  000003                     constructorSensor@humedad:
  1228                           	opt callstack 0
  1229  000003                     leer_eeprom@direccion:
  1230                           	opt callstack 0
  1231  000003                     ___wmul@multiplicand:
  1232                           	opt callstack 0
  1233  000003                     fputc@fp:
  1234                           	opt callstack 0
  1235  000003                     strlen@a:
  1236                           	opt callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x2
  1239  000003                     	ds	1
  1240  000004                     escribe_rtc@direccion:
  1241                           	opt callstack 0
  1242  000004                     leer_rtc@dato:
  1243                           	opt callstack 0
  1244  000004                     constructorSensor@pin:
  1245                           	opt callstack 0
  1246  000004                     lecturaAnalogaSensores@i:
  1247                           	opt callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x3
  1250  000004                     	ds	1
  1251  000005                     ??_fputc:
  1252  000005                     ??_setRtc:
  1253  000005                     ??_leer_eeprom:
  1254  000005                     encenderBombas@flagSeco:
  1255                           	opt callstack 0
  1256  000005                     restablecerDatosSensor@i:
  1257                           	opt callstack 0
  1258  000005                     ___wmul@product:
  1259                           	opt callstack 0
  1260  000005                     ___aldiv@divisor:
  1261                           	opt callstack 0
  1262                           
  1263                           ; 4 bytes @ 0x4
  1264  000005                     	ds	1
  1265  000006                     setRtc@direccion:
  1266                           	opt callstack 0
  1267  000006                     leer_eeprom@dato:
  1268                           	opt callstack 0
  1269  000006                     encenderBombas@i:
  1270                           	opt callstack 0
  1271                           
  1272                           ; 2 bytes @ 0x5
  1273  000006                     	ds	1
  1274  000007                     setRtc@dato:
  1275                           	opt callstack 0
  1276  000007                     inicializarObjetos@i:
  1277                           	opt callstack 0
  1278  000007                     escribe_eeprom@direccion:
  1279                           	opt callstack 0
  1280  000007                     leeHorariosMemoria@contMemoria:
  1281                           	opt callstack 0
  1282                           
  1283                           ; 2 bytes @ 0x6
  1284  000007                     	ds	1
  1285  000008                     setRtc@datoCapturado:
  1286                           	opt callstack 0
  1287                           
  1288                           ; 1 bytes @ 0x7
  1289  000008                     	ds	1
  1290  000009                     escribe_eeprom@dato:
  1291                           	opt callstack 0
  1292  000009                     ___aldiv@counter:
  1293                           	opt callstack 0
  1294  000009                     setRtc@i:
  1295                           	opt callstack 0
  1296  000009                     leeHorariosMemoria@i:
  1297                           	opt callstack 0
  1298  000009                     ___aodiv@divisor:
  1299                           	opt callstack 0
  1300  000009                     ___aomod@divisor:
  1301                           	opt callstack 0
  1302                           
  1303                           ; 8 bytes @ 0x8
  1304  000009                     	ds	1
  1305  00000A                     ??_escribe_eeprom:
  1306  00000A                     ___aldiv@sign:
  1307                           	opt callstack 0
  1308  00000A                     fputs@s:
  1309                           	opt callstack 0
  1310                           
  1311                           ; 2 bytes @ 0x9
  1312  00000A                     	ds	1
  1313  00000B                     setRtc@Rx:
  1314                           	opt callstack 0
  1315  00000B                     escribeHorariosMemoria@contMemoria:
  1316                           	opt callstack 0
  1317  00000B                     ___aldiv@quotient:
  1318                           	opt callstack 0
  1319                           
  1320                           ; 4 bytes @ 0xA
  1321  00000B                     	ds	1
  1322  00000C                     fputs@fp:
  1323                           	opt callstack 0
  1324                           
  1325                           ; 2 bytes @ 0xB
  1326  00000C                     	ds	1
  1327  00000D                     escribeHorariosMemoria@i:
  1328                           	opt callstack 0
  1329                           
  1330                           ; 2 bytes @ 0xC
  1331  00000D                     	ds	1
  1332  00000E                     fputs@c:
  1333                           	opt callstack 0
  1334                           
  1335                           ; 1 bytes @ 0xD
  1336  00000E                     	ds	1
  1337  00000F                     asignarHorarios@hora:
  1338                           	opt callstack 0
  1339  00000F                     setTiempoRegar@tiempoRegar:
  1340                           	opt callstack 0
  1341  00000F                     fputs@i:
  1342                           	opt callstack 0
  1343  00000F                     UART_init@BAUD:
  1344                           	opt callstack 0
  1345                           
  1346                           ; 4 bytes @ 0xE
  1347  00000F                     	ds	1
  1348  000010                     asignarHorarios@datoCapturado:
  1349                           	opt callstack 0
  1350  000010                     setTiempoRegar@hora:
  1351                           	opt callstack 0
  1352                           
  1353                           ; 1 bytes @ 0xF
  1354  000010                     	ds	1
  1355  000011                     ?_pad:
  1356                           	opt callstack 0
  1357  000011                     ___aodiv@counter:
  1358                           	opt callstack 0
  1359  000011                     ___aomod@counter:
  1360                           	opt callstack 0
  1361  000011                     asignarHorarios@i:
  1362                           	opt callstack 0
  1363  000011                     setTiempoRegar@i:
  1364                           	opt callstack 0
  1365  000011                     pad@fp:
  1366                           	opt callstack 0
  1367                           
  1368                           ; 2 bytes @ 0x10
  1369  000011                     	ds	1
  1370  000012                     ___aodiv@sign:
  1371                           	opt callstack 0
  1372  000012                     ___aomod@sign:
  1373                           	opt callstack 0
  1374                           
  1375                           ; 1 bytes @ 0x11
  1376  000012                     	ds	1
  1377  000013                     ?_abs:
  1378                           	opt callstack 0
  1379  000013                     asignarHorarios@Rx:
  1380                           	opt callstack 0
  1381  000013                     setTiempoRegar@i_716:
  1382                           	opt callstack 0
  1383  000013                     pad@buf:
  1384                           	opt callstack 0
  1385  000013                     abs@a:
  1386                           	opt callstack 0
  1387  000013                     ___aodiv@quotient:
  1388                           	opt callstack 0
  1389                           
  1390                           ; 8 bytes @ 0x12
  1391  000013                     	ds	2
  1392  000015                     ??_abs:
  1393  000015                     setTiempoRegar@datoCapturado:
  1394                           	opt callstack 0
  1395  000015                     pad@p:
  1396                           	opt callstack 0
  1397                           
  1398                           ; 2 bytes @ 0x14
  1399  000015                     	ds	1
  1400  000016                     setTiempoRegar@Rx:
  1401                           	opt callstack 0
  1402                           
  1403                           ; 1 bytes @ 0x15
  1404  000016                     	ds	1
  1405  000017                     ??_pad:
  1406  000017                     _UART_init$1618:
  1407                           	opt callstack 0
  1408                           
  1409                           ; 4 bytes @ 0x16
  1410  000017                     	ds	1
  1411  000018                     pad@i:
  1412                           	opt callstack 0
  1413                           
  1414                           ; 2 bytes @ 0x17
  1415  000018                     	ds	2
  1416  00001A                     pad@w:
  1417                           	opt callstack 0
  1418                           
  1419                           ; 2 bytes @ 0x19
  1420  00001A                     	ds	2
  1421  00001C                     ?_dtoa:
  1422                           	opt callstack 0
  1423  00001C                     dtoa@fp:
  1424                           	opt callstack 0
  1425                           
  1426                           ; 2 bytes @ 0x1B
  1427  00001C                     	ds	2
  1428  00001E                     dtoa@d:
  1429                           	opt callstack 0
  1430                           
  1431                           ; 8 bytes @ 0x1D
  1432  00001E                     	ds	8
  1433  000026                     ??_dtoa:
  1434                           
  1435                           ; 1 bytes @ 0x25
  1436  000026                     	ds	8
  1437  00002E                     _dtoa$851:
  1438                           	opt callstack 0
  1439                           
  1440                           ; 2 bytes @ 0x2D
  1441  00002E                     	ds	2
  1442  000030                     dtoa@p:
  1443                           	opt callstack 0
  1444                           
  1445                           ; 2 bytes @ 0x2F
  1446  000030                     	ds	2
  1447  000032                     dtoa@w:
  1448                           	opt callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x31
  1451  000032                     	ds	2
  1452  000034                     dtoa@s:
  1453                           	opt callstack 0
  1454                           
  1455                           ; 2 bytes @ 0x33
  1456  000034                     	ds	2
  1457  000036                     dtoa@n:
  1458                           	opt callstack 0
  1459                           
  1460                           ; 8 bytes @ 0x35
  1461  000036                     	ds	8
  1462  00003E                     dtoa@i:
  1463                           	opt callstack 0
  1464                           
  1465                           ; 2 bytes @ 0x3D
  1466  00003E                     	ds	2
  1467  000040                     ?_vfpfcnvrt:
  1468                           	opt callstack 0
  1469  000040                     vfpfcnvrt@fp:
  1470                           	opt callstack 0
  1471                           
  1472                           ; 2 bytes @ 0x3F
  1473  000040                     	ds	2
  1474  000042                     vfpfcnvrt@fmt:
  1475                           	opt callstack 0
  1476                           
  1477                           ; 2 bytes @ 0x41
  1478  000042                     	ds	2
  1479  000044                     vfpfcnvrt@ap:
  1480                           	opt callstack 0
  1481                           
  1482                           ; 2 bytes @ 0x43
  1483  000044                     	ds	2
  1484  000046                     ??_vfpfcnvrt:
  1485                           
  1486                           ; 1 bytes @ 0x45
  1487  000046                     	ds	2
  1488  000048                     vfpfcnvrt@ll:
  1489                           	opt callstack 0
  1490                           
  1491                           ; 8 bytes @ 0x47
  1492  000048                     	ds	8
  1493  000050                     ?_vfprintf:
  1494                           	opt callstack 0
  1495  000050                     vfprintf@fp:
  1496                           	opt callstack 0
  1497                           
  1498                           ; 2 bytes @ 0x4F
  1499  000050                     	ds	2
  1500  000052                     vfprintf@fmt:
  1501                           	opt callstack 0
  1502                           
  1503                           ; 2 bytes @ 0x51
  1504  000052                     	ds	2
  1505  000054                     vfprintf@ap:
  1506                           	opt callstack 0
  1507                           
  1508                           ; 2 bytes @ 0x53
  1509  000054                     	ds	2
  1510  000056                     vfprintf@cfmt:
  1511                           	opt callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x55
  1514  000056                     	ds	2
  1515  000058                     ??_dameDatosSistema:
  1516  000058                     
  1517                           ; 1 bytes @ 0x57
  1518  000058                     	ds	3
  1519  00005B                     ??_sistemaPrincipal:
  1520                           
  1521                           ; 1 bytes @ 0x5A
  1522  00005B                     	ds	2
  1523  00005D                     sistemaPrincipal@opcion:
  1524                           	opt callstack 0
  1525                           
  1526                           ; 1 bytes @ 0x5C
  1527  00005D                     	ds	1
  1528  00005E                     
  1529                           ; 1 bytes @ 0x5D
  1530 ;;
  1531 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1532 ;;
  1533 ;; *************** function _main *****************
  1534 ;; Defined at:
  1535 ;;		line 622 in file "main.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;		None
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;		None
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1549 ;;      Params:         0       0       0       0       0       0       0       0       0
  1550 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1551 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1552 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1553 ;;Total ram usage:        0 bytes
  1554 ;; Hardware stack levels required when called:   11
  1555 ;; This function calls:
  1556 ;;		_UART_init
  1557 ;;		_configurarAdc
  1558 ;;		_i2c_iniciar
  1559 ;;		_inicializarObjetos
  1560 ;;		_leeHorariosMemoria
  1561 ;;		_mostrarMenu
  1562 ;;		_restablecerDatosSensor
  1563 ;;		_sistemaPrincipal
  1564 ;;		_sistemaRegado
  1565 ;; This function is called by:
  1566 ;;		Startup code after reset
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text0
  1571  001376                     __ptext0:
  1572                           	opt callstack 0
  1573  001376                     _main:
  1574                           	opt callstack 20
  1575  001376                     
  1576                           ;main.c: 624:     INTCONbits.GIE = 1;
  1577  001376  8EF2               	bsf	242,7,c	;volatile
  1578                           
  1579                           ;main.c: 625:     INTCONbits.PEIE = 1;
  1580  001378  8CF2               	bsf	242,6,c	;volatile
  1581                           
  1582                           ;main.c: 626:     INTCONbits.TMR0IE = 0;
  1583  00137A  9AF2               	bcf	242,5,c	;volatile
  1584                           
  1585                           ;main.c: 627:     INTCONbits.TMR0IF = 0;
  1586  00137C  94F2               	bcf	242,2,c	;volatile
  1587                           
  1588                           ;main.c: 628:     PIE1bits.RCIE = 1;
  1589  00137E  8A9D               	bsf	157,5,c	;volatile
  1590  001380                     
  1591                           ;main.c: 630:     T0CON = 0b00000111;
  1592  001380  0E07               	movlw	7
  1593  001382  6ED5               	movwf	213,c	;volatile
  1594  001384                     
  1595                           ;main.c: 632:     INTCONbits.TMR0IE = 1;
  1596  001384  8AF2               	bsf	242,5,c	;volatile
  1597  001386                     
  1598                           ;main.c: 637:     restablecerDatosSensor();
  1599  001386  EC35  F00C         	call	_restablecerDatosSensor	;wreg free
  1600  00138A                     
  1601                           ;main.c: 639:     UART_init(9600);
  1602  00138A  0E80               	movlw	128
  1603  00138C  6E0F               	movwf	UART_init@BAUD^0,c
  1604  00138E  0E25               	movlw	37
  1605  001390  6E10               	movwf	(UART_init@BAUD+1)^0,c
  1606  001392  0E00               	movlw	0
  1607  001394  6E11               	movwf	(UART_init@BAUD+2)^0,c
  1608  001396  0E00               	movlw	0
  1609  001398  6E12               	movwf	(UART_init@BAUD+3)^0,c
  1610  00139A  EC8E  F00A         	call	_UART_init	;wreg free
  1611  00139E                     
  1612                           ;main.c: 640:     i2c_iniciar();
  1613  00139E  ECE7  F00D         	call	_i2c_iniciar	;wreg free
  1614  0013A2                     
  1615                           ;main.c: 641:     configurarAdc();
  1616  0013A2  ECCF  F00D         	call	_configurarAdc	;wreg free
  1617  0013A6                     
  1618                           ;main.c: 642:     inicializarObjetos();
  1619  0013A6  EC06  F00A         	call	_inicializarObjetos	;wreg free
  1620  0013AA                     
  1621                           ;main.c: 644:     leeHorariosMemoria();
  1622  0013AA  EC40  F008         	call	_leeHorariosMemoria	;wreg free
  1623  0013AE                     
  1624                           ;main.c: 647:     TRISD = 0;
  1625  0013AE  0E00               	movlw	0
  1626  0013B0  6E95               	movwf	149,c	;volatile
  1627  0013B2                     
  1628                           ;main.c: 648:     LATD = 0;
  1629  0013B2  0E00               	movlw	0
  1630  0013B4  6E8C               	movwf	140,c	;volatile
  1631  0013B6                     
  1632                           ;main.c: 650:     TMR0 = VALOR_TIMER0;
  1633  0013B6  C0F2  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  1634  0013BA  C0F3  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  1635  0013BE                     
  1636                           ;main.c: 652:     INTCONbits.TMR0IF = 1;
  1637  0013BE  84F2               	bsf	242,2,c	;volatile
  1638  0013C0                     
  1639                           ;main.c: 654:     T0CONbits.TMR0ON = 1;
  1640  0013C0  8ED5               	bsf	213,7,c	;volatile
  1641  0013C2                     
  1642                           ;main.c: 656:     mostrarMenu();
  1643  0013C2  EC8D  F00B         	call	_mostrarMenu	;wreg free
  1644  0013C6                     l3141:
  1645                           
  1646                           ;main.c: 660:         if (datoRecibido) {
  1647  0013C6  0100               	movlb	0	; () banked
  1648  0013C8  51C6               	movf	_datoRecibido& (0+255),w,b
  1649  0013CA  B4D8               	btfsc	status,2,c
  1650  0013CC  EFEA  F009         	goto	u2451
  1651  0013D0  EFEC  F009         	goto	u2450
  1652  0013D4                     u2451:
  1653  0013D4  EFF3  F009         	goto	l3149
  1654  0013D8                     u2450:
  1655  0013D8                     
  1656                           ; BSR set to: 0
  1657                           ;main.c: 662:             datoRecibido = 0;
  1658  0013D8  0E00               	movlw	0
  1659  0013DA  6FC6               	movwf	_datoRecibido& (0+255),b
  1660  0013DC                     
  1661                           ; BSR set to: 0
  1662                           ;main.c: 663:             byteUart -= 48;
  1663  0013DC  0E30               	movlw	48
  1664  0013DE  5FCB               	subwf	_byteUart& (0+255),f,b
  1665  0013E0                     
  1666                           ; BSR set to: 0
  1667                           ;main.c: 664:             sistemaPrincipal(byteUart);
  1668  0013E0  51CB               	movf	_byteUart& (0+255),w,b
  1669  0013E2  EC51  F00A         	call	_sistemaPrincipal
  1670  0013E6                     l3149:
  1671                           
  1672                           ;main.c: 668:         if (overflowTimer) {
  1673  0013E6  0100               	movlb	0	; () banked
  1674  0013E8  51C5               	movf	_overflowTimer& (0+255),w,b
  1675  0013EA  B4D8               	btfsc	status,2,c
  1676  0013EC  EFFA  F009         	goto	u2461
  1677  0013F0  EFFC  F009         	goto	u2460
  1678  0013F4                     u2461:
  1679  0013F4  EFE3  F009         	goto	l3141
  1680  0013F8                     u2460:
  1681  0013F8                     
  1682                           ; BSR set to: 0
  1683                           ;main.c: 670:             esperandoDatos = 0;
  1684  0013F8  0E00               	movlw	0
  1685  0013FA  6E5E               	movwf	_esperandoDatos^0,c
  1686                           
  1687                           ;main.c: 671:             overflowTimer = 0;
  1688  0013FC  0E00               	movlw	0
  1689  0013FE  6FC5               	movwf	_overflowTimer& (0+255),b
  1690  001400                     
  1691                           ; BSR set to: 0
  1692                           ;main.c: 672:             sistemaRegado();
  1693  001400  EC6A  F009         	call	_sistemaRegado	;wreg free
  1694  001404  EFE3  F009         	goto	l3141
  1695  001408  EF07  F000         	goto	start
  1696  00140C                     __end_of_main:
  1697                           	opt callstack 0
  1698                           
  1699 ;; *************** function _sistemaRegado *****************
  1700 ;; Defined at:
  1701 ;;		line 567 in file "main.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;		None
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;		None
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      void 
  1708 ;; Registers used:
  1709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1715 ;;      Params:         0       0       0       0       0       0       0       0       0
  1716 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1717 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1718 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1719 ;;Total ram usage:        0 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; Hardware stack levels required when called:    5
  1722 ;; This function calls:
  1723 ;;		_dameHoraActual
  1724 ;;		_encenderBombas
  1725 ;;		_horaRegar
  1726 ;;		_lecturaAnalogaSensores
  1727 ;; This function is called by:
  1728 ;;		_main
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text1
  1733  0012D4                     __ptext1:
  1734                           	opt callstack 0
  1735  0012D4                     _sistemaRegado:
  1736                           	opt callstack 25
  1737  0012D4                     
  1738                           ;main.c: 571:     if (regando) {
  1739  0012D4  0100               	movlb	0	; () banked
  1740  0012D6  51C2               	movf	_regando& (0+255),w,b
  1741  0012D8  B4D8               	btfsc	status,2,c
  1742  0012DA  EF71  F009         	goto	u2331
  1743  0012DE  EF73  F009         	goto	u2330
  1744  0012E2                     u2331:
  1745  0012E2  EF95  F009         	goto	l3033
  1746  0012E6                     u2330:
  1747  0012E6                     
  1748                           ; BSR set to: 0
  1749                           ;main.c: 572:         contInterrupciones++;
  1750  0012E6  4BC0               	infsnz	_contInterrupciones& (0+255),f,b
  1751  0012E8  2BC1               	incf	(_contInterrupciones+1)& (0+255),f,b
  1752  0012EA                     
  1753                           ; BSR set to: 0
  1754                           ;main.c: 574:         if (contInterrupciones == 6) {
  1755  0012EA  0E06               	movlw	6
  1756  0012EC  19C0               	xorwf	_contInterrupciones& (0+255),w,b
  1757  0012EE  11C1               	iorwf	(_contInterrupciones+1)& (0+255),w,b
  1758  0012F0  A4D8               	btfss	status,2,c
  1759  0012F2  EF7D  F009         	goto	u2341
  1760  0012F6  EF7F  F009         	goto	u2340
  1761  0012FA                     u2341:
  1762  0012FA  EFBA  F009         	goto	l325
  1763  0012FE                     u2340:
  1764  0012FE                     
  1765                           ; BSR set to: 0
  1766                           ;main.c: 575:             contInterrupciones = 0;
  1767  0012FE  0E00               	movlw	0
  1768  001300  6FC1               	movwf	(_contInterrupciones+1)& (0+255),b
  1769  001302  0E00               	movlw	0
  1770  001304  6FC0               	movwf	_contInterrupciones& (0+255),b
  1771  001306                     
  1772                           ; BSR set to: 0
  1773                           ;main.c: 576:             minutosTranscurridos++;
  1774  001306  2BC3               	incf	_minutosTranscurridos& (0+255),f,b
  1775  001308                     
  1776                           ; BSR set to: 0
  1777                           ;main.c: 579:             if (minutosTranscurridos >= minutosRegar) {
  1778  001308  51C4               	movf	_minutosRegar& (0+255),w,b
  1779  00130A  5DC3               	subwf	_minutosTranscurridos& (0+255),w,b
  1780  00130C  A0D8               	btfss	status,0,c
  1781  00130E  EF8B  F009         	goto	u2351
  1782  001312  EF8D  F009         	goto	u2350
  1783  001316                     u2351:
  1784  001316  EFBA  F009         	goto	l325
  1785  00131A                     u2350:
  1786  00131A                     
  1787                           ; BSR set to: 0
  1788                           ;main.c: 581:                 LATD = 0;
  1789  00131A  0E00               	movlw	0
  1790  00131C  6E8C               	movwf	140,c	;volatile
  1791                           
  1792                           ;main.c: 582:                 minutosTranscurridos = 0;
  1793  00131E  0E00               	movlw	0
  1794  001320  6FC3               	movwf	_minutosTranscurridos& (0+255),b
  1795                           
  1796                           ;main.c: 583:                 regando = 0;
  1797  001322  0E00               	movlw	0
  1798  001324  6FC2               	movwf	_regando& (0+255),b
  1799  001326  EFBA  F009         	goto	l325
  1800  00132A                     l3033:
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;main.c: 589:         dameHoraActual();
  1804  00132A  EC45  F00D         	call	_dameHoraActual	;wreg free
  1805  00132E                     
  1806                           ;main.c: 591:         if (horaRegar() && !minutos) {
  1807  00132E  EC2F  F00D         	call	_horaRegar	;wreg free
  1808  001332  5001               	movf	?_horaRegar^0,w,c
  1809  001334  1002               	iorwf	(?_horaRegar+1)^0,w,c
  1810  001336  B4D8               	btfsc	status,2,c
  1811  001338  EFA0  F009         	goto	u2361
  1812  00133C  EFA2  F009         	goto	u2360
  1813  001340                     u2361:
  1814  001340  EFBA  F009         	goto	l325
  1815  001344                     u2360:
  1816  001344  0100               	movlb	0	; () banked
  1817  001346  51C8               	movf	_minutos& (0+255),w,b
  1818  001348  A4D8               	btfss	status,2,c
  1819  00134A  EFA9  F009         	goto	u2371
  1820  00134E  EFAB  F009         	goto	u2370
  1821  001352                     u2371:
  1822  001352  EFBA  F009         	goto	l325
  1823  001356                     u2370:
  1824  001356                     
  1825                           ; BSR set to: 0
  1826                           ;main.c: 596:             lecturaAnalogaSensores();
  1827  001356  ECB8  F00B         	call	_lecturaAnalogaSensores	;wreg free
  1828  00135A                     
  1829                           ;main.c: 598:             minutosRegar = horarios[hora].tiempoRegar;
  1830  00135A  0100               	movlb	0	; () banked
  1831  00135C  51C9               	movf	_hora& (0+255),w,b
  1832  00135E  0D03               	mullw	3
  1833  001360  0E62               	movlw	low (_horarios+2)
  1834  001362  24F3               	addwf	243,w,c
  1835  001364  6ED9               	movwf	fsr2l,c
  1836  001366  0E00               	movlw	high (_horarios+2)
  1837  001368  20F4               	addwfc	prodh,w,c
  1838  00136A  6EDA               	movwf	fsr2h,c
  1839  00136C  50DF               	movf	indf2,w,c
  1840  00136E  6FC4               	movwf	_minutosRegar& (0+255),b
  1841  001370                     
  1842                           ; BSR set to: 0
  1843                           ;main.c: 599:             encenderBombas();
  1844  001370  EC7B  F001         	call	_encenderBombas	;wreg free
  1845  001374                     l325:
  1846  001374  0012               	return		;funcret
  1847  001376                     __end_of_sistemaRegado:
  1848                           	opt callstack 0
  1849                           
  1850 ;; *************** function _lecturaAnalogaSensores *****************
  1851 ;; Defined at:
  1852 ;;		line 514 in file "main.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;		None
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;  i               2    3[COMRAM] int 
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      void 
  1859 ;; Registers used:
  1860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1866 ;;      Params:         0       0       0       0       0       0       0       0       0
  1867 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1868 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1869 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1870 ;;Total ram usage:        3 bytes
  1871 ;; Hardware stack levels used:    1
  1872 ;; Hardware stack levels required when called:    2
  1873 ;; This function calls:
  1874 ;;		_dameHumedadSuelo
  1875 ;; This function is called by:
  1876 ;;		_sistemaRegado
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           	psect	text2
  1881  001770                     __ptext2:
  1882                           	opt callstack 0
  1883  001770                     _lecturaAnalogaSensores:
  1884                           	opt callstack 27
  1885  001770                     
  1886                           ;main.c: 516:     for (int i = 0; i < 3; i++) {
  1887  001770  0E00               	movlw	0
  1888  001772  6E05               	movwf	(lecturaAnalogaSensores@i+1)^0,c
  1889  001774  0E00               	movlw	0
  1890  001776  6E04               	movwf	lecturaAnalogaSensores@i^0,c
  1891  001778                     l2853:
  1892                           
  1893                           ;main.c: 517:         sensores[i].humedadMedida = dameHumedadSuelo(i);
  1894  001778  90D8               	bcf	status,0,c
  1895  00177A  3404               	rlcf	lecturaAnalogaSensores@i^0,w,c
  1896  00177C  6ED9               	movwf	fsr2l,c
  1897  00177E  3405               	rlcf	(lecturaAnalogaSensores@i+1)^0,w,c
  1898  001780  6EDA               	movwf	fsr2h,c
  1899  001782  0EA8               	movlw	low _sensores
  1900  001784  26D9               	addwf	fsr2l,f,c
  1901  001786  0E00               	movlw	high _sensores
  1902  001788  22DA               	addwfc	fsr2h,f,c
  1903  00178A  5004               	movf	lecturaAnalogaSensores@i^0,w,c
  1904  00178C  ECE1  F00C         	call	_dameHumedadSuelo
  1905  001790  6EDF               	movwf	indf2,c
  1906  001792                     
  1907                           ;main.c: 518:         _delay((unsigned long)((5)*(4000000/4000.0)));
  1908  001792  0E07               	movlw	7
  1909  001794  6E03               	movwf	??_lecturaAnalogaSensores^0,c
  1910  001796  0E7D               	movlw	125
  1911  001798                     u2477:
  1912  001798  2EE8               	decfsz	wreg,f,c
  1913  00179A  D7FE               	bra	u2477
  1914  00179C  2E03               	decfsz	??_lecturaAnalogaSensores^0,f,c
  1915  00179E  D7FC               	bra	u2477
  1916  0017A0  F000               	nop	
  1917  0017A2                     
  1918                           ;main.c: 519:     }
  1919  0017A2  4A04               	infsnz	lecturaAnalogaSensores@i^0,f,c
  1920  0017A4  2A05               	incf	(lecturaAnalogaSensores@i+1)^0,f,c
  1921  0017A6  BE05               	btfsc	(lecturaAnalogaSensores@i+1)^0,7,c
  1922  0017A8  EFDF  F00B         	goto	u2221
  1923  0017AC  5005               	movf	(lecturaAnalogaSensores@i+1)^0,w,c
  1924  0017AE  E109               	bnz	u2220
  1925  0017B0  0E03               	movlw	3
  1926  0017B2  5C04               	subwf	lecturaAnalogaSensores@i^0,w,c
  1927  0017B4  A0D8               	btfss	status,0,c
  1928  0017B6  EFDF  F00B         	goto	u2221
  1929  0017BA  EFE1  F00B         	goto	u2220
  1930  0017BE                     u2221:
  1931  0017BE  EFBC  F00B         	goto	l2853
  1932  0017C2                     u2220:
  1933  0017C2  0012               	return		;funcret
  1934  0017C4                     __end_of_lecturaAnalogaSensores:
  1935                           	opt callstack 0
  1936                           
  1937 ;; *************** function _dameHumedadSuelo *****************
  1938 ;; Defined at:
  1939 ;;		line 455 in file "main.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;  canalLeer       1    wreg     unsigned char 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;  canalLeer       1    1[COMRAM] unsigned char 
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      unsigned char 
  1946 ;; Registers used:
  1947 ;;		wreg, status,2, status,0
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1953 ;;      Params:         0       0       0       0       0       0       0       0       0
  1954 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1955 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1956 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1957 ;;Total ram usage:        2 bytes
  1958 ;; Hardware stack levels used:    1
  1959 ;; Hardware stack levels required when called:    1
  1960 ;; This function calls:
  1961 ;;		Nothing
  1962 ;; This function is called by:
  1963 ;;		_lecturaAnalogaSensores
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text3
  1968  0019C2                     __ptext3:
  1969                           	opt callstack 0
  1970  0019C2                     _dameHumedadSuelo:
  1971                           	opt callstack 27
  1972                           
  1973                           ;incstack = 0
  1974                           ;dameHumedadSuelo@canalLeer stored from wreg
  1975  0019C2  6E02               	movwf	dameHumedadSuelo@canalLeer^0,c
  1976  0019C4                     
  1977                           ;main.c: 457:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  1978  0019C4  0E06               	movlw	6
  1979  0019C6                     u2487:
  1980  0019C6  2EE8               	decfsz	wreg,f,c
  1981  0019C8  D7FE               	bra	u2487
  1982  0019CA  D000               	nop2	
  1983  0019CC                     
  1984                           ;main.c: 459:     ADCON0bits.ADON = 1;
  1985  0019CC  80C2               	bsf	194,0,c	;volatile
  1986  0019CE                     
  1987                           ;main.c: 460:     ADCON0bits.CHS = canalLeer;
  1988  0019CE  C002  F001         	movff	dameHumedadSuelo@canalLeer,??_dameHumedadSuelo
  1989  0019D2  4601               	rlncf	??_dameHumedadSuelo^0,f,c
  1990  0019D4  4601               	rlncf	??_dameHumedadSuelo^0,f,c
  1991  0019D6  50C2               	movf	194,w,c	;volatile
  1992  0019D8  1801               	xorwf	??_dameHumedadSuelo^0,w,c
  1993  0019DA  0BC3               	andlw	-61
  1994  0019DC  1801               	xorwf	??_dameHumedadSuelo^0,w,c
  1995  0019DE  6EC2               	movwf	194,c	;volatile
  1996  0019E0                     
  1997                           ;main.c: 461:     ADCON0bits.GO = 1;
  1998  0019E0  82C2               	bsf	194,1,c	;volatile
  1999  0019E2                     
  2000                           ;main.c: 462:     ADCON0bits.GO_DONE = 1;
  2001  0019E2  82C2               	bsf	194,1,c	;volatile
  2002  0019E4                     l283:
  2003  0019E4  B2C2               	btfsc	194,1,c	;volatile
  2004  0019E6  EFF7  F00C         	goto	u1861
  2005  0019EA  EFF9  F00C         	goto	u1860
  2006  0019EE                     u1861:
  2007  0019EE  EFF2  F00C         	goto	l283
  2008  0019F2                     u1860:
  2009  0019F2                     
  2010                           ;main.c: 466:     ADCON0bits.ADON = 0;
  2011  0019F2  90C2               	bcf	194,0,c	;volatile
  2012  0019F4                     
  2013                           ;main.c: 468:     return (ADRESH << 8) +ADRESL;
  2014  0019F4  50C3               	movf	195,w,c	;volatile
  2015  0019F6  0012               	return		;funcret
  2016  0019F8                     __end_of_dameHumedadSuelo:
  2017                           	opt callstack 0
  2018                           
  2019 ;; *************** function _horaRegar *****************
  2020 ;; Defined at:
  2021 ;;		line 121 in file "main.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;		None
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;		None
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  2    0[COMRAM] int 
  2028 ;; Registers used:
  2029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2035 ;;      Params:         2       0       0       0       0       0       0       0       0
  2036 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2037 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2038 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2039 ;;Total ram usage:        3 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    1
  2042 ;; This function calls:
  2043 ;;		Nothing
  2044 ;; This function is called by:
  2045 ;;		_sistemaRegado
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           	psect	text4
  2050  001A5E                     __ptext4:
  2051                           	opt callstack 0
  2052  001A5E                     _horaRegar:
  2053                           	opt callstack 28
  2054  001A5E                     
  2055                           ;main.c: 123:     return horarios[hora].regar == 1;
  2056  001A5E  0100               	movlb	0	; () banked
  2057  001A60  51C9               	movf	_hora& (0+255),w,b
  2058  001A62  0D03               	mullw	3
  2059  001A64  0E61               	movlw	low (_horarios+1)
  2060  001A66  24F3               	addwf	243,w,c
  2061  001A68  6ED9               	movwf	fsr2l,c
  2062  001A6A  0E00               	movlw	high (_horarios+1)
  2063  001A6C  20F4               	addwfc	prodh,w,c
  2064  001A6E  6EDA               	movwf	fsr2h,c
  2065  001A70  04DE               	decf	postinc2,w,c
  2066  001A72  B4D8               	btfsc	status,2,c
  2067  001A74  EF3E  F00D         	goto	u1871
  2068  001A78  EF41  F00D         	goto	u1870
  2069  001A7C                     u1871:
  2070  001A7C  0E01               	movlw	1
  2071  001A7E  EF42  F00D         	goto	u1880
  2072  001A82                     u1870:
  2073  001A82  0E00               	movlw	0
  2074  001A84                     u1880:
  2075  001A84  6E01               	movwf	?_horaRegar^0,c
  2076  001A86  6A02               	clrf	(?_horaRegar+1)^0,c
  2077  001A88                     
  2078                           ; BSR set to: 0
  2079  001A88  0012               	return		;funcret
  2080  001A8A                     __end_of_horaRegar:
  2081                           	opt callstack 0
  2082                           
  2083 ;; *************** function _encenderBombas *****************
  2084 ;; Defined at:
  2085 ;;		line 232 in file "main.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;		None
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;  i               2    5[COMRAM] int 
  2090 ;;  flagSeco        1    4[COMRAM] unsigned char 
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  1    wreg      void 
  2093 ;; Registers used:
  2094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2100 ;;      Params:         0       0       0       0       0       0       0       0       0
  2101 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2102 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2103 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2104 ;;Total ram usage:        5 bytes
  2105 ;; Hardware stack levels used:    1
  2106 ;; Hardware stack levels required when called:    2
  2107 ;; This function calls:
  2108 ;;		_estaSeco
  2109 ;; This function is called by:
  2110 ;;		_sistemaRegado
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           	psect	text5
  2115  0002F6                     __ptext5:
  2116                           	opt callstack 0
  2117  0002F6                     _encenderBombas:
  2118                           	opt callstack 27
  2119  0002F6                     
  2120                           ;main.c: 234:     char flagSeco = 0;
  2121  0002F6  0E00               	movlw	0
  2122  0002F8  6E05               	movwf	encenderBombas@flagSeco^0,c
  2123                           
  2124                           ;main.c: 236:     for (int i = 0; i < 3; i++) {
  2125  0002FA  0E00               	movlw	0
  2126  0002FC  6E07               	movwf	(encenderBombas@i+1)^0,c
  2127  0002FE  0E00               	movlw	0
  2128  000300  6E06               	movwf	encenderBombas@i^0,c
  2129  000302  EF5D  F002         	goto	l2659
  2130  000306                     l2609:
  2131                           
  2132                           ;main.c: 241:                 if (estaSeco(sensores[i])) {
  2133  000306  90D8               	bcf	status,0,c
  2134  000308  3406               	rlcf	encenderBombas@i^0,w,c
  2135  00030A  6ED9               	movwf	fsr2l,c
  2136  00030C  3407               	rlcf	(encenderBombas@i+1)^0,w,c
  2137  00030E  6EDA               	movwf	fsr2h,c
  2138  000310  0EA8               	movlw	low _sensores
  2139  000312  26D9               	addwf	fsr2l,f,c
  2140  000314  0E00               	movlw	high _sensores
  2141  000316  22DA               	addwfc	fsr2h,f,c
  2142  000318  CFDE F001          	movff	postinc2,estaSeco@s
  2143  00031C  CFDD F002          	movff	postdec2,estaSeco@s+1
  2144  000320  ECB5  F00D         	call	_estaSeco	;wreg free
  2145  000324  5001               	movf	?_estaSeco^0,w,c
  2146  000326  1002               	iorwf	(?_estaSeco+1)^0,w,c
  2147  000328  B4D8               	btfsc	status,2,c
  2148  00032A  EF99  F001         	goto	u1891
  2149  00032E  EF9B  F001         	goto	u1890
  2150  000332                     u1891:
  2151  000332  EF8B  F002         	goto	l2661
  2152  000336                     u1890:
  2153  000336                     
  2154                           ;main.c: 242:                     LATDbits.LATD0 = 1;
  2155  000336  808C               	bsf	140,0,c	;volatile
  2156  000338                     l2613:
  2157                           
  2158                           ;main.c: 243:                     flagSeco = 1;
  2159  000338  0E01               	movlw	1
  2160  00033A  6E05               	movwf	encenderBombas@flagSeco^0,c
  2161  00033C  EF8B  F002         	goto	l2661
  2162  000340                     l2615:
  2163                           
  2164                           ;main.c: 248:                 if (estaSeco(sensores[i])) {
  2165  000340  90D8               	bcf	status,0,c
  2166  000342  3406               	rlcf	encenderBombas@i^0,w,c
  2167  000344  6ED9               	movwf	fsr2l,c
  2168  000346  3407               	rlcf	(encenderBombas@i+1)^0,w,c
  2169  000348  6EDA               	movwf	fsr2h,c
  2170  00034A  0EA8               	movlw	low _sensores
  2171  00034C  26D9               	addwf	fsr2l,f,c
  2172  00034E  0E00               	movlw	high _sensores
  2173  000350  22DA               	addwfc	fsr2h,f,c
  2174  000352  CFDE F001          	movff	postinc2,estaSeco@s
  2175  000356  CFDD F002          	movff	postdec2,estaSeco@s+1
  2176  00035A  ECB5  F00D         	call	_estaSeco	;wreg free
  2177  00035E  5001               	movf	?_estaSeco^0,w,c
  2178  000360  1002               	iorwf	(?_estaSeco+1)^0,w,c
  2179  000362  B4D8               	btfsc	status,2,c
  2180  000364  EFB6  F001         	goto	u1901
  2181  000368  EFB8  F001         	goto	u1900
  2182  00036C                     u1901:
  2183  00036C  EF8B  F002         	goto	l2661
  2184  000370                     u1900:
  2185  000370                     
  2186                           ;main.c: 249:                     LATDbits.LATD1 = 1;
  2187  000370  828C               	bsf	140,1,c	;volatile
  2188  000372  EF9C  F001         	goto	l2613
  2189  000376                     l2621:
  2190                           
  2191                           ;main.c: 255:                 if (estaSeco(sensores[i])) {
  2192  000376  90D8               	bcf	status,0,c
  2193  000378  3406               	rlcf	encenderBombas@i^0,w,c
  2194  00037A  6ED9               	movwf	fsr2l,c
  2195  00037C  3407               	rlcf	(encenderBombas@i+1)^0,w,c
  2196  00037E  6EDA               	movwf	fsr2h,c
  2197  000380  0EA8               	movlw	low _sensores
  2198  000382  26D9               	addwf	fsr2l,f,c
  2199  000384  0E00               	movlw	high _sensores
  2200  000386  22DA               	addwfc	fsr2h,f,c
  2201  000388  CFDE F001          	movff	postinc2,estaSeco@s
  2202  00038C  CFDD F002          	movff	postdec2,estaSeco@s+1
  2203  000390  ECB5  F00D         	call	_estaSeco	;wreg free
  2204  000394  5001               	movf	?_estaSeco^0,w,c
  2205  000396  1002               	iorwf	(?_estaSeco+1)^0,w,c
  2206  000398  B4D8               	btfsc	status,2,c
  2207  00039A  EFD1  F001         	goto	u1911
  2208  00039E  EFD3  F001         	goto	u1910
  2209  0003A2                     u1911:
  2210  0003A2  EF8B  F002         	goto	l2661
  2211  0003A6                     u1910:
  2212  0003A6                     
  2213                           ;main.c: 256:                     LATDbits.LATD2 = 1;
  2214  0003A6  848C               	bsf	140,2,c	;volatile
  2215  0003A8  EF9C  F001         	goto	l2613
  2216  0003AC                     l2627:
  2217                           
  2218                           ;main.c: 262:                 if (estaSeco(sensores[i])) {
  2219  0003AC  90D8               	bcf	status,0,c
  2220  0003AE  3406               	rlcf	encenderBombas@i^0,w,c
  2221  0003B0  6ED9               	movwf	fsr2l,c
  2222  0003B2  3407               	rlcf	(encenderBombas@i+1)^0,w,c
  2223  0003B4  6EDA               	movwf	fsr2h,c
  2224  0003B6  0EA8               	movlw	low _sensores
  2225  0003B8  26D9               	addwf	fsr2l,f,c
  2226  0003BA  0E00               	movlw	high _sensores
  2227  0003BC  22DA               	addwfc	fsr2h,f,c
  2228  0003BE  CFDE F001          	movff	postinc2,estaSeco@s
  2229  0003C2  CFDD F002          	movff	postdec2,estaSeco@s+1
  2230  0003C6  ECB5  F00D         	call	_estaSeco	;wreg free
  2231  0003CA  5001               	movf	?_estaSeco^0,w,c
  2232  0003CC  1002               	iorwf	(?_estaSeco+1)^0,w,c
  2233  0003CE  B4D8               	btfsc	status,2,c
  2234  0003D0  EFEC  F001         	goto	u1921
  2235  0003D4  EFEE  F001         	goto	u1920
  2236  0003D8                     u1921:
  2237  0003D8  EF8B  F002         	goto	l2661
  2238  0003DC                     u1920:
  2239  0003DC                     
  2240                           ;main.c: 263:                     LATDbits.LATD3 = 1;
  2241  0003DC  868C               	bsf	140,3,c	;volatile
  2242  0003DE  EF9C  F001         	goto	l2613
  2243  0003E2                     l2633:
  2244                           
  2245                           ;main.c: 269:                 if (estaSeco(sensores[i])) {
  2246  0003E2  90D8               	bcf	status,0,c
  2247  0003E4  3406               	rlcf	encenderBombas@i^0,w,c
  2248  0003E6  6ED9               	movwf	fsr2l,c
  2249  0003E8  3407               	rlcf	(encenderBombas@i+1)^0,w,c
  2250  0003EA  6EDA               	movwf	fsr2h,c
  2251  0003EC  0EA8               	movlw	low _sensores
  2252  0003EE  26D9               	addwf	fsr2l,f,c
  2253  0003F0  0E00               	movlw	high _sensores
  2254  0003F2  22DA               	addwfc	fsr2h,f,c
  2255  0003F4  CFDE F001          	movff	postinc2,estaSeco@s
  2256  0003F8  CFDD F002          	movff	postdec2,estaSeco@s+1
  2257  0003FC  ECB5  F00D         	call	_estaSeco	;wreg free
  2258  000400  5001               	movf	?_estaSeco^0,w,c
  2259  000402  1002               	iorwf	(?_estaSeco+1)^0,w,c
  2260  000404  B4D8               	btfsc	status,2,c
  2261  000406  EF07  F002         	goto	u1931
  2262  00040A  EF09  F002         	goto	u1930
  2263  00040E                     u1931:
  2264  00040E  EF8B  F002         	goto	l2661
  2265  000412                     u1930:
  2266  000412                     
  2267                           ;main.c: 270:                     LATDbits.LATD4 = 1;
  2268  000412  888C               	bsf	140,4,c	;volatile
  2269  000414  EF9C  F001         	goto	l2613
  2270  000418                     l2639:
  2271                           
  2272                           ;main.c: 276:                 if (estaSeco(sensores[i])) {
  2273  000418  90D8               	bcf	status,0,c
  2274  00041A  3406               	rlcf	encenderBombas@i^0,w,c
  2275  00041C  6ED9               	movwf	fsr2l,c
  2276  00041E  3407               	rlcf	(encenderBombas@i+1)^0,w,c
  2277  000420  6EDA               	movwf	fsr2h,c
  2278  000422  0EA8               	movlw	low _sensores
  2279  000424  26D9               	addwf	fsr2l,f,c
  2280  000426  0E00               	movlw	high _sensores
  2281  000428  22DA               	addwfc	fsr2h,f,c
  2282  00042A  CFDE F001          	movff	postinc2,estaSeco@s
  2283  00042E  CFDD F002          	movff	postdec2,estaSeco@s+1
  2284  000432  ECB5  F00D         	call	_estaSeco	;wreg free
  2285  000436  5001               	movf	?_estaSeco^0,w,c
  2286  000438  1002               	iorwf	(?_estaSeco+1)^0,w,c
  2287  00043A  B4D8               	btfsc	status,2,c
  2288  00043C  EF22  F002         	goto	u1941
  2289  000440  EF24  F002         	goto	u1940
  2290  000444                     u1941:
  2291  000444  EF8B  F002         	goto	l2661
  2292  000448                     u1940:
  2293  000448                     
  2294                           ;main.c: 277:                     LATDbits.LATD5 = 1;
  2295  000448  8A8C               	bsf	140,5,c	;volatile
  2296  00044A  EF9C  F001         	goto	l2613
  2297  00044E                     l2645:
  2298                           
  2299                           ;main.c: 283:                 if (estaSeco(sensores[i])) {
  2300  00044E  90D8               	bcf	status,0,c
  2301  000450  3406               	rlcf	encenderBombas@i^0,w,c
  2302  000452  6ED9               	movwf	fsr2l,c
  2303  000454  3407               	rlcf	(encenderBombas@i+1)^0,w,c
  2304  000456  6EDA               	movwf	fsr2h,c
  2305  000458  0EA8               	movlw	low _sensores
  2306  00045A  26D9               	addwf	fsr2l,f,c
  2307  00045C  0E00               	movlw	high _sensores
  2308  00045E  22DA               	addwfc	fsr2h,f,c
  2309  000460  CFDE F001          	movff	postinc2,estaSeco@s
  2310  000464  CFDD F002          	movff	postdec2,estaSeco@s+1
  2311  000468  ECB5  F00D         	call	_estaSeco	;wreg free
  2312  00046C  5001               	movf	?_estaSeco^0,w,c
  2313  00046E  1002               	iorwf	(?_estaSeco+1)^0,w,c
  2314  000470  B4D8               	btfsc	status,2,c
  2315  000472  EF3D  F002         	goto	u1951
  2316  000476  EF3F  F002         	goto	u1950
  2317  00047A                     u1951:
  2318  00047A  EF8B  F002         	goto	l2661
  2319  00047E                     u1950:
  2320  00047E                     
  2321                           ;main.c: 284:                     LATDbits.LATD6 = 1;
  2322  00047E  8C8C               	bsf	140,6,c	;volatile
  2323  000480  EF9C  F001         	goto	l2613
  2324  000484                     l2651:
  2325                           
  2326                           ;main.c: 290:                 if (estaSeco(sensores[i])) {
  2327  000484  90D8               	bcf	status,0,c
  2328  000486  3406               	rlcf	encenderBombas@i^0,w,c
  2329  000488  6ED9               	movwf	fsr2l,c
  2330  00048A  3407               	rlcf	(encenderBombas@i+1)^0,w,c
  2331  00048C  6EDA               	movwf	fsr2h,c
  2332  00048E  0EA8               	movlw	low _sensores
  2333  000490  26D9               	addwf	fsr2l,f,c
  2334  000492  0E00               	movlw	high _sensores
  2335  000494  22DA               	addwfc	fsr2h,f,c
  2336  000496  CFDE F001          	movff	postinc2,estaSeco@s
  2337  00049A  CFDD F002          	movff	postdec2,estaSeco@s+1
  2338  00049E  ECB5  F00D         	call	_estaSeco	;wreg free
  2339  0004A2  5001               	movf	?_estaSeco^0,w,c
  2340  0004A4  1002               	iorwf	(?_estaSeco+1)^0,w,c
  2341  0004A6  B4D8               	btfsc	status,2,c
  2342  0004A8  EF58  F002         	goto	u1961
  2343  0004AC  EF5A  F002         	goto	u1960
  2344  0004B0                     u1961:
  2345  0004B0  EF8B  F002         	goto	l2661
  2346  0004B4                     u1960:
  2347  0004B4                     
  2348                           ;main.c: 291:                     LATDbits.LATD7 = 1;
  2349  0004B4  8E8C               	bsf	140,7,c	;volatile
  2350  0004B6  EF9C  F001         	goto	l2613
  2351  0004BA                     l2659:
  2352  0004BA  C006  F003         	movff	encenderBombas@i,??_encenderBombas
  2353  0004BE  C007  F004         	movff	encenderBombas@i+1,??_encenderBombas+1
  2354                           
  2355                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2356                           ; Switch size 1, requested type "simple"
  2357                           ; Number of cases is 1, Range of values is 0 to 0
  2358                           ; switch strategies available:
  2359                           ; Name         Instructions Cycles
  2360                           ; simple_byte            4     3 (average)
  2361                           ;	Chosen strategy is simple_byte
  2362  0004C2  5004               	movf	(??_encenderBombas+1)^0,w,c
  2363  0004C4  0A00               	xorlw	0	; case 0
  2364  0004C6  B4D8               	btfsc	status,2,c
  2365  0004C8  EF68  F002         	goto	l3195
  2366  0004CC  EF8B  F002         	goto	l2661
  2367  0004D0                     l3195:
  2368                           
  2369                           ; Switch size 1, requested type "simple"
  2370                           ; Number of cases is 8, Range of values is 0 to 7
  2371                           ; switch strategies available:
  2372                           ; Name         Instructions Cycles
  2373                           ; simple_byte           25    13 (average)
  2374                           ;	Chosen strategy is simple_byte
  2375  0004D0  5003               	movf	??_encenderBombas^0,w,c
  2376  0004D2  0A00               	xorlw	0	; case 0
  2377  0004D4  B4D8               	btfsc	status,2,c
  2378  0004D6  EF83  F001         	goto	l2609
  2379  0004DA  0A01               	xorlw	1	; case 1
  2380  0004DC  B4D8               	btfsc	status,2,c
  2381  0004DE  EFA0  F001         	goto	l2615
  2382  0004E2  0A03               	xorlw	3	; case 2
  2383  0004E4  B4D8               	btfsc	status,2,c
  2384  0004E6  EFBB  F001         	goto	l2621
  2385  0004EA  0A01               	xorlw	1	; case 3
  2386  0004EC  B4D8               	btfsc	status,2,c
  2387  0004EE  EFD6  F001         	goto	l2627
  2388  0004F2  0A07               	xorlw	7	; case 4
  2389  0004F4  B4D8               	btfsc	status,2,c
  2390  0004F6  EFF1  F001         	goto	l2633
  2391  0004FA  0A01               	xorlw	1	; case 5
  2392  0004FC  B4D8               	btfsc	status,2,c
  2393  0004FE  EF0C  F002         	goto	l2639
  2394  000502  0A03               	xorlw	3	; case 6
  2395  000504  B4D8               	btfsc	status,2,c
  2396  000506  EF27  F002         	goto	l2645
  2397  00050A  0A01               	xorlw	1	; case 7
  2398  00050C  B4D8               	btfsc	status,2,c
  2399  00050E  EF42  F002         	goto	l2651
  2400  000512  EF8B  F002         	goto	l2661
  2401  000516                     l2661:
  2402                           
  2403                           ;main.c: 297:     }
  2404  000516  4A06               	infsnz	encenderBombas@i^0,f,c
  2405  000518  2A07               	incf	(encenderBombas@i+1)^0,f,c
  2406  00051A  BE07               	btfsc	(encenderBombas@i+1)^0,7,c
  2407  00051C  EF99  F002         	goto	u1971
  2408  000520  5007               	movf	(encenderBombas@i+1)^0,w,c
  2409  000522  E109               	bnz	u1970
  2410  000524  0E03               	movlw	3
  2411  000526  5C06               	subwf	encenderBombas@i^0,w,c
  2412  000528  A0D8               	btfss	status,0,c
  2413  00052A  EF99  F002         	goto	u1971
  2414  00052E  EF9B  F002         	goto	u1970
  2415  000532                     u1971:
  2416  000532  EF5D  F002         	goto	l2659
  2417  000536                     u1970:
  2418  000536                     
  2419                           ;main.c: 299:     if (flagSeco)
  2420  000536  5005               	movf	encenderBombas@flagSeco^0,w,c
  2421  000538  B4D8               	btfsc	status,2,c
  2422  00053A  EFA1  F002         	goto	u1981
  2423  00053E  EFA3  F002         	goto	u1980
  2424  000542                     u1981:
  2425  000542  EFA6  F002         	goto	l245
  2426  000546                     u1980:
  2427  000546                     
  2428                           ;main.c: 300:         regando = 1;
  2429  000546  0E01               	movlw	1
  2430  000548  0100               	movlb	0	; () banked
  2431  00054A  6FC2               	movwf	_regando& (0+255),b
  2432  00054C                     l245:
  2433  00054C  0012               	return		;funcret
  2434  00054E                     __end_of_encenderBombas:
  2435                           	opt callstack 0
  2436                           
  2437 ;; *************** function _estaSeco *****************
  2438 ;; Defined at:
  2439 ;;		line 117 in file "main.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  s               2    0[COMRAM] struct .
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;		None
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  2    0[COMRAM] int 
  2446 ;; Registers used:
  2447 ;;		wreg, status,2, status,0
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2453 ;;      Params:         2       0       0       0       0       0       0       0       0
  2454 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2455 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2456 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2457 ;;Total ram usage:        2 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    1
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_encenderBombas
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text6
  2468  001B6A                     __ptext6:
  2469                           	opt callstack 0
  2470  001B6A                     _estaSeco:
  2471                           	opt callstack 27
  2472  001B6A                     
  2473                           ;main.c: 118:     return s.humedadMedida >= 60;
  2474  001B6A  0E3C               	movlw	60
  2475  001B6C  6001               	cpfslt	estaSeco@s^0,c
  2476  001B6E  EFBB  F00D         	goto	u1771
  2477  001B72  EFBE  F00D         	goto	u1770
  2478  001B76                     u1771:
  2479  001B76  0E01               	movlw	1
  2480  001B78  EFBF  F00D         	goto	u1780
  2481  001B7C                     u1770:
  2482  001B7C  0E00               	movlw	0
  2483  001B7E                     u1780:
  2484  001B7E  6E01               	movwf	?_estaSeco^0,c
  2485  001B80  6A02               	clrf	(?_estaSeco+1)^0,c
  2486  001B82  0012               	return		;funcret
  2487  001B84                     __end_of_estaSeco:
  2488                           	opt callstack 0
  2489                           
  2490 ;; *************** function _dameHoraActual *****************
  2491 ;; Defined at:
  2492 ;;		line 136 in file "main.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;		None
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;		None
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  1    wreg      void 
  2499 ;; Registers used:
  2500 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2506 ;;      Params:         0       0       0       0       0       0       0       0       0
  2507 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2508 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2509 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2510 ;;Total ram usage:        0 bytes
  2511 ;; Hardware stack levels used:    1
  2512 ;; Hardware stack levels required when called:    4
  2513 ;; This function calls:
  2514 ;;		_convertirDato
  2515 ;;		_leer_rtc
  2516 ;; This function is called by:
  2517 ;;		_sistemaRegado
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text7
  2522  001A8A                     __ptext7:
  2523                           	opt callstack 0
  2524  001A8A                     _dameHoraActual:
  2525                           	opt callstack 25
  2526  001A8A                     
  2527                           ;main.c: 138:     segundos = convertirDato(leer_rtc(0x00));
  2528  001A8A  0E00               	movlw	0
  2529  001A8C  EC5B  F00D         	call	_leer_rtc
  2530  001A90  EC96  F00D         	call	_convertirDato
  2531  001A94  0100               	movlb	0	; () banked
  2532  001A96  6FC7               	movwf	_segundos& (0+255),b
  2533                           
  2534                           ;main.c: 139:     minutos = convertirDato(leer_rtc(0x01));
  2535  001A98  0E01               	movlw	1
  2536  001A9A  EC5B  F00D         	call	_leer_rtc
  2537  001A9E  EC96  F00D         	call	_convertirDato
  2538  001AA2  0100               	movlb	0	; () banked
  2539  001AA4  6FC8               	movwf	_minutos& (0+255),b
  2540                           
  2541                           ;main.c: 140:     hora = convertirDato(leer_rtc(0x02));
  2542  001AA6  0E02               	movlw	2
  2543  001AA8  EC5B  F00D         	call	_leer_rtc
  2544  001AAC  EC96  F00D         	call	_convertirDato
  2545  001AB0  0100               	movlb	0	; () banked
  2546  001AB2  6FC9               	movwf	_hora& (0+255),b
  2547  001AB4                     
  2548                           ; BSR set to: 0
  2549  001AB4  0012               	return		;funcret
  2550  001AB6                     __end_of_dameHoraActual:
  2551                           	opt callstack 0
  2552                           
  2553 ;; *************** function _leer_rtc *****************
  2554 ;; Defined at:
  2555 ;;		line 13 in file "./RTC.h"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;  direccion       1    wreg     unsigned char 
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;  direccion       1    2[COMRAM] unsigned char 
  2560 ;;  dato            1    3[COMRAM] unsigned char 
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      unsigned char 
  2563 ;; Registers used:
  2564 ;;		wreg, status,2, status,0, cstack
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2570 ;;      Params:         0       0       0       0       0       0       0       0       0
  2571 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2572 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2573 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2574 ;;Total ram usage:        2 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; Hardware stack levels required when called:    3
  2577 ;; This function calls:
  2578 ;;		_i2c_detener
  2579 ;;		_i2c_envia_dato
  2580 ;;		_i2c_inicia_com
  2581 ;;		_i2c_recibe_dato
  2582 ;;		_i2c_reinicia_com
  2583 ;; This function is called by:
  2584 ;;		_dameHoraActual
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text8
  2589  001AB6                     __ptext8:
  2590                           	opt callstack 0
  2591  001AB6                     _leer_rtc:
  2592                           	opt callstack 25
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;incstack = 0
  2596                           ;leer_rtc@direccion stored from wreg
  2597  001AB6  6E03               	movwf	leer_rtc@direccion^0,c
  2598  001AB8                     
  2599                           ;./RTC.h: 14:     unsigned char dato;;./RTC.h: 15:     i2c_inicia_com();
  2600  001AB8  EC01  F00E         	call	_i2c_inicia_com	;wreg free
  2601                           
  2602                           ;./RTC.h: 16:     i2c_envia_dato(0xD0);
  2603  001ABC  0ED0               	movlw	208
  2604  001ABE  ECF2  F00D         	call	_i2c_envia_dato
  2605                           
  2606                           ;./RTC.h: 17:     i2c_envia_dato(direccion);
  2607  001AC2  5003               	movf	leer_rtc@direccion^0,w,c
  2608  001AC4  ECF2  F00D         	call	_i2c_envia_dato
  2609                           
  2610                           ;./RTC.h: 18:     i2c_reinicia_com();
  2611  001AC8  ECFD  F00D         	call	_i2c_reinicia_com	;wreg free
  2612                           
  2613                           ;./RTC.h: 19:     i2c_envia_dato(0xD1);
  2614  001ACC  0ED1               	movlw	209
  2615  001ACE  ECF2  F00D         	call	_i2c_envia_dato
  2616                           
  2617                           ;./RTC.h: 20:     dato = i2c_recibe_dato();
  2618  001AD2  ECC2  F00D         	call	_i2c_recibe_dato	;wreg free
  2619  001AD6  6E04               	movwf	leer_rtc@dato^0,c
  2620                           
  2621                           ;./RTC.h: 21:     i2c_detener();
  2622  001AD8  EC05  F00E         	call	_i2c_detener	;wreg free
  2623  001ADC                     
  2624                           ;./RTC.h: 22:     return dato;
  2625  001ADC  5004               	movf	leer_rtc@dato^0,w,c
  2626  001ADE  0012               	return		;funcret
  2627  001AE0                     __end_of_leer_rtc:
  2628                           	opt callstack 0
  2629                           
  2630 ;; *************** function _convertirDato *****************
  2631 ;; Defined at:
  2632 ;;		line 28 in file "./RTC.h"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;  dato            1    wreg     unsigned char 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;  dato            1    1[COMRAM] unsigned char 
  2637 ;;  datoR           1    2[COMRAM] unsigned char 
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  1    wreg      unsigned char 
  2640 ;; Registers used:
  2641 ;;		wreg, status,2, status,0, prodl, prodh
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2647 ;;      Params:         0       0       0       0       0       0       0       0       0
  2648 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2649 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2650 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2651 ;;Total ram usage:        3 bytes
  2652 ;; Hardware stack levels used:    1
  2653 ;; Hardware stack levels required when called:    1
  2654 ;; This function calls:
  2655 ;;		Nothing
  2656 ;; This function is called by:
  2657 ;;		_dameHoraActual
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           	psect	text9
  2662  001B2C                     __ptext9:
  2663                           	opt callstack 0
  2664  001B2C                     _convertirDato:
  2665                           	opt callstack 27
  2666                           
  2667                           ;incstack = 0
  2668                           ;convertirDato@dato stored from wreg
  2669  001B2C  6E02               	movwf	convertirDato@dato^0,c
  2670  001B2E                     
  2671                           ;./RTC.h: 30:     datoR = (dato & 0xF0) >> 4;
  2672  001B2E  3802               	swapf	convertirDato@dato^0,w,c
  2673  001B30  0B0F               	andlw	15
  2674  001B32  0B0F               	andlw	15
  2675  001B34  6E03               	movwf	convertirDato@datoR^0,c
  2676  001B36                     
  2677                           ;./RTC.h: 31:     datoR = (datoR * 10) + (dato & 0x0F);
  2678  001B36  C002  F001         	movff	convertirDato@dato,??_convertirDato
  2679  001B3A  0E0F               	movlw	15
  2680  001B3C  1601               	andwf	??_convertirDato^0,f,c
  2681  001B3E  5003               	movf	convertirDato@datoR^0,w,c
  2682  001B40  0D0A               	mullw	10
  2683  001B42  50F3               	movf	243,w,c
  2684  001B44  2401               	addwf	??_convertirDato^0,w,c
  2685  001B46  6E03               	movwf	convertirDato@datoR^0,c
  2686  001B48                     
  2687                           ;./RTC.h: 32:     return datoR;
  2688  001B48  5003               	movf	convertirDato@datoR^0,w,c
  2689  001B4A  0012               	return		;funcret
  2690  001B4C                     __end_of_convertirDato:
  2691                           	opt callstack 0
  2692                           
  2693 ;; *************** function _sistemaPrincipal *****************
  2694 ;; Defined at:
  2695 ;;		line 534 in file "main.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;  opcion          1    wreg     unsigned char 
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;  opcion          1   92[COMRAM] unsigned char 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      void 
  2702 ;; Registers used:
  2703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2709 ;;      Params:         0       0       0       0       0       0       0       0       0
  2710 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2711 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2712 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2713 ;;Total ram usage:        3 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:   10
  2716 ;; This function calls:
  2717 ;;		_UART_printf
  2718 ;;		_asignarHorarios
  2719 ;;		_dameDatosSistema
  2720 ;;		_fijaHoraRtc
  2721 ;;		_mostrarMenu
  2722 ;;		_setTiempoRegar
  2723 ;; This function is called by:
  2724 ;;		_main
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text10
  2729  0014A2                     __ptext10:
  2730                           	opt callstack 0
  2731  0014A2                     _sistemaPrincipal:
  2732                           	opt callstack 20
  2733                           
  2734                           ;incstack = 0
  2735                           ;sistemaPrincipal@opcion stored from wreg
  2736  0014A2  6E5D               	movwf	sistemaPrincipal@opcion^0,c
  2737  0014A4                     
  2738                           ;main.c: 536:     PIE1bits.RCIE = 0;
  2739  0014A4  9A9D               	bcf	157,5,c	;volatile
  2740                           
  2741                           ;main.c: 538:     switch (opcion) {
  2742  0014A6  EF6D  F00A         	goto	l3009
  2743  0014AA                     l2997:
  2744                           
  2745                           ;main.c: 541:             fijaHoraRtc();
  2746  0014AA  ECC6  F00A         	call	_fijaHoraRtc	;wreg free
  2747                           
  2748                           ;main.c: 542:             break;
  2749  0014AE  EF8A  F00A         	goto	l3011
  2750  0014B2                     l2999:
  2751                           
  2752                           ;main.c: 545:             asignarHorarios();
  2753  0014B2  ECDB  F005         	call	_asignarHorarios	;wreg free
  2754                           
  2755                           ;main.c: 546:             break;
  2756  0014B6  EF8A  F00A         	goto	l3011
  2757  0014BA                     l3001:
  2758                           
  2759                           ;main.c: 549:             setTiempoRegar();
  2760  0014BA  ECA7  F002         	call	_setTiempoRegar	;wreg free
  2761                           
  2762                           ;main.c: 550:             break;
  2763  0014BE  EF8A  F00A         	goto	l3011
  2764  0014C2                     l3003:
  2765                           
  2766                           ;main.c: 553:             dameDatosSistema();
  2767  0014C2  EC05  F007         	call	_dameDatosSistema	;wreg free
  2768                           
  2769                           ;main.c: 554:             break;
  2770  0014C6  EF8A  F00A         	goto	l3011
  2771  0014CA                     l3005:
  2772                           
  2773                           ;main.c: 558:             UART_printf("\r\n Solo se permiten numeros del 1 al 3 \r\n");
  2774  0014CA  0E0D               	movlw	low STR_23
  2775  0014CC  6E02               	movwf	UART_printf@cadena^0,c
  2776  0014CE  0E7E               	movlw	high STR_23
  2777  0014D0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  2778  0014D2  EC5E  F00B         	call	_UART_printf	;wreg free
  2779                           
  2780                           ;main.c: 559:             break;
  2781  0014D6  EF8A  F00A         	goto	l3011
  2782  0014DA                     l3009:
  2783  0014DA  505D               	movf	sistemaPrincipal@opcion^0,w,c
  2784  0014DC  6E5B               	movwf	??_sistemaPrincipal^0,c
  2785  0014DE  6A5C               	clrf	(??_sistemaPrincipal+1)^0,c
  2786                           
  2787                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2788                           ; Switch size 1, requested type "simple"
  2789                           ; Number of cases is 1, Range of values is 0 to 0
  2790                           ; switch strategies available:
  2791                           ; Name         Instructions Cycles
  2792                           ; simple_byte            4     3 (average)
  2793                           ;	Chosen strategy is simple_byte
  2794  0014E0  505C               	movf	(??_sistemaPrincipal+1)^0,w,c
  2795  0014E2  0A00               	xorlw	0	; case 0
  2796  0014E4  B4D8               	btfsc	status,2,c
  2797  0014E6  EF77  F00A         	goto	l3197
  2798  0014EA  EF65  F00A         	goto	l3005
  2799  0014EE                     l3197:
  2800                           
  2801                           ; Switch size 1, requested type "simple"
  2802                           ; Number of cases is 4, Range of values is 1 to 4
  2803                           ; switch strategies available:
  2804                           ; Name         Instructions Cycles
  2805                           ; simple_byte           13     7 (average)
  2806                           ;	Chosen strategy is simple_byte
  2807  0014EE  505B               	movf	??_sistemaPrincipal^0,w,c
  2808  0014F0  0A01               	xorlw	1	; case 1
  2809  0014F2  B4D8               	btfsc	status,2,c
  2810  0014F4  EF55  F00A         	goto	l2997
  2811  0014F8  0A03               	xorlw	3	; case 2
  2812  0014FA  B4D8               	btfsc	status,2,c
  2813  0014FC  EF59  F00A         	goto	l2999
  2814  001500  0A01               	xorlw	1	; case 3
  2815  001502  B4D8               	btfsc	status,2,c
  2816  001504  EF5D  F00A         	goto	l3001
  2817  001508  0A07               	xorlw	7	; case 4
  2818  00150A  B4D8               	btfsc	status,2,c
  2819  00150C  EF61  F00A         	goto	l3003
  2820  001510  EF65  F00A         	goto	l3005
  2821  001514                     l3011:
  2822                           
  2823                           ;main.c: 562:     mostrarMenu();
  2824  001514  EC8D  F00B         	call	_mostrarMenu	;wreg free
  2825  001518                     
  2826                           ;main.c: 563:     PIE1bits.RCIE = 1;
  2827  001518  8A9D               	bsf	157,5,c	;volatile
  2828  00151A  0012               	return		;funcret
  2829  00151C                     __end_of_sistemaPrincipal:
  2830                           	opt callstack 0
  2831                           
  2832 ;; *************** function _setTiempoRegar *****************
  2833 ;; Defined at:
  2834 ;;		line 386 in file "main.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;		None
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;  i               2   18[COMRAM] int 
  2839 ;;  i               2   16[COMRAM] int 
  2840 ;;  Rx              1   21[COMRAM] unsigned char 
  2841 ;;  datoCapturad    1   20[COMRAM] unsigned char 
  2842 ;;  hora            1   15[COMRAM] unsigned char 
  2843 ;;  tiempoRegar     1   14[COMRAM] unsigned char 
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  1    wreg      void 
  2846 ;; Registers used:
  2847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2853 ;;      Params:         0       0       0       0       0       0       0       0       0
  2854 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2855 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2856 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2857 ;;Total ram usage:        8 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; Hardware stack levels required when called:    5
  2860 ;; This function calls:
  2861 ;;		_UART_printf
  2862 ;;		_UART_read
  2863 ;;		_UART_write
  2864 ;;		_escribeHorariosMemoria
  2865 ;; This function is called by:
  2866 ;;		_sistemaPrincipal
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text11
  2871  00054E                     __ptext11:
  2872                           	opt callstack 0
  2873  00054E                     _setTiempoRegar:
  2874                           	opt callstack 24
  2875  00054E                     
  2876                           ;main.c: 388:     unsigned char hora;;main.c: 389:     unsigned char tiempoRegar;;main.c
      +                          : 390:     unsigned char Rx;;main.c: 391:     char datoCapturado = 0;
  2877  00054E  0E00               	movlw	0
  2878  000550  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  2879  000552                     
  2880                           ;main.c: 393:     UART_printf("\r\n TIEMPO DE REGADO \r\n");
  2881  000552  0EBA               	movlw	low STR_9
  2882  000554  6E02               	movwf	UART_printf@cadena^0,c
  2883  000556  0E7F               	movlw	high STR_9
  2884  000558  6E03               	movwf	(UART_printf@cadena+1)^0,c
  2885  00055A  EC5E  F00B         	call	_UART_printf	;wreg free
  2886  00055E                     
  2887                           ;main.c: 394:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  2888  00055E  0E4C               	movlw	low STR_6
  2889  000560  6E02               	movwf	UART_printf@cadena^0,c
  2890  000562  0E7D               	movlw	high STR_6
  2891  000564  6E03               	movwf	(UART_printf@cadena+1)^0,c
  2892  000566  EC5E  F00B         	call	_UART_printf	;wreg free
  2893                           
  2894                           ;main.c: 396:     for (int i = 0; i < 2; i++) {
  2895  00056A  0E00               	movlw	0
  2896  00056C  6E12               	movwf	(setTiempoRegar@i+1)^0,c
  2897  00056E  0E00               	movlw	0
  2898  000570  6E11               	movwf	setTiempoRegar@i^0,c
  2899  000572                     l2765:
  2900                           
  2901                           ;main.c: 397:         Rx = UART_read();
  2902  000572  ECE2  F00B         	call	_UART_read	;wreg free
  2903  000576  6E16               	movwf	setTiempoRegar@Rx^0,c
  2904  000578                     
  2905                           ;main.c: 398:         if (Rx >= 48 && Rx <= 57) {
  2906  000578  0E2F               	movlw	47
  2907  00057A  6416               	cpfsgt	setTiempoRegar@Rx^0,c
  2908  00057C  EFC2  F002         	goto	u2101
  2909  000580  EFC4  F002         	goto	u2100
  2910  000584                     u2101:
  2911  000584  EFE7  F002         	goto	l2785
  2912  000588                     u2100:
  2913  000588  0E3A               	movlw	58
  2914  00058A  6016               	cpfslt	setTiempoRegar@Rx^0,c
  2915  00058C  EFCA  F002         	goto	u2111
  2916  000590  EFCC  F002         	goto	u2110
  2917  000594                     u2111:
  2918  000594  EFE7  F002         	goto	l2785
  2919  000598                     u2110:
  2920  000598                     
  2921                           ;main.c: 399:             if (!i) {
  2922  000598  5011               	movf	setTiempoRegar@i^0,w,c
  2923  00059A  1012               	iorwf	(setTiempoRegar@i+1)^0,w,c
  2924  00059C  A4D8               	btfss	status,2,c
  2925  00059E  EFD3  F002         	goto	u2121
  2926  0005A2  EFD5  F002         	goto	u2120
  2927  0005A6                     u2121:
  2928  0005A6  EFDF  F002         	goto	l2779
  2929  0005AA                     u2120:
  2930  0005AA                     
  2931                           ;main.c: 400:                 Rx -= 48;
  2932  0005AA  0E30               	movlw	48
  2933  0005AC  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  2934  0005AE                     
  2935                           ;main.c: 401:                 hora = Rx;
  2936  0005AE  C016  F010         	movff	setTiempoRegar@Rx,setTiempoRegar@hora
  2937  0005B2                     
  2938                           ;main.c: 402:                 hora *= 10;
  2939  0005B2  0E0A               	movlw	10
  2940  0005B4  0210               	mulwf	setTiempoRegar@hora^0,c
  2941  0005B6  50F3               	movf	prodl,w,c
  2942  0005B8  6E10               	movwf	setTiempoRegar@hora^0,c
  2943                           
  2944                           ;main.c: 403:             } else {
  2945  0005BA  EFEE  F002         	goto	l2789
  2946  0005BE                     l2779:
  2947                           
  2948                           ;main.c: 404:                 datoCapturado = 1;
  2949  0005BE  0E01               	movlw	1
  2950  0005C0  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  2951  0005C2                     
  2952                           ;main.c: 405:                 Rx -= 48;
  2953  0005C2  0E30               	movlw	48
  2954  0005C4  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  2955  0005C6                     
  2956                           ;main.c: 406:                 hora += Rx;
  2957  0005C6  5016               	movf	setTiempoRegar@Rx^0,w,c
  2958  0005C8  2610               	addwf	setTiempoRegar@hora^0,f,c
  2959  0005CA  EFEE  F002         	goto	l2789
  2960  0005CE                     l2785:
  2961                           
  2962                           ;main.c: 409:             datoCapturado = 0;
  2963  0005CE  0E00               	movlw	0
  2964  0005D0  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  2965  0005D2                     
  2966                           ;main.c: 411:             UART_write('F');
  2967  0005D2  0E46               	movlw	70
  2968  0005D4  ECDC  F00D         	call	_UART_write
  2969                           
  2970                           ;main.c: 412:             break;
  2971  0005D8  EFFE  F002         	goto	l2793
  2972  0005DC                     l2789:
  2973                           
  2974                           ;main.c: 414:     }
  2975  0005DC  4A11               	infsnz	setTiempoRegar@i^0,f,c
  2976  0005DE  2A12               	incf	(setTiempoRegar@i+1)^0,f,c
  2977  0005E0  BE12               	btfsc	(setTiempoRegar@i+1)^0,7,c
  2978  0005E2  EFFC  F002         	goto	u2131
  2979  0005E6  5012               	movf	(setTiempoRegar@i+1)^0,w,c
  2980  0005E8  E109               	bnz	u2130
  2981  0005EA  0E02               	movlw	2
  2982  0005EC  5C11               	subwf	setTiempoRegar@i^0,w,c
  2983  0005EE  A0D8               	btfss	status,0,c
  2984  0005F0  EFFC  F002         	goto	u2131
  2985  0005F4  EFFE  F002         	goto	u2130
  2986  0005F8                     u2131:
  2987  0005F8  EFB9  F002         	goto	l2765
  2988  0005FC                     u2130:
  2989  0005FC                     l2793:
  2990                           
  2991                           ;main.c: 416:     if (datoCapturado && !esperandoDatos) {
  2992  0005FC  5015               	movf	setTiempoRegar@datoCapturado^0,w,c
  2993  0005FE  B4D8               	btfsc	status,2,c
  2994  000600  EF04  F003         	goto	u2141
  2995  000604  EF06  F003         	goto	u2140
  2996  000608                     u2141:
  2997  000608  EF8A  F003         	goto	l280
  2998  00060C                     u2140:
  2999  00060C  505E               	movf	_esperandoDatos^0,w,c
  3000  00060E  A4D8               	btfss	status,2,c
  3001  000610  EF0C  F003         	goto	u2151
  3002  000614  EF0E  F003         	goto	u2150
  3003  000618                     u2151:
  3004  000618  EF8A  F003         	goto	l280
  3005  00061C                     u2150:
  3006  00061C                     
  3007                           ;main.c: 418:         UART_printf("\r\n Ingrese los minutos que desee que se riegue en e
      +                          se horario ej: 15 \r\n");
  3008  00061C  0ECD               	movlw	low STR_11
  3009  00061E  6E02               	movwf	UART_printf@cadena^0,c
  3010  000620  0E7C               	movlw	high STR_11
  3011  000622  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3012  000624  EC5E  F00B         	call	_UART_printf	;wreg free
  3013  000628                     
  3014                           ;main.c: 420:         for (int i = 0; i < 2; i++) {
  3015  000628  0E00               	movlw	0
  3016  00062A  6E14               	movwf	(setTiempoRegar@i_716+1)^0,c
  3017  00062C  0E00               	movlw	0
  3018  00062E  6E13               	movwf	setTiempoRegar@i_716^0,c
  3019  000630                     l2805:
  3020                           
  3021                           ;main.c: 421:             Rx = UART_read();
  3022  000630  ECE2  F00B         	call	_UART_read	;wreg free
  3023  000634  6E16               	movwf	setTiempoRegar@Rx^0,c
  3024  000636                     
  3025                           ;main.c: 422:             if (Rx >= 48 && Rx <= 57) {
  3026  000636  0E2F               	movlw	47
  3027  000638  6416               	cpfsgt	setTiempoRegar@Rx^0,c
  3028  00063A  EF21  F003         	goto	u2161
  3029  00063E  EF23  F003         	goto	u2160
  3030  000642                     u2161:
  3031  000642  EF46  F003         	goto	l2825
  3032  000646                     u2160:
  3033  000646  0E3A               	movlw	58
  3034  000648  6016               	cpfslt	setTiempoRegar@Rx^0,c
  3035  00064A  EF29  F003         	goto	u2171
  3036  00064E  EF2B  F003         	goto	u2170
  3037  000652                     u2171:
  3038  000652  EF46  F003         	goto	l2825
  3039  000656                     u2170:
  3040  000656                     
  3041                           ;main.c: 423:                 if (!i) {
  3042  000656  5013               	movf	setTiempoRegar@i_716^0,w,c
  3043  000658  1014               	iorwf	(setTiempoRegar@i_716+1)^0,w,c
  3044  00065A  A4D8               	btfss	status,2,c
  3045  00065C  EF32  F003         	goto	u2181
  3046  000660  EF34  F003         	goto	u2180
  3047  000664                     u2181:
  3048  000664  EF3E  F003         	goto	l2819
  3049  000668                     u2180:
  3050  000668                     
  3051                           ;main.c: 424:                     Rx -= 48;
  3052  000668  0E30               	movlw	48
  3053  00066A  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  3054  00066C                     
  3055                           ;main.c: 425:                     tiempoRegar = Rx;
  3056  00066C  C016  F00F         	movff	setTiempoRegar@Rx,setTiempoRegar@tiempoRegar
  3057  000670                     
  3058                           ;main.c: 426:                     tiempoRegar *= 10;
  3059  000670  0E0A               	movlw	10
  3060  000672  020F               	mulwf	setTiempoRegar@tiempoRegar^0,c
  3061  000674  50F3               	movf	prodl,w,c
  3062  000676  6E0F               	movwf	setTiempoRegar@tiempoRegar^0,c
  3063                           
  3064                           ;main.c: 427:                 } else {
  3065  000678  EF4D  F003         	goto	l2829
  3066  00067C                     l2819:
  3067                           
  3068                           ;main.c: 428:                     datoCapturado = 1;
  3069  00067C  0E01               	movlw	1
  3070  00067E  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3071  000680                     
  3072                           ;main.c: 429:                     Rx -= 48;
  3073  000680  0E30               	movlw	48
  3074  000682  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  3075  000684                     
  3076                           ;main.c: 430:                     tiempoRegar += Rx;
  3077  000684  5016               	movf	setTiempoRegar@Rx^0,w,c
  3078  000686  260F               	addwf	setTiempoRegar@tiempoRegar^0,f,c
  3079  000688  EF4D  F003         	goto	l2829
  3080  00068C                     l2825:
  3081                           
  3082                           ;main.c: 433:                 datoCapturado = 0;
  3083  00068C  0E00               	movlw	0
  3084  00068E  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3085  000690                     
  3086                           ;main.c: 435:                 UART_write('F');
  3087  000690  0E46               	movlw	70
  3088  000692  ECDC  F00D         	call	_UART_write
  3089                           
  3090                           ;main.c: 436:                 break;
  3091  000696  EF5D  F003         	goto	l2833
  3092  00069A                     l2829:
  3093                           
  3094                           ;main.c: 438:         }
  3095  00069A  4A13               	infsnz	setTiempoRegar@i_716^0,f,c
  3096  00069C  2A14               	incf	(setTiempoRegar@i_716+1)^0,f,c
  3097  00069E  BE14               	btfsc	(setTiempoRegar@i_716+1)^0,7,c
  3098  0006A0  EF5B  F003         	goto	u2191
  3099  0006A4  5014               	movf	(setTiempoRegar@i_716+1)^0,w,c
  3100  0006A6  E109               	bnz	u2190
  3101  0006A8  0E02               	movlw	2
  3102  0006AA  5C13               	subwf	setTiempoRegar@i_716^0,w,c
  3103  0006AC  A0D8               	btfss	status,0,c
  3104  0006AE  EF5B  F003         	goto	u2191
  3105  0006B2  EF5D  F003         	goto	u2190
  3106  0006B6                     u2191:
  3107  0006B6  EF18  F003         	goto	l2805
  3108  0006BA                     u2190:
  3109  0006BA                     l2833:
  3110                           
  3111                           ;main.c: 440:         if (datoCapturado && !esperandoDatos) {
  3112  0006BA  5015               	movf	setTiempoRegar@datoCapturado^0,w,c
  3113  0006BC  B4D8               	btfsc	status,2,c
  3114  0006BE  EF63  F003         	goto	u2201
  3115  0006C2  EF65  F003         	goto	u2200
  3116  0006C6                     u2201:
  3117  0006C6  EF8A  F003         	goto	l280
  3118  0006CA                     u2200:
  3119  0006CA  505E               	movf	_esperandoDatos^0,w,c
  3120  0006CC  A4D8               	btfss	status,2,c
  3121  0006CE  EF6B  F003         	goto	u2211
  3122  0006D2  EF6D  F003         	goto	u2210
  3123  0006D6                     u2211:
  3124  0006D6  EF8A  F003         	goto	l280
  3125  0006DA                     u2210:
  3126  0006DA                     
  3127                           ;main.c: 442:             UART_printf("\r\n Minutos de riego establecidos! \r\n");
  3128  0006DA  0E5D               	movlw	low STR_12
  3129  0006DC  6E02               	movwf	UART_printf@cadena^0,c
  3130  0006DE  0E7E               	movlw	high STR_12
  3131  0006E0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3132  0006E2  EC5E  F00B         	call	_UART_printf	;wreg free
  3133  0006E6                     
  3134                           ;main.c: 444:             horarios[hora].tiempoRegar = tiempoRegar;
  3135  0006E6  5010               	movf	setTiempoRegar@hora^0,w,c
  3136  0006E8  0D03               	mullw	3
  3137  0006EA  0E62               	movlw	low (_horarios+2)
  3138  0006EC  24F3               	addwf	243,w,c
  3139  0006EE  6ED9               	movwf	fsr2l,c
  3140  0006F0  0E00               	movlw	high (_horarios+2)
  3141  0006F2  20F4               	addwfc	prodh,w,c
  3142  0006F4  6EDA               	movwf	fsr2h,c
  3143  0006F6  C00F  FFDF         	movff	setTiempoRegar@tiempoRegar,indf2
  3144  0006FA                     
  3145                           ;main.c: 445:             minutosRegar = horarios[hora].tiempoRegar;
  3146  0006FA  5010               	movf	setTiempoRegar@hora^0,w,c
  3147  0006FC  0D03               	mullw	3
  3148  0006FE  0E62               	movlw	low (_horarios+2)
  3149  000700  24F3               	addwf	243,w,c
  3150  000702  6ED9               	movwf	fsr2l,c
  3151  000704  0E00               	movlw	high (_horarios+2)
  3152  000706  20F4               	addwfc	prodh,w,c
  3153  000708  6EDA               	movwf	fsr2h,c
  3154  00070A  50DF               	movf	indf2,w,c
  3155  00070C  0100               	movlb	0	; () banked
  3156  00070E  6FC4               	movwf	_minutosRegar& (0+255),b
  3157  000710                     
  3158                           ; BSR set to: 0
  3159                           ;main.c: 447:             escribeHorariosMemoria();
  3160  000710  EC74  F007         	call	_escribeHorariosMemoria	;wreg free
  3161  000714                     l280:
  3162  000714  0012               	return		;funcret
  3163  000716                     __end_of_setTiempoRegar:
  3164                           	opt callstack 0
  3165                           
  3166 ;; *************** function _mostrarMenu *****************
  3167 ;; Defined at:
  3168 ;;		line 523 in file "main.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;		None
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;		None
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3182 ;;      Params:         0       0       0       0       0       0       0       0       0
  3183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3185 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3186 ;;Total ram usage:        0 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:    3
  3189 ;; This function calls:
  3190 ;;		_UART_printf
  3191 ;; This function is called by:
  3192 ;;		_sistemaPrincipal
  3193 ;;		_main
  3194 ;;		_lecturaWifi
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           	psect	text12
  3199  00171A                     __ptext12:
  3200                           	opt callstack 0
  3201  00171A                     _mostrarMenu:
  3202                           	opt callstack 26
  3203  00171A                     
  3204                           ;main.c: 525:     UART_printf("\r\n Ingresa una opcion a Realizar: \r\n");
  3205  00171A  0E82               	movlw	low STR_16
  3206  00171C  6E02               	movwf	UART_printf@cadena^0,c
  3207  00171E  0E7E               	movlw	high STR_16
  3208  001720  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3209  001722  EC5E  F00B         	call	_UART_printf	;wreg free
  3210                           
  3211                           ;main.c: 526:     UART_printf("\r\n 1. Fijar Hora Actual \r\n");
  3212  001726  0E6C               	movlw	low STR_17
  3213  001728  6E02               	movwf	UART_printf@cadena^0,c
  3214  00172A  0E7F               	movlw	high STR_17
  3215  00172C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3216  00172E  EC5E  F00B         	call	_UART_printf	;wreg free
  3217                           
  3218                           ;main.c: 527:     UART_printf("\r\n 2. Asignar Horarios para regar \r\n");
  3219  001732  0ECC               	movlw	low STR_18
  3220  001734  6E02               	movwf	UART_printf@cadena^0,c
  3221  001736  0E7E               	movlw	high STR_18
  3222  001738  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3223  00173A  EC5E  F00B         	call	_UART_printf	;wreg free
  3224                           
  3225                           ;main.c: 528:     UART_printf("\r\n 3. Programar tiempo de riego en un horario \r\n");
  3226  00173E  0EB1               	movlw	low STR_19
  3227  001740  6E02               	movwf	UART_printf@cadena^0,c
  3228  001742  0E7D               	movlw	high STR_19
  3229  001744  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3230  001746  EC5E  F00B         	call	_UART_printf	;wreg free
  3231                           
  3232                           ;main.c: 529:     UART_printf("\r\n 4. Dame datos del sistema \r\n");
  3233  00174A  0E11               	movlw	low STR_20
  3234  00174C  6E02               	movwf	UART_printf@cadena^0,c
  3235  00174E  0E7F               	movlw	high STR_20
  3236  001750  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3237  001752  EC5E  F00B         	call	_UART_printf	;wreg free
  3238                           
  3239                           ;main.c: 530:     UART_printf("\r\n Opcion:  \r");
  3240  001756  0EF1               	movlw	low STR_21
  3241  001758  6E02               	movwf	UART_printf@cadena^0,c
  3242  00175A  0E7F               	movlw	high STR_21
  3243  00175C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3244  00175E  EC5E  F00B         	call	_UART_printf	;wreg free
  3245                           
  3246                           ;main.c: 531:     UART_printf("\r\n");
  3247  001762  0E9E               	movlw	low (STR_8+23)
  3248  001764  6E02               	movwf	UART_printf@cadena^0,c
  3249  001766  0E7F               	movlw	high (STR_8+23)
  3250  001768  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3251  00176A  EC5E  F00B         	call	_UART_printf	;wreg free
  3252  00176E  0012               	return		;funcret
  3253  001770                     __end_of_mostrarMenu:
  3254                           	opt callstack 0
  3255                           
  3256 ;; *************** function _fijaHoraRtc *****************
  3257 ;; Defined at:
  3258 ;;		line 304 in file "main.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;		None
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;  dato            1    0        unsigned char 
  3263 ;; Return value:  Size  Location     Type
  3264 ;;                  1    wreg      void 
  3265 ;; Registers used:
  3266 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3267 ;; Tracked objects:
  3268 ;;		On entry : 0/0
  3269 ;;		On exit  : 0/0
  3270 ;;		Unchanged: 0/0
  3271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3272 ;;      Params:         0       0       0       0       0       0       0       0       0
  3273 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3274 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3275 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3276 ;;Total ram usage:        1 bytes
  3277 ;; Hardware stack levels used:    1
  3278 ;; Hardware stack levels required when called:    5
  3279 ;; This function calls:
  3280 ;;		_UART_printf
  3281 ;;		_escribe_rtc
  3282 ;;		_setRtc
  3283 ;; This function is called by:
  3284 ;;		_sistemaPrincipal
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text13
  3289  00158C                     __ptext13:
  3290                           	opt callstack 0
  3291  00158C                     _fijaHoraRtc:
  3292                           	opt callstack 24
  3293  00158C                     
  3294                           ;main.c: 308:     UART_printf("\r\n FIJA HORA \r\n");
  3295  00158C  0ED1               	movlw	low STR_1
  3296  00158E  6E02               	movwf	UART_printf@cadena^0,c
  3297  001590  0E7F               	movlw	high STR_1
  3298  001592  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3299  001594  EC5E  F00B         	call	_UART_printf	;wreg free
  3300  001598                     
  3301                           ;main.c: 311:     UART_printf("\r\n Envie las Horas en formato 24 Ej: 15 \r\n");
  3302  001598  0EE2               	movlw	low STR_2
  3303  00159A  6E02               	movwf	UART_printf@cadena^0,c
  3304  00159C  0E7D               	movlw	high STR_2
  3305  00159E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3306  0015A0  EC5E  F00B         	call	_UART_printf	;wreg free
  3307  0015A4                     
  3308                           ;main.c: 312:     setRtc(0x02);
  3309  0015A4  0E02               	movlw	2
  3310  0015A6  ECA4  F008         	call	_setRtc
  3311  0015AA                     
  3312                           ;main.c: 315:     if (!esperandoDatos) {
  3313  0015AA  505E               	movf	_esperandoDatos^0,w,c
  3314  0015AC  A4D8               	btfss	status,2,c
  3315  0015AE  EFDB  F00A         	goto	u1991
  3316  0015B2  EFDD  F00A         	goto	u1990
  3317  0015B6                     u1991:
  3318  0015B6  EFE6  F00A         	goto	l2687
  3319  0015BA                     u1990:
  3320  0015BA                     
  3321                           ;main.c: 316:         UART_printf("\r\n Envie los Minutos Ej: 25 \r\n");
  3322  0015BA  0E31               	movlw	low STR_3
  3323  0015BC  6E02               	movwf	UART_printf@cadena^0,c
  3324  0015BE  0E7F               	movlw	high STR_3
  3325  0015C0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3326  0015C2  EC5E  F00B         	call	_UART_printf	;wreg free
  3327  0015C6                     
  3328                           ;main.c: 317:         setRtc(0x01);
  3329  0015C6  0E01               	movlw	1
  3330  0015C8  ECA4  F008         	call	_setRtc
  3331  0015CC                     l2687:
  3332                           
  3333                           ;main.c: 321:     if (!esperandoDatos) {
  3334  0015CC  505E               	movf	_esperandoDatos^0,w,c
  3335  0015CE  A4D8               	btfss	status,2,c
  3336  0015D0  EFEC  F00A         	goto	u2001
  3337  0015D4  EFEE  F00A         	goto	u2000
  3338  0015D8                     u2001:
  3339  0015D8  EFF9  F00A         	goto	l250
  3340  0015DC                     u2000:
  3341  0015DC                     
  3342                           ;main.c: 323:         UART_printf("\r\n HORA ESTABLECIDA CORRECTAMENTE \r\n");
  3343  0015DC  0EA7               	movlw	low STR_4
  3344  0015DE  6E02               	movwf	UART_printf@cadena^0,c
  3345  0015E0  0E7E               	movlw	high STR_4
  3346  0015E2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3347  0015E4  EC5E  F00B         	call	_UART_printf	;wreg free
  3348  0015E8                     
  3349                           ;main.c: 324:         escribe_rtc(0x00, 0);
  3350  0015E8  0E00               	movlw	0
  3351  0015EA  6E03               	movwf	escribe_rtc@dato^0,c
  3352  0015EC  0E00               	movlw	0
  3353  0015EE  ECA6  F00D         	call	_escribe_rtc
  3354  0015F2                     l250:
  3355  0015F2  0012               	return		;funcret
  3356  0015F4                     __end_of_fijaHoraRtc:
  3357                           	opt callstack 0
  3358                           
  3359 ;; *************** function _setRtc *****************
  3360 ;; Defined at:
  3361 ;;		line 143 in file "main.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  direccion       1    wreg     unsigned char 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;  direccion       1    5[COMRAM] unsigned char 
  3366 ;;  Rx              1   10[COMRAM] unsigned char 
  3367 ;;  i               2    8[COMRAM] int 
  3368 ;;  datoCapturad    1    7[COMRAM] unsigned char 
  3369 ;;  dato            1    6[COMRAM] unsigned char 
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		wreg, status,2, status,0, cstack
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3379 ;;      Params:         0       0       0       0       0       0       0       0       0
  3380 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3381 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3382 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3383 ;;Total ram usage:        7 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; Hardware stack levels required when called:    4
  3386 ;; This function calls:
  3387 ;;		_UART_read
  3388 ;;		_UART_write
  3389 ;;		_escribe_rtc
  3390 ;; This function is called by:
  3391 ;;		_fijaHoraRtc
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           	psect	text14
  3396  001148                     __ptext14:
  3397                           	opt callstack 0
  3398  001148                     _setRtc:
  3399                           	opt callstack 24
  3400                           
  3401                           ;incstack = 0
  3402                           ;setRtc@direccion stored from wreg
  3403  001148  6E06               	movwf	setRtc@direccion^0,c
  3404  00114A                     
  3405                           ;main.c: 144:     unsigned char dato;;main.c: 145:     char datoCapturado = 0;
  3406  00114A  0E00               	movlw	0
  3407  00114C  6E08               	movwf	setRtc@datoCapturado^0,c
  3408                           
  3409                           ;main.c: 147:     for (int i = 0; i < 2; i++) {
  3410  00114E  0E00               	movlw	0
  3411  001150  6E0A               	movwf	(setRtc@i+1)^0,c
  3412  001152  0E00               	movlw	0
  3413  001154  6E09               	movwf	setRtc@i^0,c
  3414  001156                     l2513:
  3415                           
  3416                           ;main.c: 148:         char Rx = UART_read();
  3417  001156  ECE2  F00B         	call	_UART_read	;wreg free
  3418  00115A  6E0B               	movwf	setRtc@Rx^0,c
  3419  00115C                     
  3420                           ;main.c: 149:         if (Rx >= 48 && Rx <= 57) {
  3421  00115C  0E2F               	movlw	47
  3422  00115E  640B               	cpfsgt	setRtc@Rx^0,c
  3423  001160  EFB4  F008         	goto	u1791
  3424  001164  EFB6  F008         	goto	u1790
  3425  001168                     u1791:
  3426  001168  EFDA  F008         	goto	l2527
  3427  00116C                     u1790:
  3428  00116C  0E3A               	movlw	58
  3429  00116E  600B               	cpfslt	setRtc@Rx^0,c
  3430  001170  EFBC  F008         	goto	u1801
  3431  001174  EFBE  F008         	goto	u1800
  3432  001178                     u1801:
  3433  001178  EFDA  F008         	goto	l2527
  3434  00117C                     u1800:
  3435  00117C                     
  3436                           ;main.c: 150:             if (!i) {
  3437  00117C  5009               	movf	setRtc@i^0,w,c
  3438  00117E  100A               	iorwf	(setRtc@i+1)^0,w,c
  3439  001180  A4D8               	btfss	status,2,c
  3440  001182  EFC5  F008         	goto	u1811
  3441  001186  EFC7  F008         	goto	u1810
  3442  00118A                     u1811:
  3443  00118A  EFD2  F008         	goto	l2523
  3444  00118E                     u1810:
  3445  00118E                     
  3446                           ;main.c: 151:                 dato = ((Rx - 48) & 0x0F) << 4;
  3447  00118E  C00B  F005         	movff	setRtc@Rx,??_setRtc
  3448  001192  0ED0               	movlw	208
  3449  001194  2605               	addwf	??_setRtc^0,f,c
  3450  001196  0E0F               	movlw	15
  3451  001198  1605               	andwf	??_setRtc^0,f,c
  3452  00119A  3805               	swapf	??_setRtc^0,w,c
  3453  00119C  0BF0               	andlw	240
  3454  00119E  6E07               	movwf	setRtc@dato^0,c
  3455                           
  3456                           ;main.c: 152:             } else {
  3457  0011A0  EFE1  F008         	goto	l2531
  3458  0011A4                     l2523:
  3459                           
  3460                           ;main.c: 153:                 dato |= (Rx - 48) & 0x0F;
  3461  0011A4  500B               	movf	setRtc@Rx^0,w,c
  3462  0011A6  0FD0               	addlw	208
  3463  0011A8  0B0F               	andlw	15
  3464  0011AA  1207               	iorwf	setRtc@dato^0,f,c
  3465  0011AC                     
  3466                           ;main.c: 154:                 datoCapturado = 1;
  3467  0011AC  0E01               	movlw	1
  3468  0011AE  6E08               	movwf	setRtc@datoCapturado^0,c
  3469  0011B0  EFE1  F008         	goto	l2531
  3470  0011B4                     l2527:
  3471                           
  3472                           ;main.c: 157:             datoCapturado = 0;
  3473  0011B4  0E00               	movlw	0
  3474  0011B6  6E08               	movwf	setRtc@datoCapturado^0,c
  3475  0011B8                     
  3476                           ;main.c: 159:             UART_write('F');
  3477  0011B8  0E46               	movlw	70
  3478  0011BA  ECDC  F00D         	call	_UART_write
  3479                           
  3480                           ;main.c: 160:             break;
  3481  0011BE  EFF1  F008         	goto	l2535
  3482  0011C2                     l2531:
  3483                           
  3484                           ;main.c: 162:     }
  3485  0011C2  4A09               	infsnz	setRtc@i^0,f,c
  3486  0011C4  2A0A               	incf	(setRtc@i+1)^0,f,c
  3487  0011C6  BE0A               	btfsc	(setRtc@i+1)^0,7,c
  3488  0011C8  EFEF  F008         	goto	u1821
  3489  0011CC  500A               	movf	(setRtc@i+1)^0,w,c
  3490  0011CE  E109               	bnz	u1820
  3491  0011D0  0E02               	movlw	2
  3492  0011D2  5C09               	subwf	setRtc@i^0,w,c
  3493  0011D4  A0D8               	btfss	status,0,c
  3494  0011D6  EFEF  F008         	goto	u1821
  3495  0011DA  EFF1  F008         	goto	u1820
  3496  0011DE                     u1821:
  3497  0011DE  EFAB  F008         	goto	l2513
  3498  0011E2                     u1820:
  3499  0011E2                     l2535:
  3500                           
  3501                           ;main.c: 164:     if (datoCapturado && !esperandoDatos)
  3502  0011E2  5008               	movf	setRtc@datoCapturado^0,w,c
  3503  0011E4  B4D8               	btfsc	status,2,c
  3504  0011E6  EFF7  F008         	goto	u1831
  3505  0011EA  EFF9  F008         	goto	u1830
  3506  0011EE                     u1831:
  3507  0011EE  EF06  F009         	goto	l202
  3508  0011F2                     u1830:
  3509  0011F2  505E               	movf	_esperandoDatos^0,w,c
  3510  0011F4  A4D8               	btfss	status,2,c
  3511  0011F6  EFFF  F008         	goto	u1841
  3512  0011FA  EF01  F009         	goto	u1840
  3513  0011FE                     u1841:
  3514  0011FE  EF06  F009         	goto	l202
  3515  001202                     u1840:
  3516  001202                     
  3517                           ;main.c: 165:         escribe_rtc(direccion, dato);
  3518  001202  C007  F003         	movff	setRtc@dato,escribe_rtc@dato
  3519  001206  5006               	movf	setRtc@direccion^0,w,c
  3520  001208  ECA6  F00D         	call	_escribe_rtc
  3521  00120C                     l202:
  3522  00120C  0012               	return		;funcret
  3523  00120E                     __end_of_setRtc:
  3524                           	opt callstack 0
  3525                           
  3526 ;; *************** function _escribe_rtc *****************
  3527 ;; Defined at:
  3528 ;;		line 2 in file "./RTC.h"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;  direccion       1    wreg     unsigned char 
  3531 ;;  dato            1    2[COMRAM] unsigned char 
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;  direccion       1    3[COMRAM] unsigned char 
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  1    wreg      void 
  3536 ;; Registers used:
  3537 ;;		wreg, status,2, status,0, cstack
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3543 ;;      Params:         1       0       0       0       0       0       0       0       0
  3544 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3545 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3546 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3547 ;;Total ram usage:        2 bytes
  3548 ;; Hardware stack levels used:    1
  3549 ;; Hardware stack levels required when called:    3
  3550 ;; This function calls:
  3551 ;;		_i2c_detener
  3552 ;;		_i2c_envia_dato
  3553 ;;		_i2c_inicia_com
  3554 ;; This function is called by:
  3555 ;;		_setRtc
  3556 ;;		_fijaHoraRtc
  3557 ;;		_setRtcDefault
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           	psect	text15
  3562  001B4C                     __ptext15:
  3563                           	opt callstack 0
  3564  001B4C                     _escribe_rtc:
  3565                           	opt callstack 24
  3566                           
  3567                           ;incstack = 0
  3568                           ;escribe_rtc@direccion stored from wreg
  3569  001B4C  6E04               	movwf	escribe_rtc@direccion^0,c
  3570  001B4E                     
  3571                           ;./RTC.h: 3:     i2c_inicia_com();
  3572  001B4E  EC01  F00E         	call	_i2c_inicia_com	;wreg free
  3573                           
  3574                           ;./RTC.h: 4:     i2c_envia_dato(0xD0);
  3575  001B52  0ED0               	movlw	208
  3576  001B54  ECF2  F00D         	call	_i2c_envia_dato
  3577                           
  3578                           ;./RTC.h: 5:     i2c_envia_dato(direccion);
  3579  001B58  5004               	movf	escribe_rtc@direccion^0,w,c
  3580  001B5A  ECF2  F00D         	call	_i2c_envia_dato
  3581                           
  3582                           ;./RTC.h: 6:     i2c_envia_dato(dato);
  3583  001B5E  5003               	movf	escribe_rtc@dato^0,w,c
  3584  001B60  ECF2  F00D         	call	_i2c_envia_dato
  3585                           
  3586                           ;./RTC.h: 7:     i2c_detener();
  3587  001B64  EC05  F00E         	call	_i2c_detener	;wreg free
  3588  001B68  0012               	return		;funcret
  3589  001B6A                     __end_of_escribe_rtc:
  3590                           	opt callstack 0
  3591                           
  3592 ;; *************** function _dameDatosSistema *****************
  3593 ;; Defined at:
  3594 ;;		line 605 in file "main.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;		None
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  i               2   35[BANK0 ] int 
  3599 ;;  buffer         15   20[BANK0 ] unsigned char [15]
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  1    wreg      void 
  3602 ;; Registers used:
  3603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3609 ;;      Params:         0       0       0       0       0       0       0       0       0
  3610 ;;      Locals:         0      17       0       0       0       0       0       0       0
  3611 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3612 ;;      Totals:         3      17       0       0       0       0       0       0       0
  3613 ;;Total ram usage:       20 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; Hardware stack levels required when called:    9
  3616 ;; This function calls:
  3617 ;;		_UART_printf
  3618 ;;		___wmul
  3619 ;;		_sprintf
  3620 ;; This function is called by:
  3621 ;;		_sistemaPrincipal
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           	psect	text16
  3626  000E0A                     __ptext16:
  3627                           	opt callstack 0
  3628  000E0A                     _dameDatosSistema:
  3629                           	opt callstack 20
  3630  000E0A                     
  3631                           ;main.c: 607:     char buffer[15];;main.c: 609:     UART_printf("\r\n\nHora | Regar(1 si
      +                           0 no) | Minutos de riego \r\n\n");
  3632  000E0A  0E7F               	movlw	low STR_24
  3633  000E0C  6E02               	movwf	UART_printf@cadena^0,c
  3634  000E0E  0E7D               	movlw	high STR_24
  3635  000E10  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3636  000E12  EC5E  F00B         	call	_UART_printf	;wreg free
  3637  000E16                     
  3638                           ;main.c: 611:     for (int i = 0; i < 24; i++) {
  3639  000E16  0E00               	movlw	0
  3640  000E18  0100               	movlb	0	; () banked
  3641  000E1A  6FF1               	movwf	(dameDatosSistema@i+1)& (0+255),b
  3642  000E1C  0E00               	movlw	0
  3643  000E1E  6FF0               	movwf	dameDatosSistema@i& (0+255),b
  3644  000E20                     l2869:
  3645                           
  3646                           ; BSR set to: 0
  3647                           ;main.c: 613:         sprintf(buffer, "%d | %d | %d \r\n", horarios[i].hora, horarios[i]
      +                          .regar,
  3648  000E20  0EE1               	movlw	low dameDatosSistema@buffer
  3649  000E22  6FCD               	movwf	sprintf@s& (0+255),b
  3650  000E24  0E00               	movlw	high dameDatosSistema@buffer
  3651  000E26  6FCE               	movwf	(sprintf@s+1)& (0+255),b
  3652  000E28  0EE1               	movlw	low STR_25
  3653  000E2A  6FCF               	movwf	sprintf@fmt& (0+255),b
  3654  000E2C  0E7F               	movlw	high STR_25
  3655  000E2E  6FD0               	movwf	(sprintf@fmt+1)& (0+255),b
  3656  000E30  C0F0  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  3657  000E34  C0F1  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  3658  000E38  0E00               	movlw	0
  3659  000E3A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3660  000E3C  0E03               	movlw	3
  3661  000E3E  6E03               	movwf	___wmul@multiplicand^0,c
  3662  000E40  EC83  F00D         	call	___wmul	;wreg free
  3663  000E44  0E60               	movlw	low _horarios
  3664  000E46  2401               	addwf	?___wmul^0,w,c
  3665  000E48  6ED9               	movwf	fsr2l,c
  3666  000E4A  0E00               	movlw	high _horarios
  3667  000E4C  2002               	addwfc	(?___wmul+1)^0,w,c
  3668  000E4E  6EDA               	movwf	fsr2h,c
  3669  000E50  50DF               	movf	indf2,w,c
  3670  000E52  6E58               	movwf	??_dameDatosSistema^0,c
  3671  000E54  5058               	movf	??_dameDatosSistema^0,w,c
  3672  000E56  0100               	movlb	0	; () banked
  3673  000E58  6FD1               	movwf	(?_sprintf+4)& (0+255),b
  3674  000E5A  6BD2               	clrf	(?_sprintf+5)& (0+255),b
  3675  000E5C  C0F0  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  3676  000E60  C0F1  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  3677  000E64  0E00               	movlw	0
  3678  000E66  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3679  000E68  0E03               	movlw	3
  3680  000E6A  6E03               	movwf	___wmul@multiplicand^0,c
  3681  000E6C  EC83  F00D         	call	___wmul	;wreg free
  3682  000E70  0E61               	movlw	low (_horarios+1)
  3683  000E72  2401               	addwf	?___wmul^0,w,c
  3684  000E74  6ED9               	movwf	fsr2l,c
  3685  000E76  0E00               	movlw	high (_horarios+1)
  3686  000E78  2002               	addwfc	(?___wmul+1)^0,w,c
  3687  000E7A  6EDA               	movwf	fsr2h,c
  3688  000E7C  50DF               	movf	indf2,w,c
  3689  000E7E  6E59               	movwf	(??_dameDatosSistema+1)^0,c
  3690  000E80  5059               	movf	(??_dameDatosSistema+1)^0,w,c
  3691  000E82  0100               	movlb	0	; () banked
  3692  000E84  6FD3               	movwf	(?_sprintf+6)& (0+255),b
  3693  000E86  6BD4               	clrf	(?_sprintf+7)& (0+255),b
  3694  000E88  C0F0  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  3695  000E8C  C0F1  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  3696  000E90  0E00               	movlw	0
  3697  000E92  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3698  000E94  0E03               	movlw	3
  3699  000E96  6E03               	movwf	___wmul@multiplicand^0,c
  3700  000E98  EC83  F00D         	call	___wmul	;wreg free
  3701  000E9C  0E62               	movlw	low (_horarios+2)
  3702  000E9E  2401               	addwf	?___wmul^0,w,c
  3703  000EA0  6ED9               	movwf	fsr2l,c
  3704  000EA2  0E00               	movlw	high (_horarios+2)
  3705  000EA4  2002               	addwfc	(?___wmul+1)^0,w,c
  3706  000EA6  6EDA               	movwf	fsr2h,c
  3707  000EA8  50DF               	movf	indf2,w,c
  3708  000EAA  6E5A               	movwf	(??_dameDatosSistema+2)^0,c
  3709  000EAC  505A               	movf	(??_dameDatosSistema+2)^0,w,c
  3710  000EAE  0100               	movlb	0	; () banked
  3711  000EB0  6FD5               	movwf	(?_sprintf+8)& (0+255),b
  3712  000EB2  6BD6               	clrf	(?_sprintf+9)& (0+255),b
  3713  000EB4  EC0C  F00C         	call	_sprintf	;wreg free
  3714  000EB8                     
  3715                           ;main.c: 616:         UART_printf(buffer);
  3716  000EB8  0EE1               	movlw	low dameDatosSistema@buffer
  3717  000EBA  6E02               	movwf	UART_printf@cadena^0,c
  3718  000EBC  0E00               	movlw	high dameDatosSistema@buffer
  3719  000EBE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3720  000EC0  EC5E  F00B         	call	_UART_printf	;wreg free
  3721  000EC4                     
  3722                           ;main.c: 618:     }
  3723  000EC4  0100               	movlb	0	; () banked
  3724  000EC6  4BF0               	infsnz	dameDatosSistema@i& (0+255),f,b
  3725  000EC8  2BF1               	incf	(dameDatosSistema@i+1)& (0+255),f,b
  3726  000ECA                     
  3727                           ; BSR set to: 0
  3728  000ECA  BFF1               	btfsc	(dameDatosSistema@i+1)& (0+255),7,b
  3729  000ECC  EF71  F007         	goto	u2231
  3730  000ED0  51F1               	movf	(dameDatosSistema@i+1)& (0+255),w,b
  3731  000ED2  E109               	bnz	u2230
  3732  000ED4  0E18               	movlw	24
  3733  000ED6  5DF0               	subwf	dameDatosSistema@i& (0+255),w,b
  3734  000ED8  A0D8               	btfss	status,0,c
  3735  000EDA  EF71  F007         	goto	u2231
  3736  000EDE  EF73  F007         	goto	u2230
  3737  000EE2                     u2231:
  3738  000EE2  EF10  F007         	goto	l2869
  3739  000EE6                     u2230:
  3740  000EE6                     
  3741                           ; BSR set to: 0
  3742  000EE6  0012               	return		;funcret
  3743  000EE8                     __end_of_dameDatosSistema:
  3744                           	opt callstack 0
  3745                           
  3746 ;; *************** function _sprintf *****************
  3747 ;; Defined at:
  3748 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;  s               2    0[BANK0 ] PTR unsigned char 
  3751 ;;		 -> dameDatosSistema@buffer(15), 
  3752 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  3753 ;;		 -> STR_25(16), 
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  f               6   14[BANK0 ] struct _IO_FILE
  3756 ;;  ap              2   12[BANK0 ] PTR void [1]
  3757 ;;		 -> ?_sprintf(2), 
  3758 ;;  ret             2    0        int 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  2    0[BANK0 ] int 
  3761 ;; Registers used:
  3762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3768 ;;      Params:         0      10       0       0       0       0       0       0       0
  3769 ;;      Locals:         0      10       0       0       0       0       0       0       0
  3770 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3771 ;;      Totals:         0      20       0       0       0       0       0       0       0
  3772 ;;Total ram usage:       20 bytes
  3773 ;; Hardware stack levels used:    1
  3774 ;; Hardware stack levels required when called:    8
  3775 ;; This function calls:
  3776 ;;		_vfprintf
  3777 ;; This function is called by:
  3778 ;;		_dameDatosSistema
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           	psect	text17
  3783  001818                     __ptext17:
  3784                           	opt callstack 0
  3785  001818                     _sprintf:
  3786                           	opt callstack 20
  3787  001818  0ED1               	movlw	low (?_sprintf+4)
  3788  00181A  0100               	movlb	0	; () banked
  3789  00181C  6FD9               	movwf	sprintf@ap& (0+255),b
  3790  00181E  0E00               	movlw	high (?_sprintf+4)
  3791  001820  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
  3792  001822  C0CD  F0DB         	movff	sprintf@s,sprintf@f
  3793  001826  C0CE  F0DC         	movff	sprintf@s+1,sprintf@f+1
  3794  00182A                     
  3795                           ; BSR set to: 0
  3796  00182A  0E00               	movlw	0
  3797  00182C  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  3798  00182E  0E00               	movlw	0
  3799  001830  6FDD               	movwf	(sprintf@f+2)& (0+255),b
  3800  001832                     
  3801                           ; BSR set to: 0
  3802  001832  0E00               	movlw	0
  3803  001834  6FE0               	movwf	(sprintf@f+5)& (0+255),b
  3804  001836  0E00               	movlw	0
  3805  001838  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  3806  00183A                     
  3807                           ; BSR set to: 0
  3808  00183A  0EDB               	movlw	low sprintf@f
  3809  00183C  6E50               	movwf	vfprintf@fp^0,c
  3810  00183E  0E00               	movlw	high sprintf@f
  3811  001840  6E51               	movwf	(vfprintf@fp+1)^0,c
  3812  001842  C0CF  F052         	movff	sprintf@fmt,vfprintf@fmt
  3813  001846  C0D0  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3814  00184A  0ED9               	movlw	low sprintf@ap
  3815  00184C  6E54               	movwf	vfprintf@ap^0,c
  3816  00184E  0E00               	movlw	high sprintf@ap
  3817  001850  6E55               	movwf	(vfprintf@ap+1)^0,c
  3818  001852  EC2D  F00B         	call	_vfprintf	;wreg free
  3819  001856  0100               	movlb	0	; () banked
  3820  001858  51DD               	movf	(sprintf@f+2)& (0+255),w,b
  3821  00185A  25CD               	addwf	sprintf@s& (0+255),w,b
  3822  00185C  6ED9               	movwf	fsr2l,c
  3823  00185E  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  3824  001860  21CE               	addwfc	(sprintf@s+1)& (0+255),w,b
  3825  001862  6EDA               	movwf	fsr2h,c
  3826  001864  0E00               	movlw	0
  3827  001866  6EDF               	movwf	indf2,c
  3828  001868                     
  3829                           ; BSR set to: 0
  3830  001868  0012               	return		;funcret
  3831  00186A                     __end_of_sprintf:
  3832                           	opt callstack 0
  3833                           
  3834 ;; *************** function _vfprintf *****************
  3835 ;; Defined at:
  3836 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  3839 ;;		 -> sprintf@f(6), 
  3840 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  3841 ;;		 -> STR_25(16), 
  3842 ;;  ap              2   83[COMRAM] PTR PTR void 
  3843 ;;		 -> sprintf@ap(2), 
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  3846 ;;		 -> STR_25(16), 
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  2   79[COMRAM] int 
  3849 ;; Registers used:
  3850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3856 ;;      Params:         6       0       0       0       0       0       0       0       0
  3857 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3858 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3859 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3860 ;;Total ram usage:        8 bytes
  3861 ;; Hardware stack levels used:    1
  3862 ;; Hardware stack levels required when called:    7
  3863 ;; This function calls:
  3864 ;;		_vfpfcnvrt
  3865 ;; This function is called by:
  3866 ;;		_sprintf
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           	psect	text18
  3871  00165A                     __ptext18:
  3872                           	opt callstack 0
  3873  00165A                     _vfprintf:
  3874                           	opt callstack 20
  3875  00165A                     
  3876                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3877  00165A  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  3878  00165E  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3879  001662                     
  3880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3881  001662  0E00               	movlw	0
  3882  001664  0100               	movlb	0	; () banked
  3883  001666  6FB9               	movwf	(_nout+1)& (0+255),b
  3884  001668  0E00               	movlw	0
  3885  00166A  6FB8               	movwf	_nout& (0+255),b
  3886                           
  3887                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3888  00166C  EF4B  F00B         	goto	l2471
  3889  001670                     l2469:
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3893  001670  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  3894  001674  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3895  001678  0E56               	movlw	low vfprintf@cfmt
  3896  00167A  6E42               	movwf	vfpfcnvrt@fmt^0,c
  3897  00167C  0E00               	movlw	high vfprintf@cfmt
  3898  00167E  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3899  001680  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  3900  001684  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3901  001688  EC8B  F003         	call	_vfpfcnvrt	;wreg free
  3902  00168C  5040               	movf	?_vfpfcnvrt^0,w,c
  3903  00168E  0100               	movlb	0	; () banked
  3904  001690  27B8               	addwf	_nout& (0+255),f,b
  3905  001692  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  3906  001694  23B9               	addwfc	(_nout+1)& (0+255),f,b
  3907  001696                     l2471:
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3911  001696  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  3912  00169A  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3913  00169E                     	if	0	;tblptru may be non-zero
  3914  00169E                     	endif
  3915  00169E                     	if	0	;tblptru may be non-zero
  3916  00169E                     	endif
  3917  00169E  0008               	tblrd		*
  3918  0016A0  50F5               	movf	tablat,w,c
  3919  0016A2  0900               	iorlw	0
  3920  0016A4  A4D8               	btfss	status,2,c
  3921  0016A6  EF57  F00B         	goto	u1731
  3922  0016AA  EF59  F00B         	goto	u1730
  3923  0016AE                     u1731:
  3924  0016AE  EF38  F00B         	goto	l2469
  3925  0016B2                     u1730:
  3926  0016B2                     
  3927                           ; BSR set to: 0
  3928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3929  0016B2  C0B8  F050         	movff	_nout,?_vfprintf
  3930  0016B6  C0B9  F051         	movff	_nout+1,?_vfprintf+1
  3931  0016BA                     
  3932                           ; BSR set to: 0
  3933  0016BA  0012               	return		;funcret
  3934  0016BC                     __end_of_vfprintf:
  3935                           	opt callstack 0
  3936                           
  3937 ;; *************** function _vfpfcnvrt *****************
  3938 ;; Defined at:
  3939 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  3942 ;;		 -> sprintf@f(6), 
  3943 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  3944 ;;		 -> vfprintf@cfmt(2), 
  3945 ;;  ap              2   67[COMRAM] PTR PTR void 
  3946 ;;		 -> sprintf@ap(2), 
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;  ll              8   71[COMRAM] long long 
  3949 ;;  llu             8    0        unsigned long long 
  3950 ;;  f               4    0        unsigned long long 
  3951 ;;  vp              3    0        PTR void 
  3952 ;;  ct              3    0        unsigned char [3]
  3953 ;;  cp              3    0        PTR unsigned char 
  3954 ;;  i               2    0        int 
  3955 ;;  done            2    0        int 
  3956 ;;  c               1    0        unsigned char 
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  2   63[COMRAM] int 
  3959 ;; Registers used:
  3960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3966 ;;      Params:         6       0       0       0       0       0       0       0       0
  3967 ;;      Locals:         8       0       0       0       0       0       0       0       0
  3968 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3969 ;;      Totals:        16       0       0       0       0       0       0       0       0
  3970 ;;Total ram usage:       16 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; Hardware stack levels required when called:    6
  3973 ;; This function calls:
  3974 ;;		_dtoa
  3975 ;;		_fputc
  3976 ;; This function is called by:
  3977 ;;		_vfprintf
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           	psect	text19
  3982  000716                     __ptext19:
  3983                           	opt callstack 0
  3984  000716                     _vfpfcnvrt:
  3985                           	opt callstack 20
  3986  000716                     
  3987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3988  000716  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3989  00071A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3990  00071E  CFDE FFF6          	movff	postinc2,tblptrl
  3991  000722  CFDD FFF7          	movff	postdec2,tblptrh
  3992  000726                     	if	0	;tblptru may be non-zero
  3993  000726                     	endif
  3994  000726                     	if	0	;tblptru may be non-zero
  3995  000726                     	endif
  3996  000726  0008               	tblrd		*
  3997  000728  50F5               	movf	tablat,w,c
  3998  00072A  0A25               	xorlw	37
  3999  00072C  A4D8               	btfss	status,2,c
  4000  00072E  EF9B  F003         	goto	u1651
  4001  000732  EF9D  F003         	goto	u1650
  4002  000736                     u1651:
  4003  000736  EF49  F004         	goto	l2419
  4004  00073A                     u1650:
  4005  00073A                     
  4006                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4007  00073A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4008  00073E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4009  000742  2ADE               	incf	postinc2,f,c
  4010  000744  0E00               	movlw	0
  4011  000746  22DD               	addwfc	postdec2,f,c
  4012  000748                     
  4013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4014  000748  0E00               	movlw	0
  4015  00074A  0100               	movlb	0	; () banked
  4016  00074C  6FBB               	movwf	(_width+1)& (0+255),b
  4017  00074E  0E00               	movlw	0
  4018  000750  6FBA               	movwf	_width& (0+255),b
  4019  000752  C0BA  F0BE         	movff	_width,_flags
  4020  000756  C0BB  F0BF         	movff	_width+1,_flags+1
  4021  00075A                     
  4022                           ; BSR set to: 0
  4023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4024  00075A  69BC               	setf	_prec& (0+255),b
  4025  00075C  69BD               	setf	(_prec+1)& (0+255),b
  4026  00075E                     
  4027                           ; BSR set to: 0
  4028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4029  00075E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4030  000762  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4031  000766  CFDE FFF6          	movff	postinc2,tblptrl
  4032  00076A  CFDD FFF7          	movff	postdec2,tblptrh
  4033  00076E                     	if	0	;tblptru may be non-zero
  4034  00076E                     	endif
  4035  00076E                     	if	0	;tblptru may be non-zero
  4036  00076E                     	endif
  4037  00076E  0008               	tblrd		*
  4038  000770  50F5               	movf	tablat,w,c
  4039  000772  0A64               	xorlw	100
  4040  000774  B4D8               	btfsc	status,2,c
  4041  000776  EFBF  F003         	goto	u1661
  4042  00077A  EFC1  F003         	goto	u1660
  4043  00077E                     u1661:
  4044  00077E  EFD3  F003         	goto	l2397
  4045  000782                     u1660:
  4046  000782                     
  4047                           ; BSR set to: 0
  4048  000782  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4049  000786  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4050  00078A  CFDE FFF6          	movff	postinc2,tblptrl
  4051  00078E  CFDD FFF7          	movff	postdec2,tblptrh
  4052  000792                     	if	0	;tblptru may be non-zero
  4053  000792                     	endif
  4054  000792                     	if	0	;tblptru may be non-zero
  4055  000792                     	endif
  4056  000792  0008               	tblrd		*
  4057  000794  50F5               	movf	tablat,w,c
  4058  000796  0A69               	xorlw	105
  4059  000798  A4D8               	btfss	status,2,c
  4060  00079A  EFD1  F003         	goto	u1671
  4061  00079E  EFD3  F003         	goto	u1670
  4062  0007A2                     u1671:
  4063  0007A2  EF13  F004         	goto	l2403
  4064  0007A6                     u1670:
  4065  0007A6                     l2397:
  4066                           
  4067                           ; BSR set to: 0
  4068                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4069  0007A6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4070  0007AA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4071  0007AE  2ADE               	incf	postinc2,f,c
  4072  0007B0  0E00               	movlw	0
  4073  0007B2  22DD               	addwfc	postdec2,f,c
  4074                           
  4075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4076  0007B4  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4077  0007B8  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4078  0007BC  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4079  0007C0  0E02               	movlw	2
  4080  0007C2  26DE               	addwf	postinc2,f,c
  4081  0007C4  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4082  0007C8  0E00               	movlw	0
  4083  0007CA  22DD               	addwfc	postdec2,f,c
  4084  0007CC  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4085  0007D0  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4086  0007D4  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  4087  0007D8  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  4088  0007DC  0E00               	movlw	0
  4089  0007DE  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4090  0007E0  0EFF               	movlw	-1
  4091  0007E2  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  4092  0007E4  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  4093  0007E6  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  4094  0007E8  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  4095  0007EA  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  4096  0007EC  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  4097  0007EE                     
  4098                           ; BSR set to: 0
  4099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4100  0007EE  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  4101  0007F2  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4102  0007F6  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  4103  0007FA  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4104  0007FE  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4105  000802  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4106  000806  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4107  00080A  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4108  00080E  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4109  000812  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4110  000816  EC09  F000         	call	_dtoa	;wreg free
  4111  00081A  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  4112  00081E  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4113  000822  EF64  F004         	goto	l405
  4114  000826                     l2403:
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4118  000826  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4119  00082A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4120  00082E  CFDE FFF6          	movff	postinc2,tblptrl
  4121  000832  CFDD FFF7          	movff	postdec2,tblptrh
  4122  000836                     	if	0	;tblptru may be non-zero
  4123  000836                     	endif
  4124  000836                     	if	0	;tblptru may be non-zero
  4125  000836                     	endif
  4126  000836  0008               	tblrd		*
  4127  000838  50F5               	movf	tablat,w,c
  4128  00083A  0A25               	xorlw	37
  4129  00083C  A4D8               	btfss	status,2,c
  4130  00083E  EF23  F004         	goto	u1681
  4131  000842  EF25  F004         	goto	u1680
  4132  000846                     u1681:
  4133  000846  EF3C  F004         	goto	l2413
  4134  00084A                     u1680:
  4135  00084A                     
  4136                           ; BSR set to: 0
  4137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4138  00084A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4139  00084E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4140  000852  2ADE               	incf	postinc2,f,c
  4141  000854  0E00               	movlw	0
  4142  000856  22DD               	addwfc	postdec2,f,c
  4143  000858                     
  4144                           ; BSR set to: 0
  4145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4146  000858  0E00               	movlw	0
  4147  00085A  6E02               	movwf	(fputc@c+1)^0,c
  4148  00085C  0E25               	movlw	37
  4149  00085E  6E01               	movwf	fputc@c^0,c
  4150  000860  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4151  000864  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4152  000868  ECDB  F007         	call	_fputc	;wreg free
  4153  00086C                     l2409:
  4154                           
  4155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4156  00086C  0E00               	movlw	0
  4157  00086E  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  4158  000870  0E01               	movlw	1
  4159  000872  6E40               	movwf	?_vfpfcnvrt^0,c
  4160  000874  EF64  F004         	goto	l405
  4161  000878                     l2413:
  4162                           
  4163                           ; BSR set to: 0
  4164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4165  000878  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4166  00087C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4167  000880  2ADE               	incf	postinc2,f,c
  4168  000882  0E00               	movlw	0
  4169  000884  22DD               	addwfc	postdec2,f,c
  4170  000886                     
  4171                           ; BSR set to: 0
  4172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4173  000886  0E00               	movlw	0
  4174  000888  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  4175  00088A  0E00               	movlw	0
  4176  00088C  6E40               	movwf	?_vfpfcnvrt^0,c
  4177  00088E  EF64  F004         	goto	l405
  4178  000892                     l2419:
  4179                           
  4180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4181  000892  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4182  000896  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4183  00089A  CFDE FFF6          	movff	postinc2,tblptrl
  4184  00089E  CFDD FFF7          	movff	postdec2,tblptrh
  4185  0008A2                     	if	0	;tblptru may be non-zero
  4186  0008A2                     	endif
  4187  0008A2                     	if	0	;tblptru may be non-zero
  4188  0008A2                     	endif
  4189  0008A2  0008               	tblrd		*
  4190  0008A4  50F5               	movf	tablat,w,c
  4191  0008A6  6E01               	movwf	fputc@c^0,c
  4192  0008A8  6A02               	clrf	(fputc@c+1)^0,c
  4193  0008AA  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4194  0008AE  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4195  0008B2  ECDB  F007         	call	_fputc	;wreg free
  4196  0008B6                     
  4197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  4198  0008B6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4199  0008BA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4200  0008BE  2ADE               	incf	postinc2,f,c
  4201  0008C0  0E00               	movlw	0
  4202  0008C2  22DD               	addwfc	postdec2,f,c
  4203  0008C4  EF36  F004         	goto	l2409
  4204  0008C8                     l405:
  4205  0008C8  0012               	return		;funcret
  4206  0008CA                     __end_of_vfpfcnvrt:
  4207                           	opt callstack 0
  4208                           
  4209 ;; *************** function _dtoa *****************
  4210 ;; Defined at:
  4211 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4214 ;;		 -> sprintf@f(6), 
  4215 ;;  d               8   29[COMRAM] long long 
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;  n               8   53[COMRAM] long long 
  4218 ;;  i               2   61[COMRAM] int 
  4219 ;;  s               2   51[COMRAM] int 
  4220 ;;  w               2   49[COMRAM] int 
  4221 ;;  p               2   47[COMRAM] int 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  2   27[COMRAM] int 
  4224 ;; Registers used:
  4225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4231 ;;      Params:        10       0       0       0       0       0       0       0       0
  4232 ;;      Locals:        18       0       0       0       0       0       0       0       0
  4233 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4234 ;;      Totals:        36       0       0       0       0       0       0       0       0
  4235 ;;Total ram usage:       36 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; Hardware stack levels required when called:    5
  4238 ;; This function calls:
  4239 ;;		___aodiv
  4240 ;;		___aomod
  4241 ;;		_abs
  4242 ;;		_pad
  4243 ;; This function is called by:
  4244 ;;		_vfpfcnvrt
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248                           	psect	text20
  4249  000012                     __ptext20:
  4250                           	opt callstack 0
  4251  000012                     _dtoa:
  4252                           	opt callstack 20
  4253  000012                     
  4254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  4255  000012  C01E  F036         	movff	dtoa@d,dtoa@n
  4256  000016  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  4257  00001A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  4258  00001E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  4259  000022  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  4260  000026  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  4261  00002A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  4262  00002E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  4263  000032                     
  4264                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  4265  000032  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  4266  000034  EF1E  F000         	goto	u1501
  4267  000038  EF21  F000         	goto	u1500
  4268  00003C                     u1501:
  4269  00003C  0E01               	movlw	1
  4270  00003E  EF22  F000         	goto	u1510
  4271  000042                     u1500:
  4272  000042  0E00               	movlw	0
  4273  000044                     u1510:
  4274  000044  6E34               	movwf	dtoa@s^0,c
  4275  000046  6A35               	clrf	(dtoa@s+1)^0,c
  4276                           
  4277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  4278  000048  5034               	movf	dtoa@s^0,w,c
  4279  00004A  1035               	iorwf	(dtoa@s+1)^0,w,c
  4280  00004C  B4D8               	btfsc	status,2,c
  4281  00004E  EF2B  F000         	goto	u1521
  4282  000052  EF2D  F000         	goto	u1520
  4283  000056                     u1521:
  4284  000056  EF3D  F000         	goto	l2313
  4285  00005A                     u1520:
  4286  00005A                     
  4287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  4288  00005A  1E3D               	comf	(dtoa@n+7)^0,f,c
  4289  00005C  1E3C               	comf	(dtoa@n+6)^0,f,c
  4290  00005E  1E3B               	comf	(dtoa@n+5)^0,f,c
  4291  000060  1E3A               	comf	(dtoa@n+4)^0,f,c
  4292  000062  1E39               	comf	(dtoa@n+3)^0,f,c
  4293  000064  1E38               	comf	(dtoa@n+2)^0,f,c
  4294  000066  1E37               	comf	(dtoa@n+1)^0,f,c
  4295  000068  6C36               	negf	dtoa@n^0,c
  4296  00006A  0E00               	movlw	0
  4297  00006C  2237               	addwfc	(dtoa@n+1)^0,f,c
  4298  00006E  2238               	addwfc	(dtoa@n+2)^0,f,c
  4299  000070  2239               	addwfc	(dtoa@n+3)^0,f,c
  4300  000072  223A               	addwfc	(dtoa@n+4)^0,f,c
  4301  000074  223B               	addwfc	(dtoa@n+5)^0,f,c
  4302  000076  223C               	addwfc	(dtoa@n+6)^0,f,c
  4303  000078  223D               	addwfc	(dtoa@n+7)^0,f,c
  4304  00007A                     l2313:
  4305                           
  4306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  4307  00007A  0100               	movlb	0	; () banked
  4308  00007C  BFBD               	btfsc	(_prec+1)& (0+255),7,b
  4309  00007E  EF43  F000         	goto	u1531
  4310  000082  EF45  F000         	goto	u1530
  4311  000086                     u1531:
  4312  000086  EF46  F000         	goto	l2317
  4313  00008A                     u1530:
  4314  00008A                     
  4315                           ; BSR set to: 0
  4316                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  4317  00008A  93BE               	bcf	_flags& (0+255),1,b
  4318  00008C                     l2317:
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  4322  00008C  BFBD               	btfsc	(_prec+1)& (0+255),7,b
  4323  00008E  EF53  F000         	goto	u1540
  4324  000092  51BD               	movf	(_prec+1)& (0+255),w,b
  4325  000094  E106               	bnz	u1541
  4326  000096  05BC               	decf	_prec& (0+255),w,b
  4327  000098  B0D8               	btfsc	status,0,c
  4328  00009A  EF51  F000         	goto	u1541
  4329  00009E  EF53  F000         	goto	u1540
  4330  0000A2                     u1541:
  4331  0000A2  EF59  F000         	goto	l378
  4332  0000A6                     u1540:
  4333  0000A6                     
  4334                           ; BSR set to: 0
  4335  0000A6  0E00               	movlw	0
  4336  0000A8  6E31               	movwf	(dtoa@p+1)^0,c
  4337  0000AA  0E01               	movlw	1
  4338  0000AC  6E30               	movwf	dtoa@p^0,c
  4339  0000AE  EF5D  F000         	goto	l380
  4340  0000B2                     l378:
  4341                           
  4342                           ; BSR set to: 0
  4343  0000B2  C0BC  F030         	movff	_prec,dtoa@p
  4344  0000B6  C0BD  F031         	movff	_prec+1,dtoa@p+1
  4345  0000BA                     l380:
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  4349  0000BA  C0BA  F032         	movff	_width,dtoa@w
  4350  0000BE  C0BB  F033         	movff	_width+1,dtoa@w+1
  4351  0000C2                     
  4352                           ; BSR set to: 0
  4353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  4354  0000C2  5034               	movf	dtoa@s^0,w,c
  4355  0000C4  1035               	iorwf	(dtoa@s+1)^0,w,c
  4356  0000C6  A4D8               	btfss	status,2,c
  4357  0000C8  EF68  F000         	goto	u1551
  4358  0000CC  EF6A  F000         	goto	u1550
  4359  0000D0                     u1551:
  4360  0000D0  EF71  F000         	goto	l2325
  4361  0000D4                     u1550:
  4362  0000D4                     
  4363                           ; BSR set to: 0
  4364  0000D4  A5BE               	btfss	_flags& (0+255),2,b
  4365  0000D6  EF6F  F000         	goto	u1561
  4366  0000DA  EF71  F000         	goto	u1560
  4367  0000DE                     u1561:
  4368  0000DE  EF74  F000         	goto	l2327
  4369  0000E2                     u1560:
  4370  0000E2                     l2325:
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  4374  0000E2  0632               	decf	dtoa@w^0,f,c
  4375  0000E4  A0D8               	btfss	status,0,c
  4376  0000E6  0633               	decf	(dtoa@w+1)^0,f,c
  4377  0000E8                     l2327:
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  4381  0000E8  0E00               	movlw	0
  4382  0000EA  6E3F               	movwf	(dtoa@i+1)^0,c
  4383  0000EC  0E1F               	movlw	31
  4384  0000EE  6E3E               	movwf	dtoa@i^0,c
  4385  0000F0                     
  4386                           ; BSR set to: 0
  4387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  4388  0000F0  0E00               	movlw	0
  4389  0000F2  0101               	movlb	1	; () banked
  4390  0000F4  6F1F               	movwf	(_dbuf+31)& (0+255),b
  4391                           
  4392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4393  0000F6  EFF9  F000         	goto	l2341
  4394  0000FA                     l2331:
  4395                           
  4396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  4397  0000FA  063E               	decf	dtoa@i^0,f,c
  4398  0000FC  A0D8               	btfss	status,0,c
  4399  0000FE  063F               	decf	(dtoa@i+1)^0,f,c
  4400  000100                     
  4401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  4402  000100  0E00               	movlw	low _dbuf
  4403  000102  243E               	addwf	dtoa@i^0,w,c
  4404  000104  6ED9               	movwf	fsr2l,c
  4405  000106  0E01               	movlw	high _dbuf
  4406  000108  203F               	addwfc	(dtoa@i+1)^0,w,c
  4407  00010A  6EDA               	movwf	fsr2h,c
  4408  00010C  C036  F001         	movff	dtoa@n,___aomod@dividend
  4409  000110  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  4410  000114  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  4411  000118  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  4412  00011C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  4413  000120  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  4414  000124  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  4415  000128  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  4416  00012C  0E0A               	movlw	10
  4417  00012E  6E09               	movwf	___aomod@divisor^0,c
  4418  000130  0E00               	movlw	0
  4419  000132  6E0A               	movwf	(___aomod@divisor+1)^0,c
  4420  000134  0E00               	movlw	0
  4421  000136  6E0B               	movwf	(___aomod@divisor+2)^0,c
  4422  000138  0E00               	movlw	0
  4423  00013A  6E0C               	movwf	(___aomod@divisor+3)^0,c
  4424  00013C  0E00               	movlw	0
  4425  00013E  6E0D               	movwf	(___aomod@divisor+4)^0,c
  4426  000140  0E00               	movlw	0
  4427  000142  6E0E               	movwf	(___aomod@divisor+5)^0,c
  4428  000144  0E00               	movlw	0
  4429  000146  6E0F               	movwf	(___aomod@divisor+6)^0,c
  4430  000148  0E00               	movlw	0
  4431  00014A  6E10               	movwf	(___aomod@divisor+7)^0,c
  4432  00014C  EC29  F005         	call	___aomod	;wreg free
  4433  000150  C001  F026         	movff	?___aomod,??_dtoa
  4434  000154  C002  F027         	movff	?___aomod+1,??_dtoa+1
  4435  000158  C003  F028         	movff	?___aomod+2,??_dtoa+2
  4436  00015C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  4437  000160  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  4438  000164  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  4439  000168  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  4440  00016C  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  4441  000170  C026  F013         	movff	??_dtoa,abs@a
  4442  000174  C028  F014         	movff	??_dtoa+2,abs@a+1
  4443  000178  ECA3  F00C         	call	_abs	;wreg free
  4444  00017C  5013               	movf	?_abs^0,w,c
  4445  00017E  0F30               	addlw	48
  4446  000180  6EDF               	movwf	indf2,c
  4447  000182                     
  4448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  4449  000182  0630               	decf	dtoa@p^0,f,c
  4450  000184  A0D8               	btfss	status,0,c
  4451  000186  0631               	decf	(dtoa@p+1)^0,f,c
  4452  000188                     
  4453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  4454  000188  0632               	decf	dtoa@w^0,f,c
  4455  00018A  A0D8               	btfss	status,0,c
  4456  00018C  0633               	decf	(dtoa@w+1)^0,f,c
  4457  00018E                     
  4458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  4459  00018E  C036  F001         	movff	dtoa@n,___aodiv@dividend
  4460  000192  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  4461  000196  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  4462  00019A  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  4463  00019E  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  4464  0001A2  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  4465  0001A6  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  4466  0001AA  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  4467  0001AE  0E0A               	movlw	10
  4468  0001B0  6E09               	movwf	___aodiv@divisor^0,c
  4469  0001B2  0E00               	movlw	0
  4470  0001B4  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  4471  0001B6  0E00               	movlw	0
  4472  0001B8  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  4473  0001BA  0E00               	movlw	0
  4474  0001BC  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  4475  0001BE  0E00               	movlw	0
  4476  0001C0  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  4477  0001C2  0E00               	movlw	0
  4478  0001C4  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  4479  0001C6  0E00               	movlw	0
  4480  0001C8  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  4481  0001CA  0E00               	movlw	0
  4482  0001CC  6E10               	movwf	(___aodiv@divisor+7)^0,c
  4483  0001CE  EC65  F004         	call	___aodiv	;wreg free
  4484  0001D2  C001  F036         	movff	?___aodiv,dtoa@n
  4485  0001D6  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  4486  0001DA  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  4487  0001DE  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  4488  0001E2  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  4489  0001E6  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  4490  0001EA  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  4491  0001EE  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  4492  0001F2                     l2341:
  4493                           
  4494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4495  0001F2  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  4496  0001F4  EF04  F001         	goto	u1571
  4497  0001F8  503F               	movf	(dtoa@i+1)^0,w,c
  4498  0001FA  E108               	bnz	u1570
  4499  0001FC  043E               	decf	dtoa@i^0,w,c
  4500  0001FE  A0D8               	btfss	status,0,c
  4501  000200  EF04  F001         	goto	u1571
  4502  000204  EF06  F001         	goto	u1570
  4503  000208                     u1571:
  4504  000208  EF37  F001         	goto	l2351
  4505  00020C                     u1570:
  4506  00020C  5036               	movf	dtoa@n^0,w,c
  4507  00020E  1037               	iorwf	(dtoa@n+1)^0,w,c
  4508  000210  1038               	iorwf	(dtoa@n+2)^0,w,c
  4509  000212  1039               	iorwf	(dtoa@n+3)^0,w,c
  4510  000214  103A               	iorwf	(dtoa@n+4)^0,w,c
  4511  000216  103B               	iorwf	(dtoa@n+5)^0,w,c
  4512  000218  103C               	iorwf	(dtoa@n+6)^0,w,c
  4513  00021A  103D               	iorwf	(dtoa@n+7)^0,w,c
  4514  00021C  A4D8               	btfss	status,2,c
  4515  00021E  EF13  F001         	goto	u1581
  4516  000222  EF15  F001         	goto	u1580
  4517  000226                     u1581:
  4518  000226  EF7D  F000         	goto	l2331
  4519  00022A                     u1580:
  4520  00022A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  4521  00022C  EF22  F001         	goto	u1590
  4522  000230  5031               	movf	(dtoa@p+1)^0,w,c
  4523  000232  E106               	bnz	u1591
  4524  000234  0430               	decf	dtoa@p^0,w,c
  4525  000236  B0D8               	btfsc	status,0,c
  4526  000238  EF20  F001         	goto	u1591
  4527  00023C  EF22  F001         	goto	u1590
  4528  000240                     u1591:
  4529  000240  EF7D  F000         	goto	l2331
  4530  000244                     u1590:
  4531  000244  BE33               	btfsc	(dtoa@w+1)^0,7,c
  4532  000246  EF2D  F001         	goto	u1601
  4533  00024A  5033               	movf	(dtoa@w+1)^0,w,c
  4534  00024C  E108               	bnz	u1600
  4535  00024E  0432               	decf	dtoa@w^0,w,c
  4536  000250  A0D8               	btfss	status,0,c
  4537  000252  EF2D  F001         	goto	u1601
  4538  000256  EF2F  F001         	goto	u1600
  4539  00025A                     u1601:
  4540  00025A  EF37  F001         	goto	l2351
  4541  00025E                     u1600:
  4542  00025E  0100               	movlb	0	; () banked
  4543  000260  B3BE               	btfsc	_flags& (0+255),1,b
  4544  000262  EF35  F001         	goto	u1611
  4545  000266  EF37  F001         	goto	u1610
  4546  00026A                     u1611:
  4547  00026A  EF7D  F000         	goto	l2331
  4548  00026E                     u1610:
  4549  00026E                     l2351:
  4550                           
  4551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  4552  00026E  5034               	movf	dtoa@s^0,w,c
  4553  000270  1035               	iorwf	(dtoa@s+1)^0,w,c
  4554  000272  A4D8               	btfss	status,2,c
  4555  000274  EF3E  F001         	goto	u1621
  4556  000278  EF40  F001         	goto	u1620
  4557  00027C                     u1621:
  4558  00027C  EF48  F001         	goto	l2355
  4559  000280                     u1620:
  4560  000280  0100               	movlb	0	; () banked
  4561  000282  A5BE               	btfss	_flags& (0+255),2,b
  4562  000284  EF46  F001         	goto	u1631
  4563  000288  EF48  F001         	goto	u1630
  4564  00028C                     u1631:
  4565  00028C  EF66  F001         	goto	l2365
  4566  000290                     u1630:
  4567  000290                     l2355:
  4568                           
  4569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  4570  000290  063E               	decf	dtoa@i^0,f,c
  4571  000292  A0D8               	btfss	status,0,c
  4572  000294  063F               	decf	(dtoa@i+1)^0,f,c
  4573  000296                     
  4574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  4575  000296  5034               	movf	dtoa@s^0,w,c
  4576  000298  1035               	iorwf	(dtoa@s+1)^0,w,c
  4577  00029A  A4D8               	btfss	status,2,c
  4578  00029C  EF52  F001         	goto	u1641
  4579  0002A0  EF54  F001         	goto	u1640
  4580  0002A4                     u1641:
  4581  0002A4  EF5A  F001         	goto	l2361
  4582  0002A8                     u1640:
  4583  0002A8  0E00               	movlw	0
  4584  0002AA  6E2F               	movwf	(_dtoa$851+1)^0,c
  4585  0002AC  0E2B               	movlw	43
  4586  0002AE  6E2E               	movwf	_dtoa$851^0,c
  4587  0002B0  EF5E  F001         	goto	l2363
  4588  0002B4                     l2361:
  4589  0002B4  0E00               	movlw	0
  4590  0002B6  6E2F               	movwf	(_dtoa$851+1)^0,c
  4591  0002B8  0E2D               	movlw	45
  4592  0002BA  6E2E               	movwf	_dtoa$851^0,c
  4593  0002BC                     l2363:
  4594  0002BC  0E00               	movlw	low _dbuf
  4595  0002BE  243E               	addwf	dtoa@i^0,w,c
  4596  0002C0  6ED9               	movwf	fsr2l,c
  4597  0002C2  0E01               	movlw	high _dbuf
  4598  0002C4  203F               	addwfc	(dtoa@i+1)^0,w,c
  4599  0002C6  6EDA               	movwf	fsr2h,c
  4600  0002C8  C02E  FFDF         	movff	_dtoa$851,indf2
  4601  0002CC                     l2365:
  4602                           
  4603                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  4604  0002CC  C01C  F011         	movff	dtoa@fp,pad@fp
  4605  0002D0  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  4606  0002D4  0E00               	movlw	low _dbuf
  4607  0002D6  243E               	addwf	dtoa@i^0,w,c
  4608  0002D8  6E13               	movwf	pad@buf^0,c
  4609  0002DA  0E01               	movlw	high _dbuf
  4610  0002DC  203F               	addwfc	(dtoa@i+1)^0,w,c
  4611  0002DE  6E14               	movwf	(pad@buf+1)^0,c
  4612  0002E0  C032  F015         	movff	dtoa@w,pad@p
  4613  0002E4  C033  F016         	movff	dtoa@w+1,pad@p+1
  4614  0002E8  EC07  F009         	call	_pad	;wreg free
  4615  0002EC  C011  F01C         	movff	?_pad,?_dtoa
  4616  0002F0  C012  F01D         	movff	?_pad+1,?_dtoa+1
  4617  0002F4  0012               	return		;funcret
  4618  0002F6                     __end_of_dtoa:
  4619                           	opt callstack 0
  4620                           
  4621 ;; *************** function _pad *****************
  4622 ;; Defined at:
  4623 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4626 ;;		 -> sprintf@f(6), 
  4627 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4628 ;;		 -> dbuf(32), 
  4629 ;;  p               2   20[COMRAM] int 
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;  w               2   25[COMRAM] int 
  4632 ;;  i               2   23[COMRAM] int 
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  2   16[COMRAM] int 
  4635 ;; Registers used:
  4636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4642 ;;      Params:         6       0       0       0       0       0       0       0       0
  4643 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4644 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4645 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4646 ;;Total ram usage:       11 bytes
  4647 ;; Hardware stack levels used:    1
  4648 ;; Hardware stack levels required when called:    4
  4649 ;; This function calls:
  4650 ;;		_fputc
  4651 ;;		_fputs
  4652 ;;		_strlen
  4653 ;; This function is called by:
  4654 ;;		_dtoa
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           	psect	text21
  4659  00120E                     __ptext21:
  4660                           	opt callstack 0
  4661  00120E                     _pad:
  4662                           	opt callstack 20
  4663  00120E                     
  4664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4665  00120E  0100               	movlb	0	; () banked
  4666  001210  A1BE               	btfss	_flags& (0+255),0,b
  4667  001212  EF0D  F009         	goto	u1301
  4668  001216  EF0F  F009         	goto	u1300
  4669  00121A                     u1301:
  4670  00121A  EF19  F009         	goto	l2199
  4671  00121E                     u1300:
  4672  00121E                     
  4673                           ; BSR set to: 0
  4674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4675  00121E  C013  F00A         	movff	pad@buf,fputs@s
  4676  001222  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4677  001226  C011  F00C         	movff	pad@fp,fputs@fp
  4678  00122A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4679  00122E  EC81  F00C         	call	_fputs	;wreg free
  4680  001232                     l2199:
  4681                           
  4682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4683  001232  BE16               	btfsc	(pad@p+1)^0,7,c
  4684  001234  EF1E  F009         	goto	u1311
  4685  001238  EF20  F009         	goto	u1310
  4686  00123C                     u1311:
  4687  00123C  EF26  F009         	goto	l2203
  4688  001240                     u1310:
  4689  001240  C015  F01A         	movff	pad@p,pad@w
  4690  001244  C016  F01B         	movff	pad@p+1,pad@w+1
  4691  001248  EF2A  F009         	goto	l367
  4692  00124C                     l2203:
  4693  00124C  0E00               	movlw	0
  4694  00124E  6E1B               	movwf	(pad@w+1)^0,c
  4695  001250  0E00               	movlw	0
  4696  001252  6E1A               	movwf	pad@w^0,c
  4697  001254                     l367:
  4698                           
  4699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4700  001254  0E00               	movlw	0
  4701  001256  6E19               	movwf	(pad@i+1)^0,c
  4702  001258  0E00               	movlw	0
  4703  00125A  6E18               	movwf	pad@i^0,c
  4704                           
  4705                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4706  00125C  EF3C  F009         	goto	l2209
  4707  001260                     l2205:
  4708                           
  4709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4710  001260  0E00               	movlw	0
  4711  001262  6E02               	movwf	(fputc@c+1)^0,c
  4712  001264  0E20               	movlw	32
  4713  001266  6E01               	movwf	fputc@c^0,c
  4714  001268  C011  F003         	movff	pad@fp,fputc@fp
  4715  00126C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4716  001270  ECDB  F007         	call	_fputc	;wreg free
  4717  001274                     
  4718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4719  001274  4A18               	infsnz	pad@i^0,f,c
  4720  001276  2A19               	incf	(pad@i+1)^0,f,c
  4721  001278                     l2209:
  4722                           
  4723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4724  001278  501A               	movf	pad@w^0,w,c
  4725  00127A  5C18               	subwf	pad@i^0,w,c
  4726  00127C  5019               	movf	(pad@i+1)^0,w,c
  4727  00127E  0A80               	xorlw	128
  4728  001280  6E17               	movwf	??_pad^0,c
  4729  001282  501B               	movf	(pad@w+1)^0,w,c
  4730  001284  0A80               	xorlw	128
  4731  001286  5817               	subwfb	??_pad^0,w,c
  4732  001288  A0D8               	btfss	status,0,c
  4733  00128A  EF49  F009         	goto	u1321
  4734  00128E  EF4B  F009         	goto	u1320
  4735  001292                     u1321:
  4736  001292  EF30  F009         	goto	l2205
  4737  001296                     u1320:
  4738  001296                     
  4739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4740  001296  0100               	movlb	0	; () banked
  4741  001298  B1BE               	btfsc	_flags& (0+255),0,b
  4742  00129A  EF51  F009         	goto	u1331
  4743  00129E  EF53  F009         	goto	u1330
  4744  0012A2                     u1331:
  4745  0012A2  EF5D  F009         	goto	l2213
  4746  0012A6                     u1330:
  4747  0012A6                     
  4748                           ; BSR set to: 0
  4749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4750  0012A6  C013  F00A         	movff	pad@buf,fputs@s
  4751  0012AA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4752  0012AE  C011  F00C         	movff	pad@fp,fputs@fp
  4753  0012B2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4754  0012B6  EC81  F00C         	call	_fputs	;wreg free
  4755  0012BA                     l2213:
  4756                           
  4757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4758  0012BA  C013  F001         	movff	pad@buf,strlen@s
  4759  0012BE  C014  F002         	movff	pad@buf+1,strlen@s+1
  4760  0012C2  ECFC  F00C         	call	_strlen	;wreg free
  4761  0012C6  501A               	movf	pad@w^0,w,c
  4762  0012C8  2401               	addwf	?_strlen^0,w,c
  4763  0012CA  6E11               	movwf	?_pad^0,c
  4764  0012CC  501B               	movf	(pad@w+1)^0,w,c
  4765  0012CE  2002               	addwfc	(?_strlen+1)^0,w,c
  4766  0012D0  6E12               	movwf	(?_pad+1)^0,c
  4767  0012D2  0012               	return		;funcret
  4768  0012D4                     __end_of_pad:
  4769                           	opt callstack 0
  4770                           
  4771 ;; *************** function _strlen *****************
  4772 ;; Defined at:
  4773 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4776 ;;		 -> dbuf(32), 
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4779 ;;		 -> dbuf(32), 
  4780 ;; Return value:  Size  Location     Type
  4781 ;;                  2    0[COMRAM] unsigned int 
  4782 ;; Registers used:
  4783 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4784 ;; Tracked objects:
  4785 ;;		On entry : 0/0
  4786 ;;		On exit  : 0/0
  4787 ;;		Unchanged: 0/0
  4788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4789 ;;      Params:         2       0       0       0       0       0       0       0       0
  4790 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4791 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4792 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4793 ;;Total ram usage:        4 bytes
  4794 ;; Hardware stack levels used:    1
  4795 ;; Hardware stack levels required when called:    1
  4796 ;; This function calls:
  4797 ;;		Nothing
  4798 ;; This function is called by:
  4799 ;;		_pad
  4800 ;; This function uses a non-reentrant model
  4801 ;;
  4802                           
  4803                           	psect	text22
  4804  0019F8                     __ptext22:
  4805                           	opt callstack 0
  4806  0019F8                     _strlen:
  4807                           	opt callstack 22
  4808  0019F8  C001  F003         	movff	strlen@s,strlen@a
  4809  0019FC  C002  F004         	movff	strlen@s+1,strlen@a+1
  4810  001A00  EF04  F00D         	goto	l2189
  4811  001A04                     l2187:
  4812  001A04  4A01               	infsnz	strlen@s^0,f,c
  4813  001A06  2A02               	incf	(strlen@s+1)^0,f,c
  4814  001A08                     l2189:
  4815  001A08  C001  FFD9         	movff	strlen@s,fsr2l
  4816  001A0C  C002  FFDA         	movff	strlen@s+1,fsr2h
  4817  001A10  50DF               	movf	indf2,w,c
  4818  001A12  A4D8               	btfss	status,2,c
  4819  001A14  EF0E  F00D         	goto	u1291
  4820  001A18  EF10  F00D         	goto	u1290
  4821  001A1C                     u1291:
  4822  001A1C  EF02  F00D         	goto	l2187
  4823  001A20                     u1290:
  4824  001A20  5003               	movf	strlen@a^0,w,c
  4825  001A22  5C01               	subwf	strlen@s^0,w,c
  4826  001A24  6E01               	movwf	?_strlen^0,c
  4827  001A26  5004               	movf	(strlen@a+1)^0,w,c
  4828  001A28  5802               	subwfb	(strlen@s+1)^0,w,c
  4829  001A2A  6E02               	movwf	(?_strlen+1)^0,c
  4830  001A2C  0012               	return		;funcret
  4831  001A2E                     __end_of_strlen:
  4832                           	opt callstack 0
  4833                           
  4834 ;; *************** function _fputs *****************
  4835 ;; Defined at:
  4836 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4839 ;;		 -> dbuf(32), 
  4840 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4841 ;;		 -> sprintf@f(6), 
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;  i               2   14[COMRAM] int 
  4844 ;;  c               1   13[COMRAM] unsigned char 
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  2    9[COMRAM] int 
  4847 ;; Registers used:
  4848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4854 ;;      Params:         4       0       0       0       0       0       0       0       0
  4855 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4856 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4857 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4858 ;;Total ram usage:        7 bytes
  4859 ;; Hardware stack levels used:    1
  4860 ;; Hardware stack levels required when called:    3
  4861 ;; This function calls:
  4862 ;;		_fputc
  4863 ;; This function is called by:
  4864 ;;		_pad
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           	psect	text23
  4869  001902                     __ptext23:
  4870                           	opt callstack 0
  4871  001902                     _fputs:
  4872                           	opt callstack 20
  4873  001902  0E00               	movlw	0
  4874  001904  6E10               	movwf	(fputs@i+1)^0,c
  4875  001906  0E00               	movlw	0
  4876  001908  6E0F               	movwf	fputs@i^0,c
  4877  00190A  EF92  F00C         	goto	l2183
  4878  00190E                     l2179:
  4879  00190E  C00E  F001         	movff	fputs@c,fputc@c
  4880  001912  6A02               	clrf	(fputc@c+1)^0,c
  4881  001914  C00C  F003         	movff	fputs@fp,fputc@fp
  4882  001918  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4883  00191C  ECDB  F007         	call	_fputc	;wreg free
  4884  001920  4A0F               	infsnz	fputs@i^0,f,c
  4885  001922  2A10               	incf	(fputs@i+1)^0,f,c
  4886  001924                     l2183:
  4887  001924  500F               	movf	fputs@i^0,w,c
  4888  001926  240A               	addwf	fputs@s^0,w,c
  4889  001928  6ED9               	movwf	fsr2l,c
  4890  00192A  5010               	movf	(fputs@i+1)^0,w,c
  4891  00192C  200B               	addwfc	(fputs@s+1)^0,w,c
  4892  00192E  6EDA               	movwf	fsr2h,c
  4893  001930  50DF               	movf	indf2,w,c
  4894  001932  6E0E               	movwf	fputs@c^0,c
  4895  001934  500E               	movf	fputs@c^0,w,c
  4896  001936  A4D8               	btfss	status,2,c
  4897  001938  EFA0  F00C         	goto	u1281
  4898  00193C  EFA2  F00C         	goto	u1280
  4899  001940                     u1281:
  4900  001940  EF87  F00C         	goto	l2179
  4901  001944                     u1280:
  4902  001944  0012               	return		;funcret
  4903  001946                     __end_of_fputs:
  4904                           	opt callstack 0
  4905                           
  4906 ;; *************** function _fputc *****************
  4907 ;; Defined at:
  4908 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;  c               2    0[COMRAM] int 
  4911 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4912 ;;		 -> sprintf@f(6), 
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;		None
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  2    0[COMRAM] int 
  4917 ;; Registers used:
  4918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4924 ;;      Params:         4       0       0       0       0       0       0       0       0
  4925 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4926 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4927 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4928 ;;Total ram usage:        9 bytes
  4929 ;; Hardware stack levels used:    1
  4930 ;; Hardware stack levels required when called:    2
  4931 ;; This function calls:
  4932 ;;		_putch
  4933 ;; This function is called by:
  4934 ;;		_pad
  4935 ;;		_vfpfcnvrt
  4936 ;;		_fputs
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           	psect	text24
  4941  000FB6                     __ptext24:
  4942                           	opt callstack 0
  4943  000FB6                     _fputc:
  4944                           	opt callstack 23
  4945  000FB6  5003               	movf	fputc@fp^0,w,c
  4946  000FB8  1004               	iorwf	(fputc@fp+1)^0,w,c
  4947  000FBA  B4D8               	btfsc	status,2,c
  4948  000FBC  EFE2  F007         	goto	u1241
  4949  000FC0  EFE4  F007         	goto	u1240
  4950  000FC4                     u1241:
  4951  000FC4  EFED  F007         	goto	l2167
  4952  000FC8                     u1240:
  4953  000FC8  5003               	movf	fputc@fp^0,w,c
  4954  000FCA  1004               	iorwf	(fputc@fp+1)^0,w,c
  4955  000FCC  A4D8               	btfss	status,2,c
  4956  000FCE  EFEB  F007         	goto	u1251
  4957  000FD2  EFED  F007         	goto	u1250
  4958  000FD6                     u1251:
  4959  000FD6  EFF2  F007         	goto	l2169
  4960  000FDA                     u1250:
  4961  000FDA                     l2167:
  4962  000FDA  5001               	movf	fputc@c^0,w,c
  4963  000FDC  EC0B  F00E         	call	_putch
  4964  000FE0  EF3F  F008         	goto	l1105
  4965  000FE4                     l2169:
  4966  000FE4  EE20 F004          	lfsr	2,4
  4967  000FE8  5003               	movf	fputc@fp^0,w,c
  4968  000FEA  26D9               	addwf	fsr2l,f,c
  4969  000FEC  5004               	movf	(fputc@fp+1)^0,w,c
  4970  000FEE  22DA               	addwfc	fsr2h,f,c
  4971  000FF0  50DE               	movf	postinc2,w,c
  4972  000FF2  10DE               	iorwf	postinc2,w,c
  4973  000FF4  B4D8               	btfsc	status,2,c
  4974  000FF6  EFFF  F007         	goto	u1261
  4975  000FFA  EF01  F008         	goto	u1260
  4976  000FFE                     u1261:
  4977  000FFE  EF1C  F008         	goto	l2173
  4978  001002                     u1260:
  4979  001002  EE20 F004          	lfsr	2,4
  4980  001006  5003               	movf	fputc@fp^0,w,c
  4981  001008  26D9               	addwf	fsr2l,f,c
  4982  00100A  5004               	movf	(fputc@fp+1)^0,w,c
  4983  00100C  22DA               	addwfc	fsr2h,f,c
  4984  00100E  EE10 F002          	lfsr	1,2
  4985  001012  5003               	movf	fputc@fp^0,w,c
  4986  001014  26E1               	addwf	fsr1l,f,c
  4987  001016  5004               	movf	(fputc@fp+1)^0,w,c
  4988  001018  22E2               	addwfc	fsr1h,f,c
  4989  00101A  50DE               	movf	postinc2,w,c
  4990  00101C  5CE6               	subwf	postinc1,w,c
  4991  00101E  50E6               	movf	postinc1,w,c
  4992  001020  0A80               	xorlw	128
  4993  001022  6E09               	movwf	(??_fputc+4)^0,c
  4994  001024  50DE               	movf	postinc2,w,c
  4995  001026  0A80               	xorlw	128
  4996  001028  5809               	subwfb	(??_fputc+4)^0,w,c
  4997  00102A  B0D8               	btfsc	status,0,c
  4998  00102C  EF1A  F008         	goto	u1271
  4999  001030  EF1C  F008         	goto	u1270
  5000  001034                     u1271:
  5001  001034  EF3F  F008         	goto	l1105
  5002  001038                     u1270:
  5003  001038                     l2173:
  5004  001038  EE20 F002          	lfsr	2,2
  5005  00103C  5003               	movf	fputc@fp^0,w,c
  5006  00103E  26D9               	addwf	fsr2l,f,c
  5007  001040  5004               	movf	(fputc@fp+1)^0,w,c
  5008  001042  22DA               	addwfc	fsr2h,f,c
  5009  001044  CFDE F005          	movff	postinc2,??_fputc
  5010  001048  CFDD F006          	movff	postdec2,??_fputc+1
  5011  00104C  C003  FFD9         	movff	fputc@fp,fsr2l
  5012  001050  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5013  001054  CFDE F007          	movff	postinc2,??_fputc+2
  5014  001058  CFDD F008          	movff	postdec2,??_fputc+3
  5015  00105C  5005               	movf	??_fputc^0,w,c
  5016  00105E  2407               	addwf	(??_fputc+2)^0,w,c
  5017  001060  6ED9               	movwf	fsr2l,c
  5018  001062  5006               	movf	(??_fputc+1)^0,w,c
  5019  001064  2008               	addwfc	(??_fputc+3)^0,w,c
  5020  001066  6EDA               	movwf	fsr2h,c
  5021  001068  C001  FFDF         	movff	fputc@c,indf2
  5022  00106C  EE20 F002          	lfsr	2,2
  5023  001070  5003               	movf	fputc@fp^0,w,c
  5024  001072  26D9               	addwf	fsr2l,f,c
  5025  001074  5004               	movf	(fputc@fp+1)^0,w,c
  5026  001076  22DA               	addwfc	fsr2h,f,c
  5027  001078  2ADE               	incf	postinc2,f,c
  5028  00107A  0E00               	movlw	0
  5029  00107C  22DD               	addwfc	postdec2,f,c
  5030  00107E                     l1105:
  5031  00107E  0012               	return		;funcret
  5032  001080                     __end_of_fputc:
  5033                           	opt callstack 0
  5034                           
  5035 ;; *************** function _putch *****************
  5036 ;; Defined at:
  5037 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;  c               1    wreg     unsigned char 
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;  c               1    0[COMRAM] unsigned char 
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  1    wreg      void 
  5044 ;; Registers used:
  5045 ;;		wreg
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5051 ;;      Params:         0       0       0       0       0       0       0       0       0
  5052 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5053 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5054 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5055 ;;Total ram usage:        0 bytes
  5056 ;; Hardware stack levels used:    1
  5057 ;; Hardware stack levels required when called:    1
  5058 ;; This function calls:
  5059 ;;		Nothing
  5060 ;; This function is called by:
  5061 ;;		_fputc
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065                           	psect	text25
  5066  001C16                     __ptext25:
  5067                           	opt callstack 0
  5068  001C16                     _putch:
  5069                           	opt callstack 23
  5070  001C16  0012               	return		;funcret
  5071  001C18                     __end_of_putch:
  5072                           	opt callstack 0
  5073                           
  5074 ;; *************** function _abs *****************
  5075 ;; Defined at:
  5076 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;  a               2   18[COMRAM] int 
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;		None
  5081 ;; Return value:  Size  Location     Type
  5082 ;;                  2   18[COMRAM] int 
  5083 ;; Registers used:
  5084 ;;		wreg, status,2, status,0
  5085 ;; Tracked objects:
  5086 ;;		On entry : 0/0
  5087 ;;		On exit  : 0/0
  5088 ;;		Unchanged: 0/0
  5089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5090 ;;      Params:         2       0       0       0       0       0       0       0       0
  5091 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5092 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5093 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5094 ;;Total ram usage:        4 bytes
  5095 ;; Hardware stack levels used:    1
  5096 ;; Hardware stack levels required when called:    1
  5097 ;; This function calls:
  5098 ;;		Nothing
  5099 ;; This function is called by:
  5100 ;;		_dtoa
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104                           	psect	text26
  5105  001946                     __ptext26:
  5106                           	opt callstack 0
  5107  001946                     _abs:
  5108                           	opt callstack 23
  5109  001946  BE14               	btfsc	(abs@a+1)^0,7,c
  5110  001948  EFB0  F00C         	goto	u1340
  5111  00194C  5014               	movf	(abs@a+1)^0,w,c
  5112  00194E  E106               	bnz	u1341
  5113  001950  0413               	decf	abs@a^0,w,c
  5114  001952  B0D8               	btfsc	status,0,c
  5115  001954  EFAE  F00C         	goto	u1341
  5116  001958  EFB0  F00C         	goto	u1340
  5117  00195C                     u1341:
  5118  00195C  EFBE  F00C         	goto	l1090
  5119  001960                     u1340:
  5120  001960  C013  F015         	movff	abs@a,??_abs
  5121  001964  C014  F016         	movff	abs@a+1,??_abs+1
  5122  001968  1E15               	comf	??_abs^0,f,c
  5123  00196A  1E16               	comf	(??_abs+1)^0,f,c
  5124  00196C  4A15               	infsnz	??_abs^0,f,c
  5125  00196E  2A16               	incf	(??_abs+1)^0,f,c
  5126  001970  C015  F013         	movff	??_abs,?_abs
  5127  001974  C016  F014         	movff	??_abs+1,?_abs+1
  5128  001978  EFC2  F00C         	goto	l1093
  5129  00197C                     l1090:
  5130  00197C  C013  F013         	movff	abs@a,?_abs
  5131  001980  C014  F014         	movff	abs@a+1,?_abs+1
  5132  001984                     l1093:
  5133  001984  0012               	return		;funcret
  5134  001986                     __end_of_abs:
  5135                           	opt callstack 0
  5136                           
  5137 ;; *************** function ___aomod *****************
  5138 ;; Defined at:
  5139 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  5140 ;; Parameters:    Size  Location     Type
  5141 ;;  dividend        8    0[COMRAM] long long 
  5142 ;;  divisor         8    8[COMRAM] long long 
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;  sign            1   17[COMRAM] unsigned char 
  5145 ;;  counter         1   16[COMRAM] unsigned char 
  5146 ;; Return value:  Size  Location     Type
  5147 ;;                  8    0[COMRAM] long long 
  5148 ;; Registers used:
  5149 ;;		wreg, status,2, status,0
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5155 ;;      Params:        16       0       0       0       0       0       0       0       0
  5156 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5157 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5158 ;;      Totals:        18       0       0       0       0       0       0       0       0
  5159 ;;Total ram usage:       18 bytes
  5160 ;; Hardware stack levels used:    1
  5161 ;; Hardware stack levels required when called:    1
  5162 ;; This function calls:
  5163 ;;		Nothing
  5164 ;; This function is called by:
  5165 ;;		_dtoa
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169                           	psect	text27
  5170  000A52                     __ptext27:
  5171                           	opt callstack 0
  5172  000A52                     ___aomod:
  5173                           	opt callstack 23
  5174  000A52  0E00               	movlw	0
  5175  000A54  6E12               	movwf	___aomod@sign^0,c
  5176  000A56  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5177  000A58  EF32  F005         	goto	u1420
  5178  000A5C  EF30  F005         	goto	u1421
  5179  000A60                     u1421:
  5180  000A60  EF44  F005         	goto	l2273
  5181  000A64                     u1420:
  5182  000A64  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5183  000A66  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5184  000A68  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5185  000A6A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5186  000A6C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5187  000A6E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5188  000A70  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5189  000A72  6C01               	negf	___aomod@dividend^0,c
  5190  000A74  0E00               	movlw	0
  5191  000A76  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5192  000A78  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5193  000A7A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5194  000A7C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5195  000A7E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5196  000A80  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5197  000A82  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5198  000A84  0E01               	movlw	1
  5199  000A86  6E12               	movwf	___aomod@sign^0,c
  5200  000A88                     l2273:
  5201  000A88  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5202  000A8A  EF4B  F005         	goto	u1430
  5203  000A8E  EF49  F005         	goto	u1431
  5204  000A92                     u1431:
  5205  000A92  EF5B  F005         	goto	l2277
  5206  000A96                     u1430:
  5207  000A96  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5208  000A98  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5209  000A9A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5210  000A9C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5211  000A9E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5212  000AA0  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5213  000AA2  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5214  000AA4  6C09               	negf	___aomod@divisor^0,c
  5215  000AA6  0E00               	movlw	0
  5216  000AA8  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5217  000AAA  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5218  000AAC  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5219  000AAE  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5220  000AB0  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5221  000AB2  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5222  000AB4  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5223  000AB6                     l2277:
  5224  000AB6  5009               	movf	___aomod@divisor^0,w,c
  5225  000AB8  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5226  000ABA  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5227  000ABC  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5228  000ABE  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5229  000AC0  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5230  000AC2  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5231  000AC4  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5232  000AC6  B4D8               	btfsc	status,2,c
  5233  000AC8  EF68  F005         	goto	u1441
  5234  000ACC  EF6A  F005         	goto	u1440
  5235  000AD0                     u1441:
  5236  000AD0  EFB2  F005         	goto	l2293
  5237  000AD4                     u1440:
  5238  000AD4  0E01               	movlw	1
  5239  000AD6  6E11               	movwf	___aomod@counter^0,c
  5240  000AD8  EF78  F005         	goto	l2283
  5241  000ADC                     l2281:
  5242  000ADC  90D8               	bcf	status,0,c
  5243  000ADE  3609               	rlcf	___aomod@divisor^0,f,c
  5244  000AE0  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5245  000AE2  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5246  000AE4  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5247  000AE6  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5248  000AE8  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5249  000AEA  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5250  000AEC  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5251  000AEE  2A11               	incf	___aomod@counter^0,f,c
  5252  000AF0                     l2283:
  5253  000AF0  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5254  000AF2  EF7D  F005         	goto	u1451
  5255  000AF6  EF7F  F005         	goto	u1450
  5256  000AFA                     u1451:
  5257  000AFA  EF6E  F005         	goto	l2281
  5258  000AFE                     u1450:
  5259  000AFE                     l2285:
  5260  000AFE  5009               	movf	___aomod@divisor^0,w,c
  5261  000B00  5C01               	subwf	___aomod@dividend^0,w,c
  5262  000B02  500A               	movf	(___aomod@divisor+1)^0,w,c
  5263  000B04  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5264  000B06  500B               	movf	(___aomod@divisor+2)^0,w,c
  5265  000B08  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5266  000B0A  500C               	movf	(___aomod@divisor+3)^0,w,c
  5267  000B0C  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5268  000B0E  500D               	movf	(___aomod@divisor+4)^0,w,c
  5269  000B10  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5270  000B12  500E               	movf	(___aomod@divisor+5)^0,w,c
  5271  000B14  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5272  000B16  500F               	movf	(___aomod@divisor+6)^0,w,c
  5273  000B18  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5274  000B1A  5010               	movf	(___aomod@divisor+7)^0,w,c
  5275  000B1C  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5276  000B1E  A0D8               	btfss	status,0,c
  5277  000B20  EF94  F005         	goto	u1461
  5278  000B24  EF96  F005         	goto	u1460
  5279  000B28                     u1461:
  5280  000B28  EFA6  F005         	goto	l2289
  5281  000B2C                     u1460:
  5282  000B2C  5009               	movf	___aomod@divisor^0,w,c
  5283  000B2E  5E01               	subwf	___aomod@dividend^0,f,c
  5284  000B30  500A               	movf	(___aomod@divisor+1)^0,w,c
  5285  000B32  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5286  000B34  500B               	movf	(___aomod@divisor+2)^0,w,c
  5287  000B36  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5288  000B38  500C               	movf	(___aomod@divisor+3)^0,w,c
  5289  000B3A  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5290  000B3C  500D               	movf	(___aomod@divisor+4)^0,w,c
  5291  000B3E  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5292  000B40  500E               	movf	(___aomod@divisor+5)^0,w,c
  5293  000B42  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5294  000B44  500F               	movf	(___aomod@divisor+6)^0,w,c
  5295  000B46  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5296  000B48  5010               	movf	(___aomod@divisor+7)^0,w,c
  5297  000B4A  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5298  000B4C                     l2289:
  5299  000B4C  90D8               	bcf	status,0,c
  5300  000B4E  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5301  000B50  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5302  000B52  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5303  000B54  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5304  000B56  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5305  000B58  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5306  000B5A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5307  000B5C  3209               	rrcf	___aomod@divisor^0,f,c
  5308  000B5E  2E11               	decfsz	___aomod@counter^0,f,c
  5309  000B60  EF7F  F005         	goto	l2285
  5310  000B64                     l2293:
  5311  000B64  5012               	movf	___aomod@sign^0,w,c
  5312  000B66  B4D8               	btfsc	status,2,c
  5313  000B68  EFB8  F005         	goto	u1471
  5314  000B6C  EFBA  F005         	goto	u1470
  5315  000B70                     u1471:
  5316  000B70  EFCA  F005         	goto	l2297
  5317  000B74                     u1470:
  5318  000B74  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5319  000B76  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5320  000B78  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5321  000B7A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5322  000B7C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5323  000B7E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5324  000B80  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5325  000B82  6C01               	negf	___aomod@dividend^0,c
  5326  000B84  0E00               	movlw	0
  5327  000B86  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5328  000B88  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5329  000B8A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5330  000B8C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5331  000B8E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5332  000B90  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5333  000B92  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5334  000B94                     l2297:
  5335  000B94  C001  F001         	movff	___aomod@dividend,?___aomod
  5336  000B98  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5337  000B9C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5338  000BA0  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5339  000BA4  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  5340  000BA8  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  5341  000BAC  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  5342  000BB0  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5343  000BB4  0012               	return		;funcret
  5344  000BB6                     __end_of___aomod:
  5345                           	opt callstack 0
  5346                           
  5347 ;; *************** function ___aodiv *****************
  5348 ;; Defined at:
  5349 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  dividend        8    0[COMRAM] long long 
  5352 ;;  divisor         8    8[COMRAM] long long 
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;  quotient        8   18[COMRAM] long long 
  5355 ;;  sign            1   17[COMRAM] unsigned char 
  5356 ;;  counter         1   16[COMRAM] unsigned char 
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  8    0[COMRAM] long long 
  5359 ;; Registers used:
  5360 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5366 ;;      Params:        16       0       0       0       0       0       0       0       0
  5367 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5368 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5369 ;;      Totals:        26       0       0       0       0       0       0       0       0
  5370 ;;Total ram usage:       26 bytes
  5371 ;; Hardware stack levels used:    1
  5372 ;; Hardware stack levels required when called:    1
  5373 ;; This function calls:
  5374 ;;		Nothing
  5375 ;; This function is called by:
  5376 ;;		_dtoa
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           	psect	text28
  5381  0008CA                     __ptext28:
  5382                           	opt callstack 0
  5383  0008CA                     ___aodiv:
  5384                           	opt callstack 23
  5385  0008CA  0E00               	movlw	0
  5386  0008CC  6E12               	movwf	___aodiv@sign^0,c
  5387  0008CE  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  5388  0008D0  EF6E  F004         	goto	u1350
  5389  0008D4  EF6C  F004         	goto	u1351
  5390  0008D8                     u1351:
  5391  0008D8  EF80  F004         	goto	l2229
  5392  0008DC                     u1350:
  5393  0008DC  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  5394  0008DE  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  5395  0008E0  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  5396  0008E2  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  5397  0008E4  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  5398  0008E6  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  5399  0008E8  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  5400  0008EA  6C09               	negf	___aodiv@divisor^0,c
  5401  0008EC  0E00               	movlw	0
  5402  0008EE  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  5403  0008F0  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  5404  0008F2  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  5405  0008F4  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  5406  0008F6  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  5407  0008F8  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  5408  0008FA  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  5409  0008FC  0E01               	movlw	1
  5410  0008FE  6E12               	movwf	___aodiv@sign^0,c
  5411  000900                     l2229:
  5412  000900  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  5413  000902  EF87  F004         	goto	u1360
  5414  000906  EF85  F004         	goto	u1361
  5415  00090A                     u1361:
  5416  00090A  EF99  F004         	goto	l2235
  5417  00090E                     u1360:
  5418  00090E  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  5419  000910  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  5420  000912  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  5421  000914  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  5422  000916  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  5423  000918  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  5424  00091A  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  5425  00091C  6C01               	negf	___aodiv@dividend^0,c
  5426  00091E  0E00               	movlw	0
  5427  000920  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  5428  000922  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  5429  000924  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  5430  000926  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  5431  000928  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  5432  00092A  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  5433  00092C  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  5434  00092E  0E01               	movlw	1
  5435  000930  1A12               	xorwf	___aodiv@sign^0,f,c
  5436  000932                     l2235:
  5437  000932  EE20  F013         	lfsr	2,___aodiv@quotient
  5438  000936  0E07               	movlw	7
  5439  000938                     u1371:
  5440  000938  6ADE               	clrf	postinc2,c
  5441  00093A  06E8               	decf	wreg,f,c
  5442  00093C  E2FD               	bc	u1371
  5443  00093E  5009               	movf	___aodiv@divisor^0,w,c
  5444  000940  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  5445  000942  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  5446  000944  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  5447  000946  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  5448  000948  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  5449  00094A  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  5450  00094C  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  5451  00094E  B4D8               	btfsc	status,2,c
  5452  000950  EFAC  F004         	goto	u1381
  5453  000954  EFAE  F004         	goto	u1380
  5454  000958                     u1381:
  5455  000958  EF00  F005         	goto	l2257
  5456  00095C                     u1380:
  5457  00095C  0E01               	movlw	1
  5458  00095E  6E11               	movwf	___aodiv@counter^0,c
  5459  000960  EFBC  F004         	goto	l2243
  5460  000964                     l2241:
  5461  000964  90D8               	bcf	status,0,c
  5462  000966  3609               	rlcf	___aodiv@divisor^0,f,c
  5463  000968  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  5464  00096A  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  5465  00096C  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  5466  00096E  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  5467  000970  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  5468  000972  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  5469  000974  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  5470  000976  2A11               	incf	___aodiv@counter^0,f,c
  5471  000978                     l2243:
  5472  000978  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  5473  00097A  EFC1  F004         	goto	u1391
  5474  00097E  EFC3  F004         	goto	u1390
  5475  000982                     u1391:
  5476  000982  EFB2  F004         	goto	l2241
  5477  000986                     u1390:
  5478  000986                     l2245:
  5479  000986  90D8               	bcf	status,0,c
  5480  000988  3613               	rlcf	___aodiv@quotient^0,f,c
  5481  00098A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  5482  00098C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  5483  00098E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  5484  000990  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  5485  000992  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  5486  000994  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  5487  000996  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  5488  000998  5009               	movf	___aodiv@divisor^0,w,c
  5489  00099A  5C01               	subwf	___aodiv@dividend^0,w,c
  5490  00099C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5491  00099E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  5492  0009A0  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5493  0009A2  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  5494  0009A4  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5495  0009A6  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  5496  0009A8  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5497  0009AA  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  5498  0009AC  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5499  0009AE  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  5500  0009B0  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5501  0009B2  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  5502  0009B4  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5503  0009B6  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  5504  0009B8  A0D8               	btfss	status,0,c
  5505  0009BA  EFE1  F004         	goto	u1401
  5506  0009BE  EFE3  F004         	goto	u1400
  5507  0009C2                     u1401:
  5508  0009C2  EFF4  F004         	goto	l2253
  5509  0009C6                     u1400:
  5510  0009C6  5009               	movf	___aodiv@divisor^0,w,c
  5511  0009C8  5E01               	subwf	___aodiv@dividend^0,f,c
  5512  0009CA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5513  0009CC  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  5514  0009CE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5515  0009D0  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  5516  0009D2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5517  0009D4  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  5518  0009D6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5519  0009D8  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  5520  0009DA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5521  0009DC  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  5522  0009DE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5523  0009E0  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  5524  0009E2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5525  0009E4  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  5526  0009E6  8013               	bsf	___aodiv@quotient^0,0,c
  5527  0009E8                     l2253:
  5528  0009E8  90D8               	bcf	status,0,c
  5529  0009EA  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  5530  0009EC  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  5531  0009EE  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  5532  0009F0  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  5533  0009F2  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  5534  0009F4  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  5535  0009F6  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  5536  0009F8  3209               	rrcf	___aodiv@divisor^0,f,c
  5537  0009FA  2E11               	decfsz	___aodiv@counter^0,f,c
  5538  0009FC  EFC3  F004         	goto	l2245
  5539  000A00                     l2257:
  5540  000A00  5012               	movf	___aodiv@sign^0,w,c
  5541  000A02  B4D8               	btfsc	status,2,c
  5542  000A04  EF06  F005         	goto	u1411
  5543  000A08  EF08  F005         	goto	u1410
  5544  000A0C                     u1411:
  5545  000A0C  EF18  F005         	goto	l2261
  5546  000A10                     u1410:
  5547  000A10  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  5548  000A12  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  5549  000A14  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  5550  000A16  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  5551  000A18  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  5552  000A1A  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  5553  000A1C  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  5554  000A1E  6C13               	negf	___aodiv@quotient^0,c
  5555  000A20  0E00               	movlw	0
  5556  000A22  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  5557  000A24  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  5558  000A26  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  5559  000A28  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  5560  000A2A  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  5561  000A2C  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  5562  000A2E  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  5563  000A30                     l2261:
  5564  000A30  C013  F001         	movff	___aodiv@quotient,?___aodiv
  5565  000A34  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  5566  000A38  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  5567  000A3C  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  5568  000A40  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  5569  000A44  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  5570  000A48  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  5571  000A4C  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  5572  000A50  0012               	return		;funcret
  5573  000A52                     __end_of___aodiv:
  5574                           	opt callstack 0
  5575                           
  5576 ;; *************** function _asignarHorarios *****************
  5577 ;; Defined at:
  5578 ;;		line 330 in file "main.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;		None
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;  i               2   16[COMRAM] int 
  5583 ;;  Rx              1   18[COMRAM] unsigned char 
  5584 ;;  datoCapturad    1   15[COMRAM] unsigned char 
  5585 ;;  hora            1   14[COMRAM] unsigned char 
  5586 ;; Return value:  Size  Location     Type
  5587 ;;                  1    wreg      void 
  5588 ;; Registers used:
  5589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5590 ;; Tracked objects:
  5591 ;;		On entry : 0/0
  5592 ;;		On exit  : 0/0
  5593 ;;		Unchanged: 0/0
  5594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5595 ;;      Params:         0       0       0       0       0       0       0       0       0
  5596 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5597 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5598 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5599 ;;Total ram usage:        5 bytes
  5600 ;; Hardware stack levels used:    1
  5601 ;; Hardware stack levels required when called:    5
  5602 ;; This function calls:
  5603 ;;		_UART_printf
  5604 ;;		_UART_read
  5605 ;;		_UART_write
  5606 ;;		_escribeHorariosMemoria
  5607 ;; This function is called by:
  5608 ;;		_sistemaPrincipal
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           	psect	text29
  5613  000BB6                     __ptext29:
  5614                           	opt callstack 0
  5615  000BB6                     _asignarHorarios:
  5616                           	opt callstack 24
  5617  000BB6                     
  5618                           ;main.c: 332:     unsigned char hora;;main.c: 333:     unsigned char Rx;;main.c: 334:   
      +                            char datoCapturado = 0;
  5619  000BB6  0E00               	movlw	0
  5620  000BB8  6E10               	movwf	asignarHorarios@datoCapturado^0,c
  5621  000BBA                     
  5622                           ;main.c: 336:     UART_printf("\r\n OPCIONES DE REGADO \r\n");
  5623  000BBA  0EA1               	movlw	low STR_5
  5624  000BBC  6E02               	movwf	UART_printf@cadena^0,c
  5625  000BBE  0E7F               	movlw	high STR_5
  5626  000BC0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5627  000BC2  EC5E  F00B         	call	_UART_printf	;wreg free
  5628  000BC6                     
  5629                           ;main.c: 337:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  5630  000BC6  0E4C               	movlw	low STR_6
  5631  000BC8  6E02               	movwf	UART_printf@cadena^0,c
  5632  000BCA  0E7D               	movlw	high STR_6
  5633  000BCC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5634  000BCE  EC5E  F00B         	call	_UART_printf	;wreg free
  5635                           
  5636                           ;main.c: 339:     for (int i = 0; i < 2; i++) {
  5637  000BD2  0E00               	movlw	0
  5638  000BD4  6E12               	movwf	(asignarHorarios@i+1)^0,c
  5639  000BD6  0E00               	movlw	0
  5640  000BD8  6E11               	movwf	asignarHorarios@i^0,c
  5641  000BDA                     l2703:
  5642                           
  5643                           ;main.c: 340:         Rx = UART_read();
  5644  000BDA  ECE2  F00B         	call	_UART_read	;wreg free
  5645  000BDE  6E13               	movwf	asignarHorarios@Rx^0,c
  5646  000BE0                     
  5647                           ;main.c: 341:         if (Rx >= 48 && Rx <= 57) {
  5648  000BE0  0E2F               	movlw	47
  5649  000BE2  6413               	cpfsgt	asignarHorarios@Rx^0,c
  5650  000BE4  EFF6  F005         	goto	u2011
  5651  000BE8  EFF8  F005         	goto	u2010
  5652  000BEC                     u2011:
  5653  000BEC  EF1B  F006         	goto	l2723
  5654  000BF0                     u2010:
  5655  000BF0  0E3A               	movlw	58
  5656  000BF2  6013               	cpfslt	asignarHorarios@Rx^0,c
  5657  000BF4  EFFE  F005         	goto	u2021
  5658  000BF8  EF00  F006         	goto	u2020
  5659  000BFC                     u2021:
  5660  000BFC  EF1B  F006         	goto	l2723
  5661  000C00                     u2020:
  5662  000C00                     
  5663                           ;main.c: 342:             if (!i) {
  5664  000C00  5011               	movf	asignarHorarios@i^0,w,c
  5665  000C02  1012               	iorwf	(asignarHorarios@i+1)^0,w,c
  5666  000C04  A4D8               	btfss	status,2,c
  5667  000C06  EF07  F006         	goto	u2031
  5668  000C0A  EF09  F006         	goto	u2030
  5669  000C0E                     u2031:
  5670  000C0E  EF13  F006         	goto	l2717
  5671  000C12                     u2030:
  5672  000C12                     
  5673                           ;main.c: 343:                 Rx -= 48;
  5674  000C12  0E30               	movlw	48
  5675  000C14  5E13               	subwf	asignarHorarios@Rx^0,f,c
  5676  000C16                     
  5677                           ;main.c: 344:                 hora = Rx;
  5678  000C16  C013  F00F         	movff	asignarHorarios@Rx,asignarHorarios@hora
  5679  000C1A                     
  5680                           ;main.c: 345:                 hora *= 10;
  5681  000C1A  0E0A               	movlw	10
  5682  000C1C  020F               	mulwf	asignarHorarios@hora^0,c
  5683  000C1E  50F3               	movf	prodl,w,c
  5684  000C20  6E0F               	movwf	asignarHorarios@hora^0,c
  5685                           
  5686                           ;main.c: 346:             } else {
  5687  000C22  EF22  F006         	goto	l2727
  5688  000C26                     l2717:
  5689                           
  5690                           ;main.c: 347:                 datoCapturado = 1;
  5691  000C26  0E01               	movlw	1
  5692  000C28  6E10               	movwf	asignarHorarios@datoCapturado^0,c
  5693  000C2A                     
  5694                           ;main.c: 348:                 Rx -= 48;
  5695  000C2A  0E30               	movlw	48
  5696  000C2C  5E13               	subwf	asignarHorarios@Rx^0,f,c
  5697  000C2E                     
  5698                           ;main.c: 349:                 hora += Rx;
  5699  000C2E  5013               	movf	asignarHorarios@Rx^0,w,c
  5700  000C30  260F               	addwf	asignarHorarios@hora^0,f,c
  5701  000C32  EF22  F006         	goto	l2727
  5702  000C36                     l2723:
  5703                           
  5704                           ;main.c: 352:             datoCapturado = 0;
  5705  000C36  0E00               	movlw	0
  5706  000C38  6E10               	movwf	asignarHorarios@datoCapturado^0,c
  5707  000C3A                     
  5708                           ;main.c: 354:             UART_write('F');
  5709  000C3A  0E46               	movlw	70
  5710  000C3C  ECDC  F00D         	call	_UART_write
  5711                           
  5712                           ;main.c: 355:             break;
  5713  000C40  EF32  F006         	goto	l2731
  5714  000C44                     l2727:
  5715                           
  5716                           ;main.c: 357:     }
  5717  000C44  4A11               	infsnz	asignarHorarios@i^0,f,c
  5718  000C46  2A12               	incf	(asignarHorarios@i+1)^0,f,c
  5719  000C48  BE12               	btfsc	(asignarHorarios@i+1)^0,7,c
  5720  000C4A  EF30  F006         	goto	u2041
  5721  000C4E  5012               	movf	(asignarHorarios@i+1)^0,w,c
  5722  000C50  E109               	bnz	u2040
  5723  000C52  0E02               	movlw	2
  5724  000C54  5C11               	subwf	asignarHorarios@i^0,w,c
  5725  000C56  A0D8               	btfss	status,0,c
  5726  000C58  EF30  F006         	goto	u2041
  5727  000C5C  EF32  F006         	goto	u2040
  5728  000C60                     u2041:
  5729  000C60  EFED  F005         	goto	l2703
  5730  000C64                     u2040:
  5731  000C64                     l2731:
  5732                           
  5733                           ;main.c: 359:     if (datoCapturado && !esperandoDatos) {
  5734  000C64  5010               	movf	asignarHorarios@datoCapturado^0,w,c
  5735  000C66  B4D8               	btfsc	status,2,c
  5736  000C68  EF38  F006         	goto	u2051
  5737  000C6C  EF3A  F006         	goto	u2050
  5738  000C70                     u2051:
  5739  000C70  EF7E  F006         	goto	l263
  5740  000C74                     u2050:
  5741  000C74  505E               	movf	_esperandoDatos^0,w,c
  5742  000C76  A4D8               	btfss	status,2,c
  5743  000C78  EF40  F006         	goto	u2061
  5744  000C7C  EF42  F006         	goto	u2060
  5745  000C80                     u2061:
  5746  000C80  EF7E  F006         	goto	l263
  5747  000C84                     u2060:
  5748  000C84                     
  5749                           ;main.c: 361:         UART_printf("\r\n Ingrese 1 para regar || ingrese 0 para no regar:
      +                           \r\n");
  5750  000C84  0E15               	movlw	low STR_7
  5751  000C86  6E02               	movwf	UART_printf@cadena^0,c
  5752  000C88  0E7D               	movlw	high STR_7
  5753  000C8A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5754  000C8C  EC5E  F00B         	call	_UART_printf	;wreg free
  5755  000C90                     
  5756                           ;main.c: 363:         Rx = UART_read();
  5757  000C90  ECE2  F00B         	call	_UART_read	;wreg free
  5758  000C94  6E13               	movwf	asignarHorarios@Rx^0,c
  5759  000C96                     
  5760                           ;main.c: 364:         Rx -= 48;
  5761  000C96  0E30               	movlw	48
  5762  000C98  5E13               	subwf	asignarHorarios@Rx^0,f,c
  5763  000C9A                     
  5764                           ;main.c: 366:         if (Rx != 1 && Rx != 0)
  5765  000C9A  0413               	decf	asignarHorarios@Rx^0,w,c
  5766  000C9C  B4D8               	btfsc	status,2,c
  5767  000C9E  EF53  F006         	goto	u2071
  5768  000CA2  EF55  F006         	goto	u2070
  5769  000CA6                     u2071:
  5770  000CA6  EF5F  F006         	goto	l260
  5771  000CAA                     u2070:
  5772  000CAA  5013               	movf	asignarHorarios@Rx^0,w,c
  5773  000CAC  B4D8               	btfsc	status,2,c
  5774  000CAE  EF5B  F006         	goto	u2081
  5775  000CB2  EF5D  F006         	goto	u2080
  5776  000CB6                     u2081:
  5777  000CB6  EF5F  F006         	goto	l260
  5778  000CBA                     u2080:
  5779  000CBA                     
  5780                           ;main.c: 367:             Rx = 0;
  5781  000CBA  0E00               	movlw	0
  5782  000CBC  6E13               	movwf	asignarHorarios@Rx^0,c
  5783  000CBE                     l260:
  5784                           
  5785                           ;main.c: 369:         if (!esperandoDatos) {
  5786  000CBE  505E               	movf	_esperandoDatos^0,w,c
  5787  000CC0  A4D8               	btfss	status,2,c
  5788  000CC2  EF65  F006         	goto	u2091
  5789  000CC6  EF67  F006         	goto	u2090
  5790  000CCA                     u2091:
  5791  000CCA  EF7B  F006         	goto	l2753
  5792  000CCE                     u2090:
  5793  000CCE                     
  5794                           ;main.c: 370:             UART_printf("\r\n Horario Modificado! \r\n");
  5795  000CCE  0E87               	movlw	low STR_8
  5796  000CD0  6E02               	movwf	UART_printf@cadena^0,c
  5797  000CD2  0E7F               	movlw	high STR_8
  5798  000CD4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5799  000CD6  EC5E  F00B         	call	_UART_printf	;wreg free
  5800  000CDA                     
  5801                           ;main.c: 372:             horarios[hora].regar = Rx;
  5802  000CDA  500F               	movf	asignarHorarios@hora^0,w,c
  5803  000CDC  0D03               	mullw	3
  5804  000CDE  0E61               	movlw	low (_horarios+1)
  5805  000CE0  24F3               	addwf	243,w,c
  5806  000CE2  6ED9               	movwf	fsr2l,c
  5807  000CE4  0E00               	movlw	high (_horarios+1)
  5808  000CE6  20F4               	addwfc	prodh,w,c
  5809  000CE8  6EDA               	movwf	fsr2h,c
  5810  000CEA  C013  FFDF         	movff	asignarHorarios@Rx,indf2
  5811  000CEE                     
  5812                           ;main.c: 374:             escribeHorariosMemoria();
  5813  000CEE  EC74  F007         	call	_escribeHorariosMemoria	;wreg free
  5814                           
  5815                           ;main.c: 377:         } else {
  5816  000CF2  EF7E  F006         	goto	l263
  5817  000CF6                     l2753:
  5818                           
  5819                           ;main.c: 379:             UART_write('F');
  5820  000CF6  0E46               	movlw	70
  5821  000CF8  ECDC  F00D         	call	_UART_write
  5822  000CFC                     l263:
  5823  000CFC  0012               	return		;funcret
  5824  000CFE                     __end_of_asignarHorarios:
  5825                           	opt callstack 0
  5826                           
  5827 ;; *************** function _escribeHorariosMemoria *****************
  5828 ;; Defined at:
  5829 ;;		line 197 in file "main.c"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;		None
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;  i               2   12[COMRAM] int 
  5834 ;;  contMemoria     2   10[COMRAM] int 
  5835 ;; Return value:  Size  Location     Type
  5836 ;;                  1    wreg      void 
  5837 ;; Registers used:
  5838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5839 ;; Tracked objects:
  5840 ;;		On entry : 0/0
  5841 ;;		On exit  : 0/0
  5842 ;;		Unchanged: 0/0
  5843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5844 ;;      Params:         0       0       0       0       0       0       0       0       0
  5845 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5846 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5847 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5848 ;;Total ram usage:        4 bytes
  5849 ;; Hardware stack levels used:    1
  5850 ;; Hardware stack levels required when called:    4
  5851 ;; This function calls:
  5852 ;;		___wmul
  5853 ;;		_escribe_eeprom
  5854 ;; This function is called by:
  5855 ;;		_asignarHorarios
  5856 ;;		_setTiempoRegar
  5857 ;; This function uses a non-reentrant model
  5858 ;;
  5859                           
  5860                           	psect	text30
  5861  000EE8                     __ptext30:
  5862                           	opt callstack 0
  5863  000EE8                     _escribeHorariosMemoria:
  5864                           	opt callstack 24
  5865  000EE8                     
  5866                           ;main.c: 199:     int contMemoria = 0;
  5867  000EE8  0E00               	movlw	0
  5868  000EEA  6E0C               	movwf	(escribeHorariosMemoria@contMemoria+1)^0,c
  5869  000EEC  0E00               	movlw	0
  5870  000EEE  6E0B               	movwf	escribeHorariosMemoria@contMemoria^0,c
  5871                           
  5872                           ;main.c: 200:     for (int i = 0; i < 24; i++) {
  5873  000EF0  0E00               	movlw	0
  5874  000EF2  6E0E               	movwf	(escribeHorariosMemoria@i+1)^0,c
  5875  000EF4  0E00               	movlw	0
  5876  000EF6  6E0D               	movwf	escribeHorariosMemoria@i^0,c
  5877  000EF8                     l2547:
  5878                           
  5879                           ;main.c: 201:         escribe_eeprom(contMemoria++, horarios[i].hora);
  5880  000EF8  C00B  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  5881  000EFC  C00C  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  5882  000F00  C00D  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  5883  000F04  C00E  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  5884  000F08  0E00               	movlw	0
  5885  000F0A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5886  000F0C  0E03               	movlw	3
  5887  000F0E  6E03               	movwf	___wmul@multiplicand^0,c
  5888  000F10  EC83  F00D         	call	___wmul	;wreg free
  5889  000F14  0E60               	movlw	low _horarios
  5890  000F16  2401               	addwf	?___wmul^0,w,c
  5891  000F18  6ED9               	movwf	fsr2l,c
  5892  000F1A  0E00               	movlw	high _horarios
  5893  000F1C  2002               	addwfc	(?___wmul+1)^0,w,c
  5894  000F1E  6EDA               	movwf	fsr2h,c
  5895  000F20  50DF               	movf	indf2,w,c
  5896  000F22  6E09               	movwf	escribe_eeprom@dato^0,c
  5897  000F24  EC17  F00D         	call	_escribe_eeprom	;wreg free
  5898  000F28  4A0B               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  5899  000F2A  2A0C               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  5900  000F2C                     
  5901                           ;main.c: 202:         escribe_eeprom(contMemoria++, horarios[i].regar);
  5902  000F2C  C00B  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  5903  000F30  C00C  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  5904  000F34  C00D  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  5905  000F38  C00E  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  5906  000F3C  0E00               	movlw	0
  5907  000F3E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5908  000F40  0E03               	movlw	3
  5909  000F42  6E03               	movwf	___wmul@multiplicand^0,c
  5910  000F44  EC83  F00D         	call	___wmul	;wreg free
  5911  000F48  0E61               	movlw	low (_horarios+1)
  5912  000F4A  2401               	addwf	?___wmul^0,w,c
  5913  000F4C  6ED9               	movwf	fsr2l,c
  5914  000F4E  0E00               	movlw	high (_horarios+1)
  5915  000F50  2002               	addwfc	(?___wmul+1)^0,w,c
  5916  000F52  6EDA               	movwf	fsr2h,c
  5917  000F54  50DF               	movf	indf2,w,c
  5918  000F56  6E09               	movwf	escribe_eeprom@dato^0,c
  5919  000F58  EC17  F00D         	call	_escribe_eeprom	;wreg free
  5920  000F5C  4A0B               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  5921  000F5E  2A0C               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  5922  000F60                     
  5923                           ;main.c: 203:         escribe_eeprom(contMemoria++, horarios[i].tiempoRegar);
  5924  000F60  C00B  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  5925  000F64  C00C  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  5926  000F68  C00D  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  5927  000F6C  C00E  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  5928  000F70  0E00               	movlw	0
  5929  000F72  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5930  000F74  0E03               	movlw	3
  5931  000F76  6E03               	movwf	___wmul@multiplicand^0,c
  5932  000F78  EC83  F00D         	call	___wmul	;wreg free
  5933  000F7C  0E62               	movlw	low (_horarios+2)
  5934  000F7E  2401               	addwf	?___wmul^0,w,c
  5935  000F80  6ED9               	movwf	fsr2l,c
  5936  000F82  0E00               	movlw	high (_horarios+2)
  5937  000F84  2002               	addwfc	(?___wmul+1)^0,w,c
  5938  000F86  6EDA               	movwf	fsr2h,c
  5939  000F88  50DF               	movf	indf2,w,c
  5940  000F8A  6E09               	movwf	escribe_eeprom@dato^0,c
  5941  000F8C  EC17  F00D         	call	_escribe_eeprom	;wreg free
  5942  000F90  4A0B               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  5943  000F92  2A0C               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  5944  000F94                     
  5945                           ;main.c: 204:     }
  5946  000F94  4A0D               	infsnz	escribeHorariosMemoria@i^0,f,c
  5947  000F96  2A0E               	incf	(escribeHorariosMemoria@i+1)^0,f,c
  5948  000F98  BE0E               	btfsc	(escribeHorariosMemoria@i+1)^0,7,c
  5949  000F9A  EFD8  F007         	goto	u1851
  5950  000F9E  500E               	movf	(escribeHorariosMemoria@i+1)^0,w,c
  5951  000FA0  E109               	bnz	u1850
  5952  000FA2  0E18               	movlw	24
  5953  000FA4  5C0D               	subwf	escribeHorariosMemoria@i^0,w,c
  5954  000FA6  A0D8               	btfss	status,0,c
  5955  000FA8  EFD8  F007         	goto	u1851
  5956  000FAC  EFDA  F007         	goto	u1850
  5957  000FB0                     u1851:
  5958  000FB0  EF7C  F007         	goto	l2547
  5959  000FB4                     u1850:
  5960  000FB4  0012               	return		;funcret
  5961  000FB6                     __end_of_escribeHorariosMemoria:
  5962                           	opt callstack 0
  5963                           
  5964 ;; *************** function _escribe_eeprom *****************
  5965 ;; Defined at:
  5966 ;;		line 168 in file "main.c"
  5967 ;; Parameters:    Size  Location     Type
  5968 ;;  direccion       2    6[COMRAM] unsigned short 
  5969 ;;  dato            1    8[COMRAM] unsigned char 
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;		None
  5972 ;; Return value:  Size  Location     Type
  5973 ;;                  1    wreg      void 
  5974 ;; Registers used:
  5975 ;;		wreg, status,2, status,0, cstack
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5981 ;;      Params:         3       0       0       0       0       0       0       0       0
  5982 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5983 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5984 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5985 ;;Total ram usage:        4 bytes
  5986 ;; Hardware stack levels used:    1
  5987 ;; Hardware stack levels required when called:    3
  5988 ;; This function calls:
  5989 ;;		_i2c_detener
  5990 ;;		_i2c_envia_dato
  5991 ;;		_i2c_inicia_com
  5992 ;; This function is called by:
  5993 ;;		_escribeHorariosMemoria
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997                           	psect	text31
  5998  001A2E                     __ptext31:
  5999                           	opt callstack 0
  6000  001A2E                     _escribe_eeprom:
  6001                           	opt callstack 24
  6002  001A2E                     
  6003                           ;main.c: 169:     i2c_inicia_com();
  6004  001A2E  EC01  F00E         	call	_i2c_inicia_com	;wreg free
  6005                           
  6006                           ;main.c: 170:     i2c_envia_dato(0xAE);
  6007  001A32  0EAE               	movlw	174
  6008  001A34  ECF2  F00D         	call	_i2c_envia_dato
  6009                           
  6010                           ;main.c: 171:     i2c_envia_dato(direccion >> 8);
  6011  001A38  5008               	movf	(escribe_eeprom@direccion+1)^0,w,c
  6012  001A3A  ECF2  F00D         	call	_i2c_envia_dato
  6013                           
  6014                           ;main.c: 173:     i2c_envia_dato(direccion);
  6015  001A3E  5007               	movf	escribe_eeprom@direccion^0,w,c
  6016  001A40  ECF2  F00D         	call	_i2c_envia_dato
  6017                           
  6018                           ;main.c: 175:     i2c_envia_dato(dato);
  6019  001A44  5009               	movf	escribe_eeprom@dato^0,w,c
  6020  001A46  ECF2  F00D         	call	_i2c_envia_dato
  6021                           
  6022                           ;main.c: 176:     i2c_detener();
  6023  001A4A  EC05  F00E         	call	_i2c_detener	;wreg free
  6024  001A4E                     
  6025                           ;main.c: 177:     _delay((unsigned long)((10)*(4000000/4000.0)));
  6026  001A4E  0E0D               	movlw	13
  6027  001A50  6E0A               	movwf	??_escribe_eeprom^0,c
  6028  001A52  0EFC               	movlw	252
  6029  001A54                     u2497:
  6030  001A54  2EE8               	decfsz	wreg,f,c
  6031  001A56  D7FE               	bra	u2497
  6032  001A58  2E0A               	decfsz	??_escribe_eeprom^0,f,c
  6033  001A5A  D7FC               	bra	u2497
  6034  001A5C  0012               	return		;funcret
  6035  001A5E                     __end_of_escribe_eeprom:
  6036                           	opt callstack 0
  6037                           
  6038 ;; *************** function _UART_read *****************
  6039 ;; Defined at:
  6040 ;;		line 34 in file "./UART.h"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;		None
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;		None
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  1    wreg      unsigned char 
  6047 ;; Registers used:
  6048 ;;		wreg, status,2
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6054 ;;      Params:         0       0       0       0       0       0       0       0       0
  6055 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6056 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6057 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6058 ;;Total ram usage:        0 bytes
  6059 ;; Hardware stack levels used:    1
  6060 ;; Hardware stack levels required when called:    1
  6061 ;; This function calls:
  6062 ;;		Nothing
  6063 ;; This function is called by:
  6064 ;;		_setRtc
  6065 ;;		_asignarHorarios
  6066 ;;		_setTiempoRegar
  6067 ;;		_lecturaWifi
  6068 ;; This function uses a non-reentrant model
  6069 ;;
  6070                           
  6071                           	psect	text32
  6072  0017C4                     __ptext32:
  6073                           	opt callstack 0
  6074  0017C4                     _UART_read:
  6075                           	opt callstack 27
  6076  0017C4                     
  6077                           ;./UART.h: 36:     TMR0 = VALOR_TIMER0UART;
  6078  0017C4  0E67               	movlw	103
  6079  0017C6  6ED7               	movwf	215,c	;volatile
  6080  0017C8  0E69               	movlw	105
  6081  0017CA  6ED6               	movwf	214,c	;volatile
  6082                           
  6083                           ;./UART.h: 37:     esperaDatoConcluida = 0;
  6084  0017CC  0E00               	movlw	0
  6085  0017CE  0100               	movlb	0	; () banked
  6086  0017D0  6FCA               	movwf	_esperaDatoConcluida& (0+255),b
  6087                           
  6088                           ;./UART.h: 38:     esperandoDatos = 1;
  6089  0017D2  0E01               	movlw	1
  6090  0017D4  6E5E               	movwf	_esperandoDatos^0,c
  6091                           
  6092                           ;./UART.h: 39:     byteUart = 0;
  6093  0017D6  0E00               	movlw	0
  6094  0017D8  6FCB               	movwf	_byteUart& (0+255),b
  6095                           
  6096                           ;./UART.h: 40:     tiempoInactividadTrans = 0;
  6097  0017DA  0E00               	movlw	0
  6098  0017DC  6FCC               	movwf	_tiempoInactividadTrans& (0+255),b
  6099  0017DE                     l121:
  6100                           
  6101                           ; BSR set to: 0
  6102  0017DE  BA9E               	btfsc	158,5,c	;volatile
  6103  0017E0  EFF4  F00B         	goto	u1691
  6104  0017E4  EFF6  F00B         	goto	u1690
  6105  0017E8                     u1691:
  6106  0017E8  EFFE  F00B         	goto	l2451
  6107  0017EC                     u1690:
  6108  0017EC                     
  6109                           ; BSR set to: 0
  6110  0017EC  51CA               	movf	_esperaDatoConcluida& (0+255),w,b
  6111  0017EE  B4D8               	btfsc	status,2,c
  6112  0017F0  EFFC  F00B         	goto	u1701
  6113  0017F4  EFFE  F00B         	goto	u1700
  6114  0017F8                     u1701:
  6115  0017F8  EFEF  F00B         	goto	l121
  6116  0017FC                     u1700:
  6117  0017FC                     l2451:
  6118                           
  6119                           ; BSR set to: 0
  6120                           ;./UART.h: 44:     if (!esperaDatoConcluida) {
  6121  0017FC  51CA               	movf	_esperaDatoConcluida& (0+255),w,b
  6122  0017FE  A4D8               	btfss	status,2,c
  6123  001800  EF04  F00C         	goto	u1711
  6124  001804  EF06  F00C         	goto	u1710
  6125  001808                     u1711:
  6126  001808  EF0A  F00C         	goto	l126
  6127  00180C                     u1710:
  6128  00180C                     
  6129                           ; BSR set to: 0
  6130                           ;./UART.h: 45:         byteUart = RCREG;
  6131  00180C  CFAE F0CB          	movff	4014,_byteUart	;volatile
  6132  001810                     
  6133                           ; BSR set to: 0
  6134                           ;./UART.h: 46:         esperandoDatos = 0;
  6135  001810  0E00               	movlw	0
  6136  001812  6E5E               	movwf	_esperandoDatos^0,c
  6137  001814                     l126:
  6138                           
  6139                           ; BSR set to: 0
  6140                           ;./UART.h: 49:     return byteUart;
  6141  001814  51CB               	movf	_byteUart& (0+255),w,b
  6142  001816                     
  6143                           ; BSR set to: 0
  6144  001816  0012               	return		;funcret
  6145  001818                     __end_of_UART_read:
  6146                           	opt callstack 0
  6147                           
  6148 ;; *************** function _UART_printf *****************
  6149 ;; Defined at:
  6150 ;;		line 57 in file "./UART.h"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;  cadena          2    1[COMRAM] PTR unsigned char 
  6153 ;;		 -> dameDatosSistema@buffer(15), STR_24(50), STR_23(42), STR_22(3), 
  6154 ;;		 -> STR_21(14), STR_20(32), STR_19(49), STR_18(37), 
  6155 ;;		 -> STR_17(27), STR_16(37), STR_15(32), STR_14(28), 
  6156 ;;		 -> STR_13(38), STR_12(37), STR_11(72), STR_10(51), 
  6157 ;;		 -> STR_9(23), STR_8(26), STR_7(55), STR_6(51), 
  6158 ;;		 -> STR_5(25), STR_4(37), STR_3(31), STR_2(43), 
  6159 ;;		 -> STR_1(16), 
  6160 ;; Auto vars:     Size  Location     Type
  6161 ;;		None
  6162 ;; Return value:  Size  Location     Type
  6163 ;;                  1    wreg      void 
  6164 ;; Registers used:
  6165 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6166 ;; Tracked objects:
  6167 ;;		On entry : 0/0
  6168 ;;		On exit  : 0/0
  6169 ;;		Unchanged: 0/0
  6170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6171 ;;      Params:         2       0       0       0       0       0       0       0       0
  6172 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6173 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6174 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6175 ;;Total ram usage:        2 bytes
  6176 ;; Hardware stack levels used:    1
  6177 ;; Hardware stack levels required when called:    2
  6178 ;; This function calls:
  6179 ;;		_UART_write
  6180 ;; This function is called by:
  6181 ;;		_fijaHoraRtc
  6182 ;;		_asignarHorarios
  6183 ;;		_setTiempoRegar
  6184 ;;		_mostrarMenu
  6185 ;;		_sistemaPrincipal
  6186 ;;		_dameDatosSistema
  6187 ;;		_lecturaWifi
  6188 ;; This function uses a non-reentrant model
  6189 ;;
  6190                           
  6191                           	psect	text33
  6192  0016BC                     __ptext33:
  6193                           	opt callstack 0
  6194  0016BC                     _UART_printf:
  6195                           	opt callstack 26
  6196  0016BC                     
  6197                           ;./UART.h: 58:     while (*cadena) {
  6198  0016BC  EF74  F00B         	goto	l2501
  6199  0016C0                     l2497:
  6200                           
  6201                           ;./UART.h: 59:         UART_write(*cadena++);
  6202  0016C0  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  6203  0016C4  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  6204  0016C8  6AF8               	clrf	tblptru,c
  6205  0016CA  0E07               	movlw	(high __ramtop+-1)
  6206  0016CC  64F7               	cpfsgt	tblptrh,c
  6207  0016CE  D003               	bra	u1747
  6208  0016D0  0008               	tblrd		*
  6209  0016D2  50F5               	movf	tablat,w,c
  6210  0016D4  D005               	bra	u1740
  6211  0016D6                     u1747:
  6212  0016D6  CFF6 FFE1          	movff	tblptrl,fsr1l
  6213  0016DA  CFF7 FFE2          	movff	tblptrh,fsr1h
  6214  0016DE  50E7               	movf	indf1,w,c
  6215  0016E0                     u1740:
  6216  0016E0  ECDC  F00D         	call	_UART_write
  6217  0016E4  4A02               	infsnz	UART_printf@cadena^0,f,c
  6218  0016E6  2A03               	incf	(UART_printf@cadena+1)^0,f,c
  6219  0016E8                     l2501:
  6220                           
  6221                           ;./UART.h: 58:     while (*cadena) {
  6222  0016E8  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  6223  0016EC  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  6224  0016F0  6AF8               	clrf	tblptru,c
  6225  0016F2  0E07               	movlw	(high __ramtop+-1)
  6226  0016F4  64F7               	cpfsgt	tblptrh,c
  6227  0016F6  D003               	bra	u1757
  6228  0016F8  0008               	tblrd		*
  6229  0016FA  50F5               	movf	tablat,w,c
  6230  0016FC  D005               	bra	u1750
  6231  0016FE                     u1757:
  6232  0016FE  CFF6 FFE1          	movff	tblptrl,fsr1l
  6233  001702  CFF7 FFE2          	movff	tblptrh,fsr1h
  6234  001706  50E7               	movf	indf1,w,c
  6235  001708                     u1750:
  6236  001708  0900               	iorlw	0
  6237  00170A  A4D8               	btfss	status,2,c
  6238  00170C  EF8A  F00B         	goto	u1761
  6239  001710  EF8C  F00B         	goto	u1760
  6240  001714                     u1761:
  6241  001714  EF60  F00B         	goto	l2497
  6242  001718                     u1760:
  6243  001718  0012               	return		;funcret
  6244  00171A                     __end_of_UART_printf:
  6245                           	opt callstack 0
  6246                           
  6247 ;; *************** function _UART_write *****************
  6248 ;; Defined at:
  6249 ;;		line 52 in file "./UART.h"
  6250 ;; Parameters:    Size  Location     Type
  6251 ;;  dato            1    wreg     unsigned char 
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;  dato            1    0[COMRAM] unsigned char 
  6254 ;; Return value:  Size  Location     Type
  6255 ;;                  1    wreg      void 
  6256 ;; Registers used:
  6257 ;;		wreg
  6258 ;; Tracked objects:
  6259 ;;		On entry : 0/0
  6260 ;;		On exit  : 0/0
  6261 ;;		Unchanged: 0/0
  6262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6263 ;;      Params:         0       0       0       0       0       0       0       0       0
  6264 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6265 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6266 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6267 ;;Total ram usage:        1 bytes
  6268 ;; Hardware stack levels used:    1
  6269 ;; Hardware stack levels required when called:    1
  6270 ;; This function calls:
  6271 ;;		Nothing
  6272 ;; This function is called by:
  6273 ;;		_UART_printf
  6274 ;;		_setRtc
  6275 ;;		_asignarHorarios
  6276 ;;		_setTiempoRegar
  6277 ;;		_lecturaWifi
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           	psect	text34
  6282  001BB8                     __ptext34:
  6283                           	opt callstack 0
  6284  001BB8                     _UART_write:
  6285                           	opt callstack 27
  6286                           
  6287                           ;incstack = 0
  6288                           ;UART_write@dato stored from wreg
  6289  001BB8  6E01               	movwf	UART_write@dato^0,c
  6290  001BBA                     
  6291                           ;./UART.h: 53:     TXREG = dato;
  6292  001BBA  C001  FFAD         	movff	UART_write@dato,4013	;volatile
  6293  001BBE                     l130:
  6294  001BBE  A2AC               	btfss	172,1,c	;volatile
  6295  001BC0  EFE4  F00D         	goto	u1721
  6296  001BC4  EFE6  F00D         	goto	u1720
  6297  001BC8                     u1721:
  6298  001BC8  EFDF  F00D         	goto	l130
  6299  001BCC                     u1720:
  6300  001BCC  0012               	return		;funcret
  6301  001BCE                     __end_of_UART_write:
  6302                           	opt callstack 0
  6303                           
  6304 ;; *************** function _restablecerDatosSensor *****************
  6305 ;; Defined at:
  6306 ;;		line 472 in file "main.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;		None
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;  i               2    4[COMRAM] int 
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  1    wreg      void 
  6313 ;; Registers used:
  6314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6320 ;;      Params:         0       0       0       0       0       0       0       0       0
  6321 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6322 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6323 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6324 ;;Total ram usage:        2 bytes
  6325 ;; Hardware stack levels used:    1
  6326 ;; Hardware stack levels required when called:    2
  6327 ;; This function calls:
  6328 ;;		_constructorSensor
  6329 ;; This function is called by:
  6330 ;;		_main
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           	psect	text35
  6335  00186A                     __ptext35:
  6336                           	opt callstack 0
  6337  00186A                     _restablecerDatosSensor:
  6338                           	opt callstack 28
  6339  00186A                     
  6340                           ;main.c: 473:     for (int i = 0; i < 3; i++)
  6341  00186A  0E00               	movlw	0
  6342  00186C  6E06               	movwf	(restablecerDatosSensor@i+1)^0,c
  6343  00186E  0E00               	movlw	0
  6344  001870  6E05               	movwf	restablecerDatosSensor@i^0,c
  6345  001872                     l2989:
  6346                           
  6347                           ;main.c: 474:         constructorSensor(sensores[i], 0, i);
  6348  001872  90D8               	bcf	status,0,c
  6349  001874  3405               	rlcf	restablecerDatosSensor@i^0,w,c
  6350  001876  6ED9               	movwf	fsr2l,c
  6351  001878  3406               	rlcf	(restablecerDatosSensor@i+1)^0,w,c
  6352  00187A  6EDA               	movwf	fsr2h,c
  6353  00187C  0EA8               	movlw	low _sensores
  6354  00187E  26D9               	addwf	fsr2l,f,c
  6355  001880  0E00               	movlw	high _sensores
  6356  001882  22DA               	addwfc	fsr2h,f,c
  6357  001884  CFDE F001          	movff	postinc2,constructorSensor@s
  6358  001888  CFDD F002          	movff	postdec2,constructorSensor@s+1
  6359  00188C  0E00               	movlw	0
  6360  00188E  6E03               	movwf	constructorSensor@humedad^0,c
  6361  001890  C005  F004         	movff	restablecerDatosSensor@i,constructorSensor@pin
  6362  001894  ECF8  F00D         	call	_constructorSensor	;wreg free
  6363  001898  4A05               	infsnz	restablecerDatosSensor@i^0,f,c
  6364  00189A  2A06               	incf	(restablecerDatosSensor@i+1)^0,f,c
  6365  00189C  BE06               	btfsc	(restablecerDatosSensor@i+1)^0,7,c
  6366  00189E  EF5A  F00C         	goto	u2321
  6367  0018A2  5006               	movf	(restablecerDatosSensor@i+1)^0,w,c
  6368  0018A4  E109               	bnz	u2320
  6369  0018A6  0E03               	movlw	3
  6370  0018A8  5C05               	subwf	restablecerDatosSensor@i^0,w,c
  6371  0018AA  A0D8               	btfss	status,0,c
  6372  0018AC  EF5A  F00C         	goto	u2321
  6373  0018B0  EF5C  F00C         	goto	u2320
  6374  0018B4                     u2321:
  6375  0018B4  EF39  F00C         	goto	l2989
  6376  0018B8                     u2320:
  6377  0018B8  0012               	return		;funcret
  6378  0018BA                     __end_of_restablecerDatosSensor:
  6379                           	opt callstack 0
  6380                           
  6381 ;; *************** function _constructorSensor *****************
  6382 ;; Defined at:
  6383 ;;		line 101 in file "main.c"
  6384 ;; Parameters:    Size  Location     Type
  6385 ;;  s               2    0[COMRAM] struct .
  6386 ;;  humedad         1    2[COMRAM] unsigned char 
  6387 ;;  pin             1    3[COMRAM] unsigned char 
  6388 ;; Auto vars:     Size  Location     Type
  6389 ;;		None
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  1    wreg      void 
  6392 ;; Registers used:
  6393 ;;		None
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6399 ;;      Params:         4       0       0       0       0       0       0       0       0
  6400 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6401 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6402 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6403 ;;Total ram usage:        4 bytes
  6404 ;; Hardware stack levels used:    1
  6405 ;; Hardware stack levels required when called:    1
  6406 ;; This function calls:
  6407 ;;		Nothing
  6408 ;; This function is called by:
  6409 ;;		_restablecerDatosSensor
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           	psect	text36
  6414  001BF0                     __ptext36:
  6415                           	opt callstack 0
  6416  001BF0                     _constructorSensor:
  6417                           	opt callstack 28
  6418  001BF0                     
  6419                           ;main.c: 103:     s.humedadMedida = humedad;
  6420  001BF0  C003  F001         	movff	constructorSensor@humedad,constructorSensor@s
  6421                           
  6422                           ;main.c: 104:     s.pinSensor = pin;
  6423  001BF4  C004  F002         	movff	constructorSensor@pin,constructorSensor@s+1
  6424  001BF8  0012               	return		;funcret
  6425  001BFA                     __end_of_constructorSensor:
  6426                           	opt callstack 0
  6427                           
  6428 ;; *************** function _leeHorariosMemoria *****************
  6429 ;; Defined at:
  6430 ;;		line 207 in file "main.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;		None
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;  i               2    8[COMRAM] int 
  6435 ;;  contMemoria     2    6[COMRAM] int 
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  1    wreg      void 
  6438 ;; Registers used:
  6439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6445 ;;      Params:         0       0       0       0       0       0       0       0       0
  6446 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6447 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6448 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6449 ;;Total ram usage:        4 bytes
  6450 ;; Hardware stack levels used:    1
  6451 ;; Hardware stack levels required when called:    4
  6452 ;; This function calls:
  6453 ;;		___wmul
  6454 ;;		_leer_eeprom
  6455 ;; This function is called by:
  6456 ;;		_main
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           	psect	text37
  6461  001080                     __ptext37:
  6462                           	opt callstack 0
  6463  001080                     _leeHorariosMemoria:
  6464                           	opt callstack 26
  6465  001080                     
  6466                           ;main.c: 209:     int contMemoria = 0;
  6467  001080  0E00               	movlw	0
  6468  001082  6E08               	movwf	(leeHorariosMemoria@contMemoria+1)^0,c
  6469  001084  0E00               	movlw	0
  6470  001086  6E07               	movwf	leeHorariosMemoria@contMemoria^0,c
  6471                           
  6472                           ;main.c: 211:     for (int i = 0; i < 24; i++) {
  6473  001088  0E00               	movlw	0
  6474  00108A  6E0A               	movwf	(leeHorariosMemoria@i+1)^0,c
  6475  00108C  0E00               	movlw	0
  6476  00108E  6E09               	movwf	leeHorariosMemoria@i^0,c
  6477  001090                     l2969:
  6478                           
  6479                           ;main.c: 212:         horarios[i].hora = leer_eeprom(contMemoria++);
  6480  001090  C009  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  6481  001094  C00A  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  6482  001098  0E00               	movlw	0
  6483  00109A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6484  00109C  0E03               	movlw	3
  6485  00109E  6E03               	movwf	___wmul@multiplicand^0,c
  6486  0010A0  EC83  F00D         	call	___wmul	;wreg free
  6487  0010A4  0E60               	movlw	low _horarios
  6488  0010A6  2401               	addwf	?___wmul^0,w,c
  6489  0010A8  6ED9               	movwf	fsr2l,c
  6490  0010AA  0E00               	movlw	high _horarios
  6491  0010AC  2002               	addwfc	(?___wmul+1)^0,w,c
  6492  0010AE  6EDA               	movwf	fsr2h,c
  6493  0010B0  C007  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  6494  0010B4  C008  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  6495  0010B8  ECC3  F00C         	call	_leer_eeprom	;wreg free
  6496  0010BC  6EDF               	movwf	indf2,c
  6497  0010BE  4A07               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  6498  0010C0  2A08               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  6499  0010C2                     
  6500                           ;main.c: 213:         horarios[i].regar = leer_eeprom(contMemoria++);
  6501  0010C2  C009  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  6502  0010C6  C00A  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  6503  0010CA  0E00               	movlw	0
  6504  0010CC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6505  0010CE  0E03               	movlw	3
  6506  0010D0  6E03               	movwf	___wmul@multiplicand^0,c
  6507  0010D2  EC83  F00D         	call	___wmul	;wreg free
  6508  0010D6  0E61               	movlw	low (_horarios+1)
  6509  0010D8  2401               	addwf	?___wmul^0,w,c
  6510  0010DA  6ED9               	movwf	fsr2l,c
  6511  0010DC  0E00               	movlw	high (_horarios+1)
  6512  0010DE  2002               	addwfc	(?___wmul+1)^0,w,c
  6513  0010E0  6EDA               	movwf	fsr2h,c
  6514  0010E2  C007  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  6515  0010E6  C008  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  6516  0010EA  ECC3  F00C         	call	_leer_eeprom	;wreg free
  6517  0010EE  6EDF               	movwf	indf2,c
  6518  0010F0  4A07               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  6519  0010F2  2A08               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  6520  0010F4                     
  6521                           ;main.c: 214:         horarios[i].tiempoRegar = leer_eeprom(contMemoria++);
  6522  0010F4  C009  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  6523  0010F8  C00A  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  6524  0010FC  0E00               	movlw	0
  6525  0010FE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6526  001100  0E03               	movlw	3
  6527  001102  6E03               	movwf	___wmul@multiplicand^0,c
  6528  001104  EC83  F00D         	call	___wmul	;wreg free
  6529  001108  0E62               	movlw	low (_horarios+2)
  6530  00110A  2401               	addwf	?___wmul^0,w,c
  6531  00110C  6ED9               	movwf	fsr2l,c
  6532  00110E  0E00               	movlw	high (_horarios+2)
  6533  001110  2002               	addwfc	(?___wmul+1)^0,w,c
  6534  001112  6EDA               	movwf	fsr2h,c
  6535  001114  C007  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  6536  001118  C008  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  6537  00111C  ECC3  F00C         	call	_leer_eeprom	;wreg free
  6538  001120  6EDF               	movwf	indf2,c
  6539  001122  4A07               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  6540  001124  2A08               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  6541  001126                     
  6542                           ;main.c: 215:     }
  6543  001126  4A09               	infsnz	leeHorariosMemoria@i^0,f,c
  6544  001128  2A0A               	incf	(leeHorariosMemoria@i+1)^0,f,c
  6545  00112A  BE0A               	btfsc	(leeHorariosMemoria@i+1)^0,7,c
  6546  00112C  EFA1  F008         	goto	u2311
  6547  001130  500A               	movf	(leeHorariosMemoria@i+1)^0,w,c
  6548  001132  E109               	bnz	u2310
  6549  001134  0E18               	movlw	24
  6550  001136  5C09               	subwf	leeHorariosMemoria@i^0,w,c
  6551  001138  A0D8               	btfss	status,0,c
  6552  00113A  EFA1  F008         	goto	u2311
  6553  00113E  EFA3  F008         	goto	u2310
  6554  001142                     u2311:
  6555  001142  EF48  F008         	goto	l2969
  6556  001146                     u2310:
  6557  001146  0012               	return		;funcret
  6558  001148                     __end_of_leeHorariosMemoria:
  6559                           	opt callstack 0
  6560                           
  6561 ;; *************** function _leer_eeprom *****************
  6562 ;; Defined at:
  6563 ;;		line 180 in file "main.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;  direccion       2    2[COMRAM] unsigned short 
  6566 ;; Auto vars:     Size  Location     Type
  6567 ;;  dato            1    5[COMRAM] unsigned char 
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  1    wreg      unsigned char 
  6570 ;; Registers used:
  6571 ;;		wreg, status,2, status,0, cstack
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6577 ;;      Params:         2       0       0       0       0       0       0       0       0
  6578 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6579 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6580 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6581 ;;Total ram usage:        4 bytes
  6582 ;; Hardware stack levels used:    1
  6583 ;; Hardware stack levels required when called:    3
  6584 ;; This function calls:
  6585 ;;		_i2c_detener
  6586 ;;		_i2c_envia_dato
  6587 ;;		_i2c_inicia_com
  6588 ;;		_i2c_recibe_dato
  6589 ;;		_i2c_reinicia_com
  6590 ;; This function is called by:
  6591 ;;		_leeHorariosMemoria
  6592 ;; This function uses a non-reentrant model
  6593 ;;
  6594                           
  6595                           	psect	text38
  6596  001986                     __ptext38:
  6597                           	opt callstack 0
  6598  001986                     _leer_eeprom:
  6599                           	opt callstack 26
  6600  001986                     
  6601                           ;main.c: 182:     unsigned char dato;;main.c: 184:     i2c_inicia_com();
  6602  001986  EC01  F00E         	call	_i2c_inicia_com	;wreg free
  6603                           
  6604                           ;main.c: 185:     i2c_envia_dato(0xAE);
  6605  00198A  0EAE               	movlw	174
  6606  00198C  ECF2  F00D         	call	_i2c_envia_dato
  6607                           
  6608                           ;main.c: 186:     i2c_envia_dato(direccion >> 8);
  6609  001990  5004               	movf	(leer_eeprom@direccion+1)^0,w,c
  6610  001992  ECF2  F00D         	call	_i2c_envia_dato
  6611                           
  6612                           ;main.c: 187:     i2c_envia_dato(direccion);
  6613  001996  5003               	movf	leer_eeprom@direccion^0,w,c
  6614  001998  ECF2  F00D         	call	_i2c_envia_dato
  6615                           
  6616                           ;main.c: 188:     i2c_reinicia_com();
  6617  00199C  ECFD  F00D         	call	_i2c_reinicia_com	;wreg free
  6618                           
  6619                           ;main.c: 189:     i2c_envia_dato(0xAF);
  6620  0019A0  0EAF               	movlw	175
  6621  0019A2  ECF2  F00D         	call	_i2c_envia_dato
  6622                           
  6623                           ;main.c: 190:     dato = i2c_recibe_dato();
  6624  0019A6  ECC2  F00D         	call	_i2c_recibe_dato	;wreg free
  6625  0019AA  6E06               	movwf	leer_eeprom@dato^0,c
  6626                           
  6627                           ;main.c: 191:     i2c_detener();
  6628  0019AC  EC05  F00E         	call	_i2c_detener	;wreg free
  6629  0019B0                     
  6630                           ;main.c: 192:     _delay((unsigned long)((10)*(4000000/4000.0)));
  6631  0019B0  0E0D               	movlw	13
  6632  0019B2  6E05               	movwf	??_leer_eeprom^0,c
  6633  0019B4  0EFC               	movlw	252
  6634  0019B6                     u2507:
  6635  0019B6  2EE8               	decfsz	wreg,f,c
  6636  0019B8  D7FE               	bra	u2507
  6637  0019BA  2E05               	decfsz	??_leer_eeprom^0,f,c
  6638  0019BC  D7FC               	bra	u2507
  6639  0019BE                     
  6640                           ;main.c: 194:     return dato;
  6641  0019BE  5006               	movf	leer_eeprom@dato^0,w,c
  6642  0019C0  0012               	return		;funcret
  6643  0019C2                     __end_of_leer_eeprom:
  6644                           	opt callstack 0
  6645                           
  6646 ;; *************** function _i2c_reinicia_com *****************
  6647 ;; Defined at:
  6648 ;;		line 37 in file "./I2C.h"
  6649 ;; Parameters:    Size  Location     Type
  6650 ;;		None
  6651 ;; Auto vars:     Size  Location     Type
  6652 ;;		None
  6653 ;; Return value:  Size  Location     Type
  6654 ;;                  1    wreg      void 
  6655 ;; Registers used:
  6656 ;;		wreg, status,2, status,0, cstack
  6657 ;; Tracked objects:
  6658 ;;		On entry : 0/0
  6659 ;;		On exit  : 0/0
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6662 ;;      Params:         0       0       0       0       0       0       0       0       0
  6663 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6664 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6665 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6666 ;;Total ram usage:        0 bytes
  6667 ;; Hardware stack levels used:    1
  6668 ;; Hardware stack levels required when called:    2
  6669 ;; This function calls:
  6670 ;;		_i2c_espera
  6671 ;; This function is called by:
  6672 ;;		_leer_rtc
  6673 ;;		_leer_eeprom
  6674 ;; This function uses a non-reentrant model
  6675 ;;
  6676                           
  6677                           	psect	text39
  6678  001BFA                     __ptext39:
  6679                           	opt callstack 0
  6680  001BFA                     _i2c_reinicia_com:
  6681                           	opt callstack 25
  6682  001BFA                     
  6683                           ;./I2C.h: 38:     i2c_espera();
  6684  001BFA  EC70  F00D         	call	_i2c_espera	;wreg free
  6685  001BFE                     
  6686                           ;./I2C.h: 39:     SSPCON2bits.RSEN = 1;
  6687  001BFE  82C5               	bsf	197,1,c	;volatile
  6688  001C00  0012               	return		;funcret
  6689  001C02                     __end_of_i2c_reinicia_com:
  6690                           	opt callstack 0
  6691                           
  6692 ;; *************** function _i2c_recibe_dato *****************
  6693 ;; Defined at:
  6694 ;;		line 68 in file "./I2C.h"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;		None
  6697 ;; Auto vars:     Size  Location     Type
  6698 ;;  datoleido       1    1[COMRAM] unsigned char 
  6699 ;; Return value:  Size  Location     Type
  6700 ;;                  1    wreg      unsigned char 
  6701 ;; Registers used:
  6702 ;;		wreg, status,2, status,0, cstack
  6703 ;; Tracked objects:
  6704 ;;		On entry : 0/0
  6705 ;;		On exit  : 0/0
  6706 ;;		Unchanged: 0/0
  6707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6708 ;;      Params:         0       0       0       0       0       0       0       0       0
  6709 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6710 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6711 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6712 ;;Total ram usage:        1 bytes
  6713 ;; Hardware stack levels used:    1
  6714 ;; Hardware stack levels required when called:    2
  6715 ;; This function calls:
  6716 ;;		_i2c_espera
  6717 ;; This function is called by:
  6718 ;;		_leer_rtc
  6719 ;;		_leer_eeprom
  6720 ;; This function uses a non-reentrant model
  6721 ;;
  6722                           
  6723                           	psect	text40
  6724  001B84                     __ptext40:
  6725                           	opt callstack 0
  6726  001B84                     _i2c_recibe_dato:
  6727                           	opt callstack 25
  6728  001B84                     
  6729                           ;./I2C.h: 70:     unsigned char datoleido;;./I2C.h: 73:     i2c_espera();
  6730  001B84  EC70  F00D         	call	_i2c_espera	;wreg free
  6731  001B88                     
  6732                           ;./I2C.h: 74:     SSPCON2bits.RCEN = 1;
  6733  001B88  86C5               	bsf	197,3,c	;volatile
  6734                           
  6735                           ;./I2C.h: 76:     i2c_espera();
  6736  001B8A  EC70  F00D         	call	_i2c_espera	;wreg free
  6737  001B8E                     
  6738                           ;./I2C.h: 77:     datoleido = SSPBUF;
  6739  001B8E  CFC9 F002          	movff	4041,i2c_recibe_dato@datoleido	;volatile
  6740                           
  6741                           ;./I2C.h: 80:     i2c_espera();
  6742  001B92  EC70  F00D         	call	_i2c_espera	;wreg free
  6743  001B96                     
  6744                           ;./I2C.h: 82:     SSPCON2bits.ACKDT = 1;
  6745  001B96  8AC5               	bsf	197,5,c	;volatile
  6746  001B98                     
  6747                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
  6748  001B98  88C5               	bsf	197,4,c	;volatile
  6749  001B9A                     
  6750                           ;./I2C.h: 91:     return datoleido;
  6751  001B9A  5002               	movf	i2c_recibe_dato@datoleido^0,w,c
  6752  001B9C  0012               	return		;funcret
  6753  001B9E                     __end_of_i2c_recibe_dato:
  6754                           	opt callstack 0
  6755                           
  6756 ;; *************** function _i2c_inicia_com *****************
  6757 ;; Defined at:
  6758 ;;		line 28 in file "./I2C.h"
  6759 ;; Parameters:    Size  Location     Type
  6760 ;;		None
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;		None
  6763 ;; Return value:  Size  Location     Type
  6764 ;;                  1    wreg      void 
  6765 ;; Registers used:
  6766 ;;		wreg, status,2, status,0, cstack
  6767 ;; Tracked objects:
  6768 ;;		On entry : 0/0
  6769 ;;		On exit  : 0/0
  6770 ;;		Unchanged: 0/0
  6771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6772 ;;      Params:         0       0       0       0       0       0       0       0       0
  6773 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6774 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6775 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6776 ;;Total ram usage:        0 bytes
  6777 ;; Hardware stack levels used:    1
  6778 ;; Hardware stack levels required when called:    2
  6779 ;; This function calls:
  6780 ;;		_i2c_espera
  6781 ;; This function is called by:
  6782 ;;		_escribe_rtc
  6783 ;;		_leer_rtc
  6784 ;;		_escribe_eeprom
  6785 ;;		_leer_eeprom
  6786 ;; This function uses a non-reentrant model
  6787 ;;
  6788                           
  6789                           	psect	text41
  6790  001C02                     __ptext41:
  6791                           	opt callstack 0
  6792  001C02                     _i2c_inicia_com:
  6793                           	opt callstack 25
  6794  001C02                     
  6795                           ;./I2C.h: 29:     i2c_espera();
  6796  001C02  EC70  F00D         	call	_i2c_espera	;wreg free
  6797  001C06                     
  6798                           ;./I2C.h: 30:     SSPCON2bits.SEN = 1;
  6799  001C06  80C5               	bsf	197,0,c	;volatile
  6800  001C08  0012               	return		;funcret
  6801  001C0A                     __end_of_i2c_inicia_com:
  6802                           	opt callstack 0
  6803                           
  6804 ;; *************** function _i2c_envia_dato *****************
  6805 ;; Defined at:
  6806 ;;		line 57 in file "./I2C.h"
  6807 ;; Parameters:    Size  Location     Type
  6808 ;;  dato            1    wreg     unsigned char 
  6809 ;; Auto vars:     Size  Location     Type
  6810 ;;  dato            1    1[COMRAM] unsigned char 
  6811 ;; Return value:  Size  Location     Type
  6812 ;;                  1    wreg      unsigned char 
  6813 ;; Registers used:
  6814 ;;		wreg, status,2, status,0, cstack
  6815 ;; Tracked objects:
  6816 ;;		On entry : 0/0
  6817 ;;		On exit  : 0/0
  6818 ;;		Unchanged: 0/0
  6819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6820 ;;      Params:         0       0       0       0       0       0       0       0       0
  6821 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6822 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6823 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6824 ;;Total ram usage:        1 bytes
  6825 ;; Hardware stack levels used:    1
  6826 ;; Hardware stack levels required when called:    2
  6827 ;; This function calls:
  6828 ;;		_i2c_espera
  6829 ;; This function is called by:
  6830 ;;		_escribe_rtc
  6831 ;;		_leer_rtc
  6832 ;;		_escribe_eeprom
  6833 ;;		_leer_eeprom
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           	psect	text42
  6838  001BE4                     __ptext42:
  6839                           	opt callstack 0
  6840  001BE4                     _i2c_envia_dato:
  6841                           	opt callstack 25
  6842                           
  6843                           ;incstack = 0
  6844                           ;i2c_envia_dato@dato stored from wreg
  6845  001BE4  6E02               	movwf	i2c_envia_dato@dato^0,c
  6846  001BE6                     
  6847                           ;./I2C.h: 58:     i2c_espera();
  6848  001BE6  EC70  F00D         	call	_i2c_espera	;wreg free
  6849  001BEA                     
  6850                           ;./I2C.h: 59:     SSPBUF = dato;
  6851  001BEA  C002  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
  6852  001BEE  0012               	return		;funcret
  6853  001BF0                     __end_of_i2c_envia_dato:
  6854                           	opt callstack 0
  6855                           
  6856 ;; *************** function _i2c_detener *****************
  6857 ;; Defined at:
  6858 ;;		line 46 in file "./I2C.h"
  6859 ;; Parameters:    Size  Location     Type
  6860 ;;		None
  6861 ;; Auto vars:     Size  Location     Type
  6862 ;;		None
  6863 ;; Return value:  Size  Location     Type
  6864 ;;                  1    wreg      void 
  6865 ;; Registers used:
  6866 ;;		wreg, status,2, status,0, cstack
  6867 ;; Tracked objects:
  6868 ;;		On entry : 0/0
  6869 ;;		On exit  : 0/0
  6870 ;;		Unchanged: 0/0
  6871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6872 ;;      Params:         0       0       0       0       0       0       0       0       0
  6873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6874 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6875 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6876 ;;Total ram usage:        0 bytes
  6877 ;; Hardware stack levels used:    1
  6878 ;; Hardware stack levels required when called:    2
  6879 ;; This function calls:
  6880 ;;		_i2c_espera
  6881 ;; This function is called by:
  6882 ;;		_escribe_rtc
  6883 ;;		_leer_rtc
  6884 ;;		_escribe_eeprom
  6885 ;;		_leer_eeprom
  6886 ;; This function uses a non-reentrant model
  6887 ;;
  6888                           
  6889                           	psect	text43
  6890  001C0A                     __ptext43:
  6891                           	opt callstack 0
  6892  001C0A                     _i2c_detener:
  6893                           	opt callstack 25
  6894  001C0A                     
  6895                           ;./I2C.h: 47:     i2c_espera();
  6896  001C0A  EC70  F00D         	call	_i2c_espera	;wreg free
  6897  001C0E                     
  6898                           ;./I2C.h: 48:     SSPCON2bits.PEN = 1;
  6899  001C0E  84C5               	bsf	197,2,c	;volatile
  6900  001C10  0012               	return		;funcret
  6901  001C12                     __end_of_i2c_detener:
  6902                           	opt callstack 0
  6903                           
  6904 ;; *************** function _i2c_espera *****************
  6905 ;; Defined at:
  6906 ;;		line 20 in file "./I2C.h"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;		None
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;		None
  6911 ;; Return value:  Size  Location     Type
  6912 ;;                  1    wreg      void 
  6913 ;; Registers used:
  6914 ;;		wreg, status,2, status,0
  6915 ;; Tracked objects:
  6916 ;;		On entry : 0/0
  6917 ;;		On exit  : 0/0
  6918 ;;		Unchanged: 0/0
  6919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6920 ;;      Params:         0       0       0       0       0       0       0       0       0
  6921 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6922 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6923 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6924 ;;Total ram usage:        1 bytes
  6925 ;; Hardware stack levels used:    1
  6926 ;; Hardware stack levels required when called:    1
  6927 ;; This function calls:
  6928 ;;		Nothing
  6929 ;; This function is called by:
  6930 ;;		_i2c_inicia_com
  6931 ;;		_i2c_reinicia_com
  6932 ;;		_i2c_detener
  6933 ;;		_i2c_envia_dato
  6934 ;;		_i2c_recibe_dato
  6935 ;; This function uses a non-reentrant model
  6936 ;;
  6937                           
  6938                           	psect	text44
  6939  001AE0                     __ptext44:
  6940                           	opt callstack 0
  6941  001AE0                     _i2c_espera:
  6942                           	opt callstack 25
  6943  001AE0                     l2303:
  6944  001AE0  CFC5 F001          	movff	4037,??_i2c_espera	;volatile
  6945  001AE4  0E1F               	movlw	31
  6946  001AE6  1601               	andwf	??_i2c_espera^0,f,c
  6947  001AE8  A4D8               	btfss	status,2,c
  6948  001AEA  EF79  F00D         	goto	u1481
  6949  001AEE  EF7B  F00D         	goto	u1480
  6950  001AF2                     u1481:
  6951  001AF2  EF70  F00D         	goto	l2303
  6952  001AF6                     u1480:
  6953  001AF6  B4C7               	btfsc	199,2,c	;volatile
  6954  001AF8  EF80  F00D         	goto	u1491
  6955  001AFC  EF82  F00D         	goto	u1490
  6956  001B00                     u1491:
  6957  001B00  EF70  F00D         	goto	l2303
  6958  001B04                     u1490:
  6959  001B04  0012               	return		;funcret
  6960  001B06                     __end_of_i2c_espera:
  6961                           	opt callstack 0
  6962                           
  6963 ;; *************** function _inicializarObjetos *****************
  6964 ;; Defined at:
  6965 ;;		line 126 in file "main.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;		None
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;  i               2    6[COMRAM] int 
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  1    wreg      void 
  6972 ;; Registers used:
  6973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6979 ;;      Params:         0       0       0       0       0       0       0       0       0
  6980 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6981 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6982 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6983 ;;Total ram usage:        2 bytes
  6984 ;; Hardware stack levels used:    1
  6985 ;; Hardware stack levels required when called:    2
  6986 ;; This function calls:
  6987 ;;		___wmul
  6988 ;; This function is called by:
  6989 ;;		_main
  6990 ;; This function uses a non-reentrant model
  6991 ;;
  6992                           
  6993                           	psect	text45
  6994  00140C                     __ptext45:
  6995                           	opt callstack 0
  6996  00140C                     _inicializarObjetos:
  6997                           	opt callstack 28
  6998  00140C                     
  6999                           ;main.c: 128:     for (int i = 0; i < 24; i++) {
  7000  00140C  0E00               	movlw	0
  7001  00140E  6E08               	movwf	(inicializarObjetos@i+1)^0,c
  7002  001410  0E00               	movlw	0
  7003  001412  6E07               	movwf	inicializarObjetos@i^0,c
  7004  001414                     l2957:
  7005                           
  7006                           ;main.c: 129:         horarios[i].hora = i;
  7007  001414  C007  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  7008  001418  C008  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  7009  00141C  0E00               	movlw	0
  7010  00141E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7011  001420  0E03               	movlw	3
  7012  001422  6E03               	movwf	___wmul@multiplicand^0,c
  7013  001424  EC83  F00D         	call	___wmul	;wreg free
  7014  001428  0E60               	movlw	low _horarios
  7015  00142A  2401               	addwf	?___wmul^0,w,c
  7016  00142C  6ED9               	movwf	fsr2l,c
  7017  00142E  0E00               	movlw	high _horarios
  7018  001430  2002               	addwfc	(?___wmul+1)^0,w,c
  7019  001432  6EDA               	movwf	fsr2h,c
  7020  001434  C007  FFDF         	movff	inicializarObjetos@i,indf2
  7021                           
  7022                           ;main.c: 130:         horarios[i].regar = 0;
  7023  001438  C007  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  7024  00143C  C008  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  7025  001440  0E00               	movlw	0
  7026  001442  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7027  001444  0E03               	movlw	3
  7028  001446  6E03               	movwf	___wmul@multiplicand^0,c
  7029  001448  EC83  F00D         	call	___wmul	;wreg free
  7030  00144C  0E61               	movlw	low (_horarios+1)
  7031  00144E  2401               	addwf	?___wmul^0,w,c
  7032  001450  6ED9               	movwf	fsr2l,c
  7033  001452  0E00               	movlw	high (_horarios+1)
  7034  001454  2002               	addwfc	(?___wmul+1)^0,w,c
  7035  001456  6EDA               	movwf	fsr2h,c
  7036  001458  0E00               	movlw	0
  7037  00145A  6EDF               	movwf	indf2,c
  7038                           
  7039                           ;main.c: 131:         horarios[i].tiempoRegar = 15;
  7040  00145C  C007  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  7041  001460  C008  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  7042  001464  0E00               	movlw	0
  7043  001466  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7044  001468  0E03               	movlw	3
  7045  00146A  6E03               	movwf	___wmul@multiplicand^0,c
  7046  00146C  EC83  F00D         	call	___wmul	;wreg free
  7047  001470  0E62               	movlw	low (_horarios+2)
  7048  001472  2401               	addwf	?___wmul^0,w,c
  7049  001474  6ED9               	movwf	fsr2l,c
  7050  001476  0E00               	movlw	high (_horarios+2)
  7051  001478  2002               	addwfc	(?___wmul+1)^0,w,c
  7052  00147A  6EDA               	movwf	fsr2h,c
  7053  00147C  0E0F               	movlw	15
  7054  00147E  6EDF               	movwf	indf2,c
  7055  001480                     
  7056                           ;main.c: 132:     }
  7057  001480  4A07               	infsnz	inicializarObjetos@i^0,f,c
  7058  001482  2A08               	incf	(inicializarObjetos@i+1)^0,f,c
  7059  001484  BE08               	btfsc	(inicializarObjetos@i+1)^0,7,c
  7060  001486  EF4E  F00A         	goto	u2301
  7061  00148A  5008               	movf	(inicializarObjetos@i+1)^0,w,c
  7062  00148C  E109               	bnz	u2300
  7063  00148E  0E18               	movlw	24
  7064  001490  5C07               	subwf	inicializarObjetos@i^0,w,c
  7065  001492  A0D8               	btfss	status,0,c
  7066  001494  EF4E  F00A         	goto	u2301
  7067  001498  EF50  F00A         	goto	u2300
  7068  00149C                     u2301:
  7069  00149C  EF0A  F00A         	goto	l2957
  7070  0014A0                     u2300:
  7071  0014A0  0012               	return		;funcret
  7072  0014A2                     __end_of_inicializarObjetos:
  7073                           	opt callstack 0
  7074                           
  7075 ;; *************** function ___wmul *****************
  7076 ;; Defined at:
  7077 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  7078 ;; Parameters:    Size  Location     Type
  7079 ;;  multiplier      2    0[COMRAM] unsigned int 
  7080 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7081 ;; Auto vars:     Size  Location     Type
  7082 ;;  product         2    4[COMRAM] unsigned int 
  7083 ;; Return value:  Size  Location     Type
  7084 ;;                  2    0[COMRAM] unsigned int 
  7085 ;; Registers used:
  7086 ;;		wreg, status,2, status,0, prodl, prodh
  7087 ;; Tracked objects:
  7088 ;;		On entry : 0/0
  7089 ;;		On exit  : 0/0
  7090 ;;		Unchanged: 0/0
  7091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7092 ;;      Params:         4       0       0       0       0       0       0       0       0
  7093 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7094 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7095 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7096 ;;Total ram usage:        6 bytes
  7097 ;; Hardware stack levels used:    1
  7098 ;; Hardware stack levels required when called:    1
  7099 ;; This function calls:
  7100 ;;		Nothing
  7101 ;; This function is called by:
  7102 ;;		_inicializarObjetos
  7103 ;;		_escribeHorariosMemoria
  7104 ;;		_leeHorariosMemoria
  7105 ;;		_dameDatosSistema
  7106 ;; This function uses a non-reentrant model
  7107 ;;
  7108                           
  7109                           	psect	text46
  7110  001B06                     __ptext46:
  7111                           	opt callstack 0
  7112  001B06                     ___wmul:
  7113                           	opt callstack 26
  7114  001B06  5001               	movf	___wmul@multiplier^0,w,c
  7115  001B08  0203               	mulwf	___wmul@multiplicand^0,c
  7116  001B0A  CFF3 F005          	movff	prodl,___wmul@product
  7117  001B0E  CFF4 F006          	movff	prodh,___wmul@product+1
  7118  001B12  5001               	movf	___wmul@multiplier^0,w,c
  7119  001B14  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7120  001B16  50F3               	movf	243,w,c
  7121  001B18  2606               	addwf	(___wmul@product+1)^0,f,c
  7122  001B1A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7123  001B1C  0203               	mulwf	___wmul@multiplicand^0,c
  7124  001B1E  50F3               	movf	243,w,c
  7125  001B20  2606               	addwf	(___wmul@product+1)^0,f,c
  7126  001B22  C005  F001         	movff	___wmul@product,?___wmul
  7127  001B26  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7128  001B2A  0012               	return		;funcret
  7129  001B2C                     __end_of___wmul:
  7130                           	opt callstack 0
  7131                           
  7132 ;; *************** function _i2c_iniciar *****************
  7133 ;; Defined at:
  7134 ;;		line 4 in file "./I2C.h"
  7135 ;; Parameters:    Size  Location     Type
  7136 ;;		None
  7137 ;; Auto vars:     Size  Location     Type
  7138 ;;		None
  7139 ;; Return value:  Size  Location     Type
  7140 ;;                  1    wreg      void 
  7141 ;; Registers used:
  7142 ;;		wreg, status,2
  7143 ;; Tracked objects:
  7144 ;;		On entry : 0/0
  7145 ;;		On exit  : 0/0
  7146 ;;		Unchanged: 0/0
  7147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7148 ;;      Params:         0       0       0       0       0       0       0       0       0
  7149 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7150 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7151 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7152 ;;Total ram usage:        0 bytes
  7153 ;; Hardware stack levels used:    1
  7154 ;; Hardware stack levels required when called:    1
  7155 ;; This function calls:
  7156 ;;		Nothing
  7157 ;; This function is called by:
  7158 ;;		_main
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162                           	psect	text47
  7163  001BCE                     __ptext47:
  7164                           	opt callstack 0
  7165  001BCE                     _i2c_iniciar:
  7166                           	opt callstack 29
  7167  001BCE                     
  7168                           ;./I2C.h: 5:     TRISBbits.RB0 = 1;
  7169  001BCE  8093               	bsf	147,0,c	;volatile
  7170                           
  7171                           ;./I2C.h: 6:     TRISBbits.RB1 = 1;
  7172  001BD0  8293               	bsf	147,1,c	;volatile
  7173  001BD2                     
  7174                           ;./I2C.h: 7:     SSPSTAT = 0b10000000;
  7175  001BD2  0E80               	movlw	128
  7176  001BD4  6EC7               	movwf	199,c	;volatile
  7177                           
  7178                           ;./I2C.h: 8:     SSPCON1 = 0b00101000;
  7179  001BD6  0E28               	movlw	40
  7180  001BD8  6EC6               	movwf	198,c	;volatile
  7181                           
  7182                           ;./I2C.h: 9:     SSPCON2 = 0b00000000;
  7183  001BDA  0E00               	movlw	0
  7184  001BDC  6EC5               	movwf	197,c	;volatile
  7185                           
  7186                           ;./I2C.h: 10:     SSPADD = 9;
  7187  001BDE  0E09               	movlw	9
  7188  001BE0  6EC8               	movwf	200,c	;volatile
  7189  001BE2  0012               	return		;funcret
  7190  001BE4                     __end_of_i2c_iniciar:
  7191                           	opt callstack 0
  7192                           
  7193 ;; *************** function _configurarAdc *****************
  7194 ;; Defined at:
  7195 ;;		line 107 in file "main.c"
  7196 ;; Parameters:    Size  Location     Type
  7197 ;;		None
  7198 ;; Auto vars:     Size  Location     Type
  7199 ;;		None
  7200 ;; Return value:  Size  Location     Type
  7201 ;;                  1    wreg      void 
  7202 ;; Registers used:
  7203 ;;		wreg, status,2
  7204 ;; Tracked objects:
  7205 ;;		On entry : 0/0
  7206 ;;		On exit  : 0/0
  7207 ;;		Unchanged: 0/0
  7208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7209 ;;      Params:         0       0       0       0       0       0       0       0       0
  7210 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7211 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7212 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7213 ;;Total ram usage:        0 bytes
  7214 ;; Hardware stack levels used:    1
  7215 ;; Hardware stack levels required when called:    1
  7216 ;; This function calls:
  7217 ;;		Nothing
  7218 ;; This function is called by:
  7219 ;;		_main
  7220 ;; This function uses a non-reentrant model
  7221 ;;
  7222                           
  7223                           	psect	text48
  7224  001B9E                     __ptext48:
  7225                           	opt callstack 0
  7226  001B9E                     _configurarAdc:
  7227                           	opt callstack 29
  7228  001B9E                     
  7229                           ;main.c: 108:     ADCON1 = 0b00000001;
  7230  001B9E  0E01               	movlw	1
  7231  001BA0  6EC1               	movwf	193,c	;volatile
  7232                           
  7233                           ;main.c: 109:     ADCON2 = 0b10100101;
  7234  001BA2  0EA5               	movlw	165
  7235  001BA4  6EC0               	movwf	192,c	;volatile
  7236                           
  7237                           ;main.c: 110:     TRISA = 1;
  7238  001BA6  0E01               	movlw	1
  7239  001BA8  6E92               	movwf	146,c	;volatile
  7240                           
  7241                           ;main.c: 111:     TRISE = 1;
  7242  001BAA  0E01               	movlw	1
  7243  001BAC  6E96               	movwf	150,c	;volatile
  7244                           
  7245                           ;main.c: 113:     PORTA = 0;
  7246  001BAE  0E00               	movlw	0
  7247  001BB0  6E80               	movwf	128,c	;volatile
  7248                           
  7249                           ;main.c: 114:     PORTE = 0;
  7250  001BB2  0E00               	movlw	0
  7251  001BB4  6E84               	movwf	132,c	;volatile
  7252  001BB6  0012               	return		;funcret
  7253  001BB8                     __end_of_configurarAdc:
  7254                           	opt callstack 0
  7255                           
  7256 ;; *************** function _UART_init *****************
  7257 ;; Defined at:
  7258 ;;		line 12 in file "./UART.h"
  7259 ;; Parameters:    Size  Location     Type
  7260 ;;  BAUD            4   14[COMRAM] long 
  7261 ;; Auto vars:     Size  Location     Type
  7262 ;;  frecuenciaCr    4    0        long 
  7263 ;; Return value:  Size  Location     Type
  7264 ;;                  1    wreg      void 
  7265 ;; Registers used:
  7266 ;;		wreg, status,2, status,0, cstack
  7267 ;; Tracked objects:
  7268 ;;		On entry : 0/0
  7269 ;;		On exit  : 0/0
  7270 ;;		Unchanged: 0/0
  7271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7272 ;;      Params:         4       0       0       0       0       0       0       0       0
  7273 ;;      Locals:         8       0       0       0       0       0       0       0       0
  7274 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7275 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7276 ;;Total ram usage:       12 bytes
  7277 ;; Hardware stack levels used:    1
  7278 ;; Hardware stack levels required when called:    2
  7279 ;; This function calls:
  7280 ;;		___aldiv
  7281 ;; This function is called by:
  7282 ;;		_main
  7283 ;; This function uses a non-reentrant model
  7284 ;;
  7285                           
  7286                           	psect	text49
  7287  00151C                     __ptext49:
  7288                           	opt callstack 0
  7289  00151C                     _UART_init:
  7290                           	opt callstack 28
  7291  00151C                     
  7292                           ;./UART.h: 14:     TRISCbits.TRISC6 = 0;
  7293  00151C  9C94               	bcf	148,6,c	;volatile
  7294  00151E                     
  7295                           ;./UART.h: 15:     TRISCbits.TRISC7 = 1;
  7296  00151E  8E94               	bsf	148,7,c	;volatile
  7297  001520                     
  7298                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  7299  001520  0E10               	movlw	16
  7300  001522  6E05               	movwf	___aldiv@divisor^0,c
  7301  001524  0E00               	movlw	0
  7302  001526  6E06               	movwf	(___aldiv@divisor+1)^0,c
  7303  001528  0E00               	movlw	0
  7304  00152A  6E07               	movwf	(___aldiv@divisor+2)^0,c
  7305  00152C  0E00               	movlw	0
  7306  00152E  6E08               	movwf	(___aldiv@divisor+3)^0,c
  7307  001530  0E00               	movlw	0
  7308  001532  6E01               	movwf	___aldiv@dividend^0,c
  7309  001534  0E09               	movlw	9
  7310  001536  6E02               	movwf	(___aldiv@dividend+1)^0,c
  7311  001538  0E3D               	movlw	61
  7312  00153A  6E03               	movwf	(___aldiv@dividend+2)^0,c
  7313  00153C  0E00               	movlw	0
  7314  00153E  6E04               	movwf	(___aldiv@dividend+3)^0,c
  7315  001540  EC7F  F006         	call	___aldiv	;wreg free
  7316  001544  C001  F017         	movff	?___aldiv,_UART_init$1618
  7317  001548  C002  F018         	movff	?___aldiv+1,_UART_init$1618+1
  7318  00154C  C003  F019         	movff	?___aldiv+2,_UART_init$1618+2
  7319  001550  C004  F01A         	movff	?___aldiv+3,_UART_init$1618+3
  7320  001554                     
  7321                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  7322  001554  C017  F001         	movff	_UART_init$1618,___aldiv@dividend
  7323  001558  C018  F002         	movff	_UART_init$1618+1,___aldiv@dividend+1
  7324  00155C  C019  F003         	movff	_UART_init$1618+2,___aldiv@dividend+2
  7325  001560  C01A  F004         	movff	_UART_init$1618+3,___aldiv@dividend+3
  7326  001564  C00F  F005         	movff	UART_init@BAUD,___aldiv@divisor
  7327  001568  C010  F006         	movff	UART_init@BAUD+1,___aldiv@divisor+1
  7328  00156C  C011  F007         	movff	UART_init@BAUD+2,___aldiv@divisor+2
  7329  001570  C012  F008         	movff	UART_init@BAUD+3,___aldiv@divisor+3
  7330  001574  EC7F  F006         	call	___aldiv	;wreg free
  7331  001578  0401               	decf	?___aldiv^0,w,c
  7332  00157A  6EAF               	movwf	175,c	;volatile
  7333  00157C                     
  7334                           ;./UART.h: 21:     TXSTAbits.BRGH = 1;
  7335  00157C  84AC               	bsf	172,2,c	;volatile
  7336  00157E                     
  7337                           ;./UART.h: 22:     TXSTAbits.SYNC = 0;
  7338  00157E  98AC               	bcf	172,4,c	;volatile
  7339  001580                     
  7340                           ;./UART.h: 23:     RCSTAbits.SPEN = 1;
  7341  001580  8EAB               	bsf	171,7,c	;volatile
  7342  001582                     
  7343                           ;./UART.h: 26:     TXSTAbits.TX9 = 0;
  7344  001582  9CAC               	bcf	172,6,c	;volatile
  7345  001584                     
  7346                           ;./UART.h: 27:     TXSTAbits.TXEN = 1;
  7347  001584  8AAC               	bsf	172,5,c	;volatile
  7348  001586                     
  7349                           ;./UART.h: 30:     RCSTAbits.RC9 = 0;
  7350  001586  9CAB               	bcf	171,6,c	;volatile
  7351  001588                     
  7352                           ;./UART.h: 31:     RCSTAbits.CREN = 1;
  7353  001588  88AB               	bsf	171,4,c	;volatile
  7354  00158A  0012               	return		;funcret
  7355  00158C                     __end_of_UART_init:
  7356                           	opt callstack 0
  7357                           
  7358 ;; *************** function ___aldiv *****************
  7359 ;; Defined at:
  7360 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;  dividend        4    0[COMRAM] long 
  7363 ;;  divisor         4    4[COMRAM] long 
  7364 ;; Auto vars:     Size  Location     Type
  7365 ;;  quotient        4   10[COMRAM] long 
  7366 ;;  sign            1    9[COMRAM] unsigned char 
  7367 ;;  counter         1    8[COMRAM] unsigned char 
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  4    0[COMRAM] long 
  7370 ;; Registers used:
  7371 ;;		wreg, status,2, status,0
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7377 ;;      Params:         8       0       0       0       0       0       0       0       0
  7378 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7379 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7380 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7381 ;;Total ram usage:       14 bytes
  7382 ;; Hardware stack levels used:    1
  7383 ;; Hardware stack levels required when called:    1
  7384 ;; This function calls:
  7385 ;;		Nothing
  7386 ;; This function is called by:
  7387 ;;		_UART_init
  7388 ;; This function uses a non-reentrant model
  7389 ;;
  7390                           
  7391                           	psect	text50
  7392  000CFE                     __ptext50:
  7393                           	opt callstack 0
  7394  000CFE                     ___aldiv:
  7395                           	opt callstack 28
  7396  000CFE  0E00               	movlw	0
  7397  000D00  6E0A               	movwf	___aldiv@sign^0,c
  7398  000D02  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  7399  000D04  EF88  F006         	goto	u2240
  7400  000D08  EF86  F006         	goto	u2241
  7401  000D0C                     u2241:
  7402  000D0C  EF92  F006         	goto	l2885
  7403  000D10                     u2240:
  7404  000D10  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  7405  000D12  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  7406  000D14  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  7407  000D16  6C05               	negf	___aldiv@divisor^0,c
  7408  000D18  0E00               	movlw	0
  7409  000D1A  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  7410  000D1C  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  7411  000D1E  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  7412  000D20  0E01               	movlw	1
  7413  000D22  6E0A               	movwf	___aldiv@sign^0,c
  7414  000D24                     l2885:
  7415  000D24  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  7416  000D26  EF99  F006         	goto	u2250
  7417  000D2A  EF97  F006         	goto	u2251
  7418  000D2E                     u2251:
  7419  000D2E  EFA3  F006         	goto	l2891
  7420  000D32                     u2250:
  7421  000D32  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  7422  000D34  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  7423  000D36  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  7424  000D38  6C01               	negf	___aldiv@dividend^0,c
  7425  000D3A  0E00               	movlw	0
  7426  000D3C  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  7427  000D3E  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  7428  000D40  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  7429  000D42  0E01               	movlw	1
  7430  000D44  1A0A               	xorwf	___aldiv@sign^0,f,c
  7431  000D46                     l2891:
  7432  000D46  0E00               	movlw	0
  7433  000D48  6E0B               	movwf	___aldiv@quotient^0,c
  7434  000D4A  0E00               	movlw	0
  7435  000D4C  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  7436  000D4E  0E00               	movlw	0
  7437  000D50  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  7438  000D52  0E00               	movlw	0
  7439  000D54  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  7440  000D56  5005               	movf	___aldiv@divisor^0,w,c
  7441  000D58  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  7442  000D5A  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  7443  000D5C  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  7444  000D5E  B4D8               	btfsc	status,2,c
  7445  000D60  EFB4  F006         	goto	u2261
  7446  000D64  EFB6  F006         	goto	u2260
  7447  000D68                     u2261:
  7448  000D68  EFEC  F006         	goto	l2913
  7449  000D6C                     u2260:
  7450  000D6C  0E01               	movlw	1
  7451  000D6E  6E09               	movwf	___aldiv@counter^0,c
  7452  000D70  EFC0  F006         	goto	l2899
  7453  000D74                     l2897:
  7454  000D74  90D8               	bcf	status,0,c
  7455  000D76  3605               	rlcf	___aldiv@divisor^0,f,c
  7456  000D78  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  7457  000D7A  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  7458  000D7C  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  7459  000D7E  2A09               	incf	___aldiv@counter^0,f,c
  7460  000D80                     l2899:
  7461  000D80  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  7462  000D82  EFC5  F006         	goto	u2271
  7463  000D86  EFC7  F006         	goto	u2270
  7464  000D8A                     u2271:
  7465  000D8A  EFBA  F006         	goto	l2897
  7466  000D8E                     u2270:
  7467  000D8E                     l2901:
  7468  000D8E  90D8               	bcf	status,0,c
  7469  000D90  360B               	rlcf	___aldiv@quotient^0,f,c
  7470  000D92  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  7471  000D94  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  7472  000D96  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  7473  000D98  5005               	movf	___aldiv@divisor^0,w,c
  7474  000D9A  5C01               	subwf	___aldiv@dividend^0,w,c
  7475  000D9C  5006               	movf	(___aldiv@divisor+1)^0,w,c
  7476  000D9E  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  7477  000DA0  5007               	movf	(___aldiv@divisor+2)^0,w,c
  7478  000DA2  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  7479  000DA4  5008               	movf	(___aldiv@divisor+3)^0,w,c
  7480  000DA6  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  7481  000DA8  A0D8               	btfss	status,0,c
  7482  000DAA  EFD9  F006         	goto	u2281
  7483  000DAE  EFDB  F006         	goto	u2280
  7484  000DB2                     u2281:
  7485  000DB2  EFE4  F006         	goto	l2909
  7486  000DB6                     u2280:
  7487  000DB6  5005               	movf	___aldiv@divisor^0,w,c
  7488  000DB8  5E01               	subwf	___aldiv@dividend^0,f,c
  7489  000DBA  5006               	movf	(___aldiv@divisor+1)^0,w,c
  7490  000DBC  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  7491  000DBE  5007               	movf	(___aldiv@divisor+2)^0,w,c
  7492  000DC0  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  7493  000DC2  5008               	movf	(___aldiv@divisor+3)^0,w,c
  7494  000DC4  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  7495  000DC6  800B               	bsf	___aldiv@quotient^0,0,c
  7496  000DC8                     l2909:
  7497  000DC8  90D8               	bcf	status,0,c
  7498  000DCA  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  7499  000DCC  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  7500  000DCE  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  7501  000DD0  3205               	rrcf	___aldiv@divisor^0,f,c
  7502  000DD2  2E09               	decfsz	___aldiv@counter^0,f,c
  7503  000DD4  EFC7  F006         	goto	l2901
  7504  000DD8                     l2913:
  7505  000DD8  500A               	movf	___aldiv@sign^0,w,c
  7506  000DDA  B4D8               	btfsc	status,2,c
  7507  000DDC  EFF2  F006         	goto	u2291
  7508  000DE0  EFF4  F006         	goto	u2290
  7509  000DE4                     u2291:
  7510  000DE4  EFFC  F006         	goto	l2917
  7511  000DE8                     u2290:
  7512  000DE8  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  7513  000DEA  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  7514  000DEC  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  7515  000DEE  6C0B               	negf	___aldiv@quotient^0,c
  7516  000DF0  0E00               	movlw	0
  7517  000DF2  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  7518  000DF4  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  7519  000DF6  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  7520  000DF8                     l2917:
  7521  000DF8  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  7522  000DFC  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  7523  000E00  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  7524  000E04  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  7525  000E08  0012               	return		;funcret
  7526  000E0A                     __end_of___aldiv:
  7527                           	opt callstack 0
  7528                           
  7529 ;; *************** function _desbordamiento *****************
  7530 ;; Defined at:
  7531 ;;		line 72 in file "main.c"
  7532 ;; Parameters:    Size  Location     Type
  7533 ;;		None
  7534 ;; Auto vars:     Size  Location     Type
  7535 ;;		None
  7536 ;; Return value:  Size  Location     Type
  7537 ;;                  1    wreg      void 
  7538 ;; Registers used:
  7539 ;;		wreg, status,2, status,0
  7540 ;; Tracked objects:
  7541 ;;		On entry : 0/0
  7542 ;;		On exit  : 0/0
  7543 ;;		Unchanged: 0/0
  7544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7545 ;;      Params:         0       0       0       0       0       0       0       0       0
  7546 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7547 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7548 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7549 ;;Total ram usage:        0 bytes
  7550 ;; Hardware stack levels used:    1
  7551 ;; This function calls:
  7552 ;;		Nothing
  7553 ;; This function is called by:
  7554 ;;		Interrupt level 2
  7555 ;; This function uses a non-reentrant model
  7556 ;;
  7557                           
  7558                           	psect	intcode
  7559  000008                     __pintcode:
  7560                           	opt callstack 0
  7561  000008                     _desbordamiento:
  7562                           	opt callstack 20
  7563                           
  7564                           ;incstack = 0
  7565  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7566  00000A  EDFA  F00A         	call	int_func,f	;refresh shadow registers
  7567                           
  7568                           	psect	intcode_body
  7569  0015F4                     __pintcode_body:
  7570                           	opt callstack 20
  7571  0015F4                     int_func:
  7572                           	opt callstack 20
  7573  0015F4  0006               	pop		; remove dummy address from shadow register refresh
  7574  0015F6                     
  7575                           ;main.c: 74:     if (INTCONbits.TMR0IF) {
  7576  0015F6  A4F2               	btfss	242,2,c	;volatile
  7577  0015F8  EF00  F00B         	goto	i2u238_41
  7578  0015FC  EF02  F00B         	goto	i2u238_40
  7579  001600                     i2u238_41:
  7580  001600  EF1F  F00B         	goto	i2l3059
  7581  001604                     i2u238_40:
  7582  001604                     
  7583                           ;main.c: 76:         if (esperandoDatos) {
  7584  001604  505E               	movf	_esperandoDatos^0,w,c
  7585  001606  B4D8               	btfsc	status,2,c
  7586  001608  EF08  F00B         	goto	i2u239_41
  7587  00160C  EF0A  F00B         	goto	i2u239_40
  7588  001610                     i2u239_41:
  7589  001610  EF17  F00B         	goto	i2l3055
  7590  001614                     i2u239_40:
  7591  001614                     
  7592                           ;main.c: 78:             tiempoInactividadTrans++;
  7593  001614  0100               	movlb	0	; () banked
  7594  001616  2BCC               	incf	_tiempoInactividadTrans& (0+255),f,b
  7595  001618                     
  7596                           ; BSR set to: 0
  7597                           ;main.c: 80:             if (tiempoInactividadTrans == 2)
  7598  001618  0E02               	movlw	2
  7599  00161A  19CC               	xorwf	_tiempoInactividadTrans& (0+255),w,b
  7600  00161C  A4D8               	btfss	status,2,c
  7601  00161E  EF13  F00B         	goto	i2u240_41
  7602  001622  EF15  F00B         	goto	i2u240_40
  7603  001626                     i2u240_41:
  7604  001626  EF17  F00B         	goto	i2l3055
  7605  00162A                     i2u240_40:
  7606  00162A                     
  7607                           ; BSR set to: 0
  7608                           ;main.c: 81:                 esperaDatoConcluida = 1;
  7609  00162A  0E01               	movlw	1
  7610  00162C  6FCA               	movwf	_esperaDatoConcluida& (0+255),b
  7611  00162E                     i2l3055:
  7612                           
  7613                           ;main.c: 86:         INTCONbits.TMR0IF = 0;
  7614  00162E  94F2               	bcf	242,2,c	;volatile
  7615  001630                     
  7616                           ;main.c: 87:         TMR0 = VALOR_TIMER0;
  7617  001630  C0F2  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  7618  001634  C0F3  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  7619                           
  7620                           ;main.c: 88:         overflowTimer = 1;
  7621  001638  0E01               	movlw	1
  7622  00163A  0100               	movlb	0	; () banked
  7623  00163C  6FC5               	movwf	_overflowTimer& (0+255),b
  7624  00163E                     i2l3059:
  7625                           
  7626                           ;main.c: 92:     if (PIR1bits.RCIF) {
  7627  00163E  AA9E               	btfss	158,5,c	;volatile
  7628  001640  EF24  F00B         	goto	i2u241_41
  7629  001644  EF26  F00B         	goto	i2u241_40
  7630  001648                     i2u241_41:
  7631  001648  EF2B  F00B         	goto	i2l172
  7632  00164C                     i2u241_40:
  7633  00164C                     
  7634                           ;main.c: 94:         byteUart = RCREG;
  7635  00164C  CFAE F0CB          	movff	4014,_byteUart	;volatile
  7636  001650                     
  7637                           ;main.c: 95:         datoRecibido = 1;
  7638  001650  0E01               	movlw	1
  7639  001652  0100               	movlb	0	; () banked
  7640  001654  6FC6               	movwf	_datoRecibido& (0+255),b
  7641  001656                     i2l172:
  7642  001656  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7643  001658  0011               	retfie		f
  7644  00165A                     __end_of_desbordamiento:
  7645                           	opt callstack 0
  7646                           
  7647                           	psect	rparam
  7648  0000                     
  7649                           	psect	temp
  7650  00005F                     btemp:
  7651                           	opt callstack 0
  7652  00005F                     	ds	1
  7653  0000                     int$flags	set	btemp
  7654  0000                     wtemp8	set	btemp+1
  7655  0000                     ttemp5	set	btemp+1
  7656  0000                     ttemp6	set	btemp+4
  7657  0000                     ttemp7	set	btemp+8
  7658                           tosu	equ	0xFFF
  7659                           tosh	equ	0xFFE
  7660                           tosl	equ	0xFFD
  7661                           stkptr	equ	0xFFC
  7662                           pclatu	equ	0xFFB
  7663                           pclath	equ	0xFFA
  7664                           pcl	equ	0xFF9
  7665                           tblptru	equ	0xFF8
  7666                           tblptrh	equ	0xFF7
  7667                           tblptrl	equ	0xFF6
  7668                           tablat	equ	0xFF5
  7669                           prodh	equ	0xFF4
  7670                           prodl	equ	0xFF3
  7671                           indf0	equ	0xFEF
  7672                           postinc0	equ	0xFEE
  7673                           postdec0	equ	0xFED
  7674                           preinc0	equ	0xFEC
  7675                           plusw0	equ	0xFEB
  7676                           fsr0h	equ	0xFEA
  7677                           fsr0l	equ	0xFE9
  7678                           wreg	equ	0xFE8
  7679                           indf1	equ	0xFE7
  7680                           postinc1	equ	0xFE6
  7681                           postdec1	equ	0xFE5
  7682                           preinc1	equ	0xFE4
  7683                           plusw1	equ	0xFE3
  7684                           fsr1h	equ	0xFE2
  7685                           fsr1l	equ	0xFE1
  7686                           bsr	equ	0xFE0
  7687                           indf2	equ	0xFDF
  7688                           postinc2	equ	0xFDE
  7689                           postdec2	equ	0xFDD
  7690                           preinc2	equ	0xFDC
  7691                           plusw2	equ	0xFDB
  7692                           fsr2h	equ	0xFDA
  7693                           fsr2l	equ	0xFD9
  7694                           status	equ	0xFD8


Data Sizes:
    Strings     818
    Constant    0
    Data        4
    BSS         142
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160     37     150
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_25(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 15
		 -> dameDatosSistema@buffer(BANK0[15]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 15
		 -> dameDatosSistema@buffer(BANK0[15]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1312_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 15
		 -> dameDatosSistema@buffer(BANK0[15]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 15
		 -> dameDatosSistema@buffer(BANK0[15]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_25(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_25(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 72
		 -> dameDatosSistema@buffer(BANK0[15]), STR_24(CODE[50]), STR_23(CODE[42]), STR_22(CODE[3]), 
		 -> STR_21(CODE[14]), STR_20(CODE[32]), STR_19(CODE[49]), STR_18(CODE[37]), 
		 -> STR_17(CODE[27]), STR_16(CODE[37]), STR_15(CODE[32]), STR_14(CODE[28]), 
		 -> STR_13(CODE[38]), STR_12(CODE[37]), STR_11(CODE[72]), STR_10(CODE[51]), 
		 -> STR_9(CODE[23]), STR_8(CODE[26]), STR_7(CODE[55]), STR_6(CODE[51]), 
		 -> STR_5(CODE[25]), STR_4(CODE[37]), STR_3(CODE[31]), STR_2(CODE[43]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_sistemaPrincipal
    _sistemaRegado->_encenderBombas
    _lecturaAnalogaSensores->_dameHumedadSuelo
    _encenderBombas->_estaSeco
    _dameHoraActual->_leer_rtc
    _leer_rtc->_i2c_envia_dato
    _leer_rtc->_i2c_recibe_dato
    _sistemaPrincipal->_dameDatosSistema
    _setTiempoRegar->_escribeHorariosMemoria
    _mostrarMenu->_UART_printf
    _fijaHoraRtc->_setRtc
    _setRtc->_escribe_rtc
    _escribe_rtc->_i2c_envia_dato
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _asignarHorarios->_escribeHorariosMemoria
    _escribeHorariosMemoria->_escribe_eeprom
    _escribe_eeprom->___wmul
    _UART_printf->_UART_write
    _restablecerDatosSensor->_constructorSensor
    _leeHorariosMemoria->___wmul
    _leeHorariosMemoria->_leer_eeprom
    _leer_eeprom->_i2c_envia_dato
    _leer_eeprom->_i2c_recibe_dato
    _i2c_reinicia_com->_i2c_espera
    _i2c_recibe_dato->_i2c_espera
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera
    _inicializarObjetos->___wmul
    _UART_init->___aldiv

Critical Paths under _desbordamiento in COMRAM

    None.

Critical Paths under _main in BANK0

    _sistemaPrincipal->_dameDatosSistema
    _dameDatosSistema->_sprintf

Critical Paths under _desbordamiento in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _desbordamiento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _desbordamiento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _desbordamiento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _desbordamiento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _desbordamiento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _desbordamiento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _desbordamiento in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   37129
                          _UART_init
                      _configurarAdc
                        _i2c_iniciar
                 _inicializarObjetos
                 _leeHorariosMemoria
                        _mostrarMenu
             _restablecerDatosSensor
                   _sistemaPrincipal
                      _sistemaRegado
 ---------------------------------------------------------------------------------
 (1) _sistemaRegado                                        0     0      0    1198
                     _dameHoraActual
                     _encenderBombas
                          _horaRegar
             _lecturaAnalogaSensores
 ---------------------------------------------------------------------------------
 (2) _lecturaAnalogaSensores                               3     3      0     112
                                              2 COMRAM     3     3      0
                   _dameHumedadSuelo
 ---------------------------------------------------------------------------------
 (3) _dameHumedadSuelo                                     2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _horaRegar                                            3     1      2       0
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _encenderBombas                                       5     5      0     905
                                              2 COMRAM     5     5      0
                           _estaSeco
 ---------------------------------------------------------------------------------
 (3) _estaSeco                                             2     0      2     630
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _dameHoraActual                                       0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (3) _leer_rtc                                             2     2      0      90
                                              2 COMRAM     2     2      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (3) _convertirDato                                        3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _sistemaPrincipal                                     3     3      0   28023
                                             90 COMRAM     3     3      0
                        _UART_printf
                    _asignarHorarios
                   _dameDatosSistema
                        _fijaHoraRtc
                        _mostrarMenu
                     _setTiempoRegar
 ---------------------------------------------------------------------------------
 (2) _setTiempoRegar                                       8     8      0    5229
                                             14 COMRAM     8     8      0
                        _UART_printf
                          _UART_read
                         _UART_write
             _escribeHorariosMemoria
 ---------------------------------------------------------------------------------
 (2) _mostrarMenu                                          0     0      0    1967
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _fijaHoraRtc                                          1     1      0    3110
                                             11 COMRAM     1     1      0
                        _UART_printf
                        _escribe_rtc
                             _setRtc
 ---------------------------------------------------------------------------------
 (3) _setRtc                                               7     7      0     696
                                              4 COMRAM     7     7      0
                          _UART_read
                         _UART_write
                        _escribe_rtc
 ---------------------------------------------------------------------------------
 (4) _escribe_rtc                                          2     1      1     446
                                              2 COMRAM     2     1      1
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (2) _dameDatosSistema                                    20    20      0   10660
                                             87 COMRAM     3     3      0
                                             20 BANK0     17    17      0
                        _UART_printf
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             20    10     10    6456
                                              0 BANK0     20    10     10
                             ___wmul (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _asignarHorarios                                      5     5      0    5068
                                             14 COMRAM     5     5      0
                        _UART_printf
                          _UART_read
                         _UART_write
             _escribeHorariosMemoria
 ---------------------------------------------------------------------------------
 (3) _escribeHorariosMemoria                               4     4      0    2801
                                             10 COMRAM     4     4      0
                             ___wmul
                     _escribe_eeprom
 ---------------------------------------------------------------------------------
 (4) _escribe_eeprom                                       4     1      3     544
                                              6 COMRAM     4     1      3
                             ___wmul (ARG)
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (3) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2    1967
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (3) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _restablecerDatosSensor                               2     2      0     387
                                              4 COMRAM     2     2      0
                  _constructorSensor
 ---------------------------------------------------------------------------------
 (2) _constructorSensor                                    4     0      4     297
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _leeHorariosMemoria                                   4     4      0    2597
                                              6 COMRAM     4     4      0
                             ___wmul
                        _leer_eeprom
 ---------------------------------------------------------------------------------
 (2) _leer_eeprom                                          4     2      2     340
                                              2 COMRAM     4     2      2
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_recibe_dato                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializarObjetos                                   2     2      0    2209
                                              6 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2075
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     748
                                             14 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _desbordamiento                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
   _configurarAdc
   _i2c_iniciar
   _inicializarObjetos
     ___wmul
   _leeHorariosMemoria
     ___wmul
     _leer_eeprom
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
       _i2c_recibe_dato
         _i2c_espera
       _i2c_reinicia_com
         _i2c_espera
   _mostrarMenu
     _UART_printf
       _UART_write
   _restablecerDatosSensor
     _constructorSensor
   _sistemaPrincipal
     _UART_printf
       _UART_write
     _asignarHorarios
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
     _dameDatosSistema
       _UART_printf
         _UART_write
       ___wmul
       _sprintf
         ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _fijaHoraRtc
       _UART_printf
         _UART_write
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
       _setRtc
         _UART_read
         _UART_write
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
     _mostrarMenu
       _UART_printf
         _UART_write
     _setTiempoRegar
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
   _sistemaRegado
     _dameHoraActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _encenderBombas
       _estaSeco
     _horaRegar
     _lecturaAnalogaSensores
       _dameHumedadSuelo

 _desbordamiento (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     25      96       5       93.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     114      20        0.0%
DATA                 0      0     114       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Apr 26 12:18:12 2020

          __size_of_escribe_eeprom 0030                                 l81 1B04  
                               l90 1C10                                 l75 1BE2  
                               l84 1C08                                 l93 1BEE  
                               l87 1C00                                 l96 1B9C  
                               l99 1B68                     ?_configurarAdc 0001  
              ___wmul@multiplicand 0003                        __CFG_BORV$3 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                              l102 1ADE                                l121 17DE  
                              l105 1B4A                                l130 1BBE  
                              l202 120C                                l133 1BCC  
                              l205 1A5C                                l213 0FB4  
                              l118 158A                                l126 1814  
                              l127 1816                                l208 19C0  
                              l304 17C2                                l218 1146  
                              l330 0EE6                                l250 15F2  
                              l139 1718                                l411 16B2  
                              l307 176E                                l260 0CBE  
                              l412 16BA                                l405 08C8  
                              l317 151A                                l181 1B82  
                              l245 054C                                l325 1374  
                              l415 1B2A                                l175 1BF8  
                              l263 0CFC                                l280 0714  
                              l192 1AB4                                l184 1A88  
                              l178 1BB6                                l370 1296  
                              l291 18B8                                l283 19E4  
                              l372 12D2                                l380 00BA  
                              l189 14A0                                l285 19F2  
                              l542 0BB4                                l286 19F6  
                              l367 1254                                l529 0A50  
                              l378 00B2                                l494 0E08  
                              l398 02F4                       __CFG_CPB$OFF 000000  
                     __CFG_CPD$OFF 000000                       __CFG_BOR$OFF 000000  
                              _abs 1946                                _pad 120E  
                              prod 000FF3                                wreg 000FE8  
         __end_of_dameDatosSistema 0EE8                       __CFG_LVP$OFF 000000  
                ?_i2c_reinicia_com 0001                       ?_escribe_rtc 0003  
                     __CFG_WDT$OFF 000000                               l1120 1868  
                             l1105 107E                               l1113 1944  
                             l1123 1C16                               ?_abs 0013  
                             l1129 1A2C                               l2201 1240  
                             l3001 14BA                               l1090 197C  
                             l2211 12A6                               l2203 124C  
                             l3003 14C2                               l3011 1514  
                             l2301 1AE0                               l2221 08CA  
                             l1093 1984                               l2213 12BA  
                             l2205 1260                               l3013 1518  
                             l3005 14CA                               l3021 12E6  
                             l2303 1AE0                               l2231 090E  
                             l2223 08CE                               l2207 1274  
                             l2311 005A                               l3031 131A  
                             l3023 12EA                               l3111 1376  
                             l2305 1AF6                               l2241 0964  
                             l2233 092E                               l2225 08DC  
                             l2217 1946                               l2209 1278  
                             l2321 00C2                               l2313 007A  
                             l3009 14DA                               l3041 135A  
                             l3025 12FE                               l3033 132A  
                             l3121 139E                               l3113 1380  
                             l2251 09E6                               l2243 0978  
                             l2235 0932                               l2227 08FC  
                             l2219 1960                               l2171 1002  
                             l2163 0FB6                               l2331 00FA  
                             l2323 00D4                               l2315 008A  
                             l2307 0012                               l2403 0826  
                             l3043 1370                               l3035 132E  
                             l3027 1306                               l3019 12D4  
                             l3131 13B2                               l3123 13A2  
                             l3115 1384                               l2501 16E8  
                             l2261 0A30                               l2253 09E8  
                             l2245 0986                               l2237 093E  
                             l2229 0900                               l2173 1038  
                             l2165 0FC8                               l2181 1920  
                             l2333 0100                               l2341 01F2  
                             l2325 00E2                               l2317 008C  
                             l2309 0032                               l2421 08B6  
                             l2405 084A                               l2413 0878  
                             l3037 1344                               l3029 1308  
                             l3141 13C6                               l3133 13B6  
                             l3125 13A6                               l3117 1386  
                             l2431 1B84                               l2255 09FA  
                             l2247 0998                               l2239 095C  
                             l2271 0A84                               l2167 0FDA  
                             l2183 1924                               l2191 1A20  
                             l2343 020C                               l2351 026E  
                             l2335 0182                               l2327 00E8  
                             l2319 00A6                               l2415 0886  
                             l2407 0858                               l2503 1B6A  
                             l3039 1356                               l3151 13F8  
                             l3143 13D8                               l3135 13BE  
                             l3127 13AA                               l3119 138A  
                             l2441 1B9A                               l2433 1B88  
                             l2249 09C6                               l2257 0A00  
                             l2281 0ADC                               l2273 0A88  
                             l2265 0A52                               l2169 0FE4  
                             l2177 1902                               l2185 19F8  
                             l2361 02B4                               l2353 0280  
                             l2345 022A                               l2337 0188  
                             l2329 00F0                               l2409 086C  
                             l2521 118E                               l2513 1156  
                             l3153 1400                               l3145 13DC  
                             l3137 13C0                               l3129 13AE  
                             l2371 1C06                               l2435 1B8E  
                             l2427 1BFA                               l2451 17FC  
                             l2259 0A10                               l2291 0B5E  
                             l2283 0AF0                               l2275 0A96  
                             l2267 0A56                               l2179 190E  
                             l2187 1A04                               l2195 120E  
                             l2363 02BC                               l2355 0290  
                             l2347 0244                               l2339 018E  
                             l2419 0892                               l2531 11C2  
                             l2523 11A4                               l2515 115C  
                             l2507 114A                               l2611 0336  
                             l2603 02F6                               l3147 13E0  
                             l3139 13C2                               l2373 1C0A  
                             l2381 1BEE                               l2437 1B96  
                             l2429 1BFE                               l2453 180C  
                             l2461 1A2E                               l2541 0EE8  
                             l2285 0AFE                               l2293 0B64  
                             l2277 0AB6                               l2269 0A64  
                             l2189 1A08                               l2197 121E  
                             l2357 0296                               l2365 02CC  
                             l2349 025E                               l2445 1B4E  
                             l2533 11C6                               l2525 11AC  
                             l2517 116C                               l2621 0376  
                             l2613 0338                               l3149 13E6  
                             l2375 1C0E                               l2439 1B98  
                             l2455 1810                               l2447 17C4  
                             l2463 1A4E                               l2551 0F2C  
                             l2711 0C12                               l2703 0BDA  
                             l2295 0B74                               l2287 0B2C  
                             l2279 0AD4                               l2199 1232  
                             l2359 02A8                               l2391 075A  
                             l2471 1696                               l2535 11E2  
                             l2519 117C                               l2527 11B4  
                             l2623 03A6                               l2615 0340  
                             l2473 1B06                               l2377 1BE6  
                             l2369 1C02                               l2449 17EC  
                             l2553 0F60                               l2721 0C2E  
                             l2713 0C16                               l2705 0BE0  
                             l2297 0B94                               l2289 0B4C  
                             l2393 075E                               l2385 0716  
                             l2465 165A                               l2537 11F2  
                             l2529 11B8                               l2481 1ADC  
                             l2641 0448                               l2633 03E2  
                             l2617 0370                               l2609 0306  
                             l2561 19C4                               l2475 1B22  
                             l2379 1BEA                               l2459 1BBA  
                             l2555 0F90                               l2547 0EF8  
                             l2731 0C64                               l2715 0C1A  
                             l2707 0BF0                               l2723 0C36  
                             l2395 0782                               l2387 073A  
                             l2467 1662                               l2539 1202  
                             l2811 0656                               l2491 1B48  
                             l3195 04D0                               l2651 0484  
                             l2635 0412                               l2627 03AC  
                             l2571 19F4                               l2563 19CC  
                             l2901 0D8E                               l2557 0F94  
                             l2549 0F28                               l2741 0C9A  
                             l2733 0C74                               l2725 0C3A  
                             l2717 0C26                               l2709 0C00  
                             l2397 07A6                               l2389 0748  
                             l2469 1670                               l2581 183A  
                             l2821 0680                               l2813 0668  
                             l2805 0630                               l3197 14EE  
                             l2485 1B2E                               l2653 04B4  
                             l2645 044E                               l2629 03DC  
                             l2661 0516                               l2565 19CE  
                             l2911 0DD2                               l2903 0D98  
                             l2495 16BC                               l2559 0F98  
                             l2751 0CEE                               l2743 0CAA  
                             l2735 0C84                               l2719 0C2A  
                             l2727 0C44                               l2399 07EE  
                             l2583 1856                               l2575 1818  
                             l2831 069E                               l2823 0684  
                             l2815 066C                               l2807 0636  
                             l2487 1B2E                               l2479 1AB8  
                             l2663 051A                               l2647 047E  
                             l2639 0418                               l2567 19E0  
                             l2905 0DB6                               l2913 0DD8  
                             l2921 1BCE                               l2497 16C0  
                             l2753 0CF6                               l2745 0CBA  
                             l2737 0C90                               l2729 0C48  
                             l2577 182A                               l2681 15AA  
                             l2673 158C                               l2841 06FA  
                             l2833 06BA                               l2817 0670  
                             l2809 0646                               l2825 068C  
                             l2489 1B36                               l2593 1A8A  
                             l2665 0536                               l2569 19E2  
                             l2915 0DE8                               l2907 0DC6  
                             l2931 1520                               l2923 1BD2  
                             l2595 1986                               l2587 1BF0  
                             l2499 16E4                               l2747 0CCE  
                             l2739 0C96                               l2579 1832  
                             l2691 15E8                               l2683 15BA  
                             l2675 158C                               l2843 0710  
                             l2835 06CA                               l2827 0690  
                             l2819 067C                               l2771 0598  
                             l2755 054E                               l2667 0546  
                             l2659 04BA                               l2917 0DF8  
                             l2909 0DC8                               l2941 1582  
                             l2933 1554                               l2925 151C  
                             l2597 19B0                               l2749 0CDA  
                             l2693 0BB6                               l2861 0E0A  
                             l2685 15C6                               l2677 1598  
                             l2845 171A                               l2837 06DA  
                             l2829 069A                               l2781 05C2  
                             l2773 05AA                               l2765 0572  
                             l2757 0552                               l2589 1A5E  
                             l2853 1778                               ?_pad 0011  
                             l2943 1584                               l2935 157C  
                             l2927 151C                               l2951 140C  
                             l2599 19BE                               l2695 0BBA  
                             l2871 0EB8                               l2863 0E16  
                             l2687 15CC                               l2679 15A4  
                             l2839 06E6                               l2791 05E0  
                             l2783 05C6                               l2775 05AE  
                             l2767 0578                               l2759 055E  
                             l2855 1792                               l2847 1770  
                             l2881 0D10                               l2945 1586  
                             l2937 157E                               l2929 151E  
                             l2961 1484                               l2697 0BC6  
                             l2873 0EC4                               l2689 15DC  
                             l2793 05FC                               l2777 05B2  
                             l2769 0588                               l2785 05CE  
                             l2857 17A2                               l2891 0D46  
                             l2883 0D20                               l2947 1588  
                             l2939 1580                               l2971 10BE  
                             l2963 1080                               l2875 0ECA  
                             l2795 060C                               l2787 05D2  
                             l2779 05BE                               l2859 17A6  
                             l2893 0D56                               l2885 0D24  
                             l2877 0CFE                               l2949 1B9E  
                             l2957 1414                               l2981 112A  
                             l2973 10C2                               l2869 0E20  
                             l2797 061C                               l2789 05DC  
                             l2895 0D6C                               l2887 0D32  
                             l2879 0D02                               l2959 1480  
                             l2975 10F4                               l2991 1898  
                             l2983 186A                               l2799 0628  
                             l2897 0D74                               l2889 0D42  
                             l2977 1122                               l2969 1090  
                             l2993 189C                               l2899 0D80  
                             l2979 1126                               l2995 14A4  
                             l2989 1872                               l2997 14AA  
                             l2999 14B2                       ?_leer_eeprom 0003  
                             STR_1 7FD1                               STR_2 7DE2  
                             STR_3 7F31                               STR_4 7EA7  
                             STR_5 7FA1                               STR_6 7D4C  
                             STR_7 7D15                               STR_8 7F87  
                             STR_9 7FBA                               u2000 15DC  
                             u2001 15D8                               u2010 0BF0  
                             u2011 0BEC                               u2020 0C00  
                             u1300 121E                               u2100 0588  
                             u2021 0BFC                               u1301 121A  
                             u2101 0584                               u2030 0C12  
                             u1310 1240                               u2110 0598  
                             u2031 0C0E                               u1311 123C  
                             u2111 0594                               u2040 0C64  
                             u1400 09C6                               u1240 0FC8  
                             u1320 1296                               u2200 06CA  
                             u2120 05AA                               u2041 0C60  
                             u1401 09C2                               u1241 0FC4  
                             u1321 1292                               u2201 06C6  
                             u2121 05A6                               u2050 0C74  
                             u1410 0A10                               u1250 0FDA  
                             u1330 12A6                               u2210 06DA  
                             u2130 05FC                               u2051 0C70  
                             u1411 0A0C                               u1251 0FD6  
                             u1331 12A2                               u2211 06D6  
                             u2131 05F8                               u2300 14A0  
                             u2060 0C84                               u1420 0A64  
                             u1340 1960                               u1260 1002  
                             u1500 0042                               u2140 060C  
                             u2220 17C2                               u2301 149C  
                             u2061 0C80                               u1421 0A60  
                             u1341 195C                               u1261 0FFE  
                             u1501 003C                               u2141 0608  
                             u2221 17BE                               u2310 1146  
                             u2070 0CAA                               u1350 08DC  
                             u1430 0A96                               u1270 1038  
                             u1510 0044                               u2230 0EE6  
                             u2150 061C                               u2311 1142  
                             u2071 0CA6                               u1351 08D8  
                             u1431 0A92                               u1271 1034  
                             u2231 0EE2                               u2151 0618  
                             u2240 0D10                               u2320 18B8  
                             u2080 0CBA                               u1360 090E  
                             u1440 0AD4                               u1280 1944  
                             u1600 025E                               u1520 005A  
                             u2160 0646                               _LATD 000F8C  
                             u2241 0D0C                               u2321 18B4  
                             u2081 0CB6                               u1361 090A  
                             u1441 0AD0                               u1281 1940  
                             u1601 025A                               u1521 0056  
                             u2161 0642                               u2250 0D32  
                             u2090 0CCE                               u1450 0AFE  
                             u1290 1A20                               u1610 026E  
                             u1530 008A                               u2170 0656  
                             u2330 12E6                               u2251 0D2E  
                             u2091 0CCA                               u1371 0938  
                             u1451 0AFA                               u1291 1A1C  
                             u1611 026A                               u1531 0086  
                             u2171 0652                               u2331 12E2  
                             u2260 0D6C                               u1700 17FC  
                             u1380 095C                               u1460 0B2C  
                             u1620 0280                               u1540 00A6  
                             u2180 0668                               u2340 12FE  
                             u2261 0D68                               u1701 17F8  
                             u1381 0958                               u1461 0B28  
                             u1621 027C                               u1541 00A2  
                             u2181 0664                               u2341 12FA  
                             u2270 0D8E                               u1710 180C  
                             u1390 0986                               u1470 0B74  
                             u1630 0290                               u1550 00D4  
                             u2190 06BA                               u2350 131A  
                             u2271 0D8A                               u1711 1808  
                             u1391 0982                               u1471 0B70  
                             u1631 028C                               u1551 00D0  
                             u2191 06B6                               u2351 1316  
                             u2280 0DB6                               u1480 1AF6  
                             u1720 1BCC                               u1640 02A8  
                             u1560 00E2                               u1800 117C  
                             u2360 1344                               u2281 0DB2  
                             u1481 1AF2                               u1721 1BC8  
                             u1641 02A4                               u1561 00DE  
                             u1801 1178                               u2361 1340  
                             u2290 0DE8                               u1490 1B04  
                             u1570 020C                               u1650 073A  
                             u1730 16B2                               u1810 118E  
                             u2370 1356                               u2450 13D8  
                             u2291 0DE4                               u1491 1B00  
                             u2507 19B6                               u1571 0208  
                             u1651 0736                               u1731 16AE  
                             u1811 118A                               u2371 1352  
                             u2451 13D4                               u1740 16E0  
                             u1580 022A                               u1660 0782  
                             u1820 11E2                               u1900 0370  
                             u2460 13F8                               u1581 0226  
                             u1661 077E                               u1821 11DE  
                             u1901 036C                               u2461 13F4  
                             u1750 1708                               u1590 0244  
                             u1670 07A6                               u1830 11F2  
                             u1910 03A6                               u1591 0240  
                             u1671 07A2                               u1831 11EE  
                             u1911 03A2                               u1760 1718  
                             u1680 084A                               u1840 1202  
                             u1920 03DC                               u1761 1714  
                             u1681 0846                               u1841 11FE  
                             u1921 03D8                               u1690 17EC  
                             u1850 0FB4                               u1770 1B7C  
                             u1930 0412                               u1747 16D6  
                             u1691 17E8                               u1851 0FB0  
                             u1771 1B76                               u1931 040E  
                             u1780 1B7E                               u1940 0448  
                             u1860 19F2                               u1757 16FE  
                             u1941 0444                               u1861 19EE  
                             u2477 1798                               u1790 116C  
                             u1950 047E                               u1870 1A82  
                             u1791 1168                               u1951 047A  
                             u1871 1A7C                               u2487 19C6  
                             u1960 04B4                               u1880 1A84  
                             u2497 1A54                               u1961 04B0  
                             u1970 0536                               u1890 0336  
                             u1971 0532                               u1891 0332  
                             u1980 0546                               u1981 0542  
                             u1990 15BA                               u1991 15B6  
                             _TMR0 000FD6               _minutosTranscurridos 00C3  
               ??_i2c_reinicia_com 0002            escribeHorariosMemoria@i 000D  
                    ??_i2c_detener 0002                               abs@a 0013  
                             _dbuf 0100                               _main 1376  
                             _dtoa 0012                               _hora 00C9  
                             _prec 00BC                               _nout 00B8  
                             pad@i 0018                               pad@p 0015  
                             fsr1h 000FE2                               fsr2h 000FDA  
                             indf1 000FE7                               indf2 000FDF  
                             fsr1l 000FE1                               pad@w 001A  
                             fsr2l 000FD9                               btemp 005F  
                   ?_sistemaRegado 0001           __size_of_asignarHorarios 0148  
                    ??_i2c_iniciar 0001                               prodh 000FF4  
                             prodl 000FF3                               start 000E  
         ??_restablecerDatosSensor 0005                      __CFG_IESO$OFF 000000  
                _constructorSensor 1BF0            __size_of_setTiempoRegar 01C8  
                     ___param_bank 000000                 ?_constructorSensor 0001  
               setTiempoRegar@hora 0010                 _leeHorariosMemoria 1080  
                 ??_encenderBombas 0003                              ??_abs 0015  
                            ??_pad 0017                     _i2c_envia_dato 1BE4  
                    __CFG_PLLDIV$1 000000                     _i2c_inicia_com 1C02  
                  __end_of___aldiv 0E0A                    __end_of___aodiv 0A52  
                            ?_main 0001                              ?_dtoa 001C  
                  __end_of___aomod 0BB6                      _convertirDato 1B2C  
                            STR_10 7D4C                              STR_11 7CCD  
                            STR_20 7F11                              STR_12 7E5D  
                            STR_21 7FF1                              STR_13 7E37  
                            STR_22 7F9E                              STR_14 7F50  
                            STR_15 7EF1                              STR_23 7E0D  
                            STR_16 7E82                              STR_24 7D7F  
                            STR_25 7FE1                              STR_17 7F6C  
                            STR_18 7ECC                              STR_19 7DB1  
              ??_constructorSensor 0005                  convertirDato@dato 0002  
                            _T0CON 000FD5                              i2l172 1656  
              ?_leeHorariosMemoria 0001                              _RCREG 000FAE  
                     vfpfcnvrt@fmt 0042                              _SPBRG 000FAF  
                            _PORTA 000F80                              _PORTE 000F84  
                    __CFG_USBDIV$1 000000                              _TRISA 000F92  
                            _TRISD 000F95                              _TRISE 000F96  
                            _TXREG 000FAD                      __CFG_PWRT$OFF 000000  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                      __CFG_WRT3$OFF 000000  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                   __CFG_EBTR1$OFF 000000                     __CFG_EBTR2$OFF 000000  
                   __CFG_EBTR3$OFF 000000                      __CFG_WRTB$OFF 000000  
                    __CFG_WRTC$OFF 000000                      __CFG_WRTD$OFF 000000  
                   __CFG_EBTRB$OFF 000000                 __size_of_UART_init 0070  
               __size_of_UART_read 0054                              _flags 00BE  
                            _fputc 0FB6                              _fputs 1902  
                      ?_UART_write 0001                              pad@fp 0011  
                            _width 00BA                              _putch 1C16  
                            dtoa@d 001E                              dtoa@i 003E  
                            dtoa@n 0036                              dtoa@p 0030  
                            dtoa@s 0034                              dtoa@w 0032  
                            tablat 000FF5                              ttemp5 0060  
                            ttemp6 0063                              ttemp7 0067  
                            status 000FD8                              wtemp8 0060  
                  __end_of_sprintf 186A                 escribe_eeprom@dato 0009  
        __end_of_constructorSensor 1BFA               ??_leeHorariosMemoria 0007  
                   __CFG_ICPRT$OFF 000000                         _i2c_espera 1AE0  
                 ??_dameHoraActual 0005                     __CFG_MCLRE$OFF 000000  
                  __initialization 18BA                    setTiempoRegar@i 0011  
              __end_of_i2c_detener 1C12    __size_of_lecturaAnalogaSensores 0054  
           __end_of_i2c_envia_dato 1BF0                       __end_of_main 140C  
                     __end_of_dtoa 02F6           ??_escribeHorariosMemoria 000B  
                  ??_configurarAdc 0001                setTiempoRegar@i_716 0013  
           __end_of_i2c_inicia_com 1C0A                 _inicializarObjetos 140C  
              __end_of_i2c_iniciar 1BE4             sistemaPrincipal@opcion 005D  
                 _dameHumedadSuelo 19C2                     ?_convertirDato 0001  
             __size_of_fijaHoraRtc 0068                             ??_main 005E  
                           ??_dtoa 0026          setTiempoRegar@tiempoRegar 000F  
                    __activetblptr 000002                ?_inicializarObjetos 0001  
               i2c_envia_dato@dato 0002                    __CFG_CCP2MX$OFF 000000  
                           _ADCON1 000FC1                             _ADCON2 000FC0  
                           ?_fputc 0001                             ?_fputs 000A  
                           _ADRESL 000FC3             encenderBombas@flagSeco 0005  
                           ?_putch 0001                 convertirDato@datoR 0003  
                           i2l3051 1618                             i2l3061 164C  
                           i2l3053 162A                             i2l3045 15F6  
                           i2l3063 1650                             i2l3055 162E  
                           i2l3047 1604                             i2l3057 1630  
                           i2l3049 1614                             i2l3059 163E  
                  ??_sistemaRegado 0008                             _SSPADD 000FC8  
                           _SSPBUF 000FC9               ??_inicializarObjetos 0007  
  __size_of_restablecerDatosSensor 0050                     __CFG_XINST$OFF 000000  
                     vfprintf@cfmt 0056           __end_of_sistemaPrincipal 151C  
                   _escribe_eeprom 1A2E                    ?_i2c_envia_dato 0001  
                        ??___aldiv 0009                          ??___aodiv 0011  
                        ??___aomod 0011                             ___wmul 1B06  
                __end_of_UART_init 158C                  __end_of_UART_read 1818  
                ??_asignarHorarios 000F                   __end_of_leer_rtc 1AE0  
                  ?_i2c_inicia_com 0001                   __end_of_estaSeco 1B84  
              __size_of_UART_write 0016                       ?_UART_printf 0002  
                           clear_0 18E0                             clear_1 18EC  
                           _setRtc 1148                             pad@buf 0013  
                           dtoa@fp 001C                             _strlen 19F8  
                  _i2c_recibe_dato 1B84                       ?_mostrarMenu 0001  
                           fputc@c 0001                             fputs@c 000E  
                           fputs@i 000F                             fputs@s 000A  
             escribe_rtc@direccion 0004                       __mediumconst 7CCC  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8             _lecturaAnalogaSensores 1770  
                           putch@c 0001                   __end_of_vfprintf 16BC  
                        ??_sprintf 0058                         __accesstop 0060  
          __end_of__initialization 18F4               __size_of_escribe_rtc 001E  
                  __CFG_PBADEN$OFF 000000               __size_of_leer_eeprom 003C  
                  __CFG_FOSC$XT_XT 000000                        _i2c_detener 1C0A  
       __size_of_constructorSensor 000A                      ___rparam_used 000001  
                      _i2c_iniciar 1BCE             __end_of_escribe_eeprom 1A5E  
                      ?_i2c_espera 0001                     _setTiempoRegar 054E  
                 setTiempoRegar@Rx 0016                     __pcstackCOMRAM 0001  
                     leer_rtc@dato 0004                       __pidataBANK0 1C12  
  __size_of_escribeHorariosMemoria 00CE                    ??_convertirDato 0001  
                    __end_of_fputc 1080                      __end_of_fputs 1946  
                    __end_of_putch 1C18             _restablecerDatosSensor 186A  
                     _datoRecibido 00C6                  ?_dameDatosSistema 0001  
                          ??_fputc 0005                            ??_fputs 000E  
                          ??_putch 0001                         __pbssBANK0 0060  
                       __pbssBANK1 0100                 ??_dameDatosSistema 0058  
          __size_of_desbordamiento 1652                 __size_of_horaRegar 002C  
           __end_of_setTiempoRegar 0716                    ?_escribe_eeprom 0007  
               _contInterrupciones 00C0          __size_of_i2c_reinicia_com 0008  
                          ?___wmul 0001            __end_of_i2c_recibe_dato 1B9E  
                          _ACKSTAT 007E2E                            ?_setRtc 0001  
                          ?_strlen 0001                 __size_of_vfpfcnvrt 01B4  
              __size_of_i2c_espera 0026             _escribeHorariosMemoria 0EE8  
                          _SSPCON1 000FC6                            _SSPCON2 000FC5  
                     ??_UART_write 0001                            _SSPSTAT 000FC7  
         __end_of_dameHumedadSuelo 19F8                          ?_leer_rtc 0001  
                        ?_estaSeco 0001                    __CFG_VREGEN$OFF 000000  
                  ?_setTiempoRegar 0001                            __Hparam 0000  
                          __Lparam 0000                            ___aldiv 0CFE  
                          ___aodiv 08CA                            ___aomod 0A52  
                  __size_of___wmul 0026           constructorSensor@humedad 0003  
                        ?_vfprintf 0050                    __CFG_STVREN$OFF 000000  
                          __pcinit 18BA                            __ramtop 0800  
               __end_of_UART_write 1BCE                    __size_of_setRtc 00C6  
                          __ptext0 1376                            __ptext1 12D4  
                          __ptext2 1770                            __ptext3 19C2  
                          __ptext4 1A5E                            __ptext5 02F6  
                          __ptext6 1B6A                            __ptext7 1A8A  
                          __ptext8 1AB6                            __ptext9 1B2C  
                __end_of_horaRegar 1A8A                          _T0CONbits 000FD5  
                  __size_of_strlen 0036               __size_of_UART_printf 005E  
                     __size_of_abs 0040                       __size_of_pad 00C6  
                          _regando 00C2                   ___aldiv@dividend 0001  
                          _minutos 00C8               __size_of_mostrarMenu 0056  
                          _sprintf 1818                     __pintcode_body 15F4  
             end_of_initialization 18F4                         ??_leer_rtc 0003  
                       ??_estaSeco 0003                            fputc@fp 0003  
                  _asignarHorarios 0BB6                      __Lmediumconst 7CCC  
                          int_func 15F4                            fputs@fp 000C  
                 ??_i2c_envia_dato 0002        __size_of_leeHorariosMemoria 00C8  
                          setRtc@i 0009                   ??_i2c_inicia_com 0002  
                 _VALOR_TIMER0UART 00F4                  __end_of_vfpfcnvrt 08CA  
                        _RCSTAbits 000FAB                   ___aldiv@quotient 000B  
                          postdec1 000FE5                            postdec2 000FDD  
                ?_sistemaPrincipal 0001                            postinc0 000FEE  
                          postinc1 000FE6                            postinc2 000FDE  
                    ??_fijaHoraRtc 000C                   ?_i2c_recibe_dato 0001  
                       ??_vfprintf 0056              __end_of_configurarAdc 1BB8  
               ??_sistemaPrincipal 005B                            strlen@a 0003  
                          strlen@s 0001                          _UART_init 151C  
                        _UART_read 17C4            ?_lecturaAnalogaSensores 0001  
        dameHumedadSuelo@canalLeer 0002            lecturaAnalogaSensores@i 0004  
                        _TRISBbits 000F93                          _TRISCbits 000F94  
          __size_of_encenderBombas 0258                     _desbordamiento 0008  
                   _esperandoDatos 005E                     _UART_init$1618 0017  
                     ?_i2c_detener 0001              __end_of_sistemaRegado 1376  
                        _TXSTAbits 000FAC                  dameDatosSistema@i 00F0  
      __size_of_inicializarObjetos 0096                       ?_i2c_iniciar 0001  
                     ??_i2c_espera 0001                   _i2c_reinicia_com 1BFA  
      setTiempoRegar@datoCapturado 0015                        vfpfcnvrt@ap 0044  
                      vfpfcnvrt@fp 0040                        vfpfcnvrt@ll 0048  
                   __end_of___wmul 1B2C            ?_restablecerDatosSensor 0001  
   __end_of_lecturaAnalogaSensores 17C4                         ?_UART_init 000F  
                       ?_UART_read 0001                setRtc@datoCapturado 0008  
          __size_of_dameHoraActual 002C                     __end_of_setRtc 120E  
              __end_of_fijaHoraRtc 15F4                     __end_of_strlen 1A2E  
              start_initialization 18BA                        __end_of_abs 1986  
          __end_of_asignarHorarios 0CFE                        __end_of_pad 12D4  
escribeHorariosMemoria@contMemoria 000B             __end_of_desbordamiento 165A  
               __end_of_i2c_espera 1B06                      ??_escribe_rtc 0004  
                    ??_leer_eeprom 0005                   ??_escribe_eeprom 000A  
              leeHorariosMemoria@i 0009               constructorSensor@pin 0004  
                      vfprintf@fmt 0052          __size_of_dameDatosSistema 00DE  
                         ??___wmul 0005     __end_of_restablecerDatosSensor 18BA  
                      __pdataBANK0 00F2                   __CFG_LPT1OSC$OFF 000000  
                leer_rtc@direccion 0003                           ??_setRtc 0005  
            __end_of_convertirDato 1B4C       asignarHorarios@datoCapturado 0010  
                         ??_strlen 0003            ?_escribeHorariosMemoria 0001  
                      __pbssCOMRAM 005E                      __pcstackBANK0 00CD  
                 ___aodiv@dividend 0001                    ?_desbordamiento 0001  
                 ??_setTiempoRegar 000F                  ?_dameHumedadSuelo 0001  
                UART_printf@cadena 0002                 ??_dameHumedadSuelo 0001  
                __size_of_leer_rtc 002A                  __size_of_estaSeco 001A  
              __end_of_escribe_rtc 1B6A                __end_of_leer_eeprom 19C2  
                        __pintcode 0008                      __pmediumconst 7CCC  
                         ?___aldiv 0001                           ?___aodiv 0001  
                         ?___aomod 0001                   ___aodiv@quotient 0013  
                      _fijaHoraRtc 158C                         setRtc@dato 0007  
                      ??_UART_init 0013                        ??_UART_read 0001  
                __size_of_vfprintf 0062     __end_of_escribeHorariosMemoria 0FB6  
                   _encenderBombas 02F6                          _horaRegar 1A5E  
                 ?_asignarHorarios 0001                           ?_sprintf 00CD  
                   __size_of_fputc 00CA                     __size_of_fputs 0044  
                   __size_of_putch 0002                    ___aldiv@divisor 0005  
                  ___aldiv@counter 0009                     ___wmul@product 0005  
                         _LATDbits 000F8C                           _PIE1bits 000F9D  
             __size_of_i2c_detener 0008                           i2u240_40 162A  
                         i2u240_41 1626                           i2u241_40 164C  
                         i2u241_41 1648                           i2u238_40 1604  
                         i2u238_41 1600                           i2u239_40 1614  
                         i2u239_41 1610                           _PIR1bits 000F9E  
          restablecerDatosSensor@i 0005               __size_of_i2c_iniciar 0016  
                 __CFG_WDTPS$32768 000000             _tiempoInactividadTrans 00CC  
    leeHorariosMemoria@contMemoria 0007                asignarHorarios@hora 000F  
                    ??_UART_printf 0004             dameDatosSistema@buffer 00E1  
                        _vfpfcnvrt 0716                         _ADCON0bits 000FC2  
                   _dameHoraActual 1A8A                  ___wmul@multiplier 0001  
           __end_of_encenderBombas 054E                      ??_mostrarMenu 0004  
                   UART_write@dato 0001                         ?_horaRegar 0001  
        __size_of_sistemaPrincipal 007A           __end_of_i2c_reinicia_com 1C02  
                        copy_data0 18CE                        _escribe_rtc 1B4C  
                      _leer_eeprom 1986                       _VALOR_TIMER0 00F2  
       __end_of_leeHorariosMemoria 1148                          estaSeco@s 0001  
                         __Hrparam 0000                       _minutosRegar 00C4  
                    UART_init@BAUD 000F                         vfprintf@ap 0054  
                         __Lrparam 0000                         vfprintf@fp 0050  
                 _dameDatosSistema 0E0A                _esperaDatoConcluida 00CA  
                 __size_of___aldiv 010C                   __size_of___aodiv 0188  
                 __size_of___aomod 0164             __end_of_dameHoraActual 1AB6  
                       ?_vfpfcnvrt 0040                    ___aodiv@divisor 0009  
                  ___aodiv@counter 0011                    ?_encenderBombas 0001  
                       sprintf@fmt 00CF           __size_of_i2c_recibe_dato 001A  
              __end_of_UART_printf 171A                           _dtoa$851 002E  
                         __ptext10 14A2                           __ptext11 054E  
                         __ptext20 0012                           __ptext12 171A  
                         __ptext21 120E                           __ptext13 158C  
                         __ptext30 0EE8                           __ptext22 19F8  
                         __ptext14 1148                           __ptext31 1A2E  
                         __ptext23 1902                           __ptext15 1B4C  
                         __ptext40 1B84                           __ptext32 17C4  
                         __ptext24 0FB6                           __ptext16 0E0A  
                         __ptext41 1C02                           __ptext33 16BC  
                         __ptext25 1C16                           __ptext17 1818  
                         __ptext50 0CFE                           __ptext42 1BE4  
                         __ptext34 1BB8                           __ptext26 1946  
                         __ptext18 165A                           __ptext43 1C0A  
                         __ptext35 186A                           __ptext27 0A52  
                         __ptext19 0716                           __ptext44 1AE0  
                         __ptext36 1BF0                           __ptext28 08CA  
                         __ptext45 140C                           __ptext37 1080  
                         __ptext29 0BB6                           __ptext46 1B06  
                         __ptext38 1986                           __ptext47 1BCE  
                         __ptext39 1BFA                           __ptext48 1B9E  
                         __ptext49 151C                __end_of_mostrarMenu 1770  
                 __size_of_sprintf 0052                           _leer_rtc 1AB6  
                         _estaSeco 1B6A         __end_of_inicializarObjetos 14A2  
                         _byteUart 00CB             __size_of_configurarAdc 001A  
              inicializarObjetos@i 0007                      __size_of_main 0096  
                    __size_of_dtoa 02E4                           _horarios 0060  
                         _segundos 00C7                    encenderBombas@i 0006  
                         _sensores 00A8                           int$flags 005F  
                         _vfprintf 165A                    ?_dameHoraActual 0001  
          __size_of_i2c_envia_dato 000C            __size_of_i2c_inicia_com 0008  
         i2c_recibe_dato@datoleido 0002                   ___aomod@dividend 0001  
            __CFG_CPUDIV$OSC1_PLL2 000000                   ??_desbordamiento 0001  
           __size_of_sistemaRegado 00A2                         _INTCONbits 000FF2  
               constructorSensor@s 0001                        ??_horaRegar 0003  
          escribe_eeprom@direccion 0007                           intlevel2 0000  
                        sprintf@ap 00D9                    escribe_rtc@dato 0003  
                         setRtc@Rx 000B                    setRtc@direccion 0006  
                asignarHorarios@Rx 0013                      _overflowTimer 00C5  
                     ?_fijaHoraRtc 0001                    ___aomod@divisor 0009  
        __size_of_dameHumedadSuelo 0036                        ??_vfpfcnvrt 0046  
                  ___aomod@counter 0011                        _UART_printf 16BC  
                    _configurarAdc 1B9E                           sprintf@f 00DB  
                         sprintf@s 00CD                        _mostrarMenu 171A  
                     ___aldiv@sign 000A                   asignarHorarios@i 0011  
                 _sistemaPrincipal 14A2                    leer_eeprom@dato 0006  
                      _SSPCON2bits 000FC5                         _UART_write 1BB8  
                     ___aodiv@sign 0012                  ??_i2c_recibe_dato 0002  
           __size_of_convertirDato 0020               leer_eeprom@direccion 0003  
                    _sistemaRegado 12D4                       ___aomod@sign 0012  
         ??_lecturaAnalogaSensores 0003  
