

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Apr 21 17:43:09 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           ; Version 2.10
    57                           ; Generated 31/07/2019 GMT
    58                           ; 
    59                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4550 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	idataCOMRAM
    92  00106C                     __pidataCOMRAM:
    93                           	opt callstack 0
    94                           
    95                           ;initializer for _VALOR_TIMER0
    96  00106C  6769               	dw	26473
    97                           
    98                           ;initializer for _VALOR_TIMER0UART
    99  00106E  6769               	dw	26473
   100  0000                     _TMR0	set	4054
   101  0000                     _T0CONbits	set	4053
   102  0000                     _TRISD	set	3989
   103  0000                     _T0CON	set	4053
   104  0000                     _LATD	set	3980
   105  0000                     _PIE1bits	set	3997
   106  0000                     _ADRESL	set	4035
   107  0000                     _ADCON0bits	set	4034
   108  0000                     _LATDbits	set	3980
   109  0000                     _PORTE	set	3972
   110  0000                     _PORTA	set	3968
   111  0000                     _TRISE	set	3990
   112  0000                     _TRISA	set	3986
   113  0000                     _ADCON2	set	4032
   114  0000                     _ADCON1	set	4033
   115  0000                     _INTCONbits	set	4082
   116  0000                     _TXREG	set	4013
   117  0000                     _RCREG	set	4014
   118  0000                     _PIR1bits	set	3998
   119  0000                     _RCSTAbits	set	4011
   120  0000                     _TXSTAbits	set	4012
   121  0000                     _SPBRG	set	4015
   122  0000                     _TRISCbits	set	3988
   123  0000                     _SSPBUF	set	4041
   124  0000                     _SSPCON2bits	set	4037
   125  0000                     _SSPADD	set	4040
   126  0000                     _SSPCON2	set	4037
   127  0000                     _SSPCON1	set	4038
   128  0000                     _SSPSTAT	set	4039
   129  0000                     _TRISBbits	set	3987
   130  0000                     _ACKSTAT	set	32302
   131                           
   132                           	psect	mediumconst
   133  007D78                     __pmediumconst:
   134                           	opt callstack 0
   135  007D78  00                 	db	0
   136  007D79                     STR_15:
   137  007D79  0D                 	db	13
   138  007D7A  0A                 	db	10
   139  007D7B  20                 	db	32
   140  007D7C  49                 	db	73	;'I'
   141  007D7D  6E                 	db	110	;'n'
   142  007D7E  67                 	db	103	;'g'
   143  007D7F  72                 	db	114	;'r'
   144  007D80  65                 	db	101	;'e'
   145  007D81  73                 	db	115	;'s'
   146  007D82  65                 	db	101	;'e'
   147  007D83  20                 	db	32
   148  007D84  6C                 	db	108	;'l'
   149  007D85  6F                 	db	111	;'o'
   150  007D86  73                 	db	115	;'s'
   151  007D87  20                 	db	32
   152  007D88  6D                 	db	109	;'m'
   153  007D89  69                 	db	105	;'i'
   154  007D8A  6E                 	db	110	;'n'
   155  007D8B  75                 	db	117	;'u'
   156  007D8C  74                 	db	116	;'t'
   157  007D8D  6F                 	db	111	;'o'
   158  007D8E  73                 	db	115	;'s'
   159  007D8F  20                 	db	32
   160  007D90  71                 	db	113	;'q'
   161  007D91  75                 	db	117	;'u'
   162  007D92  65                 	db	101	;'e'
   163  007D93  20                 	db	32
   164  007D94  64                 	db	100	;'d'
   165  007D95  65                 	db	101	;'e'
   166  007D96  73                 	db	115	;'s'
   167  007D97  65                 	db	101	;'e'
   168  007D98  65                 	db	101	;'e'
   169  007D99  20                 	db	32
   170  007D9A  71                 	db	113	;'q'
   171  007D9B  75                 	db	117	;'u'
   172  007D9C  65                 	db	101	;'e'
   173  007D9D  20                 	db	32
   174  007D9E  73                 	db	115	;'s'
   175  007D9F  65                 	db	101	;'e'
   176  007DA0  20                 	db	32
   177  007DA1  72                 	db	114	;'r'
   178  007DA2  69                 	db	105	;'i'
   179  007DA3  65                 	db	101	;'e'
   180  007DA4  67                 	db	103	;'g'
   181  007DA5  75                 	db	117	;'u'
   182  007DA6  65                 	db	101	;'e'
   183  007DA7  20                 	db	32
   184  007DA8  65                 	db	101	;'e'
   185  007DA9  6E                 	db	110	;'n'
   186  007DAA  20                 	db	32
   187  007DAB  65                 	db	101	;'e'
   188  007DAC  73                 	db	115	;'s'
   189  007DAD  65                 	db	101	;'e'
   190  007DAE  20                 	db	32
   191  007DAF  68                 	db	104	;'h'
   192  007DB0  6F                 	db	111	;'o'
   193  007DB1  72                 	db	114	;'r'
   194  007DB2  61                 	db	97	;'a'
   195  007DB3  72                 	db	114	;'r'
   196  007DB4  69                 	db	105	;'i'
   197  007DB5  6F                 	db	111	;'o'
   198  007DB6  20                 	db	32
   199  007DB7  65                 	db	101	;'e'
   200  007DB8  6A                 	db	106	;'j'
   201  007DB9  3A                 	db	58	;':'
   202  007DBA  20                 	db	32
   203  007DBB  31                 	db	49	;'1'
   204  007DBC  35                 	db	53	;'5'
   205  007DBD  20                 	db	32
   206  007DBE  0D                 	db	13
   207  007DBF  0A                 	db	10
   208  007DC0  00                 	db	0
   209  007DC1                     STR_9:
   210  007DC1  0D                 	db	13
   211  007DC2  0A                 	db	10
   212  007DC3  20                 	db	32
   213  007DC4  49                 	db	73	;'I'
   214  007DC5  6E                 	db	110	;'n'
   215  007DC6  67                 	db	103	;'g'
   216  007DC7  72                 	db	114	;'r'
   217  007DC8  65                 	db	101	;'e'
   218  007DC9  73                 	db	115	;'s'
   219  007DCA  65                 	db	101	;'e'
   220  007DCB  20                 	db	32
   221  007DCC  31                 	db	49	;'1'
   222  007DCD  20                 	db	32
   223  007DCE  70                 	db	112	;'p'
   224  007DCF  61                 	db	97	;'a'
   225  007DD0  72                 	db	114	;'r'
   226  007DD1  61                 	db	97	;'a'
   227  007DD2  20                 	db	32
   228  007DD3  72                 	db	114	;'r'
   229  007DD4  65                 	db	101	;'e'
   230  007DD5  67                 	db	103	;'g'
   231  007DD6  61                 	db	97	;'a'
   232  007DD7  72                 	db	114	;'r'
   233  007DD8  20                 	db	32
   234  007DD9  7C                 	db	124
   235  007DDA  7C                 	db	124
   236  007DDB  20                 	db	32
   237  007DDC  69                 	db	105	;'i'
   238  007DDD  6E                 	db	110	;'n'
   239  007DDE  67                 	db	103	;'g'
   240  007DDF  72                 	db	114	;'r'
   241  007DE0  65                 	db	101	;'e'
   242  007DE1  73                 	db	115	;'s'
   243  007DE2  65                 	db	101	;'e'
   244  007DE3  20                 	db	32
   245  007DE4  30                 	db	48	;'0'
   246  007DE5  20                 	db	32
   247  007DE6  70                 	db	112	;'p'
   248  007DE7  61                 	db	97	;'a'
   249  007DE8  72                 	db	114	;'r'
   250  007DE9  61                 	db	97	;'a'
   251  007DEA  20                 	db	32
   252  007DEB  6E                 	db	110	;'n'
   253  007DEC  6F                 	db	111	;'o'
   254  007DED  20                 	db	32
   255  007DEE  72                 	db	114	;'r'
   256  007DEF  65                 	db	101	;'e'
   257  007DF0  67                 	db	103	;'g'
   258  007DF1  61                 	db	97	;'a'
   259  007DF2  72                 	db	114	;'r'
   260  007DF3  3A                 	db	58	;':'
   261  007DF4  20                 	db	32
   262  007DF5  0D                 	db	13
   263  007DF6  0A                 	db	10
   264  007DF7  00                 	db	0
   265  007DF8                     STR_7:
   266  007DF8  0D                 	db	13
   267  007DF9  0A                 	db	10
   268  007DFA  20                 	db	32
   269  007DFB  49                 	db	73	;'I'
   270  007DFC  6E                 	db	110	;'n'
   271  007DFD  67                 	db	103	;'g'
   272  007DFE  72                 	db	114	;'r'
   273  007DFF  65                 	db	101	;'e'
   274  007E00  73                 	db	115	;'s'
   275  007E01  65                 	db	101	;'e'
   276  007E02  20                 	db	32
   277  007E03  75                 	db	117	;'u'
   278  007E04  6E                 	db	110	;'n'
   279  007E05  61                 	db	97	;'a'
   280  007E06  20                 	db	32
   281  007E07  68                 	db	104	;'h'
   282  007E08  6F                 	db	111	;'o'
   283  007E09  72                 	db	114	;'r'
   284  007E0A  61                 	db	97	;'a'
   285  007E0B  20                 	db	32
   286  007E0C  65                 	db	101	;'e'
   287  007E0D  6E                 	db	110	;'n'
   288  007E0E  20                 	db	32
   289  007E0F  66                 	db	102	;'f'
   290  007E10  6F                 	db	111	;'o'
   291  007E11  72                 	db	114	;'r'
   292  007E12  6D                 	db	109	;'m'
   293  007E13  61                 	db	97	;'a'
   294  007E14  74                 	db	116	;'t'
   295  007E15  6F                 	db	111	;'o'
   296  007E16  20                 	db	32
   297  007E17  64                 	db	100	;'d'
   298  007E18  65                 	db	101	;'e'
   299  007E19  20                 	db	32
   300  007E1A  32                 	db	50	;'2'
   301  007E1B  34                 	db	52	;'4'
   302  007E1C  20                 	db	32
   303  007E1D  68                 	db	104	;'h'
   304  007E1E  72                 	db	114	;'r'
   305  007E1F  73                 	db	115	;'s'
   306  007E20  20                 	db	32
   307  007E21  65                 	db	101	;'e'
   308  007E22  6A                 	db	106	;'j'
   309  007E23  3A                 	db	58	;':'
   310  007E24  20                 	db	32
   311  007E25  31                 	db	49	;'1'
   312  007E26  35                 	db	53	;'5'
   313  007E27  20                 	db	32
   314  007E28  0D                 	db	13
   315  007E29  0A                 	db	10
   316  007E2A  00                 	db	0
   317  007E2B                     STR_21:
   318  007E2B  0D                 	db	13
   319  007E2C  0A                 	db	10
   320  007E2D  20                 	db	32
   321  007E2E  33                 	db	51	;'3'
   322  007E2F  2E                 	db	46
   323  007E30  20                 	db	32
   324  007E31  50                 	db	80	;'P'
   325  007E32  72                 	db	114	;'r'
   326  007E33  6F                 	db	111	;'o'
   327  007E34  67                 	db	103	;'g'
   328  007E35  72                 	db	114	;'r'
   329  007E36  61                 	db	97	;'a'
   330  007E37  6D                 	db	109	;'m'
   331  007E38  61                 	db	97	;'a'
   332  007E39  72                 	db	114	;'r'
   333  007E3A  20                 	db	32
   334  007E3B  74                 	db	116	;'t'
   335  007E3C  69                 	db	105	;'i'
   336  007E3D  65                 	db	101	;'e'
   337  007E3E  6D                 	db	109	;'m'
   338  007E3F  70                 	db	112	;'p'
   339  007E40  6F                 	db	111	;'o'
   340  007E41  20                 	db	32
   341  007E42  64                 	db	100	;'d'
   342  007E43  65                 	db	101	;'e'
   343  007E44  20                 	db	32
   344  007E45  72                 	db	114	;'r'
   345  007E46  69                 	db	105	;'i'
   346  007E47  65                 	db	101	;'e'
   347  007E48  67                 	db	103	;'g'
   348  007E49  6F                 	db	111	;'o'
   349  007E4A  20                 	db	32
   350  007E4B  65                 	db	101	;'e'
   351  007E4C  6E                 	db	110	;'n'
   352  007E4D  20                 	db	32
   353  007E4E  75                 	db	117	;'u'
   354  007E4F  6E                 	db	110	;'n'
   355  007E50  20                 	db	32
   356  007E51  68                 	db	104	;'h'
   357  007E52  6F                 	db	111	;'o'
   358  007E53  72                 	db	114	;'r'
   359  007E54  61                 	db	97	;'a'
   360  007E55  72                 	db	114	;'r'
   361  007E56  69                 	db	105	;'i'
   362  007E57  6F                 	db	111	;'o'
   363  007E58  20                 	db	32
   364  007E59  0D                 	db	13
   365  007E5A  0A                 	db	10
   366  007E5B  00                 	db	0
   367  007E5C                     STR_3:
   368  007E5C  0D                 	db	13
   369  007E5D  0A                 	db	10
   370  007E5E  20                 	db	32
   371  007E5F  45                 	db	69	;'E'
   372  007E60  6E                 	db	110	;'n'
   373  007E61  76                 	db	118	;'v'
   374  007E62  69                 	db	105	;'i'
   375  007E63  65                 	db	101	;'e'
   376  007E64  20                 	db	32
   377  007E65  6C                 	db	108	;'l'
   378  007E66  61                 	db	97	;'a'
   379  007E67  73                 	db	115	;'s'
   380  007E68  20                 	db	32
   381  007E69  48                 	db	72	;'H'
   382  007E6A  6F                 	db	111	;'o'
   383  007E6B  72                 	db	114	;'r'
   384  007E6C  61                 	db	97	;'a'
   385  007E6D  73                 	db	115	;'s'
   386  007E6E  20                 	db	32
   387  007E6F  65                 	db	101	;'e'
   388  007E70  6E                 	db	110	;'n'
   389  007E71  20                 	db	32
   390  007E72  66                 	db	102	;'f'
   391  007E73  6F                 	db	111	;'o'
   392  007E74  72                 	db	114	;'r'
   393  007E75  6D                 	db	109	;'m'
   394  007E76  61                 	db	97	;'a'
   395  007E77  74                 	db	116	;'t'
   396  007E78  6F                 	db	111	;'o'
   397  007E79  20                 	db	32
   398  007E7A  32                 	db	50	;'2'
   399  007E7B  34                 	db	52	;'4'
   400  007E7C  20                 	db	32
   401  007E7D  45                 	db	69	;'E'
   402  007E7E  6A                 	db	106	;'j'
   403  007E7F  3A                 	db	58	;':'
   404  007E80  20                 	db	32
   405  007E81  31                 	db	49	;'1'
   406  007E82  35                 	db	53	;'5'
   407  007E83  20                 	db	32
   408  007E84  0D                 	db	13
   409  007E85  0A                 	db	10
   410  007E86  00                 	db	0
   411  007E87                     STR_24:
   412  007E87  0D                 	db	13
   413  007E88  0A                 	db	10
   414  007E89  20                 	db	32
   415  007E8A  53                 	db	83	;'S'
   416  007E8B  6F                 	db	111	;'o'
   417  007E8C  6C                 	db	108	;'l'
   418  007E8D  6F                 	db	111	;'o'
   419  007E8E  20                 	db	32
   420  007E8F  73                 	db	115	;'s'
   421  007E90  65                 	db	101	;'e'
   422  007E91  20                 	db	32
   423  007E92  70                 	db	112	;'p'
   424  007E93  65                 	db	101	;'e'
   425  007E94  72                 	db	114	;'r'
   426  007E95  6D                 	db	109	;'m'
   427  007E96  69                 	db	105	;'i'
   428  007E97  74                 	db	116	;'t'
   429  007E98  65                 	db	101	;'e'
   430  007E99  6E                 	db	110	;'n'
   431  007E9A  20                 	db	32
   432  007E9B  6E                 	db	110	;'n'
   433  007E9C  75                 	db	117	;'u'
   434  007E9D  6D                 	db	109	;'m'
   435  007E9E  65                 	db	101	;'e'
   436  007E9F  72                 	db	114	;'r'
   437  007EA0  6F                 	db	111	;'o'
   438  007EA1  73                 	db	115	;'s'
   439  007EA2  20                 	db	32
   440  007EA3  64                 	db	100	;'d'
   441  007EA4  65                 	db	101	;'e'
   442  007EA5  6C                 	db	108	;'l'
   443  007EA6  20                 	db	32
   444  007EA7  31                 	db	49	;'1'
   445  007EA8  20                 	db	32
   446  007EA9  61                 	db	97	;'a'
   447  007EAA  6C                 	db	108	;'l'
   448  007EAB  20                 	db	32
   449  007EAC  33                 	db	51	;'3'
   450  007EAD  20                 	db	32
   451  007EAE  0D                 	db	13
   452  007EAF  0A                 	db	10
   453  007EB0  00                 	db	0
   454  007EB1                     STR_17:
   455  007EB1  0D                 	db	13
   456  007EB2  0A                 	db	10
   457  007EB3  20                 	db	32
   458  007EB4  4D                 	db	77	;'M'
   459  007EB5  69                 	db	105	;'i'
   460  007EB6  6E                 	db	110	;'n'
   461  007EB7  75                 	db	117	;'u'
   462  007EB8  74                 	db	116	;'t'
   463  007EB9  6F                 	db	111	;'o'
   464  007EBA  73                 	db	115	;'s'
   465  007EBB  20                 	db	32
   466  007EBC  64                 	db	100	;'d'
   467  007EBD  65                 	db	101	;'e'
   468  007EBE  20                 	db	32
   469  007EBF  72                 	db	114	;'r'
   470  007EC0  69                 	db	105	;'i'
   471  007EC1  65                 	db	101	;'e'
   472  007EC2  67                 	db	103	;'g'
   473  007EC3  6F                 	db	111	;'o'
   474  007EC4  20                 	db	32
   475  007EC5  65                 	db	101	;'e'
   476  007EC6  73                 	db	115	;'s'
   477  007EC7  74                 	db	116	;'t'
   478  007EC8  61                 	db	97	;'a'
   479  007EC9  62                 	db	98	;'b'
   480  007ECA  6C                 	db	108	;'l'
   481  007ECB  65                 	db	101	;'e'
   482  007ECC  63                 	db	99	;'c'
   483  007ECD  69                 	db	105	;'i'
   484  007ECE  64                 	db	100	;'d'
   485  007ECF  6F                 	db	111	;'o'
   486  007ED0  73                 	db	115	;'s'
   487  007ED1  21                 	db	33
   488  007ED2  20                 	db	32
   489  007ED3  0D                 	db	13
   490  007ED4  0A                 	db	10
   491  007ED5  00                 	db	0
   492  007ED6                     STR_18:
   493  007ED6  0D                 	db	13
   494  007ED7  0A                 	db	10
   495  007ED8  20                 	db	32
   496  007ED9  49                 	db	73	;'I'
   497  007EDA  6E                 	db	110	;'n'
   498  007EDB  67                 	db	103	;'g'
   499  007EDC  72                 	db	114	;'r'
   500  007EDD  65                 	db	101	;'e'
   501  007EDE  73                 	db	115	;'s'
   502  007EDF  61                 	db	97	;'a'
   503  007EE0  20                 	db	32
   504  007EE1  75                 	db	117	;'u'
   505  007EE2  6E                 	db	110	;'n'
   506  007EE3  61                 	db	97	;'a'
   507  007EE4  20                 	db	32
   508  007EE5  6F                 	db	111	;'o'
   509  007EE6  70                 	db	112	;'p'
   510  007EE7  63                 	db	99	;'c'
   511  007EE8  69                 	db	105	;'i'
   512  007EE9  6F                 	db	111	;'o'
   513  007EEA  6E                 	db	110	;'n'
   514  007EEB  20                 	db	32
   515  007EEC  61                 	db	97	;'a'
   516  007EED  20                 	db	32
   517  007EEE  52                 	db	82	;'R'
   518  007EEF  65                 	db	101	;'e'
   519  007EF0  61                 	db	97	;'a'
   520  007EF1  6C                 	db	108	;'l'
   521  007EF2  69                 	db	105	;'i'
   522  007EF3  7A                 	db	122	;'z'
   523  007EF4  61                 	db	97	;'a'
   524  007EF5  72                 	db	114	;'r'
   525  007EF6  3A                 	db	58	;':'
   526  007EF7  20                 	db	32
   527  007EF8  0D                 	db	13
   528  007EF9  0A                 	db	10
   529  007EFA  00                 	db	0
   530  007EFB                     STR_5:
   531  007EFB  0D                 	db	13
   532  007EFC  0A                 	db	10
   533  007EFD  20                 	db	32
   534  007EFE  48                 	db	72	;'H'
   535  007EFF  4F                 	db	79	;'O'
   536  007F00  52                 	db	82	;'R'
   537  007F01  41                 	db	65	;'A'
   538  007F02  20                 	db	32
   539  007F03  45                 	db	69	;'E'
   540  007F04  53                 	db	83	;'S'
   541  007F05  54                 	db	84	;'T'
   542  007F06  41                 	db	65	;'A'
   543  007F07  42                 	db	66	;'B'
   544  007F08  4C                 	db	76	;'L'
   545  007F09  45                 	db	69	;'E'
   546  007F0A  43                 	db	67	;'C'
   547  007F0B  49                 	db	73	;'I'
   548  007F0C  44                 	db	68	;'D'
   549  007F0D  41                 	db	65	;'A'
   550  007F0E  20                 	db	32
   551  007F0F  43                 	db	67	;'C'
   552  007F10  4F                 	db	79	;'O'
   553  007F11  52                 	db	82	;'R'
   554  007F12  52                 	db	82	;'R'
   555  007F13  45                 	db	69	;'E'
   556  007F14  43                 	db	67	;'C'
   557  007F15  54                 	db	84	;'T'
   558  007F16  41                 	db	65	;'A'
   559  007F17  4D                 	db	77	;'M'
   560  007F18  45                 	db	69	;'E'
   561  007F19  4E                 	db	78	;'N'
   562  007F1A  54                 	db	84	;'T'
   563  007F1B  45                 	db	69	;'E'
   564  007F1C  20                 	db	32
   565  007F1D  0D                 	db	13
   566  007F1E  0A                 	db	10
   567  007F1F  00                 	db	0
   568  007F20                     STR_20:
   569  007F20  0D                 	db	13
   570  007F21  0A                 	db	10
   571  007F22  20                 	db	32
   572  007F23  32                 	db	50	;'2'
   573  007F24  2E                 	db	46
   574  007F25  20                 	db	32
   575  007F26  41                 	db	65	;'A'
   576  007F27  73                 	db	115	;'s'
   577  007F28  69                 	db	105	;'i'
   578  007F29  67                 	db	103	;'g'
   579  007F2A  6E                 	db	110	;'n'
   580  007F2B  61                 	db	97	;'a'
   581  007F2C  72                 	db	114	;'r'
   582  007F2D  20                 	db	32
   583  007F2E  48                 	db	72	;'H'
   584  007F2F  6F                 	db	111	;'o'
   585  007F30  72                 	db	114	;'r'
   586  007F31  61                 	db	97	;'a'
   587  007F32  72                 	db	114	;'r'
   588  007F33  69                 	db	105	;'i'
   589  007F34  6F                 	db	111	;'o'
   590  007F35  73                 	db	115	;'s'
   591  007F36  20                 	db	32
   592  007F37  70                 	db	112	;'p'
   593  007F38  61                 	db	97	;'a'
   594  007F39  72                 	db	114	;'r'
   595  007F3A  61                 	db	97	;'a'
   596  007F3B  20                 	db	32
   597  007F3C  72                 	db	114	;'r'
   598  007F3D  65                 	db	101	;'e'
   599  007F3E  67                 	db	103	;'g'
   600  007F3F  61                 	db	97	;'a'
   601  007F40  72                 	db	114	;'r'
   602  007F41  20                 	db	32
   603  007F42  0D                 	db	13
   604  007F43  0A                 	db	10
   605  007F44  00                 	db	0
   606  007F45                     STR_4:
   607  007F45  0D                 	db	13
   608  007F46  0A                 	db	10
   609  007F47  20                 	db	32
   610  007F48  45                 	db	69	;'E'
   611  007F49  6E                 	db	110	;'n'
   612  007F4A  76                 	db	118	;'v'
   613  007F4B  69                 	db	105	;'i'
   614  007F4C  65                 	db	101	;'e'
   615  007F4D  20                 	db	32
   616  007F4E  6C                 	db	108	;'l'
   617  007F4F  6F                 	db	111	;'o'
   618  007F50  73                 	db	115	;'s'
   619  007F51  20                 	db	32
   620  007F52  4D                 	db	77	;'M'
   621  007F53  69                 	db	105	;'i'
   622  007F54  6E                 	db	110	;'n'
   623  007F55  75                 	db	117	;'u'
   624  007F56  74                 	db	116	;'t'
   625  007F57  6F                 	db	111	;'o'
   626  007F58  73                 	db	115	;'s'
   627  007F59  20                 	db	32
   628  007F5A  45                 	db	69	;'E'
   629  007F5B  6A                 	db	106	;'j'
   630  007F5C  3A                 	db	58	;':'
   631  007F5D  20                 	db	32
   632  007F5E  32                 	db	50	;'2'
   633  007F5F  35                 	db	53	;'5'
   634  007F60  20                 	db	32
   635  007F61  0D                 	db	13
   636  007F62  0A                 	db	10
   637  007F63  00                 	db	0
   638  007F64                     STR_19:
   639  007F64  0D                 	db	13
   640  007F65  0A                 	db	10
   641  007F66  20                 	db	32
   642  007F67  31                 	db	49	;'1'
   643  007F68  2E                 	db	46
   644  007F69  20                 	db	32
   645  007F6A  46                 	db	70	;'F'
   646  007F6B  69                 	db	105	;'i'
   647  007F6C  6A                 	db	106	;'j'
   648  007F6D  61                 	db	97	;'a'
   649  007F6E  72                 	db	114	;'r'
   650  007F6F  20                 	db	32
   651  007F70  48                 	db	72	;'H'
   652  007F71  6F                 	db	111	;'o'
   653  007F72  72                 	db	114	;'r'
   654  007F73  61                 	db	97	;'a'
   655  007F74  20                 	db	32
   656  007F75  41                 	db	65	;'A'
   657  007F76  63                 	db	99	;'c'
   658  007F77  74                 	db	116	;'t'
   659  007F78  75                 	db	117	;'u'
   660  007F79  61                 	db	97	;'a'
   661  007F7A  6C                 	db	108	;'l'
   662  007F7B  20                 	db	32
   663  007F7C  0D                 	db	13
   664  007F7D  0A                 	db	10
   665  007F7E  00                 	db	0
   666  007F7F                     STR_10:
   667  007F7F  0D                 	db	13
   668  007F80  0A                 	db	10
   669  007F81  20                 	db	32
   670  007F82  48                 	db	72	;'H'
   671  007F83  6F                 	db	111	;'o'
   672  007F84  72                 	db	114	;'r'
   673  007F85  61                 	db	97	;'a'
   674  007F86  72                 	db	114	;'r'
   675  007F87  69                 	db	105	;'i'
   676  007F88  6F                 	db	111	;'o'
   677  007F89  20                 	db	32
   678  007F8A  4D                 	db	77	;'M'
   679  007F8B  6F                 	db	111	;'o'
   680  007F8C  64                 	db	100	;'d'
   681  007F8D  69                 	db	105	;'i'
   682  007F8E  66                 	db	102	;'f'
   683  007F8F  69                 	db	105	;'i'
   684  007F90  63                 	db	99	;'c'
   685  007F91  61                 	db	97	;'a'
   686  007F92  64                 	db	100	;'d'
   687  007F93  6F                 	db	111	;'o'
   688  007F94  21                 	db	33
   689  007F95  20                 	db	32
   690  007F96  0D                 	db	13
   691  007F97  0A                 	db	10
   692  007F98  00                 	db	0
   693  007F99                     STR_6:
   694  007F99  0D                 	db	13
   695  007F9A  0A                 	db	10
   696  007F9B  20                 	db	32
   697  007F9C  4F                 	db	79	;'O'
   698  007F9D  50                 	db	80	;'P'
   699  007F9E  43                 	db	67	;'C'
   700  007F9F  49                 	db	73	;'I'
   701  007FA0  4F                 	db	79	;'O'
   702  007FA1  4E                 	db	78	;'N'
   703  007FA2  45                 	db	69	;'E'
   704  007FA3  53                 	db	83	;'S'
   705  007FA4  20                 	db	32
   706  007FA5  44                 	db	68	;'D'
   707  007FA6  45                 	db	69	;'E'
   708  007FA7  20                 	db	32
   709  007FA8  52                 	db	82	;'R'
   710  007FA9  45                 	db	69	;'E'
   711  007FAA  47                 	db	71	;'G'
   712  007FAB  41                 	db	65	;'A'
   713  007FAC  44                 	db	68	;'D'
   714  007FAD  4F                 	db	79	;'O'
   715  007FAE  20                 	db	32
   716  007FAF  0D                 	db	13
   717  007FB0  0A                 	db	10
   718  007FB1  00                 	db	0
   719  007FB2                     STR_12:
   720  007FB2  0D                 	db	13
   721  007FB3  0A                 	db	10
   722  007FB4  20                 	db	32
   723  007FB5  54                 	db	84	;'T'
   724  007FB6  49                 	db	73	;'I'
   725  007FB7  45                 	db	69	;'E'
   726  007FB8  4D                 	db	77	;'M'
   727  007FB9  50                 	db	80	;'P'
   728  007FBA  4F                 	db	79	;'O'
   729  007FBB  20                 	db	32
   730  007FBC  44                 	db	68	;'D'
   731  007FBD  45                 	db	69	;'E'
   732  007FBE  20                 	db	32
   733  007FBF  52                 	db	82	;'R'
   734  007FC0  45                 	db	69	;'E'
   735  007FC1  47                 	db	71	;'G'
   736  007FC2  41                 	db	65	;'A'
   737  007FC3  44                 	db	68	;'D'
   738  007FC4  4F                 	db	79	;'O'
   739  007FC5  20                 	db	32
   740  007FC6  0D                 	db	13
   741  007FC7  0A                 	db	10
   742  007FC8  00                 	db	0
   743  007FC9                     STR_1:
   744  007FC9  0D                 	db	13
   745  007FCA  0A                 	db	10
   746  007FCB  20                 	db	32
   747  007FCC  44                 	db	68	;'D'
   748  007FCD  41                 	db	65	;'A'
   749  007FCE  54                 	db	84	;'T'
   750  007FCF  4F                 	db	79	;'O'
   751  007FD0  20                 	db	32
   752  007FD1  4E                 	db	78	;'N'
   753  007FD2  4F                 	db	79	;'O'
   754  007FD3  20                 	db	32
   755  007FD4  52                 	db	82	;'R'
   756  007FD5  45                 	db	69	;'E'
   757  007FD6  43                 	db	67	;'C'
   758  007FD7  49                 	db	73	;'I'
   759  007FD8  42                 	db	66	;'B'
   760  007FD9  49                 	db	73	;'I'
   761  007FDA  44                 	db	68	;'D'
   762  007FDB  4F                 	db	79	;'O'
   763  007FDC  20                 	db	32
   764  007FDD  0D                 	db	13
   765  007FDE  0A                 	db	10
   766  007FDF  00                 	db	0
   767  007FE0                     STR_2:
   768  007FE0  0D                 	db	13
   769  007FE1  0A                 	db	10
   770  007FE2  20                 	db	32
   771  007FE3  46                 	db	70	;'F'
   772  007FE4  49                 	db	73	;'I'
   773  007FE5  4A                 	db	74	;'J'
   774  007FE6  41                 	db	65	;'A'
   775  007FE7  20                 	db	32
   776  007FE8  48                 	db	72	;'H'
   777  007FE9  4F                 	db	79	;'O'
   778  007FEA  52                 	db	82	;'R'
   779  007FEB  41                 	db	65	;'A'
   780  007FEC  20                 	db	32
   781  007FED  0D                 	db	13
   782  007FEE  0A                 	db	10
   783  007FEF  00                 	db	0
   784  007FF0                     STR_22:
   785  007FF0  0D                 	db	13
   786  007FF1  0A                 	db	10
   787  007FF2  20                 	db	32
   788  007FF3  4F                 	db	79	;'O'
   789  007FF4  70                 	db	112	;'p'
   790  007FF5  63                 	db	99	;'c'
   791  007FF6  69                 	db	105	;'i'
   792  007FF7  6F                 	db	111	;'o'
   793  007FF8  6E                 	db	110	;'n'
   794  007FF9  3A                 	db	58	;':'
   795  007FFA  20                 	db	32
   796  007FFB  20                 	db	32
   797  007FFC  0D                 	db	13
   798  007FFD  00                 	db	0
   799  0000                     
   800                           ; #config settings
   801  007FFE  00                 	db	0	; dummy byte at the end
   802  0000                     
   803                           	psect	cinit
   804  000DA2                     __pcinit:
   805                           	opt callstack 0
   806  000DA2                     start_initialization:
   807                           	opt callstack 0
   808  000DA2                     __initialization:
   809                           	opt callstack 0
   810                           
   811                           ; Initialize objects allocated to COMRAM (4 bytes)
   812                           ; load TBLPTR registers with __pidataCOMRAM
   813  000DA2  0E6C               	movlw	low __pidataCOMRAM
   814  000DA4  6EF6               	movwf	tblptrl,c
   815  000DA6  0E10               	movlw	high __pidataCOMRAM
   816  000DA8  6EF7               	movwf	tblptrh,c
   817  000DAA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   818  000DAC  6EF8               	movwf	tblptru,c
   819  000DAE  EE00  F039         	lfsr	0,__pdataCOMRAM
   820  000DB2  EE10 F004          	lfsr	1,4
   821  000DB6                     copy_data0:
   822  000DB6  0009               	tblrd		*+
   823  000DB8  CFF5 FFEE          	movff	tablat,postinc0
   824  000DBC  50E5               	movf	postdec1,w,c
   825  000DBE  50E1               	movf	fsr1l,w,c
   826  000DC0  E1FA               	bnz	copy_data0
   827                           
   828                           ; Clear objects allocated to BANK0 (72 bytes)
   829  000DC2  EE00  F060         	lfsr	0,__pbssBANK0
   830  000DC6  0E48               	movlw	72
   831  000DC8                     clear_0:
   832  000DC8  6AEE               	clrf	postinc0,c
   833  000DCA  06E8               	decf	wreg,f,c
   834  000DCC  E1FD               	bnz	clear_0
   835                           
   836                           ; Clear objects allocated to COMRAM (30 bytes)
   837  000DCE  EE00  F001         	lfsr	0,__pbssCOMRAM
   838  000DD2  0E1E               	movlw	30
   839  000DD4                     clear_1:
   840  000DD4  6AEE               	clrf	postinc0,c
   841  000DD6  06E8               	decf	wreg,f,c
   842  000DD8  E1FD               	bnz	clear_1
   843  000DDA                     end_of_initialization:
   844                           	opt callstack 0
   845  000DDA                     __end_of__initialization:
   846                           	opt callstack 0
   847  000DDA  903D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   848  000DDC  923D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   849  000DDE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   850  000DE0  6EF8               	movwf	tblptru,c
   851  000DE2  0100               	movlb	0
   852  000DE4  EF17  F005         	goto	_main	;jump to C main() function
   853                           
   854                           	psect	bssCOMRAM
   855  000001                     __pbssCOMRAM:
   856                           	opt callstack 0
   857  000001                     _sensores:
   858                           	opt callstack 0
   859  000001                     	ds	16
   860  000011                     _contInterrupciones:
   861                           	opt callstack 0
   862  000011                     	ds	2
   863  000013                     _regando:
   864                           	opt callstack 0
   865  000013                     	ds	1
   866  000014                     _minutosTranscurridos:
   867                           	opt callstack 0
   868  000014                     	ds	1
   869  000015                     _minutosRegar:
   870                           	opt callstack 0
   871  000015                     	ds	1
   872  000016                     _overflowTimer:
   873                           	opt callstack 0
   874  000016                     	ds	1
   875  000017                     _datoRecibido:
   876                           	opt callstack 0
   877  000017                     	ds	1
   878  000018                     _segundos:
   879                           	opt callstack 0
   880  000018                     	ds	1
   881  000019                     _minutos:
   882                           	opt callstack 0
   883  000019                     	ds	1
   884  00001A                     _hora:
   885                           	opt callstack 0
   886  00001A                     	ds	1
   887  00001B                     _esperandoDatos:
   888                           	opt callstack 0
   889  00001B                     	ds	1
   890  00001C                     _esperaDatoConcluida:
   891                           	opt callstack 0
   892  00001C                     	ds	1
   893  00001D                     _byteUart:
   894                           	opt callstack 0
   895  00001D                     	ds	1
   896  00001E                     _tiempoInactividadTrans:
   897                           	opt callstack 0
   898  00001E                     	ds	1
   899                           
   900                           	psect	dataCOMRAM
   901  000039                     __pdataCOMRAM:
   902                           	opt callstack 0
   903  000039                     _VALOR_TIMER0:
   904                           	opt callstack 0
   905  000039                     	ds	2
   906  00003B                     _VALOR_TIMER0UART:
   907                           	opt callstack 0
   908  00003B                     	ds	2
   909                           
   910                           	psect	bssBANK0
   911  000060                     __pbssBANK0:
   912                           	opt callstack 0
   913  000060                     _horarios:
   914                           	opt callstack 0
   915  000060                     	ds	72
   916                           
   917                           	psect	cstackCOMRAM
   918  00001F                     __pcstackCOMRAM:
   919                           	opt callstack 0
   920  00001F                     ??_i2c_espera:
   921  00001F                     ??_convertirDato:
   922  00001F                     ??_dameHumedadSuelo:
   923  00001F                     ?_estaSeco:
   924                           	opt callstack 0
   925  00001F                     ?_horaRegar:
   926                           	opt callstack 0
   927  00001F                     ?___wmul:
   928                           	opt callstack 0
   929  00001F                     ?___aldiv:
   930                           	opt callstack 0
   931  00001F                     UART_write@dato:
   932                           	opt callstack 0
   933  00001F                     constructorSensor@s:
   934                           	opt callstack 0
   935  00001F                     estaSeco@s:
   936                           	opt callstack 0
   937  00001F                     ___wmul@multiplier:
   938                           	opt callstack 0
   939  00001F                     ___aldiv@dividend:
   940                           	opt callstack 0
   941                           
   942                           ; 4 bytes @ 0x0
   943  00001F                     	ds	1
   944  000020                     i2c_envia_dato@dato:
   945                           	opt callstack 0
   946  000020                     i2c_recibe_dato@datoleido:
   947                           	opt callstack 0
   948  000020                     convertirDato@dato:
   949                           	opt callstack 0
   950  000020                     dameHumedadSuelo@canalLeer:
   951                           	opt callstack 0
   952  000020                     UART_printf@cadena:
   953                           	opt callstack 0
   954                           
   955                           ; 2 bytes @ 0x1
   956  000020                     	ds	1
   957  000021                     ??_encenderBombas:
   958  000021                     ??_lecturaAnalogaSensores:
   959  000021                     escribe_rtc@dato:
   960                           	opt callstack 0
   961  000021                     leer_rtc@direccion:
   962                           	opt callstack 0
   963  000021                     convertirDato@datoR:
   964                           	opt callstack 0
   965  000021                     constructorSensor@humedad:
   966                           	opt callstack 0
   967  000021                     leer_eeprom@direccion:
   968                           	opt callstack 0
   969  000021                     ___wmul@multiplicand:
   970                           	opt callstack 0
   971                           
   972                           ; 2 bytes @ 0x2
   973  000021                     	ds	1
   974  000022                     escribe_rtc@direccion:
   975                           	opt callstack 0
   976  000022                     leer_rtc@dato:
   977                           	opt callstack 0
   978  000022                     constructorSensor@pin:
   979                           	opt callstack 0
   980  000022                     lecturaAnalogaSensores@i:
   981                           	opt callstack 0
   982                           
   983                           ; 2 bytes @ 0x3
   984  000022                     	ds	1
   985  000023                     ??_setRtc:
   986  000023                     ??_leer_eeprom:
   987  000023                     encenderBombas@flagSeco:
   988                           	opt callstack 0
   989  000023                     restablecerDatosSensor@i:
   990                           	opt callstack 0
   991  000023                     ___wmul@product:
   992                           	opt callstack 0
   993  000023                     ___aldiv@divisor:
   994                           	opt callstack 0
   995                           
   996                           ; 4 bytes @ 0x4
   997  000023                     	ds	1
   998  000024                     setRtc@direccion:
   999                           	opt callstack 0
  1000  000024                     leer_eeprom@dato:
  1001                           	opt callstack 0
  1002  000024                     encenderBombas@i:
  1003                           	opt callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x5
  1006  000024                     	ds	1
  1007  000025                     setRtc@dato:
  1008                           	opt callstack 0
  1009  000025                     inicializarObjetos@i:
  1010                           	opt callstack 0
  1011  000025                     escribe_eeprom@direccion:
  1012                           	opt callstack 0
  1013  000025                     leeHorariosMemoria@contMemoria:
  1014                           	opt callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x6
  1017  000025                     	ds	1
  1018  000026                     setRtc@datoCapturado:
  1019                           	opt callstack 0
  1020                           
  1021                           ; 1 bytes @ 0x7
  1022  000026                     	ds	1
  1023  000027                     escribe_eeprom@dato:
  1024                           	opt callstack 0
  1025  000027                     ___aldiv@counter:
  1026                           	opt callstack 0
  1027  000027                     setRtc@i:
  1028                           	opt callstack 0
  1029  000027                     leeHorariosMemoria@i:
  1030                           	opt callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x8
  1033  000027                     	ds	1
  1034  000028                     ??_escribe_eeprom:
  1035  000028                     ___aldiv@sign:
  1036                           	opt callstack 0
  1037                           
  1038                           ; 1 bytes @ 0x9
  1039  000028                     	ds	1
  1040  000029                     setRtc@Rx:
  1041                           	opt callstack 0
  1042  000029                     escribeHorariosMemoria@contMemoria:
  1043                           	opt callstack 0
  1044  000029                     ___aldiv@quotient:
  1045                           	opt callstack 0
  1046                           
  1047                           ; 4 bytes @ 0xA
  1048  000029                     	ds	1
  1049  00002A                     
  1050                           ; 1 bytes @ 0xB
  1051  00002A                     	ds	1
  1052  00002B                     escribeHorariosMemoria@i:
  1053                           	opt callstack 0
  1054                           
  1055                           ; 2 bytes @ 0xC
  1056  00002B                     	ds	2
  1057  00002D                     asignarHorarios@hora:
  1058                           	opt callstack 0
  1059  00002D                     setTiempoRegar@tiempoRegar:
  1060                           	opt callstack 0
  1061  00002D                     UART_init@BAUD:
  1062                           	opt callstack 0
  1063                           
  1064                           ; 4 bytes @ 0xE
  1065  00002D                     	ds	1
  1066  00002E                     asignarHorarios@datoCapturado:
  1067                           	opt callstack 0
  1068  00002E                     setTiempoRegar@hora:
  1069                           	opt callstack 0
  1070                           
  1071                           ; 1 bytes @ 0xF
  1072  00002E                     	ds	1
  1073  00002F                     asignarHorarios@i:
  1074                           	opt callstack 0
  1075  00002F                     setTiempoRegar@i:
  1076                           	opt callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x10
  1079  00002F                     	ds	2
  1080  000031                     asignarHorarios@Rx:
  1081                           	opt callstack 0
  1082  000031                     setTiempoRegar@i_706:
  1083                           	opt callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x12
  1086  000031                     	ds	2
  1087  000033                     setTiempoRegar@datoCapturado:
  1088                           	opt callstack 0
  1089                           
  1090                           ; 1 bytes @ 0x14
  1091  000033                     	ds	1
  1092  000034                     setTiempoRegar@Rx:
  1093                           	opt callstack 0
  1094                           
  1095                           ; 1 bytes @ 0x15
  1096  000034                     	ds	1
  1097  000035                     ??_sistemaPrincipal:
  1098  000035                     _UART_init$1472:
  1099                           	opt callstack 0
  1100                           
  1101                           ; 4 bytes @ 0x16
  1102  000035                     	ds	2
  1103  000037                     sistemaPrincipal@opcion:
  1104                           	opt callstack 0
  1105                           
  1106                           ; 1 bytes @ 0x18
  1107  000037                     	ds	2
  1108  000039                     
  1109                           ; 1 bytes @ 0x1A
  1110 ;;
  1111 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1112 ;;
  1113 ;; *************** function _main *****************
  1114 ;; Defined at:
  1115 ;;		line 572 in file "main.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;		None
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;		None
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  1    wreg      void 
  1122 ;; Registers used:
  1123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1129 ;;      Params:         0       0       0       0       0       0       0       0       0
  1130 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1131 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1132 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1133 ;;Total ram usage:        0 bytes
  1134 ;; Hardware stack levels required when called:    7
  1135 ;; This function calls:
  1136 ;;		_UART_init
  1137 ;;		_configurarAdc
  1138 ;;		_i2c_iniciar
  1139 ;;		_inicializarObjetos
  1140 ;;		_leeHorariosMemoria
  1141 ;;		_mostrarMenu
  1142 ;;		_restablecerDatosSensor
  1143 ;;		_sistemaPrincipal
  1144 ;;		_sistemaRegado
  1145 ;; This function is called by:
  1146 ;;		Startup code after reset
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           	psect	text0
  1151  000A2E                     __ptext0:
  1152                           	opt callstack 0
  1153  000A2E                     _main:
  1154                           	opt callstack 24
  1155  000A2E                     
  1156                           ;main.c: 574:     INTCONbits.GIE = 1;
  1157  000A2E  8EF2               	bsf	242,7,c	;volatile
  1158                           
  1159                           ;main.c: 575:     INTCONbits.PEIE = 1;
  1160  000A30  8CF2               	bsf	242,6,c	;volatile
  1161                           
  1162                           ;main.c: 576:     INTCONbits.TMR0IE = 0;
  1163  000A32  9AF2               	bcf	242,5,c	;volatile
  1164                           
  1165                           ;main.c: 577:     INTCONbits.TMR0IF = 0;
  1166  000A34  94F2               	bcf	242,2,c	;volatile
  1167                           
  1168                           ;main.c: 578:     PIE1bits.RCIE = 1;
  1169  000A36  8A9D               	bsf	157,5,c	;volatile
  1170  000A38                     
  1171                           ;main.c: 580:     T0CON = 0b00000111;
  1172  000A38  0E07               	movlw	7
  1173  000A3A  6ED5               	movwf	213,c	;volatile
  1174  000A3C                     
  1175                           ;main.c: 582:     INTCONbits.TMR0IE = 1;
  1176  000A3C  8AF2               	bsf	242,5,c	;volatile
  1177  000A3E                     
  1178                           ;main.c: 587:     restablecerDatosSensor();
  1179  000A3E  EC84  F006         	call	_restablecerDatosSensor	;wreg free
  1180  000A42                     
  1181                           ;main.c: 589:     UART_init(9600);
  1182  000A42  0E80               	movlw	128
  1183  000A44  6E2D               	movwf	UART_init@BAUD^0,c
  1184  000A46  0E25               	movlw	37
  1185  000A48  6E2E               	movwf	(UART_init@BAUD+1)^0,c
  1186  000A4A  0E00               	movlw	0
  1187  000A4C  6E2F               	movwf	(UART_init@BAUD+2)^0,c
  1188  000A4E  0E00               	movlw	0
  1189  000A50  6E30               	movwf	(UART_init@BAUD+3)^0,c
  1190  000A52  EC60  F005         	call	_UART_init	;wreg free
  1191  000A56                     
  1192                           ;main.c: 590:     i2c_iniciar();
  1193  000A56  EC14  F008         	call	_i2c_iniciar	;wreg free
  1194  000A5A                     
  1195                           ;main.c: 591:     configurarAdc();
  1196  000A5A  ECFC  F007         	call	_configurarAdc	;wreg free
  1197  000A5E                     
  1198                           ;main.c: 592:     inicializarObjetos();
  1199  000A5E  ECCC  F004         	call	_inicializarObjetos	;wreg free
  1200  000A62                     
  1201                           ;main.c: 594:     leeHorariosMemoria();
  1202  000A62  EC1A  F004         	call	_leeHorariosMemoria	;wreg free
  1203  000A66                     
  1204                           ;main.c: 597:     TRISD = 0;
  1205  000A66  0E00               	movlw	0
  1206  000A68  6E95               	movwf	149,c	;volatile
  1207  000A6A                     
  1208                           ;main.c: 598:     LATD = 0;
  1209  000A6A  0E00               	movlw	0
  1210  000A6C  6E8C               	movwf	140,c	;volatile
  1211  000A6E                     
  1212                           ;main.c: 600:     TMR0 = VALOR_TIMER0;
  1213  000A6E  C039  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  1214  000A72  C03A  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  1215  000A76                     
  1216                           ;main.c: 602:     INTCONbits.TMR0IF = 1;
  1217  000A76  84F2               	bsf	242,2,c	;volatile
  1218  000A78                     
  1219                           ;main.c: 604:     T0CONbits.TMR0ON = 1;
  1220  000A78  8ED5               	bsf	213,7,c	;volatile
  1221  000A7A                     
  1222                           ;main.c: 606:     mostrarMenu();
  1223  000A7A  ECAC  F006         	call	_mostrarMenu	;wreg free
  1224  000A7E                     l2363:
  1225                           
  1226                           ;main.c: 610:         if (datoRecibido) {
  1227  000A7E  5017               	movf	_datoRecibido^0,w,c
  1228  000A80  B4D8               	btfsc	status,2,c
  1229  000A82  EF45  F005         	goto	u1451
  1230  000A86  EF47  F005         	goto	u1450
  1231  000A8A                     u1451:
  1232  000A8A  EF4E  F005         	goto	l2371
  1233  000A8E                     u1450:
  1234  000A8E                     
  1235                           ;main.c: 612:             datoRecibido = 0;
  1236  000A8E  0E00               	movlw	0
  1237  000A90  6E17               	movwf	_datoRecibido^0,c
  1238  000A92                     
  1239                           ;main.c: 614:             byteUart -= 48;
  1240  000A92  0E30               	movlw	48
  1241  000A94  5E1D               	subwf	_byteUart^0,f,c
  1242  000A96                     
  1243                           ;main.c: 616:             sistemaPrincipal(byteUart);
  1244  000A96  501D               	movf	_byteUart^0,w,c
  1245  000A98  EC98  F005         	call	_sistemaPrincipal
  1246  000A9C                     l2371:
  1247                           
  1248                           ;main.c: 620:         if (overflowTimer) {
  1249  000A9C  5016               	movf	_overflowTimer^0,w,c
  1250  000A9E  B4D8               	btfsc	status,2,c
  1251  000AA0  EF54  F005         	goto	u1461
  1252  000AA4  EF56  F005         	goto	u1460
  1253  000AA8                     u1461:
  1254  000AA8  EF3F  F005         	goto	l2363
  1255  000AAC                     u1460:
  1256  000AAC                     
  1257                           ;main.c: 622:             esperandoDatos = 0;
  1258  000AAC  0E00               	movlw	0
  1259  000AAE  6E1B               	movwf	_esperandoDatos^0,c
  1260                           
  1261                           ;main.c: 623:             overflowTimer = 0;
  1262  000AB0  0E00               	movlw	0
  1263  000AB2  6E16               	movwf	_overflowTimer^0,c
  1264  000AB4                     
  1265                           ;main.c: 624:             sistemaRegado();
  1266  000AB4  EC7E  F004         	call	_sistemaRegado	;wreg free
  1267  000AB8  EF3F  F005         	goto	l2363
  1268  000ABC  EF07  F000         	goto	start
  1269  000AC0                     __end_of_main:
  1270                           	opt callstack 0
  1271                           
  1272 ;; *************** function _sistemaRegado *****************
  1273 ;; Defined at:
  1274 ;;		line 534 in file "main.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;		None
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;		None
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1288 ;;      Params:         0       0       0       0       0       0       0       0       0
  1289 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1290 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1291 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1292 ;;Total ram usage:        0 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    5
  1295 ;; This function calls:
  1296 ;;		_dameHoraActual
  1297 ;;		_encenderBombas
  1298 ;;		_horaRegar
  1299 ;;		_lecturaAnalogaSensores
  1300 ;; This function is called by:
  1301 ;;		_main
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           	psect	text1
  1306  0008FC                     __ptext1:
  1307                           	opt callstack 0
  1308  0008FC                     _sistemaRegado:
  1309                           	opt callstack 25
  1310  0008FC                     
  1311                           ;main.c: 538:     if (regando) {
  1312  0008FC  5013               	movf	_regando^0,w,c
  1313  0008FE  B4D8               	btfsc	status,2,c
  1314  000900  EF84  F004         	goto	u1381
  1315  000904  EF86  F004         	goto	u1380
  1316  000908                     u1381:
  1317  000908  EFA8  F004         	goto	l2289
  1318  00090C                     u1380:
  1319  00090C                     
  1320                           ;main.c: 539:         contInterrupciones++;
  1321  00090C  4A11               	infsnz	_contInterrupciones^0,f,c
  1322  00090E  2A12               	incf	(_contInterrupciones+1)^0,f,c
  1323  000910                     
  1324                           ;main.c: 541:         if (contInterrupciones == 6) {
  1325  000910  0E06               	movlw	6
  1326  000912  1811               	xorwf	_contInterrupciones^0,w,c
  1327  000914  1012               	iorwf	(_contInterrupciones+1)^0,w,c
  1328  000916  A4D8               	btfss	status,2,c
  1329  000918  EF90  F004         	goto	u1391
  1330  00091C  EF92  F004         	goto	u1390
  1331  000920                     u1391:
  1332  000920  EFCB  F004         	goto	l317
  1333  000924                     u1390:
  1334  000924                     
  1335                           ;main.c: 542:             contInterrupciones = 0;
  1336  000924  0E00               	movlw	0
  1337  000926  6E12               	movwf	(_contInterrupciones+1)^0,c
  1338  000928  0E00               	movlw	0
  1339  00092A  6E11               	movwf	_contInterrupciones^0,c
  1340  00092C                     
  1341                           ;main.c: 543:             minutosTranscurridos++;
  1342  00092C  2A14               	incf	_minutosTranscurridos^0,f,c
  1343  00092E                     
  1344                           ;main.c: 546:             if (minutosTranscurridos >= minutosRegar) {
  1345  00092E  5015               	movf	_minutosRegar^0,w,c
  1346  000930  5C14               	subwf	_minutosTranscurridos^0,w,c
  1347  000932  A0D8               	btfss	status,0,c
  1348  000934  EF9E  F004         	goto	u1401
  1349  000938  EFA0  F004         	goto	u1400
  1350  00093C                     u1401:
  1351  00093C  EFCB  F004         	goto	l317
  1352  000940                     u1400:
  1353  000940                     
  1354                           ;main.c: 548:                 LATD = 0;
  1355  000940  0E00               	movlw	0
  1356  000942  6E8C               	movwf	140,c	;volatile
  1357                           
  1358                           ;main.c: 549:                 minutosTranscurridos = 0;
  1359  000944  0E00               	movlw	0
  1360  000946  6E14               	movwf	_minutosTranscurridos^0,c
  1361                           
  1362                           ;main.c: 550:                 regando = 0;
  1363  000948  0E00               	movlw	0
  1364  00094A  6E13               	movwf	_regando^0,c
  1365  00094C  EFCB  F004         	goto	l317
  1366  000950                     l2289:
  1367                           
  1368                           ;main.c: 556:         dameHoraActual();
  1369  000950  EC8A  F007         	call	_dameHoraActual	;wreg free
  1370  000954                     
  1371                           ;main.c: 558:         if (horaRegar() && !minutos) {
  1372  000954  EC60  F007         	call	_horaRegar	;wreg free
  1373  000958  501F               	movf	?_horaRegar^0,w,c
  1374  00095A  1020               	iorwf	(?_horaRegar+1)^0,w,c
  1375  00095C  B4D8               	btfsc	status,2,c
  1376  00095E  EFB3  F004         	goto	u1411
  1377  000962  EFB5  F004         	goto	u1410
  1378  000966                     u1411:
  1379  000966  EFCB  F004         	goto	l317
  1380  00096A                     u1410:
  1381  00096A  5019               	movf	_minutos^0,w,c
  1382  00096C  A4D8               	btfss	status,2,c
  1383  00096E  EFBB  F004         	goto	u1421
  1384  000972  EFBD  F004         	goto	u1420
  1385  000976                     u1421:
  1386  000976  EFCB  F004         	goto	l317
  1387  00097A                     u1420:
  1388  00097A                     
  1389                           ;main.c: 563:             lecturaAnalogaSensores();
  1390  00097A  EC31  F006         	call	_lecturaAnalogaSensores	;wreg free
  1391  00097E                     
  1392                           ;main.c: 565:             minutosRegar = horarios[hora].tiempoRegar;
  1393  00097E  501A               	movf	_hora^0,w,c
  1394  000980  0D03               	mullw	3
  1395  000982  0E62               	movlw	low (_horarios+2)
  1396  000984  24F3               	addwf	243,w,c
  1397  000986  6ED9               	movwf	fsr2l,c
  1398  000988  0E00               	movlw	high (_horarios+2)
  1399  00098A  20F4               	addwfc	prodh,w,c
  1400  00098C  6EDA               	movwf	fsr2h,c
  1401  00098E  50DF               	movf	indf2,w,c
  1402  000990  6E15               	movwf	_minutosRegar^0,c
  1403  000992                     
  1404                           ;main.c: 566:             encenderBombas();
  1405  000992  EC09  F000         	call	_encenderBombas	;wreg free
  1406  000996                     l317:
  1407  000996  0012               	return		;funcret
  1408  000998                     __end_of_sistemaRegado:
  1409                           	opt callstack 0
  1410                           
  1411 ;; *************** function _lecturaAnalogaSensores *****************
  1412 ;; Defined at:
  1413 ;;		line 486 in file "main.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;		None
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  i               2    3[COMRAM] int 
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      void 
  1420 ;; Registers used:
  1421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1427 ;;      Params:         0       0       0       0       0       0       0       0       0
  1428 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1429 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1430 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1431 ;;Total ram usage:        3 bytes
  1432 ;; Hardware stack levels used:    1
  1433 ;; Hardware stack levels required when called:    2
  1434 ;; This function calls:
  1435 ;;		_dameHumedadSuelo
  1436 ;; This function is called by:
  1437 ;;		_sistemaRegado
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           	psect	text2
  1442  000C62                     __ptext2:
  1443                           	opt callstack 0
  1444  000C62                     _lecturaAnalogaSensores:
  1445                           	opt callstack 27
  1446  000C62                     
  1447                           ;main.c: 488:     for (int i = 0; i < 3; i++) {
  1448  000C62  0E00               	movlw	0
  1449  000C64  6E23               	movwf	(lecturaAnalogaSensores@i+1)^0,c
  1450  000C66  0E00               	movlw	0
  1451  000C68  6E22               	movwf	lecturaAnalogaSensores@i^0,c
  1452  000C6A                     l2131:
  1453                           
  1454                           ;main.c: 489:         sensores[i].humedadMedida = dameHumedadSuelo(i);
  1455  000C6A  90D8               	bcf	status,0,c
  1456  000C6C  3422               	rlcf	lecturaAnalogaSensores@i^0,w,c
  1457  000C6E  6ED9               	movwf	fsr2l,c
  1458  000C70  3423               	rlcf	(lecturaAnalogaSensores@i+1)^0,w,c
  1459  000C72  6EDA               	movwf	fsr2h,c
  1460  000C74  0E01               	movlw	low _sensores
  1461  000C76  26D9               	addwf	fsr2l,f,c
  1462  000C78  0E00               	movlw	high _sensores
  1463  000C7A  22DA               	addwfc	fsr2h,f,c
  1464  000C7C  5022               	movf	lecturaAnalogaSensores@i^0,w,c
  1465  000C7E  EC12  F007         	call	_dameHumedadSuelo
  1466  000C82  6EDF               	movwf	indf2,c
  1467  000C84                     
  1468                           ;main.c: 490:         _delay((unsigned long)((5)*(4000000/4000.0)));
  1469  000C84  0E07               	movlw	7
  1470  000C86  6E21               	movwf	??_lecturaAnalogaSensores^0,c
  1471  000C88  0E7D               	movlw	125
  1472  000C8A                     u1477:
  1473  000C8A  2EE8               	decfsz	wreg,f,c
  1474  000C8C  D7FE               	bra	u1477
  1475  000C8E  2E21               	decfsz	??_lecturaAnalogaSensores^0,f,c
  1476  000C90  D7FC               	bra	u1477
  1477  000C92  F000               	nop	
  1478  000C94                     
  1479                           ;main.c: 491:     }
  1480  000C94  4A22               	infsnz	lecturaAnalogaSensores@i^0,f,c
  1481  000C96  2A23               	incf	(lecturaAnalogaSensores@i+1)^0,f,c
  1482  000C98  BE23               	btfsc	(lecturaAnalogaSensores@i+1)^0,7,c
  1483  000C9A  EF58  F006         	goto	u1281
  1484  000C9E  5023               	movf	(lecturaAnalogaSensores@i+1)^0,w,c
  1485  000CA0  E109               	bnz	u1280
  1486  000CA2  0E03               	movlw	3
  1487  000CA4  5C22               	subwf	lecturaAnalogaSensores@i^0,w,c
  1488  000CA6  A0D8               	btfss	status,0,c
  1489  000CA8  EF58  F006         	goto	u1281
  1490  000CAC  EF5A  F006         	goto	u1280
  1491  000CB0                     u1281:
  1492  000CB0  EF35  F006         	goto	l2131
  1493  000CB4                     u1280:
  1494  000CB4  0012               	return		;funcret
  1495  000CB6                     __end_of_lecturaAnalogaSensores:
  1496                           	opt callstack 0
  1497                           
  1498 ;; *************** function _dameHumedadSuelo *****************
  1499 ;; Defined at:
  1500 ;;		line 445 in file "main.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;  canalLeer       1    wreg     unsigned char 
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;  canalLeer       1    1[COMRAM] unsigned char 
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  1    wreg      unsigned char 
  1507 ;; Registers used:
  1508 ;;		wreg, status,2, status,0
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1514 ;;      Params:         0       0       0       0       0       0       0       0       0
  1515 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1516 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1517 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1518 ;;Total ram usage:        2 bytes
  1519 ;; Hardware stack levels used:    1
  1520 ;; Hardware stack levels required when called:    1
  1521 ;; This function calls:
  1522 ;;		Nothing
  1523 ;; This function is called by:
  1524 ;;		_lecturaAnalogaSensores
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           	psect	text3
  1529  000E24                     __ptext3:
  1530                           	opt callstack 0
  1531  000E24                     _dameHumedadSuelo:
  1532                           	opt callstack 27
  1533                           
  1534                           ;incstack = 0
  1535                           ;dameHumedadSuelo@canalLeer stored from wreg
  1536  000E24  6E20               	movwf	dameHumedadSuelo@canalLeer^0,c
  1537  000E26                     
  1538                           ;main.c: 447:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  1539  000E26  0E06               	movlw	6
  1540  000E28                     u1487:
  1541  000E28  2EE8               	decfsz	wreg,f,c
  1542  000E2A  D7FE               	bra	u1487
  1543  000E2C  D000               	nop2	
  1544  000E2E                     
  1545                           ;main.c: 449:     ADCON0bits.ADON = 1;
  1546  000E2E  80C2               	bsf	194,0,c	;volatile
  1547  000E30                     
  1548                           ;main.c: 450:     ADCON0bits.CHS = canalLeer;
  1549  000E30  C020  F01F         	movff	dameHumedadSuelo@canalLeer,??_dameHumedadSuelo
  1550  000E34  461F               	rlncf	??_dameHumedadSuelo^0,f,c
  1551  000E36  461F               	rlncf	??_dameHumedadSuelo^0,f,c
  1552  000E38  50C2               	movf	194,w,c	;volatile
  1553  000E3A  181F               	xorwf	??_dameHumedadSuelo^0,w,c
  1554  000E3C  0BC3               	andlw	-61
  1555  000E3E  181F               	xorwf	??_dameHumedadSuelo^0,w,c
  1556  000E40  6EC2               	movwf	194,c	;volatile
  1557  000E42                     
  1558                           ;main.c: 451:     ADCON0bits.GO = 1;
  1559  000E42  82C2               	bsf	194,1,c	;volatile
  1560  000E44                     
  1561                           ;main.c: 452:     ADCON0bits.GO_DONE = 1;
  1562  000E44  82C2               	bsf	194,1,c	;volatile
  1563  000E46                     l277:
  1564  000E46  B2C2               	btfsc	194,1,c	;volatile
  1565  000E48  EF28  F007         	goto	u921
  1566  000E4C  EF2A  F007         	goto	u920
  1567  000E50                     u921:
  1568  000E50  EF23  F007         	goto	l277
  1569  000E54                     u920:
  1570  000E54                     
  1571                           ;main.c: 456:     ADCON0bits.ADON = 0;
  1572  000E54  90C2               	bcf	194,0,c	;volatile
  1573  000E56                     
  1574                           ;main.c: 458:     return (ADRESH << 8) +ADRESL;
  1575  000E56  50C3               	movf	195,w,c	;volatile
  1576  000E58  0012               	return		;funcret
  1577  000E5A                     __end_of_dameHumedadSuelo:
  1578                           	opt callstack 0
  1579                           
  1580 ;; *************** function _horaRegar *****************
  1581 ;; Defined at:
  1582 ;;		line 116 in file "main.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;		None
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  2    0[COMRAM] int 
  1589 ;; Registers used:
  1590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1596 ;;      Params:         2       0       0       0       0       0       0       0       0
  1597 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1598 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1599 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1600 ;;Total ram usage:        3 bytes
  1601 ;; Hardware stack levels used:    1
  1602 ;; Hardware stack levels required when called:    1
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_sistemaRegado
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           	psect	text4
  1611  000EC0                     __ptext4:
  1612                           	opt callstack 0
  1613  000EC0                     _horaRegar:
  1614                           	opt callstack 28
  1615  000EC0                     
  1616                           ;main.c: 118:     return horarios[hora].regar == 1;
  1617  000EC0  501A               	movf	_hora^0,w,c
  1618  000EC2  0D03               	mullw	3
  1619  000EC4  0E61               	movlw	low (_horarios+1)
  1620  000EC6  24F3               	addwf	243,w,c
  1621  000EC8  6ED9               	movwf	fsr2l,c
  1622  000ECA  0E00               	movlw	high (_horarios+1)
  1623  000ECC  20F4               	addwfc	prodh,w,c
  1624  000ECE  6EDA               	movwf	fsr2h,c
  1625  000ED0  04DE               	decf	postinc2,w,c
  1626  000ED2  B4D8               	btfsc	status,2,c
  1627  000ED4  EF6E  F007         	goto	u931
  1628  000ED8  EF71  F007         	goto	u930
  1629  000EDC                     u931:
  1630  000EDC  0E01               	movlw	1
  1631  000EDE  EF72  F007         	goto	u940
  1632  000EE2                     u930:
  1633  000EE2  0E00               	movlw	0
  1634  000EE4                     u940:
  1635  000EE4  6E1F               	movwf	?_horaRegar^0,c
  1636  000EE6  6A20               	clrf	(?_horaRegar+1)^0,c
  1637  000EE8  0012               	return		;funcret
  1638  000EEA                     __end_of_horaRegar:
  1639                           	opt callstack 0
  1640                           
  1641 ;; *************** function _encenderBombas *****************
  1642 ;; Defined at:
  1643 ;;		line 226 in file "main.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;		None
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;  i               2    5[COMRAM] int 
  1648 ;;  flagSeco        1    4[COMRAM] unsigned char 
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1658 ;;      Params:         0       0       0       0       0       0       0       0       0
  1659 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1660 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1661 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1662 ;;Total ram usage:        5 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; Hardware stack levels required when called:    2
  1665 ;; This function calls:
  1666 ;;		_estaSeco
  1667 ;; This function is called by:
  1668 ;;		_sistemaRegado
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text5
  1673  000012                     __ptext5:
  1674                           	opt callstack 0
  1675  000012                     _encenderBombas:
  1676                           	opt callstack 27
  1677  000012                     
  1678                           ;main.c: 228:     char flagSeco = 0;
  1679  000012  0E00               	movlw	0
  1680  000014  6E23               	movwf	encenderBombas@flagSeco^0,c
  1681                           
  1682                           ;main.c: 230:     for (int i = 0; i < 3; i++) {
  1683  000016  0E00               	movlw	0
  1684  000018  6E25               	movwf	(encenderBombas@i+1)^0,c
  1685  00001A  0E00               	movlw	0
  1686  00001C  6E24               	movwf	encenderBombas@i^0,c
  1687  00001E  EFEB  F000         	goto	l1941
  1688  000022                     l1891:
  1689                           
  1690                           ;main.c: 235:                 if (estaSeco(sensores[i])) {
  1691  000022  90D8               	bcf	status,0,c
  1692  000024  3424               	rlcf	encenderBombas@i^0,w,c
  1693  000026  6ED9               	movwf	fsr2l,c
  1694  000028  3425               	rlcf	(encenderBombas@i+1)^0,w,c
  1695  00002A  6EDA               	movwf	fsr2h,c
  1696  00002C  0E01               	movlw	low _sensores
  1697  00002E  26D9               	addwf	fsr2l,f,c
  1698  000030  0E00               	movlw	high _sensores
  1699  000032  22DA               	addwfc	fsr2h,f,c
  1700  000034  CFDE F01F          	movff	postinc2,estaSeco@s
  1701  000038  CFDD F020          	movff	postdec2,estaSeco@s+1
  1702  00003C  ECE2  F007         	call	_estaSeco	;wreg free
  1703  000040  501F               	movf	?_estaSeco^0,w,c
  1704  000042  1020               	iorwf	(?_estaSeco+1)^0,w,c
  1705  000044  B4D8               	btfsc	status,2,c
  1706  000046  EF27  F000         	goto	u951
  1707  00004A  EF29  F000         	goto	u950
  1708  00004E                     u951:
  1709  00004E  EF19  F001         	goto	l1943
  1710  000052                     u950:
  1711  000052                     
  1712                           ;main.c: 236:                     LATDbits.LATD0 = 1;
  1713  000052  808C               	bsf	140,0,c	;volatile
  1714  000054                     l1895:
  1715                           
  1716                           ;main.c: 237:                     flagSeco = 1;
  1717  000054  0E01               	movlw	1
  1718  000056  6E23               	movwf	encenderBombas@flagSeco^0,c
  1719  000058  EF19  F001         	goto	l1943
  1720  00005C                     l1897:
  1721                           
  1722                           ;main.c: 242:                 if (estaSeco(sensores[i])) {
  1723  00005C  90D8               	bcf	status,0,c
  1724  00005E  3424               	rlcf	encenderBombas@i^0,w,c
  1725  000060  6ED9               	movwf	fsr2l,c
  1726  000062  3425               	rlcf	(encenderBombas@i+1)^0,w,c
  1727  000064  6EDA               	movwf	fsr2h,c
  1728  000066  0E01               	movlw	low _sensores
  1729  000068  26D9               	addwf	fsr2l,f,c
  1730  00006A  0E00               	movlw	high _sensores
  1731  00006C  22DA               	addwfc	fsr2h,f,c
  1732  00006E  CFDE F01F          	movff	postinc2,estaSeco@s
  1733  000072  CFDD F020          	movff	postdec2,estaSeco@s+1
  1734  000076  ECE2  F007         	call	_estaSeco	;wreg free
  1735  00007A  501F               	movf	?_estaSeco^0,w,c
  1736  00007C  1020               	iorwf	(?_estaSeco+1)^0,w,c
  1737  00007E  B4D8               	btfsc	status,2,c
  1738  000080  EF44  F000         	goto	u961
  1739  000084  EF46  F000         	goto	u960
  1740  000088                     u961:
  1741  000088  EF19  F001         	goto	l1943
  1742  00008C                     u960:
  1743  00008C                     
  1744                           ;main.c: 243:                     LATDbits.LATD1 = 1;
  1745  00008C  828C               	bsf	140,1,c	;volatile
  1746  00008E  EF2A  F000         	goto	l1895
  1747  000092                     l1903:
  1748                           
  1749                           ;main.c: 249:                 if (estaSeco(sensores[i])) {
  1750  000092  90D8               	bcf	status,0,c
  1751  000094  3424               	rlcf	encenderBombas@i^0,w,c
  1752  000096  6ED9               	movwf	fsr2l,c
  1753  000098  3425               	rlcf	(encenderBombas@i+1)^0,w,c
  1754  00009A  6EDA               	movwf	fsr2h,c
  1755  00009C  0E01               	movlw	low _sensores
  1756  00009E  26D9               	addwf	fsr2l,f,c
  1757  0000A0  0E00               	movlw	high _sensores
  1758  0000A2  22DA               	addwfc	fsr2h,f,c
  1759  0000A4  CFDE F01F          	movff	postinc2,estaSeco@s
  1760  0000A8  CFDD F020          	movff	postdec2,estaSeco@s+1
  1761  0000AC  ECE2  F007         	call	_estaSeco	;wreg free
  1762  0000B0  501F               	movf	?_estaSeco^0,w,c
  1763  0000B2  1020               	iorwf	(?_estaSeco+1)^0,w,c
  1764  0000B4  B4D8               	btfsc	status,2,c
  1765  0000B6  EF5F  F000         	goto	u971
  1766  0000BA  EF61  F000         	goto	u970
  1767  0000BE                     u971:
  1768  0000BE  EF19  F001         	goto	l1943
  1769  0000C2                     u970:
  1770  0000C2                     
  1771                           ;main.c: 250:                     LATDbits.LATD2 = 1;
  1772  0000C2  848C               	bsf	140,2,c	;volatile
  1773  0000C4  EF2A  F000         	goto	l1895
  1774  0000C8                     l1909:
  1775                           
  1776                           ;main.c: 256:                 if (estaSeco(sensores[i])) {
  1777  0000C8  90D8               	bcf	status,0,c
  1778  0000CA  3424               	rlcf	encenderBombas@i^0,w,c
  1779  0000CC  6ED9               	movwf	fsr2l,c
  1780  0000CE  3425               	rlcf	(encenderBombas@i+1)^0,w,c
  1781  0000D0  6EDA               	movwf	fsr2h,c
  1782  0000D2  0E01               	movlw	low _sensores
  1783  0000D4  26D9               	addwf	fsr2l,f,c
  1784  0000D6  0E00               	movlw	high _sensores
  1785  0000D8  22DA               	addwfc	fsr2h,f,c
  1786  0000DA  CFDE F01F          	movff	postinc2,estaSeco@s
  1787  0000DE  CFDD F020          	movff	postdec2,estaSeco@s+1
  1788  0000E2  ECE2  F007         	call	_estaSeco	;wreg free
  1789  0000E6  501F               	movf	?_estaSeco^0,w,c
  1790  0000E8  1020               	iorwf	(?_estaSeco+1)^0,w,c
  1791  0000EA  B4D8               	btfsc	status,2,c
  1792  0000EC  EF7A  F000         	goto	u981
  1793  0000F0  EF7C  F000         	goto	u980
  1794  0000F4                     u981:
  1795  0000F4  EF19  F001         	goto	l1943
  1796  0000F8                     u980:
  1797  0000F8                     
  1798                           ;main.c: 257:                     LATDbits.LATD3 = 1;
  1799  0000F8  868C               	bsf	140,3,c	;volatile
  1800  0000FA  EF2A  F000         	goto	l1895
  1801  0000FE                     l1915:
  1802                           
  1803                           ;main.c: 263:                 if (estaSeco(sensores[i])) {
  1804  0000FE  90D8               	bcf	status,0,c
  1805  000100  3424               	rlcf	encenderBombas@i^0,w,c
  1806  000102  6ED9               	movwf	fsr2l,c
  1807  000104  3425               	rlcf	(encenderBombas@i+1)^0,w,c
  1808  000106  6EDA               	movwf	fsr2h,c
  1809  000108  0E01               	movlw	low _sensores
  1810  00010A  26D9               	addwf	fsr2l,f,c
  1811  00010C  0E00               	movlw	high _sensores
  1812  00010E  22DA               	addwfc	fsr2h,f,c
  1813  000110  CFDE F01F          	movff	postinc2,estaSeco@s
  1814  000114  CFDD F020          	movff	postdec2,estaSeco@s+1
  1815  000118  ECE2  F007         	call	_estaSeco	;wreg free
  1816  00011C  501F               	movf	?_estaSeco^0,w,c
  1817  00011E  1020               	iorwf	(?_estaSeco+1)^0,w,c
  1818  000120  B4D8               	btfsc	status,2,c
  1819  000122  EF95  F000         	goto	u991
  1820  000126  EF97  F000         	goto	u990
  1821  00012A                     u991:
  1822  00012A  EF19  F001         	goto	l1943
  1823  00012E                     u990:
  1824  00012E                     
  1825                           ;main.c: 264:                     LATDbits.LATD4 = 1;
  1826  00012E  888C               	bsf	140,4,c	;volatile
  1827  000130  EF2A  F000         	goto	l1895
  1828  000134                     l1921:
  1829                           
  1830                           ;main.c: 270:                 if (estaSeco(sensores[i])) {
  1831  000134  90D8               	bcf	status,0,c
  1832  000136  3424               	rlcf	encenderBombas@i^0,w,c
  1833  000138  6ED9               	movwf	fsr2l,c
  1834  00013A  3425               	rlcf	(encenderBombas@i+1)^0,w,c
  1835  00013C  6EDA               	movwf	fsr2h,c
  1836  00013E  0E01               	movlw	low _sensores
  1837  000140  26D9               	addwf	fsr2l,f,c
  1838  000142  0E00               	movlw	high _sensores
  1839  000144  22DA               	addwfc	fsr2h,f,c
  1840  000146  CFDE F01F          	movff	postinc2,estaSeco@s
  1841  00014A  CFDD F020          	movff	postdec2,estaSeco@s+1
  1842  00014E  ECE2  F007         	call	_estaSeco	;wreg free
  1843  000152  501F               	movf	?_estaSeco^0,w,c
  1844  000154  1020               	iorwf	(?_estaSeco+1)^0,w,c
  1845  000156  B4D8               	btfsc	status,2,c
  1846  000158  EFB0  F000         	goto	u1001
  1847  00015C  EFB2  F000         	goto	u1000
  1848  000160                     u1001:
  1849  000160  EF19  F001         	goto	l1943
  1850  000164                     u1000:
  1851  000164                     
  1852                           ;main.c: 271:                     LATDbits.LATD5 = 1;
  1853  000164  8A8C               	bsf	140,5,c	;volatile
  1854  000166  EF2A  F000         	goto	l1895
  1855  00016A                     l1927:
  1856                           
  1857                           ;main.c: 277:                 if (estaSeco(sensores[i])) {
  1858  00016A  90D8               	bcf	status,0,c
  1859  00016C  3424               	rlcf	encenderBombas@i^0,w,c
  1860  00016E  6ED9               	movwf	fsr2l,c
  1861  000170  3425               	rlcf	(encenderBombas@i+1)^0,w,c
  1862  000172  6EDA               	movwf	fsr2h,c
  1863  000174  0E01               	movlw	low _sensores
  1864  000176  26D9               	addwf	fsr2l,f,c
  1865  000178  0E00               	movlw	high _sensores
  1866  00017A  22DA               	addwfc	fsr2h,f,c
  1867  00017C  CFDE F01F          	movff	postinc2,estaSeco@s
  1868  000180  CFDD F020          	movff	postdec2,estaSeco@s+1
  1869  000184  ECE2  F007         	call	_estaSeco	;wreg free
  1870  000188  501F               	movf	?_estaSeco^0,w,c
  1871  00018A  1020               	iorwf	(?_estaSeco+1)^0,w,c
  1872  00018C  B4D8               	btfsc	status,2,c
  1873  00018E  EFCB  F000         	goto	u1011
  1874  000192  EFCD  F000         	goto	u1010
  1875  000196                     u1011:
  1876  000196  EF19  F001         	goto	l1943
  1877  00019A                     u1010:
  1878  00019A                     
  1879                           ;main.c: 278:                     LATDbits.LATD6 = 1;
  1880  00019A  8C8C               	bsf	140,6,c	;volatile
  1881  00019C  EF2A  F000         	goto	l1895
  1882  0001A0                     l1933:
  1883                           
  1884                           ;main.c: 284:                 if (estaSeco(sensores[i])) {
  1885  0001A0  90D8               	bcf	status,0,c
  1886  0001A2  3424               	rlcf	encenderBombas@i^0,w,c
  1887  0001A4  6ED9               	movwf	fsr2l,c
  1888  0001A6  3425               	rlcf	(encenderBombas@i+1)^0,w,c
  1889  0001A8  6EDA               	movwf	fsr2h,c
  1890  0001AA  0E01               	movlw	low _sensores
  1891  0001AC  26D9               	addwf	fsr2l,f,c
  1892  0001AE  0E00               	movlw	high _sensores
  1893  0001B0  22DA               	addwfc	fsr2h,f,c
  1894  0001B2  CFDE F01F          	movff	postinc2,estaSeco@s
  1895  0001B6  CFDD F020          	movff	postdec2,estaSeco@s+1
  1896  0001BA  ECE2  F007         	call	_estaSeco	;wreg free
  1897  0001BE  501F               	movf	?_estaSeco^0,w,c
  1898  0001C0  1020               	iorwf	(?_estaSeco+1)^0,w,c
  1899  0001C2  B4D8               	btfsc	status,2,c
  1900  0001C4  EFE6  F000         	goto	u1021
  1901  0001C8  EFE8  F000         	goto	u1020
  1902  0001CC                     u1021:
  1903  0001CC  EF19  F001         	goto	l1943
  1904  0001D0                     u1020:
  1905  0001D0                     
  1906                           ;main.c: 285:                     LATDbits.LATD7 = 1;
  1907  0001D0  8E8C               	bsf	140,7,c	;volatile
  1908  0001D2  EF2A  F000         	goto	l1895
  1909  0001D6                     l1941:
  1910  0001D6  C024  F021         	movff	encenderBombas@i,??_encenderBombas
  1911  0001DA  C025  F022         	movff	encenderBombas@i+1,??_encenderBombas+1
  1912                           
  1913                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1914                           ; Switch size 1, requested type "simple"
  1915                           ; Number of cases is 1, Range of values is 0 to 0
  1916                           ; switch strategies available:
  1917                           ; Name         Instructions Cycles
  1918                           ; simple_byte            4     3 (average)
  1919                           ;	Chosen strategy is simple_byte
  1920  0001DE  5022               	movf	(??_encenderBombas+1)^0,w,c
  1921  0001E0  0A00               	xorlw	0	; case 0
  1922  0001E2  B4D8               	btfsc	status,2,c
  1923  0001E4  EFF6  F000         	goto	l2385
  1924  0001E8  EF19  F001         	goto	l1943
  1925  0001EC                     l2385:
  1926                           
  1927                           ; Switch size 1, requested type "simple"
  1928                           ; Number of cases is 8, Range of values is 0 to 7
  1929                           ; switch strategies available:
  1930                           ; Name         Instructions Cycles
  1931                           ; simple_byte           25    13 (average)
  1932                           ;	Chosen strategy is simple_byte
  1933  0001EC  5021               	movf	??_encenderBombas^0,w,c
  1934  0001EE  0A00               	xorlw	0	; case 0
  1935  0001F0  B4D8               	btfsc	status,2,c
  1936  0001F2  EF11  F000         	goto	l1891
  1937  0001F6  0A01               	xorlw	1	; case 1
  1938  0001F8  B4D8               	btfsc	status,2,c
  1939  0001FA  EF2E  F000         	goto	l1897
  1940  0001FE  0A03               	xorlw	3	; case 2
  1941  000200  B4D8               	btfsc	status,2,c
  1942  000202  EF49  F000         	goto	l1903
  1943  000206  0A01               	xorlw	1	; case 3
  1944  000208  B4D8               	btfsc	status,2,c
  1945  00020A  EF64  F000         	goto	l1909
  1946  00020E  0A07               	xorlw	7	; case 4
  1947  000210  B4D8               	btfsc	status,2,c
  1948  000212  EF7F  F000         	goto	l1915
  1949  000216  0A01               	xorlw	1	; case 5
  1950  000218  B4D8               	btfsc	status,2,c
  1951  00021A  EF9A  F000         	goto	l1921
  1952  00021E  0A03               	xorlw	3	; case 6
  1953  000220  B4D8               	btfsc	status,2,c
  1954  000222  EFB5  F000         	goto	l1927
  1955  000226  0A01               	xorlw	1	; case 7
  1956  000228  B4D8               	btfsc	status,2,c
  1957  00022A  EFD0  F000         	goto	l1933
  1958  00022E  EF19  F001         	goto	l1943
  1959  000232                     l1943:
  1960                           
  1961                           ;main.c: 291:     }
  1962  000232  4A24               	infsnz	encenderBombas@i^0,f,c
  1963  000234  2A25               	incf	(encenderBombas@i+1)^0,f,c
  1964  000236  BE25               	btfsc	(encenderBombas@i+1)^0,7,c
  1965  000238  EF27  F001         	goto	u1031
  1966  00023C  5025               	movf	(encenderBombas@i+1)^0,w,c
  1967  00023E  E109               	bnz	u1030
  1968  000240  0E03               	movlw	3
  1969  000242  5C24               	subwf	encenderBombas@i^0,w,c
  1970  000244  A0D8               	btfss	status,0,c
  1971  000246  EF27  F001         	goto	u1031
  1972  00024A  EF29  F001         	goto	u1030
  1973  00024E                     u1031:
  1974  00024E  EFEB  F000         	goto	l1941
  1975  000252                     u1030:
  1976  000252                     
  1977                           ;main.c: 293:     if (flagSeco)
  1978  000252  5023               	movf	encenderBombas@flagSeco^0,w,c
  1979  000254  B4D8               	btfsc	status,2,c
  1980  000256  EF2F  F001         	goto	u1041
  1981  00025A  EF31  F001         	goto	u1040
  1982  00025E                     u1041:
  1983  00025E  EF33  F001         	goto	l239
  1984  000262                     u1040:
  1985  000262                     
  1986                           ;main.c: 294:         regando = 1;
  1987  000262  0E01               	movlw	1
  1988  000264  6E13               	movwf	_regando^0,c
  1989  000266                     l239:
  1990  000266  0012               	return		;funcret
  1991  000268                     __end_of_encenderBombas:
  1992                           	opt callstack 0
  1993                           
  1994 ;; *************** function _estaSeco *****************
  1995 ;; Defined at:
  1996 ;;		line 112 in file "main.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  s               2    0[COMRAM] struct .
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;		None
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  2    0[COMRAM] int 
  2003 ;; Registers used:
  2004 ;;		wreg, status,2, status,0
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2010 ;;      Params:         2       0       0       0       0       0       0       0       0
  2011 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2012 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2013 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2014 ;;Total ram usage:        2 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; Hardware stack levels required when called:    1
  2017 ;; This function calls:
  2018 ;;		Nothing
  2019 ;; This function is called by:
  2020 ;;		_encenderBombas
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	text6
  2025  000FC4                     __ptext6:
  2026                           	opt callstack 0
  2027  000FC4                     _estaSeco:
  2028                           	opt callstack 27
  2029  000FC4                     
  2030                           ;main.c: 113:     return s.humedadMedida >= 60;
  2031  000FC4  0E3C               	movlw	60
  2032  000FC6  601F               	cpfslt	estaSeco@s^0,c
  2033  000FC8  EFE8  F007         	goto	u831
  2034  000FCC  EFEB  F007         	goto	u830
  2035  000FD0                     u831:
  2036  000FD0  0E01               	movlw	1
  2037  000FD2  EFEC  F007         	goto	u840
  2038  000FD6                     u830:
  2039  000FD6  0E00               	movlw	0
  2040  000FD8                     u840:
  2041  000FD8  6E1F               	movwf	?_estaSeco^0,c
  2042  000FDA  6A20               	clrf	(?_estaSeco+1)^0,c
  2043  000FDC  0012               	return		;funcret
  2044  000FDE                     __end_of_estaSeco:
  2045                           	opt callstack 0
  2046                           
  2047 ;; *************** function _dameHoraActual *****************
  2048 ;; Defined at:
  2049 ;;		line 131 in file "main.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;		None
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;		None
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  1    wreg      void 
  2056 ;; Registers used:
  2057 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2063 ;;      Params:         0       0       0       0       0       0       0       0       0
  2064 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2065 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2066 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2067 ;;Total ram usage:        0 bytes
  2068 ;; Hardware stack levels used:    1
  2069 ;; Hardware stack levels required when called:    4
  2070 ;; This function calls:
  2071 ;;		_convertirDato
  2072 ;;		_leer_rtc
  2073 ;; This function is called by:
  2074 ;;		_sistemaRegado
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	text7
  2079  000F14                     __ptext7:
  2080                           	opt callstack 0
  2081  000F14                     _dameHoraActual:
  2082                           	opt callstack 25
  2083  000F14                     
  2084                           ;main.c: 133:     segundos = convertirDato(leer_rtc(0x00));
  2085  000F14  0E00               	movlw	0
  2086  000F16  EC75  F007         	call	_leer_rtc
  2087  000F1A  ECC3  F007         	call	_convertirDato
  2088  000F1E  6E18               	movwf	_segundos^0,c
  2089                           
  2090                           ;main.c: 134:     minutos = convertirDato(leer_rtc(0x01));
  2091  000F20  0E01               	movlw	1
  2092  000F22  EC75  F007         	call	_leer_rtc
  2093  000F26  ECC3  F007         	call	_convertirDato
  2094  000F2A  6E19               	movwf	_minutos^0,c
  2095                           
  2096                           ;main.c: 135:     hora = convertirDato(leer_rtc(0x02));
  2097  000F2C  0E02               	movlw	2
  2098  000F2E  EC75  F007         	call	_leer_rtc
  2099  000F32  ECC3  F007         	call	_convertirDato
  2100  000F36  6E1A               	movwf	_hora^0,c
  2101  000F38  0012               	return		;funcret
  2102  000F3A                     __end_of_dameHoraActual:
  2103                           	opt callstack 0
  2104                           
  2105 ;; *************** function _leer_rtc *****************
  2106 ;; Defined at:
  2107 ;;		line 13 in file "./RTC.h"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  direccion       1    wreg     unsigned char 
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;  direccion       1    2[COMRAM] unsigned char 
  2112 ;;  dato            1    3[COMRAM] unsigned char 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  1    wreg      unsigned char 
  2115 ;; Registers used:
  2116 ;;		wreg, status,2, status,0, cstack
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2122 ;;      Params:         0       0       0       0       0       0       0       0       0
  2123 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2124 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2125 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2126 ;;Total ram usage:        2 bytes
  2127 ;; Hardware stack levels used:    1
  2128 ;; Hardware stack levels required when called:    3
  2129 ;; This function calls:
  2130 ;;		_i2c_detener
  2131 ;;		_i2c_envia_dato
  2132 ;;		_i2c_inicia_com
  2133 ;;		_i2c_recibe_dato
  2134 ;;		_i2c_reinicia_com
  2135 ;; This function is called by:
  2136 ;;		_dameHoraActual
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text8
  2141  000EEA                     __ptext8:
  2142                           	opt callstack 0
  2143  000EEA                     _leer_rtc:
  2144                           	opt callstack 25
  2145                           
  2146                           ;incstack = 0
  2147                           ;leer_rtc@direccion stored from wreg
  2148  000EEA  6E21               	movwf	leer_rtc@direccion^0,c
  2149  000EEC                     
  2150                           ;./RTC.h: 14:     unsigned char dato;;./RTC.h: 15:     i2c_inicia_com();
  2151  000EEC  EC2E  F008         	call	_i2c_inicia_com	;wreg free
  2152                           
  2153                           ;./RTC.h: 16:     i2c_envia_dato(0xD0);
  2154  000EF0  0ED0               	movlw	208
  2155  000EF2  EC1F  F008         	call	_i2c_envia_dato
  2156                           
  2157                           ;./RTC.h: 17:     i2c_envia_dato(direccion);
  2158  000EF6  5021               	movf	leer_rtc@direccion^0,w,c
  2159  000EF8  EC1F  F008         	call	_i2c_envia_dato
  2160                           
  2161                           ;./RTC.h: 18:     i2c_reinicia_com();
  2162  000EFC  EC2A  F008         	call	_i2c_reinicia_com	;wreg free
  2163                           
  2164                           ;./RTC.h: 19:     i2c_envia_dato(0xD1);
  2165  000F00  0ED1               	movlw	209
  2166  000F02  EC1F  F008         	call	_i2c_envia_dato
  2167                           
  2168                           ;./RTC.h: 20:     dato = i2c_recibe_dato();
  2169  000F06  ECEF  F007         	call	_i2c_recibe_dato	;wreg free
  2170  000F0A  6E22               	movwf	leer_rtc@dato^0,c
  2171                           
  2172                           ;./RTC.h: 21:     i2c_detener();
  2173  000F0C  EC32  F008         	call	_i2c_detener	;wreg free
  2174  000F10                     
  2175                           ;./RTC.h: 22:     return dato;
  2176  000F10  5022               	movf	leer_rtc@dato^0,w,c
  2177  000F12  0012               	return		;funcret
  2178  000F14                     __end_of_leer_rtc:
  2179                           	opt callstack 0
  2180                           
  2181 ;; *************** function _convertirDato *****************
  2182 ;; Defined at:
  2183 ;;		line 28 in file "./RTC.h"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  dato            1    wreg     unsigned char 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  dato            1    1[COMRAM] unsigned char 
  2188 ;;  datoR           1    2[COMRAM] unsigned char 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      unsigned char 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0, prodl, prodh
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2198 ;;      Params:         0       0       0       0       0       0       0       0       0
  2199 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2200 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2201 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2202 ;;Total ram usage:        3 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    1
  2205 ;; This function calls:
  2206 ;;		Nothing
  2207 ;; This function is called by:
  2208 ;;		_dameHoraActual
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text9
  2213  000F86                     __ptext9:
  2214                           	opt callstack 0
  2215  000F86                     _convertirDato:
  2216                           	opt callstack 27
  2217                           
  2218                           ;incstack = 0
  2219                           ;convertirDato@dato stored from wreg
  2220  000F86  6E20               	movwf	convertirDato@dato^0,c
  2221  000F88                     
  2222                           ;./RTC.h: 30:     datoR = (dato & 0xF0) >> 4;
  2223  000F88  3820               	swapf	convertirDato@dato^0,w,c
  2224  000F8A  0B0F               	andlw	15
  2225  000F8C  0B0F               	andlw	15
  2226  000F8E  6E21               	movwf	convertirDato@datoR^0,c
  2227  000F90                     
  2228                           ;./RTC.h: 31:     datoR = (datoR * 10) + (dato & 0x0F);
  2229  000F90  C020  F01F         	movff	convertirDato@dato,??_convertirDato
  2230  000F94  0E0F               	movlw	15
  2231  000F96  161F               	andwf	??_convertirDato^0,f,c
  2232  000F98  5021               	movf	convertirDato@datoR^0,w,c
  2233  000F9A  0D0A               	mullw	10
  2234  000F9C  50F3               	movf	243,w,c
  2235  000F9E  241F               	addwf	??_convertirDato^0,w,c
  2236  000FA0  6E21               	movwf	convertirDato@datoR^0,c
  2237  000FA2                     
  2238                           ;./RTC.h: 32:     return datoR;
  2239  000FA2  5021               	movf	convertirDato@datoR^0,w,c
  2240  000FA4  0012               	return		;funcret
  2241  000FA6                     __end_of_convertirDato:
  2242                           	opt callstack 0
  2243                           
  2244 ;; *************** function _sistemaPrincipal *****************
  2245 ;; Defined at:
  2246 ;;		line 505 in file "main.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  opcion          1    wreg     unsigned char 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  opcion          1   24[COMRAM] unsigned char 
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2260 ;;      Params:         0       0       0       0       0       0       0       0       0
  2261 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2262 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2263 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2264 ;;Total ram usage:        3 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; Hardware stack levels required when called:    6
  2267 ;; This function calls:
  2268 ;;		_UART_printf
  2269 ;;		_asignarHorarios
  2270 ;;		_fijaHoraRtc
  2271 ;;		_mostrarMenu
  2272 ;;		_setTiempoRegar
  2273 ;; This function is called by:
  2274 ;;		_main
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text10
  2279  000B30                     __ptext10:
  2280                           	opt callstack 0
  2281  000B30                     _sistemaPrincipal:
  2282                           	opt callstack 24
  2283                           
  2284                           ;incstack = 0
  2285                           ;sistemaPrincipal@opcion stored from wreg
  2286  000B30  6E37               	movwf	sistemaPrincipal@opcion^0,c
  2287  000B32                     
  2288                           ;main.c: 507:     PIE1bits.RCIE = 0;
  2289  000B32  9A9D               	bcf	157,5,c	;volatile
  2290                           
  2291                           ;main.c: 509:     switch (opcion) {
  2292  000B34  EFB0  F005         	goto	l2265
  2293  000B38                     l2255:
  2294                           
  2295                           ;main.c: 512:             fijaHoraRtc();
  2296  000B38  ECCD  F005         	call	_fijaHoraRtc	;wreg free
  2297                           
  2298                           ;main.c: 513:             break;
  2299  000B3C  EFC9  F005         	goto	l2267
  2300  000B40                     l2257:
  2301                           
  2302                           ;main.c: 516:             asignarHorarios();
  2303  000B40  EC1D  F002         	call	_asignarHorarios	;wreg free
  2304                           
  2305                           ;main.c: 517:             break;
  2306  000B44  EFC9  F005         	goto	l2267
  2307  000B48                     l2259:
  2308                           
  2309                           ;main.c: 520:             setTiempoRegar();
  2310  000B48  EC34  F001         	call	_setTiempoRegar	;wreg free
  2311                           
  2312                           ;main.c: 521:             break;
  2313  000B4C  EFC9  F005         	goto	l2267
  2314  000B50                     l2261:
  2315                           
  2316                           ;main.c: 525:             UART_printf("\r\n Solo se permiten numeros del 1 al 3 \r\n");
  2317  000B50  0E87               	movlw	low STR_24
  2318  000B52  6E20               	movwf	UART_printf@cadena^0,c
  2319  000B54  0E7E               	movlw	high STR_24
  2320  000B56  6E21               	movwf	(UART_printf@cadena+1)^0,c
  2321  000B58  EC2D  F007         	call	_UART_printf	;wreg free
  2322                           
  2323                           ;main.c: 526:             break;
  2324  000B5C  EFC9  F005         	goto	l2267
  2325  000B60                     l2265:
  2326  000B60  5037               	movf	sistemaPrincipal@opcion^0,w,c
  2327  000B62  6E35               	movwf	??_sistemaPrincipal^0,c
  2328  000B64  6A36               	clrf	(??_sistemaPrincipal+1)^0,c
  2329                           
  2330                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2331                           ; Switch size 1, requested type "simple"
  2332                           ; Number of cases is 1, Range of values is 0 to 0
  2333                           ; switch strategies available:
  2334                           ; Name         Instructions Cycles
  2335                           ; simple_byte            4     3 (average)
  2336                           ;	Chosen strategy is simple_byte
  2337  000B66  5036               	movf	(??_sistemaPrincipal+1)^0,w,c
  2338  000B68  0A00               	xorlw	0	; case 0
  2339  000B6A  B4D8               	btfsc	status,2,c
  2340  000B6C  EFBA  F005         	goto	l2387
  2341  000B70  EFA8  F005         	goto	l2261
  2342  000B74                     l2387:
  2343                           
  2344                           ; Switch size 1, requested type "simple"
  2345                           ; Number of cases is 3, Range of values is 1 to 3
  2346                           ; switch strategies available:
  2347                           ; Name         Instructions Cycles
  2348                           ; simple_byte           10     6 (average)
  2349                           ;	Chosen strategy is simple_byte
  2350  000B74  5035               	movf	??_sistemaPrincipal^0,w,c
  2351  000B76  0A01               	xorlw	1	; case 1
  2352  000B78  B4D8               	btfsc	status,2,c
  2353  000B7A  EF9C  F005         	goto	l2255
  2354  000B7E  0A03               	xorlw	3	; case 2
  2355  000B80  B4D8               	btfsc	status,2,c
  2356  000B82  EFA0  F005         	goto	l2257
  2357  000B86  0A01               	xorlw	1	; case 3
  2358  000B88  B4D8               	btfsc	status,2,c
  2359  000B8A  EFA4  F005         	goto	l2259
  2360  000B8E  EFA8  F005         	goto	l2261
  2361  000B92                     l2267:
  2362                           
  2363                           ;main.c: 529:     mostrarMenu();
  2364  000B92  ECAC  F006         	call	_mostrarMenu	;wreg free
  2365  000B96                     
  2366                           ;main.c: 530:     PIE1bits.RCIE = 1;
  2367  000B96  8A9D               	bsf	157,5,c	;volatile
  2368  000B98  0012               	return		;funcret
  2369  000B9A                     __end_of_sistemaPrincipal:
  2370                           	opt callstack 0
  2371                           
  2372 ;; *************** function _setTiempoRegar *****************
  2373 ;; Defined at:
  2374 ;;		line 378 in file "main.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;		None
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  i               2   18[COMRAM] int 
  2379 ;;  i               2   16[COMRAM] int 
  2380 ;;  Rx              1   21[COMRAM] unsigned char 
  2381 ;;  datoCapturad    1   20[COMRAM] unsigned char 
  2382 ;;  hora            1   15[COMRAM] unsigned char 
  2383 ;;  tiempoRegar     1   14[COMRAM] unsigned char 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1    wreg      void 
  2386 ;; Registers used:
  2387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2393 ;;      Params:         0       0       0       0       0       0       0       0       0
  2394 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2395 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2396 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2397 ;;Total ram usage:        8 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; Hardware stack levels required when called:    5
  2400 ;; This function calls:
  2401 ;;		_UART_printf
  2402 ;;		_UART_read
  2403 ;;		_escribeHorariosMemoria
  2404 ;; This function is called by:
  2405 ;;		_sistemaPrincipal
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text11
  2410  000268                     __ptext11:
  2411                           	opt callstack 0
  2412  000268                     _setTiempoRegar:
  2413                           	opt callstack 24
  2414  000268                     
  2415                           ;main.c: 380:     unsigned char hora;;main.c: 381:     unsigned char tiempoRegar;;main.c
      +                          : 382:     unsigned char Rx;;main.c: 383:     char datoCapturado = 0;
  2416  000268  0E00               	movlw	0
  2417  00026A  6E33               	movwf	setTiempoRegar@datoCapturado^0,c
  2418  00026C                     
  2419                           ;main.c: 385:     UART_printf("\r\n TIEMPO DE REGADO \r\n");
  2420  00026C  0EB2               	movlw	low STR_12
  2421  00026E  6E20               	movwf	UART_printf@cadena^0,c
  2422  000270  0E7F               	movlw	high STR_12
  2423  000272  6E21               	movwf	(UART_printf@cadena+1)^0,c
  2424  000274  EC2D  F007         	call	_UART_printf	;wreg free
  2425  000278                     
  2426                           ;main.c: 386:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  2427  000278  0EF8               	movlw	low STR_7
  2428  00027A  6E20               	movwf	UART_printf@cadena^0,c
  2429  00027C  0E7D               	movlw	high STR_7
  2430  00027E  6E21               	movwf	(UART_printf@cadena+1)^0,c
  2431  000280  EC2D  F007         	call	_UART_printf	;wreg free
  2432                           
  2433                           ;main.c: 388:     for (int i = 0; i < 2; i++) {
  2434  000284  0E00               	movlw	0
  2435  000286  6E30               	movwf	(setTiempoRegar@i+1)^0,c
  2436  000288  0E00               	movlw	0
  2437  00028A  6E2F               	movwf	setTiempoRegar@i^0,c
  2438  00028C                     l2045:
  2439                           
  2440                           ;main.c: 389:         Rx = UART_read();
  2441  00028C  EC5B  F006         	call	_UART_read	;wreg free
  2442  000290  6E34               	movwf	setTiempoRegar@Rx^0,c
  2443  000292                     
  2444                           ;main.c: 390:         if (Rx >= 48 && Rx <= 57) {
  2445  000292  0E2F               	movlw	47
  2446  000294  6434               	cpfsgt	setTiempoRegar@Rx^0,c
  2447  000296  EF4F  F001         	goto	u1161
  2448  00029A  EF51  F001         	goto	u1160
  2449  00029E                     u1161:
  2450  00029E  EF74  F001         	goto	l2065
  2451  0002A2                     u1160:
  2452  0002A2  0E3A               	movlw	58
  2453  0002A4  6034               	cpfslt	setTiempoRegar@Rx^0,c
  2454  0002A6  EF57  F001         	goto	u1171
  2455  0002AA  EF59  F001         	goto	u1170
  2456  0002AE                     u1171:
  2457  0002AE  EF74  F001         	goto	l2065
  2458  0002B2                     u1170:
  2459  0002B2                     
  2460                           ;main.c: 391:             if (!i) {
  2461  0002B2  502F               	movf	setTiempoRegar@i^0,w,c
  2462  0002B4  1030               	iorwf	(setTiempoRegar@i+1)^0,w,c
  2463  0002B6  A4D8               	btfss	status,2,c
  2464  0002B8  EF60  F001         	goto	u1181
  2465  0002BC  EF62  F001         	goto	u1180
  2466  0002C0                     u1181:
  2467  0002C0  EF6C  F001         	goto	l2059
  2468  0002C4                     u1180:
  2469  0002C4                     
  2470                           ;main.c: 392:                 Rx -= 48;
  2471  0002C4  0E30               	movlw	48
  2472  0002C6  5E34               	subwf	setTiempoRegar@Rx^0,f,c
  2473  0002C8                     
  2474                           ;main.c: 393:                 hora = Rx;
  2475  0002C8  C034  F02E         	movff	setTiempoRegar@Rx,setTiempoRegar@hora
  2476  0002CC                     
  2477                           ;main.c: 394:                 hora *= 10;
  2478  0002CC  0E0A               	movlw	10
  2479  0002CE  022E               	mulwf	setTiempoRegar@hora^0,c
  2480  0002D0  50F3               	movf	prodl,w,c
  2481  0002D2  6E2E               	movwf	setTiempoRegar@hora^0,c
  2482                           
  2483                           ;main.c: 395:             } else {
  2484  0002D4  EF7E  F001         	goto	l2069
  2485  0002D8                     l2059:
  2486                           
  2487                           ;main.c: 396:                 datoCapturado = 1;
  2488  0002D8  0E01               	movlw	1
  2489  0002DA  6E33               	movwf	setTiempoRegar@datoCapturado^0,c
  2490  0002DC                     
  2491                           ;main.c: 397:                 Rx -= 48;
  2492  0002DC  0E30               	movlw	48
  2493  0002DE  5E34               	subwf	setTiempoRegar@Rx^0,f,c
  2494  0002E0                     
  2495                           ;main.c: 398:                 hora += Rx;
  2496  0002E0  5034               	movf	setTiempoRegar@Rx^0,w,c
  2497  0002E2  262E               	addwf	setTiempoRegar@hora^0,f,c
  2498  0002E4  EF7E  F001         	goto	l2069
  2499  0002E8                     l2065:
  2500                           
  2501                           ;main.c: 401:             datoCapturado = 0;
  2502  0002E8  0E00               	movlw	0
  2503  0002EA  6E33               	movwf	setTiempoRegar@datoCapturado^0,c
  2504  0002EC                     
  2505                           ;main.c: 402:             UART_printf("\r\n DATO NO RECIBIDO \r\n");
  2506  0002EC  0EC9               	movlw	low STR_1
  2507  0002EE  6E20               	movwf	UART_printf@cadena^0,c
  2508  0002F0  0E7F               	movlw	high STR_1
  2509  0002F2  6E21               	movwf	(UART_printf@cadena+1)^0,c
  2510  0002F4  EC2D  F007         	call	_UART_printf	;wreg free
  2511                           
  2512                           ;main.c: 403:             break;
  2513  0002F8  EF8E  F001         	goto	l2073
  2514  0002FC                     l2069:
  2515                           
  2516                           ;main.c: 405:     }
  2517  0002FC  4A2F               	infsnz	setTiempoRegar@i^0,f,c
  2518  0002FE  2A30               	incf	(setTiempoRegar@i+1)^0,f,c
  2519  000300  BE30               	btfsc	(setTiempoRegar@i+1)^0,7,c
  2520  000302  EF8C  F001         	goto	u1191
  2521  000306  5030               	movf	(setTiempoRegar@i+1)^0,w,c
  2522  000308  E109               	bnz	u1190
  2523  00030A  0E02               	movlw	2
  2524  00030C  5C2F               	subwf	setTiempoRegar@i^0,w,c
  2525  00030E  A0D8               	btfss	status,0,c
  2526  000310  EF8C  F001         	goto	u1191
  2527  000314  EF8E  F001         	goto	u1190
  2528  000318                     u1191:
  2529  000318  EF46  F001         	goto	l2045
  2530  00031C                     u1190:
  2531  00031C                     l2073:
  2532                           
  2533                           ;main.c: 407:     if (datoCapturado && !esperandoDatos) {
  2534  00031C  5033               	movf	setTiempoRegar@datoCapturado^0,w,c
  2535  00031E  B4D8               	btfsc	status,2,c
  2536  000320  EF94  F001         	goto	u1201
  2537  000324  EF96  F001         	goto	u1200
  2538  000328                     u1201:
  2539  000328  EF1C  F002         	goto	l274
  2540  00032C                     u1200:
  2541  00032C  501B               	movf	_esperandoDatos^0,w,c
  2542  00032E  A4D8               	btfss	status,2,c
  2543  000330  EF9C  F001         	goto	u1211
  2544  000334  EF9E  F001         	goto	u1210
  2545  000338                     u1211:
  2546  000338  EF1C  F002         	goto	l274
  2547  00033C                     u1210:
  2548  00033C                     
  2549                           ;main.c: 409:         UART_printf("\r\n Ingrese los minutos que desee que se riegue en e
      +                          se horario ej: 15 \r\n");
  2550  00033C  0E79               	movlw	low STR_15
  2551  00033E  6E20               	movwf	UART_printf@cadena^0,c
  2552  000340  0E7D               	movlw	high STR_15
  2553  000342  6E21               	movwf	(UART_printf@cadena+1)^0,c
  2554  000344  EC2D  F007         	call	_UART_printf	;wreg free
  2555  000348                     
  2556                           ;main.c: 411:         for (int i = 0; i < 2; i++) {
  2557  000348  0E00               	movlw	0
  2558  00034A  6E32               	movwf	(setTiempoRegar@i_706+1)^0,c
  2559  00034C  0E00               	movlw	0
  2560  00034E  6E31               	movwf	setTiempoRegar@i_706^0,c
  2561  000350                     l2085:
  2562                           
  2563                           ;main.c: 412:             Rx = UART_read();
  2564  000350  EC5B  F006         	call	_UART_read	;wreg free
  2565  000354  6E34               	movwf	setTiempoRegar@Rx^0,c
  2566  000356                     
  2567                           ;main.c: 413:             if (Rx >= 48 && Rx <= 57) {
  2568  000356  0E2F               	movlw	47
  2569  000358  6434               	cpfsgt	setTiempoRegar@Rx^0,c
  2570  00035A  EFB1  F001         	goto	u1221
  2571  00035E  EFB3  F001         	goto	u1220
  2572  000362                     u1221:
  2573  000362  EFD6  F001         	goto	l2105
  2574  000366                     u1220:
  2575  000366  0E3A               	movlw	58
  2576  000368  6034               	cpfslt	setTiempoRegar@Rx^0,c
  2577  00036A  EFB9  F001         	goto	u1231
  2578  00036E  EFBB  F001         	goto	u1230
  2579  000372                     u1231:
  2580  000372  EFD6  F001         	goto	l2105
  2581  000376                     u1230:
  2582  000376                     
  2583                           ;main.c: 414:                 if (!i) {
  2584  000376  5031               	movf	setTiempoRegar@i_706^0,w,c
  2585  000378  1032               	iorwf	(setTiempoRegar@i_706+1)^0,w,c
  2586  00037A  A4D8               	btfss	status,2,c
  2587  00037C  EFC2  F001         	goto	u1241
  2588  000380  EFC4  F001         	goto	u1240
  2589  000384                     u1241:
  2590  000384  EFCE  F001         	goto	l2099
  2591  000388                     u1240:
  2592  000388                     
  2593                           ;main.c: 415:                     Rx -= 48;
  2594  000388  0E30               	movlw	48
  2595  00038A  5E34               	subwf	setTiempoRegar@Rx^0,f,c
  2596  00038C                     
  2597                           ;main.c: 416:                     tiempoRegar = Rx;
  2598  00038C  C034  F02D         	movff	setTiempoRegar@Rx,setTiempoRegar@tiempoRegar
  2599  000390                     
  2600                           ;main.c: 417:                     tiempoRegar *= 10;
  2601  000390  0E0A               	movlw	10
  2602  000392  022D               	mulwf	setTiempoRegar@tiempoRegar^0,c
  2603  000394  50F3               	movf	prodl,w,c
  2604  000396  6E2D               	movwf	setTiempoRegar@tiempoRegar^0,c
  2605                           
  2606                           ;main.c: 418:                 } else {
  2607  000398  EFE0  F001         	goto	l2109
  2608  00039C                     l2099:
  2609                           
  2610                           ;main.c: 419:                     datoCapturado = 1;
  2611  00039C  0E01               	movlw	1
  2612  00039E  6E33               	movwf	setTiempoRegar@datoCapturado^0,c
  2613  0003A0                     
  2614                           ;main.c: 420:                     Rx -= 48;
  2615  0003A0  0E30               	movlw	48
  2616  0003A2  5E34               	subwf	setTiempoRegar@Rx^0,f,c
  2617  0003A4                     
  2618                           ;main.c: 421:                     tiempoRegar += Rx;
  2619  0003A4  5034               	movf	setTiempoRegar@Rx^0,w,c
  2620  0003A6  262D               	addwf	setTiempoRegar@tiempoRegar^0,f,c
  2621  0003A8  EFE0  F001         	goto	l2109
  2622  0003AC                     l2105:
  2623                           
  2624                           ;main.c: 424:                 datoCapturado = 0;
  2625  0003AC  0E00               	movlw	0
  2626  0003AE  6E33               	movwf	setTiempoRegar@datoCapturado^0,c
  2627  0003B0                     
  2628                           ;main.c: 425:                 UART_printf("\r\n DATO NO RECIBIDO \r\n");
  2629  0003B0  0EC9               	movlw	low STR_1
  2630  0003B2  6E20               	movwf	UART_printf@cadena^0,c
  2631  0003B4  0E7F               	movlw	high STR_1
  2632  0003B6  6E21               	movwf	(UART_printf@cadena+1)^0,c
  2633  0003B8  EC2D  F007         	call	_UART_printf	;wreg free
  2634                           
  2635                           ;main.c: 426:                 break;
  2636  0003BC  EFF0  F001         	goto	l2113
  2637  0003C0                     l2109:
  2638                           
  2639                           ;main.c: 428:         }
  2640  0003C0  4A31               	infsnz	setTiempoRegar@i_706^0,f,c
  2641  0003C2  2A32               	incf	(setTiempoRegar@i_706+1)^0,f,c
  2642  0003C4  BE32               	btfsc	(setTiempoRegar@i_706+1)^0,7,c
  2643  0003C6  EFEE  F001         	goto	u1251
  2644  0003CA  5032               	movf	(setTiempoRegar@i_706+1)^0,w,c
  2645  0003CC  E109               	bnz	u1250
  2646  0003CE  0E02               	movlw	2
  2647  0003D0  5C31               	subwf	setTiempoRegar@i_706^0,w,c
  2648  0003D2  A0D8               	btfss	status,0,c
  2649  0003D4  EFEE  F001         	goto	u1251
  2650  0003D8  EFF0  F001         	goto	u1250
  2651  0003DC                     u1251:
  2652  0003DC  EFA8  F001         	goto	l2085
  2653  0003E0                     u1250:
  2654  0003E0                     l2113:
  2655                           
  2656                           ;main.c: 430:         if (datoCapturado && !esperandoDatos) {
  2657  0003E0  5033               	movf	setTiempoRegar@datoCapturado^0,w,c
  2658  0003E2  B4D8               	btfsc	status,2,c
  2659  0003E4  EFF6  F001         	goto	u1261
  2660  0003E8  EFF8  F001         	goto	u1260
  2661  0003EC                     u1261:
  2662  0003EC  EF1C  F002         	goto	l274
  2663  0003F0                     u1260:
  2664  0003F0  501B               	movf	_esperandoDatos^0,w,c
  2665  0003F2  A4D8               	btfss	status,2,c
  2666  0003F4  EFFE  F001         	goto	u1271
  2667  0003F8  EF00  F002         	goto	u1270
  2668  0003FC                     u1271:
  2669  0003FC  EF1C  F002         	goto	l274
  2670  000400                     u1270:
  2671  000400                     
  2672                           ;main.c: 432:             UART_printf("\r\n Minutos de riego establecidos! \r\n");
  2673  000400  0EB1               	movlw	low STR_17
  2674  000402  6E20               	movwf	UART_printf@cadena^0,c
  2675  000404  0E7E               	movlw	high STR_17
  2676  000406  6E21               	movwf	(UART_printf@cadena+1)^0,c
  2677  000408  EC2D  F007         	call	_UART_printf	;wreg free
  2678  00040C                     
  2679                           ;main.c: 434:             horarios[hora].tiempoRegar = tiempoRegar;
  2680  00040C  502E               	movf	setTiempoRegar@hora^0,w,c
  2681  00040E  0D03               	mullw	3
  2682  000410  0E62               	movlw	low (_horarios+2)
  2683  000412  24F3               	addwf	243,w,c
  2684  000414  6ED9               	movwf	fsr2l,c
  2685  000416  0E00               	movlw	high (_horarios+2)
  2686  000418  20F4               	addwfc	prodh,w,c
  2687  00041A  6EDA               	movwf	fsr2h,c
  2688  00041C  C02D  FFDF         	movff	setTiempoRegar@tiempoRegar,indf2
  2689  000420                     
  2690                           ;main.c: 435:             minutosRegar = horarios[hora].tiempoRegar;
  2691  000420  502E               	movf	setTiempoRegar@hora^0,w,c
  2692  000422  0D03               	mullw	3
  2693  000424  0E62               	movlw	low (_horarios+2)
  2694  000426  24F3               	addwf	243,w,c
  2695  000428  6ED9               	movwf	fsr2l,c
  2696  00042A  0E00               	movlw	high (_horarios+2)
  2697  00042C  20F4               	addwfc	prodh,w,c
  2698  00042E  6EDA               	movwf	fsr2h,c
  2699  000430  50DF               	movf	indf2,w,c
  2700  000432  6E15               	movwf	_minutosRegar^0,c
  2701  000434                     
  2702                           ;main.c: 437:             escribeHorariosMemoria();
  2703  000434  EC4D  F003         	call	_escribeHorariosMemoria	;wreg free
  2704  000438                     l274:
  2705  000438  0012               	return		;funcret
  2706  00043A                     __end_of_setTiempoRegar:
  2707                           	opt callstack 0
  2708                           
  2709 ;; *************** function _mostrarMenu *****************
  2710 ;; Defined at:
  2711 ;;		line 495 in file "main.c"
  2712 ;; Parameters:    Size  Location     Type
  2713 ;;		None
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;		None
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  1    wreg      void 
  2718 ;; Registers used:
  2719 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2725 ;;      Params:         0       0       0       0       0       0       0       0       0
  2726 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2727 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2728 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2729 ;;Total ram usage:        0 bytes
  2730 ;; Hardware stack levels used:    1
  2731 ;; Hardware stack levels required when called:    3
  2732 ;; This function calls:
  2733 ;;		_UART_printf
  2734 ;; This function is called by:
  2735 ;;		_sistemaPrincipal
  2736 ;;		_main
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           	psect	text12
  2741  000D58                     __ptext12:
  2742                           	opt callstack 0
  2743  000D58                     _mostrarMenu:
  2744                           	opt callstack 26
  2745  000D58                     
  2746                           ;main.c: 497:     UART_printf("\r\n Ingresa una opcion a Realizar: \r\n");
  2747  000D58  0ED6               	movlw	low STR_18
  2748  000D5A  6E20               	movwf	UART_printf@cadena^0,c
  2749  000D5C  0E7E               	movlw	high STR_18
  2750  000D5E  6E21               	movwf	(UART_printf@cadena+1)^0,c
  2751  000D60  EC2D  F007         	call	_UART_printf	;wreg free
  2752                           
  2753                           ;main.c: 498:     UART_printf("\r\n 1. Fijar Hora Actual \r\n");
  2754  000D64  0E64               	movlw	low STR_19
  2755  000D66  6E20               	movwf	UART_printf@cadena^0,c
  2756  000D68  0E7F               	movlw	high STR_19
  2757  000D6A  6E21               	movwf	(UART_printf@cadena+1)^0,c
  2758  000D6C  EC2D  F007         	call	_UART_printf	;wreg free
  2759                           
  2760                           ;main.c: 499:     UART_printf("\r\n 2. Asignar Horarios para regar \r\n");
  2761  000D70  0E20               	movlw	low STR_20
  2762  000D72  6E20               	movwf	UART_printf@cadena^0,c
  2763  000D74  0E7F               	movlw	high STR_20
  2764  000D76  6E21               	movwf	(UART_printf@cadena+1)^0,c
  2765  000D78  EC2D  F007         	call	_UART_printf	;wreg free
  2766                           
  2767                           ;main.c: 500:     UART_printf("\r\n 3. Programar tiempo de riego en un horario \r\n");
  2768  000D7C  0E2B               	movlw	low STR_21
  2769  000D7E  6E20               	movwf	UART_printf@cadena^0,c
  2770  000D80  0E7E               	movlw	high STR_21
  2771  000D82  6E21               	movwf	(UART_printf@cadena+1)^0,c
  2772  000D84  EC2D  F007         	call	_UART_printf	;wreg free
  2773                           
  2774                           ;main.c: 501:     UART_printf("\r\n Opcion:  \r");
  2775  000D88  0EF0               	movlw	low STR_22
  2776  000D8A  6E20               	movwf	UART_printf@cadena^0,c
  2777  000D8C  0E7F               	movlw	high STR_22
  2778  000D8E  6E21               	movwf	(UART_printf@cadena+1)^0,c
  2779  000D90  EC2D  F007         	call	_UART_printf	;wreg free
  2780                           
  2781                           ;main.c: 502:     UART_printf("\r\n");
  2782  000D94  0E96               	movlw	low (STR_10+23)
  2783  000D96  6E20               	movwf	UART_printf@cadena^0,c
  2784  000D98  0E7F               	movlw	high (STR_10+23)
  2785  000D9A  6E21               	movwf	(UART_printf@cadena+1)^0,c
  2786  000D9C  EC2D  F007         	call	_UART_printf	;wreg free
  2787  000DA0  0012               	return		;funcret
  2788  000DA2                     __end_of_mostrarMenu:
  2789                           	opt callstack 0
  2790                           
  2791 ;; *************** function _fijaHoraRtc *****************
  2792 ;; Defined at:
  2793 ;;		line 298 in file "main.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;		None
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;  dato            1    0        unsigned char 
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  1    wreg      void 
  2800 ;; Registers used:
  2801 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2807 ;;      Params:         0       0       0       0       0       0       0       0       0
  2808 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2809 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2810 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2811 ;;Total ram usage:        1 bytes
  2812 ;; Hardware stack levels used:    1
  2813 ;; Hardware stack levels required when called:    5
  2814 ;; This function calls:
  2815 ;;		_UART_printf
  2816 ;;		_escribe_rtc
  2817 ;;		_setRtc
  2818 ;; This function is called by:
  2819 ;;		_sistemaPrincipal
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           	psect	text13
  2824  000B9A                     __ptext13:
  2825                           	opt callstack 0
  2826  000B9A                     _fijaHoraRtc:
  2827                           	opt callstack 24
  2828  000B9A                     
  2829                           ;main.c: 302:     UART_printf("\r\n FIJA HORA \r\n");
  2830  000B9A  0EE0               	movlw	low STR_2
  2831  000B9C  6E20               	movwf	UART_printf@cadena^0,c
  2832  000B9E  0E7F               	movlw	high STR_2
  2833  000BA0  6E21               	movwf	(UART_printf@cadena+1)^0,c
  2834  000BA2  EC2D  F007         	call	_UART_printf	;wreg free
  2835  000BA6                     
  2836                           ;main.c: 305:     UART_printf("\r\n Envie las Horas en formato 24 Ej: 15 \r\n");
  2837  000BA6  0E5C               	movlw	low STR_3
  2838  000BA8  6E20               	movwf	UART_printf@cadena^0,c
  2839  000BAA  0E7E               	movlw	high STR_3
  2840  000BAC  6E21               	movwf	(UART_printf@cadena+1)^0,c
  2841  000BAE  EC2D  F007         	call	_UART_printf	;wreg free
  2842  000BB2                     
  2843                           ;main.c: 306:     setRtc(0x02);
  2844  000BB2  0E02               	movlw	2
  2845  000BB4  ECB4  F003         	call	_setRtc
  2846  000BB8                     
  2847                           ;main.c: 309:     if (!esperandoDatos) {
  2848  000BB8  501B               	movf	_esperandoDatos^0,w,c
  2849  000BBA  A4D8               	btfss	status,2,c
  2850  000BBC  EFE2  F005         	goto	u1051
  2851  000BC0  EFE4  F005         	goto	u1050
  2852  000BC4                     u1051:
  2853  000BC4  EFED  F005         	goto	l1967
  2854  000BC8                     u1050:
  2855  000BC8                     
  2856                           ;main.c: 310:         UART_printf("\r\n Envie los Minutos Ej: 25 \r\n");
  2857  000BC8  0E45               	movlw	low STR_4
  2858  000BCA  6E20               	movwf	UART_printf@cadena^0,c
  2859  000BCC  0E7F               	movlw	high STR_4
  2860  000BCE  6E21               	movwf	(UART_printf@cadena+1)^0,c
  2861  000BD0  EC2D  F007         	call	_UART_printf	;wreg free
  2862                           
  2863                           ;main.c: 311:         setRtc(0x01);
  2864  000BD4  0E01               	movlw	1
  2865  000BD6  ECB4  F003         	call	_setRtc
  2866  000BDA                     l1967:
  2867                           
  2868                           ;main.c: 315:     if (!esperandoDatos) {
  2869  000BDA  501B               	movf	_esperandoDatos^0,w,c
  2870  000BDC  A4D8               	btfss	status,2,c
  2871  000BDE  EFF3  F005         	goto	u1061
  2872  000BE2  EFF5  F005         	goto	u1060
  2873  000BE6                     u1061:
  2874  000BE6  EF00  F006         	goto	l244
  2875  000BEA                     u1060:
  2876  000BEA                     
  2877                           ;main.c: 317:         UART_printf("\r\n HORA ESTABLECIDA CORRECTAMENTE \r\n");
  2878  000BEA  0EFB               	movlw	low STR_5
  2879  000BEC  6E20               	movwf	UART_printf@cadena^0,c
  2880  000BEE  0E7E               	movlw	high STR_5
  2881  000BF0  6E21               	movwf	(UART_printf@cadena+1)^0,c
  2882  000BF2  EC2D  F007         	call	_UART_printf	;wreg free
  2883  000BF6                     
  2884                           ;main.c: 318:         escribe_rtc(0x00, 0);
  2885  000BF6  0E00               	movlw	0
  2886  000BF8  6E21               	movwf	escribe_rtc@dato^0,c
  2887  000BFA  0E00               	movlw	0
  2888  000BFC  ECD3  F007         	call	_escribe_rtc
  2889  000C00                     l244:
  2890  000C00  0012               	return		;funcret
  2891  000C02                     __end_of_fijaHoraRtc:
  2892                           	opt callstack 0
  2893                           
  2894 ;; *************** function _setRtc *****************
  2895 ;; Defined at:
  2896 ;;		line 138 in file "main.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  direccion       1    wreg     unsigned char 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  direccion       1    5[COMRAM] unsigned char 
  2901 ;;  Rx              1   10[COMRAM] unsigned char 
  2902 ;;  i               2    8[COMRAM] int 
  2903 ;;  datoCapturad    1    7[COMRAM] unsigned char 
  2904 ;;  dato            1    6[COMRAM] unsigned char 
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      void 
  2907 ;; Registers used:
  2908 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2914 ;;      Params:         0       0       0       0       0       0       0       0       0
  2915 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2916 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2917 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2918 ;;Total ram usage:        7 bytes
  2919 ;; Hardware stack levels used:    1
  2920 ;; Hardware stack levels required when called:    4
  2921 ;; This function calls:
  2922 ;;		_UART_printf
  2923 ;;		_UART_read
  2924 ;;		_escribe_rtc
  2925 ;; This function is called by:
  2926 ;;		_fijaHoraRtc
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           	psect	text14
  2931  000768                     __ptext14:
  2932                           	opt callstack 0
  2933  000768                     _setRtc:
  2934                           	opt callstack 24
  2935                           
  2936                           ;incstack = 0
  2937                           ;setRtc@direccion stored from wreg
  2938  000768  6E24               	movwf	setRtc@direccion^0,c
  2939  00076A                     
  2940                           ;main.c: 139:     unsigned char dato;;main.c: 140:     char datoCapturado = 0;
  2941  00076A  0E00               	movlw	0
  2942  00076C  6E26               	movwf	setRtc@datoCapturado^0,c
  2943                           
  2944                           ;main.c: 142:     for (int i = 0; i < 2; i++) {
  2945  00076E  0E00               	movlw	0
  2946  000770  6E28               	movwf	(setRtc@i+1)^0,c
  2947  000772  0E00               	movlw	0
  2948  000774  6E27               	movwf	setRtc@i^0,c
  2949  000776                     l1807:
  2950                           
  2951                           ;main.c: 143:         char Rx = UART_read();
  2952  000776  EC5B  F006         	call	_UART_read	;wreg free
  2953  00077A  6E29               	movwf	setRtc@Rx^0,c
  2954  00077C                     
  2955                           ;main.c: 144:         if (Rx >= 48 && Rx <= 57) {
  2956  00077C  0E2F               	movlw	47
  2957  00077E  6429               	cpfsgt	setRtc@Rx^0,c
  2958  000780  EFC4  F003         	goto	u851
  2959  000784  EFC6  F003         	goto	u850
  2960  000788                     u851:
  2961  000788  EFEA  F003         	goto	l1821
  2962  00078C                     u850:
  2963  00078C  0E3A               	movlw	58
  2964  00078E  6029               	cpfslt	setRtc@Rx^0,c
  2965  000790  EFCC  F003         	goto	u861
  2966  000794  EFCE  F003         	goto	u860
  2967  000798                     u861:
  2968  000798  EFEA  F003         	goto	l1821
  2969  00079C                     u860:
  2970  00079C                     
  2971                           ;main.c: 145:             if (!i) {
  2972  00079C  5027               	movf	setRtc@i^0,w,c
  2973  00079E  1028               	iorwf	(setRtc@i+1)^0,w,c
  2974  0007A0  A4D8               	btfss	status,2,c
  2975  0007A2  EFD5  F003         	goto	u871
  2976  0007A6  EFD7  F003         	goto	u870
  2977  0007AA                     u871:
  2978  0007AA  EFE2  F003         	goto	l1817
  2979  0007AE                     u870:
  2980  0007AE                     
  2981                           ;main.c: 146:                 dato = ((Rx - 48) & 0x0F) << 4;
  2982  0007AE  C029  F023         	movff	setRtc@Rx,??_setRtc
  2983  0007B2  0ED0               	movlw	208
  2984  0007B4  2623               	addwf	??_setRtc^0,f,c
  2985  0007B6  0E0F               	movlw	15
  2986  0007B8  1623               	andwf	??_setRtc^0,f,c
  2987  0007BA  3823               	swapf	??_setRtc^0,w,c
  2988  0007BC  0BF0               	andlw	240
  2989  0007BE  6E25               	movwf	setRtc@dato^0,c
  2990                           
  2991                           ;main.c: 147:             } else {
  2992  0007C0  EFF4  F003         	goto	l1825
  2993  0007C4                     l1817:
  2994                           
  2995                           ;main.c: 148:                 dato |= (Rx - 48) & 0x0F;
  2996  0007C4  5029               	movf	setRtc@Rx^0,w,c
  2997  0007C6  0FD0               	addlw	208
  2998  0007C8  0B0F               	andlw	15
  2999  0007CA  1225               	iorwf	setRtc@dato^0,f,c
  3000  0007CC                     
  3001                           ;main.c: 149:                 datoCapturado = 1;
  3002  0007CC  0E01               	movlw	1
  3003  0007CE  6E26               	movwf	setRtc@datoCapturado^0,c
  3004  0007D0  EFF4  F003         	goto	l1825
  3005  0007D4                     l1821:
  3006                           
  3007                           ;main.c: 152:             datoCapturado = 0;
  3008  0007D4  0E00               	movlw	0
  3009  0007D6  6E26               	movwf	setRtc@datoCapturado^0,c
  3010  0007D8                     
  3011                           ;main.c: 153:             UART_printf("\r\n DATO NO RECIBIDO \r\n");
  3012  0007D8  0EC9               	movlw	low STR_1
  3013  0007DA  6E20               	movwf	UART_printf@cadena^0,c
  3014  0007DC  0E7F               	movlw	high STR_1
  3015  0007DE  6E21               	movwf	(UART_printf@cadena+1)^0,c
  3016  0007E0  EC2D  F007         	call	_UART_printf	;wreg free
  3017                           
  3018                           ;main.c: 154:             break;
  3019  0007E4  EF04  F004         	goto	l1829
  3020  0007E8                     l1825:
  3021                           
  3022                           ;main.c: 156:     }
  3023  0007E8  4A27               	infsnz	setRtc@i^0,f,c
  3024  0007EA  2A28               	incf	(setRtc@i+1)^0,f,c
  3025  0007EC  BE28               	btfsc	(setRtc@i+1)^0,7,c
  3026  0007EE  EF02  F004         	goto	u881
  3027  0007F2  5028               	movf	(setRtc@i+1)^0,w,c
  3028  0007F4  E109               	bnz	u880
  3029  0007F6  0E02               	movlw	2
  3030  0007F8  5C27               	subwf	setRtc@i^0,w,c
  3031  0007FA  A0D8               	btfss	status,0,c
  3032  0007FC  EF02  F004         	goto	u881
  3033  000800  EF04  F004         	goto	u880
  3034  000804                     u881:
  3035  000804  EFBB  F003         	goto	l1807
  3036  000808                     u880:
  3037  000808                     l1829:
  3038                           
  3039                           ;main.c: 158:     if (datoCapturado && !esperandoDatos)
  3040  000808  5026               	movf	setRtc@datoCapturado^0,w,c
  3041  00080A  B4D8               	btfsc	status,2,c
  3042  00080C  EF0A  F004         	goto	u891
  3043  000810  EF0C  F004         	goto	u890
  3044  000814                     u891:
  3045  000814  EF19  F004         	goto	l196
  3046  000818                     u890:
  3047  000818  501B               	movf	_esperandoDatos^0,w,c
  3048  00081A  A4D8               	btfss	status,2,c
  3049  00081C  EF12  F004         	goto	u901
  3050  000820  EF14  F004         	goto	u900
  3051  000824                     u901:
  3052  000824  EF19  F004         	goto	l196
  3053  000828                     u900:
  3054  000828                     
  3055                           ;main.c: 159:         escribe_rtc(direccion, dato);
  3056  000828  C025  F021         	movff	setRtc@dato,escribe_rtc@dato
  3057  00082C  5024               	movf	setRtc@direccion^0,w,c
  3058  00082E  ECD3  F007         	call	_escribe_rtc
  3059  000832                     l196:
  3060  000832  0012               	return		;funcret
  3061  000834                     __end_of_setRtc:
  3062                           	opt callstack 0
  3063                           
  3064 ;; *************** function _escribe_rtc *****************
  3065 ;; Defined at:
  3066 ;;		line 2 in file "./RTC.h"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;  direccion       1    wreg     unsigned char 
  3069 ;;  dato            1    2[COMRAM] unsigned char 
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;  direccion       1    3[COMRAM] unsigned char 
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  1    wreg      void 
  3074 ;; Registers used:
  3075 ;;		wreg, status,2, status,0, cstack
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3081 ;;      Params:         1       0       0       0       0       0       0       0       0
  3082 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3084 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3085 ;;Total ram usage:        2 bytes
  3086 ;; Hardware stack levels used:    1
  3087 ;; Hardware stack levels required when called:    3
  3088 ;; This function calls:
  3089 ;;		_i2c_detener
  3090 ;;		_i2c_envia_dato
  3091 ;;		_i2c_inicia_com
  3092 ;; This function is called by:
  3093 ;;		_setRtc
  3094 ;;		_fijaHoraRtc
  3095 ;;		_setRtcDefault
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text15
  3100  000FA6                     __ptext15:
  3101                           	opt callstack 0
  3102  000FA6                     _escribe_rtc:
  3103                           	opt callstack 24
  3104                           
  3105                           ;incstack = 0
  3106                           ;escribe_rtc@direccion stored from wreg
  3107  000FA6  6E22               	movwf	escribe_rtc@direccion^0,c
  3108  000FA8                     
  3109                           ;./RTC.h: 3:     i2c_inicia_com();
  3110  000FA8  EC2E  F008         	call	_i2c_inicia_com	;wreg free
  3111                           
  3112                           ;./RTC.h: 4:     i2c_envia_dato(0xD0);
  3113  000FAC  0ED0               	movlw	208
  3114  000FAE  EC1F  F008         	call	_i2c_envia_dato
  3115                           
  3116                           ;./RTC.h: 5:     i2c_envia_dato(direccion);
  3117  000FB2  5022               	movf	escribe_rtc@direccion^0,w,c
  3118  000FB4  EC1F  F008         	call	_i2c_envia_dato
  3119                           
  3120                           ;./RTC.h: 6:     i2c_envia_dato(dato);
  3121  000FB8  5021               	movf	escribe_rtc@dato^0,w,c
  3122  000FBA  EC1F  F008         	call	_i2c_envia_dato
  3123                           
  3124                           ;./RTC.h: 7:     i2c_detener();
  3125  000FBE  EC32  F008         	call	_i2c_detener	;wreg free
  3126  000FC2  0012               	return		;funcret
  3127  000FC4                     __end_of_escribe_rtc:
  3128                           	opt callstack 0
  3129                           
  3130 ;; *************** function _asignarHorarios *****************
  3131 ;; Defined at:
  3132 ;;		line 324 in file "main.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;		None
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;  i               2   16[COMRAM] int 
  3137 ;;  Rx              1   18[COMRAM] unsigned char 
  3138 ;;  datoCapturad    1   15[COMRAM] unsigned char 
  3139 ;;  hora            1   14[COMRAM] unsigned char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      void 
  3142 ;; Registers used:
  3143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3149 ;;      Params:         0       0       0       0       0       0       0       0       0
  3150 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3151 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3152 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3153 ;;Total ram usage:        5 bytes
  3154 ;; Hardware stack levels used:    1
  3155 ;; Hardware stack levels required when called:    5
  3156 ;; This function calls:
  3157 ;;		_UART_printf
  3158 ;;		_UART_read
  3159 ;;		_escribeHorariosMemoria
  3160 ;; This function is called by:
  3161 ;;		_sistemaPrincipal
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           	psect	text16
  3166  00043A                     __ptext16:
  3167                           	opt callstack 0
  3168  00043A                     _asignarHorarios:
  3169                           	opt callstack 24
  3170  00043A                     
  3171                           ;main.c: 326:     unsigned char hora;;main.c: 327:     unsigned char Rx;;main.c: 328:   
      +                            char datoCapturado = 0;
  3172  00043A  0E00               	movlw	0
  3173  00043C  6E2E               	movwf	asignarHorarios@datoCapturado^0,c
  3174  00043E                     
  3175                           ;main.c: 330:     UART_printf("\r\n OPCIONES DE REGADO \r\n");
  3176  00043E  0E99               	movlw	low STR_6
  3177  000440  6E20               	movwf	UART_printf@cadena^0,c
  3178  000442  0E7F               	movlw	high STR_6
  3179  000444  6E21               	movwf	(UART_printf@cadena+1)^0,c
  3180  000446  EC2D  F007         	call	_UART_printf	;wreg free
  3181  00044A                     
  3182                           ;main.c: 331:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  3183  00044A  0EF8               	movlw	low STR_7
  3184  00044C  6E20               	movwf	UART_printf@cadena^0,c
  3185  00044E  0E7D               	movlw	high STR_7
  3186  000450  6E21               	movwf	(UART_printf@cadena+1)^0,c
  3187  000452  EC2D  F007         	call	_UART_printf	;wreg free
  3188                           
  3189                           ;main.c: 333:     for (int i = 0; i < 2; i++) {
  3190  000456  0E00               	movlw	0
  3191  000458  6E30               	movwf	(asignarHorarios@i+1)^0,c
  3192  00045A  0E00               	movlw	0
  3193  00045C  6E2F               	movwf	asignarHorarios@i^0,c
  3194  00045E                     l1983:
  3195                           
  3196                           ;main.c: 334:         Rx = UART_read();
  3197  00045E  EC5B  F006         	call	_UART_read	;wreg free
  3198  000462  6E31               	movwf	asignarHorarios@Rx^0,c
  3199  000464                     
  3200                           ;main.c: 335:         if (Rx >= 48 && Rx <= 57) {
  3201  000464  0E2F               	movlw	47
  3202  000466  6431               	cpfsgt	asignarHorarios@Rx^0,c
  3203  000468  EF38  F002         	goto	u1071
  3204  00046C  EF3A  F002         	goto	u1070
  3205  000470                     u1071:
  3206  000470  EF5D  F002         	goto	l2003
  3207  000474                     u1070:
  3208  000474  0E3A               	movlw	58
  3209  000476  6031               	cpfslt	asignarHorarios@Rx^0,c
  3210  000478  EF40  F002         	goto	u1081
  3211  00047C  EF42  F002         	goto	u1080
  3212  000480                     u1081:
  3213  000480  EF5D  F002         	goto	l2003
  3214  000484                     u1080:
  3215  000484                     
  3216                           ;main.c: 336:             if (!i) {
  3217  000484  502F               	movf	asignarHorarios@i^0,w,c
  3218  000486  1030               	iorwf	(asignarHorarios@i+1)^0,w,c
  3219  000488  A4D8               	btfss	status,2,c
  3220  00048A  EF49  F002         	goto	u1091
  3221  00048E  EF4B  F002         	goto	u1090
  3222  000492                     u1091:
  3223  000492  EF55  F002         	goto	l1997
  3224  000496                     u1090:
  3225  000496                     
  3226                           ;main.c: 337:                 Rx -= 48;
  3227  000496  0E30               	movlw	48
  3228  000498  5E31               	subwf	asignarHorarios@Rx^0,f,c
  3229  00049A                     
  3230                           ;main.c: 338:                 hora = Rx;
  3231  00049A  C031  F02D         	movff	asignarHorarios@Rx,asignarHorarios@hora
  3232  00049E                     
  3233                           ;main.c: 339:                 hora *= 10;
  3234  00049E  0E0A               	movlw	10
  3235  0004A0  022D               	mulwf	asignarHorarios@hora^0,c
  3236  0004A2  50F3               	movf	prodl,w,c
  3237  0004A4  6E2D               	movwf	asignarHorarios@hora^0,c
  3238                           
  3239                           ;main.c: 340:             } else {
  3240  0004A6  EF67  F002         	goto	l2007
  3241  0004AA                     l1997:
  3242                           
  3243                           ;main.c: 341:                 datoCapturado = 1;
  3244  0004AA  0E01               	movlw	1
  3245  0004AC  6E2E               	movwf	asignarHorarios@datoCapturado^0,c
  3246  0004AE                     
  3247                           ;main.c: 342:                 Rx -= 48;
  3248  0004AE  0E30               	movlw	48
  3249  0004B0  5E31               	subwf	asignarHorarios@Rx^0,f,c
  3250  0004B2                     
  3251                           ;main.c: 343:                 hora += Rx;
  3252  0004B2  5031               	movf	asignarHorarios@Rx^0,w,c
  3253  0004B4  262D               	addwf	asignarHorarios@hora^0,f,c
  3254  0004B6  EF67  F002         	goto	l2007
  3255  0004BA                     l2003:
  3256                           
  3257                           ;main.c: 346:             datoCapturado = 0;
  3258  0004BA  0E00               	movlw	0
  3259  0004BC  6E2E               	movwf	asignarHorarios@datoCapturado^0,c
  3260  0004BE                     
  3261                           ;main.c: 347:             UART_printf("\r\n DATO NO RECIBIDO \r\n");
  3262  0004BE  0EC9               	movlw	low STR_1
  3263  0004C0  6E20               	movwf	UART_printf@cadena^0,c
  3264  0004C2  0E7F               	movlw	high STR_1
  3265  0004C4  6E21               	movwf	(UART_printf@cadena+1)^0,c
  3266  0004C6  EC2D  F007         	call	_UART_printf	;wreg free
  3267                           
  3268                           ;main.c: 348:             break;
  3269  0004CA  EF77  F002         	goto	l2011
  3270  0004CE                     l2007:
  3271                           
  3272                           ;main.c: 350:     }
  3273  0004CE  4A2F               	infsnz	asignarHorarios@i^0,f,c
  3274  0004D0  2A30               	incf	(asignarHorarios@i+1)^0,f,c
  3275  0004D2  BE30               	btfsc	(asignarHorarios@i+1)^0,7,c
  3276  0004D4  EF75  F002         	goto	u1101
  3277  0004D8  5030               	movf	(asignarHorarios@i+1)^0,w,c
  3278  0004DA  E109               	bnz	u1100
  3279  0004DC  0E02               	movlw	2
  3280  0004DE  5C2F               	subwf	asignarHorarios@i^0,w,c
  3281  0004E0  A0D8               	btfss	status,0,c
  3282  0004E2  EF75  F002         	goto	u1101
  3283  0004E6  EF77  F002         	goto	u1100
  3284  0004EA                     u1101:
  3285  0004EA  EF2F  F002         	goto	l1983
  3286  0004EE                     u1100:
  3287  0004EE                     l2011:
  3288                           
  3289                           ;main.c: 352:     if (datoCapturado && !esperandoDatos) {
  3290  0004EE  502E               	movf	asignarHorarios@datoCapturado^0,w,c
  3291  0004F0  B4D8               	btfsc	status,2,c
  3292  0004F2  EF7D  F002         	goto	u1111
  3293  0004F6  EF7F  F002         	goto	u1110
  3294  0004FA                     u1111:
  3295  0004FA  EFC6  F002         	goto	l257
  3296  0004FE                     u1110:
  3297  0004FE  501B               	movf	_esperandoDatos^0,w,c
  3298  000500  A4D8               	btfss	status,2,c
  3299  000502  EF85  F002         	goto	u1121
  3300  000506  EF87  F002         	goto	u1120
  3301  00050A                     u1121:
  3302  00050A  EFC6  F002         	goto	l257
  3303  00050E                     u1120:
  3304  00050E                     
  3305                           ;main.c: 354:         UART_printf("\r\n Ingrese 1 para regar || ingrese 0 para no regar:
      +                           \r\n");
  3306  00050E  0EC1               	movlw	low STR_9
  3307  000510  6E20               	movwf	UART_printf@cadena^0,c
  3308  000512  0E7D               	movlw	high STR_9
  3309  000514  6E21               	movwf	(UART_printf@cadena+1)^0,c
  3310  000516  EC2D  F007         	call	_UART_printf	;wreg free
  3311  00051A                     
  3312                           ;main.c: 356:         Rx = UART_read();
  3313  00051A  EC5B  F006         	call	_UART_read	;wreg free
  3314  00051E  6E31               	movwf	asignarHorarios@Rx^0,c
  3315  000520                     
  3316                           ;main.c: 357:         Rx -= 48;
  3317  000520  0E30               	movlw	48
  3318  000522  5E31               	subwf	asignarHorarios@Rx^0,f,c
  3319  000524                     
  3320                           ;main.c: 359:         if (Rx != 1 && Rx != 0)
  3321  000524  0431               	decf	asignarHorarios@Rx^0,w,c
  3322  000526  B4D8               	btfsc	status,2,c
  3323  000528  EF98  F002         	goto	u1131
  3324  00052C  EF9A  F002         	goto	u1130
  3325  000530                     u1131:
  3326  000530  EFA4  F002         	goto	l254
  3327  000534                     u1130:
  3328  000534  5031               	movf	asignarHorarios@Rx^0,w,c
  3329  000536  B4D8               	btfsc	status,2,c
  3330  000538  EFA0  F002         	goto	u1141
  3331  00053C  EFA2  F002         	goto	u1140
  3332  000540                     u1141:
  3333  000540  EFA4  F002         	goto	l254
  3334  000544                     u1140:
  3335  000544                     
  3336                           ;main.c: 360:             Rx = 0;
  3337  000544  0E00               	movlw	0
  3338  000546  6E31               	movwf	asignarHorarios@Rx^0,c
  3339  000548                     l254:
  3340                           
  3341                           ;main.c: 362:         if (!esperandoDatos) {
  3342  000548  501B               	movf	_esperandoDatos^0,w,c
  3343  00054A  A4D8               	btfss	status,2,c
  3344  00054C  EFAA  F002         	goto	u1151
  3345  000550  EFAC  F002         	goto	u1150
  3346  000554                     u1151:
  3347  000554  EFC0  F002         	goto	l2033
  3348  000558                     u1150:
  3349  000558                     
  3350                           ;main.c: 363:             UART_printf("\r\n Horario Modificado! \r\n");
  3351  000558  0E7F               	movlw	low STR_10
  3352  00055A  6E20               	movwf	UART_printf@cadena^0,c
  3353  00055C  0E7F               	movlw	high STR_10
  3354  00055E  6E21               	movwf	(UART_printf@cadena+1)^0,c
  3355  000560  EC2D  F007         	call	_UART_printf	;wreg free
  3356  000564                     
  3357                           ;main.c: 365:             horarios[hora].regar = Rx;
  3358  000564  502D               	movf	asignarHorarios@hora^0,w,c
  3359  000566  0D03               	mullw	3
  3360  000568  0E61               	movlw	low (_horarios+1)
  3361  00056A  24F3               	addwf	243,w,c
  3362  00056C  6ED9               	movwf	fsr2l,c
  3363  00056E  0E00               	movlw	high (_horarios+1)
  3364  000570  20F4               	addwfc	prodh,w,c
  3365  000572  6EDA               	movwf	fsr2h,c
  3366  000574  C031  FFDF         	movff	asignarHorarios@Rx,indf2
  3367  000578                     
  3368                           ;main.c: 367:             escribeHorariosMemoria();
  3369  000578  EC4D  F003         	call	_escribeHorariosMemoria	;wreg free
  3370                           
  3371                           ;main.c: 370:         } else {
  3372  00057C  EFC6  F002         	goto	l257
  3373  000580                     l2033:
  3374                           
  3375                           ;main.c: 371:             UART_printf("\r\n DATO NO RECIBIDO \r\n");
  3376  000580  0EC9               	movlw	low STR_1
  3377  000582  6E20               	movwf	UART_printf@cadena^0,c
  3378  000584  0E7F               	movlw	high STR_1
  3379  000586  6E21               	movwf	(UART_printf@cadena+1)^0,c
  3380  000588  EC2D  F007         	call	_UART_printf	;wreg free
  3381  00058C                     l257:
  3382  00058C  0012               	return		;funcret
  3383  00058E                     __end_of_asignarHorarios:
  3384                           	opt callstack 0
  3385                           
  3386 ;; *************** function _escribeHorariosMemoria *****************
  3387 ;; Defined at:
  3388 ;;		line 191 in file "main.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;		None
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  i               2   12[COMRAM] int 
  3393 ;;  contMemoria     2   10[COMRAM] int 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3403 ;;      Params:         0       0       0       0       0       0       0       0       0
  3404 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3406 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3407 ;;Total ram usage:        4 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:    4
  3410 ;; This function calls:
  3411 ;;		___wmul
  3412 ;;		_escribe_eeprom
  3413 ;; This function is called by:
  3414 ;;		_asignarHorarios
  3415 ;;		_setTiempoRegar
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           	psect	text17
  3420  00069A                     __ptext17:
  3421                           	opt callstack 0
  3422  00069A                     _escribeHorariosMemoria:
  3423                           	opt callstack 24
  3424  00069A                     
  3425                           ;main.c: 193:     int contMemoria = 0;
  3426  00069A  0E00               	movlw	0
  3427  00069C  6E2A               	movwf	(escribeHorariosMemoria@contMemoria+1)^0,c
  3428  00069E  0E00               	movlw	0
  3429  0006A0  6E29               	movwf	escribeHorariosMemoria@contMemoria^0,c
  3430                           
  3431                           ;main.c: 194:     for (int i = 0; i < 24; i++) {
  3432  0006A2  0E00               	movlw	0
  3433  0006A4  6E2C               	movwf	(escribeHorariosMemoria@i+1)^0,c
  3434  0006A6  0E00               	movlw	0
  3435  0006A8  6E2B               	movwf	escribeHorariosMemoria@i^0,c
  3436  0006AA                     l1841:
  3437                           
  3438                           ;main.c: 195:         escribe_eeprom(contMemoria++, horarios[i].hora);
  3439  0006AA  C029  F025         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  3440  0006AE  C02A  F026         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  3441  0006B2  C02B  F01F         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  3442  0006B6  C02C  F020         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  3443  0006BA  0E00               	movlw	0
  3444  0006BC  6E22               	movwf	(___wmul@multiplicand+1)^0,c
  3445  0006BE  0E03               	movlw	3
  3446  0006C0  6E21               	movwf	___wmul@multiplicand^0,c
  3447  0006C2  ECB0  F007         	call	___wmul	;wreg free
  3448  0006C6  0E60               	movlw	low _horarios
  3449  0006C8  241F               	addwf	?___wmul^0,w,c
  3450  0006CA  6ED9               	movwf	fsr2l,c
  3451  0006CC  0E00               	movlw	high _horarios
  3452  0006CE  2020               	addwfc	(?___wmul+1)^0,w,c
  3453  0006D0  6EDA               	movwf	fsr2h,c
  3454  0006D2  50DF               	movf	indf2,w,c
  3455  0006D4  6E27               	movwf	escribe_eeprom@dato^0,c
  3456  0006D6  EC48  F007         	call	_escribe_eeprom	;wreg free
  3457  0006DA  4A29               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  3458  0006DC  2A2A               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  3459  0006DE                     
  3460                           ;main.c: 196:         escribe_eeprom(contMemoria++, horarios[i].regar);
  3461  0006DE  C029  F025         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  3462  0006E2  C02A  F026         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  3463  0006E6  C02B  F01F         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  3464  0006EA  C02C  F020         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  3465  0006EE  0E00               	movlw	0
  3466  0006F0  6E22               	movwf	(___wmul@multiplicand+1)^0,c
  3467  0006F2  0E03               	movlw	3
  3468  0006F4  6E21               	movwf	___wmul@multiplicand^0,c
  3469  0006F6  ECB0  F007         	call	___wmul	;wreg free
  3470  0006FA  0E61               	movlw	low (_horarios+1)
  3471  0006FC  241F               	addwf	?___wmul^0,w,c
  3472  0006FE  6ED9               	movwf	fsr2l,c
  3473  000700  0E00               	movlw	high (_horarios+1)
  3474  000702  2020               	addwfc	(?___wmul+1)^0,w,c
  3475  000704  6EDA               	movwf	fsr2h,c
  3476  000706  50DF               	movf	indf2,w,c
  3477  000708  6E27               	movwf	escribe_eeprom@dato^0,c
  3478  00070A  EC48  F007         	call	_escribe_eeprom	;wreg free
  3479  00070E  4A29               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  3480  000710  2A2A               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  3481  000712                     
  3482                           ;main.c: 197:         escribe_eeprom(contMemoria++, horarios[i].tiempoRegar);
  3483  000712  C029  F025         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  3484  000716  C02A  F026         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  3485  00071A  C02B  F01F         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  3486  00071E  C02C  F020         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  3487  000722  0E00               	movlw	0
  3488  000724  6E22               	movwf	(___wmul@multiplicand+1)^0,c
  3489  000726  0E03               	movlw	3
  3490  000728  6E21               	movwf	___wmul@multiplicand^0,c
  3491  00072A  ECB0  F007         	call	___wmul	;wreg free
  3492  00072E  0E62               	movlw	low (_horarios+2)
  3493  000730  241F               	addwf	?___wmul^0,w,c
  3494  000732  6ED9               	movwf	fsr2l,c
  3495  000734  0E00               	movlw	high (_horarios+2)
  3496  000736  2020               	addwfc	(?___wmul+1)^0,w,c
  3497  000738  6EDA               	movwf	fsr2h,c
  3498  00073A  50DF               	movf	indf2,w,c
  3499  00073C  6E27               	movwf	escribe_eeprom@dato^0,c
  3500  00073E  EC48  F007         	call	_escribe_eeprom	;wreg free
  3501  000742  4A29               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  3502  000744  2A2A               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  3503  000746                     
  3504                           ;main.c: 198:     }
  3505  000746  4A2B               	infsnz	escribeHorariosMemoria@i^0,f,c
  3506  000748  2A2C               	incf	(escribeHorariosMemoria@i+1)^0,f,c
  3507  00074A  BE2C               	btfsc	(escribeHorariosMemoria@i+1)^0,7,c
  3508  00074C  EFB1  F003         	goto	u911
  3509  000750  502C               	movf	(escribeHorariosMemoria@i+1)^0,w,c
  3510  000752  E109               	bnz	u910
  3511  000754  0E18               	movlw	24
  3512  000756  5C2B               	subwf	escribeHorariosMemoria@i^0,w,c
  3513  000758  A0D8               	btfss	status,0,c
  3514  00075A  EFB1  F003         	goto	u911
  3515  00075E  EFB3  F003         	goto	u910
  3516  000762                     u911:
  3517  000762  EF55  F003         	goto	l1841
  3518  000766                     u910:
  3519  000766  0012               	return		;funcret
  3520  000768                     __end_of_escribeHorariosMemoria:
  3521                           	opt callstack 0
  3522                           
  3523 ;; *************** function _escribe_eeprom *****************
  3524 ;; Defined at:
  3525 ;;		line 162 in file "main.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  direccion       2    6[COMRAM] unsigned short 
  3528 ;;  dato            1    8[COMRAM] unsigned char 
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;		None
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1    wreg      void 
  3533 ;; Registers used:
  3534 ;;		wreg, status,2, status,0, cstack
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3540 ;;      Params:         3       0       0       0       0       0       0       0       0
  3541 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3542 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3543 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3544 ;;Total ram usage:        4 bytes
  3545 ;; Hardware stack levels used:    1
  3546 ;; Hardware stack levels required when called:    3
  3547 ;; This function calls:
  3548 ;;		_i2c_detener
  3549 ;;		_i2c_envia_dato
  3550 ;;		_i2c_inicia_com
  3551 ;; This function is called by:
  3552 ;;		_escribeHorariosMemoria
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           	psect	text18
  3557  000E90                     __ptext18:
  3558                           	opt callstack 0
  3559  000E90                     _escribe_eeprom:
  3560                           	opt callstack 24
  3561  000E90                     
  3562                           ;main.c: 163:     i2c_inicia_com();
  3563  000E90  EC2E  F008         	call	_i2c_inicia_com	;wreg free
  3564                           
  3565                           ;main.c: 164:     i2c_envia_dato(0xAE);
  3566  000E94  0EAE               	movlw	174
  3567  000E96  EC1F  F008         	call	_i2c_envia_dato
  3568                           
  3569                           ;main.c: 165:     i2c_envia_dato(direccion >> 8);
  3570  000E9A  5026               	movf	(escribe_eeprom@direccion+1)^0,w,c
  3571  000E9C  EC1F  F008         	call	_i2c_envia_dato
  3572                           
  3573                           ;main.c: 167:     i2c_envia_dato(direccion);
  3574  000EA0  5025               	movf	escribe_eeprom@direccion^0,w,c
  3575  000EA2  EC1F  F008         	call	_i2c_envia_dato
  3576                           
  3577                           ;main.c: 169:     i2c_envia_dato(dato);
  3578  000EA6  5027               	movf	escribe_eeprom@dato^0,w,c
  3579  000EA8  EC1F  F008         	call	_i2c_envia_dato
  3580                           
  3581                           ;main.c: 170:     i2c_detener();
  3582  000EAC  EC32  F008         	call	_i2c_detener	;wreg free
  3583  000EB0                     
  3584                           ;main.c: 171:     _delay((unsigned long)((10)*(4000000/4000.0)));
  3585  000EB0  0E0D               	movlw	13
  3586  000EB2  6E28               	movwf	??_escribe_eeprom^0,c
  3587  000EB4  0EFC               	movlw	252
  3588  000EB6                     u1497:
  3589  000EB6  2EE8               	decfsz	wreg,f,c
  3590  000EB8  D7FE               	bra	u1497
  3591  000EBA  2E28               	decfsz	??_escribe_eeprom^0,f,c
  3592  000EBC  D7FC               	bra	u1497
  3593  000EBE  0012               	return		;funcret
  3594  000EC0                     __end_of_escribe_eeprom:
  3595                           	opt callstack 0
  3596                           
  3597 ;; *************** function _UART_read *****************
  3598 ;; Defined at:
  3599 ;;		line 34 in file "./UART.h"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;		None
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;		None
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      unsigned char 
  3606 ;; Registers used:
  3607 ;;		wreg, status,2
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3613 ;;      Params:         0       0       0       0       0       0       0       0       0
  3614 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3615 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3616 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3617 ;;Total ram usage:        0 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; Hardware stack levels required when called:    1
  3620 ;; This function calls:
  3621 ;;		Nothing
  3622 ;; This function is called by:
  3623 ;;		_setRtc
  3624 ;;		_asignarHorarios
  3625 ;;		_setTiempoRegar
  3626 ;;		_lecturaWifi
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           	psect	text19
  3631  000CB6                     __ptext19:
  3632                           	opt callstack 0
  3633  000CB6                     _UART_read:
  3634                           	opt callstack 27
  3635  000CB6                     
  3636                           ;./UART.h: 36:     TMR0 = VALOR_TIMER0UART;
  3637  000CB6  0E67               	movlw	103
  3638  000CB8  6ED7               	movwf	215,c	;volatile
  3639  000CBA  0E69               	movlw	105
  3640  000CBC  6ED6               	movwf	214,c	;volatile
  3641                           
  3642                           ;./UART.h: 37:     esperaDatoConcluida = 0;
  3643  000CBE  0E00               	movlw	0
  3644  000CC0  6E1C               	movwf	_esperaDatoConcluida^0,c
  3645                           
  3646                           ;./UART.h: 38:     esperandoDatos = 1;
  3647  000CC2  0E01               	movlw	1
  3648  000CC4  6E1B               	movwf	_esperandoDatos^0,c
  3649                           
  3650                           ;./UART.h: 39:     byteUart = 0;
  3651  000CC6  0E00               	movlw	0
  3652  000CC8  6E1D               	movwf	_byteUart^0,c
  3653                           
  3654                           ;./UART.h: 40:     tiempoInactividadTrans = 0;
  3655  000CCA  0E00               	movlw	0
  3656  000CCC  6E1E               	movwf	_tiempoInactividadTrans^0,c
  3657  000CCE                     l115:
  3658  000CCE  BA9E               	btfsc	158,5,c	;volatile
  3659  000CD0  EF6C  F006         	goto	u791
  3660  000CD4  EF6E  F006         	goto	u790
  3661  000CD8                     u791:
  3662  000CD8  EF76  F006         	goto	l1755
  3663  000CDC                     u790:
  3664  000CDC  501C               	movf	_esperaDatoConcluida^0,w,c
  3665  000CDE  B4D8               	btfsc	status,2,c
  3666  000CE0  EF74  F006         	goto	u801
  3667  000CE4  EF76  F006         	goto	u800
  3668  000CE8                     u801:
  3669  000CE8  EF67  F006         	goto	l115
  3670  000CEC                     u800:
  3671  000CEC                     l1755:
  3672                           
  3673                           ;./UART.h: 44:     if (!esperaDatoConcluida) {
  3674  000CEC  501C               	movf	_esperaDatoConcluida^0,w,c
  3675  000CEE  A4D8               	btfss	status,2,c
  3676  000CF0  EF7C  F006         	goto	u811
  3677  000CF4  EF7E  F006         	goto	u810
  3678  000CF8                     u811:
  3679  000CF8  EF82  F006         	goto	l120
  3680  000CFC                     u810:
  3681  000CFC                     
  3682                           ;./UART.h: 45:         byteUart = RCREG;
  3683  000CFC  CFAE F01D          	movff	4014,_byteUart	;volatile
  3684  000D00                     
  3685                           ;./UART.h: 46:         esperandoDatos = 0;
  3686  000D00  0E00               	movlw	0
  3687  000D02  6E1B               	movwf	_esperandoDatos^0,c
  3688  000D04                     l120:
  3689                           
  3690                           ;./UART.h: 49:     return byteUart;
  3691  000D04  501D               	movf	_byteUart^0,w,c
  3692  000D06  0012               	return		;funcret
  3693  000D08                     __end_of_UART_read:
  3694                           	opt callstack 0
  3695                           
  3696 ;; *************** function _UART_printf *****************
  3697 ;; Defined at:
  3698 ;;		line 57 in file "./UART.h"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;  cadena          2    1[COMRAM] PTR unsigned char 
  3701 ;;		 -> STR_24(42), STR_23(3), STR_22(14), STR_21(49), 
  3702 ;;		 -> STR_20(37), STR_19(27), STR_18(37), STR_17(37), 
  3703 ;;		 -> STR_16(23), STR_15(72), STR_14(23), STR_13(51), 
  3704 ;;		 -> STR_12(23), STR_11(23), STR_10(26), STR_9(55), 
  3705 ;;		 -> STR_8(23), STR_7(51), STR_6(25), STR_5(37), 
  3706 ;;		 -> STR_4(31), STR_3(43), STR_2(16), STR_1(23), 
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;		None
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      void 
  3711 ;; Registers used:
  3712 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3718 ;;      Params:         2       0       0       0       0       0       0       0       0
  3719 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3720 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3721 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3722 ;;Total ram usage:        2 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; Hardware stack levels required when called:    2
  3725 ;; This function calls:
  3726 ;;		_UART_write
  3727 ;; This function is called by:
  3728 ;;		_setRtc
  3729 ;;		_fijaHoraRtc
  3730 ;;		_asignarHorarios
  3731 ;;		_setTiempoRegar
  3732 ;;		_mostrarMenu
  3733 ;;		_sistemaPrincipal
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           
  3737                           	psect	text20
  3738  000E5A                     __ptext20:
  3739                           	opt callstack 0
  3740  000E5A                     _UART_printf:
  3741                           	opt callstack 26
  3742  000E5A                     
  3743                           ;./UART.h: 58:     while (*cadena) {
  3744  000E5A  EF39  F007         	goto	l1769
  3745  000E5E                     l1765:
  3746                           
  3747                           ;./UART.h: 59:         UART_write(*cadena++);
  3748  000E5E  C020  FFF6         	movff	UART_printf@cadena,tblptrl
  3749  000E62  C021  FFF7         	movff	UART_printf@cadena+1,tblptrh
  3750  000E66                     	if	0	;tblptru may be non-zero
  3751  000E66                     	endif
  3752  000E66                     	if	0	;tblptru may be non-zero
  3753  000E66                     	endif
  3754  000E66  0008               	tblrd		*
  3755  000E68  50F5               	movf	tablat,w,c
  3756  000E6A  EC09  F008         	call	_UART_write
  3757  000E6E  4A20               	infsnz	UART_printf@cadena^0,f,c
  3758  000E70  2A21               	incf	(UART_printf@cadena+1)^0,f,c
  3759  000E72                     l1769:
  3760                           
  3761                           ;./UART.h: 58:     while (*cadena) {
  3762  000E72  C020  FFF6         	movff	UART_printf@cadena,tblptrl
  3763  000E76  C021  FFF7         	movff	UART_printf@cadena+1,tblptrh
  3764  000E7A                     	if	0	;tblptru may be non-zero
  3765  000E7A                     	endif
  3766  000E7A                     	if	0	;tblptru may be non-zero
  3767  000E7A                     	endif
  3768  000E7A  0008               	tblrd		*
  3769  000E7C  50F5               	movf	tablat,w,c
  3770  000E7E  0900               	iorlw	0
  3771  000E80  A4D8               	btfss	status,2,c
  3772  000E82  EF45  F007         	goto	u821
  3773  000E86  EF47  F007         	goto	u820
  3774  000E8A                     u821:
  3775  000E8A  EF2F  F007         	goto	l1765
  3776  000E8E                     u820:
  3777  000E8E  0012               	return		;funcret
  3778  000E90                     __end_of_UART_printf:
  3779                           	opt callstack 0
  3780                           
  3781 ;; *************** function _UART_write *****************
  3782 ;; Defined at:
  3783 ;;		line 52 in file "./UART.h"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;  dato            1    wreg     unsigned char 
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;  dato            1    0[COMRAM] unsigned char 
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      void 
  3790 ;; Registers used:
  3791 ;;		wreg
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3797 ;;      Params:         0       0       0       0       0       0       0       0       0
  3798 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3799 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3800 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3801 ;;Total ram usage:        1 bytes
  3802 ;; Hardware stack levels used:    1
  3803 ;; Hardware stack levels required when called:    1
  3804 ;; This function calls:
  3805 ;;		Nothing
  3806 ;; This function is called by:
  3807 ;;		_UART_printf
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text21
  3812  001012                     __ptext21:
  3813                           	opt callstack 0
  3814  001012                     _UART_write:
  3815                           	opt callstack 26
  3816                           
  3817                           ;incstack = 0
  3818                           ;UART_write@dato stored from wreg
  3819  001012  6E1F               	movwf	UART_write@dato^0,c
  3820  001014                     
  3821                           ;./UART.h: 53:     TXREG = dato;
  3822  001014  C01F  FFAD         	movff	UART_write@dato,4013	;volatile
  3823  001018                     l124:
  3824  001018  A2AC               	btfss	172,1,c	;volatile
  3825  00101A  EF11  F008         	goto	u781
  3826  00101E  EF13  F008         	goto	u780
  3827  001022                     u781:
  3828  001022  EF0C  F008         	goto	l124
  3829  001026                     u780:
  3830  001026  0012               	return		;funcret
  3831  001028                     __end_of_UART_write:
  3832                           	opt callstack 0
  3833                           
  3834 ;; *************** function _restablecerDatosSensor *****************
  3835 ;; Defined at:
  3836 ;;		line 462 in file "main.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;		None
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  i               2    4[COMRAM] int 
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3850 ;;      Params:         0       0       0       0       0       0       0       0       0
  3851 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3852 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3853 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3854 ;;Total ram usage:        2 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:    2
  3857 ;; This function calls:
  3858 ;;		_constructorSensor
  3859 ;; This function is called by:
  3860 ;;		_main
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text22
  3865  000D08                     __ptext22:
  3866                           	opt callstack 0
  3867  000D08                     _restablecerDatosSensor:
  3868                           	opt callstack 28
  3869  000D08                     
  3870                           ;main.c: 463:     for (int i = 0; i < 3; i++)
  3871  000D08  0E00               	movlw	0
  3872  000D0A  6E24               	movwf	(restablecerDatosSensor@i+1)^0,c
  3873  000D0C  0E00               	movlw	0
  3874  000D0E  6E23               	movwf	restablecerDatosSensor@i^0,c
  3875  000D10                     l2247:
  3876                           
  3877                           ;main.c: 464:         constructorSensor(sensores[i], 0, i);
  3878  000D10  90D8               	bcf	status,0,c
  3879  000D12  3423               	rlcf	restablecerDatosSensor@i^0,w,c
  3880  000D14  6ED9               	movwf	fsr2l,c
  3881  000D16  3424               	rlcf	(restablecerDatosSensor@i+1)^0,w,c
  3882  000D18  6EDA               	movwf	fsr2h,c
  3883  000D1A  0E01               	movlw	low _sensores
  3884  000D1C  26D9               	addwf	fsr2l,f,c
  3885  000D1E  0E00               	movlw	high _sensores
  3886  000D20  22DA               	addwfc	fsr2h,f,c
  3887  000D22  CFDE F01F          	movff	postinc2,constructorSensor@s
  3888  000D26  CFDD F020          	movff	postdec2,constructorSensor@s+1
  3889  000D2A  0E00               	movlw	0
  3890  000D2C  6E21               	movwf	constructorSensor@humedad^0,c
  3891  000D2E  C023  F022         	movff	restablecerDatosSensor@i,constructorSensor@pin
  3892  000D32  EC25  F008         	call	_constructorSensor	;wreg free
  3893  000D36  4A23               	infsnz	restablecerDatosSensor@i^0,f,c
  3894  000D38  2A24               	incf	(restablecerDatosSensor@i+1)^0,f,c
  3895  000D3A  BE24               	btfsc	(restablecerDatosSensor@i+1)^0,7,c
  3896  000D3C  EFA9  F006         	goto	u1371
  3897  000D40  5024               	movf	(restablecerDatosSensor@i+1)^0,w,c
  3898  000D42  E109               	bnz	u1370
  3899  000D44  0E03               	movlw	3
  3900  000D46  5C23               	subwf	restablecerDatosSensor@i^0,w,c
  3901  000D48  A0D8               	btfss	status,0,c
  3902  000D4A  EFA9  F006         	goto	u1371
  3903  000D4E  EFAB  F006         	goto	u1370
  3904  000D52                     u1371:
  3905  000D52  EF88  F006         	goto	l2247
  3906  000D56                     u1370:
  3907  000D56  0012               	return		;funcret
  3908  000D58                     __end_of_restablecerDatosSensor:
  3909                           	opt callstack 0
  3910                           
  3911 ;; *************** function _constructorSensor *****************
  3912 ;; Defined at:
  3913 ;;		line 96 in file "main.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  s               2    0[COMRAM] struct .
  3916 ;;  humedad         1    2[COMRAM] unsigned char 
  3917 ;;  pin             1    3[COMRAM] unsigned char 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;		None
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      void 
  3922 ;; Registers used:
  3923 ;;		None
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3929 ;;      Params:         4       0       0       0       0       0       0       0       0
  3930 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3931 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3932 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3933 ;;Total ram usage:        4 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; Hardware stack levels required when called:    1
  3936 ;; This function calls:
  3937 ;;		Nothing
  3938 ;; This function is called by:
  3939 ;;		_restablecerDatosSensor
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text23
  3944  00104A                     __ptext23:
  3945                           	opt callstack 0
  3946  00104A                     _constructorSensor:
  3947                           	opt callstack 28
  3948  00104A                     
  3949                           ;main.c: 98:     s.humedadMedida = humedad;
  3950  00104A  C021  F01F         	movff	constructorSensor@humedad,constructorSensor@s
  3951                           
  3952                           ;main.c: 99:     s.pinSensor = pin;
  3953  00104E  C022  F020         	movff	constructorSensor@pin,constructorSensor@s+1
  3954  001052  0012               	return		;funcret
  3955  001054                     __end_of_constructorSensor:
  3956                           	opt callstack 0
  3957                           
  3958 ;; *************** function _leeHorariosMemoria *****************
  3959 ;; Defined at:
  3960 ;;		line 201 in file "main.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;		None
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;  i               2    8[COMRAM] int 
  3965 ;;  contMemoria     2    6[COMRAM] int 
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  1    wreg      void 
  3968 ;; Registers used:
  3969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3975 ;;      Params:         0       0       0       0       0       0       0       0       0
  3976 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3978 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3979 ;;Total ram usage:        4 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; Hardware stack levels required when called:    4
  3982 ;; This function calls:
  3983 ;;		___wmul
  3984 ;;		_leer_eeprom
  3985 ;; This function is called by:
  3986 ;;		_main
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           	psect	text24
  3991  000834                     __ptext24:
  3992                           	opt callstack 0
  3993  000834                     _leeHorariosMemoria:
  3994                           	opt callstack 26
  3995  000834                     
  3996                           ;main.c: 203:     int contMemoria = 0;
  3997  000834  0E00               	movlw	0
  3998  000836  6E26               	movwf	(leeHorariosMemoria@contMemoria+1)^0,c
  3999  000838  0E00               	movlw	0
  4000  00083A  6E25               	movwf	leeHorariosMemoria@contMemoria^0,c
  4001                           
  4002                           ;main.c: 205:     for (int i = 0; i < 24; i++) {
  4003  00083C  0E00               	movlw	0
  4004  00083E  6E28               	movwf	(leeHorariosMemoria@i+1)^0,c
  4005  000840  0E00               	movlw	0
  4006  000842  6E27               	movwf	leeHorariosMemoria@i^0,c
  4007  000844                     l2227:
  4008                           
  4009                           ;main.c: 206:         horarios[i].hora = leer_eeprom(contMemoria++);
  4010  000844  C027  F01F         	movff	leeHorariosMemoria@i,___wmul@multiplier
  4011  000848  C028  F020         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  4012  00084C  0E00               	movlw	0
  4013  00084E  6E22               	movwf	(___wmul@multiplicand+1)^0,c
  4014  000850  0E03               	movlw	3
  4015  000852  6E21               	movwf	___wmul@multiplicand^0,c
  4016  000854  ECB0  F007         	call	___wmul	;wreg free
  4017  000858  0E60               	movlw	low _horarios
  4018  00085A  241F               	addwf	?___wmul^0,w,c
  4019  00085C  6ED9               	movwf	fsr2l,c
  4020  00085E  0E00               	movlw	high _horarios
  4021  000860  2020               	addwfc	(?___wmul+1)^0,w,c
  4022  000862  6EDA               	movwf	fsr2h,c
  4023  000864  C025  F021         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  4024  000868  C026  F022         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  4025  00086C  ECF4  F006         	call	_leer_eeprom	;wreg free
  4026  000870  6EDF               	movwf	indf2,c
  4027  000872  4A25               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  4028  000874  2A26               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  4029  000876                     
  4030                           ;main.c: 207:         horarios[i].regar = leer_eeprom(contMemoria++);
  4031  000876  C027  F01F         	movff	leeHorariosMemoria@i,___wmul@multiplier
  4032  00087A  C028  F020         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  4033  00087E  0E00               	movlw	0
  4034  000880  6E22               	movwf	(___wmul@multiplicand+1)^0,c
  4035  000882  0E03               	movlw	3
  4036  000884  6E21               	movwf	___wmul@multiplicand^0,c
  4037  000886  ECB0  F007         	call	___wmul	;wreg free
  4038  00088A  0E61               	movlw	low (_horarios+1)
  4039  00088C  241F               	addwf	?___wmul^0,w,c
  4040  00088E  6ED9               	movwf	fsr2l,c
  4041  000890  0E00               	movlw	high (_horarios+1)
  4042  000892  2020               	addwfc	(?___wmul+1)^0,w,c
  4043  000894  6EDA               	movwf	fsr2h,c
  4044  000896  C025  F021         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  4045  00089A  C026  F022         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  4046  00089E  ECF4  F006         	call	_leer_eeprom	;wreg free
  4047  0008A2  6EDF               	movwf	indf2,c
  4048  0008A4  4A25               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  4049  0008A6  2A26               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  4050  0008A8                     
  4051                           ;main.c: 208:         horarios[i].tiempoRegar = leer_eeprom(contMemoria++);
  4052  0008A8  C027  F01F         	movff	leeHorariosMemoria@i,___wmul@multiplier
  4053  0008AC  C028  F020         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  4054  0008B0  0E00               	movlw	0
  4055  0008B2  6E22               	movwf	(___wmul@multiplicand+1)^0,c
  4056  0008B4  0E03               	movlw	3
  4057  0008B6  6E21               	movwf	___wmul@multiplicand^0,c
  4058  0008B8  ECB0  F007         	call	___wmul	;wreg free
  4059  0008BC  0E62               	movlw	low (_horarios+2)
  4060  0008BE  241F               	addwf	?___wmul^0,w,c
  4061  0008C0  6ED9               	movwf	fsr2l,c
  4062  0008C2  0E00               	movlw	high (_horarios+2)
  4063  0008C4  2020               	addwfc	(?___wmul+1)^0,w,c
  4064  0008C6  6EDA               	movwf	fsr2h,c
  4065  0008C8  C025  F021         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  4066  0008CC  C026  F022         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  4067  0008D0  ECF4  F006         	call	_leer_eeprom	;wreg free
  4068  0008D4  6EDF               	movwf	indf2,c
  4069  0008D6  4A25               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  4070  0008D8  2A26               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  4071  0008DA                     
  4072                           ;main.c: 209:     }
  4073  0008DA  4A27               	infsnz	leeHorariosMemoria@i^0,f,c
  4074  0008DC  2A28               	incf	(leeHorariosMemoria@i+1)^0,f,c
  4075  0008DE  BE28               	btfsc	(leeHorariosMemoria@i+1)^0,7,c
  4076  0008E0  EF7B  F004         	goto	u1361
  4077  0008E4  5028               	movf	(leeHorariosMemoria@i+1)^0,w,c
  4078  0008E6  E109               	bnz	u1360
  4079  0008E8  0E18               	movlw	24
  4080  0008EA  5C27               	subwf	leeHorariosMemoria@i^0,w,c
  4081  0008EC  A0D8               	btfss	status,0,c
  4082  0008EE  EF7B  F004         	goto	u1361
  4083  0008F2  EF7D  F004         	goto	u1360
  4084  0008F6                     u1361:
  4085  0008F6  EF22  F004         	goto	l2227
  4086  0008FA                     u1360:
  4087  0008FA  0012               	return		;funcret
  4088  0008FC                     __end_of_leeHorariosMemoria:
  4089                           	opt callstack 0
  4090                           
  4091 ;; *************** function _leer_eeprom *****************
  4092 ;; Defined at:
  4093 ;;		line 174 in file "main.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;  direccion       2    2[COMRAM] unsigned short 
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;  dato            1    5[COMRAM] unsigned char 
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  1    wreg      unsigned char 
  4100 ;; Registers used:
  4101 ;;		wreg, status,2, status,0, cstack
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4107 ;;      Params:         2       0       0       0       0       0       0       0       0
  4108 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4109 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4110 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4111 ;;Total ram usage:        4 bytes
  4112 ;; Hardware stack levels used:    1
  4113 ;; Hardware stack levels required when called:    3
  4114 ;; This function calls:
  4115 ;;		_i2c_detener
  4116 ;;		_i2c_envia_dato
  4117 ;;		_i2c_inicia_com
  4118 ;;		_i2c_recibe_dato
  4119 ;;		_i2c_reinicia_com
  4120 ;; This function is called by:
  4121 ;;		_leeHorariosMemoria
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text25
  4126  000DE8                     __ptext25:
  4127                           	opt callstack 0
  4128  000DE8                     _leer_eeprom:
  4129                           	opt callstack 26
  4130  000DE8                     
  4131                           ;main.c: 176:     unsigned char dato;;main.c: 178:     i2c_inicia_com();
  4132  000DE8  EC2E  F008         	call	_i2c_inicia_com	;wreg free
  4133                           
  4134                           ;main.c: 179:     i2c_envia_dato(0xAE);
  4135  000DEC  0EAE               	movlw	174
  4136  000DEE  EC1F  F008         	call	_i2c_envia_dato
  4137                           
  4138                           ;main.c: 180:     i2c_envia_dato(direccion >> 8);
  4139  000DF2  5022               	movf	(leer_eeprom@direccion+1)^0,w,c
  4140  000DF4  EC1F  F008         	call	_i2c_envia_dato
  4141                           
  4142                           ;main.c: 181:     i2c_envia_dato(direccion);
  4143  000DF8  5021               	movf	leer_eeprom@direccion^0,w,c
  4144  000DFA  EC1F  F008         	call	_i2c_envia_dato
  4145                           
  4146                           ;main.c: 182:     i2c_reinicia_com();
  4147  000DFE  EC2A  F008         	call	_i2c_reinicia_com	;wreg free
  4148                           
  4149                           ;main.c: 183:     i2c_envia_dato(0xAF);
  4150  000E02  0EAF               	movlw	175
  4151  000E04  EC1F  F008         	call	_i2c_envia_dato
  4152                           
  4153                           ;main.c: 184:     dato = i2c_recibe_dato();
  4154  000E08  ECEF  F007         	call	_i2c_recibe_dato	;wreg free
  4155  000E0C  6E24               	movwf	leer_eeprom@dato^0,c
  4156                           
  4157                           ;main.c: 185:     i2c_detener();
  4158  000E0E  EC32  F008         	call	_i2c_detener	;wreg free
  4159  000E12                     
  4160                           ;main.c: 186:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4161  000E12  0E0D               	movlw	13
  4162  000E14  6E23               	movwf	??_leer_eeprom^0,c
  4163  000E16  0EFC               	movlw	252
  4164  000E18                     u1507:
  4165  000E18  2EE8               	decfsz	wreg,f,c
  4166  000E1A  D7FE               	bra	u1507
  4167  000E1C  2E23               	decfsz	??_leer_eeprom^0,f,c
  4168  000E1E  D7FC               	bra	u1507
  4169  000E20                     
  4170                           ;main.c: 188:     return dato;
  4171  000E20  5024               	movf	leer_eeprom@dato^0,w,c
  4172  000E22  0012               	return		;funcret
  4173  000E24                     __end_of_leer_eeprom:
  4174                           	opt callstack 0
  4175                           
  4176 ;; *************** function _i2c_reinicia_com *****************
  4177 ;; Defined at:
  4178 ;;		line 37 in file "./I2C.h"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;		None
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;		None
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1    wreg      void 
  4185 ;; Registers used:
  4186 ;;		wreg, status,2, status,0, cstack
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4192 ;;      Params:         0       0       0       0       0       0       0       0       0
  4193 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4194 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4195 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4196 ;;Total ram usage:        0 bytes
  4197 ;; Hardware stack levels used:    1
  4198 ;; Hardware stack levels required when called:    2
  4199 ;; This function calls:
  4200 ;;		_i2c_espera
  4201 ;; This function is called by:
  4202 ;;		_leer_rtc
  4203 ;;		_leer_eeprom
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           	psect	text26
  4208  001054                     __ptext26:
  4209                           	opt callstack 0
  4210  001054                     _i2c_reinicia_com:
  4211                           	opt callstack 25
  4212  001054                     
  4213                           ;./I2C.h: 38:     i2c_espera();
  4214  001054  EC9D  F007         	call	_i2c_espera	;wreg free
  4215  001058                     
  4216                           ;./I2C.h: 39:     SSPCON2bits.RSEN = 1;
  4217  001058  82C5               	bsf	197,1,c	;volatile
  4218  00105A  0012               	return		;funcret
  4219  00105C                     __end_of_i2c_reinicia_com:
  4220                           	opt callstack 0
  4221                           
  4222 ;; *************** function _i2c_recibe_dato *****************
  4223 ;; Defined at:
  4224 ;;		line 68 in file "./I2C.h"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;		None
  4227 ;; Auto vars:     Size  Location     Type
  4228 ;;  datoleido       1    1[COMRAM] unsigned char 
  4229 ;; Return value:  Size  Location     Type
  4230 ;;                  1    wreg      unsigned char 
  4231 ;; Registers used:
  4232 ;;		wreg, status,2, status,0, cstack
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4238 ;;      Params:         0       0       0       0       0       0       0       0       0
  4239 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4240 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4241 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4242 ;;Total ram usage:        1 bytes
  4243 ;; Hardware stack levels used:    1
  4244 ;; Hardware stack levels required when called:    2
  4245 ;; This function calls:
  4246 ;;		_i2c_espera
  4247 ;; This function is called by:
  4248 ;;		_leer_rtc
  4249 ;;		_leer_eeprom
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252                           
  4253                           	psect	text27
  4254  000FDE                     __ptext27:
  4255                           	opt callstack 0
  4256  000FDE                     _i2c_recibe_dato:
  4257                           	opt callstack 25
  4258  000FDE                     
  4259                           ;./I2C.h: 70:     unsigned char datoleido;;./I2C.h: 73:     i2c_espera();
  4260  000FDE  EC9D  F007         	call	_i2c_espera	;wreg free
  4261  000FE2                     
  4262                           ;./I2C.h: 74:     SSPCON2bits.RCEN = 1;
  4263  000FE2  86C5               	bsf	197,3,c	;volatile
  4264                           
  4265                           ;./I2C.h: 76:     i2c_espera();
  4266  000FE4  EC9D  F007         	call	_i2c_espera	;wreg free
  4267  000FE8                     
  4268                           ;./I2C.h: 77:     datoleido = SSPBUF;
  4269  000FE8  CFC9 F020          	movff	4041,i2c_recibe_dato@datoleido	;volatile
  4270                           
  4271                           ;./I2C.h: 80:     i2c_espera();
  4272  000FEC  EC9D  F007         	call	_i2c_espera	;wreg free
  4273  000FF0                     
  4274                           ;./I2C.h: 82:     SSPCON2bits.ACKDT = 1;
  4275  000FF0  8AC5               	bsf	197,5,c	;volatile
  4276  000FF2                     
  4277                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
  4278  000FF2  88C5               	bsf	197,4,c	;volatile
  4279  000FF4                     
  4280                           ;./I2C.h: 91:     return datoleido;
  4281  000FF4  5020               	movf	i2c_recibe_dato@datoleido^0,w,c
  4282  000FF6  0012               	return		;funcret
  4283  000FF8                     __end_of_i2c_recibe_dato:
  4284                           	opt callstack 0
  4285                           
  4286 ;; *************** function _i2c_inicia_com *****************
  4287 ;; Defined at:
  4288 ;;		line 28 in file "./I2C.h"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;		None
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;		None
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      void 
  4295 ;; Registers used:
  4296 ;;		wreg, status,2, status,0, cstack
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4302 ;;      Params:         0       0       0       0       0       0       0       0       0
  4303 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4304 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4305 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4306 ;;Total ram usage:        0 bytes
  4307 ;; Hardware stack levels used:    1
  4308 ;; Hardware stack levels required when called:    2
  4309 ;; This function calls:
  4310 ;;		_i2c_espera
  4311 ;; This function is called by:
  4312 ;;		_escribe_rtc
  4313 ;;		_leer_rtc
  4314 ;;		_escribe_eeprom
  4315 ;;		_leer_eeprom
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           	psect	text28
  4320  00105C                     __ptext28:
  4321                           	opt callstack 0
  4322  00105C                     _i2c_inicia_com:
  4323                           	opt callstack 25
  4324  00105C                     
  4325                           ;./I2C.h: 29:     i2c_espera();
  4326  00105C  EC9D  F007         	call	_i2c_espera	;wreg free
  4327  001060                     
  4328                           ;./I2C.h: 30:     SSPCON2bits.SEN = 1;
  4329  001060  80C5               	bsf	197,0,c	;volatile
  4330  001062  0012               	return		;funcret
  4331  001064                     __end_of_i2c_inicia_com:
  4332                           	opt callstack 0
  4333                           
  4334 ;; *************** function _i2c_envia_dato *****************
  4335 ;; Defined at:
  4336 ;;		line 57 in file "./I2C.h"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;  dato            1    wreg     unsigned char 
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;  dato            1    1[COMRAM] unsigned char 
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      unsigned char 
  4343 ;; Registers used:
  4344 ;;		wreg, status,2, status,0, cstack
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4350 ;;      Params:         0       0       0       0       0       0       0       0       0
  4351 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4352 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4353 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4354 ;;Total ram usage:        1 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:    2
  4357 ;; This function calls:
  4358 ;;		_i2c_espera
  4359 ;; This function is called by:
  4360 ;;		_escribe_rtc
  4361 ;;		_leer_rtc
  4362 ;;		_escribe_eeprom
  4363 ;;		_leer_eeprom
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           	psect	text29
  4368  00103E                     __ptext29:
  4369                           	opt callstack 0
  4370  00103E                     _i2c_envia_dato:
  4371                           	opt callstack 25
  4372                           
  4373                           ;incstack = 0
  4374                           ;i2c_envia_dato@dato stored from wreg
  4375  00103E  6E20               	movwf	i2c_envia_dato@dato^0,c
  4376  001040                     
  4377                           ;./I2C.h: 58:     i2c_espera();
  4378  001040  EC9D  F007         	call	_i2c_espera	;wreg free
  4379  001044                     
  4380                           ;./I2C.h: 59:     SSPBUF = dato;
  4381  001044  C020  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
  4382  001048  0012               	return		;funcret
  4383  00104A                     __end_of_i2c_envia_dato:
  4384                           	opt callstack 0
  4385                           
  4386 ;; *************** function _i2c_detener *****************
  4387 ;; Defined at:
  4388 ;;		line 46 in file "./I2C.h"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;		None
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;		None
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  1    wreg      void 
  4395 ;; Registers used:
  4396 ;;		wreg, status,2, status,0, cstack
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4402 ;;      Params:         0       0       0       0       0       0       0       0       0
  4403 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4404 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4405 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4406 ;;Total ram usage:        0 bytes
  4407 ;; Hardware stack levels used:    1
  4408 ;; Hardware stack levels required when called:    2
  4409 ;; This function calls:
  4410 ;;		_i2c_espera
  4411 ;; This function is called by:
  4412 ;;		_escribe_rtc
  4413 ;;		_leer_rtc
  4414 ;;		_escribe_eeprom
  4415 ;;		_leer_eeprom
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           	psect	text30
  4420  001064                     __ptext30:
  4421                           	opt callstack 0
  4422  001064                     _i2c_detener:
  4423                           	opt callstack 25
  4424  001064                     
  4425                           ;./I2C.h: 47:     i2c_espera();
  4426  001064  EC9D  F007         	call	_i2c_espera	;wreg free
  4427  001068                     
  4428                           ;./I2C.h: 48:     SSPCON2bits.PEN = 1;
  4429  001068  84C5               	bsf	197,2,c	;volatile
  4430  00106A  0012               	return		;funcret
  4431  00106C                     __end_of_i2c_detener:
  4432                           	opt callstack 0
  4433                           
  4434 ;; *************** function _i2c_espera *****************
  4435 ;; Defined at:
  4436 ;;		line 20 in file "./I2C.h"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;		None
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;		None
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  1    wreg      void 
  4443 ;; Registers used:
  4444 ;;		wreg, status,2, status,0
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4450 ;;      Params:         0       0       0       0       0       0       0       0       0
  4451 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4452 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4453 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4454 ;;Total ram usage:        1 bytes
  4455 ;; Hardware stack levels used:    1
  4456 ;; Hardware stack levels required when called:    1
  4457 ;; This function calls:
  4458 ;;		Nothing
  4459 ;; This function is called by:
  4460 ;;		_i2c_inicia_com
  4461 ;;		_i2c_reinicia_com
  4462 ;;		_i2c_detener
  4463 ;;		_i2c_envia_dato
  4464 ;;		_i2c_recibe_dato
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           	psect	text31
  4469  000F3A                     __ptext31:
  4470                           	opt callstack 0
  4471  000F3A                     _i2c_espera:
  4472                           	opt callstack 25
  4473  000F3A                     l1709:
  4474  000F3A  CFC5 F01F          	movff	4037,??_i2c_espera	;volatile
  4475  000F3E  0E1F               	movlw	31
  4476  000F40  161F               	andwf	??_i2c_espera^0,f,c
  4477  000F42  A4D8               	btfss	status,2,c
  4478  000F44  EFA6  F007         	goto	u761
  4479  000F48  EFA8  F007         	goto	u760
  4480  000F4C                     u761:
  4481  000F4C  EF9D  F007         	goto	l1709
  4482  000F50                     u760:
  4483  000F50  B4C7               	btfsc	199,2,c	;volatile
  4484  000F52  EFAD  F007         	goto	u771
  4485  000F56  EFAF  F007         	goto	u770
  4486  000F5A                     u771:
  4487  000F5A  EF9D  F007         	goto	l1709
  4488  000F5E                     u770:
  4489  000F5E  0012               	return		;funcret
  4490  000F60                     __end_of_i2c_espera:
  4491                           	opt callstack 0
  4492                           
  4493 ;; *************** function _inicializarObjetos *****************
  4494 ;; Defined at:
  4495 ;;		line 121 in file "main.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;		None
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;  i               2    6[COMRAM] int 
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      void 
  4502 ;; Registers used:
  4503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4509 ;;      Params:         0       0       0       0       0       0       0       0       0
  4510 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4511 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4512 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4513 ;;Total ram usage:        2 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:    2
  4516 ;; This function calls:
  4517 ;;		___wmul
  4518 ;; This function is called by:
  4519 ;;		_main
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           	psect	text32
  4524  000998                     __ptext32:
  4525                           	opt callstack 0
  4526  000998                     _inicializarObjetos:
  4527                           	opt callstack 28
  4528  000998                     
  4529                           ;main.c: 123:     for (int i = 0; i < 24; i++) {
  4530  000998  0E00               	movlw	0
  4531  00099A  6E26               	movwf	(inicializarObjetos@i+1)^0,c
  4532  00099C  0E00               	movlw	0
  4533  00099E  6E25               	movwf	inicializarObjetos@i^0,c
  4534  0009A0                     l2215:
  4535                           
  4536                           ;main.c: 124:         horarios[i].hora = i;
  4537  0009A0  C025  F01F         	movff	inicializarObjetos@i,___wmul@multiplier
  4538  0009A4  C026  F020         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  4539  0009A8  0E00               	movlw	0
  4540  0009AA  6E22               	movwf	(___wmul@multiplicand+1)^0,c
  4541  0009AC  0E03               	movlw	3
  4542  0009AE  6E21               	movwf	___wmul@multiplicand^0,c
  4543  0009B0  ECB0  F007         	call	___wmul	;wreg free
  4544  0009B4  0E60               	movlw	low _horarios
  4545  0009B6  241F               	addwf	?___wmul^0,w,c
  4546  0009B8  6ED9               	movwf	fsr2l,c
  4547  0009BA  0E00               	movlw	high _horarios
  4548  0009BC  2020               	addwfc	(?___wmul+1)^0,w,c
  4549  0009BE  6EDA               	movwf	fsr2h,c
  4550  0009C0  C025  FFDF         	movff	inicializarObjetos@i,indf2
  4551                           
  4552                           ;main.c: 125:         horarios[i].regar = 0;
  4553  0009C4  C025  F01F         	movff	inicializarObjetos@i,___wmul@multiplier
  4554  0009C8  C026  F020         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  4555  0009CC  0E00               	movlw	0
  4556  0009CE  6E22               	movwf	(___wmul@multiplicand+1)^0,c
  4557  0009D0  0E03               	movlw	3
  4558  0009D2  6E21               	movwf	___wmul@multiplicand^0,c
  4559  0009D4  ECB0  F007         	call	___wmul	;wreg free
  4560  0009D8  0E61               	movlw	low (_horarios+1)
  4561  0009DA  241F               	addwf	?___wmul^0,w,c
  4562  0009DC  6ED9               	movwf	fsr2l,c
  4563  0009DE  0E00               	movlw	high (_horarios+1)
  4564  0009E0  2020               	addwfc	(?___wmul+1)^0,w,c
  4565  0009E2  6EDA               	movwf	fsr2h,c
  4566  0009E4  0E00               	movlw	0
  4567  0009E6  6EDF               	movwf	indf2,c
  4568                           
  4569                           ;main.c: 126:         horarios[i].tiempoRegar = 15;
  4570  0009E8  C025  F01F         	movff	inicializarObjetos@i,___wmul@multiplier
  4571  0009EC  C026  F020         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  4572  0009F0  0E00               	movlw	0
  4573  0009F2  6E22               	movwf	(___wmul@multiplicand+1)^0,c
  4574  0009F4  0E03               	movlw	3
  4575  0009F6  6E21               	movwf	___wmul@multiplicand^0,c
  4576  0009F8  ECB0  F007         	call	___wmul	;wreg free
  4577  0009FC  0E62               	movlw	low (_horarios+2)
  4578  0009FE  241F               	addwf	?___wmul^0,w,c
  4579  000A00  6ED9               	movwf	fsr2l,c
  4580  000A02  0E00               	movlw	high (_horarios+2)
  4581  000A04  2020               	addwfc	(?___wmul+1)^0,w,c
  4582  000A06  6EDA               	movwf	fsr2h,c
  4583  000A08  0E0F               	movlw	15
  4584  000A0A  6EDF               	movwf	indf2,c
  4585  000A0C                     
  4586                           ;main.c: 127:     }
  4587  000A0C  4A25               	infsnz	inicializarObjetos@i^0,f,c
  4588  000A0E  2A26               	incf	(inicializarObjetos@i+1)^0,f,c
  4589  000A10  BE26               	btfsc	(inicializarObjetos@i+1)^0,7,c
  4590  000A12  EF14  F005         	goto	u1351
  4591  000A16  5026               	movf	(inicializarObjetos@i+1)^0,w,c
  4592  000A18  E109               	bnz	u1350
  4593  000A1A  0E18               	movlw	24
  4594  000A1C  5C25               	subwf	inicializarObjetos@i^0,w,c
  4595  000A1E  A0D8               	btfss	status,0,c
  4596  000A20  EF14  F005         	goto	u1351
  4597  000A24  EF16  F005         	goto	u1350
  4598  000A28                     u1351:
  4599  000A28  EFD0  F004         	goto	l2215
  4600  000A2C                     u1350:
  4601  000A2C  0012               	return		;funcret
  4602  000A2E                     __end_of_inicializarObjetos:
  4603                           	opt callstack 0
  4604                           
  4605 ;; *************** function ___wmul *****************
  4606 ;; Defined at:
  4607 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;  multiplier      2    0[COMRAM] unsigned int 
  4610 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4611 ;; Auto vars:     Size  Location     Type
  4612 ;;  product         2    4[COMRAM] unsigned int 
  4613 ;; Return value:  Size  Location     Type
  4614 ;;                  2    0[COMRAM] unsigned int 
  4615 ;; Registers used:
  4616 ;;		wreg, status,2, status,0, prodl, prodh
  4617 ;; Tracked objects:
  4618 ;;		On entry : 0/0
  4619 ;;		On exit  : 0/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4622 ;;      Params:         4       0       0       0       0       0       0       0       0
  4623 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4624 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4625 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4626 ;;Total ram usage:        6 bytes
  4627 ;; Hardware stack levels used:    1
  4628 ;; Hardware stack levels required when called:    1
  4629 ;; This function calls:
  4630 ;;		Nothing
  4631 ;; This function is called by:
  4632 ;;		_inicializarObjetos
  4633 ;;		_escribeHorariosMemoria
  4634 ;;		_leeHorariosMemoria
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638                           	psect	text33
  4639  000F60                     __ptext33:
  4640                           	opt callstack 0
  4641  000F60                     ___wmul:
  4642                           	opt callstack 26
  4643  000F60  501F               	movf	___wmul@multiplier^0,w,c
  4644  000F62  0221               	mulwf	___wmul@multiplicand^0,c
  4645  000F64  CFF3 F023          	movff	prodl,___wmul@product
  4646  000F68  CFF4 F024          	movff	prodh,___wmul@product+1
  4647  000F6C  501F               	movf	___wmul@multiplier^0,w,c
  4648  000F6E  0222               	mulwf	(___wmul@multiplicand+1)^0,c
  4649  000F70  50F3               	movf	243,w,c
  4650  000F72  2624               	addwf	(___wmul@product+1)^0,f,c
  4651  000F74  5020               	movf	(___wmul@multiplier+1)^0,w,c
  4652  000F76  0221               	mulwf	___wmul@multiplicand^0,c
  4653  000F78  50F3               	movf	243,w,c
  4654  000F7A  2624               	addwf	(___wmul@product+1)^0,f,c
  4655  000F7C  C023  F01F         	movff	___wmul@product,?___wmul
  4656  000F80  C024  F020         	movff	___wmul@product+1,?___wmul+1
  4657  000F84  0012               	return		;funcret
  4658  000F86                     __end_of___wmul:
  4659                           	opt callstack 0
  4660                           
  4661 ;; *************** function _i2c_iniciar *****************
  4662 ;; Defined at:
  4663 ;;		line 4 in file "./I2C.h"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;		None
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;		None
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  1    wreg      void 
  4670 ;; Registers used:
  4671 ;;		wreg, status,2
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4677 ;;      Params:         0       0       0       0       0       0       0       0       0
  4678 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4679 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4680 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4681 ;;Total ram usage:        0 bytes
  4682 ;; Hardware stack levels used:    1
  4683 ;; Hardware stack levels required when called:    1
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_main
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           	psect	text34
  4692  001028                     __ptext34:
  4693                           	opt callstack 0
  4694  001028                     _i2c_iniciar:
  4695                           	opt callstack 29
  4696  001028                     
  4697                           ;./I2C.h: 5:     TRISBbits.RB0 = 1;
  4698  001028  8093               	bsf	147,0,c	;volatile
  4699                           
  4700                           ;./I2C.h: 6:     TRISBbits.RB1 = 1;
  4701  00102A  8293               	bsf	147,1,c	;volatile
  4702  00102C                     
  4703                           ;./I2C.h: 7:     SSPSTAT = 0b10000000;
  4704  00102C  0E80               	movlw	128
  4705  00102E  6EC7               	movwf	199,c	;volatile
  4706                           
  4707                           ;./I2C.h: 8:     SSPCON1 = 0b00101000;
  4708  001030  0E28               	movlw	40
  4709  001032  6EC6               	movwf	198,c	;volatile
  4710                           
  4711                           ;./I2C.h: 9:     SSPCON2 = 0b00000000;
  4712  001034  0E00               	movlw	0
  4713  001036  6EC5               	movwf	197,c	;volatile
  4714                           
  4715                           ;./I2C.h: 10:     SSPADD = 9;
  4716  001038  0E09               	movlw	9
  4717  00103A  6EC8               	movwf	200,c	;volatile
  4718  00103C  0012               	return		;funcret
  4719  00103E                     __end_of_i2c_iniciar:
  4720                           	opt callstack 0
  4721                           
  4722 ;; *************** function _configurarAdc *****************
  4723 ;; Defined at:
  4724 ;;		line 102 in file "main.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;		None
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;		None
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  1    wreg      void 
  4731 ;; Registers used:
  4732 ;;		wreg, status,2
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4738 ;;      Params:         0       0       0       0       0       0       0       0       0
  4739 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4740 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4741 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4742 ;;Total ram usage:        0 bytes
  4743 ;; Hardware stack levels used:    1
  4744 ;; Hardware stack levels required when called:    1
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		_main
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           	psect	text35
  4753  000FF8                     __ptext35:
  4754                           	opt callstack 0
  4755  000FF8                     _configurarAdc:
  4756                           	opt callstack 29
  4757  000FF8                     
  4758                           ;main.c: 103:     ADCON1 = 0b00000001;
  4759  000FF8  0E01               	movlw	1
  4760  000FFA  6EC1               	movwf	193,c	;volatile
  4761                           
  4762                           ;main.c: 104:     ADCON2 = 0b10100101;
  4763  000FFC  0EA5               	movlw	165
  4764  000FFE  6EC0               	movwf	192,c	;volatile
  4765                           
  4766                           ;main.c: 105:     TRISA = 1;
  4767  001000  0E01               	movlw	1
  4768  001002  6E92               	movwf	146,c	;volatile
  4769                           
  4770                           ;main.c: 106:     TRISE = 1;
  4771  001004  0E01               	movlw	1
  4772  001006  6E96               	movwf	150,c	;volatile
  4773                           
  4774                           ;main.c: 108:     PORTA = 0;
  4775  001008  0E00               	movlw	0
  4776  00100A  6E80               	movwf	128,c	;volatile
  4777                           
  4778                           ;main.c: 109:     PORTE = 0;
  4779  00100C  0E00               	movlw	0
  4780  00100E  6E84               	movwf	132,c	;volatile
  4781  001010  0012               	return		;funcret
  4782  001012                     __end_of_configurarAdc:
  4783                           	opt callstack 0
  4784                           
  4785 ;; *************** function _UART_init *****************
  4786 ;; Defined at:
  4787 ;;		line 12 in file "./UART.h"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;  BAUD            4   14[COMRAM] long 
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;  frecuenciaCr    4    0        long 
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  1    wreg      void 
  4794 ;; Registers used:
  4795 ;;		wreg, status,2, status,0, cstack
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4801 ;;      Params:         4       0       0       0       0       0       0       0       0
  4802 ;;      Locals:         8       0       0       0       0       0       0       0       0
  4803 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4804 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4805 ;;Total ram usage:       12 bytes
  4806 ;; Hardware stack levels used:    1
  4807 ;; Hardware stack levels required when called:    2
  4808 ;; This function calls:
  4809 ;;		___aldiv
  4810 ;; This function is called by:
  4811 ;;		_main
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           	psect	text36
  4816  000AC0                     __ptext36:
  4817                           	opt callstack 0
  4818  000AC0                     _UART_init:
  4819                           	opt callstack 28
  4820  000AC0                     
  4821                           ;./UART.h: 14:     TRISCbits.TRISC6 = 0;
  4822  000AC0  9C94               	bcf	148,6,c	;volatile
  4823  000AC2                     
  4824                           ;./UART.h: 15:     TRISCbits.TRISC7 = 1;
  4825  000AC2  8E94               	bsf	148,7,c	;volatile
  4826  000AC4                     
  4827                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  4828  000AC4  0E10               	movlw	16
  4829  000AC6  6E23               	movwf	___aldiv@divisor^0,c
  4830  000AC8  0E00               	movlw	0
  4831  000ACA  6E24               	movwf	(___aldiv@divisor+1)^0,c
  4832  000ACC  0E00               	movlw	0
  4833  000ACE  6E25               	movwf	(___aldiv@divisor+2)^0,c
  4834  000AD0  0E00               	movlw	0
  4835  000AD2  6E26               	movwf	(___aldiv@divisor+3)^0,c
  4836  000AD4  0E00               	movlw	0
  4837  000AD6  6E1F               	movwf	___aldiv@dividend^0,c
  4838  000AD8  0E09               	movlw	9
  4839  000ADA  6E20               	movwf	(___aldiv@dividend+1)^0,c
  4840  000ADC  0E3D               	movlw	61
  4841  000ADE  6E21               	movwf	(___aldiv@dividend+2)^0,c
  4842  000AE0  0E00               	movlw	0
  4843  000AE2  6E22               	movwf	(___aldiv@dividend+3)^0,c
  4844  000AE4  ECC7  F002         	call	___aldiv	;wreg free
  4845  000AE8  C01F  F035         	movff	?___aldiv,_UART_init$1472
  4846  000AEC  C020  F036         	movff	?___aldiv+1,_UART_init$1472+1
  4847  000AF0  C021  F037         	movff	?___aldiv+2,_UART_init$1472+2
  4848  000AF4  C022  F038         	movff	?___aldiv+3,_UART_init$1472+3
  4849  000AF8                     
  4850                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  4851  000AF8  C035  F01F         	movff	_UART_init$1472,___aldiv@dividend
  4852  000AFC  C036  F020         	movff	_UART_init$1472+1,___aldiv@dividend+1
  4853  000B00  C037  F021         	movff	_UART_init$1472+2,___aldiv@dividend+2
  4854  000B04  C038  F022         	movff	_UART_init$1472+3,___aldiv@dividend+3
  4855  000B08  C02D  F023         	movff	UART_init@BAUD,___aldiv@divisor
  4856  000B0C  C02E  F024         	movff	UART_init@BAUD+1,___aldiv@divisor+1
  4857  000B10  C02F  F025         	movff	UART_init@BAUD+2,___aldiv@divisor+2
  4858  000B14  C030  F026         	movff	UART_init@BAUD+3,___aldiv@divisor+3
  4859  000B18  ECC7  F002         	call	___aldiv	;wreg free
  4860  000B1C  041F               	decf	?___aldiv^0,w,c
  4861  000B1E  6EAF               	movwf	175,c	;volatile
  4862  000B20                     
  4863                           ;./UART.h: 21:     TXSTAbits.BRGH = 1;
  4864  000B20  84AC               	bsf	172,2,c	;volatile
  4865  000B22                     
  4866                           ;./UART.h: 22:     TXSTAbits.SYNC = 0;
  4867  000B22  98AC               	bcf	172,4,c	;volatile
  4868  000B24                     
  4869                           ;./UART.h: 23:     RCSTAbits.SPEN = 1;
  4870  000B24  8EAB               	bsf	171,7,c	;volatile
  4871  000B26                     
  4872                           ;./UART.h: 26:     TXSTAbits.TX9 = 0;
  4873  000B26  9CAC               	bcf	172,6,c	;volatile
  4874  000B28                     
  4875                           ;./UART.h: 27:     TXSTAbits.TXEN = 1;
  4876  000B28  8AAC               	bsf	172,5,c	;volatile
  4877  000B2A                     
  4878                           ;./UART.h: 30:     RCSTAbits.RC9 = 0;
  4879  000B2A  9CAB               	bcf	171,6,c	;volatile
  4880  000B2C                     
  4881                           ;./UART.h: 31:     RCSTAbits.CREN = 1;
  4882  000B2C  88AB               	bsf	171,4,c	;volatile
  4883  000B2E  0012               	return		;funcret
  4884  000B30                     __end_of_UART_init:
  4885                           	opt callstack 0
  4886                           
  4887 ;; *************** function ___aldiv *****************
  4888 ;; Defined at:
  4889 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  4890 ;; Parameters:    Size  Location     Type
  4891 ;;  dividend        4    0[COMRAM] long 
  4892 ;;  divisor         4    4[COMRAM] long 
  4893 ;; Auto vars:     Size  Location     Type
  4894 ;;  quotient        4   10[COMRAM] long 
  4895 ;;  sign            1    9[COMRAM] unsigned char 
  4896 ;;  counter         1    8[COMRAM] unsigned char 
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  4    0[COMRAM] long 
  4899 ;; Registers used:
  4900 ;;		wreg, status,2, status,0
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4906 ;;      Params:         8       0       0       0       0       0       0       0       0
  4907 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4908 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4909 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4910 ;;Total ram usage:       14 bytes
  4911 ;; Hardware stack levels used:    1
  4912 ;; Hardware stack levels required when called:    1
  4913 ;; This function calls:
  4914 ;;		Nothing
  4915 ;; This function is called by:
  4916 ;;		_UART_init
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920                           	psect	text37
  4921  00058E                     __ptext37:
  4922                           	opt callstack 0
  4923  00058E                     ___aldiv:
  4924                           	opt callstack 28
  4925  00058E  0E00               	movlw	0
  4926  000590  6E28               	movwf	___aldiv@sign^0,c
  4927  000592  BE26               	btfsc	(___aldiv@divisor+3)^0,7,c
  4928  000594  EFD0  F002         	goto	u1290
  4929  000598  EFCE  F002         	goto	u1291
  4930  00059C                     u1291:
  4931  00059C  EFDA  F002         	goto	l2149
  4932  0005A0                     u1290:
  4933  0005A0  1E26               	comf	(___aldiv@divisor+3)^0,f,c
  4934  0005A2  1E25               	comf	(___aldiv@divisor+2)^0,f,c
  4935  0005A4  1E24               	comf	(___aldiv@divisor+1)^0,f,c
  4936  0005A6  6C23               	negf	___aldiv@divisor^0,c
  4937  0005A8  0E00               	movlw	0
  4938  0005AA  2224               	addwfc	(___aldiv@divisor+1)^0,f,c
  4939  0005AC  2225               	addwfc	(___aldiv@divisor+2)^0,f,c
  4940  0005AE  2226               	addwfc	(___aldiv@divisor+3)^0,f,c
  4941  0005B0  0E01               	movlw	1
  4942  0005B2  6E28               	movwf	___aldiv@sign^0,c
  4943  0005B4                     l2149:
  4944  0005B4  BE22               	btfsc	(___aldiv@dividend+3)^0,7,c
  4945  0005B6  EFE1  F002         	goto	u1300
  4946  0005BA  EFDF  F002         	goto	u1301
  4947  0005BE                     u1301:
  4948  0005BE  EFEB  F002         	goto	l2155
  4949  0005C2                     u1300:
  4950  0005C2  1E22               	comf	(___aldiv@dividend+3)^0,f,c
  4951  0005C4  1E21               	comf	(___aldiv@dividend+2)^0,f,c
  4952  0005C6  1E20               	comf	(___aldiv@dividend+1)^0,f,c
  4953  0005C8  6C1F               	negf	___aldiv@dividend^0,c
  4954  0005CA  0E00               	movlw	0
  4955  0005CC  2220               	addwfc	(___aldiv@dividend+1)^0,f,c
  4956  0005CE  2221               	addwfc	(___aldiv@dividend+2)^0,f,c
  4957  0005D0  2222               	addwfc	(___aldiv@dividend+3)^0,f,c
  4958  0005D2  0E01               	movlw	1
  4959  0005D4  1A28               	xorwf	___aldiv@sign^0,f,c
  4960  0005D6                     l2155:
  4961  0005D6  0E00               	movlw	0
  4962  0005D8  6E29               	movwf	___aldiv@quotient^0,c
  4963  0005DA  0E00               	movlw	0
  4964  0005DC  6E2A               	movwf	(___aldiv@quotient+1)^0,c
  4965  0005DE  0E00               	movlw	0
  4966  0005E0  6E2B               	movwf	(___aldiv@quotient+2)^0,c
  4967  0005E2  0E00               	movlw	0
  4968  0005E4  6E2C               	movwf	(___aldiv@quotient+3)^0,c
  4969  0005E6  5023               	movf	___aldiv@divisor^0,w,c
  4970  0005E8  1024               	iorwf	(___aldiv@divisor+1)^0,w,c
  4971  0005EA  1025               	iorwf	(___aldiv@divisor+2)^0,w,c
  4972  0005EC  1026               	iorwf	(___aldiv@divisor+3)^0,w,c
  4973  0005EE  B4D8               	btfsc	status,2,c
  4974  0005F0  EFFC  F002         	goto	u1311
  4975  0005F4  EFFE  F002         	goto	u1310
  4976  0005F8                     u1311:
  4977  0005F8  EF34  F003         	goto	l2177
  4978  0005FC                     u1310:
  4979  0005FC  0E01               	movlw	1
  4980  0005FE  6E27               	movwf	___aldiv@counter^0,c
  4981  000600  EF08  F003         	goto	l2163
  4982  000604                     l2161:
  4983  000604  90D8               	bcf	status,0,c
  4984  000606  3623               	rlcf	___aldiv@divisor^0,f,c
  4985  000608  3624               	rlcf	(___aldiv@divisor+1)^0,f,c
  4986  00060A  3625               	rlcf	(___aldiv@divisor+2)^0,f,c
  4987  00060C  3626               	rlcf	(___aldiv@divisor+3)^0,f,c
  4988  00060E  2A27               	incf	___aldiv@counter^0,f,c
  4989  000610                     l2163:
  4990  000610  AE26               	btfss	(___aldiv@divisor+3)^0,7,c
  4991  000612  EF0D  F003         	goto	u1321
  4992  000616  EF0F  F003         	goto	u1320
  4993  00061A                     u1321:
  4994  00061A  EF02  F003         	goto	l2161
  4995  00061E                     u1320:
  4996  00061E                     l2165:
  4997  00061E  90D8               	bcf	status,0,c
  4998  000620  3629               	rlcf	___aldiv@quotient^0,f,c
  4999  000622  362A               	rlcf	(___aldiv@quotient+1)^0,f,c
  5000  000624  362B               	rlcf	(___aldiv@quotient+2)^0,f,c
  5001  000626  362C               	rlcf	(___aldiv@quotient+3)^0,f,c
  5002  000628  5023               	movf	___aldiv@divisor^0,w,c
  5003  00062A  5C1F               	subwf	___aldiv@dividend^0,w,c
  5004  00062C  5024               	movf	(___aldiv@divisor+1)^0,w,c
  5005  00062E  5820               	subwfb	(___aldiv@dividend+1)^0,w,c
  5006  000630  5025               	movf	(___aldiv@divisor+2)^0,w,c
  5007  000632  5821               	subwfb	(___aldiv@dividend+2)^0,w,c
  5008  000634  5026               	movf	(___aldiv@divisor+3)^0,w,c
  5009  000636  5822               	subwfb	(___aldiv@dividend+3)^0,w,c
  5010  000638  A0D8               	btfss	status,0,c
  5011  00063A  EF21  F003         	goto	u1331
  5012  00063E  EF23  F003         	goto	u1330
  5013  000642                     u1331:
  5014  000642  EF2C  F003         	goto	l2173
  5015  000646                     u1330:
  5016  000646  5023               	movf	___aldiv@divisor^0,w,c
  5017  000648  5E1F               	subwf	___aldiv@dividend^0,f,c
  5018  00064A  5024               	movf	(___aldiv@divisor+1)^0,w,c
  5019  00064C  5A20               	subwfb	(___aldiv@dividend+1)^0,f,c
  5020  00064E  5025               	movf	(___aldiv@divisor+2)^0,w,c
  5021  000650  5A21               	subwfb	(___aldiv@dividend+2)^0,f,c
  5022  000652  5026               	movf	(___aldiv@divisor+3)^0,w,c
  5023  000654  5A22               	subwfb	(___aldiv@dividend+3)^0,f,c
  5024  000656  8029               	bsf	___aldiv@quotient^0,0,c
  5025  000658                     l2173:
  5026  000658  90D8               	bcf	status,0,c
  5027  00065A  3226               	rrcf	(___aldiv@divisor+3)^0,f,c
  5028  00065C  3225               	rrcf	(___aldiv@divisor+2)^0,f,c
  5029  00065E  3224               	rrcf	(___aldiv@divisor+1)^0,f,c
  5030  000660  3223               	rrcf	___aldiv@divisor^0,f,c
  5031  000662  2E27               	decfsz	___aldiv@counter^0,f,c
  5032  000664  EF0F  F003         	goto	l2165
  5033  000668                     l2177:
  5034  000668  5028               	movf	___aldiv@sign^0,w,c
  5035  00066A  B4D8               	btfsc	status,2,c
  5036  00066C  EF3A  F003         	goto	u1341
  5037  000670  EF3C  F003         	goto	u1340
  5038  000674                     u1341:
  5039  000674  EF44  F003         	goto	l2181
  5040  000678                     u1340:
  5041  000678  1E2C               	comf	(___aldiv@quotient+3)^0,f,c
  5042  00067A  1E2B               	comf	(___aldiv@quotient+2)^0,f,c
  5043  00067C  1E2A               	comf	(___aldiv@quotient+1)^0,f,c
  5044  00067E  6C29               	negf	___aldiv@quotient^0,c
  5045  000680  0E00               	movlw	0
  5046  000682  222A               	addwfc	(___aldiv@quotient+1)^0,f,c
  5047  000684  222B               	addwfc	(___aldiv@quotient+2)^0,f,c
  5048  000686  222C               	addwfc	(___aldiv@quotient+3)^0,f,c
  5049  000688                     l2181:
  5050  000688  C029  F01F         	movff	___aldiv@quotient,?___aldiv
  5051  00068C  C02A  F020         	movff	___aldiv@quotient+1,?___aldiv+1
  5052  000690  C02B  F021         	movff	___aldiv@quotient+2,?___aldiv+2
  5053  000694  C02C  F022         	movff	___aldiv@quotient+3,?___aldiv+3
  5054  000698  0012               	return		;funcret
  5055  00069A                     __end_of___aldiv:
  5056                           	opt callstack 0
  5057                           
  5058 ;; *************** function _desbordamiento *****************
  5059 ;; Defined at:
  5060 ;;		line 67 in file "main.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;		None
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;		None
  5065 ;; Return value:  Size  Location     Type
  5066 ;;                  1    wreg      void 
  5067 ;; Registers used:
  5068 ;;		wreg, status,2, status,0
  5069 ;; Tracked objects:
  5070 ;;		On entry : 0/0
  5071 ;;		On exit  : 0/0
  5072 ;;		Unchanged: 0/0
  5073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5074 ;;      Params:         0       0       0       0       0       0       0       0       0
  5075 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5076 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5077 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5078 ;;Total ram usage:        0 bytes
  5079 ;; Hardware stack levels used:    1
  5080 ;; This function calls:
  5081 ;;		Nothing
  5082 ;; This function is called by:
  5083 ;;		Interrupt level 2
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           	psect	intcode
  5088  000008                     __pintcode:
  5089                           	opt callstack 0
  5090  000008                     _desbordamiento:
  5091                           	opt callstack 24
  5092                           
  5093                           ;incstack = 0
  5094  000008  823D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5095  00000A  ED01  F006         	call	int_func,f	;refresh shadow registers
  5096                           
  5097                           	psect	intcode_body
  5098  000C02                     __pintcode_body:
  5099                           	opt callstack 24
  5100  000C02                     int_func:
  5101                           	opt callstack 24
  5102  000C02  0006               	pop		; remove dummy address from shadow register refresh
  5103  000C04                     
  5104                           ;main.c: 69:     if (INTCONbits.TMR0IF) {
  5105  000C04  A4F2               	btfss	242,2,c	;volatile
  5106  000C06  EF07  F006         	goto	i2u68_41
  5107  000C0A  EF09  F006         	goto	i2u68_40
  5108  000C0E                     i2u68_41:
  5109  000C0E  EF24  F006         	goto	i2l1617
  5110  000C12                     i2u68_40:
  5111  000C12                     
  5112                           ;main.c: 71:         if (esperandoDatos) {
  5113  000C12  501B               	movf	_esperandoDatos^0,w,c
  5114  000C14  B4D8               	btfsc	status,2,c
  5115  000C16  EF0F  F006         	goto	i2u69_41
  5116  000C1A  EF11  F006         	goto	i2u69_40
  5117  000C1E                     i2u69_41:
  5118  000C1E  EF1D  F006         	goto	i2l1613
  5119  000C22                     i2u69_40:
  5120  000C22                     
  5121                           ;main.c: 73:             tiempoInactividadTrans++;
  5122  000C22  2A1E               	incf	_tiempoInactividadTrans^0,f,c
  5123  000C24                     
  5124                           ;main.c: 75:             if (tiempoInactividadTrans == 2)
  5125  000C24  0E02               	movlw	2
  5126  000C26  181E               	xorwf	_tiempoInactividadTrans^0,w,c
  5127  000C28  A4D8               	btfss	status,2,c
  5128  000C2A  EF19  F006         	goto	i2u70_41
  5129  000C2E  EF1B  F006         	goto	i2u70_40
  5130  000C32                     i2u70_41:
  5131  000C32  EF1D  F006         	goto	i2l1613
  5132  000C36                     i2u70_40:
  5133  000C36                     
  5134                           ;main.c: 76:                 esperaDatoConcluida = 1;
  5135  000C36  0E01               	movlw	1
  5136  000C38  6E1C               	movwf	_esperaDatoConcluida^0,c
  5137  000C3A                     i2l1613:
  5138                           
  5139                           ;main.c: 81:         INTCONbits.TMR0IF = 0;
  5140  000C3A  94F2               	bcf	242,2,c	;volatile
  5141  000C3C                     
  5142                           ;main.c: 82:         TMR0 = VALOR_TIMER0;
  5143  000C3C  C039  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  5144  000C40  C03A  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  5145                           
  5146                           ;main.c: 83:         overflowTimer = 1;
  5147  000C44  0E01               	movlw	1
  5148  000C46  6E16               	movwf	_overflowTimer^0,c
  5149  000C48                     i2l1617:
  5150                           
  5151                           ;main.c: 87:     if (PIR1bits.RCIF) {
  5152  000C48  AA9E               	btfss	158,5,c	;volatile
  5153  000C4A  EF29  F006         	goto	i2u71_41
  5154  000C4E  EF2B  F006         	goto	i2u71_40
  5155  000C52                     i2u71_41:
  5156  000C52  EF2F  F006         	goto	i2l166
  5157  000C56                     i2u71_40:
  5158  000C56                     
  5159                           ;main.c: 89:         byteUart = RCREG;
  5160  000C56  CFAE F01D          	movff	4014,_byteUart	;volatile
  5161  000C5A                     
  5162                           ;main.c: 90:         datoRecibido = 1;
  5163  000C5A  0E01               	movlw	1
  5164  000C5C  6E17               	movwf	_datoRecibido^0,c
  5165  000C5E                     i2l166:
  5166  000C5E  923D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5167  000C60  0011               	retfie		f
  5168  000C62                     __end_of_desbordamiento:
  5169                           	opt callstack 0
  5170                           
  5171                           	psect	rparam
  5172  0000                     
  5173                           	psect	temp
  5174  00003D                     btemp:
  5175                           	opt callstack 0
  5176  00003D                     	ds	1
  5177  0000                     int$flags	set	btemp
  5178  0000                     wtemp8	set	btemp+1
  5179  0000                     ttemp5	set	btemp+1
  5180  0000                     ttemp6	set	btemp+4
  5181  0000                     ttemp7	set	btemp+8
  5182                           tosu	equ	0xFFF
  5183                           tosh	equ	0xFFE
  5184                           tosl	equ	0xFFD
  5185                           stkptr	equ	0xFFC
  5186                           pclatu	equ	0xFFB
  5187                           pclath	equ	0xFFA
  5188                           pcl	equ	0xFF9
  5189                           tblptru	equ	0xFF8
  5190                           tblptrh	equ	0xFF7
  5191                           tblptrl	equ	0xFF6
  5192                           tablat	equ	0xFF5
  5193                           prodh	equ	0xFF4
  5194                           prodl	equ	0xFF3
  5195                           indf0	equ	0xFEF
  5196                           postinc0	equ	0xFEE
  5197                           postdec0	equ	0xFED
  5198                           preinc0	equ	0xFEC
  5199                           plusw0	equ	0xFEB
  5200                           fsr0h	equ	0xFEA
  5201                           fsr0l	equ	0xFE9
  5202                           wreg	equ	0xFE8
  5203                           indf1	equ	0xFE7
  5204                           postinc1	equ	0xFE6
  5205                           postdec1	equ	0xFE5
  5206                           preinc1	equ	0xFE4
  5207                           plusw1	equ	0xFE3
  5208                           fsr1h	equ	0xFE2
  5209                           fsr1l	equ	0xFE1
  5210                           bsr	equ	0xFE0
  5211                           indf2	equ	0xFDF
  5212                           postinc2	equ	0xFDE
  5213                           postdec2	equ	0xFDD
  5214                           preinc2	equ	0xFDC
  5215                           plusw2	equ	0xFDB
  5216                           fsr2h	equ	0xFDA
  5217                           fsr2l	equ	0xFD9
  5218                           status	equ	0xFD8


Data Sizes:
    Strings     645
    Constant    0
    Data        4
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      60
    BANK0           160      0      72
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 72
		 -> STR_24(CODE[42]), STR_23(CODE[3]), STR_22(CODE[14]), STR_21(CODE[49]), 
		 -> STR_20(CODE[37]), STR_19(CODE[27]), STR_18(CODE[37]), STR_17(CODE[37]), 
		 -> STR_16(CODE[23]), STR_15(CODE[72]), STR_14(CODE[23]), STR_13(CODE[51]), 
		 -> STR_12(CODE[23]), STR_11(CODE[23]), STR_10(CODE[26]), STR_9(CODE[55]), 
		 -> STR_8(CODE[23]), STR_7(CODE[51]), STR_6(CODE[25]), STR_5(CODE[37]), 
		 -> STR_4(CODE[31]), STR_3(CODE[43]), STR_2(CODE[16]), STR_1(CODE[23]), 


Critical Paths under _main in COMRAM

    _main->_UART_init
    _sistemaRegado->_encenderBombas
    _lecturaAnalogaSensores->_dameHumedadSuelo
    _encenderBombas->_estaSeco
    _dameHoraActual->_leer_rtc
    _leer_rtc->_i2c_envia_dato
    _leer_rtc->_i2c_recibe_dato
    _sistemaPrincipal->_setTiempoRegar
    _setTiempoRegar->_escribeHorariosMemoria
    _mostrarMenu->_UART_printf
    _fijaHoraRtc->_setRtc
    _setRtc->_escribe_rtc
    _escribe_rtc->_i2c_envia_dato
    _asignarHorarios->_escribeHorariosMemoria
    _escribeHorariosMemoria->_escribe_eeprom
    _escribe_eeprom->___wmul
    _UART_printf->_UART_write
    _restablecerDatosSensor->_constructorSensor
    _leeHorariosMemoria->___wmul
    _leeHorariosMemoria->_leer_eeprom
    _leer_eeprom->_i2c_envia_dato
    _leer_eeprom->_i2c_recibe_dato
    _i2c_reinicia_com->_i2c_espera
    _i2c_recibe_dato->_i2c_espera
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera
    _inicializarObjetos->___wmul
    _UART_init->___aldiv

Critical Paths under _desbordamiento in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _desbordamiento in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _desbordamiento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _desbordamiento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _desbordamiento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _desbordamiento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _desbordamiento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _desbordamiento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _desbordamiento in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   25646
                          _UART_init
                      _configurarAdc
                        _i2c_iniciar
                 _inicializarObjetos
                 _leeHorariosMemoria
                        _mostrarMenu
             _restablecerDatosSensor
                   _sistemaPrincipal
                      _sistemaRegado
 ---------------------------------------------------------------------------------
 (1) _sistemaRegado                                        0     0      0    1198
                     _dameHoraActual
                     _encenderBombas
                          _horaRegar
             _lecturaAnalogaSensores
 ---------------------------------------------------------------------------------
 (2) _lecturaAnalogaSensores                               3     3      0     112
                                              2 COMRAM     3     3      0
                   _dameHumedadSuelo
 ---------------------------------------------------------------------------------
 (3) _dameHumedadSuelo                                     2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _horaRegar                                            3     1      2       0
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _encenderBombas                                       5     5      0     905
                                              2 COMRAM     5     5      0
                           _estaSeco
 ---------------------------------------------------------------------------------
 (3) _estaSeco                                             2     0      2     630
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _dameHoraActual                                       0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (3) _leer_rtc                                             2     2      0      90
                                              2 COMRAM     2     2      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (3) _convertirDato                                        3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _sistemaPrincipal                                     3     3      0   17712
                                             22 COMRAM     3     3      0
                        _UART_printf
                    _asignarHorarios
                        _fijaHoraRtc
                        _mostrarMenu
                     _setTiempoRegar
 ---------------------------------------------------------------------------------
 (2) _setTiempoRegar                                       8     8      0    4583
                                             14 COMRAM     8     8      0
                        _UART_printf
                          _UART_read
             _escribeHorariosMemoria
 ---------------------------------------------------------------------------------
 (2) _mostrarMenu                                          0     0      0    1891
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _fijaHoraRtc                                          1     1      0    4903
                                             11 COMRAM     1     1      0
                        _UART_printf
                        _escribe_rtc
                             _setRtc
 ---------------------------------------------------------------------------------
 (3) _setRtc                                               7     7      0    2565
                                              4 COMRAM     7     7      0
                        _UART_printf
                          _UART_read
                        _escribe_rtc
 ---------------------------------------------------------------------------------
 (4) _escribe_rtc                                          2     1      1     446
                                              2 COMRAM     2     1      1
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (2) _asignarHorarios                                      5     5      0    4422
                                             14 COMRAM     5     5      0
                        _UART_printf
                          _UART_read
             _escribeHorariosMemoria
 ---------------------------------------------------------------------------------
 (3) _escribeHorariosMemoria                               4     4      0    2253
                                             10 COMRAM     4     4      0
                             ___wmul
                     _escribe_eeprom
 ---------------------------------------------------------------------------------
 (4) _escribe_eeprom                                       4     1      3     544
                                              6 COMRAM     4     1      3
                             ___wmul (ARG)
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (3) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2    1891
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _restablecerDatosSensor                               2     2      0     387
                                              4 COMRAM     2     2      0
                  _constructorSensor
 ---------------------------------------------------------------------------------
 (2) _constructorSensor                                    4     0      4     297
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _leeHorariosMemoria                                   4     4      0    2049
                                              6 COMRAM     4     4      0
                             ___wmul
                        _leer_eeprom
 ---------------------------------------------------------------------------------
 (2) _leer_eeprom                                          4     2      2     340
                                              2 COMRAM     4     2      2
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_recibe_dato                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializarObjetos                                   2     2      0    1661
                                              6 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1527
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     748
                                             14 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _desbordamiento                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
   _configurarAdc
   _i2c_iniciar
   _inicializarObjetos
     ___wmul
   _leeHorariosMemoria
     ___wmul
     _leer_eeprom
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
       _i2c_recibe_dato
         _i2c_espera
       _i2c_reinicia_com
         _i2c_espera
   _mostrarMenu
     _UART_printf
       _UART_write
   _restablecerDatosSensor
     _constructorSensor
   _sistemaPrincipal
     _UART_printf
       _UART_write
     _asignarHorarios
       _UART_printf
         _UART_write
       _UART_read
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
     _fijaHoraRtc
       _UART_printf
         _UART_write
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
       _setRtc
         _UART_printf
           _UART_write
         _UART_read
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
     _mostrarMenu
       _UART_printf
         _UART_write
     _setTiempoRegar
       _UART_printf
         _UART_write
       _UART_read
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
   _sistemaRegado
     _dameHoraActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _encenderBombas
       _estaSeco
     _horaRegar
     _lecturaAnalogaSensores
       _dameHumedadSuelo

 _desbordamiento (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      48       5       45.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      3C       1       63.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      84      20        0.0%
DATA                 0      0      84       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Apr 21 17:43:09 2020

          __size_of_escribe_eeprom 0030                                 l81 105A  
                               l90 0FF6                                 l75 0F5E  
                               l84 106A                                 l69 103C  
                               l93 0FC2                                 l78 1062  
                               l87 1048                                 l96 0F12  
                               l99 0FA4                     ?_configurarAdc 001F  
              ___wmul@multiplicand 0021                        __CFG_BORV$3 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                              l112 0B2E                                l120 0D04  
                              l121 0D06                                l202 0E22  
                              l115 0CCE                                l212 08FA  
                              l124 1018                                l300 0DA0  
                              l133 0E8E                                l127 1026  
                              l207 0766                                l330 0F84  
                              l172 1010                                l244 0C00  
                              l309 0B98                                l317 0996  
                              l254 0548                                l183 0A2C  
                              l175 0FDC                                l239 0266  
                              l280 0E58                                l409 0698  
                              l169 1052                                l257 058C  
                              l274 0438                                l186 0F38  
                              l178 0EE8                                l196 0832  
                              l285 0D56                                l277 0E46  
                              l199 0EBE                                l279 0E54  
                              l297 0CB4                       __CFG_CPB$OFF 000000  
                     __CFG_CPD$OFF 000000                                u800 0CEC  
                              u801 0CE8                                u810 0CFC  
                              u811 0CF8                                u820 0E8E  
                              u900 0828                                u821 0E8A  
                              u901 0824                                u910 0766  
                              u830 0FD6                                u911 0762  
                              u831 0FD0                                u760 0F50  
                              u840 0FD8                                u920 0E54  
                              u761 0F4C                                u921 0E50  
                              u770 0F5E                                u850 078C  
                              u930 0EE2                                u771 0F5A  
                              u851 0788                                u931 0EDC  
                              u780 1026                                u860 079C  
                              u940 0EE4                                u781 1022  
                              u861 0798                                u790 0CDC  
                              u870 07AE                                u950 0052  
                              u791 0CD8                                u871 07AA  
                              u951 004E                                u880 0808  
                              u960 008C                                u881 0804  
                              u961 0088                                u890 0818  
                              u970 00C2                                u891 0814  
                              u971 00BE                                u980 00F8  
                              u981 00F4                                u990 012E  
                              u991 012A                       __CFG_BOR$OFF 000000  
                              prod 000FF3                                wreg 000FE8  
                     __CFG_LVP$OFF 000000                  ?_i2c_reinicia_com 001F  
                     ?_escribe_rtc 0021                       __CFG_WDT$OFF 000000  
                             l2001 04B2                               l2011 04EE  
                             l2003 04BA                               l2021 0524  
                             l2013 04FE                               l2005 04BE  
                             l2101 03A0                               l2031 0578  
                             l2023 0534                               l2015 050E  
                             l2007 04CE                               l2111 03C4  
                             l2103 03A4                               l2201 0B26  
                             l2033 0580                               l2025 0544  
                             l2017 051A                               l2009 04D2  
                             l2121 0420                               l2113 03E0  
                             l2105 03AC                               l2203 0B28  
                             l2027 0558                               l2019 0520  
                             l2123 0434                               l2115 03F0  
                             l2107 03B0                               l2051 02B2  
                             l2035 0268                               l2131 0C6A  
                             l2141 058E                               l2205 0B2A  
                             l2221 0834                               l2029 0564  
                             l2117 0400                               l2109 03C0  
                             l2061 02DC                               l2053 02C4  
                             l2045 028C                               l2037 026C  
                             l2133 0C84                               l2125 0C62  
                             l2151 05C2                               l2143 0592  
                             l2207 0B2C                               l2215 09A0  
                             l2231 0876                               l2119 040C  
                             l2071 0300                               l2063 02E0  
                             l2055 02C8                               l2047 0292  
                             l2039 0278                               l2135 0C94  
                             l2161 0604                               l2153 05D2  
                             l2145 05A0                               l2217 0A0C  
                             l2209 0998                               l2233 08A8  
                             l2241 0D08                               l2073 031C  
                             l2057 02CC                               l2049 02A2  
                             l2065 02E8                               l2137 0C98  
                             l2171 0656                               l2163 0610  
                             l2155 05D6                               l2147 05B0  
                             l2219 0A10                               l2235 08D6  
                             l2227 0844                               l2251 0D3A  
                             l2139 0D58                               l2091 0376  
                             l2075 032C                               l2067 02EC  
                             l2059 02D8                               l2181 0688  
                             l2173 0658                               l2165 061E  
                             l2157 05E6                               l2149 05B4  
                             l1509 0FF8                               l2237 08DA  
                             l2229 0872                               l2093 0388  
                             l2085 0350                               l2077 033C  
                             l2069 02FC                               l2261 0B50  
                             l2253 0B32                               l2341 0A42  
                             l2333 0A2E                               l2175 0662  
                             l2167 0628                               l2159 05FC  
                             l2191 0AC4                               l1711 0F50  
                             l2239 08DE                               l2247 0D10  
                             l2095 038C                               l2087 0356  
                             l2079 0348                               l2255 0B38  
                             l2351 0A66                               l2343 0A56  
                             l2335 0A38                               l2169 0646  
                             l2177 0668                               l2193 0AF8  
                             l2185 0AC0                               l1481 1028  
                             l1721 1040                               l1713 105C  
                             l2249 0D36                               l1801 076A  
                             l2097 0390                               l2089 0366  
                             l2257 0B40                               l2265 0B60  
                             l2281 0924                               l2361 0A7A  
                             l2353 0A6A                               l2345 0A5A  
                             l2337 0A3C                               l2179 0678  
                             l2195 0B20                               l2187 0AC0  
                             l1483 102C                               l1707 0F3A  
                             l1723 1044                               l1715 1060  
                             l1731 1054                               l1811 078C  
                             l2099 039C                               l2259 0B48  
                             l2267 0B92                               l2291 0954  
                             l2283 092C                               l2275 08FC  
                             l2371 0A9C                               l2363 0A7E  
                             l2355 0A6E                               l2347 0A5E  
                             l2339 0A3E                               l2197 0B22  
                             l2189 0AC2                               l1709 0F3A  
                             l1717 1064                               l1725 1048  
                             l1741 0FF0                               l1733 1058  
                             l1813 079C                               l1821 07D4  
                             l2269 0B96                               l2293 096A  
                             l2285 092E                               l2277 090C  
                             l2373 0AAC                               l2365 0A8E  
                             l2357 0A76                               l2349 0A62  
                             l2199 0B24                               l1719 1068  
                             l1743 0FF2                               l1735 0FDE  
                             l1751 0CB6                               l1831 0818  
                             l1823 07D8                               l1815 07AE  
                             l1807 0776                               l1911 00F8  
                             l1903 0092                               l2295 097A  
                             l2287 0940                               l2279 0910  
                             l2375 0AB4                               l2367 0A92  
                             l2359 0A78                               l1745 0FF4  
                             l1737 0FE2                               l1729 1014  
                             l1753 0CDC                               l1841 06AA  
                             l1833 0828                               l1825 07E8  
                             l1817 07C4                               l1809 077C  
                             l2385 01EC                               l1921 0134  
                             l1905 00C2                               l2297 097E  
                             l2289 0950                               l2369 0A96  
                             l1739 0FE8                               l1763 0E5A  
                             l1755 0CEC                               l1771 0E90  
                             l1851 0746                               l1843 06DA  
                             l1835 069A                               l1827 07EC  
                             l1819 07CC                               l2387 0B74  
                             l1923 0164                               l1915 00FE  
                             l2299 0992                               l1765 0E5E  
                             l1757 0CFC                               l1773 0EB0  
                             l1853 074A                               l1845 06DE  
                             l1749 0FA8                               l1829 0808  
                             l1781 0EEC                               l1933 01A0  
                             l1917 012E                               l1909 00C8  
                             l1941 01D6                               l1861 0E42  
                             l1775 0F60                               l1767 0E6E  
                             l1759 0D00                               l1847 0712  
                             l1791 0F90                               l1783 0F10  
                             l1935 01D0                               l1927 016A  
                             l1943 0232                               l1871 0EC0  
                             l1863 0E44                               l1855 0E26  
                             l1777 0F7C                               l1881 0E20  
                             l1769 0E72                               l1849 0742  
                             l1961 0BB2                               l1793 0FA2  
                             l1945 0236                               l1929 019A  
                             l1865 0E56                               l1857 0E2E  
                             l1971 0BF6                               l1963 0BB8  
                             l1955 0B9A                               l1787 0F88  
                             l1875 0F14                               l1947 0252  
                             l1891 0022                               l1859 0E30  
                             l1877 0DE8                               l1869 104A  
                             l1973 043A                               l1965 0BC8  
                             l1957 0B9A                               l1789 0F88  
                             l1797 0FC4                               l1949 0262  
                             l1893 0052                               l1885 0012  
                             l1879 0E12                               l1991 0496  
                             l1983 045E                               l1975 043E  
                             l1967 0BDA                               l1959 0BA6  
                             l1895 0054                               l1993 049A  
                             l1985 0464                               l1977 044A  
                             l1969 0BEA                               l1897 005C  
                             l1995 049E                               l1987 0474  
                             l1899 008C                               l1997 04AA  
                             l1989 0484                               l1999 04AE  
                     ?_leer_eeprom 0021                               STR_1 7FC9  
                             STR_2 7FE0                               STR_3 7E5C  
                             STR_4 7F45                               STR_5 7EFB  
                             STR_6 7F99                               STR_7 7DF8  
                             STR_8 7FC9                               STR_9 7DC1  
                             u1000 0164                               u1001 0160  
                             u1010 019A                               u1011 0196  
                             u1100 04EE                               u1020 01D0  
                             u1101 04EA                               u1021 01CC  
                             u1110 04FE                               u1030 0252  
                             u1111 04FA                               u1031 024E  
                             u1120 050E                               u1200 032C  
                             u1040 0262                               u1121 050A  
                             u1201 0328                               u1041 025E  
                             u1130 0534                               u1050 0BC8  
                             u1210 033C                               u1131 0530  
                             u1051 0BC4                               u1211 0338  
                             u1300 05C2                               u1140 0544  
                             u1060 0BEA                               u1220 0366  
                             u1301 05BE                               u1141 0540  
                             u1061 0BE6                               u1221 0362  
                             u1310 05FC                               u1150 0558  
                             u1070 0474                               u1230 0376  
                             u1311 05F8                               u1151 0554  
                             u1071 0470                               u1231 0372  
                             u1320 061E                               u1080 0484  
                             u1240 0388                               u1160 02A2  
                             u1400 0940                               u1321 061A  
                             u1081 0480                               u1241 0384  
                             u1161 029E                               u1401 093C  
                             u1330 0646                               u1090 0496  
                             u1250 03E0                               u1170 02B2  
                             u1410 096A                               u1331 0642  
                             u1091 0492                               u1251 03DC  
                             u1171 02AE                               u1411 0966  
                             u1340 0678                               u1260 03F0  
                             u1180 02C4                               u1420 097A  
                             u1341 0674                               u1261 03EC  
                             u1181 02C0                               u1421 0976  
                             u1350 0A2C                               u1270 0400  
                             u1190 031C                               u1351 0A28  
                             u1271 03FC                               u1191 0318  
                             u1360 08FA                               u1280 0CB4  
                             _LATD 000F8C                               u1361 08F6  
                             u1281 0CB0                               u1290 05A0  
                             u1370 0D56                               u1450 0A8E  
                             u1291 059C                               u1507 0E18  
                             u1371 0D52                               u1451 0A8A  
                             u1380 090C                               u1460 0AAC  
                             u1381 0908                               u1461 0AA8  
                             u1390 0924                               u1391 0920  
                             u1477 0C8A                               u1487 0E28  
                             u1497 0EB6                               _TMR0 000FD6  
             _minutosTranscurridos 0014                 ??_i2c_reinicia_com 0020  
          escribeHorariosMemoria@i 002B                      ??_i2c_detener 0020  
                             _main 0A2E                               _hora 001A  
                             fsr2h 000FDA                               indf2 000FDF  
                             fsr1l 000FE1                               fsr2l 000FD9  
                             btemp 003D                     ?_sistemaRegado 001F  
         __size_of_asignarHorarios 0154                      ??_i2c_iniciar 001F  
                             prodh 000FF4                               prodl 000FF3  
                             start 000E           ??_restablecerDatosSensor 0023  
                    __CFG_IESO$OFF 000000                  _constructorSensor 104A  
          __size_of_setTiempoRegar 01D2                       ___param_bank 000000  
               ?_constructorSensor 001F                 setTiempoRegar@hora 002E  
               _leeHorariosMemoria 0834                   ??_encenderBombas 0021  
                   _i2c_envia_dato 103E                      __CFG_PLLDIV$1 000000  
                   _i2c_inicia_com 105C                    __end_of___aldiv 069A  
                            ?_main 001F                      _convertirDato 0F86  
                            STR_10 7F7F                              STR_11 7FC9  
                            STR_12 7FB2                              STR_20 7F20  
                            STR_13 7DF8                              STR_21 7E2B  
                            STR_14 7FC9                              STR_22 7FF0  
                            STR_23 7F96                              STR_15 7D79  
                            STR_16 7FC9                              STR_24 7E87  
                            STR_17 7EB1                              STR_18 7ED6  
                            STR_19 7F64                ??_constructorSensor 0023  
                convertirDato@dato 0020                              _T0CON 000FD5  
                            i2l166 0C5E                ?_leeHorariosMemoria 001F  
                            _RCREG 000FAE                              _SPBRG 000FAF  
                            _PORTA 000F80                              _PORTE 000F84  
                    __CFG_USBDIV$1 000000                              _TRISA 000F92  
                            _TRISD 000F95                              _TRISE 000F96  
                            _TXREG 000FAD                      __CFG_PWRT$OFF 000000  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                      __CFG_WRT3$OFF 000000  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                   __CFG_EBTR1$OFF 000000                     __CFG_EBTR2$OFF 000000  
                   __CFG_EBTR3$OFF 000000                      __CFG_WRTB$OFF 000000  
                    __CFG_WRTC$OFF 000000                      __CFG_WRTD$OFF 000000  
                   __CFG_EBTRB$OFF 000000                 __size_of_UART_init 0070  
               __size_of_UART_read 0052                        ?_UART_write 001F  
                            tablat 000FF5                              ttemp5 003E  
                            ttemp6 0041                              ttemp7 0045  
                            status 000FD8                              wtemp8 003E  
               escribe_eeprom@dato 0027          __end_of_constructorSensor 1054  
             ??_leeHorariosMemoria 0025                     __CFG_ICPRT$OFF 000000  
                       _i2c_espera 0F3A                   ??_dameHoraActual 0023  
                   __CFG_MCLRE$OFF 000000                    __initialization 0DA2  
                  setTiempoRegar@i 002F                __end_of_i2c_detener 106C  
  __size_of_lecturaAnalogaSensores 0054             __end_of_i2c_envia_dato 104A  
                     __end_of_main 0AC0           ??_escribeHorariosMemoria 0029  
                  ??_configurarAdc 001F                setTiempoRegar@i_706 0031  
           __end_of_i2c_inicia_com 1064                 _inicializarObjetos 0998  
              __end_of_i2c_iniciar 103E             sistemaPrincipal@opcion 0037  
                 _dameHumedadSuelo 0E24                     ?_convertirDato 001F  
             __size_of_fijaHoraRtc 0068                             ??_main 0039  
        setTiempoRegar@tiempoRegar 002D                      __activetblptr 000002  
              ?_inicializarObjetos 001F                 i2c_envia_dato@dato 0020  
                  __CFG_CCP2MX$OFF 000000                             _ADCON1 000FC1  
                           _ADCON2 000FC0                             _ADRESL 000FC3  
           encenderBombas@flagSeco 0023                 convertirDato@datoR 0021  
                           i2l1611 0C36                             i2l1603 0C04  
                           i2l1621 0C5A                             i2l1613 0C3A  
                           i2l1605 0C12                             i2l1615 0C3C  
                           i2l1607 0C22                             i2l1609 0C24  
                           i2l1617 0C48                             i2l1619 0C56  
                  ??_sistemaRegado 0026                             _SSPADD 000FC8  
                           _SSPBUF 000FC9               ??_inicializarObjetos 0025  
  __size_of_restablecerDatosSensor 0050                     __CFG_XINST$OFF 000000  
         __end_of_sistemaPrincipal 0B9A                     _escribe_eeprom 0E90  
                  ?_i2c_envia_dato 001F                          ??___aldiv 0027  
                           ___wmul 0F60                  __end_of_UART_init 0B30  
                __end_of_UART_read 0D08                  ??_asignarHorarios 002D  
                 __end_of_leer_rtc 0F14                    ?_i2c_inicia_com 001F  
                 __end_of_estaSeco 0FDE                __size_of_UART_write 0016  
                     ?_UART_printf 0020                             clear_0 0DC8  
                           clear_1 0DD4                             _setRtc 0768  
                  _i2c_recibe_dato 0FDE                       ?_mostrarMenu 001F  
                     __pdataCOMRAM 0039               escribe_rtc@direccion 0022  
                     __mediumconst 7D78                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
           _lecturaAnalogaSensores 0C62                         __accesstop 0060  
          __end_of__initialization 0DDA               __size_of_escribe_rtc 001E  
                  __CFG_PBADEN$OFF 000000               __size_of_leer_eeprom 003C  
                  __CFG_FOSC$XT_XT 000000                        _i2c_detener 1064  
       __size_of_constructorSensor 000A                      ___rparam_used 000001  
                      _i2c_iniciar 1028             __end_of_escribe_eeprom 0EC0  
                      ?_i2c_espera 001F                     _setTiempoRegar 0268  
                 setTiempoRegar@Rx 0034                     __pcstackCOMRAM 001F  
                     leer_rtc@dato 0022    __size_of_escribeHorariosMemoria 00CE  
                  ??_convertirDato 001F             _restablecerDatosSensor 0D08  
                     _datoRecibido 0017                         __pbssBANK0 0060  
          __size_of_desbordamiento 0C5A                 __size_of_horaRegar 002A  
           __end_of_setTiempoRegar 043A                    ?_escribe_eeprom 0025  
               _contInterrupciones 0011          __size_of_i2c_reinicia_com 0008  
                          ?___wmul 001F            __end_of_i2c_recibe_dato 0FF8  
                          _ACKSTAT 007E2E                            ?_setRtc 001F  
                          i2u70_40 0C36                            i2u70_41 0C32  
              __size_of_i2c_espera 0026                            i2u71_40 0C56  
                          i2u71_41 0C52                            i2u68_40 0C12  
                          i2u68_41 0C0E                            i2u69_40 0C22  
                          i2u69_41 0C1E             _escribeHorariosMemoria 069A  
                          _SSPCON1 000FC6                            _SSPCON2 000FC5  
                     ??_UART_write 001F                            _SSPSTAT 000FC7  
         __end_of_dameHumedadSuelo 0E5A                          ?_leer_rtc 001F  
                        ?_estaSeco 001F                    __CFG_VREGEN$OFF 000000  
                  ?_setTiempoRegar 001F                            __Hparam 0000  
                          __Lparam 0000                            ___aldiv 058E  
                  __size_of___wmul 0026           constructorSensor@humedad 0021  
                  __CFG_STVREN$OFF 000000                            __pcinit 0DA2  
                          __ramtop 0800                 __end_of_UART_write 1028  
                  __size_of_setRtc 00CC                            __ptext0 0A2E  
                          __ptext1 08FC                            __ptext2 0C62  
                          __ptext3 0E24                            __ptext4 0EC0  
                          __ptext5 0012                            __ptext6 0FC4  
                          __ptext7 0F14                            __ptext8 0EEA  
                          __ptext9 0F86                  __end_of_horaRegar 0EEA  
                        _T0CONbits 000FD5               __size_of_UART_printf 0036  
                          _regando 0013                   ___aldiv@dividend 001F  
                          _minutos 0019               __size_of_mostrarMenu 004A  
                   __pintcode_body 0C02               end_of_initialization 0DDA  
                       ??_leer_rtc 0021                         ??_estaSeco 0021  
                  _asignarHorarios 043A                      __Lmediumconst 7D78  
                          int_func 0C02                   ??_i2c_envia_dato 0020  
      __size_of_leeHorariosMemoria 00C8                            setRtc@i 0027  
                 ??_i2c_inicia_com 0020                   _VALOR_TIMER0UART 003B  
                        _RCSTAbits 000FAB                   ___aldiv@quotient 0029  
                          postdec1 000FE5                            postdec2 000FDD  
                ?_sistemaPrincipal 001F                            postinc0 000FEE  
                          postinc2 000FDE                      ??_fijaHoraRtc 002A  
                 ?_i2c_recibe_dato 001F              __end_of_configurarAdc 1012  
               ??_sistemaPrincipal 0035                          _UART_init 0AC0  
                        _UART_read 0CB6            ?_lecturaAnalogaSensores 001F  
        dameHumedadSuelo@canalLeer 0020            lecturaAnalogaSensores@i 0022  
                        _TRISBbits 000F93                          _TRISCbits 000F94  
          __size_of_encenderBombas 0256                     _desbordamiento 0008  
                   _esperandoDatos 001B                     _UART_init$1472 0035  
                     ?_i2c_detener 001F              __end_of_sistemaRegado 0998  
                        _TXSTAbits 000FAC        __size_of_inicializarObjetos 0096  
                     ?_i2c_iniciar 001F                       ??_i2c_espera 001F  
                 _i2c_reinicia_com 1054        setTiempoRegar@datoCapturado 0033  
                   __end_of___wmul 0F86                      __pidataCOMRAM 106C  
          ?_restablecerDatosSensor 001F     __end_of_lecturaAnalogaSensores 0CB6  
                       ?_UART_init 002D                         ?_UART_read 001F  
              setRtc@datoCapturado 0026            __size_of_dameHoraActual 0026  
                   __end_of_setRtc 0834                __end_of_fijaHoraRtc 0C02  
              start_initialization 0DA2            __end_of_asignarHorarios 058E  
escribeHorariosMemoria@contMemoria 0029             __end_of_desbordamiento 0C62  
               __end_of_i2c_espera 0F60                      ??_escribe_rtc 0022  
                    ??_leer_eeprom 0023                   ??_escribe_eeprom 0028  
              leeHorariosMemoria@i 0027               constructorSensor@pin 0022  
                         ??___wmul 0023     __end_of_restablecerDatosSensor 0D58  
                 __CFG_LPT1OSC$OFF 000000                  leer_rtc@direccion 0021  
                         ??_setRtc 0023              __end_of_convertirDato 0FA6  
     asignarHorarios@datoCapturado 002E            ?_escribeHorariosMemoria 001F  
                      __pbssCOMRAM 0001                    ?_desbordamiento 001F  
                 ??_setTiempoRegar 002D                  ?_dameHumedadSuelo 001F  
                UART_printf@cadena 0020                 ??_dameHumedadSuelo 001F  
                __size_of_leer_rtc 002A                  __size_of_estaSeco 001A  
              __end_of_escribe_rtc 0FC4                __end_of_leer_eeprom 0E24  
                        __pintcode 0008                      __pmediumconst 7D78  
                         ?___aldiv 001F                        _fijaHoraRtc 0B9A  
                       setRtc@dato 0025                        ??_UART_init 0031  
                      ??_UART_read 001F     __end_of_escribeHorariosMemoria 0768  
                   _encenderBombas 0012                          _horaRegar 0EC0  
                 ?_asignarHorarios 001F                    ___aldiv@divisor 0023  
                  ___aldiv@counter 0027                     ___wmul@product 0023  
                         _LATDbits 000F8C                           _PIE1bits 000F9D  
             __size_of_i2c_detener 0008                           _PIR1bits 000F9E  
          restablecerDatosSensor@i 0023               __size_of_i2c_iniciar 0016  
                 __CFG_WDTPS$32768 000000             _tiempoInactividadTrans 001E  
    leeHorariosMemoria@contMemoria 0025                asignarHorarios@hora 002D  
                    ??_UART_printf 0022                         _ADCON0bits 000FC2  
                   _dameHoraActual 0F14                  ___wmul@multiplier 001F  
           __end_of_encenderBombas 0268                      ??_mostrarMenu 0022  
                   UART_write@dato 001F                         ?_horaRegar 001F  
        __size_of_sistemaPrincipal 006A           __end_of_i2c_reinicia_com 105C  
                        copy_data0 0DB6                        _escribe_rtc 0FA6  
                      _leer_eeprom 0DE8                       _VALOR_TIMER0 0039  
       __end_of_leeHorariosMemoria 08FC                          estaSeco@s 001F  
                         __Hrparam 0000                       _minutosRegar 0015  
                    UART_init@BAUD 002D                           __Lrparam 0000  
              _esperaDatoConcluida 001C                   __size_of___aldiv 010C  
           __end_of_dameHoraActual 0F3A                    ?_encenderBombas 001F  
         __size_of_i2c_recibe_dato 001A                __end_of_UART_printf 0E90  
                         __ptext10 0B30                           __ptext11 0268  
                         __ptext20 0E5A                           __ptext12 0D58  
                         __ptext21 1012                           __ptext13 0B9A  
                         __ptext30 1064                           __ptext22 0D08  
                         __ptext14 0768                           __ptext31 0F3A  
                         __ptext23 104A                           __ptext15 0FA6  
                         __ptext32 0998                           __ptext24 0834  
                         __ptext16 043A                           __ptext33 0F60  
                         __ptext25 0DE8                           __ptext17 069A  
                         __ptext34 1028                           __ptext26 1054  
                         __ptext18 0E90                           __ptext35 0FF8  
                         __ptext27 0FDE                           __ptext19 0CB6  
                         __ptext36 0AC0                           __ptext28 105C  
                         __ptext37 058E                           __ptext29 103E  
              __end_of_mostrarMenu 0DA2                           _leer_rtc 0EEA  
                         _estaSeco 0FC4         __end_of_inicializarObjetos 0A2E  
                         _byteUart 001D             __size_of_configurarAdc 001A  
              inicializarObjetos@i 0025                      __size_of_main 0092  
                         _horarios 0060                           _segundos 0018  
                  encenderBombas@i 0024                           _sensores 0001  
                         int$flags 003D                    ?_dameHoraActual 001F  
          __size_of_i2c_envia_dato 000C            __size_of_i2c_inicia_com 0008  
         i2c_recibe_dato@datoleido 0020              __CFG_CPUDIV$OSC1_PLL2 000000  
                 ??_desbordamiento 001F             __size_of_sistemaRegado 009C  
                       _INTCONbits 000FF2                 constructorSensor@s 001F  
                      ??_horaRegar 0021            escribe_eeprom@direccion 0025  
                         intlevel2 0000                    escribe_rtc@dato 0021  
                         setRtc@Rx 0029                    setRtc@direccion 0024  
                asignarHorarios@Rx 0031                      _overflowTimer 0016  
                     ?_fijaHoraRtc 001F          __size_of_dameHumedadSuelo 0036  
                      _UART_printf 0E5A                      _configurarAdc 0FF8  
                      _mostrarMenu 0D58                       ___aldiv@sign 0028  
                 asignarHorarios@i 002F                   _sistemaPrincipal 0B30  
                  leer_eeprom@dato 0024                        _SSPCON2bits 000FC5  
                       _UART_write 1012                  ??_i2c_recibe_dato 0020  
           __size_of_convertirDato 0020               leer_eeprom@direccion 0021  
                    _sistemaRegado 08FC           ??_lecturaAnalogaSensores 0021  
