

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun May 03 16:24:31 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    79  0000                     
    80                           ; Version 2.10
    81                           ; Generated 31/07/2019 GMT
    82                           ; 
    83                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC18F4550 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     
   115                           	psect	idataBANK0
   116  00240E                     __pidataBANK0:
   117                           	opt callstack 0
   118                           
   119                           ;initializer for _VALOR_TIMER0
   120  00240E  6769               	dw	26473
   121                           
   122                           ;initializer for _VALOR_TIMER0UART
   123  002410  6769               	dw	26473
   124  0000                     _TMR0	set	4054
   125  0000                     _TRISD	set	3989
   126  0000                     _T0CON	set	4053
   127  0000                     _T0CONbits	set	4053
   128  0000                     _LATD	set	3980
   129  0000                     _PIE1bits	set	3997
   130  0000                     _ADRESL	set	4035
   131  0000                     _ADRESH	set	4036
   132  0000                     _ADCON0bits	set	4034
   133  0000                     _ADCON2	set	4032
   134  0000                     _ADCON1	set	4033
   135  0000                     _INTCONbits	set	4082
   136  0000                     _LATDbits	set	3980
   137  0000                     _TRISDbits	set	3989
   138  0000                     _PORTDbits	set	3971
   139  0000                     _TXREG	set	4013
   140  0000                     _RCREG	set	4014
   141  0000                     _PIR1bits	set	3998
   142  0000                     _RCSTAbits	set	4011
   143  0000                     _TXSTAbits	set	4012
   144  0000                     _SPBRG	set	4015
   145  0000                     _TRISCbits	set	3988
   146  0000                     _SSPBUF	set	4041
   147  0000                     _SSPCON2bits	set	4037
   148  0000                     _SSPADD	set	4040
   149  0000                     _SSPCON2	set	4037
   150  0000                     _SSPCON1	set	4038
   151  0000                     _SSPSTAT	set	4039
   152  0000                     _TRISBbits	set	3987
   153  0000                     _ACKSTAT	set	32302
   154                           
   155                           	psect	mediumconst
   156  007BFA                     __pmediumconst:
   157                           	opt callstack 0
   158  007BFA  00                 	db	0
   159  007BFB                     STR_11:
   160  007BFB  0D                 	db	13
   161  007BFC  0A                 	db	10
   162  007BFD  20                 	db	32
   163  007BFE  49                 	db	73	;'I'
   164  007BFF  6E                 	db	110	;'n'
   165  007C00  67                 	db	103	;'g'
   166  007C01  72                 	db	114	;'r'
   167  007C02  65                 	db	101	;'e'
   168  007C03  73                 	db	115	;'s'
   169  007C04  65                 	db	101	;'e'
   170  007C05  20                 	db	32
   171  007C06  6C                 	db	108	;'l'
   172  007C07  6F                 	db	111	;'o'
   173  007C08  73                 	db	115	;'s'
   174  007C09  20                 	db	32
   175  007C0A  6D                 	db	109	;'m'
   176  007C0B  69                 	db	105	;'i'
   177  007C0C  6E                 	db	110	;'n'
   178  007C0D  75                 	db	117	;'u'
   179  007C0E  74                 	db	116	;'t'
   180  007C0F  6F                 	db	111	;'o'
   181  007C10  73                 	db	115	;'s'
   182  007C11  20                 	db	32
   183  007C12  71                 	db	113	;'q'
   184  007C13  75                 	db	117	;'u'
   185  007C14  65                 	db	101	;'e'
   186  007C15  20                 	db	32
   187  007C16  64                 	db	100	;'d'
   188  007C17  65                 	db	101	;'e'
   189  007C18  73                 	db	115	;'s'
   190  007C19  65                 	db	101	;'e'
   191  007C1A  65                 	db	101	;'e'
   192  007C1B  20                 	db	32
   193  007C1C  71                 	db	113	;'q'
   194  007C1D  75                 	db	117	;'u'
   195  007C1E  65                 	db	101	;'e'
   196  007C1F  20                 	db	32
   197  007C20  73                 	db	115	;'s'
   198  007C21  65                 	db	101	;'e'
   199  007C22  20                 	db	32
   200  007C23  72                 	db	114	;'r'
   201  007C24  69                 	db	105	;'i'
   202  007C25  65                 	db	101	;'e'
   203  007C26  67                 	db	103	;'g'
   204  007C27  75                 	db	117	;'u'
   205  007C28  65                 	db	101	;'e'
   206  007C29  20                 	db	32
   207  007C2A  65                 	db	101	;'e'
   208  007C2B  6E                 	db	110	;'n'
   209  007C2C  20                 	db	32
   210  007C2D  65                 	db	101	;'e'
   211  007C2E  73                 	db	115	;'s'
   212  007C2F  65                 	db	101	;'e'
   213  007C30  20                 	db	32
   214  007C31  68                 	db	104	;'h'
   215  007C32  6F                 	db	111	;'o'
   216  007C33  72                 	db	114	;'r'
   217  007C34  61                 	db	97	;'a'
   218  007C35  72                 	db	114	;'r'
   219  007C36  69                 	db	105	;'i'
   220  007C37  6F                 	db	111	;'o'
   221  007C38  20                 	db	32
   222  007C39  65                 	db	101	;'e'
   223  007C3A  6A                 	db	106	;'j'
   224  007C3B  3A                 	db	58	;':'
   225  007C3C  20                 	db	32
   226  007C3D  31                 	db	49	;'1'
   227  007C3E  35                 	db	53	;'5'
   228  007C3F  20                 	db	32
   229  007C40  0D                 	db	13
   230  007C41  0A                 	db	10
   231  007C42  00                 	db	0
   232  007C43                     STR_7:
   233  007C43  0D                 	db	13
   234  007C44  0A                 	db	10
   235  007C45  20                 	db	32
   236  007C46  49                 	db	73	;'I'
   237  007C47  6E                 	db	110	;'n'
   238  007C48  67                 	db	103	;'g'
   239  007C49  72                 	db	114	;'r'
   240  007C4A  65                 	db	101	;'e'
   241  007C4B  73                 	db	115	;'s'
   242  007C4C  65                 	db	101	;'e'
   243  007C4D  20                 	db	32
   244  007C4E  31                 	db	49	;'1'
   245  007C4F  20                 	db	32
   246  007C50  70                 	db	112	;'p'
   247  007C51  61                 	db	97	;'a'
   248  007C52  72                 	db	114	;'r'
   249  007C53  61                 	db	97	;'a'
   250  007C54  20                 	db	32
   251  007C55  72                 	db	114	;'r'
   252  007C56  65                 	db	101	;'e'
   253  007C57  67                 	db	103	;'g'
   254  007C58  61                 	db	97	;'a'
   255  007C59  72                 	db	114	;'r'
   256  007C5A  20                 	db	32
   257  007C5B  7C                 	db	124
   258  007C5C  7C                 	db	124
   259  007C5D  20                 	db	32
   260  007C5E  69                 	db	105	;'i'
   261  007C5F  6E                 	db	110	;'n'
   262  007C60  67                 	db	103	;'g'
   263  007C61  72                 	db	114	;'r'
   264  007C62  65                 	db	101	;'e'
   265  007C63  73                 	db	115	;'s'
   266  007C64  65                 	db	101	;'e'
   267  007C65  20                 	db	32
   268  007C66  30                 	db	48	;'0'
   269  007C67  20                 	db	32
   270  007C68  70                 	db	112	;'p'
   271  007C69  61                 	db	97	;'a'
   272  007C6A  72                 	db	114	;'r'
   273  007C6B  61                 	db	97	;'a'
   274  007C6C  20                 	db	32
   275  007C6D  6E                 	db	110	;'n'
   276  007C6E  6F                 	db	111	;'o'
   277  007C6F  20                 	db	32
   278  007C70  72                 	db	114	;'r'
   279  007C71  65                 	db	101	;'e'
   280  007C72  67                 	db	103	;'g'
   281  007C73  61                 	db	97	;'a'
   282  007C74  72                 	db	114	;'r'
   283  007C75  3A                 	db	58	;':'
   284  007C76  20                 	db	32
   285  007C77  0D                 	db	13
   286  007C78  0A                 	db	10
   287  007C79  00                 	db	0
   288  007C7A                     STR_6:
   289  007C7A  0D                 	db	13
   290  007C7B  0A                 	db	10
   291  007C7C  20                 	db	32
   292  007C7D  49                 	db	73	;'I'
   293  007C7E  6E                 	db	110	;'n'
   294  007C7F  67                 	db	103	;'g'
   295  007C80  72                 	db	114	;'r'
   296  007C81  65                 	db	101	;'e'
   297  007C82  73                 	db	115	;'s'
   298  007C83  65                 	db	101	;'e'
   299  007C84  20                 	db	32
   300  007C85  75                 	db	117	;'u'
   301  007C86  6E                 	db	110	;'n'
   302  007C87  61                 	db	97	;'a'
   303  007C88  20                 	db	32
   304  007C89  68                 	db	104	;'h'
   305  007C8A  6F                 	db	111	;'o'
   306  007C8B  72                 	db	114	;'r'
   307  007C8C  61                 	db	97	;'a'
   308  007C8D  20                 	db	32
   309  007C8E  65                 	db	101	;'e'
   310  007C8F  6E                 	db	110	;'n'
   311  007C90  20                 	db	32
   312  007C91  66                 	db	102	;'f'
   313  007C92  6F                 	db	111	;'o'
   314  007C93  72                 	db	114	;'r'
   315  007C94  6D                 	db	109	;'m'
   316  007C95  61                 	db	97	;'a'
   317  007C96  74                 	db	116	;'t'
   318  007C97  6F                 	db	111	;'o'
   319  007C98  20                 	db	32
   320  007C99  64                 	db	100	;'d'
   321  007C9A  65                 	db	101	;'e'
   322  007C9B  20                 	db	32
   323  007C9C  32                 	db	50	;'2'
   324  007C9D  34                 	db	52	;'4'
   325  007C9E  20                 	db	32
   326  007C9F  68                 	db	104	;'h'
   327  007CA0  72                 	db	114	;'r'
   328  007CA1  73                 	db	115	;'s'
   329  007CA2  20                 	db	32
   330  007CA3  65                 	db	101	;'e'
   331  007CA4  6A                 	db	106	;'j'
   332  007CA5  3A                 	db	58	;':'
   333  007CA6  20                 	db	32
   334  007CA7  31                 	db	49	;'1'
   335  007CA8  35                 	db	53	;'5'
   336  007CA9  20                 	db	32
   337  007CAA  0D                 	db	13
   338  007CAB  0A                 	db	10
   339  007CAC  00                 	db	0
   340  007CAD                     STR_14:
   341  007CAD  0D                 	db	13
   342  007CAE  0A                 	db	10
   343  007CAF  49                 	db	73	;'I'
   344  007CB0  6E                 	db	110	;'n'
   345  007CB1  67                 	db	103	;'g'
   346  007CB2  72                 	db	114	;'r'
   347  007CB3  65                 	db	101	;'e'
   348  007CB4  73                 	db	115	;'s'
   349  007CB5  65                 	db	101	;'e'
   350  007CB6  20                 	db	32
   351  007CB7  65                 	db	101	;'e'
   352  007CB8  6C                 	db	108	;'l'
   353  007CB9  20                 	db	32
   354  007CBA  70                 	db	112	;'p'
   355  007CBB  6F                 	db	111	;'o'
   356  007CBC  72                 	db	114	;'r'
   357  007CBD  63                 	db	99	;'c'
   358  007CBE  65                 	db	101	;'e'
   359  007CBF  6E                 	db	110	;'n'
   360  007CC0  74                 	db	116	;'t'
   361  007CC1  61                 	db	97	;'a'
   362  007CC2  6A                 	db	106	;'j'
   363  007CC3  65                 	db	101	;'e'
   364  007CC4  20                 	db	32
   365  007CC5  64                 	db	100	;'d'
   366  007CC6  65                 	db	101	;'e'
   367  007CC7  20                 	db	32
   368  007CC8  68                 	db	104	;'h'
   369  007CC9  75                 	db	117	;'u'
   370  007CCA  6D                 	db	109	;'m'
   371  007CCB  65                 	db	101	;'e'
   372  007CCC  64                 	db	100	;'d'
   373  007CCD  61                 	db	97	;'a'
   374  007CCE  64                 	db	100	;'d'
   375  007CCF  20                 	db	32
   376  007CD0  64                 	db	100	;'d'
   377  007CD1  65                 	db	101	;'e'
   378  007CD2  6C                 	db	108	;'l'
   379  007CD3  20                 	db	32
   380  007CD4  73                 	db	115	;'s'
   381  007CD5  65                 	db	101	;'e'
   382  007CD6  6E                 	db	110	;'n'
   383  007CD7  73                 	db	115	;'s'
   384  007CD8  6F                 	db	111	;'o'
   385  007CD9  72                 	db	114	;'r'
   386  007CDA  20                 	db	32
   387  007CDB  25                 	db	37
   388  007CDC  64                 	db	100	;'d'
   389  007CDD  0D                 	db	13
   390  007CDE  0A                 	db	10
   391  007CDF  00                 	db	0
   392  007CE0                     STR_25:
   393  007CE0  0D                 	db	13
   394  007CE1  0A                 	db	10
   395  007CE2  0A                 	db	10
   396  007CE3  48                 	db	72	;'H'
   397  007CE4  6F                 	db	111	;'o'
   398  007CE5  72                 	db	114	;'r'
   399  007CE6  61                 	db	97	;'a'
   400  007CE7  20                 	db	32
   401  007CE8  7C                 	db	124
   402  007CE9  20                 	db	32
   403  007CEA  52                 	db	82	;'R'
   404  007CEB  65                 	db	101	;'e'
   405  007CEC  67                 	db	103	;'g'
   406  007CED  61                 	db	97	;'a'
   407  007CEE  72                 	db	114	;'r'
   408  007CEF  28                 	db	40
   409  007CF0  31                 	db	49	;'1'
   410  007CF1  20                 	db	32
   411  007CF2  73                 	db	115	;'s'
   412  007CF3  69                 	db	105	;'i'
   413  007CF4  20                 	db	32
   414  007CF5  30                 	db	48	;'0'
   415  007CF6  20                 	db	32
   416  007CF7  6E                 	db	110	;'n'
   417  007CF8  6F                 	db	111	;'o'
   418  007CF9  29                 	db	41
   419  007CFA  20                 	db	32
   420  007CFB  7C                 	db	124
   421  007CFC  20                 	db	32
   422  007CFD  4D                 	db	77	;'M'
   423  007CFE  69                 	db	105	;'i'
   424  007CFF  6E                 	db	110	;'n'
   425  007D00  75                 	db	117	;'u'
   426  007D01  74                 	db	116	;'t'
   427  007D02  6F                 	db	111	;'o'
   428  007D03  73                 	db	115	;'s'
   429  007D04  20                 	db	32
   430  007D05  64                 	db	100	;'d'
   431  007D06  65                 	db	101	;'e'
   432  007D07  20                 	db	32
   433  007D08  72                 	db	114	;'r'
   434  007D09  69                 	db	105	;'i'
   435  007D0A  65                 	db	101	;'e'
   436  007D0B  67                 	db	103	;'g'
   437  007D0C  6F                 	db	111	;'o'
   438  007D0D  20                 	db	32
   439  007D0E  0D                 	db	13
   440  007D0F  0A                 	db	10
   441  007D10  0A                 	db	10
   442  007D11  00                 	db	0
   443  007D12                     STR_19:
   444  007D12  0D                 	db	13
   445  007D13  0A                 	db	10
   446  007D14  20                 	db	32
   447  007D15  33                 	db	51	;'3'
   448  007D16  2E                 	db	46
   449  007D17  20                 	db	32
   450  007D18  50                 	db	80	;'P'
   451  007D19  72                 	db	114	;'r'
   452  007D1A  6F                 	db	111	;'o'
   453  007D1B  67                 	db	103	;'g'
   454  007D1C  72                 	db	114	;'r'
   455  007D1D  61                 	db	97	;'a'
   456  007D1E  6D                 	db	109	;'m'
   457  007D1F  61                 	db	97	;'a'
   458  007D20  72                 	db	114	;'r'
   459  007D21  20                 	db	32
   460  007D22  74                 	db	116	;'t'
   461  007D23  69                 	db	105	;'i'
   462  007D24  65                 	db	101	;'e'
   463  007D25  6D                 	db	109	;'m'
   464  007D26  70                 	db	112	;'p'
   465  007D27  6F                 	db	111	;'o'
   466  007D28  20                 	db	32
   467  007D29  64                 	db	100	;'d'
   468  007D2A  65                 	db	101	;'e'
   469  007D2B  20                 	db	32
   470  007D2C  72                 	db	114	;'r'
   471  007D2D  69                 	db	105	;'i'
   472  007D2E  65                 	db	101	;'e'
   473  007D2F  67                 	db	103	;'g'
   474  007D30  6F                 	db	111	;'o'
   475  007D31  20                 	db	32
   476  007D32  65                 	db	101	;'e'
   477  007D33  6E                 	db	110	;'n'
   478  007D34  20                 	db	32
   479  007D35  75                 	db	117	;'u'
   480  007D36  6E                 	db	110	;'n'
   481  007D37  20                 	db	32
   482  007D38  68                 	db	104	;'h'
   483  007D39  6F                 	db	111	;'o'
   484  007D3A  72                 	db	114	;'r'
   485  007D3B  61                 	db	97	;'a'
   486  007D3C  72                 	db	114	;'r'
   487  007D3D  69                 	db	105	;'i'
   488  007D3E  6F                 	db	111	;'o'
   489  007D3F  20                 	db	32
   490  007D40  0D                 	db	13
   491  007D41  0A                 	db	10
   492  007D42  00                 	db	0
   493  007D43                     STR_31:
   494  007D43  0D                 	db	13
   495  007D44  0A                 	db	10
   496  007D45  0A                 	db	10
   497  007D46  50                 	db	80	;'P'
   498  007D47  6F                 	db	111	;'o'
   499  007D48  72                 	db	114	;'r'
   500  007D49  63                 	db	99	;'c'
   501  007D4A  65                 	db	101	;'e'
   502  007D4B  6E                 	db	110	;'n'
   503  007D4C  74                 	db	116	;'t'
   504  007D4D  61                 	db	97	;'a'
   505  007D4E  6A                 	db	106	;'j'
   506  007D4F  65                 	db	101	;'e'
   507  007D50  20                 	db	32
   508  007D51  48                 	db	72	;'H'
   509  007D52  75                 	db	117	;'u'
   510  007D53  6D                 	db	109	;'m'
   511  007D54  65                 	db	101	;'e'
   512  007D55  64                 	db	100	;'d'
   513  007D56  61                 	db	97	;'a'
   514  007D57  64                 	db	100	;'d'
   515  007D58  20                 	db	32
   516  007D59  64                 	db	100	;'d'
   517  007D5A  65                 	db	101	;'e'
   518  007D5B  6C                 	db	108	;'l'
   519  007D5C  20                 	db	32
   520  007D5D  73                 	db	115	;'s'
   521  007D5E  65                 	db	101	;'e'
   522  007D5F  6E                 	db	110	;'n'
   523  007D60  73                 	db	115	;'s'
   524  007D61  6F                 	db	111	;'o'
   525  007D62  72                 	db	114	;'r'
   526  007D63  20                 	db	32
   527  007D64  25                 	db	37
   528  007D65  64                 	db	100	;'d'
   529  007D66  3A                 	db	58	;':'
   530  007D67  20                 	db	32
   531  007D68  25                 	db	37
   532  007D69  64                 	db	100	;'d'
   533  007D6A  20                 	db	32
   534  007D6B  25                 	db	37
   535  007D6C  63                 	db	99	;'c'
   536  007D6D  0D                 	db	13
   537  007D6E  0A                 	db	10
   538  007D6F  00                 	db	0
   539  007D70                     STR_2:
   540  007D70  0D                 	db	13
   541  007D71  0A                 	db	10
   542  007D72  20                 	db	32
   543  007D73  45                 	db	69	;'E'
   544  007D74  6E                 	db	110	;'n'
   545  007D75  76                 	db	118	;'v'
   546  007D76  69                 	db	105	;'i'
   547  007D77  65                 	db	101	;'e'
   548  007D78  20                 	db	32
   549  007D79  6C                 	db	108	;'l'
   550  007D7A  61                 	db	97	;'a'
   551  007D7B  73                 	db	115	;'s'
   552  007D7C  20                 	db	32
   553  007D7D  48                 	db	72	;'H'
   554  007D7E  6F                 	db	111	;'o'
   555  007D7F  72                 	db	114	;'r'
   556  007D80  61                 	db	97	;'a'
   557  007D81  73                 	db	115	;'s'
   558  007D82  20                 	db	32
   559  007D83  65                 	db	101	;'e'
   560  007D84  6E                 	db	110	;'n'
   561  007D85  20                 	db	32
   562  007D86  66                 	db	102	;'f'
   563  007D87  6F                 	db	111	;'o'
   564  007D88  72                 	db	114	;'r'
   565  007D89  6D                 	db	109	;'m'
   566  007D8A  61                 	db	97	;'a'
   567  007D8B  74                 	db	116	;'t'
   568  007D8C  6F                 	db	111	;'o'
   569  007D8D  20                 	db	32
   570  007D8E  32                 	db	50	;'2'
   571  007D8F  34                 	db	52	;'4'
   572  007D90  20                 	db	32
   573  007D91  45                 	db	69	;'E'
   574  007D92  6A                 	db	106	;'j'
   575  007D93  3A                 	db	58	;':'
   576  007D94  20                 	db	32
   577  007D95  31                 	db	49	;'1'
   578  007D96  35                 	db	53	;'5'
   579  007D97  20                 	db	32
   580  007D98  0D                 	db	13
   581  007D99  0A                 	db	10
   582  007D9A  00                 	db	0
   583  007D9B                     STR_24:
   584  007D9B  0D                 	db	13
   585  007D9C  0A                 	db	10
   586  007D9D  20                 	db	32
   587  007D9E  53                 	db	83	;'S'
   588  007D9F  6F                 	db	111	;'o'
   589  007DA0  6C                 	db	108	;'l'
   590  007DA1  6F                 	db	111	;'o'
   591  007DA2  20                 	db	32
   592  007DA3  73                 	db	115	;'s'
   593  007DA4  65                 	db	101	;'e'
   594  007DA5  20                 	db	32
   595  007DA6  70                 	db	112	;'p'
   596  007DA7  65                 	db	101	;'e'
   597  007DA8  72                 	db	114	;'r'
   598  007DA9  6D                 	db	109	;'m'
   599  007DAA  69                 	db	105	;'i'
   600  007DAB  74                 	db	116	;'t'
   601  007DAC  65                 	db	101	;'e'
   602  007DAD  6E                 	db	110	;'n'
   603  007DAE  20                 	db	32
   604  007DAF  6E                 	db	110	;'n'
   605  007DB0  75                 	db	117	;'u'
   606  007DB1  6D                 	db	109	;'m'
   607  007DB2  65                 	db	101	;'e'
   608  007DB3  72                 	db	114	;'r'
   609  007DB4  6F                 	db	111	;'o'
   610  007DB5  73                 	db	115	;'s'
   611  007DB6  20                 	db	32
   612  007DB7  64                 	db	100	;'d'
   613  007DB8  65                 	db	101	;'e'
   614  007DB9  6C                 	db	108	;'l'
   615  007DBA  20                 	db	32
   616  007DBB  31                 	db	49	;'1'
   617  007DBC  20                 	db	32
   618  007DBD  61                 	db	97	;'a'
   619  007DBE  6C                 	db	108	;'l'
   620  007DBF  20                 	db	32
   621  007DC0  33                 	db	51	;'3'
   622  007DC1  20                 	db	32
   623  007DC2  0D                 	db	13
   624  007DC3  0A                 	db	10
   625  007DC4  00                 	db	0
   626  007DC5                     STR_13:
   627  007DC5  0D                 	db	13
   628  007DC6  0A                 	db	10
   629  007DC7  53                 	db	83	;'S'
   630  007DC8  6F                 	db	111	;'o'
   631  007DC9  6C                 	db	108	;'l'
   632  007DCA  69                 	db	105	;'i'
   633  007DCB  63                 	db	99	;'c'
   634  007DCC  69                 	db	105	;'i'
   635  007DCD  74                 	db	116	;'t'
   636  007DCE  61                 	db	97	;'a'
   637  007DCF  6E                 	db	110	;'n'
   638  007DD0  64                 	db	100	;'d'
   639  007DD1  6F                 	db	111	;'o'
   640  007DD2  20                 	db	32
   641  007DD3  4D                 	db	77	;'M'
   642  007DD4  75                 	db	117	;'u'
   643  007DD5  65                 	db	101	;'e'
   644  007DD6  73                 	db	115	;'s'
   645  007DD7  74                 	db	116	;'t'
   646  007DD8  72                 	db	114	;'r'
   647  007DD9  65                 	db	101	;'e'
   648  007DDA  6F                 	db	111	;'o'
   649  007DDB  20                 	db	32
   650  007DDC  64                 	db	100	;'d'
   651  007DDD  65                 	db	101	;'e'
   652  007DDE  20                 	db	32
   653  007DDF  73                 	db	115	;'s'
   654  007DE0  65                 	db	101	;'e'
   655  007DE1  6E                 	db	110	;'n'
   656  007DE2  73                 	db	115	;'s'
   657  007DE3  6F                 	db	111	;'o'
   658  007DE4  72                 	db	114	;'r'
   659  007DE5  65                 	db	101	;'e'
   660  007DE6  73                 	db	115	;'s'
   661  007DE7  0D                 	db	13
   662  007DE8  0A                 	db	10
   663  007DE9  0A                 	db	10
   664  007DEA  00                 	db	0
   665  007DEB                     STR_12:
   666  007DEB  0D                 	db	13
   667  007DEC  0A                 	db	10
   668  007DED  20                 	db	32
   669  007DEE  4D                 	db	77	;'M'
   670  007DEF  69                 	db	105	;'i'
   671  007DF0  6E                 	db	110	;'n'
   672  007DF1  75                 	db	117	;'u'
   673  007DF2  74                 	db	116	;'t'
   674  007DF3  6F                 	db	111	;'o'
   675  007DF4  73                 	db	115	;'s'
   676  007DF5  20                 	db	32
   677  007DF6  64                 	db	100	;'d'
   678  007DF7  65                 	db	101	;'e'
   679  007DF8  20                 	db	32
   680  007DF9  72                 	db	114	;'r'
   681  007DFA  69                 	db	105	;'i'
   682  007DFB  65                 	db	101	;'e'
   683  007DFC  67                 	db	103	;'g'
   684  007DFD  6F                 	db	111	;'o'
   685  007DFE  20                 	db	32
   686  007DFF  65                 	db	101	;'e'
   687  007E00  73                 	db	115	;'s'
   688  007E01  74                 	db	116	;'t'
   689  007E02  61                 	db	97	;'a'
   690  007E03  62                 	db	98	;'b'
   691  007E04  6C                 	db	108	;'l'
   692  007E05  65                 	db	101	;'e'
   693  007E06  63                 	db	99	;'c'
   694  007E07  69                 	db	105	;'i'
   695  007E08  64                 	db	100	;'d'
   696  007E09  6F                 	db	111	;'o'
   697  007E0A  73                 	db	115	;'s'
   698  007E0B  21                 	db	33
   699  007E0C  20                 	db	32
   700  007E0D  0D                 	db	13
   701  007E0E  0A                 	db	10
   702  007E0F  00                 	db	0
   703  007E10                     STR_16:
   704  007E10  0D                 	db	13
   705  007E11  0A                 	db	10
   706  007E12  20                 	db	32
   707  007E13  49                 	db	73	;'I'
   708  007E14  6E                 	db	110	;'n'
   709  007E15  67                 	db	103	;'g'
   710  007E16  72                 	db	114	;'r'
   711  007E17  65                 	db	101	;'e'
   712  007E18  73                 	db	115	;'s'
   713  007E19  61                 	db	97	;'a'
   714  007E1A  20                 	db	32
   715  007E1B  75                 	db	117	;'u'
   716  007E1C  6E                 	db	110	;'n'
   717  007E1D  61                 	db	97	;'a'
   718  007E1E  20                 	db	32
   719  007E1F  6F                 	db	111	;'o'
   720  007E20  70                 	db	112	;'p'
   721  007E21  63                 	db	99	;'c'
   722  007E22  69                 	db	105	;'i'
   723  007E23  6F                 	db	111	;'o'
   724  007E24  6E                 	db	110	;'n'
   725  007E25  20                 	db	32
   726  007E26  61                 	db	97	;'a'
   727  007E27  20                 	db	32
   728  007E28  52                 	db	82	;'R'
   729  007E29  65                 	db	101	;'e'
   730  007E2A  61                 	db	97	;'a'
   731  007E2B  6C                 	db	108	;'l'
   732  007E2C  69                 	db	105	;'i'
   733  007E2D  7A                 	db	122	;'z'
   734  007E2E  61                 	db	97	;'a'
   735  007E2F  72                 	db	114	;'r'
   736  007E30  3A                 	db	58	;':'
   737  007E31  20                 	db	32
   738  007E32  0D                 	db	13
   739  007E33  0A                 	db	10
   740  007E34  00                 	db	0
   741  007E35                     STR_4:
   742  007E35  0D                 	db	13
   743  007E36  0A                 	db	10
   744  007E37  20                 	db	32
   745  007E38  48                 	db	72	;'H'
   746  007E39  4F                 	db	79	;'O'
   747  007E3A  52                 	db	82	;'R'
   748  007E3B  41                 	db	65	;'A'
   749  007E3C  20                 	db	32
   750  007E3D  45                 	db	69	;'E'
   751  007E3E  53                 	db	83	;'S'
   752  007E3F  54                 	db	84	;'T'
   753  007E40  41                 	db	65	;'A'
   754  007E41  42                 	db	66	;'B'
   755  007E42  4C                 	db	76	;'L'
   756  007E43  45                 	db	69	;'E'
   757  007E44  43                 	db	67	;'C'
   758  007E45  49                 	db	73	;'I'
   759  007E46  44                 	db	68	;'D'
   760  007E47  41                 	db	65	;'A'
   761  007E48  20                 	db	32
   762  007E49  43                 	db	67	;'C'
   763  007E4A  4F                 	db	79	;'O'
   764  007E4B  52                 	db	82	;'R'
   765  007E4C  52                 	db	82	;'R'
   766  007E4D  45                 	db	69	;'E'
   767  007E4E  43                 	db	67	;'C'
   768  007E4F  54                 	db	84	;'T'
   769  007E50  41                 	db	65	;'A'
   770  007E51  4D                 	db	77	;'M'
   771  007E52  45                 	db	69	;'E'
   772  007E53  4E                 	db	78	;'N'
   773  007E54  54                 	db	84	;'T'
   774  007E55  45                 	db	69	;'E'
   775  007E56  20                 	db	32
   776  007E57  0D                 	db	13
   777  007E58  0A                 	db	10
   778  007E59  00                 	db	0
   779  007E5A                     STR_18:
   780  007E5A  0D                 	db	13
   781  007E5B  0A                 	db	10
   782  007E5C  20                 	db	32
   783  007E5D  32                 	db	50	;'2'
   784  007E5E  2E                 	db	46
   785  007E5F  20                 	db	32
   786  007E60  41                 	db	65	;'A'
   787  007E61  73                 	db	115	;'s'
   788  007E62  69                 	db	105	;'i'
   789  007E63  67                 	db	103	;'g'
   790  007E64  6E                 	db	110	;'n'
   791  007E65  61                 	db	97	;'a'
   792  007E66  72                 	db	114	;'r'
   793  007E67  20                 	db	32
   794  007E68  48                 	db	72	;'H'
   795  007E69  6F                 	db	111	;'o'
   796  007E6A  72                 	db	114	;'r'
   797  007E6B  61                 	db	97	;'a'
   798  007E6C  72                 	db	114	;'r'
   799  007E6D  69                 	db	105	;'i'
   800  007E6E  6F                 	db	111	;'o'
   801  007E6F  73                 	db	115	;'s'
   802  007E70  20                 	db	32
   803  007E71  70                 	db	112	;'p'
   804  007E72  61                 	db	97	;'a'
   805  007E73  72                 	db	114	;'r'
   806  007E74  61                 	db	97	;'a'
   807  007E75  20                 	db	32
   808  007E76  72                 	db	114	;'r'
   809  007E77  65                 	db	101	;'e'
   810  007E78  67                 	db	103	;'g'
   811  007E79  61                 	db	97	;'a'
   812  007E7A  72                 	db	114	;'r'
   813  007E7B  20                 	db	32
   814  007E7C  0D                 	db	13
   815  007E7D  0A                 	db	10
   816  007E7E  00                 	db	0
   817  007E7F                     STR_21:
   818  007E7F  0D                 	db	13
   819  007E80  0A                 	db	10
   820  007E81  20                 	db	32
   821  007E82  35                 	db	53	;'5'
   822  007E83  2E                 	db	46
   823  007E84  20                 	db	32
   824  007E85  4D                 	db	77	;'M'
   825  007E86  6F                 	db	111	;'o'
   826  007E87  73                 	db	115	;'s'
   827  007E88  74                 	db	116	;'t'
   828  007E89  72                 	db	114	;'r'
   829  007E8A  61                 	db	97	;'a'
   830  007E8B  72                 	db	114	;'r'
   831  007E8C  20                 	db	32
   832  007E8D  76                 	db	118	;'v'
   833  007E8E  61                 	db	97	;'a'
   834  007E8F  6C                 	db	108	;'l'
   835  007E90  6F                 	db	111	;'o'
   836  007E91  72                 	db	114	;'r'
   837  007E92  65                 	db	101	;'e'
   838  007E93  73                 	db	115	;'s'
   839  007E94  20                 	db	32
   840  007E95  73                 	db	115	;'s'
   841  007E96  65                 	db	101	;'e'
   842  007E97  6E                 	db	110	;'n'
   843  007E98  73                 	db	115	;'s'
   844  007E99  6F                 	db	111	;'o'
   845  007E9A  72                 	db	114	;'r'
   846  007E9B  65                 	db	101	;'e'
   847  007E9C  73                 	db	115	;'s'
   848  007E9D  20                 	db	32
   849  007E9E  0D                 	db	13
   850  007E9F  0A                 	db	10
   851  007EA0  00                 	db	0
   852  007EA1                     STR_15:
   853  007EA1  0D                 	db	13
   854  007EA2  0A                 	db	10
   855  007EA3  53                 	db	83	;'S'
   856  007EA4  65                 	db	101	;'e'
   857  007EA5  6E                 	db	110	;'n'
   858  007EA6  73                 	db	115	;'s'
   859  007EA7  6F                 	db	111	;'o'
   860  007EA8  72                 	db	114	;'r'
   861  007EA9  65                 	db	101	;'e'
   862  007EAA  73                 	db	115	;'s'
   863  007EAB  20                 	db	32
   864  007EAC  4C                 	db	76	;'L'
   865  007EAD  65                 	db	101	;'e'
   866  007EAE  69                 	db	105	;'i'
   867  007EAF  64                 	db	100	;'d'
   868  007EB0  6F                 	db	111	;'o'
   869  007EB1  73                 	db	115	;'s'
   870  007EB2  20                 	db	32
   871  007EB3  63                 	db	99	;'c'
   872  007EB4  6F                 	db	111	;'o'
   873  007EB5  6E                 	db	110	;'n'
   874  007EB6  20                 	db	32
   875  007EB7  45                 	db	69	;'E'
   876  007EB8  78                 	db	120	;'x'
   877  007EB9  69                 	db	105	;'i'
   878  007EBA  74                 	db	116	;'t'
   879  007EBB  6F                 	db	111	;'o'
   880  007EBC  21                 	db	33
   881  007EBD  0D                 	db	13
   882  007EBE  0A                 	db	10
   883  007EBF  0A                 	db	10
   884  007EC0  00                 	db	0
   885  007EC1                     STR_20:
   886  007EC1  0D                 	db	13
   887  007EC2  0A                 	db	10
   888  007EC3  20                 	db	32
   889  007EC4  34                 	db	52	;'4'
   890  007EC5  2E                 	db	46
   891  007EC6  20                 	db	32
   892  007EC7  44                 	db	68	;'D'
   893  007EC8  61                 	db	97	;'a'
   894  007EC9  6D                 	db	109	;'m'
   895  007ECA  65                 	db	101	;'e'
   896  007ECB  20                 	db	32
   897  007ECC  64                 	db	100	;'d'
   898  007ECD  61                 	db	97	;'a'
   899  007ECE  74                 	db	116	;'t'
   900  007ECF  6F                 	db	111	;'o'
   901  007ED0  73                 	db	115	;'s'
   902  007ED1  20                 	db	32
   903  007ED2  64                 	db	100	;'d'
   904  007ED3  65                 	db	101	;'e'
   905  007ED4  6C                 	db	108	;'l'
   906  007ED5  20                 	db	32
   907  007ED6  73                 	db	115	;'s'
   908  007ED7  69                 	db	105	;'i'
   909  007ED8  73                 	db	115	;'s'
   910  007ED9  74                 	db	116	;'t'
   911  007EDA  65                 	db	101	;'e'
   912  007EDB  6D                 	db	109	;'m'
   913  007EDC  61                 	db	97	;'a'
   914  007EDD  20                 	db	32
   915  007EDE  0D                 	db	13
   916  007EDF  0A                 	db	10
   917  007EE0  00                 	db	0
   918  007EE1                     STR_29:
   919  007EE1  0D                 	db	13
   920  007EE2  0A                 	db	10
   921  007EE3  0A                 	db	10
   922  007EE4  4C                 	db	76	;'L'
   923  007EE5  61                 	db	97	;'a'
   924  007EE6  20                 	db	32
   925  007EE7  48                 	db	72	;'H'
   926  007EE8  75                 	db	117	;'u'
   927  007EE9  6D                 	db	109	;'m'
   928  007EEA  65                 	db	101	;'e'
   929  007EEB  64                 	db	100	;'d'
   930  007EEC  61                 	db	97	;'a'
   931  007EED  64                 	db	100	;'d'
   932  007EEE  20                 	db	32
   933  007EEF  41                 	db	65	;'A'
   934  007EF0  6D                 	db	109	;'m'
   935  007EF1  62                 	db	98	;'b'
   936  007EF2  69                 	db	105	;'i'
   937  007EF3  65                 	db	101	;'e'
   938  007EF4  6E                 	db	110	;'n'
   939  007EF5  74                 	db	116	;'t'
   940  007EF6  65                 	db	101	;'e'
   941  007EF7  20                 	db	32
   942  007EF8  65                 	db	101	;'e'
   943  007EF9  73                 	db	115	;'s'
   944  007EFA  3A                 	db	58	;':'
   945  007EFB  20                 	db	32
   946  007EFC  25                 	db	37
   947  007EFD  64                 	db	100	;'d'
   948  007EFE  0D                 	db	13
   949  007EFF  0A                 	db	10
   950  007F00  00                 	db	0
   951  007F01                     STR_3:
   952  007F01  0D                 	db	13
   953  007F02  0A                 	db	10
   954  007F03  20                 	db	32
   955  007F04  45                 	db	69	;'E'
   956  007F05  6E                 	db	110	;'n'
   957  007F06  76                 	db	118	;'v'
   958  007F07  69                 	db	105	;'i'
   959  007F08  65                 	db	101	;'e'
   960  007F09  20                 	db	32
   961  007F0A  6C                 	db	108	;'l'
   962  007F0B  6F                 	db	111	;'o'
   963  007F0C  73                 	db	115	;'s'
   964  007F0D  20                 	db	32
   965  007F0E  4D                 	db	77	;'M'
   966  007F0F  69                 	db	105	;'i'
   967  007F10  6E                 	db	110	;'n'
   968  007F11  75                 	db	117	;'u'
   969  007F12  74                 	db	116	;'t'
   970  007F13  6F                 	db	111	;'o'
   971  007F14  73                 	db	115	;'s'
   972  007F15  20                 	db	32
   973  007F16  45                 	db	69	;'E'
   974  007F17  6A                 	db	106	;'j'
   975  007F18  3A                 	db	58	;':'
   976  007F19  20                 	db	32
   977  007F1A  32                 	db	50	;'2'
   978  007F1B  35                 	db	53	;'5'
   979  007F1C  20                 	db	32
   980  007F1D  0D                 	db	13
   981  007F1E  0A                 	db	10
   982  007F1F  00                 	db	0
   983  007F20                     STR_30:
   984  007F20  0D                 	db	13
   985  007F21  0A                 	db	10
   986  007F22  0A                 	db	10
   987  007F23  4C                 	db	76	;'L'
   988  007F24  61                 	db	97	;'a'
   989  007F25  20                 	db	32
   990  007F26  54                 	db	84	;'T'
   991  007F27  65                 	db	101	;'e'
   992  007F28  6D                 	db	109	;'m'
   993  007F29  70                 	db	112	;'p'
   994  007F2A  65                 	db	101	;'e'
   995  007F2B  72                 	db	114	;'r'
   996  007F2C  61                 	db	97	;'a'
   997  007F2D  74                 	db	116	;'t'
   998  007F2E  75                 	db	117	;'u'
   999  007F2F  72                 	db	114	;'r'
  1000  007F30  61                 	db	97	;'a'
  1001  007F31  20                 	db	32
  1002  007F32  65                 	db	101	;'e'
  1003  007F33  73                 	db	115	;'s'
  1004  007F34  3A                 	db	58	;':'
  1005  007F35  20                 	db	32
  1006  007F36  25                 	db	37
  1007  007F37  64                 	db	100	;'d'
  1008  007F38  20                 	db	32
  1009  007F39  43                 	db	67	;'C'
  1010  007F3A  0D                 	db	13
  1011  007F3B  0A                 	db	10
  1012  007F3C  00                 	db	0
  1013  007F3D                     STR_17:
  1014  007F3D  0D                 	db	13
  1015  007F3E  0A                 	db	10
  1016  007F3F  20                 	db	32
  1017  007F40  31                 	db	49	;'1'
  1018  007F41  2E                 	db	46
  1019  007F42  20                 	db	32
  1020  007F43  46                 	db	70	;'F'
  1021  007F44  69                 	db	105	;'i'
  1022  007F45  6A                 	db	106	;'j'
  1023  007F46  61                 	db	97	;'a'
  1024  007F47  72                 	db	114	;'r'
  1025  007F48  20                 	db	32
  1026  007F49  48                 	db	72	;'H'
  1027  007F4A  6F                 	db	111	;'o'
  1028  007F4B  72                 	db	114	;'r'
  1029  007F4C  61                 	db	97	;'a'
  1030  007F4D  20                 	db	32
  1031  007F4E  41                 	db	65	;'A'
  1032  007F4F  63                 	db	99	;'c'
  1033  007F50  74                 	db	116	;'t'
  1034  007F51  75                 	db	117	;'u'
  1035  007F52  61                 	db	97	;'a'
  1036  007F53  6C                 	db	108	;'l'
  1037  007F54  20                 	db	32
  1038  007F55  0D                 	db	13
  1039  007F56  0A                 	db	10
  1040  007F57  00                 	db	0
  1041  007F58                     STR_8:
  1042  007F58  0D                 	db	13
  1043  007F59  0A                 	db	10
  1044  007F5A  20                 	db	32
  1045  007F5B  48                 	db	72	;'H'
  1046  007F5C  6F                 	db	111	;'o'
  1047  007F5D  72                 	db	114	;'r'
  1048  007F5E  61                 	db	97	;'a'
  1049  007F5F  72                 	db	114	;'r'
  1050  007F60  69                 	db	105	;'i'
  1051  007F61  6F                 	db	111	;'o'
  1052  007F62  20                 	db	32
  1053  007F63  4D                 	db	77	;'M'
  1054  007F64  6F                 	db	111	;'o'
  1055  007F65  64                 	db	100	;'d'
  1056  007F66  69                 	db	105	;'i'
  1057  007F67  66                 	db	102	;'f'
  1058  007F68  69                 	db	105	;'i'
  1059  007F69  63                 	db	99	;'c'
  1060  007F6A  61                 	db	97	;'a'
  1061  007F6B  64                 	db	100	;'d'
  1062  007F6C  6F                 	db	111	;'o'
  1063  007F6D  21                 	db	33
  1064  007F6E  20                 	db	32
  1065  007F6F  0D                 	db	13
  1066  007F70  0A                 	db	10
  1067  007F71  00                 	db	0
  1068  007F72                     STR_5:
  1069  007F72  0D                 	db	13
  1070  007F73  0A                 	db	10
  1071  007F74  20                 	db	32
  1072  007F75  4F                 	db	79	;'O'
  1073  007F76  50                 	db	80	;'P'
  1074  007F77  43                 	db	67	;'C'
  1075  007F78  49                 	db	73	;'I'
  1076  007F79  4F                 	db	79	;'O'
  1077  007F7A  4E                 	db	78	;'N'
  1078  007F7B  45                 	db	69	;'E'
  1079  007F7C  53                 	db	83	;'S'
  1080  007F7D  20                 	db	32
  1081  007F7E  44                 	db	68	;'D'
  1082  007F7F  45                 	db	69	;'E'
  1083  007F80  20                 	db	32
  1084  007F81  52                 	db	82	;'R'
  1085  007F82  45                 	db	69	;'E'
  1086  007F83  47                 	db	71	;'G'
  1087  007F84  41                 	db	65	;'A'
  1088  007F85  44                 	db	68	;'D'
  1089  007F86  4F                 	db	79	;'O'
  1090  007F87  20                 	db	32
  1091  007F88  0D                 	db	13
  1092  007F89  0A                 	db	10
  1093  007F8A  00                 	db	0
  1094  007F8B                     STR_27:
  1095  007F8B  45                 	db	69	;'E'
  1096  007F8C  72                 	db	114	;'r'
  1097  007F8D  72                 	db	114	;'r'
  1098  007F8E  6F                 	db	111	;'o'
  1099  007F8F  72                 	db	114	;'r'
  1100  007F90  20                 	db	32
  1101  007F91  64                 	db	100	;'d'
  1102  007F92  65                 	db	101	;'e'
  1103  007F93  20                 	db	32
  1104  007F94  6C                 	db	108	;'l'
  1105  007F95  65                 	db	101	;'e'
  1106  007F96  63                 	db	99	;'c'
  1107  007F97  74                 	db	116	;'t'
  1108  007F98  75                 	db	117	;'u'
  1109  007F99  72                 	db	114	;'r'
  1110  007F9A  61                 	db	97	;'a'
  1111  007F9B  20                 	db	32
  1112  007F9C  44                 	db	68	;'D'
  1113  007F9D  48                 	db	72	;'H'
  1114  007F9E  54                 	db	84	;'T'
  1115  007F9F  31                 	db	49	;'1'
  1116  007FA0  31                 	db	49	;'1'
  1117  007FA1  0D                 	db	13
  1118  007FA2  0A                 	db	10
  1119  007FA3  00                 	db	0
  1120  007FA4                     STR_9:
  1121  007FA4  0D                 	db	13
  1122  007FA5  0A                 	db	10
  1123  007FA6  20                 	db	32
  1124  007FA7  54                 	db	84	;'T'
  1125  007FA8  49                 	db	73	;'I'
  1126  007FA9  45                 	db	69	;'E'
  1127  007FAA  4D                 	db	77	;'M'
  1128  007FAB  50                 	db	80	;'P'
  1129  007FAC  4F                 	db	79	;'O'
  1130  007FAD  20                 	db	32
  1131  007FAE  44                 	db	68	;'D'
  1132  007FAF  45                 	db	69	;'E'
  1133  007FB0  20                 	db	32
  1134  007FB1  52                 	db	82	;'R'
  1135  007FB2  45                 	db	69	;'E'
  1136  007FB3  47                 	db	71	;'G'
  1137  007FB4  41                 	db	65	;'A'
  1138  007FB5  44                 	db	68	;'D'
  1139  007FB6  4F                 	db	79	;'O'
  1140  007FB7  20                 	db	32
  1141  007FB8  0D                 	db	13
  1142  007FB9  0A                 	db	10
  1143  007FBA  00                 	db	0
  1144  007FBB                     STR_28:
  1145  007FBB  44                 	db	68	;'D'
  1146  007FBC  48                 	db	72	;'H'
  1147  007FBD  54                 	db	84	;'T'
  1148  007FBE  31                 	db	49	;'1'
  1149  007FBF  31                 	db	49	;'1'
  1150  007FC0  20                 	db	32
  1151  007FC1  4E                 	db	78	;'N'
  1152  007FC2  4F                 	db	79	;'O'
  1153  007FC3  20                 	db	32
  1154  007FC4  52                 	db	82	;'R'
  1155  007FC5  45                 	db	69	;'E'
  1156  007FC6  53                 	db	83	;'S'
  1157  007FC7  50                 	db	80	;'P'
  1158  007FC8  4F                 	db	79	;'O'
  1159  007FC9  4E                 	db	78	;'N'
  1160  007FCA  44                 	db	68	;'D'
  1161  007FCB  49                 	db	73	;'I'
  1162  007FCC  4F                 	db	79	;'O'
  1163  007FCD  0D                 	db	13
  1164  007FCE  0A                 	db	10
  1165  007FCF  00                 	db	0
  1166  007FD0                     STR_1:
  1167  007FD0  0D                 	db	13
  1168  007FD1  0A                 	db	10
  1169  007FD2  20                 	db	32
  1170  007FD3  46                 	db	70	;'F'
  1171  007FD4  49                 	db	73	;'I'
  1172  007FD5  4A                 	db	74	;'J'
  1173  007FD6  41                 	db	65	;'A'
  1174  007FD7  20                 	db	32
  1175  007FD8  48                 	db	72	;'H'
  1176  007FD9  4F                 	db	79	;'O'
  1177  007FDA  52                 	db	82	;'R'
  1178  007FDB  41                 	db	65	;'A'
  1179  007FDC  20                 	db	32
  1180  007FDD  0D                 	db	13
  1181  007FDE  0A                 	db	10
  1182  007FDF  00                 	db	0
  1183  007FE0                     STR_26:
  1184  007FE0  25                 	db	37
  1185  007FE1  64                 	db	100	;'d'
  1186  007FE2  20                 	db	32
  1187  007FE3  7C                 	db	124
  1188  007FE4  20                 	db	32
  1189  007FE5  25                 	db	37
  1190  007FE6  64                 	db	100	;'d'
  1191  007FE7  20                 	db	32
  1192  007FE8  7C                 	db	124
  1193  007FE9  20                 	db	32
  1194  007FEA  25                 	db	37
  1195  007FEB  64                 	db	100	;'d'
  1196  007FEC  20                 	db	32
  1197  007FED  0D                 	db	13
  1198  007FEE  0A                 	db	10
  1199  007FEF  00                 	db	0
  1200  007FF0                     STR_22:
  1201  007FF0  0D                 	db	13
  1202  007FF1  0A                 	db	10
  1203  007FF2  20                 	db	32
  1204  007FF3  4F                 	db	79	;'O'
  1205  007FF4  70                 	db	112	;'p'
  1206  007FF5  63                 	db	99	;'c'
  1207  007FF6  69                 	db	105	;'i'
  1208  007FF7  6F                 	db	111	;'o'
  1209  007FF8  6E                 	db	110	;'n'
  1210  007FF9  3A                 	db	58	;':'
  1211  007FFA  20                 	db	32
  1212  007FFB  20                 	db	32
  1213  007FFC  0D                 	db	13
  1214  007FFD  00                 	db	0
  1215  0000                     
  1216                           ; #config settings
  1217  007FFE  00                 	db	0	; dummy byte at the end
  1218  0000                     
  1219                           	psect	cinit
  1220  00202E                     __pcinit:
  1221                           	opt callstack 0
  1222  00202E                     start_initialization:
  1223                           	opt callstack 0
  1224  00202E                     __initialization:
  1225                           	opt callstack 0
  1226                           
  1227                           ; Initialize objects allocated to BANK0 (4 bytes)
  1228                           ; load TBLPTR registers with __pidataBANK0
  1229  00202E  0E0E               	movlw	low __pidataBANK0
  1230  002030  6EF6               	movwf	tblptrl,c
  1231  002032  0E24               	movlw	high __pidataBANK0
  1232  002034  6EF7               	movwf	tblptrh,c
  1233  002036  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1234  002038  6EF8               	movwf	tblptru,c
  1235  00203A  EE00  F0FA         	lfsr	0,__pdataBANK0
  1236  00203E  EE10 F004          	lfsr	1,4
  1237  002042                     copy_data0:
  1238  002042  0009               	tblrd		*+
  1239  002044  CFF5 FFEE          	movff	tablat,postinc0
  1240  002048  50E5               	movf	postdec1,w,c
  1241  00204A  50E1               	movf	fsr1l,w,c
  1242  00204C  E1FA               	bnz	copy_data0
  1243                           
  1244                           ; Clear objects allocated to BANK1 (120 bytes)
  1245  00204E  EE01  F000         	lfsr	0,__pbssBANK1
  1246  002052  0E78               	movlw	120
  1247  002054                     clear_0:
  1248  002054  6AEE               	clrf	postinc0,c
  1249  002056  06E8               	decf	wreg,f,c
  1250  002058  E1FD               	bnz	clear_0
  1251                           
  1252                           ; Clear objects allocated to BANK0 (24 bytes)
  1253  00205A  EE00  F0E2         	lfsr	0,__pbssBANK0
  1254  00205E  0E18               	movlw	24
  1255  002060                     clear_1:
  1256  002060  6AEE               	clrf	postinc0,c
  1257  002062  06E8               	decf	wreg,f,c
  1258  002064  E1FD               	bnz	clear_1
  1259  002066                     end_of_initialization:
  1260                           	opt callstack 0
  1261  002066                     __end_of__initialization:
  1262                           	opt callstack 0
  1263  002066  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1264  002068  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1265  00206A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1266  00206C  6EF8               	movwf	tblptru,c
  1267  00206E  0100               	movlb	0
  1268  002070  EF04  F00D         	goto	_main	;jump to C main() function
  1269                           
  1270                           	psect	bssBANK0
  1271  0000E2                     __pbssBANK0:
  1272                           	opt callstack 0
  1273  0000E2                     _nout:
  1274                           	opt callstack 0
  1275  0000E2                     	ds	2
  1276  0000E4                     _width:
  1277                           	opt callstack 0
  1278  0000E4                     	ds	2
  1279  0000E6                     _prec:
  1280                           	opt callstack 0
  1281  0000E6                     	ds	2
  1282  0000E8                     _flags:
  1283                           	opt callstack 0
  1284  0000E8                     	ds	2
  1285  0000EA                     _contInterrupciones:
  1286                           	opt callstack 0
  1287  0000EA                     	ds	2
  1288  0000EC                     _peticionLecturaSensores:
  1289                           	opt callstack 0
  1290  0000EC                     	ds	1
  1291  0000ED                     _regando:
  1292                           	opt callstack 0
  1293  0000ED                     	ds	1
  1294  0000EE                     _minutosTranscurridos:
  1295                           	opt callstack 0
  1296  0000EE                     	ds	1
  1297  0000EF                     _minutosRegar:
  1298                           	opt callstack 0
  1299  0000EF                     	ds	1
  1300  0000F0                     _overflowTimer:
  1301                           	opt callstack 0
  1302  0000F0                     	ds	1
  1303  0000F1                     _datoRecibido:
  1304                           	opt callstack 0
  1305  0000F1                     	ds	1
  1306  0000F2                     _segundos:
  1307                           	opt callstack 0
  1308  0000F2                     	ds	1
  1309  0000F3                     _minutos:
  1310                           	opt callstack 0
  1311  0000F3                     	ds	1
  1312  0000F4                     _hora:
  1313                           	opt callstack 0
  1314  0000F4                     	ds	1
  1315  0000F5                     _MODO_COMUNICACION:
  1316                           	opt callstack 0
  1317  0000F5                     	ds	1
  1318  0000F6                     _esperandoDatos:
  1319                           	opt callstack 0
  1320  0000F6                     	ds	1
  1321  0000F7                     _esperaDatoConcluida:
  1322                           	opt callstack 0
  1323  0000F7                     	ds	1
  1324  0000F8                     _byteUart:
  1325                           	opt callstack 0
  1326  0000F8                     	ds	1
  1327  0000F9                     _tiempoInactividadTrans:
  1328                           	opt callstack 0
  1329  0000F9                     	ds	1
  1330                           
  1331                           	psect	dataBANK0
  1332  0000FA                     __pdataBANK0:
  1333                           	opt callstack 0
  1334  0000FA                     _VALOR_TIMER0:
  1335                           	opt callstack 0
  1336  0000FA                     	ds	2
  1337  0000FC                     _VALOR_TIMER0UART:
  1338                           	opt callstack 0
  1339  0000FC                     	ds	2
  1340                           
  1341                           	psect	bssBANK1
  1342  000100                     __pbssBANK1:
  1343                           	opt callstack 0
  1344  000100                     _horarios:
  1345                           	opt callstack 0
  1346  000100                     	ds	72
  1347  000148                     _sensores:
  1348                           	opt callstack 0
  1349  000148                     	ds	16
  1350  000158                     _dbuf:
  1351                           	opt callstack 0
  1352  000158                     	ds	32
  1353                           
  1354                           	psect	cstackBANK0
  1355  000060                     __pcstackBANK0:
  1356                           	opt callstack 0
  1357  000060                     ?_sprintf:
  1358                           	opt callstack 0
  1359  000060                     sprintf@s:
  1360                           	opt callstack 0
  1361                           
  1362                           ; 2 bytes @ 0x0
  1363  000060                     	ds	2
  1364  000062                     sprintf@fmt:
  1365                           	opt callstack 0
  1366                           
  1367                           ; 2 bytes @ 0x2
  1368  000062                     	ds	10
  1369  00006C                     sprintf@ap:
  1370                           	opt callstack 0
  1371                           
  1372                           ; 2 bytes @ 0xC
  1373  00006C                     	ds	2
  1374  00006E                     sprintf@f:
  1375                           	opt callstack 0
  1376                           
  1377                           ; 6 bytes @ 0xE
  1378  00006E                     	ds	6
  1379  000074                     lecturaWifi@buffer:
  1380                           	opt callstack 0
  1381  000074                     dameDatosSistema@buffer:
  1382                           	opt callstack 0
  1383  000074                     mostrarDatosSensores@buffer:
  1384                           	opt callstack 0
  1385                           
  1386                           ; 50 bytes @ 0x14
  1387  000074                     	ds	50
  1388  0000A6                     lecturaWifi@porcientoHumedad:
  1389                           	opt callstack 0
  1390  0000A6                     mostrarDatosSensores@temperatura:
  1391                           	opt callstack 0
  1392  0000A6                     dameDatosSistema@i:
  1393                           	opt callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x46
  1396  0000A6                     	ds	1
  1397  0000A7                     mostrarDatosSensores@humedad:
  1398                           	opt callstack 0
  1399  0000A7                     lecturaWifi@i:
  1400                           	opt callstack 0
  1401                           
  1402                           ; 2 bytes @ 0x47
  1403  0000A7                     	ds	1
  1404  0000A8                     mostrarDatosSensores@i:
  1405                           	opt callstack 0
  1406                           
  1407                           ; 2 bytes @ 0x48
  1408  0000A8                     	ds	1
  1409  0000A9                     lecturaWifi@j:
  1410                           	opt callstack 0
  1411                           
  1412                           ; 2 bytes @ 0x49
  1413  0000A9                     	ds	2
  1414  0000AB                     lecturaWifi@Rx:
  1415                           	opt callstack 0
  1416                           
  1417                           ; 1 bytes @ 0x4B
  1418  0000AB                     	ds	1
  1419  0000AC                     mostrarDatosSensoresWIFI@buffer:
  1420                           	opt callstack 0
  1421                           
  1422                           ; 50 bytes @ 0x4C
  1423  0000AC                     	ds	50
  1424  0000DE                     mostrarDatosSensoresWIFI@temperatura:
  1425                           	opt callstack 0
  1426                           
  1427                           ; 1 bytes @ 0x7E
  1428  0000DE                     	ds	1
  1429  0000DF                     mostrarDatosSensoresWIFI@humedad:
  1430                           	opt callstack 0
  1431                           
  1432                           ; 1 bytes @ 0x7F
  1433  0000DF                     	ds	1
  1434  0000E0                     mostrarDatosSensoresWIFI@i:
  1435                           	opt callstack 0
  1436                           
  1437                           ; 2 bytes @ 0x80
  1438  0000E0                     	ds	2
  1439                           
  1440                           	psect	cstackCOMRAM
  1441  000001                     __pcstackCOMRAM:
  1442                           	opt callstack 0
  1443  000001                     ??_i2c_espera:
  1444  000001                     ??_convertirDato:
  1445  000001                     ??_DHT11_Start:
  1446  000001                     ?_strlen:
  1447                           	opt callstack 0
  1448  000001                     ?_horaRegar:
  1449                           	opt callstack 0
  1450  000001                     ?_dameHumedadSuelo:
  1451                           	opt callstack 0
  1452  000001                     ?___wmul:
  1453                           	opt callstack 0
  1454  000001                     ?___lmul:
  1455                           	opt callstack 0
  1456  000001                     ?___aodiv:
  1457                           	opt callstack 0
  1458  000001                     ?___aomod:
  1459                           	opt callstack 0
  1460  000001                     UART_write@dato:
  1461                           	opt callstack 0
  1462  000001                     DHT11_ReadData@i:
  1463                           	opt callstack 0
  1464  000001                     check_response@respuesta:
  1465                           	opt callstack 0
  1466  000001                     constructorSensor@s:
  1467                           	opt callstack 0
  1468  000001                     ___wmul@multiplier:
  1469                           	opt callstack 0
  1470  000001                     fputc@c:
  1471                           	opt callstack 0
  1472  000001                     strlen@s:
  1473                           	opt callstack 0
  1474  000001                     ___lmul@multiplier:
  1475                           	opt callstack 0
  1476  000001                     ___aodiv@dividend:
  1477                           	opt callstack 0
  1478  000001                     ___aomod@dividend:
  1479                           	opt callstack 0
  1480                           
  1481                           ; 8 bytes @ 0x0
  1482  000001                     	ds	1
  1483  000002                     i2c_envia_dato@dato:
  1484                           	opt callstack 0
  1485  000002                     i2c_recibe_dato@datoleido:
  1486                           	opt callstack 0
  1487  000002                     convertirDato@dato:
  1488                           	opt callstack 0
  1489  000002                     DHT11_ReadData@data:
  1490                           	opt callstack 0
  1491  000002                     UART_printf@cadena:
  1492                           	opt callstack 0
  1493                           
  1494                           ; 2 bytes @ 0x1
  1495  000002                     	ds	1
  1496  000003                     ??_dameHumedadSuelo:
  1497  000003                     escribe_rtc@dato:
  1498                           	opt callstack 0
  1499  000003                     leer_rtc@direccion:
  1500                           	opt callstack 0
  1501  000003                     convertirDato@datoR:
  1502                           	opt callstack 0
  1503  000003                     constructorSensor@porcientoHumedad:
  1504                           	opt callstack 0
  1505  000003                     leer_eeprom@direccion:
  1506                           	opt callstack 0
  1507  000003                     ___wmul@multiplicand:
  1508                           	opt callstack 0
  1509  000003                     fputc@fp:
  1510                           	opt callstack 0
  1511  000003                     strlen@a:
  1512                           	opt callstack 0
  1513                           
  1514                           ; 2 bytes @ 0x2
  1515  000003                     	ds	1
  1516  000004                     escribe_rtc@direccion:
  1517                           	opt callstack 0
  1518  000004                     leer_rtc@dato:
  1519                           	opt callstack 0
  1520  000004                     constructorSensor@pin:
  1521                           	opt callstack 0
  1522  000004                     dameTemperaturaHumedad@Humedad:
  1523                           	opt callstack 0
  1524                           
  1525                           ; 2 bytes @ 0x3
  1526  000004                     	ds	1
  1527  000005                     ??_fputc:
  1528  000005                     ??_setRtc:
  1529  000005                     ??_leer_eeprom:
  1530  000005                     dameHumedadSuelo@canalLeer:
  1531                           	opt callstack 0
  1532  000005                     restablecerDatosSensor@i:
  1533                           	opt callstack 0
  1534  000005                     ___wmul@product:
  1535                           	opt callstack 0
  1536  000005                     ___lmul@multiplicand:
  1537                           	opt callstack 0
  1538                           
  1539                           ; 4 bytes @ 0x4
  1540  000005                     	ds	1
  1541  000006                     setRtc@direccion:
  1542                           	opt callstack 0
  1543  000006                     leer_eeprom@dato:
  1544                           	opt callstack 0
  1545  000006                     dameTemperaturaHumedad@Temperatura:
  1546                           	opt callstack 0
  1547                           
  1548                           ; 2 bytes @ 0x5
  1549  000006                     	ds	1
  1550  000007                     setRtc@dato:
  1551                           	opt callstack 0
  1552  000007                     inicializarObjetos@i:
  1553                           	opt callstack 0
  1554  000007                     escribe_eeprom@direccion:
  1555                           	opt callstack 0
  1556  000007                     leeHorariosMemoria@contMemoria:
  1557                           	opt callstack 0
  1558                           
  1559                           ; 2 bytes @ 0x6
  1560  000007                     	ds	1
  1561  000008                     ??_dameTemperaturaHumedad:
  1562  000008                     setRtc@datoCapturado:
  1563                           	opt callstack 0
  1564                           
  1565                           ; 1 bytes @ 0x7
  1566  000008                     	ds	1
  1567  000009                     escribe_eeprom@dato:
  1568                           	opt callstack 0
  1569  000009                     setRtc@i:
  1570                           	opt callstack 0
  1571  000009                     leeHorariosMemoria@i:
  1572                           	opt callstack 0
  1573  000009                     ___lmul@product:
  1574                           	opt callstack 0
  1575  000009                     ___aodiv@divisor:
  1576                           	opt callstack 0
  1577  000009                     ___aomod@divisor:
  1578                           	opt callstack 0
  1579                           
  1580                           ; 8 bytes @ 0x8
  1581  000009                     	ds	1
  1582  00000A                     ??_escribe_eeprom:
  1583  00000A                     dameTemperaturaHumedad@checkSum:
  1584                           	opt callstack 0
  1585  00000A                     fputs@s:
  1586                           	opt callstack 0
  1587                           
  1588                           ; 2 bytes @ 0x9
  1589  00000A                     	ds	1
  1590  00000B                     setRtc@Rx:
  1591                           	opt callstack 0
  1592  00000B                     escribeHorariosMemoria@contMemoria:
  1593                           	opt callstack 0
  1594                           
  1595                           ; 2 bytes @ 0xA
  1596  00000B                     	ds	1
  1597  00000C                     dameTemperaturaHumedad@humedadDecimal:
  1598                           	opt callstack 0
  1599  00000C                     fputs@fp:
  1600                           	opt callstack 0
  1601                           
  1602                           ; 2 bytes @ 0xB
  1603  00000C                     	ds	1
  1604  00000D                     ?___aldiv:
  1605                           	opt callstack 0
  1606  00000D                     dameTemperaturaHumedad@temperaturaDecimal:
  1607                           	opt callstack 0
  1608  00000D                     escribeHorariosMemoria@i:
  1609                           	opt callstack 0
  1610  00000D                     ___aldiv@dividend:
  1611                           	opt callstack 0
  1612                           
  1613                           ; 4 bytes @ 0xC
  1614  00000D                     	ds	1
  1615  00000E                     dameTemperaturaHumedad@humedad:
  1616                           	opt callstack 0
  1617  00000E                     fputs@c:
  1618                           	opt callstack 0
  1619                           
  1620                           ; 1 bytes @ 0xD
  1621  00000E                     	ds	1
  1622  00000F                     asignarHorarios@hora:
  1623                           	opt callstack 0
  1624  00000F                     setTiempoRegar@tiempoRegar:
  1625                           	opt callstack 0
  1626  00000F                     dameTemperaturaHumedad@temperatura:
  1627                           	opt callstack 0
  1628  00000F                     fputs@i:
  1629                           	opt callstack 0
  1630                           
  1631                           ; 2 bytes @ 0xE
  1632  00000F                     	ds	1
  1633  000010                     ?_estaSeco:
  1634                           	opt callstack 0
  1635  000010                     asignarHorarios@datoCapturado:
  1636                           	opt callstack 0
  1637  000010                     setTiempoRegar@hora:
  1638                           	opt callstack 0
  1639  000010                     estaSeco@s:
  1640                           	opt callstack 0
  1641                           
  1642                           ; 2 bytes @ 0xF
  1643  000010                     	ds	1
  1644  000011                     ?_pad:
  1645                           	opt callstack 0
  1646  000011                     ___aodiv@counter:
  1647                           	opt callstack 0
  1648  000011                     ___aomod@counter:
  1649                           	opt callstack 0
  1650  000011                     asignarHorarios@i:
  1651                           	opt callstack 0
  1652  000011                     setTiempoRegar@i:
  1653                           	opt callstack 0
  1654  000011                     pad@fp:
  1655                           	opt callstack 0
  1656  000011                     ___aldiv@divisor:
  1657                           	opt callstack 0
  1658                           
  1659                           ; 4 bytes @ 0x10
  1660  000011                     	ds	1
  1661  000012                     _estaSeco$777:
  1662                           	opt callstack 0
  1663  000012                     ___aodiv@sign:
  1664                           	opt callstack 0
  1665  000012                     ___aomod@sign:
  1666                           	opt callstack 0
  1667                           
  1668                           ; 1 bytes @ 0x11
  1669  000012                     	ds	1
  1670  000013                     ?_abs:
  1671                           	opt callstack 0
  1672  000013                     estaSeco@temperatura:
  1673                           	opt callstack 0
  1674  000013                     asignarHorarios@Rx:
  1675                           	opt callstack 0
  1676  000013                     setTiempoRegar@i_841:
  1677                           	opt callstack 0
  1678  000013                     pad@buf:
  1679                           	opt callstack 0
  1680  000013                     abs@a:
  1681                           	opt callstack 0
  1682  000013                     ___aodiv@quotient:
  1683                           	opt callstack 0
  1684                           
  1685                           ; 8 bytes @ 0x12
  1686  000013                     	ds	1
  1687  000014                     ??_encenderBombas:
  1688                           
  1689                           ; 1 bytes @ 0x13
  1690  000014                     	ds	1
  1691  000015                     ??_abs:
  1692  000015                     setTiempoRegar@datoCapturado:
  1693                           	opt callstack 0
  1694  000015                     ___aldiv@counter:
  1695                           	opt callstack 0
  1696  000015                     pad@p:
  1697                           	opt callstack 0
  1698                           
  1699                           ; 2 bytes @ 0x14
  1700  000015                     	ds	1
  1701  000016                     encenderBombas@flagSeco:
  1702                           	opt callstack 0
  1703  000016                     setTiempoRegar@Rx:
  1704                           	opt callstack 0
  1705  000016                     ___aldiv@sign:
  1706                           	opt callstack 0
  1707                           
  1708                           ; 1 bytes @ 0x15
  1709  000016                     	ds	1
  1710  000017                     ??_pad:
  1711  000017                     encenderBombas@i:
  1712                           	opt callstack 0
  1713  000017                     ___aldiv@quotient:
  1714                           	opt callstack 0
  1715                           
  1716                           ; 4 bytes @ 0x16
  1717  000017                     	ds	1
  1718  000018                     pad@i:
  1719                           	opt callstack 0
  1720                           
  1721                           ; 2 bytes @ 0x17
  1722  000018                     	ds	2
  1723  00001A                     pad@w:
  1724                           	opt callstack 0
  1725                           
  1726                           ; 2 bytes @ 0x19
  1727  00001A                     	ds	1
  1728  00001B                     ?_map:
  1729                           	opt callstack 0
  1730  00001B                     UART_init@BAUD:
  1731                           	opt callstack 0
  1732  00001B                     map@x:
  1733                           	opt callstack 0
  1734                           
  1735                           ; 4 bytes @ 0x1A
  1736  00001B                     	ds	1
  1737  00001C                     ?_ctoa:
  1738                           	opt callstack 0
  1739  00001C                     ?_dtoa:
  1740                           	opt callstack 0
  1741  00001C                     ctoa@fp:
  1742                           	opt callstack 0
  1743  00001C                     dtoa@fp:
  1744                           	opt callstack 0
  1745                           
  1746                           ; 2 bytes @ 0x1B
  1747  00001C                     	ds	2
  1748  00001E                     ctoa@c:
  1749                           	opt callstack 0
  1750  00001E                     dtoa@d:
  1751                           	opt callstack 0
  1752                           
  1753                           ; 8 bytes @ 0x1D
  1754  00001E                     	ds	1
  1755  00001F                     ctoa@w:
  1756                           	opt callstack 0
  1757  00001F                     map@in_min:
  1758                           	opt callstack 0
  1759                           
  1760                           ; 4 bytes @ 0x1E
  1761  00001F                     	ds	4
  1762  000023                     map@in_max:
  1763                           	opt callstack 0
  1764  000023                     _UART_init$1795:
  1765                           	opt callstack 0
  1766                           
  1767                           ; 4 bytes @ 0x22
  1768  000023                     	ds	3
  1769  000026                     ??_dtoa:
  1770                           
  1771                           ; 1 bytes @ 0x25
  1772  000026                     	ds	1
  1773  000027                     map@out_min:
  1774                           	opt callstack 0
  1775                           
  1776                           ; 4 bytes @ 0x26
  1777  000027                     	ds	4
  1778  00002B                     map@out_max:
  1779                           	opt callstack 0
  1780                           
  1781                           ; 4 bytes @ 0x2A
  1782  00002B                     	ds	3
  1783  00002E                     _dtoa$1018:
  1784                           	opt callstack 0
  1785                           
  1786                           ; 2 bytes @ 0x2D
  1787  00002E                     	ds	1
  1788  00002F                     ??_lecturaAnalogaSensores:
  1789                           
  1790                           ; 1 bytes @ 0x2E
  1791  00002F                     	ds	1
  1792  000030                     lecturaAnalogaSensores@i:
  1793                           	opt callstack 0
  1794  000030                     dtoa@p:
  1795                           	opt callstack 0
  1796                           
  1797                           ; 2 bytes @ 0x2F
  1798  000030                     	ds	2
  1799  000032                     dtoa@w:
  1800                           	opt callstack 0
  1801                           
  1802                           ; 2 bytes @ 0x31
  1803  000032                     	ds	2
  1804  000034                     dtoa@s:
  1805                           	opt callstack 0
  1806                           
  1807                           ; 2 bytes @ 0x33
  1808  000034                     	ds	2
  1809  000036                     dtoa@n:
  1810                           	opt callstack 0
  1811                           
  1812                           ; 8 bytes @ 0x35
  1813  000036                     	ds	8
  1814  00003E                     dtoa@i:
  1815                           	opt callstack 0
  1816                           
  1817                           ; 2 bytes @ 0x3D
  1818  00003E                     	ds	2
  1819  000040                     ?_vfpfcnvrt:
  1820                           	opt callstack 0
  1821  000040                     vfpfcnvrt@fp:
  1822                           	opt callstack 0
  1823                           
  1824                           ; 2 bytes @ 0x3F
  1825  000040                     	ds	2
  1826  000042                     vfpfcnvrt@fmt:
  1827                           	opt callstack 0
  1828                           
  1829                           ; 2 bytes @ 0x41
  1830  000042                     	ds	2
  1831  000044                     vfpfcnvrt@ap:
  1832                           	opt callstack 0
  1833                           
  1834                           ; 2 bytes @ 0x43
  1835  000044                     	ds	2
  1836  000046                     ??_vfpfcnvrt:
  1837                           
  1838                           ; 1 bytes @ 0x45
  1839  000046                     	ds	2
  1840  000048                     vfpfcnvrt@ll:
  1841                           	opt callstack 0
  1842                           
  1843                           ; 8 bytes @ 0x47
  1844  000048                     	ds	8
  1845  000050                     vfpfcnvrt@c:
  1846                           	opt callstack 0
  1847                           
  1848                           ; 1 bytes @ 0x4F
  1849  000050                     	ds	1
  1850  000051                     ?_vfprintf:
  1851                           	opt callstack 0
  1852  000051                     vfprintf@fp:
  1853                           	opt callstack 0
  1854                           
  1855                           ; 2 bytes @ 0x50
  1856  000051                     	ds	2
  1857  000053                     vfprintf@fmt:
  1858                           	opt callstack 0
  1859                           
  1860                           ; 2 bytes @ 0x52
  1861  000053                     	ds	2
  1862  000055                     vfprintf@ap:
  1863                           	opt callstack 0
  1864                           
  1865                           ; 2 bytes @ 0x54
  1866  000055                     	ds	2
  1867  000057                     vfprintf@cfmt:
  1868                           	opt callstack 0
  1869                           
  1870                           ; 2 bytes @ 0x56
  1871  000057                     	ds	2
  1872  000059                     ??_dameDatosSistema:
  1873  000059                     ??_mostrarDatosSensores:
  1874  000059                     ??_lecturaWifi:
  1875                           
  1876                           ; 1 bytes @ 0x58
  1877  000059                     	ds	2
  1878  00005B                     ??_mostrarDatosSensoresWIFI:
  1879  00005B                     
  1880                           ; 1 bytes @ 0x5A
  1881  00005B                     	ds	1
  1882  00005C                     ??_sistemaPrincipal:
  1883                           
  1884                           ; 1 bytes @ 0x5B
  1885  00005C                     	ds	2
  1886  00005E                     sistemaPrincipal@opcion:
  1887                           	opt callstack 0
  1888                           
  1889                           ; 1 bytes @ 0x5D
  1890  00005E                     	ds	1
  1891  00005F                     
  1892                           ; 1 bytes @ 0x5E
  1893 ;;
  1894 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1895 ;;
  1896 ;; *************** function _main *****************
  1897 ;; Defined at:
  1898 ;;		line 794 in file "main.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;		None
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;		None
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1912 ;;      Params:         0       0       0       0       0       0       0       0       0
  1913 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1914 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1915 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1916 ;;Total ram usage:        0 bytes
  1917 ;; Hardware stack levels required when called:   12
  1918 ;; This function calls:
  1919 ;;		_UART_init
  1920 ;;		_configurarAdc
  1921 ;;		_i2c_iniciar
  1922 ;;		_inicializarObjetos
  1923 ;;		_leeHorariosMemoria
  1924 ;;		_mostrarMenu
  1925 ;;		_restablecerDatosSensor
  1926 ;;		_sistemaPrincipal
  1927 ;;		_sistemaRegado
  1928 ;; This function is called by:
  1929 ;;		Startup code after reset
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text0
  1934  001A08                     __ptext0:
  1935                           	opt callstack 0
  1936  001A08                     _main:
  1937                           	opt callstack 19
  1938  001A08                     
  1939                           ;main.c: 796:     INTCONbits.GIE = 1;
  1940  001A08  8EF2               	bsf	242,7,c	;volatile
  1941                           
  1942                           ;main.c: 797:     INTCONbits.PEIE = 1;
  1943  001A0A  8CF2               	bsf	242,6,c	;volatile
  1944                           
  1945                           ;main.c: 798:     INTCONbits.TMR0IE = 0;
  1946  001A0C  9AF2               	bcf	242,5,c	;volatile
  1947                           
  1948                           ;main.c: 799:     INTCONbits.TMR0IF = 0;
  1949  001A0E  94F2               	bcf	242,2,c	;volatile
  1950                           
  1951                           ;main.c: 800:     PIE1bits.RCIE = 1;
  1952  001A10  8A9D               	bsf	157,5,c	;volatile
  1953  001A12                     
  1954                           ;main.c: 802:     T0CON = 0b00000111;
  1955  001A12  0E07               	movlw	7
  1956  001A14  6ED5               	movwf	213,c	;volatile
  1957  001A16                     
  1958                           ;main.c: 804:     INTCONbits.TMR0IE = 1;
  1959  001A16  8AF2               	bsf	242,5,c	;volatile
  1960  001A18                     
  1961                           ;main.c: 809:     restablecerDatosSensor();
  1962  001A18  ECEF  F00F         	call	_restablecerDatosSensor	;wreg free
  1963  001A1C                     
  1964                           ;main.c: 811:     UART_init(9600);
  1965  001A1C  0E80               	movlw	128
  1966  001A1E  6E1B               	movwf	UART_init@BAUD^0,c
  1967  001A20  0E25               	movlw	37
  1968  001A22  6E1C               	movwf	(UART_init@BAUD+1)^0,c
  1969  001A24  0E00               	movlw	0
  1970  001A26  6E1D               	movwf	(UART_init@BAUD+2)^0,c
  1971  001A28  0E00               	movlw	0
  1972  001A2A  6E1E               	movwf	(UART_init@BAUD+3)^0,c
  1973  001A2C  ECDA  F00D         	call	_UART_init	;wreg free
  1974  001A30                     
  1975                           ;main.c: 812:     i2c_iniciar();
  1976  001A30  ECE0  F011         	call	_i2c_iniciar	;wreg free
  1977  001A34                     
  1978                           ;main.c: 813:     configurarAdc();
  1979  001A34  ECF6  F011         	call	_configurarAdc	;wreg free
  1980  001A38                     
  1981                           ;main.c: 814:     inicializarObjetos();
  1982  001A38  EC52  F00D         	call	_inicializarObjetos	;wreg free
  1983  001A3C                     
  1984                           ;main.c: 816:     leeHorariosMemoria();
  1985  001A3C  EC3B  F00B         	call	_leeHorariosMemoria	;wreg free
  1986  001A40                     
  1987                           ;main.c: 819:     TRISD = 0;
  1988  001A40  0E00               	movlw	0
  1989  001A42  6E95               	movwf	149,c	;volatile
  1990  001A44                     
  1991                           ;main.c: 820:     LATD = 0;
  1992  001A44  0E00               	movlw	0
  1993  001A46  6E8C               	movwf	140,c	;volatile
  1994  001A48                     
  1995                           ;main.c: 822:     TMR0 = VALOR_TIMER0;
  1996  001A48  C0FA  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  1997  001A4C  C0FB  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  1998  001A50                     
  1999                           ;main.c: 824:     INTCONbits.TMR0IF = 1;
  2000  001A50  84F2               	bsf	242,2,c	;volatile
  2001  001A52                     
  2002                           ;main.c: 826:     T0CONbits.TMR0ON = 1;
  2003  001A52  8ED5               	bsf	213,7,c	;volatile
  2004  001A54                     
  2005                           ;main.c: 828:     mostrarMenu();
  2006  001A54  ECAF  F00E         	call	_mostrarMenu	;wreg free
  2007  001A58                     
  2008                           ;main.c: 830:     MODO_COMUNICACION = 0;
  2009  001A58  0E00               	movlw	0
  2010  001A5A  0100               	movlb	0	; () banked
  2011  001A5C  6FF5               	movwf	_MODO_COMUNICACION& (0+255),b
  2012  001A5E                     l3728:
  2013                           
  2014                           ;main.c: 835:         if (datoRecibido) {
  2015  001A5E  0100               	movlb	0	; () banked
  2016  001A60  51F1               	movf	_datoRecibido& (0+255),w,b
  2017  001A62  B4D8               	btfsc	status,2,c
  2018  001A64  EF36  F00D         	goto	u2931
  2019  001A68  EF38  F00D         	goto	u2930
  2020  001A6C                     u2931:
  2021  001A6C  EF3F  F00D         	goto	l3736
  2022  001A70                     u2930:
  2023  001A70                     
  2024                           ; BSR set to: 0
  2025                           ;main.c: 837:             datoRecibido = 0;
  2026  001A70  0E00               	movlw	0
  2027  001A72  6FF1               	movwf	_datoRecibido& (0+255),b
  2028  001A74                     
  2029                           ; BSR set to: 0
  2030                           ;main.c: 838:             byteUart -= 48;
  2031  001A74  0E30               	movlw	48
  2032  001A76  5FF8               	subwf	_byteUart& (0+255),f,b
  2033  001A78                     
  2034                           ; BSR set to: 0
  2035                           ;main.c: 839:             sistemaPrincipal(byteUart);
  2036  001A78  51F8               	movf	_byteUart& (0+255),w,b
  2037  001A7A  ECB2  F00C         	call	_sistemaPrincipal
  2038  001A7E                     l3736:
  2039                           
  2040                           ;main.c: 843:         if (overflowTimer) {
  2041  001A7E  0100               	movlb	0	; () banked
  2042  001A80  51F0               	movf	_overflowTimer& (0+255),w,b
  2043  001A82  B4D8               	btfsc	status,2,c
  2044  001A84  EF46  F00D         	goto	u2941
  2045  001A88  EF48  F00D         	goto	u2940
  2046  001A8C                     u2941:
  2047  001A8C  EF2F  F00D         	goto	l3728
  2048  001A90                     u2940:
  2049  001A90                     
  2050                           ; BSR set to: 0
  2051                           ;main.c: 845:             esperandoDatos = 0;
  2052  001A90  0E00               	movlw	0
  2053  001A92  6FF6               	movwf	_esperandoDatos& (0+255),b
  2054                           
  2055                           ;main.c: 846:             overflowTimer = 0;
  2056  001A94  0E00               	movlw	0
  2057  001A96  6FF0               	movwf	_overflowTimer& (0+255),b
  2058  001A98                     
  2059                           ; BSR set to: 0
  2060                           ;main.c: 847:             sistemaRegado();
  2061  001A98  EC80  F007         	call	_sistemaRegado	;wreg free
  2062  001A9C  EF2F  F00D         	goto	l3728
  2063  001AA0  EF07  F000         	goto	start
  2064  001AA4                     __end_of_main:
  2065                           	opt callstack 0
  2066                           
  2067 ;; *************** function _sistemaRegado *****************
  2068 ;; Defined at:
  2069 ;;		line 628 in file "main.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;		None
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;		None
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      void 
  2076 ;; Registers used:
  2077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2083 ;;      Params:         0       0       0       0       0       0       0       0       0
  2084 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2085 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2086 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2087 ;;Total ram usage:        0 bytes
  2088 ;; Hardware stack levels used:    1
  2089 ;; Hardware stack levels required when called:   10
  2090 ;; This function calls:
  2091 ;;		_dameHoraActual
  2092 ;;		_encenderBombas
  2093 ;;		_horaRegar
  2094 ;;		_lecturaAnalogaSensores
  2095 ;;		_lecturaWifi
  2096 ;;		_mostrarMenu
  2097 ;; This function is called by:
  2098 ;;		_main
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text1
  2103  000F00                     __ptext1:
  2104                           	opt callstack 0
  2105  000F00                     _sistemaRegado:
  2106                           	opt callstack 20
  2107  000F00                     
  2108                           ;main.c: 632:     if (regando) {
  2109  000F00  0100               	movlb	0	; () banked
  2110  000F02  51ED               	movf	_regando& (0+255),w,b
  2111  000F04  B4D8               	btfsc	status,2,c
  2112  000F06  EF87  F007         	goto	u2781
  2113  000F0A  EF89  F007         	goto	u2780
  2114  000F0E                     u2781:
  2115  000F0E  EFAB  F007         	goto	l3634
  2116  000F12                     u2780:
  2117  000F12                     
  2118                           ; BSR set to: 0
  2119                           ;main.c: 633:         contInterrupciones++;
  2120  000F12  4BEA               	infsnz	_contInterrupciones& (0+255),f,b
  2121  000F14  2BEB               	incf	(_contInterrupciones+1)& (0+255),f,b
  2122  000F16                     
  2123                           ; BSR set to: 0
  2124                           ;main.c: 635:         if (contInterrupciones == 6) {
  2125  000F16  0E06               	movlw	6
  2126  000F18  19EA               	xorwf	_contInterrupciones& (0+255),w,b
  2127  000F1A  11EB               	iorwf	(_contInterrupciones+1)& (0+255),w,b
  2128  000F1C  A4D8               	btfss	status,2,c
  2129  000F1E  EF93  F007         	goto	u2791
  2130  000F22  EF95  F007         	goto	u2790
  2131  000F26                     u2791:
  2132  000F26  EF19  F008         	goto	l376
  2133  000F2A                     u2790:
  2134  000F2A                     
  2135                           ; BSR set to: 0
  2136                           ;main.c: 636:             contInterrupciones = 0;
  2137  000F2A  0E00               	movlw	0
  2138  000F2C  6FEB               	movwf	(_contInterrupciones+1)& (0+255),b
  2139  000F2E  0E00               	movlw	0
  2140  000F30  6FEA               	movwf	_contInterrupciones& (0+255),b
  2141  000F32                     
  2142                           ; BSR set to: 0
  2143                           ;main.c: 637:             minutosTranscurridos++;
  2144  000F32  2BEE               	incf	_minutosTranscurridos& (0+255),f,b
  2145  000F34                     
  2146                           ; BSR set to: 0
  2147                           ;main.c: 640:             if (minutosTranscurridos >= minutosRegar) {
  2148  000F34  51EF               	movf	_minutosRegar& (0+255),w,b
  2149  000F36  5DEE               	subwf	_minutosTranscurridos& (0+255),w,b
  2150  000F38  A0D8               	btfss	status,0,c
  2151  000F3A  EFA1  F007         	goto	u2801
  2152  000F3E  EFA3  F007         	goto	u2800
  2153  000F42                     u2801:
  2154  000F42  EF19  F008         	goto	l376
  2155  000F46                     u2800:
  2156  000F46                     
  2157                           ; BSR set to: 0
  2158                           ;main.c: 642:                 LATD = 0;
  2159  000F46  0E00               	movlw	0
  2160  000F48  6E8C               	movwf	140,c	;volatile
  2161                           
  2162                           ;main.c: 643:                 minutosTranscurridos = 0;
  2163  000F4A  0E00               	movlw	0
  2164  000F4C  6FEE               	movwf	_minutosTranscurridos& (0+255),b
  2165                           
  2166                           ;main.c: 644:                 regando = 0;
  2167  000F4E  0E00               	movlw	0
  2168  000F50  6FED               	movwf	_regando& (0+255),b
  2169  000F52  EF19  F008         	goto	l376
  2170  000F56                     l3634:
  2171                           
  2172                           ; BSR set to: 0
  2173                           ;main.c: 650:         dameHoraActual();
  2174  000F56  EC48  F011         	call	_dameHoraActual	;wreg free
  2175  000F5A                     
  2176                           ;main.c: 653:         if ((!MODO_COMUNICACION && (horaRegar() && !minutos)) || (MODO_COM
      +                          UNICACION
  2177  000F5A  0100               	movlb	0	; () banked
  2178  000F5C  51F5               	movf	_MODO_COMUNICACION& (0+255),w,b
  2179  000F5E  A4D8               	btfss	status,2,c
  2180  000F60  EFB4  F007         	goto	u2811
  2181  000F64  EFB6  F007         	goto	u2810
  2182  000F68                     u2811:
  2183  000F68  EFCA  F007         	goto	l3642
  2184  000F6C                     u2810:
  2185  000F6C                     
  2186                           ; BSR set to: 0
  2187  000F6C  EC32  F011         	call	_horaRegar	;wreg free
  2188  000F70  5001               	movf	?_horaRegar^0,w,c
  2189  000F72  1002               	iorwf	(?_horaRegar+1)^0,w,c
  2190  000F74  B4D8               	btfsc	status,2,c
  2191  000F76  EFBF  F007         	goto	u2821
  2192  000F7A  EFC1  F007         	goto	u2820
  2193  000F7E                     u2821:
  2194  000F7E  EFCA  F007         	goto	l3642
  2195  000F82                     u2820:
  2196  000F82  0100               	movlb	0	; () banked
  2197  000F84  51F3               	movf	_minutos& (0+255),w,b
  2198  000F86  B4D8               	btfsc	status,2,c
  2199  000F88  EFC8  F007         	goto	u2831
  2200  000F8C  EFCA  F007         	goto	u2830
  2201  000F90                     u2831:
  2202  000F90  EFE7  F007         	goto	l3648
  2203  000F94                     u2830:
  2204  000F94                     l3642:
  2205  000F94  0100               	movlb	0	; () banked
  2206  000F96  51F5               	movf	_MODO_COMUNICACION& (0+255),w,b
  2207  000F98  B4D8               	btfsc	status,2,c
  2208  000F9A  EFD1  F007         	goto	u2841
  2209  000F9E  EFD3  F007         	goto	u2840
  2210  000FA2                     u2841:
  2211  000FA2  EF19  F008         	goto	l376
  2212  000FA6                     u2840:
  2213  000FA6                     
  2214                           ; BSR set to: 0
  2215  000FA6  EC32  F011         	call	_horaRegar	;wreg free
  2216  000FAA  5001               	movf	?_horaRegar^0,w,c
  2217  000FAC  1002               	iorwf	(?_horaRegar+1)^0,w,c
  2218  000FAE  B4D8               	btfsc	status,2,c
  2219  000FB0  EFDC  F007         	goto	u2851
  2220  000FB4  EFDE  F007         	goto	u2850
  2221  000FB8                     u2851:
  2222  000FB8  EF19  F008         	goto	l376
  2223  000FBC                     u2850:
  2224  000FBC  0E03               	movlw	3
  2225  000FBE  0100               	movlb	0	; () banked
  2226  000FC0  61F3               	cpfslt	_minutos& (0+255),b
  2227  000FC2  EFE5  F007         	goto	u2861
  2228  000FC6  EFE7  F007         	goto	u2860
  2229  000FCA                     u2861:
  2230  000FCA  EF19  F008         	goto	l376
  2231  000FCE                     u2860:
  2232  000FCE                     l3648:
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;main.c: 654:                 && (horaRegar() && minutos < 3))) {;main.c: 658:          
      +                             if (MODO_COMUNICACION) {
  2236  000FCE  51F5               	movf	_MODO_COMUNICACION& (0+255),w,b
  2237  000FD0  B4D8               	btfsc	status,2,c
  2238  000FD2  EFED  F007         	goto	u2871
  2239  000FD6  EFEF  F007         	goto	u2870
  2240  000FDA                     u2871:
  2241  000FDA  EF0A  F008         	goto	l3660
  2242  000FDE                     u2870:
  2243  000FDE                     
  2244                           ; BSR set to: 0
  2245                           ;main.c: 659:                 lecturaWifi();
  2246  000FDE  ECA0  F004         	call	_lecturaWifi	;wreg free
  2247  000FE2                     
  2248                           ;main.c: 660:                 if (peticionLecturaSensores) {
  2249  000FE2  0100               	movlb	0	; () banked
  2250  000FE4  51EC               	movf	_peticionLecturaSensores& (0+255),w,b
  2251  000FE6  B4D8               	btfsc	status,2,c
  2252  000FE8  EFF8  F007         	goto	u2881
  2253  000FEC  EFFA  F007         	goto	u2880
  2254  000FF0                     u2881:
  2255  000FF0  EF06  F008         	goto	l3658
  2256  000FF4                     u2880:
  2257  000FF4                     
  2258                           ; BSR set to: 0
  2259                           ;main.c: 661:                     minutosRegar = horarios[hora].tiempoRegar;
  2260  000FF4  51F4               	movf	_hora& (0+255),w,b
  2261  000FF6  0D03               	mullw	3
  2262  000FF8  0E02               	movlw	low (_horarios+2)
  2263  000FFA  24F3               	addwf	243,w,c
  2264  000FFC  6ED9               	movwf	fsr2l,c
  2265  000FFE  0E01               	movlw	high (_horarios+2)
  2266  001000  20F4               	addwfc	prodh,w,c
  2267  001002  6EDA               	movwf	fsr2h,c
  2268  001004  50DF               	movf	indf2,w,c
  2269  001006  6FEF               	movwf	_minutosRegar& (0+255),b
  2270  001008                     
  2271                           ; BSR set to: 0
  2272                           ;main.c: 662:                     encenderBombas();
  2273  001008  EC7B  F001         	call	_encenderBombas	;wreg free
  2274  00100C                     l3658:
  2275                           
  2276                           ;main.c: 664:                 mostrarMenu();
  2277  00100C  ECAF  F00E         	call	_mostrarMenu	;wreg free
  2278                           
  2279                           ;main.c: 665:             } else {
  2280  001010  EF19  F008         	goto	l376
  2281  001014                     l3660:
  2282                           
  2283                           ; BSR set to: 0
  2284                           ;main.c: 666:                 lecturaAnalogaSensores();
  2285  001014  EC5C  F00C         	call	_lecturaAnalogaSensores	;wreg free
  2286  001018                     
  2287                           ;main.c: 667:                 minutosRegar = horarios[hora].tiempoRegar;
  2288  001018  0100               	movlb	0	; () banked
  2289  00101A  51F4               	movf	_hora& (0+255),w,b
  2290  00101C  0D03               	mullw	3
  2291  00101E  0E02               	movlw	low (_horarios+2)
  2292  001020  24F3               	addwf	243,w,c
  2293  001022  6ED9               	movwf	fsr2l,c
  2294  001024  0E01               	movlw	high (_horarios+2)
  2295  001026  20F4               	addwfc	prodh,w,c
  2296  001028  6EDA               	movwf	fsr2h,c
  2297  00102A  50DF               	movf	indf2,w,c
  2298  00102C  6FEF               	movwf	_minutosRegar& (0+255),b
  2299  00102E                     
  2300                           ; BSR set to: 0
  2301                           ;main.c: 668:                 encenderBombas();
  2302  00102E  EC7B  F001         	call	_encenderBombas	;wreg free
  2303  001032                     l376:
  2304  001032  0012               	return		;funcret
  2305  001034                     __end_of_sistemaRegado:
  2306                           	opt callstack 0
  2307                           
  2308 ;; *************** function _horaRegar *****************
  2309 ;; Defined at:
  2310 ;;		line 142 in file "main.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;		None
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;		None
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  2    0[COMRAM] int 
  2317 ;; Registers used:
  2318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2324 ;;      Params:         2       0       0       0       0       0       0       0       0
  2325 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2326 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2327 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2328 ;;Total ram usage:        3 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; Hardware stack levels required when called:    1
  2331 ;; This function calls:
  2332 ;;		Nothing
  2333 ;; This function is called by:
  2334 ;;		_sistemaRegado
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           	psect	text2
  2339  002264                     __ptext2:
  2340                           	opt callstack 0
  2341  002264                     _horaRegar:
  2342                           	opt callstack 28
  2343  002264                     
  2344                           ;main.c: 144:     return horarios[hora].regar == 1;
  2345  002264  0100               	movlb	0	; () banked
  2346  002266  51F4               	movf	_hora& (0+255),w,b
  2347  002268  0D03               	mullw	3
  2348  00226A  0E01               	movlw	low (_horarios+1)
  2349  00226C  24F3               	addwf	243,w,c
  2350  00226E  6ED9               	movwf	fsr2l,c
  2351  002270  0E01               	movlw	high (_horarios+1)
  2352  002272  20F4               	addwfc	prodh,w,c
  2353  002274  6EDA               	movwf	fsr2h,c
  2354  002276  04DE               	decf	postinc2,w,c
  2355  002278  B4D8               	btfsc	status,2,c
  2356  00227A  EF41  F011         	goto	u2361
  2357  00227E  EF44  F011         	goto	u2360
  2358  002282                     u2361:
  2359  002282  0E01               	movlw	1
  2360  002284  EF45  F011         	goto	u2370
  2361  002288                     u2360:
  2362  002288  0E00               	movlw	0
  2363  00228A                     u2370:
  2364  00228A  6E01               	movwf	?_horaRegar^0,c
  2365  00228C  6A02               	clrf	(?_horaRegar+1)^0,c
  2366  00228E                     
  2367                           ; BSR set to: 0
  2368  00228E  0012               	return		;funcret
  2369  002290                     __end_of_horaRegar:
  2370                           	opt callstack 0
  2371                           
  2372 ;; *************** function _encenderBombas *****************
  2373 ;; Defined at:
  2374 ;;		line 253 in file "main.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;		None
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  i               2   22[COMRAM] int 
  2379 ;;  flagSeco        1   21[COMRAM] unsigned char 
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      void 
  2382 ;; Registers used:
  2383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2389 ;;      Params:         0       0       0       0       0       0       0       0       0
  2390 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2391 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2392 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2393 ;;Total ram usage:        5 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    5
  2396 ;; This function calls:
  2397 ;;		_estaSeco
  2398 ;; This function is called by:
  2399 ;;		_sistemaRegado
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text3
  2404  0002F6                     __ptext3:
  2405                           	opt callstack 0
  2406  0002F6                     _encenderBombas:
  2407                           	opt callstack 24
  2408  0002F6                     
  2409                           ;main.c: 255:     char flagSeco = 0;
  2410  0002F6  0E00               	movlw	0
  2411  0002F8  6E16               	movwf	encenderBombas@flagSeco^0,c
  2412                           
  2413                           ;main.c: 257:     for (int i = 0; i < 3; i++) {
  2414  0002FA  0E00               	movlw	0
  2415  0002FC  6E18               	movwf	(encenderBombas@i+1)^0,c
  2416  0002FE  0E00               	movlw	0
  2417  000300  6E17               	movwf	encenderBombas@i^0,c
  2418  000302  EF5D  F002         	goto	l3266
  2419  000306                     l3216:
  2420                           
  2421                           ;main.c: 262:                 if (estaSeco(sensores[i])) {
  2422  000306  90D8               	bcf	status,0,c
  2423  000308  3417               	rlcf	encenderBombas@i^0,w,c
  2424  00030A  6ED9               	movwf	fsr2l,c
  2425  00030C  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  2426  00030E  6EDA               	movwf	fsr2h,c
  2427  000310  0E48               	movlw	low _sensores
  2428  000312  26D9               	addwf	fsr2l,f,c
  2429  000314  0E01               	movlw	high _sensores
  2430  000316  22DA               	addwfc	fsr2h,f,c
  2431  000318  CFDE F010          	movff	postinc2,estaSeco@s
  2432  00031C  CFDD F011          	movff	postdec2,estaSeco@s+1
  2433  000320  EC5D  F010         	call	_estaSeco	;wreg free
  2434  000324  5010               	movf	?_estaSeco^0,w,c
  2435  000326  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2436  000328  B4D8               	btfsc	status,2,c
  2437  00032A  EF99  F001         	goto	u2381
  2438  00032E  EF9B  F001         	goto	u2380
  2439  000332                     u2381:
  2440  000332  EF8B  F002         	goto	l3268
  2441  000336                     u2380:
  2442  000336                     
  2443                           ;main.c: 263:                     LATDbits.LATD0 = 1;
  2444  000336  808C               	bsf	140,0,c	;volatile
  2445  000338                     l3220:
  2446                           
  2447                           ;main.c: 264:                     flagSeco = 1;
  2448  000338  0E01               	movlw	1
  2449  00033A  6E16               	movwf	encenderBombas@flagSeco^0,c
  2450  00033C  EF8B  F002         	goto	l3268
  2451  000340                     l3222:
  2452                           
  2453                           ;main.c: 269:                 if (estaSeco(sensores[i])) {
  2454  000340  90D8               	bcf	status,0,c
  2455  000342  3417               	rlcf	encenderBombas@i^0,w,c
  2456  000344  6ED9               	movwf	fsr2l,c
  2457  000346  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  2458  000348  6EDA               	movwf	fsr2h,c
  2459  00034A  0E48               	movlw	low _sensores
  2460  00034C  26D9               	addwf	fsr2l,f,c
  2461  00034E  0E01               	movlw	high _sensores
  2462  000350  22DA               	addwfc	fsr2h,f,c
  2463  000352  CFDE F010          	movff	postinc2,estaSeco@s
  2464  000356  CFDD F011          	movff	postdec2,estaSeco@s+1
  2465  00035A  EC5D  F010         	call	_estaSeco	;wreg free
  2466  00035E  5010               	movf	?_estaSeco^0,w,c
  2467  000360  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2468  000362  B4D8               	btfsc	status,2,c
  2469  000364  EFB6  F001         	goto	u2391
  2470  000368  EFB8  F001         	goto	u2390
  2471  00036C                     u2391:
  2472  00036C  EF8B  F002         	goto	l3268
  2473  000370                     u2390:
  2474  000370                     
  2475                           ;main.c: 270:                     LATDbits.LATD1 = 1;
  2476  000370  828C               	bsf	140,1,c	;volatile
  2477  000372  EF9C  F001         	goto	l3220
  2478  000376                     l3228:
  2479                           
  2480                           ;main.c: 276:                 if (estaSeco(sensores[i])) {
  2481  000376  90D8               	bcf	status,0,c
  2482  000378  3417               	rlcf	encenderBombas@i^0,w,c
  2483  00037A  6ED9               	movwf	fsr2l,c
  2484  00037C  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  2485  00037E  6EDA               	movwf	fsr2h,c
  2486  000380  0E48               	movlw	low _sensores
  2487  000382  26D9               	addwf	fsr2l,f,c
  2488  000384  0E01               	movlw	high _sensores
  2489  000386  22DA               	addwfc	fsr2h,f,c
  2490  000388  CFDE F010          	movff	postinc2,estaSeco@s
  2491  00038C  CFDD F011          	movff	postdec2,estaSeco@s+1
  2492  000390  EC5D  F010         	call	_estaSeco	;wreg free
  2493  000394  5010               	movf	?_estaSeco^0,w,c
  2494  000396  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2495  000398  B4D8               	btfsc	status,2,c
  2496  00039A  EFD1  F001         	goto	u2401
  2497  00039E  EFD3  F001         	goto	u2400
  2498  0003A2                     u2401:
  2499  0003A2  EF8B  F002         	goto	l3268
  2500  0003A6                     u2400:
  2501  0003A6                     
  2502                           ;main.c: 277:                     LATDbits.LATD2 = 1;
  2503  0003A6  848C               	bsf	140,2,c	;volatile
  2504  0003A8  EF9C  F001         	goto	l3220
  2505  0003AC                     l3234:
  2506                           
  2507                           ;main.c: 283:                 if (estaSeco(sensores[i])) {
  2508  0003AC  90D8               	bcf	status,0,c
  2509  0003AE  3417               	rlcf	encenderBombas@i^0,w,c
  2510  0003B0  6ED9               	movwf	fsr2l,c
  2511  0003B2  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  2512  0003B4  6EDA               	movwf	fsr2h,c
  2513  0003B6  0E48               	movlw	low _sensores
  2514  0003B8  26D9               	addwf	fsr2l,f,c
  2515  0003BA  0E01               	movlw	high _sensores
  2516  0003BC  22DA               	addwfc	fsr2h,f,c
  2517  0003BE  CFDE F010          	movff	postinc2,estaSeco@s
  2518  0003C2  CFDD F011          	movff	postdec2,estaSeco@s+1
  2519  0003C6  EC5D  F010         	call	_estaSeco	;wreg free
  2520  0003CA  5010               	movf	?_estaSeco^0,w,c
  2521  0003CC  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2522  0003CE  B4D8               	btfsc	status,2,c
  2523  0003D0  EFEC  F001         	goto	u2411
  2524  0003D4  EFEE  F001         	goto	u2410
  2525  0003D8                     u2411:
  2526  0003D8  EF8B  F002         	goto	l3268
  2527  0003DC                     u2410:
  2528  0003DC                     
  2529                           ;main.c: 284:                     LATDbits.LATD3 = 1;
  2530  0003DC  868C               	bsf	140,3,c	;volatile
  2531  0003DE  EF9C  F001         	goto	l3220
  2532  0003E2                     l3240:
  2533                           
  2534                           ;main.c: 290:                 if (estaSeco(sensores[i])) {
  2535  0003E2  90D8               	bcf	status,0,c
  2536  0003E4  3417               	rlcf	encenderBombas@i^0,w,c
  2537  0003E6  6ED9               	movwf	fsr2l,c
  2538  0003E8  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  2539  0003EA  6EDA               	movwf	fsr2h,c
  2540  0003EC  0E48               	movlw	low _sensores
  2541  0003EE  26D9               	addwf	fsr2l,f,c
  2542  0003F0  0E01               	movlw	high _sensores
  2543  0003F2  22DA               	addwfc	fsr2h,f,c
  2544  0003F4  CFDE F010          	movff	postinc2,estaSeco@s
  2545  0003F8  CFDD F011          	movff	postdec2,estaSeco@s+1
  2546  0003FC  EC5D  F010         	call	_estaSeco	;wreg free
  2547  000400  5010               	movf	?_estaSeco^0,w,c
  2548  000402  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2549  000404  B4D8               	btfsc	status,2,c
  2550  000406  EF07  F002         	goto	u2421
  2551  00040A  EF09  F002         	goto	u2420
  2552  00040E                     u2421:
  2553  00040E  EF8B  F002         	goto	l3268
  2554  000412                     u2420:
  2555  000412                     
  2556                           ;main.c: 291:                     LATDbits.LATD4 = 1;
  2557  000412  888C               	bsf	140,4,c	;volatile
  2558  000414  EF9C  F001         	goto	l3220
  2559  000418                     l3246:
  2560                           
  2561                           ;main.c: 297:                 if (estaSeco(sensores[i])) {
  2562  000418  90D8               	bcf	status,0,c
  2563  00041A  3417               	rlcf	encenderBombas@i^0,w,c
  2564  00041C  6ED9               	movwf	fsr2l,c
  2565  00041E  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  2566  000420  6EDA               	movwf	fsr2h,c
  2567  000422  0E48               	movlw	low _sensores
  2568  000424  26D9               	addwf	fsr2l,f,c
  2569  000426  0E01               	movlw	high _sensores
  2570  000428  22DA               	addwfc	fsr2h,f,c
  2571  00042A  CFDE F010          	movff	postinc2,estaSeco@s
  2572  00042E  CFDD F011          	movff	postdec2,estaSeco@s+1
  2573  000432  EC5D  F010         	call	_estaSeco	;wreg free
  2574  000436  5010               	movf	?_estaSeco^0,w,c
  2575  000438  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2576  00043A  B4D8               	btfsc	status,2,c
  2577  00043C  EF22  F002         	goto	u2431
  2578  000440  EF24  F002         	goto	u2430
  2579  000444                     u2431:
  2580  000444  EF8B  F002         	goto	l3268
  2581  000448                     u2430:
  2582  000448                     
  2583                           ;main.c: 298:                     LATDbits.LATD5 = 1;
  2584  000448  8A8C               	bsf	140,5,c	;volatile
  2585  00044A  EF9C  F001         	goto	l3220
  2586  00044E                     l3252:
  2587                           
  2588                           ;main.c: 304:                 if (estaSeco(sensores[i])) {
  2589  00044E  90D8               	bcf	status,0,c
  2590  000450  3417               	rlcf	encenderBombas@i^0,w,c
  2591  000452  6ED9               	movwf	fsr2l,c
  2592  000454  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  2593  000456  6EDA               	movwf	fsr2h,c
  2594  000458  0E48               	movlw	low _sensores
  2595  00045A  26D9               	addwf	fsr2l,f,c
  2596  00045C  0E01               	movlw	high _sensores
  2597  00045E  22DA               	addwfc	fsr2h,f,c
  2598  000460  CFDE F010          	movff	postinc2,estaSeco@s
  2599  000464  CFDD F011          	movff	postdec2,estaSeco@s+1
  2600  000468  EC5D  F010         	call	_estaSeco	;wreg free
  2601  00046C  5010               	movf	?_estaSeco^0,w,c
  2602  00046E  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2603  000470  B4D8               	btfsc	status,2,c
  2604  000472  EF3D  F002         	goto	u2441
  2605  000476  EF3F  F002         	goto	u2440
  2606  00047A                     u2441:
  2607  00047A  EF8B  F002         	goto	l3268
  2608  00047E                     u2440:
  2609  00047E                     
  2610                           ;main.c: 305:                     LATDbits.LATD6 = 1;
  2611  00047E  8C8C               	bsf	140,6,c	;volatile
  2612  000480  EF9C  F001         	goto	l3220
  2613  000484                     l3258:
  2614                           
  2615                           ;main.c: 311:                 if (estaSeco(sensores[i])) {
  2616  000484  90D8               	bcf	status,0,c
  2617  000486  3417               	rlcf	encenderBombas@i^0,w,c
  2618  000488  6ED9               	movwf	fsr2l,c
  2619  00048A  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  2620  00048C  6EDA               	movwf	fsr2h,c
  2621  00048E  0E48               	movlw	low _sensores
  2622  000490  26D9               	addwf	fsr2l,f,c
  2623  000492  0E01               	movlw	high _sensores
  2624  000494  22DA               	addwfc	fsr2h,f,c
  2625  000496  CFDE F010          	movff	postinc2,estaSeco@s
  2626  00049A  CFDD F011          	movff	postdec2,estaSeco@s+1
  2627  00049E  EC5D  F010         	call	_estaSeco	;wreg free
  2628  0004A2  5010               	movf	?_estaSeco^0,w,c
  2629  0004A4  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2630  0004A6  B4D8               	btfsc	status,2,c
  2631  0004A8  EF58  F002         	goto	u2451
  2632  0004AC  EF5A  F002         	goto	u2450
  2633  0004B0                     u2451:
  2634  0004B0  EF8B  F002         	goto	l3268
  2635  0004B4                     u2450:
  2636  0004B4                     
  2637                           ;main.c: 312:                     LATDbits.LATD7 = 1;
  2638  0004B4  8E8C               	bsf	140,7,c	;volatile
  2639  0004B6  EF9C  F001         	goto	l3220
  2640  0004BA                     l3266:
  2641  0004BA  C017  F014         	movff	encenderBombas@i,??_encenderBombas
  2642  0004BE  C018  F015         	movff	encenderBombas@i+1,??_encenderBombas+1
  2643                           
  2644                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2645                           ; Switch size 1, requested type "simple"
  2646                           ; Number of cases is 1, Range of values is 0 to 0
  2647                           ; switch strategies available:
  2648                           ; Name         Instructions Cycles
  2649                           ; simple_byte            4     3 (average)
  2650                           ;	Chosen strategy is simple_byte
  2651  0004C2  5015               	movf	(??_encenderBombas+1)^0,w,c
  2652  0004C4  0A00               	xorlw	0	; case 0
  2653  0004C6  B4D8               	btfsc	status,2,c
  2654  0004C8  EF68  F002         	goto	l3812
  2655  0004CC  EF8B  F002         	goto	l3268
  2656  0004D0                     l3812:
  2657                           
  2658                           ; Switch size 1, requested type "simple"
  2659                           ; Number of cases is 8, Range of values is 0 to 7
  2660                           ; switch strategies available:
  2661                           ; Name         Instructions Cycles
  2662                           ; simple_byte           25    13 (average)
  2663                           ;	Chosen strategy is simple_byte
  2664  0004D0  5014               	movf	??_encenderBombas^0,w,c
  2665  0004D2  0A00               	xorlw	0	; case 0
  2666  0004D4  B4D8               	btfsc	status,2,c
  2667  0004D6  EF83  F001         	goto	l3216
  2668  0004DA  0A01               	xorlw	1	; case 1
  2669  0004DC  B4D8               	btfsc	status,2,c
  2670  0004DE  EFA0  F001         	goto	l3222
  2671  0004E2  0A03               	xorlw	3	; case 2
  2672  0004E4  B4D8               	btfsc	status,2,c
  2673  0004E6  EFBB  F001         	goto	l3228
  2674  0004EA  0A01               	xorlw	1	; case 3
  2675  0004EC  B4D8               	btfsc	status,2,c
  2676  0004EE  EFD6  F001         	goto	l3234
  2677  0004F2  0A07               	xorlw	7	; case 4
  2678  0004F4  B4D8               	btfsc	status,2,c
  2679  0004F6  EFF1  F001         	goto	l3240
  2680  0004FA  0A01               	xorlw	1	; case 5
  2681  0004FC  B4D8               	btfsc	status,2,c
  2682  0004FE  EF0C  F002         	goto	l3246
  2683  000502  0A03               	xorlw	3	; case 6
  2684  000504  B4D8               	btfsc	status,2,c
  2685  000506  EF27  F002         	goto	l3252
  2686  00050A  0A01               	xorlw	1	; case 7
  2687  00050C  B4D8               	btfsc	status,2,c
  2688  00050E  EF42  F002         	goto	l3258
  2689  000512  EF8B  F002         	goto	l3268
  2690  000516                     l3268:
  2691                           
  2692                           ;main.c: 318:     }
  2693  000516  4A17               	infsnz	encenderBombas@i^0,f,c
  2694  000518  2A18               	incf	(encenderBombas@i+1)^0,f,c
  2695  00051A  BE18               	btfsc	(encenderBombas@i+1)^0,7,c
  2696  00051C  EF99  F002         	goto	u2461
  2697  000520  5018               	movf	(encenderBombas@i+1)^0,w,c
  2698  000522  E109               	bnz	u2460
  2699  000524  0E03               	movlw	3
  2700  000526  5C17               	subwf	encenderBombas@i^0,w,c
  2701  000528  A0D8               	btfss	status,0,c
  2702  00052A  EF99  F002         	goto	u2461
  2703  00052E  EF9B  F002         	goto	u2460
  2704  000532                     u2461:
  2705  000532  EF5D  F002         	goto	l3266
  2706  000536                     u2460:
  2707  000536                     
  2708                           ;main.c: 320:     if (flagSeco)
  2709  000536  5016               	movf	encenderBombas@flagSeco^0,w,c
  2710  000538  B4D8               	btfsc	status,2,c
  2711  00053A  EFA1  F002         	goto	u2471
  2712  00053E  EFA3  F002         	goto	u2470
  2713  000542                     u2471:
  2714  000542  EFA6  F002         	goto	l275
  2715  000546                     u2470:
  2716  000546                     
  2717                           ;main.c: 321:         regando = 1;
  2718  000546  0E01               	movlw	1
  2719  000548  0100               	movlb	0	; () banked
  2720  00054A  6FED               	movwf	_regando& (0+255),b
  2721  00054C                     l275:
  2722  00054C  0012               	return		;funcret
  2723  00054E                     __end_of_encenderBombas:
  2724                           	opt callstack 0
  2725                           
  2726 ;; *************** function _estaSeco *****************
  2727 ;; Defined at:
  2728 ;;		line 133 in file "main.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;  s               2   15[COMRAM] struct .
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;  temperatura     1   18[COMRAM] unsigned char 
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  2   15[COMRAM] int 
  2735 ;; Registers used:
  2736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2742 ;;      Params:         2       0       0       0       0       0       0       0       0
  2743 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2745 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2746 ;;Total ram usage:        4 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; Hardware stack levels required when called:    4
  2749 ;; This function calls:
  2750 ;;		_dameTemperaturaHumedad
  2751 ;; This function is called by:
  2752 ;;		_encenderBombas
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text4
  2757  0020BA                     __ptext4:
  2758                           	opt callstack 0
  2759  0020BA                     _estaSeco:
  2760                           	opt callstack 24
  2761  0020BA                     
  2762                           ;main.c: 134:     unsigned char temperatura;;main.c: 136:     dameTemperaturaHumedad(((v
      +                          oid*)0), &temperatura);
  2763  0020BA  0E00               	movlw	0
  2764  0020BC  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  2765  0020BE  0E00               	movlw	0
  2766  0020C0  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  2767  0020C2  0E13               	movlw	low estaSeco@temperatura
  2768  0020C4  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  2769  0020C6  0E00               	movlw	high estaSeco@temperatura
  2770  0020C8  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  2771  0020CA  EC02  F00C         	call	_dameTemperaturaHumedad	;wreg free
  2772  0020CE                     
  2773                           ;main.c: 139:     return (s.porcientoHumedad < 94) && (temperatura < 34);
  2774  0020CE  0E00               	movlw	0
  2775  0020D0  6E12               	movwf	_estaSeco$777^0,c
  2776  0020D2  0E5E               	movlw	94
  2777  0020D4  6010               	cpfslt	estaSeco@s^0,c
  2778  0020D6  EF6F  F010         	goto	u2211
  2779  0020DA  EF71  F010         	goto	u2210
  2780  0020DE                     u2211:
  2781  0020DE  EF7B  F010         	goto	l3050
  2782  0020E2                     u2210:
  2783  0020E2  0E22               	movlw	34
  2784  0020E4  6013               	cpfslt	estaSeco@temperatura^0,c
  2785  0020E6  EF77  F010         	goto	u2221
  2786  0020EA  EF79  F010         	goto	u2220
  2787  0020EE                     u2221:
  2788  0020EE  EF7B  F010         	goto	l3050
  2789  0020F2                     u2220:
  2790  0020F2  0E01               	movlw	1
  2791  0020F4  6E12               	movwf	_estaSeco$777^0,c
  2792  0020F6                     l3050:
  2793  0020F6  C012  F010         	movff	_estaSeco$777,?_estaSeco
  2794  0020FA  6A11               	clrf	(?_estaSeco+1)^0,c
  2795  0020FC  0012               	return		;funcret
  2796  0020FE                     __end_of_estaSeco:
  2797                           	opt callstack 0
  2798                           
  2799 ;; *************** function _dameHoraActual *****************
  2800 ;; Defined at:
  2801 ;;		line 157 in file "main.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;		None
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;		None
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      void 
  2808 ;; Registers used:
  2809 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2815 ;;      Params:         0       0       0       0       0       0       0       0       0
  2816 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2817 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2818 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2819 ;;Total ram usage:        0 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:    4
  2822 ;; This function calls:
  2823 ;;		_convertirDato
  2824 ;;		_leer_rtc
  2825 ;; This function is called by:
  2826 ;;		_sistemaRegado
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           	psect	text5
  2831  002290                     __ptext5:
  2832                           	opt callstack 0
  2833  002290                     _dameHoraActual:
  2834                           	opt callstack 25
  2835  002290                     
  2836                           ;main.c: 159:     segundos = convertirDato(leer_rtc(0x00));
  2837  002290  0E00               	movlw	0
  2838  002292  EC5E  F011         	call	_leer_rtc
  2839  002296  EC99  F011         	call	_convertirDato
  2840  00229A  0100               	movlb	0	; () banked
  2841  00229C  6FF2               	movwf	_segundos& (0+255),b
  2842                           
  2843                           ;main.c: 160:     minutos = convertirDato(leer_rtc(0x01));
  2844  00229E  0E01               	movlw	1
  2845  0022A0  EC5E  F011         	call	_leer_rtc
  2846  0022A4  EC99  F011         	call	_convertirDato
  2847  0022A8  0100               	movlb	0	; () banked
  2848  0022AA  6FF3               	movwf	_minutos& (0+255),b
  2849                           
  2850                           ;main.c: 161:     hora = convertirDato(leer_rtc(0x02));
  2851  0022AC  0E02               	movlw	2
  2852  0022AE  EC5E  F011         	call	_leer_rtc
  2853  0022B2  EC99  F011         	call	_convertirDato
  2854  0022B6  0100               	movlb	0	; () banked
  2855  0022B8  6FF4               	movwf	_hora& (0+255),b
  2856  0022BA                     
  2857                           ; BSR set to: 0
  2858  0022BA  0012               	return		;funcret
  2859  0022BC                     __end_of_dameHoraActual:
  2860                           	opt callstack 0
  2861                           
  2862 ;; *************** function _leer_rtc *****************
  2863 ;; Defined at:
  2864 ;;		line 13 in file "./RTC.h"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  direccion       1    wreg     unsigned char 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  direccion       1    2[COMRAM] unsigned char 
  2869 ;;  dato            1    3[COMRAM] unsigned char 
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  1    wreg      unsigned char 
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2879 ;;      Params:         0       0       0       0       0       0       0       0       0
  2880 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2882 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2883 ;;Total ram usage:        2 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; Hardware stack levels required when called:    3
  2886 ;; This function calls:
  2887 ;;		_i2c_detener
  2888 ;;		_i2c_envia_dato
  2889 ;;		_i2c_inicia_com
  2890 ;;		_i2c_recibe_dato
  2891 ;;		_i2c_reinicia_com
  2892 ;; This function is called by:
  2893 ;;		_dameHoraActual
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text6
  2898  0022BC                     __ptext6:
  2899                           	opt callstack 0
  2900  0022BC                     _leer_rtc:
  2901                           	opt callstack 25
  2902                           
  2903                           ; BSR set to: 0
  2904                           ;incstack = 0
  2905                           ;leer_rtc@direccion stored from wreg
  2906  0022BC  6E03               	movwf	leer_rtc@direccion^0,c
  2907  0022BE                     
  2908                           ;./RTC.h: 14:     unsigned char dato;;./RTC.h: 15:     i2c_inicia_com();
  2909  0022BE  ECFF  F011         	call	_i2c_inicia_com	;wreg free
  2910                           
  2911                           ;./RTC.h: 16:     i2c_envia_dato(0xD0);
  2912  0022C2  0ED0               	movlw	208
  2913  0022C4  ECEB  F011         	call	_i2c_envia_dato
  2914                           
  2915                           ;./RTC.h: 17:     i2c_envia_dato(direccion);
  2916  0022C8  5003               	movf	leer_rtc@direccion^0,w,c
  2917  0022CA  ECEB  F011         	call	_i2c_envia_dato
  2918                           
  2919                           ;./RTC.h: 18:     i2c_reinicia_com();
  2920  0022CE  ECFB  F011         	call	_i2c_reinicia_com	;wreg free
  2921                           
  2922                           ;./RTC.h: 19:     i2c_envia_dato(0xD1);
  2923  0022D2  0ED1               	movlw	209
  2924  0022D4  ECEB  F011         	call	_i2c_envia_dato
  2925                           
  2926                           ;./RTC.h: 20:     dato = i2c_recibe_dato();
  2927  0022D8  ECC8  F011         	call	_i2c_recibe_dato	;wreg free
  2928  0022DC  6E04               	movwf	leer_rtc@dato^0,c
  2929                           
  2930                           ;./RTC.h: 21:     i2c_detener();
  2931  0022DE  EC03  F012         	call	_i2c_detener	;wreg free
  2932  0022E2                     
  2933                           ;./RTC.h: 22:     return dato;
  2934  0022E2  5004               	movf	leer_rtc@dato^0,w,c
  2935  0022E4  0012               	return		;funcret
  2936  0022E6                     __end_of_leer_rtc:
  2937                           	opt callstack 0
  2938                           
  2939 ;; *************** function _convertirDato *****************
  2940 ;; Defined at:
  2941 ;;		line 28 in file "./RTC.h"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  dato            1    wreg     unsigned char 
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;  dato            1    1[COMRAM] unsigned char 
  2946 ;;  datoR           1    2[COMRAM] unsigned char 
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  1    wreg      unsigned char 
  2949 ;; Registers used:
  2950 ;;		wreg, status,2, status,0, prodl, prodh
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2956 ;;      Params:         0       0       0       0       0       0       0       0       0
  2957 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2958 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2959 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2960 ;;Total ram usage:        3 bytes
  2961 ;; Hardware stack levels used:    1
  2962 ;; Hardware stack levels required when called:    1
  2963 ;; This function calls:
  2964 ;;		Nothing
  2965 ;; This function is called by:
  2966 ;;		_dameHoraActual
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970                           	psect	text7
  2971  002332                     __ptext7:
  2972                           	opt callstack 0
  2973  002332                     _convertirDato:
  2974                           	opt callstack 27
  2975                           
  2976                           ;incstack = 0
  2977                           ;convertirDato@dato stored from wreg
  2978  002332  6E02               	movwf	convertirDato@dato^0,c
  2979  002334                     
  2980                           ;./RTC.h: 30:     datoR = (dato & 0xF0) >> 4;
  2981  002334  3802               	swapf	convertirDato@dato^0,w,c
  2982  002336  0B0F               	andlw	15
  2983  002338  0B0F               	andlw	15
  2984  00233A  6E03               	movwf	convertirDato@datoR^0,c
  2985  00233C                     
  2986                           ;./RTC.h: 31:     datoR = (datoR * 10) + (dato & 0x0F);
  2987  00233C  C002  F001         	movff	convertirDato@dato,??_convertirDato
  2988  002340  0E0F               	movlw	15
  2989  002342  1601               	andwf	??_convertirDato^0,f,c
  2990  002344  5003               	movf	convertirDato@datoR^0,w,c
  2991  002346  0D0A               	mullw	10
  2992  002348  50F3               	movf	243,w,c
  2993  00234A  2401               	addwf	??_convertirDato^0,w,c
  2994  00234C  6E03               	movwf	convertirDato@datoR^0,c
  2995  00234E                     
  2996                           ;./RTC.h: 32:     return datoR;
  2997  00234E  5003               	movf	convertirDato@datoR^0,w,c
  2998  002350  0012               	return		;funcret
  2999  002352                     __end_of_convertirDato:
  3000                           	opt callstack 0
  3001                           
  3002 ;; *************** function _sistemaPrincipal *****************
  3003 ;; Defined at:
  3004 ;;		line 588 in file "main.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;  opcion          1    wreg     unsigned char 
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;  opcion          1   93[COMRAM] unsigned char 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  1    wreg      void 
  3011 ;; Registers used:
  3012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3018 ;;      Params:         0       0       0       0       0       0       0       0       0
  3019 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3020 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3021 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3022 ;;Total ram usage:        3 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; Hardware stack levels required when called:   11
  3025 ;; This function calls:
  3026 ;;		_UART_printf
  3027 ;;		_asignarHorarios
  3028 ;;		_dameDatosSistema
  3029 ;;		_fijaHoraRtc
  3030 ;;		_mostrarDatosSensores
  3031 ;;		_mostrarDatosSensoresWIFI
  3032 ;;		_mostrarMenu
  3033 ;;		_setTiempoRegar
  3034 ;; This function is called by:
  3035 ;;		_main
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           	psect	text8
  3040  001964                     __ptext8:
  3041                           	opt callstack 0
  3042  001964                     _sistemaPrincipal:
  3043                           	opt callstack 19
  3044                           
  3045                           ;incstack = 0
  3046                           ;sistemaPrincipal@opcion stored from wreg
  3047  001964  6E5E               	movwf	sistemaPrincipal@opcion^0,c
  3048  001966                     
  3049                           ;main.c: 590:     PIE1bits.RCIE = 0;
  3050  001966  9A9D               	bcf	157,5,c	;volatile
  3051                           
  3052                           ;main.c: 592:     switch (opcion) {
  3053  001968  EFDF  F00C         	goto	l3610
  3054  00196C                     l3592:
  3055                           
  3056                           ;main.c: 595:             fijaHoraRtc();
  3057  00196C  EC12  F00E         	call	_fijaHoraRtc	;wreg free
  3058                           
  3059                           ;main.c: 596:             break;
  3060  001970  EF00  F00D         	goto	l3612
  3061  001974                     l3594:
  3062                           
  3063                           ;main.c: 599:             asignarHorarios();
  3064  001974  ECDA  F006         	call	_asignarHorarios	;wreg free
  3065                           
  3066                           ;main.c: 600:             break;
  3067  001978  EF00  F00D         	goto	l3612
  3068  00197C                     l3596:
  3069                           
  3070                           ;main.c: 603:             setTiempoRegar();
  3071  00197C  ECBA  F003         	call	_setTiempoRegar	;wreg free
  3072                           
  3073                           ;main.c: 604:             break;
  3074  001980  EF00  F00D         	goto	l3612
  3075  001984                     l3598:
  3076                           
  3077                           ;main.c: 607:             dameDatosSistema();
  3078  001984  EC96  F009         	call	_dameDatosSistema	;wreg free
  3079                           
  3080                           ;main.c: 608:             break;
  3081  001988  EF00  F00D         	goto	l3612
  3082  00198C                     l3600:
  3083                           
  3084                           ;main.c: 611:             if (MODO_COMUNICACION)
  3085  00198C  0100               	movlb	0	; () banked
  3086  00198E  51F5               	movf	_MODO_COMUNICACION& (0+255),w,b
  3087  001990  B4D8               	btfsc	status,2,c
  3088  001992  EFCD  F00C         	goto	u2771
  3089  001996  EFCF  F00C         	goto	u2770
  3090  00199A                     u2771:
  3091  00199A  EFD3  F00C         	goto	l3604
  3092  00199E                     u2770:
  3093  00199E                     
  3094                           ; BSR set to: 0
  3095                           ;main.c: 612:                 mostrarDatosSensoresWIFI();
  3096  00199E  ECA0  F008         	call	_mostrarDatosSensoresWIFI	;wreg free
  3097  0019A2  EF00  F00D         	goto	l3612
  3098  0019A6                     l3604:
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;main.c: 614:                 mostrarDatosSensores();
  3102  0019A6  EC1F  F009         	call	_mostrarDatosSensores	;wreg free
  3103  0019AA  EF00  F00D         	goto	l3612
  3104  0019AE                     l3606:
  3105                           
  3106                           ;main.c: 619:             UART_printf("\r\n Solo se permiten numeros del 1 al 3 \r\n");
  3107  0019AE  0E9B               	movlw	low STR_24
  3108  0019B0  6E02               	movwf	UART_printf@cadena^0,c
  3109  0019B2  0E7D               	movlw	high STR_24
  3110  0019B4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3111  0019B6  EC11  F00F         	call	_UART_printf	;wreg free
  3112                           
  3113                           ;main.c: 620:             break;
  3114  0019BA  EF00  F00D         	goto	l3612
  3115  0019BE                     l3610:
  3116  0019BE  505E               	movf	sistemaPrincipal@opcion^0,w,c
  3117  0019C0  6E5C               	movwf	??_sistemaPrincipal^0,c
  3118  0019C2  6A5D               	clrf	(??_sistemaPrincipal+1)^0,c
  3119                           
  3120                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3121                           ; Switch size 1, requested type "simple"
  3122                           ; Number of cases is 1, Range of values is 0 to 0
  3123                           ; switch strategies available:
  3124                           ; Name         Instructions Cycles
  3125                           ; simple_byte            4     3 (average)
  3126                           ;	Chosen strategy is simple_byte
  3127  0019C4  505D               	movf	(??_sistemaPrincipal+1)^0,w,c
  3128  0019C6  0A00               	xorlw	0	; case 0
  3129  0019C8  B4D8               	btfsc	status,2,c
  3130  0019CA  EFE9  F00C         	goto	l3814
  3131  0019CE  EFD7  F00C         	goto	l3606
  3132  0019D2                     l3814:
  3133                           
  3134                           ; Switch size 1, requested type "simple"
  3135                           ; Number of cases is 5, Range of values is 1 to 5
  3136                           ; switch strategies available:
  3137                           ; Name         Instructions Cycles
  3138                           ; simple_byte           16     9 (average)
  3139                           ;	Chosen strategy is simple_byte
  3140  0019D2  505C               	movf	??_sistemaPrincipal^0,w,c
  3141  0019D4  0A01               	xorlw	1	; case 1
  3142  0019D6  B4D8               	btfsc	status,2,c
  3143  0019D8  EFB6  F00C         	goto	l3592
  3144  0019DC  0A03               	xorlw	3	; case 2
  3145  0019DE  B4D8               	btfsc	status,2,c
  3146  0019E0  EFBA  F00C         	goto	l3594
  3147  0019E4  0A01               	xorlw	1	; case 3
  3148  0019E6  B4D8               	btfsc	status,2,c
  3149  0019E8  EFBE  F00C         	goto	l3596
  3150  0019EC  0A07               	xorlw	7	; case 4
  3151  0019EE  B4D8               	btfsc	status,2,c
  3152  0019F0  EFC2  F00C         	goto	l3598
  3153  0019F4  0A01               	xorlw	1	; case 5
  3154  0019F6  B4D8               	btfsc	status,2,c
  3155  0019F8  EFC6  F00C         	goto	l3600
  3156  0019FC  EFD7  F00C         	goto	l3606
  3157  001A00                     l3612:
  3158                           
  3159                           ;main.c: 623:     mostrarMenu();
  3160  001A00  ECAF  F00E         	call	_mostrarMenu	;wreg free
  3161  001A04                     
  3162                           ;main.c: 624:     PIE1bits.RCIE = 1;
  3163  001A04  8A9D               	bsf	157,5,c	;volatile
  3164  001A06  0012               	return		;funcret
  3165  001A08                     __end_of_sistemaPrincipal:
  3166                           	opt callstack 0
  3167                           
  3168 ;; *************** function _setTiempoRegar *****************
  3169 ;; Defined at:
  3170 ;;		line 405 in file "main.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;		None
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;  i               2   18[COMRAM] int 
  3175 ;;  i               2   16[COMRAM] int 
  3176 ;;  Rx              1   21[COMRAM] unsigned char 
  3177 ;;  datoCapturad    1   20[COMRAM] unsigned char 
  3178 ;;  hora            1   15[COMRAM] unsigned char 
  3179 ;;  tiempoRegar     1   14[COMRAM] unsigned char 
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      void 
  3182 ;; Registers used:
  3183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3189 ;;      Params:         0       0       0       0       0       0       0       0       0
  3190 ;;      Locals:         8       0       0       0       0       0       0       0       0
  3191 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3192 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3193 ;;Total ram usage:        8 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; Hardware stack levels required when called:    5
  3196 ;; This function calls:
  3197 ;;		_UART_printf
  3198 ;;		_UART_read
  3199 ;;		_UART_write
  3200 ;;		_escribeHorariosMemoria
  3201 ;; This function is called by:
  3202 ;;		_sistemaPrincipal
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           	psect	text9
  3207  000774                     __ptext9:
  3208                           	opt callstack 0
  3209  000774                     _setTiempoRegar:
  3210                           	opt callstack 24
  3211  000774                     
  3212                           ;main.c: 407:     unsigned char hora;;main.c: 408:     unsigned char tiempoRegar;;main.c
      +                          : 409:     unsigned char Rx;;main.c: 410:     char datoCapturado = 0;
  3213  000774  0E00               	movlw	0
  3214  000776  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3215  000778                     
  3216                           ;main.c: 412:     UART_printf("\r\n TIEMPO DE REGADO \r\n");
  3217  000778  0EA4               	movlw	low STR_9
  3218  00077A  6E02               	movwf	UART_printf@cadena^0,c
  3219  00077C  0E7F               	movlw	high STR_9
  3220  00077E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3221  000780  EC11  F00F         	call	_UART_printf	;wreg free
  3222  000784                     
  3223                           ;main.c: 413:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  3224  000784  0E7A               	movlw	low STR_6
  3225  000786  6E02               	movwf	UART_printf@cadena^0,c
  3226  000788  0E7C               	movlw	high STR_6
  3227  00078A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3228  00078C  EC11  F00F         	call	_UART_printf	;wreg free
  3229                           
  3230                           ;main.c: 415:     for (int i = 0; i < 2; i++) {
  3231  000790  0E00               	movlw	0
  3232  000792  6E12               	movwf	(setTiempoRegar@i+1)^0,c
  3233  000794  0E00               	movlw	0
  3234  000796  6E11               	movwf	setTiempoRegar@i^0,c
  3235  000798                     l3368:
  3236                           
  3237                           ;main.c: 416:         Rx = UART_read();
  3238  000798  EC9C  F00F         	call	_UART_read	;wreg free
  3239  00079C  6E16               	movwf	setTiempoRegar@Rx^0,c
  3240  00079E                     
  3241                           ;main.c: 417:         if (Rx >= 48 && Rx <= 57) {
  3242  00079E  0E2F               	movlw	47
  3243  0007A0  6416               	cpfsgt	setTiempoRegar@Rx^0,c
  3244  0007A2  EFD5  F003         	goto	u2591
  3245  0007A6  EFD7  F003         	goto	u2590
  3246  0007AA                     u2591:
  3247  0007AA  EFFA  F003         	goto	l3388
  3248  0007AE                     u2590:
  3249  0007AE  0E3A               	movlw	58
  3250  0007B0  6016               	cpfslt	setTiempoRegar@Rx^0,c
  3251  0007B2  EFDD  F003         	goto	u2601
  3252  0007B6  EFDF  F003         	goto	u2600
  3253  0007BA                     u2601:
  3254  0007BA  EFFA  F003         	goto	l3388
  3255  0007BE                     u2600:
  3256  0007BE                     
  3257                           ;main.c: 418:             if (!i) {
  3258  0007BE  5011               	movf	setTiempoRegar@i^0,w,c
  3259  0007C0  1012               	iorwf	(setTiempoRegar@i+1)^0,w,c
  3260  0007C2  A4D8               	btfss	status,2,c
  3261  0007C4  EFE6  F003         	goto	u2611
  3262  0007C8  EFE8  F003         	goto	u2610
  3263  0007CC                     u2611:
  3264  0007CC  EFF2  F003         	goto	l3382
  3265  0007D0                     u2610:
  3266  0007D0                     
  3267                           ;main.c: 419:                 Rx -= 48;
  3268  0007D0  0E30               	movlw	48
  3269  0007D2  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  3270  0007D4                     
  3271                           ;main.c: 420:                 hora = Rx;
  3272  0007D4  C016  F010         	movff	setTiempoRegar@Rx,setTiempoRegar@hora
  3273  0007D8                     
  3274                           ;main.c: 421:                 hora *= 10;
  3275  0007D8  0E0A               	movlw	10
  3276  0007DA  0210               	mulwf	setTiempoRegar@hora^0,c
  3277  0007DC  50F3               	movf	prodl,w,c
  3278  0007DE  6E10               	movwf	setTiempoRegar@hora^0,c
  3279                           
  3280                           ;main.c: 422:             } else {
  3281  0007E0  EF01  F004         	goto	l3392
  3282  0007E4                     l3382:
  3283                           
  3284                           ;main.c: 423:                 datoCapturado = 1;
  3285  0007E4  0E01               	movlw	1
  3286  0007E6  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3287  0007E8                     
  3288                           ;main.c: 424:                 Rx -= 48;
  3289  0007E8  0E30               	movlw	48
  3290  0007EA  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  3291  0007EC                     
  3292                           ;main.c: 425:                 hora += Rx;
  3293  0007EC  5016               	movf	setTiempoRegar@Rx^0,w,c
  3294  0007EE  2610               	addwf	setTiempoRegar@hora^0,f,c
  3295  0007F0  EF01  F004         	goto	l3392
  3296  0007F4                     l3388:
  3297                           
  3298                           ;main.c: 428:             datoCapturado = 0;
  3299  0007F4  0E00               	movlw	0
  3300  0007F6  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3301  0007F8                     
  3302                           ;main.c: 430:             UART_write('F');
  3303  0007F8  0E46               	movlw	70
  3304  0007FA  ECD5  F011         	call	_UART_write
  3305                           
  3306                           ;main.c: 431:             break;
  3307  0007FE  EF11  F004         	goto	l3396
  3308  000802                     l3392:
  3309                           
  3310                           ;main.c: 433:     }
  3311  000802  4A11               	infsnz	setTiempoRegar@i^0,f,c
  3312  000804  2A12               	incf	(setTiempoRegar@i+1)^0,f,c
  3313  000806  BE12               	btfsc	(setTiempoRegar@i+1)^0,7,c
  3314  000808  EF0F  F004         	goto	u2621
  3315  00080C  5012               	movf	(setTiempoRegar@i+1)^0,w,c
  3316  00080E  E109               	bnz	u2620
  3317  000810  0E02               	movlw	2
  3318  000812  5C11               	subwf	setTiempoRegar@i^0,w,c
  3319  000814  A0D8               	btfss	status,0,c
  3320  000816  EF0F  F004         	goto	u2621
  3321  00081A  EF11  F004         	goto	u2620
  3322  00081E                     u2621:
  3323  00081E  EFCC  F003         	goto	l3368
  3324  000822                     u2620:
  3325  000822                     l3396:
  3326                           
  3327                           ;main.c: 435:     if (datoCapturado && !esperandoDatos) {
  3328  000822  5015               	movf	setTiempoRegar@datoCapturado^0,w,c
  3329  000824  B4D8               	btfsc	status,2,c
  3330  000826  EF17  F004         	goto	u2631
  3331  00082A  EF19  F004         	goto	u2630
  3332  00082E                     u2631:
  3333  00082E  EF9F  F004         	goto	l310
  3334  000832                     u2630:
  3335  000832  0100               	movlb	0	; () banked
  3336  000834  51F6               	movf	_esperandoDatos& (0+255),w,b
  3337  000836  A4D8               	btfss	status,2,c
  3338  000838  EF20  F004         	goto	u2641
  3339  00083C  EF22  F004         	goto	u2640
  3340  000840                     u2641:
  3341  000840  EF9F  F004         	goto	l310
  3342  000844                     u2640:
  3343  000844                     
  3344                           ; BSR set to: 0
  3345                           ;main.c: 437:         UART_printf("\r\n Ingrese los minutos que desee que se riegue en e
      +                          se horario ej: 15 \r\n");
  3346  000844  0EFB               	movlw	low STR_11
  3347  000846  6E02               	movwf	UART_printf@cadena^0,c
  3348  000848  0E7B               	movlw	high STR_11
  3349  00084A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3350  00084C  EC11  F00F         	call	_UART_printf	;wreg free
  3351  000850                     
  3352                           ;main.c: 439:         for (int i = 0; i < 2; i++) {
  3353  000850  0E00               	movlw	0
  3354  000852  6E14               	movwf	(setTiempoRegar@i_841+1)^0,c
  3355  000854  0E00               	movlw	0
  3356  000856  6E13               	movwf	setTiempoRegar@i_841^0,c
  3357  000858                     l3408:
  3358                           
  3359                           ;main.c: 440:             Rx = UART_read();
  3360  000858  EC9C  F00F         	call	_UART_read	;wreg free
  3361  00085C  6E16               	movwf	setTiempoRegar@Rx^0,c
  3362  00085E                     
  3363                           ;main.c: 441:             if (Rx >= 48 && Rx <= 57) {
  3364  00085E  0E2F               	movlw	47
  3365  000860  6416               	cpfsgt	setTiempoRegar@Rx^0,c
  3366  000862  EF35  F004         	goto	u2651
  3367  000866  EF37  F004         	goto	u2650
  3368  00086A                     u2651:
  3369  00086A  EF5A  F004         	goto	l3428
  3370  00086E                     u2650:
  3371  00086E  0E3A               	movlw	58
  3372  000870  6016               	cpfslt	setTiempoRegar@Rx^0,c
  3373  000872  EF3D  F004         	goto	u2661
  3374  000876  EF3F  F004         	goto	u2660
  3375  00087A                     u2661:
  3376  00087A  EF5A  F004         	goto	l3428
  3377  00087E                     u2660:
  3378  00087E                     
  3379                           ;main.c: 442:                 if (!i) {
  3380  00087E  5013               	movf	setTiempoRegar@i_841^0,w,c
  3381  000880  1014               	iorwf	(setTiempoRegar@i_841+1)^0,w,c
  3382  000882  A4D8               	btfss	status,2,c
  3383  000884  EF46  F004         	goto	u2671
  3384  000888  EF48  F004         	goto	u2670
  3385  00088C                     u2671:
  3386  00088C  EF52  F004         	goto	l3422
  3387  000890                     u2670:
  3388  000890                     
  3389                           ;main.c: 443:                     Rx -= 48;
  3390  000890  0E30               	movlw	48
  3391  000892  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  3392  000894                     
  3393                           ;main.c: 444:                     tiempoRegar = Rx;
  3394  000894  C016  F00F         	movff	setTiempoRegar@Rx,setTiempoRegar@tiempoRegar
  3395  000898                     
  3396                           ;main.c: 445:                     tiempoRegar *= 10;
  3397  000898  0E0A               	movlw	10
  3398  00089A  020F               	mulwf	setTiempoRegar@tiempoRegar^0,c
  3399  00089C  50F3               	movf	prodl,w,c
  3400  00089E  6E0F               	movwf	setTiempoRegar@tiempoRegar^0,c
  3401                           
  3402                           ;main.c: 446:                 } else {
  3403  0008A0  EF61  F004         	goto	l3432
  3404  0008A4                     l3422:
  3405                           
  3406                           ;main.c: 447:                     datoCapturado = 1;
  3407  0008A4  0E01               	movlw	1
  3408  0008A6  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3409  0008A8                     
  3410                           ;main.c: 448:                     Rx -= 48;
  3411  0008A8  0E30               	movlw	48
  3412  0008AA  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  3413  0008AC                     
  3414                           ;main.c: 449:                     tiempoRegar += Rx;
  3415  0008AC  5016               	movf	setTiempoRegar@Rx^0,w,c
  3416  0008AE  260F               	addwf	setTiempoRegar@tiempoRegar^0,f,c
  3417  0008B0  EF61  F004         	goto	l3432
  3418  0008B4                     l3428:
  3419                           
  3420                           ;main.c: 452:                 datoCapturado = 0;
  3421  0008B4  0E00               	movlw	0
  3422  0008B6  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3423  0008B8                     
  3424                           ;main.c: 454:                 UART_write('F');
  3425  0008B8  0E46               	movlw	70
  3426  0008BA  ECD5  F011         	call	_UART_write
  3427                           
  3428                           ;main.c: 455:                 break;
  3429  0008BE  EF71  F004         	goto	l3436
  3430  0008C2                     l3432:
  3431                           
  3432                           ;main.c: 457:         }
  3433  0008C2  4A13               	infsnz	setTiempoRegar@i_841^0,f,c
  3434  0008C4  2A14               	incf	(setTiempoRegar@i_841+1)^0,f,c
  3435  0008C6  BE14               	btfsc	(setTiempoRegar@i_841+1)^0,7,c
  3436  0008C8  EF6F  F004         	goto	u2681
  3437  0008CC  5014               	movf	(setTiempoRegar@i_841+1)^0,w,c
  3438  0008CE  E109               	bnz	u2680
  3439  0008D0  0E02               	movlw	2
  3440  0008D2  5C13               	subwf	setTiempoRegar@i_841^0,w,c
  3441  0008D4  A0D8               	btfss	status,0,c
  3442  0008D6  EF6F  F004         	goto	u2681
  3443  0008DA  EF71  F004         	goto	u2680
  3444  0008DE                     u2681:
  3445  0008DE  EF2C  F004         	goto	l3408
  3446  0008E2                     u2680:
  3447  0008E2                     l3436:
  3448                           
  3449                           ;main.c: 459:         if (datoCapturado && !esperandoDatos) {
  3450  0008E2  5015               	movf	setTiempoRegar@datoCapturado^0,w,c
  3451  0008E4  B4D8               	btfsc	status,2,c
  3452  0008E6  EF77  F004         	goto	u2691
  3453  0008EA  EF79  F004         	goto	u2690
  3454  0008EE                     u2691:
  3455  0008EE  EF9F  F004         	goto	l310
  3456  0008F2                     u2690:
  3457  0008F2  0100               	movlb	0	; () banked
  3458  0008F4  51F6               	movf	_esperandoDatos& (0+255),w,b
  3459  0008F6  A4D8               	btfss	status,2,c
  3460  0008F8  EF80  F004         	goto	u2701
  3461  0008FC  EF82  F004         	goto	u2700
  3462  000900                     u2701:
  3463  000900  EF9F  F004         	goto	l310
  3464  000904                     u2700:
  3465  000904                     
  3466                           ; BSR set to: 0
  3467                           ;main.c: 461:             UART_printf("\r\n Minutos de riego establecidos! \r\n");
  3468  000904  0EEB               	movlw	low STR_12
  3469  000906  6E02               	movwf	UART_printf@cadena^0,c
  3470  000908  0E7D               	movlw	high STR_12
  3471  00090A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3472  00090C  EC11  F00F         	call	_UART_printf	;wreg free
  3473  000910                     
  3474                           ;main.c: 463:             horarios[hora].tiempoRegar = tiempoRegar;
  3475  000910  5010               	movf	setTiempoRegar@hora^0,w,c
  3476  000912  0D03               	mullw	3
  3477  000914  0E02               	movlw	low (_horarios+2)
  3478  000916  24F3               	addwf	243,w,c
  3479  000918  6ED9               	movwf	fsr2l,c
  3480  00091A  0E01               	movlw	high (_horarios+2)
  3481  00091C  20F4               	addwfc	prodh,w,c
  3482  00091E  6EDA               	movwf	fsr2h,c
  3483  000920  C00F  FFDF         	movff	setTiempoRegar@tiempoRegar,indf2
  3484  000924                     
  3485                           ;main.c: 464:             minutosRegar = horarios[hora].tiempoRegar;
  3486  000924  5010               	movf	setTiempoRegar@hora^0,w,c
  3487  000926  0D03               	mullw	3
  3488  000928  0E02               	movlw	low (_horarios+2)
  3489  00092A  24F3               	addwf	243,w,c
  3490  00092C  6ED9               	movwf	fsr2l,c
  3491  00092E  0E01               	movlw	high (_horarios+2)
  3492  000930  20F4               	addwfc	prodh,w,c
  3493  000932  6EDA               	movwf	fsr2h,c
  3494  000934  50DF               	movf	indf2,w,c
  3495  000936  0100               	movlb	0	; () banked
  3496  000938  6FEF               	movwf	_minutosRegar& (0+255),b
  3497  00093A                     
  3498                           ; BSR set to: 0
  3499                           ;main.c: 466:             escribeHorariosMemoria();
  3500  00093A  EC0B  F00A         	call	_escribeHorariosMemoria	;wreg free
  3501  00093E                     l310:
  3502  00093E  0012               	return		;funcret
  3503  000940                     __end_of_setTiempoRegar:
  3504                           	opt callstack 0
  3505                           
  3506 ;; *************** function _mostrarMenu *****************
  3507 ;; Defined at:
  3508 ;;		line 576 in file "main.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;		None
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;		None
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  1    wreg      void 
  3515 ;; Registers used:
  3516 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3522 ;;      Params:         0       0       0       0       0       0       0       0       0
  3523 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3524 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3525 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3526 ;;Total ram usage:        0 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; Hardware stack levels required when called:    3
  3529 ;; This function calls:
  3530 ;;		_UART_printf
  3531 ;; This function is called by:
  3532 ;;		_sistemaPrincipal
  3533 ;;		_sistemaRegado
  3534 ;;		_main
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538                           	psect	text10
  3539  001D5E                     __ptext10:
  3540                           	opt callstack 0
  3541  001D5E                     _mostrarMenu:
  3542                           	opt callstack 26
  3543  001D5E                     
  3544                           ;main.c: 578:     UART_printf("\r\n Ingresa una opcion a Realizar: \r\n");
  3545  001D5E  0E10               	movlw	low STR_16
  3546  001D60  6E02               	movwf	UART_printf@cadena^0,c
  3547  001D62  0E7E               	movlw	high STR_16
  3548  001D64  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3549  001D66  EC11  F00F         	call	_UART_printf	;wreg free
  3550                           
  3551                           ;main.c: 579:     UART_printf("\r\n 1. Fijar Hora Actual \r\n");
  3552  001D6A  0E3D               	movlw	low STR_17
  3553  001D6C  6E02               	movwf	UART_printf@cadena^0,c
  3554  001D6E  0E7F               	movlw	high STR_17
  3555  001D70  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3556  001D72  EC11  F00F         	call	_UART_printf	;wreg free
  3557                           
  3558                           ;main.c: 580:     UART_printf("\r\n 2. Asignar Horarios para regar \r\n");
  3559  001D76  0E5A               	movlw	low STR_18
  3560  001D78  6E02               	movwf	UART_printf@cadena^0,c
  3561  001D7A  0E7E               	movlw	high STR_18
  3562  001D7C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3563  001D7E  EC11  F00F         	call	_UART_printf	;wreg free
  3564                           
  3565                           ;main.c: 581:     UART_printf("\r\n 3. Programar tiempo de riego en un horario \r\n");
  3566  001D82  0E12               	movlw	low STR_19
  3567  001D84  6E02               	movwf	UART_printf@cadena^0,c
  3568  001D86  0E7D               	movlw	high STR_19
  3569  001D88  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3570  001D8A  EC11  F00F         	call	_UART_printf	;wreg free
  3571                           
  3572                           ;main.c: 582:     UART_printf("\r\n 4. Dame datos del sistema \r\n");
  3573  001D8E  0EC1               	movlw	low STR_20
  3574  001D90  6E02               	movwf	UART_printf@cadena^0,c
  3575  001D92  0E7E               	movlw	high STR_20
  3576  001D94  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3577  001D96  EC11  F00F         	call	_UART_printf	;wreg free
  3578                           
  3579                           ;main.c: 583:     UART_printf("\r\n 5. Mostrar valores sensores \r\n");
  3580  001D9A  0E7F               	movlw	low STR_21
  3581  001D9C  6E02               	movwf	UART_printf@cadena^0,c
  3582  001D9E  0E7E               	movlw	high STR_21
  3583  001DA0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3584  001DA2  EC11  F00F         	call	_UART_printf	;wreg free
  3585                           
  3586                           ;main.c: 584:     UART_printf("\r\n Opcion:  \r");
  3587  001DA6  0EF0               	movlw	low STR_22
  3588  001DA8  6E02               	movwf	UART_printf@cadena^0,c
  3589  001DAA  0E7F               	movlw	high STR_22
  3590  001DAC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3591  001DAE  EC11  F00F         	call	_UART_printf	;wreg free
  3592                           
  3593                           ;main.c: 585:     UART_printf("\r\n");
  3594  001DB2  0E6F               	movlw	low (STR_8+23)
  3595  001DB4  6E02               	movwf	UART_printf@cadena^0,c
  3596  001DB6  0E7F               	movlw	high (STR_8+23)
  3597  001DB8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3598  001DBA  EC11  F00F         	call	_UART_printf	;wreg free
  3599  001DBE  0012               	return		;funcret
  3600  001DC0                     __end_of_mostrarMenu:
  3601                           	opt callstack 0
  3602                           
  3603 ;; *************** function _mostrarDatosSensoresWIFI *****************
  3604 ;; Defined at:
  3605 ;;		line 760 in file "main.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;  i               2  128[BANK0 ] int 
  3610 ;;  buffer         50   76[BANK0 ] unsigned char [50]
  3611 ;;  humedad         1  127[BANK0 ] unsigned char 
  3612 ;;  temperatura     1  126[BANK0 ] unsigned char 
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  1    wreg      void 
  3615 ;; Registers used:
  3616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3622 ;;      Params:         0       0       0       0       0       0       0       0       0
  3623 ;;      Locals:         0      54       0       0       0       0       0       0       0
  3624 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3625 ;;      Totals:         1      54       0       0       0       0       0       0       0
  3626 ;;Total ram usage:       55 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:   10
  3629 ;; This function calls:
  3630 ;;		_UART_printf
  3631 ;;		_UART_write
  3632 ;;		_dameTemperaturaHumedad
  3633 ;;		_lecturaWifi
  3634 ;;		_sprintf
  3635 ;; This function is called by:
  3636 ;;		_sistemaPrincipal
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           	psect	text11
  3641  001140                     __ptext11:
  3642                           	opt callstack 0
  3643  001140                     _mostrarDatosSensoresWIFI:
  3644                           	opt callstack 19
  3645  001140                     
  3646                           ;main.c: 763:     char buffer[50];;main.c: 764:     unsigned char temperatura, humedad;;
      +                          main.c: 766:     lecturaWifi();
  3647  001140  ECA0  F004         	call	_lecturaWifi	;wreg free
  3648  001144                     
  3649                           ;main.c: 768:     UART_write('I');
  3650  001144  0E49               	movlw	73
  3651  001146  ECD5  F011         	call	_UART_write
  3652  00114A                     
  3653                           ;main.c: 771:     if (peticionLecturaSensores) {
  3654  00114A  0100               	movlb	0	; () banked
  3655  00114C  51EC               	movf	_peticionLecturaSensores& (0+255),w,b
  3656  00114E  B4D8               	btfsc	status,2,c
  3657  001150  EFAC  F008         	goto	u2721
  3658  001154  EFAE  F008         	goto	u2720
  3659  001158                     u2721:
  3660  001158  EFE9  F008         	goto	l3490
  3661  00115C                     u2720:
  3662  00115C                     
  3663                           ; BSR set to: 0
  3664                           ;main.c: 773:         for (int i = 0; i < 3; i++) {
  3665  00115C  0E00               	movlw	0
  3666  00115E  6FE1               	movwf	(mostrarDatosSensoresWIFI@i+1)& (0+255),b
  3667  001160  0E00               	movlw	0
  3668  001162  6FE0               	movwf	mostrarDatosSensoresWIFI@i& (0+255),b
  3669  001164                     l3482:
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;main.c: 775:             sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d %c
      +                          \r\n"
  3673  001164  0EAC               	movlw	low mostrarDatosSensoresWIFI@buffer
  3674  001166  6F60               	movwf	sprintf@s& (0+255),b
  3675  001168  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3676  00116A  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3677  00116C  0E43               	movlw	low STR_31
  3678  00116E  6F62               	movwf	sprintf@fmt& (0+255),b
  3679  001170  0E7D               	movlw	high STR_31
  3680  001172  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3681  001174  C0E0  F064         	movff	mostrarDatosSensoresWIFI@i,?_sprintf+4
  3682  001178  C0E1  F065         	movff	mostrarDatosSensoresWIFI@i+1,?_sprintf+5
  3683  00117C  90D8               	bcf	status,0,c
  3684  00117E  35E0               	rlcf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  3685  001180  6ED9               	movwf	fsr2l,c
  3686  001182  35E1               	rlcf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  3687  001184  6EDA               	movwf	fsr2h,c
  3688  001186  0E48               	movlw	low _sensores
  3689  001188  26D9               	addwf	fsr2l,f,c
  3690  00118A  0E01               	movlw	high _sensores
  3691  00118C  22DA               	addwfc	fsr2h,f,c
  3692  00118E  50DF               	movf	indf2,w,c
  3693  001190  6E5B               	movwf	??_mostrarDatosSensoresWIFI^0,c
  3694  001192  505B               	movf	??_mostrarDatosSensoresWIFI^0,w,c
  3695  001194  6F66               	movwf	(?_sprintf+6)& (0+255),b
  3696  001196  6B67               	clrf	(?_sprintf+7)& (0+255),b
  3697  001198  0E00               	movlw	0
  3698  00119A  6F69               	movwf	(?_sprintf+9)& (0+255),b
  3699  00119C  0E25               	movlw	37
  3700  00119E  6F68               	movwf	(?_sprintf+8)& (0+255),b
  3701  0011A0  ECC6  F00F         	call	_sprintf	;wreg free
  3702  0011A4                     
  3703                           ;main.c: 777:             UART_printf(buffer);
  3704  0011A4  0EAC               	movlw	low mostrarDatosSensoresWIFI@buffer
  3705  0011A6  6E02               	movwf	UART_printf@cadena^0,c
  3706  0011A8  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3707  0011AA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3708  0011AC  EC11  F00F         	call	_UART_printf	;wreg free
  3709  0011B0                     
  3710                           ;main.c: 779:         }
  3711  0011B0  0100               	movlb	0	; () banked
  3712  0011B2  4BE0               	infsnz	mostrarDatosSensoresWIFI@i& (0+255),f,b
  3713  0011B4  2BE1               	incf	(mostrarDatosSensoresWIFI@i+1)& (0+255),f,b
  3714  0011B6                     
  3715                           ; BSR set to: 0
  3716  0011B6  BFE1               	btfsc	(mostrarDatosSensoresWIFI@i+1)& (0+255),7,b
  3717  0011B8  EFE7  F008         	goto	u2731
  3718  0011BC  51E1               	movf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  3719  0011BE  E109               	bnz	u2730
  3720  0011C0  0E03               	movlw	3
  3721  0011C2  5DE0               	subwf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  3722  0011C4  A0D8               	btfss	status,0,c
  3723  0011C6  EFE7  F008         	goto	u2731
  3724  0011CA  EFE9  F008         	goto	u2730
  3725  0011CE                     u2731:
  3726  0011CE  EFB2  F008         	goto	l3482
  3727  0011D2                     u2730:
  3728  0011D2                     l3490:
  3729                           
  3730                           ; BSR set to: 0
  3731                           ;main.c: 783:     dameTemperaturaHumedad(&humedad, &temperatura);
  3732  0011D2  0EDF               	movlw	low mostrarDatosSensoresWIFI@humedad
  3733  0011D4  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  3734  0011D6  0E00               	movlw	high mostrarDatosSensoresWIFI@humedad
  3735  0011D8  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  3736  0011DA  0EDE               	movlw	low mostrarDatosSensoresWIFI@temperatura
  3737  0011DC  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  3738  0011DE  0E00               	movlw	high mostrarDatosSensoresWIFI@temperatura
  3739  0011E0  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  3740  0011E2  EC02  F00C         	call	_dameTemperaturaHumedad	;wreg free
  3741                           
  3742                           ;main.c: 785:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", humedad);
  3743  0011E6  0EAC               	movlw	low mostrarDatosSensoresWIFI@buffer
  3744  0011E8  0100               	movlb	0	; () banked
  3745  0011EA  6F60               	movwf	sprintf@s& (0+255),b
  3746  0011EC  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3747  0011EE  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3748  0011F0  0EE1               	movlw	low STR_29
  3749  0011F2  6F62               	movwf	sprintf@fmt& (0+255),b
  3750  0011F4  0E7E               	movlw	high STR_29
  3751  0011F6  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3752  0011F8  C0DF  F064         	movff	mostrarDatosSensoresWIFI@humedad,?_sprintf+4
  3753  0011FC  6B65               	clrf	(?_sprintf+5)& (0+255),b
  3754  0011FE  ECC6  F00F         	call	_sprintf	;wreg free
  3755  001202                     
  3756                           ;main.c: 786:     UART_printf(buffer);
  3757  001202  0EAC               	movlw	low mostrarDatosSensoresWIFI@buffer
  3758  001204  6E02               	movwf	UART_printf@cadena^0,c
  3759  001206  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3760  001208  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3761  00120A  EC11  F00F         	call	_UART_printf	;wreg free
  3762  00120E                     
  3763                           ;main.c: 787:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", temperatura);
  3764  00120E  0EAC               	movlw	low mostrarDatosSensoresWIFI@buffer
  3765  001210  0100               	movlb	0	; () banked
  3766  001212  6F60               	movwf	sprintf@s& (0+255),b
  3767  001214  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3768  001216  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3769  001218  0E20               	movlw	low STR_30
  3770  00121A  6F62               	movwf	sprintf@fmt& (0+255),b
  3771  00121C  0E7F               	movlw	high STR_30
  3772  00121E  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3773  001220  C0DE  F064         	movff	mostrarDatosSensoresWIFI@temperatura,?_sprintf+4
  3774  001224  6B65               	clrf	(?_sprintf+5)& (0+255),b
  3775  001226  ECC6  F00F         	call	_sprintf	;wreg free
  3776                           
  3777                           ;main.c: 788:     UART_printf(buffer);
  3778  00122A  0EAC               	movlw	low mostrarDatosSensoresWIFI@buffer
  3779  00122C  6E02               	movwf	UART_printf@cadena^0,c
  3780  00122E  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3781  001230  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3782  001232  EC11  F00F         	call	_UART_printf	;wreg free
  3783  001236                     
  3784                           ;main.c: 790:     UART_write('I');
  3785  001236  0E49               	movlw	73
  3786  001238  ECD5  F011         	call	_UART_write
  3787  00123C  0012               	return		;funcret
  3788  00123E                     __end_of_mostrarDatosSensoresWIFI:
  3789                           	opt callstack 0
  3790                           
  3791 ;; *************** function _lecturaWifi *****************
  3792 ;; Defined at:
  3793 ;;		line 496 in file "main.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;		None
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;  i               2   71[BANK0 ] int 
  3798 ;;  j               2   73[BANK0 ] int 
  3799 ;;  buffer         50   20[BANK0 ] unsigned char [50]
  3800 ;;  Rx              1   75[BANK0 ] unsigned char 
  3801 ;;  porcientoHum    1   70[BANK0 ] unsigned char 
  3802 ;; Return value:  Size  Location     Type
  3803 ;;                  1    wreg      void 
  3804 ;; Registers used:
  3805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3811 ;;      Params:         0       0       0       0       0       0       0       0       0
  3812 ;;      Locals:         0      56       0       0       0       0       0       0       0
  3813 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3814 ;;      Totals:         2      56       0       0       0       0       0       0       0
  3815 ;;Total ram usage:       58 bytes
  3816 ;; Hardware stack levels used:    1
  3817 ;; Hardware stack levels required when called:    9
  3818 ;; This function calls:
  3819 ;;		_UART_printf
  3820 ;;		_UART_read
  3821 ;;		_UART_write
  3822 ;;		_restablecerDatosSensor
  3823 ;;		_sprintf
  3824 ;; This function is called by:
  3825 ;;		_sistemaRegado
  3826 ;;		_mostrarDatosSensoresWIFI
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           	psect	text12
  3831  000940                     __ptext12:
  3832                           	opt callstack 0
  3833  000940                     _lecturaWifi:
  3834                           	opt callstack 20
  3835  000940                     
  3836                           ;main.c: 498:     PIE1bits.RCIE = 0;
  3837  000940  9A9D               	bcf	157,5,c	;volatile
  3838  000942                     
  3839                           ;main.c: 501:     char buffer[50];;main.c: 503:     restablecerDatosSensor();
  3840  000942  ECEF  F00F         	call	_restablecerDatosSensor	;wreg free
  3841  000946                     
  3842                           ;main.c: 505:     UART_write('R');
  3843  000946  0E52               	movlw	82
  3844  000948  ECD5  F011         	call	_UART_write
  3845  00094C                     
  3846                           ;main.c: 507:     UART_printf("\r\nSolicitando Muestreo de sensores\r\n\n");
  3847  00094C  0EC5               	movlw	low STR_13
  3848  00094E  6E02               	movwf	UART_printf@cadena^0,c
  3849  000950  0E7D               	movlw	high STR_13
  3850  000952  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3851  000954  EC11  F00F         	call	_UART_printf	;wreg free
  3852  000958                     
  3853                           ;main.c: 509:     Rx = UART_read();
  3854  000958  EC9C  F00F         	call	_UART_read	;wreg free
  3855  00095C  0100               	movlb	0	; () banked
  3856  00095E  6FAB               	movwf	lecturaWifi@Rx& (0+255),b
  3857  000960                     
  3858                           ; BSR set to: 0
  3859                           ;main.c: 511:     if (Rx == 'O') {
  3860  000960  0E4F               	movlw	79
  3861  000962  19AB               	xorwf	lecturaWifi@Rx& (0+255),w,b
  3862  000964  A4D8               	btfss	status,2,c
  3863  000966  EFB7  F004         	goto	u2301
  3864  00096A  EFB9  F004         	goto	u2300
  3865  00096E                     u2301:
  3866  00096E  EF60  F005         	goto	l3172
  3867  000972                     u2300:
  3868  000972                     
  3869                           ; BSR set to: 0
  3870                           ;main.c: 513:         peticionLecturaSensores = 1;
  3871  000972  0E01               	movlw	1
  3872  000974  6FEC               	movwf	_peticionLecturaSensores& (0+255),b
  3873                           
  3874                           ;main.c: 515:         for (int j = 0; j < 3; j++) {
  3875  000976  0E00               	movlw	0
  3876  000978  6FAA               	movwf	(lecturaWifi@j+1)& (0+255),b
  3877  00097A  0E00               	movlw	0
  3878  00097C  6FA9               	movwf	lecturaWifi@j& (0+255),b
  3879  00097E                     l3128:
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;main.c: 517:             sprintf(buffer, "\r\nIngrese el porcentaje de humedad del sens
      +                          or %d\r\n", j);
  3883  00097E  0E74               	movlw	low lecturaWifi@buffer
  3884  000980  6F60               	movwf	sprintf@s& (0+255),b
  3885  000982  0E00               	movlw	high lecturaWifi@buffer
  3886  000984  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3887  000986  0EAD               	movlw	low STR_14
  3888  000988  6F62               	movwf	sprintf@fmt& (0+255),b
  3889  00098A  0E7C               	movlw	high STR_14
  3890  00098C  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3891  00098E  C0A9  F064         	movff	lecturaWifi@j,?_sprintf+4
  3892  000992  C0AA  F065         	movff	lecturaWifi@j+1,?_sprintf+5
  3893  000996  ECC6  F00F         	call	_sprintf	;wreg free
  3894  00099A                     
  3895                           ;main.c: 518:             UART_printf(buffer);
  3896  00099A  0E74               	movlw	low lecturaWifi@buffer
  3897  00099C  6E02               	movwf	UART_printf@cadena^0,c
  3898  00099E  0E00               	movlw	high lecturaWifi@buffer
  3899  0009A0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3900  0009A2  EC11  F00F         	call	_UART_printf	;wreg free
  3901  0009A6                     
  3902                           ;main.c: 520:             for (int i = 0; i < 3; i++) {
  3903  0009A6  0E00               	movlw	0
  3904  0009A8  0100               	movlb	0	; () banked
  3905  0009AA  6FA8               	movwf	(lecturaWifi@i+1)& (0+255),b
  3906  0009AC  0E00               	movlw	0
  3907  0009AE  6FA7               	movwf	lecturaWifi@i& (0+255),b
  3908  0009B0                     l3138:
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;main.c: 522:                 Rx = UART_read();
  3912  0009B0  EC9C  F00F         	call	_UART_read	;wreg free
  3913  0009B4  0100               	movlb	0	; () banked
  3914  0009B6  6FAB               	movwf	lecturaWifi@Rx& (0+255),b
  3915  0009B8                     
  3916                           ; BSR set to: 0
  3917                           ;main.c: 524:                 if (Rx >= 48 && Rx <= 57) {
  3918  0009B8  0E2F               	movlw	47
  3919  0009BA  65AB               	cpfsgt	lecturaWifi@Rx& (0+255),b
  3920  0009BC  EFE2  F004         	goto	u2311
  3921  0009C0  EFE4  F004         	goto	u2310
  3922  0009C4                     u2311:
  3923  0009C4  EF27  F005         	goto	l3158
  3924  0009C8                     u2310:
  3925  0009C8                     
  3926                           ; BSR set to: 0
  3927  0009C8  0E3A               	movlw	58
  3928  0009CA  61AB               	cpfslt	lecturaWifi@Rx& (0+255),b
  3929  0009CC  EFEA  F004         	goto	u2321
  3930  0009D0  EFEC  F004         	goto	u2320
  3931  0009D4                     u2321:
  3932  0009D4  EF27  F005         	goto	l3158
  3933  0009D8                     u2320:
  3934  0009D8                     
  3935                           ; BSR set to: 0
  3936                           ;main.c: 526:                     Rx -= 48;
  3937  0009D8  0E30               	movlw	48
  3938  0009DA  5FAB               	subwf	lecturaWifi@Rx& (0+255),f,b
  3939                           
  3940                           ;main.c: 528:                     switch (i) {
  3941  0009DC  EF0D  F005         	goto	l3156
  3942  0009E0                     l331:
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;main.c: 530:                             porcientoHumedad = Rx;
  3946  0009E0  C0AB  F0A6         	movff	lecturaWifi@Rx,lecturaWifi@porcientoHumedad
  3947  0009E4                     
  3948                           ; BSR set to: 0
  3949                           ;main.c: 531:                             porcientoHumedad *= 100;
  3950  0009E4  0E64               	movlw	100
  3951  0009E6  03A6               	mulwf	lecturaWifi@porcientoHumedad& (0+255),b
  3952  0009E8  50F3               	movf	prodl,w,c
  3953  0009EA  6FA6               	movwf	lecturaWifi@porcientoHumedad& (0+255),b
  3954                           
  3955                           ;main.c: 532:                             break;
  3956  0009EC  EF37  F005         	goto	l3162
  3957  0009F0                     l3148:
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;main.c: 535:                             porcientoHumedad += (Rx * 10);
  3961  0009F0  51AB               	movf	lecturaWifi@Rx& (0+255),w,b
  3962  0009F2  0D0A               	mullw	10
  3963  0009F4  50F3               	movf	243,w,c
  3964  0009F6  27A6               	addwf	lecturaWifi@porcientoHumedad& (0+255),f,b
  3965                           
  3966                           ;main.c: 536:                             break;
  3967  0009F8  EF37  F005         	goto	l3162
  3968  0009FC                     l3150:
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;main.c: 539:                             porcientoHumedad += Rx;
  3972  0009FC  51AB               	movf	lecturaWifi@Rx& (0+255),w,b
  3973  0009FE  27A6               	addwf	lecturaWifi@porcientoHumedad& (0+255),f,b
  3974  000A00                     
  3975                           ; BSR set to: 0
  3976                           ;main.c: 540:                             sensores[j].porcientoHumedad = porcientoHumeda
      +                          d;
  3977  000A00  90D8               	bcf	status,0,c
  3978  000A02  35A9               	rlcf	lecturaWifi@j& (0+255),w,b
  3979  000A04  6ED9               	movwf	fsr2l,c
  3980  000A06  35AA               	rlcf	(lecturaWifi@j+1)& (0+255),w,b
  3981  000A08  6EDA               	movwf	fsr2h,c
  3982  000A0A  0E48               	movlw	low _sensores
  3983  000A0C  26D9               	addwf	fsr2l,f,c
  3984  000A0E  0E01               	movlw	high _sensores
  3985  000A10  22DA               	addwfc	fsr2h,f,c
  3986  000A12  C0A6  FFDF         	movff	lecturaWifi@porcientoHumedad,indf2
  3987                           
  3988                           ;main.c: 541:                             break;
  3989  000A16  EF37  F005         	goto	l3162
  3990  000A1A                     l3156:
  3991                           
  3992                           ; BSR set to: 0
  3993  000A1A  C0A7  F059         	movff	lecturaWifi@i,??_lecturaWifi
  3994  000A1E  C0A8  F05A         	movff	lecturaWifi@i+1,??_lecturaWifi+1
  3995                           
  3996                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3997                           ; Switch size 1, requested type "simple"
  3998                           ; Number of cases is 1, Range of values is 0 to 0
  3999                           ; switch strategies available:
  4000                           ; Name         Instructions Cycles
  4001                           ; simple_byte            4     3 (average)
  4002                           ;	Chosen strategy is simple_byte
  4003  000A22  505A               	movf	(??_lecturaWifi+1)^0,w,c
  4004  000A24  0A00               	xorlw	0	; case 0
  4005  000A26  B4D8               	btfsc	status,2,c
  4006  000A28  EF18  F005         	goto	l3816
  4007  000A2C  EF37  F005         	goto	l3162
  4008  000A30                     l3816:
  4009                           
  4010                           ; BSR set to: 0
  4011                           ; Switch size 1, requested type "simple"
  4012                           ; Number of cases is 3, Range of values is 0 to 2
  4013                           ; switch strategies available:
  4014                           ; Name         Instructions Cycles
  4015                           ; simple_byte           10     6 (average)
  4016                           ;	Chosen strategy is simple_byte
  4017  000A30  5059               	movf	??_lecturaWifi^0,w,c
  4018  000A32  0A00               	xorlw	0	; case 0
  4019  000A34  B4D8               	btfsc	status,2,c
  4020  000A36  EFF0  F004         	goto	l331
  4021  000A3A  0A01               	xorlw	1	; case 1
  4022  000A3C  B4D8               	btfsc	status,2,c
  4023  000A3E  EFF8  F004         	goto	l3148
  4024  000A42  0A03               	xorlw	3	; case 2
  4025  000A44  B4D8               	btfsc	status,2,c
  4026  000A46  EFFE  F004         	goto	l3150
  4027  000A4A  EF37  F005         	goto	l3162
  4028  000A4E                     l3158:
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;main.c: 549:                     sensores[j].porcientoHumedad = 100;
  4032  000A4E  90D8               	bcf	status,0,c
  4033  000A50  35A9               	rlcf	lecturaWifi@j& (0+255),w,b
  4034  000A52  6ED9               	movwf	fsr2l,c
  4035  000A54  35AA               	rlcf	(lecturaWifi@j+1)& (0+255),w,b
  4036  000A56  6EDA               	movwf	fsr2h,c
  4037  000A58  0E48               	movlw	low _sensores
  4038  000A5A  26D9               	addwf	fsr2l,f,c
  4039  000A5C  0E01               	movlw	high _sensores
  4040  000A5E  22DA               	addwfc	fsr2h,f,c
  4041  000A60  0E64               	movlw	100
  4042  000A62  6EDF               	movwf	indf2,c
  4043  000A64                     
  4044                           ; BSR set to: 0
  4045                           ;main.c: 550:                     UART_write('F');
  4046  000A64  0E46               	movlw	70
  4047  000A66  ECD5  F011         	call	_UART_write
  4048                           
  4049                           ;main.c: 551:                     break;
  4050  000A6A  EF47  F005         	goto	l3166
  4051  000A6E                     l3162:
  4052                           
  4053                           ; BSR set to: 0
  4054                           ;main.c: 553:             }
  4055  000A6E  4BA7               	infsnz	lecturaWifi@i& (0+255),f,b
  4056  000A70  2BA8               	incf	(lecturaWifi@i+1)& (0+255),f,b
  4057  000A72                     
  4058                           ; BSR set to: 0
  4059  000A72  BFA8               	btfsc	(lecturaWifi@i+1)& (0+255),7,b
  4060  000A74  EF45  F005         	goto	u2331
  4061  000A78  51A8               	movf	(lecturaWifi@i+1)& (0+255),w,b
  4062  000A7A  E109               	bnz	u2330
  4063  000A7C  0E03               	movlw	3
  4064  000A7E  5DA7               	subwf	lecturaWifi@i& (0+255),w,b
  4065  000A80  A0D8               	btfss	status,0,c
  4066  000A82  EF45  F005         	goto	u2331
  4067  000A86  EF47  F005         	goto	u2330
  4068  000A8A                     u2331:
  4069  000A8A  EFD8  F004         	goto	l3138
  4070  000A8E                     u2330:
  4071  000A8E                     l3166:
  4072                           
  4073                           ;main.c: 555:         }
  4074  000A8E  0100               	movlb	0	; () banked
  4075  000A90  4BA9               	infsnz	lecturaWifi@j& (0+255),f,b
  4076  000A92  2BAA               	incf	(lecturaWifi@j+1)& (0+255),f,b
  4077  000A94                     
  4078                           ; BSR set to: 0
  4079  000A94  BFAA               	btfsc	(lecturaWifi@j+1)& (0+255),7,b
  4080  000A96  EF56  F005         	goto	u2341
  4081  000A9A  51AA               	movf	(lecturaWifi@j+1)& (0+255),w,b
  4082  000A9C  E109               	bnz	u2340
  4083  000A9E  0E03               	movlw	3
  4084  000AA0  5DA9               	subwf	lecturaWifi@j& (0+255),w,b
  4085  000AA2  A0D8               	btfss	status,0,c
  4086  000AA4  EF56  F005         	goto	u2341
  4087  000AA8  EF58  F005         	goto	u2340
  4088  000AAC                     u2341:
  4089  000AAC  EFBF  F004         	goto	l3128
  4090  000AB0                     u2340:
  4091  000AB0                     
  4092                           ; BSR set to: 0
  4093                           ;main.c: 557:         UART_printf("\r\nSensores Leidos con Exito!\r\n\n");
  4094  000AB0  0EA1               	movlw	low STR_15
  4095  000AB2  6E02               	movwf	UART_printf@cadena^0,c
  4096  000AB4  0E7E               	movlw	high STR_15
  4097  000AB6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4098  000AB8  EC11  F00F         	call	_UART_printf	;wreg free
  4099                           
  4100                           ;main.c: 559:     } else {
  4101  000ABC  EF62  F005         	goto	l3174
  4102  000AC0                     l3172:
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;main.c: 560:         peticionLecturaSensores = 0;
  4106  000AC0  0E00               	movlw	0
  4107  000AC2  6FEC               	movwf	_peticionLecturaSensores& (0+255),b
  4108  000AC4                     l3174:
  4109                           
  4110                           ;main.c: 563:     PIE1bits.RCIE = 1;
  4111  000AC4  8A9D               	bsf	157,5,c	;volatile
  4112  000AC6  0012               	return		;funcret
  4113  000AC8                     __end_of_lecturaWifi:
  4114                           	opt callstack 0
  4115                           
  4116 ;; *************** function _restablecerDatosSensor *****************
  4117 ;; Defined at:
  4118 ;;		line 491 in file "main.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;		None
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;  i               2    4[COMRAM] int 
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  1    wreg      void 
  4125 ;; Registers used:
  4126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4132 ;;      Params:         0       0       0       0       0       0       0       0       0
  4133 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4134 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4135 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4136 ;;Total ram usage:        2 bytes
  4137 ;; Hardware stack levels used:    1
  4138 ;; Hardware stack levels required when called:    2
  4139 ;; This function calls:
  4140 ;;		_constructorSensor
  4141 ;; This function is called by:
  4142 ;;		_lecturaWifi
  4143 ;;		_main
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           
  4147                           	psect	text13
  4148  001FDE                     __ptext13:
  4149                           	opt callstack 0
  4150  001FDE                     _restablecerDatosSensor:
  4151                           	opt callstack 26
  4152  001FDE                     
  4153                           ;main.c: 492:     for (int i = 0; i < 3; i++)
  4154  001FDE  0E00               	movlw	0
  4155  001FE0  6E06               	movwf	(restablecerDatosSensor@i+1)^0,c
  4156  001FE2  0E00               	movlw	0
  4157  001FE4  6E05               	movwf	restablecerDatosSensor@i^0,c
  4158  001FE6                     l3000:
  4159                           
  4160                           ;main.c: 493:         constructorSensor(sensores[i], 0, i);
  4161  001FE6  90D8               	bcf	status,0,c
  4162  001FE8  3405               	rlcf	restablecerDatosSensor@i^0,w,c
  4163  001FEA  6ED9               	movwf	fsr2l,c
  4164  001FEC  3406               	rlcf	(restablecerDatosSensor@i+1)^0,w,c
  4165  001FEE  6EDA               	movwf	fsr2h,c
  4166  001FF0  0E48               	movlw	low _sensores
  4167  001FF2  26D9               	addwf	fsr2l,f,c
  4168  001FF4  0E01               	movlw	high _sensores
  4169  001FF6  22DA               	addwfc	fsr2h,f,c
  4170  001FF8  CFDE F001          	movff	postinc2,constructorSensor@s
  4171  001FFC  CFDD F002          	movff	postdec2,constructorSensor@s+1
  4172  002000  0E00               	movlw	0
  4173  002002  6E03               	movwf	constructorSensor@porcientoHumedad^0,c
  4174  002004  C005  F004         	movff	restablecerDatosSensor@i,constructorSensor@pin
  4175  002008  ECF1  F011         	call	_constructorSensor	;wreg free
  4176  00200C  4A05               	infsnz	restablecerDatosSensor@i^0,f,c
  4177  00200E  2A06               	incf	(restablecerDatosSensor@i+1)^0,f,c
  4178  002010  BE06               	btfsc	(restablecerDatosSensor@i+1)^0,7,c
  4179  002012  EF14  F010         	goto	u2201
  4180  002016  5006               	movf	(restablecerDatosSensor@i+1)^0,w,c
  4181  002018  E109               	bnz	u2200
  4182  00201A  0E03               	movlw	3
  4183  00201C  5C05               	subwf	restablecerDatosSensor@i^0,w,c
  4184  00201E  A0D8               	btfss	status,0,c
  4185  002020  EF14  F010         	goto	u2201
  4186  002024  EF16  F010         	goto	u2200
  4187  002028                     u2201:
  4188  002028  EFF3  F00F         	goto	l3000
  4189  00202C                     u2200:
  4190  00202C  0012               	return		;funcret
  4191  00202E                     __end_of_restablecerDatosSensor:
  4192                           	opt callstack 0
  4193                           
  4194 ;; *************** function _constructorSensor *****************
  4195 ;; Defined at:
  4196 ;;		line 123 in file "main.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;  s               2    0[COMRAM] struct .
  4199 ;;  porcientoHum    1    2[COMRAM] unsigned char 
  4200 ;;  pin             1    3[COMRAM] unsigned char 
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;		None
  4203 ;; Return value:  Size  Location     Type
  4204 ;;                  1    wreg      void 
  4205 ;; Registers used:
  4206 ;;		None
  4207 ;; Tracked objects:
  4208 ;;		On entry : 0/0
  4209 ;;		On exit  : 0/0
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4212 ;;      Params:         4       0       0       0       0       0       0       0       0
  4213 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4214 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4215 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4216 ;;Total ram usage:        4 bytes
  4217 ;; Hardware stack levels used:    1
  4218 ;; Hardware stack levels required when called:    1
  4219 ;; This function calls:
  4220 ;;		Nothing
  4221 ;; This function is called by:
  4222 ;;		_restablecerDatosSensor
  4223 ;; This function uses a non-reentrant model
  4224 ;;
  4225                           
  4226                           	psect	text14
  4227  0023E2                     __ptext14:
  4228                           	opt callstack 0
  4229  0023E2                     _constructorSensor:
  4230                           	opt callstack 26
  4231  0023E2                     
  4232                           ;main.c: 124:     s.porcientoHumedad = porcientoHumedad;
  4233  0023E2  C003  F001         	movff	constructorSensor@porcientoHumedad,constructorSensor@s
  4234                           
  4235                           ;main.c: 125:     s.pinSensor = pin;
  4236  0023E6  C004  F002         	movff	constructorSensor@pin,constructorSensor@s+1
  4237  0023EA  0012               	return		;funcret
  4238  0023EC                     __end_of_constructorSensor:
  4239                           	opt callstack 0
  4240                           
  4241 ;; *************** function _mostrarDatosSensores *****************
  4242 ;; Defined at:
  4243 ;;		line 731 in file "main.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;		None
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  i               2   72[BANK0 ] int 
  4248 ;;  buffer         50   20[BANK0 ] unsigned char [50]
  4249 ;;  humedad         1   71[BANK0 ] unsigned char 
  4250 ;;  temperatura     1   70[BANK0 ] unsigned char 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  1    wreg      void 
  4253 ;; Registers used:
  4254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4260 ;;      Params:         0       0       0       0       0       0       0       0       0
  4261 ;;      Locals:         0      54       0       0       0       0       0       0       0
  4262 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4263 ;;      Totals:         1      54       0       0       0       0       0       0       0
  4264 ;;Total ram usage:       55 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:    9
  4267 ;; This function calls:
  4268 ;;		_UART_printf
  4269 ;;		_UART_write
  4270 ;;		_dameTemperaturaHumedad
  4271 ;;		_lecturaAnalogaSensores
  4272 ;;		_sprintf
  4273 ;; This function is called by:
  4274 ;;		_sistemaPrincipal
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           	psect	text15
  4279  00123E                     __ptext15:
  4280                           	opt callstack 0
  4281  00123E                     _mostrarDatosSensores:
  4282                           	opt callstack 20
  4283  00123E                     
  4284                           ;main.c: 733:     char buffer[50];;main.c: 734:     unsigned char temperatura, humedad;;
      +                          main.c: 736:     dameTemperaturaHumedad(&humedad, &temperatura);
  4285  00123E  0EA7               	movlw	low mostrarDatosSensores@humedad
  4286  001240  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  4287  001242  0E00               	movlw	high mostrarDatosSensores@humedad
  4288  001244  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  4289  001246  0EA6               	movlw	low mostrarDatosSensores@temperatura
  4290  001248  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  4291  00124A  0E00               	movlw	high mostrarDatosSensores@temperatura
  4292  00124C  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  4293  00124E  EC02  F00C         	call	_dameTemperaturaHumedad	;wreg free
  4294  001252                     
  4295                           ;main.c: 738:     UART_write('I');
  4296  001252  0E49               	movlw	73
  4297  001254  ECD5  F011         	call	_UART_write
  4298  001258                     
  4299                           ;main.c: 741:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", humedad);
  4300  001258  0E74               	movlw	low mostrarDatosSensores@buffer
  4301  00125A  0100               	movlb	0	; () banked
  4302  00125C  6F60               	movwf	sprintf@s& (0+255),b
  4303  00125E  0E00               	movlw	high mostrarDatosSensores@buffer
  4304  001260  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4305  001262  0EE1               	movlw	low STR_29
  4306  001264  6F62               	movwf	sprintf@fmt& (0+255),b
  4307  001266  0E7E               	movlw	high STR_29
  4308  001268  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4309  00126A  C0A7  F064         	movff	mostrarDatosSensores@humedad,?_sprintf+4
  4310  00126E  6B65               	clrf	(?_sprintf+5)& (0+255),b
  4311  001270  ECC6  F00F         	call	_sprintf	;wreg free
  4312  001274                     
  4313                           ;main.c: 742:     UART_printf(buffer);
  4314  001274  0E74               	movlw	low mostrarDatosSensores@buffer
  4315  001276  6E02               	movwf	UART_printf@cadena^0,c
  4316  001278  0E00               	movlw	high mostrarDatosSensores@buffer
  4317  00127A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4318  00127C  EC11  F00F         	call	_UART_printf	;wreg free
  4319  001280                     
  4320                           ;main.c: 743:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", temperatura);
  4321  001280  0E74               	movlw	low mostrarDatosSensores@buffer
  4322  001282  0100               	movlb	0	; () banked
  4323  001284  6F60               	movwf	sprintf@s& (0+255),b
  4324  001286  0E00               	movlw	high mostrarDatosSensores@buffer
  4325  001288  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4326  00128A  0E20               	movlw	low STR_30
  4327  00128C  6F62               	movwf	sprintf@fmt& (0+255),b
  4328  00128E  0E7F               	movlw	high STR_30
  4329  001290  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4330  001292  C0A6  F064         	movff	mostrarDatosSensores@temperatura,?_sprintf+4
  4331  001296  6B65               	clrf	(?_sprintf+5)& (0+255),b
  4332  001298  ECC6  F00F         	call	_sprintf	;wreg free
  4333  00129C                     
  4334                           ;main.c: 744:     UART_printf(buffer);
  4335  00129C  0E74               	movlw	low mostrarDatosSensores@buffer
  4336  00129E  6E02               	movwf	UART_printf@cadena^0,c
  4337  0012A0  0E00               	movlw	high mostrarDatosSensores@buffer
  4338  0012A2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4339  0012A4  EC11  F00F         	call	_UART_printf	;wreg free
  4340  0012A8                     
  4341                           ;main.c: 746:     lecturaAnalogaSensores();
  4342  0012A8  EC5C  F00C         	call	_lecturaAnalogaSensores	;wreg free
  4343  0012AC                     
  4344                           ;main.c: 749:     for (int i = 0; i < 3; i++) {
  4345  0012AC  0E00               	movlw	0
  4346  0012AE  0100               	movlb	0	; () banked
  4347  0012B0  6FA9               	movwf	(mostrarDatosSensores@i+1)& (0+255),b
  4348  0012B2  0E00               	movlw	0
  4349  0012B4  6FA8               	movwf	mostrarDatosSensores@i& (0+255),b
  4350  0012B6                     l3518:
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;main.c: 751:         sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d %c\r\n
      +                          "
  4354  0012B6  0E74               	movlw	low mostrarDatosSensores@buffer
  4355  0012B8  6F60               	movwf	sprintf@s& (0+255),b
  4356  0012BA  0E00               	movlw	high mostrarDatosSensores@buffer
  4357  0012BC  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4358  0012BE  0E43               	movlw	low STR_31
  4359  0012C0  6F62               	movwf	sprintf@fmt& (0+255),b
  4360  0012C2  0E7D               	movlw	high STR_31
  4361  0012C4  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4362  0012C6  C0A8  F064         	movff	mostrarDatosSensores@i,?_sprintf+4
  4363  0012CA  C0A9  F065         	movff	mostrarDatosSensores@i+1,?_sprintf+5
  4364  0012CE  90D8               	bcf	status,0,c
  4365  0012D0  35A8               	rlcf	mostrarDatosSensores@i& (0+255),w,b
  4366  0012D2  6ED9               	movwf	fsr2l,c
  4367  0012D4  35A9               	rlcf	(mostrarDatosSensores@i+1)& (0+255),w,b
  4368  0012D6  6EDA               	movwf	fsr2h,c
  4369  0012D8  0E48               	movlw	low _sensores
  4370  0012DA  26D9               	addwf	fsr2l,f,c
  4371  0012DC  0E01               	movlw	high _sensores
  4372  0012DE  22DA               	addwfc	fsr2h,f,c
  4373  0012E0  50DF               	movf	indf2,w,c
  4374  0012E2  6E59               	movwf	??_mostrarDatosSensores^0,c
  4375  0012E4  5059               	movf	??_mostrarDatosSensores^0,w,c
  4376  0012E6  6F66               	movwf	(?_sprintf+6)& (0+255),b
  4377  0012E8  6B67               	clrf	(?_sprintf+7)& (0+255),b
  4378  0012EA  0E00               	movlw	0
  4379  0012EC  6F69               	movwf	(?_sprintf+9)& (0+255),b
  4380  0012EE  0E25               	movlw	37
  4381  0012F0  6F68               	movwf	(?_sprintf+8)& (0+255),b
  4382  0012F2  ECC6  F00F         	call	_sprintf	;wreg free
  4383  0012F6                     
  4384                           ;main.c: 753:         UART_printf(buffer);
  4385  0012F6  0E74               	movlw	low mostrarDatosSensores@buffer
  4386  0012F8  6E02               	movwf	UART_printf@cadena^0,c
  4387  0012FA  0E00               	movlw	high mostrarDatosSensores@buffer
  4388  0012FC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4389  0012FE  EC11  F00F         	call	_UART_printf	;wreg free
  4390  001302                     
  4391                           ;main.c: 754:     }
  4392  001302  0100               	movlb	0	; () banked
  4393  001304  4BA8               	infsnz	mostrarDatosSensores@i& (0+255),f,b
  4394  001306  2BA9               	incf	(mostrarDatosSensores@i+1)& (0+255),f,b
  4395  001308                     
  4396                           ; BSR set to: 0
  4397  001308  BFA9               	btfsc	(mostrarDatosSensores@i+1)& (0+255),7,b
  4398  00130A  EF90  F009         	goto	u2741
  4399  00130E  51A9               	movf	(mostrarDatosSensores@i+1)& (0+255),w,b
  4400  001310  E109               	bnz	u2740
  4401  001312  0E03               	movlw	3
  4402  001314  5DA8               	subwf	mostrarDatosSensores@i& (0+255),w,b
  4403  001316  A0D8               	btfss	status,0,c
  4404  001318  EF90  F009         	goto	u2741
  4405  00131C  EF92  F009         	goto	u2740
  4406  001320                     u2741:
  4407  001320  EF5B  F009         	goto	l3518
  4408  001324                     u2740:
  4409  001324                     
  4410                           ; BSR set to: 0
  4411                           ;main.c: 756:     UART_write('I');
  4412  001324  0E49               	movlw	73
  4413  001326  ECD5  F011         	call	_UART_write
  4414  00132A  0012               	return		;funcret
  4415  00132C                     __end_of_mostrarDatosSensores:
  4416                           	opt callstack 0
  4417                           
  4418 ;; *************** function _lecturaAnalogaSensores *****************
  4419 ;; Defined at:
  4420 ;;		line 567 in file "main.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;		None
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;  i               2   47[COMRAM] int 
  4425 ;; Return value:  Size  Location     Type
  4426 ;;                  1    wreg      void 
  4427 ;; Registers used:
  4428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4434 ;;      Params:         0       0       0       0       0       0       0       0       0
  4435 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4436 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4437 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4438 ;;Total ram usage:        3 bytes
  4439 ;; Hardware stack levels used:    1
  4440 ;; Hardware stack levels required when called:    3
  4441 ;; This function calls:
  4442 ;;		_dameHumedadSuelo
  4443 ;;		_map
  4444 ;; This function is called by:
  4445 ;;		_sistemaRegado
  4446 ;;		_mostrarDatosSensores
  4447 ;; This function uses a non-reentrant model
  4448 ;;
  4449                           
  4450                           	psect	text16
  4451  0018B8                     __ptext16:
  4452                           	opt callstack 0
  4453  0018B8                     _lecturaAnalogaSensores:
  4454                           	opt callstack 26
  4455  0018B8                     
  4456                           ;main.c: 569:     for (int i = 0; i < 3; i++) {
  4457  0018B8  0E00               	movlw	0
  4458  0018BA  6E31               	movwf	(lecturaAnalogaSensores@i+1)^0,c
  4459  0018BC  0E00               	movlw	0
  4460  0018BE  6E30               	movwf	lecturaAnalogaSensores@i^0,c
  4461  0018C0                     l3188:
  4462                           
  4463                           ;main.c: 570:         sensores[i].porcientoHumedad = map(dameHumedadSuelo(i), 0, 1023, 1
      +                          00, 0);
  4464  0018C0  90D8               	bcf	status,0,c
  4465  0018C2  3430               	rlcf	lecturaAnalogaSensores@i^0,w,c
  4466  0018C4  6ED9               	movwf	fsr2l,c
  4467  0018C6  3431               	rlcf	(lecturaAnalogaSensores@i+1)^0,w,c
  4468  0018C8  6EDA               	movwf	fsr2h,c
  4469  0018CA  0E48               	movlw	low _sensores
  4470  0018CC  26D9               	addwf	fsr2l,f,c
  4471  0018CE  0E01               	movlw	high _sensores
  4472  0018D0  22DA               	addwfc	fsr2h,f,c
  4473  0018D2  5030               	movf	lecturaAnalogaSensores@i^0,w,c
  4474  0018D4  EC3A  F010         	call	_dameHumedadSuelo
  4475  0018D8  C001  F01B         	movff	?_dameHumedadSuelo,map@x
  4476  0018DC  C002  F01C         	movff	?_dameHumedadSuelo+1,map@x+1
  4477  0018E0  0E00               	movlw	0
  4478  0018E2  BE1C               	btfsc	(map@x+1)^0,7,c
  4479  0018E4  0EFF               	movlw	-1
  4480  0018E6  6E1D               	movwf	(map@x+2)^0,c
  4481  0018E8  6E1E               	movwf	(map@x+3)^0,c
  4482  0018EA  0E00               	movlw	0
  4483  0018EC  6E1F               	movwf	map@in_min^0,c
  4484  0018EE  0E00               	movlw	0
  4485  0018F0  6E20               	movwf	(map@in_min+1)^0,c
  4486  0018F2  0E00               	movlw	0
  4487  0018F4  6E21               	movwf	(map@in_min+2)^0,c
  4488  0018F6  0E00               	movlw	0
  4489  0018F8  6E22               	movwf	(map@in_min+3)^0,c
  4490  0018FA  0EFF               	movlw	255
  4491  0018FC  6E23               	movwf	map@in_max^0,c
  4492  0018FE  0E03               	movlw	3
  4493  001900  6E24               	movwf	(map@in_max+1)^0,c
  4494  001902  0E00               	movlw	0
  4495  001904  6E25               	movwf	(map@in_max+2)^0,c
  4496  001906  0E00               	movlw	0
  4497  001908  6E26               	movwf	(map@in_max+3)^0,c
  4498  00190A  0E64               	movlw	100
  4499  00190C  6E27               	movwf	map@out_min^0,c
  4500  00190E  0E00               	movlw	0
  4501  001910  6E28               	movwf	(map@out_min+1)^0,c
  4502  001912  0E00               	movlw	0
  4503  001914  6E29               	movwf	(map@out_min+2)^0,c
  4504  001916  0E00               	movlw	0
  4505  001918  6E2A               	movwf	(map@out_min+3)^0,c
  4506  00191A  0E00               	movlw	0
  4507  00191C  6E2B               	movwf	map@out_max^0,c
  4508  00191E  0E00               	movlw	0
  4509  001920  6E2C               	movwf	(map@out_max+1)^0,c
  4510  001922  0E00               	movlw	0
  4511  001924  6E2D               	movwf	(map@out_max+2)^0,c
  4512  001926  0E00               	movlw	0
  4513  001928  6E2E               	movwf	(map@out_max+3)^0,c
  4514  00192A  EC9D  F00D         	call	_map	;wreg free
  4515  00192E  501B               	movf	?_map^0,w,c
  4516  001930  6EDF               	movwf	indf2,c
  4517  001932                     
  4518                           ;main.c: 571:         _delay((unsigned long)((5)*(4000000/4000.0)));
  4519  001932  0E07               	movlw	7
  4520  001934  6E2F               	movwf	??_lecturaAnalogaSensores^0,c
  4521  001936  0E7D               	movlw	125
  4522  001938                     u2957:
  4523  001938  2EE8               	decfsz	wreg,f,c
  4524  00193A  D7FE               	bra	u2957
  4525  00193C  2E2F               	decfsz	??_lecturaAnalogaSensores^0,f,c
  4526  00193E  D7FC               	bra	u2957
  4527  001940  F000               	nop	
  4528  001942                     
  4529                           ;main.c: 572:     }
  4530  001942  4A30               	infsnz	lecturaAnalogaSensores@i^0,f,c
  4531  001944  2A31               	incf	(lecturaAnalogaSensores@i+1)^0,f,c
  4532  001946  BE31               	btfsc	(lecturaAnalogaSensores@i+1)^0,7,c
  4533  001948  EFAF  F00C         	goto	u2351
  4534  00194C  5031               	movf	(lecturaAnalogaSensores@i+1)^0,w,c
  4535  00194E  E109               	bnz	u2350
  4536  001950  0E03               	movlw	3
  4537  001952  5C30               	subwf	lecturaAnalogaSensores@i^0,w,c
  4538  001954  A0D8               	btfss	status,0,c
  4539  001956  EFAF  F00C         	goto	u2351
  4540  00195A  EFB1  F00C         	goto	u2350
  4541  00195E                     u2351:
  4542  00195E  EF60  F00C         	goto	l3188
  4543  001962                     u2350:
  4544  001962  0012               	return		;funcret
  4545  001964                     __end_of_lecturaAnalogaSensores:
  4546                           	opt callstack 0
  4547                           
  4548 ;; *************** function _map *****************
  4549 ;; Defined at:
  4550 ;;		line 119 in file "main.c"
  4551 ;; Parameters:    Size  Location     Type
  4552 ;;  x               4   26[COMRAM] long 
  4553 ;;  in_min          4   30[COMRAM] long 
  4554 ;;  in_max          4   34[COMRAM] long 
  4555 ;;  out_min         4   38[COMRAM] long 
  4556 ;;  out_max         4   42[COMRAM] long 
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;		None
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  4   26[COMRAM] long 
  4561 ;; Registers used:
  4562 ;;		wreg, status,2, status,0, cstack
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/0
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4568 ;;      Params:        20       0       0       0       0       0       0       0       0
  4569 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4570 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4571 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4572 ;;Total ram usage:       20 bytes
  4573 ;; Hardware stack levels used:    1
  4574 ;; Hardware stack levels required when called:    2
  4575 ;; This function calls:
  4576 ;;		___aldiv
  4577 ;;		___lmul
  4578 ;; This function is called by:
  4579 ;;		_lecturaAnalogaSensores
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           	psect	text17
  4584  001B3A                     __ptext17:
  4585                           	opt callstack 0
  4586  001B3A                     _map:
  4587                           	opt callstack 26
  4588  001B3A                     
  4589                           ;main.c: 120:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  4590  001B3A  501F               	movf	map@in_min^0,w,c
  4591  001B3C  5C1B               	subwf	map@x^0,w,c
  4592  001B3E  6E01               	movwf	___lmul@multiplier^0,c
  4593  001B40  5020               	movf	(map@in_min+1)^0,w,c
  4594  001B42  581C               	subwfb	(map@x+1)^0,w,c
  4595  001B44  6E02               	movwf	(___lmul@multiplier+1)^0,c
  4596  001B46  5021               	movf	(map@in_min+2)^0,w,c
  4597  001B48  581D               	subwfb	(map@x+2)^0,w,c
  4598  001B4A  6E03               	movwf	(___lmul@multiplier+2)^0,c
  4599  001B4C  5022               	movf	(map@in_min+3)^0,w,c
  4600  001B4E  581E               	subwfb	(map@x+3)^0,w,c
  4601  001B50  6E04               	movwf	(___lmul@multiplier+3)^0,c
  4602  001B52  5027               	movf	map@out_min^0,w,c
  4603  001B54  5C2B               	subwf	map@out_max^0,w,c
  4604  001B56  6E05               	movwf	___lmul@multiplicand^0,c
  4605  001B58  5028               	movf	(map@out_min+1)^0,w,c
  4606  001B5A  582C               	subwfb	(map@out_max+1)^0,w,c
  4607  001B5C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4608  001B5E  5029               	movf	(map@out_min+2)^0,w,c
  4609  001B60  582D               	subwfb	(map@out_max+2)^0,w,c
  4610  001B62  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4611  001B64  502A               	movf	(map@out_min+3)^0,w,c
  4612  001B66  582E               	subwfb	(map@out_max+3)^0,w,c
  4613  001B68  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4614  001B6A  EC48  F00E         	call	___lmul	;wreg free
  4615  001B6E  C001  F00D         	movff	?___lmul,___aldiv@dividend
  4616  001B72  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  4617  001B76  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  4618  001B7A  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  4619  001B7E  501F               	movf	map@in_min^0,w,c
  4620  001B80  5C23               	subwf	map@in_max^0,w,c
  4621  001B82  6E11               	movwf	___aldiv@divisor^0,c
  4622  001B84  5020               	movf	(map@in_min+1)^0,w,c
  4623  001B86  5824               	subwfb	(map@in_max+1)^0,w,c
  4624  001B88  6E12               	movwf	(___aldiv@divisor+1)^0,c
  4625  001B8A  5021               	movf	(map@in_min+2)^0,w,c
  4626  001B8C  5825               	subwfb	(map@in_max+2)^0,w,c
  4627  001B8E  6E13               	movwf	(___aldiv@divisor+2)^0,c
  4628  001B90  5022               	movf	(map@in_min+3)^0,w,c
  4629  001B92  5826               	subwfb	(map@in_max+3)^0,w,c
  4630  001B94  6E14               	movwf	(___aldiv@divisor+3)^0,c
  4631  001B96  EC1A  F008         	call	___aldiv	;wreg free
  4632  001B9A  5027               	movf	map@out_min^0,w,c
  4633  001B9C  240D               	addwf	?___aldiv^0,w,c
  4634  001B9E  6E1B               	movwf	?_map^0,c
  4635  001BA0  5028               	movf	(map@out_min+1)^0,w,c
  4636  001BA2  200E               	addwfc	(?___aldiv+1)^0,w,c
  4637  001BA4  6E1C               	movwf	(?_map+1)^0,c
  4638  001BA6  5029               	movf	(map@out_min+2)^0,w,c
  4639  001BA8  200F               	addwfc	(?___aldiv+2)^0,w,c
  4640  001BAA  6E1D               	movwf	(?_map+2)^0,c
  4641  001BAC  502A               	movf	(map@out_min+3)^0,w,c
  4642  001BAE  2010               	addwfc	(?___aldiv+3)^0,w,c
  4643  001BB0  6E1E               	movwf	(?_map+3)^0,c
  4644  001BB2  0012               	return		;funcret
  4645  001BB4                     __end_of_map:
  4646                           	opt callstack 0
  4647                           
  4648 ;; *************** function ___lmul *****************
  4649 ;; Defined at:
  4650 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;  multiplier      4    0[COMRAM] unsigned long 
  4653 ;;  multiplicand    4    4[COMRAM] unsigned long 
  4654 ;; Auto vars:     Size  Location     Type
  4655 ;;  product         4    8[COMRAM] unsigned long 
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  4    0[COMRAM] unsigned long 
  4658 ;; Registers used:
  4659 ;;		wreg, status,2, status,0
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4665 ;;      Params:         8       0       0       0       0       0       0       0       0
  4666 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4667 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4668 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4669 ;;Total ram usage:       12 bytes
  4670 ;; Hardware stack levels used:    1
  4671 ;; Hardware stack levels required when called:    1
  4672 ;; This function calls:
  4673 ;;		Nothing
  4674 ;; This function is called by:
  4675 ;;		_map
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           	psect	text18
  4680  001C90                     __ptext18:
  4681                           	opt callstack 0
  4682  001C90                     ___lmul:
  4683                           	opt callstack 26
  4684  001C90  0E00               	movlw	0
  4685  001C92  6E09               	movwf	___lmul@product^0,c
  4686  001C94  0E00               	movlw	0
  4687  001C96  6E0A               	movwf	(___lmul@product+1)^0,c
  4688  001C98  0E00               	movlw	0
  4689  001C9A  6E0B               	movwf	(___lmul@product+2)^0,c
  4690  001C9C  0E00               	movlw	0
  4691  001C9E  6E0C               	movwf	(___lmul@product+3)^0,c
  4692  001CA0                     l2866:
  4693  001CA0  A001               	btfss	___lmul@multiplier^0,0,c
  4694  001CA2  EF55  F00E         	goto	u2061
  4695  001CA6  EF57  F00E         	goto	u2060
  4696  001CAA                     u2061:
  4697  001CAA  EF5F  F00E         	goto	l2870
  4698  001CAE                     u2060:
  4699  001CAE  5005               	movf	___lmul@multiplicand^0,w,c
  4700  001CB0  2609               	addwf	___lmul@product^0,f,c
  4701  001CB2  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  4702  001CB4  220A               	addwfc	(___lmul@product+1)^0,f,c
  4703  001CB6  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  4704  001CB8  220B               	addwfc	(___lmul@product+2)^0,f,c
  4705  001CBA  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  4706  001CBC  220C               	addwfc	(___lmul@product+3)^0,f,c
  4707  001CBE                     l2870:
  4708  001CBE  90D8               	bcf	status,0,c
  4709  001CC0  3605               	rlcf	___lmul@multiplicand^0,f,c
  4710  001CC2  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4711  001CC4  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4712  001CC6  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4713  001CC8  90D8               	bcf	status,0,c
  4714  001CCA  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  4715  001CCC  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  4716  001CCE  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  4717  001CD0  3201               	rrcf	___lmul@multiplier^0,f,c
  4718  001CD2  5001               	movf	___lmul@multiplier^0,w,c
  4719  001CD4  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  4720  001CD6  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  4721  001CD8  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  4722  001CDA  A4D8               	btfss	status,2,c
  4723  001CDC  EF72  F00E         	goto	u2071
  4724  001CE0  EF74  F00E         	goto	u2070
  4725  001CE4                     u2071:
  4726  001CE4  EF50  F00E         	goto	l2866
  4727  001CE8                     u2070:
  4728  001CE8  C009  F001         	movff	___lmul@product,?___lmul
  4729  001CEC  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  4730  001CF0  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  4731  001CF4  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  4732  001CF8  0012               	return		;funcret
  4733  001CFA                     __end_of___lmul:
  4734                           	opt callstack 0
  4735                           
  4736 ;; *************** function _dameHumedadSuelo *****************
  4737 ;; Defined at:
  4738 ;;		line 474 in file "main.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;  canalLeer       1    wreg     unsigned char 
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;  canalLeer       1    4[COMRAM] unsigned char 
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  2    0[COMRAM] short 
  4745 ;; Registers used:
  4746 ;;		wreg, status,2, status,0
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4752 ;;      Params:         2       0       0       0       0       0       0       0       0
  4753 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4754 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4755 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4756 ;;Total ram usage:        5 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    1
  4759 ;; This function calls:
  4760 ;;		Nothing
  4761 ;; This function is called by:
  4762 ;;		_lecturaAnalogaSensores
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           	psect	text19
  4767  002074                     __ptext19:
  4768                           	opt callstack 0
  4769  002074                     _dameHumedadSuelo:
  4770                           	opt callstack 27
  4771                           
  4772                           ;incstack = 0
  4773                           ;dameHumedadSuelo@canalLeer stored from wreg
  4774  002074  6E05               	movwf	dameHumedadSuelo@canalLeer^0,c
  4775  002076                     
  4776                           ;main.c: 476:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  4777  002076  0E06               	movlw	6
  4778  002078                     u2967:
  4779  002078  2EE8               	decfsz	wreg,f,c
  4780  00207A  D7FE               	bra	u2967
  4781  00207C  D000               	nop2	
  4782  00207E                     
  4783                           ;main.c: 478:     ADCON0bits.ADON = 1;
  4784  00207E  80C2               	bsf	194,0,c	;volatile
  4785  002080                     
  4786                           ;main.c: 479:     ADCON0bits.CHS = canalLeer;
  4787  002080  C005  F003         	movff	dameHumedadSuelo@canalLeer,??_dameHumedadSuelo
  4788  002084  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  4789  002086  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  4790  002088  50C2               	movf	194,w,c	;volatile
  4791  00208A  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  4792  00208C  0BC3               	andlw	-61
  4793  00208E  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  4794  002090  6EC2               	movwf	194,c	;volatile
  4795  002092                     
  4796                           ;main.c: 480:     ADCON0bits.GO = 1;
  4797  002092  82C2               	bsf	194,1,c	;volatile
  4798  002094                     
  4799                           ;main.c: 481:     ADCON0bits.GO_DONE = 1;
  4800  002094  82C2               	bsf	194,1,c	;volatile
  4801  002096                     l313:
  4802  002096  B2C2               	btfsc	194,1,c	;volatile
  4803  002098  EF50  F010         	goto	u2191
  4804  00209C  EF52  F010         	goto	u2190
  4805  0020A0                     u2191:
  4806  0020A0  EF4B  F010         	goto	l313
  4807  0020A4                     u2190:
  4808  0020A4                     
  4809                           ;main.c: 485:     ADCON0bits.ADON = 0;
  4810  0020A4  90C2               	bcf	194,0,c	;volatile
  4811  0020A6                     
  4812                           ;main.c: 487:     return (ADRESH << 8) +ADRESL;
  4813  0020A6  50C4               	movf	196,w,c	;volatile
  4814  0020A8  6E04               	movwf	(??_dameHumedadSuelo+1)^0,c
  4815  0020AA  6A03               	clrf	??_dameHumedadSuelo^0,c
  4816  0020AC  50C3               	movf	195,w,c	;volatile
  4817  0020AE  2403               	addwf	??_dameHumedadSuelo^0,w,c
  4818  0020B0  6E01               	movwf	?_dameHumedadSuelo^0,c
  4819  0020B2  0E00               	movlw	0
  4820  0020B4  2004               	addwfc	(??_dameHumedadSuelo+1)^0,w,c
  4821  0020B6  6E02               	movwf	(?_dameHumedadSuelo+1)^0,c
  4822  0020B8  0012               	return		;funcret
  4823  0020BA                     __end_of_dameHumedadSuelo:
  4824                           	opt callstack 0
  4825                           
  4826 ;; *************** function _dameTemperaturaHumedad *****************
  4827 ;; Defined at:
  4828 ;;		line 696 in file "main.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;  Humedad         2    3[COMRAM] PTR unsigned char 
  4831 ;;		 -> mostrarDatosSensoresWIFI@humedad(1), mostrarDatosSensores@humedad(1), NULL(0), 
  4832 ;;  Temperatura     2    5[COMRAM] PTR unsigned char 
  4833 ;;		 -> mostrarDatosSensoresWIFI@temperatura(1), mostrarDatosSensores@temperatura(1), estaSeco@temperatura(1), 
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;  checkSum        2    9[COMRAM] unsigned int 
  4836 ;;  temperatura     1   14[COMRAM] unsigned char 
  4837 ;;  humedad         1   13[COMRAM] unsigned char 
  4838 ;;  temperaturaD    1   12[COMRAM] unsigned char 
  4839 ;;  humedadDecim    1   11[COMRAM] unsigned char 
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  1    wreg      void 
  4842 ;; Registers used:
  4843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4849 ;;      Params:         4       0       0       0       0       0       0       0       0
  4850 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4851 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4852 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4853 ;;Total ram usage:       12 bytes
  4854 ;; Hardware stack levels used:    1
  4855 ;; Hardware stack levels required when called:    3
  4856 ;; This function calls:
  4857 ;;		_DHT11_ReadData
  4858 ;;		_DHT11_Start
  4859 ;;		_UART_printf
  4860 ;;		_check_response
  4861 ;; This function is called by:
  4862 ;;		_estaSeco
  4863 ;;		_mostrarDatosSensores
  4864 ;;		_mostrarDatosSensoresWIFI
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           	psect	text20
  4869  001804                     __ptext20:
  4870                           	opt callstack 0
  4871  001804                     _dameTemperaturaHumedad:
  4872                           	opt callstack 24
  4873  001804                     
  4874                           ;main.c: 698:     PIE1bits.RCIE = 0;
  4875  001804  9A9D               	bcf	157,5,c	;volatile
  4876                           
  4877                           ;main.c: 699:     T0CONbits.TMR0ON = 0;
  4878  001806  9ED5               	bcf	213,7,c	;volatile
  4879  001808                     
  4880                           ;main.c: 705:     DHT11_Start();
  4881  001808  ECA9  F011         	call	_DHT11_Start	;wreg free
  4882  00180C                     
  4883                           ;main.c: 707:     if (check_response()) {
  4884  00180C  ECA1  F010         	call	_check_response	;wreg free
  4885  001810  0900               	iorlw	0
  4886  001812  B4D8               	btfsc	status,2,c
  4887  001814  EF0E  F00C         	goto	u2171
  4888  001818  EF10  F00C         	goto	u2170
  4889  00181C                     u2171:
  4890  00181C  EF53  F00C         	goto	l2970
  4891  001820                     u2170:
  4892  001820                     
  4893                           ;main.c: 710:         humedad = DHT11_ReadData();
  4894  001820  EC40  F00F         	call	_DHT11_ReadData	;wreg free
  4895  001824  6E0E               	movwf	dameTemperaturaHumedad@humedad^0,c
  4896                           
  4897                           ;main.c: 711:         humedadDecimal = DHT11_ReadData();
  4898  001826  EC40  F00F         	call	_DHT11_ReadData	;wreg free
  4899  00182A  6E0C               	movwf	dameTemperaturaHumedad@humedadDecimal^0,c
  4900                           
  4901                           ;main.c: 712:         temperatura = DHT11_ReadData();
  4902  00182C  EC40  F00F         	call	_DHT11_ReadData	;wreg free
  4903  001830  6E0F               	movwf	dameTemperaturaHumedad@temperatura^0,c
  4904                           
  4905                           ;main.c: 713:         temperaturaDecimal = DHT11_ReadData();
  4906  001832  EC40  F00F         	call	_DHT11_ReadData	;wreg free
  4907  001836  6E0D               	movwf	dameTemperaturaHumedad@temperaturaDecimal^0,c
  4908                           
  4909                           ;main.c: 714:         checkSum = DHT11_ReadData();
  4910  001838  EC40  F00F         	call	_DHT11_ReadData	;wreg free
  4911  00183C  6E08               	movwf	??_dameTemperaturaHumedad^0,c
  4912  00183E  5008               	movf	??_dameTemperaturaHumedad^0,w,c
  4913  001840  6E0A               	movwf	dameTemperaturaHumedad@checkSum^0,c
  4914  001842  6A0B               	clrf	(dameTemperaturaHumedad@checkSum+1)^0,c
  4915  001844                     
  4916                           ;main.c: 716:         if (checkSum != (humedad + humedadDecimal + temperatura + temperat
      +                          uraDecimal))
  4917  001844  500C               	movf	dameTemperaturaHumedad@humedadDecimal^0,w,c
  4918  001846  C00E  F008         	movff	dameTemperaturaHumedad@humedad,??_dameTemperaturaHumedad
  4919  00184A  6A09               	clrf	(??_dameTemperaturaHumedad+1)^0,c
  4920  00184C  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  4921  00184E  0E00               	movlw	0
  4922  001850  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  4923  001852  500F               	movf	dameTemperaturaHumedad@temperatura^0,w,c
  4924  001854  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  4925  001856  0E00               	movlw	0
  4926  001858  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  4927  00185A  500D               	movf	dameTemperaturaHumedad@temperaturaDecimal^0,w,c
  4928  00185C  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  4929  00185E  0E00               	movlw	0
  4930  001860  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  4931  001862  500A               	movf	dameTemperaturaHumedad@checkSum^0,w,c
  4932  001864  1808               	xorwf	??_dameTemperaturaHumedad^0,w,c
  4933  001866  E109               	bnz	u2180
  4934  001868  500B               	movf	(dameTemperaturaHumedad@checkSum+1)^0,w,c
  4935  00186A  1809               	xorwf	(??_dameTemperaturaHumedad+1)^0,w,c
  4936  00186C  B4D8               	btfsc	status,2,c
  4937  00186E  EF3B  F00C         	goto	u2181
  4938  001872  EF3D  F00C         	goto	u2180
  4939  001876                     u2181:
  4940  001876  EF45  F00C         	goto	l2968
  4941  00187A                     u2180:
  4942  00187A                     
  4943                           ;main.c: 717:             UART_printf("Error de lectura DHT11\r\n");
  4944  00187A  0E8B               	movlw	low STR_27
  4945  00187C  6E02               	movwf	UART_printf@cadena^0,c
  4946  00187E  0E7F               	movlw	high STR_27
  4947  001880  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4948  001882  EC11  F00F         	call	_UART_printf	;wreg free
  4949  001886  EF59  F00C         	goto	l2972
  4950  00188A                     l2968:
  4951                           
  4952                           ;main.c: 719:             *Humedad = humedad;
  4953  00188A  C004  FFD9         	movff	dameTemperaturaHumedad@Humedad,fsr2l
  4954  00188E  C005  FFDA         	movff	dameTemperaturaHumedad@Humedad+1,fsr2h
  4955  001892  C00E  FFDF         	movff	dameTemperaturaHumedad@humedad,indf2
  4956                           
  4957                           ;main.c: 720:             *Temperatura = temperatura;
  4958  001896  C006  FFD9         	movff	dameTemperaturaHumedad@Temperatura,fsr2l
  4959  00189A  C007  FFDA         	movff	dameTemperaturaHumedad@Temperatura+1,fsr2h
  4960  00189E  C00F  FFDF         	movff	dameTemperaturaHumedad@temperatura,indf2
  4961  0018A2  EF59  F00C         	goto	l2972
  4962  0018A6                     l2970:
  4963                           
  4964                           ;main.c: 724:         UART_printf("DHT11 NO RESPONDIO\r\n");
  4965  0018A6  0EBB               	movlw	low STR_28
  4966  0018A8  6E02               	movwf	UART_printf@cadena^0,c
  4967  0018AA  0E7F               	movlw	high STR_28
  4968  0018AC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4969  0018AE  EC11  F00F         	call	_UART_printf	;wreg free
  4970  0018B2                     l2972:
  4971                           
  4972                           ;main.c: 727:     PIE1bits.RCIE = 1;
  4973  0018B2  8A9D               	bsf	157,5,c	;volatile
  4974  0018B4                     
  4975                           ;main.c: 728:     T0CONbits.TMR0ON = 1;
  4976  0018B4  8ED5               	bsf	213,7,c	;volatile
  4977  0018B6  0012               	return		;funcret
  4978  0018B8                     __end_of_dameTemperaturaHumedad:
  4979                           	opt callstack 0
  4980                           
  4981 ;; *************** function _check_response *****************
  4982 ;; Defined at:
  4983 ;;		line 38 in file "./DHT11.h"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;		None
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;  respuesta       1    0[COMRAM] unsigned char 
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  1    wreg      unsigned char 
  4990 ;; Registers used:
  4991 ;;		wreg, status,2
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4997 ;;      Params:         0       0       0       0       0       0       0       0       0
  4998 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4999 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5000 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5001 ;;Total ram usage:        1 bytes
  5002 ;; Hardware stack levels used:    1
  5003 ;; Hardware stack levels required when called:    1
  5004 ;; This function calls:
  5005 ;;		Nothing
  5006 ;; This function is called by:
  5007 ;;		_dameTemperaturaHumedad
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           	psect	text21
  5012  002142                     __ptext21:
  5013                           	opt callstack 0
  5014  002142                     _check_response:
  5015                           	opt callstack 25
  5016  002142                     
  5017                           ;./DHT11.h: 40:     unsigned char respuesta = 0;
  5018  002142  0E00               	movlw	0
  5019  002144  6E01               	movwf	check_response@respuesta^0,c
  5020  002146                     
  5021                           ;./DHT11.h: 41:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  5022  002146  0E0D               	movlw	13
  5023  002148                     u2977:
  5024  002148  2EE8               	decfsz	wreg,f,c
  5025  00214A  D7FE               	bra	u2977
  5026  00214C  F000               	nop	
  5027  00214E                     
  5028                           ;./DHT11.h: 42:     if (!PORTDbits.RD7) {
  5029  00214E  BE83               	btfsc	131,7,c	;volatile
  5030  002150  EFAC  F010         	goto	u2031
  5031  002154  EFAE  F010         	goto	u2030
  5032  002158                     u2031:
  5033  002158  EFBF  F010         	goto	l2850
  5034  00215C                     u2030:
  5035  00215C                     
  5036                           ;./DHT11.h: 43:         _delay((unsigned long)((80)*(4000000/4000000.0)));
  5037  00215C  0E1A               	movlw	26
  5038  00215E                     u2987:
  5039  00215E  2EE8               	decfsz	wreg,f,c
  5040  002160  D7FE               	bra	u2987
  5041  002162  D000               	nop2	
  5042  002164                     
  5043                           ;./DHT11.h: 44:         if (PORTDbits.RD7) {
  5044  002164  AE83               	btfss	131,7,c	;volatile
  5045  002166  EFB7  F010         	goto	u2041
  5046  00216A  EFB9  F010         	goto	u2040
  5047  00216E                     u2041:
  5048  00216E  EFBF  F010         	goto	l2850
  5049  002172                     u2040:
  5050  002172                     
  5051                           ;./DHT11.h: 45:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  5052  002172  0E10               	movlw	16
  5053  002174                     u2997:
  5054  002174  2EE8               	decfsz	wreg,f,c
  5055  002176  D7FE               	bra	u2997
  5056  002178  D000               	nop2	
  5057  00217A                     
  5058                           ;./DHT11.h: 46:             respuesta = 1;
  5059  00217A  0E01               	movlw	1
  5060  00217C  6E01               	movwf	check_response@respuesta^0,c
  5061  00217E                     l2850:
  5062                           
  5063                           ;./DHT11.h: 50:     return respuesta;
  5064  00217E  5001               	movf	check_response@respuesta^0,w,c
  5065  002180  0012               	return		;funcret
  5066  002182                     __end_of_check_response:
  5067                           	opt callstack 0
  5068                           
  5069 ;; *************** function _DHT11_Start *****************
  5070 ;; Defined at:
  5071 ;;		line 23 in file "./DHT11.h"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;		None
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;		None
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  1    wreg      void 
  5078 ;; Registers used:
  5079 ;;		wreg
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5085 ;;      Params:         0       0       0       0       0       0       0       0       0
  5086 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5087 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5088 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5089 ;;Total ram usage:        1 bytes
  5090 ;; Hardware stack levels used:    1
  5091 ;; Hardware stack levels required when called:    1
  5092 ;; This function calls:
  5093 ;;		Nothing
  5094 ;; This function is called by:
  5095 ;;		_dameTemperaturaHumedad
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text22
  5100  002352                     __ptext22:
  5101                           	opt callstack 0
  5102  002352                     _DHT11_Start:
  5103                           	opt callstack 25
  5104  002352                     
  5105                           ;./DHT11.h: 24:     TRISDbits.RD7 = 0;
  5106  002352  9E95               	bcf	149,7,c	;volatile
  5107                           
  5108                           ;./DHT11.h: 26:     LATDbits.LATD7 = 0;
  5109  002354  9E8C               	bcf	140,7,c	;volatile
  5110  002356                     
  5111                           ;./DHT11.h: 28:     _delay((unsigned long)((20)*(4000000/4000.0)));
  5112  002356  0E1A               	movlw	26
  5113  002358  6E01               	movwf	??_DHT11_Start^0,c
  5114  00235A  0EF8               	movlw	248
  5115  00235C                     u3007:
  5116  00235C  2EE8               	decfsz	wreg,f,c
  5117  00235E  D7FE               	bra	u3007
  5118  002360  2E01               	decfsz	??_DHT11_Start^0,f,c
  5119  002362  D7FC               	bra	u3007
  5120  002364  D000               	nop2	
  5121  002366                     
  5122                           ;./DHT11.h: 30:     LATDbits.LATD7 = 1;
  5123  002366  8E8C               	bsf	140,7,c	;volatile
  5124                           
  5125                           ;./DHT11.h: 32:     _delay((unsigned long)((30)*(4000000/4000000.0)));
  5126  002368  0E0A               	movlw	10
  5127  00236A                     u3017:
  5128  00236A  2EE8               	decfsz	wreg,f,c
  5129  00236C  D7FE               	bra	u3017
  5130  00236E                     
  5131                           ;./DHT11.h: 34:     TRISDbits.RD7 = 1;
  5132  00236E  8E95               	bsf	149,7,c	;volatile
  5133  002370  0012               	return		;funcret
  5134  002372                     __end_of_DHT11_Start:
  5135                           	opt callstack 0
  5136                           
  5137 ;; *************** function _DHT11_ReadData *****************
  5138 ;; Defined at:
  5139 ;;		line 9 in file "./DHT11.h"
  5140 ;; Parameters:    Size  Location     Type
  5141 ;;		None
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;  data            1    1[COMRAM] unsigned char 
  5144 ;;  i               1    0[COMRAM] unsigned char 
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  1    wreg      unsigned char 
  5147 ;; Registers used:
  5148 ;;		wreg, status,2, status,0
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5154 ;;      Params:         0       0       0       0       0       0       0       0       0
  5155 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5156 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5157 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5158 ;;Total ram usage:        2 bytes
  5159 ;; Hardware stack levels used:    1
  5160 ;; Hardware stack levels required when called:    1
  5161 ;; This function calls:
  5162 ;;		Nothing
  5163 ;; This function is called by:
  5164 ;;		_dameTemperaturaHumedad
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           	psect	text23
  5169  001E80                     __ptext23:
  5170                           	opt callstack 0
  5171  001E80                     _DHT11_ReadData:
  5172                           	opt callstack 25
  5173  001E80                     
  5174                           ;./DHT11.h: 10:     char i, data = 0;
  5175  001E80  0E00               	movlw	0
  5176  001E82  6E02               	movwf	DHT11_ReadData@data^0,c
  5177                           
  5178                           ;./DHT11.h: 11:     for (i = 0; i < 8; i++) {
  5179  001E84  0E00               	movlw	0
  5180  001E86  6E01               	movwf	DHT11_ReadData@i^0,c
  5181  001E88                     l144:
  5182  001E88  AE83               	btfss	131,7,c	;volatile
  5183  001E8A  EF49  F00F         	goto	u1991
  5184  001E8E  EF4B  F00F         	goto	u1990
  5185  001E92                     u1991:
  5186  001E92  EF44  F00F         	goto	l144
  5187  001E96                     u1990:
  5188  001E96                     
  5189                           ;./DHT11.h: 13:         _delay((unsigned long)((30)*(4000000/4000000.0)));
  5190  001E96  0E0A               	movlw	10
  5191  001E98                     u3027:
  5192  001E98  2EE8               	decfsz	wreg,f,c
  5193  001E9A  D7FE               	bra	u3027
  5194  001E9C                     
  5195                           ;./DHT11.h: 14:         if (PORTDbits.RD7 & 1)
  5196  001E9C  AE83               	btfss	131,7,c	;volatile
  5197  001E9E  EF53  F00F         	goto	u2001
  5198  001EA2  EF55  F00F         	goto	u2000
  5199  001EA6                     u2001:
  5200  001EA6  EF59  F00F         	goto	l2818
  5201  001EAA                     u2000:
  5202  001EAA                     
  5203                           ;./DHT11.h: 15:             data = ((data << 1) | 1);
  5204  001EAA  80D8               	bsf	status,0,c
  5205  001EAC  3602               	rlcf	DHT11_ReadData@data^0,f,c
  5206  001EAE  EF5C  F00F         	goto	l149
  5207  001EB2                     l2818:
  5208                           
  5209                           ;./DHT11.h: 17:             data = (data << 1);
  5210  001EB2  5002               	movf	DHT11_ReadData@data^0,w,c
  5211  001EB4  2402               	addwf	DHT11_ReadData@data^0,w,c
  5212  001EB6  6E02               	movwf	DHT11_ReadData@data^0,c
  5213  001EB8                     l149:
  5214  001EB8  BE83               	btfsc	131,7,c	;volatile
  5215  001EBA  EF61  F00F         	goto	u2011
  5216  001EBE  EF63  F00F         	goto	u2010
  5217  001EC2                     u2011:
  5218  001EC2  EF5C  F00F         	goto	l149
  5219  001EC6                     u2010:
  5220  001EC6                     
  5221                           ;./DHT11.h: 19:     }
  5222  001EC6  2A01               	incf	DHT11_ReadData@i^0,f,c
  5223  001EC8  0E07               	movlw	7
  5224  001ECA  6401               	cpfsgt	DHT11_ReadData@i^0,c
  5225  001ECC  EF6A  F00F         	goto	u2021
  5226  001ED0  EF6C  F00F         	goto	u2020
  5227  001ED4                     u2021:
  5228  001ED4  EF44  F00F         	goto	l144
  5229  001ED8                     u2020:
  5230  001ED8                     
  5231                           ;./DHT11.h: 20:     return data;
  5232  001ED8  5002               	movf	DHT11_ReadData@data^0,w,c
  5233  001EDA  0012               	return		;funcret
  5234  001EDC                     __end_of_DHT11_ReadData:
  5235                           	opt callstack 0
  5236                           
  5237 ;; *************** function _fijaHoraRtc *****************
  5238 ;; Defined at:
  5239 ;;		line 325 in file "main.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;		None
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;		None
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  1    wreg      void 
  5246 ;; Registers used:
  5247 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5248 ;; Tracked objects:
  5249 ;;		On entry : 0/0
  5250 ;;		On exit  : 0/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5253 ;;      Params:         0       0       0       0       0       0       0       0       0
  5254 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5255 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5256 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5257 ;;Total ram usage:        0 bytes
  5258 ;; Hardware stack levels used:    1
  5259 ;; Hardware stack levels required when called:    5
  5260 ;; This function calls:
  5261 ;;		_UART_printf
  5262 ;;		_escribe_rtc
  5263 ;;		_setRtc
  5264 ;; This function is called by:
  5265 ;;		_sistemaPrincipal
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268                           
  5269                           	psect	text24
  5270  001C24                     __ptext24:
  5271                           	opt callstack 0
  5272  001C24                     _fijaHoraRtc:
  5273                           	opt callstack 24
  5274  001C24                     
  5275                           ;main.c: 327:     UART_printf("\r\n FIJA HORA \r\n");
  5276  001C24  0ED0               	movlw	low STR_1
  5277  001C26  6E02               	movwf	UART_printf@cadena^0,c
  5278  001C28  0E7F               	movlw	high STR_1
  5279  001C2A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5280  001C2C  EC11  F00F         	call	_UART_printf	;wreg free
  5281                           
  5282                           ;main.c: 330:     UART_printf("\r\n Envie las Horas en formato 24 Ej: 15 \r\n");
  5283  001C30  0E70               	movlw	low STR_2
  5284  001C32  6E02               	movwf	UART_printf@cadena^0,c
  5285  001C34  0E7D               	movlw	high STR_2
  5286  001C36  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5287  001C38  EC11  F00F         	call	_UART_printf	;wreg free
  5288  001C3C                     
  5289                           ;main.c: 331:     setRtc(0x02);
  5290  001C3C  0E02               	movlw	2
  5291  001C3E  ECD7  F00A         	call	_setRtc
  5292  001C42                     
  5293                           ;main.c: 334:     if (!esperandoDatos) {
  5294  001C42  0100               	movlb	0	; () banked
  5295  001C44  51F6               	movf	_esperandoDatos& (0+255),w,b
  5296  001C46  A4D8               	btfss	status,2,c
  5297  001C48  EF28  F00E         	goto	u2481
  5298  001C4C  EF2A  F00E         	goto	u2480
  5299  001C50                     u2481:
  5300  001C50  EF33  F00E         	goto	l3290
  5301  001C54                     u2480:
  5302  001C54                     
  5303                           ; BSR set to: 0
  5304                           ;main.c: 335:         UART_printf("\r\n Envie los Minutos Ej: 25 \r\n");
  5305  001C54  0E01               	movlw	low STR_3
  5306  001C56  6E02               	movwf	UART_printf@cadena^0,c
  5307  001C58  0E7F               	movlw	high STR_3
  5308  001C5A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5309  001C5C  EC11  F00F         	call	_UART_printf	;wreg free
  5310  001C60                     
  5311                           ;main.c: 336:         setRtc(0x01);
  5312  001C60  0E01               	movlw	1
  5313  001C62  ECD7  F00A         	call	_setRtc
  5314  001C66                     l3290:
  5315                           
  5316                           ;main.c: 340:     if (!esperandoDatos) {
  5317  001C66  0100               	movlb	0	; () banked
  5318  001C68  51F6               	movf	_esperandoDatos& (0+255),w,b
  5319  001C6A  A4D8               	btfss	status,2,c
  5320  001C6C  EF3A  F00E         	goto	u2491
  5321  001C70  EF3C  F00E         	goto	u2490
  5322  001C74                     u2491:
  5323  001C74  EF47  F00E         	goto	l280
  5324  001C78                     u2490:
  5325  001C78                     
  5326                           ; BSR set to: 0
  5327                           ;main.c: 342:         UART_printf("\r\n HORA ESTABLECIDA CORRECTAMENTE \r\n");
  5328  001C78  0E35               	movlw	low STR_4
  5329  001C7A  6E02               	movwf	UART_printf@cadena^0,c
  5330  001C7C  0E7E               	movlw	high STR_4
  5331  001C7E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5332  001C80  EC11  F00F         	call	_UART_printf	;wreg free
  5333  001C84                     
  5334                           ;main.c: 343:         escribe_rtc(0x00, 0);
  5335  001C84  0E00               	movlw	0
  5336  001C86  6E03               	movwf	escribe_rtc@dato^0,c
  5337  001C88  0E00               	movlw	0
  5338  001C8A  ECB9  F011         	call	_escribe_rtc
  5339  001C8E                     l280:
  5340  001C8E  0012               	return		;funcret
  5341  001C90                     __end_of_fijaHoraRtc:
  5342                           	opt callstack 0
  5343                           
  5344 ;; *************** function _setRtc *****************
  5345 ;; Defined at:
  5346 ;;		line 164 in file "main.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;  direccion       1    wreg     unsigned char 
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;  direccion       1    5[COMRAM] unsigned char 
  5351 ;;  Rx              1   10[COMRAM] unsigned char 
  5352 ;;  i               2    8[COMRAM] int 
  5353 ;;  datoCapturad    1    7[COMRAM] unsigned char 
  5354 ;;  dato            1    6[COMRAM] unsigned char 
  5355 ;; Return value:  Size  Location     Type
  5356 ;;                  1    wreg      void 
  5357 ;; Registers used:
  5358 ;;		wreg, status,2, status,0, cstack
  5359 ;; Tracked objects:
  5360 ;;		On entry : 0/0
  5361 ;;		On exit  : 0/0
  5362 ;;		Unchanged: 0/0
  5363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5364 ;;      Params:         0       0       0       0       0       0       0       0       0
  5365 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5366 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5367 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5368 ;;Total ram usage:        7 bytes
  5369 ;; Hardware stack levels used:    1
  5370 ;; Hardware stack levels required when called:    4
  5371 ;; This function calls:
  5372 ;;		_UART_read
  5373 ;;		_UART_write
  5374 ;;		_escribe_rtc
  5375 ;; This function is called by:
  5376 ;;		_fijaHoraRtc
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           	psect	text25
  5381  0015AE                     __ptext25:
  5382                           	opt callstack 0
  5383  0015AE                     _setRtc:
  5384                           	opt callstack 24
  5385                           
  5386                           ;incstack = 0
  5387                           ;setRtc@direccion stored from wreg
  5388  0015AE  6E06               	movwf	setRtc@direccion^0,c
  5389  0015B0                     
  5390                           ;main.c: 165:     unsigned char dato;;main.c: 166:     char datoCapturado = 0;
  5391  0015B0  0E00               	movlw	0
  5392  0015B2  6E08               	movwf	setRtc@datoCapturado^0,c
  5393                           
  5394                           ;main.c: 168:     for (int i = 0; i < 2; i++) {
  5395  0015B4  0E00               	movlw	0
  5396  0015B6  6E0A               	movwf	(setRtc@i+1)^0,c
  5397  0015B8  0E00               	movlw	0
  5398  0015BA  6E09               	movwf	setRtc@i^0,c
  5399  0015BC                     l3060:
  5400                           
  5401                           ;main.c: 169:         char Rx = UART_read();
  5402  0015BC  EC9C  F00F         	call	_UART_read	;wreg free
  5403  0015C0  6E0B               	movwf	setRtc@Rx^0,c
  5404  0015C2                     
  5405                           ;main.c: 170:         if (Rx >= 48 && Rx <= 57) {
  5406  0015C2  0E2F               	movlw	47
  5407  0015C4  640B               	cpfsgt	setRtc@Rx^0,c
  5408  0015C6  EFE7  F00A         	goto	u2231
  5409  0015CA  EFE9  F00A         	goto	u2230
  5410  0015CE                     u2231:
  5411  0015CE  EF0D  F00B         	goto	l3074
  5412  0015D2                     u2230:
  5413  0015D2  0E3A               	movlw	58
  5414  0015D4  600B               	cpfslt	setRtc@Rx^0,c
  5415  0015D6  EFEF  F00A         	goto	u2241
  5416  0015DA  EFF1  F00A         	goto	u2240
  5417  0015DE                     u2241:
  5418  0015DE  EF0D  F00B         	goto	l3074
  5419  0015E2                     u2240:
  5420  0015E2                     
  5421                           ;main.c: 171:             if (!i) {
  5422  0015E2  5009               	movf	setRtc@i^0,w,c
  5423  0015E4  100A               	iorwf	(setRtc@i+1)^0,w,c
  5424  0015E6  A4D8               	btfss	status,2,c
  5425  0015E8  EFF8  F00A         	goto	u2251
  5426  0015EC  EFFA  F00A         	goto	u2250
  5427  0015F0                     u2251:
  5428  0015F0  EF05  F00B         	goto	l3070
  5429  0015F4                     u2250:
  5430  0015F4                     
  5431                           ;main.c: 172:                 dato = ((Rx - 48) & 0x0F) << 4;
  5432  0015F4  C00B  F005         	movff	setRtc@Rx,??_setRtc
  5433  0015F8  0ED0               	movlw	208
  5434  0015FA  2605               	addwf	??_setRtc^0,f,c
  5435  0015FC  0E0F               	movlw	15
  5436  0015FE  1605               	andwf	??_setRtc^0,f,c
  5437  001600  3805               	swapf	??_setRtc^0,w,c
  5438  001602  0BF0               	andlw	240
  5439  001604  6E07               	movwf	setRtc@dato^0,c
  5440                           
  5441                           ;main.c: 173:             } else {
  5442  001606  EF14  F00B         	goto	l3078
  5443  00160A                     l3070:
  5444                           
  5445                           ;main.c: 174:                 dato |= (Rx - 48) & 0x0F;
  5446  00160A  500B               	movf	setRtc@Rx^0,w,c
  5447  00160C  0FD0               	addlw	208
  5448  00160E  0B0F               	andlw	15
  5449  001610  1207               	iorwf	setRtc@dato^0,f,c
  5450  001612                     
  5451                           ;main.c: 175:                 datoCapturado = 1;
  5452  001612  0E01               	movlw	1
  5453  001614  6E08               	movwf	setRtc@datoCapturado^0,c
  5454  001616  EF14  F00B         	goto	l3078
  5455  00161A                     l3074:
  5456                           
  5457                           ;main.c: 178:             datoCapturado = 0;
  5458  00161A  0E00               	movlw	0
  5459  00161C  6E08               	movwf	setRtc@datoCapturado^0,c
  5460  00161E                     
  5461                           ;main.c: 180:             UART_write('F');
  5462  00161E  0E46               	movlw	70
  5463  001620  ECD5  F011         	call	_UART_write
  5464                           
  5465                           ;main.c: 181:             break;
  5466  001624  EF24  F00B         	goto	l3082
  5467  001628                     l3078:
  5468                           
  5469                           ;main.c: 183:     }
  5470  001628  4A09               	infsnz	setRtc@i^0,f,c
  5471  00162A  2A0A               	incf	(setRtc@i+1)^0,f,c
  5472  00162C  BE0A               	btfsc	(setRtc@i+1)^0,7,c
  5473  00162E  EF22  F00B         	goto	u2261
  5474  001632  500A               	movf	(setRtc@i+1)^0,w,c
  5475  001634  E109               	bnz	u2260
  5476  001636  0E02               	movlw	2
  5477  001638  5C09               	subwf	setRtc@i^0,w,c
  5478  00163A  A0D8               	btfss	status,0,c
  5479  00163C  EF22  F00B         	goto	u2261
  5480  001640  EF24  F00B         	goto	u2260
  5481  001644                     u2261:
  5482  001644  EFDE  F00A         	goto	l3060
  5483  001648                     u2260:
  5484  001648                     l3082:
  5485                           
  5486                           ;main.c: 185:     if (datoCapturado && !esperandoDatos)
  5487  001648  5008               	movf	setRtc@datoCapturado^0,w,c
  5488  00164A  B4D8               	btfsc	status,2,c
  5489  00164C  EF2A  F00B         	goto	u2271
  5490  001650  EF2C  F00B         	goto	u2270
  5491  001654                     u2271:
  5492  001654  EF3A  F00B         	goto	l232
  5493  001658                     u2270:
  5494  001658  0100               	movlb	0	; () banked
  5495  00165A  51F6               	movf	_esperandoDatos& (0+255),w,b
  5496  00165C  A4D8               	btfss	status,2,c
  5497  00165E  EF33  F00B         	goto	u2281
  5498  001662  EF35  F00B         	goto	u2280
  5499  001666                     u2281:
  5500  001666  EF3A  F00B         	goto	l232
  5501  00166A                     u2280:
  5502  00166A                     
  5503                           ; BSR set to: 0
  5504                           ;main.c: 186:         escribe_rtc(direccion, dato);
  5505  00166A  C007  F003         	movff	setRtc@dato,escribe_rtc@dato
  5506  00166E  5006               	movf	setRtc@direccion^0,w,c
  5507  001670  ECB9  F011         	call	_escribe_rtc
  5508  001674                     l232:
  5509  001674  0012               	return		;funcret
  5510  001676                     __end_of_setRtc:
  5511                           	opt callstack 0
  5512                           
  5513 ;; *************** function _escribe_rtc *****************
  5514 ;; Defined at:
  5515 ;;		line 2 in file "./RTC.h"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;  direccion       1    wreg     unsigned char 
  5518 ;;  dato            1    2[COMRAM] unsigned char 
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;  direccion       1    3[COMRAM] unsigned char 
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  1    wreg      void 
  5523 ;; Registers used:
  5524 ;;		wreg, status,2, status,0, cstack
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5530 ;;      Params:         1       0       0       0       0       0       0       0       0
  5531 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5532 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5533 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5534 ;;Total ram usage:        2 bytes
  5535 ;; Hardware stack levels used:    1
  5536 ;; Hardware stack levels required when called:    3
  5537 ;; This function calls:
  5538 ;;		_i2c_detener
  5539 ;;		_i2c_envia_dato
  5540 ;;		_i2c_inicia_com
  5541 ;; This function is called by:
  5542 ;;		_setRtc
  5543 ;;		_fijaHoraRtc
  5544 ;;		_setRtcDefault
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           
  5548                           	psect	text26
  5549  002372                     __ptext26:
  5550                           	opt callstack 0
  5551  002372                     _escribe_rtc:
  5552                           	opt callstack 24
  5553                           
  5554                           ;incstack = 0
  5555                           ;escribe_rtc@direccion stored from wreg
  5556  002372  6E04               	movwf	escribe_rtc@direccion^0,c
  5557  002374                     
  5558                           ;./RTC.h: 3:     i2c_inicia_com();
  5559  002374  ECFF  F011         	call	_i2c_inicia_com	;wreg free
  5560                           
  5561                           ;./RTC.h: 4:     i2c_envia_dato(0xD0);
  5562  002378  0ED0               	movlw	208
  5563  00237A  ECEB  F011         	call	_i2c_envia_dato
  5564                           
  5565                           ;./RTC.h: 5:     i2c_envia_dato(direccion);
  5566  00237E  5004               	movf	escribe_rtc@direccion^0,w,c
  5567  002380  ECEB  F011         	call	_i2c_envia_dato
  5568                           
  5569                           ;./RTC.h: 6:     i2c_envia_dato(dato);
  5570  002384  5003               	movf	escribe_rtc@dato^0,w,c
  5571  002386  ECEB  F011         	call	_i2c_envia_dato
  5572                           
  5573                           ;./RTC.h: 7:     i2c_detener();
  5574  00238A  EC03  F012         	call	_i2c_detener	;wreg free
  5575  00238E  0012               	return		;funcret
  5576  002390                     __end_of_escribe_rtc:
  5577                           	opt callstack 0
  5578                           
  5579 ;; *************** function _dameDatosSistema *****************
  5580 ;; Defined at:
  5581 ;;		line 675 in file "main.c"
  5582 ;; Parameters:    Size  Location     Type
  5583 ;;		None
  5584 ;; Auto vars:     Size  Location     Type
  5585 ;;  i               2   70[BANK0 ] int 
  5586 ;;  buffer         50   20[BANK0 ] unsigned char [50]
  5587 ;; Return value:  Size  Location     Type
  5588 ;;                  1    wreg      void 
  5589 ;; Registers used:
  5590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5596 ;;      Params:         0       0       0       0       0       0       0       0       0
  5597 ;;      Locals:         0      52       0       0       0       0       0       0       0
  5598 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5599 ;;      Totals:         3      52       0       0       0       0       0       0       0
  5600 ;;Total ram usage:       55 bytes
  5601 ;; Hardware stack levels used:    1
  5602 ;; Hardware stack levels required when called:    9
  5603 ;; This function calls:
  5604 ;;		_UART_printf
  5605 ;;		_UART_write
  5606 ;;		___wmul
  5607 ;;		_sprintf
  5608 ;; This function is called by:
  5609 ;;		_sistemaPrincipal
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           	psect	text27
  5614  00132C                     __ptext27:
  5615                           	opt callstack 0
  5616  00132C                     _dameDatosSistema:
  5617                           	opt callstack 20
  5618  00132C                     
  5619                           ;main.c: 677:     char buffer[50];;main.c: 679:     UART_write('I');
  5620  00132C  0E49               	movlw	73
  5621  00132E  ECD5  F011         	call	_UART_write
  5622  001332                     
  5623                           ;main.c: 681:     UART_printf("\r\n\nHora | Regar(1 si 0 no) | Minutos de riego \r\n\n")
      +                          ;
  5624  001332  0EE0               	movlw	low STR_25
  5625  001334  6E02               	movwf	UART_printf@cadena^0,c
  5626  001336  0E7C               	movlw	high STR_25
  5627  001338  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5628  00133A  EC11  F00F         	call	_UART_printf	;wreg free
  5629  00133E                     
  5630                           ;main.c: 683:     for (int i = 0; i < 24; i++) {
  5631  00133E  0E00               	movlw	0
  5632  001340  0100               	movlb	0	; () banked
  5633  001342  6FA7               	movwf	(dameDatosSistema@i+1)& (0+255),b
  5634  001344  0E00               	movlw	0
  5635  001346  6FA6               	movwf	dameDatosSistema@i& (0+255),b
  5636  001348                     l3460:
  5637                           
  5638                           ; BSR set to: 0
  5639                           ;main.c: 685:         sprintf(buffer, "%d | %d | %d \r\n", horarios[i].hora, horarios[i]
      +                          .regar,
  5640  001348  0E74               	movlw	low dameDatosSistema@buffer
  5641  00134A  6F60               	movwf	sprintf@s& (0+255),b
  5642  00134C  0E00               	movlw	high dameDatosSistema@buffer
  5643  00134E  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5644  001350  0EE0               	movlw	low STR_26
  5645  001352  6F62               	movwf	sprintf@fmt& (0+255),b
  5646  001354  0E7F               	movlw	high STR_26
  5647  001356  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5648  001358  C0A6  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  5649  00135C  C0A7  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  5650  001360  0E00               	movlw	0
  5651  001362  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5652  001364  0E03               	movlw	3
  5653  001366  6E03               	movwf	___wmul@multiplicand^0,c
  5654  001368  EC86  F011         	call	___wmul	;wreg free
  5655  00136C  0E00               	movlw	low _horarios
  5656  00136E  2401               	addwf	?___wmul^0,w,c
  5657  001370  6ED9               	movwf	fsr2l,c
  5658  001372  0E01               	movlw	high _horarios
  5659  001374  2002               	addwfc	(?___wmul+1)^0,w,c
  5660  001376  6EDA               	movwf	fsr2h,c
  5661  001378  50DF               	movf	indf2,w,c
  5662  00137A  6E59               	movwf	??_dameDatosSistema^0,c
  5663  00137C  5059               	movf	??_dameDatosSistema^0,w,c
  5664  00137E  0100               	movlb	0	; () banked
  5665  001380  6F64               	movwf	(?_sprintf+4)& (0+255),b
  5666  001382  6B65               	clrf	(?_sprintf+5)& (0+255),b
  5667  001384  C0A6  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  5668  001388  C0A7  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  5669  00138C  0E00               	movlw	0
  5670  00138E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5671  001390  0E03               	movlw	3
  5672  001392  6E03               	movwf	___wmul@multiplicand^0,c
  5673  001394  EC86  F011         	call	___wmul	;wreg free
  5674  001398  0E01               	movlw	low (_horarios+1)
  5675  00139A  2401               	addwf	?___wmul^0,w,c
  5676  00139C  6ED9               	movwf	fsr2l,c
  5677  00139E  0E01               	movlw	high (_horarios+1)
  5678  0013A0  2002               	addwfc	(?___wmul+1)^0,w,c
  5679  0013A2  6EDA               	movwf	fsr2h,c
  5680  0013A4  50DF               	movf	indf2,w,c
  5681  0013A6  6E5A               	movwf	(??_dameDatosSistema+1)^0,c
  5682  0013A8  505A               	movf	(??_dameDatosSistema+1)^0,w,c
  5683  0013AA  0100               	movlb	0	; () banked
  5684  0013AC  6F66               	movwf	(?_sprintf+6)& (0+255),b
  5685  0013AE  6B67               	clrf	(?_sprintf+7)& (0+255),b
  5686  0013B0  C0A6  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  5687  0013B4  C0A7  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  5688  0013B8  0E00               	movlw	0
  5689  0013BA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5690  0013BC  0E03               	movlw	3
  5691  0013BE  6E03               	movwf	___wmul@multiplicand^0,c
  5692  0013C0  EC86  F011         	call	___wmul	;wreg free
  5693  0013C4  0E02               	movlw	low (_horarios+2)
  5694  0013C6  2401               	addwf	?___wmul^0,w,c
  5695  0013C8  6ED9               	movwf	fsr2l,c
  5696  0013CA  0E01               	movlw	high (_horarios+2)
  5697  0013CC  2002               	addwfc	(?___wmul+1)^0,w,c
  5698  0013CE  6EDA               	movwf	fsr2h,c
  5699  0013D0  50DF               	movf	indf2,w,c
  5700  0013D2  6E5B               	movwf	(??_dameDatosSistema+2)^0,c
  5701  0013D4  505B               	movf	(??_dameDatosSistema+2)^0,w,c
  5702  0013D6  0100               	movlb	0	; () banked
  5703  0013D8  6F68               	movwf	(?_sprintf+8)& (0+255),b
  5704  0013DA  6B69               	clrf	(?_sprintf+9)& (0+255),b
  5705  0013DC  ECC6  F00F         	call	_sprintf	;wreg free
  5706  0013E0                     
  5707                           ;main.c: 688:         UART_printf(buffer);
  5708  0013E0  0E74               	movlw	low dameDatosSistema@buffer
  5709  0013E2  6E02               	movwf	UART_printf@cadena^0,c
  5710  0013E4  0E00               	movlw	high dameDatosSistema@buffer
  5711  0013E6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5712  0013E8  EC11  F00F         	call	_UART_printf	;wreg free
  5713  0013EC                     
  5714                           ;main.c: 690:     }
  5715  0013EC  0100               	movlb	0	; () banked
  5716  0013EE  4BA6               	infsnz	dameDatosSistema@i& (0+255),f,b
  5717  0013F0  2BA7               	incf	(dameDatosSistema@i+1)& (0+255),f,b
  5718  0013F2                     
  5719                           ; BSR set to: 0
  5720  0013F2  BFA7               	btfsc	(dameDatosSistema@i+1)& (0+255),7,b
  5721  0013F4  EF05  F00A         	goto	u2711
  5722  0013F8  51A7               	movf	(dameDatosSistema@i+1)& (0+255),w,b
  5723  0013FA  E109               	bnz	u2710
  5724  0013FC  0E18               	movlw	24
  5725  0013FE  5DA6               	subwf	dameDatosSistema@i& (0+255),w,b
  5726  001400  A0D8               	btfss	status,0,c
  5727  001402  EF05  F00A         	goto	u2711
  5728  001406  EF07  F00A         	goto	u2710
  5729  00140A                     u2711:
  5730  00140A  EFA4  F009         	goto	l3460
  5731  00140E                     u2710:
  5732  00140E                     
  5733                           ; BSR set to: 0
  5734                           ;main.c: 692:     UART_write('I');
  5735  00140E  0E49               	movlw	73
  5736  001410  ECD5  F011         	call	_UART_write
  5737  001414  0012               	return		;funcret
  5738  001416                     __end_of_dameDatosSistema:
  5739                           	opt callstack 0
  5740                           
  5741 ;; *************** function _sprintf *****************
  5742 ;; Defined at:
  5743 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;  s               2    0[BANK0 ] PTR unsigned char 
  5746 ;;		 -> mostrarDatosSensoresWIFI@buffer(50), mostrarDatosSensores@buffer(50), dameDatosSistema@buffer(50), lecturaWifi@b
      +uffer(50), 
  5747 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  5748 ;;		 -> STR_34(29), STR_33(32), STR_32(45), STR_31(45), 
  5749 ;;		 -> STR_30(29), STR_29(32), STR_26(16), STR_14(51), 
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;  f               6   14[BANK0 ] struct _IO_FILE
  5752 ;;  ap              2   12[BANK0 ] PTR void [1]
  5753 ;;		 -> ?_sprintf(2), 
  5754 ;;  ret             2    0        int 
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  2    0[BANK0 ] int 
  5757 ;; Registers used:
  5758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5764 ;;      Params:         0      10       0       0       0       0       0       0       0
  5765 ;;      Locals:         0      10       0       0       0       0       0       0       0
  5766 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5767 ;;      Totals:         0      20       0       0       0       0       0       0       0
  5768 ;;Total ram usage:       20 bytes
  5769 ;; Hardware stack levels used:    1
  5770 ;; Hardware stack levels required when called:    8
  5771 ;; This function calls:
  5772 ;;		_vfprintf
  5773 ;; This function is called by:
  5774 ;;		_lecturaWifi
  5775 ;;		_dameDatosSistema
  5776 ;;		_mostrarDatosSensores
  5777 ;;		_mostrarDatosSensoresWIFI
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           	psect	text28
  5782  001F8C                     __ptext28:
  5783                           	opt callstack 0
  5784  001F8C                     _sprintf:
  5785                           	opt callstack 20
  5786  001F8C  0E64               	movlw	low (?_sprintf+4)
  5787  001F8E  0100               	movlb	0	; () banked
  5788  001F90  6F6C               	movwf	sprintf@ap& (0+255),b
  5789  001F92  0E00               	movlw	high (?_sprintf+4)
  5790  001F94  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  5791  001F96  C060  F06E         	movff	sprintf@s,sprintf@f
  5792  001F9A  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  5793  001F9E                     
  5794                           ; BSR set to: 0
  5795  001F9E  0E00               	movlw	0
  5796  001FA0  6F71               	movwf	(sprintf@f+3)& (0+255),b
  5797  001FA2  0E00               	movlw	0
  5798  001FA4  6F70               	movwf	(sprintf@f+2)& (0+255),b
  5799  001FA6                     
  5800                           ; BSR set to: 0
  5801  001FA6  0E00               	movlw	0
  5802  001FA8  6F73               	movwf	(sprintf@f+5)& (0+255),b
  5803  001FAA  0E00               	movlw	0
  5804  001FAC  6F72               	movwf	(sprintf@f+4)& (0+255),b
  5805  001FAE                     
  5806                           ; BSR set to: 0
  5807  001FAE  0E6E               	movlw	low sprintf@f
  5808  001FB0  6E51               	movwf	vfprintf@fp^0,c
  5809  001FB2  0E00               	movlw	high sprintf@f
  5810  001FB4  6E52               	movwf	(vfprintf@fp+1)^0,c
  5811  001FB6  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  5812  001FBA  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5813  001FBE  0E6C               	movlw	low sprintf@ap
  5814  001FC0  6E55               	movwf	vfprintf@ap^0,c
  5815  001FC2  0E00               	movlw	high sprintf@ap
  5816  001FC4  6E56               	movwf	(vfprintf@ap+1)^0,c
  5817  001FC6  ECE0  F00E         	call	_vfprintf	;wreg free
  5818  001FCA  0100               	movlb	0	; () banked
  5819  001FCC  5170               	movf	(sprintf@f+2)& (0+255),w,b
  5820  001FCE  2560               	addwf	sprintf@s& (0+255),w,b
  5821  001FD0  6ED9               	movwf	fsr2l,c
  5822  001FD2  5171               	movf	(sprintf@f+3)& (0+255),w,b
  5823  001FD4  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  5824  001FD6  6EDA               	movwf	fsr2h,c
  5825  001FD8  0E00               	movlw	0
  5826  001FDA  6EDF               	movwf	indf2,c
  5827  001FDC                     
  5828                           ; BSR set to: 0
  5829  001FDC  0012               	return		;funcret
  5830  001FDE                     __end_of_sprintf:
  5831                           	opt callstack 0
  5832                           
  5833 ;; *************** function _vfprintf *****************
  5834 ;; Defined at:
  5835 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  5838 ;;		 -> sprintf@f(6), 
  5839 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  5840 ;;		 -> STR_34(29), STR_33(32), STR_32(45), STR_31(45), 
  5841 ;;		 -> STR_30(29), STR_29(32), STR_26(16), STR_14(51), 
  5842 ;;  ap              2   84[COMRAM] PTR PTR void 
  5843 ;;		 -> sprintf@ap(2), 
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  5846 ;;		 -> STR_34(29), STR_33(32), STR_32(45), STR_31(45), 
  5847 ;;		 -> STR_30(29), STR_29(32), STR_26(16), STR_14(51), 
  5848 ;; Return value:  Size  Location     Type
  5849 ;;                  2   80[COMRAM] int 
  5850 ;; Registers used:
  5851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5852 ;; Tracked objects:
  5853 ;;		On entry : 0/0
  5854 ;;		On exit  : 0/0
  5855 ;;		Unchanged: 0/0
  5856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5857 ;;      Params:         6       0       0       0       0       0       0       0       0
  5858 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5859 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5860 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5861 ;;Total ram usage:        8 bytes
  5862 ;; Hardware stack levels used:    1
  5863 ;; Hardware stack levels required when called:    7
  5864 ;; This function calls:
  5865 ;;		_vfpfcnvrt
  5866 ;; This function is called by:
  5867 ;;		_sprintf
  5868 ;; This function uses a non-reentrant model
  5869 ;;
  5870                           
  5871                           	psect	text29
  5872  001DC0                     __ptext29:
  5873                           	opt callstack 0
  5874  001DC0                     _vfprintf:
  5875                           	opt callstack 20
  5876  001DC0                     
  5877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5878  001DC0  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  5879  001DC4  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5880  001DC8                     
  5881                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5882  001DC8  0E00               	movlw	0
  5883  001DCA  0100               	movlb	0	; () banked
  5884  001DCC  6FE3               	movwf	(_nout+1)& (0+255),b
  5885  001DCE  0E00               	movlw	0
  5886  001DD0  6FE2               	movwf	_nout& (0+255),b
  5887                           
  5888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5889  001DD2  EFFE  F00E         	goto	l2862
  5890  001DD6                     l2860:
  5891                           
  5892                           ; BSR set to: 0
  5893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5894  001DD6  C051  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  5895  001DDA  C052  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5896  001DDE  0E57               	movlw	low vfprintf@cfmt
  5897  001DE0  6E42               	movwf	vfpfcnvrt@fmt^0,c
  5898  001DE2  0E00               	movlw	high vfprintf@cfmt
  5899  001DE4  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5900  001DE6  C055  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  5901  001DEA  C056  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5902  001DEE  ECA7  F002         	call	_vfpfcnvrt	;wreg free
  5903  001DF2  5040               	movf	?_vfpfcnvrt^0,w,c
  5904  001DF4  0100               	movlb	0	; () banked
  5905  001DF6  27E2               	addwf	_nout& (0+255),f,b
  5906  001DF8  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  5907  001DFA  23E3               	addwfc	(_nout+1)& (0+255),f,b
  5908  001DFC                     l2862:
  5909                           
  5910                           ; BSR set to: 0
  5911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5912  001DFC  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  5913  001E00  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5914  001E04                     	if	0	;tblptru may be non-zero
  5915  001E04                     	endif
  5916  001E04                     	if	0	;tblptru may be non-zero
  5917  001E04                     	endif
  5918  001E04  0008               	tblrd		*
  5919  001E06  50F5               	movf	tablat,w,c
  5920  001E08  0900               	iorlw	0
  5921  001E0A  A4D8               	btfss	status,2,c
  5922  001E0C  EF0A  F00F         	goto	u2051
  5923  001E10  EF0C  F00F         	goto	u2050
  5924  001E14                     u2051:
  5925  001E14  EFEB  F00E         	goto	l2860
  5926  001E18                     u2050:
  5927  001E18                     
  5928                           ; BSR set to: 0
  5929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5930  001E18  C0E2  F051         	movff	_nout,?_vfprintf
  5931  001E1C  C0E3  F052         	movff	_nout+1,?_vfprintf+1
  5932  001E20                     
  5933                           ; BSR set to: 0
  5934  001E20  0012               	return		;funcret
  5935  001E22                     __end_of_vfprintf:
  5936                           	opt callstack 0
  5937                           
  5938 ;; *************** function _vfpfcnvrt *****************
  5939 ;; Defined at:
  5940 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  5943 ;;		 -> sprintf@f(6), 
  5944 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  5945 ;;		 -> vfprintf@cfmt(2), 
  5946 ;;  ap              2   67[COMRAM] PTR PTR void 
  5947 ;;		 -> sprintf@ap(2), 
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;  ll              8   71[COMRAM] long long 
  5950 ;;  llu             8    0        unsigned long long 
  5951 ;;  f               4    0        unsigned long long 
  5952 ;;  vp              3    0        PTR void 
  5953 ;;  ct              3    0        unsigned char [3]
  5954 ;;  cp              3    0        PTR unsigned char 
  5955 ;;  i               2    0        int 
  5956 ;;  done            2    0        int 
  5957 ;;  c               1   79[COMRAM] unsigned char 
  5958 ;; Return value:  Size  Location     Type
  5959 ;;                  2   63[COMRAM] int 
  5960 ;; Registers used:
  5961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5962 ;; Tracked objects:
  5963 ;;		On entry : 0/0
  5964 ;;		On exit  : 0/0
  5965 ;;		Unchanged: 0/0
  5966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5967 ;;      Params:         6       0       0       0       0       0       0       0       0
  5968 ;;      Locals:         9       0       0       0       0       0       0       0       0
  5969 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5970 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5971 ;;Total ram usage:       17 bytes
  5972 ;; Hardware stack levels used:    1
  5973 ;; Hardware stack levels required when called:    6
  5974 ;; This function calls:
  5975 ;;		_ctoa
  5976 ;;		_dtoa
  5977 ;;		_fputc
  5978 ;; This function is called by:
  5979 ;;		_vfprintf
  5980 ;; This function uses a non-reentrant model
  5981 ;;
  5982                           
  5983                           	psect	text30
  5984  00054E                     __ptext30:
  5985                           	opt callstack 0
  5986  00054E                     _vfpfcnvrt:
  5987                           	opt callstack 20
  5988  00054E                     
  5989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5990  00054E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5991  000552  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5992  000556  CFDE FFF6          	movff	postinc2,tblptrl
  5993  00055A  CFDD FFF7          	movff	postdec2,tblptrh
  5994  00055E                     	if	0	;tblptru may be non-zero
  5995  00055E                     	endif
  5996  00055E                     	if	0	;tblptru may be non-zero
  5997  00055E                     	endif
  5998  00055E  0008               	tblrd		*
  5999  000560  50F5               	movf	tablat,w,c
  6000  000562  0A25               	xorlw	37
  6001  000564  A4D8               	btfss	status,2,c
  6002  000566  EFB7  F002         	goto	u1911
  6003  00056A  EFB9  F002         	goto	u1910
  6004  00056E                     u1911:
  6005  00056E  EF9E  F003         	goto	l2774
  6006  000572                     u1910:
  6007  000572                     
  6008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6009  000572  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6010  000576  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6011  00057A  2ADE               	incf	postinc2,f,c
  6012  00057C  0E00               	movlw	0
  6013  00057E  22DD               	addwfc	postdec2,f,c
  6014  000580                     
  6015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6016  000580  0E00               	movlw	0
  6017  000582  0100               	movlb	0	; () banked
  6018  000584  6FE5               	movwf	(_width+1)& (0+255),b
  6019  000586  0E00               	movlw	0
  6020  000588  6FE4               	movwf	_width& (0+255),b
  6021  00058A  C0E4  F0E8         	movff	_width,_flags
  6022  00058E  C0E5  F0E9         	movff	_width+1,_flags+1
  6023  000592                     
  6024                           ; BSR set to: 0
  6025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6026  000592  69E6               	setf	_prec& (0+255),b
  6027  000594  69E7               	setf	(_prec+1)& (0+255),b
  6028  000596                     
  6029                           ; BSR set to: 0
  6030                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  6031  000596  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6032  00059A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6033  00059E  CFDE FFF6          	movff	postinc2,tblptrl
  6034  0005A2  CFDD FFF7          	movff	postdec2,tblptrh
  6035  0005A6                     	if	0	;tblptru may be non-zero
  6036  0005A6                     	endif
  6037  0005A6                     	if	0	;tblptru may be non-zero
  6038  0005A6                     	endif
  6039  0005A6  0008               	tblrd		*
  6040  0005A8  50F5               	movf	tablat,w,c
  6041  0005AA  0A63               	xorlw	99
  6042  0005AC  A4D8               	btfss	status,2,c
  6043  0005AE  EFDB  F002         	goto	u1921
  6044  0005B2  EFDD  F002         	goto	u1920
  6045  0005B6                     u1921:
  6046  0005B6  EF04  F003         	goto	l2748
  6047  0005BA                     u1920:
  6048  0005BA                     
  6049                           ; BSR set to: 0
  6050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  6051  0005BA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6052  0005BE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6053  0005C2  2ADE               	incf	postinc2,f,c
  6054  0005C4  0E00               	movlw	0
  6055  0005C6  22DD               	addwfc	postdec2,f,c
  6056                           
  6057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6058  0005C8  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6059  0005CC  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6060  0005D0  CFDF F046          	movff	indf2,??_vfpfcnvrt
  6061  0005D4  0E02               	movlw	2
  6062  0005D6  26DE               	addwf	postinc2,f,c
  6063  0005D8  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  6064  0005DC  0E00               	movlw	0
  6065  0005DE  22DD               	addwfc	postdec2,f,c
  6066  0005E0  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6067  0005E4  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6068  0005E8  50DF               	movf	indf2,w,c
  6069  0005EA  6E50               	movwf	vfpfcnvrt@c^0,c
  6070  0005EC                     
  6071                           ; BSR set to: 0
  6072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  6073  0005EC  C040  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  6074  0005F0  C041  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  6075  0005F4  C050  F01E         	movff	vfpfcnvrt@c,ctoa@c
  6076  0005F8  EC6E  F00F         	call	_ctoa	;wreg free
  6077  0005FC  C01C  F040         	movff	?_ctoa,?_vfpfcnvrt
  6078  000600  C01D  F041         	movff	?_ctoa+1,?_vfpfcnvrt+1
  6079  000604  EFB9  F003         	goto	l479
  6080  000608                     l2748:
  6081                           
  6082                           ; BSR set to: 0
  6083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6084  000608  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6085  00060C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6086  000610  CFDE FFF6          	movff	postinc2,tblptrl
  6087  000614  CFDD FFF7          	movff	postdec2,tblptrh
  6088  000618                     	if	0	;tblptru may be non-zero
  6089  000618                     	endif
  6090  000618                     	if	0	;tblptru may be non-zero
  6091  000618                     	endif
  6092  000618  0008               	tblrd		*
  6093  00061A  50F5               	movf	tablat,w,c
  6094  00061C  0A64               	xorlw	100
  6095  00061E  B4D8               	btfsc	status,2,c
  6096  000620  EF14  F003         	goto	u1931
  6097  000624  EF16  F003         	goto	u1930
  6098  000628                     u1931:
  6099  000628  EF28  F003         	goto	l2752
  6100  00062C                     u1930:
  6101  00062C                     
  6102                           ; BSR set to: 0
  6103  00062C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6104  000630  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6105  000634  CFDE FFF6          	movff	postinc2,tblptrl
  6106  000638  CFDD FFF7          	movff	postdec2,tblptrh
  6107  00063C                     	if	0	;tblptru may be non-zero
  6108  00063C                     	endif
  6109  00063C                     	if	0	;tblptru may be non-zero
  6110  00063C                     	endif
  6111  00063C  0008               	tblrd		*
  6112  00063E  50F5               	movf	tablat,w,c
  6113  000640  0A69               	xorlw	105
  6114  000642  A4D8               	btfss	status,2,c
  6115  000644  EF26  F003         	goto	u1941
  6116  000648  EF28  F003         	goto	u1940
  6117  00064C                     u1941:
  6118  00064C  EF68  F003         	goto	l2758
  6119  000650                     u1940:
  6120  000650                     l2752:
  6121                           
  6122                           ; BSR set to: 0
  6123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  6124  000650  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6125  000654  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6126  000658  2ADE               	incf	postinc2,f,c
  6127  00065A  0E00               	movlw	0
  6128  00065C  22DD               	addwfc	postdec2,f,c
  6129                           
  6130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6131  00065E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6132  000662  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6133  000666  CFDF F046          	movff	indf2,??_vfpfcnvrt
  6134  00066A  0E02               	movlw	2
  6135  00066C  26DE               	addwf	postinc2,f,c
  6136  00066E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  6137  000672  0E00               	movlw	0
  6138  000674  22DD               	addwfc	postdec2,f,c
  6139  000676  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6140  00067A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6141  00067E  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  6142  000682  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  6143  000686  0E00               	movlw	0
  6144  000688  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  6145  00068A  0EFF               	movlw	-1
  6146  00068C  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  6147  00068E  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  6148  000690  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  6149  000692  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  6150  000694  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  6151  000696  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  6152  000698                     
  6153                           ; BSR set to: 0
  6154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  6155  000698  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  6156  00069C  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6157  0006A0  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  6158  0006A4  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6159  0006A8  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6160  0006AC  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6161  0006B0  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6162  0006B4  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6163  0006B8  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6164  0006BC  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6165  0006C0  EC09  F000         	call	_dtoa	;wreg free
  6166  0006C4  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  6167  0006C8  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6168  0006CC  EFB9  F003         	goto	l479
  6169  0006D0                     l2758:
  6170                           
  6171                           ; BSR set to: 0
  6172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  6173  0006D0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6174  0006D4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6175  0006D8  CFDE FFF6          	movff	postinc2,tblptrl
  6176  0006DC  CFDD FFF7          	movff	postdec2,tblptrh
  6177  0006E0                     	if	0	;tblptru may be non-zero
  6178  0006E0                     	endif
  6179  0006E0                     	if	0	;tblptru may be non-zero
  6180  0006E0                     	endif
  6181  0006E0  0008               	tblrd		*
  6182  0006E2  50F5               	movf	tablat,w,c
  6183  0006E4  0A25               	xorlw	37
  6184  0006E6  A4D8               	btfss	status,2,c
  6185  0006E8  EF78  F003         	goto	u1951
  6186  0006EC  EF7A  F003         	goto	u1950
  6187  0006F0                     u1951:
  6188  0006F0  EF91  F003         	goto	l2768
  6189  0006F4                     u1950:
  6190  0006F4                     
  6191                           ; BSR set to: 0
  6192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  6193  0006F4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6194  0006F8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6195  0006FC  2ADE               	incf	postinc2,f,c
  6196  0006FE  0E00               	movlw	0
  6197  000700  22DD               	addwfc	postdec2,f,c
  6198  000702                     
  6199                           ; BSR set to: 0
  6200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  6201  000702  0E00               	movlw	0
  6202  000704  6E02               	movwf	(fputc@c+1)^0,c
  6203  000706  0E25               	movlw	37
  6204  000708  6E01               	movwf	fputc@c^0,c
  6205  00070A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6206  00070E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6207  000712  EC72  F00A         	call	_fputc	;wreg free
  6208  000716                     l2764:
  6209                           
  6210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  6211  000716  0E00               	movlw	0
  6212  000718  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  6213  00071A  0E01               	movlw	1
  6214  00071C  6E40               	movwf	?_vfpfcnvrt^0,c
  6215  00071E  EFB9  F003         	goto	l479
  6216  000722                     l2768:
  6217                           
  6218                           ; BSR set to: 0
  6219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  6220  000722  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6221  000726  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6222  00072A  2ADE               	incf	postinc2,f,c
  6223  00072C  0E00               	movlw	0
  6224  00072E  22DD               	addwfc	postdec2,f,c
  6225  000730                     
  6226                           ; BSR set to: 0
  6227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  6228  000730  0E00               	movlw	0
  6229  000732  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  6230  000734  0E00               	movlw	0
  6231  000736  6E40               	movwf	?_vfpfcnvrt^0,c
  6232  000738  EFB9  F003         	goto	l479
  6233  00073C                     l2774:
  6234                           
  6235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  6236  00073C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6237  000740  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6238  000744  CFDE FFF6          	movff	postinc2,tblptrl
  6239  000748  CFDD FFF7          	movff	postdec2,tblptrh
  6240  00074C                     	if	0	;tblptru may be non-zero
  6241  00074C                     	endif
  6242  00074C                     	if	0	;tblptru may be non-zero
  6243  00074C                     	endif
  6244  00074C  0008               	tblrd		*
  6245  00074E  50F5               	movf	tablat,w,c
  6246  000750  6E01               	movwf	fputc@c^0,c
  6247  000752  6A02               	clrf	(fputc@c+1)^0,c
  6248  000754  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6249  000758  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6250  00075C  EC72  F00A         	call	_fputc	;wreg free
  6251  000760                     
  6252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  6253  000760  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6254  000764  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6255  000768  2ADE               	incf	postinc2,f,c
  6256  00076A  0E00               	movlw	0
  6257  00076C  22DD               	addwfc	postdec2,f,c
  6258  00076E  EF8B  F003         	goto	l2764
  6259  000772                     l479:
  6260  000772  0012               	return		;funcret
  6261  000774                     __end_of_vfpfcnvrt:
  6262                           	opt callstack 0
  6263                           
  6264 ;; *************** function _dtoa *****************
  6265 ;; Defined at:
  6266 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6269 ;;		 -> sprintf@f(6), 
  6270 ;;  d               8   29[COMRAM] long long 
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;  n               8   53[COMRAM] long long 
  6273 ;;  i               2   61[COMRAM] int 
  6274 ;;  s               2   51[COMRAM] int 
  6275 ;;  w               2   49[COMRAM] int 
  6276 ;;  p               2   47[COMRAM] int 
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  2   27[COMRAM] int 
  6279 ;; Registers used:
  6280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6286 ;;      Params:        10       0       0       0       0       0       0       0       0
  6287 ;;      Locals:        18       0       0       0       0       0       0       0       0
  6288 ;;      Temps:          8       0       0       0       0       0       0       0       0
  6289 ;;      Totals:        36       0       0       0       0       0       0       0       0
  6290 ;;Total ram usage:       36 bytes
  6291 ;; Hardware stack levels used:    1
  6292 ;; Hardware stack levels required when called:    5
  6293 ;; This function calls:
  6294 ;;		___aodiv
  6295 ;;		___aomod
  6296 ;;		_abs
  6297 ;;		_pad
  6298 ;; This function is called by:
  6299 ;;		_vfpfcnvrt
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           	psect	text31
  6304  000012                     __ptext31:
  6305                           	opt callstack 0
  6306  000012                     _dtoa:
  6307                           	opt callstack 20
  6308  000012                     
  6309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  6310  000012  C01E  F036         	movff	dtoa@d,dtoa@n
  6311  000016  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  6312  00001A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  6313  00001E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  6314  000022  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  6315  000026  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  6316  00002A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  6317  00002E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  6318  000032                     
  6319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  6320  000032  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  6321  000034  EF1E  F000         	goto	u1731
  6322  000038  EF21  F000         	goto	u1730
  6323  00003C                     u1731:
  6324  00003C  0E01               	movlw	1
  6325  00003E  EF22  F000         	goto	u1740
  6326  000042                     u1730:
  6327  000042  0E00               	movlw	0
  6328  000044                     u1740:
  6329  000044  6E34               	movwf	dtoa@s^0,c
  6330  000046  6A35               	clrf	(dtoa@s+1)^0,c
  6331                           
  6332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  6333  000048  5034               	movf	dtoa@s^0,w,c
  6334  00004A  1035               	iorwf	(dtoa@s+1)^0,w,c
  6335  00004C  B4D8               	btfsc	status,2,c
  6336  00004E  EF2B  F000         	goto	u1751
  6337  000052  EF2D  F000         	goto	u1750
  6338  000056                     u1751:
  6339  000056  EF3D  F000         	goto	l2668
  6340  00005A                     u1750:
  6341  00005A                     
  6342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  6343  00005A  1E3D               	comf	(dtoa@n+7)^0,f,c
  6344  00005C  1E3C               	comf	(dtoa@n+6)^0,f,c
  6345  00005E  1E3B               	comf	(dtoa@n+5)^0,f,c
  6346  000060  1E3A               	comf	(dtoa@n+4)^0,f,c
  6347  000062  1E39               	comf	(dtoa@n+3)^0,f,c
  6348  000064  1E38               	comf	(dtoa@n+2)^0,f,c
  6349  000066  1E37               	comf	(dtoa@n+1)^0,f,c
  6350  000068  6C36               	negf	dtoa@n^0,c
  6351  00006A  0E00               	movlw	0
  6352  00006C  2237               	addwfc	(dtoa@n+1)^0,f,c
  6353  00006E  2238               	addwfc	(dtoa@n+2)^0,f,c
  6354  000070  2239               	addwfc	(dtoa@n+3)^0,f,c
  6355  000072  223A               	addwfc	(dtoa@n+4)^0,f,c
  6356  000074  223B               	addwfc	(dtoa@n+5)^0,f,c
  6357  000076  223C               	addwfc	(dtoa@n+6)^0,f,c
  6358  000078  223D               	addwfc	(dtoa@n+7)^0,f,c
  6359  00007A                     l2668:
  6360                           
  6361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  6362  00007A  0100               	movlb	0	; () banked
  6363  00007C  BFE7               	btfsc	(_prec+1)& (0+255),7,b
  6364  00007E  EF43  F000         	goto	u1761
  6365  000082  EF45  F000         	goto	u1760
  6366  000086                     u1761:
  6367  000086  EF46  F000         	goto	l2672
  6368  00008A                     u1760:
  6369  00008A                     
  6370                           ; BSR set to: 0
  6371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  6372  00008A  93E8               	bcf	_flags& (0+255),1,b
  6373  00008C                     l2672:
  6374                           
  6375                           ; BSR set to: 0
  6376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  6377  00008C  BFE7               	btfsc	(_prec+1)& (0+255),7,b
  6378  00008E  EF53  F000         	goto	u1770
  6379  000092  51E7               	movf	(_prec+1)& (0+255),w,b
  6380  000094  E106               	bnz	u1771
  6381  000096  05E6               	decf	_prec& (0+255),w,b
  6382  000098  B0D8               	btfsc	status,0,c
  6383  00009A  EF51  F000         	goto	u1771
  6384  00009E  EF53  F000         	goto	u1770
  6385  0000A2                     u1771:
  6386  0000A2  EF59  F000         	goto	l454
  6387  0000A6                     u1770:
  6388  0000A6                     
  6389                           ; BSR set to: 0
  6390  0000A6  0E00               	movlw	0
  6391  0000A8  6E31               	movwf	(dtoa@p+1)^0,c
  6392  0000AA  0E01               	movlw	1
  6393  0000AC  6E30               	movwf	dtoa@p^0,c
  6394  0000AE  EF5D  F000         	goto	l456
  6395  0000B2                     l454:
  6396                           
  6397                           ; BSR set to: 0
  6398  0000B2  C0E6  F030         	movff	_prec,dtoa@p
  6399  0000B6  C0E7  F031         	movff	_prec+1,dtoa@p+1
  6400  0000BA                     l456:
  6401                           
  6402                           ; BSR set to: 0
  6403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  6404  0000BA  C0E4  F032         	movff	_width,dtoa@w
  6405  0000BE  C0E5  F033         	movff	_width+1,dtoa@w+1
  6406  0000C2                     
  6407                           ; BSR set to: 0
  6408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  6409  0000C2  5034               	movf	dtoa@s^0,w,c
  6410  0000C4  1035               	iorwf	(dtoa@s+1)^0,w,c
  6411  0000C6  A4D8               	btfss	status,2,c
  6412  0000C8  EF68  F000         	goto	u1781
  6413  0000CC  EF6A  F000         	goto	u1780
  6414  0000D0                     u1781:
  6415  0000D0  EF71  F000         	goto	l2680
  6416  0000D4                     u1780:
  6417  0000D4                     
  6418                           ; BSR set to: 0
  6419  0000D4  A5E8               	btfss	_flags& (0+255),2,b
  6420  0000D6  EF6F  F000         	goto	u1791
  6421  0000DA  EF71  F000         	goto	u1790
  6422  0000DE                     u1791:
  6423  0000DE  EF74  F000         	goto	l2682
  6424  0000E2                     u1790:
  6425  0000E2                     l2680:
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  6429  0000E2  0632               	decf	dtoa@w^0,f,c
  6430  0000E4  A0D8               	btfss	status,0,c
  6431  0000E6  0633               	decf	(dtoa@w+1)^0,f,c
  6432  0000E8                     l2682:
  6433                           
  6434                           ; BSR set to: 0
  6435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  6436  0000E8  0E00               	movlw	0
  6437  0000EA  6E3F               	movwf	(dtoa@i+1)^0,c
  6438  0000EC  0E1F               	movlw	31
  6439  0000EE  6E3E               	movwf	dtoa@i^0,c
  6440  0000F0                     
  6441                           ; BSR set to: 0
  6442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  6443  0000F0  0E00               	movlw	0
  6444  0000F2  0101               	movlb	1	; () banked
  6445  0000F4  6F77               	movwf	(_dbuf+31)& (0+255),b
  6446                           
  6447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6448  0000F6  EFF9  F000         	goto	l2696
  6449  0000FA                     l2686:
  6450                           
  6451                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  6452  0000FA  063E               	decf	dtoa@i^0,f,c
  6453  0000FC  A0D8               	btfss	status,0,c
  6454  0000FE  063F               	decf	(dtoa@i+1)^0,f,c
  6455  000100                     
  6456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  6457  000100  0E58               	movlw	low _dbuf
  6458  000102  243E               	addwf	dtoa@i^0,w,c
  6459  000104  6ED9               	movwf	fsr2l,c
  6460  000106  0E01               	movlw	high _dbuf
  6461  000108  203F               	addwfc	(dtoa@i+1)^0,w,c
  6462  00010A  6EDA               	movwf	fsr2h,c
  6463  00010C  C036  F001         	movff	dtoa@n,___aomod@dividend
  6464  000110  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6465  000114  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6466  000118  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6467  00011C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6468  000120  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6469  000124  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6470  000128  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6471  00012C  0E0A               	movlw	10
  6472  00012E  6E09               	movwf	___aomod@divisor^0,c
  6473  000130  0E00               	movlw	0
  6474  000132  6E0A               	movwf	(___aomod@divisor+1)^0,c
  6475  000134  0E00               	movlw	0
  6476  000136  6E0B               	movwf	(___aomod@divisor+2)^0,c
  6477  000138  0E00               	movlw	0
  6478  00013A  6E0C               	movwf	(___aomod@divisor+3)^0,c
  6479  00013C  0E00               	movlw	0
  6480  00013E  6E0D               	movwf	(___aomod@divisor+4)^0,c
  6481  000140  0E00               	movlw	0
  6482  000142  6E0E               	movwf	(___aomod@divisor+5)^0,c
  6483  000144  0E00               	movlw	0
  6484  000146  6E0F               	movwf	(___aomod@divisor+6)^0,c
  6485  000148  0E00               	movlw	0
  6486  00014A  6E10               	movwf	(___aomod@divisor+7)^0,c
  6487  00014C  EC28  F006         	call	___aomod	;wreg free
  6488  000150  C001  F026         	movff	?___aomod,??_dtoa
  6489  000154  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6490  000158  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6491  00015C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6492  000160  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6493  000164  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6494  000168  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6495  00016C  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6496  000170  C026  F013         	movff	??_dtoa,abs@a
  6497  000174  C028  F014         	movff	??_dtoa+2,abs@a+1
  6498  000178  ECC1  F010         	call	_abs	;wreg free
  6499  00017C  5013               	movf	?_abs^0,w,c
  6500  00017E  0F30               	addlw	48
  6501  000180  6EDF               	movwf	indf2,c
  6502  000182                     
  6503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  6504  000182  0630               	decf	dtoa@p^0,f,c
  6505  000184  A0D8               	btfss	status,0,c
  6506  000186  0631               	decf	(dtoa@p+1)^0,f,c
  6507  000188                     
  6508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  6509  000188  0632               	decf	dtoa@w^0,f,c
  6510  00018A  A0D8               	btfss	status,0,c
  6511  00018C  0633               	decf	(dtoa@w+1)^0,f,c
  6512  00018E                     
  6513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  6514  00018E  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6515  000192  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6516  000196  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6517  00019A  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6518  00019E  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6519  0001A2  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6520  0001A6  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6521  0001AA  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6522  0001AE  0E0A               	movlw	10
  6523  0001B0  6E09               	movwf	___aodiv@divisor^0,c
  6524  0001B2  0E00               	movlw	0
  6525  0001B4  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  6526  0001B6  0E00               	movlw	0
  6527  0001B8  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  6528  0001BA  0E00               	movlw	0
  6529  0001BC  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  6530  0001BE  0E00               	movlw	0
  6531  0001C0  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  6532  0001C2  0E00               	movlw	0
  6533  0001C4  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  6534  0001C6  0E00               	movlw	0
  6535  0001C8  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  6536  0001CA  0E00               	movlw	0
  6537  0001CC  6E10               	movwf	(___aodiv@divisor+7)^0,c
  6538  0001CE  EC64  F005         	call	___aodiv	;wreg free
  6539  0001D2  C001  F036         	movff	?___aodiv,dtoa@n
  6540  0001D6  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6541  0001DA  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6542  0001DE  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6543  0001E2  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6544  0001E6  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6545  0001EA  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6546  0001EE  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6547  0001F2                     l2696:
  6548                           
  6549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6550  0001F2  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  6551  0001F4  EF04  F001         	goto	u1801
  6552  0001F8  503F               	movf	(dtoa@i+1)^0,w,c
  6553  0001FA  E108               	bnz	u1800
  6554  0001FC  043E               	decf	dtoa@i^0,w,c
  6555  0001FE  A0D8               	btfss	status,0,c
  6556  000200  EF04  F001         	goto	u1801
  6557  000204  EF06  F001         	goto	u1800
  6558  000208                     u1801:
  6559  000208  EF37  F001         	goto	l2706
  6560  00020C                     u1800:
  6561  00020C  5036               	movf	dtoa@n^0,w,c
  6562  00020E  1037               	iorwf	(dtoa@n+1)^0,w,c
  6563  000210  1038               	iorwf	(dtoa@n+2)^0,w,c
  6564  000212  1039               	iorwf	(dtoa@n+3)^0,w,c
  6565  000214  103A               	iorwf	(dtoa@n+4)^0,w,c
  6566  000216  103B               	iorwf	(dtoa@n+5)^0,w,c
  6567  000218  103C               	iorwf	(dtoa@n+6)^0,w,c
  6568  00021A  103D               	iorwf	(dtoa@n+7)^0,w,c
  6569  00021C  A4D8               	btfss	status,2,c
  6570  00021E  EF13  F001         	goto	u1811
  6571  000222  EF15  F001         	goto	u1810
  6572  000226                     u1811:
  6573  000226  EF7D  F000         	goto	l2686
  6574  00022A                     u1810:
  6575  00022A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  6576  00022C  EF22  F001         	goto	u1820
  6577  000230  5031               	movf	(dtoa@p+1)^0,w,c
  6578  000232  E106               	bnz	u1821
  6579  000234  0430               	decf	dtoa@p^0,w,c
  6580  000236  B0D8               	btfsc	status,0,c
  6581  000238  EF20  F001         	goto	u1821
  6582  00023C  EF22  F001         	goto	u1820
  6583  000240                     u1821:
  6584  000240  EF7D  F000         	goto	l2686
  6585  000244                     u1820:
  6586  000244  BE33               	btfsc	(dtoa@w+1)^0,7,c
  6587  000246  EF2D  F001         	goto	u1831
  6588  00024A  5033               	movf	(dtoa@w+1)^0,w,c
  6589  00024C  E108               	bnz	u1830
  6590  00024E  0432               	decf	dtoa@w^0,w,c
  6591  000250  A0D8               	btfss	status,0,c
  6592  000252  EF2D  F001         	goto	u1831
  6593  000256  EF2F  F001         	goto	u1830
  6594  00025A                     u1831:
  6595  00025A  EF37  F001         	goto	l2706
  6596  00025E                     u1830:
  6597  00025E  0100               	movlb	0	; () banked
  6598  000260  B3E8               	btfsc	_flags& (0+255),1,b
  6599  000262  EF35  F001         	goto	u1841
  6600  000266  EF37  F001         	goto	u1840
  6601  00026A                     u1841:
  6602  00026A  EF7D  F000         	goto	l2686
  6603  00026E                     u1840:
  6604  00026E                     l2706:
  6605                           
  6606                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6607  00026E  5034               	movf	dtoa@s^0,w,c
  6608  000270  1035               	iorwf	(dtoa@s+1)^0,w,c
  6609  000272  A4D8               	btfss	status,2,c
  6610  000274  EF3E  F001         	goto	u1851
  6611  000278  EF40  F001         	goto	u1850
  6612  00027C                     u1851:
  6613  00027C  EF48  F001         	goto	l2710
  6614  000280                     u1850:
  6615  000280  0100               	movlb	0	; () banked
  6616  000282  A5E8               	btfss	_flags& (0+255),2,b
  6617  000284  EF46  F001         	goto	u1861
  6618  000288  EF48  F001         	goto	u1860
  6619  00028C                     u1861:
  6620  00028C  EF66  F001         	goto	l2720
  6621  000290                     u1860:
  6622  000290                     l2710:
  6623                           
  6624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6625  000290  063E               	decf	dtoa@i^0,f,c
  6626  000292  A0D8               	btfss	status,0,c
  6627  000294  063F               	decf	(dtoa@i+1)^0,f,c
  6628  000296                     
  6629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6630  000296  5034               	movf	dtoa@s^0,w,c
  6631  000298  1035               	iorwf	(dtoa@s+1)^0,w,c
  6632  00029A  A4D8               	btfss	status,2,c
  6633  00029C  EF52  F001         	goto	u1871
  6634  0002A0  EF54  F001         	goto	u1870
  6635  0002A4                     u1871:
  6636  0002A4  EF5A  F001         	goto	l2716
  6637  0002A8                     u1870:
  6638  0002A8  0E00               	movlw	0
  6639  0002AA  6E2F               	movwf	(_dtoa$1018+1)^0,c
  6640  0002AC  0E2B               	movlw	43
  6641  0002AE  6E2E               	movwf	_dtoa$1018^0,c
  6642  0002B0  EF5E  F001         	goto	l2718
  6643  0002B4                     l2716:
  6644  0002B4  0E00               	movlw	0
  6645  0002B6  6E2F               	movwf	(_dtoa$1018+1)^0,c
  6646  0002B8  0E2D               	movlw	45
  6647  0002BA  6E2E               	movwf	_dtoa$1018^0,c
  6648  0002BC                     l2718:
  6649  0002BC  0E58               	movlw	low _dbuf
  6650  0002BE  243E               	addwf	dtoa@i^0,w,c
  6651  0002C0  6ED9               	movwf	fsr2l,c
  6652  0002C2  0E01               	movlw	high _dbuf
  6653  0002C4  203F               	addwfc	(dtoa@i+1)^0,w,c
  6654  0002C6  6EDA               	movwf	fsr2h,c
  6655  0002C8  C02E  FFDF         	movff	_dtoa$1018,indf2
  6656  0002CC                     l2720:
  6657                           
  6658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6659  0002CC  C01C  F011         	movff	dtoa@fp,pad@fp
  6660  0002D0  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6661  0002D4  0E58               	movlw	low _dbuf
  6662  0002D6  243E               	addwf	dtoa@i^0,w,c
  6663  0002D8  6E13               	movwf	pad@buf^0,c
  6664  0002DA  0E01               	movlw	high _dbuf
  6665  0002DC  203F               	addwfc	(dtoa@i+1)^0,w,c
  6666  0002DE  6E14               	movwf	(pad@buf+1)^0,c
  6667  0002E0  C032  F015         	movff	dtoa@w,pad@p
  6668  0002E4  C033  F016         	movff	dtoa@w+1,pad@p+1
  6669  0002E8  EC9F  F00B         	call	_pad	;wreg free
  6670  0002EC  C011  F01C         	movff	?_pad,?_dtoa
  6671  0002F0  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6672  0002F4  0012               	return		;funcret
  6673  0002F6                     __end_of_dtoa:
  6674                           	opt callstack 0
  6675                           
  6676 ;; *************** function _abs *****************
  6677 ;; Defined at:
  6678 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  6679 ;; Parameters:    Size  Location     Type
  6680 ;;  a               2   18[COMRAM] int 
  6681 ;; Auto vars:     Size  Location     Type
  6682 ;;		None
  6683 ;; Return value:  Size  Location     Type
  6684 ;;                  2   18[COMRAM] int 
  6685 ;; Registers used:
  6686 ;;		wreg, status,2, status,0
  6687 ;; Tracked objects:
  6688 ;;		On entry : 0/0
  6689 ;;		On exit  : 0/0
  6690 ;;		Unchanged: 0/0
  6691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6692 ;;      Params:         2       0       0       0       0       0       0       0       0
  6693 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6694 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6695 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6696 ;;Total ram usage:        4 bytes
  6697 ;; Hardware stack levels used:    1
  6698 ;; Hardware stack levels required when called:    1
  6699 ;; This function calls:
  6700 ;;		Nothing
  6701 ;; This function is called by:
  6702 ;;		_dtoa
  6703 ;; This function uses a non-reentrant model
  6704 ;;
  6705                           
  6706                           	psect	text32
  6707  002182                     __ptext32:
  6708                           	opt callstack 0
  6709  002182                     _abs:
  6710                           	opt callstack 23
  6711  002182  BE14               	btfsc	(abs@a+1)^0,7,c
  6712  002184  EFCE  F010         	goto	u1580
  6713  002188  5014               	movf	(abs@a+1)^0,w,c
  6714  00218A  E106               	bnz	u1581
  6715  00218C  0413               	decf	abs@a^0,w,c
  6716  00218E  B0D8               	btfsc	status,0,c
  6717  002190  EFCC  F010         	goto	u1581
  6718  002194  EFCE  F010         	goto	u1580
  6719  002198                     u1581:
  6720  002198  EFDC  F010         	goto	l1167
  6721  00219C                     u1580:
  6722  00219C  C013  F015         	movff	abs@a,??_abs
  6723  0021A0  C014  F016         	movff	abs@a+1,??_abs+1
  6724  0021A4  1E15               	comf	??_abs^0,f,c
  6725  0021A6  1E16               	comf	(??_abs+1)^0,f,c
  6726  0021A8  4A15               	infsnz	??_abs^0,f,c
  6727  0021AA  2A16               	incf	(??_abs+1)^0,f,c
  6728  0021AC  C015  F013         	movff	??_abs,?_abs
  6729  0021B0  C016  F014         	movff	??_abs+1,?_abs+1
  6730  0021B4  EFE0  F010         	goto	l1170
  6731  0021B8                     l1167:
  6732  0021B8  C013  F013         	movff	abs@a,?_abs
  6733  0021BC  C014  F014         	movff	abs@a+1,?_abs+1
  6734  0021C0                     l1170:
  6735  0021C0  0012               	return		;funcret
  6736  0021C2                     __end_of_abs:
  6737                           	opt callstack 0
  6738                           
  6739 ;; *************** function ___aomod *****************
  6740 ;; Defined at:
  6741 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  6742 ;; Parameters:    Size  Location     Type
  6743 ;;  dividend        8    0[COMRAM] long long 
  6744 ;;  divisor         8    8[COMRAM] long long 
  6745 ;; Auto vars:     Size  Location     Type
  6746 ;;  sign            1   17[COMRAM] unsigned char 
  6747 ;;  counter         1   16[COMRAM] unsigned char 
  6748 ;; Return value:  Size  Location     Type
  6749 ;;                  8    0[COMRAM] long long 
  6750 ;; Registers used:
  6751 ;;		wreg, status,2, status,0
  6752 ;; Tracked objects:
  6753 ;;		On entry : 0/0
  6754 ;;		On exit  : 0/0
  6755 ;;		Unchanged: 0/0
  6756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6757 ;;      Params:        16       0       0       0       0       0       0       0       0
  6758 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6759 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6760 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6761 ;;Total ram usage:       18 bytes
  6762 ;; Hardware stack levels used:    1
  6763 ;; Hardware stack levels required when called:    1
  6764 ;; This function calls:
  6765 ;;		Nothing
  6766 ;; This function is called by:
  6767 ;;		_dtoa
  6768 ;; This function uses a non-reentrant model
  6769 ;;
  6770                           
  6771                           	psect	text33
  6772  000C50                     __ptext33:
  6773                           	opt callstack 0
  6774  000C50                     ___aomod:
  6775                           	opt callstack 23
  6776  000C50  0E00               	movlw	0
  6777  000C52  6E12               	movwf	___aomod@sign^0,c
  6778  000C54  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6779  000C56  EF31  F006         	goto	u1660
  6780  000C5A  EF2F  F006         	goto	u1661
  6781  000C5E                     u1661:
  6782  000C5E  EF43  F006         	goto	l2620
  6783  000C62                     u1660:
  6784  000C62  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6785  000C64  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6786  000C66  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6787  000C68  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6788  000C6A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6789  000C6C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6790  000C6E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6791  000C70  6C01               	negf	___aomod@dividend^0,c
  6792  000C72  0E00               	movlw	0
  6793  000C74  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6794  000C76  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6795  000C78  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6796  000C7A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6797  000C7C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6798  000C7E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6799  000C80  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6800  000C82  0E01               	movlw	1
  6801  000C84  6E12               	movwf	___aomod@sign^0,c
  6802  000C86                     l2620:
  6803  000C86  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6804  000C88  EF4A  F006         	goto	u1670
  6805  000C8C  EF48  F006         	goto	u1671
  6806  000C90                     u1671:
  6807  000C90  EF5A  F006         	goto	l2624
  6808  000C94                     u1670:
  6809  000C94  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6810  000C96  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6811  000C98  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6812  000C9A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6813  000C9C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6814  000C9E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6815  000CA0  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6816  000CA2  6C09               	negf	___aomod@divisor^0,c
  6817  000CA4  0E00               	movlw	0
  6818  000CA6  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6819  000CA8  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6820  000CAA  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6821  000CAC  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6822  000CAE  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6823  000CB0  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6824  000CB2  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6825  000CB4                     l2624:
  6826  000CB4  5009               	movf	___aomod@divisor^0,w,c
  6827  000CB6  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6828  000CB8  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6829  000CBA  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6830  000CBC  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6831  000CBE  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6832  000CC0  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6833  000CC2  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6834  000CC4  B4D8               	btfsc	status,2,c
  6835  000CC6  EF67  F006         	goto	u1681
  6836  000CCA  EF69  F006         	goto	u1680
  6837  000CCE                     u1681:
  6838  000CCE  EFB1  F006         	goto	l2640
  6839  000CD2                     u1680:
  6840  000CD2  0E01               	movlw	1
  6841  000CD4  6E11               	movwf	___aomod@counter^0,c
  6842  000CD6  EF77  F006         	goto	l2630
  6843  000CDA                     l2628:
  6844  000CDA  90D8               	bcf	status,0,c
  6845  000CDC  3609               	rlcf	___aomod@divisor^0,f,c
  6846  000CDE  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6847  000CE0  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6848  000CE2  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6849  000CE4  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6850  000CE6  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6851  000CE8  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6852  000CEA  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6853  000CEC  2A11               	incf	___aomod@counter^0,f,c
  6854  000CEE                     l2630:
  6855  000CEE  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6856  000CF0  EF7C  F006         	goto	u1691
  6857  000CF4  EF7E  F006         	goto	u1690
  6858  000CF8                     u1691:
  6859  000CF8  EF6D  F006         	goto	l2628
  6860  000CFC                     u1690:
  6861  000CFC                     l2632:
  6862  000CFC  5009               	movf	___aomod@divisor^0,w,c
  6863  000CFE  5C01               	subwf	___aomod@dividend^0,w,c
  6864  000D00  500A               	movf	(___aomod@divisor+1)^0,w,c
  6865  000D02  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6866  000D04  500B               	movf	(___aomod@divisor+2)^0,w,c
  6867  000D06  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6868  000D08  500C               	movf	(___aomod@divisor+3)^0,w,c
  6869  000D0A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6870  000D0C  500D               	movf	(___aomod@divisor+4)^0,w,c
  6871  000D0E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6872  000D10  500E               	movf	(___aomod@divisor+5)^0,w,c
  6873  000D12  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6874  000D14  500F               	movf	(___aomod@divisor+6)^0,w,c
  6875  000D16  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6876  000D18  5010               	movf	(___aomod@divisor+7)^0,w,c
  6877  000D1A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6878  000D1C  A0D8               	btfss	status,0,c
  6879  000D1E  EF93  F006         	goto	u1701
  6880  000D22  EF95  F006         	goto	u1700
  6881  000D26                     u1701:
  6882  000D26  EFA5  F006         	goto	l2636
  6883  000D2A                     u1700:
  6884  000D2A  5009               	movf	___aomod@divisor^0,w,c
  6885  000D2C  5E01               	subwf	___aomod@dividend^0,f,c
  6886  000D2E  500A               	movf	(___aomod@divisor+1)^0,w,c
  6887  000D30  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6888  000D32  500B               	movf	(___aomod@divisor+2)^0,w,c
  6889  000D34  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6890  000D36  500C               	movf	(___aomod@divisor+3)^0,w,c
  6891  000D38  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6892  000D3A  500D               	movf	(___aomod@divisor+4)^0,w,c
  6893  000D3C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6894  000D3E  500E               	movf	(___aomod@divisor+5)^0,w,c
  6895  000D40  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6896  000D42  500F               	movf	(___aomod@divisor+6)^0,w,c
  6897  000D44  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6898  000D46  5010               	movf	(___aomod@divisor+7)^0,w,c
  6899  000D48  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6900  000D4A                     l2636:
  6901  000D4A  90D8               	bcf	status,0,c
  6902  000D4C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6903  000D4E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6904  000D50  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6905  000D52  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6906  000D54  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6907  000D56  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6908  000D58  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6909  000D5A  3209               	rrcf	___aomod@divisor^0,f,c
  6910  000D5C  2E11               	decfsz	___aomod@counter^0,f,c
  6911  000D5E  EF7E  F006         	goto	l2632
  6912  000D62                     l2640:
  6913  000D62  5012               	movf	___aomod@sign^0,w,c
  6914  000D64  B4D8               	btfsc	status,2,c
  6915  000D66  EFB7  F006         	goto	u1711
  6916  000D6A  EFB9  F006         	goto	u1710
  6917  000D6E                     u1711:
  6918  000D6E  EFC9  F006         	goto	l2644
  6919  000D72                     u1710:
  6920  000D72  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6921  000D74  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6922  000D76  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6923  000D78  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6924  000D7A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6925  000D7C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6926  000D7E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6927  000D80  6C01               	negf	___aomod@dividend^0,c
  6928  000D82  0E00               	movlw	0
  6929  000D84  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6930  000D86  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6931  000D88  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6932  000D8A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6933  000D8C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6934  000D8E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6935  000D90  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6936  000D92                     l2644:
  6937  000D92  C001  F001         	movff	___aomod@dividend,?___aomod
  6938  000D96  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6939  000D9A  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6940  000D9E  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6941  000DA2  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6942  000DA6  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6943  000DAA  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6944  000DAE  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6945  000DB2  0012               	return		;funcret
  6946  000DB4                     __end_of___aomod:
  6947                           	opt callstack 0
  6948                           
  6949 ;; *************** function ___aodiv *****************
  6950 ;; Defined at:
  6951 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  6952 ;; Parameters:    Size  Location     Type
  6953 ;;  dividend        8    0[COMRAM] long long 
  6954 ;;  divisor         8    8[COMRAM] long long 
  6955 ;; Auto vars:     Size  Location     Type
  6956 ;;  quotient        8   18[COMRAM] long long 
  6957 ;;  sign            1   17[COMRAM] unsigned char 
  6958 ;;  counter         1   16[COMRAM] unsigned char 
  6959 ;; Return value:  Size  Location     Type
  6960 ;;                  8    0[COMRAM] long long 
  6961 ;; Registers used:
  6962 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6963 ;; Tracked objects:
  6964 ;;		On entry : 0/0
  6965 ;;		On exit  : 0/0
  6966 ;;		Unchanged: 0/0
  6967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6968 ;;      Params:        16       0       0       0       0       0       0       0       0
  6969 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6970 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6971 ;;      Totals:        26       0       0       0       0       0       0       0       0
  6972 ;;Total ram usage:       26 bytes
  6973 ;; Hardware stack levels used:    1
  6974 ;; Hardware stack levels required when called:    1
  6975 ;; This function calls:
  6976 ;;		Nothing
  6977 ;; This function is called by:
  6978 ;;		_dtoa
  6979 ;; This function uses a non-reentrant model
  6980 ;;
  6981                           
  6982                           	psect	text34
  6983  000AC8                     __ptext34:
  6984                           	opt callstack 0
  6985  000AC8                     ___aodiv:
  6986                           	opt callstack 23
  6987  000AC8  0E00               	movlw	0
  6988  000ACA  6E12               	movwf	___aodiv@sign^0,c
  6989  000ACC  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6990  000ACE  EF6D  F005         	goto	u1590
  6991  000AD2  EF6B  F005         	goto	u1591
  6992  000AD6                     u1591:
  6993  000AD6  EF7F  F005         	goto	l2576
  6994  000ADA                     u1590:
  6995  000ADA  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6996  000ADC  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6997  000ADE  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6998  000AE0  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6999  000AE2  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  7000  000AE4  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  7001  000AE6  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  7002  000AE8  6C09               	negf	___aodiv@divisor^0,c
  7003  000AEA  0E00               	movlw	0
  7004  000AEC  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  7005  000AEE  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  7006  000AF0  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  7007  000AF2  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  7008  000AF4  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  7009  000AF6  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  7010  000AF8  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  7011  000AFA  0E01               	movlw	1
  7012  000AFC  6E12               	movwf	___aodiv@sign^0,c
  7013  000AFE                     l2576:
  7014  000AFE  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  7015  000B00  EF86  F005         	goto	u1600
  7016  000B04  EF84  F005         	goto	u1601
  7017  000B08                     u1601:
  7018  000B08  EF98  F005         	goto	l2582
  7019  000B0C                     u1600:
  7020  000B0C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  7021  000B0E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  7022  000B10  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  7023  000B12  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  7024  000B14  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  7025  000B16  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  7026  000B18  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  7027  000B1A  6C01               	negf	___aodiv@dividend^0,c
  7028  000B1C  0E00               	movlw	0
  7029  000B1E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  7030  000B20  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  7031  000B22  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  7032  000B24  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  7033  000B26  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  7034  000B28  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  7035  000B2A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  7036  000B2C  0E01               	movlw	1
  7037  000B2E  1A12               	xorwf	___aodiv@sign^0,f,c
  7038  000B30                     l2582:
  7039  000B30  EE20  F013         	lfsr	2,___aodiv@quotient
  7040  000B34  0E07               	movlw	7
  7041  000B36                     u1611:
  7042  000B36  6ADE               	clrf	postinc2,c
  7043  000B38  06E8               	decf	wreg,f,c
  7044  000B3A  E2FD               	bc	u1611
  7045  000B3C  5009               	movf	___aodiv@divisor^0,w,c
  7046  000B3E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  7047  000B40  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  7048  000B42  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  7049  000B44  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  7050  000B46  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  7051  000B48  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  7052  000B4A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  7053  000B4C  B4D8               	btfsc	status,2,c
  7054  000B4E  EFAB  F005         	goto	u1621
  7055  000B52  EFAD  F005         	goto	u1620
  7056  000B56                     u1621:
  7057  000B56  EFFF  F005         	goto	l2604
  7058  000B5A                     u1620:
  7059  000B5A  0E01               	movlw	1
  7060  000B5C  6E11               	movwf	___aodiv@counter^0,c
  7061  000B5E  EFBB  F005         	goto	l2590
  7062  000B62                     l2588:
  7063  000B62  90D8               	bcf	status,0,c
  7064  000B64  3609               	rlcf	___aodiv@divisor^0,f,c
  7065  000B66  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  7066  000B68  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  7067  000B6A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  7068  000B6C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  7069  000B6E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  7070  000B70  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  7071  000B72  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  7072  000B74  2A11               	incf	___aodiv@counter^0,f,c
  7073  000B76                     l2590:
  7074  000B76  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  7075  000B78  EFC0  F005         	goto	u1631
  7076  000B7C  EFC2  F005         	goto	u1630
  7077  000B80                     u1631:
  7078  000B80  EFB1  F005         	goto	l2588
  7079  000B84                     u1630:
  7080  000B84                     l2592:
  7081  000B84  90D8               	bcf	status,0,c
  7082  000B86  3613               	rlcf	___aodiv@quotient^0,f,c
  7083  000B88  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  7084  000B8A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  7085  000B8C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  7086  000B8E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  7087  000B90  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  7088  000B92  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  7089  000B94  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  7090  000B96  5009               	movf	___aodiv@divisor^0,w,c
  7091  000B98  5C01               	subwf	___aodiv@dividend^0,w,c
  7092  000B9A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7093  000B9C  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  7094  000B9E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7095  000BA0  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  7096  000BA2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7097  000BA4  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  7098  000BA6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7099  000BA8  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  7100  000BAA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7101  000BAC  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  7102  000BAE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7103  000BB0  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  7104  000BB2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7105  000BB4  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  7106  000BB6  A0D8               	btfss	status,0,c
  7107  000BB8  EFE0  F005         	goto	u1641
  7108  000BBC  EFE2  F005         	goto	u1640
  7109  000BC0                     u1641:
  7110  000BC0  EFF3  F005         	goto	l2600
  7111  000BC4                     u1640:
  7112  000BC4  5009               	movf	___aodiv@divisor^0,w,c
  7113  000BC6  5E01               	subwf	___aodiv@dividend^0,f,c
  7114  000BC8  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7115  000BCA  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  7116  000BCC  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7117  000BCE  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  7118  000BD0  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7119  000BD2  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  7120  000BD4  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7121  000BD6  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  7122  000BD8  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7123  000BDA  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  7124  000BDC  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7125  000BDE  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  7126  000BE0  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7127  000BE2  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  7128  000BE4  8013               	bsf	___aodiv@quotient^0,0,c
  7129  000BE6                     l2600:
  7130  000BE6  90D8               	bcf	status,0,c
  7131  000BE8  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  7132  000BEA  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  7133  000BEC  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  7134  000BEE  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  7135  000BF0  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  7136  000BF2  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  7137  000BF4  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  7138  000BF6  3209               	rrcf	___aodiv@divisor^0,f,c
  7139  000BF8  2E11               	decfsz	___aodiv@counter^0,f,c
  7140  000BFA  EFC2  F005         	goto	l2592
  7141  000BFE                     l2604:
  7142  000BFE  5012               	movf	___aodiv@sign^0,w,c
  7143  000C00  B4D8               	btfsc	status,2,c
  7144  000C02  EF05  F006         	goto	u1651
  7145  000C06  EF07  F006         	goto	u1650
  7146  000C0A                     u1651:
  7147  000C0A  EF17  F006         	goto	l2608
  7148  000C0E                     u1650:
  7149  000C0E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  7150  000C10  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  7151  000C12  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  7152  000C14  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  7153  000C16  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  7154  000C18  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  7155  000C1A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  7156  000C1C  6C13               	negf	___aodiv@quotient^0,c
  7157  000C1E  0E00               	movlw	0
  7158  000C20  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  7159  000C22  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  7160  000C24  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  7161  000C26  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  7162  000C28  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  7163  000C2A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  7164  000C2C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  7165  000C2E                     l2608:
  7166  000C2E  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7167  000C32  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7168  000C36  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7169  000C3A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7170  000C3E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7171  000C42  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7172  000C46  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7173  000C4A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7174  000C4E  0012               	return		;funcret
  7175  000C50                     __end_of___aodiv:
  7176                           	opt callstack 0
  7177                           
  7178 ;; *************** function _ctoa *****************
  7179 ;; Defined at:
  7180 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7183 ;;		 -> sprintf@f(6), 
  7184 ;;  c               1   29[COMRAM] unsigned char 
  7185 ;; Auto vars:     Size  Location     Type
  7186 ;;  w               2   30[COMRAM] int 
  7187 ;;  l               2    0        int 
  7188 ;; Return value:  Size  Location     Type
  7189 ;;                  2   27[COMRAM] int 
  7190 ;; Registers used:
  7191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7192 ;; Tracked objects:
  7193 ;;		On entry : 0/0
  7194 ;;		On exit  : 0/0
  7195 ;;		Unchanged: 0/0
  7196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7197 ;;      Params:         3       0       0       0       0       0       0       0       0
  7198 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7199 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7200 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7201 ;;Total ram usage:        5 bytes
  7202 ;; Hardware stack levels used:    1
  7203 ;; Hardware stack levels required when called:    5
  7204 ;; This function calls:
  7205 ;;		_pad
  7206 ;; This function is called by:
  7207 ;;		_vfpfcnvrt
  7208 ;; This function uses a non-reentrant model
  7209 ;;
  7210                           
  7211                           	psect	text35
  7212  001EDC                     __ptext35:
  7213                           	opt callstack 0
  7214  001EDC                     _ctoa:
  7215                           	opt callstack 20
  7216  001EDC                     
  7217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  7218  001EDC  0100               	movlb	0	; () banked
  7219  001EDE  51E4               	movf	_width& (0+255),w,b
  7220  001EE0  11E5               	iorwf	(_width+1)& (0+255),w,b
  7221  001EE2  A4D8               	btfss	status,2,c
  7222  001EE4  EF76  F00F         	goto	u1721
  7223  001EE8  EF78  F00F         	goto	u1720
  7224  001EEC                     u1721:
  7225  001EEC  EF7E  F00F         	goto	l2652
  7226  001EF0                     u1720:
  7227  001EF0                     
  7228                           ; BSR set to: 0
  7229  001EF0  C0E4  F01F         	movff	_width,ctoa@w
  7230  001EF4  C0E5  F020         	movff	_width+1,ctoa@w+1
  7231  001EF8  EF84  F00F         	goto	l2654
  7232  001EFC                     l2652:
  7233                           
  7234                           ; BSR set to: 0
  7235  001EFC  0EFF               	movlw	255
  7236  001EFE  25E4               	addwf	_width& (0+255),w,b
  7237  001F00  6E1F               	movwf	ctoa@w^0,c
  7238  001F02  0EFF               	movlw	255
  7239  001F04  21E5               	addwfc	(_width+1)& (0+255),w,b
  7240  001F06  6E20               	movwf	(ctoa@w+1)^0,c
  7241  001F08                     l2654:
  7242                           
  7243                           ; BSR set to: 0
  7244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  7245  001F08  C01E  F158         	movff	ctoa@c,_dbuf
  7246  001F0C                     
  7247                           ; BSR set to: 0
  7248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  7249  001F0C  0E00               	movlw	0
  7250  001F0E  0101               	movlb	1	; () banked
  7251  001F10  6F59               	movwf	(_dbuf+1)& (0+255),b
  7252  001F12                     
  7253                           ; BSR set to: 1
  7254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  7255  001F12  C01C  F011         	movff	ctoa@fp,pad@fp
  7256  001F16  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  7257  001F1A  0E58               	movlw	low _dbuf
  7258  001F1C  6E13               	movwf	pad@buf^0,c
  7259  001F1E  0E01               	movlw	high _dbuf
  7260  001F20  6E14               	movwf	(pad@buf+1)^0,c
  7261  001F22  C01F  F015         	movff	ctoa@w,pad@p
  7262  001F26  C020  F016         	movff	ctoa@w+1,pad@p+1
  7263  001F2A  EC9F  F00B         	call	_pad	;wreg free
  7264  001F2E  C011  F01C         	movff	?_pad,?_ctoa
  7265  001F32  C012  F01D         	movff	?_pad+1,?_ctoa+1
  7266  001F36  0012               	return		;funcret
  7267  001F38                     __end_of_ctoa:
  7268                           	opt callstack 0
  7269                           
  7270 ;; *************** function _pad *****************
  7271 ;; Defined at:
  7272 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7273 ;; Parameters:    Size  Location     Type
  7274 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7275 ;;		 -> sprintf@f(6), 
  7276 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7277 ;;		 -> dbuf(32), 
  7278 ;;  p               2   20[COMRAM] int 
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;  w               2   25[COMRAM] int 
  7281 ;;  i               2   23[COMRAM] int 
  7282 ;; Return value:  Size  Location     Type
  7283 ;;                  2   16[COMRAM] int 
  7284 ;; Registers used:
  7285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7286 ;; Tracked objects:
  7287 ;;		On entry : 0/0
  7288 ;;		On exit  : 0/0
  7289 ;;		Unchanged: 0/0
  7290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7291 ;;      Params:         6       0       0       0       0       0       0       0       0
  7292 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7293 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7294 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7295 ;;Total ram usage:       11 bytes
  7296 ;; Hardware stack levels used:    1
  7297 ;; Hardware stack levels required when called:    4
  7298 ;; This function calls:
  7299 ;;		_fputc
  7300 ;;		_fputs
  7301 ;;		_strlen
  7302 ;; This function is called by:
  7303 ;;		_ctoa
  7304 ;;		_dtoa
  7305 ;; This function uses a non-reentrant model
  7306 ;;
  7307                           
  7308                           	psect	text36
  7309  00173E                     __ptext36:
  7310                           	opt callstack 0
  7311  00173E                     _pad:
  7312                           	opt callstack 20
  7313  00173E                     
  7314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  7315  00173E  0100               	movlb	0	; () banked
  7316  001740  A1E8               	btfss	_flags& (0+255),0,b
  7317  001742  EFA5  F00B         	goto	u1541
  7318  001746  EFA7  F00B         	goto	u1540
  7319  00174A                     u1541:
  7320  00174A  EFB1  F00B         	goto	l2546
  7321  00174E                     u1540:
  7322  00174E                     
  7323                           ; BSR set to: 0
  7324                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  7325  00174E  C013  F00A         	movff	pad@buf,fputs@s
  7326  001752  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7327  001756  C011  F00C         	movff	pad@fp,fputs@fp
  7328  00175A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7329  00175E  EC7F  F010         	call	_fputs	;wreg free
  7330  001762                     l2546:
  7331                           
  7332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  7333  001762  BE16               	btfsc	(pad@p+1)^0,7,c
  7334  001764  EFB6  F00B         	goto	u1551
  7335  001768  EFB8  F00B         	goto	u1550
  7336  00176C                     u1551:
  7337  00176C  EFBE  F00B         	goto	l2550
  7338  001770                     u1550:
  7339  001770  C015  F01A         	movff	pad@p,pad@w
  7340  001774  C016  F01B         	movff	pad@p+1,pad@w+1
  7341  001778  EFC2  F00B         	goto	l436
  7342  00177C                     l2550:
  7343  00177C  0E00               	movlw	0
  7344  00177E  6E1B               	movwf	(pad@w+1)^0,c
  7345  001780  0E00               	movlw	0
  7346  001782  6E1A               	movwf	pad@w^0,c
  7347  001784                     l436:
  7348                           
  7349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  7350  001784  0E00               	movlw	0
  7351  001786  6E19               	movwf	(pad@i+1)^0,c
  7352  001788  0E00               	movlw	0
  7353  00178A  6E18               	movwf	pad@i^0,c
  7354                           
  7355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7356  00178C  EFD4  F00B         	goto	l2556
  7357  001790                     l2552:
  7358                           
  7359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  7360  001790  0E00               	movlw	0
  7361  001792  6E02               	movwf	(fputc@c+1)^0,c
  7362  001794  0E20               	movlw	32
  7363  001796  6E01               	movwf	fputc@c^0,c
  7364  001798  C011  F003         	movff	pad@fp,fputc@fp
  7365  00179C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7366  0017A0  EC72  F00A         	call	_fputc	;wreg free
  7367  0017A4                     
  7368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  7369  0017A4  4A18               	infsnz	pad@i^0,f,c
  7370  0017A6  2A19               	incf	(pad@i+1)^0,f,c
  7371  0017A8                     l2556:
  7372                           
  7373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7374  0017A8  501A               	movf	pad@w^0,w,c
  7375  0017AA  5C18               	subwf	pad@i^0,w,c
  7376  0017AC  5019               	movf	(pad@i+1)^0,w,c
  7377  0017AE  0A80               	xorlw	128
  7378  0017B0  6E17               	movwf	??_pad^0,c
  7379  0017B2  501B               	movf	(pad@w+1)^0,w,c
  7380  0017B4  0A80               	xorlw	128
  7381  0017B6  5817               	subwfb	??_pad^0,w,c
  7382  0017B8  A0D8               	btfss	status,0,c
  7383  0017BA  EFE1  F00B         	goto	u1561
  7384  0017BE  EFE3  F00B         	goto	u1560
  7385  0017C2                     u1561:
  7386  0017C2  EFC8  F00B         	goto	l2552
  7387  0017C6                     u1560:
  7388  0017C6                     
  7389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  7390  0017C6  0100               	movlb	0	; () banked
  7391  0017C8  B1E8               	btfsc	_flags& (0+255),0,b
  7392  0017CA  EFE9  F00B         	goto	u1571
  7393  0017CE  EFEB  F00B         	goto	u1570
  7394  0017D2                     u1571:
  7395  0017D2  EFF5  F00B         	goto	l2560
  7396  0017D6                     u1570:
  7397  0017D6                     
  7398                           ; BSR set to: 0
  7399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  7400  0017D6  C013  F00A         	movff	pad@buf,fputs@s
  7401  0017DA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7402  0017DE  C011  F00C         	movff	pad@fp,fputs@fp
  7403  0017E2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7404  0017E6  EC7F  F010         	call	_fputs	;wreg free
  7405  0017EA                     l2560:
  7406                           
  7407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  7408  0017EA  C013  F001         	movff	pad@buf,strlen@s
  7409  0017EE  C014  F002         	movff	pad@buf+1,strlen@s+1
  7410  0017F2  ECFF  F010         	call	_strlen	;wreg free
  7411  0017F6  501A               	movf	pad@w^0,w,c
  7412  0017F8  2401               	addwf	?_strlen^0,w,c
  7413  0017FA  6E11               	movwf	?_pad^0,c
  7414  0017FC  501B               	movf	(pad@w+1)^0,w,c
  7415  0017FE  2002               	addwfc	(?_strlen+1)^0,w,c
  7416  001800  6E12               	movwf	(?_pad+1)^0,c
  7417  001802  0012               	return		;funcret
  7418  001804                     __end_of_pad:
  7419                           	opt callstack 0
  7420                           
  7421 ;; *************** function _strlen *****************
  7422 ;; Defined at:
  7423 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  7424 ;; Parameters:    Size  Location     Type
  7425 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7426 ;;		 -> dbuf(32), 
  7427 ;; Auto vars:     Size  Location     Type
  7428 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7429 ;;		 -> dbuf(32), 
  7430 ;; Return value:  Size  Location     Type
  7431 ;;                  2    0[COMRAM] unsigned int 
  7432 ;; Registers used:
  7433 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7434 ;; Tracked objects:
  7435 ;;		On entry : 0/0
  7436 ;;		On exit  : 0/0
  7437 ;;		Unchanged: 0/0
  7438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7439 ;;      Params:         2       0       0       0       0       0       0       0       0
  7440 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7441 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7442 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7443 ;;Total ram usage:        4 bytes
  7444 ;; Hardware stack levels used:    1
  7445 ;; Hardware stack levels required when called:    1
  7446 ;; This function calls:
  7447 ;;		Nothing
  7448 ;; This function is called by:
  7449 ;;		_pad
  7450 ;; This function uses a non-reentrant model
  7451 ;;
  7452                           
  7453                           	psect	text37
  7454  0021FE                     __ptext37:
  7455                           	opt callstack 0
  7456  0021FE                     _strlen:
  7457                           	opt callstack 22
  7458  0021FE  C001  F003         	movff	strlen@s,strlen@a
  7459  002202  C002  F004         	movff	strlen@s+1,strlen@a+1
  7460  002206  EF07  F011         	goto	l2536
  7461  00220A                     l2534:
  7462  00220A  4A01               	infsnz	strlen@s^0,f,c
  7463  00220C  2A02               	incf	(strlen@s+1)^0,f,c
  7464  00220E                     l2536:
  7465  00220E  C001  FFD9         	movff	strlen@s,fsr2l
  7466  002212  C002  FFDA         	movff	strlen@s+1,fsr2h
  7467  002216  50DF               	movf	indf2,w,c
  7468  002218  A4D8               	btfss	status,2,c
  7469  00221A  EF11  F011         	goto	u1531
  7470  00221E  EF13  F011         	goto	u1530
  7471  002222                     u1531:
  7472  002222  EF05  F011         	goto	l2534
  7473  002226                     u1530:
  7474  002226  5003               	movf	strlen@a^0,w,c
  7475  002228  5C01               	subwf	strlen@s^0,w,c
  7476  00222A  6E01               	movwf	?_strlen^0,c
  7477  00222C  5004               	movf	(strlen@a+1)^0,w,c
  7478  00222E  5802               	subwfb	(strlen@s+1)^0,w,c
  7479  002230  6E02               	movwf	(?_strlen+1)^0,c
  7480  002232  0012               	return		;funcret
  7481  002234                     __end_of_strlen:
  7482                           	opt callstack 0
  7483                           
  7484 ;; *************** function _fputs *****************
  7485 ;; Defined at:
  7486 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  7487 ;; Parameters:    Size  Location     Type
  7488 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7489 ;;		 -> dbuf(32), 
  7490 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7491 ;;		 -> sprintf@f(6), 
  7492 ;; Auto vars:     Size  Location     Type
  7493 ;;  i               2   14[COMRAM] int 
  7494 ;;  c               1   13[COMRAM] unsigned char 
  7495 ;; Return value:  Size  Location     Type
  7496 ;;                  2    9[COMRAM] int 
  7497 ;; Registers used:
  7498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7499 ;; Tracked objects:
  7500 ;;		On entry : 0/0
  7501 ;;		On exit  : 0/0
  7502 ;;		Unchanged: 0/0
  7503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7504 ;;      Params:         4       0       0       0       0       0       0       0       0
  7505 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7506 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7507 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7508 ;;Total ram usage:        7 bytes
  7509 ;; Hardware stack levels used:    1
  7510 ;; Hardware stack levels required when called:    3
  7511 ;; This function calls:
  7512 ;;		_fputc
  7513 ;; This function is called by:
  7514 ;;		_pad
  7515 ;; This function uses a non-reentrant model
  7516 ;;
  7517                           
  7518                           	psect	text38
  7519  0020FE                     __ptext38:
  7520                           	opt callstack 0
  7521  0020FE                     _fputs:
  7522                           	opt callstack 20
  7523  0020FE  0E00               	movlw	0
  7524  002100  6E10               	movwf	(fputs@i+1)^0,c
  7525  002102  0E00               	movlw	0
  7526  002104  6E0F               	movwf	fputs@i^0,c
  7527  002106  EF90  F010         	goto	l2530
  7528  00210A                     l2526:
  7529  00210A  C00E  F001         	movff	fputs@c,fputc@c
  7530  00210E  6A02               	clrf	(fputc@c+1)^0,c
  7531  002110  C00C  F003         	movff	fputs@fp,fputc@fp
  7532  002114  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7533  002118  EC72  F00A         	call	_fputc	;wreg free
  7534  00211C  4A0F               	infsnz	fputs@i^0,f,c
  7535  00211E  2A10               	incf	(fputs@i+1)^0,f,c
  7536  002120                     l2530:
  7537  002120  500F               	movf	fputs@i^0,w,c
  7538  002122  240A               	addwf	fputs@s^0,w,c
  7539  002124  6ED9               	movwf	fsr2l,c
  7540  002126  5010               	movf	(fputs@i+1)^0,w,c
  7541  002128  200B               	addwfc	(fputs@s+1)^0,w,c
  7542  00212A  6EDA               	movwf	fsr2h,c
  7543  00212C  50DF               	movf	indf2,w,c
  7544  00212E  6E0E               	movwf	fputs@c^0,c
  7545  002130  500E               	movf	fputs@c^0,w,c
  7546  002132  A4D8               	btfss	status,2,c
  7547  002134  EF9E  F010         	goto	u1521
  7548  002138  EFA0  F010         	goto	u1520
  7549  00213C                     u1521:
  7550  00213C  EF85  F010         	goto	l2526
  7551  002140                     u1520:
  7552  002140  0012               	return		;funcret
  7553  002142                     __end_of_fputs:
  7554                           	opt callstack 0
  7555                           
  7556 ;; *************** function _fputc *****************
  7557 ;; Defined at:
  7558 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;  c               2    0[COMRAM] int 
  7561 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7562 ;;		 -> sprintf@f(6), 
  7563 ;; Auto vars:     Size  Location     Type
  7564 ;;		None
  7565 ;; Return value:  Size  Location     Type
  7566 ;;                  2    0[COMRAM] int 
  7567 ;; Registers used:
  7568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7569 ;; Tracked objects:
  7570 ;;		On entry : 0/0
  7571 ;;		On exit  : 0/0
  7572 ;;		Unchanged: 0/0
  7573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7574 ;;      Params:         4       0       0       0       0       0       0       0       0
  7575 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7576 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7577 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7578 ;;Total ram usage:        9 bytes
  7579 ;; Hardware stack levels used:    1
  7580 ;; Hardware stack levels required when called:    2
  7581 ;; This function calls:
  7582 ;;		_putch
  7583 ;; This function is called by:
  7584 ;;		_pad
  7585 ;;		_vfpfcnvrt
  7586 ;;		_fputs
  7587 ;; This function uses a non-reentrant model
  7588 ;;
  7589                           
  7590                           	psect	text39
  7591  0014E4                     __ptext39:
  7592                           	opt callstack 0
  7593  0014E4                     _fputc:
  7594                           	opt callstack 23
  7595  0014E4  5003               	movf	fputc@fp^0,w,c
  7596  0014E6  1004               	iorwf	(fputc@fp+1)^0,w,c
  7597  0014E8  B4D8               	btfsc	status,2,c
  7598  0014EA  EF79  F00A         	goto	u1481
  7599  0014EE  EF7B  F00A         	goto	u1480
  7600  0014F2                     u1481:
  7601  0014F2  EF84  F00A         	goto	l2514
  7602  0014F6                     u1480:
  7603  0014F6  5003               	movf	fputc@fp^0,w,c
  7604  0014F8  1004               	iorwf	(fputc@fp+1)^0,w,c
  7605  0014FA  A4D8               	btfss	status,2,c
  7606  0014FC  EF82  F00A         	goto	u1491
  7607  001500  EF84  F00A         	goto	u1490
  7608  001504                     u1491:
  7609  001504  EF89  F00A         	goto	l2516
  7610  001508                     u1490:
  7611  001508                     l2514:
  7612  001508  5001               	movf	fputc@c^0,w,c
  7613  00150A  EC09  F012         	call	_putch
  7614  00150E  EFD6  F00A         	goto	l1182
  7615  001512                     l2516:
  7616  001512  EE20 F004          	lfsr	2,4
  7617  001516  5003               	movf	fputc@fp^0,w,c
  7618  001518  26D9               	addwf	fsr2l,f,c
  7619  00151A  5004               	movf	(fputc@fp+1)^0,w,c
  7620  00151C  22DA               	addwfc	fsr2h,f,c
  7621  00151E  50DE               	movf	postinc2,w,c
  7622  001520  10DE               	iorwf	postinc2,w,c
  7623  001522  B4D8               	btfsc	status,2,c
  7624  001524  EF96  F00A         	goto	u1501
  7625  001528  EF98  F00A         	goto	u1500
  7626  00152C                     u1501:
  7627  00152C  EFB3  F00A         	goto	l2520
  7628  001530                     u1500:
  7629  001530  EE20 F004          	lfsr	2,4
  7630  001534  5003               	movf	fputc@fp^0,w,c
  7631  001536  26D9               	addwf	fsr2l,f,c
  7632  001538  5004               	movf	(fputc@fp+1)^0,w,c
  7633  00153A  22DA               	addwfc	fsr2h,f,c
  7634  00153C  EE10 F002          	lfsr	1,2
  7635  001540  5003               	movf	fputc@fp^0,w,c
  7636  001542  26E1               	addwf	fsr1l,f,c
  7637  001544  5004               	movf	(fputc@fp+1)^0,w,c
  7638  001546  22E2               	addwfc	fsr1h,f,c
  7639  001548  50DE               	movf	postinc2,w,c
  7640  00154A  5CE6               	subwf	postinc1,w,c
  7641  00154C  50E6               	movf	postinc1,w,c
  7642  00154E  0A80               	xorlw	128
  7643  001550  6E09               	movwf	(??_fputc+4)^0,c
  7644  001552  50DE               	movf	postinc2,w,c
  7645  001554  0A80               	xorlw	128
  7646  001556  5809               	subwfb	(??_fputc+4)^0,w,c
  7647  001558  B0D8               	btfsc	status,0,c
  7648  00155A  EFB1  F00A         	goto	u1511
  7649  00155E  EFB3  F00A         	goto	u1510
  7650  001562                     u1511:
  7651  001562  EFD6  F00A         	goto	l1182
  7652  001566                     u1510:
  7653  001566                     l2520:
  7654  001566  EE20 F002          	lfsr	2,2
  7655  00156A  5003               	movf	fputc@fp^0,w,c
  7656  00156C  26D9               	addwf	fsr2l,f,c
  7657  00156E  5004               	movf	(fputc@fp+1)^0,w,c
  7658  001570  22DA               	addwfc	fsr2h,f,c
  7659  001572  CFDE F005          	movff	postinc2,??_fputc
  7660  001576  CFDD F006          	movff	postdec2,??_fputc+1
  7661  00157A  C003  FFD9         	movff	fputc@fp,fsr2l
  7662  00157E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7663  001582  CFDE F007          	movff	postinc2,??_fputc+2
  7664  001586  CFDD F008          	movff	postdec2,??_fputc+3
  7665  00158A  5005               	movf	??_fputc^0,w,c
  7666  00158C  2407               	addwf	(??_fputc+2)^0,w,c
  7667  00158E  6ED9               	movwf	fsr2l,c
  7668  001590  5006               	movf	(??_fputc+1)^0,w,c
  7669  001592  2008               	addwfc	(??_fputc+3)^0,w,c
  7670  001594  6EDA               	movwf	fsr2h,c
  7671  001596  C001  FFDF         	movff	fputc@c,indf2
  7672  00159A  EE20 F002          	lfsr	2,2
  7673  00159E  5003               	movf	fputc@fp^0,w,c
  7674  0015A0  26D9               	addwf	fsr2l,f,c
  7675  0015A2  5004               	movf	(fputc@fp+1)^0,w,c
  7676  0015A4  22DA               	addwfc	fsr2h,f,c
  7677  0015A6  2ADE               	incf	postinc2,f,c
  7678  0015A8  0E00               	movlw	0
  7679  0015AA  22DD               	addwfc	postdec2,f,c
  7680  0015AC                     l1182:
  7681  0015AC  0012               	return		;funcret
  7682  0015AE                     __end_of_fputc:
  7683                           	opt callstack 0
  7684                           
  7685 ;; *************** function _putch *****************
  7686 ;; Defined at:
  7687 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;  c               1    wreg     unsigned char 
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;  c               1    0[COMRAM] unsigned char 
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  1    wreg      void 
  7694 ;; Registers used:
  7695 ;;		wreg
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 0/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7701 ;;      Params:         0       0       0       0       0       0       0       0       0
  7702 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7703 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7704 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7705 ;;Total ram usage:        0 bytes
  7706 ;; Hardware stack levels used:    1
  7707 ;; Hardware stack levels required when called:    1
  7708 ;; This function calls:
  7709 ;;		Nothing
  7710 ;; This function is called by:
  7711 ;;		_fputc
  7712 ;; This function uses a non-reentrant model
  7713 ;;
  7714                           
  7715                           	psect	text40
  7716  002412                     __ptext40:
  7717                           	opt callstack 0
  7718  002412                     _putch:
  7719                           	opt callstack 23
  7720  002412  0012               	return		;funcret
  7721  002414                     __end_of_putch:
  7722                           	opt callstack 0
  7723                           
  7724 ;; *************** function _asignarHorarios *****************
  7725 ;; Defined at:
  7726 ;;		line 349 in file "main.c"
  7727 ;; Parameters:    Size  Location     Type
  7728 ;;		None
  7729 ;; Auto vars:     Size  Location     Type
  7730 ;;  i               2   16[COMRAM] int 
  7731 ;;  Rx              1   18[COMRAM] unsigned char 
  7732 ;;  datoCapturad    1   15[COMRAM] unsigned char 
  7733 ;;  hora            1   14[COMRAM] unsigned char 
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  1    wreg      void 
  7736 ;; Registers used:
  7737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7743 ;;      Params:         0       0       0       0       0       0       0       0       0
  7744 ;;      Locals:         5       0       0       0       0       0       0       0       0
  7745 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7746 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7747 ;;Total ram usage:        5 bytes
  7748 ;; Hardware stack levels used:    1
  7749 ;; Hardware stack levels required when called:    5
  7750 ;; This function calls:
  7751 ;;		_UART_printf
  7752 ;;		_UART_read
  7753 ;;		_UART_write
  7754 ;;		_escribeHorariosMemoria
  7755 ;; This function is called by:
  7756 ;;		_sistemaPrincipal
  7757 ;; This function uses a non-reentrant model
  7758 ;;
  7759                           
  7760                           	psect	text41
  7761  000DB4                     __ptext41:
  7762                           	opt callstack 0
  7763  000DB4                     _asignarHorarios:
  7764                           	opt callstack 24
  7765  000DB4                     
  7766                           ;main.c: 351:     unsigned char hora;;main.c: 352:     unsigned char Rx;;main.c: 353:   
      +                            char datoCapturado = 0;
  7767  000DB4  0E00               	movlw	0
  7768  000DB6  6E10               	movwf	asignarHorarios@datoCapturado^0,c
  7769  000DB8                     
  7770                           ;main.c: 355:     UART_printf("\r\n OPCIONES DE REGADO \r\n");
  7771  000DB8  0E72               	movlw	low STR_5
  7772  000DBA  6E02               	movwf	UART_printf@cadena^0,c
  7773  000DBC  0E7F               	movlw	high STR_5
  7774  000DBE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7775  000DC0  EC11  F00F         	call	_UART_printf	;wreg free
  7776  000DC4                     
  7777                           ;main.c: 356:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  7778  000DC4  0E7A               	movlw	low STR_6
  7779  000DC6  6E02               	movwf	UART_printf@cadena^0,c
  7780  000DC8  0E7C               	movlw	high STR_6
  7781  000DCA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7782  000DCC  EC11  F00F         	call	_UART_printf	;wreg free
  7783                           
  7784                           ;main.c: 358:     for (int i = 0; i < 2; i++) {
  7785  000DD0  0E00               	movlw	0
  7786  000DD2  6E12               	movwf	(asignarHorarios@i+1)^0,c
  7787  000DD4  0E00               	movlw	0
  7788  000DD6  6E11               	movwf	asignarHorarios@i^0,c
  7789  000DD8                     l3306:
  7790                           
  7791                           ;main.c: 359:         Rx = UART_read();
  7792  000DD8  EC9C  F00F         	call	_UART_read	;wreg free
  7793  000DDC  6E13               	movwf	asignarHorarios@Rx^0,c
  7794  000DDE                     
  7795                           ;main.c: 360:         if (Rx >= 48 && Rx <= 57) {
  7796  000DDE  0E2F               	movlw	47
  7797  000DE0  6413               	cpfsgt	asignarHorarios@Rx^0,c
  7798  000DE2  EFF5  F006         	goto	u2501
  7799  000DE6  EFF7  F006         	goto	u2500
  7800  000DEA                     u2501:
  7801  000DEA  EF1A  F007         	goto	l3326
  7802  000DEE                     u2500:
  7803  000DEE  0E3A               	movlw	58
  7804  000DF0  6013               	cpfslt	asignarHorarios@Rx^0,c
  7805  000DF2  EFFD  F006         	goto	u2511
  7806  000DF6  EFFF  F006         	goto	u2510
  7807  000DFA                     u2511:
  7808  000DFA  EF1A  F007         	goto	l3326
  7809  000DFE                     u2510:
  7810  000DFE                     
  7811                           ;main.c: 361:             if (!i) {
  7812  000DFE  5011               	movf	asignarHorarios@i^0,w,c
  7813  000E00  1012               	iorwf	(asignarHorarios@i+1)^0,w,c
  7814  000E02  A4D8               	btfss	status,2,c
  7815  000E04  EF06  F007         	goto	u2521
  7816  000E08  EF08  F007         	goto	u2520
  7817  000E0C                     u2521:
  7818  000E0C  EF12  F007         	goto	l3320
  7819  000E10                     u2520:
  7820  000E10                     
  7821                           ;main.c: 362:                 Rx -= 48;
  7822  000E10  0E30               	movlw	48
  7823  000E12  5E13               	subwf	asignarHorarios@Rx^0,f,c
  7824  000E14                     
  7825                           ;main.c: 363:                 hora = Rx;
  7826  000E14  C013  F00F         	movff	asignarHorarios@Rx,asignarHorarios@hora
  7827  000E18                     
  7828                           ;main.c: 364:                 hora *= 10;
  7829  000E18  0E0A               	movlw	10
  7830  000E1A  020F               	mulwf	asignarHorarios@hora^0,c
  7831  000E1C  50F3               	movf	prodl,w,c
  7832  000E1E  6E0F               	movwf	asignarHorarios@hora^0,c
  7833                           
  7834                           ;main.c: 365:             } else {
  7835  000E20  EF21  F007         	goto	l3330
  7836  000E24                     l3320:
  7837                           
  7838                           ;main.c: 366:                 datoCapturado = 1;
  7839  000E24  0E01               	movlw	1
  7840  000E26  6E10               	movwf	asignarHorarios@datoCapturado^0,c
  7841  000E28                     
  7842                           ;main.c: 367:                 Rx -= 48;
  7843  000E28  0E30               	movlw	48
  7844  000E2A  5E13               	subwf	asignarHorarios@Rx^0,f,c
  7845  000E2C                     
  7846                           ;main.c: 368:                 hora += Rx;
  7847  000E2C  5013               	movf	asignarHorarios@Rx^0,w,c
  7848  000E2E  260F               	addwf	asignarHorarios@hora^0,f,c
  7849  000E30  EF21  F007         	goto	l3330
  7850  000E34                     l3326:
  7851                           
  7852                           ;main.c: 371:             datoCapturado = 0;
  7853  000E34  0E00               	movlw	0
  7854  000E36  6E10               	movwf	asignarHorarios@datoCapturado^0,c
  7855  000E38                     
  7856                           ;main.c: 373:             UART_write('F');
  7857  000E38  0E46               	movlw	70
  7858  000E3A  ECD5  F011         	call	_UART_write
  7859                           
  7860                           ;main.c: 374:             break;
  7861  000E3E  EF31  F007         	goto	l3334
  7862  000E42                     l3330:
  7863                           
  7864                           ;main.c: 376:     }
  7865  000E42  4A11               	infsnz	asignarHorarios@i^0,f,c
  7866  000E44  2A12               	incf	(asignarHorarios@i+1)^0,f,c
  7867  000E46  BE12               	btfsc	(asignarHorarios@i+1)^0,7,c
  7868  000E48  EF2F  F007         	goto	u2531
  7869  000E4C  5012               	movf	(asignarHorarios@i+1)^0,w,c
  7870  000E4E  E109               	bnz	u2530
  7871  000E50  0E02               	movlw	2
  7872  000E52  5C11               	subwf	asignarHorarios@i^0,w,c
  7873  000E54  A0D8               	btfss	status,0,c
  7874  000E56  EF2F  F007         	goto	u2531
  7875  000E5A  EF31  F007         	goto	u2530
  7876  000E5E                     u2531:
  7877  000E5E  EFEC  F006         	goto	l3306
  7878  000E62                     u2530:
  7879  000E62                     l3334:
  7880                           
  7881                           ;main.c: 378:     if (datoCapturado && !esperandoDatos) {
  7882  000E62  5010               	movf	asignarHorarios@datoCapturado^0,w,c
  7883  000E64  B4D8               	btfsc	status,2,c
  7884  000E66  EF37  F007         	goto	u2541
  7885  000E6A  EF39  F007         	goto	u2540
  7886  000E6E                     u2541:
  7887  000E6E  EF7F  F007         	goto	l293
  7888  000E72                     u2540:
  7889  000E72  0100               	movlb	0	; () banked
  7890  000E74  51F6               	movf	_esperandoDatos& (0+255),w,b
  7891  000E76  A4D8               	btfss	status,2,c
  7892  000E78  EF40  F007         	goto	u2551
  7893  000E7C  EF42  F007         	goto	u2550
  7894  000E80                     u2551:
  7895  000E80  EF7F  F007         	goto	l293
  7896  000E84                     u2550:
  7897  000E84                     
  7898                           ; BSR set to: 0
  7899                           ;main.c: 380:         UART_printf("\r\n Ingrese 1 para regar || ingrese 0 para no regar:
      +                           \r\n");
  7900  000E84  0E43               	movlw	low STR_7
  7901  000E86  6E02               	movwf	UART_printf@cadena^0,c
  7902  000E88  0E7C               	movlw	high STR_7
  7903  000E8A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7904  000E8C  EC11  F00F         	call	_UART_printf	;wreg free
  7905  000E90                     
  7906                           ;main.c: 382:         Rx = UART_read();
  7907  000E90  EC9C  F00F         	call	_UART_read	;wreg free
  7908  000E94  6E13               	movwf	asignarHorarios@Rx^0,c
  7909  000E96                     
  7910                           ;main.c: 383:         Rx -= 48;
  7911  000E96  0E30               	movlw	48
  7912  000E98  5E13               	subwf	asignarHorarios@Rx^0,f,c
  7913  000E9A                     
  7914                           ;main.c: 385:         if (Rx != 1 && Rx != 0)
  7915  000E9A  0413               	decf	asignarHorarios@Rx^0,w,c
  7916  000E9C  B4D8               	btfsc	status,2,c
  7917  000E9E  EF53  F007         	goto	u2561
  7918  000EA2  EF55  F007         	goto	u2560
  7919  000EA6                     u2561:
  7920  000EA6  EF5F  F007         	goto	l290
  7921  000EAA                     u2560:
  7922  000EAA  5013               	movf	asignarHorarios@Rx^0,w,c
  7923  000EAC  B4D8               	btfsc	status,2,c
  7924  000EAE  EF5B  F007         	goto	u2571
  7925  000EB2  EF5D  F007         	goto	u2570
  7926  000EB6                     u2571:
  7927  000EB6  EF5F  F007         	goto	l290
  7928  000EBA                     u2570:
  7929  000EBA                     
  7930                           ;main.c: 386:             Rx = 0;
  7931  000EBA  0E00               	movlw	0
  7932  000EBC  6E13               	movwf	asignarHorarios@Rx^0,c
  7933  000EBE                     l290:
  7934                           
  7935                           ;main.c: 388:         if (!esperandoDatos) {
  7936  000EBE  0100               	movlb	0	; () banked
  7937  000EC0  51F6               	movf	_esperandoDatos& (0+255),w,b
  7938  000EC2  A4D8               	btfss	status,2,c
  7939  000EC4  EF66  F007         	goto	u2581
  7940  000EC8  EF68  F007         	goto	u2580
  7941  000ECC                     u2581:
  7942  000ECC  EF7C  F007         	goto	l3356
  7943  000ED0                     u2580:
  7944  000ED0                     
  7945                           ; BSR set to: 0
  7946                           ;main.c: 389:             UART_printf("\r\n Horario Modificado! \r\n");
  7947  000ED0  0E58               	movlw	low STR_8
  7948  000ED2  6E02               	movwf	UART_printf@cadena^0,c
  7949  000ED4  0E7F               	movlw	high STR_8
  7950  000ED6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7951  000ED8  EC11  F00F         	call	_UART_printf	;wreg free
  7952  000EDC                     
  7953                           ;main.c: 391:             horarios[hora].regar = Rx;
  7954  000EDC  500F               	movf	asignarHorarios@hora^0,w,c
  7955  000EDE  0D03               	mullw	3
  7956  000EE0  0E01               	movlw	low (_horarios+1)
  7957  000EE2  24F3               	addwf	243,w,c
  7958  000EE4  6ED9               	movwf	fsr2l,c
  7959  000EE6  0E01               	movlw	high (_horarios+1)
  7960  000EE8  20F4               	addwfc	prodh,w,c
  7961  000EEA  6EDA               	movwf	fsr2h,c
  7962  000EEC  C013  FFDF         	movff	asignarHorarios@Rx,indf2
  7963  000EF0                     
  7964                           ;main.c: 393:             escribeHorariosMemoria();
  7965  000EF0  EC0B  F00A         	call	_escribeHorariosMemoria	;wreg free
  7966                           
  7967                           ;main.c: 396:         } else {
  7968  000EF4  EF7F  F007         	goto	l293
  7969  000EF8                     l3356:
  7970                           
  7971                           ; BSR set to: 0
  7972                           ;main.c: 398:             UART_write('F');
  7973  000EF8  0E46               	movlw	70
  7974  000EFA  ECD5  F011         	call	_UART_write
  7975  000EFE                     l293:
  7976  000EFE  0012               	return		;funcret
  7977  000F00                     __end_of_asignarHorarios:
  7978                           	opt callstack 0
  7979                           
  7980 ;; *************** function _escribeHorariosMemoria *****************
  7981 ;; Defined at:
  7982 ;;		line 218 in file "main.c"
  7983 ;; Parameters:    Size  Location     Type
  7984 ;;		None
  7985 ;; Auto vars:     Size  Location     Type
  7986 ;;  i               2   12[COMRAM] int 
  7987 ;;  contMemoria     2   10[COMRAM] int 
  7988 ;; Return value:  Size  Location     Type
  7989 ;;                  1    wreg      void 
  7990 ;; Registers used:
  7991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7992 ;; Tracked objects:
  7993 ;;		On entry : 0/0
  7994 ;;		On exit  : 0/0
  7995 ;;		Unchanged: 0/0
  7996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7997 ;;      Params:         0       0       0       0       0       0       0       0       0
  7998 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7999 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8000 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8001 ;;Total ram usage:        4 bytes
  8002 ;; Hardware stack levels used:    1
  8003 ;; Hardware stack levels required when called:    4
  8004 ;; This function calls:
  8005 ;;		___wmul
  8006 ;;		_escribe_eeprom
  8007 ;; This function is called by:
  8008 ;;		_asignarHorarios
  8009 ;;		_setTiempoRegar
  8010 ;; This function uses a non-reentrant model
  8011 ;;
  8012                           
  8013                           	psect	text42
  8014  001416                     __ptext42:
  8015                           	opt callstack 0
  8016  001416                     _escribeHorariosMemoria:
  8017                           	opt callstack 24
  8018  001416                     
  8019                           ;main.c: 220:     int contMemoria = 0;
  8020  001416  0E00               	movlw	0
  8021  001418  6E0C               	movwf	(escribeHorariosMemoria@contMemoria+1)^0,c
  8022  00141A  0E00               	movlw	0
  8023  00141C  6E0B               	movwf	escribeHorariosMemoria@contMemoria^0,c
  8024                           
  8025                           ;main.c: 221:     for (int i = 0; i < 24; i++) {
  8026  00141E  0E00               	movlw	0
  8027  001420  6E0E               	movwf	(escribeHorariosMemoria@i+1)^0,c
  8028  001422  0E00               	movlw	0
  8029  001424  6E0D               	movwf	escribeHorariosMemoria@i^0,c
  8030  001426                     l3094:
  8031                           
  8032                           ;main.c: 222:         escribe_eeprom(contMemoria++, horarios[i].hora);
  8033  001426  C00B  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  8034  00142A  C00C  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  8035  00142E  C00D  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  8036  001432  C00E  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  8037  001436  0E00               	movlw	0
  8038  001438  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8039  00143A  0E03               	movlw	3
  8040  00143C  6E03               	movwf	___wmul@multiplicand^0,c
  8041  00143E  EC86  F011         	call	___wmul	;wreg free
  8042  001442  0E00               	movlw	low _horarios
  8043  001444  2401               	addwf	?___wmul^0,w,c
  8044  001446  6ED9               	movwf	fsr2l,c
  8045  001448  0E01               	movlw	high _horarios
  8046  00144A  2002               	addwfc	(?___wmul+1)^0,w,c
  8047  00144C  6EDA               	movwf	fsr2h,c
  8048  00144E  50DF               	movf	indf2,w,c
  8049  001450  6E09               	movwf	escribe_eeprom@dato^0,c
  8050  001452  EC1A  F011         	call	_escribe_eeprom	;wreg free
  8051  001456  4A0B               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  8052  001458  2A0C               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  8053  00145A                     
  8054                           ;main.c: 223:         escribe_eeprom(contMemoria++, horarios[i].regar);
  8055  00145A  C00B  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  8056  00145E  C00C  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  8057  001462  C00D  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  8058  001466  C00E  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  8059  00146A  0E00               	movlw	0
  8060  00146C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8061  00146E  0E03               	movlw	3
  8062  001470  6E03               	movwf	___wmul@multiplicand^0,c
  8063  001472  EC86  F011         	call	___wmul	;wreg free
  8064  001476  0E01               	movlw	low (_horarios+1)
  8065  001478  2401               	addwf	?___wmul^0,w,c
  8066  00147A  6ED9               	movwf	fsr2l,c
  8067  00147C  0E01               	movlw	high (_horarios+1)
  8068  00147E  2002               	addwfc	(?___wmul+1)^0,w,c
  8069  001480  6EDA               	movwf	fsr2h,c
  8070  001482  50DF               	movf	indf2,w,c
  8071  001484  6E09               	movwf	escribe_eeprom@dato^0,c
  8072  001486  EC1A  F011         	call	_escribe_eeprom	;wreg free
  8073  00148A  4A0B               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  8074  00148C  2A0C               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  8075  00148E                     
  8076                           ;main.c: 224:         escribe_eeprom(contMemoria++, horarios[i].tiempoRegar);
  8077  00148E  C00B  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  8078  001492  C00C  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  8079  001496  C00D  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  8080  00149A  C00E  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  8081  00149E  0E00               	movlw	0
  8082  0014A0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8083  0014A2  0E03               	movlw	3
  8084  0014A4  6E03               	movwf	___wmul@multiplicand^0,c
  8085  0014A6  EC86  F011         	call	___wmul	;wreg free
  8086  0014AA  0E02               	movlw	low (_horarios+2)
  8087  0014AC  2401               	addwf	?___wmul^0,w,c
  8088  0014AE  6ED9               	movwf	fsr2l,c
  8089  0014B0  0E01               	movlw	high (_horarios+2)
  8090  0014B2  2002               	addwfc	(?___wmul+1)^0,w,c
  8091  0014B4  6EDA               	movwf	fsr2h,c
  8092  0014B6  50DF               	movf	indf2,w,c
  8093  0014B8  6E09               	movwf	escribe_eeprom@dato^0,c
  8094  0014BA  EC1A  F011         	call	_escribe_eeprom	;wreg free
  8095  0014BE  4A0B               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  8096  0014C0  2A0C               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  8097  0014C2                     
  8098                           ;main.c: 225:     }
  8099  0014C2  4A0D               	infsnz	escribeHorariosMemoria@i^0,f,c
  8100  0014C4  2A0E               	incf	(escribeHorariosMemoria@i+1)^0,f,c
  8101  0014C6  BE0E               	btfsc	(escribeHorariosMemoria@i+1)^0,7,c
  8102  0014C8  EF6F  F00A         	goto	u2291
  8103  0014CC  500E               	movf	(escribeHorariosMemoria@i+1)^0,w,c
  8104  0014CE  E109               	bnz	u2290
  8105  0014D0  0E18               	movlw	24
  8106  0014D2  5C0D               	subwf	escribeHorariosMemoria@i^0,w,c
  8107  0014D4  A0D8               	btfss	status,0,c
  8108  0014D6  EF6F  F00A         	goto	u2291
  8109  0014DA  EF71  F00A         	goto	u2290
  8110  0014DE                     u2291:
  8111  0014DE  EF13  F00A         	goto	l3094
  8112  0014E2                     u2290:
  8113  0014E2  0012               	return		;funcret
  8114  0014E4                     __end_of_escribeHorariosMemoria:
  8115                           	opt callstack 0
  8116                           
  8117 ;; *************** function _escribe_eeprom *****************
  8118 ;; Defined at:
  8119 ;;		line 189 in file "main.c"
  8120 ;; Parameters:    Size  Location     Type
  8121 ;;  direccion       2    6[COMRAM] unsigned short 
  8122 ;;  dato            1    8[COMRAM] unsigned char 
  8123 ;; Auto vars:     Size  Location     Type
  8124 ;;		None
  8125 ;; Return value:  Size  Location     Type
  8126 ;;                  1    wreg      void 
  8127 ;; Registers used:
  8128 ;;		wreg, status,2, status,0, cstack
  8129 ;; Tracked objects:
  8130 ;;		On entry : 0/0
  8131 ;;		On exit  : 0/0
  8132 ;;		Unchanged: 0/0
  8133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8134 ;;      Params:         3       0       0       0       0       0       0       0       0
  8135 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8136 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8137 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8138 ;;Total ram usage:        4 bytes
  8139 ;; Hardware stack levels used:    1
  8140 ;; Hardware stack levels required when called:    3
  8141 ;; This function calls:
  8142 ;;		_i2c_detener
  8143 ;;		_i2c_envia_dato
  8144 ;;		_i2c_inicia_com
  8145 ;; This function is called by:
  8146 ;;		_escribeHorariosMemoria
  8147 ;; This function uses a non-reentrant model
  8148 ;;
  8149                           
  8150                           	psect	text43
  8151  002234                     __ptext43:
  8152                           	opt callstack 0
  8153  002234                     _escribe_eeprom:
  8154                           	opt callstack 24
  8155  002234                     
  8156                           ;main.c: 190:     i2c_inicia_com();
  8157  002234  ECFF  F011         	call	_i2c_inicia_com	;wreg free
  8158                           
  8159                           ;main.c: 191:     i2c_envia_dato(0xAE);
  8160  002238  0EAE               	movlw	174
  8161  00223A  ECEB  F011         	call	_i2c_envia_dato
  8162                           
  8163                           ;main.c: 192:     i2c_envia_dato(direccion >> 8);
  8164  00223E  5008               	movf	(escribe_eeprom@direccion+1)^0,w,c
  8165  002240  ECEB  F011         	call	_i2c_envia_dato
  8166                           
  8167                           ;main.c: 194:     i2c_envia_dato(direccion);
  8168  002244  5007               	movf	escribe_eeprom@direccion^0,w,c
  8169  002246  ECEB  F011         	call	_i2c_envia_dato
  8170                           
  8171                           ;main.c: 196:     i2c_envia_dato(dato);
  8172  00224A  5009               	movf	escribe_eeprom@dato^0,w,c
  8173  00224C  ECEB  F011         	call	_i2c_envia_dato
  8174                           
  8175                           ;main.c: 197:     i2c_detener();
  8176  002250  EC03  F012         	call	_i2c_detener	;wreg free
  8177  002254                     
  8178                           ;main.c: 198:     _delay((unsigned long)((10)*(4000000/4000.0)));
  8179  002254  0E0D               	movlw	13
  8180  002256  6E0A               	movwf	??_escribe_eeprom^0,c
  8181  002258  0EFC               	movlw	252
  8182  00225A                     u3037:
  8183  00225A  2EE8               	decfsz	wreg,f,c
  8184  00225C  D7FE               	bra	u3037
  8185  00225E  2E0A               	decfsz	??_escribe_eeprom^0,f,c
  8186  002260  D7FC               	bra	u3037
  8187  002262  0012               	return		;funcret
  8188  002264                     __end_of_escribe_eeprom:
  8189                           	opt callstack 0
  8190                           
  8191 ;; *************** function _UART_read *****************
  8192 ;; Defined at:
  8193 ;;		line 34 in file "./UART.h"
  8194 ;; Parameters:    Size  Location     Type
  8195 ;;		None
  8196 ;; Auto vars:     Size  Location     Type
  8197 ;;		None
  8198 ;; Return value:  Size  Location     Type
  8199 ;;                  1    wreg      unsigned char 
  8200 ;; Registers used:
  8201 ;;		wreg, status,2
  8202 ;; Tracked objects:
  8203 ;;		On entry : 0/0
  8204 ;;		On exit  : 0/0
  8205 ;;		Unchanged: 0/0
  8206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8207 ;;      Params:         0       0       0       0       0       0       0       0       0
  8208 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8209 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8210 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8211 ;;Total ram usage:        0 bytes
  8212 ;; Hardware stack levels used:    1
  8213 ;; Hardware stack levels required when called:    1
  8214 ;; This function calls:
  8215 ;;		Nothing
  8216 ;; This function is called by:
  8217 ;;		_setRtc
  8218 ;;		_asignarHorarios
  8219 ;;		_setTiempoRegar
  8220 ;;		_lecturaWifi
  8221 ;; This function uses a non-reentrant model
  8222 ;;
  8223                           
  8224                           	psect	text44
  8225  001F38                     __ptext44:
  8226                           	opt callstack 0
  8227  001F38                     _UART_read:
  8228                           	opt callstack 27
  8229  001F38                     
  8230                           ;./UART.h: 36:     TMR0 = VALOR_TIMER0UART;
  8231  001F38  0E67               	movlw	103
  8232  001F3A  6ED7               	movwf	215,c	;volatile
  8233  001F3C  0E69               	movlw	105
  8234  001F3E  6ED6               	movwf	214,c	;volatile
  8235                           
  8236                           ;./UART.h: 37:     esperaDatoConcluida = 0;
  8237  001F40  0E00               	movlw	0
  8238  001F42  0100               	movlb	0	; () banked
  8239  001F44  6FF7               	movwf	_esperaDatoConcluida& (0+255),b
  8240                           
  8241                           ;./UART.h: 38:     esperandoDatos = 1;
  8242  001F46  0E01               	movlw	1
  8243  001F48  6FF6               	movwf	_esperandoDatos& (0+255),b
  8244                           
  8245                           ;./UART.h: 39:     byteUart = 0;
  8246  001F4A  0E00               	movlw	0
  8247  001F4C  6FF8               	movwf	_byteUart& (0+255),b
  8248                           
  8249                           ;./UART.h: 40:     tiempoInactividadTrans = 0;
  8250  001F4E  0E00               	movlw	0
  8251  001F50  6FF9               	movwf	_tiempoInactividadTrans& (0+255),b
  8252  001F52                     l121:
  8253                           
  8254                           ; BSR set to: 0
  8255  001F52  BA9E               	btfsc	158,5,c	;volatile
  8256  001F54  EFAE  F00F         	goto	u2141
  8257  001F58  EFB0  F00F         	goto	u2140
  8258  001F5C                     u2141:
  8259  001F5C  EFB8  F00F         	goto	l2942
  8260  001F60                     u2140:
  8261  001F60                     
  8262                           ; BSR set to: 0
  8263  001F60  51F7               	movf	_esperaDatoConcluida& (0+255),w,b
  8264  001F62  B4D8               	btfsc	status,2,c
  8265  001F64  EFB6  F00F         	goto	u2151
  8266  001F68  EFB8  F00F         	goto	u2150
  8267  001F6C                     u2151:
  8268  001F6C  EFA9  F00F         	goto	l121
  8269  001F70                     u2150:
  8270  001F70                     l2942:
  8271                           
  8272                           ; BSR set to: 0
  8273                           ;./UART.h: 44:     if (!esperaDatoConcluida) {
  8274  001F70  51F7               	movf	_esperaDatoConcluida& (0+255),w,b
  8275  001F72  A4D8               	btfss	status,2,c
  8276  001F74  EFBE  F00F         	goto	u2161
  8277  001F78  EFC0  F00F         	goto	u2160
  8278  001F7C                     u2161:
  8279  001F7C  EFC4  F00F         	goto	l126
  8280  001F80                     u2160:
  8281  001F80                     
  8282                           ; BSR set to: 0
  8283                           ;./UART.h: 45:         byteUart = RCREG;
  8284  001F80  CFAE F0F8          	movff	4014,_byteUart	;volatile
  8285  001F84                     
  8286                           ; BSR set to: 0
  8287                           ;./UART.h: 46:         esperandoDatos = 0;
  8288  001F84  0E00               	movlw	0
  8289  001F86  6FF6               	movwf	_esperandoDatos& (0+255),b
  8290  001F88                     l126:
  8291                           
  8292                           ; BSR set to: 0
  8293                           ;./UART.h: 49:     return byteUart;
  8294  001F88  51F8               	movf	_byteUart& (0+255),w,b
  8295  001F8A                     
  8296                           ; BSR set to: 0
  8297  001F8A  0012               	return		;funcret
  8298  001F8C                     __end_of_UART_read:
  8299                           	opt callstack 0
  8300                           
  8301 ;; *************** function _UART_printf *****************
  8302 ;; Defined at:
  8303 ;;		line 57 in file "./UART.h"
  8304 ;; Parameters:    Size  Location     Type
  8305 ;;  cadena          2    1[COMRAM] PTR unsigned char 
  8306 ;;		 -> mostrarDatosSensoresWIFI@buffer(50), mostrarDatosSensores@buffer(50), STR_28(21), STR_27(25), 
  8307 ;;		 -> dameDatosSistema@buffer(50), STR_25(50), STR_24(42), STR_23(3), 
  8308 ;;		 -> STR_22(14), STR_21(34), STR_20(32), STR_19(49), 
  8309 ;;		 -> STR_18(37), STR_17(27), STR_16(37), STR_15(32), 
  8310 ;;		 -> lecturaWifi@buffer(50), STR_13(38), STR_12(37), STR_11(72), 
  8311 ;;		 -> STR_10(51), STR_9(23), STR_8(26), STR_7(55), 
  8312 ;;		 -> STR_6(51), STR_5(25), STR_4(37), STR_3(31), 
  8313 ;;		 -> STR_2(43), STR_1(16), 
  8314 ;; Auto vars:     Size  Location     Type
  8315 ;;		None
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  1    wreg      void 
  8318 ;; Registers used:
  8319 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8320 ;; Tracked objects:
  8321 ;;		On entry : 0/0
  8322 ;;		On exit  : 0/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8325 ;;      Params:         2       0       0       0       0       0       0       0       0
  8326 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8327 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8328 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8329 ;;Total ram usage:        2 bytes
  8330 ;; Hardware stack levels used:    1
  8331 ;; Hardware stack levels required when called:    2
  8332 ;; This function calls:
  8333 ;;		_UART_write
  8334 ;; This function is called by:
  8335 ;;		_fijaHoraRtc
  8336 ;;		_asignarHorarios
  8337 ;;		_setTiempoRegar
  8338 ;;		_lecturaWifi
  8339 ;;		_mostrarMenu
  8340 ;;		_sistemaPrincipal
  8341 ;;		_dameDatosSistema
  8342 ;;		_dameTemperaturaHumedad
  8343 ;;		_mostrarDatosSensores
  8344 ;;		_mostrarDatosSensoresWIFI
  8345 ;; This function uses a non-reentrant model
  8346 ;;
  8347                           
  8348                           	psect	text45
  8349  001E22                     __ptext45:
  8350                           	opt callstack 0
  8351  001E22                     _UART_printf:
  8352                           	opt callstack 26
  8353  001E22                     
  8354                           ;./UART.h: 58:     while (*cadena) {
  8355  001E22  EF27  F00F         	goto	l2804
  8356  001E26                     l2800:
  8357                           
  8358                           ;./UART.h: 59:         UART_write(*cadena++);
  8359  001E26  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  8360  001E2A  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  8361  001E2E  6AF8               	clrf	tblptru,c
  8362  001E30  0E07               	movlw	(high __ramtop+-1)
  8363  001E32  64F7               	cpfsgt	tblptrh,c
  8364  001E34  D003               	bra	u1967
  8365  001E36  0008               	tblrd		*
  8366  001E38  50F5               	movf	tablat,w,c
  8367  001E3A  D005               	bra	u1960
  8368  001E3C                     u1967:
  8369  001E3C  CFF6 FFE1          	movff	tblptrl,fsr1l
  8370  001E40  CFF7 FFE2          	movff	tblptrh,fsr1h
  8371  001E44  50E7               	movf	indf1,w,c
  8372  001E46                     u1960:
  8373  001E46  ECD5  F011         	call	_UART_write
  8374  001E4A  4A02               	infsnz	UART_printf@cadena^0,f,c
  8375  001E4C  2A03               	incf	(UART_printf@cadena+1)^0,f,c
  8376  001E4E                     l2804:
  8377                           
  8378                           ;./UART.h: 58:     while (*cadena) {
  8379  001E4E  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  8380  001E52  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  8381  001E56  6AF8               	clrf	tblptru,c
  8382  001E58  0E07               	movlw	(high __ramtop+-1)
  8383  001E5A  64F7               	cpfsgt	tblptrh,c
  8384  001E5C  D003               	bra	u1977
  8385  001E5E  0008               	tblrd		*
  8386  001E60  50F5               	movf	tablat,w,c
  8387  001E62  D005               	bra	u1970
  8388  001E64                     u1977:
  8389  001E64  CFF6 FFE1          	movff	tblptrl,fsr1l
  8390  001E68  CFF7 FFE2          	movff	tblptrh,fsr1h
  8391  001E6C  50E7               	movf	indf1,w,c
  8392  001E6E                     u1970:
  8393  001E6E  0900               	iorlw	0
  8394  001E70  A4D8               	btfss	status,2,c
  8395  001E72  EF3D  F00F         	goto	u1981
  8396  001E76  EF3F  F00F         	goto	u1980
  8397  001E7A                     u1981:
  8398  001E7A  EF13  F00F         	goto	l2800
  8399  001E7E                     u1980:
  8400  001E7E  0012               	return		;funcret
  8401  001E80                     __end_of_UART_printf:
  8402                           	opt callstack 0
  8403                           
  8404 ;; *************** function _UART_write *****************
  8405 ;; Defined at:
  8406 ;;		line 52 in file "./UART.h"
  8407 ;; Parameters:    Size  Location     Type
  8408 ;;  dato            1    wreg     unsigned char 
  8409 ;; Auto vars:     Size  Location     Type
  8410 ;;  dato            1    0[COMRAM] unsigned char 
  8411 ;; Return value:  Size  Location     Type
  8412 ;;                  1    wreg      void 
  8413 ;; Registers used:
  8414 ;;		wreg
  8415 ;; Tracked objects:
  8416 ;;		On entry : 0/0
  8417 ;;		On exit  : 0/0
  8418 ;;		Unchanged: 0/0
  8419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8420 ;;      Params:         0       0       0       0       0       0       0       0       0
  8421 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8422 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8423 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8424 ;;Total ram usage:        1 bytes
  8425 ;; Hardware stack levels used:    1
  8426 ;; Hardware stack levels required when called:    1
  8427 ;; This function calls:
  8428 ;;		Nothing
  8429 ;; This function is called by:
  8430 ;;		_UART_printf
  8431 ;;		_setRtc
  8432 ;;		_asignarHorarios
  8433 ;;		_setTiempoRegar
  8434 ;;		_lecturaWifi
  8435 ;;		_dameDatosSistema
  8436 ;;		_mostrarDatosSensores
  8437 ;;		_mostrarDatosSensoresWIFI
  8438 ;; This function uses a non-reentrant model
  8439 ;;
  8440                           
  8441                           	psect	text46
  8442  0023AA                     __ptext46:
  8443                           	opt callstack 0
  8444  0023AA                     _UART_write:
  8445                           	opt callstack 26
  8446                           
  8447                           ;incstack = 0
  8448                           ;UART_write@dato stored from wreg
  8449  0023AA  6E01               	movwf	UART_write@dato^0,c
  8450  0023AC                     
  8451                           ;./UART.h: 53:     TXREG = dato;
  8452  0023AC  C001  FFAD         	movff	UART_write@dato,4013	;volatile
  8453  0023B0                     l130:
  8454  0023B0  A2AC               	btfss	172,1,c	;volatile
  8455  0023B2  EFDD  F011         	goto	u1901
  8456  0023B6  EFDF  F011         	goto	u1900
  8457  0023BA                     u1901:
  8458  0023BA  EFD8  F011         	goto	l130
  8459  0023BE                     u1900:
  8460  0023BE  0012               	return		;funcret
  8461  0023C0                     __end_of_UART_write:
  8462                           	opt callstack 0
  8463                           
  8464 ;; *************** function _leeHorariosMemoria *****************
  8465 ;; Defined at:
  8466 ;;		line 228 in file "main.c"
  8467 ;; Parameters:    Size  Location     Type
  8468 ;;		None
  8469 ;; Auto vars:     Size  Location     Type
  8470 ;;  i               2    8[COMRAM] int 
  8471 ;;  contMemoria     2    6[COMRAM] int 
  8472 ;; Return value:  Size  Location     Type
  8473 ;;                  1    wreg      void 
  8474 ;; Registers used:
  8475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8476 ;; Tracked objects:
  8477 ;;		On entry : 0/0
  8478 ;;		On exit  : 0/0
  8479 ;;		Unchanged: 0/0
  8480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8481 ;;      Params:         0       0       0       0       0       0       0       0       0
  8482 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8483 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8484 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8485 ;;Total ram usage:        4 bytes
  8486 ;; Hardware stack levels used:    1
  8487 ;; Hardware stack levels required when called:    4
  8488 ;; This function calls:
  8489 ;;		___wmul
  8490 ;;		_leer_eeprom
  8491 ;; This function is called by:
  8492 ;;		_main
  8493 ;; This function uses a non-reentrant model
  8494 ;;
  8495                           
  8496                           	psect	text47
  8497  001676                     __ptext47:
  8498                           	opt callstack 0
  8499  001676                     _leeHorariosMemoria:
  8500                           	opt callstack 26
  8501  001676                     
  8502                           ;main.c: 230:     int contMemoria = 0;
  8503  001676  0E00               	movlw	0
  8504  001678  6E08               	movwf	(leeHorariosMemoria@contMemoria+1)^0,c
  8505  00167A  0E00               	movlw	0
  8506  00167C  6E07               	movwf	leeHorariosMemoria@contMemoria^0,c
  8507                           
  8508                           ;main.c: 232:     for (int i = 0; i < 24; i++) {
  8509  00167E  0E00               	movlw	0
  8510  001680  6E0A               	movwf	(leeHorariosMemoria@i+1)^0,c
  8511  001682  0E00               	movlw	0
  8512  001684  6E09               	movwf	leeHorariosMemoria@i^0,c
  8513  001686                     l3576:
  8514                           
  8515                           ;main.c: 233:         horarios[i].hora = leer_eeprom(contMemoria++);
  8516  001686  C009  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  8517  00168A  C00A  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  8518  00168E  0E00               	movlw	0
  8519  001690  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8520  001692  0E03               	movlw	3
  8521  001694  6E03               	movwf	___wmul@multiplicand^0,c
  8522  001696  EC86  F011         	call	___wmul	;wreg free
  8523  00169A  0E00               	movlw	low _horarios
  8524  00169C  2401               	addwf	?___wmul^0,w,c
  8525  00169E  6ED9               	movwf	fsr2l,c
  8526  0016A0  0E01               	movlw	high _horarios
  8527  0016A2  2002               	addwfc	(?___wmul+1)^0,w,c
  8528  0016A4  6EDA               	movwf	fsr2h,c
  8529  0016A6  C007  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  8530  0016AA  C008  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  8531  0016AE  ECE1  F010         	call	_leer_eeprom	;wreg free
  8532  0016B2  6EDF               	movwf	indf2,c
  8533  0016B4  4A07               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  8534  0016B6  2A08               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  8535  0016B8                     
  8536                           ;main.c: 234:         horarios[i].regar = leer_eeprom(contMemoria++);
  8537  0016B8  C009  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  8538  0016BC  C00A  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  8539  0016C0  0E00               	movlw	0
  8540  0016C2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8541  0016C4  0E03               	movlw	3
  8542  0016C6  6E03               	movwf	___wmul@multiplicand^0,c
  8543  0016C8  EC86  F011         	call	___wmul	;wreg free
  8544  0016CC  0E01               	movlw	low (_horarios+1)
  8545  0016CE  2401               	addwf	?___wmul^0,w,c
  8546  0016D0  6ED9               	movwf	fsr2l,c
  8547  0016D2  0E01               	movlw	high (_horarios+1)
  8548  0016D4  2002               	addwfc	(?___wmul+1)^0,w,c
  8549  0016D6  6EDA               	movwf	fsr2h,c
  8550  0016D8  C007  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  8551  0016DC  C008  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  8552  0016E0  ECE1  F010         	call	_leer_eeprom	;wreg free
  8553  0016E4  6EDF               	movwf	indf2,c
  8554  0016E6  4A07               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  8555  0016E8  2A08               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  8556  0016EA                     
  8557                           ;main.c: 235:         horarios[i].tiempoRegar = leer_eeprom(contMemoria++);
  8558  0016EA  C009  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  8559  0016EE  C00A  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  8560  0016F2  0E00               	movlw	0
  8561  0016F4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8562  0016F6  0E03               	movlw	3
  8563  0016F8  6E03               	movwf	___wmul@multiplicand^0,c
  8564  0016FA  EC86  F011         	call	___wmul	;wreg free
  8565  0016FE  0E02               	movlw	low (_horarios+2)
  8566  001700  2401               	addwf	?___wmul^0,w,c
  8567  001702  6ED9               	movwf	fsr2l,c
  8568  001704  0E01               	movlw	high (_horarios+2)
  8569  001706  2002               	addwfc	(?___wmul+1)^0,w,c
  8570  001708  6EDA               	movwf	fsr2h,c
  8571  00170A  C007  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  8572  00170E  C008  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  8573  001712  ECE1  F010         	call	_leer_eeprom	;wreg free
  8574  001716  6EDF               	movwf	indf2,c
  8575  001718  4A07               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  8576  00171A  2A08               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  8577  00171C                     
  8578                           ;main.c: 236:     }
  8579  00171C  4A09               	infsnz	leeHorariosMemoria@i^0,f,c
  8580  00171E  2A0A               	incf	(leeHorariosMemoria@i+1)^0,f,c
  8581  001720  BE0A               	btfsc	(leeHorariosMemoria@i+1)^0,7,c
  8582  001722  EF9C  F00B         	goto	u2761
  8583  001726  500A               	movf	(leeHorariosMemoria@i+1)^0,w,c
  8584  001728  E109               	bnz	u2760
  8585  00172A  0E18               	movlw	24
  8586  00172C  5C09               	subwf	leeHorariosMemoria@i^0,w,c
  8587  00172E  A0D8               	btfss	status,0,c
  8588  001730  EF9C  F00B         	goto	u2761
  8589  001734  EF9E  F00B         	goto	u2760
  8590  001738                     u2761:
  8591  001738  EF43  F00B         	goto	l3576
  8592  00173C                     u2760:
  8593  00173C  0012               	return		;funcret
  8594  00173E                     __end_of_leeHorariosMemoria:
  8595                           	opt callstack 0
  8596                           
  8597 ;; *************** function _leer_eeprom *****************
  8598 ;; Defined at:
  8599 ;;		line 201 in file "main.c"
  8600 ;; Parameters:    Size  Location     Type
  8601 ;;  direccion       2    2[COMRAM] unsigned short 
  8602 ;; Auto vars:     Size  Location     Type
  8603 ;;  dato            1    5[COMRAM] unsigned char 
  8604 ;; Return value:  Size  Location     Type
  8605 ;;                  1    wreg      unsigned char 
  8606 ;; Registers used:
  8607 ;;		wreg, status,2, status,0, cstack
  8608 ;; Tracked objects:
  8609 ;;		On entry : 0/0
  8610 ;;		On exit  : 0/0
  8611 ;;		Unchanged: 0/0
  8612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8613 ;;      Params:         2       0       0       0       0       0       0       0       0
  8614 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8615 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8616 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8617 ;;Total ram usage:        4 bytes
  8618 ;; Hardware stack levels used:    1
  8619 ;; Hardware stack levels required when called:    3
  8620 ;; This function calls:
  8621 ;;		_i2c_detener
  8622 ;;		_i2c_envia_dato
  8623 ;;		_i2c_inicia_com
  8624 ;;		_i2c_recibe_dato
  8625 ;;		_i2c_reinicia_com
  8626 ;; This function is called by:
  8627 ;;		_leeHorariosMemoria
  8628 ;; This function uses a non-reentrant model
  8629 ;;
  8630                           
  8631                           	psect	text48
  8632  0021C2                     __ptext48:
  8633                           	opt callstack 0
  8634  0021C2                     _leer_eeprom:
  8635                           	opt callstack 26
  8636  0021C2                     
  8637                           ;main.c: 203:     unsigned char dato;;main.c: 205:     i2c_inicia_com();
  8638  0021C2  ECFF  F011         	call	_i2c_inicia_com	;wreg free
  8639                           
  8640                           ;main.c: 206:     i2c_envia_dato(0xAE);
  8641  0021C6  0EAE               	movlw	174
  8642  0021C8  ECEB  F011         	call	_i2c_envia_dato
  8643                           
  8644                           ;main.c: 207:     i2c_envia_dato(direccion >> 8);
  8645  0021CC  5004               	movf	(leer_eeprom@direccion+1)^0,w,c
  8646  0021CE  ECEB  F011         	call	_i2c_envia_dato
  8647                           
  8648                           ;main.c: 208:     i2c_envia_dato(direccion);
  8649  0021D2  5003               	movf	leer_eeprom@direccion^0,w,c
  8650  0021D4  ECEB  F011         	call	_i2c_envia_dato
  8651                           
  8652                           ;main.c: 209:     i2c_reinicia_com();
  8653  0021D8  ECFB  F011         	call	_i2c_reinicia_com	;wreg free
  8654                           
  8655                           ;main.c: 210:     i2c_envia_dato(0xAF);
  8656  0021DC  0EAF               	movlw	175
  8657  0021DE  ECEB  F011         	call	_i2c_envia_dato
  8658                           
  8659                           ;main.c: 211:     dato = i2c_recibe_dato();
  8660  0021E2  ECC8  F011         	call	_i2c_recibe_dato	;wreg free
  8661  0021E6  6E06               	movwf	leer_eeprom@dato^0,c
  8662                           
  8663                           ;main.c: 212:     i2c_detener();
  8664  0021E8  EC03  F012         	call	_i2c_detener	;wreg free
  8665  0021EC                     
  8666                           ;main.c: 213:     _delay((unsigned long)((10)*(4000000/4000.0)));
  8667  0021EC  0E0D               	movlw	13
  8668  0021EE  6E05               	movwf	??_leer_eeprom^0,c
  8669  0021F0  0EFC               	movlw	252
  8670  0021F2                     u3047:
  8671  0021F2  2EE8               	decfsz	wreg,f,c
  8672  0021F4  D7FE               	bra	u3047
  8673  0021F6  2E05               	decfsz	??_leer_eeprom^0,f,c
  8674  0021F8  D7FC               	bra	u3047
  8675  0021FA                     
  8676                           ;main.c: 215:     return dato;
  8677  0021FA  5006               	movf	leer_eeprom@dato^0,w,c
  8678  0021FC  0012               	return		;funcret
  8679  0021FE                     __end_of_leer_eeprom:
  8680                           	opt callstack 0
  8681                           
  8682 ;; *************** function _i2c_reinicia_com *****************
  8683 ;; Defined at:
  8684 ;;		line 37 in file "./I2C.h"
  8685 ;; Parameters:    Size  Location     Type
  8686 ;;		None
  8687 ;; Auto vars:     Size  Location     Type
  8688 ;;		None
  8689 ;; Return value:  Size  Location     Type
  8690 ;;                  1    wreg      void 
  8691 ;; Registers used:
  8692 ;;		wreg, status,2, status,0, cstack
  8693 ;; Tracked objects:
  8694 ;;		On entry : 0/0
  8695 ;;		On exit  : 0/0
  8696 ;;		Unchanged: 0/0
  8697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8698 ;;      Params:         0       0       0       0       0       0       0       0       0
  8699 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8700 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8701 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8702 ;;Total ram usage:        0 bytes
  8703 ;; Hardware stack levels used:    1
  8704 ;; Hardware stack levels required when called:    2
  8705 ;; This function calls:
  8706 ;;		_i2c_espera
  8707 ;; This function is called by:
  8708 ;;		_leer_rtc
  8709 ;;		_leer_eeprom
  8710 ;; This function uses a non-reentrant model
  8711 ;;
  8712                           
  8713                           	psect	text49
  8714  0023F6                     __ptext49:
  8715                           	opt callstack 0
  8716  0023F6                     _i2c_reinicia_com:
  8717                           	opt callstack 25
  8718  0023F6                     
  8719                           ;./I2C.h: 38:     i2c_espera();
  8720  0023F6  EC73  F011         	call	_i2c_espera	;wreg free
  8721  0023FA                     
  8722                           ;./I2C.h: 39:     SSPCON2bits.RSEN = 1;
  8723  0023FA  82C5               	bsf	197,1,c	;volatile
  8724  0023FC  0012               	return		;funcret
  8725  0023FE                     __end_of_i2c_reinicia_com:
  8726                           	opt callstack 0
  8727                           
  8728 ;; *************** function _i2c_recibe_dato *****************
  8729 ;; Defined at:
  8730 ;;		line 68 in file "./I2C.h"
  8731 ;; Parameters:    Size  Location     Type
  8732 ;;		None
  8733 ;; Auto vars:     Size  Location     Type
  8734 ;;  datoleido       1    1[COMRAM] unsigned char 
  8735 ;; Return value:  Size  Location     Type
  8736 ;;                  1    wreg      unsigned char 
  8737 ;; Registers used:
  8738 ;;		wreg, status,2, status,0, cstack
  8739 ;; Tracked objects:
  8740 ;;		On entry : 0/0
  8741 ;;		On exit  : 0/0
  8742 ;;		Unchanged: 0/0
  8743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8744 ;;      Params:         0       0       0       0       0       0       0       0       0
  8745 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8746 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8747 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8748 ;;Total ram usage:        1 bytes
  8749 ;; Hardware stack levels used:    1
  8750 ;; Hardware stack levels required when called:    2
  8751 ;; This function calls:
  8752 ;;		_i2c_espera
  8753 ;; This function is called by:
  8754 ;;		_leer_rtc
  8755 ;;		_leer_eeprom
  8756 ;; This function uses a non-reentrant model
  8757 ;;
  8758                           
  8759                           	psect	text50
  8760  002390                     __ptext50:
  8761                           	opt callstack 0
  8762  002390                     _i2c_recibe_dato:
  8763                           	opt callstack 25
  8764  002390                     
  8765                           ;./I2C.h: 70:     unsigned char datoleido;;./I2C.h: 73:     i2c_espera();
  8766  002390  EC73  F011         	call	_i2c_espera	;wreg free
  8767  002394                     
  8768                           ;./I2C.h: 74:     SSPCON2bits.RCEN = 1;
  8769  002394  86C5               	bsf	197,3,c	;volatile
  8770                           
  8771                           ;./I2C.h: 76:     i2c_espera();
  8772  002396  EC73  F011         	call	_i2c_espera	;wreg free
  8773  00239A                     
  8774                           ;./I2C.h: 77:     datoleido = SSPBUF;
  8775  00239A  CFC9 F002          	movff	4041,i2c_recibe_dato@datoleido	;volatile
  8776                           
  8777                           ;./I2C.h: 80:     i2c_espera();
  8778  00239E  EC73  F011         	call	_i2c_espera	;wreg free
  8779  0023A2                     
  8780                           ;./I2C.h: 82:     SSPCON2bits.ACKDT = 1;
  8781  0023A2  8AC5               	bsf	197,5,c	;volatile
  8782  0023A4                     
  8783                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
  8784  0023A4  88C5               	bsf	197,4,c	;volatile
  8785  0023A6                     
  8786                           ;./I2C.h: 91:     return datoleido;
  8787  0023A6  5002               	movf	i2c_recibe_dato@datoleido^0,w,c
  8788  0023A8  0012               	return		;funcret
  8789  0023AA                     __end_of_i2c_recibe_dato:
  8790                           	opt callstack 0
  8791                           
  8792 ;; *************** function _i2c_inicia_com *****************
  8793 ;; Defined at:
  8794 ;;		line 28 in file "./I2C.h"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;		None
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;		None
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  1    wreg      void 
  8801 ;; Registers used:
  8802 ;;		wreg, status,2, status,0, cstack
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8808 ;;      Params:         0       0       0       0       0       0       0       0       0
  8809 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8810 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8811 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8812 ;;Total ram usage:        0 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; Hardware stack levels required when called:    2
  8815 ;; This function calls:
  8816 ;;		_i2c_espera
  8817 ;; This function is called by:
  8818 ;;		_escribe_rtc
  8819 ;;		_leer_rtc
  8820 ;;		_escribe_eeprom
  8821 ;;		_leer_eeprom
  8822 ;; This function uses a non-reentrant model
  8823 ;;
  8824                           
  8825                           	psect	text51
  8826  0023FE                     __ptext51:
  8827                           	opt callstack 0
  8828  0023FE                     _i2c_inicia_com:
  8829                           	opt callstack 25
  8830  0023FE                     
  8831                           ;./I2C.h: 29:     i2c_espera();
  8832  0023FE  EC73  F011         	call	_i2c_espera	;wreg free
  8833  002402                     
  8834                           ;./I2C.h: 30:     SSPCON2bits.SEN = 1;
  8835  002402  80C5               	bsf	197,0,c	;volatile
  8836  002404  0012               	return		;funcret
  8837  002406                     __end_of_i2c_inicia_com:
  8838                           	opt callstack 0
  8839                           
  8840 ;; *************** function _i2c_envia_dato *****************
  8841 ;; Defined at:
  8842 ;;		line 57 in file "./I2C.h"
  8843 ;; Parameters:    Size  Location     Type
  8844 ;;  dato            1    wreg     unsigned char 
  8845 ;; Auto vars:     Size  Location     Type
  8846 ;;  dato            1    1[COMRAM] unsigned char 
  8847 ;; Return value:  Size  Location     Type
  8848 ;;                  1    wreg      unsigned char 
  8849 ;; Registers used:
  8850 ;;		wreg, status,2, status,0, cstack
  8851 ;; Tracked objects:
  8852 ;;		On entry : 0/0
  8853 ;;		On exit  : 0/0
  8854 ;;		Unchanged: 0/0
  8855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8856 ;;      Params:         0       0       0       0       0       0       0       0       0
  8857 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8858 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8859 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8860 ;;Total ram usage:        1 bytes
  8861 ;; Hardware stack levels used:    1
  8862 ;; Hardware stack levels required when called:    2
  8863 ;; This function calls:
  8864 ;;		_i2c_espera
  8865 ;; This function is called by:
  8866 ;;		_escribe_rtc
  8867 ;;		_leer_rtc
  8868 ;;		_escribe_eeprom
  8869 ;;		_leer_eeprom
  8870 ;; This function uses a non-reentrant model
  8871 ;;
  8872                           
  8873                           	psect	text52
  8874  0023D6                     __ptext52:
  8875                           	opt callstack 0
  8876  0023D6                     _i2c_envia_dato:
  8877                           	opt callstack 25
  8878                           
  8879                           ;incstack = 0
  8880                           ;i2c_envia_dato@dato stored from wreg
  8881  0023D6  6E02               	movwf	i2c_envia_dato@dato^0,c
  8882  0023D8                     
  8883                           ;./I2C.h: 58:     i2c_espera();
  8884  0023D8  EC73  F011         	call	_i2c_espera	;wreg free
  8885  0023DC                     
  8886                           ;./I2C.h: 59:     SSPBUF = dato;
  8887  0023DC  C002  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
  8888  0023E0  0012               	return		;funcret
  8889  0023E2                     __end_of_i2c_envia_dato:
  8890                           	opt callstack 0
  8891                           
  8892 ;; *************** function _i2c_detener *****************
  8893 ;; Defined at:
  8894 ;;		line 46 in file "./I2C.h"
  8895 ;; Parameters:    Size  Location     Type
  8896 ;;		None
  8897 ;; Auto vars:     Size  Location     Type
  8898 ;;		None
  8899 ;; Return value:  Size  Location     Type
  8900 ;;                  1    wreg      void 
  8901 ;; Registers used:
  8902 ;;		wreg, status,2, status,0, cstack
  8903 ;; Tracked objects:
  8904 ;;		On entry : 0/0
  8905 ;;		On exit  : 0/0
  8906 ;;		Unchanged: 0/0
  8907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8908 ;;      Params:         0       0       0       0       0       0       0       0       0
  8909 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8910 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8911 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8912 ;;Total ram usage:        0 bytes
  8913 ;; Hardware stack levels used:    1
  8914 ;; Hardware stack levels required when called:    2
  8915 ;; This function calls:
  8916 ;;		_i2c_espera
  8917 ;; This function is called by:
  8918 ;;		_escribe_rtc
  8919 ;;		_leer_rtc
  8920 ;;		_escribe_eeprom
  8921 ;;		_leer_eeprom
  8922 ;; This function uses a non-reentrant model
  8923 ;;
  8924                           
  8925                           	psect	text53
  8926  002406                     __ptext53:
  8927                           	opt callstack 0
  8928  002406                     _i2c_detener:
  8929                           	opt callstack 25
  8930  002406                     
  8931                           ;./I2C.h: 47:     i2c_espera();
  8932  002406  EC73  F011         	call	_i2c_espera	;wreg free
  8933  00240A                     
  8934                           ;./I2C.h: 48:     SSPCON2bits.PEN = 1;
  8935  00240A  84C5               	bsf	197,2,c	;volatile
  8936  00240C  0012               	return		;funcret
  8937  00240E                     __end_of_i2c_detener:
  8938                           	opt callstack 0
  8939                           
  8940 ;; *************** function _i2c_espera *****************
  8941 ;; Defined at:
  8942 ;;		line 20 in file "./I2C.h"
  8943 ;; Parameters:    Size  Location     Type
  8944 ;;		None
  8945 ;; Auto vars:     Size  Location     Type
  8946 ;;		None
  8947 ;; Return value:  Size  Location     Type
  8948 ;;                  1    wreg      void 
  8949 ;; Registers used:
  8950 ;;		wreg, status,2, status,0
  8951 ;; Tracked objects:
  8952 ;;		On entry : 0/0
  8953 ;;		On exit  : 0/0
  8954 ;;		Unchanged: 0/0
  8955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8956 ;;      Params:         0       0       0       0       0       0       0       0       0
  8957 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8958 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8959 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8960 ;;Total ram usage:        1 bytes
  8961 ;; Hardware stack levels used:    1
  8962 ;; Hardware stack levels required when called:    1
  8963 ;; This function calls:
  8964 ;;		Nothing
  8965 ;; This function is called by:
  8966 ;;		_i2c_inicia_com
  8967 ;;		_i2c_reinicia_com
  8968 ;;		_i2c_detener
  8969 ;;		_i2c_envia_dato
  8970 ;;		_i2c_recibe_dato
  8971 ;; This function uses a non-reentrant model
  8972 ;;
  8973                           
  8974                           	psect	text54
  8975  0022E6                     __ptext54:
  8976                           	opt callstack 0
  8977  0022E6                     _i2c_espera:
  8978                           	opt callstack 25
  8979  0022E6                     l2726:
  8980  0022E6  CFC5 F001          	movff	4037,??_i2c_espera	;volatile
  8981  0022EA  0E1F               	movlw	31
  8982  0022EC  1601               	andwf	??_i2c_espera^0,f,c
  8983  0022EE  A4D8               	btfss	status,2,c
  8984  0022F0  EF7C  F011         	goto	u1881
  8985  0022F4  EF7E  F011         	goto	u1880
  8986  0022F8                     u1881:
  8987  0022F8  EF73  F011         	goto	l2726
  8988  0022FC                     u1880:
  8989  0022FC  B4C7               	btfsc	199,2,c	;volatile
  8990  0022FE  EF83  F011         	goto	u1891
  8991  002302  EF85  F011         	goto	u1890
  8992  002306                     u1891:
  8993  002306  EF73  F011         	goto	l2726
  8994  00230A                     u1890:
  8995  00230A  0012               	return		;funcret
  8996  00230C                     __end_of_i2c_espera:
  8997                           	opt callstack 0
  8998                           
  8999 ;; *************** function _inicializarObjetos *****************
  9000 ;; Defined at:
  9001 ;;		line 147 in file "main.c"
  9002 ;; Parameters:    Size  Location     Type
  9003 ;;		None
  9004 ;; Auto vars:     Size  Location     Type
  9005 ;;  i               2    6[COMRAM] int 
  9006 ;; Return value:  Size  Location     Type
  9007 ;;                  1    wreg      void 
  9008 ;; Registers used:
  9009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9010 ;; Tracked objects:
  9011 ;;		On entry : 0/0
  9012 ;;		On exit  : 0/0
  9013 ;;		Unchanged: 0/0
  9014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9015 ;;      Params:         0       0       0       0       0       0       0       0       0
  9016 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9017 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9018 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9019 ;;Total ram usage:        2 bytes
  9020 ;; Hardware stack levels used:    1
  9021 ;; Hardware stack levels required when called:    2
  9022 ;; This function calls:
  9023 ;;		___wmul
  9024 ;; This function is called by:
  9025 ;;		_main
  9026 ;; This function uses a non-reentrant model
  9027 ;;
  9028                           
  9029                           	psect	text55
  9030  001AA4                     __ptext55:
  9031                           	opt callstack 0
  9032  001AA4                     _inicializarObjetos:
  9033                           	opt callstack 28
  9034  001AA4                     
  9035                           ;main.c: 149:     for (int i = 0; i < 24; i++) {
  9036  001AA4  0E00               	movlw	0
  9037  001AA6  6E08               	movwf	(inicializarObjetos@i+1)^0,c
  9038  001AA8  0E00               	movlw	0
  9039  001AAA  6E07               	movwf	inicializarObjetos@i^0,c
  9040  001AAC                     l3564:
  9041                           
  9042                           ;main.c: 150:         horarios[i].hora = i;
  9043  001AAC  C007  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  9044  001AB0  C008  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  9045  001AB4  0E00               	movlw	0
  9046  001AB6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9047  001AB8  0E03               	movlw	3
  9048  001ABA  6E03               	movwf	___wmul@multiplicand^0,c
  9049  001ABC  EC86  F011         	call	___wmul	;wreg free
  9050  001AC0  0E00               	movlw	low _horarios
  9051  001AC2  2401               	addwf	?___wmul^0,w,c
  9052  001AC4  6ED9               	movwf	fsr2l,c
  9053  001AC6  0E01               	movlw	high _horarios
  9054  001AC8  2002               	addwfc	(?___wmul+1)^0,w,c
  9055  001ACA  6EDA               	movwf	fsr2h,c
  9056  001ACC  C007  FFDF         	movff	inicializarObjetos@i,indf2
  9057                           
  9058                           ;main.c: 151:         horarios[i].regar = 0;
  9059  001AD0  C007  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  9060  001AD4  C008  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  9061  001AD8  0E00               	movlw	0
  9062  001ADA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9063  001ADC  0E03               	movlw	3
  9064  001ADE  6E03               	movwf	___wmul@multiplicand^0,c
  9065  001AE0  EC86  F011         	call	___wmul	;wreg free
  9066  001AE4  0E01               	movlw	low (_horarios+1)
  9067  001AE6  2401               	addwf	?___wmul^0,w,c
  9068  001AE8  6ED9               	movwf	fsr2l,c
  9069  001AEA  0E01               	movlw	high (_horarios+1)
  9070  001AEC  2002               	addwfc	(?___wmul+1)^0,w,c
  9071  001AEE  6EDA               	movwf	fsr2h,c
  9072  001AF0  0E00               	movlw	0
  9073  001AF2  6EDF               	movwf	indf2,c
  9074                           
  9075                           ;main.c: 152:         horarios[i].tiempoRegar = 15;
  9076  001AF4  C007  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  9077  001AF8  C008  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  9078  001AFC  0E00               	movlw	0
  9079  001AFE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9080  001B00  0E03               	movlw	3
  9081  001B02  6E03               	movwf	___wmul@multiplicand^0,c
  9082  001B04  EC86  F011         	call	___wmul	;wreg free
  9083  001B08  0E02               	movlw	low (_horarios+2)
  9084  001B0A  2401               	addwf	?___wmul^0,w,c
  9085  001B0C  6ED9               	movwf	fsr2l,c
  9086  001B0E  0E01               	movlw	high (_horarios+2)
  9087  001B10  2002               	addwfc	(?___wmul+1)^0,w,c
  9088  001B12  6EDA               	movwf	fsr2h,c
  9089  001B14  0E0F               	movlw	15
  9090  001B16  6EDF               	movwf	indf2,c
  9091  001B18                     
  9092                           ;main.c: 153:     }
  9093  001B18  4A07               	infsnz	inicializarObjetos@i^0,f,c
  9094  001B1A  2A08               	incf	(inicializarObjetos@i+1)^0,f,c
  9095  001B1C  BE08               	btfsc	(inicializarObjetos@i+1)^0,7,c
  9096  001B1E  EF9A  F00D         	goto	u2751
  9097  001B22  5008               	movf	(inicializarObjetos@i+1)^0,w,c
  9098  001B24  E109               	bnz	u2750
  9099  001B26  0E18               	movlw	24
  9100  001B28  5C07               	subwf	inicializarObjetos@i^0,w,c
  9101  001B2A  A0D8               	btfss	status,0,c
  9102  001B2C  EF9A  F00D         	goto	u2751
  9103  001B30  EF9C  F00D         	goto	u2750
  9104  001B34                     u2751:
  9105  001B34  EF56  F00D         	goto	l3564
  9106  001B38                     u2750:
  9107  001B38  0012               	return		;funcret
  9108  001B3A                     __end_of_inicializarObjetos:
  9109                           	opt callstack 0
  9110                           
  9111 ;; *************** function ___wmul *****************
  9112 ;; Defined at:
  9113 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  9114 ;; Parameters:    Size  Location     Type
  9115 ;;  multiplier      2    0[COMRAM] unsigned int 
  9116 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9117 ;; Auto vars:     Size  Location     Type
  9118 ;;  product         2    4[COMRAM] unsigned int 
  9119 ;; Return value:  Size  Location     Type
  9120 ;;                  2    0[COMRAM] unsigned int 
  9121 ;; Registers used:
  9122 ;;		wreg, status,2, status,0, prodl, prodh
  9123 ;; Tracked objects:
  9124 ;;		On entry : 0/0
  9125 ;;		On exit  : 0/0
  9126 ;;		Unchanged: 0/0
  9127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9128 ;;      Params:         4       0       0       0       0       0       0       0       0
  9129 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9130 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9131 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9132 ;;Total ram usage:        6 bytes
  9133 ;; Hardware stack levels used:    1
  9134 ;; Hardware stack levels required when called:    1
  9135 ;; This function calls:
  9136 ;;		Nothing
  9137 ;; This function is called by:
  9138 ;;		_inicializarObjetos
  9139 ;;		_escribeHorariosMemoria
  9140 ;;		_leeHorariosMemoria
  9141 ;;		_dameDatosSistema
  9142 ;; This function uses a non-reentrant model
  9143 ;;
  9144                           
  9145                           	psect	text56
  9146  00230C                     __ptext56:
  9147                           	opt callstack 0
  9148  00230C                     ___wmul:
  9149                           	opt callstack 26
  9150  00230C  5001               	movf	___wmul@multiplier^0,w,c
  9151  00230E  0203               	mulwf	___wmul@multiplicand^0,c
  9152  002310  CFF3 F005          	movff	prodl,___wmul@product
  9153  002314  CFF4 F006          	movff	prodh,___wmul@product+1
  9154  002318  5001               	movf	___wmul@multiplier^0,w,c
  9155  00231A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9156  00231C  50F3               	movf	243,w,c
  9157  00231E  2606               	addwf	(___wmul@product+1)^0,f,c
  9158  002320  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9159  002322  0203               	mulwf	___wmul@multiplicand^0,c
  9160  002324  50F3               	movf	243,w,c
  9161  002326  2606               	addwf	(___wmul@product+1)^0,f,c
  9162  002328  C005  F001         	movff	___wmul@product,?___wmul
  9163  00232C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9164  002330  0012               	return		;funcret
  9165  002332                     __end_of___wmul:
  9166                           	opt callstack 0
  9167                           
  9168 ;; *************** function _i2c_iniciar *****************
  9169 ;; Defined at:
  9170 ;;		line 4 in file "./I2C.h"
  9171 ;; Parameters:    Size  Location     Type
  9172 ;;		None
  9173 ;; Auto vars:     Size  Location     Type
  9174 ;;		None
  9175 ;; Return value:  Size  Location     Type
  9176 ;;                  1    wreg      void 
  9177 ;; Registers used:
  9178 ;;		wreg, status,2
  9179 ;; Tracked objects:
  9180 ;;		On entry : 0/0
  9181 ;;		On exit  : 0/0
  9182 ;;		Unchanged: 0/0
  9183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9184 ;;      Params:         0       0       0       0       0       0       0       0       0
  9185 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9186 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9187 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9188 ;;Total ram usage:        0 bytes
  9189 ;; Hardware stack levels used:    1
  9190 ;; Hardware stack levels required when called:    1
  9191 ;; This function calls:
  9192 ;;		Nothing
  9193 ;; This function is called by:
  9194 ;;		_main
  9195 ;; This function uses a non-reentrant model
  9196 ;;
  9197                           
  9198                           	psect	text57
  9199  0023C0                     __ptext57:
  9200                           	opt callstack 0
  9201  0023C0                     _i2c_iniciar:
  9202                           	opt callstack 29
  9203  0023C0                     
  9204                           ;./I2C.h: 5:     TRISBbits.RB0 = 1;
  9205  0023C0  8093               	bsf	147,0,c	;volatile
  9206                           
  9207                           ;./I2C.h: 6:     TRISBbits.RB1 = 1;
  9208  0023C2  8293               	bsf	147,1,c	;volatile
  9209  0023C4                     
  9210                           ;./I2C.h: 7:     SSPSTAT = 0b10000000;
  9211  0023C4  0E80               	movlw	128
  9212  0023C6  6EC7               	movwf	199,c	;volatile
  9213                           
  9214                           ;./I2C.h: 8:     SSPCON1 = 0b00101000;
  9215  0023C8  0E28               	movlw	40
  9216  0023CA  6EC6               	movwf	198,c	;volatile
  9217                           
  9218                           ;./I2C.h: 9:     SSPCON2 = 0b00000000;
  9219  0023CC  0E00               	movlw	0
  9220  0023CE  6EC5               	movwf	197,c	;volatile
  9221                           
  9222                           ;./I2C.h: 10:     SSPADD = 9;
  9223  0023D0  0E09               	movlw	9
  9224  0023D2  6EC8               	movwf	200,c	;volatile
  9225  0023D4  0012               	return		;funcret
  9226  0023D6                     __end_of_i2c_iniciar:
  9227                           	opt callstack 0
  9228                           
  9229 ;; *************** function _configurarAdc *****************
  9230 ;; Defined at:
  9231 ;;		line 128 in file "main.c"
  9232 ;; Parameters:    Size  Location     Type
  9233 ;;		None
  9234 ;; Auto vars:     Size  Location     Type
  9235 ;;		None
  9236 ;; Return value:  Size  Location     Type
  9237 ;;                  1    wreg      void 
  9238 ;; Registers used:
  9239 ;;		wreg, status,2
  9240 ;; Tracked objects:
  9241 ;;		On entry : 0/0
  9242 ;;		On exit  : 0/0
  9243 ;;		Unchanged: 0/0
  9244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9245 ;;      Params:         0       0       0       0       0       0       0       0       0
  9246 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9247 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9248 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9249 ;;Total ram usage:        0 bytes
  9250 ;; Hardware stack levels used:    1
  9251 ;; Hardware stack levels required when called:    1
  9252 ;; This function calls:
  9253 ;;		Nothing
  9254 ;; This function is called by:
  9255 ;;		_main
  9256 ;; This function uses a non-reentrant model
  9257 ;;
  9258                           
  9259                           	psect	text58
  9260  0023EC                     __ptext58:
  9261                           	opt callstack 0
  9262  0023EC                     _configurarAdc:
  9263                           	opt callstack 29
  9264  0023EC                     
  9265                           ;main.c: 129:     ADCON1 = 0b00000000;
  9266  0023EC  0E00               	movlw	0
  9267  0023EE  6EC1               	movwf	193,c	;volatile
  9268                           
  9269                           ;main.c: 130:     ADCON2 = 0b10100101;
  9270  0023F0  0EA5               	movlw	165
  9271  0023F2  6EC0               	movwf	192,c	;volatile
  9272  0023F4  0012               	return		;funcret
  9273  0023F6                     __end_of_configurarAdc:
  9274                           	opt callstack 0
  9275                           
  9276 ;; *************** function _UART_init *****************
  9277 ;; Defined at:
  9278 ;;		line 12 in file "./UART.h"
  9279 ;; Parameters:    Size  Location     Type
  9280 ;;  BAUD            4   26[COMRAM] long 
  9281 ;; Auto vars:     Size  Location     Type
  9282 ;;  frecuenciaCr    4    0        long 
  9283 ;; Return value:  Size  Location     Type
  9284 ;;                  1    wreg      void 
  9285 ;; Registers used:
  9286 ;;		wreg, status,2, status,0, cstack
  9287 ;; Tracked objects:
  9288 ;;		On entry : 0/0
  9289 ;;		On exit  : 0/0
  9290 ;;		Unchanged: 0/0
  9291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9292 ;;      Params:         4       0       0       0       0       0       0       0       0
  9293 ;;      Locals:         8       0       0       0       0       0       0       0       0
  9294 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9295 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9296 ;;Total ram usage:       12 bytes
  9297 ;; Hardware stack levels used:    1
  9298 ;; Hardware stack levels required when called:    2
  9299 ;; This function calls:
  9300 ;;		___aldiv
  9301 ;; This function is called by:
  9302 ;;		_main
  9303 ;; This function uses a non-reentrant model
  9304 ;;
  9305                           
  9306                           	psect	text59
  9307  001BB4                     __ptext59:
  9308                           	opt callstack 0
  9309  001BB4                     _UART_init:
  9310                           	opt callstack 28
  9311  001BB4                     
  9312                           ;./UART.h: 14:     TRISCbits.TRISC6 = 0;
  9313  001BB4  9C94               	bcf	148,6,c	;volatile
  9314  001BB6                     
  9315                           ;./UART.h: 15:     TRISCbits.TRISC7 = 1;
  9316  001BB6  8E94               	bsf	148,7,c	;volatile
  9317  001BB8                     
  9318                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  9319  001BB8  0E10               	movlw	16
  9320  001BBA  6E11               	movwf	___aldiv@divisor^0,c
  9321  001BBC  0E00               	movlw	0
  9322  001BBE  6E12               	movwf	(___aldiv@divisor+1)^0,c
  9323  001BC0  0E00               	movlw	0
  9324  001BC2  6E13               	movwf	(___aldiv@divisor+2)^0,c
  9325  001BC4  0E00               	movlw	0
  9326  001BC6  6E14               	movwf	(___aldiv@divisor+3)^0,c
  9327  001BC8  0E00               	movlw	0
  9328  001BCA  6E0D               	movwf	___aldiv@dividend^0,c
  9329  001BCC  0E09               	movlw	9
  9330  001BCE  6E0E               	movwf	(___aldiv@dividend+1)^0,c
  9331  001BD0  0E3D               	movlw	61
  9332  001BD2  6E0F               	movwf	(___aldiv@dividend+2)^0,c
  9333  001BD4  0E00               	movlw	0
  9334  001BD6  6E10               	movwf	(___aldiv@dividend+3)^0,c
  9335  001BD8  EC1A  F008         	call	___aldiv	;wreg free
  9336  001BDC  C00D  F023         	movff	?___aldiv,_UART_init$1795
  9337  001BE0  C00E  F024         	movff	?___aldiv+1,_UART_init$1795+1
  9338  001BE4  C00F  F025         	movff	?___aldiv+2,_UART_init$1795+2
  9339  001BE8  C010  F026         	movff	?___aldiv+3,_UART_init$1795+3
  9340  001BEC                     
  9341                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  9342  001BEC  C023  F00D         	movff	_UART_init$1795,___aldiv@dividend
  9343  001BF0  C024  F00E         	movff	_UART_init$1795+1,___aldiv@dividend+1
  9344  001BF4  C025  F00F         	movff	_UART_init$1795+2,___aldiv@dividend+2
  9345  001BF8  C026  F010         	movff	_UART_init$1795+3,___aldiv@dividend+3
  9346  001BFC  C01B  F011         	movff	UART_init@BAUD,___aldiv@divisor
  9347  001C00  C01C  F012         	movff	UART_init@BAUD+1,___aldiv@divisor+1
  9348  001C04  C01D  F013         	movff	UART_init@BAUD+2,___aldiv@divisor+2
  9349  001C08  C01E  F014         	movff	UART_init@BAUD+3,___aldiv@divisor+3
  9350  001C0C  EC1A  F008         	call	___aldiv	;wreg free
  9351  001C10  040D               	decf	?___aldiv^0,w,c
  9352  001C12  6EAF               	movwf	175,c	;volatile
  9353  001C14                     
  9354                           ;./UART.h: 21:     TXSTAbits.BRGH = 1;
  9355  001C14  84AC               	bsf	172,2,c	;volatile
  9356  001C16                     
  9357                           ;./UART.h: 22:     TXSTAbits.SYNC = 0;
  9358  001C16  98AC               	bcf	172,4,c	;volatile
  9359  001C18                     
  9360                           ;./UART.h: 23:     RCSTAbits.SPEN = 1;
  9361  001C18  8EAB               	bsf	171,7,c	;volatile
  9362  001C1A                     
  9363                           ;./UART.h: 26:     TXSTAbits.TX9 = 0;
  9364  001C1A  9CAC               	bcf	172,6,c	;volatile
  9365  001C1C                     
  9366                           ;./UART.h: 27:     TXSTAbits.TXEN = 1;
  9367  001C1C  8AAC               	bsf	172,5,c	;volatile
  9368  001C1E                     
  9369                           ;./UART.h: 30:     RCSTAbits.RC9 = 0;
  9370  001C1E  9CAB               	bcf	171,6,c	;volatile
  9371  001C20                     
  9372                           ;./UART.h: 31:     RCSTAbits.CREN = 1;
  9373  001C20  88AB               	bsf	171,4,c	;volatile
  9374  001C22  0012               	return		;funcret
  9375  001C24                     __end_of_UART_init:
  9376                           	opt callstack 0
  9377                           
  9378 ;; *************** function ___aldiv *****************
  9379 ;; Defined at:
  9380 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  9381 ;; Parameters:    Size  Location     Type
  9382 ;;  dividend        4   12[COMRAM] long 
  9383 ;;  divisor         4   16[COMRAM] long 
  9384 ;; Auto vars:     Size  Location     Type
  9385 ;;  quotient        4   22[COMRAM] long 
  9386 ;;  sign            1   21[COMRAM] unsigned char 
  9387 ;;  counter         1   20[COMRAM] unsigned char 
  9388 ;; Return value:  Size  Location     Type
  9389 ;;                  4   12[COMRAM] long 
  9390 ;; Registers used:
  9391 ;;		wreg, status,2, status,0
  9392 ;; Tracked objects:
  9393 ;;		On entry : 0/0
  9394 ;;		On exit  : 0/0
  9395 ;;		Unchanged: 0/0
  9396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9397 ;;      Params:         8       0       0       0       0       0       0       0       0
  9398 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9399 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9400 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9401 ;;Total ram usage:       14 bytes
  9402 ;; Hardware stack levels used:    1
  9403 ;; Hardware stack levels required when called:    1
  9404 ;; This function calls:
  9405 ;;		Nothing
  9406 ;; This function is called by:
  9407 ;;		_UART_init
  9408 ;;		_map
  9409 ;; This function uses a non-reentrant model
  9410 ;;
  9411                           
  9412                           	psect	text60
  9413  001034                     __ptext60:
  9414                           	opt callstack 0
  9415  001034                     ___aldiv:
  9416                           	opt callstack 26
  9417  001034  0E00               	movlw	0
  9418  001036  6E16               	movwf	___aldiv@sign^0,c
  9419  001038  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
  9420  00103A  EF23  F008         	goto	u2080
  9421  00103E  EF21  F008         	goto	u2081
  9422  001042                     u2081:
  9423  001042  EF2D  F008         	goto	l2882
  9424  001046                     u2080:
  9425  001046  1E14               	comf	(___aldiv@divisor+3)^0,f,c
  9426  001048  1E13               	comf	(___aldiv@divisor+2)^0,f,c
  9427  00104A  1E12               	comf	(___aldiv@divisor+1)^0,f,c
  9428  00104C  6C11               	negf	___aldiv@divisor^0,c
  9429  00104E  0E00               	movlw	0
  9430  001050  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
  9431  001052  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
  9432  001054  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
  9433  001056  0E01               	movlw	1
  9434  001058  6E16               	movwf	___aldiv@sign^0,c
  9435  00105A                     l2882:
  9436  00105A  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
  9437  00105C  EF34  F008         	goto	u2090
  9438  001060  EF32  F008         	goto	u2091
  9439  001064                     u2091:
  9440  001064  EF3E  F008         	goto	l2888
  9441  001068                     u2090:
  9442  001068  1E10               	comf	(___aldiv@dividend+3)^0,f,c
  9443  00106A  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
  9444  00106C  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
  9445  00106E  6C0D               	negf	___aldiv@dividend^0,c
  9446  001070  0E00               	movlw	0
  9447  001072  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
  9448  001074  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
  9449  001076  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
  9450  001078  0E01               	movlw	1
  9451  00107A  1A16               	xorwf	___aldiv@sign^0,f,c
  9452  00107C                     l2888:
  9453  00107C  0E00               	movlw	0
  9454  00107E  6E17               	movwf	___aldiv@quotient^0,c
  9455  001080  0E00               	movlw	0
  9456  001082  6E18               	movwf	(___aldiv@quotient+1)^0,c
  9457  001084  0E00               	movlw	0
  9458  001086  6E19               	movwf	(___aldiv@quotient+2)^0,c
  9459  001088  0E00               	movlw	0
  9460  00108A  6E1A               	movwf	(___aldiv@quotient+3)^0,c
  9461  00108C  5011               	movf	___aldiv@divisor^0,w,c
  9462  00108E  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
  9463  001090  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
  9464  001092  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
  9465  001094  B4D8               	btfsc	status,2,c
  9466  001096  EF4F  F008         	goto	u2101
  9467  00109A  EF51  F008         	goto	u2100
  9468  00109E                     u2101:
  9469  00109E  EF87  F008         	goto	l2910
  9470  0010A2                     u2100:
  9471  0010A2  0E01               	movlw	1
  9472  0010A4  6E15               	movwf	___aldiv@counter^0,c
  9473  0010A6  EF5B  F008         	goto	l2896
  9474  0010AA                     l2894:
  9475  0010AA  90D8               	bcf	status,0,c
  9476  0010AC  3611               	rlcf	___aldiv@divisor^0,f,c
  9477  0010AE  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
  9478  0010B0  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
  9479  0010B2  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
  9480  0010B4  2A15               	incf	___aldiv@counter^0,f,c
  9481  0010B6                     l2896:
  9482  0010B6  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
  9483  0010B8  EF60  F008         	goto	u2111
  9484  0010BC  EF62  F008         	goto	u2110
  9485  0010C0                     u2111:
  9486  0010C0  EF55  F008         	goto	l2894
  9487  0010C4                     u2110:
  9488  0010C4                     l2898:
  9489  0010C4  90D8               	bcf	status,0,c
  9490  0010C6  3617               	rlcf	___aldiv@quotient^0,f,c
  9491  0010C8  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
  9492  0010CA  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
  9493  0010CC  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
  9494  0010CE  5011               	movf	___aldiv@divisor^0,w,c
  9495  0010D0  5C0D               	subwf	___aldiv@dividend^0,w,c
  9496  0010D2  5012               	movf	(___aldiv@divisor+1)^0,w,c
  9497  0010D4  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
  9498  0010D6  5013               	movf	(___aldiv@divisor+2)^0,w,c
  9499  0010D8  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
  9500  0010DA  5014               	movf	(___aldiv@divisor+3)^0,w,c
  9501  0010DC  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
  9502  0010DE  A0D8               	btfss	status,0,c
  9503  0010E0  EF74  F008         	goto	u2121
  9504  0010E4  EF76  F008         	goto	u2120
  9505  0010E8                     u2121:
  9506  0010E8  EF7F  F008         	goto	l2906
  9507  0010EC                     u2120:
  9508  0010EC  5011               	movf	___aldiv@divisor^0,w,c
  9509  0010EE  5E0D               	subwf	___aldiv@dividend^0,f,c
  9510  0010F0  5012               	movf	(___aldiv@divisor+1)^0,w,c
  9511  0010F2  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
  9512  0010F4  5013               	movf	(___aldiv@divisor+2)^0,w,c
  9513  0010F6  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
  9514  0010F8  5014               	movf	(___aldiv@divisor+3)^0,w,c
  9515  0010FA  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
  9516  0010FC  8017               	bsf	___aldiv@quotient^0,0,c
  9517  0010FE                     l2906:
  9518  0010FE  90D8               	bcf	status,0,c
  9519  001100  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
  9520  001102  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
  9521  001104  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
  9522  001106  3211               	rrcf	___aldiv@divisor^0,f,c
  9523  001108  2E15               	decfsz	___aldiv@counter^0,f,c
  9524  00110A  EF62  F008         	goto	l2898
  9525  00110E                     l2910:
  9526  00110E  5016               	movf	___aldiv@sign^0,w,c
  9527  001110  B4D8               	btfsc	status,2,c
  9528  001112  EF8D  F008         	goto	u2131
  9529  001116  EF8F  F008         	goto	u2130
  9530  00111A                     u2131:
  9531  00111A  EF97  F008         	goto	l2914
  9532  00111E                     u2130:
  9533  00111E  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
  9534  001120  1E19               	comf	(___aldiv@quotient+2)^0,f,c
  9535  001122  1E18               	comf	(___aldiv@quotient+1)^0,f,c
  9536  001124  6C17               	negf	___aldiv@quotient^0,c
  9537  001126  0E00               	movlw	0
  9538  001128  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
  9539  00112A  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
  9540  00112C  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
  9541  00112E                     l2914:
  9542  00112E  C017  F00D         	movff	___aldiv@quotient,?___aldiv
  9543  001132  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
  9544  001136  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
  9545  00113A  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
  9546  00113E  0012               	return		;funcret
  9547  001140                     __end_of___aldiv:
  9548                           	opt callstack 0
  9549                           
  9550 ;; *************** function _desbordamiento *****************
  9551 ;; Defined at:
  9552 ;;		line 90 in file "main.c"
  9553 ;; Parameters:    Size  Location     Type
  9554 ;;		None
  9555 ;; Auto vars:     Size  Location     Type
  9556 ;;		None
  9557 ;; Return value:  Size  Location     Type
  9558 ;;                  1    wreg      void 
  9559 ;; Registers used:
  9560 ;;		wreg, status,2, status,0
  9561 ;; Tracked objects:
  9562 ;;		On entry : 0/0
  9563 ;;		On exit  : 0/0
  9564 ;;		Unchanged: 0/0
  9565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9566 ;;      Params:         0       0       0       0       0       0       0       0       0
  9567 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9568 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9569 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9570 ;;Total ram usage:        0 bytes
  9571 ;; Hardware stack levels used:    1
  9572 ;; This function calls:
  9573 ;;		Nothing
  9574 ;; This function is called by:
  9575 ;;		Interrupt level 2
  9576 ;; This function uses a non-reentrant model
  9577 ;;
  9578                           
  9579                           	psect	intcode
  9580  000008                     __pintcode:
  9581                           	opt callstack 0
  9582  000008                     _desbordamiento:
  9583                           	opt callstack 19
  9584                           
  9585                           ;incstack = 0
  9586  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9587  00000A  ED7D  F00E         	call	int_func,f	;refresh shadow registers
  9588                           
  9589                           	psect	intcode_body
  9590  001CFA                     __pintcode_body:
  9591                           	opt callstack 19
  9592  001CFA                     int_func:
  9593                           	opt callstack 19
  9594  001CFA  0006               	pop		; remove dummy address from shadow register refresh
  9595  001CFC                     
  9596                           ;main.c: 92:     if (INTCONbits.TMR0IF) {
  9597  001CFC  A4F2               	btfss	242,2,c	;volatile
  9598  001CFE  EF83  F00E         	goto	i2u289_41
  9599  001D02  EF85  F00E         	goto	i2u289_40
  9600  001D06                     i2u289_41:
  9601  001D06  EFA1  F00E         	goto	i2l3680
  9602  001D0A                     i2u289_40:
  9603  001D0A                     
  9604                           ;main.c: 94:         if (esperandoDatos) {
  9605  001D0A  0100               	movlb	0	; () banked
  9606  001D0C  51F6               	movf	_esperandoDatos& (0+255),w,b
  9607  001D0E  B4D8               	btfsc	status,2,c
  9608  001D10  EF8C  F00E         	goto	i2u290_41
  9609  001D14  EF8E  F00E         	goto	i2u290_40
  9610  001D18                     i2u290_41:
  9611  001D18  EF9A  F00E         	goto	i2l3676
  9612  001D1C                     i2u290_40:
  9613  001D1C                     
  9614                           ; BSR set to: 0
  9615                           ;main.c: 96:             tiempoInactividadTrans++;
  9616  001D1C  2BF9               	incf	_tiempoInactividadTrans& (0+255),f,b
  9617  001D1E                     
  9618                           ; BSR set to: 0
  9619                           ;main.c: 98:             if (tiempoInactividadTrans == 2)
  9620  001D1E  0E02               	movlw	2
  9621  001D20  19F9               	xorwf	_tiempoInactividadTrans& (0+255),w,b
  9622  001D22  A4D8               	btfss	status,2,c
  9623  001D24  EF96  F00E         	goto	i2u291_41
  9624  001D28  EF98  F00E         	goto	i2u291_40
  9625  001D2C                     i2u291_41:
  9626  001D2C  EF9A  F00E         	goto	i2l3676
  9627  001D30                     i2u291_40:
  9628  001D30                     
  9629                           ; BSR set to: 0
  9630                           ;main.c: 99:                 esperaDatoConcluida = 1;
  9631  001D30  0E01               	movlw	1
  9632  001D32  6FF7               	movwf	_esperaDatoConcluida& (0+255),b
  9633  001D34                     i2l3676:
  9634                           
  9635                           ; BSR set to: 0
  9636                           ;main.c: 104:         INTCONbits.TMR0IF = 0;
  9637  001D34  94F2               	bcf	242,2,c	;volatile
  9638  001D36                     
  9639                           ; BSR set to: 0
  9640                           ;main.c: 105:         TMR0 = VALOR_TIMER0;
  9641  001D36  C0FA  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  9642  001D3A  C0FB  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  9643                           
  9644                           ;main.c: 106:         overflowTimer = 1;
  9645  001D3E  0E01               	movlw	1
  9646  001D40  6FF0               	movwf	_overflowTimer& (0+255),b
  9647  001D42                     i2l3680:
  9648                           
  9649                           ;main.c: 110:     if (PIR1bits.RCIF) {
  9650  001D42  AA9E               	btfss	158,5,c	;volatile
  9651  001D44  EFA6  F00E         	goto	i2u292_41
  9652  001D48  EFA8  F00E         	goto	i2u292_40
  9653  001D4C                     i2u292_41:
  9654  001D4C  EFAD  F00E         	goto	i2l197
  9655  001D50                     i2u292_40:
  9656  001D50                     
  9657                           ;main.c: 112:         byteUart = RCREG;
  9658  001D50  CFAE F0F8          	movff	4014,_byteUart	;volatile
  9659  001D54                     
  9660                           ;main.c: 113:         datoRecibido = 1;
  9661  001D54  0E01               	movlw	1
  9662  001D56  0100               	movlb	0	; () banked
  9663  001D58  6FF1               	movwf	_datoRecibido& (0+255),b
  9664  001D5A                     i2l197:
  9665  001D5A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9666  001D5C  0011               	retfie		f
  9667  001D5E                     __end_of_desbordamiento:
  9668                           	opt callstack 0
  9669                           
  9670                           	psect	rparam
  9671  0000                     
  9672                           	psect	temp
  9673  00005F                     btemp:
  9674                           	opt callstack 0
  9675  00005F                     	ds	1
  9676  0000                     int$flags	set	btemp
  9677  0000                     wtemp8	set	btemp+1
  9678  0000                     ttemp5	set	btemp+1
  9679  0000                     ttemp6	set	btemp+4
  9680  0000                     ttemp7	set	btemp+8
  9681                           tosu	equ	0xFFF
  9682                           tosh	equ	0xFFE
  9683                           tosl	equ	0xFFD
  9684                           stkptr	equ	0xFFC
  9685                           pclatu	equ	0xFFB
  9686                           pclath	equ	0xFFA
  9687                           pcl	equ	0xFF9
  9688                           tblptru	equ	0xFF8
  9689                           tblptrh	equ	0xFF7
  9690                           tblptrl	equ	0xFF6
  9691                           tablat	equ	0xFF5
  9692                           prodh	equ	0xFF4
  9693                           prodl	equ	0xFF3
  9694                           indf0	equ	0xFEF
  9695                           postinc0	equ	0xFEE
  9696                           postdec0	equ	0xFED
  9697                           preinc0	equ	0xFEC
  9698                           plusw0	equ	0xFEB
  9699                           fsr0h	equ	0xFEA
  9700                           fsr0l	equ	0xFE9
  9701                           wreg	equ	0xFE8
  9702                           indf1	equ	0xFE7
  9703                           postinc1	equ	0xFE6
  9704                           postdec1	equ	0xFE5
  9705                           preinc1	equ	0xFE4
  9706                           plusw1	equ	0xFE3
  9707                           fsr1h	equ	0xFE2
  9708                           fsr1l	equ	0xFE1
  9709                           bsr	equ	0xFE0
  9710                           indf2	equ	0xFDF
  9711                           postinc2	equ	0xFDE
  9712                           postdec2	equ	0xFDD
  9713                           preinc2	equ	0xFDC
  9714                           plusw2	equ	0xFDB
  9715                           fsr2h	equ	0xFDA
  9716                           fsr2l	equ	0xFD9
  9717                           status	equ	0xFD8


Data Sizes:
    Strings     1027
    Constant    0
    Data        4
    BSS         144
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    130     158
    BANK1           256      0     120
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_34(CODE[29]), STR_33(CODE[32]), STR_32(CODE[45]), STR_31(CODE[45]), 
		 -> STR_30(CODE[29]), STR_29(CODE[32]), STR_26(CODE[16]), STR_14(CODE[51]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), lecturaWifi@buffer(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), lecturaWifi@buffer(BANK0[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1479_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), lecturaWifi@buffer(BANK0[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), lecturaWifi@buffer(BANK0[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_34(CODE[29]), STR_33(CODE[32]), STR_32(CODE[45]), STR_31(CODE[45]), 
		 -> STR_30(CODE[29]), STR_29(CODE[32]), STR_26(CODE[16]), STR_14(CODE[51]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 51
		 -> STR_34(CODE[29]), STR_33(CODE[32]), STR_32(CODE[45]), STR_31(CODE[45]), 
		 -> STR_30(CODE[29]), STR_29(CODE[32]), STR_26(CODE[16]), STR_14(CODE[51]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    dameTemperaturaHumedad@Temperatura	PTR unsigned char  size(2) Largest target is 1
		 -> mostrarDatosSensoresWIFI@temperatura(BANK0[1]), mostrarDatosSensores@temperatura(BANK0[1]), estaSeco@temperatura(COMRAM[1]), 

    dameTemperaturaHumedad@Humedad	PTR unsigned char  size(2) Largest target is 1
		 -> mostrarDatosSensoresWIFI@humedad(BANK0[1]), mostrarDatosSensores@humedad(BANK0[1]), NULL(NULL[0]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 72
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), STR_28(CODE[21]), STR_27(CODE[25]), 
		 -> dameDatosSistema@buffer(BANK0[50]), STR_25(CODE[50]), STR_24(CODE[42]), STR_23(CODE[3]), 
		 -> STR_22(CODE[14]), STR_21(CODE[34]), STR_20(CODE[32]), STR_19(CODE[49]), 
		 -> STR_18(CODE[37]), STR_17(CODE[27]), STR_16(CODE[37]), STR_15(CODE[32]), 
		 -> lecturaWifi@buffer(BANK0[50]), STR_13(CODE[38]), STR_12(CODE[37]), STR_11(CODE[72]), 
		 -> STR_10(CODE[51]), STR_9(CODE[23]), STR_8(CODE[26]), STR_7(CODE[55]), 
		 -> STR_6(CODE[51]), STR_5(CODE[25]), STR_4(CODE[37]), STR_3(CODE[31]), 
		 -> STR_2(CODE[43]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_sistemaPrincipal
    _sistemaRegado->_lecturaWifi
    _encenderBombas->_estaSeco
    _estaSeco->_dameTemperaturaHumedad
    _dameHoraActual->_leer_rtc
    _leer_rtc->_i2c_envia_dato
    _leer_rtc->_i2c_recibe_dato
    _sistemaPrincipal->_dameDatosSistema
    _sistemaPrincipal->_mostrarDatosSensoresWIFI
    _setTiempoRegar->_escribeHorariosMemoria
    _mostrarMenu->_UART_printf
    _mostrarDatosSensoresWIFI->_lecturaWifi
    _restablecerDatosSensor->_constructorSensor
    _lecturaAnalogaSensores->_map
    _map->___aldiv
    _dameTemperaturaHumedad->_UART_printf
    _fijaHoraRtc->_setRtc
    _setRtc->_escribe_rtc
    _escribe_rtc->_i2c_envia_dato
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _asignarHorarios->_escribeHorariosMemoria
    _escribeHorariosMemoria->_escribe_eeprom
    _escribe_eeprom->___wmul
    _UART_printf->_UART_write
    _leeHorariosMemoria->___wmul
    _leeHorariosMemoria->_leer_eeprom
    _leer_eeprom->_i2c_envia_dato
    _leer_eeprom->_i2c_recibe_dato
    _i2c_reinicia_com->_i2c_espera
    _i2c_recibe_dato->_i2c_espera
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera
    _inicializarObjetos->___wmul
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _desbordamiento in COMRAM

    None.

Critical Paths under _main in BANK0

    _sistemaRegado->_lecturaWifi
    _sistemaPrincipal->_mostrarDatosSensoresWIFI
    _mostrarDatosSensoresWIFI->_lecturaWifi
    _lecturaWifi->_sprintf
    _mostrarDatosSensores->_sprintf
    _dameDatosSistema->_sprintf

Critical Paths under _desbordamiento in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _desbordamiento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _desbordamiento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _desbordamiento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _desbordamiento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _desbordamiento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _desbordamiento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _desbordamiento in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  120362
                          _UART_init
                      _configurarAdc
                        _i2c_iniciar
                 _inicializarObjetos
                 _leeHorariosMemoria
                        _mostrarMenu
             _restablecerDatosSensor
                   _sistemaPrincipal
                      _sistemaRegado
 ---------------------------------------------------------------------------------
 (1) _sistemaRegado                                        0     0      0   23502
                     _dameHoraActual
                     _encenderBombas
                          _horaRegar
             _lecturaAnalogaSensores
                        _lecturaWifi
                        _mostrarMenu
 ---------------------------------------------------------------------------------
 (2) _horaRegar                                            3     1      2       0
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _encenderBombas                                       5     5      0    4425
                                             19 COMRAM     5     5      0
                           _estaSeco
 ---------------------------------------------------------------------------------
 (3) _estaSeco                                             4     2      2    4150
                                             15 COMRAM     4     2      2
             _dameTemperaturaHumedad
 ---------------------------------------------------------------------------------
 (2) _dameHoraActual                                       0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (3) _leer_rtc                                             2     2      0      90
                                              2 COMRAM     2     2      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (3) _convertirDato                                        3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _sistemaPrincipal                                     3     3      0   88024
                                             91 COMRAM     3     3      0
                        _UART_printf
                    _asignarHorarios
                   _dameDatosSistema
                        _fijaHoraRtc
               _mostrarDatosSensores
           _mostrarDatosSensoresWIFI
                        _mostrarMenu
                     _setTiempoRegar
 ---------------------------------------------------------------------------------
 (2) _setTiempoRegar                                       8     8      0    5959
                                             14 COMRAM     8     8      0
                        _UART_printf
                          _UART_read
                         _UART_write
             _escribeHorariosMemoria
 ---------------------------------------------------------------------------------
 (2) _mostrarMenu                                          0     0      0    2651
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensoresWIFI                            55    55      0   31937
                                             90 COMRAM     1     1      0
                                             76 BANK0     54    54      0
                        _UART_printf
                         _UART_write
             _dameTemperaturaHumedad
                        _lecturaWifi
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaWifi                                         58    58      0   14473
                                             88 COMRAM     2     2      0
                                             20 BANK0     56    56      0
                        _UART_printf
                          _UART_read
                         _UART_write
             _restablecerDatosSensor
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _restablecerDatosSensor                               2     2      0     387
                                              4 COMRAM     2     2      0
                  _constructorSensor
 ---------------------------------------------------------------------------------
 (4) _constructorSensor                                    4     0      4     297
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensores                                55    55      0   19236
                                             88 COMRAM     1     1      0
                                             20 BANK0     54    54      0
                        _UART_printf
                         _UART_write
             _dameTemperaturaHumedad
             _lecturaAnalogaSensores
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaAnalogaSensores                               3     3      0    1772
                                             46 COMRAM     3     3      0
                   _dameHumedadSuelo
                                _map
 ---------------------------------------------------------------------------------
 (3) _map                                                 20     0     20    1660
                                             26 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
                   _dameHumedadSuelo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _dameHumedadSuelo                                     5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _dameTemperaturaHumedad                              12     8      4    3450
                                              3 COMRAM    12     8      4
                     _DHT11_ReadData
                        _DHT11_Start
                        _UART_printf
                     _check_response
 ---------------------------------------------------------------------------------
 (5) _check_response                                       1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fijaHoraRtc                                          0     0      0    3793
                        _UART_printf
                        _escribe_rtc
                             _setRtc
 ---------------------------------------------------------------------------------
 (3) _setRtc                                               7     7      0     696
                                              4 COMRAM     7     7      0
                          _UART_read
                         _UART_write
                        _escribe_rtc
 ---------------------------------------------------------------------------------
 (4) _escribe_rtc                                          2     1      1     446
                                              2 COMRAM     2     1      1
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (2) _dameDatosSistema                                    55    55      0   15977
                                             88 COMRAM     3     3      0
                                             20 BANK0     52    52      0
                        _UART_printf
                         _UART_write
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             20    10     10   11021
                                              0 BANK0     20    10     10
                             ___wmul (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    9604
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    9247
                                             63 COMRAM    17    11      6
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4586
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 7     4      3    3157
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2937
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _asignarHorarios                                      5     5      0    5798
                                             14 COMRAM     5     5      0
                        _UART_printf
                          _UART_read
                         _UART_write
             _escribeHorariosMemoria
 ---------------------------------------------------------------------------------
 (3) _escribeHorariosMemoria                               4     4      0    2847
                                             10 COMRAM     4     4      0
                             ___wmul
                     _escribe_eeprom
 ---------------------------------------------------------------------------------
 (4) _escribe_eeprom                                       4     1      3     544
                                              6 COMRAM     4     1      3
                             ___wmul (ARG)
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (3) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2    2651
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _leeHorariosMemoria                                   4     4      0    2643
                                              6 COMRAM     4     4      0
                             ___wmul
                        _leer_eeprom
 ---------------------------------------------------------------------------------
 (2) _leer_eeprom                                          4     2      2     340
                                              2 COMRAM     4     2      2
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_recibe_dato                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializarObjetos                                   2     2      0    2255
                                              6 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2121
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     900
                                             26 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     756
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _desbordamiento                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _configurarAdc
   _i2c_iniciar
   _inicializarObjetos
     ___wmul
   _leeHorariosMemoria
     ___wmul
     _leer_eeprom
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
       _i2c_recibe_dato
         _i2c_espera
       _i2c_reinicia_com
         _i2c_espera
   _mostrarMenu
     _UART_printf
       _UART_write
   _restablecerDatosSensor
     _constructorSensor
   _sistemaPrincipal
     _UART_printf
       _UART_write
     _asignarHorarios
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
     _dameDatosSistema
       _UART_printf
         _UART_write
       _UART_write
       ___wmul
       _sprintf
         ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _fijaHoraRtc
       _UART_printf
         _UART_write
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
       _setRtc
         _UART_read
         _UART_write
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
     _mostrarDatosSensores
       _UART_printf
         _UART_write
       _UART_write
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaAnalogaSensores
         _dameHumedadSuelo
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
           _dameHumedadSuelo (ARG)
       _sprintf
         ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _mostrarDatosSensoresWIFI
       _UART_printf
         _UART_write
       _UART_write
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaWifi
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
         _restablecerDatosSensor
           _constructorSensor
         _sprintf
           ___wmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
       _sprintf
         ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _mostrarMenu
       _UART_printf
         _UART_write
     _setTiempoRegar
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
   _sistemaRegado
     _dameHoraActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _encenderBombas
       _estaSeco
         _dameTemperaturaHumedad
           _DHT11_ReadData
           _DHT11_Start
           _UART_printf
             _UART_write
           _check_response
     _horaRegar
     _lecturaAnalogaSensores
       _dameHumedadSuelo
       _map
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _dameHumedadSuelo (ARG)
     _lecturaWifi
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       _restablecerDatosSensor
         _constructorSensor
       _sprintf
         ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _mostrarMenu
       _UART_printf
         _UART_write

 _desbordamiento (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      78       7       46.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     82      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     174      20        0.0%
DATA                 0      0     174       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun May 03 16:24:31 2020

                 __size_of_escribe_eeprom 0030                                        l81 230A  
                                      l90 240C                                        l75 23D4  
                                      l84 2404                                        l93 23E0  
                                      l87 23FC                                        l96 23A8  
                                      l99 238E                            ?_configurarAdc 0001  
                     ___wmul@multiplicand 0003                               __CFG_BORV$3 000000  
          __end_of_dameTemperaturaHumedad 18B8                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                                       l102 22E4  
                                     l200 1BB2                                       l121 1F52  
                                     l105 2350                                       l130 23B0  
                                     l203 23EA                                       l211 20FC  
                                     l133 23BE                                       l118 1C22  
                                     l206 23F4                                       l126 1F88  
                                     l310 093E                                       l222 22BA  
                                     l214 228E                                       l127 1F8A  
                                     l232 1674                                       l152 1EDA  
                                     l144 1E88                                       l160 2180  
                                     l313 2096                                       l321 202C  
                                     l219 1B38                                       l139 1E7E  
                                     l235 2262                                       l243 14E2  
                                     l155 2370                                       l315 20A4  
                                     l331 09E0                                       l316 20B8  
                                     l149 1EB8                                       l238 21FC  
                                     l503 1CE8                                       l343 1962  
                                     l248 173C                                       l280 1C8E  
                                     l504 1CF8                                       l441 1802  
                                     l290 0EBE                                       l338 0AC6  
                                     l346 1DBE                                       l275 054C  
                                     l436 1784                                       l293 0EFE  
                                     l381 1414                                       l606 0C4E  
                                     l454 00B2                                       l439 17C6  
                                     l359 1A06                                       l448 1F36  
                                     l456 00BA                                       l376 1032  
                                     l393 132A                                       l474 02F4  
                                     l571 113E                                       l619 0DB2  
                                     l492 2330                                       l388 18B6  
                                     l479 0772                                       l399 123C  
                                     l488 1E18                                       l489 1E20  
                            __CFG_CPB$OFF 000000                              __CFG_CPD$OFF 000000  
                            __CFG_BOR$OFF 000000                                       _abs 2182  
                                     _pad 173E                                       _map 1B3A  
                                     prod 000FF3                                       wreg 000FE8  
                __end_of_dameDatosSistema 1416                              __CFG_LVP$OFF 000000  
                       ?_i2c_reinicia_com 0001                              ?_escribe_rtc 0003  
                            __CFG_WDT$OFF 000000                                      l1200 2412  
                                    ?_abs 0013                                      l1206 2232  
                                    l3000 1FE6                                      l1170 21C0  
                                    l3010 1FA6                                      l3002 200C  
                                    l3020 2328                                      l3100 148E  
                                    l3012 1FAE                                      l3004 2010  
                                    l3102 14BE                                      l1182 15AC  
                                    l1190 2140                                      l3014 1FCA  
                                    l3006 1F8C                                      l3110 0942  
                                    l3030 2334                                      l1167 21B8  
                                    l3104 14C2                                      l3008 1F9E  
                                    l3120 0960                                      l3112 0942  
                                    l3032 2334                                      l3024 22BE  
                                    l3200 2290                                      l3040 20BA  
                                    l3018 230C                                      l3202 21C2  
                                    l3106 14C6                                      l3130 099A  
                                    l3122 0972                                      l3114 0946  
                                    l3034 233C                                      l3026 22E2  
                                    l3050 20F6                                      l3042 20CE  
                                    l3210 02F6                                      l3204 21EC  
                                    l3300 0DC4                                      l3060 15BC  
                                    l3140 09B8                                      l3132 09A6  
                                    l3116 094C                                      l3108 0940  
                                    l3036 234E                                      l3044 20D2  
                                    l3220 0338                                      l1197 1FDC  
                                    l3206 21FA                                      l3310 0DEE  
                                    l2510 14E4                                      l3070 160A  
                                    l3062 15C2                                      l3054 15B0  
                                    l3150 09FC                                      l3142 09C8  
                                    l3118 0958                                      l3046 20E2  
                                    l3230 03A6                                      l3222 0340  
                                    l3320 0E24                                      l3312 0DFE  
                                    l2520 1566                                      l2512 14F6  
                                    l2600 0BE6                                      l3080 162C  
                                    l3072 1612                                      l3064 15D2  
                                    l3160 0A64                                      l3152 0A00  
                                    l3144 09D8                                      l3128 097E  
                                    l3400 0844                                      l3048 20F2  
                                    l3240 03E2                                      l3224 0370  
                                    l3216 0306                                      l3322 0E28  
                                    l3330 0E42                                      l3314 0E10  
                                    l3306 0DD8                                      l2514 1508  
                                    l2530 2120                                      l2602 0BF8  
                                    l3082 1648                                      l3066 15E2  
                                    l3074 161A                                      l3170 0AB0  
                                    l3162 0A6E                                      l3146 09E4  
                                    l3138 09B0                                      l3410 085E  
                                    l3402 0850                                      l3242 0412  
                                    l3234 03AC                                      l3218 0336  
                                    l3340 0E90                                      l3332 0E46  
                                    l3324 0E2C                                      l3316 0E14  
                                    l3308 0DDE                                      l2516 1512  
                                    l2524 20FE                                      l2532 21FE  
                                    l2604 0BFE                                      l2620 0C86  
                                    l2612 0C50                                      l2700 022A  
                                    l3084 1658                                      l3076 161E  
                                    l3068 15F4                                      l3500 1252  
                                    l3164 0A72                                      l3148 09F0  
                                    l3156 0A1A                                      l3172 0AC0  
                                    l3420 0898                                      l3412 086E  
                                    l3260 04B4                                      l3252 044E  
                                    l3236 03DC                                      l3228 0376  
                                    l3094 1426                                      l3350 0ED0  
                                    l3342 0E96                                      l3334 0E62  
                                    l3318 0E18                                      l3326 0E34  
                                    l2518 1530                                      l2526 210A  
                                    l2534 220A                                      l2550 177C  
                                    l2542 173E                                      l2606 0C0E  
                                    l2630 0CEE                                      l2622 0C94  
                                    l2614 0C54                                      l2710 0290  
                                    l2702 0244                                      l3086 166A  
                                    l3078 1628                                      l3190 1932  
                                    l3182 18B8                                      l3510 12A8  
                                    l3502 1258                                      l3174 0AC4  
                                    l3166 0A8E                                      l3158 0A4E  
                                    l3430 08B8                                      l3422 08A4  
                                    l3414 087E                                      l3270 051A  
                                    l3254 047E                                      l3246 0418  
                                    l2800 1E26                                      l3096 1456  
                                    l3088 1416                                      l3352 0EDC  
                                    l3344 0E9A                                      l3336 0E72  
                                    l3328 0E38                                      l2528 211C  
                                    l2536 220E                                      l2560 17EA  
                                    l2552 1790                                      l2544 174E  
                                    l2608 0C2E                                      l2632 0CFC  
                                    l2640 0D62                                      l2624 0CB4  
                                    l2616 0C62                                      l2712 0296  
                                    l2720 02CC                                      l2704 025E  
                                    l3280 1C24                                      l3192 1942  
                                    l3520 12F6                                      l3512 12AC  
                                    l3504 1274                                      l3168 0A94  
                                    l3440 0904                                      l3424 08A8  
                                    l3432 08C2                                      l3416 0890  
                                    l3408 0858                                      l3360 0778  
                                    l3600 198C                                      l3272 0536  
                                    l3248 0448                                      l3530 23C4  
                                    l2730 23AC                                      l2802 1E4A  
                                    l3098 145A                                      l3354 0EF0  
                                    l3346 0EAA                                      l3338 0E84  
                                    l2538 2226                                      l2554 17A4  
                                    l2546 1762                                      l2650 1EF0  
                                    l2570 0ACC                                      l2642 0D72  
                                    l2634 0D2A                                      l2626 0CD2  
                                    l2618 0C82                                      l2714 02A8  
                                    l2706 026E                                      l3450 132C  
                                    l3290 1C66                                      l3282 1C3C  
                                    l3194 1946                                      l3522 1302  
                                    l3506 1280                                      l3442 0910  
                                    l3434 08C6                                      l3426 08AC  
                                    l3418 0894                                      l3370 079E  
                                    l3362 0784                                      l3602 199E  
                                    l3610 19BE                                      l3274 0546  
                                    l3258 0484                                      l3266 04BA  
                                    l2900 10CE                                      l3540 1BEC  
                                    l3532 1BB4                                      l2724 22E6  
                                    l2804 1E4E                                      l3356 0EF8  
                                    l3348 0EBA                                      l2556 17A8  
                                    l2548 1770                                      l2652 1EFC  
                                    l2580 0B2C                                      l2572 0ADA  
                                    l2644 0D92                                      l2636 0D4A  
                                    l2628 0CDA                                      l2564 2182  
                                    l2716 02B4                                      l2708 0280  
                                    l2740 0596                                      l2732 054E  
                                    l3460 1348                                      l3452 1332  
                                    l3292 1C78                                      l3284 1C42  
                                    l2820 1EC6                                      l2812 1E96  
                                    l3188 18C0                                      l3524 1308  
                                    l3508 129C                                      l3444 0924  
                                    l3436 08E2                                      l3428 08B4  
                                    l3380 07D8                                      l3372 07AE  
                                    l3604 19A6                                      l3612 1A00  
                                    l3268 0516                                      l3196 2264  
                                    l3620 0F00                                      l3700 1A16  
                                    l2902 10EC                                      l2910 110E  
                                    l3550 1C1C                                      l3542 1C14  
                                    l3534 1BB4                                      l2726 22E6  
                                    l2558 17D6                                      l2654 1F08  
                                    l2590 0B76                                      l2582 0B30  
                                    l2574 0AFA                                      l2638 0D5C  
                                    l2566 219C                                      l2718 02BC  
                                    l2670 008A                                      l2662 0012  
                                    l2750 062C                                      l2742 05BA  
                                    l2734 0572                                      l3462 13E0  
                                    l3454 133E                                      l3294 1C84  
                                    l3286 1C54                                      l2822 1EC8  
                                    l2814 1E9C                                      l2806 1E80  
                                    l2830 2356                                      l3526 1324  
                                    l3518 12B6                                      l3470 1140  
                                    l3446 093A                                      l3438 08F2  
                                    l3390 07F8                                      l3382 07E4  
                                    l3374 07BE                                      l3358 0774  
                                    l3614 1A04                                      l3606 19AE  
                                    l3630 0F34                                      l3622 0F12  
                                    l3710 1A38                                      l3702 1A18  
                                    l2912 111E                                      l2904 10FC  
                                    l3552 1C1E                                      l3544 1C16  
                                    l3536 1BB6                                      l3528 23C0  
                                    l2728 22FC                                      l2920 23FA  
                                    l3296 0DB4                                      l2656 1F0C  
                                    l2648 1EDC                                      l2592 0B84  
                                    l2584 0B3C                                      l2576 0AFE  
                                    l2568 0AC8                                      l2680 00E2  
                                    l2672 008C                                      l2664 0032  
                                    l2760 06F4                                      l2752 0650  
                                    l2744 05EC                                      l2736 0580  
                                    l3464 13EC                                      l3288 1C60  
                                    l2824 1ED8                                      l2816 1EAA  
                                    l2832 2366                                      l2840 214E  
                                    l3472 1144                                      l3448 1D5E  
                                    l3384 07E8                                      l3392 0802  
                                    l3376 07D0                                      l3368 0798  
                                    l3640 0F82                                      l3632 0F46  
                                    l3624 0F16                                      l3720 1A50  
                                    l3712 1A3C                                      l3704 1A1C  
                                    l2914 112E                                      l2906 10FE  
                                    l3554 1C20                                      l3546 1C18  
                                    l3538 1BB8                                      l2930 23A4  
                                    l2922 2390                                      l3570 1676  
                                    l3298 0DB8                                      l2658 1F12  
                                    l2594 0B96                                      l2586 0B5A  
                                    l2578 0B0C                                      l2690 0182  
                                    l2682 00E8                                      l2674 00A6  
                                    l2666 005A                                      l2770 0730  
                                    l2762 0702                                      l2754 0698  
                                    l2738 0592                                      l3466 13F2  
                                    l2818 1EB2                                      l2834 236E  
                                    l2842 215C                                      l2850 217E  
                                    l3482 1164                                      l3490 11D2  
                                    l3474 114A                                      l3394 0806  
                                    l3386 07EC                                      l3378 07D4  
                                    l3650 0FDE                                      l3642 0F94  
                                    l3626 0F2A                                      l3634 0F56  
                                    l3730 1A70                                      l3722 1A52  
                                    l3714 1A40                                      l3706 1A30  
                                    l2908 1108                                      l3548 1C1A  
                                    l3556 23EC                                      l3564 1AAC  
                                    l2932 23A6                                      l2924 2394  
                                    l3580 16B8                                      l2940 1F60  
                                    l2596 0BC4                                      l2588 0B62  
                                    l2692 0188                                      l2684 00F0  
                                    l2676 00C2                                      l2668 007A  
                                    l2764 0716                                      l2748 0608  
                                    l2860 1DD6                                      l3468 140E  
                                    l2828 2352                                      l2844 2164  
                                    l2836 2142                                      l3492 1202  
                                    l3484 11A4                                      l3476 115C  
                                    l3396 0822                                      l3388 07F4  
                                    l3812 04D0                                      l3652 0FE2  
                                    l3660 1014                                      l3644 0FA6  
                                    l3636 0F5A                                      l3628 0F32  
                                    l3740 1A98                                      l3732 1A74  
                                    l3724 1A54                                      l3716 1A44  
                                    l3708 1A34                                      l3566 1B18  
                                    l3558 1AA4                                      l2790 23D8  
                                    l2782 23FE                                      l2926 239A  
                                    l2918 23F6                                      l3582 16EA  
                                    l2942 1F70                                      l2598 0BE4  
                                    l2694 018E                                      l2686 00FA  
                                    l2678 00D4                                      l2758 06D0  
                                    l2774 073C                                      l2862 1DFC  
                                    l2846 2172                                      l2838 2146  
                                    l2870 1CBE                                      l2950 1B3A  
                                    l2854 23E2                                      l3494 120E  
                                    l3486 11B0                                      l3398 0832  
                                    l3814 19D2                                      l3590 1966  
                                    l3662 1018                                      l3654 0FF4  
                                    l3646 0FBC                                      l3638 0F6C  
                                    l3734 1A78                                      l3726 1A58  
                                    l3718 1A48                                      ?_map 001B  
                                    ?_pad 0011                                      l2880 1056  
                                    l3568 1B1C                                      l2792 23DC  
                                    l2784 2402                                      l2928 23A2  
                                    l3584 1718                                      l3576 1686  
                                    l2944 1F80                                      l2688 0100  
                                    l2696 01F2                                      l2776 0760  
                                    l2768 0722                                      l2856 1DC0  
                                    l2936 2374                                      l2848 217A  
                                    l2960 180C                                      l2872 1CC8  
                                    l2864 1C90                                      l3816 0A30  
                                    l3496 1236                                      l3488 11B6  
                                    l3592 196C                                      l3664 102E  
                                    l3656 1008                                      l3648 0FCE  
                                    l3736 1A7E                                      l3728 1A5E  
                                    l2890 108C                                      l2882 105A  
                                    l2874 1034                                      l2786 2406  
                                    l2794 23E0                                      l3586 171C  
                                    l3578 16B4                                      l2946 1F84  
                                    l2938 1F38                                      l2698 020C  
                                    l2858 1DC8                                      l2962 1820  
                                    l2970 18A6                                      l2954 1804  
                                    l2866 1CA0                                      l3498 123E  
                                    l3594 1974                                      l3658 100C  
                                    l3738 1A90                                      l2892 10A2  
                                    l2884 1068                                      l2876 1038  
                                    l2788 240A                                      l3588 1720  
                                    l2972 18B2                                      l2964 1844  
                                    l2956 1808                                      l2980 2076  
                                    l2868 1CAE                                      l3596 197C  
                                    l2894 10AA                                      l2886 1078  
                                    l2878 1046                                      l2798 1E22  
                                    l2974 18B4                                      l2966 187A  
                                    l2958 1808                                      l2990 20A6  
                                    l2982 207E                                      l3598 1984  
                                    l2896 10B6                                      l2888 107C  
                                    l2976 2234                                      l2968 188A  
                                    l2984 2080                                      l3696 1A08  
                                    l2898 10C4                                      l2978 2254  
                                    l2986 2092                                      l2994 1FDE  
                                    l3698 1A12                                      l2988 2094  
                            ?_leer_eeprom 0003                                      STR_1 7FD0  
                                    STR_2 7D70                                      STR_3 7F01  
                                    STR_4 7E35                                      STR_5 7F72  
                                    STR_6 7C7A                                      STR_7 7C43  
                                    STR_8 7F58                                      STR_9 7FA4  
                                    u2000 1EAA                                      u2001 1EA6  
                                    u2010 1EC6                                      u2011 1EC2  
                                    u2100 10A2                                      u2020 1ED8  
                                    u2101 109E                                      u2021 1ED4  
                                    u2110 10C4                                      u2030 215C  
                                    u2111 10C0                                      u2031 2158  
                                    u2120 10EC                                      u2040 2172  
                                    u2200 202C                                      u2121 10E8  
                                    u2041 216E                                      u2201 2028  
                                    u2130 111E                                      u2050 1E18  
                                    u2210 20E2                                      u2131 111A  
                                    u2051 1E14                                      u2211 20DE  
                                    u2140 1F60                                      u1500 1530  
                                    u2060 1CAE                                      u2300 0972  
                                    u2220 20F2                                      u2141 1F5C  
                                    u1501 152C                                      u2061 1CAA  
                                    u2301 096E                                      u2221 20EE  
                                    u2150 1F70                                      u1510 1566  
                                    u2230 15D2                                      u2070 1CE8  
                                    u2310 09C8                                      u2151 1F6C  
                                    u1511 1562                                      u2231 15CE  
                                    u3007 235C                                      u2071 1CE4  
                                    u2311 09C4                                      u2080 1046  
                                    u2160 1F80                                      u1520 2140  
                                    u1600 0B0C                                      u2240 15E2  
                                    u2320 09D8                                      u2400 03A6  
                                    _LATD 000F8C                                      u2081 1042  
                                    u2161 1F7C                                      u1521 213C  
                                    u1601 0B08                                      u2241 15DE  
                                    u3017 236A                                      u2321 09D4  
                                    u2401 03A2                                      u2090 1068  
                                    u1530 2226                                      u2250 15F4  
                                    u2170 1820                                      u2330 0A8E  
                                    u2410 03DC                                      u2091 1064  
                                    u1531 2222                                      u1611 0B36  
                                    u2251 15F0                                      u3027 1E98  
                                    u2171 181C                                      u2331 0A8A  
                                    u2411 03D8                                      u2500 0DEE  
                                    u1540 174E                                      u1620 0B5A  
                                    u1700 0D2A                                      u2260 1648  
                                    u2180 187A                                      u2340 0AB0  
                                    u2420 0412                                      u3037 225A  
                                    u2501 0DEA                                      u1541 174A  
                                    u1621 0B56                                      u1701 0D26  
                                    u2261 1644                                      u2181 1876  
                                    u2341 0AAC                                      u2421 040E  
                                    u2510 0DFE                                      u1550 1770  
                                    u1630 0B84                                      u1710 0D72  
                                    u2270 1658                                      u2190 20A4  
                                    u2350 1962                                      u2430 0448  
                                    u3047 21F2                                      u2511 0DFA  
                                    u1551 176C                                      u1631 0B80  
                                    u1711 0D6E                                      u2271 1654  
                                    u2191 20A0                                      u2351 195E  
                                    u2431 0444                                      u2520 0E10  
                                    u1480 14F6                                      u1560 17C6  
                                    u1720 1EF0                                      u1640 0BC4  
                                    u1800 020C                                      u2280 166A  
                                    u2600 07BE                                      u2440 047E  
                                    u2360 2288                                      u2521 0E0C  
                                    u1481 14F2                                      u1561 17C2  
                                    u1721 1EEC                                      u1641 0BC0  
                                    u1801 0208                                      u2281 1666  
                                    u2601 07BA                                      u2441 047A  
                                    u2361 2282                                      u2290 14E2  
                                    u2530 0E62                                      u1490 1508  
                                    u1570 17D6                                      u1650 0C0E  
                                    u1810 022A                                      u1730 0042  
                                    u2610 07D0                                      u2450 04B4  
                                    u2370 228A                                      u2291 14DE  
                                    u2531 0E5E                                      u1491 1504  
                                    u1571 17D2                                      u1651 0C0A  
                                    u1811 0226                                      u1731 003C  
                                    u2611 07CC                                      u2451 04B0  
                                    u1900 23BE                                      u2540 0E72  
                                    u1660 0C62                                      u1580 219C  
                                    u1820 0244                                      u1740 0044  
                                    u2700 0904                                      u2620 0822  
                                    u2460 0536                                      u2380 0336  
                                    u1901 23BA                                      u2541 0E6E  
                                    u1661 0C5E                                      u1581 2198  
                                    u1821 0240                                      u2701 0900  
                                    u2621 081E                                      u2461 0532  
                                    u2381 0332                                      u2550 0E84  
                                    u1590 0ADA                                      u1670 0C94  
                                    u1830 025E                                      u1750 005A  
                                    u1910 0572                                      u2710 140E  
                                    u2630 0832                                      u2470 0546  
                                    u2390 0370                                      u2551 0E80  
                                    u1591 0AD6                                      u1671 0C90  
                                    u1831 025A                                      u1751 0056  
                                    u1911 056E                                      u2711 140A  
                                    u2631 082E                                      u2471 0542  
                                    u2391 036C                                      u2560 0EAA  
                                    u1680 0CD2                                      u1840 026E  
                                    u1760 008A                                      u1920 05BA  
                                    u2480 1C54                                      u2720 115C  
                                    u2640 0844                                      u2800 0F46  
                                    u2561 0EA6                                      u1681 0CCE  
                                    u1841 026A                                      u1761 0086  
                                    u1921 05B6                                      u2481 1C50  
                                    u2721 1158                                      u2641 0840  
                                    u2801 0F42                                      u2570 0EBA  
                                    u1690 0CFC                                      u1850 0280  
                                    u1770 00A6                                      u1930 062C  
                                    u2490 1C78                                      u2730 11D2  
                                    u2650 086E                                      u2810 0F6C  
                                    u2571 0EB6                                      u1691 0CF8  
                                    u1851 027C                                      u1771 00A2  
                                    u1931 0628                                      u2491 1C74  
                                    u2731 11CE                                      u2651 086A  
                                    u2811 0F68                                      u2580 0ED0  
                                    u1860 0290                                      u1780 00D4  
                                    u1940 0650                                      u2740 1324  
                                    u2660 087E                                      u2820 0F82  
                                    u2581 0ECC                                      u1861 028C  
                                    u1781 00D0                                      u1941 064C  
                                    u2741 1320                                      u2661 087A  
                                    u2821 0F7E                                      u2750 1B38  
                                    u1870 02A8                                      u1790 00E2  
                                    u1950 06F4                                      u2670 0890  
                                    u2590 07AE                                      u2830 0F94  
                                    u2751 1B34                                      u1871 02A4  
                                    u1791 00DE                                      u1951 06F0  
                                    u2671 088C                                      u2591 07AA  
                                    u2831 0F90                                      u1880 22FC  
                                    u2760 173C                                      u1960 1E46  
                                    u2680 08E2                                      u2840 0FA6  
                                    u1881 22F8                                      u2761 1738  
                                    u2681 08DE                                      u2841 0FA2  
                                    u1890 230A                                      u1970 1E6E  
                                    u2690 08F2                                      u2770 199E  
                                    u2850 0FBC                                      u2930 1A70  
                                    u1891 2306                                      u2691 08EE  
                                    u2771 199A                                      u2851 0FB8  
                                    u2931 1A6C                                      u1980 1E7E  
                                    u2860 0FCE                                      u2780 0F12  
                                    u2940 1A90                                      u1981 1E7A  
                                    u2861 0FCA                                      u2781 0F0E  
                                    u2941 1A8C                                      u1990 1E96  
                                    u2870 0FDE                                      u2790 0F2A  
                                    u1967 1E3C                                      u1991 1E92  
                                    u2871 0FDA                                      u2791 0F26  
                                    u2880 0FF4                                      u1977 1E64  
                                    u2881 0FF0                                      u2957 1938  
                                    u2967 2078                                      u2977 2148  
                                    u2987 215E                                      u2997 2174  
                                    _TMR0 000FD6                      _minutosTranscurridos 00EE  
                      ??_i2c_reinicia_com 0002                            _check_response 2142  
                 escribeHorariosMemoria@i 000D                             ??_i2c_detener 0002  
                                    abs@a 0013                                      _dbuf 0158  
                                    _ctoa 1EDC                                      _main 1A08  
                                    _dtoa 0012                                      _hora 00F4  
                                    _prec 00E6                                      _nout 00E2  
                                    pad@i 0018                                      pad@p 0015  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    indf1 000FE7                                      indf2 000FDF  
                                    fsr1l 000FE1                                      pad@w 001A  
                                    map@x 001B                                      fsr2l 000FD9  
                                    btemp 005F                            ?_sistemaRegado 0001  
                __size_of_asignarHorarios 014C                             ??_i2c_iniciar 0001  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 000E                  ??_restablecerDatosSensor 0005  
                           __CFG_IESO$OFF 000000                          ??_DHT11_ReadData 0001  
                       _constructorSensor 23E2                      __size_of_DHT11_Start 0020  
                            ?_lecturaWifi 0001                   __size_of_setTiempoRegar 01CC  
                            ___param_bank 000000                        ?_constructorSensor 0001  
                      setTiempoRegar@hora 0010                        _leeHorariosMemoria 1676  
                        ??_encenderBombas 0014                                     ??_abs 0015  
                                   ??_map 002F                                     ??_pad 0017  
                          _i2c_envia_dato 23D6                             __CFG_PLLDIV$1 000000  
                          _i2c_inicia_com 23FE                           __end_of___aldiv 1140  
                         __end_of___aodiv 0C50                                     ?_ctoa 001C  
                                   ?_main 0001                                     ?_dtoa 001C  
                         __end_of___aomod 0DB4                             _convertirDato 2332  
                                   STR_10 7C7A                                     STR_11 7BFB  
                                   STR_20 7EC1                                     STR_12 7DEB  
                                   STR_21 7E7F                                     STR_13 7DC5  
                                   STR_22 7FF0                                     STR_30 7F20  
                                   STR_14 7CAD                                     STR_23 7F6F  
                                   STR_15 7EA1                                     STR_31 7D43  
                                   STR_32 7D43                                     STR_16 7E10  
                                   STR_24 7D9B                                     STR_33 7EE1  
                                   STR_17 7F3D                                     STR_25 7CE0  
                                   STR_34 7F20                                     STR_26 7FE0  
                                   STR_18 7E5A                                     STR_27 7F8B  
                                   STR_19 7D12                                     STR_28 7FBB  
                                   STR_29 7EE1                       ??_constructorSensor 0005  
                       convertirDato@dato 0002                                     _T0CON 000FD5  
             lecturaWifi@porcientoHumedad 00A6                       ?_leeHorariosMemoria 0001  
                                   i2l197 1D5A                                     _RCREG 000FAE  
                            vfpfcnvrt@fmt 0042                                     _SPBRG 000FAF  
                           __CFG_USBDIV$1 000000                                     _TRISD 000F95  
                                   _TXREG 000FAD                             __CFG_PWRT$OFF 000000  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                       ___lmul@multiplicand 0005  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                      __size_of_UART_init 0070                        __size_of_UART_read 0054  
                                   _flags 00E8                                     _fputc 14E4  
                                   _fputs 20FE                    __end_of_check_response 2182  
                             ?_UART_write 0001                                     pad@fp 0011  
                                   _width 00E4                                     ctoa@c 001E  
                                   _putch 2412                                     ctoa@w 001F  
                                   dtoa@d 001E                                     dtoa@i 003E  
                                   dtoa@n 0036                                     dtoa@p 0030  
                                   dtoa@s 0034                                     dtoa@w 0032  
                                   tablat 000FF5         __size_of_mostrarDatosSensoresWIFI 00FE  
                                   ttemp5 0060                                     ttemp6 0063  
                                   ttemp7 0067                                     status 000FD8  
               ?_mostrarDatosSensoresWIFI 0001                                     wtemp8 0060  
                         __end_of_sprintf 1FDE                        escribe_eeprom@dato 0009  
               __end_of_constructorSensor 23EC                      ??_leeHorariosMemoria 0007  
                          __CFG_ICPRT$OFF 000000                                _i2c_espera 22E6  
                        ??_dameHoraActual 0005                            __CFG_MCLRE$OFF 000000  
                         __initialization 202E                           setTiempoRegar@i 0011  
                     __end_of_i2c_detener 240E           __size_of_lecturaAnalogaSensores 00AC  
                  __end_of_i2c_envia_dato 23E2                              __end_of_ctoa 1F38  
                            __end_of_main 1AA4                              __end_of_dtoa 02F6  
                ??_escribeHorariosMemoria 000B                           ??_configurarAdc 0001  
                     setTiempoRegar@i_841 0013                    __end_of_i2c_inicia_com 2406  
                      _inicializarObjetos 1AA4                       __end_of_i2c_iniciar 23D6  
                  sistemaPrincipal@opcion 005E                          _dameHumedadSuelo 2074  
                          ?_convertirDato 0001                      __size_of_fijaHoraRtc 006C  
                                  ??_ctoa 001F                                    ??_main 005F  
                                  ??_dtoa 0026                 setTiempoRegar@tiempoRegar 000F  
                           __activetblptr 000002                       ?_inicializarObjetos 0001  
                      i2c_envia_dato@dato 0002                           __CFG_CCP2MX$OFF 000000  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  ?_fputc 0001                                    ?_fputs 000A  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                         ?_check_response 0001                    encenderBombas@flagSeco 0016  
                                  ?_putch 0001                        convertirDato@datoR 0003  
                                  i2l3670 1D1C                                    i2l3672 1D1E  
                                  i2l3680 1D42                                    i2l3682 1D50  
                                  i2l3674 1D30                                    i2l3666 1CFC  
                                  i2l3684 1D54                                    i2l3676 1D34  
                                  i2l3668 1D0A                                    i2l3678 1D36  
                         ??_sistemaRegado 005B                                    _SSPADD 000FC8  
                                  _SSPBUF 000FC9                      ??_inicializarObjetos 0007  
         __size_of_restablecerDatosSensor 0050                            __CFG_XINST$OFF 000000  
                            vfprintf@cfmt 0057                  __end_of_sistemaPrincipal 1A08  
                          _escribe_eeprom 2234                                    ___lmul 1C90  
                         ?_i2c_envia_dato 0001                                 ??___aldiv 0015  
                               ??___aodiv 0011                                 ??___aomod 0011  
                                  ___wmul 230C                         __end_of_UART_init 1C24  
                       __end_of_UART_read 1F8C                         ??_asignarHorarios 000F  
                        __end_of_leer_rtc 22E6                           ?_i2c_inicia_com 0001  
                        __end_of_estaSeco 20FE                       __size_of_UART_write 0016  
                            ?_UART_printf 0002                                    clear_0 2054  
                                  clear_1 2060                                    _setRtc 15AE  
                                  pad@buf 0013                                    ctoa@fp 001C  
     mostrarDatosSensoresWIFI@temperatura 00DE                                    dtoa@fp 001C  
                                  _strlen 21FE                           _i2c_recibe_dato 2390  
                            ?_mostrarMenu 0001                                    fputc@c 0001  
                                  fputs@c 000E                                    fputs@i 000F  
                                  fputs@s 000A                      escribe_rtc@direccion 0004  
                            __mediumconst 7BFA                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                  _lecturaAnalogaSensores 18B8              __end_of_mostrarDatosSensores 132C  
                                  putch@c 0001                          __end_of_vfprintf 1E22  
                               ??_sprintf 0059                                __accesstop 0060  
                 __end_of__initialization 2066                      __size_of_escribe_rtc 001E  
                         __CFG_PBADEN$OFF 000000                      __size_of_leer_eeprom 003C  
                         __CFG_FOSC$XT_XT 000000                               _i2c_detener 2406  
              __size_of_constructorSensor 000A                             ___rparam_used 000001  
                             _i2c_iniciar 23C0                    __end_of_escribe_eeprom 2264  
                             ?_i2c_espera 0001                            _setTiempoRegar 0774  
                        setTiempoRegar@Rx 0016                            __pcstackCOMRAM 0001  
                            leer_rtc@dato 0004                              __pidataBANK0 240E  
                    __size_of_lecturaWifi 0188           __size_of_escribeHorariosMemoria 00CE  
                         ??_convertirDato 0001                             __end_of_fputc 15AE  
                           __end_of_fputs 2142                       estaSeco@temperatura 0013  
                           __end_of_putch 2414                    _restablecerDatosSensor 1FDE  
                            _datoRecibido 00F1                         ?_dameDatosSistema 0001  
                                 ??_fputc 0005                                   ??_fputs 000E  
                                 ??_putch 0001                                __pbssBANK0 00E2  
                              __pbssBANK1 0100                        ??_dameDatosSistema 0059  
                 __size_of_desbordamiento 1D56                        __size_of_horaRegar 002C  
                  __end_of_setTiempoRegar 0940         constructorSensor@porcientoHumedad 0003  
                            lecturaWifi@i 00A7                              lecturaWifi@j 00A9  
                         ?_escribe_eeprom 0007             dameTemperaturaHumedad@Humedad 0004  
                      _contInterrupciones 00EA                 __size_of_i2c_reinicia_com 0008  
                                 ?___lmul 0001                                   ?___wmul 0001  
              mostrarDatosSensores@buffer 0074                   __end_of_i2c_recibe_dato 23AA  
                                 _ACKSTAT 007E2E                            ___lmul@product 0009  
                                 ?_setRtc 0001                                   ?_strlen 0001  
         mostrarDatosSensores@temperatura 00A6             dameTemperaturaHumedad@humedad 000E  
                      __size_of_vfpfcnvrt 0226                       __size_of_i2c_espera 0026  
                  _escribeHorariosMemoria 1416                                   _SSPCON1 000FC6  
                                 _SSPCON2 000FC5                              ??_UART_write 0001  
                                 _SSPSTAT 000FC7                  __end_of_dameHumedadSuelo 20BA  
                               ?_leer_rtc 0001                                 ?_estaSeco 0010  
                         __CFG_VREGEN$OFF 000000                             ??_DHT11_Start 0001  
                         ?_setTiempoRegar 0001                                   __Hparam 0000  
                                 __Lparam 0000         dameTemperaturaHumedad@Temperatura 0006  
                                 ___aldiv 1034                                   ___aodiv 0AC8  
                                 ___aomod 0C50                           __size_of___lmul 006A  
                    _mostrarDatosSensores 123E                           __size_of___wmul 0026  
                               ?_vfprintf 0051                           __CFG_STVREN$OFF 000000  
                                 __pcinit 202E                                   __ramtop 0800  
                      __end_of_UART_write 23C0                           __size_of_setRtc 00C8  
                                 __ptext0 1A08                                   __ptext1 0F00  
                                 __ptext2 2264                                   __ptext3 02F6  
                                 __ptext4 20BA                                   __ptext5 2290  
                                 __ptext6 22BC                                   __ptext7 2332  
                                 __ptext8 1964                                   __ptext9 0774  
                 check_response@respuesta 0001                         __end_of_horaRegar 2290  
                               _T0CONbits 000FD5                           __size_of_strlen 0036  
                    __size_of_UART_printf 005E                              __size_of_abs 0040  
                            __size_of_pad 00C6                              __size_of_map 007A  
                        ??_check_response 0001                                   _regando 00ED  
                        ___aldiv@dividend 000D                                   _minutos 00F3  
                    __size_of_mostrarMenu 0062                                   _sprintf 1F8C  
                          __pintcode_body 1CFA                      end_of_initialization 2066  
          mostrarDatosSensoresWIFI@buffer 00AC                                ??_leer_rtc 0003  
                              ??_estaSeco 0012                                   fputc@fp 0003  
                         _asignarHorarios 0DB4                             __Lmediumconst 7BFA  
                                 int_func 1CFA                                   fputs@fp 000C  
                        ??_i2c_envia_dato 0002               __size_of_leeHorariosMemoria 00C8  
                                 setRtc@i 0009                          ??_i2c_inicia_com 0002  
                        _VALOR_TIMER0UART 00FC                         __end_of_vfpfcnvrt 0774  
                ??_dameTemperaturaHumedad 0008                                 _RCSTAbits 000FAB  
                        ___aldiv@quotient 0017                     ?_mostrarDatosSensores 0001  
                     __end_of_DHT11_Start 2372                                   postdec1 000FE5  
                                 postdec2 000FDD                         ?_sistemaPrincipal 0001  
                 _peticionLecturaSensores 00EC                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                           ??_fijaHoraRtc 000C                          ?_i2c_recibe_dato 0001  
                              ??_vfprintf 0057                     __end_of_configurarAdc 23F6  
                      ??_sistemaPrincipal 005C                                   strlen@a 0003  
                                 strlen@s 0001                                 _UART_init 1BB4  
                               _UART_read 1F38                                 _PORTDbits 000F83  
                 __size_of_DHT11_ReadData 005C                   ?_lecturaAnalogaSensores 0001  
               dameHumedadSuelo@canalLeer 0005                   lecturaAnalogaSensores@i 0030  
                               _TRISBbits 000F93                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                   __size_of_encenderBombas 0258  
                _mostrarDatosSensoresWIFI 1140                         lecturaWifi@buffer 0074  
                              map@out_max 002B                                map@out_min 0027  
                          _desbordamiento 0008                            _esperandoDatos 00F6  
                          _UART_init$1795 0023                              ?_i2c_detener 0001  
                   __end_of_sistemaRegado 1034                                 _TXSTAbits 000FAC  
                       dameDatosSistema@i 00A6               __size_of_inicializarObjetos 0096  
                            ?_i2c_iniciar 0001                              ??_i2c_espera 0001  
                       _MODO_COMUNICACION 00F5                        DHT11_ReadData@data 0002  
                        _i2c_reinicia_com 23F6                            __end_of___lmul 1CFA  
             setTiempoRegar@datoCapturado 0015                               vfpfcnvrt@ap 0044  
                             vfpfcnvrt@fp 0040                               vfpfcnvrt@ll 0048  
                          __end_of___wmul 2332                   ?_restablecerDatosSensor 0001  
          __end_of_lecturaAnalogaSensores 1964                                ?_UART_init 001B  
                              ?_UART_read 0001                       setRtc@datoCapturado 0008  
                 __size_of_dameHoraActual 002C                            __end_of_setRtc 1676  
                     __end_of_fijaHoraRtc 1C90                            __end_of_strlen 2234  
                     start_initialization 202E                              _estaSeco$777 0012  
                             __end_of_abs 21C2                   __end_of_asignarHorarios 0F00  
                             __end_of_pad 1804                               __end_of_map 1BB4  
       escribeHorariosMemoria@contMemoria 000B                    __end_of_desbordamiento 1D5E  
                      __end_of_i2c_espera 230C                             ??_escribe_rtc 0004  
                           ??_leer_eeprom 0005                          ??_escribe_eeprom 000A  
                     leeHorariosMemoria@i 0009                      constructorSensor@pin 0004  
                             _DHT11_Start 2352                             ??_lecturaWifi 0059  
                  ??_mostrarDatosSensores 0059                               vfprintf@fmt 0053  
               __size_of_dameDatosSistema 00EA           __size_of_dameTemperaturaHumedad 00B4  
                                ??___lmul 0009                                  ??___wmul 0005  
          __end_of_restablecerDatosSensor 202E                               __pdataBANK0 00FA  
                        __CFG_LPT1OSC$OFF 000000                         leer_rtc@direccion 0003  
                                ??_setRtc 0005                     __end_of_convertirDato 2352  
            asignarHorarios@datoCapturado 0010                                  ??_strlen 0003  
                 ?_escribeHorariosMemoria 0001                             __pcstackBANK0 0060  
                        ___aodiv@dividend 0001                           ?_desbordamiento 0001  
                        ??_setTiempoRegar 000F                         ?_dameHumedadSuelo 0001  
                       UART_printf@cadena 0002                             lecturaWifi@Rx 00AB  
                      ??_dameHumedadSuelo 0003                         __size_of_leer_rtc 002A  
                       __size_of_estaSeco 0044                       __end_of_escribe_rtc 2390  
                     __end_of_leer_eeprom 21FE                                 _dtoa$1018 002E  
                               __pintcode 0008                             __pmediumconst 7BFA  
                                ?___aldiv 000D                                  ?___aodiv 0001  
                                ?___aomod 0001                          ___aodiv@quotient 0013  
                             _fijaHoraRtc 1C24                       __end_of_lecturaWifi 0AC8  
                          _DHT11_ReadData 1E80                                setRtc@dato 0007  
                             ??_UART_init 001F                               ??_UART_read 0001  
                       __size_of_vfprintf 0062               mostrarDatosSensores@humedad 00A7  
          __end_of_escribeHorariosMemoria 14E4                            _encenderBombas 02F6  
                               _horaRegar 2264            dameTemperaturaHumedad@checkSum 000A  
                  _dameTemperaturaHumedad 1804                          ?_asignarHorarios 0001  
                                ?_sprintf 0060                            __size_of_fputc 00CA  
                          __size_of_fputs 0044                            __size_of_putch 0002  
                         ___aldiv@divisor 0011                           ___aldiv@counter 0015  
                          ___wmul@product 0005                                  _LATDbits 000F8C  
                                _PIE1bits 000F9D                      __size_of_i2c_detener 0008  
                                _PIR1bits 000F9E                                  i2u290_40 1D1C  
                                i2u290_41 1D18                                  i2u291_40 1D30  
                                i2u291_41 1D2C                                  i2u292_40 1D50  
                                i2u292_41 1D4C                                  i2u289_40 1D0A  
                                i2u289_41 1D06                   restablecerDatosSensor@i 0005  
                    __size_of_i2c_iniciar 0016                          __CFG_WDTPS$32768 000000  
                  _tiempoInactividadTrans 00F9             leeHorariosMemoria@contMemoria 0007  
                     asignarHorarios@hora 000F                    __end_of_DHT11_ReadData 1EDC  
                           ??_UART_printf 0004                    dameDatosSistema@buffer 0074  
                               _vfpfcnvrt 054E                                 map@in_max 0023  
                               map@in_min 001F                                _ADCON0bits 000FC2  
                          _dameHoraActual 2290                         ___wmul@multiplier 0001  
              ??_mostrarDatosSensoresWIFI 005B                    __end_of_encenderBombas 054E  
                           ??_mostrarMenu 0004                            UART_write@dato 0001  
                              ?_horaRegar 0001                     mostrarDatosSensores@i 00A8  
               __size_of_sistemaPrincipal 00A4                  __end_of_i2c_reinicia_com 23FE  
                              vfpfcnvrt@c 0050                         ___lmul@multiplier 0001  
                               copy_data0 2042                               _escribe_rtc 2372  
                             _leer_eeprom 21C2                              _VALOR_TIMER0 00FA  
              __end_of_leeHorariosMemoria 173E                                 estaSeco@s 0010  
                                __Hrparam 0000                              _minutosRegar 00EF  
                             _lecturaWifi 0940                             UART_init@BAUD 001B  
                              vfprintf@ap 0055                                  __Lrparam 0000  
                              vfprintf@fp 0051                          _dameDatosSistema 132C  
dameTemperaturaHumedad@temperaturaDecimal 000D                       _esperaDatoConcluida 00F7  
                        __size_of___aldiv 010C                           ?_DHT11_ReadData 0001  
                        __size_of___aodiv 0188                          __size_of___aomod 0164  
                  __end_of_dameHoraActual 22BC                                ?_vfpfcnvrt 0040  
                         DHT11_ReadData@i 0001                           ___aodiv@divisor 0009  
                         ___aodiv@counter 0011                           ?_encenderBombas 0001  
                              sprintf@fmt 0062                  __size_of_i2c_recibe_dato 001A  
                     __end_of_UART_printf 1E80                                  __ptext10 1D5E  
                                __ptext11 1140                                  __ptext20 1804  
                                __ptext12 0940                                  __ptext21 2142  
                                __ptext13 1FDE                                  __ptext30 054E  
                                __ptext22 2352                                  __ptext14 23E2  
                                __ptext31 0012                                  __ptext23 1E80  
                                __ptext15 123E                                  __ptext40 2412  
                                __ptext32 2182                                  __ptext24 1C24  
                                __ptext16 18B8                                  __ptext41 0DB4  
                                __ptext33 0C50                                  __ptext25 15AE  
                                __ptext17 1B3A                                  __ptext50 2390  
                                __ptext42 1416                                  __ptext34 0AC8  
                                __ptext26 2372                                  __ptext18 1C90  
                                __ptext51 23FE                                  __ptext43 2234  
                                __ptext35 1EDC                                  __ptext27 132C  
                                __ptext19 2074                                  __ptext60 1034  
                                __ptext52 23D6                                  __ptext44 1F38  
                                __ptext36 173E                                  __ptext28 1F8C  
                                __ptext53 2406                                  __ptext45 1E22  
                                __ptext37 21FE                                  __ptext29 1DC0  
                                __ptext54 22E6                                  __ptext46 23AA  
                                __ptext38 20FE                                  __ptext55 1AA4  
                                __ptext47 1676                                  __ptext39 14E4  
                                __ptext56 230C                                  __ptext48 21C2  
                                __ptext57 23C0                                  __ptext49 23F6  
                                __ptext58 23EC                                  __ptext59 1BB4  
                     __end_of_mostrarMenu 1DC0                          __size_of_sprintf 0052  
                                _leer_rtc 22BC                                  _estaSeco 20BA  
              __end_of_inicializarObjetos 1B3A                                  _byteUart 00F8  
                  __size_of_configurarAdc 000A                   __size_of_check_response 0040  
                     inicializarObjetos@i 0007                             __size_of_ctoa 005C  
                           __size_of_main 009C                             __size_of_dtoa 02E4  
                                _horarios 0100                              ?_DHT11_Start 0001  
    dameTemperaturaHumedad@humedadDecimal 000C                                  _segundos 00F2  
                         encenderBombas@i 0017                                  _sensores 0148  
               mostrarDatosSensoresWIFI@i 00E0                                  int$flags 005F  
                                _vfprintf 1DC0                           ?_dameHoraActual 0001  
                 __size_of_i2c_envia_dato 000C                   __size_of_i2c_inicia_com 0008  
                i2c_recibe_dato@datoleido 0002                          ___aomod@dividend 0001  
                   __CFG_CPUDIV$OSC1_PLL2 000000                          ??_desbordamiento 0001  
                  __size_of_sistemaRegado 0134                                _INTCONbits 000FF2  
                      constructorSensor@s 0001                               ??_horaRegar 0003  
         mostrarDatosSensoresWIFI@humedad 00DF                   escribe_eeprom@direccion 0007  
                                intlevel2 0000                                 sprintf@ap 006C  
                         escribe_rtc@dato 0003                                  setRtc@Rx 000B  
                         setRtc@direccion 0006                         asignarHorarios@Rx 0013  
           __size_of_mostrarDatosSensores 00EE                             _overflowTimer 00F0  
                            ?_fijaHoraRtc 0001         dameTemperaturaHumedad@temperatura 000F  
                         ___aomod@divisor 0009                 __size_of_dameHumedadSuelo 0046  
                             ??_vfpfcnvrt 0046                           ___aomod@counter 0011  
                             _UART_printf 1E22                             _configurarAdc 23EC  
        __end_of_mostrarDatosSensoresWIFI 123E                                  sprintf@f 006E  
                                sprintf@s 0060                   ?_dameTemperaturaHumedad 0004  
                             _mostrarMenu 1D5E                              ___aldiv@sign 0016  
                        asignarHorarios@i 0011                          _sistemaPrincipal 1964  
                         leer_eeprom@dato 0006                               _SSPCON2bits 000FC5  
                              _UART_write 23AA                              ___aodiv@sign 0012  
                       ??_i2c_recibe_dato 0002                    __size_of_convertirDato 0020  
                    leer_eeprom@direccion 0003                             _sistemaRegado 0F00  
                            ___aomod@sign 0012                  ??_lecturaAnalogaSensores 002F  
