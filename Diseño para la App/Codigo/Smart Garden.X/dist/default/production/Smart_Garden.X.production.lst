

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jul 01 12:18:06 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    87                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    88                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    89                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    90  0000                     
    91                           ; Version 2.10
    92                           ; Generated 31/07/2019 GMT
    93                           ; 
    94                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC18F4550 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125  0000                     
   126                           	psect	idataBANK0
   127  003126                     __pidataBANK0:
   128                           	opt callstack 0
   129                           
   130                           ;initializer for stoa@F1144
   131  003126  28                 	db	40
   132  003127  6E                 	db	110
   133  003128  75                 	db	117
   134  003129  6C                 	db	108
   135  00312A  6C                 	db	108
   136  00312B  29                 	db	41
   137  00312C  00                 	db	0
   138                           
   139                           ;initializer for _VALOR_TIMER0
   140  00312D  6769               	dw	26473
   141                           
   142                           ;initializer for _VALOR_TIMER0UART
   143  00312F  6769               	dw	26473
   144  0000                     _TMR0	set	4054
   145  0000                     _TRISD	set	3989
   146  0000                     _T0CON	set	4053
   147  0000                     _T0CONbits	set	4053
   148  0000                     _LATD	set	3980
   149  0000                     _PIE1bits	set	3997
   150  0000                     _ADRESL	set	4035
   151  0000                     _ADRESH	set	4036
   152  0000                     _ADCON0bits	set	4034
   153  0000                     _ADCON2	set	4032
   154  0000                     _ADCON1	set	4033
   155  0000                     _INTCONbits	set	4082
   156  0000                     _LATDbits	set	3980
   157  0000                     _TRISDbits	set	3989
   158  0000                     _PORTDbits	set	3971
   159  0000                     _TXREG	set	4013
   160  0000                     _RCREG	set	4014
   161  0000                     _PIR1bits	set	3998
   162  0000                     _RCSTAbits	set	4011
   163  0000                     _TXSTAbits	set	4012
   164  0000                     _SPBRG	set	4015
   165  0000                     _TRISCbits	set	3988
   166  0000                     _SSPBUF	set	4041
   167  0000                     _SSPCON2bits	set	4037
   168  0000                     _SSPADD	set	4040
   169  0000                     _SSPCON2	set	4037
   170  0000                     _SSPCON1	set	4038
   171  0000                     _SSPSTAT	set	4039
   172  0000                     _TRISBbits	set	3987
   173  0000                     _ACKSTAT	set	32302
   174                           
   175                           	psect	mediumconst
   176  007CE2                     __pmediumconst:
   177                           	opt callstack 0
   178  007CE2  00                 	db	0
   179  007CE3  0D                 	db	13
   180  007CE4  0A                 	db	10
   181  007CE5  20                 	db	32
   182  007CE6  33                 	db	51	;'3'
   183  007CE7  2E                 	db	46
   184  007CE8  20                 	db	32
   185  007CE9  50                 	db	80	;'P'
   186  007CEA  72                 	db	114	;'r'
   187  007CEB  6F                 	db	111	;'o'
   188  007CEC  67                 	db	103	;'g'
   189  007CED  72                 	db	114	;'r'
   190  007CEE  61                 	db	97	;'a'
   191  007CEF  6D                 	db	109	;'m'
   192  007CF0  61                 	db	97	;'a'
   193  007CF1  72                 	db	114	;'r'
   194  007CF2  20                 	db	32
   195  007CF3  74                 	db	116	;'t'
   196  007CF4  69                 	db	105	;'i'
   197  007CF5  65                 	db	101	;'e'
   198  007CF6  6D                 	db	109	;'m'
   199  007CF7  70                 	db	112	;'p'
   200  007CF8  6F                 	db	111	;'o'
   201  007CF9  20                 	db	32
   202  007CFA  64                 	db	100	;'d'
   203  007CFB  65                 	db	101	;'e'
   204  007CFC  20                 	db	32
   205  007CFD  72                 	db	114	;'r'
   206  007CFE  69                 	db	105	;'i'
   207  007CFF  65                 	db	101	;'e'
   208  007D00  67                 	db	103	;'g'
   209  007D01  6F                 	db	111	;'o'
   210  007D02  20                 	db	32
   211  007D03  65                 	db	101	;'e'
   212  007D04  6E                 	db	110	;'n'
   213  007D05  20                 	db	32
   214  007D06  75                 	db	117	;'u'
   215  007D07  6E                 	db	110	;'n'
   216  007D08  20                 	db	32
   217  007D09  68                 	db	104	;'h'
   218  007D0A  6F                 	db	111	;'o'
   219  007D0B  72                 	db	114	;'r'
   220  007D0C  61                 	db	97	;'a'
   221  007D0D  72                 	db	114	;'r'
   222  007D0E  69                 	db	105	;'i'
   223  007D0F  6F                 	db	111	;'o'
   224  007D10  20                 	db	32
   225  007D11  0D                 	db	13
   226  007D12  0A                 	db	10
   227  007D13  00                 	db	0
   228  007D14                     STR_27:
   229  007D14  0D                 	db	13
   230  007D15  0A                 	db	10
   231  007D16  0A                 	db	10
   232  007D17  50                 	db	80	;'P'
   233  007D18  6F                 	db	111	;'o'
   234  007D19  72                 	db	114	;'r'
   235  007D1A  63                 	db	99	;'c'
   236  007D1B  65                 	db	101	;'e'
   237  007D1C  6E                 	db	110	;'n'
   238  007D1D  74                 	db	116	;'t'
   239  007D1E  61                 	db	97	;'a'
   240  007D1F  6A                 	db	106	;'j'
   241  007D20  65                 	db	101	;'e'
   242  007D21  20                 	db	32
   243  007D22  48                 	db	72	;'H'
   244  007D23  75                 	db	117	;'u'
   245  007D24  6D                 	db	109	;'m'
   246  007D25  65                 	db	101	;'e'
   247  007D26  64                 	db	100	;'d'
   248  007D27  61                 	db	97	;'a'
   249  007D28  64                 	db	100	;'d'
   250  007D29  20                 	db	32
   251  007D2A  64                 	db	100	;'d'
   252  007D2B  65                 	db	101	;'e'
   253  007D2C  6C                 	db	108	;'l'
   254  007D2D  20                 	db	32
   255  007D2E  73                 	db	115	;'s'
   256  007D2F  65                 	db	101	;'e'
   257  007D30  6E                 	db	110	;'n'
   258  007D31  73                 	db	115	;'s'
   259  007D32  6F                 	db	111	;'o'
   260  007D33  72                 	db	114	;'r'
   261  007D34  20                 	db	32
   262  007D35  25                 	db	37
   263  007D36  64                 	db	100	;'d'
   264  007D37  3A                 	db	58	;':'
   265  007D38  20                 	db	32
   266  007D39  25                 	db	37
   267  007D3A  64                 	db	100	;'d'
   268  007D3B  20                 	db	32
   269  007D3C  25                 	db	37
   270  007D3D  63                 	db	99	;'c'
   271  007D3E  0D                 	db	13
   272  007D3F  0A                 	db	10
   273  007D40  00                 	db	0
   274  007D41                     STR_15:
   275  007D41  0D                 	db	13
   276  007D42  0A                 	db	10
   277  007D43  44                 	db	68	;'D'
   278  007D44  20                 	db	32
   279  007D45  3D                 	db	61	;'='
   280  007D46  20                 	db	32
   281  007D47  44                 	db	68	;'D'
   282  007D48  49                 	db	73	;'I'
   283  007D49  41                 	db	65	;'A'
   284  007D4A  53                 	db	83	;'S'
   285  007D4B  20                 	db	32
   286  007D4C  51                 	db	81	;'Q'
   287  007D4D  55                 	db	85	;'U'
   288  007D4E  45                 	db	69	;'E'
   289  007D4F  20                 	db	32
   290  007D50  45                 	db	69	;'E'
   291  007D51  4E                 	db	78	;'N'
   292  007D52  20                 	db	32
   293  007D53  4C                 	db	76	;'L'
   294  007D54  4F                 	db	79	;'O'
   295  007D55  53                 	db	83	;'S'
   296  007D56  20                 	db	32
   297  007D57  51                 	db	81	;'Q'
   298  007D58  55                 	db	85	;'U'
   299  007D59  45                 	db	69	;'E'
   300  007D5A  20                 	db	32
   301  007D5B  53                 	db	83	;'S'
   302  007D5C  45                 	db	69	;'E'
   303  007D5D  20                 	db	32
   304  007D5E  52                 	db	82	;'R'
   305  007D5F  45                 	db	69	;'E'
   306  007D60  47                 	db	71	;'G'
   307  007D61  41                 	db	65	;'A'
   308  007D62  52                 	db	82	;'R'
   309  007D63  41                 	db	65	;'A'
   310  007D64  0D                 	db	13
   311  007D65  0A                 	db	10
   312  007D66  00                 	db	0
   313  007D67                     STR_1:
   314  007D67  0D                 	db	13
   315  007D68  0A                 	db	10
   316  007D69  20                 	db	32
   317  007D6A  49                 	db	73	;'I'
   318  007D6B  6E                 	db	110	;'n'
   319  007D6C  67                 	db	103	;'g'
   320  007D6D  72                 	db	114	;'r'
   321  007D6E  65                 	db	101	;'e'
   322  007D6F  73                 	db	115	;'s'
   323  007D70  61                 	db	97	;'a'
   324  007D71  20                 	db	32
   325  007D72  75                 	db	117	;'u'
   326  007D73  6E                 	db	110	;'n'
   327  007D74  61                 	db	97	;'a'
   328  007D75  20                 	db	32
   329  007D76  6F                 	db	111	;'o'
   330  007D77  70                 	db	112	;'p'
   331  007D78  63                 	db	99	;'c'
   332  007D79  69                 	db	105	;'i'
   333  007D7A  6F                 	db	111	;'o'
   334  007D7B  6E                 	db	110	;'n'
   335  007D7C  20                 	db	32
   336  007D7D  61                 	db	97	;'a'
   337  007D7E  20                 	db	32
   338  007D7F  52                 	db	82	;'R'
   339  007D80  65                 	db	101	;'e'
   340  007D81  61                 	db	97	;'a'
   341  007D82  6C                 	db	108	;'l'
   342  007D83  69                 	db	105	;'i'
   343  007D84  7A                 	db	122	;'z'
   344  007D85  61                 	db	97	;'a'
   345  007D86  72                 	db	114	;'r'
   346  007D87  3A                 	db	58	;':'
   347  007D88  20                 	db	32
   348  007D89  0D                 	db	13
   349  007D8A  0A                 	db	10
   350  007D8B  00                 	db	0
   351  007D8C  0D                 	db	13
   352  007D8D  0A                 	db	10
   353  007D8E  20                 	db	32
   354  007D8F  32                 	db	50	;'2'
   355  007D90  2E                 	db	46
   356  007D91  20                 	db	32
   357  007D92  41                 	db	65	;'A'
   358  007D93  73                 	db	115	;'s'
   359  007D94  69                 	db	105	;'i'
   360  007D95  67                 	db	103	;'g'
   361  007D96  6E                 	db	110	;'n'
   362  007D97  61                 	db	97	;'a'
   363  007D98  72                 	db	114	;'r'
   364  007D99  20                 	db	32
   365  007D9A  48                 	db	72	;'H'
   366  007D9B  6F                 	db	111	;'o'
   367  007D9C  72                 	db	114	;'r'
   368  007D9D  61                 	db	97	;'a'
   369  007D9E  72                 	db	114	;'r'
   370  007D9F  69                 	db	105	;'i'
   371  007DA0  6F                 	db	111	;'o'
   372  007DA1  73                 	db	115	;'s'
   373  007DA2  20                 	db	32
   374  007DA3  70                 	db	112	;'p'
   375  007DA4  61                 	db	97	;'a'
   376  007DA5  72                 	db	114	;'r'
   377  007DA6  61                 	db	97	;'a'
   378  007DA7  20                 	db	32
   379  007DA8  72                 	db	114	;'r'
   380  007DA9  65                 	db	101	;'e'
   381  007DAA  67                 	db	103	;'g'
   382  007DAB  61                 	db	97	;'a'
   383  007DAC  72                 	db	114	;'r'
   384  007DAD  20                 	db	32
   385  007DAE  0D                 	db	13
   386  007DAF  0A                 	db	10
   387  007DB0  00                 	db	0
   388  007DB1  0D                 	db	13
   389  007DB2  0A                 	db	10
   390  007DB3  20                 	db	32
   391  007DB4  38                 	db	56	;'8'
   392  007DB5  2E                 	db	46
   393  007DB6  20                 	db	32
   394  007DB7  43                 	db	67	;'C'
   395  007DB8  61                 	db	97	;'a'
   396  007DB9  72                 	db	114	;'r'
   397  007DBA  67                 	db	103	;'g'
   398  007DBB  61                 	db	97	;'a'
   399  007DBC  72                 	db	114	;'r'
   400  007DBD  20                 	db	32
   401  007DBE  64                 	db	100	;'d'
   402  007DBF  61                 	db	97	;'a'
   403  007DC0  74                 	db	116	;'t'
   404  007DC1  6F                 	db	111	;'o'
   405  007DC2  73                 	db	115	;'s'
   406  007DC3  20                 	db	32
   407  007DC4  64                 	db	100	;'d'
   408  007DC5  65                 	db	101	;'e'
   409  007DC6  20                 	db	32
   410  007DC7  6C                 	db	108	;'l'
   411  007DC8  61                 	db	97	;'a'
   412  007DC9  20                 	db	32
   413  007DCA  6D                 	db	109	;'m'
   414  007DCB  65                 	db	101	;'e'
   415  007DCC  6D                 	db	109	;'m'
   416  007DCD  6F                 	db	111	;'o'
   417  007DCE  72                 	db	114	;'r'
   418  007DCF  69                 	db	105	;'i'
   419  007DD0  61                 	db	97	;'a'
   420  007DD1  20                 	db	32
   421  007DD2  0D                 	db	13
   422  007DD3  0A                 	db	10
   423  007DD4  00                 	db	0
   424  007DD5                     STR_14:
   425  007DD5  0D                 	db	13
   426  007DD6  0A                 	db	10
   427  007DD7  54                 	db	84	;'T'
   428  007DD8  20                 	db	32
   429  007DD9  3D                 	db	61	;'='
   430  007DDA  20                 	db	32
   431  007DDB  4D                 	db	77	;'M'
   432  007DDC  49                 	db	73	;'I'
   433  007DDD  4E                 	db	78	;'N'
   434  007DDE  55                 	db	85	;'U'
   435  007DDF  54                 	db	84	;'T'
   436  007DE0  4F                 	db	79	;'O'
   437  007DE1  53                 	db	83	;'S'
   438  007DE2  20                 	db	32
   439  007DE3  51                 	db	81	;'Q'
   440  007DE4  55                 	db	85	;'U'
   441  007DE5  45                 	db	69	;'E'
   442  007DE6  20                 	db	32
   443  007DE7  44                 	db	68	;'D'
   444  007DE8  55                 	db	85	;'U'
   445  007DE9  52                 	db	82	;'R'
   446  007DEA  41                 	db	65	;'A'
   447  007DEB  52                 	db	82	;'R'
   448  007DEC  41                 	db	65	;'A'
   449  007DED  20                 	db	32
   450  007DEE  45                 	db	69	;'E'
   451  007DEF  4C                 	db	76	;'L'
   452  007DF0  20                 	db	32
   453  007DF1  52                 	db	82	;'R'
   454  007DF2  49                 	db	73	;'I'
   455  007DF3  45                 	db	69	;'E'
   456  007DF4  47                 	db	71	;'G'
   457  007DF5  4F                 	db	79	;'O'
   458  007DF6  0D                 	db	13
   459  007DF7  0A                 	db	10
   460  007DF8  00                 	db	0
   461  007DF9  0D                 	db	13
   462  007DFA  0A                 	db	10
   463  007DFB  20                 	db	32
   464  007DFC  35                 	db	53	;'5'
   465  007DFD  2E                 	db	46
   466  007DFE  20                 	db	32
   467  007DFF  4D                 	db	77	;'M'
   468  007E00  6F                 	db	111	;'o'
   469  007E01  73                 	db	115	;'s'
   470  007E02  74                 	db	116	;'t'
   471  007E03  72                 	db	114	;'r'
   472  007E04  61                 	db	97	;'a'
   473  007E05  72                 	db	114	;'r'
   474  007E06  20                 	db	32
   475  007E07  76                 	db	118	;'v'
   476  007E08  61                 	db	97	;'a'
   477  007E09  6C                 	db	108	;'l'
   478  007E0A  6F                 	db	111	;'o'
   479  007E0B  72                 	db	114	;'r'
   480  007E0C  65                 	db	101	;'e'
   481  007E0D  73                 	db	115	;'s'
   482  007E0E  20                 	db	32
   483  007E0F  73                 	db	115	;'s'
   484  007E10  65                 	db	101	;'e'
   485  007E11  6E                 	db	110	;'n'
   486  007E12  73                 	db	115	;'s'
   487  007E13  6F                 	db	111	;'o'
   488  007E14  72                 	db	114	;'r'
   489  007E15  65                 	db	101	;'e'
   490  007E16  73                 	db	115	;'s'
   491  007E17  20                 	db	32
   492  007E18  0D                 	db	13
   493  007E19  0A                 	db	10
   494  007E1A  00                 	db	0
   495  007E1B  0D                 	db	13
   496  007E1C  0A                 	db	10
   497  007E1D  20                 	db	32
   498  007E1E  34                 	db	52	;'4'
   499  007E1F  2E                 	db	46
   500  007E20  20                 	db	32
   501  007E21  44                 	db	68	;'D'
   502  007E22  61                 	db	97	;'a'
   503  007E23  6D                 	db	109	;'m'
   504  007E24  65                 	db	101	;'e'
   505  007E25  20                 	db	32
   506  007E26  64                 	db	100	;'d'
   507  007E27  61                 	db	97	;'a'
   508  007E28  74                 	db	116	;'t'
   509  007E29  6F                 	db	111	;'o'
   510  007E2A  73                 	db	115	;'s'
   511  007E2B  20                 	db	32
   512  007E2C  64                 	db	100	;'d'
   513  007E2D  65                 	db	101	;'e'
   514  007E2E  6C                 	db	108	;'l'
   515  007E2F  20                 	db	32
   516  007E30  73                 	db	115	;'s'
   517  007E31  69                 	db	105	;'i'
   518  007E32  73                 	db	115	;'s'
   519  007E33  74                 	db	116	;'t'
   520  007E34  65                 	db	101	;'e'
   521  007E35  6D                 	db	109	;'m'
   522  007E36  61                 	db	97	;'a'
   523  007E37  20                 	db	32
   524  007E38  0D                 	db	13
   525  007E39  0A                 	db	10
   526  007E3A  00                 	db	0
   527  007E3B                     STR_25:
   528  007E3B  0D                 	db	13
   529  007E3C  0A                 	db	10
   530  007E3D  0A                 	db	10
   531  007E3E  4C                 	db	76	;'L'
   532  007E3F  61                 	db	97	;'a'
   533  007E40  20                 	db	32
   534  007E41  48                 	db	72	;'H'
   535  007E42  75                 	db	117	;'u'
   536  007E43  6D                 	db	109	;'m'
   537  007E44  65                 	db	101	;'e'
   538  007E45  64                 	db	100	;'d'
   539  007E46  61                 	db	97	;'a'
   540  007E47  64                 	db	100	;'d'
   541  007E48  20                 	db	32
   542  007E49  41                 	db	65	;'A'
   543  007E4A  6D                 	db	109	;'m'
   544  007E4B  62                 	db	98	;'b'
   545  007E4C  69                 	db	105	;'i'
   546  007E4D  65                 	db	101	;'e'
   547  007E4E  6E                 	db	110	;'n'
   548  007E4F  74                 	db	116	;'t'
   549  007E50  65                 	db	101	;'e'
   550  007E51  20                 	db	32
   551  007E52  65                 	db	101	;'e'
   552  007E53  73                 	db	115	;'s'
   553  007E54  3A                 	db	58	;':'
   554  007E55  20                 	db	32
   555  007E56  25                 	db	37
   556  007E57  64                 	db	100	;'d'
   557  007E58  0D                 	db	13
   558  007E59  0A                 	db	10
   559  007E5A  00                 	db	0
   560  007E5B                     STR_26:
   561  007E5B  0D                 	db	13
   562  007E5C  0A                 	db	10
   563  007E5D  0A                 	db	10
   564  007E5E  4C                 	db	76	;'L'
   565  007E5F  61                 	db	97	;'a'
   566  007E60  20                 	db	32
   567  007E61  54                 	db	84	;'T'
   568  007E62  65                 	db	101	;'e'
   569  007E63  6D                 	db	109	;'m'
   570  007E64  70                 	db	112	;'p'
   571  007E65  65                 	db	101	;'e'
   572  007E66  72                 	db	114	;'r'
   573  007E67  61                 	db	97	;'a'
   574  007E68  74                 	db	116	;'t'
   575  007E69  75                 	db	117	;'u'
   576  007E6A  72                 	db	114	;'r'
   577  007E6B  61                 	db	97	;'a'
   578  007E6C  20                 	db	32
   579  007E6D  65                 	db	101	;'e'
   580  007E6E  73                 	db	115	;'s'
   581  007E6F  3A                 	db	58	;':'
   582  007E70  20                 	db	32
   583  007E71  25                 	db	37
   584  007E72  64                 	db	100	;'d'
   585  007E73  20                 	db	32
   586  007E74  43                 	db	67	;'C'
   587  007E75  0D                 	db	13
   588  007E76  0A                 	db	10
   589  007E77  00                 	db	0
   590  007E78                     STR_13:
   591  007E78  0D                 	db	13
   592  007E79  0A                 	db	10
   593  007E7A  52                 	db	82	;'R'
   594  007E7B  20                 	db	32
   595  007E7C  3D                 	db	61	;'='
   596  007E7D  20                 	db	32
   597  007E7E  52                 	db	82	;'R'
   598  007E7F  45                 	db	69	;'E'
   599  007E80  47                 	db	71	;'G'
   600  007E81  41                 	db	65	;'A'
   601  007E82  52                 	db	82	;'R'
   602  007E83  28                 	db	40
   603  007E84  20                 	db	32
   604  007E85  31                 	db	49	;'1'
   605  007E86  20                 	db	32
   606  007E87  53                 	db	83	;'S'
   607  007E88  49                 	db	73	;'I'
   608  007E89  20                 	db	32
   609  007E8A  7C                 	db	124
   610  007E8B  20                 	db	32
   611  007E8C  30                 	db	48	;'0'
   612  007E8D  20                 	db	32
   613  007E8E  4E                 	db	78	;'N'
   614  007E8F  4F                 	db	79	;'O'
   615  007E90  29                 	db	41
   616  007E91  0D                 	db	13
   617  007E92  0A                 	db	10
   618  007E93  00                 	db	0
   619  007E94  0D                 	db	13
   620  007E95  0A                 	db	10
   621  007E96  20                 	db	32
   622  007E97  31                 	db	49	;'1'
   623  007E98  2E                 	db	46
   624  007E99  20                 	db	32
   625  007E9A  46                 	db	70	;'F'
   626  007E9B  69                 	db	105	;'i'
   627  007E9C  6A                 	db	106	;'j'
   628  007E9D  61                 	db	97	;'a'
   629  007E9E  72                 	db	114	;'r'
   630  007E9F  20                 	db	32
   631  007EA0  48                 	db	72	;'H'
   632  007EA1  6F                 	db	111	;'o'
   633  007EA2  72                 	db	114	;'r'
   634  007EA3  61                 	db	97	;'a'
   635  007EA4  20                 	db	32
   636  007EA5  41                 	db	65	;'A'
   637  007EA6  63                 	db	99	;'c'
   638  007EA7  74                 	db	116	;'t'
   639  007EA8  75                 	db	117	;'u'
   640  007EA9  61                 	db	97	;'a'
   641  007EAA  6C                 	db	108	;'l'
   642  007EAB  20                 	db	32
   643  007EAC  0D                 	db	13
   644  007EAD  0A                 	db	10
   645  007EAE  00                 	db	0
   646  007EAF                     STR_21:
   647  007EAF  0D                 	db	13
   648  007EB0  0A                 	db	10
   649  007EB1  25                 	db	37
   650  007EB2  30                 	db	48	;'0'
   651  007EB3  2E                 	db	46
   652  007EB4  32                 	db	50	;'2'
   653  007EB5  64                 	db	100	;'d'
   654  007EB6  3A                 	db	58	;':'
   655  007EB7  25                 	db	37
   656  007EB8  30                 	db	48	;'0'
   657  007EB9  2E                 	db	46
   658  007EBA  32                 	db	50	;'2'
   659  007EBB  64                 	db	100	;'d'
   660  007EBC  7C                 	db	124
   661  007EBD  20                 	db	32
   662  007EBE  4D                 	db	77	;'M'
   663  007EBF  49                 	db	73	;'I'
   664  007EC0  45                 	db	69	;'E'
   665  007EC1  52                 	db	82	;'R'
   666  007EC2  43                 	db	67	;'C'
   667  007EC3  4F                 	db	79	;'O'
   668  007EC4  4C                 	db	76	;'L'
   669  007EC5  45                 	db	69	;'E'
   670  007EC6  53                 	db	83	;'S'
   671  007EC7  0D                 	db	13
   672  007EC8  0A                 	db	10
   673  007EC9  00                 	db	0
   674  007ECA  0D                 	db	13
   675  007ECB  0A                 	db	10
   676  007ECC  20                 	db	32
   677  007ECD  37                 	db	55	;'7'
   678  007ECE  2E                 	db	46
   679  007ECF  20                 	db	32
   680  007ED0  46                 	db	70	;'F'
   681  007ED1  69                 	db	105	;'i'
   682  007ED2  6A                 	db	106	;'j'
   683  007ED3  61                 	db	97	;'a'
   684  007ED4  72                 	db	114	;'r'
   685  007ED5  20                 	db	32
   686  007ED6  44                 	db	68	;'D'
   687  007ED7  69                 	db	105	;'i'
   688  007ED8  61                 	db	97	;'a'
   689  007ED9  20                 	db	32
   690  007EDA  41                 	db	65	;'A'
   691  007EDB  63                 	db	99	;'c'
   692  007EDC  74                 	db	116	;'t'
   693  007EDD  75                 	db	117	;'u'
   694  007EDE  61                 	db	97	;'a'
   695  007EDF  6C                 	db	108	;'l'
   696  007EE0  20                 	db	32
   697  007EE1  0D                 	db	13
   698  007EE2  0A                 	db	10
   699  007EE3  00                 	db	0
   700  007EE4                     STR_16:
   701  007EE4  20                 	db	32
   702  007EE5  20                 	db	32
   703  007EE6  20                 	db	32
   704  007EE7  20                 	db	32
   705  007EE8  20                 	db	32
   706  007EE9  20                 	db	32
   707  007EEA  20                 	db	32
   708  007EEB  20                 	db	32
   709  007EEC  20                 	db	32
   710  007EED  20                 	db	32
   711  007EEE  20                 	db	32
   712  007EEF  20                 	db	32
   713  007EF0  20                 	db	32
   714  007EF1  20                 	db	32
   715  007EF2  20                 	db	32
   716  007EF3  20                 	db	32
   717  007EF4  44                 	db	68	;'D'
   718  007EF5  4C                 	db	76	;'L'
   719  007EF6  4D                 	db	77	;'M'
   720  007EF7  49                 	db	73	;'I'
   721  007EF8  4A                 	db	74	;'J'
   722  007EF9  56                 	db	86	;'V'
   723  007EFA  53                 	db	83	;'S'
   724  007EFB  0D                 	db	13
   725  007EFC  0A                 	db	10
   726  007EFD  00                 	db	0
   727  007EFE                     STR_18:
   728  007EFE  0D                 	db	13
   729  007EFF  0A                 	db	10
   730  007F00  25                 	db	37
   731  007F01  30                 	db	48	;'0'
   732  007F02  2E                 	db	46
   733  007F03  32                 	db	50	;'2'
   734  007F04  64                 	db	100	;'d'
   735  007F05  3A                 	db	58	;':'
   736  007F06  25                 	db	37
   737  007F07  30                 	db	48	;'0'
   738  007F08  2E                 	db	46
   739  007F09  32                 	db	50	;'2'
   740  007F0A  64                 	db	100	;'d'
   741  007F0B  7C                 	db	124
   742  007F0C  20                 	db	32
   743  007F0D  44                 	db	68	;'D'
   744  007F0E  4F                 	db	79	;'O'
   745  007F0F  4D                 	db	77	;'M'
   746  007F10  49                 	db	73	;'I'
   747  007F11  4E                 	db	78	;'N'
   748  007F12  47                 	db	71	;'G'
   749  007F13  4F                 	db	79	;'O'
   750  007F14  0D                 	db	13
   751  007F15  0A                 	db	10
   752  007F16  00                 	db	0
   753  007F17                     STR_23:
   754  007F17  0D                 	db	13
   755  007F18  0A                 	db	10
   756  007F19  25                 	db	37
   757  007F1A  30                 	db	48	;'0'
   758  007F1B  2E                 	db	46
   759  007F1C  32                 	db	50	;'2'
   760  007F1D  64                 	db	100	;'d'
   761  007F1E  3A                 	db	58	;':'
   762  007F1F  25                 	db	37
   763  007F20  30                 	db	48	;'0'
   764  007F21  2E                 	db	46
   765  007F22  32                 	db	50	;'2'
   766  007F23  64                 	db	100	;'d'
   767  007F24  7C                 	db	124
   768  007F25  20                 	db	32
   769  007F26  56                 	db	86	;'V'
   770  007F27  49                 	db	73	;'I'
   771  007F28  45                 	db	69	;'E'
   772  007F29  52                 	db	82	;'R'
   773  007F2A  4E                 	db	78	;'N'
   774  007F2B  45                 	db	69	;'E'
   775  007F2C  53                 	db	83	;'S'
   776  007F2D  0D                 	db	13
   777  007F2E  0A                 	db	10
   778  007F2F  00                 	db	0
   779  007F30                     STR_24:
   780  007F30  0D                 	db	13
   781  007F31  0A                 	db	10
   782  007F32  25                 	db	37
   783  007F33  30                 	db	48	;'0'
   784  007F34  2E                 	db	46
   785  007F35  32                 	db	50	;'2'
   786  007F36  64                 	db	100	;'d'
   787  007F37  3A                 	db	58	;':'
   788  007F38  25                 	db	37
   789  007F39  30                 	db	48	;'0'
   790  007F3A  2E                 	db	46
   791  007F3B  32                 	db	50	;'2'
   792  007F3C  64                 	db	100	;'d'
   793  007F3D  7C                 	db	124
   794  007F3E  20                 	db	32
   795  007F3F  53                 	db	83	;'S'
   796  007F40  41                 	db	65	;'A'
   797  007F41  42                 	db	66	;'B'
   798  007F42  41                 	db	65	;'A'
   799  007F43  44                 	db	68	;'D'
   800  007F44  4F                 	db	79	;'O'
   801  007F45  0D                 	db	13
   802  007F46  0A                 	db	10
   803  007F47  00                 	db	0
   804  007F48                     STR_20:
   805  007F48  0D                 	db	13
   806  007F49  0A                 	db	10
   807  007F4A  25                 	db	37
   808  007F4B  30                 	db	48	;'0'
   809  007F4C  2E                 	db	46
   810  007F4D  32                 	db	50	;'2'
   811  007F4E  64                 	db	100	;'d'
   812  007F4F  3A                 	db	58	;':'
   813  007F50  25                 	db	37
   814  007F51  30                 	db	48	;'0'
   815  007F52  2E                 	db	46
   816  007F53  32                 	db	50	;'2'
   817  007F54  64                 	db	100	;'d'
   818  007F55  7C                 	db	124
   819  007F56  20                 	db	32
   820  007F57  4D                 	db	77	;'M'
   821  007F58  41                 	db	65	;'A'
   822  007F59  52                 	db	82	;'R'
   823  007F5A  54                 	db	84	;'T'
   824  007F5B  45                 	db	69	;'E'
   825  007F5C  53                 	db	83	;'S'
   826  007F5D  0D                 	db	13
   827  007F5E  0A                 	db	10
   828  007F5F  00                 	db	0
   829  007F60                     STR_22:
   830  007F60  0D                 	db	13
   831  007F61  0A                 	db	10
   832  007F62  25                 	db	37
   833  007F63  30                 	db	48	;'0'
   834  007F64  2E                 	db	46
   835  007F65  32                 	db	50	;'2'
   836  007F66  64                 	db	100	;'d'
   837  007F67  3A                 	db	58	;':'
   838  007F68  25                 	db	37
   839  007F69  30                 	db	48	;'0'
   840  007F6A  2E                 	db	46
   841  007F6B  32                 	db	50	;'2'
   842  007F6C  64                 	db	100	;'d'
   843  007F6D  7C                 	db	124
   844  007F6E  20                 	db	32
   845  007F6F  4A                 	db	74	;'J'
   846  007F70  55                 	db	85	;'U'
   847  007F71  45                 	db	69	;'E'
   848  007F72  56                 	db	86	;'V'
   849  007F73  45                 	db	69	;'E'
   850  007F74  53                 	db	83	;'S'
   851  007F75  0D                 	db	13
   852  007F76  0A                 	db	10
   853  007F77  00                 	db	0
   854  007F78                     STR_17:
   855  007F78  48                 	db	72	;'H'
   856  007F79  3A                 	db	58	;':'
   857  007F7A  25                 	db	37
   858  007F7B  32                 	db	50	;'2'
   859  007F7C  64                 	db	100	;'d'
   860  007F7D  7C                 	db	124
   861  007F7E  52                 	db	82	;'R'
   862  007F7F  3A                 	db	58	;':'
   863  007F80  25                 	db	37
   864  007F81  64                 	db	100	;'d'
   865  007F82  7C                 	db	124
   866  007F83  54                 	db	84	;'T'
   867  007F84  3A                 	db	58	;':'
   868  007F85  25                 	db	37
   869  007F86  32                 	db	50	;'2'
   870  007F87  64                 	db	100	;'d'
   871  007F88  7C                 	db	124
   872  007F89  44                 	db	68	;'D'
   873  007F8A  3A                 	db	58	;':'
   874  007F8B  25                 	db	37
   875  007F8C  73                 	db	115	;'s'
   876  007F8D  0D                 	db	13
   877  007F8E  0A                 	db	10
   878  007F8F  00                 	db	0
   879  007F90  0D                 	db	13
   880  007F91  0A                 	db	10
   881  007F92  20                 	db	32
   882  007F93  36                 	db	54	;'6'
   883  007F94  2E                 	db	46
   884  007F95  20                 	db	32
   885  007F96  52                 	db	82	;'R'
   886  007F97  65                 	db	101	;'e'
   887  007F98  67                 	db	103	;'g'
   888  007F99  61                 	db	97	;'a'
   889  007F9A  64                 	db	100	;'d'
   890  007F9B  6F                 	db	111	;'o'
   891  007F9C  20                 	db	32
   892  007F9D  72                 	db	114	;'r'
   893  007F9E  61                 	db	97	;'a'
   894  007F9F  70                 	db	112	;'p'
   895  007FA0  69                 	db	105	;'i'
   896  007FA1  64                 	db	100	;'d'
   897  007FA2  6F                 	db	111	;'o'
   898  007FA3  20                 	db	32
   899  007FA4  0D                 	db	13
   900  007FA5  0A                 	db	10
   901  007FA6  00                 	db	0
   902  007FA7                     STR_19:
   903  007FA7  0D                 	db	13
   904  007FA8  0A                 	db	10
   905  007FA9  25                 	db	37
   906  007FAA  30                 	db	48	;'0'
   907  007FAB  2E                 	db	46
   908  007FAC  32                 	db	50	;'2'
   909  007FAD  64                 	db	100	;'d'
   910  007FAE  3A                 	db	58	;':'
   911  007FAF  25                 	db	37
   912  007FB0  30                 	db	48	;'0'
   913  007FB1  2E                 	db	46
   914  007FB2  32                 	db	50	;'2'
   915  007FB3  64                 	db	100	;'d'
   916  007FB4  7C                 	db	124
   917  007FB5  20                 	db	32
   918  007FB6  4C                 	db	76	;'L'
   919  007FB7  55                 	db	85	;'U'
   920  007FB8  4E                 	db	78	;'N'
   921  007FB9  45                 	db	69	;'E'
   922  007FBA  53                 	db	83	;'S'
   923  007FBB  0D                 	db	13
   924  007FBC  0A                 	db	10
   925  007FBD  00                 	db	0
   926  007FBE  41                 	db	65	;'A'
   927  007FBF  54                 	db	84	;'T'
   928  007FC0  2B                 	db	43
   929  007FC1  4E                 	db	78	;'N'
   930  007FC2  41                 	db	65	;'A'
   931  007FC3  4D                 	db	77	;'M'
   932  007FC4  45                 	db	69	;'E'
   933  007FC5  53                 	db	83	;'S'
   934  007FC6  4D                 	db	77	;'M'
   935  007FC7  41                 	db	65	;'A'
   936  007FC8  52                 	db	82	;'R'
   937  007FC9  54                 	db	84	;'T'
   938  007FCA  48                 	db	72	;'H'
   939  007FCB  4F                 	db	79	;'O'
   940  007FCC  4D                 	db	77	;'M'
   941  007FCD  45                 	db	69	;'E'
   942  007FCE  00                 	db	0
   943  007FCF  0D                 	db	13
   944  007FD0  0A                 	db	10
   945  007FD1  20                 	db	32
   946  007FD2  4F                 	db	79	;'O'
   947  007FD3  70                 	db	112	;'p'
   948  007FD4  63                 	db	99	;'c'
   949  007FD5  69                 	db	105	;'i'
   950  007FD6  6F                 	db	111	;'o'
   951  007FD7  6E                 	db	110	;'n'
   952  007FD8  3A                 	db	58	;':'
   953  007FD9  20                 	db	32
   954  007FDA  20                 	db	32
   955  007FDB  0D                 	db	13
   956  007FDC  00                 	db	0
   957  007FDD                     STR_12:
   958  007FDD  0D                 	db	13
   959  007FDE  0A                 	db	10
   960  007FDF  48                 	db	72	;'H'
   961  007FE0  20                 	db	32
   962  007FE1  3D                 	db	61	;'='
   963  007FE2  20                 	db	32
   964  007FE3  48                 	db	72	;'H'
   965  007FE4  4F                 	db	79	;'O'
   966  007FE5  52                 	db	82	;'R'
   967  007FE6  41                 	db	65	;'A'
   968  007FE7  0D                 	db	13
   969  007FE8  0A                 	db	10
   970  007FE9  00                 	db	0
   971  007FEA  41                 	db	65	;'A'
   972  007FEB  54                 	db	84	;'T'
   973  007FEC  2B                 	db	43
   974  007FED  50                 	db	80	;'P'
   975  007FEE  49                 	db	73	;'I'
   976  007FEF  4E                 	db	78	;'N'
   977  007FF0  32                 	db	50	;'2'
   978  007FF1  35                 	db	53	;'5'
   979  007FF2  30                 	db	48	;'0'
   980  007FF3  31                 	db	49	;'1'
   981  007FF4  00                 	db	0
   982  007FF5  41                 	db	65	;'A'
   983  007FF6  54                 	db	84	;'T'
   984  007FF7  2B                 	db	43
   985  007FF8  42                 	db	66	;'B'
   986  007FF9  41                 	db	65	;'A'
   987  007FFA  55                 	db	85	;'U'
   988  007FFB  44                 	db	68	;'D'
   989  007FFC  34                 	db	52	;'4'
   990  007FFD  00                 	db	0
   991  0000                     
   992                           ; #config settings
   993  007FFE  00                 	db	0	; dummy byte at the end
   994  0000                     
   995                           	psect	cinit
   996  002B14                     __pcinit:
   997                           	opt callstack 0
   998  002B14                     start_initialization:
   999                           	opt callstack 0
  1000  002B14                     __initialization:
  1001                           	opt callstack 0
  1002                           
  1003                           ; Initialize objects allocated to BANK0 (11 bytes)
  1004                           ; load TBLPTR registers with __pidataBANK0
  1005  002B14  0E26               	movlw	low __pidataBANK0
  1006  002B16  6EF6               	movwf	tblptrl,c
  1007  002B18  0E31               	movlw	high __pidataBANK0
  1008  002B1A  6EF7               	movwf	tblptrh,c
  1009  002B1C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1010  002B1E  6EF8               	movwf	tblptru,c
  1011  002B20  EE00  F0F4         	lfsr	0,__pdataBANK0
  1012  002B24  EE10 F00B          	lfsr	1,11
  1013  002B28                     copy_data0:
  1014  002B28  0009               	tblrd		*+
  1015  002B2A  CFF5 FFEE          	movff	tablat,postinc0
  1016  002B2E  50E5               	movf	postdec1,w,c
  1017  002B30  50E1               	movf	fsr1l,w,c
  1018  002B32  E1FA               	bnz	copy_data0
  1019                           
  1020                           ; Clear objects allocated to BIGRAM (288 bytes)
  1021  002B34  EE01  F032         	lfsr	0,__pbssBIGRAM
  1022  002B38  EE11 F020          	lfsr	1,288
  1023  002B3C                     clear_0:
  1024  002B3C  6AEE               	clrf	postinc0,c
  1025  002B3E  50E5               	movf	postdec1,w,c
  1026  002B40  50E1               	movf	fsr1l,w,c
  1027  002B42  E1FC               	bnz	clear_0
  1028  002B44  50E2               	movf	fsr1h,w,c
  1029  002B46  E1FA               	bnz	clear_0
  1030                           
  1031                           ; Clear objects allocated to BANK1 (50 bytes)
  1032  002B48  EE01  F000         	lfsr	0,__pbssBANK1
  1033  002B4C  0E32               	movlw	50
  1034  002B4E                     clear_1:
  1035  002B4E  6AEE               	clrf	postinc0,c
  1036  002B50  06E8               	decf	wreg,f,c
  1037  002B52  E1FD               	bnz	clear_1
  1038                           
  1039                           ; Clear objects allocated to BANK0 (77 bytes)
  1040  002B54  EE00  F060         	lfsr	0,__pbssBANK0
  1041  002B58  0E4D               	movlw	77
  1042  002B5A                     clear_2:
  1043  002B5A  6AEE               	clrf	postinc0,c
  1044  002B5C  06E8               	decf	wreg,f,c
  1045  002B5E  E1FD               	bnz	clear_2
  1046  002B60                     end_of_initialization:
  1047                           	opt callstack 0
  1048  002B60                     __end_of__initialization:
  1049                           	opt callstack 0
  1050  002B60  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1051  002B62  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1052  002B64  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1053  002B66  6EF8               	movwf	tblptru,c
  1054  002B68  0100               	movlb	0
  1055  002B6A  EFE0  F012         	goto	_main	;jump to C main() function
  1056                           
  1057                           	psect	bssBANK0
  1058  000060                     __pbssBANK0:
  1059                           	opt callstack 0
  1060  000060                     _sensores:
  1061                           	opt callstack 0
  1062  000060                     	ds	16
  1063  000070                     _nout:
  1064                           	opt callstack 0
  1065  000070                     	ds	2
  1066  000072                     _width:
  1067                           	opt callstack 0
  1068  000072                     	ds	2
  1069  000074                     _prec:
  1070                           	opt callstack 0
  1071  000074                     	ds	2
  1072  000076                     _flags:
  1073                           	opt callstack 0
  1074  000076                     	ds	2
  1075  000078                     _contInterrupciones:
  1076                           	opt callstack 0
  1077  000078                     	ds	2
  1078  00007A                     _peticionLecturaSensores:
  1079                           	opt callstack 0
  1080  00007A                     	ds	1
  1081  00007B                     _regando:
  1082                           	opt callstack 0
  1083  00007B                     	ds	1
  1084  00007C                     _minutosTranscurridos:
  1085                           	opt callstack 0
  1086  00007C                     	ds	1
  1087  00007D                     _minutosRegar:
  1088                           	opt callstack 0
  1089  00007D                     	ds	1
  1090  00007E                     _Humedad:
  1091                           	opt callstack 0
  1092  00007E                     	ds	1
  1093  00007F                     _Temperatura:
  1094                           	opt callstack 0
  1095  00007F                     	ds	1
  1096  000080                     _flagRegado:
  1097                           	opt callstack 0
  1098  000080                     	ds	1
  1099  000081                     _tempHora:
  1100                           	opt callstack 0
  1101  000081                     	ds	1
  1102  000082                     _overflowTimer:
  1103                           	opt callstack 0
  1104  000082                     	ds	1
  1105  000083                     _datoRecibido:
  1106                           	opt callstack 0
  1107  000083                     	ds	1
  1108  000084                     _diaActual:
  1109                           	opt callstack 0
  1110  000084                     	ds	1
  1111  000085                     _segundos:
  1112                           	opt callstack 0
  1113  000085                     	ds	1
  1114  000086                     _minutos:
  1115                           	opt callstack 0
  1116  000086                     	ds	1
  1117  000087                     _hora:
  1118                           	opt callstack 0
  1119  000087                     	ds	1
  1120  000088                     _MODO_COMUNICACION:
  1121                           	opt callstack 0
  1122  000088                     	ds	1
  1123  000089                     _esperandoDatos:
  1124                           	opt callstack 0
  1125  000089                     	ds	1
  1126  00008A                     _esperaDatoConcluida:
  1127                           	opt callstack 0
  1128  00008A                     	ds	1
  1129  00008B                     _byteUart:
  1130                           	opt callstack 0
  1131  00008B                     	ds	1
  1132  00008C                     _tiempoInactividadTrans:
  1133                           	opt callstack 0
  1134  00008C                     	ds	1
  1135  00008D                     _dbuf:
  1136                           	opt callstack 0
  1137  00008D                     	ds	32
  1138                           
  1139                           	psect	dataBANK0
  1140  0000F4                     __pdataBANK0:
  1141                           	opt callstack 0
  1142  0000F4                     stoa@F1144:
  1143                           	opt callstack 0
  1144  0000F4                     	ds	7
  1145  0000FB                     _VALOR_TIMER0:
  1146                           	opt callstack 0
  1147  0000FB                     	ds	2
  1148  0000FD                     _VALOR_TIMER0UART:
  1149                           	opt callstack 0
  1150  0000FD                     	ds	2
  1151                           
  1152                           	psect	bssBANK1
  1153  000100                     __pbssBANK1:
  1154                           	opt callstack 0
  1155  000100                     _buffer:
  1156                           	opt callstack 0
  1157  000100                     	ds	50
  1158                           
  1159                           	psect	bssBIGRAM
  1160  000132                     __pbssBIGRAM:
  1161                           	opt callstack 0
  1162  000132                     _horarios:
  1163                           	opt callstack 0
  1164  000132                     	ds	288
  1165                           
  1166                           	psect	cstackBANK0
  1167  0000AD                     __pcstackBANK0:
  1168                           	opt callstack 0
  1169  0000AD                     ?_vfprintf:
  1170                           	opt callstack 0
  1171  0000AD                     vfprintf@fp:
  1172                           	opt callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x0
  1175  0000AD                     	ds	2
  1176  0000AF                     vfprintf@fmt:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x2
  1180  0000AF                     	ds	2
  1181  0000B1                     vfprintf@ap:
  1182                           	opt callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x4
  1185  0000B1                     	ds	2
  1186  0000B3                     ?_sprintf:
  1187                           	opt callstack 0
  1188  0000B3                     sprintf@s:
  1189                           	opt callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x6
  1192  0000B3                     	ds	2
  1193  0000B5                     sprintf@fmt:
  1194                           	opt callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x8
  1197  0000B5                     	ds	12
  1198  0000C1                     sprintf@ap:
  1199                           	opt callstack 0
  1200                           
  1201                           ; 2 bytes @ 0x14
  1202  0000C1                     	ds	2
  1203  0000C3                     sprintf@f:
  1204                           	opt callstack 0
  1205                           
  1206                           ; 6 bytes @ 0x16
  1207  0000C3                     	ds	6
  1208  0000C9                     mostrarDatosSensores@i:
  1209                           	opt callstack 0
  1210  0000C9                     mostrarDatosSensoresWIFI@i:
  1211                           	opt callstack 0
  1212  0000C9                     dameDatosSistema@bufferHorario:
  1213                           	opt callstack 0
  1214                           
  1215                           ; 30 bytes @ 0x1C
  1216  0000C9                     	ds	30
  1217  0000E7                     _dameDatosSistema$1895:
  1218                           	opt callstack 0
  1219                           
  1220                           ; 2 bytes @ 0x3A
  1221  0000E7                     	ds	2
  1222  0000E9                     _dameDatosSistema$1896:
  1223                           	opt callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x3C
  1226  0000E9                     	ds	2
  1227  0000EB                     _dameDatosSistema$1897:
  1228                           	opt callstack 0
  1229                           
  1230                           ; 2 bytes @ 0x3E
  1231  0000EB                     	ds	2
  1232  0000ED                     _dameDatosSistema$1898:
  1233                           	opt callstack 0
  1234                           
  1235                           ; 2 bytes @ 0x40
  1236  0000ED                     	ds	2
  1237  0000EF                     dameDatosSistema@i:
  1238                           	opt callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x42
  1241  0000EF                     	ds	2
  1242  0000F1                     ??_sistemaPrincipal:
  1243                           
  1244                           ; 1 bytes @ 0x44
  1245  0000F1                     	ds	2
  1246  0000F3                     sistemaPrincipal@opcion:
  1247                           	opt callstack 0
  1248                           
  1249                           ; 1 bytes @ 0x46
  1250  0000F3                     	ds	1
  1251                           
  1252                           	psect	cstackCOMRAM
  1253  000001                     __pcstackCOMRAM:
  1254                           	opt callstack 0
  1255  000001                     ??_i2c_espera:
  1256  000001                     ??_convertirDato:
  1257  000001                     ??_DHT11_Start:
  1258  000001                     ?_strlen:
  1259                           	opt callstack 0
  1260  000001                     ?_isdigit:
  1261                           	opt callstack 0
  1262  000001                     ?_isspace:
  1263                           	opt callstack 0
  1264  000001                     ?_horaRegar:
  1265                           	opt callstack 0
  1266  000001                     ?_dameHumedadSuelo:
  1267                           	opt callstack 0
  1268  000001                     ?___wmul:
  1269                           	opt callstack 0
  1270  000001                     ?___awdiv:
  1271                           	opt callstack 0
  1272  000001                     ?___awmod:
  1273                           	opt callstack 0
  1274  000001                     ?___lmul:
  1275                           	opt callstack 0
  1276  000001                     ?___aodiv:
  1277                           	opt callstack 0
  1278  000001                     ?___aomod:
  1279                           	opt callstack 0
  1280  000001                     UART_write@dato:
  1281                           	opt callstack 0
  1282  000001                     DHT11_ReadData@i:
  1283                           	opt callstack 0
  1284  000001                     check_response@respuesta:
  1285                           	opt callstack 0
  1286  000001                     constructorSensor@s:
  1287                           	opt callstack 0
  1288  000001                     limpiarBuffer@i:
  1289                           	opt callstack 0
  1290  000001                     ___wmul@multiplier:
  1291                           	opt callstack 0
  1292  000001                     ___awdiv@dividend:
  1293                           	opt callstack 0
  1294  000001                     ___awmod@dividend:
  1295                           	opt callstack 0
  1296  000001                     isdigit@c:
  1297                           	opt callstack 0
  1298  000001                     isspace@c:
  1299                           	opt callstack 0
  1300  000001                     fputc@c:
  1301                           	opt callstack 0
  1302  000001                     strlen@s:
  1303                           	opt callstack 0
  1304  000001                     ___lmul@multiplier:
  1305                           	opt callstack 0
  1306  000001                     ___aodiv@dividend:
  1307                           	opt callstack 0
  1308  000001                     ___aomod@dividend:
  1309                           	opt callstack 0
  1310                           
  1311                           ; 8 bytes @ 0x0
  1312  000001                     	ds	1
  1313  000002                     i2c_envia_dato@dato:
  1314                           	opt callstack 0
  1315  000002                     i2c_recibe_dato@datoleido:
  1316                           	opt callstack 0
  1317  000002                     convertirDato@dato:
  1318                           	opt callstack 0
  1319  000002                     DHT11_ReadData@data:
  1320                           	opt callstack 0
  1321  000002                     UART_printf@cadena:
  1322                           	opt callstack 0
  1323  000002                     getValue@numCharacters:
  1324                           	opt callstack 0
  1325                           
  1326                           ; 2 bytes @ 0x1
  1327  000002                     	ds	1
  1328  000003                     ??_dameTemperaturaHumedad:
  1329  000003                     ??_isdigit:
  1330  000003                     ??_isspace:
  1331  000003                     ??_horaRegar:
  1332  000003                     ??_dameHumedadSuelo:
  1333  000003                     escribe_rtc@dato:
  1334                           	opt callstack 0
  1335  000003                     leer_rtc@direccion:
  1336                           	opt callstack 0
  1337  000003                     convertirDato@datoR:
  1338                           	opt callstack 0
  1339  000003                     constructorSensor@porcientoHumedad:
  1340                           	opt callstack 0
  1341  000003                     leer_eeprom@direccion:
  1342                           	opt callstack 0
  1343  000003                     ___wmul@multiplicand:
  1344                           	opt callstack 0
  1345  000003                     ___awdiv@divisor:
  1346                           	opt callstack 0
  1347  000003                     ___awmod@divisor:
  1348                           	opt callstack 0
  1349  000003                     fputc@fp:
  1350                           	opt callstack 0
  1351  000003                     strlen@a:
  1352                           	opt callstack 0
  1353                           
  1354                           ; 2 bytes @ 0x2
  1355  000003                     	ds	1
  1356  000004                     ??_getValue:
  1357  000004                     escribe_rtc@direccion:
  1358                           	opt callstack 0
  1359  000004                     leer_rtc@dato:
  1360                           	opt callstack 0
  1361  000004                     constructorSensor@pin:
  1362                           	opt callstack 0
  1363                           
  1364                           ; 1 bytes @ 0x3
  1365  000004                     	ds	1
  1366  000005                     ??_fputc:
  1367  000005                     ??_leer_eeprom:
  1368  000005                     dameHumedadSuelo@canalLeer:
  1369                           	opt callstack 0
  1370  000005                     ___awdiv@counter:
  1371                           	opt callstack 0
  1372  000005                     ___awmod@counter:
  1373                           	opt callstack 0
  1374  000005                     restablecerDatosSensor@i:
  1375                           	opt callstack 0
  1376  000005                     dameTemperaturaHumedad@checkSum:
  1377                           	opt callstack 0
  1378  000005                     ___wmul@product:
  1379                           	opt callstack 0
  1380  000005                     ___lmul@multiplicand:
  1381                           	opt callstack 0
  1382                           
  1383                           ; 4 bytes @ 0x4
  1384  000005                     	ds	1
  1385  000006                     _horaRegar$806:
  1386                           	opt callstack 0
  1387  000006                     leer_eeprom@dato:
  1388                           	opt callstack 0
  1389  000006                     getValue@datoIncorrecto:
  1390                           	opt callstack 0
  1391  000006                     ___awdiv@sign:
  1392                           	opt callstack 0
  1393  000006                     ___awmod@sign:
  1394                           	opt callstack 0
  1395                           
  1396                           ; 1 bytes @ 0x5
  1397  000006                     	ds	1
  1398  000007                     ??_inicializarObjetos:
  1399  000007                     ??_leeHorariosMemoria:
  1400  000007                     dameTemperaturaHumedad@humedadDecimal:
  1401                           	opt callstack 0
  1402  000007                     _isspace$1560:
  1403                           	opt callstack 0
  1404  000007                     escribe_eeprom@direccion:
  1405                           	opt callstack 0
  1406  000007                     getValue@i:
  1407                           	opt callstack 0
  1408  000007                     ___awdiv@quotient:
  1409                           	opt callstack 0
  1410                           
  1411                           ; 2 bytes @ 0x6
  1412  000007                     	ds	1
  1413  000008                     ?_atoi:
  1414                           	opt callstack 0
  1415  000008                     dameTemperaturaHumedad@temperaturaDecimal:
  1416                           	opt callstack 0
  1417  000008                     atoi@s:
  1418                           	opt callstack 0
  1419                           
  1420                           ; 2 bytes @ 0x7
  1421  000008                     	ds	1
  1422  000009                     escribe_eeprom@dato:
  1423                           	opt callstack 0
  1424  000009                     leeHorariosMemoria@caracterLeido:
  1425                           	opt callstack 0
  1426  000009                     dameTemperaturaHumedad@humedad:
  1427                           	opt callstack 0
  1428  000009                     inicializarObjetos@j:
  1429                           	opt callstack 0
  1430  000009                     getValue@i_969:
  1431                           	opt callstack 0
  1432  000009                     ___lmul@product:
  1433                           	opt callstack 0
  1434  000009                     ___aodiv@divisor:
  1435                           	opt callstack 0
  1436  000009                     ___aomod@divisor:
  1437                           	opt callstack 0
  1438                           
  1439                           ; 8 bytes @ 0x8
  1440  000009                     	ds	1
  1441  00000A                     ??_atoi:
  1442  00000A                     ??_escribe_eeprom:
  1443  00000A                     ?_stoa:
  1444                           	opt callstack 0
  1445  00000A                     dameTemperaturaHumedad@temperatura:
  1446                           	opt callstack 0
  1447  00000A                     leeHorariosMemoria@j:
  1448                           	opt callstack 0
  1449  00000A                     stoa@fp:
  1450                           	opt callstack 0
  1451  00000A                     fputs@s:
  1452                           	opt callstack 0
  1453                           
  1454                           ; 2 bytes @ 0x9
  1455  00000A                     	ds	1
  1456  00000B                     ??_escribeHorariosMemoria:
  1457  00000B                     ?_estaSeco:
  1458                           	opt callstack 0
  1459  00000B                     getValue@dato:
  1460                           	opt callstack 0
  1461  00000B                     estaSeco@s:
  1462                           	opt callstack 0
  1463  00000B                     inicializarObjetos@i_809:
  1464                           	opt callstack 0
  1465                           
  1466                           ; 2 bytes @ 0xA
  1467  00000B                     	ds	1
  1468  00000C                     getValue@Rx:
  1469                           	opt callstack 0
  1470  00000C                     leeHorariosMemoria@contMemoria:
  1471                           	opt callstack 0
  1472  00000C                     stoa@s:
  1473                           	opt callstack 0
  1474  00000C                     fputs@fp:
  1475                           	opt callstack 0
  1476                           
  1477                           ; 2 bytes @ 0xB
  1478  00000C                     	ds	1
  1479  00000D                     ??_regadoRapido:
  1480  00000D                     ?___aldiv:
  1481                           	opt callstack 0
  1482  00000D                     _estaSeco$799:
  1483                           	opt callstack 0
  1484  00000D                     setRtc@direccion:
  1485                           	opt callstack 0
  1486  00000D                     lecturaWifi@Rx:
  1487                           	opt callstack 0
  1488  00000D                     inicializarObjetos@i:
  1489                           	opt callstack 0
  1490  00000D                     escribeHorariosMemoria@j:
  1491                           	opt callstack 0
  1492  00000D                     ___aldiv@dividend:
  1493                           	opt callstack 0
  1494                           
  1495                           ; 4 bytes @ 0xC
  1496  00000D                     	ds	1
  1497  00000E                     ??_encenderBombas:
  1498  00000E                     ??_stoa:
  1499  00000E                     setRtc@seteado:
  1500                           	opt callstack 0
  1501  00000E                     lecturaWifi@humedadMedida:
  1502                           	opt callstack 0
  1503  00000E                     fputs@c:
  1504                           	opt callstack 0
  1505  00000E                     leeHorariosMemoria@i:
  1506                           	opt callstack 0
  1507  00000E                     atoi@neg:
  1508                           	opt callstack 0
  1509                           
  1510                           ; 2 bytes @ 0xD
  1511  00000E                     	ds	1
  1512  00000F                     setRtc@datoRtc:
  1513                           	opt callstack 0
  1514  00000F                     regadoRapido@tiempoRegar:
  1515                           	opt callstack 0
  1516  00000F                     escribeHorariosMemoria@contMemoria:
  1517                           	opt callstack 0
  1518  00000F                     lecturaWifi@i:
  1519                           	opt callstack 0
  1520  00000F                     fputs@i:
  1521                           	opt callstack 0
  1522  00000F                     stoa@nuls:
  1523                           	opt callstack 0
  1524                           
  1525                           ; 7 bytes @ 0xE
  1526  00000F                     	ds	1
  1527  000010                     setRtc@dato:
  1528                           	opt callstack 0
  1529  000010                     encenderBombas@flagSeco:
  1530                           	opt callstack 0
  1531  000010                     regadoRapido@areaRegar:
  1532                           	opt callstack 0
  1533  000010                     _atoi$1542:
  1534                           	opt callstack 0
  1535                           
  1536                           ; 2 bytes @ 0xF
  1537  000010                     	ds	1
  1538  000011                     ?_pad:
  1539                           	opt callstack 0
  1540  000011                     ___aodiv@counter:
  1541                           	opt callstack 0
  1542  000011                     ___aomod@counter:
  1543                           	opt callstack 0
  1544  000011                     escribeHorariosMemoria@i:
  1545                           	opt callstack 0
  1546  000011                     encenderBombas@i:
  1547                           	opt callstack 0
  1548  000011                     pad@fp:
  1549                           	opt callstack 0
  1550  000011                     ___aldiv@divisor:
  1551                           	opt callstack 0
  1552                           
  1553                           ; 4 bytes @ 0x10
  1554  000011                     	ds	1
  1555  000012                     ___aodiv@sign:
  1556                           	opt callstack 0
  1557  000012                     ___aomod@sign:
  1558                           	opt callstack 0
  1559  000012                     _atoi$1544:
  1560                           	opt callstack 0
  1561                           
  1562                           ; 2 bytes @ 0x11
  1563  000012                     	ds	1
  1564  000013                     ??_asignarHorarios:
  1565  000013                     ?_abs:
  1566                           	opt callstack 0
  1567  000013                     setTiempoRegar@tiempoRegar:
  1568                           	opt callstack 0
  1569  000013                     pad@buf:
  1570                           	opt callstack 0
  1571  000013                     abs@a:
  1572                           	opt callstack 0
  1573  000013                     ___aodiv@quotient:
  1574                           	opt callstack 0
  1575                           
  1576                           ; 8 bytes @ 0x12
  1577  000013                     	ds	1
  1578  000014                     setTiempoRegar@hora:
  1579                           	opt callstack 0
  1580  000014                     _atoi$1543:
  1581                           	opt callstack 0
  1582                           
  1583                           ; 1 bytes @ 0x13
  1584  000014                     	ds	1
  1585  000015                     ??_abs:
  1586  000015                     ___aldiv@counter:
  1587                           	opt callstack 0
  1588  000015                     asignarHorarios@i:
  1589                           	opt callstack 0
  1590  000015                     pad@p:
  1591                           	opt callstack 0
  1592  000015                     atoi@n:
  1593                           	opt callstack 0
  1594                           
  1595                           ; 2 bytes @ 0x14
  1596  000015                     	ds	1
  1597  000016                     ___aldiv@sign:
  1598                           	opt callstack 0
  1599  000016                     stoa@i:
  1600                           	opt callstack 0
  1601                           
  1602                           ; 2 bytes @ 0x15
  1603  000016                     	ds	1
  1604  000017                     ??_pad:
  1605  000017                     asignarHorarios@diaRegar:
  1606                           	opt callstack 0
  1607  000017                     ___aldiv@quotient:
  1608                           	opt callstack 0
  1609                           
  1610                           ; 4 bytes @ 0x16
  1611  000017                     	ds	1
  1612  000018                     asignarHorarios@hora:
  1613                           	opt callstack 0
  1614  000018                     pad@i:
  1615                           	opt callstack 0
  1616  000018                     stoa@w:
  1617                           	opt callstack 0
  1618                           
  1619                           ; 2 bytes @ 0x17
  1620  000018                     	ds	1
  1621  000019                     asignarHorarios@Rx:
  1622                           	opt callstack 0
  1623                           
  1624                           ; 1 bytes @ 0x18
  1625  000019                     	ds	1
  1626  00001A                     pad@w:
  1627                           	opt callstack 0
  1628  00001A                     stoa@cp:
  1629                           	opt callstack 0
  1630                           
  1631                           ; 2 bytes @ 0x19
  1632  00001A                     	ds	1
  1633  00001B                     ?_map:
  1634                           	opt callstack 0
  1635  00001B                     UART_init@BAUD:
  1636                           	opt callstack 0
  1637  00001B                     map@x:
  1638                           	opt callstack 0
  1639                           
  1640                           ; 4 bytes @ 0x1A
  1641  00001B                     	ds	1
  1642  00001C                     ?_ctoa:
  1643                           	opt callstack 0
  1644  00001C                     ?_dtoa:
  1645                           	opt callstack 0
  1646  00001C                     ctoa@fp:
  1647                           	opt callstack 0
  1648  00001C                     dtoa@fp:
  1649                           	opt callstack 0
  1650  00001C                     stoa@p:
  1651                           	opt callstack 0
  1652                           
  1653                           ; 2 bytes @ 0x1B
  1654  00001C                     	ds	2
  1655  00001E                     ctoa@c:
  1656                           	opt callstack 0
  1657  00001E                     stoa@l:
  1658                           	opt callstack 0
  1659  00001E                     dtoa@d:
  1660                           	opt callstack 0
  1661                           
  1662                           ; 8 bytes @ 0x1D
  1663  00001E                     	ds	1
  1664  00001F                     ctoa@w:
  1665                           	opt callstack 0
  1666  00001F                     map@in_min:
  1667                           	opt callstack 0
  1668                           
  1669                           ; 4 bytes @ 0x1E
  1670  00001F                     	ds	4
  1671  000023                     map@in_max:
  1672                           	opt callstack 0
  1673  000023                     _UART_init$1894:
  1674                           	opt callstack 0
  1675                           
  1676                           ; 4 bytes @ 0x22
  1677  000023                     	ds	3
  1678  000026                     ??_dtoa:
  1679                           
  1680                           ; 1 bytes @ 0x25
  1681  000026                     	ds	1
  1682  000027                     map@out_min:
  1683                           	opt callstack 0
  1684                           
  1685                           ; 4 bytes @ 0x26
  1686  000027                     	ds	4
  1687  00002B                     map@out_max:
  1688                           	opt callstack 0
  1689                           
  1690                           ; 4 bytes @ 0x2A
  1691  00002B                     	ds	3
  1692  00002E                     _dtoa$1057:
  1693                           	opt callstack 0
  1694                           
  1695                           ; 2 bytes @ 0x2D
  1696  00002E                     	ds	1
  1697  00002F                     ??_lecturaAnalogaSensores:
  1698                           
  1699                           ; 1 bytes @ 0x2E
  1700  00002F                     	ds	1
  1701  000030                     lecturaAnalogaSensores@i:
  1702                           	opt callstack 0
  1703  000030                     dtoa@p:
  1704                           	opt callstack 0
  1705                           
  1706                           ; 2 bytes @ 0x2F
  1707  000030                     	ds	2
  1708  000032                     dtoa@w:
  1709                           	opt callstack 0
  1710                           
  1711                           ; 2 bytes @ 0x31
  1712  000032                     	ds	2
  1713  000034                     dtoa@s:
  1714                           	opt callstack 0
  1715                           
  1716                           ; 2 bytes @ 0x33
  1717  000034                     	ds	2
  1718  000036                     dtoa@n:
  1719                           	opt callstack 0
  1720                           
  1721                           ; 8 bytes @ 0x35
  1722  000036                     	ds	8
  1723  00003E                     dtoa@i:
  1724                           	opt callstack 0
  1725                           
  1726                           ; 2 bytes @ 0x3D
  1727  00003E                     	ds	2
  1728  000040                     ?_vfpfcnvrt:
  1729                           	opt callstack 0
  1730  000040                     vfpfcnvrt@fp:
  1731                           	opt callstack 0
  1732                           
  1733                           ; 2 bytes @ 0x3F
  1734  000040                     	ds	2
  1735  000042                     vfpfcnvrt@fmt:
  1736                           	opt callstack 0
  1737                           
  1738                           ; 2 bytes @ 0x41
  1739  000042                     	ds	2
  1740  000044                     vfpfcnvrt@ap:
  1741                           	opt callstack 0
  1742                           
  1743                           ; 2 bytes @ 0x43
  1744  000044                     	ds	2
  1745  000046                     ??_vfpfcnvrt:
  1746                           
  1747                           ; 1 bytes @ 0x45
  1748  000046                     	ds	4
  1749  00004A                     vfpfcnvrt@ll:
  1750                           	opt callstack 0
  1751                           
  1752                           ; 8 bytes @ 0x49
  1753  00004A                     	ds	8
  1754  000052                     vfpfcnvrt@cp:
  1755                           	opt callstack 0
  1756                           
  1757                           ; 2 bytes @ 0x51
  1758  000052                     	ds	2
  1759  000054                     vfpfcnvrt@done:
  1760                           	opt callstack 0
  1761                           
  1762                           ; 2 bytes @ 0x53
  1763  000054                     	ds	2
  1764  000056                     _vfpfcnvrt$1082:
  1765                           	opt callstack 0
  1766                           
  1767                           ; 2 bytes @ 0x55
  1768  000056                     	ds	2
  1769  000058                     _vfpfcnvrt$1083:
  1770                           	opt callstack 0
  1771                           
  1772                           ; 2 bytes @ 0x57
  1773  000058                     	ds	2
  1774  00005A                     vfpfcnvrt@c:
  1775                           	opt callstack 0
  1776                           
  1777                           ; 1 bytes @ 0x59
  1778  00005A                     	ds	1
  1779  00005B                     vfprintf@cfmt:
  1780                           	opt callstack 0
  1781                           
  1782                           ; 2 bytes @ 0x5A
  1783  00005B                     	ds	2
  1784  00005D                     ??_dameDatosSistema:
  1785  00005D                     ??_mostrarDatosSensoresWIFI:
  1786  00005D                     ??_mostrarDatosSensores:
  1787  00005D                     
  1788                           ; 1 bytes @ 0x5C
  1789  00005D                     	ds	2
  1790  00005F                     
  1791                           ; 1 bytes @ 0x5E
  1792 ;;
  1793 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1794 ;;
  1795 ;; *************** function _main *****************
  1796 ;; Defined at:
  1797 ;;		line 1065 in file "main.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;		None
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;		None
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1811 ;;      Params:         0       0       0       0       0       0       0       0       0
  1812 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1813 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1814 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1815 ;;Total ram usage:        0 bytes
  1816 ;; Hardware stack levels required when called:   11
  1817 ;; This function calls:
  1818 ;;		_UART_init
  1819 ;;		_configurarAdc
  1820 ;;		_i2c_iniciar
  1821 ;;		_inicializarObjetos
  1822 ;;		_restablecerDatosSensor
  1823 ;;		_sistemaPrincipal
  1824 ;;		_sistemaRegado
  1825 ;; This function is called by:
  1826 ;;		Startup code after reset
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text0
  1831  0025C0                     __ptext0:
  1832                           	opt callstack 0
  1833  0025C0                     _main:
  1834                           	opt callstack 20
  1835  0025C0                     
  1836                           ;main.c: 1067:     INTCONbits.GIE = 1;
  1837  0025C0  8EF2               	bsf	242,7,c	;volatile
  1838                           
  1839                           ;main.c: 1068:     INTCONbits.PEIE = 1;
  1840  0025C2  8CF2               	bsf	242,6,c	;volatile
  1841                           
  1842                           ;main.c: 1069:     INTCONbits.TMR0IE = 1;
  1843  0025C4  8AF2               	bsf	242,5,c	;volatile
  1844                           
  1845                           ;main.c: 1071:     PIE1bits.RCIE = 1;
  1846  0025C6  8A9D               	bsf	157,5,c	;volatile
  1847  0025C8                     
  1848                           ;main.c: 1073:     T0CON = 0b00000111;
  1849  0025C8  0E07               	movlw	7
  1850  0025CA  6ED5               	movwf	213,c	;volatile
  1851  0025CC                     
  1852                           ;main.c: 1078:     restablecerDatosSensor();
  1853  0025CC  EC60  F016         	call	_restablecerDatosSensor	;wreg free
  1854  0025D0                     
  1855                           ;main.c: 1079:     configurarAdc();
  1856  0025D0  EC9E  F018         	call	_configurarAdc	;wreg free
  1857  0025D4                     
  1858                           ;main.c: 1080:     UART_init(9600);
  1859  0025D4  0E80               	movlw	128
  1860  0025D6  6E1B               	movwf	UART_init@BAUD^0,c
  1861  0025D8  0E25               	movlw	37
  1862  0025DA  6E1C               	movwf	(UART_init@BAUD+1)^0,c
  1863  0025DC  0E00               	movlw	0
  1864  0025DE  6E1D               	movwf	(UART_init@BAUD+2)^0,c
  1865  0025E0  0E00               	movlw	0
  1866  0025E2  6E1E               	movwf	(UART_init@BAUD+3)^0,c
  1867  0025E4  EC5E  F014         	call	_UART_init	;wreg free
  1868  0025E8                     
  1869                           ;main.c: 1081:     i2c_iniciar();
  1870  0025E8  EC7A  F018         	call	_i2c_iniciar	;wreg free
  1871  0025EC                     
  1872                           ;main.c: 1082:     inicializarObjetos();
  1873  0025EC  ECFA  F00A         	call	_inicializarObjetos	;wreg free
  1874  0025F0                     
  1875                           ;main.c: 1087:     TRISD = 0;
  1876  0025F0  0E00               	movlw	0
  1877  0025F2  6E95               	movwf	149,c	;volatile
  1878  0025F4                     
  1879                           ;main.c: 1088:     LATD = 0;
  1880  0025F4  0E00               	movlw	0
  1881  0025F6  6E8C               	movwf	140,c	;volatile
  1882  0025F8                     
  1883                           ;main.c: 1090:     TMR0 = VALOR_TIMER0;
  1884  0025F8  C0FB  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  1885  0025FC  C0FC  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  1886  002600                     
  1887                           ;main.c: 1092:     INTCONbits.TMR0IF = 1;
  1888  002600  84F2               	bsf	242,2,c	;volatile
  1889  002602                     
  1890                           ;main.c: 1095:     T0CONbits.TMR0ON = 1;
  1891  002602  8ED5               	bsf	213,7,c	;volatile
  1892  002604                     
  1893                           ;main.c: 1099:     MODO_COMUNICACION = 1;
  1894  002604  0E01               	movlw	1
  1895  002606  0100               	movlb	0	; () banked
  1896  002608  6F88               	movwf	_MODO_COMUNICACION& (0+255),b
  1897  00260A                     l4852:
  1898                           
  1899                           ;main.c: 1104:         if (datoRecibido) {
  1900  00260A  0100               	movlb	0	; () banked
  1901  00260C  5183               	movf	_datoRecibido& (0+255),w,b
  1902  00260E  B4D8               	btfsc	status,2,c
  1903  002610  EF0C  F013         	goto	u3851
  1904  002614  EF0E  F013         	goto	u3850
  1905  002618                     u3851:
  1906  002618  EF15  F013         	goto	l4860
  1907  00261C                     u3850:
  1908  00261C                     
  1909                           ; BSR set to: 0
  1910                           ;main.c: 1106:             datoRecibido = 0;
  1911  00261C  0E00               	movlw	0
  1912  00261E  6F83               	movwf	_datoRecibido& (0+255),b
  1913  002620                     
  1914                           ; BSR set to: 0
  1915                           ;main.c: 1107:             byteUart -= 48;
  1916  002620  0E30               	movlw	48
  1917  002622  5F8B               	subwf	_byteUart& (0+255),f,b
  1918  002624                     
  1919                           ; BSR set to: 0
  1920                           ;main.c: 1108:             sistemaPrincipal(byteUart);
  1921  002624  518B               	movf	_byteUart& (0+255),w,b
  1922  002626  EC76  F011         	call	_sistemaPrincipal
  1923  00262A                     l4860:
  1924                           
  1925                           ;main.c: 1112:         if (overflowTimer) {
  1926  00262A  0100               	movlb	0	; () banked
  1927  00262C  5182               	movf	_overflowTimer& (0+255),w,b
  1928  00262E  B4D8               	btfsc	status,2,c
  1929  002630  EF1C  F013         	goto	u3861
  1930  002634  EF1E  F013         	goto	u3860
  1931  002638                     u3861:
  1932  002638  EF05  F013         	goto	l4852
  1933  00263C                     u3860:
  1934  00263C                     
  1935                           ; BSR set to: 0
  1936                           ;main.c: 1114:             esperandoDatos = 0;
  1937  00263C  0E00               	movlw	0
  1938  00263E  6F89               	movwf	_esperandoDatos& (0+255),b
  1939                           
  1940                           ;main.c: 1115:             overflowTimer = 0;
  1941  002640  0E00               	movlw	0
  1942  002642  6F82               	movwf	_overflowTimer& (0+255),b
  1943  002644                     
  1944                           ; BSR set to: 0
  1945                           ;main.c: 1116:             sistemaRegado();
  1946  002644  EC0C  F00D         	call	_sistemaRegado	;wreg free
  1947  002648  EF05  F013         	goto	l4852
  1948  00264C  EF07  F000         	goto	start
  1949  002650                     __end_of_main:
  1950                           	opt callstack 0
  1951                           
  1952 ;; *************** function _sistemaRegado *****************
  1953 ;; Defined at:
  1954 ;;		line 652 in file "main.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;		None
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;		None
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      void 
  1961 ;; Registers used:
  1962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1968 ;;      Params:         0       0       0       0       0       0       0       0       0
  1969 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1970 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1971 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1972 ;;Total ram usage:        0 bytes
  1973 ;; Hardware stack levels used:    1
  1974 ;; Hardware stack levels required when called:    5
  1975 ;; This function calls:
  1976 ;;		_dameDiaActual
  1977 ;;		_dameHoraActual
  1978 ;;		_encenderBombas
  1979 ;;		_horaRegar
  1980 ;;		_lecturaAnalogaSensores
  1981 ;;		_lecturaWifi
  1982 ;; This function is called by:
  1983 ;;		_main
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text1
  1988  001A18                     __ptext1:
  1989                           	opt callstack 0
  1990  001A18                     _sistemaRegado:
  1991                           	opt callstack 25
  1992  001A18                     
  1993                           ;main.c: 656:     if (regando) {
  1994  001A18  0100               	movlb	0	; () banked
  1995  001A1A  517B               	movf	_regando& (0+255),w,b
  1996  001A1C  B4D8               	btfsc	status,2,c
  1997  001A1E  EF13  F00D         	goto	u3701
  1998  001A22  EF15  F00D         	goto	u3700
  1999  001A26                     u3701:
  2000  001A26  EF45  F00D         	goto	l4750
  2001  001A2A                     u3700:
  2002  001A2A                     
  2003                           ; BSR set to: 0
  2004                           ;main.c: 658:         contInterrupciones++;
  2005  001A2A  4B78               	infsnz	_contInterrupciones& (0+255),f,b
  2006  001A2C  2B79               	incf	(_contInterrupciones+1)& (0+255),f,b
  2007  001A2E                     
  2008                           ; BSR set to: 0
  2009                           ;main.c: 660:         if (contInterrupciones == 6) {
  2010  001A2E  0E06               	movlw	6
  2011  001A30  1978               	xorwf	_contInterrupciones& (0+255),w,b
  2012  001A32  1179               	iorwf	(_contInterrupciones+1)& (0+255),w,b
  2013  001A34  A4D8               	btfss	status,2,c
  2014  001A36  EF1F  F00D         	goto	u3711
  2015  001A3A  EF21  F00D         	goto	u3710
  2016  001A3E                     u3711:
  2017  001A3E  EFB5  F00D         	goto	l392
  2018  001A42                     u3710:
  2019  001A42                     
  2020                           ; BSR set to: 0
  2021                           ;main.c: 661:             contInterrupciones = 0;
  2022  001A42  0E00               	movlw	0
  2023  001A44  6F79               	movwf	(_contInterrupciones+1)& (0+255),b
  2024  001A46  0E00               	movlw	0
  2025  001A48  6F78               	movwf	_contInterrupciones& (0+255),b
  2026  001A4A                     
  2027                           ; BSR set to: 0
  2028                           ;main.c: 662:             minutosTranscurridos++;
  2029  001A4A  2B7C               	incf	_minutosTranscurridos& (0+255),f,b
  2030  001A4C                     
  2031                           ; BSR set to: 0
  2032                           ;main.c: 665:             if (minutosTranscurridos >= minutosRegar) {
  2033  001A4C  517D               	movf	_minutosRegar& (0+255),w,b
  2034  001A4E  5D7C               	subwf	_minutosTranscurridos& (0+255),w,b
  2035  001A50  A0D8               	btfss	status,0,c
  2036  001A52  EF2D  F00D         	goto	u3721
  2037  001A56  EF2F  F00D         	goto	u3720
  2038  001A5A                     u3721:
  2039  001A5A  EFB5  F00D         	goto	l392
  2040  001A5E                     u3720:
  2041  001A5E                     
  2042                           ; BSR set to: 0
  2043                           ;main.c: 667:                 LATD = 0;
  2044  001A5E  0E00               	movlw	0
  2045  001A60  6E8C               	movwf	140,c	;volatile
  2046                           
  2047                           ;main.c: 668:                 minutosTranscurridos = 0;
  2048  001A62  0E00               	movlw	0
  2049  001A64  6F7C               	movwf	_minutosTranscurridos& (0+255),b
  2050                           
  2051                           ;main.c: 669:                 regando = 0;
  2052  001A66  0E00               	movlw	0
  2053  001A68  6F7B               	movwf	_regando& (0+255),b
  2054  001A6A                     
  2055                           ; BSR set to: 0
  2056                           ;main.c: 670:                 horarios[hora].regado = 1;
  2057  001A6A  5187               	movf	_hora& (0+255),w,b
  2058  001A6C  0D0C               	mullw	12
  2059  001A6E  0E3C               	movlw	low (_horarios+10)
  2060  001A70  24F3               	addwf	243,w,c
  2061  001A72  6ED9               	movwf	fsr2l,c
  2062  001A74  0E01               	movlw	high (_horarios+10)
  2063  001A76  20F4               	addwfc	prodh,w,c
  2064  001A78  6EDA               	movwf	fsr2h,c
  2065  001A7A  0E01               	movlw	1
  2066  001A7C  6EDF               	movwf	indf2,c
  2067  001A7E                     
  2068                           ; BSR set to: 0
  2069                           ;main.c: 671:                 tempHora = hora;
  2070  001A7E  C087  F081         	movff	_hora,_tempHora
  2071  001A82                     
  2072                           ; BSR set to: 0
  2073                           ;main.c: 672:                 flagRegado = 0;
  2074  001A82  0E00               	movlw	0
  2075  001A84  6F80               	movwf	_flagRegado& (0+255),b
  2076  001A86  EFB5  F00D         	goto	l392
  2077  001A8A                     l4750:
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;main.c: 678:         dameHoraActual();
  2081  001A8A  ECD3  F017         	call	_dameHoraActual	;wreg free
  2082                           
  2083                           ;main.c: 679:         dameDiaActual();
  2084  001A8E  EC85  F018         	call	_dameDiaActual	;wreg free
  2085  001A92                     
  2086                           ;main.c: 681:         if (hora != tempHora && !flagRegado) {
  2087  001A92  0100               	movlb	0	; () banked
  2088  001A94  5181               	movf	_tempHora& (0+255),w,b
  2089  001A96  1987               	xorwf	_hora& (0+255),w,b
  2090  001A98  B4D8               	btfsc	status,2,c
  2091  001A9A  EF51  F00D         	goto	u3731
  2092  001A9E  EF53  F00D         	goto	u3730
  2093  001AA2                     u3731:
  2094  001AA2  EF67  F00D         	goto	l4760
  2095  001AA6                     u3730:
  2096  001AA6                     
  2097                           ; BSR set to: 0
  2098  001AA6  5180               	movf	_flagRegado& (0+255),w,b
  2099  001AA8  A4D8               	btfss	status,2,c
  2100  001AAA  EF59  F00D         	goto	u3741
  2101  001AAE  EF5B  F00D         	goto	u3740
  2102  001AB2                     u3741:
  2103  001AB2  EF67  F00D         	goto	l4760
  2104  001AB6                     u3740:
  2105  001AB6                     
  2106                           ; BSR set to: 0
  2107                           ;main.c: 682:             horarios[tempHora].regado = 0;
  2108  001AB6  5181               	movf	_tempHora& (0+255),w,b
  2109  001AB8  0D0C               	mullw	12
  2110  001ABA  0E3C               	movlw	low (_horarios+10)
  2111  001ABC  24F3               	addwf	243,w,c
  2112  001ABE  6ED9               	movwf	fsr2l,c
  2113  001AC0  0E01               	movlw	high (_horarios+10)
  2114  001AC2  20F4               	addwfc	prodh,w,c
  2115  001AC4  6EDA               	movwf	fsr2h,c
  2116  001AC6  0E00               	movlw	0
  2117  001AC8  6EDF               	movwf	indf2,c
  2118  001ACA                     
  2119                           ; BSR set to: 0
  2120                           ;main.c: 683:             flagRegado = 1;
  2121  001ACA  0E01               	movlw	1
  2122  001ACC  6F80               	movwf	_flagRegado& (0+255),b
  2123  001ACE                     l4760:
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;main.c: 686:         if ((!MODO_COMUNICACION && horaRegar()) || (MODO_COMUNICACION
  2127  001ACE  5188               	movf	_MODO_COMUNICACION& (0+255),w,b
  2128  001AD0  A4D8               	btfss	status,2,c
  2129  001AD2  EF6D  F00D         	goto	u3751
  2130  001AD6  EF6F  F00D         	goto	u3750
  2131  001ADA                     u3751:
  2132  001ADA  EF7A  F00D         	goto	l4764
  2133  001ADE                     u3750:
  2134  001ADE                     
  2135                           ; BSR set to: 0
  2136  001ADE  EC6C  F013         	call	_horaRegar	;wreg free
  2137  001AE2  5001               	movf	?_horaRegar^0,w,c
  2138  001AE4  1002               	iorwf	(?_horaRegar+1)^0,w,c
  2139  001AE6  A4D8               	btfss	status,2,c
  2140  001AE8  EF78  F00D         	goto	u3761
  2141  001AEC  EF7A  F00D         	goto	u3760
  2142  001AF0                     u3761:
  2143  001AF0  EF8E  F00D         	goto	l4768
  2144  001AF4                     u3760:
  2145  001AF4                     l4764:
  2146  001AF4  0100               	movlb	0	; () banked
  2147  001AF6  5188               	movf	_MODO_COMUNICACION& (0+255),w,b
  2148  001AF8  B4D8               	btfsc	status,2,c
  2149  001AFA  EF81  F00D         	goto	u3771
  2150  001AFE  EF83  F00D         	goto	u3770
  2151  001B02                     u3771:
  2152  001B02  EFB5  F00D         	goto	l392
  2153  001B06                     u3770:
  2154  001B06                     
  2155                           ; BSR set to: 0
  2156  001B06  EC6C  F013         	call	_horaRegar	;wreg free
  2157  001B0A  5001               	movf	?_horaRegar^0,w,c
  2158  001B0C  1002               	iorwf	(?_horaRegar+1)^0,w,c
  2159  001B0E  B4D8               	btfsc	status,2,c
  2160  001B10  EF8C  F00D         	goto	u3781
  2161  001B14  EF8E  F00D         	goto	u3780
  2162  001B18                     u3781:
  2163  001B18  EFB5  F00D         	goto	l392
  2164  001B1C                     u3780:
  2165  001B1C                     l4768:
  2166                           
  2167                           ;main.c: 687:                 && horaRegar())) {;main.c: 691:             if (MODO_COMUN
      +                          ICACION) {
  2168  001B1C  0100               	movlb	0	; () banked
  2169  001B1E  5188               	movf	_MODO_COMUNICACION& (0+255),w,b
  2170  001B20  B4D8               	btfsc	status,2,c
  2171  001B22  EF95  F00D         	goto	u3791
  2172  001B26  EF97  F00D         	goto	u3790
  2173  001B2A                     u3791:
  2174  001B2A  EFB1  F00D         	goto	l4778
  2175  001B2E                     u3790:
  2176  001B2E                     
  2177                           ; BSR set to: 0
  2178                           ;main.c: 692:                 lecturaWifi();
  2179  001B2E  ECD7  F011         	call	_lecturaWifi	;wreg free
  2180  001B32                     
  2181                           ;main.c: 693:                 if (peticionLecturaSensores) {
  2182  001B32  0100               	movlb	0	; () banked
  2183  001B34  517A               	movf	_peticionLecturaSensores& (0+255),w,b
  2184  001B36  B4D8               	btfsc	status,2,c
  2185  001B38  EFA0  F00D         	goto	u3801
  2186  001B3C  EFA2  F00D         	goto	u3800
  2187  001B40                     u3801:
  2188  001B40  EFB5  F00D         	goto	l392
  2189  001B44                     u3800:
  2190  001B44                     l4774:
  2191                           
  2192                           ;main.c: 694:                     minutosRegar = horarios[hora].tiempoRegar;
  2193  001B44  0100               	movlb	0	; () banked
  2194  001B46  5187               	movf	_hora& (0+255),w,b
  2195  001B48  0D0C               	mullw	12
  2196  001B4A  0E3D               	movlw	low (_horarios+11)
  2197  001B4C  24F3               	addwf	243,w,c
  2198  001B4E  6ED9               	movwf	fsr2l,c
  2199  001B50  0E01               	movlw	high (_horarios+11)
  2200  001B52  20F4               	addwfc	prodh,w,c
  2201  001B54  6EDA               	movwf	fsr2h,c
  2202  001B56  50DF               	movf	indf2,w,c
  2203  001B58  6F7D               	movwf	_minutosRegar& (0+255),b
  2204  001B5A                     
  2205                           ; BSR set to: 0
  2206                           ;main.c: 695:                     encenderBombas();
  2207  001B5A  ECB3  F005         	call	_encenderBombas	;wreg free
  2208  001B5E  EFB5  F00D         	goto	l392
  2209  001B62                     l4778:
  2210                           
  2211                           ; BSR set to: 0
  2212                           ;main.c: 699:                 lecturaAnalogaSensores();
  2213  001B62  EC8B  F012         	call	_lecturaAnalogaSensores	;wreg free
  2214  001B66  EFA2  F00D         	goto	l4774
  2215  001B6A                     l392:
  2216  001B6A  0012               	return		;funcret
  2217  001B6C                     __end_of_sistemaRegado:
  2218                           	opt callstack 0
  2219                           
  2220 ;; *************** function _horaRegar *****************
  2221 ;; Defined at:
  2222 ;;		line 158 in file "main.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;		None
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;		None
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  2    0[COMRAM] int 
  2229 ;; Registers used:
  2230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2236 ;;      Params:         2       0       0       0       0       0       0       0       0
  2237 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2238 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2239 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2240 ;;Total ram usage:        6 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:    1
  2243 ;; This function calls:
  2244 ;;		Nothing
  2245 ;; This function is called by:
  2246 ;;		_sistemaRegado
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text2
  2251  0026D8                     __ptext2:
  2252                           	opt callstack 0
  2253  0026D8                     _horaRegar:
  2254                           	opt callstack 28
  2255  0026D8                     
  2256                           ;main.c: 160:     return (horarios[hora].regar) && (!horarios[hora].regado) &&
  2257  0026D8  0E00               	movlw	0
  2258  0026DA  6E06               	movwf	_horaRegar$806^0,c
  2259  0026DC  0100               	movlb	0	; () banked
  2260  0026DE  5187               	movf	_hora& (0+255),w,b
  2261  0026E0  0D0C               	mullw	12
  2262  0026E2  0E3B               	movlw	low (_horarios+9)
  2263  0026E4  24F3               	addwf	243,w,c
  2264  0026E6  6ED9               	movwf	fsr2l,c
  2265  0026E8  0E01               	movlw	high (_horarios+9)
  2266  0026EA  20F4               	addwfc	prodh,w,c
  2267  0026EC  6EDA               	movwf	fsr2h,c
  2268  0026EE  50DF               	movf	indf2,w,c
  2269  0026F0  B4D8               	btfsc	status,2,c
  2270  0026F2  EF7D  F013         	goto	u3321
  2271  0026F6  EF7F  F013         	goto	u3320
  2272  0026FA                     u3321:
  2273  0026FA  EFAA  F013         	goto	l4278
  2274  0026FE                     u3320:
  2275  0026FE                     
  2276                           ; BSR set to: 0
  2277  0026FE  5187               	movf	_hora& (0+255),w,b
  2278  002700  0D0C               	mullw	12
  2279  002702  0E3C               	movlw	low (_horarios+10)
  2280  002704  24F3               	addwf	243,w,c
  2281  002706  6ED9               	movwf	fsr2l,c
  2282  002708  0E01               	movlw	high (_horarios+10)
  2283  00270A  20F4               	addwfc	prodh,w,c
  2284  00270C  6EDA               	movwf	fsr2h,c
  2285  00270E  50DF               	movf	indf2,w,c
  2286  002710  A4D8               	btfss	status,2,c
  2287  002712  EF8D  F013         	goto	u3331
  2288  002716  EF8F  F013         	goto	u3330
  2289  00271A                     u3331:
  2290  00271A  EFAA  F013         	goto	l4278
  2291  00271E                     u3330:
  2292  00271E                     
  2293                           ; BSR set to: 0
  2294  00271E  5187               	movf	_hora& (0+255),w,b
  2295  002720  0D0C               	mullw	12
  2296  002722  0E32               	movlw	low _horarios
  2297  002724  6E03               	movwf	??_horaRegar^0,c
  2298  002726  0E01               	movlw	high _horarios
  2299  002728  6E04               	movwf	(??_horaRegar+1)^0,c
  2300  00272A  50F3               	movf	243,w,c
  2301  00272C  2603               	addwf	??_horaRegar^0,f,c
  2302  00272E  50F4               	movf	244,w,c
  2303  002730  2204               	addwfc	(??_horaRegar+1)^0,f,c
  2304  002732  5184               	movf	_diaActual& (0+255),w,b
  2305  002734  2403               	addwf	??_horaRegar^0,w,c
  2306  002736  6ED9               	movwf	fsr2l,c
  2307  002738  0E00               	movlw	0
  2308  00273A  2004               	addwfc	(??_horaRegar+1)^0,w,c
  2309  00273C  6EDA               	movwf	fsr2h,c
  2310  00273E  0E31               	movlw	49
  2311  002740  18DE               	xorwf	postinc2,w,c
  2312  002742  A4D8               	btfss	status,2,c
  2313  002744  EFA6  F013         	goto	u3341
  2314  002748  EFA8  F013         	goto	u3340
  2315  00274C                     u3341:
  2316  00274C  EFAA  F013         	goto	l4278
  2317  002750                     u3340:
  2318  002750                     
  2319                           ; BSR set to: 0
  2320  002750  0E01               	movlw	1
  2321  002752  6E06               	movwf	_horaRegar$806^0,c
  2322  002754                     l4278:
  2323                           
  2324                           ; BSR set to: 0
  2325  002754  C006  F001         	movff	_horaRegar$806,?_horaRegar
  2326  002758  6A02               	clrf	(?_horaRegar+1)^0,c
  2327  00275A                     
  2328                           ; BSR set to: 0
  2329  00275A  0012               	return		;funcret
  2330  00275C                     __end_of_horaRegar:
  2331                           	opt callstack 0
  2332                           
  2333 ;; *************** function _encenderBombas *****************
  2334 ;; Defined at:
  2335 ;;		line 317 in file "main.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;		None
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;  i               2   16[COMRAM] int 
  2340 ;;  flagSeco        1   15[COMRAM] unsigned char 
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  1    wreg      void 
  2343 ;; Registers used:
  2344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2350 ;;      Params:         0       0       0       0       0       0       0       0       0
  2351 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2352 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2353 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2354 ;;Total ram usage:        5 bytes
  2355 ;; Hardware stack levels used:    1
  2356 ;; Hardware stack levels required when called:    4
  2357 ;; This function calls:
  2358 ;;		_estaSeco
  2359 ;; This function is called by:
  2360 ;;		_sistemaRegado
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           	psect	text3
  2365  000B66                     __ptext3:
  2366                           	opt callstack 0
  2367  000B66                     _encenderBombas:
  2368                           	opt callstack 25
  2369  000B66                     
  2370                           ;main.c: 319:     char flagSeco = 0;
  2371  000B66  0E00               	movlw	0
  2372  000B68  6E10               	movwf	encenderBombas@flagSeco^0,c
  2373                           
  2374                           ;main.c: 321:     for (int i = 0; i < 1; i++) {
  2375  000B6A  0E00               	movlw	0
  2376  000B6C  6E12               	movwf	(encenderBombas@i+1)^0,c
  2377  000B6E  0E00               	movlw	0
  2378  000B70  6E11               	movwf	encenderBombas@i^0,c
  2379  000B72  EF95  F006         	goto	l4390
  2380  000B76                     l4340:
  2381                           
  2382                           ;main.c: 326:                 if (estaSeco(sensores[i])) {
  2383  000B76  90D8               	bcf	status,0,c
  2384  000B78  3411               	rlcf	encenderBombas@i^0,w,c
  2385  000B7A  6ED9               	movwf	fsr2l,c
  2386  000B7C  3412               	rlcf	(encenderBombas@i+1)^0,w,c
  2387  000B7E  6EDA               	movwf	fsr2h,c
  2388  000B80  0E60               	movlw	low _sensores
  2389  000B82  26D9               	addwf	fsr2l,f,c
  2390  000B84  0E00               	movlw	high _sensores
  2391  000B86  22DA               	addwfc	fsr2h,f,c
  2392  000B88  CFDE F00B          	movff	postinc2,estaSeco@s
  2393  000B8C  CFDD F00C          	movff	postdec2,estaSeco@s+1
  2394  000B90  EC85  F017         	call	_estaSeco	;wreg free
  2395  000B94  500B               	movf	?_estaSeco^0,w,c
  2396  000B96  100C               	iorwf	(?_estaSeco+1)^0,w,c
  2397  000B98  B4D8               	btfsc	status,2,c
  2398  000B9A  EFD1  F005         	goto	u3391
  2399  000B9E  EFD3  F005         	goto	u3390
  2400  000BA2                     u3391:
  2401  000BA2  EFC3  F006         	goto	l4392
  2402  000BA6                     u3390:
  2403  000BA6                     
  2404                           ;main.c: 327:                     LATDbits.LATD0 = 1;
  2405  000BA6  808C               	bsf	140,0,c	;volatile
  2406  000BA8                     l4344:
  2407                           
  2408                           ;main.c: 328:                     flagSeco = 1;
  2409  000BA8  0E01               	movlw	1
  2410  000BAA  6E10               	movwf	encenderBombas@flagSeco^0,c
  2411  000BAC  EFC3  F006         	goto	l4392
  2412  000BB0                     l4346:
  2413                           
  2414                           ;main.c: 333:                 if (estaSeco(sensores[i])) {
  2415  000BB0  90D8               	bcf	status,0,c
  2416  000BB2  3411               	rlcf	encenderBombas@i^0,w,c
  2417  000BB4  6ED9               	movwf	fsr2l,c
  2418  000BB6  3412               	rlcf	(encenderBombas@i+1)^0,w,c
  2419  000BB8  6EDA               	movwf	fsr2h,c
  2420  000BBA  0E60               	movlw	low _sensores
  2421  000BBC  26D9               	addwf	fsr2l,f,c
  2422  000BBE  0E00               	movlw	high _sensores
  2423  000BC0  22DA               	addwfc	fsr2h,f,c
  2424  000BC2  CFDE F00B          	movff	postinc2,estaSeco@s
  2425  000BC6  CFDD F00C          	movff	postdec2,estaSeco@s+1
  2426  000BCA  EC85  F017         	call	_estaSeco	;wreg free
  2427  000BCE  500B               	movf	?_estaSeco^0,w,c
  2428  000BD0  100C               	iorwf	(?_estaSeco+1)^0,w,c
  2429  000BD2  B4D8               	btfsc	status,2,c
  2430  000BD4  EFEE  F005         	goto	u3401
  2431  000BD8  EFF0  F005         	goto	u3400
  2432  000BDC                     u3401:
  2433  000BDC  EFC3  F006         	goto	l4392
  2434  000BE0                     u3400:
  2435  000BE0                     
  2436                           ;main.c: 334:                     LATDbits.LATD1 = 1;
  2437  000BE0  828C               	bsf	140,1,c	;volatile
  2438  000BE2  EFD4  F005         	goto	l4344
  2439  000BE6                     l4352:
  2440                           
  2441                           ;main.c: 340:                 if (estaSeco(sensores[i])) {
  2442  000BE6  90D8               	bcf	status,0,c
  2443  000BE8  3411               	rlcf	encenderBombas@i^0,w,c
  2444  000BEA  6ED9               	movwf	fsr2l,c
  2445  000BEC  3412               	rlcf	(encenderBombas@i+1)^0,w,c
  2446  000BEE  6EDA               	movwf	fsr2h,c
  2447  000BF0  0E60               	movlw	low _sensores
  2448  000BF2  26D9               	addwf	fsr2l,f,c
  2449  000BF4  0E00               	movlw	high _sensores
  2450  000BF6  22DA               	addwfc	fsr2h,f,c
  2451  000BF8  CFDE F00B          	movff	postinc2,estaSeco@s
  2452  000BFC  CFDD F00C          	movff	postdec2,estaSeco@s+1
  2453  000C00  EC85  F017         	call	_estaSeco	;wreg free
  2454  000C04  500B               	movf	?_estaSeco^0,w,c
  2455  000C06  100C               	iorwf	(?_estaSeco+1)^0,w,c
  2456  000C08  B4D8               	btfsc	status,2,c
  2457  000C0A  EF09  F006         	goto	u3411
  2458  000C0E  EF0B  F006         	goto	u3410
  2459  000C12                     u3411:
  2460  000C12  EFC3  F006         	goto	l4392
  2461  000C16                     u3410:
  2462  000C16                     
  2463                           ;main.c: 341:                     LATDbits.LATD2 = 1;
  2464  000C16  848C               	bsf	140,2,c	;volatile
  2465  000C18  EFD4  F005         	goto	l4344
  2466  000C1C                     l4358:
  2467                           
  2468                           ;main.c: 347:                 if (estaSeco(sensores[i])) {
  2469  000C1C  90D8               	bcf	status,0,c
  2470  000C1E  3411               	rlcf	encenderBombas@i^0,w,c
  2471  000C20  6ED9               	movwf	fsr2l,c
  2472  000C22  3412               	rlcf	(encenderBombas@i+1)^0,w,c
  2473  000C24  6EDA               	movwf	fsr2h,c
  2474  000C26  0E60               	movlw	low _sensores
  2475  000C28  26D9               	addwf	fsr2l,f,c
  2476  000C2A  0E00               	movlw	high _sensores
  2477  000C2C  22DA               	addwfc	fsr2h,f,c
  2478  000C2E  CFDE F00B          	movff	postinc2,estaSeco@s
  2479  000C32  CFDD F00C          	movff	postdec2,estaSeco@s+1
  2480  000C36  EC85  F017         	call	_estaSeco	;wreg free
  2481  000C3A  500B               	movf	?_estaSeco^0,w,c
  2482  000C3C  100C               	iorwf	(?_estaSeco+1)^0,w,c
  2483  000C3E  B4D8               	btfsc	status,2,c
  2484  000C40  EF24  F006         	goto	u3421
  2485  000C44  EF26  F006         	goto	u3420
  2486  000C48                     u3421:
  2487  000C48  EFC3  F006         	goto	l4392
  2488  000C4C                     u3420:
  2489  000C4C                     
  2490                           ;main.c: 348:                     LATDbits.LATD3 = 1;
  2491  000C4C  868C               	bsf	140,3,c	;volatile
  2492  000C4E  EFD4  F005         	goto	l4344
  2493  000C52                     l4364:
  2494                           
  2495                           ;main.c: 354:                 if (estaSeco(sensores[i])) {
  2496  000C52  90D8               	bcf	status,0,c
  2497  000C54  3411               	rlcf	encenderBombas@i^0,w,c
  2498  000C56  6ED9               	movwf	fsr2l,c
  2499  000C58  3412               	rlcf	(encenderBombas@i+1)^0,w,c
  2500  000C5A  6EDA               	movwf	fsr2h,c
  2501  000C5C  0E60               	movlw	low _sensores
  2502  000C5E  26D9               	addwf	fsr2l,f,c
  2503  000C60  0E00               	movlw	high _sensores
  2504  000C62  22DA               	addwfc	fsr2h,f,c
  2505  000C64  CFDE F00B          	movff	postinc2,estaSeco@s
  2506  000C68  CFDD F00C          	movff	postdec2,estaSeco@s+1
  2507  000C6C  EC85  F017         	call	_estaSeco	;wreg free
  2508  000C70  500B               	movf	?_estaSeco^0,w,c
  2509  000C72  100C               	iorwf	(?_estaSeco+1)^0,w,c
  2510  000C74  B4D8               	btfsc	status,2,c
  2511  000C76  EF3F  F006         	goto	u3431
  2512  000C7A  EF41  F006         	goto	u3430
  2513  000C7E                     u3431:
  2514  000C7E  EFC3  F006         	goto	l4392
  2515  000C82                     u3430:
  2516  000C82                     
  2517                           ;main.c: 355:                     LATDbits.LATD4 = 1;
  2518  000C82  888C               	bsf	140,4,c	;volatile
  2519  000C84  EFD4  F005         	goto	l4344
  2520  000C88                     l4370:
  2521                           
  2522                           ;main.c: 361:                 if (estaSeco(sensores[i])) {
  2523  000C88  90D8               	bcf	status,0,c
  2524  000C8A  3411               	rlcf	encenderBombas@i^0,w,c
  2525  000C8C  6ED9               	movwf	fsr2l,c
  2526  000C8E  3412               	rlcf	(encenderBombas@i+1)^0,w,c
  2527  000C90  6EDA               	movwf	fsr2h,c
  2528  000C92  0E60               	movlw	low _sensores
  2529  000C94  26D9               	addwf	fsr2l,f,c
  2530  000C96  0E00               	movlw	high _sensores
  2531  000C98  22DA               	addwfc	fsr2h,f,c
  2532  000C9A  CFDE F00B          	movff	postinc2,estaSeco@s
  2533  000C9E  CFDD F00C          	movff	postdec2,estaSeco@s+1
  2534  000CA2  EC85  F017         	call	_estaSeco	;wreg free
  2535  000CA6  500B               	movf	?_estaSeco^0,w,c
  2536  000CA8  100C               	iorwf	(?_estaSeco+1)^0,w,c
  2537  000CAA  B4D8               	btfsc	status,2,c
  2538  000CAC  EF5A  F006         	goto	u3441
  2539  000CB0  EF5C  F006         	goto	u3440
  2540  000CB4                     u3441:
  2541  000CB4  EFC3  F006         	goto	l4392
  2542  000CB8                     u3440:
  2543  000CB8                     
  2544                           ;main.c: 362:                     LATDbits.LATD5 = 1;
  2545  000CB8  8A8C               	bsf	140,5,c	;volatile
  2546  000CBA  EFD4  F005         	goto	l4344
  2547  000CBE                     l4376:
  2548                           
  2549                           ;main.c: 368:                 if (estaSeco(sensores[i])) {
  2550  000CBE  90D8               	bcf	status,0,c
  2551  000CC0  3411               	rlcf	encenderBombas@i^0,w,c
  2552  000CC2  6ED9               	movwf	fsr2l,c
  2553  000CC4  3412               	rlcf	(encenderBombas@i+1)^0,w,c
  2554  000CC6  6EDA               	movwf	fsr2h,c
  2555  000CC8  0E60               	movlw	low _sensores
  2556  000CCA  26D9               	addwf	fsr2l,f,c
  2557  000CCC  0E00               	movlw	high _sensores
  2558  000CCE  22DA               	addwfc	fsr2h,f,c
  2559  000CD0  CFDE F00B          	movff	postinc2,estaSeco@s
  2560  000CD4  CFDD F00C          	movff	postdec2,estaSeco@s+1
  2561  000CD8  EC85  F017         	call	_estaSeco	;wreg free
  2562  000CDC  500B               	movf	?_estaSeco^0,w,c
  2563  000CDE  100C               	iorwf	(?_estaSeco+1)^0,w,c
  2564  000CE0  B4D8               	btfsc	status,2,c
  2565  000CE2  EF75  F006         	goto	u3451
  2566  000CE6  EF77  F006         	goto	u3450
  2567  000CEA                     u3451:
  2568  000CEA  EFC3  F006         	goto	l4392
  2569  000CEE                     u3450:
  2570  000CEE                     
  2571                           ;main.c: 369:                     LATDbits.LATD6 = 1;
  2572  000CEE  8C8C               	bsf	140,6,c	;volatile
  2573  000CF0  EFD4  F005         	goto	l4344
  2574  000CF4                     l4382:
  2575                           
  2576                           ;main.c: 375:                 if (estaSeco(sensores[i])) {
  2577  000CF4  90D8               	bcf	status,0,c
  2578  000CF6  3411               	rlcf	encenderBombas@i^0,w,c
  2579  000CF8  6ED9               	movwf	fsr2l,c
  2580  000CFA  3412               	rlcf	(encenderBombas@i+1)^0,w,c
  2581  000CFC  6EDA               	movwf	fsr2h,c
  2582  000CFE  0E60               	movlw	low _sensores
  2583  000D00  26D9               	addwf	fsr2l,f,c
  2584  000D02  0E00               	movlw	high _sensores
  2585  000D04  22DA               	addwfc	fsr2h,f,c
  2586  000D06  CFDE F00B          	movff	postinc2,estaSeco@s
  2587  000D0A  CFDD F00C          	movff	postdec2,estaSeco@s+1
  2588  000D0E  EC85  F017         	call	_estaSeco	;wreg free
  2589  000D12  500B               	movf	?_estaSeco^0,w,c
  2590  000D14  100C               	iorwf	(?_estaSeco+1)^0,w,c
  2591  000D16  B4D8               	btfsc	status,2,c
  2592  000D18  EF90  F006         	goto	u3461
  2593  000D1C  EF92  F006         	goto	u3460
  2594  000D20                     u3461:
  2595  000D20  EFC3  F006         	goto	l4392
  2596  000D24                     u3460:
  2597  000D24                     
  2598                           ;main.c: 376:                     LATDbits.LATD7 = 1;
  2599  000D24  8E8C               	bsf	140,7,c	;volatile
  2600  000D26  EFD4  F005         	goto	l4344
  2601  000D2A                     l4390:
  2602  000D2A  C011  F00E         	movff	encenderBombas@i,??_encenderBombas
  2603  000D2E  C012  F00F         	movff	encenderBombas@i+1,??_encenderBombas+1
  2604                           
  2605                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2606                           ; Switch size 1, requested type "simple"
  2607                           ; Number of cases is 1, Range of values is 0 to 0
  2608                           ; switch strategies available:
  2609                           ; Name         Instructions Cycles
  2610                           ; simple_byte            4     3 (average)
  2611                           ;	Chosen strategy is simple_byte
  2612  000D32  500F               	movf	(??_encenderBombas+1)^0,w,c
  2613  000D34  0A00               	xorlw	0	; case 0
  2614  000D36  B4D8               	btfsc	status,2,c
  2615  000D38  EFA0  F006         	goto	l5076
  2616  000D3C  EFC3  F006         	goto	l4392
  2617  000D40                     l5076:
  2618                           
  2619                           ; Switch size 1, requested type "simple"
  2620                           ; Number of cases is 8, Range of values is 0 to 7
  2621                           ; switch strategies available:
  2622                           ; Name         Instructions Cycles
  2623                           ; simple_byte           25    13 (average)
  2624                           ;	Chosen strategy is simple_byte
  2625  000D40  500E               	movf	??_encenderBombas^0,w,c
  2626  000D42  0A00               	xorlw	0	; case 0
  2627  000D44  B4D8               	btfsc	status,2,c
  2628  000D46  EFBB  F005         	goto	l4340
  2629  000D4A  0A01               	xorlw	1	; case 1
  2630  000D4C  B4D8               	btfsc	status,2,c
  2631  000D4E  EFD8  F005         	goto	l4346
  2632  000D52  0A03               	xorlw	3	; case 2
  2633  000D54  B4D8               	btfsc	status,2,c
  2634  000D56  EFF3  F005         	goto	l4352
  2635  000D5A  0A01               	xorlw	1	; case 3
  2636  000D5C  B4D8               	btfsc	status,2,c
  2637  000D5E  EF0E  F006         	goto	l4358
  2638  000D62  0A07               	xorlw	7	; case 4
  2639  000D64  B4D8               	btfsc	status,2,c
  2640  000D66  EF29  F006         	goto	l4364
  2641  000D6A  0A01               	xorlw	1	; case 5
  2642  000D6C  B4D8               	btfsc	status,2,c
  2643  000D6E  EF44  F006         	goto	l4370
  2644  000D72  0A03               	xorlw	3	; case 6
  2645  000D74  B4D8               	btfsc	status,2,c
  2646  000D76  EF5F  F006         	goto	l4376
  2647  000D7A  0A01               	xorlw	1	; case 7
  2648  000D7C  B4D8               	btfsc	status,2,c
  2649  000D7E  EF7A  F006         	goto	l4382
  2650  000D82  EFC3  F006         	goto	l4392
  2651  000D86                     l4392:
  2652                           
  2653                           ;main.c: 382:     }
  2654  000D86  4A11               	infsnz	encenderBombas@i^0,f,c
  2655  000D88  2A12               	incf	(encenderBombas@i+1)^0,f,c
  2656  000D8A  BE12               	btfsc	(encenderBombas@i+1)^0,7,c
  2657  000D8C  EFD0  F006         	goto	u3471
  2658  000D90  5012               	movf	(encenderBombas@i+1)^0,w,c
  2659  000D92  E108               	bnz	u3470
  2660  000D94  0411               	decf	encenderBombas@i^0,w,c
  2661  000D96  A0D8               	btfss	status,0,c
  2662  000D98  EFD0  F006         	goto	u3471
  2663  000D9C  EFD2  F006         	goto	u3470
  2664  000DA0                     u3471:
  2665  000DA0  EF95  F006         	goto	l4390
  2666  000DA4                     u3470:
  2667  000DA4                     
  2668                           ;main.c: 384:     if (flagSeco) {
  2669  000DA4  5010               	movf	encenderBombas@flagSeco^0,w,c
  2670  000DA6  B4D8               	btfsc	status,2,c
  2671  000DA8  EFD8  F006         	goto	u3481
  2672  000DAC  EFDA  F006         	goto	u3480
  2673  000DB0                     u3481:
  2674  000DB0  EFE7  F006         	goto	l308
  2675  000DB4                     u3480:
  2676  000DB4                     
  2677                           ;main.c: 385:         regando = 1;
  2678  000DB4  0E01               	movlw	1
  2679  000DB6  0100               	movlb	0	; () banked
  2680  000DB8  6F7B               	movwf	_regando& (0+255),b
  2681  000DBA                     
  2682                           ; BSR set to: 0
  2683                           ;main.c: 386:         horarios[hora].regado = 0;
  2684  000DBA  5187               	movf	_hora& (0+255),w,b
  2685  000DBC  0D0C               	mullw	12
  2686  000DBE  0E3C               	movlw	low (_horarios+10)
  2687  000DC0  24F3               	addwf	243,w,c
  2688  000DC2  6ED9               	movwf	fsr2l,c
  2689  000DC4  0E01               	movlw	high (_horarios+10)
  2690  000DC6  20F4               	addwfc	prodh,w,c
  2691  000DC8  6EDA               	movwf	fsr2h,c
  2692  000DCA  0E00               	movlw	0
  2693  000DCC  6EDF               	movwf	indf2,c
  2694  000DCE                     l308:
  2695  000DCE  0012               	return		;funcret
  2696  000DD0                     __end_of_encenderBombas:
  2697                           	opt callstack 0
  2698                           
  2699 ;; *************** function _estaSeco *****************
  2700 ;; Defined at:
  2701 ;;		line 150 in file "main.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  s               2   10[COMRAM] struct .
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  2   10[COMRAM] int 
  2708 ;; Registers used:
  2709 ;;		wreg, status,2, status,0, cstack
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2715 ;;      Params:         2       0       0       0       0       0       0       0       0
  2716 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2717 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2718 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2719 ;;Total ram usage:        3 bytes
  2720 ;; Hardware stack levels used:    1
  2721 ;; Hardware stack levels required when called:    3
  2722 ;; This function calls:
  2723 ;;		_dameTemperaturaHumedad
  2724 ;; This function is called by:
  2725 ;;		_encenderBombas
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           	psect	text4
  2730  002F0A                     __ptext4:
  2731                           	opt callstack 0
  2732  002F0A                     _estaSeco:
  2733                           	opt callstack 25
  2734  002F0A                     
  2735                           ;main.c: 152:     dameTemperaturaHumedad();
  2736  002F0A  EC28  F013         	call	_dameTemperaturaHumedad	;wreg free
  2737  002F0E                     
  2738                           ;main.c: 155:     return (s.porcientoHumedad < 94) && (Temperatura < 34);
  2739  002F0E  0E00               	movlw	0
  2740  002F10  6E0D               	movwf	_estaSeco$799^0,c
  2741  002F12  0E5E               	movlw	94
  2742  002F14  600B               	cpfslt	estaSeco@s^0,c
  2743  002F16  EF8F  F017         	goto	u3231
  2744  002F1A  EF91  F017         	goto	u3230
  2745  002F1E                     u3231:
  2746  002F1E  EF9C  F017         	goto	l4140
  2747  002F22                     u3230:
  2748  002F22  0E22               	movlw	34
  2749  002F24  0100               	movlb	0	; () banked
  2750  002F26  617F               	cpfslt	_Temperatura& (0+255),b
  2751  002F28  EF98  F017         	goto	u3241
  2752  002F2C  EF9A  F017         	goto	u3240
  2753  002F30                     u3241:
  2754  002F30  EF9C  F017         	goto	l4140
  2755  002F34                     u3240:
  2756  002F34                     
  2757                           ; BSR set to: 0
  2758  002F34  0E01               	movlw	1
  2759  002F36  6E0D               	movwf	_estaSeco$799^0,c
  2760  002F38                     l4140:
  2761  002F38  C00D  F00B         	movff	_estaSeco$799,?_estaSeco
  2762  002F3C  6A0C               	clrf	(?_estaSeco+1)^0,c
  2763  002F3E  0012               	return		;funcret
  2764  002F40                     __end_of_estaSeco:
  2765                           	opt callstack 0
  2766                           
  2767 ;; *************** function _dameHoraActual *****************
  2768 ;; Defined at:
  2769 ;;		line 183 in file "main.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;		None
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;		None
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      void 
  2776 ;; Registers used:
  2777 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2783 ;;      Params:         0       0       0       0       0       0       0       0       0
  2784 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2785 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2786 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2787 ;;Total ram usage:        0 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    4
  2790 ;; This function calls:
  2791 ;;		_convertirDato
  2792 ;;		_leer_rtc
  2793 ;; This function is called by:
  2794 ;;		_sistemaRegado
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text5
  2799  002FA6                     __ptext5:
  2800                           	opt callstack 0
  2801  002FA6                     _dameHoraActual:
  2802                           	opt callstack 25
  2803  002FA6                     
  2804                           ;main.c: 185:     segundos = convertirDato(leer_rtc(0x00));
  2805  002FA6  0E00               	movlw	0
  2806  002FA8  ECE9  F017         	call	_leer_rtc
  2807  002FAC  EC24  F018         	call	_convertirDato
  2808  002FB0  0100               	movlb	0	; () banked
  2809  002FB2  6F85               	movwf	_segundos& (0+255),b
  2810                           
  2811                           ;main.c: 186:     minutos = convertirDato(leer_rtc(0x01));
  2812  002FB4  0E01               	movlw	1
  2813  002FB6  ECE9  F017         	call	_leer_rtc
  2814  002FBA  EC24  F018         	call	_convertirDato
  2815  002FBE  0100               	movlb	0	; () banked
  2816  002FC0  6F86               	movwf	_minutos& (0+255),b
  2817                           
  2818                           ;main.c: 187:     hora = convertirDato(leer_rtc(0x02));
  2819  002FC2  0E02               	movlw	2
  2820  002FC4  ECE9  F017         	call	_leer_rtc
  2821  002FC8  EC24  F018         	call	_convertirDato
  2822  002FCC  0100               	movlb	0	; () banked
  2823  002FCE  6F87               	movwf	_hora& (0+255),b
  2824  002FD0                     
  2825                           ; BSR set to: 0
  2826  002FD0  0012               	return		;funcret
  2827  002FD2                     __end_of_dameHoraActual:
  2828                           	opt callstack 0
  2829                           
  2830 ;; *************** function _dameDiaActual *****************
  2831 ;; Defined at:
  2832 ;;		line 190 in file "main.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;		None
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1    wreg      void 
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2846 ;;      Params:         0       0       0       0       0       0       0       0       0
  2847 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2848 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2849 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2850 ;;Total ram usage:        0 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:    4
  2853 ;; This function calls:
  2854 ;;		_convertirDato
  2855 ;;		_leer_rtc
  2856 ;; This function is called by:
  2857 ;;		_sistemaRegado
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861                           	psect	text6
  2862  00310A                     __ptext6:
  2863                           	opt callstack 0
  2864  00310A                     _dameDiaActual:
  2865                           	opt callstack 25
  2866  00310A                     
  2867                           ;main.c: 192:     diaActual = convertirDato(leer_rtc(0x03));
  2868  00310A  0E03               	movlw	3
  2869  00310C  ECE9  F017         	call	_leer_rtc
  2870  003110  EC24  F018         	call	_convertirDato
  2871  003114  0100               	movlb	0	; () banked
  2872  003116  6F84               	movwf	_diaActual& (0+255),b
  2873  003118                     
  2874                           ; BSR set to: 0
  2875  003118  0012               	return		;funcret
  2876  00311A                     __end_of_dameDiaActual:
  2877                           	opt callstack 0
  2878                           
  2879 ;; *************** function _leer_rtc *****************
  2880 ;; Defined at:
  2881 ;;		line 13 in file "./RTC.h"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;  direccion       1    wreg     unsigned char 
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;  direccion       1    2[COMRAM] unsigned char 
  2886 ;;  dato            1    3[COMRAM] unsigned char 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  1    wreg      unsigned char 
  2889 ;; Registers used:
  2890 ;;		wreg, status,2, status,0, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2896 ;;      Params:         0       0       0       0       0       0       0       0       0
  2897 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2898 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2899 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2900 ;;Total ram usage:        2 bytes
  2901 ;; Hardware stack levels used:    1
  2902 ;; Hardware stack levels required when called:    3
  2903 ;; This function calls:
  2904 ;;		_i2c_detener
  2905 ;;		_i2c_envia_dato
  2906 ;;		_i2c_inicia_com
  2907 ;;		_i2c_recibe_dato
  2908 ;;		_i2c_reinicia_com
  2909 ;; This function is called by:
  2910 ;;		_dameHoraActual
  2911 ;;		_dameDiaActual
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           	psect	text7
  2916  002FD2                     __ptext7:
  2917                           	opt callstack 0
  2918  002FD2                     _leer_rtc:
  2919                           	opt callstack 25
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;incstack = 0
  2923                           ;leer_rtc@direccion stored from wreg
  2924  002FD2  6E03               	movwf	leer_rtc@direccion^0,c
  2925  002FD4                     
  2926                           ;./RTC.h: 14:     unsigned char dato;;./RTC.h: 15:     i2c_inicia_com();
  2927  002FD4  ECA7  F018         	call	_i2c_inicia_com	;wreg free
  2928                           
  2929                           ;./RTC.h: 16:     i2c_envia_dato(0xD0);
  2930  002FD8  0ED0               	movlw	208
  2931  002FDA  EC8D  F018         	call	_i2c_envia_dato
  2932                           
  2933                           ;./RTC.h: 17:     i2c_envia_dato(direccion);
  2934  002FDE  5003               	movf	leer_rtc@direccion^0,w,c
  2935  002FE0  EC8D  F018         	call	_i2c_envia_dato
  2936                           
  2937                           ;./RTC.h: 18:     i2c_reinicia_com();
  2938  002FE4  ECA3  F018         	call	_i2c_reinicia_com	;wreg free
  2939                           
  2940                           ;./RTC.h: 19:     i2c_envia_dato(0xD1);
  2941  002FE8  0ED1               	movlw	209
  2942  002FEA  EC8D  F018         	call	_i2c_envia_dato
  2943                           
  2944                           ;./RTC.h: 20:     dato = i2c_recibe_dato();
  2945  002FEE  EC62  F018         	call	_i2c_recibe_dato	;wreg free
  2946  002FF2  6E04               	movwf	leer_rtc@dato^0,c
  2947                           
  2948                           ;./RTC.h: 21:     i2c_detener();
  2949  002FF4  ECAB  F018         	call	_i2c_detener	;wreg free
  2950  002FF8                     
  2951                           ;./RTC.h: 22:     return dato;
  2952  002FF8  5004               	movf	leer_rtc@dato^0,w,c
  2953  002FFA  0012               	return		;funcret
  2954  002FFC                     __end_of_leer_rtc:
  2955                           	opt callstack 0
  2956                           
  2957 ;; *************** function _convertirDato *****************
  2958 ;; Defined at:
  2959 ;;		line 28 in file "./RTC.h"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  dato            1    wreg     unsigned char 
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;  dato            1    1[COMRAM] unsigned char 
  2964 ;;  datoR           1    2[COMRAM] unsigned char 
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      unsigned char 
  2967 ;; Registers used:
  2968 ;;		wreg, status,2, status,0, prodl, prodh
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2974 ;;      Params:         0       0       0       0       0       0       0       0       0
  2975 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2976 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2977 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2978 ;;Total ram usage:        3 bytes
  2979 ;; Hardware stack levels used:    1
  2980 ;; Hardware stack levels required when called:    1
  2981 ;; This function calls:
  2982 ;;		Nothing
  2983 ;; This function is called by:
  2984 ;;		_dameHoraActual
  2985 ;;		_dameDiaActual
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           	psect	text8
  2990  003048                     __ptext8:
  2991                           	opt callstack 0
  2992  003048                     _convertirDato:
  2993                           	opt callstack 27
  2994                           
  2995                           ;incstack = 0
  2996                           ;convertirDato@dato stored from wreg
  2997  003048  6E02               	movwf	convertirDato@dato^0,c
  2998  00304A                     
  2999                           ;./RTC.h: 30:     datoR = (dato & 0xF0) >> 4;
  3000  00304A  3802               	swapf	convertirDato@dato^0,w,c
  3001  00304C  0B0F               	andlw	15
  3002  00304E  0B0F               	andlw	15
  3003  003050  6E03               	movwf	convertirDato@datoR^0,c
  3004  003052                     
  3005                           ;./RTC.h: 31:     datoR = (datoR * 10) + (dato & 0x0F);
  3006  003052  C002  F001         	movff	convertirDato@dato,??_convertirDato
  3007  003056  0E0F               	movlw	15
  3008  003058  1601               	andwf	??_convertirDato^0,f,c
  3009  00305A  5003               	movf	convertirDato@datoR^0,w,c
  3010  00305C  0D0A               	mullw	10
  3011  00305E  50F3               	movf	243,w,c
  3012  003060  2401               	addwf	??_convertirDato^0,w,c
  3013  003062  6E03               	movwf	convertirDato@datoR^0,c
  3014  003064                     
  3015                           ;./RTC.h: 32:     return datoR;
  3016  003064  5003               	movf	convertirDato@datoR^0,w,c
  3017  003066  0012               	return		;funcret
  3018  003068                     __end_of_convertirDato:
  3019                           	opt callstack 0
  3020                           
  3021 ;; *************** function _sistemaPrincipal *****************
  3022 ;; Defined at:
  3023 ;;		line 600 in file "main.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;  opcion          1    wreg     unsigned char 
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;  opcion          1   70[BANK0 ] unsigned char 
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  1    wreg      void 
  3030 ;; Registers used:
  3031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3037 ;;      Params:         0       0       0       0       0       0       0       0       0
  3038 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3039 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3040 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3041 ;;Total ram usage:        3 bytes
  3042 ;; Hardware stack levels used:    1
  3043 ;; Hardware stack levels required when called:   10
  3044 ;; This function calls:
  3045 ;;		_asignarHorarios
  3046 ;;		_dameDatosSistema
  3047 ;;		_fijaDiaRtc
  3048 ;;		_fijaHoraRtc
  3049 ;;		_leeHorariosMemoria
  3050 ;;		_mostrarDatosSensores
  3051 ;;		_mostrarDatosSensoresWIFI
  3052 ;;		_regadoRapido
  3053 ;;		_setTiempoRegar
  3054 ;; This function is called by:
  3055 ;;		_main
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text9
  3060  0022EC                     __ptext9:
  3061                           	opt callstack 0
  3062  0022EC                     _sistemaPrincipal:
  3063                           	opt callstack 20
  3064                           
  3065                           ;incstack = 0
  3066                           ;sistemaPrincipal@opcion stored from wreg
  3067  0022EC  0100               	movlb	0	; () banked
  3068  0022EE  6FF3               	movwf	sistemaPrincipal@opcion& (0+255),b
  3069  0022F0                     
  3070                           ;main.c: 602:     PIE1bits.RCIE = 0;
  3071  0022F0  9A9D               	bcf	157,5,c	;volatile
  3072                           
  3073                           ;main.c: 604:     switch (opcion) {
  3074  0022F2  EFA7  F011         	goto	l4724
  3075  0022F6                     l4702:
  3076                           
  3077                           ; BSR set to: 0
  3078                           ;main.c: 607:             fijaHoraRtc();
  3079  0022F6  EC2C  F017         	call	_fijaHoraRtc	;wreg free
  3080                           
  3081                           ;main.c: 608:             break;
  3082  0022FA  EFD5  F011         	goto	l365
  3083  0022FE                     l4704:
  3084                           
  3085                           ; BSR set to: 0
  3086                           ;main.c: 611:             asignarHorarios();
  3087  0022FE  ECB6  F00D         	call	_asignarHorarios	;wreg free
  3088                           
  3089                           ;main.c: 612:             break;
  3090  002302  EFD5  F011         	goto	l365
  3091  002306                     l4706:
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;main.c: 615:             setTiempoRegar();
  3095  002306  ECEB  F013         	call	_setTiempoRegar	;wreg free
  3096                           
  3097                           ;main.c: 616:             break;
  3098  00230A  EFD5  F011         	goto	l365
  3099  00230E                     l4708:
  3100                           
  3101                           ; BSR set to: 0
  3102                           ;main.c: 619:             dameDatosSistema();
  3103  00230E  ECCA  F002         	call	_dameDatosSistema	;wreg free
  3104                           
  3105                           ;main.c: 620:             break;
  3106  002312  EFD5  F011         	goto	l365
  3107  002316                     l4710:
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;main.c: 623:             if (MODO_COMUNICACION)
  3111  002316  5188               	movf	_MODO_COMUNICACION& (0+255),w,b
  3112  002318  B4D8               	btfsc	status,2,c
  3113  00231A  EF91  F011         	goto	u3691
  3114  00231E  EF93  F011         	goto	u3690
  3115  002322                     u3691:
  3116  002322  EF97  F011         	goto	l4714
  3117  002326                     u3690:
  3118  002326                     
  3119                           ; BSR set to: 0
  3120                           ;main.c: 624:                 mostrarDatosSensoresWIFI();
  3121  002326  EC64  F00F         	call	_mostrarDatosSensoresWIFI	;wreg free
  3122  00232A  EFD5  F011         	goto	l365
  3123  00232E                     l4714:
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;main.c: 626:                 mostrarDatosSensores();
  3127  00232E  ECDC  F00F         	call	_mostrarDatosSensores	;wreg free
  3128  002332  EFD5  F011         	goto	l365
  3129  002336                     l4716:
  3130                           
  3131                           ; BSR set to: 0
  3132                           ;main.c: 631:             regadoRapido();
  3133  002336  EC55  F00E         	call	_regadoRapido	;wreg free
  3134                           
  3135                           ;main.c: 632:             break;
  3136  00233A  EFD5  F011         	goto	l365
  3137  00233E                     l4718:
  3138                           
  3139                           ; BSR set to: 0
  3140                           ;main.c: 635:             fijaDiaRtc();
  3141  00233E  EC44  F018         	call	_fijaDiaRtc	;wreg free
  3142                           
  3143                           ;main.c: 636:             break;
  3144  002342  EFD5  F011         	goto	l365
  3145  002346                     l4720:
  3146                           
  3147                           ; BSR set to: 0
  3148                           ;main.c: 639:             leeHorariosMemoria();
  3149  002346  EC43  F00A         	call	_leeHorariosMemoria	;wreg free
  3150                           
  3151                           ;main.c: 640:             break;
  3152  00234A  EFD5  F011         	goto	l365
  3153  00234E                     l4724:
  3154  00234E  0100               	movlb	0	; () banked
  3155  002350  51F3               	movf	sistemaPrincipal@opcion& (0+255),w,b
  3156  002352  6FF1               	movwf	??_sistemaPrincipal& (0+255),b
  3157  002354  6BF2               	clrf	(??_sistemaPrincipal+1)& (0+255),b
  3158                           
  3159                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3160                           ; Switch size 1, requested type "simple"
  3161                           ; Number of cases is 1, Range of values is 0 to 0
  3162                           ; switch strategies available:
  3163                           ; Name         Instructions Cycles
  3164                           ; simple_byte            4     3 (average)
  3165                           ;	Chosen strategy is simple_byte
  3166  002356  51F2               	movf	(??_sistemaPrincipal+1)& (0+255),w,b
  3167  002358  0A00               	xorlw	0	; case 0
  3168  00235A  B4D8               	btfsc	status,2,c
  3169  00235C  EFB2  F011         	goto	l5078
  3170  002360  EFD5  F011         	goto	l365
  3171  002364                     l5078:
  3172                           
  3173                           ; BSR set to: 0
  3174                           ; Switch size 1, requested type "simple"
  3175                           ; Number of cases is 8, Range of values is 1 to 8
  3176                           ; switch strategies available:
  3177                           ; Name         Instructions Cycles
  3178                           ; simple_byte           25    13 (average)
  3179                           ;	Chosen strategy is simple_byte
  3180  002364  51F1               	movf	??_sistemaPrincipal& (0+255),w,b
  3181  002366  0A01               	xorlw	1	; case 1
  3182  002368  B4D8               	btfsc	status,2,c
  3183  00236A  EF7B  F011         	goto	l4702
  3184  00236E  0A03               	xorlw	3	; case 2
  3185  002370  B4D8               	btfsc	status,2,c
  3186  002372  EF7F  F011         	goto	l4704
  3187  002376  0A01               	xorlw	1	; case 3
  3188  002378  B4D8               	btfsc	status,2,c
  3189  00237A  EF83  F011         	goto	l4706
  3190  00237E  0A07               	xorlw	7	; case 4
  3191  002380  B4D8               	btfsc	status,2,c
  3192  002382  EF87  F011         	goto	l4708
  3193  002386  0A01               	xorlw	1	; case 5
  3194  002388  B4D8               	btfsc	status,2,c
  3195  00238A  EF8B  F011         	goto	l4710
  3196  00238E  0A03               	xorlw	3	; case 6
  3197  002390  B4D8               	btfsc	status,2,c
  3198  002392  EF9B  F011         	goto	l4716
  3199  002396  0A01               	xorlw	1	; case 7
  3200  002398  B4D8               	btfsc	status,2,c
  3201  00239A  EF9F  F011         	goto	l4718
  3202  00239E  0A0F               	xorlw	15	; case 8
  3203  0023A0  B4D8               	btfsc	status,2,c
  3204  0023A2  EFA3  F011         	goto	l4720
  3205  0023A6  EFD5  F011         	goto	l365
  3206  0023AA                     l365:
  3207                           
  3208                           ;main.c: 648:     PIE1bits.RCIE = 1;
  3209  0023AA  8A9D               	bsf	157,5,c	;volatile
  3210  0023AC  0012               	return		;funcret
  3211  0023AE                     __end_of_sistemaPrincipal:
  3212                           	opt callstack 0
  3213                           
  3214 ;; *************** function _setTiempoRegar *****************
  3215 ;; Defined at:
  3216 ;;		line 476 in file "main.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;		None
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  hora            1   19[COMRAM] unsigned char 
  3221 ;;  tiempoRegar     1   18[COMRAM] unsigned char 
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  1    wreg      void 
  3224 ;; Registers used:
  3225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3231 ;;      Params:         0       0       0       0       0       0       0       0       0
  3232 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3233 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3234 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3235 ;;Total ram usage:        2 bytes
  3236 ;; Hardware stack levels used:    1
  3237 ;; Hardware stack levels required when called:    5
  3238 ;; This function calls:
  3239 ;;		_UART_write
  3240 ;;		_escribeHorariosMemoria
  3241 ;;		_getValue
  3242 ;; This function is called by:
  3243 ;;		_sistemaPrincipal
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247                           	psect	text10
  3248  0027D6                     __ptext10:
  3249                           	opt callstack 0
  3250  0027D6                     _setTiempoRegar:
  3251                           	opt callstack 24
  3252  0027D6                     
  3253                           ;main.c: 478:     unsigned char hora;;main.c: 479:     unsigned char tiempoRegar;;main.c
      +                          : 484:     hora = getValue(2);
  3254  0027D6  0E00               	movlw	0
  3255  0027D8  6E03               	movwf	(getValue@numCharacters+1)^0,c
  3256  0027DA  0E02               	movlw	2
  3257  0027DC  6E02               	movwf	getValue@numCharacters^0,c
  3258  0027DE  ECE8  F006         	call	_getValue	;wreg free
  3259  0027E2  6E14               	movwf	setTiempoRegar@hora^0,c
  3260  0027E4                     
  3261                           ;main.c: 486:     if (hora != '@') {
  3262  0027E4  0E40               	movlw	64
  3263  0027E6  1814               	xorwf	setTiempoRegar@hora^0,w,c
  3264  0027E8  B4D8               	btfsc	status,2,c
  3265  0027EA  EFF9  F013         	goto	u3561
  3266  0027EE  EFFB  F013         	goto	u3560
  3267  0027F2                     u3561:
  3268  0027F2  EF25  F014         	goto	l332
  3269  0027F6                     u3560:
  3270  0027F6                     
  3271                           ;main.c: 489:         tiempoRegar = getValue(2);
  3272  0027F6  0E00               	movlw	0
  3273  0027F8  6E03               	movwf	(getValue@numCharacters+1)^0,c
  3274  0027FA  0E02               	movlw	2
  3275  0027FC  6E02               	movwf	getValue@numCharacters^0,c
  3276  0027FE  ECE8  F006         	call	_getValue	;wreg free
  3277  002802  6E13               	movwf	setTiempoRegar@tiempoRegar^0,c
  3278  002804                     
  3279                           ;main.c: 491:         if (tiempoRegar != '@') {
  3280  002804  0E40               	movlw	64
  3281  002806  1813               	xorwf	setTiempoRegar@tiempoRegar^0,w,c
  3282  002808  B4D8               	btfsc	status,2,c
  3283  00280A  EF09  F014         	goto	u3571
  3284  00280E  EF0B  F014         	goto	u3570
  3285  002812                     u3571:
  3286  002812  EF25  F014         	goto	l332
  3287  002816                     u3570:
  3288  002816                     
  3289                           ;main.c: 497:             horarios[hora].tiempoRegar = tiempoRegar;
  3290  002816  5014               	movf	setTiempoRegar@hora^0,w,c
  3291  002818  0D0C               	mullw	12
  3292  00281A  0E3D               	movlw	low (_horarios+11)
  3293  00281C  24F3               	addwf	243,w,c
  3294  00281E  6ED9               	movwf	fsr2l,c
  3295  002820  0E01               	movlw	high (_horarios+11)
  3296  002822  20F4               	addwfc	prodh,w,c
  3297  002824  6EDA               	movwf	fsr2h,c
  3298  002826  C013  FFDF         	movff	setTiempoRegar@tiempoRegar,indf2
  3299                           
  3300                           ;main.c: 498:             minutosRegar = horarios[hora].tiempoRegar;
  3301  00282A  5014               	movf	setTiempoRegar@hora^0,w,c
  3302  00282C  0D0C               	mullw	12
  3303  00282E  0E3D               	movlw	low (_horarios+11)
  3304  002830  24F3               	addwf	243,w,c
  3305  002832  6ED9               	movwf	fsr2l,c
  3306  002834  0E01               	movlw	high (_horarios+11)
  3307  002836  20F4               	addwfc	prodh,w,c
  3308  002838  6EDA               	movwf	fsr2h,c
  3309  00283A  50DF               	movf	indf2,w,c
  3310  00283C  0100               	movlb	0	; () banked
  3311  00283E  6F7D               	movwf	_minutosRegar& (0+255),b
  3312  002840                     
  3313                           ; BSR set to: 0
  3314                           ;main.c: 500:             escribeHorariosMemoria();
  3315  002840  EC61  F00C         	call	_escribeHorariosMemoria	;wreg free
  3316  002844                     
  3317                           ;main.c: 502:             UART_write('E');
  3318  002844  0E45               	movlw	69
  3319  002846  EC6F  F018         	call	_UART_write
  3320  00284A                     l332:
  3321  00284A  0012               	return		;funcret
  3322  00284C                     __end_of_setTiempoRegar:
  3323                           	opt callstack 0
  3324                           
  3325 ;; *************** function _regadoRapido *****************
  3326 ;; Defined at:
  3327 ;;		line 985 in file "main.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;		None
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;  areaRegar       1   15[COMRAM] unsigned char 
  3332 ;;  tiempoRegar     1   14[COMRAM] unsigned char 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      void 
  3335 ;; Registers used:
  3336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3342 ;;      Params:         0       0       0       0       0       0       0       0       0
  3343 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3344 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3345 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3346 ;;Total ram usage:        4 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; Hardware stack levels required when called:    3
  3349 ;; This function calls:
  3350 ;;		_UART_write
  3351 ;;		_getValue
  3352 ;; This function is called by:
  3353 ;;		_sistemaPrincipal
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text11
  3358  001CAA                     __ptext11:
  3359                           	opt callstack 0
  3360  001CAA                     _regadoRapido:
  3361                           	opt callstack 26
  3362  001CAA                     
  3363                           ;main.c: 987:     unsigned char tiempoRegar;;main.c: 988:     unsigned char areaRegar;;m
      +                          ain.c: 992:     if (!regando) {
  3364  001CAA  0100               	movlb	0	; () banked
  3365  001CAC  517B               	movf	_regando& (0+255),w,b
  3366  001CAE  A4D8               	btfss	status,2,c
  3367  001CB0  EF5C  F00E         	goto	u3631
  3368  001CB4  EF5E  F00E         	goto	u3630
  3369  001CB8                     u3631:
  3370  001CB8  EFDA  F00E         	goto	l4628
  3371  001CBC                     u3630:
  3372  001CBC                     
  3373                           ; BSR set to: 0
  3374                           ;main.c: 994:         tiempoRegar = getValue(2);
  3375  001CBC  0E00               	movlw	0
  3376  001CBE  6E03               	movwf	(getValue@numCharacters+1)^0,c
  3377  001CC0  0E02               	movlw	2
  3378  001CC2  6E02               	movwf	getValue@numCharacters^0,c
  3379  001CC4  ECE8  F006         	call	_getValue	;wreg free
  3380  001CC8  6E0F               	movwf	regadoRapido@tiempoRegar^0,c
  3381  001CCA                     
  3382                           ;main.c: 996:         if (tiempoRegar != '@') {
  3383  001CCA  0E40               	movlw	64
  3384  001CCC  180F               	xorwf	regadoRapido@tiempoRegar^0,w,c
  3385  001CCE  B4D8               	btfsc	status,2,c
  3386  001CD0  EF6C  F00E         	goto	u3641
  3387  001CD4  EF6E  F00E         	goto	u3640
  3388  001CD8                     u3641:
  3389  001CD8  EFDD  F00E         	goto	l481
  3390  001CDC                     u3640:
  3391  001CDC                     
  3392                           ;main.c: 999:             areaRegar = getValue(2);
  3393  001CDC  0E00               	movlw	0
  3394  001CDE  6E03               	movwf	(getValue@numCharacters+1)^0,c
  3395  001CE0  0E02               	movlw	2
  3396  001CE2  6E02               	movwf	getValue@numCharacters^0,c
  3397  001CE4  ECE8  F006         	call	_getValue	;wreg free
  3398  001CE8  6E10               	movwf	regadoRapido@areaRegar^0,c
  3399  001CEA                     
  3400                           ;main.c: 1001:             if (areaRegar != '@') {
  3401  001CEA  0E40               	movlw	64
  3402  001CEC  1810               	xorwf	regadoRapido@areaRegar^0,w,c
  3403  001CEE  B4D8               	btfsc	status,2,c
  3404  001CF0  EF7C  F00E         	goto	u3651
  3405  001CF4  EF7E  F00E         	goto	u3650
  3406  001CF8                     u3651:
  3407  001CF8  EFDD  F00E         	goto	l481
  3408  001CFC                     u3650:
  3409  001CFC                     
  3410                           ;main.c: 1003:                 areaRegar--;
  3411  001CFC  0610               	decf	regadoRapido@areaRegar^0,f,c
  3412                           
  3413                           ;main.c: 1005:                 switch (areaRegar) {
  3414  001CFE  EF99  F00E         	goto	l4618
  3415  001D02                     l471:
  3416                           
  3417                           ;main.c: 1008:                         LATDbits.LATD0 = 1;
  3418  001D02  808C               	bsf	140,0,c	;volatile
  3419                           
  3420                           ;main.c: 1009:                         break;
  3421  001D04  EFC6  F00E         	goto	l4620
  3422  001D08                     l473:
  3423                           
  3424                           ;main.c: 1012:                         LATDbits.LATD1 = 1;
  3425  001D08  828C               	bsf	140,1,c	;volatile
  3426                           
  3427                           ;main.c: 1013:                         break;
  3428  001D0A  EFC6  F00E         	goto	l4620
  3429  001D0E                     l474:
  3430                           
  3431                           ;main.c: 1016:                         LATDbits.LATD2 = 1;
  3432  001D0E  848C               	bsf	140,2,c	;volatile
  3433                           
  3434                           ;main.c: 1017:                         break;
  3435  001D10  EFC6  F00E         	goto	l4620
  3436  001D14                     l475:
  3437                           
  3438                           ;main.c: 1020:                         LATDbits.LATD3 = 1;
  3439  001D14  868C               	bsf	140,3,c	;volatile
  3440                           
  3441                           ;main.c: 1021:                         break;
  3442  001D16  EFC6  F00E         	goto	l4620
  3443  001D1A                     l476:
  3444                           
  3445                           ;main.c: 1024:                         LATDbits.LATD4 = 1;
  3446  001D1A  888C               	bsf	140,4,c	;volatile
  3447                           
  3448                           ;main.c: 1025:                         break;
  3449  001D1C  EFC6  F00E         	goto	l4620
  3450  001D20                     l477:
  3451                           
  3452                           ;main.c: 1028:                         LATDbits.LATD5 = 1;
  3453  001D20  8A8C               	bsf	140,5,c	;volatile
  3454                           
  3455                           ;main.c: 1029:                         break;
  3456  001D22  EFC6  F00E         	goto	l4620
  3457  001D26                     l478:
  3458                           
  3459                           ;main.c: 1032:                         LATDbits.LATD6 = 1;
  3460  001D26  8C8C               	bsf	140,6,c	;volatile
  3461                           
  3462                           ;main.c: 1033:                         break;
  3463  001D28  EFC6  F00E         	goto	l4620
  3464  001D2C                     l479:
  3465                           
  3466                           ;main.c: 1036:                         LATDbits.LATD7 = 1;
  3467  001D2C  8E8C               	bsf	140,7,c	;volatile
  3468                           
  3469                           ;main.c: 1037:                         break;
  3470  001D2E  EFC6  F00E         	goto	l4620
  3471  001D32                     l4618:
  3472  001D32  5010               	movf	regadoRapido@areaRegar^0,w,c
  3473  001D34  6E0D               	movwf	??_regadoRapido^0,c
  3474  001D36  6A0E               	clrf	(??_regadoRapido+1)^0,c
  3475                           
  3476                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3477                           ; Switch size 1, requested type "simple"
  3478                           ; Number of cases is 1, Range of values is 0 to 0
  3479                           ; switch strategies available:
  3480                           ; Name         Instructions Cycles
  3481                           ; simple_byte            4     3 (average)
  3482                           ;	Chosen strategy is simple_byte
  3483  001D38  500E               	movf	(??_regadoRapido+1)^0,w,c
  3484  001D3A  0A00               	xorlw	0	; case 0
  3485  001D3C  B4D8               	btfsc	status,2,c
  3486  001D3E  EFA3  F00E         	goto	l5080
  3487  001D42  EFC6  F00E         	goto	l4620
  3488  001D46                     l5080:
  3489                           
  3490                           ; Switch size 1, requested type "simple"
  3491                           ; Number of cases is 8, Range of values is 0 to 7
  3492                           ; switch strategies available:
  3493                           ; Name         Instructions Cycles
  3494                           ; simple_byte           25    13 (average)
  3495                           ;	Chosen strategy is simple_byte
  3496  001D46  500D               	movf	??_regadoRapido^0,w,c
  3497  001D48  0A00               	xorlw	0	; case 0
  3498  001D4A  B4D8               	btfsc	status,2,c
  3499  001D4C  EF81  F00E         	goto	l471
  3500  001D50  0A01               	xorlw	1	; case 1
  3501  001D52  B4D8               	btfsc	status,2,c
  3502  001D54  EF84  F00E         	goto	l473
  3503  001D58  0A03               	xorlw	3	; case 2
  3504  001D5A  B4D8               	btfsc	status,2,c
  3505  001D5C  EF87  F00E         	goto	l474
  3506  001D60  0A01               	xorlw	1	; case 3
  3507  001D62  B4D8               	btfsc	status,2,c
  3508  001D64  EF8A  F00E         	goto	l475
  3509  001D68  0A07               	xorlw	7	; case 4
  3510  001D6A  B4D8               	btfsc	status,2,c
  3511  001D6C  EF8D  F00E         	goto	l476
  3512  001D70  0A01               	xorlw	1	; case 5
  3513  001D72  B4D8               	btfsc	status,2,c
  3514  001D74  EF90  F00E         	goto	l477
  3515  001D78  0A03               	xorlw	3	; case 6
  3516  001D7A  B4D8               	btfsc	status,2,c
  3517  001D7C  EF93  F00E         	goto	l478
  3518  001D80  0A01               	xorlw	1	; case 7
  3519  001D82  B4D8               	btfsc	status,2,c
  3520  001D84  EF96  F00E         	goto	l479
  3521  001D88  EFC6  F00E         	goto	l4620
  3522  001D8C                     l4620:
  3523                           
  3524                           ;main.c: 1041:                 regando = 1;
  3525  001D8C  0E01               	movlw	1
  3526  001D8E  0100               	movlb	0	; () banked
  3527  001D90  6F7B               	movwf	_regando& (0+255),b
  3528  001D92                     
  3529                           ; BSR set to: 0
  3530                           ;main.c: 1042:                 horarios[hora].regado = 0;
  3531  001D92  5187               	movf	_hora& (0+255),w,b
  3532  001D94  0D0C               	mullw	12
  3533  001D96  0E3C               	movlw	low (_horarios+10)
  3534  001D98  24F3               	addwf	243,w,c
  3535  001D9A  6ED9               	movwf	fsr2l,c
  3536  001D9C  0E01               	movlw	high (_horarios+10)
  3537  001D9E  20F4               	addwfc	prodh,w,c
  3538  001DA0  6EDA               	movwf	fsr2h,c
  3539  001DA2  0E00               	movlw	0
  3540  001DA4  6EDF               	movwf	indf2,c
  3541  001DA6                     
  3542                           ; BSR set to: 0
  3543                           ;main.c: 1043:                 minutosRegar = tiempoRegar;
  3544  001DA6  C00F  F07D         	movff	regadoRapido@tiempoRegar,_minutosRegar
  3545  001DAA                     
  3546                           ; BSR set to: 0
  3547                           ;main.c: 1044:                 UART_write('E');
  3548  001DAA  0E45               	movlw	69
  3549  001DAC  EC6F  F018         	call	_UART_write
  3550  001DB0  EFDD  F00E         	goto	l481
  3551  001DB4                     l4628:
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;main.c: 1052:         UART_write('@');
  3555  001DB4  0E40               	movlw	64
  3556  001DB6  EC6F  F018         	call	_UART_write
  3557  001DBA                     l481:
  3558  001DBA  0012               	return		;funcret
  3559  001DBC                     __end_of_regadoRapido:
  3560                           	opt callstack 0
  3561                           
  3562 ;; *************** function _mostrarDatosSensoresWIFI *****************
  3563 ;; Defined at:
  3564 ;;		line 840 in file "main.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;		None
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;  i               2   28[BANK0 ] int 
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3578 ;;      Params:         0       0       0       0       0       0       0       0       0
  3579 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3580 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3581 ;;      Totals:         1       2       0       0       0       0       0       0       0
  3582 ;;Total ram usage:        3 bytes
  3583 ;; Hardware stack levels used:    1
  3584 ;; Hardware stack levels required when called:    9
  3585 ;; This function calls:
  3586 ;;		_UART_printf
  3587 ;;		_UART_write
  3588 ;;		_dameTemperaturaHumedad
  3589 ;;		_lecturaWifi
  3590 ;;		_limpiarBuffer
  3591 ;;		_sprintf
  3592 ;; This function is called by:
  3593 ;;		_sistemaPrincipal
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           	psect	text12
  3598  001EC8                     __ptext12:
  3599                           	opt callstack 0
  3600  001EC8                     _mostrarDatosSensoresWIFI:
  3601                           	opt callstack 20
  3602  001EC8                     
  3603                           ;main.c: 842:     dameTemperaturaHumedad();
  3604  001EC8  EC28  F013         	call	_dameTemperaturaHumedad	;wreg free
  3605  001ECC                     
  3606                           ;main.c: 844:     UART_write('&');
  3607  001ECC  0E26               	movlw	38
  3608  001ECE  EC6F  F018         	call	_UART_write
  3609  001ED2                     
  3610                           ;main.c: 847:     limpiarBuffer();
  3611  001ED2  EC0C  F017         	call	_limpiarBuffer	;wreg free
  3612  001ED6                     
  3613                           ;main.c: 849:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", Humedad);
  3614  001ED6  0E00               	movlw	low _buffer
  3615  001ED8  0100               	movlb	0	; () banked
  3616  001EDA  6FB3               	movwf	sprintf@s& (0+255),b
  3617  001EDC  0E01               	movlw	high _buffer
  3618  001EDE  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  3619  001EE0  0E3B               	movlw	low STR_25
  3620  001EE2  6FB5               	movwf	sprintf@fmt& (0+255),b
  3621  001EE4  0E7E               	movlw	high STR_25
  3622  001EE6  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  3623  001EE8  C07E  F0B7         	movff	_Humedad,?_sprintf+4
  3624  001EEC  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  3625  001EEE  EC0E  F016         	call	_sprintf	;wreg free
  3626  001EF2                     
  3627                           ;main.c: 850:     UART_printf(buffer);
  3628  001EF2  0E00               	movlw	low _buffer
  3629  001EF4  6E02               	movwf	UART_printf@cadena^0,c
  3630  001EF6  0E01               	movlw	high _buffer
  3631  001EF8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3632  001EFA  EC2D  F015         	call	_UART_printf	;wreg free
  3633  001EFE                     
  3634                           ;main.c: 851:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", Temperatura);
  3635  001EFE  0E00               	movlw	low _buffer
  3636  001F00  0100               	movlb	0	; () banked
  3637  001F02  6FB3               	movwf	sprintf@s& (0+255),b
  3638  001F04  0E01               	movlw	high _buffer
  3639  001F06  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  3640  001F08  0E5B               	movlw	low STR_26
  3641  001F0A  6FB5               	movwf	sprintf@fmt& (0+255),b
  3642  001F0C  0E7E               	movlw	high STR_26
  3643  001F0E  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  3644  001F10  C07F  F0B7         	movff	_Temperatura,?_sprintf+4
  3645  001F14  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  3646  001F16  EC0E  F016         	call	_sprintf	;wreg free
  3647  001F1A                     
  3648                           ;main.c: 852:     UART_printf(buffer);
  3649  001F1A  0E00               	movlw	low _buffer
  3650  001F1C  6E02               	movwf	UART_printf@cadena^0,c
  3651  001F1E  0E01               	movlw	high _buffer
  3652  001F20  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3653  001F22  EC2D  F015         	call	_UART_printf	;wreg free
  3654  001F26                     
  3655                           ;main.c: 854:     lecturaWifi();
  3656  001F26  ECD7  F011         	call	_lecturaWifi	;wreg free
  3657  001F2A                     
  3658                           ;main.c: 855:     if (peticionLecturaSensores) {
  3659  001F2A  0100               	movlb	0	; () banked
  3660  001F2C  517A               	movf	_peticionLecturaSensores& (0+255),w,b
  3661  001F2E  B4D8               	btfsc	status,2,c
  3662  001F30  EF9C  F00F         	goto	u3601
  3663  001F34  EF9E  F00F         	goto	u3600
  3664  001F38                     u3601:
  3665  001F38  EFD8  F00F         	goto	l4570
  3666  001F3C                     u3600:
  3667  001F3C                     
  3668                           ; BSR set to: 0
  3669                           ;main.c: 857:         for (int i = 0; i < 1; i++) {
  3670  001F3C  0E00               	movlw	0
  3671  001F3E  6FCA               	movwf	(mostrarDatosSensoresWIFI@i+1)& (0+255),b
  3672  001F40  0E00               	movlw	0
  3673  001F42  6FC9               	movwf	mostrarDatosSensoresWIFI@i& (0+255),b
  3674  001F44                     l4562:
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;main.c: 859:             sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d %c
      +                          \r\n"
  3678  001F44  0E00               	movlw	low _buffer
  3679  001F46  6FB3               	movwf	sprintf@s& (0+255),b
  3680  001F48  0E01               	movlw	high _buffer
  3681  001F4A  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  3682  001F4C  0E14               	movlw	low STR_27
  3683  001F4E  6FB5               	movwf	sprintf@fmt& (0+255),b
  3684  001F50  0E7D               	movlw	high STR_27
  3685  001F52  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  3686  001F54  C0C9  F0B7         	movff	mostrarDatosSensoresWIFI@i,?_sprintf+4
  3687  001F58  C0CA  F0B8         	movff	mostrarDatosSensoresWIFI@i+1,?_sprintf+5
  3688  001F5C  90D8               	bcf	status,0,c
  3689  001F5E  35C9               	rlcf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  3690  001F60  6ED9               	movwf	fsr2l,c
  3691  001F62  35CA               	rlcf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  3692  001F64  6EDA               	movwf	fsr2h,c
  3693  001F66  0E60               	movlw	low _sensores
  3694  001F68  26D9               	addwf	fsr2l,f,c
  3695  001F6A  0E00               	movlw	high _sensores
  3696  001F6C  22DA               	addwfc	fsr2h,f,c
  3697  001F6E  50DF               	movf	indf2,w,c
  3698  001F70  6E5D               	movwf	??_mostrarDatosSensoresWIFI^0,c
  3699  001F72  505D               	movf	??_mostrarDatosSensoresWIFI^0,w,c
  3700  001F74  6FB9               	movwf	(?_sprintf+6)& (0+255),b
  3701  001F76  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  3702  001F78  0E00               	movlw	0
  3703  001F7A  6FBC               	movwf	(?_sprintf+9)& (0+255),b
  3704  001F7C  0E25               	movlw	37
  3705  001F7E  6FBB               	movwf	(?_sprintf+8)& (0+255),b
  3706  001F80  EC0E  F016         	call	_sprintf	;wreg free
  3707  001F84                     
  3708                           ;main.c: 861:             UART_printf(buffer);
  3709  001F84  0E00               	movlw	low _buffer
  3710  001F86  6E02               	movwf	UART_printf@cadena^0,c
  3711  001F88  0E01               	movlw	high _buffer
  3712  001F8A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3713  001F8C  EC2D  F015         	call	_UART_printf	;wreg free
  3714  001F90                     
  3715                           ;main.c: 863:         }
  3716  001F90  0100               	movlb	0	; () banked
  3717  001F92  4BC9               	infsnz	mostrarDatosSensoresWIFI@i& (0+255),f,b
  3718  001F94  2BCA               	incf	(mostrarDatosSensoresWIFI@i+1)& (0+255),f,b
  3719  001F96                     
  3720                           ; BSR set to: 0
  3721  001F96  BFCA               	btfsc	(mostrarDatosSensoresWIFI@i+1)& (0+255),7,b
  3722  001F98  EFD6  F00F         	goto	u3611
  3723  001F9C  51CA               	movf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  3724  001F9E  E108               	bnz	u3610
  3725  001FA0  05C9               	decf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  3726  001FA2  A0D8               	btfss	status,0,c
  3727  001FA4  EFD6  F00F         	goto	u3611
  3728  001FA8  EFD8  F00F         	goto	u3610
  3729  001FAC                     u3611:
  3730  001FAC  EFA2  F00F         	goto	l4562
  3731  001FB0                     u3610:
  3732  001FB0                     l4570:
  3733                           
  3734                           ; BSR set to: 0
  3735                           ;main.c: 867:     UART_write('&');
  3736  001FB0  0E26               	movlw	38
  3737  001FB2  EC6F  F018         	call	_UART_write
  3738  001FB6  0012               	return		;funcret
  3739  001FB8                     __end_of_mostrarDatosSensoresWIFI:
  3740                           	opt callstack 0
  3741                           
  3742 ;; *************** function _lecturaWifi *****************
  3743 ;; Defined at:
  3744 ;;		line 531 in file "main.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;		None
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;  i               2   14[COMRAM] int 
  3749 ;;  humedadMedid    1   13[COMRAM] unsigned char 
  3750 ;;  Rx              1   12[COMRAM] unsigned char 
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      void 
  3753 ;; Registers used:
  3754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3760 ;;      Params:         0       0       0       0       0       0       0       0       0
  3761 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3762 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3763 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3764 ;;Total ram usage:        4 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; Hardware stack levels required when called:    3
  3767 ;; This function calls:
  3768 ;;		_UART_read
  3769 ;;		_UART_write
  3770 ;;		_getValue
  3771 ;;		_limpiarBuffer
  3772 ;;		_restablecerDatosSensor
  3773 ;; This function is called by:
  3774 ;;		_sistemaRegado
  3775 ;;		_mostrarDatosSensoresWIFI
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text13
  3780  0023AE                     __ptext13:
  3781                           	opt callstack 0
  3782  0023AE                     _lecturaWifi:
  3783                           	opt callstack 26
  3784  0023AE                     
  3785                           ;main.c: 533:     PIE1bits.RCIE = 0;
  3786  0023AE  9A9D               	bcf	157,5,c	;volatile
  3787  0023B0                     
  3788                           ;main.c: 537:     restablecerDatosSensor();
  3789  0023B0  EC60  F016         	call	_restablecerDatosSensor	;wreg free
  3790  0023B4                     
  3791                           ;main.c: 539:     UART_write('R');
  3792  0023B4  0E52               	movlw	82
  3793  0023B6  EC6F  F018         	call	_UART_write
  3794  0023BA                     
  3795                           ;main.c: 543:     Rx = UART_read();
  3796  0023BA  ECE4  F015         	call	_UART_read	;wreg free
  3797  0023BE  6E0D               	movwf	lecturaWifi@Rx^0,c
  3798  0023C0                     
  3799                           ;main.c: 545:     if (Rx == 'O') {
  3800  0023C0  0E4F               	movlw	79
  3801  0023C2  180D               	xorwf	lecturaWifi@Rx^0,w,c
  3802  0023C4  A4D8               	btfss	status,2,c
  3803  0023C6  EFE7  F011         	goto	u3281
  3804  0023CA  EFE9  F011         	goto	u3280
  3805  0023CE                     u3281:
  3806  0023CE  EF2C  F012         	goto	l4236
  3807  0023D2                     u3280:
  3808  0023D2                     
  3809                           ;main.c: 547:         peticionLecturaSensores = 1;
  3810  0023D2  0E01               	movlw	1
  3811  0023D4  0100               	movlb	0	; () banked
  3812  0023D6  6F7A               	movwf	_peticionLecturaSensores& (0+255),b
  3813                           
  3814                           ;main.c: 549:         for (int i = 0; i < 1; i++) {
  3815  0023D8  0E00               	movlw	0
  3816  0023DA  6E10               	movwf	(lecturaWifi@i+1)^0,c
  3817  0023DC  0E00               	movlw	0
  3818  0023DE  6E0F               	movwf	lecturaWifi@i^0,c
  3819  0023E0                     l4222:
  3820                           
  3821                           ;main.c: 554:             humedadMedida = getValue(3);
  3822  0023E0  0E00               	movlw	0
  3823  0023E2  6E03               	movwf	(getValue@numCharacters+1)^0,c
  3824  0023E4  0E03               	movlw	3
  3825  0023E6  6E02               	movwf	getValue@numCharacters^0,c
  3826  0023E8  ECE8  F006         	call	_getValue	;wreg free
  3827  0023EC  6E0E               	movwf	lecturaWifi@humedadMedida^0,c
  3828  0023EE                     
  3829                           ;main.c: 556:             if (humedadMedida != '@')
  3830  0023EE  0E40               	movlw	64
  3831  0023F0  180E               	xorwf	lecturaWifi@humedadMedida^0,w,c
  3832  0023F2  B4D8               	btfsc	status,2,c
  3833  0023F4  EFFE  F011         	goto	u3291
  3834  0023F8  EF00  F012         	goto	u3290
  3835  0023FC                     u3291:
  3836  0023FC  EF0D  F012         	goto	l4228
  3837  002400                     u3290:
  3838  002400                     
  3839                           ;main.c: 557:                 sensores[i].porcientoHumedad = humedadMedida;
  3840  002400  90D8               	bcf	status,0,c
  3841  002402  340F               	rlcf	lecturaWifi@i^0,w,c
  3842  002404  6ED9               	movwf	fsr2l,c
  3843  002406  3410               	rlcf	(lecturaWifi@i+1)^0,w,c
  3844  002408  6EDA               	movwf	fsr2h,c
  3845  00240A  0E60               	movlw	low _sensores
  3846  00240C  26D9               	addwf	fsr2l,f,c
  3847  00240E  0E00               	movlw	high _sensores
  3848  002410  22DA               	addwfc	fsr2h,f,c
  3849  002412  C00E  FFDF         	movff	lecturaWifi@humedadMedida,indf2
  3850  002416  EF18  F012         	goto	l4230
  3851  00241A                     l4228:
  3852                           
  3853                           ;main.c: 559:                 sensores[i].porcientoHumedad = 100;
  3854  00241A  90D8               	bcf	status,0,c
  3855  00241C  340F               	rlcf	lecturaWifi@i^0,w,c
  3856  00241E  6ED9               	movwf	fsr2l,c
  3857  002420  3410               	rlcf	(lecturaWifi@i+1)^0,w,c
  3858  002422  6EDA               	movwf	fsr2h,c
  3859  002424  0E60               	movlw	low _sensores
  3860  002426  26D9               	addwf	fsr2l,f,c
  3861  002428  0E00               	movlw	high _sensores
  3862  00242A  22DA               	addwfc	fsr2h,f,c
  3863  00242C  0E64               	movlw	100
  3864  00242E  6EDF               	movwf	indf2,c
  3865  002430                     l4230:
  3866                           
  3867                           ;main.c: 561:         }
  3868  002430  4A0F               	infsnz	lecturaWifi@i^0,f,c
  3869  002432  2A10               	incf	(lecturaWifi@i+1)^0,f,c
  3870  002434  BE10               	btfsc	(lecturaWifi@i+1)^0,7,c
  3871  002436  EF25  F012         	goto	u3301
  3872  00243A  5010               	movf	(lecturaWifi@i+1)^0,w,c
  3873  00243C  E108               	bnz	u3300
  3874  00243E  040F               	decf	lecturaWifi@i^0,w,c
  3875  002440  A0D8               	btfss	status,0,c
  3876  002442  EF25  F012         	goto	u3301
  3877  002446  EF27  F012         	goto	u3300
  3878  00244A                     u3301:
  3879  00244A  EFF0  F011         	goto	l4222
  3880  00244E                     u3300:
  3881  00244E                     
  3882                           ;main.c: 564:         UART_write('E');
  3883  00244E  0E45               	movlw	69
  3884  002450  EC6F  F018         	call	_UART_write
  3885                           
  3886                           ;main.c: 566:     } else {
  3887  002454  EF2F  F012         	goto	l4238
  3888  002458                     l4236:
  3889                           
  3890                           ;main.c: 567:         peticionLecturaSensores = 0;
  3891  002458  0E00               	movlw	0
  3892  00245A  0100               	movlb	0	; () banked
  3893  00245C  6F7A               	movwf	_peticionLecturaSensores& (0+255),b
  3894  00245E                     l4238:
  3895                           
  3896                           ;main.c: 570:     limpiarBuffer();
  3897  00245E  EC0C  F017         	call	_limpiarBuffer	;wreg free
  3898  002462                     
  3899                           ;main.c: 572:     PIE1bits.RCIE = 1;
  3900  002462  8A9D               	bsf	157,5,c	;volatile
  3901  002464  0012               	return		;funcret
  3902  002466                     __end_of_lecturaWifi:
  3903                           	opt callstack 0
  3904                           
  3905 ;; *************** function _restablecerDatosSensor *****************
  3906 ;; Defined at:
  3907 ;;		line 526 in file "main.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;		None
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  i               2    4[COMRAM] int 
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      void 
  3914 ;; Registers used:
  3915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3921 ;;      Params:         0       0       0       0       0       0       0       0       0
  3922 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3923 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3924 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3925 ;;Total ram usage:        2 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    2
  3928 ;; This function calls:
  3929 ;;		_constructorSensor
  3930 ;; This function is called by:
  3931 ;;		_lecturaWifi
  3932 ;;		_main
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           	psect	text14
  3937  002CC0                     __ptext14:
  3938                           	opt callstack 0
  3939  002CC0                     _restablecerDatosSensor:
  3940                           	opt callstack 26
  3941  002CC0                     
  3942                           ;main.c: 527:     for (int i = 0; i < 1; i++)
  3943  002CC0  0E00               	movlw	0
  3944  002CC2  6E06               	movwf	(restablecerDatosSensor@i+1)^0,c
  3945  002CC4  0E00               	movlw	0
  3946  002CC6  6E05               	movwf	restablecerDatosSensor@i^0,c
  3947  002CC8                     l3998:
  3948                           
  3949                           ;main.c: 528:         constructorSensor(sensores[i], 0, i);
  3950  002CC8  90D8               	bcf	status,0,c
  3951  002CCA  3405               	rlcf	restablecerDatosSensor@i^0,w,c
  3952  002CCC  6ED9               	movwf	fsr2l,c
  3953  002CCE  3406               	rlcf	(restablecerDatosSensor@i+1)^0,w,c
  3954  002CD0  6EDA               	movwf	fsr2h,c
  3955  002CD2  0E60               	movlw	low _sensores
  3956  002CD4  26D9               	addwf	fsr2l,f,c
  3957  002CD6  0E00               	movlw	high _sensores
  3958  002CD8  22DA               	addwfc	fsr2h,f,c
  3959  002CDA  CFDE F001          	movff	postinc2,constructorSensor@s
  3960  002CDE  CFDD F002          	movff	postdec2,constructorSensor@s+1
  3961  002CE2  0E00               	movlw	0
  3962  002CE4  6E03               	movwf	constructorSensor@porcientoHumedad^0,c
  3963  002CE6  C005  F004         	movff	restablecerDatosSensor@i,constructorSensor@pin
  3964  002CEA  EC99  F018         	call	_constructorSensor	;wreg free
  3965  002CEE  4A05               	infsnz	restablecerDatosSensor@i^0,f,c
  3966  002CF0  2A06               	incf	(restablecerDatosSensor@i+1)^0,f,c
  3967  002CF2  BE06               	btfsc	(restablecerDatosSensor@i+1)^0,7,c
  3968  002CF4  EF84  F016         	goto	u3051
  3969  002CF8  5006               	movf	(restablecerDatosSensor@i+1)^0,w,c
  3970  002CFA  E108               	bnz	u3050
  3971  002CFC  0405               	decf	restablecerDatosSensor@i^0,w,c
  3972  002CFE  A0D8               	btfss	status,0,c
  3973  002D00  EF84  F016         	goto	u3051
  3974  002D04  EF86  F016         	goto	u3050
  3975  002D08                     u3051:
  3976  002D08  EF64  F016         	goto	l3998
  3977  002D0C                     u3050:
  3978  002D0C  0012               	return		;funcret
  3979  002D0E                     __end_of_restablecerDatosSensor:
  3980                           	opt callstack 0
  3981                           
  3982 ;; *************** function _constructorSensor *****************
  3983 ;; Defined at:
  3984 ;;		line 140 in file "main.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;  s               2    0[COMRAM] struct .
  3987 ;;  porcientoHum    1    2[COMRAM] unsigned char 
  3988 ;;  pin             1    3[COMRAM] unsigned char 
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;		None
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1    wreg      void 
  3993 ;; Registers used:
  3994 ;;		None
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4000 ;;      Params:         4       0       0       0       0       0       0       0       0
  4001 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4003 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4004 ;;Total ram usage:        4 bytes
  4005 ;; Hardware stack levels used:    1
  4006 ;; Hardware stack levels required when called:    1
  4007 ;; This function calls:
  4008 ;;		Nothing
  4009 ;; This function is called by:
  4010 ;;		_restablecerDatosSensor
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           	psect	text15
  4015  003132                     __ptext15:
  4016                           	opt callstack 0
  4017  003132                     _constructorSensor:
  4018                           	opt callstack 26
  4019  003132                     
  4020                           ;main.c: 141:     s.porcientoHumedad = porcientoHumedad;
  4021  003132  C003  F001         	movff	constructorSensor@porcientoHumedad,constructorSensor@s
  4022                           
  4023                           ;main.c: 142:     s.pinSensor = pin;
  4024  003136  C004  F002         	movff	constructorSensor@pin,constructorSensor@s+1
  4025  00313A  0012               	return		;funcret
  4026  00313C                     __end_of_constructorSensor:
  4027                           	opt callstack 0
  4028                           
  4029 ;; *************** function _mostrarDatosSensores *****************
  4030 ;; Defined at:
  4031 ;;		line 812 in file "main.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;		None
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;  i               2   28[BANK0 ] int 
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  1    wreg      void 
  4038 ;; Registers used:
  4039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4045 ;;      Params:         0       0       0       0       0       0       0       0       0
  4046 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4047 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4048 ;;      Totals:         1       2       0       0       0       0       0       0       0
  4049 ;;Total ram usage:        3 bytes
  4050 ;; Hardware stack levels used:    1
  4051 ;; Hardware stack levels required when called:    9
  4052 ;; This function calls:
  4053 ;;		_UART_printf
  4054 ;;		_UART_write
  4055 ;;		_dameTemperaturaHumedad
  4056 ;;		_lecturaAnalogaSensores
  4057 ;;		_limpiarBuffer
  4058 ;;		_sprintf
  4059 ;; This function is called by:
  4060 ;;		_sistemaPrincipal
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           	psect	text16
  4065  001FB8                     __ptext16:
  4066                           	opt callstack 0
  4067  001FB8                     _mostrarDatosSensores:
  4068                           	opt callstack 20
  4069  001FB8                     
  4070                           ;main.c: 814:     dameTemperaturaHumedad();
  4071  001FB8  EC28  F013         	call	_dameTemperaturaHumedad	;wreg free
  4072  001FBC                     
  4073                           ;main.c: 816:     UART_write('&');
  4074  001FBC  0E26               	movlw	38
  4075  001FBE  EC6F  F018         	call	_UART_write
  4076  001FC2                     
  4077                           ;main.c: 819:     limpiarBuffer();
  4078  001FC2  EC0C  F017         	call	_limpiarBuffer	;wreg free
  4079  001FC6                     
  4080                           ;main.c: 821:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", Humedad);
  4081  001FC6  0E00               	movlw	low _buffer
  4082  001FC8  0100               	movlb	0	; () banked
  4083  001FCA  6FB3               	movwf	sprintf@s& (0+255),b
  4084  001FCC  0E01               	movlw	high _buffer
  4085  001FCE  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  4086  001FD0  0E3B               	movlw	low STR_25
  4087  001FD2  6FB5               	movwf	sprintf@fmt& (0+255),b
  4088  001FD4  0E7E               	movlw	high STR_25
  4089  001FD6  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  4090  001FD8  C07E  F0B7         	movff	_Humedad,?_sprintf+4
  4091  001FDC  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  4092  001FDE  EC0E  F016         	call	_sprintf	;wreg free
  4093  001FE2                     
  4094                           ;main.c: 822:     UART_printf(buffer);
  4095  001FE2  0E00               	movlw	low _buffer
  4096  001FE4  6E02               	movwf	UART_printf@cadena^0,c
  4097  001FE6  0E01               	movlw	high _buffer
  4098  001FE8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4099  001FEA  EC2D  F015         	call	_UART_printf	;wreg free
  4100  001FEE                     
  4101                           ;main.c: 823:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", Temperatura);
  4102  001FEE  0E00               	movlw	low _buffer
  4103  001FF0  0100               	movlb	0	; () banked
  4104  001FF2  6FB3               	movwf	sprintf@s& (0+255),b
  4105  001FF4  0E01               	movlw	high _buffer
  4106  001FF6  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  4107  001FF8  0E5B               	movlw	low STR_26
  4108  001FFA  6FB5               	movwf	sprintf@fmt& (0+255),b
  4109  001FFC  0E7E               	movlw	high STR_26
  4110  001FFE  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  4111  002000  C07F  F0B7         	movff	_Temperatura,?_sprintf+4
  4112  002004  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  4113  002006  EC0E  F016         	call	_sprintf	;wreg free
  4114  00200A                     
  4115                           ;main.c: 824:     UART_printf(buffer);
  4116  00200A  0E00               	movlw	low _buffer
  4117  00200C  6E02               	movwf	UART_printf@cadena^0,c
  4118  00200E  0E01               	movlw	high _buffer
  4119  002010  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4120  002012  EC2D  F015         	call	_UART_printf	;wreg free
  4121  002016                     
  4122                           ;main.c: 826:     lecturaAnalogaSensores();
  4123  002016  EC8B  F012         	call	_lecturaAnalogaSensores	;wreg free
  4124  00201A                     
  4125                           ;main.c: 829:     for (int i = 0; i < 1; i++) {
  4126  00201A  0E00               	movlw	0
  4127  00201C  0100               	movlb	0	; () banked
  4128  00201E  6FCA               	movwf	(mostrarDatosSensores@i+1)& (0+255),b
  4129  002020  0E00               	movlw	0
  4130  002022  6FC9               	movwf	mostrarDatosSensores@i& (0+255),b
  4131  002024                     l4594:
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;main.c: 831:         sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d %c\r\n
      +                          "
  4135  002024  0E00               	movlw	low _buffer
  4136  002026  6FB3               	movwf	sprintf@s& (0+255),b
  4137  002028  0E01               	movlw	high _buffer
  4138  00202A  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  4139  00202C  0E14               	movlw	low STR_27
  4140  00202E  6FB5               	movwf	sprintf@fmt& (0+255),b
  4141  002030  0E7D               	movlw	high STR_27
  4142  002032  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  4143  002034  C0C9  F0B7         	movff	mostrarDatosSensores@i,?_sprintf+4
  4144  002038  C0CA  F0B8         	movff	mostrarDatosSensores@i+1,?_sprintf+5
  4145  00203C  90D8               	bcf	status,0,c
  4146  00203E  35C9               	rlcf	mostrarDatosSensores@i& (0+255),w,b
  4147  002040  6ED9               	movwf	fsr2l,c
  4148  002042  35CA               	rlcf	(mostrarDatosSensores@i+1)& (0+255),w,b
  4149  002044  6EDA               	movwf	fsr2h,c
  4150  002046  0E60               	movlw	low _sensores
  4151  002048  26D9               	addwf	fsr2l,f,c
  4152  00204A  0E00               	movlw	high _sensores
  4153  00204C  22DA               	addwfc	fsr2h,f,c
  4154  00204E  50DF               	movf	indf2,w,c
  4155  002050  6E5D               	movwf	??_mostrarDatosSensores^0,c
  4156  002052  505D               	movf	??_mostrarDatosSensores^0,w,c
  4157  002054  6FB9               	movwf	(?_sprintf+6)& (0+255),b
  4158  002056  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  4159  002058  0E00               	movlw	0
  4160  00205A  6FBC               	movwf	(?_sprintf+9)& (0+255),b
  4161  00205C  0E25               	movlw	37
  4162  00205E  6FBB               	movwf	(?_sprintf+8)& (0+255),b
  4163  002060  EC0E  F016         	call	_sprintf	;wreg free
  4164  002064                     
  4165                           ;main.c: 833:         UART_printf(buffer);
  4166  002064  0E00               	movlw	low _buffer
  4167  002066  6E02               	movwf	UART_printf@cadena^0,c
  4168  002068  0E01               	movlw	high _buffer
  4169  00206A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4170  00206C  EC2D  F015         	call	_UART_printf	;wreg free
  4171  002070                     
  4172                           ;main.c: 834:     }
  4173  002070  0100               	movlb	0	; () banked
  4174  002072  4BC9               	infsnz	mostrarDatosSensores@i& (0+255),f,b
  4175  002074  2BCA               	incf	(mostrarDatosSensores@i+1)& (0+255),f,b
  4176  002076                     
  4177                           ; BSR set to: 0
  4178  002076  BFCA               	btfsc	(mostrarDatosSensores@i+1)& (0+255),7,b
  4179  002078  EF46  F010         	goto	u3621
  4180  00207C  51CA               	movf	(mostrarDatosSensores@i+1)& (0+255),w,b
  4181  00207E  E108               	bnz	u3620
  4182  002080  05C9               	decf	mostrarDatosSensores@i& (0+255),w,b
  4183  002082  A0D8               	btfss	status,0,c
  4184  002084  EF46  F010         	goto	u3621
  4185  002088  EF48  F010         	goto	u3620
  4186  00208C                     u3621:
  4187  00208C  EF12  F010         	goto	l4594
  4188  002090                     u3620:
  4189  002090                     
  4190                           ; BSR set to: 0
  4191                           ;main.c: 836:     UART_write('&');
  4192  002090  0E26               	movlw	38
  4193  002092  EC6F  F018         	call	_UART_write
  4194  002096  0012               	return		;funcret
  4195  002098                     __end_of_mostrarDatosSensores:
  4196                           	opt callstack 0
  4197                           
  4198 ;; *************** function _lecturaAnalogaSensores *****************
  4199 ;; Defined at:
  4200 ;;		line 576 in file "main.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;		None
  4203 ;; Auto vars:     Size  Location     Type
  4204 ;;  i               2   47[COMRAM] int 
  4205 ;; Return value:  Size  Location     Type
  4206 ;;                  1    wreg      void 
  4207 ;; Registers used:
  4208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4209 ;; Tracked objects:
  4210 ;;		On entry : 0/0
  4211 ;;		On exit  : 0/0
  4212 ;;		Unchanged: 0/0
  4213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4214 ;;      Params:         0       0       0       0       0       0       0       0       0
  4215 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4216 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4217 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4218 ;;Total ram usage:        3 bytes
  4219 ;; Hardware stack levels used:    1
  4220 ;; Hardware stack levels required when called:    3
  4221 ;; This function calls:
  4222 ;;		_dameHumedadSuelo
  4223 ;;		_map
  4224 ;; This function is called by:
  4225 ;;		_sistemaRegado
  4226 ;;		_mostrarDatosSensores
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           	psect	text17
  4231  002516                     __ptext17:
  4232                           	opt callstack 0
  4233  002516                     _lecturaAnalogaSensores:
  4234                           	opt callstack 26
  4235  002516                     
  4236                           ;main.c: 578:     for (int i = 0; i < 1; i++) {
  4237  002516  0E00               	movlw	0
  4238  002518  6E31               	movwf	(lecturaAnalogaSensores@i+1)^0,c
  4239  00251A  0E00               	movlw	0
  4240  00251C  6E30               	movwf	lecturaAnalogaSensores@i^0,c
  4241  00251E                     l4248:
  4242                           
  4243                           ;main.c: 579:         sensores[i].porcientoHumedad = map(dameHumedadSuelo(i), 0, 1023, 1
      +                          00, 0);
  4244  00251E  90D8               	bcf	status,0,c
  4245  002520  3430               	rlcf	lecturaAnalogaSensores@i^0,w,c
  4246  002522  6ED9               	movwf	fsr2l,c
  4247  002524  3431               	rlcf	(lecturaAnalogaSensores@i+1)^0,w,c
  4248  002526  6EDA               	movwf	fsr2h,c
  4249  002528  0E60               	movlw	low _sensores
  4250  00252A  26D9               	addwf	fsr2l,f,c
  4251  00252C  0E00               	movlw	high _sensores
  4252  00252E  22DA               	addwfc	fsr2h,f,c
  4253  002530  5030               	movf	lecturaAnalogaSensores@i^0,w,c
  4254  002532  EC87  F016         	call	_dameHumedadSuelo
  4255  002536  C001  F01B         	movff	?_dameHumedadSuelo,map@x
  4256  00253A  C002  F01C         	movff	?_dameHumedadSuelo+1,map@x+1
  4257  00253E  0E00               	movlw	0
  4258  002540  BE1C               	btfsc	(map@x+1)^0,7,c
  4259  002542  0EFF               	movlw	-1
  4260  002544  6E1D               	movwf	(map@x+2)^0,c
  4261  002546  6E1E               	movwf	(map@x+3)^0,c
  4262  002548  0E00               	movlw	0
  4263  00254A  6E1F               	movwf	map@in_min^0,c
  4264  00254C  0E00               	movlw	0
  4265  00254E  6E20               	movwf	(map@in_min+1)^0,c
  4266  002550  0E00               	movlw	0
  4267  002552  6E21               	movwf	(map@in_min+2)^0,c
  4268  002554  0E00               	movlw	0
  4269  002556  6E22               	movwf	(map@in_min+3)^0,c
  4270  002558  0EFF               	movlw	255
  4271  00255A  6E23               	movwf	map@in_max^0,c
  4272  00255C  0E03               	movlw	3
  4273  00255E  6E24               	movwf	(map@in_max+1)^0,c
  4274  002560  0E00               	movlw	0
  4275  002562  6E25               	movwf	(map@in_max+2)^0,c
  4276  002564  0E00               	movlw	0
  4277  002566  6E26               	movwf	(map@in_max+3)^0,c
  4278  002568  0E64               	movlw	100
  4279  00256A  6E27               	movwf	map@out_min^0,c
  4280  00256C  0E00               	movlw	0
  4281  00256E  6E28               	movwf	(map@out_min+1)^0,c
  4282  002570  0E00               	movlw	0
  4283  002572  6E29               	movwf	(map@out_min+2)^0,c
  4284  002574  0E00               	movlw	0
  4285  002576  6E2A               	movwf	(map@out_min+3)^0,c
  4286  002578  0E00               	movlw	0
  4287  00257A  6E2B               	movwf	map@out_max^0,c
  4288  00257C  0E00               	movlw	0
  4289  00257E  6E2C               	movwf	(map@out_max+1)^0,c
  4290  002580  0E00               	movlw	0
  4291  002582  6E2D               	movwf	(map@out_max+2)^0,c
  4292  002584  0E00               	movlw	0
  4293  002586  6E2E               	movwf	(map@out_max+3)^0,c
  4294  002588  ECAE  F013         	call	_map	;wreg free
  4295  00258C  501B               	movf	?_map^0,w,c
  4296  00258E  6EDF               	movwf	indf2,c
  4297  002590                     
  4298                           ;main.c: 580:         _delay((unsigned long)((5)*(4000000/4000.0)));
  4299  002590  0E07               	movlw	7
  4300  002592  6E2F               	movwf	??_lecturaAnalogaSensores^0,c
  4301  002594  0E7D               	movlw	125
  4302  002596                     u3877:
  4303  002596  2EE8               	decfsz	wreg,f,c
  4304  002598  D7FE               	bra	u3877
  4305  00259A  2E2F               	decfsz	??_lecturaAnalogaSensores^0,f,c
  4306  00259C  D7FC               	bra	u3877
  4307  00259E  F000               	nop	
  4308  0025A0                     
  4309                           ;main.c: 581:     }
  4310  0025A0  4A30               	infsnz	lecturaAnalogaSensores@i^0,f,c
  4311  0025A2  2A31               	incf	(lecturaAnalogaSensores@i+1)^0,f,c
  4312  0025A4  BE31               	btfsc	(lecturaAnalogaSensores@i+1)^0,7,c
  4313  0025A6  EFDD  F012         	goto	u3311
  4314  0025AA  5031               	movf	(lecturaAnalogaSensores@i+1)^0,w,c
  4315  0025AC  E108               	bnz	u3310
  4316  0025AE  0430               	decf	lecturaAnalogaSensores@i^0,w,c
  4317  0025B0  A0D8               	btfss	status,0,c
  4318  0025B2  EFDD  F012         	goto	u3311
  4319  0025B6  EFDF  F012         	goto	u3310
  4320  0025BA                     u3311:
  4321  0025BA  EF8F  F012         	goto	l4248
  4322  0025BE                     u3310:
  4323  0025BE  0012               	return		;funcret
  4324  0025C0                     __end_of_lecturaAnalogaSensores:
  4325                           	opt callstack 0
  4326                           
  4327 ;; *************** function _map *****************
  4328 ;; Defined at:
  4329 ;;		line 136 in file "main.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;  x               4   26[COMRAM] long 
  4332 ;;  in_min          4   30[COMRAM] long 
  4333 ;;  in_max          4   34[COMRAM] long 
  4334 ;;  out_min         4   38[COMRAM] long 
  4335 ;;  out_max         4   42[COMRAM] long 
  4336 ;; Auto vars:     Size  Location     Type
  4337 ;;		None
  4338 ;; Return value:  Size  Location     Type
  4339 ;;                  4   26[COMRAM] long 
  4340 ;; Registers used:
  4341 ;;		wreg, status,2, status,0, cstack
  4342 ;; Tracked objects:
  4343 ;;		On entry : 0/0
  4344 ;;		On exit  : 0/0
  4345 ;;		Unchanged: 0/0
  4346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4347 ;;      Params:        20       0       0       0       0       0       0       0       0
  4348 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4349 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4350 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4351 ;;Total ram usage:       20 bytes
  4352 ;; Hardware stack levels used:    1
  4353 ;; Hardware stack levels required when called:    2
  4354 ;; This function calls:
  4355 ;;		___aldiv
  4356 ;;		___lmul
  4357 ;; This function is called by:
  4358 ;;		_lecturaAnalogaSensores
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           	psect	text18
  4363  00275C                     __ptext18:
  4364                           	opt callstack 0
  4365  00275C                     _map:
  4366                           	opt callstack 26
  4367  00275C                     
  4368                           ;main.c: 137:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  4369  00275C  501F               	movf	map@in_min^0,w,c
  4370  00275E  5C1B               	subwf	map@x^0,w,c
  4371  002760  6E01               	movwf	___lmul@multiplier^0,c
  4372  002762  5020               	movf	(map@in_min+1)^0,w,c
  4373  002764  581C               	subwfb	(map@x+1)^0,w,c
  4374  002766  6E02               	movwf	(___lmul@multiplier+1)^0,c
  4375  002768  5021               	movf	(map@in_min+2)^0,w,c
  4376  00276A  581D               	subwfb	(map@x+2)^0,w,c
  4377  00276C  6E03               	movwf	(___lmul@multiplier+2)^0,c
  4378  00276E  5022               	movf	(map@in_min+3)^0,w,c
  4379  002770  581E               	subwfb	(map@x+3)^0,w,c
  4380  002772  6E04               	movwf	(___lmul@multiplier+3)^0,c
  4381  002774  5027               	movf	map@out_min^0,w,c
  4382  002776  5C2B               	subwf	map@out_max^0,w,c
  4383  002778  6E05               	movwf	___lmul@multiplicand^0,c
  4384  00277A  5028               	movf	(map@out_min+1)^0,w,c
  4385  00277C  582C               	subwfb	(map@out_max+1)^0,w,c
  4386  00277E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4387  002780  5029               	movf	(map@out_min+2)^0,w,c
  4388  002782  582D               	subwfb	(map@out_max+2)^0,w,c
  4389  002784  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4390  002786  502A               	movf	(map@out_min+3)^0,w,c
  4391  002788  582E               	subwfb	(map@out_max+3)^0,w,c
  4392  00278A  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4393  00278C  EC96  F014         	call	___lmul	;wreg free
  4394  002790  C001  F00D         	movff	?___lmul,___aldiv@dividend
  4395  002794  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  4396  002798  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  4397  00279C  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  4398  0027A0  501F               	movf	map@in_min^0,w,c
  4399  0027A2  5C23               	subwf	map@in_max^0,w,c
  4400  0027A4  6E11               	movwf	___aldiv@divisor^0,c
  4401  0027A6  5020               	movf	(map@in_min+1)^0,w,c
  4402  0027A8  5824               	subwfb	(map@in_max+1)^0,w,c
  4403  0027AA  6E12               	movwf	(___aldiv@divisor+1)^0,c
  4404  0027AC  5021               	movf	(map@in_min+2)^0,w,c
  4405  0027AE  5825               	subwfb	(map@in_max+2)^0,w,c
  4406  0027B0  6E13               	movwf	(___aldiv@divisor+2)^0,c
  4407  0027B2  5022               	movf	(map@in_min+3)^0,w,c
  4408  0027B4  5826               	subwfb	(map@in_max+3)^0,w,c
  4409  0027B6  6E14               	movwf	(___aldiv@divisor+3)^0,c
  4410  0027B8  ECDE  F00E         	call	___aldiv	;wreg free
  4411  0027BC  5027               	movf	map@out_min^0,w,c
  4412  0027BE  240D               	addwf	?___aldiv^0,w,c
  4413  0027C0  6E1B               	movwf	?_map^0,c
  4414  0027C2  5028               	movf	(map@out_min+1)^0,w,c
  4415  0027C4  200E               	addwfc	(?___aldiv+1)^0,w,c
  4416  0027C6  6E1C               	movwf	(?_map+1)^0,c
  4417  0027C8  5029               	movf	(map@out_min+2)^0,w,c
  4418  0027CA  200F               	addwfc	(?___aldiv+2)^0,w,c
  4419  0027CC  6E1D               	movwf	(?_map+2)^0,c
  4420  0027CE  502A               	movf	(map@out_min+3)^0,w,c
  4421  0027D0  2010               	addwfc	(?___aldiv+3)^0,w,c
  4422  0027D2  6E1E               	movwf	(?_map+3)^0,c
  4423  0027D4  0012               	return		;funcret
  4424  0027D6                     __end_of_map:
  4425                           	opt callstack 0
  4426                           
  4427 ;; *************** function ___lmul *****************
  4428 ;; Defined at:
  4429 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;  multiplier      4    0[COMRAM] unsigned long 
  4432 ;;  multiplicand    4    4[COMRAM] unsigned long 
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;  product         4    8[COMRAM] unsigned long 
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  4    0[COMRAM] unsigned long 
  4437 ;; Registers used:
  4438 ;;		wreg, status,2, status,0
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4444 ;;      Params:         8       0       0       0       0       0       0       0       0
  4445 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4446 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4447 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4448 ;;Total ram usage:       12 bytes
  4449 ;; Hardware stack levels used:    1
  4450 ;; Hardware stack levels required when called:    1
  4451 ;; This function calls:
  4452 ;;		Nothing
  4453 ;; This function is called by:
  4454 ;;		_map
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text19
  4459  00292C                     __ptext19:
  4460                           	opt callstack 0
  4461  00292C                     ___lmul:
  4462                           	opt callstack 26
  4463  00292C  0E00               	movlw	0
  4464  00292E  6E09               	movwf	___lmul@product^0,c
  4465  002930  0E00               	movlw	0
  4466  002932  6E0A               	movwf	(___lmul@product+1)^0,c
  4467  002934  0E00               	movlw	0
  4468  002936  6E0B               	movwf	(___lmul@product+2)^0,c
  4469  002938  0E00               	movlw	0
  4470  00293A  6E0C               	movwf	(___lmul@product+3)^0,c
  4471  00293C                     l3774:
  4472  00293C  A001               	btfss	___lmul@multiplier^0,0,c
  4473  00293E  EFA3  F014         	goto	u2841
  4474  002942  EFA5  F014         	goto	u2840
  4475  002946                     u2841:
  4476  002946  EFAD  F014         	goto	l3778
  4477  00294A                     u2840:
  4478  00294A  5005               	movf	___lmul@multiplicand^0,w,c
  4479  00294C  2609               	addwf	___lmul@product^0,f,c
  4480  00294E  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  4481  002950  220A               	addwfc	(___lmul@product+1)^0,f,c
  4482  002952  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  4483  002954  220B               	addwfc	(___lmul@product+2)^0,f,c
  4484  002956  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  4485  002958  220C               	addwfc	(___lmul@product+3)^0,f,c
  4486  00295A                     l3778:
  4487  00295A  90D8               	bcf	status,0,c
  4488  00295C  3605               	rlcf	___lmul@multiplicand^0,f,c
  4489  00295E  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4490  002960  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4491  002962  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4492  002964  90D8               	bcf	status,0,c
  4493  002966  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  4494  002968  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  4495  00296A  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  4496  00296C  3201               	rrcf	___lmul@multiplier^0,f,c
  4497  00296E  5001               	movf	___lmul@multiplier^0,w,c
  4498  002970  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  4499  002972  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  4500  002974  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  4501  002976  A4D8               	btfss	status,2,c
  4502  002978  EFC0  F014         	goto	u2851
  4503  00297C  EFC2  F014         	goto	u2850
  4504  002980                     u2851:
  4505  002980  EF9E  F014         	goto	l3774
  4506  002984                     u2850:
  4507  002984  C009  F001         	movff	___lmul@product,?___lmul
  4508  002988  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  4509  00298C  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  4510  002990  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  4511  002994  0012               	return		;funcret
  4512  002996                     __end_of___lmul:
  4513                           	opt callstack 0
  4514                           
  4515 ;; *************** function _dameHumedadSuelo *****************
  4516 ;; Defined at:
  4517 ;;		line 509 in file "main.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;  canalLeer       1    wreg     unsigned char 
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;  canalLeer       1    4[COMRAM] unsigned char 
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  2    0[COMRAM] short 
  4524 ;; Registers used:
  4525 ;;		wreg, status,2, status,0
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4531 ;;      Params:         2       0       0       0       0       0       0       0       0
  4532 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4533 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4534 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4535 ;;Total ram usage:        5 bytes
  4536 ;; Hardware stack levels used:    1
  4537 ;; Hardware stack levels required when called:    1
  4538 ;; This function calls:
  4539 ;;		Nothing
  4540 ;; This function is called by:
  4541 ;;		_lecturaAnalogaSensores
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           	psect	text20
  4546  002D0E                     __ptext20:
  4547                           	opt callstack 0
  4548  002D0E                     _dameHumedadSuelo:
  4549                           	opt callstack 27
  4550                           
  4551                           ;incstack = 0
  4552                           ;dameHumedadSuelo@canalLeer stored from wreg
  4553  002D0E  6E05               	movwf	dameHumedadSuelo@canalLeer^0,c
  4554  002D10                     
  4555                           ;main.c: 511:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  4556  002D10  0E06               	movlw	6
  4557  002D12                     u3887:
  4558  002D12  2EE8               	decfsz	wreg,f,c
  4559  002D14  D7FE               	bra	u3887
  4560  002D16  D000               	nop2	
  4561  002D18                     
  4562                           ;main.c: 513:     ADCON0bits.ADON = 1;
  4563  002D18  80C2               	bsf	194,0,c	;volatile
  4564  002D1A                     
  4565                           ;main.c: 514:     ADCON0bits.CHS = canalLeer;
  4566  002D1A  C005  F003         	movff	dameHumedadSuelo@canalLeer,??_dameHumedadSuelo
  4567  002D1E  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  4568  002D20  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  4569  002D22  50C2               	movf	194,w,c	;volatile
  4570  002D24  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  4571  002D26  0BC3               	andlw	-61
  4572  002D28  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  4573  002D2A  6EC2               	movwf	194,c	;volatile
  4574  002D2C                     
  4575                           ;main.c: 515:     ADCON0bits.GO = 1;
  4576  002D2C  82C2               	bsf	194,1,c	;volatile
  4577  002D2E                     
  4578                           ;main.c: 516:     ADCON0bits.GO_DONE = 1;
  4579  002D2E  82C2               	bsf	194,1,c	;volatile
  4580  002D30                     l335:
  4581  002D30  B2C2               	btfsc	194,1,c	;volatile
  4582  002D32  EF9D  F016         	goto	u3041
  4583  002D36  EF9F  F016         	goto	u3040
  4584  002D3A                     u3041:
  4585  002D3A  EF98  F016         	goto	l335
  4586  002D3E                     u3040:
  4587  002D3E                     
  4588                           ;main.c: 520:     ADCON0bits.ADON = 0;
  4589  002D3E  90C2               	bcf	194,0,c	;volatile
  4590  002D40                     
  4591                           ;main.c: 522:     return (ADRESH << 8) +ADRESL;
  4592  002D40  50C4               	movf	196,w,c	;volatile
  4593  002D42  6E04               	movwf	(??_dameHumedadSuelo+1)^0,c
  4594  002D44  6A03               	clrf	??_dameHumedadSuelo^0,c
  4595  002D46  50C3               	movf	195,w,c	;volatile
  4596  002D48  2403               	addwf	??_dameHumedadSuelo^0,w,c
  4597  002D4A  6E01               	movwf	?_dameHumedadSuelo^0,c
  4598  002D4C  0E00               	movlw	0
  4599  002D4E  2004               	addwfc	(??_dameHumedadSuelo+1)^0,w,c
  4600  002D50  6E02               	movwf	(?_dameHumedadSuelo+1)^0,c
  4601  002D52  0012               	return		;funcret
  4602  002D54                     __end_of_dameHumedadSuelo:
  4603                           	opt callstack 0
  4604                           
  4605 ;; *************** function _dameTemperaturaHumedad *****************
  4606 ;; Defined at:
  4607 ;;		line 778 in file "main.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;		None
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;  checkSum        2    4[COMRAM] unsigned int 
  4612 ;;  temperatura     1    9[COMRAM] unsigned char 
  4613 ;;  humedad         1    8[COMRAM] unsigned char 
  4614 ;;  temperaturaD    1    7[COMRAM] unsigned char 
  4615 ;;  humedadDecim    1    6[COMRAM] unsigned char 
  4616 ;; Return value:  Size  Location     Type
  4617 ;;                  1    wreg      void 
  4618 ;; Registers used:
  4619 ;;		wreg, status,2, status,0, cstack
  4620 ;; Tracked objects:
  4621 ;;		On entry : 0/0
  4622 ;;		On exit  : 0/0
  4623 ;;		Unchanged: 0/0
  4624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4625 ;;      Params:         0       0       0       0       0       0       0       0       0
  4626 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4627 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4628 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4629 ;;Total ram usage:        8 bytes
  4630 ;; Hardware stack levels used:    1
  4631 ;; Hardware stack levels required when called:    2
  4632 ;; This function calls:
  4633 ;;		_DHT11_ReadData
  4634 ;;		_DHT11_Start
  4635 ;;		_check_response
  4636 ;; This function is called by:
  4637 ;;		_estaSeco
  4638 ;;		_mostrarDatosSensores
  4639 ;;		_mostrarDatosSensoresWIFI
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           	psect	text21
  4644  002650                     __ptext21:
  4645                           	opt callstack 0
  4646  002650                     _dameTemperaturaHumedad:
  4647                           	opt callstack 25
  4648  002650                     
  4649                           ;main.c: 780:     PIE1bits.RCIE = 0;
  4650  002650  9A9D               	bcf	157,5,c	;volatile
  4651                           
  4652                           ;main.c: 781:     T0CONbits.TMR0ON = 0;
  4653  002652  9ED5               	bcf	213,7,c	;volatile
  4654  002654                     l3854:
  4655                           
  4656                           ;main.c: 787:     DHT11_Start();
  4657  002654  EC34  F018         	call	_DHT11_Start	;wreg free
  4658  002658                     
  4659                           ;main.c: 789:     while (!(check_response())) {
  4660  002658  ECCC  F016         	call	_check_response	;wreg free
  4661  00265C  0900               	iorlw	0
  4662  00265E  B4D8               	btfsc	status,2,c
  4663  002660  EF34  F013         	goto	u2921
  4664  002664  EF36  F013         	goto	u2920
  4665  002668                     u2921:
  4666  002668  EF2A  F013         	goto	l3854
  4667  00266C                     u2920:
  4668  00266C                     
  4669                           ;main.c: 795:     humedad = DHT11_ReadData();
  4670  00266C  EC5C  F015         	call	_DHT11_ReadData	;wreg free
  4671  002670  6E09               	movwf	dameTemperaturaHumedad@humedad^0,c
  4672                           
  4673                           ;main.c: 796:     humedadDecimal = DHT11_ReadData();
  4674  002672  EC5C  F015         	call	_DHT11_ReadData	;wreg free
  4675  002676  6E07               	movwf	dameTemperaturaHumedad@humedadDecimal^0,c
  4676                           
  4677                           ;main.c: 797:     temperatura = DHT11_ReadData();
  4678  002678  EC5C  F015         	call	_DHT11_ReadData	;wreg free
  4679  00267C  6E0A               	movwf	dameTemperaturaHumedad@temperatura^0,c
  4680                           
  4681                           ;main.c: 798:     temperaturaDecimal = DHT11_ReadData();
  4682  00267E  EC5C  F015         	call	_DHT11_ReadData	;wreg free
  4683  002682  6E08               	movwf	dameTemperaturaHumedad@temperaturaDecimal^0,c
  4684                           
  4685                           ;main.c: 799:     checkSum = DHT11_ReadData();
  4686  002684  EC5C  F015         	call	_DHT11_ReadData	;wreg free
  4687  002688  6E03               	movwf	??_dameTemperaturaHumedad^0,c
  4688  00268A  5003               	movf	??_dameTemperaturaHumedad^0,w,c
  4689  00268C  6E05               	movwf	dameTemperaturaHumedad@checkSum^0,c
  4690  00268E  6A06               	clrf	(dameTemperaturaHumedad@checkSum+1)^0,c
  4691  002690                     
  4692                           ;main.c: 801:     if (checkSum != (humedad + humedadDecimal + temperatura + temperaturaD
      +                          ecimal)) {
  4693  002690  5007               	movf	dameTemperaturaHumedad@humedadDecimal^0,w,c
  4694  002692  C009  F003         	movff	dameTemperaturaHumedad@humedad,??_dameTemperaturaHumedad
  4695  002696  6A04               	clrf	(??_dameTemperaturaHumedad+1)^0,c
  4696  002698  2603               	addwf	??_dameTemperaturaHumedad^0,f,c
  4697  00269A  0E00               	movlw	0
  4698  00269C  2204               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  4699  00269E  500A               	movf	dameTemperaturaHumedad@temperatura^0,w,c
  4700  0026A0  2603               	addwf	??_dameTemperaturaHumedad^0,f,c
  4701  0026A2  0E00               	movlw	0
  4702  0026A4  2204               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  4703  0026A6  5008               	movf	dameTemperaturaHumedad@temperaturaDecimal^0,w,c
  4704  0026A8  2603               	addwf	??_dameTemperaturaHumedad^0,f,c
  4705  0026AA  0E00               	movlw	0
  4706  0026AC  2204               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  4707  0026AE  5005               	movf	dameTemperaturaHumedad@checkSum^0,w,c
  4708  0026B0  1803               	xorwf	??_dameTemperaturaHumedad^0,w,c
  4709  0026B2  E109               	bnz	u2930
  4710  0026B4  5006               	movf	(dameTemperaturaHumedad@checkSum+1)^0,w,c
  4711  0026B6  1804               	xorwf	(??_dameTemperaturaHumedad+1)^0,w,c
  4712  0026B8  B4D8               	btfsc	status,2,c
  4713  0026BA  EF61  F013         	goto	u2931
  4714  0026BE  EF63  F013         	goto	u2930
  4715  0026C2                     u2931:
  4716  0026C2  EF65  F013         	goto	l414
  4717  0026C6                     u2930:
  4718  0026C6  EF69  F013         	goto	l415
  4719  0026CA                     l414:
  4720                           
  4721                           ;main.c: 804:         Humedad = humedad;
  4722  0026CA  C009  F07E         	movff	dameTemperaturaHumedad@humedad,_Humedad
  4723                           
  4724                           ;main.c: 805:         Temperatura = temperatura;
  4725  0026CE  C00A  F07F         	movff	dameTemperaturaHumedad@temperatura,_Temperatura
  4726  0026D2                     l415:
  4727                           
  4728                           ;main.c: 808:     PIE1bits.RCIE = 1;
  4729  0026D2  8A9D               	bsf	157,5,c	;volatile
  4730                           
  4731                           ;main.c: 809:     T0CONbits.TMR0ON = 1;
  4732  0026D4  8ED5               	bsf	213,7,c	;volatile
  4733  0026D6  0012               	return		;funcret
  4734  0026D8                     __end_of_dameTemperaturaHumedad:
  4735                           	opt callstack 0
  4736                           
  4737 ;; *************** function _check_response *****************
  4738 ;; Defined at:
  4739 ;;		line 38 in file "./DHT11.h"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;		None
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;  respuesta       1    0[COMRAM] unsigned char 
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  1    wreg      unsigned char 
  4746 ;; Registers used:
  4747 ;;		wreg, status,2
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4753 ;;      Params:         0       0       0       0       0       0       0       0       0
  4754 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4755 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4756 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4757 ;;Total ram usage:        1 bytes
  4758 ;; Hardware stack levels used:    1
  4759 ;; Hardware stack levels required when called:    1
  4760 ;; This function calls:
  4761 ;;		Nothing
  4762 ;; This function is called by:
  4763 ;;		_dameTemperaturaHumedad
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text22
  4768  002D98                     __ptext22:
  4769                           	opt callstack 0
  4770  002D98                     _check_response:
  4771                           	opt callstack 25
  4772  002D98                     
  4773                           ;./DHT11.h: 40:     unsigned char respuesta = 0;
  4774  002D98  0E00               	movlw	0
  4775  002D9A  6E01               	movwf	check_response@respuesta^0,c
  4776  002D9C                     
  4777                           ;./DHT11.h: 41:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4778  002D9C  0E0D               	movlw	13
  4779  002D9E                     u3897:
  4780  002D9E  2EE8               	decfsz	wreg,f,c
  4781  002DA0  D7FE               	bra	u3897
  4782  002DA2  F000               	nop	
  4783  002DA4                     
  4784                           ;./DHT11.h: 42:     if (!PORTDbits.RD7) {
  4785  002DA4  BE83               	btfsc	131,7,c	;volatile
  4786  002DA6  EFD7  F016         	goto	u2641
  4787  002DAA  EFD9  F016         	goto	u2640
  4788  002DAE                     u2641:
  4789  002DAE  EFEA  F016         	goto	l3632
  4790  002DB2                     u2640:
  4791  002DB2                     
  4792                           ;./DHT11.h: 43:         _delay((unsigned long)((80)*(4000000/4000000.0)));
  4793  002DB2  0E1A               	movlw	26
  4794  002DB4                     u3907:
  4795  002DB4  2EE8               	decfsz	wreg,f,c
  4796  002DB6  D7FE               	bra	u3907
  4797  002DB8  D000               	nop2	
  4798  002DBA                     
  4799                           ;./DHT11.h: 44:         if (PORTDbits.RD7) {
  4800  002DBA  AE83               	btfss	131,7,c	;volatile
  4801  002DBC  EFE2  F016         	goto	u2651
  4802  002DC0  EFE4  F016         	goto	u2650
  4803  002DC4                     u2651:
  4804  002DC4  EFEA  F016         	goto	l3632
  4805  002DC8                     u2650:
  4806  002DC8                     
  4807                           ;./DHT11.h: 45:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  4808  002DC8  0E10               	movlw	16
  4809  002DCA                     u3917:
  4810  002DCA  2EE8               	decfsz	wreg,f,c
  4811  002DCC  D7FE               	bra	u3917
  4812  002DCE  D000               	nop2	
  4813  002DD0                     
  4814                           ;./DHT11.h: 46:             respuesta = 1;
  4815  002DD0  0E01               	movlw	1
  4816  002DD2  6E01               	movwf	check_response@respuesta^0,c
  4817  002DD4                     l3632:
  4818                           
  4819                           ;./DHT11.h: 50:     return respuesta;
  4820  002DD4  5001               	movf	check_response@respuesta^0,w,c
  4821  002DD6  0012               	return		;funcret
  4822  002DD8                     __end_of_check_response:
  4823                           	opt callstack 0
  4824                           
  4825 ;; *************** function _DHT11_Start *****************
  4826 ;; Defined at:
  4827 ;;		line 23 in file "./DHT11.h"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;		None
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;		None
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  1    wreg      void 
  4834 ;; Registers used:
  4835 ;;		wreg
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4841 ;;      Params:         0       0       0       0       0       0       0       0       0
  4842 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4843 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4844 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4845 ;;Total ram usage:        1 bytes
  4846 ;; Hardware stack levels used:    1
  4847 ;; Hardware stack levels required when called:    1
  4848 ;; This function calls:
  4849 ;;		Nothing
  4850 ;; This function is called by:
  4851 ;;		_dameTemperaturaHumedad
  4852 ;; This function uses a non-reentrant model
  4853 ;;
  4854                           
  4855                           	psect	text23
  4856  003068                     __ptext23:
  4857                           	opt callstack 0
  4858  003068                     _DHT11_Start:
  4859                           	opt callstack 25
  4860  003068                     
  4861                           ;./DHT11.h: 24:     TRISDbits.RD7 = 0;
  4862  003068  9E95               	bcf	149,7,c	;volatile
  4863                           
  4864                           ;./DHT11.h: 26:     LATDbits.LATD7 = 0;
  4865  00306A  9E8C               	bcf	140,7,c	;volatile
  4866  00306C                     
  4867                           ;./DHT11.h: 28:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4868  00306C  0E1A               	movlw	26
  4869  00306E  6E01               	movwf	??_DHT11_Start^0,c
  4870  003070  0EF8               	movlw	248
  4871  003072                     u3927:
  4872  003072  2EE8               	decfsz	wreg,f,c
  4873  003074  D7FE               	bra	u3927
  4874  003076  2E01               	decfsz	??_DHT11_Start^0,f,c
  4875  003078  D7FC               	bra	u3927
  4876  00307A  D000               	nop2	
  4877  00307C                     
  4878                           ;./DHT11.h: 30:     LATDbits.LATD7 = 1;
  4879  00307C  8E8C               	bsf	140,7,c	;volatile
  4880                           
  4881                           ;./DHT11.h: 32:     _delay((unsigned long)((30)*(4000000/4000000.0)));
  4882  00307E  0E0A               	movlw	10
  4883  003080                     u3937:
  4884  003080  2EE8               	decfsz	wreg,f,c
  4885  003082  D7FE               	bra	u3937
  4886  003084                     
  4887                           ;./DHT11.h: 34:     TRISDbits.RD7 = 1;
  4888  003084  8E95               	bsf	149,7,c	;volatile
  4889  003086  0012               	return		;funcret
  4890  003088                     __end_of_DHT11_Start:
  4891                           	opt callstack 0
  4892                           
  4893 ;; *************** function _DHT11_ReadData *****************
  4894 ;; Defined at:
  4895 ;;		line 9 in file "./DHT11.h"
  4896 ;; Parameters:    Size  Location     Type
  4897 ;;		None
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;  data            1    1[COMRAM] unsigned char 
  4900 ;;  i               1    0[COMRAM] unsigned char 
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  1    wreg      unsigned char 
  4903 ;; Registers used:
  4904 ;;		wreg, status,2, status,0
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4910 ;;      Params:         0       0       0       0       0       0       0       0       0
  4911 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4912 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4913 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4914 ;;Total ram usage:        2 bytes
  4915 ;; Hardware stack levels used:    1
  4916 ;; Hardware stack levels required when called:    1
  4917 ;; This function calls:
  4918 ;;		Nothing
  4919 ;; This function is called by:
  4920 ;;		_dameTemperaturaHumedad
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           	psect	text24
  4925  002AB8                     __ptext24:
  4926                           	opt callstack 0
  4927  002AB8                     _DHT11_ReadData:
  4928                           	opt callstack 25
  4929  002AB8                     
  4930                           ;./DHT11.h: 10:     char i, data = 0;
  4931  002AB8  0E00               	movlw	0
  4932  002ABA  6E02               	movwf	DHT11_ReadData@data^0,c
  4933                           
  4934                           ;./DHT11.h: 11:     for (i = 0; i < 8; i++) {
  4935  002ABC  0E00               	movlw	0
  4936  002ABE  6E01               	movwf	DHT11_ReadData@i^0,c
  4937  002AC0                     l152:
  4938  002AC0  AE83               	btfss	131,7,c	;volatile
  4939  002AC2  EF65  F015         	goto	u2601
  4940  002AC6  EF67  F015         	goto	u2600
  4941  002ACA                     u2601:
  4942  002ACA  EF60  F015         	goto	l152
  4943  002ACE                     u2600:
  4944  002ACE                     
  4945                           ;./DHT11.h: 13:         _delay((unsigned long)((30)*(4000000/4000000.0)));
  4946  002ACE  0E0A               	movlw	10
  4947  002AD0                     u3947:
  4948  002AD0  2EE8               	decfsz	wreg,f,c
  4949  002AD2  D7FE               	bra	u3947
  4950  002AD4                     
  4951                           ;./DHT11.h: 14:         if (PORTDbits.RD7 & 1)
  4952  002AD4  AE83               	btfss	131,7,c	;volatile
  4953  002AD6  EF6F  F015         	goto	u2611
  4954  002ADA  EF71  F015         	goto	u2610
  4955  002ADE                     u2611:
  4956  002ADE  EF75  F015         	goto	l3600
  4957  002AE2                     u2610:
  4958  002AE2                     
  4959                           ;./DHT11.h: 15:             data = ((data << 1) | 1);
  4960  002AE2  80D8               	bsf	status,0,c
  4961  002AE4  3602               	rlcf	DHT11_ReadData@data^0,f,c
  4962  002AE6  EF78  F015         	goto	l157
  4963  002AEA                     l3600:
  4964                           
  4965                           ;./DHT11.h: 17:             data = (data << 1);
  4966  002AEA  5002               	movf	DHT11_ReadData@data^0,w,c
  4967  002AEC  2402               	addwf	DHT11_ReadData@data^0,w,c
  4968  002AEE  6E02               	movwf	DHT11_ReadData@data^0,c
  4969  002AF0                     l157:
  4970  002AF0  BE83               	btfsc	131,7,c	;volatile
  4971  002AF2  EF7D  F015         	goto	u2621
  4972  002AF6  EF7F  F015         	goto	u2620
  4973  002AFA                     u2621:
  4974  002AFA  EF78  F015         	goto	l157
  4975  002AFE                     u2620:
  4976  002AFE                     
  4977                           ;./DHT11.h: 19:     }
  4978  002AFE  2A01               	incf	DHT11_ReadData@i^0,f,c
  4979  002B00  0E07               	movlw	7
  4980  002B02  6401               	cpfsgt	DHT11_ReadData@i^0,c
  4981  002B04  EF86  F015         	goto	u2631
  4982  002B08  EF88  F015         	goto	u2630
  4983  002B0C                     u2631:
  4984  002B0C  EF60  F015         	goto	l152
  4985  002B10                     u2630:
  4986  002B10                     
  4987                           ;./DHT11.h: 20:     return data;
  4988  002B10  5002               	movf	DHT11_ReadData@data^0,w,c
  4989  002B12  0012               	return		;funcret
  4990  002B14                     __end_of_DHT11_ReadData:
  4991                           	opt callstack 0
  4992                           
  4993 ;; *************** function _leeHorariosMemoria *****************
  4994 ;; Defined at:
  4995 ;;		line 273 in file "main.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;		None
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;  j               2    9[COMRAM] int 
  5000 ;;  i               2   13[COMRAM] int 
  5001 ;;  contMemoria     2   11[COMRAM] int 
  5002 ;;  caracterLeid    1    8[COMRAM] unsigned char 
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      void 
  5005 ;; Registers used:
  5006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5012 ;;      Params:         0       0       0       0       0       0       0       0       0
  5013 ;;      Locals:         7       0       0       0       0       0       0       0       0
  5014 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5015 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5016 ;;Total ram usage:        9 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:    4
  5019 ;; This function calls:
  5020 ;;		_UART_write
  5021 ;;		___wmul
  5022 ;;		_leer_eeprom
  5023 ;; This function is called by:
  5024 ;;		_sistemaPrincipal
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           	psect	text25
  5029  001486                     __ptext25:
  5030                           	opt callstack 0
  5031  001486                     _leeHorariosMemoria:
  5032                           	opt callstack 25
  5033  001486                     
  5034                           ;main.c: 275:     int contMemoria = 0;
  5035  001486  0E00               	movlw	0
  5036  001488  6E0D               	movwf	(leeHorariosMemoria@contMemoria+1)^0,c
  5037  00148A  0E00               	movlw	0
  5038  00148C  6E0C               	movwf	leeHorariosMemoria@contMemoria^0,c
  5039  00148E                     
  5040                           ;main.c: 276:     unsigned char caracterLeido;;main.c: 278:     caracterLeido = leer_eep
      +                          rom(contMemoria++);
  5041  00148E  0E00               	movlw	0
  5042  001490  6E04               	movwf	(leer_eeprom@direccion+1)^0,c
  5043  001492  0E00               	movlw	0
  5044  001494  6E03               	movwf	leer_eeprom@direccion^0,c
  5045  001496  EC4B  F017         	call	_leer_eeprom	;wreg free
  5046  00149A  6E09               	movwf	leeHorariosMemoria@caracterLeido^0,c
  5047  00149C  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  5048  00149E  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  5049  0014A0                     
  5050                           ;main.c: 280:     if (caracterLeido == 'T') {
  5051  0014A0  0E54               	movlw	84
  5052  0014A2  1809               	xorwf	leeHorariosMemoria@caracterLeido^0,w,c
  5053  0014A4  A4D8               	btfss	status,2,c
  5054  0014A6  EF57  F00A         	goto	u3361
  5055  0014AA  EF59  F00A         	goto	u3360
  5056  0014AE                     u3361:
  5057  0014AE  EFF6  F00A         	goto	l4332
  5058  0014B2                     u3360:
  5059  0014B2                     
  5060                           ;main.c: 282:         for (int i = 0; i < 24; i++) {
  5061  0014B2  0E00               	movlw	0
  5062  0014B4  6E0F               	movwf	(leeHorariosMemoria@i+1)^0,c
  5063  0014B6  0E00               	movlw	0
  5064  0014B8  6E0E               	movwf	leeHorariosMemoria@i^0,c
  5065  0014BA                     l4304:
  5066                           
  5067                           ;main.c: 283:             horarios[i].hora = leer_eeprom(contMemoria++);
  5068  0014BA  C00E  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  5069  0014BE  C00F  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  5070  0014C2  0E00               	movlw	0
  5071  0014C4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5072  0014C6  0E0C               	movlw	12
  5073  0014C8  6E03               	movwf	___wmul@multiplicand^0,c
  5074  0014CA  EC11  F018         	call	___wmul	;wreg free
  5075  0014CE  0E32               	movlw	low _horarios
  5076  0014D0  2401               	addwf	?___wmul^0,w,c
  5077  0014D2  6ED9               	movwf	fsr2l,c
  5078  0014D4  0E01               	movlw	high _horarios
  5079  0014D6  2002               	addwfc	(?___wmul+1)^0,w,c
  5080  0014D8  6EDA               	movwf	fsr2h,c
  5081  0014DA  C00C  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  5082  0014DE  C00D  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  5083  0014E2  EC4B  F017         	call	_leer_eeprom	;wreg free
  5084  0014E6  6EDF               	movwf	indf2,c
  5085  0014E8  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  5086  0014EA  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  5087  0014EC                     
  5088                           ;main.c: 285:             for (int j = 0; j < 7; j++) {
  5089  0014EC  0E00               	movlw	0
  5090  0014EE  6E0B               	movwf	(leeHorariosMemoria@j+1)^0,c
  5091  0014F0  0E00               	movlw	0
  5092  0014F2  6E0A               	movwf	leeHorariosMemoria@j^0,c
  5093  0014F4                     l4314:
  5094                           
  5095                           ;main.c: 286:                 horarios[i].dias[j] = leer_eeprom(contMemoria++);
  5096  0014F4  C00E  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  5097  0014F8  C00F  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  5098  0014FC  0E00               	movlw	0
  5099  0014FE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5100  001500  0E0C               	movlw	12
  5101  001502  6E03               	movwf	___wmul@multiplicand^0,c
  5102  001504  EC11  F018         	call	___wmul	;wreg free
  5103  001508  0E32               	movlw	low _horarios
  5104  00150A  6E07               	movwf	??_leeHorariosMemoria^0,c
  5105  00150C  0E01               	movlw	high _horarios
  5106  00150E  6E08               	movwf	(??_leeHorariosMemoria+1)^0,c
  5107  001510  0E01               	movlw	1
  5108  001512  2607               	addwf	??_leeHorariosMemoria^0,f,c
  5109  001514  0E00               	movlw	0
  5110  001516  2208               	addwfc	(??_leeHorariosMemoria+1)^0,f,c
  5111  001518  5001               	movf	?___wmul^0,w,c
  5112  00151A  2607               	addwf	??_leeHorariosMemoria^0,f,c
  5113  00151C  5002               	movf	(?___wmul+1)^0,w,c
  5114  00151E  2208               	addwfc	(??_leeHorariosMemoria+1)^0,f,c
  5115  001520  500A               	movf	leeHorariosMemoria@j^0,w,c
  5116  001522  2407               	addwf	??_leeHorariosMemoria^0,w,c
  5117  001524  6ED9               	movwf	fsr2l,c
  5118  001526  500B               	movf	(leeHorariosMemoria@j+1)^0,w,c
  5119  001528  2008               	addwfc	(??_leeHorariosMemoria+1)^0,w,c
  5120  00152A  6EDA               	movwf	fsr2h,c
  5121  00152C  C00C  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  5122  001530  C00D  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  5123  001534  EC4B  F017         	call	_leer_eeprom	;wreg free
  5124  001538  6EDF               	movwf	indf2,c
  5125  00153A  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  5126  00153C  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  5127  00153E                     
  5128                           ;main.c: 287:             }
  5129  00153E  4A0A               	infsnz	leeHorariosMemoria@j^0,f,c
  5130  001540  2A0B               	incf	(leeHorariosMemoria@j+1)^0,f,c
  5131  001542  BE0B               	btfsc	(leeHorariosMemoria@j+1)^0,7,c
  5132  001544  EFAD  F00A         	goto	u3371
  5133  001548  500B               	movf	(leeHorariosMemoria@j+1)^0,w,c
  5134  00154A  E109               	bnz	u3370
  5135  00154C  0E07               	movlw	7
  5136  00154E  5C0A               	subwf	leeHorariosMemoria@j^0,w,c
  5137  001550  A0D8               	btfss	status,0,c
  5138  001552  EFAD  F00A         	goto	u3371
  5139  001556  EFAF  F00A         	goto	u3370
  5140  00155A                     u3371:
  5141  00155A  EF7A  F00A         	goto	l4314
  5142  00155E                     u3370:
  5143  00155E                     
  5144                           ;main.c: 289:             horarios[i].regar = leer_eeprom(contMemoria++);
  5145  00155E  C00E  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  5146  001562  C00F  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  5147  001566  0E00               	movlw	0
  5148  001568  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5149  00156A  0E0C               	movlw	12
  5150  00156C  6E03               	movwf	___wmul@multiplicand^0,c
  5151  00156E  EC11  F018         	call	___wmul	;wreg free
  5152  001572  0E3B               	movlw	low (_horarios+9)
  5153  001574  2401               	addwf	?___wmul^0,w,c
  5154  001576  6ED9               	movwf	fsr2l,c
  5155  001578  0E01               	movlw	high (_horarios+9)
  5156  00157A  2002               	addwfc	(?___wmul+1)^0,w,c
  5157  00157C  6EDA               	movwf	fsr2h,c
  5158  00157E  C00C  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  5159  001582  C00D  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  5160  001586  EC4B  F017         	call	_leer_eeprom	;wreg free
  5161  00158A  6EDF               	movwf	indf2,c
  5162  00158C  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  5163  00158E  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  5164  001590                     
  5165                           ;main.c: 290:             horarios[i].tiempoRegar = leer_eeprom(contMemoria++);
  5166  001590  C00E  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  5167  001594  C00F  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  5168  001598  0E00               	movlw	0
  5169  00159A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5170  00159C  0E0C               	movlw	12
  5171  00159E  6E03               	movwf	___wmul@multiplicand^0,c
  5172  0015A0  EC11  F018         	call	___wmul	;wreg free
  5173  0015A4  0E3D               	movlw	low (_horarios+11)
  5174  0015A6  2401               	addwf	?___wmul^0,w,c
  5175  0015A8  6ED9               	movwf	fsr2l,c
  5176  0015AA  0E01               	movlw	high (_horarios+11)
  5177  0015AC  2002               	addwfc	(?___wmul+1)^0,w,c
  5178  0015AE  6EDA               	movwf	fsr2h,c
  5179  0015B0  C00C  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  5180  0015B4  C00D  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  5181  0015B8  EC4B  F017         	call	_leer_eeprom	;wreg free
  5182  0015BC  6EDF               	movwf	indf2,c
  5183  0015BE  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  5184  0015C0  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  5185                           
  5186                           ;main.c: 291:         }
  5187  0015C2  4A0E               	infsnz	leeHorariosMemoria@i^0,f,c
  5188  0015C4  2A0F               	incf	(leeHorariosMemoria@i+1)^0,f,c
  5189  0015C6  BE0F               	btfsc	(leeHorariosMemoria@i+1)^0,7,c
  5190  0015C8  EFEF  F00A         	goto	u3381
  5191  0015CC  500F               	movf	(leeHorariosMemoria@i+1)^0,w,c
  5192  0015CE  E109               	bnz	u3380
  5193  0015D0  0E18               	movlw	24
  5194  0015D2  5C0E               	subwf	leeHorariosMemoria@i^0,w,c
  5195  0015D4  A0D8               	btfss	status,0,c
  5196  0015D6  EFEF  F00A         	goto	u3381
  5197  0015DA  EFF1  F00A         	goto	u3380
  5198  0015DE                     u3381:
  5199  0015DE  EF5D  F00A         	goto	l4304
  5200  0015E2                     u3380:
  5201  0015E2                     
  5202                           ;main.c: 294:         UART_write('E');
  5203  0015E2  0E45               	movlw	69
  5204  0015E4  EC6F  F018         	call	_UART_write
  5205                           
  5206                           ;main.c: 296:     } else {
  5207  0015E8  EFF9  F00A         	goto	l281
  5208  0015EC                     l4332:
  5209                           
  5210                           ;main.c: 298:         UART_write('@');
  5211  0015EC  0E40               	movlw	64
  5212  0015EE  EC6F  F018         	call	_UART_write
  5213  0015F2                     l281:
  5214  0015F2  0012               	return		;funcret
  5215  0015F4                     __end_of_leeHorariosMemoria:
  5216                           	opt callstack 0
  5217                           
  5218 ;; *************** function _leer_eeprom *****************
  5219 ;; Defined at:
  5220 ;;		line 237 in file "main.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;  direccion       2    2[COMRAM] unsigned short 
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;  dato            1    5[COMRAM] unsigned char 
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  1    wreg      unsigned char 
  5227 ;; Registers used:
  5228 ;;		wreg, status,2, status,0, cstack
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5234 ;;      Params:         2       0       0       0       0       0       0       0       0
  5235 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5236 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5237 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5238 ;;Total ram usage:        4 bytes
  5239 ;; Hardware stack levels used:    1
  5240 ;; Hardware stack levels required when called:    3
  5241 ;; This function calls:
  5242 ;;		_i2c_detener
  5243 ;;		_i2c_envia_dato
  5244 ;;		_i2c_inicia_com
  5245 ;;		_i2c_recibe_dato
  5246 ;;		_i2c_reinicia_com
  5247 ;; This function is called by:
  5248 ;;		_leeHorariosMemoria
  5249 ;; This function uses a non-reentrant model
  5250 ;;
  5251                           
  5252                           	psect	text26
  5253  002E96                     __ptext26:
  5254                           	opt callstack 0
  5255  002E96                     _leer_eeprom:
  5256                           	opt callstack 25
  5257  002E96                     
  5258                           ;main.c: 239:     unsigned char dato;;main.c: 241:     i2c_inicia_com();
  5259  002E96  ECA7  F018         	call	_i2c_inicia_com	;wreg free
  5260                           
  5261                           ;main.c: 242:     i2c_envia_dato(0xAE);
  5262  002E9A  0EAE               	movlw	174
  5263  002E9C  EC8D  F018         	call	_i2c_envia_dato
  5264                           
  5265                           ;main.c: 243:     i2c_envia_dato(direccion >> 8);
  5266  002EA0  5004               	movf	(leer_eeprom@direccion+1)^0,w,c
  5267  002EA2  EC8D  F018         	call	_i2c_envia_dato
  5268                           
  5269                           ;main.c: 244:     i2c_envia_dato(direccion);
  5270  002EA6  5003               	movf	leer_eeprom@direccion^0,w,c
  5271  002EA8  EC8D  F018         	call	_i2c_envia_dato
  5272                           
  5273                           ;main.c: 245:     i2c_reinicia_com();
  5274  002EAC  ECA3  F018         	call	_i2c_reinicia_com	;wreg free
  5275                           
  5276                           ;main.c: 246:     i2c_envia_dato(0xAF);
  5277  002EB0  0EAF               	movlw	175
  5278  002EB2  EC8D  F018         	call	_i2c_envia_dato
  5279                           
  5280                           ;main.c: 247:     dato = i2c_recibe_dato();
  5281  002EB6  EC62  F018         	call	_i2c_recibe_dato	;wreg free
  5282  002EBA  6E06               	movwf	leer_eeprom@dato^0,c
  5283                           
  5284                           ;main.c: 248:     i2c_detener();
  5285  002EBC  ECAB  F018         	call	_i2c_detener	;wreg free
  5286  002EC0                     
  5287                           ;main.c: 249:     _delay((unsigned long)((10)*(4000000/4000.0)));
  5288  002EC0  0E0D               	movlw	13
  5289  002EC2  6E05               	movwf	??_leer_eeprom^0,c
  5290  002EC4  0EFC               	movlw	252
  5291  002EC6                     u3957:
  5292  002EC6  2EE8               	decfsz	wreg,f,c
  5293  002EC8  D7FE               	bra	u3957
  5294  002ECA  2E05               	decfsz	??_leer_eeprom^0,f,c
  5295  002ECC  D7FC               	bra	u3957
  5296  002ECE                     
  5297                           ;main.c: 251:     return dato;
  5298  002ECE  5006               	movf	leer_eeprom@dato^0,w,c
  5299  002ED0  0012               	return		;funcret
  5300  002ED2                     __end_of_leer_eeprom:
  5301                           	opt callstack 0
  5302                           
  5303 ;; *************** function _i2c_reinicia_com *****************
  5304 ;; Defined at:
  5305 ;;		line 37 in file "./I2C.h"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;		None
  5308 ;; Auto vars:     Size  Location     Type
  5309 ;;		None
  5310 ;; Return value:  Size  Location     Type
  5311 ;;                  1    wreg      void 
  5312 ;; Registers used:
  5313 ;;		wreg, status,2, status,0, cstack
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5319 ;;      Params:         0       0       0       0       0       0       0       0       0
  5320 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5321 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5322 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5323 ;;Total ram usage:        0 bytes
  5324 ;; Hardware stack levels used:    1
  5325 ;; Hardware stack levels required when called:    2
  5326 ;; This function calls:
  5327 ;;		_i2c_espera
  5328 ;; This function is called by:
  5329 ;;		_leer_rtc
  5330 ;;		_leer_eeprom
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           	psect	text27
  5335  003146                     __ptext27:
  5336                           	opt callstack 0
  5337  003146                     _i2c_reinicia_com:
  5338                           	opt callstack 25
  5339  003146                     
  5340                           ;./I2C.h: 38:     i2c_espera();
  5341  003146  ECFE  F017         	call	_i2c_espera	;wreg free
  5342  00314A                     
  5343                           ;./I2C.h: 39:     SSPCON2bits.RSEN = 1;
  5344  00314A  82C5               	bsf	197,1,c	;volatile
  5345  00314C  0012               	return		;funcret
  5346  00314E                     __end_of_i2c_reinicia_com:
  5347                           	opt callstack 0
  5348                           
  5349 ;; *************** function _i2c_recibe_dato *****************
  5350 ;; Defined at:
  5351 ;;		line 68 in file "./I2C.h"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;		None
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;  datoleido       1    1[COMRAM] unsigned char 
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  1    wreg      unsigned char 
  5358 ;; Registers used:
  5359 ;;		wreg, status,2, status,0, cstack
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5365 ;;      Params:         0       0       0       0       0       0       0       0       0
  5366 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5367 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5368 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5369 ;;Total ram usage:        1 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; Hardware stack levels required when called:    2
  5372 ;; This function calls:
  5373 ;;		_i2c_espera
  5374 ;; This function is called by:
  5375 ;;		_leer_rtc
  5376 ;;		_leer_eeprom
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           	psect	text28
  5381  0030C4                     __ptext28:
  5382                           	opt callstack 0
  5383  0030C4                     _i2c_recibe_dato:
  5384                           	opt callstack 25
  5385  0030C4                     
  5386                           ;./I2C.h: 70:     unsigned char datoleido;;./I2C.h: 73:     i2c_espera();
  5387  0030C4  ECFE  F017         	call	_i2c_espera	;wreg free
  5388  0030C8                     
  5389                           ;./I2C.h: 74:     SSPCON2bits.RCEN = 1;
  5390  0030C8  86C5               	bsf	197,3,c	;volatile
  5391                           
  5392                           ;./I2C.h: 76:     i2c_espera();
  5393  0030CA  ECFE  F017         	call	_i2c_espera	;wreg free
  5394  0030CE                     
  5395                           ;./I2C.h: 77:     datoleido = SSPBUF;
  5396  0030CE  CFC9 F002          	movff	4041,i2c_recibe_dato@datoleido	;volatile
  5397                           
  5398                           ;./I2C.h: 80:     i2c_espera();
  5399  0030D2  ECFE  F017         	call	_i2c_espera	;wreg free
  5400  0030D6                     
  5401                           ;./I2C.h: 82:     SSPCON2bits.ACKDT = 1;
  5402  0030D6  8AC5               	bsf	197,5,c	;volatile
  5403  0030D8                     
  5404                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
  5405  0030D8  88C5               	bsf	197,4,c	;volatile
  5406  0030DA                     
  5407                           ;./I2C.h: 91:     return datoleido;
  5408  0030DA  5002               	movf	i2c_recibe_dato@datoleido^0,w,c
  5409  0030DC  0012               	return		;funcret
  5410  0030DE                     __end_of_i2c_recibe_dato:
  5411                           	opt callstack 0
  5412                           
  5413 ;; *************** function _fijaHoraRtc *****************
  5414 ;; Defined at:
  5415 ;;		line 391 in file "main.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;		None
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;		None
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  1    wreg      void 
  5422 ;; Registers used:
  5423 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5429 ;;      Params:         0       0       0       0       0       0       0       0       0
  5430 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5432 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5433 ;;Total ram usage:        0 bytes
  5434 ;; Hardware stack levels used:    1
  5435 ;; Hardware stack levels required when called:    5
  5436 ;; This function calls:
  5437 ;;		_UART_write
  5438 ;;		_escribe_rtc
  5439 ;;		_setRtc
  5440 ;; This function is called by:
  5441 ;;		_sistemaPrincipal
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445                           	psect	text29
  5446  002E58                     __ptext29:
  5447                           	opt callstack 0
  5448  002E58                     _fijaHoraRtc:
  5449                           	opt callstack 24
  5450  002E58                     
  5451                           ;main.c: 399:     if (setRtc(0x02)) {
  5452  002E58  0E02               	movlw	2
  5453  002E5A  EC26  F014         	call	_setRtc
  5454  002E5E  0900               	iorlw	0
  5455  002E60  B4D8               	btfsc	status,2,c
  5456  002E62  EF35  F017         	goto	u3491
  5457  002E66  EF37  F017         	goto	u3490
  5458  002E6A                     u3491:
  5459  002E6A  EF4A  F017         	goto	l313
  5460  002E6E                     u3490:
  5461  002E6E                     
  5462                           ;main.c: 401:         if (setRtc(0x01)) {
  5463  002E6E  0E01               	movlw	1
  5464  002E70  EC26  F014         	call	_setRtc
  5465  002E74  0900               	iorlw	0
  5466  002E76  B4D8               	btfsc	status,2,c
  5467  002E78  EF40  F017         	goto	u3501
  5468  002E7C  EF42  F017         	goto	u3500
  5469  002E80                     u3501:
  5470  002E80  EF4A  F017         	goto	l313
  5471  002E84                     u3500:
  5472  002E84                     
  5473                           ;main.c: 403:             escribe_rtc(0x00, 0);
  5474  002E84  0E00               	movlw	0
  5475  002E86  6E03               	movwf	escribe_rtc@dato^0,c
  5476  002E88  0E00               	movlw	0
  5477  002E8A  EC53  F018         	call	_escribe_rtc
  5478  002E8E                     
  5479                           ;main.c: 404:             UART_write('E');
  5480  002E8E  0E45               	movlw	69
  5481  002E90  EC6F  F018         	call	_UART_write
  5482  002E94                     l313:
  5483  002E94  0012               	return		;funcret
  5484  002E96                     __end_of_fijaHoraRtc:
  5485                           	opt callstack 0
  5486                           
  5487 ;; *************** function _fijaDiaRtc *****************
  5488 ;; Defined at:
  5489 ;;		line 195 in file "main.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;		None
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;		None
  5494 ;; Return value:  Size  Location     Type
  5495 ;;                  1    wreg      void 
  5496 ;; Registers used:
  5497 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5503 ;;      Params:         0       0       0       0       0       0       0       0       0
  5504 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5505 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5506 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5507 ;;Total ram usage:        0 bytes
  5508 ;; Hardware stack levels used:    1
  5509 ;; Hardware stack levels required when called:    5
  5510 ;; This function calls:
  5511 ;;		_UART_write
  5512 ;;		_setRtc
  5513 ;; This function is called by:
  5514 ;;		_sistemaPrincipal
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           
  5518                           	psect	text30
  5519  003088                     __ptext30:
  5520                           	opt callstack 0
  5521  003088                     _fijaDiaRtc:
  5522                           	opt callstack 24
  5523  003088                     
  5524                           ;main.c: 199:     if (setRtc(0x03)) {
  5525  003088  0E03               	movlw	3
  5526  00308A  EC26  F014         	call	_setRtc
  5527  00308E  0900               	iorlw	0
  5528  003090  B4D8               	btfsc	status,2,c
  5529  003092  EF4D  F018         	goto	u3351
  5530  003096  EF4F  F018         	goto	u3350
  5531  00309A                     u3351:
  5532  00309A  EF52  F018         	goto	l255
  5533  00309E                     u3350:
  5534  00309E                     
  5535                           ;main.c: 201:         UART_write('E');
  5536  00309E  0E45               	movlw	69
  5537  0030A0  EC6F  F018         	call	_UART_write
  5538  0030A4                     l255:
  5539  0030A4  0012               	return		;funcret
  5540  0030A6                     __end_of_fijaDiaRtc:
  5541                           	opt callstack 0
  5542                           
  5543 ;; *************** function _setRtc *****************
  5544 ;; Defined at:
  5545 ;;		line 206 in file "main.c"
  5546 ;; Parameters:    Size  Location     Type
  5547 ;;  direccion       1    wreg     unsigned char 
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;  direccion       1   12[COMRAM] unsigned char 
  5550 ;;  dato            1   15[COMRAM] unsigned char 
  5551 ;;  datoRtc         1   14[COMRAM] unsigned char 
  5552 ;;  seteado         1   13[COMRAM] unsigned char 
  5553 ;; Return value:  Size  Location     Type
  5554 ;;                  1    wreg      unsigned char 
  5555 ;; Registers used:
  5556 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5557 ;; Tracked objects:
  5558 ;;		On entry : 0/0
  5559 ;;		On exit  : 0/0
  5560 ;;		Unchanged: 0/0
  5561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5562 ;;      Params:         0       0       0       0       0       0       0       0       0
  5563 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5564 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5565 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5566 ;;Total ram usage:        4 bytes
  5567 ;; Hardware stack levels used:    1
  5568 ;; Hardware stack levels required when called:    4
  5569 ;; This function calls:
  5570 ;;		___awdiv
  5571 ;;		___awmod
  5572 ;;		_escribe_rtc
  5573 ;;		_getValue
  5574 ;; This function is called by:
  5575 ;;		_fijaDiaRtc
  5576 ;;		_fijaHoraRtc
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           
  5580                           	psect	text31
  5581  00284C                     __ptext31:
  5582                           	opt callstack 0
  5583  00284C                     _setRtc:
  5584                           	opt callstack 24
  5585                           
  5586                           ;incstack = 0
  5587                           ;setRtc@direccion stored from wreg
  5588  00284C  6E0D               	movwf	setRtc@direccion^0,c
  5589  00284E                     
  5590                           ;main.c: 209:     unsigned char seteado = 0;
  5591  00284E  0E00               	movlw	0
  5592  002850  6E0E               	movwf	setRtc@seteado^0,c
  5593                           
  5594                           ;main.c: 210:     unsigned char datoRtc = 0;
  5595  002852  0E00               	movlw	0
  5596  002854  6E0F               	movwf	setRtc@datoRtc^0,c
  5597  002856                     
  5598                           ;main.c: 212:     dato = getValue(2);
  5599  002856  0E00               	movlw	0
  5600  002858  6E03               	movwf	(getValue@numCharacters+1)^0,c
  5601  00285A  0E02               	movlw	2
  5602  00285C  6E02               	movwf	getValue@numCharacters^0,c
  5603  00285E  ECE8  F006         	call	_getValue	;wreg free
  5604  002862  6E10               	movwf	setRtc@dato^0,c
  5605  002864                     
  5606                           ;main.c: 214:     if (dato != '@') {
  5607  002864  0E40               	movlw	64
  5608  002866  1810               	xorwf	setRtc@dato^0,w,c
  5609  002868  B4D8               	btfsc	status,2,c
  5610  00286A  EF39  F014         	goto	u3251
  5611  00286E  EF3B  F014         	goto	u3250
  5612  002872                     u3251:
  5613  002872  EF5C  F014         	goto	l4154
  5614  002876                     u3250:
  5615  002876                     
  5616                           ;main.c: 216:         datoRtc = ((dato / 10) & 0x0F) << 4;
  5617  002876  C010  F001         	movff	setRtc@dato,___awdiv@dividend
  5618  00287A  6A02               	clrf	(___awdiv@dividend+1)^0,c
  5619  00287C  0E00               	movlw	0
  5620  00287E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5621  002880  0E0A               	movlw	10
  5622  002882  6E03               	movwf	___awdiv@divisor^0,c
  5623  002884  EC14  F011         	call	___awdiv	;wreg free
  5624  002888  0E0F               	movlw	15
  5625  00288A  1601               	andwf	?___awdiv^0,f,c
  5626  00288C  3801               	swapf	?___awdiv^0,w,c
  5627  00288E  0BF0               	andlw	240
  5628  002890  6E0F               	movwf	setRtc@datoRtc^0,c
  5629                           
  5630                           ;main.c: 217:         datoRtc |= (dato % 10) & 0x0F;
  5631  002892  C010  F001         	movff	setRtc@dato,___awmod@dividend
  5632  002896  6A02               	clrf	(___awmod@dividend+1)^0,c
  5633  002898  0E00               	movlw	0
  5634  00289A  6E04               	movwf	(___awmod@divisor+1)^0,c
  5635  00289C  0E0A               	movlw	10
  5636  00289E  6E03               	movwf	___awmod@divisor^0,c
  5637  0028A0  EC33  F012         	call	___awmod	;wreg free
  5638  0028A4  5001               	movf	?___awmod^0,w,c
  5639  0028A6  0B0F               	andlw	15
  5640  0028A8  120F               	iorwf	setRtc@datoRtc^0,f,c
  5641                           
  5642                           ;main.c: 218:         escribe_rtc(direccion, datoRtc);
  5643  0028AA  C00F  F003         	movff	setRtc@datoRtc,escribe_rtc@dato
  5644  0028AE  500D               	movf	setRtc@direccion^0,w,c
  5645  0028B0  EC53  F018         	call	_escribe_rtc
  5646  0028B4                     
  5647                           ;main.c: 219:         seteado = 1;
  5648  0028B4  0E01               	movlw	1
  5649  0028B6  6E0E               	movwf	setRtc@seteado^0,c
  5650  0028B8                     l4154:
  5651                           
  5652                           ;main.c: 222:     return seteado;
  5653  0028B8  500E               	movf	setRtc@seteado^0,w,c
  5654  0028BA  0012               	return		;funcret
  5655  0028BC                     __end_of_setRtc:
  5656                           	opt callstack 0
  5657                           
  5658 ;; *************** function _escribe_rtc *****************
  5659 ;; Defined at:
  5660 ;;		line 2 in file "./RTC.h"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;  direccion       1    wreg     unsigned char 
  5663 ;;  dato            1    2[COMRAM] unsigned char 
  5664 ;; Auto vars:     Size  Location     Type
  5665 ;;  direccion       1    3[COMRAM] unsigned char 
  5666 ;; Return value:  Size  Location     Type
  5667 ;;                  1    wreg      void 
  5668 ;; Registers used:
  5669 ;;		wreg, status,2, status,0, cstack
  5670 ;; Tracked objects:
  5671 ;;		On entry : 0/0
  5672 ;;		On exit  : 0/0
  5673 ;;		Unchanged: 0/0
  5674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5675 ;;      Params:         1       0       0       0       0       0       0       0       0
  5676 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5677 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5678 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5679 ;;Total ram usage:        2 bytes
  5680 ;; Hardware stack levels used:    1
  5681 ;; Hardware stack levels required when called:    3
  5682 ;; This function calls:
  5683 ;;		_i2c_detener
  5684 ;;		_i2c_envia_dato
  5685 ;;		_i2c_inicia_com
  5686 ;; This function is called by:
  5687 ;;		_setRtc
  5688 ;;		_fijaHoraRtc
  5689 ;;		_setRtcDefault
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           
  5693                           	psect	text32
  5694  0030A6                     __ptext32:
  5695                           	opt callstack 0
  5696  0030A6                     _escribe_rtc:
  5697                           	opt callstack 24
  5698                           
  5699                           ;incstack = 0
  5700                           ;escribe_rtc@direccion stored from wreg
  5701  0030A6  6E04               	movwf	escribe_rtc@direccion^0,c
  5702  0030A8                     
  5703                           ;./RTC.h: 3:     i2c_inicia_com();
  5704  0030A8  ECA7  F018         	call	_i2c_inicia_com	;wreg free
  5705                           
  5706                           ;./RTC.h: 4:     i2c_envia_dato(0xD0);
  5707  0030AC  0ED0               	movlw	208
  5708  0030AE  EC8D  F018         	call	_i2c_envia_dato
  5709                           
  5710                           ;./RTC.h: 5:     i2c_envia_dato(direccion);
  5711  0030B2  5004               	movf	escribe_rtc@direccion^0,w,c
  5712  0030B4  EC8D  F018         	call	_i2c_envia_dato
  5713                           
  5714                           ;./RTC.h: 6:     i2c_envia_dato(dato);
  5715  0030B8  5003               	movf	escribe_rtc@dato^0,w,c
  5716  0030BA  EC8D  F018         	call	_i2c_envia_dato
  5717                           
  5718                           ;./RTC.h: 7:     i2c_detener();
  5719  0030BE  ECAB  F018         	call	_i2c_detener	;wreg free
  5720  0030C2  0012               	return		;funcret
  5721  0030C4                     __end_of_escribe_rtc:
  5722                           	opt callstack 0
  5723                           
  5724 ;; *************** function ___awmod *****************
  5725 ;; Defined at:
  5726 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;  dividend        2    0[COMRAM] int 
  5729 ;;  divisor         2    2[COMRAM] int 
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;  sign            1    5[COMRAM] unsigned char 
  5732 ;;  counter         1    4[COMRAM] unsigned char 
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  2    0[COMRAM] int 
  5735 ;; Registers used:
  5736 ;;		wreg, status,2, status,0
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5742 ;;      Params:         4       0       0       0       0       0       0       0       0
  5743 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5745 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5746 ;;Total ram usage:        6 bytes
  5747 ;; Hardware stack levels used:    1
  5748 ;; Hardware stack levels required when called:    1
  5749 ;; This function calls:
  5750 ;;		Nothing
  5751 ;; This function is called by:
  5752 ;;		_setRtc
  5753 ;; This function uses a non-reentrant model
  5754 ;;
  5755                           
  5756                           	psect	text33
  5757  002466                     __ptext33:
  5758                           	opt callstack 0
  5759  002466                     ___awmod:
  5760                           	opt callstack 26
  5761  002466  0E00               	movlw	0
  5762  002468  6E06               	movwf	___awmod@sign^0,c
  5763  00246A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  5764  00246C  EF3C  F012         	goto	u3140
  5765  002470  EF3A  F012         	goto	u3141
  5766  002474                     u3141:
  5767  002474  EF42  F012         	goto	l4078
  5768  002478                     u3140:
  5769  002478  6C01               	negf	___awmod@dividend^0,c
  5770  00247A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5771  00247C  B0D8               	btfsc	status,0,c
  5772  00247E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5773  002480  0E01               	movlw	1
  5774  002482  6E06               	movwf	___awmod@sign^0,c
  5775  002484                     l4078:
  5776  002484  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  5777  002486  EF49  F012         	goto	u3150
  5778  00248A  EF47  F012         	goto	u3151
  5779  00248E                     u3151:
  5780  00248E  EF4D  F012         	goto	l4082
  5781  002492                     u3150:
  5782  002492  6C03               	negf	___awmod@divisor^0,c
  5783  002494  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5784  002496  B0D8               	btfsc	status,0,c
  5785  002498  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5786  00249A                     l4082:
  5787  00249A  5003               	movf	___awmod@divisor^0,w,c
  5788  00249C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5789  00249E  B4D8               	btfsc	status,2,c
  5790  0024A0  EF54  F012         	goto	u3161
  5791  0024A4  EF56  F012         	goto	u3160
  5792  0024A8                     u3161:
  5793  0024A8  EF7A  F012         	goto	l4098
  5794  0024AC                     u3160:
  5795  0024AC  0E01               	movlw	1
  5796  0024AE  6E05               	movwf	___awmod@counter^0,c
  5797  0024B0  EF5E  F012         	goto	l4088
  5798  0024B4                     l4086:
  5799  0024B4  90D8               	bcf	status,0,c
  5800  0024B6  3603               	rlcf	___awmod@divisor^0,f,c
  5801  0024B8  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5802  0024BA  2A05               	incf	___awmod@counter^0,f,c
  5803  0024BC                     l4088:
  5804  0024BC  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5805  0024BE  EF63  F012         	goto	u3171
  5806  0024C2  EF65  F012         	goto	u3170
  5807  0024C6                     u3171:
  5808  0024C6  EF5A  F012         	goto	l4086
  5809  0024CA                     u3170:
  5810  0024CA                     l4090:
  5811  0024CA  5003               	movf	___awmod@divisor^0,w,c
  5812  0024CC  5C01               	subwf	___awmod@dividend^0,w,c
  5813  0024CE  5004               	movf	(___awmod@divisor+1)^0,w,c
  5814  0024D0  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5815  0024D2  A0D8               	btfss	status,0,c
  5816  0024D4  EF6E  F012         	goto	u3181
  5817  0024D8  EF70  F012         	goto	u3180
  5818  0024DC                     u3181:
  5819  0024DC  EF74  F012         	goto	l4094
  5820  0024E0                     u3180:
  5821  0024E0  5003               	movf	___awmod@divisor^0,w,c
  5822  0024E2  5E01               	subwf	___awmod@dividend^0,f,c
  5823  0024E4  5004               	movf	(___awmod@divisor+1)^0,w,c
  5824  0024E6  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5825  0024E8                     l4094:
  5826  0024E8  90D8               	bcf	status,0,c
  5827  0024EA  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5828  0024EC  3203               	rrcf	___awmod@divisor^0,f,c
  5829  0024EE  2E05               	decfsz	___awmod@counter^0,f,c
  5830  0024F0  EF65  F012         	goto	l4090
  5831  0024F4                     l4098:
  5832  0024F4  5006               	movf	___awmod@sign^0,w,c
  5833  0024F6  B4D8               	btfsc	status,2,c
  5834  0024F8  EF80  F012         	goto	u3191
  5835  0024FC  EF82  F012         	goto	u3190
  5836  002500                     u3191:
  5837  002500  EF86  F012         	goto	l4102
  5838  002504                     u3190:
  5839  002504  6C01               	negf	___awmod@dividend^0,c
  5840  002506  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5841  002508  B0D8               	btfsc	status,0,c
  5842  00250A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5843  00250C                     l4102:
  5844  00250C  C001  F001         	movff	___awmod@dividend,?___awmod
  5845  002510  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5846  002514  0012               	return		;funcret
  5847  002516                     __end_of___awmod:
  5848                           	opt callstack 0
  5849                           
  5850 ;; *************** function ___awdiv *****************
  5851 ;; Defined at:
  5852 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5853 ;; Parameters:    Size  Location     Type
  5854 ;;  dividend        2    0[COMRAM] int 
  5855 ;;  divisor         2    2[COMRAM] int 
  5856 ;; Auto vars:     Size  Location     Type
  5857 ;;  quotient        2    6[COMRAM] int 
  5858 ;;  sign            1    5[COMRAM] unsigned char 
  5859 ;;  counter         1    4[COMRAM] unsigned char 
  5860 ;; Return value:  Size  Location     Type
  5861 ;;                  2    0[COMRAM] int 
  5862 ;; Registers used:
  5863 ;;		wreg, status,2, status,0
  5864 ;; Tracked objects:
  5865 ;;		On entry : 0/0
  5866 ;;		On exit  : 0/0
  5867 ;;		Unchanged: 0/0
  5868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5869 ;;      Params:         4       0       0       0       0       0       0       0       0
  5870 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5871 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5872 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5873 ;;Total ram usage:        8 bytes
  5874 ;; Hardware stack levels used:    1
  5875 ;; Hardware stack levels required when called:    1
  5876 ;; This function calls:
  5877 ;;		Nothing
  5878 ;; This function is called by:
  5879 ;;		_setRtc
  5880 ;; This function uses a non-reentrant model
  5881 ;;
  5882                           
  5883                           	psect	text34
  5884  002228                     __ptext34:
  5885                           	opt callstack 0
  5886  002228                     ___awdiv:
  5887                           	opt callstack 26
  5888  002228  0E00               	movlw	0
  5889  00222A  6E06               	movwf	___awdiv@sign^0,c
  5890  00222C  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  5891  00222E  EF1D  F011         	goto	u3080
  5892  002232  EF1B  F011         	goto	u3081
  5893  002236                     u3081:
  5894  002236  EF23  F011         	goto	l4034
  5895  00223A                     u3080:
  5896  00223A  6C03               	negf	___awdiv@divisor^0,c
  5897  00223C  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5898  00223E  B0D8               	btfsc	status,0,c
  5899  002240  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5900  002242  0E01               	movlw	1
  5901  002244  6E06               	movwf	___awdiv@sign^0,c
  5902  002246                     l4034:
  5903  002246  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  5904  002248  EF2A  F011         	goto	u3090
  5905  00224C  EF28  F011         	goto	u3091
  5906  002250                     u3091:
  5907  002250  EF30  F011         	goto	l4040
  5908  002254                     u3090:
  5909  002254  6C01               	negf	___awdiv@dividend^0,c
  5910  002256  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5911  002258  B0D8               	btfsc	status,0,c
  5912  00225A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5913  00225C  0E01               	movlw	1
  5914  00225E  1A06               	xorwf	___awdiv@sign^0,f,c
  5915  002260                     l4040:
  5916  002260  0E00               	movlw	0
  5917  002262  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5918  002264  0E00               	movlw	0
  5919  002266  6E07               	movwf	___awdiv@quotient^0,c
  5920  002268  5003               	movf	___awdiv@divisor^0,w,c
  5921  00226A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5922  00226C  B4D8               	btfsc	status,2,c
  5923  00226E  EF3B  F011         	goto	u3101
  5924  002272  EF3D  F011         	goto	u3100
  5925  002276                     u3101:
  5926  002276  EF65  F011         	goto	l4062
  5927  00227A                     u3100:
  5928  00227A  0E01               	movlw	1
  5929  00227C  6E05               	movwf	___awdiv@counter^0,c
  5930  00227E  EF45  F011         	goto	l4048
  5931  002282                     l4046:
  5932  002282  90D8               	bcf	status,0,c
  5933  002284  3603               	rlcf	___awdiv@divisor^0,f,c
  5934  002286  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5935  002288  2A05               	incf	___awdiv@counter^0,f,c
  5936  00228A                     l4048:
  5937  00228A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5938  00228C  EF4A  F011         	goto	u3111
  5939  002290  EF4C  F011         	goto	u3110
  5940  002294                     u3111:
  5941  002294  EF41  F011         	goto	l4046
  5942  002298                     u3110:
  5943  002298                     l4050:
  5944  002298  90D8               	bcf	status,0,c
  5945  00229A  3607               	rlcf	___awdiv@quotient^0,f,c
  5946  00229C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5947  00229E  5003               	movf	___awdiv@divisor^0,w,c
  5948  0022A0  5C01               	subwf	___awdiv@dividend^0,w,c
  5949  0022A2  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5950  0022A4  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5951  0022A6  A0D8               	btfss	status,0,c
  5952  0022A8  EF58  F011         	goto	u3121
  5953  0022AC  EF5A  F011         	goto	u3120
  5954  0022B0                     u3121:
  5955  0022B0  EF5F  F011         	goto	l4058
  5956  0022B4                     u3120:
  5957  0022B4  5003               	movf	___awdiv@divisor^0,w,c
  5958  0022B6  5E01               	subwf	___awdiv@dividend^0,f,c
  5959  0022B8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5960  0022BA  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5961  0022BC  8007               	bsf	___awdiv@quotient^0,0,c
  5962  0022BE                     l4058:
  5963  0022BE  90D8               	bcf	status,0,c
  5964  0022C0  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5965  0022C2  3203               	rrcf	___awdiv@divisor^0,f,c
  5966  0022C4  2E05               	decfsz	___awdiv@counter^0,f,c
  5967  0022C6  EF4C  F011         	goto	l4050
  5968  0022CA                     l4062:
  5969  0022CA  5006               	movf	___awdiv@sign^0,w,c
  5970  0022CC  B4D8               	btfsc	status,2,c
  5971  0022CE  EF6B  F011         	goto	u3131
  5972  0022D2  EF6D  F011         	goto	u3130
  5973  0022D6                     u3131:
  5974  0022D6  EF71  F011         	goto	l4066
  5975  0022DA                     u3130:
  5976  0022DA  6C07               	negf	___awdiv@quotient^0,c
  5977  0022DC  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5978  0022DE  B0D8               	btfsc	status,0,c
  5979  0022E0  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5980  0022E2                     l4066:
  5981  0022E2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5982  0022E6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5983  0022EA  0012               	return		;funcret
  5984  0022EC                     __end_of___awdiv:
  5985                           	opt callstack 0
  5986                           
  5987 ;; *************** function _dameDatosSistema *****************
  5988 ;; Defined at:
  5989 ;;		line 708 in file "main.c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;		None
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;  i               2   66[BANK0 ] int 
  5994 ;;  bufferHorari   30   28[BANK0 ] unsigned char [30]
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  1    wreg      void 
  5997 ;; Registers used:
  5998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6004 ;;      Params:         0       0       0       0       0       0       0       0       0
  6005 ;;      Locals:         0      40       0       0       0       0       0       0       0
  6006 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6007 ;;      Totals:         2      40       0       0       0       0       0       0       0
  6008 ;;Total ram usage:       42 bytes
  6009 ;; Hardware stack levels used:    1
  6010 ;; Hardware stack levels required when called:    9
  6011 ;; This function calls:
  6012 ;;		_UART_printf
  6013 ;;		_UART_write
  6014 ;;		___wmul
  6015 ;;		_limpiarBuffer
  6016 ;;		_sprintf
  6017 ;; This function is called by:
  6018 ;;		_sistemaPrincipal
  6019 ;; This function uses a non-reentrant model
  6020 ;;
  6021                           
  6022                           	psect	text35
  6023  000594                     __ptext35:
  6024                           	opt callstack 0
  6025  000594                     _dameDatosSistema:
  6026                           	opt callstack 20
  6027  000594                     
  6028                           ;main.c: 710:     char bufferHorario[30];;main.c: 712:     UART_write('&');
  6029  000594  0E26               	movlw	38
  6030  000596  EC6F  F018         	call	_UART_write
  6031  00059A                     
  6032                           ;main.c: 714:     UART_printf("\r\nH = HORA\r\n");
  6033  00059A  0EDD               	movlw	low STR_12
  6034  00059C  6E02               	movwf	UART_printf@cadena^0,c
  6035  00059E  0E7F               	movlw	high STR_12
  6036  0005A0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6037  0005A2  EC2D  F015         	call	_UART_printf	;wreg free
  6038  0005A6                     
  6039                           ;main.c: 715:     UART_printf("\r\nR = REGAR( 1 SI | 0 NO)\r\n");
  6040  0005A6  0E78               	movlw	low STR_13
  6041  0005A8  6E02               	movwf	UART_printf@cadena^0,c
  6042  0005AA  0E7E               	movlw	high STR_13
  6043  0005AC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6044  0005AE  EC2D  F015         	call	_UART_printf	;wreg free
  6045  0005B2                     
  6046                           ;main.c: 716:     UART_printf("\r\nT = MINUTOS QUE DURARA EL RIEGO\r\n");
  6047  0005B2  0ED5               	movlw	low STR_14
  6048  0005B4  6E02               	movwf	UART_printf@cadena^0,c
  6049  0005B6  0E7D               	movlw	high STR_14
  6050  0005B8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6051  0005BA  EC2D  F015         	call	_UART_printf	;wreg free
  6052  0005BE                     
  6053                           ;main.c: 717:     UART_printf("\r\nD = DIAS QUE EN LOS QUE SE REGARA\r\n");
  6054  0005BE  0E41               	movlw	low STR_15
  6055  0005C0  6E02               	movwf	UART_printf@cadena^0,c
  6056  0005C2  0E7D               	movlw	high STR_15
  6057  0005C4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6058  0005C6  EC2D  F015         	call	_UART_printf	;wreg free
  6059  0005CA                     
  6060                           ;main.c: 719:     UART_printf("                DLMIJVS\r\n");
  6061  0005CA  0EE4               	movlw	low STR_16
  6062  0005CC  6E02               	movwf	UART_printf@cadena^0,c
  6063  0005CE  0E7E               	movlw	high STR_16
  6064  0005D0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6065  0005D2  EC2D  F015         	call	_UART_printf	;wreg free
  6066  0005D6                     
  6067                           ;main.c: 722:     for (int i = 0; i < 24; i++) {
  6068  0005D6  0E00               	movlw	0
  6069  0005D8  0100               	movlb	0	; () banked
  6070  0005DA  6FF0               	movwf	(dameDatosSistema@i+1)& (0+255),b
  6071  0005DC  0E00               	movlw	0
  6072  0005DE  6FEF               	movwf	dameDatosSistema@i& (0+255),b
  6073  0005E0                     l4496:
  6074                           
  6075                           ; BSR set to: 0
  6076                           ;main.c: 724:         if (horarios[i].regar) {
  6077  0005E0  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6078  0005E4  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6079  0005E8  0E00               	movlw	0
  6080  0005EA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6081  0005EC  0E0C               	movlw	12
  6082  0005EE  6E03               	movwf	___wmul@multiplicand^0,c
  6083  0005F0  EC11  F018         	call	___wmul	;wreg free
  6084  0005F4  0E3B               	movlw	low (_horarios+9)
  6085  0005F6  2401               	addwf	?___wmul^0,w,c
  6086  0005F8  6ED9               	movwf	fsr2l,c
  6087  0005FA  0E01               	movlw	high (_horarios+9)
  6088  0005FC  2002               	addwfc	(?___wmul+1)^0,w,c
  6089  0005FE  6EDA               	movwf	fsr2h,c
  6090  000600  50DF               	movf	indf2,w,c
  6091  000602  B4D8               	btfsc	status,2,c
  6092  000604  EF06  F003         	goto	u3581
  6093  000608  EF08  F003         	goto	u3580
  6094  00060C                     u3581:
  6095  00060C  EF7B  F003         	goto	l4506
  6096  000610                     u3580:
  6097  000610                     
  6098                           ;main.c: 726:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  6099  000610  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6100  000614  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6101  000618  0E00               	movlw	0
  6102  00061A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6103  00061C  0E0C               	movlw	12
  6104  00061E  6E03               	movwf	___wmul@multiplicand^0,c
  6105  000620  EC11  F018         	call	___wmul	;wreg free
  6106  000624  0E32               	movlw	low _horarios
  6107  000626  2401               	addwf	?___wmul^0,w,c
  6108  000628  6ED9               	movwf	fsr2l,c
  6109  00062A  0E01               	movlw	high _horarios
  6110  00062C  2002               	addwfc	(?___wmul+1)^0,w,c
  6111  00062E  6EDA               	movwf	fsr2h,c
  6112  000630  50DF               	movf	indf2,w,c
  6113  000632  6E5D               	movwf	??_dameDatosSistema^0,c
  6114  000634  505D               	movf	??_dameDatosSistema^0,w,c
  6115  000636  0100               	movlb	0	; () banked
  6116  000638  6FE7               	movwf	_dameDatosSistema$1895& (0+255),b
  6117  00063A  6BE8               	clrf	(_dameDatosSistema$1895+1)& (0+255),b
  6118                           
  6119                           ;main.c: 726:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  6120  00063C  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6121  000640  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6122  000644  0E00               	movlw	0
  6123  000646  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6124  000648  0E0C               	movlw	12
  6125  00064A  6E03               	movwf	___wmul@multiplicand^0,c
  6126  00064C  EC11  F018         	call	___wmul	;wreg free
  6127  000650  0E3B               	movlw	low (_horarios+9)
  6128  000652  2401               	addwf	?___wmul^0,w,c
  6129  000654  6ED9               	movwf	fsr2l,c
  6130  000656  0E01               	movlw	high (_horarios+9)
  6131  000658  2002               	addwfc	(?___wmul+1)^0,w,c
  6132  00065A  6EDA               	movwf	fsr2h,c
  6133  00065C  50DF               	movf	indf2,w,c
  6134  00065E  6E5D               	movwf	??_dameDatosSistema^0,c
  6135  000660  505D               	movf	??_dameDatosSistema^0,w,c
  6136  000662  0100               	movlb	0	; () banked
  6137  000664  6FE9               	movwf	_dameDatosSistema$1896& (0+255),b
  6138  000666  6BEA               	clrf	(_dameDatosSistema$1896+1)& (0+255),b
  6139                           
  6140                           ;main.c: 726:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  6141  000668  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6142  00066C  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6143  000670  0E00               	movlw	0
  6144  000672  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6145  000674  0E0C               	movlw	12
  6146  000676  6E03               	movwf	___wmul@multiplicand^0,c
  6147  000678  EC11  F018         	call	___wmul	;wreg free
  6148  00067C  0E3D               	movlw	low (_horarios+11)
  6149  00067E  2401               	addwf	?___wmul^0,w,c
  6150  000680  6ED9               	movwf	fsr2l,c
  6151  000682  0E01               	movlw	high (_horarios+11)
  6152  000684  2002               	addwfc	(?___wmul+1)^0,w,c
  6153  000686  6EDA               	movwf	fsr2h,c
  6154  000688  50DF               	movf	indf2,w,c
  6155  00068A  6E5D               	movwf	??_dameDatosSistema^0,c
  6156  00068C  505D               	movf	??_dameDatosSistema^0,w,c
  6157  00068E  0100               	movlb	0	; () banked
  6158  000690  6FEB               	movwf	_dameDatosSistema$1897& (0+255),b
  6159  000692  6BEC               	clrf	(_dameDatosSistema$1897+1)& (0+255),b
  6160  000694                     
  6161                           ; BSR set to: 0
  6162                           ;main.c: 726:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  6163  000694  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6164  000698  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6165  00069C  0E00               	movlw	0
  6166  00069E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6167  0006A0  0E0C               	movlw	12
  6168  0006A2  6E03               	movwf	___wmul@multiplicand^0,c
  6169  0006A4  EC11  F018         	call	___wmul	;wreg free
  6170  0006A8  0E33               	movlw	low (_horarios+1)
  6171  0006AA  2401               	addwf	?___wmul^0,w,c
  6172  0006AC  0100               	movlb	0	; () banked
  6173  0006AE  6FED               	movwf	_dameDatosSistema$1898& (0+255),b
  6174  0006B0  0E01               	movlw	high (_horarios+1)
  6175  0006B2  2002               	addwfc	(?___wmul+1)^0,w,c
  6176  0006B4  6FEE               	movwf	(_dameDatosSistema$1898+1)& (0+255),b
  6177  0006B6                     
  6178                           ; BSR set to: 0
  6179                           ;main.c: 726:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  6180  0006B6  0EC9               	movlw	low dameDatosSistema@bufferHorario
  6181  0006B8  6FB3               	movwf	sprintf@s& (0+255),b
  6182  0006BA  0E00               	movlw	high dameDatosSistema@bufferHorario
  6183  0006BC  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  6184  0006BE  0E78               	movlw	low STR_17
  6185  0006C0  6FB5               	movwf	sprintf@fmt& (0+255),b
  6186  0006C2  0E7F               	movlw	high STR_17
  6187  0006C4  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  6188  0006C6  C0E7  F0B7         	movff	_dameDatosSistema$1895,?_sprintf+4
  6189  0006CA  C0E8  F0B8         	movff	_dameDatosSistema$1895+1,?_sprintf+5
  6190  0006CE  C0E9  F0B9         	movff	_dameDatosSistema$1896,?_sprintf+6
  6191  0006D2  C0EA  F0BA         	movff	_dameDatosSistema$1896+1,?_sprintf+7
  6192  0006D6  C0EB  F0BB         	movff	_dameDatosSistema$1897,?_sprintf+8
  6193  0006DA  C0EC  F0BC         	movff	_dameDatosSistema$1897+1,?_sprintf+9
  6194  0006DE  C0ED  F0BD         	movff	_dameDatosSistema$1898,?_sprintf+10
  6195  0006E2  C0EE  F0BE         	movff	_dameDatosSistema$1898+1,?_sprintf+11
  6196  0006E6  EC0E  F016         	call	_sprintf	;wreg free
  6197  0006EA                     
  6198                           ;main.c: 730:             UART_printf(bufferHorario);
  6199  0006EA  0EC9               	movlw	low dameDatosSistema@bufferHorario
  6200  0006EC  6E02               	movwf	UART_printf@cadena^0,c
  6201  0006EE  0E00               	movlw	high dameDatosSistema@bufferHorario
  6202  0006F0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6203  0006F2  EC2D  F015         	call	_UART_printf	;wreg free
  6204  0006F6                     l4506:
  6205                           
  6206                           ;main.c: 734:     }
  6207  0006F6  0100               	movlb	0	; () banked
  6208  0006F8  4BEF               	infsnz	dameDatosSistema@i& (0+255),f,b
  6209  0006FA  2BF0               	incf	(dameDatosSistema@i+1)& (0+255),f,b
  6210  0006FC                     
  6211                           ; BSR set to: 0
  6212  0006FC  BFF0               	btfsc	(dameDatosSistema@i+1)& (0+255),7,b
  6213  0006FE  EF8A  F003         	goto	u3591
  6214  000702  51F0               	movf	(dameDatosSistema@i+1)& (0+255),w,b
  6215  000704  E109               	bnz	u3590
  6216  000706  0E18               	movlw	24
  6217  000708  5DEF               	subwf	dameDatosSistema@i& (0+255),w,b
  6218  00070A  A0D8               	btfss	status,0,c
  6219  00070C  EF8A  F003         	goto	u3591
  6220  000710  EF8C  F003         	goto	u3590
  6221  000714                     u3591:
  6222  000714  EFF0  F002         	goto	l4496
  6223  000718                     u3590:
  6224  000718                     
  6225                           ; BSR set to: 0
  6226                           ;main.c: 736:     limpiarBuffer();
  6227  000718  EC0C  F017         	call	_limpiarBuffer	;wreg free
  6228                           
  6229                           ;main.c: 738:     switch (diaActual) {
  6230  00071C  EF0E  F004         	goto	l4528
  6231  000720                     l4512:
  6232                           
  6233                           ; BSR set to: 0
  6234                           ;main.c: 740:             sprintf(buffer, "\r\n%0.2d:%0.2d| DOMINGO\r\n", hora, minutos)
      +                          ;
  6235  000720  0E00               	movlw	low _buffer
  6236  000722  6FB3               	movwf	sprintf@s& (0+255),b
  6237  000724  0E01               	movlw	high _buffer
  6238  000726  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  6239  000728  0EFE               	movlw	low STR_18
  6240  00072A  6FB5               	movwf	sprintf@fmt& (0+255),b
  6241  00072C  0E7E               	movlw	high STR_18
  6242  00072E  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  6243  000730  C087  F0B7         	movff	_hora,?_sprintf+4
  6244  000734  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  6245  000736  C086  F0B9         	movff	_minutos,?_sprintf+6
  6246  00073A  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  6247  00073C  EC0E  F016         	call	_sprintf	;wreg free
  6248                           
  6249                           ;main.c: 741:             break;
  6250  000740  EF38  F004         	goto	l4530
  6251  000744                     l4514:
  6252                           
  6253                           ; BSR set to: 0
  6254                           ;main.c: 744:             sprintf(buffer, "\r\n%0.2d:%0.2d| LUNES\r\n", hora, minutos);
  6255  000744  0E00               	movlw	low _buffer
  6256  000746  6FB3               	movwf	sprintf@s& (0+255),b
  6257  000748  0E01               	movlw	high _buffer
  6258  00074A  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  6259  00074C  0EA7               	movlw	low STR_19
  6260  00074E  6FB5               	movwf	sprintf@fmt& (0+255),b
  6261  000750  0E7F               	movlw	high STR_19
  6262  000752  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  6263  000754  C087  F0B7         	movff	_hora,?_sprintf+4
  6264  000758  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  6265  00075A  C086  F0B9         	movff	_minutos,?_sprintf+6
  6266  00075E  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  6267  000760  EC0E  F016         	call	_sprintf	;wreg free
  6268                           
  6269                           ;main.c: 745:             break;
  6270  000764  EF38  F004         	goto	l4530
  6271  000768                     l4516:
  6272                           
  6273                           ; BSR set to: 0
  6274                           ;main.c: 748:             sprintf(buffer, "\r\n%0.2d:%0.2d| MARTES\r\n", hora, minutos);
  6275  000768  0E00               	movlw	low _buffer
  6276  00076A  6FB3               	movwf	sprintf@s& (0+255),b
  6277  00076C  0E01               	movlw	high _buffer
  6278  00076E  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  6279  000770  0E48               	movlw	low STR_20
  6280  000772  6FB5               	movwf	sprintf@fmt& (0+255),b
  6281  000774  0E7F               	movlw	high STR_20
  6282  000776  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  6283  000778  C087  F0B7         	movff	_hora,?_sprintf+4
  6284  00077C  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  6285  00077E  C086  F0B9         	movff	_minutos,?_sprintf+6
  6286  000782  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  6287  000784  EC0E  F016         	call	_sprintf	;wreg free
  6288                           
  6289                           ;main.c: 749:             break;
  6290  000788  EF38  F004         	goto	l4530
  6291  00078C                     l4518:
  6292                           
  6293                           ; BSR set to: 0
  6294                           ;main.c: 752:             sprintf(buffer, "\r\n%0.2d:%0.2d| MIERCOLES\r\n", hora, minuto
      +                          s);
  6295  00078C  0E00               	movlw	low _buffer
  6296  00078E  6FB3               	movwf	sprintf@s& (0+255),b
  6297  000790  0E01               	movlw	high _buffer
  6298  000792  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  6299  000794  0EAF               	movlw	low STR_21
  6300  000796  6FB5               	movwf	sprintf@fmt& (0+255),b
  6301  000798  0E7E               	movlw	high STR_21
  6302  00079A  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  6303  00079C  C087  F0B7         	movff	_hora,?_sprintf+4
  6304  0007A0  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  6305  0007A2  C086  F0B9         	movff	_minutos,?_sprintf+6
  6306  0007A6  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  6307  0007A8  EC0E  F016         	call	_sprintf	;wreg free
  6308                           
  6309                           ;main.c: 753:             break;
  6310  0007AC  EF38  F004         	goto	l4530
  6311  0007B0                     l4520:
  6312                           
  6313                           ; BSR set to: 0
  6314                           ;main.c: 756:             sprintf(buffer, "\r\n%0.2d:%0.2d| JUEVES\r\n", hora, minutos);
  6315  0007B0  0E00               	movlw	low _buffer
  6316  0007B2  6FB3               	movwf	sprintf@s& (0+255),b
  6317  0007B4  0E01               	movlw	high _buffer
  6318  0007B6  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  6319  0007B8  0E60               	movlw	low STR_22
  6320  0007BA  6FB5               	movwf	sprintf@fmt& (0+255),b
  6321  0007BC  0E7F               	movlw	high STR_22
  6322  0007BE  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  6323  0007C0  C087  F0B7         	movff	_hora,?_sprintf+4
  6324  0007C4  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  6325  0007C6  C086  F0B9         	movff	_minutos,?_sprintf+6
  6326  0007CA  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  6327  0007CC  EC0E  F016         	call	_sprintf	;wreg free
  6328                           
  6329                           ;main.c: 757:             break;
  6330  0007D0  EF38  F004         	goto	l4530
  6331  0007D4                     l4522:
  6332                           
  6333                           ; BSR set to: 0
  6334                           ;main.c: 760:             sprintf(buffer, "\r\n%0.2d:%0.2d| VIERNES\r\n", hora, minutos)
      +                          ;
  6335  0007D4  0E00               	movlw	low _buffer
  6336  0007D6  6FB3               	movwf	sprintf@s& (0+255),b
  6337  0007D8  0E01               	movlw	high _buffer
  6338  0007DA  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  6339  0007DC  0E17               	movlw	low STR_23
  6340  0007DE  6FB5               	movwf	sprintf@fmt& (0+255),b
  6341  0007E0  0E7F               	movlw	high STR_23
  6342  0007E2  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  6343  0007E4  C087  F0B7         	movff	_hora,?_sprintf+4
  6344  0007E8  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  6345  0007EA  C086  F0B9         	movff	_minutos,?_sprintf+6
  6346  0007EE  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  6347  0007F0  EC0E  F016         	call	_sprintf	;wreg free
  6348                           
  6349                           ;main.c: 761:             break;
  6350  0007F4  EF38  F004         	goto	l4530
  6351  0007F8                     l4524:
  6352                           
  6353                           ; BSR set to: 0
  6354                           ;main.c: 764:             sprintf(buffer, "\r\n%0.2d:%0.2d| SABADO\r\n", hora, minutos);
  6355  0007F8  0E00               	movlw	low _buffer
  6356  0007FA  6FB3               	movwf	sprintf@s& (0+255),b
  6357  0007FC  0E01               	movlw	high _buffer
  6358  0007FE  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  6359  000800  0E30               	movlw	low STR_24
  6360  000802  6FB5               	movwf	sprintf@fmt& (0+255),b
  6361  000804  0E7F               	movlw	high STR_24
  6362  000806  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  6363  000808  C087  F0B7         	movff	_hora,?_sprintf+4
  6364  00080C  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  6365  00080E  C086  F0B9         	movff	_minutos,?_sprintf+6
  6366  000812  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  6367  000814  EC0E  F016         	call	_sprintf	;wreg free
  6368                           
  6369                           ;main.c: 765:             break;
  6370  000818  EF38  F004         	goto	l4530
  6371  00081C                     l4528:
  6372  00081C  0100               	movlb	0	; () banked
  6373  00081E  5184               	movf	_diaActual& (0+255),w,b
  6374  000820  6E5D               	movwf	??_dameDatosSistema^0,c
  6375  000822  6A5E               	clrf	(??_dameDatosSistema+1)^0,c
  6376                           
  6377                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6378                           ; Switch size 1, requested type "simple"
  6379                           ; Number of cases is 1, Range of values is 0 to 0
  6380                           ; switch strategies available:
  6381                           ; Name         Instructions Cycles
  6382                           ; simple_byte            4     3 (average)
  6383                           ;	Chosen strategy is simple_byte
  6384  000824  505E               	movf	(??_dameDatosSistema+1)^0,w,c
  6385  000826  0A00               	xorlw	0	; case 0
  6386  000828  B4D8               	btfsc	status,2,c
  6387  00082A  EF19  F004         	goto	l5082
  6388  00082E  EF38  F004         	goto	l4530
  6389  000832                     l5082:
  6390                           
  6391                           ; BSR set to: 0
  6392                           ; Switch size 1, requested type "simple"
  6393                           ; Number of cases is 7, Range of values is 1 to 7
  6394                           ; switch strategies available:
  6395                           ; Name         Instructions Cycles
  6396                           ; simple_byte           22    12 (average)
  6397                           ;	Chosen strategy is simple_byte
  6398  000832  505D               	movf	??_dameDatosSistema^0,w,c
  6399  000834  0A01               	xorlw	1	; case 1
  6400  000836  B4D8               	btfsc	status,2,c
  6401  000838  EF90  F003         	goto	l4512
  6402  00083C  0A03               	xorlw	3	; case 2
  6403  00083E  B4D8               	btfsc	status,2,c
  6404  000840  EFA2  F003         	goto	l4514
  6405  000844  0A01               	xorlw	1	; case 3
  6406  000846  B4D8               	btfsc	status,2,c
  6407  000848  EFB4  F003         	goto	l4516
  6408  00084C  0A07               	xorlw	7	; case 4
  6409  00084E  B4D8               	btfsc	status,2,c
  6410  000850  EFC6  F003         	goto	l4518
  6411  000854  0A01               	xorlw	1	; case 5
  6412  000856  B4D8               	btfsc	status,2,c
  6413  000858  EFD8  F003         	goto	l4520
  6414  00085C  0A03               	xorlw	3	; case 6
  6415  00085E  B4D8               	btfsc	status,2,c
  6416  000860  EFEA  F003         	goto	l4522
  6417  000864  0A01               	xorlw	1	; case 7
  6418  000866  B4D8               	btfsc	status,2,c
  6419  000868  EFFC  F003         	goto	l4524
  6420  00086C  EF38  F004         	goto	l4530
  6421  000870                     l4530:
  6422                           
  6423                           ;main.c: 772:     UART_printf(buffer);
  6424  000870  0E00               	movlw	low _buffer
  6425  000872  6E02               	movwf	UART_printf@cadena^0,c
  6426  000874  0E01               	movlw	high _buffer
  6427  000876  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6428  000878  EC2D  F015         	call	_UART_printf	;wreg free
  6429  00087C                     
  6430                           ;main.c: 774:     UART_write('&');
  6431  00087C  0E26               	movlw	38
  6432  00087E  EC6F  F018         	call	_UART_write
  6433  000882  0012               	return		;funcret
  6434  000884                     __end_of_dameDatosSistema:
  6435                           	opt callstack 0
  6436                           
  6437 ;; *************** function _sprintf *****************
  6438 ;; Defined at:
  6439 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  6440 ;; Parameters:    Size  Location     Type
  6441 ;;  s               2    6[BANK0 ] PTR unsigned char 
  6442 ;;		 -> buffer(50), dameDatosSistema@bufferHorario(30), 
  6443 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  6444 ;;		 -> STR_30(45), STR_29(29), STR_28(32), STR_27(45), 
  6445 ;;		 -> STR_26(29), STR_25(32), STR_24(24), STR_23(25), 
  6446 ;;		 -> STR_22(24), STR_21(27), STR_20(24), STR_19(23), 
  6447 ;;		 -> STR_18(25), STR_17(24), 
  6448 ;; Auto vars:     Size  Location     Type
  6449 ;;  f               6   22[BANK0 ] struct _IO_FILE
  6450 ;;  ap              2   20[BANK0 ] PTR void [1]
  6451 ;;		 -> ?_sprintf(2), 
  6452 ;;  ret             2    0        int 
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  2    6[BANK0 ] int 
  6455 ;; Registers used:
  6456 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6462 ;;      Params:         0      12       0       0       0       0       0       0       0
  6463 ;;      Locals:         0      10       0       0       0       0       0       0       0
  6464 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6465 ;;      Totals:         0      22       0       0       0       0       0       0       0
  6466 ;;Total ram usage:       22 bytes
  6467 ;; Hardware stack levels used:    1
  6468 ;; Hardware stack levels required when called:    8
  6469 ;; This function calls:
  6470 ;;		_vfprintf
  6471 ;; This function is called by:
  6472 ;;		_dameDatosSistema
  6473 ;;		_mostrarDatosSensores
  6474 ;;		_mostrarDatosSensoresWIFI
  6475 ;; This function uses a non-reentrant model
  6476 ;;
  6477                           
  6478                           	psect	text36
  6479  002C1C                     __ptext36:
  6480                           	opt callstack 0
  6481  002C1C                     _sprintf:
  6482                           	opt callstack 20
  6483  002C1C  0EB7               	movlw	low (?_sprintf+4)
  6484  002C1E  0100               	movlb	0	; () banked
  6485  002C20  6FC1               	movwf	sprintf@ap& (0+255),b
  6486  002C22  0E00               	movlw	high (?_sprintf+4)
  6487  002C24  6FC2               	movwf	(sprintf@ap+1)& (0+255),b
  6488  002C26  C0B3  F0C3         	movff	sprintf@s,sprintf@f
  6489  002C2A  C0B4  F0C4         	movff	sprintf@s+1,sprintf@f+1
  6490  002C2E                     
  6491                           ; BSR set to: 0
  6492  002C2E  0E00               	movlw	0
  6493  002C30  6FC6               	movwf	(sprintf@f+3)& (0+255),b
  6494  002C32  0E00               	movlw	0
  6495  002C34  6FC5               	movwf	(sprintf@f+2)& (0+255),b
  6496  002C36                     
  6497                           ; BSR set to: 0
  6498  002C36  0E00               	movlw	0
  6499  002C38  6FC8               	movwf	(sprintf@f+5)& (0+255),b
  6500  002C3A  0E00               	movlw	0
  6501  002C3C  6FC7               	movwf	(sprintf@f+4)& (0+255),b
  6502  002C3E                     
  6503                           ; BSR set to: 0
  6504  002C3E  0EC3               	movlw	low sprintf@f
  6505  002C40  6FAD               	movwf	vfprintf@fp& (0+255),b
  6506  002C42  0E00               	movlw	high sprintf@f
  6507  002C44  6FAE               	movwf	(vfprintf@fp+1)& (0+255),b
  6508  002C46  C0B5  F0AF         	movff	sprintf@fmt,vfprintf@fmt
  6509  002C4A  C0B6  F0B0         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6510  002C4E  0EC1               	movlw	low sprintf@ap
  6511  002C50  6FB1               	movwf	vfprintf@ap& (0+255),b
  6512  002C52  0E00               	movlw	high sprintf@ap
  6513  002C54  6FB2               	movwf	(vfprintf@ap+1)& (0+255),b
  6514  002C56  ECCB  F014         	call	_vfprintf	;wreg free
  6515  002C5A  0100               	movlb	0	; () banked
  6516  002C5C  51C5               	movf	(sprintf@f+2)& (0+255),w,b
  6517  002C5E  25B3               	addwf	sprintf@s& (0+255),w,b
  6518  002C60  6ED9               	movwf	fsr2l,c
  6519  002C62  51C6               	movf	(sprintf@f+3)& (0+255),w,b
  6520  002C64  21B4               	addwfc	(sprintf@s+1)& (0+255),w,b
  6521  002C66  6EDA               	movwf	fsr2h,c
  6522  002C68  0E00               	movlw	0
  6523  002C6A  6EDF               	movwf	indf2,c
  6524  002C6C                     
  6525                           ; BSR set to: 0
  6526  002C6C  0012               	return		;funcret
  6527  002C6E                     __end_of_sprintf:
  6528                           	opt callstack 0
  6529                           
  6530 ;; *************** function _vfprintf *****************
  6531 ;; Defined at:
  6532 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6533 ;; Parameters:    Size  Location     Type
  6534 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  6535 ;;		 -> sprintf@f(6), 
  6536 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  6537 ;;		 -> STR_30(45), STR_29(29), STR_28(32), STR_27(45), 
  6538 ;;		 -> STR_26(29), STR_25(32), STR_24(24), STR_23(25), 
  6539 ;;		 -> STR_22(24), STR_21(27), STR_20(24), STR_19(23), 
  6540 ;;		 -> STR_18(25), STR_17(24), 
  6541 ;;  ap              2    4[BANK0 ] PTR PTR void 
  6542 ;;		 -> sprintf@ap(2), 
  6543 ;; Auto vars:     Size  Location     Type
  6544 ;;  cfmt            2   90[COMRAM] PTR unsigned char 
  6545 ;;		 -> STR_30(45), STR_29(29), STR_28(32), STR_27(45), 
  6546 ;;		 -> STR_26(29), STR_25(32), STR_24(24), STR_23(25), 
  6547 ;;		 -> STR_22(24), STR_21(27), STR_20(24), STR_19(23), 
  6548 ;;		 -> STR_18(25), STR_17(24), 
  6549 ;; Return value:  Size  Location     Type
  6550 ;;                  2    0[BANK0 ] int 
  6551 ;; Registers used:
  6552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6553 ;; Tracked objects:
  6554 ;;		On entry : 0/0
  6555 ;;		On exit  : 0/0
  6556 ;;		Unchanged: 0/0
  6557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6558 ;;      Params:         0       6       0       0       0       0       0       0       0
  6559 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6560 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6561 ;;      Totals:         2       6       0       0       0       0       0       0       0
  6562 ;;Total ram usage:        8 bytes
  6563 ;; Hardware stack levels used:    1
  6564 ;; Hardware stack levels required when called:    7
  6565 ;; This function calls:
  6566 ;;		_vfpfcnvrt
  6567 ;; This function is called by:
  6568 ;;		_sprintf
  6569 ;; This function uses a non-reentrant model
  6570 ;;
  6571                           
  6572                           	psect	text37
  6573  002996                     __ptext37:
  6574                           	opt callstack 0
  6575  002996                     _vfprintf:
  6576                           	opt callstack 20
  6577  002996                     
  6578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6579  002996  C0AF  F05B         	movff	vfprintf@fmt,vfprintf@cfmt
  6580  00299A  C0B0  F05C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6581  00299E                     
  6582                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  6583  00299E  0E00               	movlw	0
  6584  0029A0  0100               	movlb	0	; () banked
  6585  0029A2  6F71               	movwf	(_nout+1)& (0+255),b
  6586  0029A4  0E00               	movlw	0
  6587  0029A6  6F70               	movwf	_nout& (0+255),b
  6588                           
  6589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6590  0029A8  EFE9  F014         	goto	l4024
  6591  0029AC                     l4022:
  6592                           
  6593                           ; BSR set to: 0
  6594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  6595  0029AC  C0AD  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  6596  0029B0  C0AE  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6597  0029B4  0E5B               	movlw	low vfprintf@cfmt
  6598  0029B6  6E42               	movwf	vfpfcnvrt@fmt^0,c
  6599  0029B8  0E00               	movlw	high vfprintf@cfmt
  6600  0029BA  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  6601  0029BC  C0B1  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  6602  0029C0  C0B2  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6603  0029C4  EC09  F000         	call	_vfpfcnvrt	;wreg free
  6604  0029C8  5040               	movf	?_vfpfcnvrt^0,w,c
  6605  0029CA  0100               	movlb	0	; () banked
  6606  0029CC  2770               	addwf	_nout& (0+255),f,b
  6607  0029CE  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  6608  0029D0  2371               	addwfc	(_nout+1)& (0+255),f,b
  6609  0029D2                     l4024:
  6610                           
  6611                           ; BSR set to: 0
  6612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6613  0029D2  C05B  FFF6         	movff	vfprintf@cfmt,tblptrl
  6614  0029D6  C05C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6615  0029DA                     	if	0	;tblptru may be non-zero
  6616  0029DA                     	endif
  6617  0029DA                     	if	0	;tblptru may be non-zero
  6618  0029DA                     	endif
  6619  0029DA  0008               	tblrd		*
  6620  0029DC  50F5               	movf	tablat,w,c
  6621  0029DE  0900               	iorlw	0
  6622  0029E0  A4D8               	btfss	status,2,c
  6623  0029E2  EFF5  F014         	goto	u3071
  6624  0029E6  EFF7  F014         	goto	u3070
  6625  0029EA                     u3071:
  6626  0029EA  EFD6  F014         	goto	l4022
  6627  0029EE                     u3070:
  6628  0029EE                     
  6629                           ; BSR set to: 0
  6630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  6631  0029EE  C070  F0AD         	movff	_nout,?_vfprintf
  6632  0029F2  C071  F0AE         	movff	_nout+1,?_vfprintf+1
  6633  0029F6                     
  6634                           ; BSR set to: 0
  6635  0029F6  0012               	return		;funcret
  6636  0029F8                     __end_of_vfprintf:
  6637                           	opt callstack 0
  6638                           
  6639 ;; *************** function _vfpfcnvrt *****************
  6640 ;; Defined at:
  6641 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6642 ;; Parameters:    Size  Location     Type
  6643 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  6644 ;;		 -> sprintf@f(6), 
  6645 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  6646 ;;		 -> vfprintf@cfmt(2), 
  6647 ;;  ap              2   67[COMRAM] PTR PTR void 
  6648 ;;		 -> sprintf@ap(2), 
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;  ll              8   73[COMRAM] long long 
  6651 ;;  llu             8    0        unsigned long long 
  6652 ;;  f               4    0        unsigned long long 
  6653 ;;  vp              3    0        PTR void 
  6654 ;;  ct              3    0        unsigned char [3]
  6655 ;;  done            2   83[COMRAM] int 
  6656 ;;  cp              2   81[COMRAM] PTR unsigned char 
  6657 ;;		 -> ?_sprintf(2), horarios(288), 
  6658 ;;  i               2    0        int 
  6659 ;;  c               1   89[COMRAM] unsigned char 
  6660 ;; Return value:  Size  Location     Type
  6661 ;;                  2   63[COMRAM] int 
  6662 ;; Registers used:
  6663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/0
  6666 ;;		On exit  : 0/0
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6669 ;;      Params:         6       0       0       0       0       0       0       0       0
  6670 ;;      Locals:        17       0       0       0       0       0       0       0       0
  6671 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6672 ;;      Totals:        27       0       0       0       0       0       0       0       0
  6673 ;;Total ram usage:       27 bytes
  6674 ;; Hardware stack levels used:    1
  6675 ;; Hardware stack levels required when called:    6
  6676 ;; This function calls:
  6677 ;;		_atoi
  6678 ;;		_ctoa
  6679 ;;		_dtoa
  6680 ;;		_fputc
  6681 ;;		_isdigit
  6682 ;;		_stoa
  6683 ;; This function is called by:
  6684 ;;		_vfprintf
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text38
  6689  000012                     __ptext38:
  6690                           	opt callstack 0
  6691  000012                     _vfpfcnvrt:
  6692                           	opt callstack 20
  6693  000012                     
  6694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6695  000012  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6696  000016  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6697  00001A  CFDE FFF6          	movff	postinc2,tblptrl
  6698  00001E  CFDD FFF7          	movff	postdec2,tblptrh
  6699  000022                     	if	0	;tblptru may be non-zero
  6700  000022                     	endif
  6701  000022                     	if	0	;tblptru may be non-zero
  6702  000022                     	endif
  6703  000022  0008               	tblrd		*
  6704  000024  50F5               	movf	tablat,w,c
  6705  000026  0A25               	xorlw	37
  6706  000028  A4D8               	btfss	status,2,c
  6707  00002A  EF19  F000         	goto	u2661
  6708  00002E  EF1B  F000         	goto	u2660
  6709  000032                     u2661:
  6710  000032  EFAE  F002         	goto	l3758
  6711  000036                     u2660:
  6712  000036                     
  6713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6714  000036  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6715  00003A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6716  00003E  2ADE               	incf	postinc2,f,c
  6717  000040  0E00               	movlw	0
  6718  000042  22DD               	addwfc	postdec2,f,c
  6719  000044                     
  6720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6721  000044  0E00               	movlw	0
  6722  000046  0100               	movlb	0	; () banked
  6723  000048  6F73               	movwf	(_width+1)& (0+255),b
  6724  00004A  0E00               	movlw	0
  6725  00004C  6F72               	movwf	_width& (0+255),b
  6726  00004E  C072  F076         	movff	_width,_flags
  6727  000052  C073  F077         	movff	_width+1,_flags+1
  6728  000056                     
  6729                           ; BSR set to: 0
  6730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6731  000056  6974               	setf	_prec& (0+255),b
  6732  000058  6975               	setf	(_prec+1)& (0+255),b
  6733  00005A                     
  6734                           ; BSR set to: 0
  6735                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  6736  00005A  0E00               	movlw	0
  6737  00005C  6E55               	movwf	(vfpfcnvrt@done+1)^0,c
  6738  00005E  0E00               	movlw	0
  6739  000060  6E54               	movwf	vfpfcnvrt@done^0,c
  6740                           
  6741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6742  000062  EF7E  F000         	goto	l3674
  6743  000066                     l3648:
  6744                           
  6745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  6746  000066  0100               	movlb	0	; () banked
  6747  000068  8176               	bsf	_flags& (0+255),0,b
  6748  00006A                     l3650:
  6749                           
  6750                           ; BSR set to: 0
  6751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  6752  00006A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6753  00006E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6754  000072  2ADE               	incf	postinc2,f,c
  6755  000074  0E00               	movlw	0
  6756  000076  22DD               	addwfc	postdec2,f,c
  6757                           
  6758                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  6759  000078  EF7E  F000         	goto	l3674
  6760  00007C                     l3652:
  6761                           
  6762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  6763  00007C  0100               	movlb	0	; () banked
  6764  00007E  8376               	bsf	_flags& (0+255),1,b
  6765  000080  EF35  F000         	goto	l3650
  6766  000084                     l3656:
  6767                           
  6768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  6769  000084  0100               	movlb	0	; () banked
  6770  000086  8576               	bsf	_flags& (0+255),2,b
  6771  000088  EF35  F000         	goto	l3650
  6772  00008C                     l3660:
  6773                           
  6774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  6775  00008C  0100               	movlb	0	; () banked
  6776  00008E  8776               	bsf	_flags& (0+255),3,b
  6777  000090  EF35  F000         	goto	l3650
  6778  000094                     l3664:
  6779                           
  6780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  6781  000094  0100               	movlb	0	; () banked
  6782  000096  8976               	bsf	_flags& (0+255),4,b
  6783  000098  EF35  F000         	goto	l3650
  6784  00009C                     l3668:
  6785                           
  6786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  6787  00009C  0E00               	movlw	0
  6788  00009E  6E55               	movwf	(vfpfcnvrt@done+1)^0,c
  6789  0000A0  0E01               	movlw	1
  6790  0000A2  6E54               	movwf	vfpfcnvrt@done^0,c
  6791                           
  6792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  6793  0000A4  EF7E  F000         	goto	l3674
  6794  0000A8                     l3672:
  6795  0000A8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6796  0000AC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6797  0000B0  CFDE FFF6          	movff	postinc2,tblptrl
  6798  0000B4  CFDD FFF7          	movff	postdec2,tblptrh
  6799  0000B8                     	if	0	;tblptru may be non-zero
  6800  0000B8                     	endif
  6801  0000B8                     	if	0	;tblptru may be non-zero
  6802  0000B8                     	endif
  6803  0000B8  0008               	tblrd		*
  6804  0000BA  50F5               	movf	tablat,w,c
  6805  0000BC  6E46               	movwf	??_vfpfcnvrt^0,c
  6806  0000BE  6A47               	clrf	(??_vfpfcnvrt+1)^0,c
  6807                           
  6808                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6809                           ; Switch size 1, requested type "simple"
  6810                           ; Number of cases is 1, Range of values is 0 to 0
  6811                           ; switch strategies available:
  6812                           ; Name         Instructions Cycles
  6813                           ; simple_byte            4     3 (average)
  6814                           ;	Chosen strategy is simple_byte
  6815  0000C0  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  6816  0000C2  0A00               	xorlw	0	; case 0
  6817  0000C4  B4D8               	btfsc	status,2,c
  6818  0000C6  EF67  F000         	goto	l5084
  6819  0000CA  EF4E  F000         	goto	l3668
  6820  0000CE                     l5084:
  6821                           
  6822                           ; Switch size 1, requested type "simple"
  6823                           ; Number of cases is 5, Range of values is 32 to 48
  6824                           ; switch strategies available:
  6825                           ; Name         Instructions Cycles
  6826                           ; simple_byte           16     9 (average)
  6827                           ;	Chosen strategy is simple_byte
  6828  0000CE  5046               	movf	??_vfpfcnvrt^0,w,c
  6829  0000D0  0A20               	xorlw	32	; case 32
  6830  0000D2  B4D8               	btfsc	status,2,c
  6831  0000D4  EF46  F000         	goto	l3660
  6832  0000D8  0A03               	xorlw	3	; case 35
  6833  0000DA  B4D8               	btfsc	status,2,c
  6834  0000DC  EF4A  F000         	goto	l3664
  6835  0000E0  0A08               	xorlw	8	; case 43
  6836  0000E2  B4D8               	btfsc	status,2,c
  6837  0000E4  EF42  F000         	goto	l3656
  6838  0000E8  0A06               	xorlw	6	; case 45
  6839  0000EA  B4D8               	btfsc	status,2,c
  6840  0000EC  EF33  F000         	goto	l3648
  6841  0000F0  0A1D               	xorlw	29	; case 48
  6842  0000F2  B4D8               	btfsc	status,2,c
  6843  0000F4  EF3E  F000         	goto	l3652
  6844  0000F8  EF4E  F000         	goto	l3668
  6845  0000FC                     l3674:
  6846                           
  6847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6848  0000FC  5054               	movf	vfpfcnvrt@done^0,w,c
  6849  0000FE  1055               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  6850  000100  B4D8               	btfsc	status,2,c
  6851  000102  EF85  F000         	goto	u2671
  6852  000106  EF87  F000         	goto	u2670
  6853  00010A                     u2671:
  6854  00010A  EF54  F000         	goto	l3672
  6855  00010E                     u2670:
  6856  00010E                     
  6857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  6858  00010E  0100               	movlb	0	; () banked
  6859  000110  A176               	btfss	_flags& (0+255),0,b
  6860  000112  EF8D  F000         	goto	u2681
  6861  000116  EF8F  F000         	goto	u2680
  6862  00011A                     u2681:
  6863  00011A  EF90  F000         	goto	l3678
  6864  00011E                     u2680:
  6865  00011E                     
  6866                           ; BSR set to: 0
  6867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  6868  00011E  9376               	bcf	_flags& (0+255),1,b
  6869  000120                     l3678:
  6870                           
  6871                           ; BSR set to: 0
  6872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  6873  000120  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6874  000124  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6875  000128  CFDE FFF6          	movff	postinc2,tblptrl
  6876  00012C  CFDD FFF7          	movff	postdec2,tblptrh
  6877  000130                     	if	0	;tblptru may be non-zero
  6878  000130                     	endif
  6879  000130                     	if	0	;tblptru may be non-zero
  6880  000130                     	endif
  6881  000130  0008               	tblrd		*
  6882  000132  50F5               	movf	tablat,w,c
  6883  000134  0A2A               	xorlw	42
  6884  000136  A4D8               	btfss	status,2,c
  6885  000138  EFA0  F000         	goto	u2691
  6886  00013C  EFA2  F000         	goto	u2690
  6887  000140                     u2691:
  6888  000140  EFCB  F000         	goto	l3686
  6889  000144                     u2690:
  6890  000144                     
  6891                           ; BSR set to: 0
  6892                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  6893  000144  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6894  000148  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6895  00014C  2ADE               	incf	postinc2,f,c
  6896  00014E  0E00               	movlw	0
  6897  000150  22DD               	addwfc	postdec2,f,c
  6898                           
  6899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6900  000152  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6901  000156  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6902  00015A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  6903  00015E  0E02               	movlw	2
  6904  000160  26DE               	addwf	postinc2,f,c
  6905  000162  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  6906  000166  0E00               	movlw	0
  6907  000168  22DD               	addwfc	postdec2,f,c
  6908  00016A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6909  00016E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6910  000172  CFDE F072          	movff	postinc2,_width
  6911  000176  CFDD F073          	movff	postdec2,_width+1
  6912  00017A                     
  6913                           ; BSR set to: 0
  6914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  6915  00017A  BF73               	btfsc	(_width+1)& (0+255),7,b
  6916  00017C  EFC4  F000         	goto	u2700
  6917  000180  EFC2  F000         	goto	u2701
  6918  000184                     u2701:
  6919  000184  EF0E  F001         	goto	l3696
  6920  000188                     u2700:
  6921  000188                     
  6922                           ; BSR set to: 0
  6923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  6924  000188  8176               	bsf	_flags& (0+255),0,b
  6925                           
  6926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  6927  00018A  6D72               	negf	_width& (0+255),b
  6928  00018C  1F73               	comf	(_width+1)& (0+255),f,b
  6929  00018E  B0D8               	btfsc	status,0,c
  6930  000190  2B73               	incf	(_width+1)& (0+255),f,b
  6931  000192  EF0E  F001         	goto	l3696
  6932  000196                     l3686:
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  6936  000196  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6937  00019A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6938  00019E  CFDE F008          	movff	postinc2,atoi@s
  6939  0001A2  CFDD F009          	movff	postdec2,atoi@s+1
  6940  0001A6  ECF4  F007         	call	_atoi	;wreg free
  6941  0001AA  C008  F072         	movff	?_atoi,_width
  6942  0001AE  C009  F073         	movff	?_atoi+1,_width+1
  6943                           
  6944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6945  0001B2  EFE2  F000         	goto	l3690
  6946  0001B6                     l3688:
  6947                           
  6948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  6949  0001B6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6950  0001BA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6951  0001BE  2ADE               	incf	postinc2,f,c
  6952  0001C0  0E00               	movlw	0
  6953  0001C2  22DD               	addwfc	postdec2,f,c
  6954  0001C4                     l3690:
  6955  0001C4  0ED0               	movlw	208
  6956  0001C6  6E46               	movwf	??_vfpfcnvrt^0,c
  6957  0001C8  0EFF               	movlw	255
  6958  0001CA  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  6959  0001CC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6960  0001D0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6961  0001D4  CFDE FFF6          	movff	postinc2,tblptrl
  6962  0001D8  CFDD FFF7          	movff	postdec2,tblptrh
  6963  0001DC                     	if	0	;tblptru may be non-zero
  6964  0001DC                     	endif
  6965  0001DC                     	if	0	;tblptru may be non-zero
  6966  0001DC                     	endif
  6967  0001DC  0008               	tblrd		*
  6968  0001DE  50F5               	movf	tablat,w,c
  6969  0001E0  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  6970  0001E2  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  6971  0001E4  5046               	movf	??_vfpfcnvrt^0,w,c
  6972  0001E6  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  6973  0001E8  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  6974  0001EA  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  6975  0001EC  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  6976  0001EE  E10A               	bnz	u2710
  6977  0001F0  0E0A               	movlw	10
  6978  0001F2  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  6979  0001F4  A0D8               	btfss	status,0,c
  6980  0001F6  EFFF  F000         	goto	u2711
  6981  0001FA  EF02  F001         	goto	u2710
  6982  0001FE                     u2711:
  6983  0001FE  0E01               	movlw	1
  6984  000200  EF03  F001         	goto	u2720
  6985  000204                     u2710:
  6986  000204  0E00               	movlw	0
  6987  000206                     u2720:
  6988  000206  6E56               	movwf	_vfpfcnvrt$1082^0,c
  6989  000208  6A57               	clrf	(_vfpfcnvrt$1082+1)^0,c
  6990  00020A  5056               	movf	_vfpfcnvrt$1082^0,w,c
  6991  00020C  1057               	iorwf	(_vfpfcnvrt$1082+1)^0,w,c
  6992  00020E  A4D8               	btfss	status,2,c
  6993  000210  EF0C  F001         	goto	u2731
  6994  000214  EF0E  F001         	goto	u2730
  6995  000218                     u2731:
  6996  000218  EFDB  F000         	goto	l3688
  6997  00021C                     u2730:
  6998  00021C                     l3696:
  6999                           
  7000                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  7001  00021C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7002  000220  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7003  000224  CFDE FFF6          	movff	postinc2,tblptrl
  7004  000228  CFDD FFF7          	movff	postdec2,tblptrh
  7005  00022C                     	if	0	;tblptru may be non-zero
  7006  00022C                     	endif
  7007  00022C                     	if	0	;tblptru may be non-zero
  7008  00022C                     	endif
  7009  00022C  0008               	tblrd		*
  7010  00022E  50F5               	movf	tablat,w,c
  7011  000230  0A2E               	xorlw	46
  7012  000232  A4D8               	btfss	status,2,c
  7013  000234  EF1E  F001         	goto	u2741
  7014  000238  EF20  F001         	goto	u2740
  7015  00023C                     u2741:
  7016  00023C  EF9E  F001         	goto	l3716
  7017  000240                     u2740:
  7018  000240                     
  7019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  7020  000240  0E00               	movlw	0
  7021  000242  0100               	movlb	0	; () banked
  7022  000244  6F75               	movwf	(_prec+1)& (0+255),b
  7023  000246  0E00               	movlw	0
  7024  000248  6F74               	movwf	_prec& (0+255),b
  7025  00024A                     
  7026                           ; BSR set to: 0
  7027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  7028  00024A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7029  00024E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7030  000252  2ADE               	incf	postinc2,f,c
  7031  000254  0E00               	movlw	0
  7032  000256  22DD               	addwfc	postdec2,f,c
  7033  000258                     
  7034                           ; BSR set to: 0
  7035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  7036  000258  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7037  00025C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7038  000260  CFDE FFF6          	movff	postinc2,tblptrl
  7039  000264  CFDD FFF7          	movff	postdec2,tblptrh
  7040  000268                     	if	0	;tblptru may be non-zero
  7041  000268                     	endif
  7042  000268                     	if	0	;tblptru may be non-zero
  7043  000268                     	endif
  7044  000268  0008               	tblrd		*
  7045  00026A  50F5               	movf	tablat,w,c
  7046  00026C  0A2A               	xorlw	42
  7047  00026E  A4D8               	btfss	status,2,c
  7048  000270  EF3C  F001         	goto	u2751
  7049  000274  EF3E  F001         	goto	u2750
  7050  000278                     u2751:
  7051  000278  EF5B  F001         	goto	l3706
  7052  00027C                     u2750:
  7053  00027C                     
  7054                           ; BSR set to: 0
  7055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  7056  00027C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7057  000280  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7058  000284  2ADE               	incf	postinc2,f,c
  7059  000286  0E00               	movlw	0
  7060  000288  22DD               	addwfc	postdec2,f,c
  7061                           
  7062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  7063  00028A  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7064  00028E  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7065  000292  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7066  000296  0E02               	movlw	2
  7067  000298  26DE               	addwf	postinc2,f,c
  7068  00029A  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7069  00029E  0E00               	movlw	0
  7070  0002A0  22DD               	addwfc	postdec2,f,c
  7071  0002A2  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7072  0002A6  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7073  0002AA  CFDE F074          	movff	postinc2,_prec
  7074  0002AE  CFDD F075          	movff	postdec2,_prec+1
  7075                           
  7076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  7077  0002B2  EF9E  F001         	goto	l3716
  7078  0002B6                     l3706:
  7079                           
  7080                           ; BSR set to: 0
  7081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  7082  0002B6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7083  0002BA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7084  0002BE  CFDE F008          	movff	postinc2,atoi@s
  7085  0002C2  CFDD F009          	movff	postdec2,atoi@s+1
  7086  0002C6  ECF4  F007         	call	_atoi	;wreg free
  7087  0002CA  C008  F074         	movff	?_atoi,_prec
  7088  0002CE  C009  F075         	movff	?_atoi+1,_prec+1
  7089                           
  7090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7091  0002D2  EF72  F001         	goto	l3710
  7092  0002D6                     l3708:
  7093                           
  7094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  7095  0002D6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7096  0002DA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7097  0002DE  2ADE               	incf	postinc2,f,c
  7098  0002E0  0E00               	movlw	0
  7099  0002E2  22DD               	addwfc	postdec2,f,c
  7100  0002E4                     l3710:
  7101  0002E4  0ED0               	movlw	208
  7102  0002E6  6E46               	movwf	??_vfpfcnvrt^0,c
  7103  0002E8  0EFF               	movlw	255
  7104  0002EA  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  7105  0002EC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7106  0002F0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7107  0002F4  CFDE FFF6          	movff	postinc2,tblptrl
  7108  0002F8  CFDD FFF7          	movff	postdec2,tblptrh
  7109  0002FC                     	if	0	;tblptru may be non-zero
  7110  0002FC                     	endif
  7111  0002FC                     	if	0	;tblptru may be non-zero
  7112  0002FC                     	endif
  7113  0002FC  0008               	tblrd		*
  7114  0002FE  50F5               	movf	tablat,w,c
  7115  000300  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  7116  000302  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  7117  000304  5046               	movf	??_vfpfcnvrt^0,w,c
  7118  000306  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  7119  000308  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  7120  00030A  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  7121  00030C  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  7122  00030E  E10A               	bnz	u2760
  7123  000310  0E0A               	movlw	10
  7124  000312  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  7125  000314  A0D8               	btfss	status,0,c
  7126  000316  EF8F  F001         	goto	u2761
  7127  00031A  EF92  F001         	goto	u2760
  7128  00031E                     u2761:
  7129  00031E  0E01               	movlw	1
  7130  000320  EF93  F001         	goto	u2770
  7131  000324                     u2760:
  7132  000324  0E00               	movlw	0
  7133  000326                     u2770:
  7134  000326  6E58               	movwf	_vfpfcnvrt$1083^0,c
  7135  000328  6A59               	clrf	(_vfpfcnvrt$1083+1)^0,c
  7136  00032A  5058               	movf	_vfpfcnvrt$1083^0,w,c
  7137  00032C  1059               	iorwf	(_vfpfcnvrt$1083+1)^0,w,c
  7138  00032E  A4D8               	btfss	status,2,c
  7139  000330  EF9C  F001         	goto	u2781
  7140  000334  EF9E  F001         	goto	u2780
  7141  000338                     u2781:
  7142  000338  EF6B  F001         	goto	l3708
  7143  00033C                     u2780:
  7144  00033C                     l3716:
  7145                           
  7146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  7147  00033C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7148  000340  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7149  000344  CFDE FFF6          	movff	postinc2,tblptrl
  7150  000348  CFDD FFF7          	movff	postdec2,tblptrh
  7151  00034C                     	if	0	;tblptru may be non-zero
  7152  00034C                     	endif
  7153  00034C                     	if	0	;tblptru may be non-zero
  7154  00034C                     	endif
  7155  00034C  0008               	tblrd		*
  7156  00034E  50F5               	movf	tablat,w,c
  7157  000350  0A63               	xorlw	99
  7158  000352  A4D8               	btfss	status,2,c
  7159  000354  EFAE  F001         	goto	u2791
  7160  000358  EFB0  F001         	goto	u2790
  7161  00035C                     u2791:
  7162  00035C  EFD7  F001         	goto	l3724
  7163  000360                     u2790:
  7164  000360                     
  7165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  7166  000360  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7167  000364  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7168  000368  2ADE               	incf	postinc2,f,c
  7169  00036A  0E00               	movlw	0
  7170  00036C  22DD               	addwfc	postdec2,f,c
  7171                           
  7172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7173  00036E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7174  000372  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7175  000376  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7176  00037A  0E02               	movlw	2
  7177  00037C  26DE               	addwf	postinc2,f,c
  7178  00037E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7179  000382  0E00               	movlw	0
  7180  000384  22DD               	addwfc	postdec2,f,c
  7181  000386  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7182  00038A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7183  00038E  50DF               	movf	indf2,w,c
  7184  000390  6E5A               	movwf	vfpfcnvrt@c^0,c
  7185  000392                     
  7186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  7187  000392  C040  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  7188  000396  C041  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  7189  00039A  C05A  F01E         	movff	vfpfcnvrt@c,ctoa@c
  7190  00039E  ECB7  F015         	call	_ctoa	;wreg free
  7191  0003A2  C01C  F040         	movff	?_ctoa,?_vfpfcnvrt
  7192  0003A6  C01D  F041         	movff	?_ctoa+1,?_vfpfcnvrt+1
  7193  0003AA  EFC9  F002         	goto	l625
  7194  0003AE                     l3724:
  7195                           
  7196                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7197  0003AE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7198  0003B2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7199  0003B6  CFDE FFF6          	movff	postinc2,tblptrl
  7200  0003BA  CFDD FFF7          	movff	postdec2,tblptrh
  7201  0003BE                     	if	0	;tblptru may be non-zero
  7202  0003BE                     	endif
  7203  0003BE                     	if	0	;tblptru may be non-zero
  7204  0003BE                     	endif
  7205  0003BE  0008               	tblrd		*
  7206  0003C0  50F5               	movf	tablat,w,c
  7207  0003C2  0A64               	xorlw	100
  7208  0003C4  B4D8               	btfsc	status,2,c
  7209  0003C6  EFE7  F001         	goto	u2801
  7210  0003CA  EFE9  F001         	goto	u2800
  7211  0003CE                     u2801:
  7212  0003CE  EFFB  F001         	goto	l3728
  7213  0003D2                     u2800:
  7214  0003D2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7215  0003D6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7216  0003DA  CFDE FFF6          	movff	postinc2,tblptrl
  7217  0003DE  CFDD FFF7          	movff	postdec2,tblptrh
  7218  0003E2                     	if	0	;tblptru may be non-zero
  7219  0003E2                     	endif
  7220  0003E2                     	if	0	;tblptru may be non-zero
  7221  0003E2                     	endif
  7222  0003E2  0008               	tblrd		*
  7223  0003E4  50F5               	movf	tablat,w,c
  7224  0003E6  0A69               	xorlw	105
  7225  0003E8  A4D8               	btfss	status,2,c
  7226  0003EA  EFF9  F001         	goto	u2811
  7227  0003EE  EFFB  F001         	goto	u2810
  7228  0003F2                     u2811:
  7229  0003F2  EF3B  F002         	goto	l3734
  7230  0003F6                     u2810:
  7231  0003F6                     l3728:
  7232                           
  7233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  7234  0003F6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7235  0003FA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7236  0003FE  2ADE               	incf	postinc2,f,c
  7237  000400  0E00               	movlw	0
  7238  000402  22DD               	addwfc	postdec2,f,c
  7239                           
  7240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7241  000404  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7242  000408  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7243  00040C  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7244  000410  0E02               	movlw	2
  7245  000412  26DE               	addwf	postinc2,f,c
  7246  000414  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7247  000418  0E00               	movlw	0
  7248  00041A  22DD               	addwfc	postdec2,f,c
  7249  00041C  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7250  000420  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7251  000424  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  7252  000428  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  7253  00042C  0E00               	movlw	0
  7254  00042E  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  7255  000430  0EFF               	movlw	-1
  7256  000432  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  7257  000434  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  7258  000436  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  7259  000438  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  7260  00043A  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  7261  00043C  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  7262  00043E                     
  7263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  7264  00043E  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  7265  000442  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7266  000446  C04A  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  7267  00044A  C04B  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7268  00044E  C04C  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7269  000452  C04D  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7270  000456  C04E  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7271  00045A  C04F  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7272  00045E  C050  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7273  000462  C051  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7274  000466  EC42  F004         	call	_dtoa	;wreg free
  7275  00046A  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  7276  00046E  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7277  000472  EFC9  F002         	goto	l625
  7278  000476                     l3734:
  7279                           
  7280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  7281  000476  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7282  00047A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7283  00047E  CFDE FFF6          	movff	postinc2,tblptrl
  7284  000482  CFDD FFF7          	movff	postdec2,tblptrh
  7285  000486                     	if	0	;tblptru may be non-zero
  7286  000486                     	endif
  7287  000486                     	if	0	;tblptru may be non-zero
  7288  000486                     	endif
  7289  000486  0008               	tblrd		*
  7290  000488  50F5               	movf	tablat,w,c
  7291  00048A  0A73               	xorlw	115
  7292  00048C  A4D8               	btfss	status,2,c
  7293  00048E  EF4B  F002         	goto	u2821
  7294  000492  EF4D  F002         	goto	u2820
  7295  000496                     u2821:
  7296  000496  EF78  F002         	goto	l3742
  7297  00049A                     u2820:
  7298  00049A                     
  7299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  7300  00049A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7301  00049E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7302  0004A2  2ADE               	incf	postinc2,f,c
  7303  0004A4  0E00               	movlw	0
  7304  0004A6  22DD               	addwfc	postdec2,f,c
  7305                           
  7306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  7307  0004A8  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7308  0004AC  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7309  0004B0  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7310  0004B4  0E02               	movlw	2
  7311  0004B6  26DE               	addwf	postinc2,f,c
  7312  0004B8  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7313  0004BC  0E00               	movlw	0
  7314  0004BE  22DD               	addwfc	postdec2,f,c
  7315  0004C0  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7316  0004C4  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7317  0004C8  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  7318  0004CC  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  7319  0004D0                     
  7320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  7321  0004D0  C040  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  7322  0004D4  C041  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  7323  0004D8  C052  F00C         	movff	vfpfcnvrt@cp,stoa@s
  7324  0004DC  C053  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  7325  0004E0  EC80  F009         	call	_stoa	;wreg free
  7326  0004E4  C00A  F040         	movff	?_stoa,?_vfpfcnvrt
  7327  0004E8  C00B  F041         	movff	?_stoa+1,?_vfpfcnvrt+1
  7328  0004EC  EFC9  F002         	goto	l625
  7329  0004F0                     l3742:
  7330                           
  7331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  7332  0004F0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7333  0004F4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7334  0004F8  CFDE FFF6          	movff	postinc2,tblptrl
  7335  0004FC  CFDD FFF7          	movff	postdec2,tblptrh
  7336  000500                     	if	0	;tblptru may be non-zero
  7337  000500                     	endif
  7338  000500                     	if	0	;tblptru may be non-zero
  7339  000500                     	endif
  7340  000500  0008               	tblrd		*
  7341  000502  50F5               	movf	tablat,w,c
  7342  000504  0A25               	xorlw	37
  7343  000506  A4D8               	btfss	status,2,c
  7344  000508  EF88  F002         	goto	u2831
  7345  00050C  EF8A  F002         	goto	u2830
  7346  000510                     u2831:
  7347  000510  EFA1  F002         	goto	l3752
  7348  000514                     u2830:
  7349  000514                     
  7350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  7351  000514  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7352  000518  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7353  00051C  2ADE               	incf	postinc2,f,c
  7354  00051E  0E00               	movlw	0
  7355  000520  22DD               	addwfc	postdec2,f,c
  7356  000522                     
  7357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  7358  000522  0E00               	movlw	0
  7359  000524  6E02               	movwf	(fputc@c+1)^0,c
  7360  000526  0E25               	movlw	37
  7361  000528  6E01               	movwf	fputc@c^0,c
  7362  00052A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7363  00052E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7364  000532  EC4C  F010         	call	_fputc	;wreg free
  7365  000536                     l3748:
  7366                           
  7367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  7368  000536  0E00               	movlw	0
  7369  000538  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  7370  00053A  0E01               	movlw	1
  7371  00053C  6E40               	movwf	?_vfpfcnvrt^0,c
  7372  00053E  EFC9  F002         	goto	l625
  7373  000542                     l3752:
  7374                           
  7375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  7376  000542  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7377  000546  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7378  00054A  2ADE               	incf	postinc2,f,c
  7379  00054C  0E00               	movlw	0
  7380  00054E  22DD               	addwfc	postdec2,f,c
  7381  000550                     
  7382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  7383  000550  0E00               	movlw	0
  7384  000552  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  7385  000554  0E00               	movlw	0
  7386  000556  6E40               	movwf	?_vfpfcnvrt^0,c
  7387  000558  EFC9  F002         	goto	l625
  7388  00055C                     l3758:
  7389                           
  7390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  7391  00055C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7392  000560  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7393  000564  CFDE FFF6          	movff	postinc2,tblptrl
  7394  000568  CFDD FFF7          	movff	postdec2,tblptrh
  7395  00056C                     	if	0	;tblptru may be non-zero
  7396  00056C                     	endif
  7397  00056C                     	if	0	;tblptru may be non-zero
  7398  00056C                     	endif
  7399  00056C  0008               	tblrd		*
  7400  00056E  50F5               	movf	tablat,w,c
  7401  000570  6E01               	movwf	fputc@c^0,c
  7402  000572  6A02               	clrf	(fputc@c+1)^0,c
  7403  000574  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7404  000578  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7405  00057C  EC4C  F010         	call	_fputc	;wreg free
  7406  000580                     
  7407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  7408  000580  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7409  000584  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7410  000588  2ADE               	incf	postinc2,f,c
  7411  00058A  0E00               	movlw	0
  7412  00058C  22DD               	addwfc	postdec2,f,c
  7413  00058E  EF9B  F002         	goto	l3748
  7414  000592                     l625:
  7415  000592  0012               	return		;funcret
  7416  000594                     __end_of_vfpfcnvrt:
  7417                           	opt callstack 0
  7418                           
  7419 ;; *************** function _stoa *****************
  7420 ;; Defined at:
  7421 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  7424 ;;		 -> sprintf@f(6), 
  7425 ;;  s               2   11[COMRAM] PTR unsigned char 
  7426 ;;		 -> ?_sprintf(2), horarios(288), 
  7427 ;; Auto vars:     Size  Location     Type
  7428 ;;  nuls            7   14[COMRAM] unsigned char [7]
  7429 ;;  l               2   29[COMRAM] int 
  7430 ;;  p               2   27[COMRAM] int 
  7431 ;;  cp              2   25[COMRAM] PTR unsigned char 
  7432 ;;		 -> ?_sprintf(2), stoa@nuls(7), horarios(288), 
  7433 ;;  w               2   23[COMRAM] int 
  7434 ;;  i               2   21[COMRAM] int 
  7435 ;; Return value:  Size  Location     Type
  7436 ;;                  2    9[COMRAM] int 
  7437 ;; Registers used:
  7438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7439 ;; Tracked objects:
  7440 ;;		On entry : 0/0
  7441 ;;		On exit  : 0/0
  7442 ;;		Unchanged: 0/0
  7443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7444 ;;      Params:         4       0       0       0       0       0       0       0       0
  7445 ;;      Locals:        17       0       0       0       0       0       0       0       0
  7446 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7447 ;;      Totals:        22       0       0       0       0       0       0       0       0
  7448 ;;Total ram usage:       22 bytes
  7449 ;; Hardware stack levels used:    1
  7450 ;; Hardware stack levels required when called:    3
  7451 ;; This function calls:
  7452 ;;		_fputc
  7453 ;;		_strlen
  7454 ;; This function is called by:
  7455 ;;		_vfpfcnvrt
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459                           	psect	text39
  7460  001300                     __ptext39:
  7461                           	opt callstack 0
  7462  001300                     _stoa:
  7463                           	opt callstack 22
  7464  001300                     
  7465                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7466  001300  EE20  F0F4         	lfsr	2,stoa@F1144
  7467  001304  EE10  F00F         	lfsr	1,stoa@nuls
  7468  001308  0E06               	movlw	6
  7469  00130A                     u2401:
  7470  00130A  CFDB FFE3          	movff	plusw2,plusw1
  7471  00130E  06E8               	decf	wreg,f,c
  7472  001310  E2FC               	bc	u2401
  7473  001312                     
  7474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  7475  001312  C00C  F01A         	movff	stoa@s,stoa@cp
  7476  001316  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  7477  00131A                     
  7478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  7479  00131A  501A               	movf	stoa@cp^0,w,c
  7480  00131C  101B               	iorwf	(stoa@cp+1)^0,w,c
  7481  00131E  A4D8               	btfss	status,2,c
  7482  001320  EF94  F009         	goto	u2411
  7483  001324  EF96  F009         	goto	u2410
  7484  001328                     u2411:
  7485  001328  EF9A  F009         	goto	l3482
  7486  00132C                     u2410:
  7487  00132C                     
  7488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  7489  00132C  0E0F               	movlw	low stoa@nuls
  7490  00132E  6E1A               	movwf	stoa@cp^0,c
  7491  001330  0E00               	movlw	high stoa@nuls
  7492  001332  6E1B               	movwf	(stoa@cp+1)^0,c
  7493  001334                     l3482:
  7494                           
  7495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  7496  001334  C01A  F001         	movff	stoa@cp,strlen@s
  7497  001338  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  7498  00133C  ECA0  F017         	call	_strlen	;wreg free
  7499  001340  C001  F01E         	movff	?_strlen,stoa@l
  7500  001344  C002  F01F         	movff	?_strlen+1,stoa@l+1
  7501  001348                     
  7502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  7503  001348  C074  F01C         	movff	_prec,stoa@p
  7504  00134C  C075  F01D         	movff	_prec+1,stoa@p+1
  7505  001350                     
  7506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  7507  001350  BE1D               	btfsc	(stoa@p+1)^0,7,c
  7508  001352  EFAD  F009         	goto	u2421
  7509  001356  EFAF  F009         	goto	u2420
  7510  00135A                     u2421:
  7511  00135A  EFC4  F009         	goto	l574
  7512  00135E                     u2420:
  7513  00135E  501E               	movf	stoa@l^0,w,c
  7514  001360  5C1C               	subwf	stoa@p^0,w,c
  7515  001362  501D               	movf	(stoa@p+1)^0,w,c
  7516  001364  0A80               	xorlw	128
  7517  001366  6E0E               	movwf	??_stoa^0,c
  7518  001368  501F               	movf	(stoa@l+1)^0,w,c
  7519  00136A  0A80               	xorlw	128
  7520  00136C  580E               	subwfb	??_stoa^0,w,c
  7521  00136E  A0D8               	btfss	status,0,c
  7522  001370  EFBC  F009         	goto	u2431
  7523  001374  EFBE  F009         	goto	u2430
  7524  001378                     u2431:
  7525  001378  EFC0  F009         	goto	l572
  7526  00137C                     u2430:
  7527  00137C  EFC4  F009         	goto	l574
  7528  001380                     l572:
  7529  001380  C01C  F01E         	movff	stoa@p,stoa@l
  7530  001384  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  7531  001388                     l574:
  7532                           
  7533                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  7534  001388  C01E  F01C         	movff	stoa@l,stoa@p
  7535  00138C  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  7536                           
  7537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  7538  001390  C072  F018         	movff	_width,stoa@w
  7539  001394  C073  F019         	movff	_width+1,stoa@w+1
  7540                           
  7541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  7542  001398  0100               	movlb	0	; () banked
  7543  00139A  B176               	btfsc	_flags& (0+255),0,b
  7544  00139C  EFD2  F009         	goto	u2441
  7545  0013A0  EFD4  F009         	goto	u2440
  7546  0013A4                     u2441:
  7547  0013A4  EFF1  F009         	goto	l3498
  7548  0013A8                     u2440:
  7549  0013A8  EFE2  F009         	goto	l3496
  7550  0013AC                     l3492:
  7551                           
  7552                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  7553  0013AC  0E00               	movlw	0
  7554  0013AE  6E02               	movwf	(fputc@c+1)^0,c
  7555  0013B0  0E20               	movlw	32
  7556  0013B2  6E01               	movwf	fputc@c^0,c
  7557  0013B4  C00A  F003         	movff	stoa@fp,fputc@fp
  7558  0013B8  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7559  0013BC  EC4C  F010         	call	_fputc	;wreg free
  7560  0013C0                     
  7561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  7562  0013C0  4A1E               	infsnz	stoa@l^0,f,c
  7563  0013C2  2A1F               	incf	(stoa@l+1)^0,f,c
  7564  0013C4                     l3496:
  7565                           
  7566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  7567  0013C4  5018               	movf	stoa@w^0,w,c
  7568  0013C6  5C1E               	subwf	stoa@l^0,w,c
  7569  0013C8  501F               	movf	(stoa@l+1)^0,w,c
  7570  0013CA  0A80               	xorlw	128
  7571  0013CC  6E0E               	movwf	??_stoa^0,c
  7572  0013CE  5019               	movf	(stoa@w+1)^0,w,c
  7573  0013D0  0A80               	xorlw	128
  7574  0013D2  580E               	subwfb	??_stoa^0,w,c
  7575  0013D4  A0D8               	btfss	status,0,c
  7576  0013D6  EFEF  F009         	goto	u2451
  7577  0013DA  EFF1  F009         	goto	u2450
  7578  0013DE                     u2451:
  7579  0013DE  EFD6  F009         	goto	l3492
  7580  0013E2                     u2450:
  7581  0013E2                     l3498:
  7582                           
  7583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  7584  0013E2  0E00               	movlw	0
  7585  0013E4  6E17               	movwf	(stoa@i+1)^0,c
  7586  0013E6  0E00               	movlw	0
  7587  0013E8  6E16               	movwf	stoa@i^0,c
  7588                           
  7589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7590  0013EA  EF0A  F00A         	goto	l3506
  7591  0013EE                     l3500:
  7592                           
  7593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  7594  0013EE  C01A  FFD9         	movff	stoa@cp,fsr2l
  7595  0013F2  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  7596  0013F6  50DF               	movf	indf2,w,c
  7597  0013F8  6E0E               	movwf	??_stoa^0,c
  7598  0013FA  500E               	movf	??_stoa^0,w,c
  7599  0013FC  6E01               	movwf	fputc@c^0,c
  7600  0013FE  6A02               	clrf	(fputc@c+1)^0,c
  7601  001400  C00A  F003         	movff	stoa@fp,fputc@fp
  7602  001404  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7603  001408  EC4C  F010         	call	_fputc	;wreg free
  7604  00140C                     
  7605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  7606  00140C  4A1A               	infsnz	stoa@cp^0,f,c
  7607  00140E  2A1B               	incf	(stoa@cp+1)^0,f,c
  7608  001410                     
  7609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  7610  001410  4A16               	infsnz	stoa@i^0,f,c
  7611  001412  2A17               	incf	(stoa@i+1)^0,f,c
  7612  001414                     l3506:
  7613                           
  7614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7615  001414  501C               	movf	stoa@p^0,w,c
  7616  001416  5C16               	subwf	stoa@i^0,w,c
  7617  001418  5017               	movf	(stoa@i+1)^0,w,c
  7618  00141A  0A80               	xorlw	128
  7619  00141C  6E0E               	movwf	??_stoa^0,c
  7620  00141E  501D               	movf	(stoa@p+1)^0,w,c
  7621  001420  0A80               	xorlw	128
  7622  001422  580E               	subwfb	??_stoa^0,w,c
  7623  001424  A0D8               	btfss	status,0,c
  7624  001426  EF17  F00A         	goto	u2461
  7625  00142A  EF19  F00A         	goto	u2460
  7626  00142E                     u2461:
  7627  00142E  EFF7  F009         	goto	l3500
  7628  001432                     u2460:
  7629  001432                     
  7630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  7631  001432  0100               	movlb	0	; () banked
  7632  001434  A176               	btfss	_flags& (0+255),0,b
  7633  001436  EF1F  F00A         	goto	u2471
  7634  00143A  EF21  F00A         	goto	u2470
  7635  00143E                     u2471:
  7636  00143E  EF3E  F00A         	goto	l584
  7637  001442                     u2470:
  7638  001442  EF2F  F00A         	goto	l3514
  7639  001446                     l3510:
  7640                           
  7641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  7642  001446  0E00               	movlw	0
  7643  001448  6E02               	movwf	(fputc@c+1)^0,c
  7644  00144A  0E20               	movlw	32
  7645  00144C  6E01               	movwf	fputc@c^0,c
  7646  00144E  C00A  F003         	movff	stoa@fp,fputc@fp
  7647  001452  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7648  001456  EC4C  F010         	call	_fputc	;wreg free
  7649  00145A                     
  7650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  7651  00145A  4A1E               	infsnz	stoa@l^0,f,c
  7652  00145C  2A1F               	incf	(stoa@l+1)^0,f,c
  7653  00145E                     l3514:
  7654                           
  7655                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  7656  00145E  5018               	movf	stoa@w^0,w,c
  7657  001460  5C1E               	subwf	stoa@l^0,w,c
  7658  001462  501F               	movf	(stoa@l+1)^0,w,c
  7659  001464  0A80               	xorlw	128
  7660  001466  6E0E               	movwf	??_stoa^0,c
  7661  001468  5019               	movf	(stoa@w+1)^0,w,c
  7662  00146A  0A80               	xorlw	128
  7663  00146C  580E               	subwfb	??_stoa^0,w,c
  7664  00146E  A0D8               	btfss	status,0,c
  7665  001470  EF3C  F00A         	goto	u2481
  7666  001474  EF3E  F00A         	goto	u2480
  7667  001478                     u2481:
  7668  001478  EF23  F00A         	goto	l3510
  7669  00147C                     u2480:
  7670  00147C                     l584:
  7671                           
  7672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  7673  00147C  C01E  F00A         	movff	stoa@l,?_stoa
  7674  001480  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  7675  001484  0012               	return		;funcret
  7676  001486                     __end_of_stoa:
  7677                           	opt callstack 0
  7678                           
  7679 ;; *************** function _dtoa *****************
  7680 ;; Defined at:
  7681 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7684 ;;		 -> sprintf@f(6), 
  7685 ;;  d               8   29[COMRAM] long long 
  7686 ;; Auto vars:     Size  Location     Type
  7687 ;;  n               8   53[COMRAM] long long 
  7688 ;;  i               2   61[COMRAM] int 
  7689 ;;  s               2   51[COMRAM] int 
  7690 ;;  w               2   49[COMRAM] int 
  7691 ;;  p               2   47[COMRAM] int 
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  2   27[COMRAM] int 
  7694 ;; Registers used:
  7695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 0/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7701 ;;      Params:        10       0       0       0       0       0       0       0       0
  7702 ;;      Locals:        18       0       0       0       0       0       0       0       0
  7703 ;;      Temps:          8       0       0       0       0       0       0       0       0
  7704 ;;      Totals:        36       0       0       0       0       0       0       0       0
  7705 ;;Total ram usage:       36 bytes
  7706 ;; Hardware stack levels used:    1
  7707 ;; Hardware stack levels required when called:    5
  7708 ;; This function calls:
  7709 ;;		___aodiv
  7710 ;;		___aomod
  7711 ;;		_abs
  7712 ;;		_pad
  7713 ;; This function is called by:
  7714 ;;		_vfpfcnvrt
  7715 ;; This function uses a non-reentrant model
  7716 ;;
  7717                           
  7718                           	psect	text40
  7719  000884                     __ptext40:
  7720                           	opt callstack 0
  7721  000884                     _dtoa:
  7722                           	opt callstack 20
  7723  000884                     
  7724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  7725  000884  C01E  F036         	movff	dtoa@d,dtoa@n
  7726  000888  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7727  00088C  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7728  000890  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7729  000894  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7730  000898  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7731  00089C  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7732  0008A0  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7733  0008A4                     
  7734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  7735  0008A4  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  7736  0008A6  EF57  F004         	goto	u2251
  7737  0008AA  EF5A  F004         	goto	u2250
  7738  0008AE                     u2251:
  7739  0008AE  0E01               	movlw	1
  7740  0008B0  EF5B  F004         	goto	u2260
  7741  0008B4                     u2250:
  7742  0008B4  0E00               	movlw	0
  7743  0008B6                     u2260:
  7744  0008B6  6E34               	movwf	dtoa@s^0,c
  7745  0008B8  6A35               	clrf	(dtoa@s+1)^0,c
  7746                           
  7747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  7748  0008BA  5034               	movf	dtoa@s^0,w,c
  7749  0008BC  1035               	iorwf	(dtoa@s+1)^0,w,c
  7750  0008BE  B4D8               	btfsc	status,2,c
  7751  0008C0  EF64  F004         	goto	u2271
  7752  0008C4  EF66  F004         	goto	u2270
  7753  0008C8                     u2271:
  7754  0008C8  EF76  F004         	goto	l3418
  7755  0008CC                     u2270:
  7756  0008CC                     
  7757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  7758  0008CC  1E3D               	comf	(dtoa@n+7)^0,f,c
  7759  0008CE  1E3C               	comf	(dtoa@n+6)^0,f,c
  7760  0008D0  1E3B               	comf	(dtoa@n+5)^0,f,c
  7761  0008D2  1E3A               	comf	(dtoa@n+4)^0,f,c
  7762  0008D4  1E39               	comf	(dtoa@n+3)^0,f,c
  7763  0008D6  1E38               	comf	(dtoa@n+2)^0,f,c
  7764  0008D8  1E37               	comf	(dtoa@n+1)^0,f,c
  7765  0008DA  6C36               	negf	dtoa@n^0,c
  7766  0008DC  0E00               	movlw	0
  7767  0008DE  2237               	addwfc	(dtoa@n+1)^0,f,c
  7768  0008E0  2238               	addwfc	(dtoa@n+2)^0,f,c
  7769  0008E2  2239               	addwfc	(dtoa@n+3)^0,f,c
  7770  0008E4  223A               	addwfc	(dtoa@n+4)^0,f,c
  7771  0008E6  223B               	addwfc	(dtoa@n+5)^0,f,c
  7772  0008E8  223C               	addwfc	(dtoa@n+6)^0,f,c
  7773  0008EA  223D               	addwfc	(dtoa@n+7)^0,f,c
  7774  0008EC                     l3418:
  7775                           
  7776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  7777  0008EC  0100               	movlb	0	; () banked
  7778  0008EE  BF75               	btfsc	(_prec+1)& (0+255),7,b
  7779  0008F0  EF7C  F004         	goto	u2281
  7780  0008F4  EF7E  F004         	goto	u2280
  7781  0008F8                     u2281:
  7782  0008F8  EF7F  F004         	goto	l3422
  7783  0008FC                     u2280:
  7784  0008FC                     
  7785                           ; BSR set to: 0
  7786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  7787  0008FC  9376               	bcf	_flags& (0+255),1,b
  7788  0008FE                     l3422:
  7789                           
  7790                           ; BSR set to: 0
  7791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  7792  0008FE  BF75               	btfsc	(_prec+1)& (0+255),7,b
  7793  000900  EF8C  F004         	goto	u2290
  7794  000904  5175               	movf	(_prec+1)& (0+255),w,b
  7795  000906  E106               	bnz	u2291
  7796  000908  0574               	decf	_prec& (0+255),w,b
  7797  00090A  B0D8               	btfsc	status,0,c
  7798  00090C  EF8A  F004         	goto	u2291
  7799  000910  EF8C  F004         	goto	u2290
  7800  000914                     u2291:
  7801  000914  EF92  F004         	goto	l545
  7802  000918                     u2290:
  7803  000918                     
  7804                           ; BSR set to: 0
  7805  000918  0E00               	movlw	0
  7806  00091A  6E31               	movwf	(dtoa@p+1)^0,c
  7807  00091C  0E01               	movlw	1
  7808  00091E  6E30               	movwf	dtoa@p^0,c
  7809  000920  EF96  F004         	goto	l547
  7810  000924                     l545:
  7811                           
  7812                           ; BSR set to: 0
  7813  000924  C074  F030         	movff	_prec,dtoa@p
  7814  000928  C075  F031         	movff	_prec+1,dtoa@p+1
  7815  00092C                     l547:
  7816                           
  7817                           ; BSR set to: 0
  7818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  7819  00092C  C072  F032         	movff	_width,dtoa@w
  7820  000930  C073  F033         	movff	_width+1,dtoa@w+1
  7821  000934                     
  7822                           ; BSR set to: 0
  7823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  7824  000934  5034               	movf	dtoa@s^0,w,c
  7825  000936  1035               	iorwf	(dtoa@s+1)^0,w,c
  7826  000938  A4D8               	btfss	status,2,c
  7827  00093A  EFA1  F004         	goto	u2301
  7828  00093E  EFA3  F004         	goto	u2300
  7829  000942                     u2301:
  7830  000942  EFAA  F004         	goto	l3430
  7831  000946                     u2300:
  7832  000946                     
  7833                           ; BSR set to: 0
  7834  000946  A576               	btfss	_flags& (0+255),2,b
  7835  000948  EFA8  F004         	goto	u2311
  7836  00094C  EFAA  F004         	goto	u2310
  7837  000950                     u2311:
  7838  000950  EFAD  F004         	goto	l3432
  7839  000954                     u2310:
  7840  000954                     l3430:
  7841                           
  7842                           ; BSR set to: 0
  7843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  7844  000954  0632               	decf	dtoa@w^0,f,c
  7845  000956  A0D8               	btfss	status,0,c
  7846  000958  0633               	decf	(dtoa@w+1)^0,f,c
  7847  00095A                     l3432:
  7848                           
  7849                           ; BSR set to: 0
  7850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  7851  00095A  0E00               	movlw	0
  7852  00095C  6E3F               	movwf	(dtoa@i+1)^0,c
  7853  00095E  0E1F               	movlw	31
  7854  000960  6E3E               	movwf	dtoa@i^0,c
  7855  000962                     
  7856                           ; BSR set to: 0
  7857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  7858  000962  0E00               	movlw	0
  7859  000964  6FAC               	movwf	(_dbuf+31)& (0+255),b
  7860                           
  7861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7862  000966  EF31  F005         	goto	l3446
  7863  00096A                     l3436:
  7864                           
  7865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  7866  00096A  063E               	decf	dtoa@i^0,f,c
  7867  00096C  A0D8               	btfss	status,0,c
  7868  00096E  063F               	decf	(dtoa@i+1)^0,f,c
  7869  000970                     
  7870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  7871  000970  0E8D               	movlw	low _dbuf
  7872  000972  243E               	addwf	dtoa@i^0,w,c
  7873  000974  6ED9               	movwf	fsr2l,c
  7874  000976  0E00               	movlw	high _dbuf
  7875  000978  203F               	addwfc	(dtoa@i+1)^0,w,c
  7876  00097A  6EDA               	movwf	fsr2h,c
  7877  00097C  C036  F001         	movff	dtoa@n,___aomod@dividend
  7878  000980  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7879  000984  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7880  000988  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7881  00098C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7882  000990  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7883  000994  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7884  000998  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7885  00099C  0E0A               	movlw	10
  7886  00099E  6E09               	movwf	___aomod@divisor^0,c
  7887  0009A0  0E00               	movlw	0
  7888  0009A2  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7889  0009A4  0E00               	movlw	0
  7890  0009A6  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7891  0009A8  0E00               	movlw	0
  7892  0009AA  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7893  0009AC  0E00               	movlw	0
  7894  0009AE  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7895  0009B0  0E00               	movlw	0
  7896  0009B2  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7897  0009B4  0E00               	movlw	0
  7898  0009B6  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7899  0009B8  0E00               	movlw	0
  7900  0009BA  6E10               	movwf	(___aomod@divisor+7)^0,c
  7901  0009BC  ECAF  F00B         	call	___aomod	;wreg free
  7902  0009C0  C001  F026         	movff	?___aomod,??_dtoa
  7903  0009C4  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7904  0009C8  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7905  0009CC  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7906  0009D0  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7907  0009D4  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7908  0009D8  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7909  0009DC  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7910  0009E0  C026  F013         	movff	??_dtoa,abs@a
  7911  0009E4  C028  F014         	movff	??_dtoa+2,abs@a+1
  7912  0009E8  ECEC  F016         	call	_abs	;wreg free
  7913  0009EC  5013               	movf	?_abs^0,w,c
  7914  0009EE  0F30               	addlw	48
  7915  0009F0  6EDF               	movwf	indf2,c
  7916  0009F2                     
  7917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  7918  0009F2  0630               	decf	dtoa@p^0,f,c
  7919  0009F4  A0D8               	btfss	status,0,c
  7920  0009F6  0631               	decf	(dtoa@p+1)^0,f,c
  7921  0009F8                     
  7922                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  7923  0009F8  0632               	decf	dtoa@w^0,f,c
  7924  0009FA  A0D8               	btfss	status,0,c
  7925  0009FC  0633               	decf	(dtoa@w+1)^0,f,c
  7926  0009FE                     
  7927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  7928  0009FE  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7929  000A02  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7930  000A06  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7931  000A0A  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7932  000A0E  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7933  000A12  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7934  000A16  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7935  000A1A  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7936  000A1E  0E0A               	movlw	10
  7937  000A20  6E09               	movwf	___aodiv@divisor^0,c
  7938  000A22  0E00               	movlw	0
  7939  000A24  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7940  000A26  0E00               	movlw	0
  7941  000A28  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7942  000A2A  0E00               	movlw	0
  7943  000A2C  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7944  000A2E  0E00               	movlw	0
  7945  000A30  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7946  000A32  0E00               	movlw	0
  7947  000A34  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7948  000A36  0E00               	movlw	0
  7949  000A38  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7950  000A3A  0E00               	movlw	0
  7951  000A3C  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7952  000A3E  ECBC  F008         	call	___aodiv	;wreg free
  7953  000A42  C001  F036         	movff	?___aodiv,dtoa@n
  7954  000A46  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7955  000A4A  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7956  000A4E  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7957  000A52  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7958  000A56  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7959  000A5A  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7960  000A5E  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7961  000A62                     l3446:
  7962                           
  7963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7964  000A62  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7965  000A64  EF3C  F005         	goto	u2321
  7966  000A68  503F               	movf	(dtoa@i+1)^0,w,c
  7967  000A6A  E108               	bnz	u2320
  7968  000A6C  043E               	decf	dtoa@i^0,w,c
  7969  000A6E  A0D8               	btfss	status,0,c
  7970  000A70  EF3C  F005         	goto	u2321
  7971  000A74  EF3E  F005         	goto	u2320
  7972  000A78                     u2321:
  7973  000A78  EF6F  F005         	goto	l3456
  7974  000A7C                     u2320:
  7975  000A7C  5036               	movf	dtoa@n^0,w,c
  7976  000A7E  1037               	iorwf	(dtoa@n+1)^0,w,c
  7977  000A80  1038               	iorwf	(dtoa@n+2)^0,w,c
  7978  000A82  1039               	iorwf	(dtoa@n+3)^0,w,c
  7979  000A84  103A               	iorwf	(dtoa@n+4)^0,w,c
  7980  000A86  103B               	iorwf	(dtoa@n+5)^0,w,c
  7981  000A88  103C               	iorwf	(dtoa@n+6)^0,w,c
  7982  000A8A  103D               	iorwf	(dtoa@n+7)^0,w,c
  7983  000A8C  A4D8               	btfss	status,2,c
  7984  000A8E  EF4B  F005         	goto	u2331
  7985  000A92  EF4D  F005         	goto	u2330
  7986  000A96                     u2331:
  7987  000A96  EFB5  F004         	goto	l3436
  7988  000A9A                     u2330:
  7989  000A9A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7990  000A9C  EF5A  F005         	goto	u2340
  7991  000AA0  5031               	movf	(dtoa@p+1)^0,w,c
  7992  000AA2  E106               	bnz	u2341
  7993  000AA4  0430               	decf	dtoa@p^0,w,c
  7994  000AA6  B0D8               	btfsc	status,0,c
  7995  000AA8  EF58  F005         	goto	u2341
  7996  000AAC  EF5A  F005         	goto	u2340
  7997  000AB0                     u2341:
  7998  000AB0  EFB5  F004         	goto	l3436
  7999  000AB4                     u2340:
  8000  000AB4  BE33               	btfsc	(dtoa@w+1)^0,7,c
  8001  000AB6  EF65  F005         	goto	u2351
  8002  000ABA  5033               	movf	(dtoa@w+1)^0,w,c
  8003  000ABC  E108               	bnz	u2350
  8004  000ABE  0432               	decf	dtoa@w^0,w,c
  8005  000AC0  A0D8               	btfss	status,0,c
  8006  000AC2  EF65  F005         	goto	u2351
  8007  000AC6  EF67  F005         	goto	u2350
  8008  000ACA                     u2351:
  8009  000ACA  EF6F  F005         	goto	l3456
  8010  000ACE                     u2350:
  8011  000ACE  0100               	movlb	0	; () banked
  8012  000AD0  B376               	btfsc	_flags& (0+255),1,b
  8013  000AD2  EF6D  F005         	goto	u2361
  8014  000AD6  EF6F  F005         	goto	u2360
  8015  000ADA                     u2361:
  8016  000ADA  EFB5  F004         	goto	l3436
  8017  000ADE                     u2360:
  8018  000ADE                     l3456:
  8019                           
  8020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  8021  000ADE  5034               	movf	dtoa@s^0,w,c
  8022  000AE0  1035               	iorwf	(dtoa@s+1)^0,w,c
  8023  000AE2  A4D8               	btfss	status,2,c
  8024  000AE4  EF76  F005         	goto	u2371
  8025  000AE8  EF78  F005         	goto	u2370
  8026  000AEC                     u2371:
  8027  000AEC  EF80  F005         	goto	l3460
  8028  000AF0                     u2370:
  8029  000AF0  0100               	movlb	0	; () banked
  8030  000AF2  A576               	btfss	_flags& (0+255),2,b
  8031  000AF4  EF7E  F005         	goto	u2381
  8032  000AF8  EF80  F005         	goto	u2380
  8033  000AFC                     u2381:
  8034  000AFC  EF9E  F005         	goto	l3470
  8035  000B00                     u2380:
  8036  000B00                     l3460:
  8037                           
  8038                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  8039  000B00  063E               	decf	dtoa@i^0,f,c
  8040  000B02  A0D8               	btfss	status,0,c
  8041  000B04  063F               	decf	(dtoa@i+1)^0,f,c
  8042  000B06                     
  8043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  8044  000B06  5034               	movf	dtoa@s^0,w,c
  8045  000B08  1035               	iorwf	(dtoa@s+1)^0,w,c
  8046  000B0A  A4D8               	btfss	status,2,c
  8047  000B0C  EF8A  F005         	goto	u2391
  8048  000B10  EF8C  F005         	goto	u2390
  8049  000B14                     u2391:
  8050  000B14  EF92  F005         	goto	l3466
  8051  000B18                     u2390:
  8052  000B18  0E00               	movlw	0
  8053  000B1A  6E2F               	movwf	(_dtoa$1057+1)^0,c
  8054  000B1C  0E2B               	movlw	43
  8055  000B1E  6E2E               	movwf	_dtoa$1057^0,c
  8056  000B20  EF96  F005         	goto	l3468
  8057  000B24                     l3466:
  8058  000B24  0E00               	movlw	0
  8059  000B26  6E2F               	movwf	(_dtoa$1057+1)^0,c
  8060  000B28  0E2D               	movlw	45
  8061  000B2A  6E2E               	movwf	_dtoa$1057^0,c
  8062  000B2C                     l3468:
  8063  000B2C  0E8D               	movlw	low _dbuf
  8064  000B2E  243E               	addwf	dtoa@i^0,w,c
  8065  000B30  6ED9               	movwf	fsr2l,c
  8066  000B32  0E00               	movlw	high _dbuf
  8067  000B34  203F               	addwfc	(dtoa@i+1)^0,w,c
  8068  000B36  6EDA               	movwf	fsr2h,c
  8069  000B38  C02E  FFDF         	movff	_dtoa$1057,indf2
  8070  000B3C                     l3470:
  8071                           
  8072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  8073  000B3C  C01C  F011         	movff	dtoa@fp,pad@fp
  8074  000B40  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  8075  000B44  0E8D               	movlw	low _dbuf
  8076  000B46  243E               	addwf	dtoa@i^0,w,c
  8077  000B48  6E13               	movwf	pad@buf^0,c
  8078  000B4A  0E00               	movlw	high _dbuf
  8079  000B4C  203F               	addwfc	(dtoa@i+1)^0,w,c
  8080  000B4E  6E14               	movwf	(pad@buf+1)^0,c
  8081  000B50  C032  F015         	movff	dtoa@w,pad@p
  8082  000B54  C033  F016         	movff	dtoa@w+1,pad@p+1
  8083  000B58  ECB1  F010         	call	_pad	;wreg free
  8084  000B5C  C011  F01C         	movff	?_pad,?_dtoa
  8085  000B60  C012  F01D         	movff	?_pad+1,?_dtoa+1
  8086  000B64  0012               	return		;funcret
  8087  000B66                     __end_of_dtoa:
  8088                           	opt callstack 0
  8089                           
  8090 ;; *************** function _abs *****************
  8091 ;; Defined at:
  8092 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  8093 ;; Parameters:    Size  Location     Type
  8094 ;;  a               2   18[COMRAM] int 
  8095 ;; Auto vars:     Size  Location     Type
  8096 ;;		None
  8097 ;; Return value:  Size  Location     Type
  8098 ;;                  2   18[COMRAM] int 
  8099 ;; Registers used:
  8100 ;;		wreg, status,2, status,0
  8101 ;; Tracked objects:
  8102 ;;		On entry : 0/0
  8103 ;;		On exit  : 0/0
  8104 ;;		Unchanged: 0/0
  8105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8106 ;;      Params:         2       0       0       0       0       0       0       0       0
  8107 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8108 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8109 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8110 ;;Total ram usage:        4 bytes
  8111 ;; Hardware stack levels used:    1
  8112 ;; Hardware stack levels required when called:    1
  8113 ;; This function calls:
  8114 ;;		Nothing
  8115 ;; This function is called by:
  8116 ;;		_dtoa
  8117 ;; This function uses a non-reentrant model
  8118 ;;
  8119                           
  8120                           	psect	text41
  8121  002DD8                     __ptext41:
  8122                           	opt callstack 0
  8123  002DD8                     _abs:
  8124                           	opt callstack 23
  8125  002DD8  BE14               	btfsc	(abs@a+1)^0,7,c
  8126  002DDA  EFF9  F016         	goto	u2040
  8127  002DDE  5014               	movf	(abs@a+1)^0,w,c
  8128  002DE0  E106               	bnz	u2041
  8129  002DE2  0413               	decf	abs@a^0,w,c
  8130  002DE4  B0D8               	btfsc	status,0,c
  8131  002DE6  EFF7  F016         	goto	u2041
  8132  002DEA  EFF9  F016         	goto	u2040
  8133  002DEE                     u2041:
  8134  002DEE  EF07  F017         	goto	l1314
  8135  002DF2                     u2040:
  8136  002DF2  C013  F015         	movff	abs@a,??_abs
  8137  002DF6  C014  F016         	movff	abs@a+1,??_abs+1
  8138  002DFA  1E15               	comf	??_abs^0,f,c
  8139  002DFC  1E16               	comf	(??_abs+1)^0,f,c
  8140  002DFE  4A15               	infsnz	??_abs^0,f,c
  8141  002E00  2A16               	incf	(??_abs+1)^0,f,c
  8142  002E02  C015  F013         	movff	??_abs,?_abs
  8143  002E06  C016  F014         	movff	??_abs+1,?_abs+1
  8144  002E0A  EF0B  F017         	goto	l1317
  8145  002E0E                     l1314:
  8146  002E0E  C013  F013         	movff	abs@a,?_abs
  8147  002E12  C014  F014         	movff	abs@a+1,?_abs+1
  8148  002E16                     l1317:
  8149  002E16  0012               	return		;funcret
  8150  002E18                     __end_of_abs:
  8151                           	opt callstack 0
  8152                           
  8153 ;; *************** function ___aomod *****************
  8154 ;; Defined at:
  8155 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  8156 ;; Parameters:    Size  Location     Type
  8157 ;;  dividend        8    0[COMRAM] long long 
  8158 ;;  divisor         8    8[COMRAM] long long 
  8159 ;; Auto vars:     Size  Location     Type
  8160 ;;  sign            1   17[COMRAM] unsigned char 
  8161 ;;  counter         1   16[COMRAM] unsigned char 
  8162 ;; Return value:  Size  Location     Type
  8163 ;;                  8    0[COMRAM] long long 
  8164 ;; Registers used:
  8165 ;;		wreg, status,2, status,0
  8166 ;; Tracked objects:
  8167 ;;		On entry : 0/0
  8168 ;;		On exit  : 0/0
  8169 ;;		Unchanged: 0/0
  8170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8171 ;;      Params:        16       0       0       0       0       0       0       0       0
  8172 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8173 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8174 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8175 ;;Total ram usage:       18 bytes
  8176 ;; Hardware stack levels used:    1
  8177 ;; Hardware stack levels required when called:    1
  8178 ;; This function calls:
  8179 ;;		Nothing
  8180 ;; This function is called by:
  8181 ;;		_dtoa
  8182 ;; This function uses a non-reentrant model
  8183 ;;
  8184                           
  8185                           	psect	text42
  8186  00175E                     __ptext42:
  8187                           	opt callstack 0
  8188  00175E                     ___aomod:
  8189                           	opt callstack 23
  8190  00175E  0E00               	movlw	0
  8191  001760  6E12               	movwf	___aomod@sign^0,c
  8192  001762  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8193  001764  EFB8  F00B         	goto	u2140
  8194  001768  EFB6  F00B         	goto	u2141
  8195  00176C                     u2141:
  8196  00176C  EFCA  F00B         	goto	l3352
  8197  001770                     u2140:
  8198  001770  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8199  001772  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8200  001774  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8201  001776  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8202  001778  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8203  00177A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8204  00177C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8205  00177E  6C01               	negf	___aomod@dividend^0,c
  8206  001780  0E00               	movlw	0
  8207  001782  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8208  001784  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8209  001786  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8210  001788  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8211  00178A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8212  00178C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8213  00178E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8214  001790  0E01               	movlw	1
  8215  001792  6E12               	movwf	___aomod@sign^0,c
  8216  001794                     l3352:
  8217  001794  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8218  001796  EFD1  F00B         	goto	u2150
  8219  00179A  EFCF  F00B         	goto	u2151
  8220  00179E                     u2151:
  8221  00179E  EFE1  F00B         	goto	l3356
  8222  0017A2                     u2150:
  8223  0017A2  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8224  0017A4  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8225  0017A6  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8226  0017A8  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8227  0017AA  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8228  0017AC  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8229  0017AE  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8230  0017B0  6C09               	negf	___aomod@divisor^0,c
  8231  0017B2  0E00               	movlw	0
  8232  0017B4  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8233  0017B6  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8234  0017B8  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8235  0017BA  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8236  0017BC  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8237  0017BE  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8238  0017C0  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8239  0017C2                     l3356:
  8240  0017C2  5009               	movf	___aomod@divisor^0,w,c
  8241  0017C4  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8242  0017C6  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8243  0017C8  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8244  0017CA  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8245  0017CC  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8246  0017CE  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8247  0017D0  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8248  0017D2  B4D8               	btfsc	status,2,c
  8249  0017D4  EFEE  F00B         	goto	u2161
  8250  0017D8  EFF0  F00B         	goto	u2160
  8251  0017DC                     u2161:
  8252  0017DC  EF38  F00C         	goto	l3372
  8253  0017E0                     u2160:
  8254  0017E0  0E01               	movlw	1
  8255  0017E2  6E11               	movwf	___aomod@counter^0,c
  8256  0017E4  EFFE  F00B         	goto	l3362
  8257  0017E8                     l3360:
  8258  0017E8  90D8               	bcf	status,0,c
  8259  0017EA  3609               	rlcf	___aomod@divisor^0,f,c
  8260  0017EC  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8261  0017EE  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8262  0017F0  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8263  0017F2  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8264  0017F4  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8265  0017F6  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8266  0017F8  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8267  0017FA  2A11               	incf	___aomod@counter^0,f,c
  8268  0017FC                     l3362:
  8269  0017FC  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8270  0017FE  EF03  F00C         	goto	u2171
  8271  001802  EF05  F00C         	goto	u2170
  8272  001806                     u2171:
  8273  001806  EFF4  F00B         	goto	l3360
  8274  00180A                     u2170:
  8275  00180A                     l3364:
  8276  00180A  5009               	movf	___aomod@divisor^0,w,c
  8277  00180C  5C01               	subwf	___aomod@dividend^0,w,c
  8278  00180E  500A               	movf	(___aomod@divisor+1)^0,w,c
  8279  001810  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8280  001812  500B               	movf	(___aomod@divisor+2)^0,w,c
  8281  001814  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8282  001816  500C               	movf	(___aomod@divisor+3)^0,w,c
  8283  001818  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8284  00181A  500D               	movf	(___aomod@divisor+4)^0,w,c
  8285  00181C  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8286  00181E  500E               	movf	(___aomod@divisor+5)^0,w,c
  8287  001820  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8288  001822  500F               	movf	(___aomod@divisor+6)^0,w,c
  8289  001824  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8290  001826  5010               	movf	(___aomod@divisor+7)^0,w,c
  8291  001828  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8292  00182A  A0D8               	btfss	status,0,c
  8293  00182C  EF1A  F00C         	goto	u2181
  8294  001830  EF1C  F00C         	goto	u2180
  8295  001834                     u2181:
  8296  001834  EF2C  F00C         	goto	l3368
  8297  001838                     u2180:
  8298  001838  5009               	movf	___aomod@divisor^0,w,c
  8299  00183A  5E01               	subwf	___aomod@dividend^0,f,c
  8300  00183C  500A               	movf	(___aomod@divisor+1)^0,w,c
  8301  00183E  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8302  001840  500B               	movf	(___aomod@divisor+2)^0,w,c
  8303  001842  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8304  001844  500C               	movf	(___aomod@divisor+3)^0,w,c
  8305  001846  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8306  001848  500D               	movf	(___aomod@divisor+4)^0,w,c
  8307  00184A  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8308  00184C  500E               	movf	(___aomod@divisor+5)^0,w,c
  8309  00184E  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8310  001850  500F               	movf	(___aomod@divisor+6)^0,w,c
  8311  001852  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8312  001854  5010               	movf	(___aomod@divisor+7)^0,w,c
  8313  001856  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8314  001858                     l3368:
  8315  001858  90D8               	bcf	status,0,c
  8316  00185A  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8317  00185C  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8318  00185E  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8319  001860  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8320  001862  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8321  001864  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8322  001866  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8323  001868  3209               	rrcf	___aomod@divisor^0,f,c
  8324  00186A  2E11               	decfsz	___aomod@counter^0,f,c
  8325  00186C  EF05  F00C         	goto	l3364
  8326  001870                     l3372:
  8327  001870  5012               	movf	___aomod@sign^0,w,c
  8328  001872  B4D8               	btfsc	status,2,c
  8329  001874  EF3E  F00C         	goto	u2191
  8330  001878  EF40  F00C         	goto	u2190
  8331  00187C                     u2191:
  8332  00187C  EF50  F00C         	goto	l3376
  8333  001880                     u2190:
  8334  001880  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8335  001882  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8336  001884  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8337  001886  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8338  001888  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8339  00188A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8340  00188C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8341  00188E  6C01               	negf	___aomod@dividend^0,c
  8342  001890  0E00               	movlw	0
  8343  001892  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8344  001894  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8345  001896  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8346  001898  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8347  00189A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8348  00189C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8349  00189E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8350  0018A0                     l3376:
  8351  0018A0  C001  F001         	movff	___aomod@dividend,?___aomod
  8352  0018A4  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8353  0018A8  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8354  0018AC  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8355  0018B0  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8356  0018B4  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8357  0018B8  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8358  0018BC  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8359  0018C0  0012               	return		;funcret
  8360  0018C2                     __end_of___aomod:
  8361                           	opt callstack 0
  8362                           
  8363 ;; *************** function ___aodiv *****************
  8364 ;; Defined at:
  8365 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  8366 ;; Parameters:    Size  Location     Type
  8367 ;;  dividend        8    0[COMRAM] long long 
  8368 ;;  divisor         8    8[COMRAM] long long 
  8369 ;; Auto vars:     Size  Location     Type
  8370 ;;  quotient        8   18[COMRAM] long long 
  8371 ;;  sign            1   17[COMRAM] unsigned char 
  8372 ;;  counter         1   16[COMRAM] unsigned char 
  8373 ;; Return value:  Size  Location     Type
  8374 ;;                  8    0[COMRAM] long long 
  8375 ;; Registers used:
  8376 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8377 ;; Tracked objects:
  8378 ;;		On entry : 0/0
  8379 ;;		On exit  : 0/0
  8380 ;;		Unchanged: 0/0
  8381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8382 ;;      Params:        16       0       0       0       0       0       0       0       0
  8383 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8384 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8385 ;;      Totals:        26       0       0       0       0       0       0       0       0
  8386 ;;Total ram usage:       26 bytes
  8387 ;; Hardware stack levels used:    1
  8388 ;; Hardware stack levels required when called:    1
  8389 ;; This function calls:
  8390 ;;		Nothing
  8391 ;; This function is called by:
  8392 ;;		_dtoa
  8393 ;; This function uses a non-reentrant model
  8394 ;;
  8395                           
  8396                           	psect	text43
  8397  001178                     __ptext43:
  8398                           	opt callstack 0
  8399  001178                     ___aodiv:
  8400                           	opt callstack 23
  8401  001178  0E00               	movlw	0
  8402  00117A  6E12               	movwf	___aodiv@sign^0,c
  8403  00117C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8404  00117E  EFC5  F008         	goto	u2070
  8405  001182  EFC3  F008         	goto	u2071
  8406  001186                     u2071:
  8407  001186  EFD7  F008         	goto	l3308
  8408  00118A                     u2070:
  8409  00118A  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8410  00118C  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8411  00118E  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8412  001190  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8413  001192  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8414  001194  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8415  001196  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8416  001198  6C09               	negf	___aodiv@divisor^0,c
  8417  00119A  0E00               	movlw	0
  8418  00119C  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8419  00119E  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8420  0011A0  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8421  0011A2  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8422  0011A4  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8423  0011A6  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8424  0011A8  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8425  0011AA  0E01               	movlw	1
  8426  0011AC  6E12               	movwf	___aodiv@sign^0,c
  8427  0011AE                     l3308:
  8428  0011AE  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8429  0011B0  EFDE  F008         	goto	u2080
  8430  0011B4  EFDC  F008         	goto	u2081
  8431  0011B8                     u2081:
  8432  0011B8  EFF0  F008         	goto	l3314
  8433  0011BC                     u2080:
  8434  0011BC  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8435  0011BE  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8436  0011C0  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8437  0011C2  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8438  0011C4  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8439  0011C6  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8440  0011C8  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8441  0011CA  6C01               	negf	___aodiv@dividend^0,c
  8442  0011CC  0E00               	movlw	0
  8443  0011CE  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8444  0011D0  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8445  0011D2  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8446  0011D4  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8447  0011D6  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8448  0011D8  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8449  0011DA  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8450  0011DC  0E01               	movlw	1
  8451  0011DE  1A12               	xorwf	___aodiv@sign^0,f,c
  8452  0011E0                     l3314:
  8453  0011E0  EE20  F013         	lfsr	2,___aodiv@quotient
  8454  0011E4  0E07               	movlw	7
  8455  0011E6                     u2091:
  8456  0011E6  6ADE               	clrf	postinc2,c
  8457  0011E8  06E8               	decf	wreg,f,c
  8458  0011EA  E2FD               	bc	u2091
  8459  0011EC  5009               	movf	___aodiv@divisor^0,w,c
  8460  0011EE  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8461  0011F0  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8462  0011F2  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8463  0011F4  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8464  0011F6  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8465  0011F8  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8466  0011FA  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8467  0011FC  B4D8               	btfsc	status,2,c
  8468  0011FE  EF03  F009         	goto	u2101
  8469  001202  EF05  F009         	goto	u2100
  8470  001206                     u2101:
  8471  001206  EF57  F009         	goto	l3336
  8472  00120A                     u2100:
  8473  00120A  0E01               	movlw	1
  8474  00120C  6E11               	movwf	___aodiv@counter^0,c
  8475  00120E  EF13  F009         	goto	l3322
  8476  001212                     l3320:
  8477  001212  90D8               	bcf	status,0,c
  8478  001214  3609               	rlcf	___aodiv@divisor^0,f,c
  8479  001216  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8480  001218  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8481  00121A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8482  00121C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8483  00121E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8484  001220  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8485  001222  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8486  001224  2A11               	incf	___aodiv@counter^0,f,c
  8487  001226                     l3322:
  8488  001226  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8489  001228  EF18  F009         	goto	u2111
  8490  00122C  EF1A  F009         	goto	u2110
  8491  001230                     u2111:
  8492  001230  EF09  F009         	goto	l3320
  8493  001234                     u2110:
  8494  001234                     l3324:
  8495  001234  90D8               	bcf	status,0,c
  8496  001236  3613               	rlcf	___aodiv@quotient^0,f,c
  8497  001238  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8498  00123A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8499  00123C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8500  00123E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8501  001240  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8502  001242  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8503  001244  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8504  001246  5009               	movf	___aodiv@divisor^0,w,c
  8505  001248  5C01               	subwf	___aodiv@dividend^0,w,c
  8506  00124A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8507  00124C  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8508  00124E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8509  001250  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8510  001252  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8511  001254  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8512  001256  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8513  001258  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8514  00125A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8515  00125C  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8516  00125E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8517  001260  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8518  001262  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8519  001264  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8520  001266  A0D8               	btfss	status,0,c
  8521  001268  EF38  F009         	goto	u2121
  8522  00126C  EF3A  F009         	goto	u2120
  8523  001270                     u2121:
  8524  001270  EF4B  F009         	goto	l3332
  8525  001274                     u2120:
  8526  001274  5009               	movf	___aodiv@divisor^0,w,c
  8527  001276  5E01               	subwf	___aodiv@dividend^0,f,c
  8528  001278  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8529  00127A  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8530  00127C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8531  00127E  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8532  001280  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8533  001282  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8534  001284  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8535  001286  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8536  001288  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8537  00128A  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8538  00128C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8539  00128E  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8540  001290  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8541  001292  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8542  001294  8013               	bsf	___aodiv@quotient^0,0,c
  8543  001296                     l3332:
  8544  001296  90D8               	bcf	status,0,c
  8545  001298  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8546  00129A  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8547  00129C  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8548  00129E  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8549  0012A0  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8550  0012A2  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8551  0012A4  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8552  0012A6  3209               	rrcf	___aodiv@divisor^0,f,c
  8553  0012A8  2E11               	decfsz	___aodiv@counter^0,f,c
  8554  0012AA  EF1A  F009         	goto	l3324
  8555  0012AE                     l3336:
  8556  0012AE  5012               	movf	___aodiv@sign^0,w,c
  8557  0012B0  B4D8               	btfsc	status,2,c
  8558  0012B2  EF5D  F009         	goto	u2131
  8559  0012B6  EF5F  F009         	goto	u2130
  8560  0012BA                     u2131:
  8561  0012BA  EF6F  F009         	goto	l3340
  8562  0012BE                     u2130:
  8563  0012BE  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8564  0012C0  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8565  0012C2  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8566  0012C4  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8567  0012C6  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8568  0012C8  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8569  0012CA  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8570  0012CC  6C13               	negf	___aodiv@quotient^0,c
  8571  0012CE  0E00               	movlw	0
  8572  0012D0  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8573  0012D2  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8574  0012D4  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8575  0012D6  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8576  0012D8  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8577  0012DA  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8578  0012DC  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8579  0012DE                     l3340:
  8580  0012DE  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8581  0012E2  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8582  0012E6  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8583  0012EA  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8584  0012EE  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8585  0012F2  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8586  0012F6  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8587  0012FA  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8588  0012FE  0012               	return		;funcret
  8589  001300                     __end_of___aodiv:
  8590                           	opt callstack 0
  8591                           
  8592 ;; *************** function _ctoa *****************
  8593 ;; Defined at:
  8594 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8595 ;; Parameters:    Size  Location     Type
  8596 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8597 ;;		 -> sprintf@f(6), 
  8598 ;;  c               1   29[COMRAM] unsigned char 
  8599 ;; Auto vars:     Size  Location     Type
  8600 ;;  w               2   30[COMRAM] int 
  8601 ;;  l               2    0        int 
  8602 ;; Return value:  Size  Location     Type
  8603 ;;                  2   27[COMRAM] int 
  8604 ;; Registers used:
  8605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8606 ;; Tracked objects:
  8607 ;;		On entry : 0/0
  8608 ;;		On exit  : 0/0
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8611 ;;      Params:         3       0       0       0       0       0       0       0       0
  8612 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8613 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8614 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8615 ;;Total ram usage:        5 bytes
  8616 ;; Hardware stack levels used:    1
  8617 ;; Hardware stack levels required when called:    5
  8618 ;; This function calls:
  8619 ;;		_pad
  8620 ;; This function is called by:
  8621 ;;		_vfpfcnvrt
  8622 ;; This function uses a non-reentrant model
  8623 ;;
  8624                           
  8625                           	psect	text44
  8626  002B6E                     __ptext44:
  8627                           	opt callstack 0
  8628  002B6E                     _ctoa:
  8629                           	opt callstack 20
  8630  002B6E                     
  8631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  8632  002B6E  0100               	movlb	0	; () banked
  8633  002B70  5172               	movf	_width& (0+255),w,b
  8634  002B72  1173               	iorwf	(_width+1)& (0+255),w,b
  8635  002B74  A4D8               	btfss	status,2,c
  8636  002B76  EFBF  F015         	goto	u2241
  8637  002B7A  EFC1  F015         	goto	u2240
  8638  002B7E                     u2241:
  8639  002B7E  EFC7  F015         	goto	l3402
  8640  002B82                     u2240:
  8641  002B82                     
  8642                           ; BSR set to: 0
  8643  002B82  C072  F01F         	movff	_width,ctoa@w
  8644  002B86  C073  F020         	movff	_width+1,ctoa@w+1
  8645  002B8A  EFCD  F015         	goto	l3404
  8646  002B8E                     l3402:
  8647                           
  8648                           ; BSR set to: 0
  8649  002B8E  0EFF               	movlw	255
  8650  002B90  2572               	addwf	_width& (0+255),w,b
  8651  002B92  6E1F               	movwf	ctoa@w^0,c
  8652  002B94  0EFF               	movlw	255
  8653  002B96  2173               	addwfc	(_width+1)& (0+255),w,b
  8654  002B98  6E20               	movwf	(ctoa@w+1)^0,c
  8655  002B9A                     l3404:
  8656                           
  8657                           ; BSR set to: 0
  8658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  8659  002B9A  C01E  F08D         	movff	ctoa@c,_dbuf
  8660  002B9E                     
  8661                           ; BSR set to: 0
  8662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  8663  002B9E  0E00               	movlw	0
  8664  002BA0  6F8E               	movwf	(_dbuf+1)& (0+255),b
  8665  002BA2                     
  8666                           ; BSR set to: 0
  8667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  8668  002BA2  C01C  F011         	movff	ctoa@fp,pad@fp
  8669  002BA6  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  8670  002BAA  0E8D               	movlw	low _dbuf
  8671  002BAC  6E13               	movwf	pad@buf^0,c
  8672  002BAE  0E00               	movlw	high _dbuf
  8673  002BB0  6E14               	movwf	(pad@buf+1)^0,c
  8674  002BB2  C01F  F015         	movff	ctoa@w,pad@p
  8675  002BB6  C020  F016         	movff	ctoa@w+1,pad@p+1
  8676  002BBA  ECB1  F010         	call	_pad	;wreg free
  8677  002BBE  C011  F01C         	movff	?_pad,?_ctoa
  8678  002BC2  C012  F01D         	movff	?_pad+1,?_ctoa+1
  8679  002BC6  0012               	return		;funcret
  8680  002BC8                     __end_of_ctoa:
  8681                           	opt callstack 0
  8682                           
  8683 ;; *************** function _pad *****************
  8684 ;; Defined at:
  8685 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  8688 ;;		 -> sprintf@f(6), 
  8689 ;;  buf             2   18[COMRAM] PTR unsigned char 
  8690 ;;		 -> dbuf(32), 
  8691 ;;  p               2   20[COMRAM] int 
  8692 ;; Auto vars:     Size  Location     Type
  8693 ;;  w               2   25[COMRAM] int 
  8694 ;;  i               2   23[COMRAM] int 
  8695 ;; Return value:  Size  Location     Type
  8696 ;;                  2   16[COMRAM] int 
  8697 ;; Registers used:
  8698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8699 ;; Tracked objects:
  8700 ;;		On entry : 0/0
  8701 ;;		On exit  : 0/0
  8702 ;;		Unchanged: 0/0
  8703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8704 ;;      Params:         6       0       0       0       0       0       0       0       0
  8705 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8706 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8707 ;;      Totals:        11       0       0       0       0       0       0       0       0
  8708 ;;Total ram usage:       11 bytes
  8709 ;; Hardware stack levels used:    1
  8710 ;; Hardware stack levels required when called:    4
  8711 ;; This function calls:
  8712 ;;		_fputc
  8713 ;;		_fputs
  8714 ;;		_strlen
  8715 ;; This function is called by:
  8716 ;;		_ctoa
  8717 ;;		_dtoa
  8718 ;; This function uses a non-reentrant model
  8719 ;;
  8720                           
  8721                           	psect	text45
  8722  002162                     __ptext45:
  8723                           	opt callstack 0
  8724  002162                     _pad:
  8725                           	opt callstack 20
  8726  002162                     
  8727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  8728  002162  0100               	movlb	0	; () banked
  8729  002164  A176               	btfss	_flags& (0+255),0,b
  8730  002166  EFB7  F010         	goto	u2001
  8731  00216A  EFB9  F010         	goto	u2000
  8732  00216E                     u2001:
  8733  00216E  EFC3  F010         	goto	l3268
  8734  002172                     u2000:
  8735  002172                     
  8736                           ; BSR set to: 0
  8737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  8738  002172  C013  F00A         	movff	pad@buf,fputs@s
  8739  002176  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8740  00217A  C011  F00C         	movff	pad@fp,fputs@fp
  8741  00217E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8742  002182  ECAA  F016         	call	_fputs	;wreg free
  8743  002186                     l3268:
  8744                           
  8745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  8746  002186  BE16               	btfsc	(pad@p+1)^0,7,c
  8747  002188  EFC8  F010         	goto	u2011
  8748  00218C  EFCA  F010         	goto	u2010
  8749  002190                     u2011:
  8750  002190  EFD0  F010         	goto	l3272
  8751  002194                     u2010:
  8752  002194  C015  F01A         	movff	pad@p,pad@w
  8753  002198  C016  F01B         	movff	pad@p+1,pad@w+1
  8754  00219C  EFD4  F010         	goto	l527
  8755  0021A0                     l3272:
  8756  0021A0  0E00               	movlw	0
  8757  0021A2  6E1B               	movwf	(pad@w+1)^0,c
  8758  0021A4  0E00               	movlw	0
  8759  0021A6  6E1A               	movwf	pad@w^0,c
  8760  0021A8                     l527:
  8761                           
  8762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  8763  0021A8  0E00               	movlw	0
  8764  0021AA  6E19               	movwf	(pad@i+1)^0,c
  8765  0021AC  0E00               	movlw	0
  8766  0021AE  6E18               	movwf	pad@i^0,c
  8767                           
  8768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8769  0021B0  EFE6  F010         	goto	l3278
  8770  0021B4                     l3274:
  8771                           
  8772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  8773  0021B4  0E00               	movlw	0
  8774  0021B6  6E02               	movwf	(fputc@c+1)^0,c
  8775  0021B8  0E20               	movlw	32
  8776  0021BA  6E01               	movwf	fputc@c^0,c
  8777  0021BC  C011  F003         	movff	pad@fp,fputc@fp
  8778  0021C0  C012  F004         	movff	pad@fp+1,fputc@fp+1
  8779  0021C4  EC4C  F010         	call	_fputc	;wreg free
  8780  0021C8                     
  8781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  8782  0021C8  4A18               	infsnz	pad@i^0,f,c
  8783  0021CA  2A19               	incf	(pad@i+1)^0,f,c
  8784  0021CC                     l3278:
  8785                           
  8786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8787  0021CC  501A               	movf	pad@w^0,w,c
  8788  0021CE  5C18               	subwf	pad@i^0,w,c
  8789  0021D0  5019               	movf	(pad@i+1)^0,w,c
  8790  0021D2  0A80               	xorlw	128
  8791  0021D4  6E17               	movwf	??_pad^0,c
  8792  0021D6  501B               	movf	(pad@w+1)^0,w,c
  8793  0021D8  0A80               	xorlw	128
  8794  0021DA  5817               	subwfb	??_pad^0,w,c
  8795  0021DC  A0D8               	btfss	status,0,c
  8796  0021DE  EFF3  F010         	goto	u2021
  8797  0021E2  EFF5  F010         	goto	u2020
  8798  0021E6                     u2021:
  8799  0021E6  EFDA  F010         	goto	l3274
  8800  0021EA                     u2020:
  8801  0021EA                     
  8802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  8803  0021EA  0100               	movlb	0	; () banked
  8804  0021EC  B176               	btfsc	_flags& (0+255),0,b
  8805  0021EE  EFFB  F010         	goto	u2031
  8806  0021F2  EFFD  F010         	goto	u2030
  8807  0021F6                     u2031:
  8808  0021F6  EF07  F011         	goto	l3282
  8809  0021FA                     u2030:
  8810  0021FA                     
  8811                           ; BSR set to: 0
  8812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  8813  0021FA  C013  F00A         	movff	pad@buf,fputs@s
  8814  0021FE  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8815  002202  C011  F00C         	movff	pad@fp,fputs@fp
  8816  002206  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8817  00220A  ECAA  F016         	call	_fputs	;wreg free
  8818  00220E                     l3282:
  8819                           
  8820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  8821  00220E  C013  F001         	movff	pad@buf,strlen@s
  8822  002212  C014  F002         	movff	pad@buf+1,strlen@s+1
  8823  002216  ECA0  F017         	call	_strlen	;wreg free
  8824  00221A  501A               	movf	pad@w^0,w,c
  8825  00221C  2401               	addwf	?_strlen^0,w,c
  8826  00221E  6E11               	movwf	?_pad^0,c
  8827  002220  501B               	movf	(pad@w+1)^0,w,c
  8828  002222  2002               	addwfc	(?_strlen+1)^0,w,c
  8829  002224  6E12               	movwf	(?_pad+1)^0,c
  8830  002226  0012               	return		;funcret
  8831  002228                     __end_of_pad:
  8832                           	opt callstack 0
  8833                           
  8834 ;; *************** function _strlen *****************
  8835 ;; Defined at:
  8836 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  8837 ;; Parameters:    Size  Location     Type
  8838 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8839 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), horarios(288), 
  8840 ;; Auto vars:     Size  Location     Type
  8841 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8842 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), horarios(288), 
  8843 ;; Return value:  Size  Location     Type
  8844 ;;                  2    0[COMRAM] unsigned int 
  8845 ;; Registers used:
  8846 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8847 ;; Tracked objects:
  8848 ;;		On entry : 0/0
  8849 ;;		On exit  : 0/0
  8850 ;;		Unchanged: 0/0
  8851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8852 ;;      Params:         2       0       0       0       0       0       0       0       0
  8853 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8854 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8855 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8856 ;;Total ram usage:        4 bytes
  8857 ;; Hardware stack levels used:    1
  8858 ;; Hardware stack levels required when called:    1
  8859 ;; This function calls:
  8860 ;;		Nothing
  8861 ;; This function is called by:
  8862 ;;		_pad
  8863 ;;		_stoa
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867                           	psect	text46
  8868  002F40                     __ptext46:
  8869                           	opt callstack 0
  8870  002F40                     _strlen:
  8871                           	opt callstack 23
  8872  002F40  C001  F003         	movff	strlen@s,strlen@a
  8873  002F44  C002  F004         	movff	strlen@s+1,strlen@a+1
  8874  002F48  EFA8  F017         	goto	l3258
  8875  002F4C                     l3256:
  8876  002F4C  4A01               	infsnz	strlen@s^0,f,c
  8877  002F4E  2A02               	incf	(strlen@s+1)^0,f,c
  8878  002F50                     l3258:
  8879  002F50  C001  FFD9         	movff	strlen@s,fsr2l
  8880  002F54  C002  FFDA         	movff	strlen@s+1,fsr2h
  8881  002F58  50DF               	movf	indf2,w,c
  8882  002F5A  A4D8               	btfss	status,2,c
  8883  002F5C  EFB2  F017         	goto	u1991
  8884  002F60  EFB4  F017         	goto	u1990
  8885  002F64                     u1991:
  8886  002F64  EFA6  F017         	goto	l3256
  8887  002F68                     u1990:
  8888  002F68  5003               	movf	strlen@a^0,w,c
  8889  002F6A  5C01               	subwf	strlen@s^0,w,c
  8890  002F6C  6E01               	movwf	?_strlen^0,c
  8891  002F6E  5004               	movf	(strlen@a+1)^0,w,c
  8892  002F70  5802               	subwfb	(strlen@s+1)^0,w,c
  8893  002F72  6E02               	movwf	(?_strlen+1)^0,c
  8894  002F74  0012               	return		;funcret
  8895  002F76                     __end_of_strlen:
  8896                           	opt callstack 0
  8897                           
  8898 ;; *************** function _fputs *****************
  8899 ;; Defined at:
  8900 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  8901 ;; Parameters:    Size  Location     Type
  8902 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8903 ;;		 -> dbuf(32), 
  8904 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8905 ;;		 -> sprintf@f(6), 
  8906 ;; Auto vars:     Size  Location     Type
  8907 ;;  i               2   14[COMRAM] int 
  8908 ;;  c               1   13[COMRAM] unsigned char 
  8909 ;; Return value:  Size  Location     Type
  8910 ;;                  2    9[COMRAM] int 
  8911 ;; Registers used:
  8912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8913 ;; Tracked objects:
  8914 ;;		On entry : 0/0
  8915 ;;		On exit  : 0/0
  8916 ;;		Unchanged: 0/0
  8917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8918 ;;      Params:         4       0       0       0       0       0       0       0       0
  8919 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8920 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8921 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8922 ;;Total ram usage:        7 bytes
  8923 ;; Hardware stack levels used:    1
  8924 ;; Hardware stack levels required when called:    3
  8925 ;; This function calls:
  8926 ;;		_fputc
  8927 ;; This function is called by:
  8928 ;;		_pad
  8929 ;; This function uses a non-reentrant model
  8930 ;;
  8931                           
  8932                           	psect	text47
  8933  002D54                     __ptext47:
  8934                           	opt callstack 0
  8935  002D54                     _fputs:
  8936                           	opt callstack 20
  8937  002D54  0E00               	movlw	0
  8938  002D56  6E10               	movwf	(fputs@i+1)^0,c
  8939  002D58  0E00               	movlw	0
  8940  002D5A  6E0F               	movwf	fputs@i^0,c
  8941  002D5C  EFBB  F016         	goto	l3252
  8942  002D60                     l3248:
  8943  002D60  C00E  F001         	movff	fputs@c,fputc@c
  8944  002D64  6A02               	clrf	(fputc@c+1)^0,c
  8945  002D66  C00C  F003         	movff	fputs@fp,fputc@fp
  8946  002D6A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8947  002D6E  EC4C  F010         	call	_fputc	;wreg free
  8948  002D72  4A0F               	infsnz	fputs@i^0,f,c
  8949  002D74  2A10               	incf	(fputs@i+1)^0,f,c
  8950  002D76                     l3252:
  8951  002D76  500F               	movf	fputs@i^0,w,c
  8952  002D78  240A               	addwf	fputs@s^0,w,c
  8953  002D7A  6ED9               	movwf	fsr2l,c
  8954  002D7C  5010               	movf	(fputs@i+1)^0,w,c
  8955  002D7E  200B               	addwfc	(fputs@s+1)^0,w,c
  8956  002D80  6EDA               	movwf	fsr2h,c
  8957  002D82  50DF               	movf	indf2,w,c
  8958  002D84  6E0E               	movwf	fputs@c^0,c
  8959  002D86  500E               	movf	fputs@c^0,w,c
  8960  002D88  A4D8               	btfss	status,2,c
  8961  002D8A  EFC9  F016         	goto	u1981
  8962  002D8E  EFCB  F016         	goto	u1980
  8963  002D92                     u1981:
  8964  002D92  EFB0  F016         	goto	l3248
  8965  002D96                     u1980:
  8966  002D96  0012               	return		;funcret
  8967  002D98                     __end_of_fputs:
  8968                           	opt callstack 0
  8969                           
  8970 ;; *************** function _fputc *****************
  8971 ;; Defined at:
  8972 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  8973 ;; Parameters:    Size  Location     Type
  8974 ;;  c               2    0[COMRAM] int 
  8975 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8976 ;;		 -> sprintf@f(6), 
  8977 ;; Auto vars:     Size  Location     Type
  8978 ;;		None
  8979 ;; Return value:  Size  Location     Type
  8980 ;;                  2    0[COMRAM] int 
  8981 ;; Registers used:
  8982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8983 ;; Tracked objects:
  8984 ;;		On entry : 0/0
  8985 ;;		On exit  : 0/0
  8986 ;;		Unchanged: 0/0
  8987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8988 ;;      Params:         4       0       0       0       0       0       0       0       0
  8989 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8990 ;;      Temps:          5       0       0       0       0       0       0       0       0
  8991 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8992 ;;Total ram usage:        9 bytes
  8993 ;; Hardware stack levels used:    1
  8994 ;; Hardware stack levels required when called:    2
  8995 ;; This function calls:
  8996 ;;		_putch
  8997 ;; This function is called by:
  8998 ;;		_pad
  8999 ;;		_stoa
  9000 ;;		_vfpfcnvrt
  9001 ;;		_fputs
  9002 ;; This function uses a non-reentrant model
  9003 ;;
  9004                           
  9005                           	psect	text48
  9006  002098                     __ptext48:
  9007                           	opt callstack 0
  9008  002098                     _fputc:
  9009                           	opt callstack 22
  9010  002098  5003               	movf	fputc@fp^0,w,c
  9011  00209A  1004               	iorwf	(fputc@fp+1)^0,w,c
  9012  00209C  B4D8               	btfsc	status,2,c
  9013  00209E  EF53  F010         	goto	u1941
  9014  0020A2  EF55  F010         	goto	u1940
  9015  0020A6                     u1941:
  9016  0020A6  EF5E  F010         	goto	l3236
  9017  0020AA                     u1940:
  9018  0020AA  5003               	movf	fputc@fp^0,w,c
  9019  0020AC  1004               	iorwf	(fputc@fp+1)^0,w,c
  9020  0020AE  A4D8               	btfss	status,2,c
  9021  0020B0  EF5C  F010         	goto	u1951
  9022  0020B4  EF5E  F010         	goto	u1950
  9023  0020B8                     u1951:
  9024  0020B8  EF63  F010         	goto	l3238
  9025  0020BC                     u1950:
  9026  0020BC                     l3236:
  9027  0020BC  5001               	movf	fputc@c^0,w,c
  9028  0020BE  ECAF  F018         	call	_putch
  9029  0020C2  EFB0  F010         	goto	l1374
  9030  0020C6                     l3238:
  9031  0020C6  EE20 F004          	lfsr	2,4
  9032  0020CA  5003               	movf	fputc@fp^0,w,c
  9033  0020CC  26D9               	addwf	fsr2l,f,c
  9034  0020CE  5004               	movf	(fputc@fp+1)^0,w,c
  9035  0020D0  22DA               	addwfc	fsr2h,f,c
  9036  0020D2  50DE               	movf	postinc2,w,c
  9037  0020D4  10DE               	iorwf	postinc2,w,c
  9038  0020D6  B4D8               	btfsc	status,2,c
  9039  0020D8  EF70  F010         	goto	u1961
  9040  0020DC  EF72  F010         	goto	u1960
  9041  0020E0                     u1961:
  9042  0020E0  EF8D  F010         	goto	l3242
  9043  0020E4                     u1960:
  9044  0020E4  EE20 F004          	lfsr	2,4
  9045  0020E8  5003               	movf	fputc@fp^0,w,c
  9046  0020EA  26D9               	addwf	fsr2l,f,c
  9047  0020EC  5004               	movf	(fputc@fp+1)^0,w,c
  9048  0020EE  22DA               	addwfc	fsr2h,f,c
  9049  0020F0  EE10 F002          	lfsr	1,2
  9050  0020F4  5003               	movf	fputc@fp^0,w,c
  9051  0020F6  26E1               	addwf	fsr1l,f,c
  9052  0020F8  5004               	movf	(fputc@fp+1)^0,w,c
  9053  0020FA  22E2               	addwfc	fsr1h,f,c
  9054  0020FC  50DE               	movf	postinc2,w,c
  9055  0020FE  5CE6               	subwf	postinc1,w,c
  9056  002100  50E6               	movf	postinc1,w,c
  9057  002102  0A80               	xorlw	128
  9058  002104  6E09               	movwf	(??_fputc+4)^0,c
  9059  002106  50DE               	movf	postinc2,w,c
  9060  002108  0A80               	xorlw	128
  9061  00210A  5809               	subwfb	(??_fputc+4)^0,w,c
  9062  00210C  B0D8               	btfsc	status,0,c
  9063  00210E  EF8B  F010         	goto	u1971
  9064  002112  EF8D  F010         	goto	u1970
  9065  002116                     u1971:
  9066  002116  EFB0  F010         	goto	l1374
  9067  00211A                     u1970:
  9068  00211A                     l3242:
  9069  00211A  EE20 F002          	lfsr	2,2
  9070  00211E  5003               	movf	fputc@fp^0,w,c
  9071  002120  26D9               	addwf	fsr2l,f,c
  9072  002122  5004               	movf	(fputc@fp+1)^0,w,c
  9073  002124  22DA               	addwfc	fsr2h,f,c
  9074  002126  CFDE F005          	movff	postinc2,??_fputc
  9075  00212A  CFDD F006          	movff	postdec2,??_fputc+1
  9076  00212E  C003  FFD9         	movff	fputc@fp,fsr2l
  9077  002132  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9078  002136  CFDE F007          	movff	postinc2,??_fputc+2
  9079  00213A  CFDD F008          	movff	postdec2,??_fputc+3
  9080  00213E  5005               	movf	??_fputc^0,w,c
  9081  002140  2407               	addwf	(??_fputc+2)^0,w,c
  9082  002142  6ED9               	movwf	fsr2l,c
  9083  002144  5006               	movf	(??_fputc+1)^0,w,c
  9084  002146  2008               	addwfc	(??_fputc+3)^0,w,c
  9085  002148  6EDA               	movwf	fsr2h,c
  9086  00214A  C001  FFDF         	movff	fputc@c,indf2
  9087  00214E  EE20 F002          	lfsr	2,2
  9088  002152  5003               	movf	fputc@fp^0,w,c
  9089  002154  26D9               	addwf	fsr2l,f,c
  9090  002156  5004               	movf	(fputc@fp+1)^0,w,c
  9091  002158  22DA               	addwfc	fsr2h,f,c
  9092  00215A  2ADE               	incf	postinc2,f,c
  9093  00215C  0E00               	movlw	0
  9094  00215E  22DD               	addwfc	postdec2,f,c
  9095  002160                     l1374:
  9096  002160  0012               	return		;funcret
  9097  002162                     __end_of_fputc:
  9098                           	opt callstack 0
  9099                           
  9100 ;; *************** function _putch *****************
  9101 ;; Defined at:
  9102 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  9103 ;; Parameters:    Size  Location     Type
  9104 ;;  c               1    wreg     unsigned char 
  9105 ;; Auto vars:     Size  Location     Type
  9106 ;;  c               1    0[COMRAM] unsigned char 
  9107 ;; Return value:  Size  Location     Type
  9108 ;;                  1    wreg      void 
  9109 ;; Registers used:
  9110 ;;		wreg
  9111 ;; Tracked objects:
  9112 ;;		On entry : 0/0
  9113 ;;		On exit  : 0/0
  9114 ;;		Unchanged: 0/0
  9115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9116 ;;      Params:         0       0       0       0       0       0       0       0       0
  9117 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9118 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9119 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9120 ;;Total ram usage:        0 bytes
  9121 ;; Hardware stack levels used:    1
  9122 ;; Hardware stack levels required when called:    1
  9123 ;; This function calls:
  9124 ;;		Nothing
  9125 ;; This function is called by:
  9126 ;;		_fputc
  9127 ;; This function uses a non-reentrant model
  9128 ;;
  9129                           
  9130                           	psect	text49
  9131  00315E                     __ptext49:
  9132                           	opt callstack 0
  9133  00315E                     _putch:
  9134                           	opt callstack 22
  9135  00315E  0012               	return		;funcret
  9136  003160                     __end_of_putch:
  9137                           	opt callstack 0
  9138                           
  9139 ;; *************** function _atoi *****************
  9140 ;; Defined at:
  9141 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  9142 ;; Parameters:    Size  Location     Type
  9143 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9144 ;;		 -> STR_30(45), STR_29(29), STR_28(32), STR_27(45), 
  9145 ;;		 -> STR_26(29), STR_25(32), STR_24(24), STR_23(25), 
  9146 ;;		 -> STR_22(24), STR_21(27), STR_20(24), STR_19(23), 
  9147 ;;		 -> STR_18(25), STR_17(24), 
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;  n               2   20[COMRAM] int 
  9150 ;;  neg             2   13[COMRAM] int 
  9151 ;; Return value:  Size  Location     Type
  9152 ;;                  2    7[COMRAM] int 
  9153 ;; Registers used:
  9154 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9155 ;; Tracked objects:
  9156 ;;		On entry : 0/0
  9157 ;;		On exit  : 0/0
  9158 ;;		Unchanged: 0/0
  9159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9160 ;;      Params:         2       0       0       0       0       0       0       0       0
  9161 ;;      Locals:         9       0       0       0       0       0       0       0       0
  9162 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9163 ;;      Totals:        15       0       0       0       0       0       0       0       0
  9164 ;;Total ram usage:       15 bytes
  9165 ;; Hardware stack levels used:    1
  9166 ;; Hardware stack levels required when called:    2
  9167 ;; This function calls:
  9168 ;;		___wmul
  9169 ;;		_isdigit
  9170 ;;		_isspace
  9171 ;; This function is called by:
  9172 ;;		_vfpfcnvrt
  9173 ;; This function uses a non-reentrant model
  9174 ;;
  9175                           
  9176                           	psect	text50
  9177  000FE8                     __ptext50:
  9178                           	opt callstack 0
  9179  000FE8                     _atoi:
  9180                           	opt callstack 23
  9181  000FE8  0E00               	movlw	0
  9182  000FEA  6E16               	movwf	(atoi@n+1)^0,c
  9183  000FEC  0E00               	movlw	0
  9184  000FEE  6E15               	movwf	atoi@n^0,c
  9185  000FF0  0E00               	movlw	0
  9186  000FF2  6E0F               	movwf	(atoi@neg+1)^0,c
  9187  000FF4  0E00               	movlw	0
  9188  000FF6  6E0E               	movwf	atoi@neg^0,c
  9189  000FF8  EF00  F008         	goto	l3520
  9190  000FFC                     l3518:
  9191  000FFC  4A08               	infsnz	atoi@s^0,f,c
  9192  000FFE  2A09               	incf	(atoi@s+1)^0,f,c
  9193  001000                     l3520:
  9194  001000  0E01               	movlw	1
  9195  001002  6E14               	movwf	_atoi$1543^0,c
  9196  001004  C008  FFF6         	movff	atoi@s,tblptrl
  9197  001008  C009  FFF7         	movff	atoi@s+1,tblptrh
  9198  00100C                     	if	0	;tblptru may be non-zero
  9199  00100C                     	endif
  9200  00100C                     	if	0	;tblptru may be non-zero
  9201  00100C                     	endif
  9202  00100C  0008               	tblrd		*
  9203  00100E  50F5               	movf	tablat,w,c
  9204  001010  0A20               	xorlw	32
  9205  001012  B4D8               	btfsc	status,2,c
  9206  001014  EF0E  F008         	goto	u2491
  9207  001018  EF10  F008         	goto	u2490
  9208  00101C                     u2491:
  9209  00101C  EF2D  F008         	goto	l3528
  9210  001020                     u2490:
  9211  001020  0EF7               	movlw	247
  9212  001022  6E0A               	movwf	??_atoi^0,c
  9213  001024  0EFF               	movlw	255
  9214  001026  6E0B               	movwf	(??_atoi+1)^0,c
  9215  001028  C008  FFF6         	movff	atoi@s,tblptrl
  9216  00102C  C009  FFF7         	movff	atoi@s+1,tblptrh
  9217  001030                     	if	0	;tblptru may be non-zero
  9218  001030                     	endif
  9219  001030                     	if	0	;tblptru may be non-zero
  9220  001030                     	endif
  9221  001030  0008               	tblrd		*
  9222  001032  50F5               	movf	tablat,w,c
  9223  001034  6E0C               	movwf	(??_atoi+2)^0,c
  9224  001036  6A0D               	clrf	(??_atoi+3)^0,c
  9225  001038  500A               	movf	??_atoi^0,w,c
  9226  00103A  260C               	addwf	(??_atoi+2)^0,f,c
  9227  00103C  500B               	movf	(??_atoi+1)^0,w,c
  9228  00103E  220D               	addwfc	(??_atoi+3)^0,f,c
  9229  001040  500D               	movf	(??_atoi+3)^0,w,c
  9230  001042  E109               	bnz	u2500
  9231  001044  0E05               	movlw	5
  9232  001046  5C0C               	subwf	(??_atoi+2)^0,w,c
  9233  001048  A0D8               	btfss	status,0,c
  9234  00104A  EF29  F008         	goto	u2501
  9235  00104E  EF2B  F008         	goto	u2500
  9236  001052                     u2501:
  9237  001052  EF2D  F008         	goto	l3528
  9238  001056                     u2500:
  9239  001056  0E00               	movlw	0
  9240  001058  6E14               	movwf	_atoi$1543^0,c
  9241  00105A                     l3528:
  9242  00105A  C014  F010         	movff	_atoi$1543,_atoi$1542
  9243  00105E  6A11               	clrf	(_atoi$1542+1)^0,c
  9244  001060  5010               	movf	_atoi$1542^0,w,c
  9245  001062  1011               	iorwf	(_atoi$1542+1)^0,w,c
  9246  001064  A4D8               	btfss	status,2,c
  9247  001066  EF37  F008         	goto	u2511
  9248  00106A  EF39  F008         	goto	u2510
  9249  00106E                     u2511:
  9250  00106E  EFFE  F007         	goto	l3518
  9251  001072                     u2510:
  9252  001072  EF43  F008         	goto	l3538
  9253  001076                     l3534:
  9254  001076  0E00               	movlw	0
  9255  001078  6E0F               	movwf	(atoi@neg+1)^0,c
  9256  00107A  0E01               	movlw	1
  9257  00107C  6E0E               	movwf	atoi@neg^0,c
  9258  00107E                     l3536:
  9259  00107E  4A08               	infsnz	atoi@s^0,f,c
  9260  001080  2A09               	incf	(atoi@s+1)^0,f,c
  9261  001082  EF78  F008         	goto	l3544
  9262  001086                     l3538:
  9263  001086  C008  FFF6         	movff	atoi@s,tblptrl
  9264  00108A  C009  FFF7         	movff	atoi@s+1,tblptrh
  9265  00108E                     	if	0	;tblptru may be non-zero
  9266  00108E                     	endif
  9267  00108E                     	if	0	;tblptru may be non-zero
  9268  00108E                     	endif
  9269  00108E  0008               	tblrd		*
  9270  001090  50F5               	movf	tablat,w,c
  9271  001092  6E0A               	movwf	??_atoi^0,c
  9272  001094  6A0B               	clrf	(??_atoi+1)^0,c
  9273                           
  9274                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9275                           ; Switch size 1, requested type "simple"
  9276                           ; Number of cases is 1, Range of values is 0 to 0
  9277                           ; switch strategies available:
  9278                           ; Name         Instructions Cycles
  9279                           ; simple_byte            4     3 (average)
  9280                           ;	Chosen strategy is simple_byte
  9281  001096  500B               	movf	(??_atoi+1)^0,w,c
  9282  001098  0A00               	xorlw	0	; case 0
  9283  00109A  B4D8               	btfsc	status,2,c
  9284  00109C  EF52  F008         	goto	l5086
  9285  0010A0  EF78  F008         	goto	l3544
  9286  0010A4                     l5086:
  9287                           
  9288                           ; Switch size 1, requested type "simple"
  9289                           ; Number of cases is 2, Range of values is 43 to 45
  9290                           ; switch strategies available:
  9291                           ; Name         Instructions Cycles
  9292                           ; simple_byte            7     4 (average)
  9293                           ;	Chosen strategy is simple_byte
  9294  0010A4  500A               	movf	??_atoi^0,w,c
  9295  0010A6  0A2B               	xorlw	43	; case 43
  9296  0010A8  B4D8               	btfsc	status,2,c
  9297  0010AA  EF3F  F008         	goto	l3536
  9298  0010AE  0A06               	xorlw	6	; case 45
  9299  0010B0  B4D8               	btfsc	status,2,c
  9300  0010B2  EF3B  F008         	goto	l3534
  9301  0010B6  EF78  F008         	goto	l3544
  9302  0010BA                     l3540:
  9303  0010BA  C015  F001         	movff	atoi@n,___wmul@multiplier
  9304  0010BE  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9305  0010C2  0E00               	movlw	0
  9306  0010C4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9307  0010C6  0E0A               	movlw	10
  9308  0010C8  6E03               	movwf	___wmul@multiplicand^0,c
  9309  0010CA  EC11  F018         	call	___wmul	;wreg free
  9310  0010CE  C008  FFF6         	movff	atoi@s,tblptrl
  9311  0010D2  C009  FFF7         	movff	atoi@s+1,tblptrh
  9312  0010D6                     	if	0	;tblptru may be non-zero
  9313  0010D6                     	endif
  9314  0010D6                     	if	0	;tblptru may be non-zero
  9315  0010D6                     	endif
  9316  0010D6  0008               	tblrd		*
  9317  0010D8  50F5               	movf	tablat,w,c
  9318  0010DA  5E01               	subwf	?___wmul^0,f,c
  9319  0010DC  0E00               	movlw	0
  9320  0010DE  5A02               	subwfb	(?___wmul+1)^0,f,c
  9321  0010E0  0E30               	movlw	48
  9322  0010E2  2401               	addwf	?___wmul^0,w,c
  9323  0010E4  6E15               	movwf	atoi@n^0,c
  9324  0010E6  0E00               	movlw	0
  9325  0010E8  2002               	addwfc	(?___wmul+1)^0,w,c
  9326  0010EA  6E16               	movwf	(atoi@n+1)^0,c
  9327  0010EC  EF3F  F008         	goto	l3536
  9328  0010F0                     l3544:
  9329  0010F0  0ED0               	movlw	208
  9330  0010F2  6E0A               	movwf	??_atoi^0,c
  9331  0010F4  0EFF               	movlw	255
  9332  0010F6  6E0B               	movwf	(??_atoi+1)^0,c
  9333  0010F8  C008  FFF6         	movff	atoi@s,tblptrl
  9334  0010FC  C009  FFF7         	movff	atoi@s+1,tblptrh
  9335  001100                     	if	0	;tblptru may be non-zero
  9336  001100                     	endif
  9337  001100                     	if	0	;tblptru may be non-zero
  9338  001100                     	endif
  9339  001100  0008               	tblrd		*
  9340  001102  50F5               	movf	tablat,w,c
  9341  001104  6E0C               	movwf	(??_atoi+2)^0,c
  9342  001106  6A0D               	clrf	(??_atoi+3)^0,c
  9343  001108  500A               	movf	??_atoi^0,w,c
  9344  00110A  260C               	addwf	(??_atoi+2)^0,f,c
  9345  00110C  500B               	movf	(??_atoi+1)^0,w,c
  9346  00110E  220D               	addwfc	(??_atoi+3)^0,f,c
  9347  001110  500D               	movf	(??_atoi+3)^0,w,c
  9348  001112  E10A               	bnz	u2520
  9349  001114  0E0A               	movlw	10
  9350  001116  5C0C               	subwf	(??_atoi+2)^0,w,c
  9351  001118  A0D8               	btfss	status,0,c
  9352  00111A  EF91  F008         	goto	u2521
  9353  00111E  EF94  F008         	goto	u2520
  9354  001122                     u2521:
  9355  001122  0E01               	movlw	1
  9356  001124  EF95  F008         	goto	u2530
  9357  001128                     u2520:
  9358  001128  0E00               	movlw	0
  9359  00112A                     u2530:
  9360  00112A  6E12               	movwf	_atoi$1544^0,c
  9361  00112C  6A13               	clrf	(_atoi$1544+1)^0,c
  9362  00112E  5012               	movf	_atoi$1544^0,w,c
  9363  001130  1013               	iorwf	(_atoi$1544+1)^0,w,c
  9364  001132  A4D8               	btfss	status,2,c
  9365  001134  EF9E  F008         	goto	u2541
  9366  001138  EFA0  F008         	goto	u2540
  9367  00113C                     u2541:
  9368  00113C  EF5D  F008         	goto	l3540
  9369  001140                     u2540:
  9370  001140  500E               	movf	atoi@neg^0,w,c
  9371  001142  100F               	iorwf	(atoi@neg+1)^0,w,c
  9372  001144  A4D8               	btfss	status,2,c
  9373  001146  EFA7  F008         	goto	u2551
  9374  00114A  EFA9  F008         	goto	u2550
  9375  00114E                     u2551:
  9376  00114E  EFB7  F008         	goto	l1345
  9377  001152                     u2550:
  9378  001152  C015  F00A         	movff	atoi@n,??_atoi
  9379  001156  C016  F00B         	movff	atoi@n+1,??_atoi+1
  9380  00115A  1E0A               	comf	??_atoi^0,f,c
  9381  00115C  1E0B               	comf	(??_atoi+1)^0,f,c
  9382  00115E  4A0A               	infsnz	??_atoi^0,f,c
  9383  001160  2A0B               	incf	(??_atoi+1)^0,f,c
  9384  001162  C00A  F008         	movff	??_atoi,?_atoi
  9385  001166  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9386  00116A  EFBB  F008         	goto	l1348
  9387  00116E                     l1345:
  9388  00116E  C015  F008         	movff	atoi@n,?_atoi
  9389  001172  C016  F009         	movff	atoi@n+1,?_atoi+1
  9390  001176                     l1348:
  9391  001176  0012               	return		;funcret
  9392  001178                     __end_of_atoi:
  9393                           	opt callstack 0
  9394                           
  9395 ;; *************** function _isspace *****************
  9396 ;; Defined at:
  9397 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  9398 ;; Parameters:    Size  Location     Type
  9399 ;;  c               2    0[COMRAM] int 
  9400 ;; Auto vars:     Size  Location     Type
  9401 ;;		None
  9402 ;; Return value:  Size  Location     Type
  9403 ;;                  2    0[COMRAM] int 
  9404 ;; Registers used:
  9405 ;;		wreg, status,2, status,0
  9406 ;; Tracked objects:
  9407 ;;		On entry : 0/0
  9408 ;;		On exit  : 0/0
  9409 ;;		Unchanged: 0/0
  9410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9411 ;;      Params:         2       0       0       0       0       0       0       0       0
  9412 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9413 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9414 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9415 ;;Total ram usage:        7 bytes
  9416 ;; Hardware stack levels used:    1
  9417 ;; Hardware stack levels required when called:    1
  9418 ;; This function calls:
  9419 ;;		Nothing
  9420 ;; This function is called by:
  9421 ;;		_atoi
  9422 ;; This function uses a non-reentrant model
  9423 ;;
  9424                           
  9425                           	psect	text51
  9426  002C6E                     __ptext51:
  9427                           	opt callstack 0
  9428  002C6E                     _isspace:
  9429                           	opt callstack 23
  9430  002C6E  0E01               	movlw	1
  9431  002C70  6E07               	movwf	_isspace$1560^0,c
  9432  002C72  0E20               	movlw	32
  9433  002C74  1801               	xorwf	isspace@c^0,w,c
  9434  002C76  1002               	iorwf	(isspace@c+1)^0,w,c
  9435  002C78  B4D8               	btfsc	status,2,c
  9436  002C7A  EF41  F016         	goto	u2201
  9437  002C7E  EF43  F016         	goto	u2200
  9438  002C82                     u2201:
  9439  002C82  EF5C  F016         	goto	l3388
  9440  002C86                     u2200:
  9441  002C86  0EF7               	movlw	247
  9442  002C88  6E03               	movwf	??_isspace^0,c
  9443  002C8A  0EFF               	movlw	255
  9444  002C8C  6E04               	movwf	(??_isspace+1)^0,c
  9445  002C8E  C001  F005         	movff	isspace@c,??_isspace+2
  9446  002C92  C002  F006         	movff	isspace@c+1,??_isspace+3
  9447  002C96  5003               	movf	??_isspace^0,w,c
  9448  002C98  2605               	addwf	(??_isspace+2)^0,f,c
  9449  002C9A  5004               	movf	(??_isspace+1)^0,w,c
  9450  002C9C  2206               	addwfc	(??_isspace+3)^0,f,c
  9451  002C9E  5006               	movf	(??_isspace+3)^0,w,c
  9452  002CA0  E109               	bnz	u2210
  9453  002CA2  0E05               	movlw	5
  9454  002CA4  5C05               	subwf	(??_isspace+2)^0,w,c
  9455  002CA6  A0D8               	btfss	status,0,c
  9456  002CA8  EF58  F016         	goto	u2211
  9457  002CAC  EF5A  F016         	goto	u2210
  9458  002CB0                     u2211:
  9459  002CB0  EF5C  F016         	goto	l3388
  9460  002CB4                     u2210:
  9461  002CB4  0E00               	movlw	0
  9462  002CB6  6E07               	movwf	_isspace$1560^0,c
  9463  002CB8                     l3388:
  9464  002CB8  C007  F001         	movff	_isspace$1560,?_isspace
  9465  002CBC  6A02               	clrf	(?_isspace+1)^0,c
  9466  002CBE  0012               	return		;funcret
  9467  002CC0                     __end_of_isspace:
  9468                           	opt callstack 0
  9469                           
  9470 ;; *************** function _isdigit *****************
  9471 ;; Defined at:
  9472 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  9473 ;; Parameters:    Size  Location     Type
  9474 ;;  c               2    0[COMRAM] int 
  9475 ;; Auto vars:     Size  Location     Type
  9476 ;;		None
  9477 ;; Return value:  Size  Location     Type
  9478 ;;                  2    0[COMRAM] int 
  9479 ;; Registers used:
  9480 ;;		wreg, status,2, status,0
  9481 ;; Tracked objects:
  9482 ;;		On entry : 0/0
  9483 ;;		On exit  : 0/0
  9484 ;;		Unchanged: 0/0
  9485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9486 ;;      Params:         2       0       0       0       0       0       0       0       0
  9487 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9488 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9489 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9490 ;;Total ram usage:        6 bytes
  9491 ;; Hardware stack levels used:    1
  9492 ;; Hardware stack levels required when called:    1
  9493 ;; This function calls:
  9494 ;;		Nothing
  9495 ;; This function is called by:
  9496 ;;		_vfpfcnvrt
  9497 ;;		_atoi
  9498 ;; This function uses a non-reentrant model
  9499 ;;
  9500                           
  9501                           	psect	text52
  9502  002ED2                     __ptext52:
  9503                           	opt callstack 0
  9504  002ED2                     _isdigit:
  9505                           	opt callstack 24
  9506  002ED2  0ED0               	movlw	208
  9507  002ED4  6E03               	movwf	??_isdigit^0,c
  9508  002ED6  0EFF               	movlw	255
  9509  002ED8  6E04               	movwf	(??_isdigit+1)^0,c
  9510  002EDA  C001  F005         	movff	isdigit@c,??_isdigit+2
  9511  002EDE  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  9512  002EE2  5003               	movf	??_isdigit^0,w,c
  9513  002EE4  2605               	addwf	(??_isdigit+2)^0,f,c
  9514  002EE6  5004               	movf	(??_isdigit+1)^0,w,c
  9515  002EE8  2206               	addwfc	(??_isdigit+3)^0,f,c
  9516  002EEA  5006               	movf	(??_isdigit+3)^0,w,c
  9517  002EEC  E10A               	bnz	u2050
  9518  002EEE  0E0A               	movlw	10
  9519  002EF0  5C05               	subwf	(??_isdigit+2)^0,w,c
  9520  002EF2  A0D8               	btfss	status,0,c
  9521  002EF4  EF7E  F017         	goto	u2051
  9522  002EF8  EF81  F017         	goto	u2050
  9523  002EFC                     u2051:
  9524  002EFC  0E01               	movlw	1
  9525  002EFE  EF82  F017         	goto	u2060
  9526  002F02                     u2050:
  9527  002F02  0E00               	movlw	0
  9528  002F04                     u2060:
  9529  002F04  6E01               	movwf	?_isdigit^0,c
  9530  002F06  6A02               	clrf	(?_isdigit+1)^0,c
  9531  002F08  0012               	return		;funcret
  9532  002F0A                     __end_of_isdigit:
  9533                           	opt callstack 0
  9534                           
  9535 ;; *************** function _limpiarBuffer *****************
  9536 ;; Defined at:
  9537 ;;		line 1057 in file "main.c"
  9538 ;; Parameters:    Size  Location     Type
  9539 ;;		None
  9540 ;; Auto vars:     Size  Location     Type
  9541 ;;  i               2    0[COMRAM] int 
  9542 ;; Return value:  Size  Location     Type
  9543 ;;                  1    wreg      void 
  9544 ;; Registers used:
  9545 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9546 ;; Tracked objects:
  9547 ;;		On entry : 0/0
  9548 ;;		On exit  : 0/0
  9549 ;;		Unchanged: 0/0
  9550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9551 ;;      Params:         0       0       0       0       0       0       0       0       0
  9552 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9553 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9554 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9555 ;;Total ram usage:        2 bytes
  9556 ;; Hardware stack levels used:    1
  9557 ;; Hardware stack levels required when called:    1
  9558 ;; This function calls:
  9559 ;;		Nothing
  9560 ;; This function is called by:
  9561 ;;		_lecturaWifi
  9562 ;;		_dameDatosSistema
  9563 ;;		_mostrarDatosSensores
  9564 ;;		_mostrarDatosSensoresWIFI
  9565 ;; This function uses a non-reentrant model
  9566 ;;
  9567                           
  9568                           	psect	text53
  9569  002E18                     __ptext53:
  9570                           	opt callstack 0
  9571  002E18                     _limpiarBuffer:
  9572                           	opt callstack 27
  9573  002E18                     
  9574                           ;main.c: 1058:     for (int i = 0; i < 50; i++) {
  9575  002E18  0E00               	movlw	0
  9576  002E1A  6E02               	movwf	(limpiarBuffer@i+1)^0,c
  9577  002E1C  0E00               	movlw	0
  9578  002E1E  6E01               	movwf	limpiarBuffer@i^0,c
  9579  002E20                     l4010:
  9580                           
  9581                           ;main.c: 1059:         buffer[i] = 0;
  9582  002E20  0E00               	movlw	low _buffer
  9583  002E22  2401               	addwf	limpiarBuffer@i^0,w,c
  9584  002E24  6ED9               	movwf	fsr2l,c
  9585  002E26  0E01               	movlw	high _buffer
  9586  002E28  2002               	addwfc	(limpiarBuffer@i+1)^0,w,c
  9587  002E2A  6EDA               	movwf	fsr2h,c
  9588  002E2C  0E00               	movlw	0
  9589  002E2E  6EDF               	movwf	indf2,c
  9590  002E30                     
  9591                           ;main.c: 1060:     }
  9592  002E30  4A01               	infsnz	limpiarBuffer@i^0,f,c
  9593  002E32  2A02               	incf	(limpiarBuffer@i+1)^0,f,c
  9594  002E34  BE02               	btfsc	(limpiarBuffer@i+1)^0,7,c
  9595  002E36  EF26  F017         	goto	u3061
  9596  002E3A  5002               	movf	(limpiarBuffer@i+1)^0,w,c
  9597  002E3C  E109               	bnz	u3060
  9598  002E3E  0E32               	movlw	50
  9599  002E40  5C01               	subwf	limpiarBuffer@i^0,w,c
  9600  002E42  A0D8               	btfss	status,0,c
  9601  002E44  EF26  F017         	goto	u3061
  9602  002E48  EF28  F017         	goto	u3060
  9603  002E4C                     u3061:
  9604  002E4C  EF10  F017         	goto	l4010
  9605  002E50                     u3060:
  9606  002E50                     
  9607                           ;main.c: 1062:     buffer[50 - 1] = '\0';
  9608  002E50  0E00               	movlw	0
  9609  002E52  0101               	movlb	1	; () banked
  9610  002E54  6F31               	movwf	(_buffer+49)& (0+255),b
  9611  002E56                     
  9612                           ; BSR set to: 1
  9613  002E56  0012               	return		;funcret
  9614  002E58                     __end_of_limpiarBuffer:
  9615                           	opt callstack 0
  9616                           
  9617 ;; *************** function _UART_printf *****************
  9618 ;; Defined at:
  9619 ;;		line 57 in file "./UART.h"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;  cadena          2    1[COMRAM] PTR unsigned char 
  9622 ;;		 -> STR_33(11), STR_32(9), STR_31(17), buffer(50), 
  9623 ;;		 -> dameDatosSistema@bufferHorario(30), STR_16(26), STR_15(38), STR_14(36), 
  9624 ;;		 -> STR_13(28), STR_12(13), STR_11(3), STR_10(14), 
  9625 ;;		 -> STR_9(36), STR_8(26), STR_7(23), STR_6(34), 
  9626 ;;		 -> STR_5(32), STR_4(49), STR_3(37), STR_2(27), 
  9627 ;;		 -> STR_1(37), 
  9628 ;; Auto vars:     Size  Location     Type
  9629 ;;		None
  9630 ;; Return value:  Size  Location     Type
  9631 ;;                  1    wreg      void 
  9632 ;; Registers used:
  9633 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9634 ;; Tracked objects:
  9635 ;;		On entry : 0/0
  9636 ;;		On exit  : 0/0
  9637 ;;		Unchanged: 0/0
  9638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9639 ;;      Params:         2       0       0       0       0       0       0       0       0
  9640 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9641 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9642 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9643 ;;Total ram usage:        2 bytes
  9644 ;; Hardware stack levels used:    1
  9645 ;; Hardware stack levels required when called:    2
  9646 ;; This function calls:
  9647 ;;		_UART_write
  9648 ;; This function is called by:
  9649 ;;		_dameDatosSistema
  9650 ;;		_mostrarDatosSensores
  9651 ;;		_mostrarDatosSensoresWIFI
  9652 ;;		_mostrarMenu
  9653 ;;		_configBluetoothHC_06
  9654 ;; This function uses a non-reentrant model
  9655 ;;
  9656                           
  9657                           	psect	text54
  9658  002A5A                     __ptext54:
  9659                           	opt callstack 0
  9660  002A5A                     _UART_printf:
  9661                           	opt callstack 26
  9662  002A5A                     
  9663                           ;./UART.h: 58:     while (*cadena) {
  9664  002A5A  EF43  F015         	goto	l4128
  9665  002A5E                     l4124:
  9666                           
  9667                           ;./UART.h: 59:         UART_write(*cadena++);
  9668  002A5E  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  9669  002A62  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  9670  002A66  6AF8               	clrf	tblptru,c
  9671  002A68  0E07               	movlw	(high __ramtop+-1)
  9672  002A6A  64F7               	cpfsgt	tblptrh,c
  9673  002A6C  D003               	bra	u3207
  9674  002A6E  0008               	tblrd		*
  9675  002A70  50F5               	movf	tablat,w,c
  9676  002A72  D005               	bra	u3200
  9677  002A74                     u3207:
  9678  002A74  CFF6 FFE1          	movff	tblptrl,fsr1l
  9679  002A78  CFF7 FFE2          	movff	tblptrh,fsr1h
  9680  002A7C  50E7               	movf	indf1,w,c
  9681  002A7E                     u3200:
  9682  002A7E  EC6F  F018         	call	_UART_write
  9683  002A82  4A02               	infsnz	UART_printf@cadena^0,f,c
  9684  002A84  2A03               	incf	(UART_printf@cadena+1)^0,f,c
  9685  002A86                     l4128:
  9686                           
  9687                           ;./UART.h: 58:     while (*cadena) {
  9688  002A86  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  9689  002A8A  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  9690  002A8E  6AF8               	clrf	tblptru,c
  9691  002A90  0E07               	movlw	(high __ramtop+-1)
  9692  002A92  64F7               	cpfsgt	tblptrh,c
  9693  002A94  D003               	bra	u3217
  9694  002A96  0008               	tblrd		*
  9695  002A98  50F5               	movf	tablat,w,c
  9696  002A9A  D005               	bra	u3210
  9697  002A9C                     u3217:
  9698  002A9C  CFF6 FFE1          	movff	tblptrl,fsr1l
  9699  002AA0  CFF7 FFE2          	movff	tblptrh,fsr1h
  9700  002AA4  50E7               	movf	indf1,w,c
  9701  002AA6                     u3210:
  9702  002AA6  0900               	iorlw	0
  9703  002AA8  A4D8               	btfss	status,2,c
  9704  002AAA  EF59  F015         	goto	u3221
  9705  002AAE  EF5B  F015         	goto	u3220
  9706  002AB2                     u3221:
  9707  002AB2  EF2F  F015         	goto	l4124
  9708  002AB6                     u3220:
  9709  002AB6  0012               	return		;funcret
  9710  002AB8                     __end_of_UART_printf:
  9711                           	opt callstack 0
  9712                           
  9713 ;; *************** function _asignarHorarios *****************
  9714 ;; Defined at:
  9715 ;;		line 411 in file "main.c"
  9716 ;; Parameters:    Size  Location     Type
  9717 ;;		None
  9718 ;; Auto vars:     Size  Location     Type
  9719 ;;  i               2   20[COMRAM] int 
  9720 ;;  Rx              1   24[COMRAM] unsigned char 
  9721 ;;  hora            1   23[COMRAM] unsigned char 
  9722 ;;  diaRegar        1   22[COMRAM] unsigned char 
  9723 ;; Return value:  Size  Location     Type
  9724 ;;                  1    wreg      void 
  9725 ;; Registers used:
  9726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9727 ;; Tracked objects:
  9728 ;;		On entry : 0/0
  9729 ;;		On exit  : 0/0
  9730 ;;		Unchanged: 0/0
  9731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9732 ;;      Params:         0       0       0       0       0       0       0       0       0
  9733 ;;      Locals:         5       0       0       0       0       0       0       0       0
  9734 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9735 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9736 ;;Total ram usage:        7 bytes
  9737 ;; Hardware stack levels used:    1
  9738 ;; Hardware stack levels required when called:    5
  9739 ;; This function calls:
  9740 ;;		_UART_write
  9741 ;;		_escribeHorariosMemoria
  9742 ;;		_getValue
  9743 ;; This function is called by:
  9744 ;;		_sistemaPrincipal
  9745 ;; This function uses a non-reentrant model
  9746 ;;
  9747                           
  9748                           	psect	text55
  9749  001B6C                     __ptext55:
  9750                           	opt callstack 0
  9751  001B6C                     _asignarHorarios:
  9752                           	opt callstack 24
  9753  001B6C                     
  9754                           ;main.c: 413:     unsigned char hora;;main.c: 414:     unsigned char Rx;;main.c: 415:   
      +                            unsigned char diaRegar;;main.c: 420:     hora = getValue(2);
  9755  001B6C  0E00               	movlw	0
  9756  001B6E  6E03               	movwf	(getValue@numCharacters+1)^0,c
  9757  001B70  0E02               	movlw	2
  9758  001B72  6E02               	movwf	getValue@numCharacters^0,c
  9759  001B74  ECE8  F006         	call	_getValue	;wreg free
  9760  001B78  6E18               	movwf	asignarHorarios@hora^0,c
  9761  001B7A                     
  9762                           ;main.c: 422:     if (hora != '@') {
  9763  001B7A  0E40               	movlw	64
  9764  001B7C  1818               	xorwf	asignarHorarios@hora^0,w,c
  9765  001B7E  B4D8               	btfsc	status,2,c
  9766  001B80  EFC4  F00D         	goto	u3511
  9767  001B84  EFC6  F00D         	goto	u3510
  9768  001B88                     u3511:
  9769  001B88  EF54  F00E         	goto	l327
  9770  001B8C                     u3510:
  9771  001B8C                     
  9772                           ;main.c: 426:         Rx = getValue(1);
  9773  001B8C  0E00               	movlw	0
  9774  001B8E  6E03               	movwf	(getValue@numCharacters+1)^0,c
  9775  001B90  0E01               	movlw	1
  9776  001B92  6E02               	movwf	getValue@numCharacters^0,c
  9777  001B94  ECE8  F006         	call	_getValue	;wreg free
  9778  001B98  6E19               	movwf	asignarHorarios@Rx^0,c
  9779  001B9A                     
  9780                           ;main.c: 429:         if (Rx == 1) {
  9781  001B9A  0419               	decf	asignarHorarios@Rx^0,w,c
  9782  001B9C  A4D8               	btfss	status,2,c
  9783  001B9E  EFD3  F00D         	goto	u3521
  9784  001BA2  EFD5  F00D         	goto	u3520
  9785  001BA6                     u3521:
  9786  001BA6  EF3F  F00E         	goto	l4454
  9787  001BAA                     u3520:
  9788  001BAA                     
  9789                           ;main.c: 434:             for (int i = 0; i < 7; i++) {
  9790  001BAA  0E00               	movlw	0
  9791  001BAC  6E16               	movwf	(asignarHorarios@i+1)^0,c
  9792  001BAE  0E00               	movlw	0
  9793  001BB0  6E15               	movwf	asignarHorarios@i^0,c
  9794  001BB2                     l4428:
  9795                           
  9796                           ;main.c: 438:                 diaRegar = getValue(1);
  9797  001BB2  0E00               	movlw	0
  9798  001BB4  6E03               	movwf	(getValue@numCharacters+1)^0,c
  9799  001BB6  0E01               	movlw	1
  9800  001BB8  6E02               	movwf	getValue@numCharacters^0,c
  9801  001BBA  ECE8  F006         	call	_getValue	;wreg free
  9802  001BBE  6E17               	movwf	asignarHorarios@diaRegar^0,c
  9803  001BC0                     
  9804                           ;main.c: 440:                 if (diaRegar != '@') {
  9805  001BC0  0E40               	movlw	64
  9806  001BC2  1817               	xorwf	asignarHorarios@diaRegar^0,w,c
  9807  001BC4  B4D8               	btfsc	status,2,c
  9808  001BC6  EFE7  F00D         	goto	u3531
  9809  001BCA  EFE9  F00D         	goto	u3530
  9810  001BCE                     u3531:
  9811  001BCE  EF1E  F00E         	goto	l4444
  9812  001BD2                     u3530:
  9813  001BD2  EFF3  F00D         	goto	l4440
  9814  001BD6                     l4434:
  9815                           
  9816                           ;main.c: 444:                             diaRegar = '0';
  9817  001BD6  0E30               	movlw	48
  9818  001BD8  6E17               	movwf	asignarHorarios@diaRegar^0,c
  9819                           
  9820                           ;main.c: 445:                             break;
  9821  001BDA  EF08  F00E         	goto	l4442
  9822  001BDE                     l4436:
  9823                           
  9824                           ;main.c: 448:                             diaRegar = '1';
  9825  001BDE  0E31               	movlw	49
  9826  001BE0  6E17               	movwf	asignarHorarios@diaRegar^0,c
  9827                           
  9828                           ;main.c: 449:                             break;
  9829  001BE2  EF08  F00E         	goto	l4442
  9830  001BE6                     l4440:
  9831  001BE6  5017               	movf	asignarHorarios@diaRegar^0,w,c
  9832  001BE8  6E13               	movwf	??_asignarHorarios^0,c
  9833  001BEA  6A14               	clrf	(??_asignarHorarios+1)^0,c
  9834                           
  9835                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9836                           ; Switch size 1, requested type "simple"
  9837                           ; Number of cases is 1, Range of values is 0 to 0
  9838                           ; switch strategies available:
  9839                           ; Name         Instructions Cycles
  9840                           ; simple_byte            4     3 (average)
  9841                           ;	Chosen strategy is simple_byte
  9842  001BEC  5014               	movf	(??_asignarHorarios+1)^0,w,c
  9843  001BEE  0A00               	xorlw	0	; case 0
  9844  001BF0  B4D8               	btfsc	status,2,c
  9845  001BF2  EFFD  F00D         	goto	l5088
  9846  001BF6  EF08  F00E         	goto	l4442
  9847  001BFA                     l5088:
  9848                           
  9849                           ; Switch size 1, requested type "simple"
  9850                           ; Number of cases is 2, Range of values is 0 to 1
  9851                           ; switch strategies available:
  9852                           ; Name         Instructions Cycles
  9853                           ; simple_byte            7     4 (average)
  9854                           ;	Chosen strategy is simple_byte
  9855  001BFA  5013               	movf	??_asignarHorarios^0,w,c
  9856  001BFC  0A00               	xorlw	0	; case 0
  9857  001BFE  B4D8               	btfsc	status,2,c
  9858  001C00  EFEB  F00D         	goto	l4434
  9859  001C04  0A01               	xorlw	1	; case 1
  9860  001C06  B4D8               	btfsc	status,2,c
  9861  001C08  EFEF  F00D         	goto	l4436
  9862  001C0C  EF08  F00E         	goto	l4442
  9863  001C10                     l4442:
  9864                           
  9865                           ;main.c: 453:                     horarios[hora].dias[i] = diaRegar;
  9866  001C10  5018               	movf	asignarHorarios@hora^0,w,c
  9867  001C12  0D0C               	mullw	12
  9868  001C14  0E32               	movlw	low _horarios
  9869  001C16  6E13               	movwf	??_asignarHorarios^0,c
  9870  001C18  0E01               	movlw	high _horarios
  9871  001C1A  6E14               	movwf	(??_asignarHorarios+1)^0,c
  9872  001C1C  0E01               	movlw	1
  9873  001C1E  2613               	addwf	??_asignarHorarios^0,f,c
  9874  001C20  0E00               	movlw	0
  9875  001C22  2214               	addwfc	(??_asignarHorarios+1)^0,f,c
  9876  001C24  50F3               	movf	243,w,c
  9877  001C26  2613               	addwf	??_asignarHorarios^0,f,c
  9878  001C28  50F4               	movf	244,w,c
  9879  001C2A  2214               	addwfc	(??_asignarHorarios+1)^0,f,c
  9880  001C2C  5015               	movf	asignarHorarios@i^0,w,c
  9881  001C2E  2413               	addwf	??_asignarHorarios^0,w,c
  9882  001C30  6ED9               	movwf	fsr2l,c
  9883  001C32  5016               	movf	(asignarHorarios@i+1)^0,w,c
  9884  001C34  2014               	addwfc	(??_asignarHorarios+1)^0,w,c
  9885  001C36  6EDA               	movwf	fsr2h,c
  9886  001C38  C017  FFDF         	movff	asignarHorarios@diaRegar,indf2
  9887  001C3C                     l4444:
  9888                           
  9889                           ;main.c: 456:             }
  9890  001C3C  4A15               	infsnz	asignarHorarios@i^0,f,c
  9891  001C3E  2A16               	incf	(asignarHorarios@i+1)^0,f,c
  9892  001C40  BE16               	btfsc	(asignarHorarios@i+1)^0,7,c
  9893  001C42  EF2C  F00E         	goto	u3541
  9894  001C46  5016               	movf	(asignarHorarios@i+1)^0,w,c
  9895  001C48  E109               	bnz	u3540
  9896  001C4A  0E07               	movlw	7
  9897  001C4C  5C15               	subwf	asignarHorarios@i^0,w,c
  9898  001C4E  A0D8               	btfss	status,0,c
  9899  001C50  EF2C  F00E         	goto	u3541
  9900  001C54  EF2E  F00E         	goto	u3540
  9901  001C58                     u3541:
  9902  001C58  EFD9  F00D         	goto	l4428
  9903  001C5C                     u3540:
  9904  001C5C                     
  9905                           ;main.c: 458:             horarios[hora].regar = Rx;
  9906  001C5C  5018               	movf	asignarHorarios@hora^0,w,c
  9907  001C5E  0D0C               	mullw	12
  9908  001C60  0E3B               	movlw	low (_horarios+9)
  9909  001C62  24F3               	addwf	243,w,c
  9910  001C64  6ED9               	movwf	fsr2l,c
  9911  001C66  0E01               	movlw	high (_horarios+9)
  9912  001C68  20F4               	addwfc	prodh,w,c
  9913  001C6A  6EDA               	movwf	fsr2h,c
  9914  001C6C  C019  FFDF         	movff	asignarHorarios@Rx,indf2
  9915  001C70                     
  9916                           ;main.c: 460:             escribeHorariosMemoria();
  9917  001C70  EC61  F00C         	call	_escribeHorariosMemoria	;wreg free
  9918  001C74                     
  9919                           ;main.c: 464:             UART_write('E');
  9920  001C74  0E45               	movlw	69
  9921  001C76  EC6F  F018         	call	_UART_write
  9922                           
  9923                           ;main.c: 466:         } else if (Rx == 0) {
  9924  001C7A  EF54  F00E         	goto	l327
  9925  001C7E                     l4454:
  9926  001C7E  5019               	movf	asignarHorarios@Rx^0,w,c
  9927  001C80  A4D8               	btfss	status,2,c
  9928  001C82  EF45  F00E         	goto	u3551
  9929  001C86  EF47  F00E         	goto	u3550
  9930  001C8A                     u3551:
  9931  001C8A  EF54  F00E         	goto	l327
  9932  001C8E                     u3550:
  9933  001C8E                     
  9934                           ;main.c: 467:             horarios[hora].regar = Rx;
  9935  001C8E  5018               	movf	asignarHorarios@hora^0,w,c
  9936  001C90  0D0C               	mullw	12
  9937  001C92  0E3B               	movlw	low (_horarios+9)
  9938  001C94  24F3               	addwf	243,w,c
  9939  001C96  6ED9               	movwf	fsr2l,c
  9940  001C98  0E01               	movlw	high (_horarios+9)
  9941  001C9A  20F4               	addwfc	prodh,w,c
  9942  001C9C  6EDA               	movwf	fsr2h,c
  9943  001C9E  C019  FFDF         	movff	asignarHorarios@Rx,indf2
  9944  001CA2                     
  9945                           ;main.c: 469:             UART_write('E');
  9946  001CA2  0E45               	movlw	69
  9947  001CA4  EC6F  F018         	call	_UART_write
  9948  001CA8                     l327:
  9949  001CA8  0012               	return		;funcret
  9950  001CAA                     __end_of_asignarHorarios:
  9951                           	opt callstack 0
  9952                           
  9953 ;; *************** function _getValue *****************
  9954 ;; Defined at:
  9955 ;;		line 881 in file "main.c"
  9956 ;; Parameters:    Size  Location     Type
  9957 ;;  numCharacter    2    1[COMRAM] short 
  9958 ;; Auto vars:     Size  Location     Type
  9959 ;;  i               2    8[COMRAM] int 
  9960 ;;  i               2    6[COMRAM] int 
  9961 ;;  Rx              1   11[COMRAM] unsigned char 
  9962 ;;  dato            1   10[COMRAM] unsigned char 
  9963 ;;  datoIncorrec    1    5[COMRAM] unsigned char 
  9964 ;; Return value:  Size  Location     Type
  9965 ;;                  1    wreg      unsigned char 
  9966 ;; Registers used:
  9967 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9968 ;; Tracked objects:
  9969 ;;		On entry : 0/0
  9970 ;;		On exit  : 0/0
  9971 ;;		Unchanged: 0/0
  9972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9973 ;;      Params:         2       0       0       0       0       0       0       0       0
  9974 ;;      Locals:         7       0       0       0       0       0       0       0       0
  9975 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9976 ;;      Totals:        11       0       0       0       0       0       0       0       0
  9977 ;;Total ram usage:       11 bytes
  9978 ;; Hardware stack levels used:    1
  9979 ;; Hardware stack levels required when called:    2
  9980 ;; This function calls:
  9981 ;;		_UART_read
  9982 ;;		_UART_write
  9983 ;; This function is called by:
  9984 ;;		_setRtc
  9985 ;;		_asignarHorarios
  9986 ;;		_setTiempoRegar
  9987 ;;		_lecturaWifi
  9988 ;;		_regadoRapido
  9989 ;; This function uses a non-reentrant model
  9990 ;;
  9991                           
  9992                           	psect	text56
  9993  000DD0                     __ptext56:
  9994                           	opt callstack 0
  9995  000DD0                     _getValue:
  9996                           	opt callstack 26
  9997  000DD0                     
  9998                           ;main.c: 884:     unsigned char datoIncorrecto = 0;
  9999  000DD0  0E00               	movlw	0
 10000  000DD2  6E06               	movwf	getValue@datoIncorrecto^0,c
 10001                           
 10002                           ;main.c: 885:     unsigned char dato = 0;
 10003  000DD4  0E00               	movlw	0
 10004  000DD6  6E0B               	movwf	getValue@dato^0,c
 10005                           
 10006                           ;main.c: 887:     switch (numCharacters) {
 10007  000DD8  EFC4  F007         	goto	l3946
 10008  000DDC                     l3868:
 10009                           
 10010                           ;main.c: 890:             Rx = UART_read();
 10011  000DDC  ECE4  F015         	call	_UART_read	;wreg free
 10012  000DE0  6E0C               	movwf	getValue@Rx^0,c
 10013  000DE2                     
 10014                           ;main.c: 892:             if (Rx >= 48 && Rx <= 57) {
 10015  000DE2  0E2F               	movlw	47
 10016  000DE4  640C               	cpfsgt	getValue@Rx^0,c
 10017  000DE6  EFF7  F006         	goto	u2941
 10018  000DEA  EFF9  F006         	goto	u2940
 10019  000DEE                     u2941:
 10020  000DEE  EF07  F007         	goto	l3878
 10021  000DF2                     u2940:
 10022  000DF2  0E3A               	movlw	58
 10023  000DF4  600C               	cpfslt	getValue@Rx^0,c
 10024  000DF6  EFFF  F006         	goto	u2951
 10025  000DFA  EF01  F007         	goto	u2950
 10026  000DFE                     u2951:
 10027  000DFE  EF07  F007         	goto	l3878
 10028  000E02                     u2950:
 10029  000E02                     
 10030                           ;main.c: 893:                 Rx -= 48;
 10031  000E02  0E30               	movlw	48
 10032  000E04  5E0C               	subwf	getValue@Rx^0,f,c
 10033  000E06                     
 10034                           ;main.c: 894:                 dato = Rx;
 10035  000E06  C00C  F00B         	movff	getValue@Rx,getValue@dato
 10036                           
 10037                           ;main.c: 895:             } else {
 10038  000E0A  EFDE  F007         	goto	l3948
 10039  000E0E                     l3878:
 10040                           
 10041                           ;main.c: 896:                 UART_write('@');
 10042  000E0E  0E40               	movlw	64
 10043  000E10  EC6F  F018         	call	_UART_write
 10044  000E14                     
 10045                           ;main.c: 897:                 datoIncorrecto = 1;
 10046  000E14  0E01               	movlw	1
 10047  000E16  6E06               	movwf	getValue@datoIncorrecto^0,c
 10048  000E18  EFDE  F007         	goto	l3948
 10049  000E1C                     l3882:
 10050                           
 10051                           ;main.c: 903:             for (int i = 0; i < 2; i++) {
 10052  000E1C  0E00               	movlw	0
 10053  000E1E  6E08               	movwf	(getValue@i+1)^0,c
 10054  000E20  0E00               	movlw	0
 10055  000E22  6E07               	movwf	getValue@i^0,c
 10056  000E24                     l3888:
 10057                           
 10058                           ;main.c: 905:                 Rx = UART_read();
 10059  000E24  ECE4  F015         	call	_UART_read	;wreg free
 10060  000E28  6E0C               	movwf	getValue@Rx^0,c
 10061  000E2A                     
 10062                           ;main.c: 907:                 if (Rx >= 48 && Rx <= 57) {
 10063  000E2A  0E2F               	movlw	47
 10064  000E2C  640C               	cpfsgt	getValue@Rx^0,c
 10065  000E2E  EF1B  F007         	goto	u2961
 10066  000E32  EF1D  F007         	goto	u2960
 10067  000E36                     u2961:
 10068  000E36  EF4B  F007         	goto	l3904
 10069  000E3A                     u2960:
 10070  000E3A  0E3A               	movlw	58
 10071  000E3C  600C               	cpfslt	getValue@Rx^0,c
 10072  000E3E  EF23  F007         	goto	u2971
 10073  000E42  EF25  F007         	goto	u2970
 10074  000E46                     u2971:
 10075  000E46  EF4B  F007         	goto	l3904
 10076  000E4A                     u2970:
 10077  000E4A                     
 10078                           ;main.c: 909:                     Rx -= 48;
 10079  000E4A  0E30               	movlw	48
 10080  000E4C  5E0C               	subwf	getValue@Rx^0,f,c
 10081                           
 10082                           ;main.c: 911:                     switch (i) {
 10083  000E4E  EF35  F007         	goto	l3902
 10084  000E52                     l443:
 10085                           
 10086                           ;main.c: 913:                             dato = Rx;
 10087  000E52  C00C  F00B         	movff	getValue@Rx,getValue@dato
 10088  000E56                     
 10089                           ;main.c: 914:                             dato *= 10;
 10090  000E56  0E0A               	movlw	10
 10091  000E58  020B               	mulwf	getValue@dato^0,c
 10092  000E5A  50F3               	movf	prodl,w,c
 10093  000E5C  6E0B               	movwf	getValue@dato^0,c
 10094                           
 10095                           ;main.c: 915:                             break;
 10096  000E5E  EF52  F007         	goto	l3908
 10097  000E62                     l3898:
 10098                           
 10099                           ;main.c: 918:                             dato += Rx;
 10100  000E62  500C               	movf	getValue@Rx^0,w,c
 10101  000E64  260B               	addwf	getValue@dato^0,f,c
 10102                           
 10103                           ;main.c: 919:                             break;
 10104  000E66  EF52  F007         	goto	l3908
 10105  000E6A                     l3902:
 10106  000E6A  C007  F004         	movff	getValue@i,??_getValue
 10107  000E6E  C008  F005         	movff	getValue@i+1,??_getValue+1
 10108                           
 10109                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10110                           ; Switch size 1, requested type "simple"
 10111                           ; Number of cases is 1, Range of values is 0 to 0
 10112                           ; switch strategies available:
 10113                           ; Name         Instructions Cycles
 10114                           ; simple_byte            4     3 (average)
 10115                           ;	Chosen strategy is simple_byte
 10116  000E72  5005               	movf	(??_getValue+1)^0,w,c
 10117  000E74  0A00               	xorlw	0	; case 0
 10118  000E76  B4D8               	btfsc	status,2,c
 10119  000E78  EF40  F007         	goto	l5090
 10120  000E7C  EF52  F007         	goto	l3908
 10121  000E80                     l5090:
 10122                           
 10123                           ; Switch size 1, requested type "simple"
 10124                           ; Number of cases is 2, Range of values is 0 to 1
 10125                           ; switch strategies available:
 10126                           ; Name         Instructions Cycles
 10127                           ; simple_byte            7     4 (average)
 10128                           ;	Chosen strategy is simple_byte
 10129  000E80  5004               	movf	??_getValue^0,w,c
 10130  000E82  0A00               	xorlw	0	; case 0
 10131  000E84  B4D8               	btfsc	status,2,c
 10132  000E86  EF29  F007         	goto	l443
 10133  000E8A  0A01               	xorlw	1	; case 1
 10134  000E8C  B4D8               	btfsc	status,2,c
 10135  000E8E  EF31  F007         	goto	l3898
 10136  000E92  EF52  F007         	goto	l3908
 10137  000E96                     l3904:
 10138                           
 10139                           ;main.c: 927:                     datoIncorrecto = 1;
 10140  000E96  0E01               	movlw	1
 10141  000E98  6E06               	movwf	getValue@datoIncorrecto^0,c
 10142  000E9A                     
 10143                           ;main.c: 928:                     UART_write('@');
 10144  000E9A  0E40               	movlw	64
 10145  000E9C  EC6F  F018         	call	_UART_write
 10146                           
 10147                           ;main.c: 929:                     break;
 10148  000EA0  EFDE  F007         	goto	l3948
 10149  000EA4                     l3908:
 10150                           
 10151                           ;main.c: 931:             }
 10152  000EA4  4A07               	infsnz	getValue@i^0,f,c
 10153  000EA6  2A08               	incf	(getValue@i+1)^0,f,c
 10154  000EA8  BE08               	btfsc	(getValue@i+1)^0,7,c
 10155  000EAA  EF60  F007         	goto	u2981
 10156  000EAE  5008               	movf	(getValue@i+1)^0,w,c
 10157  000EB0  E109               	bnz	u2980
 10158  000EB2  0E02               	movlw	2
 10159  000EB4  5C07               	subwf	getValue@i^0,w,c
 10160  000EB6  A0D8               	btfss	status,0,c
 10161  000EB8  EF60  F007         	goto	u2981
 10162  000EBC  EF62  F007         	goto	u2980
 10163  000EC0                     u2981:
 10164  000EC0  EF12  F007         	goto	l3888
 10165  000EC4                     u2980:
 10166  000EC4  EFDE  F007         	goto	l3948
 10167  000EC8                     l3912:
 10168                           
 10169                           ;main.c: 935:             for (int i = 0; i < 3; i++) {
 10170  000EC8  0E00               	movlw	0
 10171  000ECA  6E0A               	movwf	(getValue@i_969+1)^0,c
 10172  000ECC  0E00               	movlw	0
 10173  000ECE  6E09               	movwf	getValue@i_969^0,c
 10174  000ED0                     l3918:
 10175                           
 10176                           ;main.c: 937:                 Rx = UART_read();
 10177  000ED0  ECE4  F015         	call	_UART_read	;wreg free
 10178  000ED4  6E0C               	movwf	getValue@Rx^0,c
 10179  000ED6                     
 10180                           ;main.c: 939:                 if (Rx >= 48 && Rx <= 57) {
 10181  000ED6  0E2F               	movlw	47
 10182  000ED8  640C               	cpfsgt	getValue@Rx^0,c
 10183  000EDA  EF71  F007         	goto	u2991
 10184  000EDE  EF73  F007         	goto	u2990
 10185  000EE2                     u2991:
 10186  000EE2  EFAB  F007         	goto	l3936
 10187  000EE6                     u2990:
 10188  000EE6  0E3A               	movlw	58
 10189  000EE8  600C               	cpfslt	getValue@Rx^0,c
 10190  000EEA  EF79  F007         	goto	u3001
 10191  000EEE  EF7B  F007         	goto	u3000
 10192  000EF2                     u3001:
 10193  000EF2  EFAB  F007         	goto	l3936
 10194  000EF6                     u3000:
 10195  000EF6                     
 10196                           ;main.c: 941:                     Rx -= 48;
 10197  000EF6  0E30               	movlw	48
 10198  000EF8  5E0C               	subwf	getValue@Rx^0,f,c
 10199                           
 10200                           ;main.c: 943:                     switch (i) {
 10201  000EFA  EF91  F007         	goto	l3934
 10202  000EFE                     l453:
 10203                           
 10204                           ;main.c: 945:                             dato = Rx;
 10205  000EFE  C00C  F00B         	movff	getValue@Rx,getValue@dato
 10206  000F02                     
 10207                           ;main.c: 946:                             dato *= 100;
 10208  000F02  0E64               	movlw	100
 10209  000F04  020B               	mulwf	getValue@dato^0,c
 10210  000F06  50F3               	movf	prodl,w,c
 10211  000F08  6E0B               	movwf	getValue@dato^0,c
 10212                           
 10213                           ;main.c: 947:                             break;
 10214  000F0A  EFB2  F007         	goto	l3940
 10215  000F0E                     l3928:
 10216                           
 10217                           ;main.c: 950:                             dato += (Rx * 10);
 10218  000F0E  500C               	movf	getValue@Rx^0,w,c
 10219  000F10  0D0A               	mullw	10
 10220  000F12  50F3               	movf	243,w,c
 10221  000F14  260B               	addwf	getValue@dato^0,f,c
 10222                           
 10223                           ;main.c: 951:                             break;
 10224  000F16  EFB2  F007         	goto	l3940
 10225  000F1A                     l3930:
 10226                           
 10227                           ;main.c: 954:                             dato += Rx;
 10228  000F1A  500C               	movf	getValue@Rx^0,w,c
 10229  000F1C  260B               	addwf	getValue@dato^0,f,c
 10230                           
 10231                           ;main.c: 955:                             break;
 10232  000F1E  EFB2  F007         	goto	l3940
 10233  000F22                     l3934:
 10234  000F22  C009  F004         	movff	getValue@i_969,??_getValue
 10235  000F26  C00A  F005         	movff	getValue@i_969+1,??_getValue+1
 10236                           
 10237                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10238                           ; Switch size 1, requested type "simple"
 10239                           ; Number of cases is 1, Range of values is 0 to 0
 10240                           ; switch strategies available:
 10241                           ; Name         Instructions Cycles
 10242                           ; simple_byte            4     3 (average)
 10243                           ;	Chosen strategy is simple_byte
 10244  000F2A  5005               	movf	(??_getValue+1)^0,w,c
 10245  000F2C  0A00               	xorlw	0	; case 0
 10246  000F2E  B4D8               	btfsc	status,2,c
 10247  000F30  EF9C  F007         	goto	l5092
 10248  000F34  EFB2  F007         	goto	l3940
 10249  000F38                     l5092:
 10250                           
 10251                           ; Switch size 1, requested type "simple"
 10252                           ; Number of cases is 3, Range of values is 0 to 2
 10253                           ; switch strategies available:
 10254                           ; Name         Instructions Cycles
 10255                           ; simple_byte           10     6 (average)
 10256                           ;	Chosen strategy is simple_byte
 10257  000F38  5004               	movf	??_getValue^0,w,c
 10258  000F3A  0A00               	xorlw	0	; case 0
 10259  000F3C  B4D8               	btfsc	status,2,c
 10260  000F3E  EF7F  F007         	goto	l453
 10261  000F42  0A01               	xorlw	1	; case 1
 10262  000F44  B4D8               	btfsc	status,2,c
 10263  000F46  EF87  F007         	goto	l3928
 10264  000F4A  0A03               	xorlw	3	; case 2
 10265  000F4C  B4D8               	btfsc	status,2,c
 10266  000F4E  EF8D  F007         	goto	l3930
 10267  000F52  EFB2  F007         	goto	l3940
 10268  000F56                     l3936:
 10269                           
 10270                           ;main.c: 963:                     datoIncorrecto = 1;
 10271  000F56  0E01               	movlw	1
 10272  000F58  6E06               	movwf	getValue@datoIncorrecto^0,c
 10273  000F5A                     
 10274                           ;main.c: 964:                     UART_write('@');
 10275  000F5A  0E40               	movlw	64
 10276  000F5C  EC6F  F018         	call	_UART_write
 10277                           
 10278                           ;main.c: 965:                     break;
 10279  000F60  EFDE  F007         	goto	l3948
 10280  000F64                     l3940:
 10281                           
 10282                           ;main.c: 967:             }
 10283  000F64  4A09               	infsnz	getValue@i_969^0,f,c
 10284  000F66  2A0A               	incf	(getValue@i_969+1)^0,f,c
 10285  000F68  BE0A               	btfsc	(getValue@i_969+1)^0,7,c
 10286  000F6A  EFC0  F007         	goto	u3011
 10287  000F6E  500A               	movf	(getValue@i_969+1)^0,w,c
 10288  000F70  E109               	bnz	u3010
 10289  000F72  0E03               	movlw	3
 10290  000F74  5C09               	subwf	getValue@i_969^0,w,c
 10291  000F76  A0D8               	btfss	status,0,c
 10292  000F78  EFC0  F007         	goto	u3011
 10293  000F7C  EFC2  F007         	goto	u3010
 10294  000F80                     u3011:
 10295  000F80  EF68  F007         	goto	l3918
 10296  000F84                     u3010:
 10297  000F84  EFDE  F007         	goto	l3948
 10298  000F88                     l3946:
 10299  000F88  C002  F004         	movff	getValue@numCharacters,??_getValue
 10300  000F8C  C003  F005         	movff	getValue@numCharacters+1,??_getValue+1
 10301                           
 10302                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10303                           ; Switch size 1, requested type "simple"
 10304                           ; Number of cases is 1, Range of values is 0 to 0
 10305                           ; switch strategies available:
 10306                           ; Name         Instructions Cycles
 10307                           ; simple_byte            4     3 (average)
 10308                           ;	Chosen strategy is simple_byte
 10309  000F90  5005               	movf	(??_getValue+1)^0,w,c
 10310  000F92  0A00               	xorlw	0	; case 0
 10311  000F94  B4D8               	btfsc	status,2,c
 10312  000F96  EFCF  F007         	goto	l5094
 10313  000F9A  EFDE  F007         	goto	l3948
 10314  000F9E                     l5094:
 10315                           
 10316                           ; Switch size 1, requested type "simple"
 10317                           ; Number of cases is 3, Range of values is 1 to 3
 10318                           ; switch strategies available:
 10319                           ; Name         Instructions Cycles
 10320                           ; simple_byte           10     6 (average)
 10321                           ;	Chosen strategy is simple_byte
 10322  000F9E  5004               	movf	??_getValue^0,w,c
 10323  000FA0  0A01               	xorlw	1	; case 1
 10324  000FA2  B4D8               	btfsc	status,2,c
 10325  000FA4  EFEE  F006         	goto	l3868
 10326  000FA8  0A03               	xorlw	3	; case 2
 10327  000FAA  B4D8               	btfsc	status,2,c
 10328  000FAC  EF0E  F007         	goto	l3882
 10329  000FB0  0A01               	xorlw	1	; case 3
 10330  000FB2  B4D8               	btfsc	status,2,c
 10331  000FB4  EF64  F007         	goto	l3912
 10332  000FB8  EFDE  F007         	goto	l3948
 10333  000FBC                     l3948:
 10334                           
 10335                           ;main.c: 976:     if (esperandoDatos || datoIncorrecto) {
 10336  000FBC  0100               	movlb	0	; () banked
 10337  000FBE  5189               	movf	_esperandoDatos& (0+255),w,b
 10338  000FC0  A4D8               	btfss	status,2,c
 10339  000FC2  EFE5  F007         	goto	u3021
 10340  000FC6  EFE7  F007         	goto	u3020
 10341  000FCA                     u3021:
 10342  000FCA  EFEF  F007         	goto	l3952
 10343  000FCE                     u3020:
 10344  000FCE                     
 10345                           ; BSR set to: 0
 10346  000FCE  5006               	movf	getValue@datoIncorrecto^0,w,c
 10347  000FD0  B4D8               	btfsc	status,2,c
 10348  000FD2  EFED  F007         	goto	u3031
 10349  000FD6  EFEF  F007         	goto	u3030
 10350  000FDA                     u3031:
 10351  000FDA  EFF2  F007         	goto	l3958
 10352  000FDE                     u3030:
 10353  000FDE                     l3952:
 10354                           
 10355                           ; BSR set to: 0
 10356                           ;main.c: 979:         return '@';
 10357  000FDE  0E40               	movlw	64
 10358  000FE0  EFF3  F007         	goto	l463
 10359  000FE4                     l3958:
 10360                           
 10361                           ; BSR set to: 0
 10362                           ;main.c: 981:         return dato;
 10363  000FE4  500B               	movf	getValue@dato^0,w,c
 10364  000FE6                     l463:
 10365                           
 10366                           ; BSR set to: 0
 10367  000FE6  0012               	return		;funcret
 10368  000FE8                     __end_of_getValue:
 10369                           	opt callstack 0
 10370                           
 10371 ;; *************** function _UART_write *****************
 10372 ;; Defined at:
 10373 ;;		line 52 in file "./UART.h"
 10374 ;; Parameters:    Size  Location     Type
 10375 ;;  dato            1    wreg     unsigned char 
 10376 ;; Auto vars:     Size  Location     Type
 10377 ;;  dato            1    0[COMRAM] unsigned char 
 10378 ;; Return value:  Size  Location     Type
 10379 ;;                  1    wreg      void 
 10380 ;; Registers used:
 10381 ;;		wreg
 10382 ;; Tracked objects:
 10383 ;;		On entry : 0/0
 10384 ;;		On exit  : 0/0
 10385 ;;		Unchanged: 0/0
 10386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10387 ;;      Params:         0       0       0       0       0       0       0       0       0
 10388 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10389 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10390 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10391 ;;Total ram usage:        1 bytes
 10392 ;; Hardware stack levels used:    1
 10393 ;; Hardware stack levels required when called:    1
 10394 ;; This function calls:
 10395 ;;		Nothing
 10396 ;; This function is called by:
 10397 ;;		_UART_printf
 10398 ;;		_fijaDiaRtc
 10399 ;;		_leeHorariosMemoria
 10400 ;;		_fijaHoraRtc
 10401 ;;		_asignarHorarios
 10402 ;;		_setTiempoRegar
 10403 ;;		_lecturaWifi
 10404 ;;		_dameDatosSistema
 10405 ;;		_mostrarDatosSensores
 10406 ;;		_mostrarDatosSensoresWIFI
 10407 ;;		_getValue
 10408 ;;		_regadoRapido
 10409 ;; This function uses a non-reentrant model
 10410 ;;
 10411                           
 10412                           	psect	text57
 10413  0030DE                     __ptext57:
 10414                           	opt callstack 0
 10415  0030DE                     _UART_write:
 10416                           	opt callstack 26
 10417                           
 10418                           ; BSR set to: 0
 10419                           ;incstack = 0
 10420                           ;UART_write@dato stored from wreg
 10421  0030DE  6E01               	movwf	UART_write@dato^0,c
 10422  0030E0                     
 10423                           ;./UART.h: 53:     TXREG = dato;
 10424  0030E0  C001  FFAD         	movff	UART_write@dato,4013	;volatile
 10425  0030E4                     l138:
 10426  0030E4  A2AC               	btfss	172,1,c	;volatile
 10427  0030E6  EF77  F018         	goto	u2591
 10428  0030EA  EF79  F018         	goto	u2590
 10429  0030EE                     u2591:
 10430  0030EE  EF72  F018         	goto	l138
 10431  0030F2                     u2590:
 10432  0030F2  0012               	return		;funcret
 10433  0030F4                     __end_of_UART_write:
 10434                           	opt callstack 0
 10435                           
 10436 ;; *************** function _UART_read *****************
 10437 ;; Defined at:
 10438 ;;		line 34 in file "./UART.h"
 10439 ;; Parameters:    Size  Location     Type
 10440 ;;		None
 10441 ;; Auto vars:     Size  Location     Type
 10442 ;;		None
 10443 ;; Return value:  Size  Location     Type
 10444 ;;                  1    wreg      unsigned char 
 10445 ;; Registers used:
 10446 ;;		wreg, status,2
 10447 ;; Tracked objects:
 10448 ;;		On entry : 0/0
 10449 ;;		On exit  : 0/0
 10450 ;;		Unchanged: 0/0
 10451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10452 ;;      Params:         0       0       0       0       0       0       0       0       0
 10453 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10454 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10455 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10456 ;;Total ram usage:        0 bytes
 10457 ;; Hardware stack levels used:    1
 10458 ;; Hardware stack levels required when called:    1
 10459 ;; This function calls:
 10460 ;;		Nothing
 10461 ;; This function is called by:
 10462 ;;		_lecturaWifi
 10463 ;;		_getValue
 10464 ;; This function uses a non-reentrant model
 10465 ;;
 10466                           
 10467                           	psect	text58
 10468  002BC8                     __ptext58:
 10469                           	opt callstack 0
 10470  002BC8                     _UART_read:
 10471                           	opt callstack 26
 10472  002BC8                     
 10473                           ;./UART.h: 36:     TMR0 = VALOR_TIMER0UART;
 10474  002BC8  0E67               	movlw	103
 10475  002BCA  6ED7               	movwf	215,c	;volatile
 10476  002BCC  0E69               	movlw	105
 10477  002BCE  6ED6               	movwf	214,c	;volatile
 10478                           
 10479                           ;./UART.h: 37:     esperaDatoConcluida = 0;
 10480  002BD0  0E00               	movlw	0
 10481  002BD2  0100               	movlb	0	; () banked
 10482  002BD4  6F8A               	movwf	_esperaDatoConcluida& (0+255),b
 10483                           
 10484                           ;./UART.h: 38:     esperandoDatos = 1;
 10485  002BD6  0E01               	movlw	1
 10486  002BD8  6F89               	movwf	_esperandoDatos& (0+255),b
 10487                           
 10488                           ;./UART.h: 39:     byteUart = 0;
 10489  002BDA  0E00               	movlw	0
 10490  002BDC  6F8B               	movwf	_byteUart& (0+255),b
 10491                           
 10492                           ;./UART.h: 40:     tiempoInactividadTrans = 0;
 10493  002BDE  0E00               	movlw	0
 10494  002BE0  6F8C               	movwf	_tiempoInactividadTrans& (0+255),b
 10495  002BE2                     l129:
 10496                           
 10497                           ; BSR set to: 0
 10498  002BE2  BA9E               	btfsc	158,5,c	;volatile
 10499  002BE4  EFF6  F015         	goto	u2561
 10500  002BE8  EFF8  F015         	goto	u2560
 10501  002BEC                     u2561:
 10502  002BEC  EF00  F016         	goto	l3578
 10503  002BF0                     u2560:
 10504  002BF0                     
 10505                           ; BSR set to: 0
 10506  002BF0  518A               	movf	_esperaDatoConcluida& (0+255),w,b
 10507  002BF2  B4D8               	btfsc	status,2,c
 10508  002BF4  EFFE  F015         	goto	u2571
 10509  002BF8  EF00  F016         	goto	u2570
 10510  002BFC                     u2571:
 10511  002BFC  EFF1  F015         	goto	l129
 10512  002C00                     u2570:
 10513  002C00                     l3578:
 10514                           
 10515                           ; BSR set to: 0
 10516                           ;./UART.h: 44:     if (!esperaDatoConcluida) {
 10517  002C00  518A               	movf	_esperaDatoConcluida& (0+255),w,b
 10518  002C02  A4D8               	btfss	status,2,c
 10519  002C04  EF06  F016         	goto	u2581
 10520  002C08  EF08  F016         	goto	u2580
 10521  002C0C                     u2581:
 10522  002C0C  EF0C  F016         	goto	l134
 10523  002C10                     u2580:
 10524  002C10                     
 10525                           ; BSR set to: 0
 10526                           ;./UART.h: 45:         byteUart = RCREG;
 10527  002C10  CFAE F08B          	movff	4014,_byteUart	;volatile
 10528  002C14                     
 10529                           ; BSR set to: 0
 10530                           ;./UART.h: 46:         esperandoDatos = 0;
 10531  002C14  0E00               	movlw	0
 10532  002C16  6F89               	movwf	_esperandoDatos& (0+255),b
 10533  002C18                     l134:
 10534                           
 10535                           ; BSR set to: 0
 10536                           ;./UART.h: 49:     return byteUart;
 10537  002C18  518B               	movf	_byteUart& (0+255),w,b
 10538  002C1A                     
 10539                           ; BSR set to: 0
 10540  002C1A  0012               	return		;funcret
 10541  002C1C                     __end_of_UART_read:
 10542                           	opt callstack 0
 10543                           
 10544 ;; *************** function _escribeHorariosMemoria *****************
 10545 ;; Defined at:
 10546 ;;		line 254 in file "main.c"
 10547 ;; Parameters:    Size  Location     Type
 10548 ;;		None
 10549 ;; Auto vars:     Size  Location     Type
 10550 ;;  j               2   12[COMRAM] int 
 10551 ;;  i               2   16[COMRAM] int 
 10552 ;;  contMemoria     2   14[COMRAM] int 
 10553 ;; Return value:  Size  Location     Type
 10554 ;;                  1    wreg      void 
 10555 ;; Registers used:
 10556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10557 ;; Tracked objects:
 10558 ;;		On entry : 0/0
 10559 ;;		On exit  : 0/0
 10560 ;;		Unchanged: 0/0
 10561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10562 ;;      Params:         0       0       0       0       0       0       0       0       0
 10563 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10564 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10565 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10566 ;;Total ram usage:        8 bytes
 10567 ;; Hardware stack levels used:    1
 10568 ;; Hardware stack levels required when called:    4
 10569 ;; This function calls:
 10570 ;;		___wmul
 10571 ;;		_escribe_eeprom
 10572 ;; This function is called by:
 10573 ;;		_asignarHorarios
 10574 ;;		_setTiempoRegar
 10575 ;; This function uses a non-reentrant model
 10576 ;;
 10577                           
 10578                           	psect	text59
 10579  0018C2                     __ptext59:
 10580                           	opt callstack 0
 10581  0018C2                     _escribeHorariosMemoria:
 10582                           	opt callstack 24
 10583  0018C2                     
 10584                           ;main.c: 256:     int contMemoria = 0;
 10585  0018C2  0E00               	movlw	0
 10586  0018C4  6E10               	movwf	(escribeHorariosMemoria@contMemoria+1)^0,c
 10587  0018C6  0E00               	movlw	0
 10588  0018C8  6E0F               	movwf	escribeHorariosMemoria@contMemoria^0,c
 10589  0018CA                     
 10590                           ;main.c: 258:     escribe_eeprom(contMemoria++, 'T');
 10591  0018CA  0E00               	movlw	0
 10592  0018CC  6E08               	movwf	(escribe_eeprom@direccion+1)^0,c
 10593  0018CE  0E00               	movlw	0
 10594  0018D0  6E07               	movwf	escribe_eeprom@direccion^0,c
 10595  0018D2  0E54               	movlw	84
 10596  0018D4  6E09               	movwf	escribe_eeprom@dato^0,c
 10597  0018D6  ECBB  F017         	call	_escribe_eeprom	;wreg free
 10598  0018DA  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 10599  0018DC  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 10600  0018DE                     
 10601                           ;main.c: 261:     for (int i = 0; i < 24; i++) {
 10602  0018DE  0E00               	movlw	0
 10603  0018E0  6E12               	movwf	(escribeHorariosMemoria@i+1)^0,c
 10604  0018E2  0E00               	movlw	0
 10605  0018E4  6E11               	movwf	escribeHorariosMemoria@i^0,c
 10606  0018E6                     l4178:
 10607                           
 10608                           ;main.c: 262:         escribe_eeprom(contMemoria++, horarios[i].hora);
 10609  0018E6  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 10610  0018EA  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 10611  0018EE  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 10612  0018F2  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 10613  0018F6  0E00               	movlw	0
 10614  0018F8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10615  0018FA  0E0C               	movlw	12
 10616  0018FC  6E03               	movwf	___wmul@multiplicand^0,c
 10617  0018FE  EC11  F018         	call	___wmul	;wreg free
 10618  001902  0E32               	movlw	low _horarios
 10619  001904  2401               	addwf	?___wmul^0,w,c
 10620  001906  6ED9               	movwf	fsr2l,c
 10621  001908  0E01               	movlw	high _horarios
 10622  00190A  2002               	addwfc	(?___wmul+1)^0,w,c
 10623  00190C  6EDA               	movwf	fsr2h,c
 10624  00190E  50DF               	movf	indf2,w,c
 10625  001910  6E09               	movwf	escribe_eeprom@dato^0,c
 10626  001912  ECBB  F017         	call	_escribe_eeprom	;wreg free
 10627  001916  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 10628  001918  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 10629  00191A                     
 10630                           ;main.c: 264:         for (int j = 0; j < 7; j++) {
 10631  00191A  0E00               	movlw	0
 10632  00191C  6E0E               	movwf	(escribeHorariosMemoria@j+1)^0,c
 10633  00191E  0E00               	movlw	0
 10634  001920  6E0D               	movwf	escribeHorariosMemoria@j^0,c
 10635  001922                     l4188:
 10636                           
 10637                           ;main.c: 265:             escribe_eeprom(contMemoria++, horarios[i].dias[j]);
 10638  001922  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 10639  001926  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 10640  00192A  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 10641  00192E  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 10642  001932  0E00               	movlw	0
 10643  001934  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10644  001936  0E0C               	movlw	12
 10645  001938  6E03               	movwf	___wmul@multiplicand^0,c
 10646  00193A  EC11  F018         	call	___wmul	;wreg free
 10647  00193E  0E32               	movlw	low _horarios
 10648  001940  6E0B               	movwf	??_escribeHorariosMemoria^0,c
 10649  001942  0E01               	movlw	high _horarios
 10650  001944  6E0C               	movwf	(??_escribeHorariosMemoria+1)^0,c
 10651  001946  0E01               	movlw	1
 10652  001948  260B               	addwf	??_escribeHorariosMemoria^0,f,c
 10653  00194A  0E00               	movlw	0
 10654  00194C  220C               	addwfc	(??_escribeHorariosMemoria+1)^0,f,c
 10655  00194E  5001               	movf	?___wmul^0,w,c
 10656  001950  260B               	addwf	??_escribeHorariosMemoria^0,f,c
 10657  001952  5002               	movf	(?___wmul+1)^0,w,c
 10658  001954  220C               	addwfc	(??_escribeHorariosMemoria+1)^0,f,c
 10659  001956  500D               	movf	escribeHorariosMemoria@j^0,w,c
 10660  001958  240B               	addwf	??_escribeHorariosMemoria^0,w,c
 10661  00195A  6ED9               	movwf	fsr2l,c
 10662  00195C  500E               	movf	(escribeHorariosMemoria@j+1)^0,w,c
 10663  00195E  200C               	addwfc	(??_escribeHorariosMemoria+1)^0,w,c
 10664  001960  6EDA               	movwf	fsr2h,c
 10665  001962  50DF               	movf	indf2,w,c
 10666  001964  6E09               	movwf	escribe_eeprom@dato^0,c
 10667  001966  ECBB  F017         	call	_escribe_eeprom	;wreg free
 10668  00196A  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 10669  00196C  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 10670  00196E                     
 10671                           ;main.c: 266:         }
 10672  00196E  4A0D               	infsnz	escribeHorariosMemoria@j^0,f,c
 10673  001970  2A0E               	incf	(escribeHorariosMemoria@j+1)^0,f,c
 10674  001972  BE0E               	btfsc	(escribeHorariosMemoria@j+1)^0,7,c
 10675  001974  EFC5  F00C         	goto	u3261
 10676  001978  500E               	movf	(escribeHorariosMemoria@j+1)^0,w,c
 10677  00197A  E109               	bnz	u3260
 10678  00197C  0E07               	movlw	7
 10679  00197E  5C0D               	subwf	escribeHorariosMemoria@j^0,w,c
 10680  001980  A0D8               	btfss	status,0,c
 10681  001982  EFC5  F00C         	goto	u3261
 10682  001986  EFC7  F00C         	goto	u3260
 10683  00198A                     u3261:
 10684  00198A  EF91  F00C         	goto	l4188
 10685  00198E                     u3260:
 10686  00198E                     
 10687                           ;main.c: 268:         escribe_eeprom(contMemoria++, horarios[i].regar);
 10688  00198E  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 10689  001992  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 10690  001996  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 10691  00199A  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 10692  00199E  0E00               	movlw	0
 10693  0019A0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10694  0019A2  0E0C               	movlw	12
 10695  0019A4  6E03               	movwf	___wmul@multiplicand^0,c
 10696  0019A6  EC11  F018         	call	___wmul	;wreg free
 10697  0019AA  0E3B               	movlw	low (_horarios+9)
 10698  0019AC  2401               	addwf	?___wmul^0,w,c
 10699  0019AE  6ED9               	movwf	fsr2l,c
 10700  0019B0  0E01               	movlw	high (_horarios+9)
 10701  0019B2  2002               	addwfc	(?___wmul+1)^0,w,c
 10702  0019B4  6EDA               	movwf	fsr2h,c
 10703  0019B6  50DF               	movf	indf2,w,c
 10704  0019B8  6E09               	movwf	escribe_eeprom@dato^0,c
 10705  0019BA  ECBB  F017         	call	_escribe_eeprom	;wreg free
 10706  0019BE  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 10707  0019C0  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 10708  0019C2                     
 10709                           ;main.c: 269:         escribe_eeprom(contMemoria++, horarios[i].tiempoRegar);
 10710  0019C2  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 10711  0019C6  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 10712  0019CA  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 10713  0019CE  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 10714  0019D2  0E00               	movlw	0
 10715  0019D4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10716  0019D6  0E0C               	movlw	12
 10717  0019D8  6E03               	movwf	___wmul@multiplicand^0,c
 10718  0019DA  EC11  F018         	call	___wmul	;wreg free
 10719  0019DE  0E3D               	movlw	low (_horarios+11)
 10720  0019E0  2401               	addwf	?___wmul^0,w,c
 10721  0019E2  6ED9               	movwf	fsr2l,c
 10722  0019E4  0E01               	movlw	high (_horarios+11)
 10723  0019E6  2002               	addwfc	(?___wmul+1)^0,w,c
 10724  0019E8  6EDA               	movwf	fsr2h,c
 10725  0019EA  50DF               	movf	indf2,w,c
 10726  0019EC  6E09               	movwf	escribe_eeprom@dato^0,c
 10727  0019EE  ECBB  F017         	call	_escribe_eeprom	;wreg free
 10728  0019F2  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 10729  0019F4  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 10730                           
 10731                           ;main.c: 270:     }
 10732  0019F6  4A11               	infsnz	escribeHorariosMemoria@i^0,f,c
 10733  0019F8  2A12               	incf	(escribeHorariosMemoria@i+1)^0,f,c
 10734  0019FA  BE12               	btfsc	(escribeHorariosMemoria@i+1)^0,7,c
 10735  0019FC  EF09  F00D         	goto	u3271
 10736  001A00  5012               	movf	(escribeHorariosMemoria@i+1)^0,w,c
 10737  001A02  E109               	bnz	u3270
 10738  001A04  0E18               	movlw	24
 10739  001A06  5C11               	subwf	escribeHorariosMemoria@i^0,w,c
 10740  001A08  A0D8               	btfss	status,0,c
 10741  001A0A  EF09  F00D         	goto	u3271
 10742  001A0E  EF0B  F00D         	goto	u3270
 10743  001A12                     u3271:
 10744  001A12  EF73  F00C         	goto	l4178
 10745  001A16                     u3270:
 10746  001A16  0012               	return		;funcret
 10747  001A18                     __end_of_escribeHorariosMemoria:
 10748                           	opt callstack 0
 10749                           
 10750 ;; *************** function _escribe_eeprom *****************
 10751 ;; Defined at:
 10752 ;;		line 225 in file "main.c"
 10753 ;; Parameters:    Size  Location     Type
 10754 ;;  direccion       2    6[COMRAM] unsigned short 
 10755 ;;  dato            1    8[COMRAM] unsigned char 
 10756 ;; Auto vars:     Size  Location     Type
 10757 ;;		None
 10758 ;; Return value:  Size  Location     Type
 10759 ;;                  1    wreg      void 
 10760 ;; Registers used:
 10761 ;;		wreg, status,2, status,0, cstack
 10762 ;; Tracked objects:
 10763 ;;		On entry : 0/0
 10764 ;;		On exit  : 0/0
 10765 ;;		Unchanged: 0/0
 10766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10767 ;;      Params:         3       0       0       0       0       0       0       0       0
 10768 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10769 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10770 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10771 ;;Total ram usage:        4 bytes
 10772 ;; Hardware stack levels used:    1
 10773 ;; Hardware stack levels required when called:    3
 10774 ;; This function calls:
 10775 ;;		_i2c_detener
 10776 ;;		_i2c_envia_dato
 10777 ;;		_i2c_inicia_com
 10778 ;; This function is called by:
 10779 ;;		_escribeHorariosMemoria
 10780 ;; This function uses a non-reentrant model
 10781 ;;
 10782                           
 10783                           	psect	text60
 10784  002F76                     __ptext60:
 10785                           	opt callstack 0
 10786  002F76                     _escribe_eeprom:
 10787                           	opt callstack 24
 10788  002F76                     
 10789                           ;main.c: 226:     i2c_inicia_com();
 10790  002F76  ECA7  F018         	call	_i2c_inicia_com	;wreg free
 10791                           
 10792                           ;main.c: 227:     i2c_envia_dato(0xAE);
 10793  002F7A  0EAE               	movlw	174
 10794  002F7C  EC8D  F018         	call	_i2c_envia_dato
 10795                           
 10796                           ;main.c: 228:     i2c_envia_dato(direccion >> 8);
 10797  002F80  5008               	movf	(escribe_eeprom@direccion+1)^0,w,c
 10798  002F82  EC8D  F018         	call	_i2c_envia_dato
 10799                           
 10800                           ;main.c: 230:     i2c_envia_dato(direccion);
 10801  002F86  5007               	movf	escribe_eeprom@direccion^0,w,c
 10802  002F88  EC8D  F018         	call	_i2c_envia_dato
 10803                           
 10804                           ;main.c: 232:     i2c_envia_dato(dato);
 10805  002F8C  5009               	movf	escribe_eeprom@dato^0,w,c
 10806  002F8E  EC8D  F018         	call	_i2c_envia_dato
 10807                           
 10808                           ;main.c: 233:     i2c_detener();
 10809  002F92  ECAB  F018         	call	_i2c_detener	;wreg free
 10810  002F96                     
 10811                           ;main.c: 234:     _delay((unsigned long)((10)*(4000000/4000.0)));
 10812  002F96  0E0D               	movlw	13
 10813  002F98  6E0A               	movwf	??_escribe_eeprom^0,c
 10814  002F9A  0EFC               	movlw	252
 10815  002F9C                     u3967:
 10816  002F9C  2EE8               	decfsz	wreg,f,c
 10817  002F9E  D7FE               	bra	u3967
 10818  002FA0  2E0A               	decfsz	??_escribe_eeprom^0,f,c
 10819  002FA2  D7FC               	bra	u3967
 10820  002FA4  0012               	return		;funcret
 10821  002FA6                     __end_of_escribe_eeprom:
 10822                           	opt callstack 0
 10823                           
 10824 ;; *************** function _i2c_inicia_com *****************
 10825 ;; Defined at:
 10826 ;;		line 28 in file "./I2C.h"
 10827 ;; Parameters:    Size  Location     Type
 10828 ;;		None
 10829 ;; Auto vars:     Size  Location     Type
 10830 ;;		None
 10831 ;; Return value:  Size  Location     Type
 10832 ;;                  1    wreg      void 
 10833 ;; Registers used:
 10834 ;;		wreg, status,2, status,0, cstack
 10835 ;; Tracked objects:
 10836 ;;		On entry : 0/0
 10837 ;;		On exit  : 0/0
 10838 ;;		Unchanged: 0/0
 10839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10840 ;;      Params:         0       0       0       0       0       0       0       0       0
 10841 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10842 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10843 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10844 ;;Total ram usage:        0 bytes
 10845 ;; Hardware stack levels used:    1
 10846 ;; Hardware stack levels required when called:    2
 10847 ;; This function calls:
 10848 ;;		_i2c_espera
 10849 ;; This function is called by:
 10850 ;;		_escribe_rtc
 10851 ;;		_leer_rtc
 10852 ;;		_escribe_eeprom
 10853 ;;		_leer_eeprom
 10854 ;; This function uses a non-reentrant model
 10855 ;;
 10856                           
 10857                           	psect	text61
 10858  00314E                     __ptext61:
 10859                           	opt callstack 0
 10860  00314E                     _i2c_inicia_com:
 10861                           	opt callstack 25
 10862  00314E                     
 10863                           ;./I2C.h: 29:     i2c_espera();
 10864  00314E  ECFE  F017         	call	_i2c_espera	;wreg free
 10865  003152                     
 10866                           ;./I2C.h: 30:     SSPCON2bits.SEN = 1;
 10867  003152  80C5               	bsf	197,0,c	;volatile
 10868  003154  0012               	return		;funcret
 10869  003156                     __end_of_i2c_inicia_com:
 10870                           	opt callstack 0
 10871                           
 10872 ;; *************** function _i2c_envia_dato *****************
 10873 ;; Defined at:
 10874 ;;		line 57 in file "./I2C.h"
 10875 ;; Parameters:    Size  Location     Type
 10876 ;;  dato            1    wreg     unsigned char 
 10877 ;; Auto vars:     Size  Location     Type
 10878 ;;  dato            1    1[COMRAM] unsigned char 
 10879 ;; Return value:  Size  Location     Type
 10880 ;;                  1    wreg      unsigned char 
 10881 ;; Registers used:
 10882 ;;		wreg, status,2, status,0, cstack
 10883 ;; Tracked objects:
 10884 ;;		On entry : 0/0
 10885 ;;		On exit  : 0/0
 10886 ;;		Unchanged: 0/0
 10887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10888 ;;      Params:         0       0       0       0       0       0       0       0       0
 10889 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10890 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10891 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10892 ;;Total ram usage:        1 bytes
 10893 ;; Hardware stack levels used:    1
 10894 ;; Hardware stack levels required when called:    2
 10895 ;; This function calls:
 10896 ;;		_i2c_espera
 10897 ;; This function is called by:
 10898 ;;		_escribe_rtc
 10899 ;;		_leer_rtc
 10900 ;;		_escribe_eeprom
 10901 ;;		_leer_eeprom
 10902 ;; This function uses a non-reentrant model
 10903 ;;
 10904                           
 10905                           	psect	text62
 10906  00311A                     __ptext62:
 10907                           	opt callstack 0
 10908  00311A                     _i2c_envia_dato:
 10909                           	opt callstack 25
 10910                           
 10911                           ;incstack = 0
 10912                           ;i2c_envia_dato@dato stored from wreg
 10913  00311A  6E02               	movwf	i2c_envia_dato@dato^0,c
 10914  00311C                     
 10915                           ;./I2C.h: 58:     i2c_espera();
 10916  00311C  ECFE  F017         	call	_i2c_espera	;wreg free
 10917  003120                     
 10918                           ;./I2C.h: 59:     SSPBUF = dato;
 10919  003120  C002  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
 10920  003124  0012               	return		;funcret
 10921  003126                     __end_of_i2c_envia_dato:
 10922                           	opt callstack 0
 10923                           
 10924 ;; *************** function _i2c_detener *****************
 10925 ;; Defined at:
 10926 ;;		line 46 in file "./I2C.h"
 10927 ;; Parameters:    Size  Location     Type
 10928 ;;		None
 10929 ;; Auto vars:     Size  Location     Type
 10930 ;;		None
 10931 ;; Return value:  Size  Location     Type
 10932 ;;                  1    wreg      void 
 10933 ;; Registers used:
 10934 ;;		wreg, status,2, status,0, cstack
 10935 ;; Tracked objects:
 10936 ;;		On entry : 0/0
 10937 ;;		On exit  : 0/0
 10938 ;;		Unchanged: 0/0
 10939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10940 ;;      Params:         0       0       0       0       0       0       0       0       0
 10941 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10942 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10943 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10944 ;;Total ram usage:        0 bytes
 10945 ;; Hardware stack levels used:    1
 10946 ;; Hardware stack levels required when called:    2
 10947 ;; This function calls:
 10948 ;;		_i2c_espera
 10949 ;; This function is called by:
 10950 ;;		_escribe_rtc
 10951 ;;		_leer_rtc
 10952 ;;		_escribe_eeprom
 10953 ;;		_leer_eeprom
 10954 ;; This function uses a non-reentrant model
 10955 ;;
 10956                           
 10957                           	psect	text63
 10958  003156                     __ptext63:
 10959                           	opt callstack 0
 10960  003156                     _i2c_detener:
 10961                           	opt callstack 25
 10962  003156                     
 10963                           ;./I2C.h: 47:     i2c_espera();
 10964  003156  ECFE  F017         	call	_i2c_espera	;wreg free
 10965  00315A                     
 10966                           ;./I2C.h: 48:     SSPCON2bits.PEN = 1;
 10967  00315A  84C5               	bsf	197,2,c	;volatile
 10968  00315C  0012               	return		;funcret
 10969  00315E                     __end_of_i2c_detener:
 10970                           	opt callstack 0
 10971                           
 10972 ;; *************** function _i2c_espera *****************
 10973 ;; Defined at:
 10974 ;;		line 20 in file "./I2C.h"
 10975 ;; Parameters:    Size  Location     Type
 10976 ;;		None
 10977 ;; Auto vars:     Size  Location     Type
 10978 ;;		None
 10979 ;; Return value:  Size  Location     Type
 10980 ;;                  1    wreg      void 
 10981 ;; Registers used:
 10982 ;;		wreg, status,2, status,0
 10983 ;; Tracked objects:
 10984 ;;		On entry : 0/0
 10985 ;;		On exit  : 0/0
 10986 ;;		Unchanged: 0/0
 10987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10988 ;;      Params:         0       0       0       0       0       0       0       0       0
 10989 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10990 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10991 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10992 ;;Total ram usage:        1 bytes
 10993 ;; Hardware stack levels used:    1
 10994 ;; Hardware stack levels required when called:    1
 10995 ;; This function calls:
 10996 ;;		Nothing
 10997 ;; This function is called by:
 10998 ;;		_i2c_inicia_com
 10999 ;;		_i2c_reinicia_com
 11000 ;;		_i2c_detener
 11001 ;;		_i2c_envia_dato
 11002 ;;		_i2c_recibe_dato
 11003 ;; This function uses a non-reentrant model
 11004 ;;
 11005                           
 11006                           	psect	text64
 11007  002FFC                     __ptext64:
 11008                           	opt callstack 0
 11009  002FFC                     _i2c_espera:
 11010                           	opt callstack 25
 11011  002FFC                     l3394:
 11012  002FFC  CFC5 F001          	movff	4037,??_i2c_espera	;volatile
 11013  003000  0E1F               	movlw	31
 11014  003002  1601               	andwf	??_i2c_espera^0,f,c
 11015  003004  A4D8               	btfss	status,2,c
 11016  003006  EF07  F018         	goto	u2221
 11017  00300A  EF09  F018         	goto	u2220
 11018  00300E                     u2221:
 11019  00300E  EFFE  F017         	goto	l3394
 11020  003012                     u2220:
 11021  003012  B4C7               	btfsc	199,2,c	;volatile
 11022  003014  EF0E  F018         	goto	u2231
 11023  003018  EF10  F018         	goto	u2230
 11024  00301C                     u2231:
 11025  00301C  EFFE  F017         	goto	l3394
 11026  003020                     u2230:
 11027  003020  0012               	return		;funcret
 11028  003022                     __end_of_i2c_espera:
 11029                           	opt callstack 0
 11030                           
 11031 ;; *************** function _inicializarObjetos *****************
 11032 ;; Defined at:
 11033 ;;		line 164 in file "main.c"
 11034 ;; Parameters:    Size  Location     Type
 11035 ;;		None
 11036 ;; Auto vars:     Size  Location     Type
 11037 ;;  j               2    8[COMRAM] int 
 11038 ;;  i               2   10[COMRAM] int 
 11039 ;;  i               2   12[COMRAM] int 
 11040 ;; Return value:  Size  Location     Type
 11041 ;;                  1    wreg      void 
 11042 ;; Registers used:
 11043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11044 ;; Tracked objects:
 11045 ;;		On entry : 0/0
 11046 ;;		On exit  : 0/0
 11047 ;;		Unchanged: 0/0
 11048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11049 ;;      Params:         0       0       0       0       0       0       0       0       0
 11050 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11051 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11052 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11053 ;;Total ram usage:        8 bytes
 11054 ;; Hardware stack levels used:    1
 11055 ;; Hardware stack levels required when called:    2
 11056 ;; This function calls:
 11057 ;;		___wmul
 11058 ;; This function is called by:
 11059 ;;		_main
 11060 ;; This function uses a non-reentrant model
 11061 ;;
 11062                           
 11063                           	psect	text65
 11064  0015F4                     __ptext65:
 11065                           	opt callstack 0
 11066  0015F4                     _inicializarObjetos:
 11067                           	opt callstack 28
 11068  0015F4                     
 11069                           ;main.c: 166:     for (int i = 0; i < 24; i++) {
 11070  0015F4  0E00               	movlw	0
 11071  0015F6  6E0E               	movwf	(inicializarObjetos@i+1)^0,c
 11072  0015F8  0E00               	movlw	0
 11073  0015FA  6E0D               	movwf	inicializarObjetos@i^0,c
 11074  0015FC                     l4670:
 11075                           
 11076                           ;main.c: 167:         horarios[i].hora = i;
 11077  0015FC  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 11078  001600  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 11079  001604  0E00               	movlw	0
 11080  001606  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11081  001608  0E0C               	movlw	12
 11082  00160A  6E03               	movwf	___wmul@multiplicand^0,c
 11083  00160C  EC11  F018         	call	___wmul	;wreg free
 11084  001610  0E32               	movlw	low _horarios
 11085  001612  2401               	addwf	?___wmul^0,w,c
 11086  001614  6ED9               	movwf	fsr2l,c
 11087  001616  0E01               	movlw	high _horarios
 11088  001618  2002               	addwfc	(?___wmul+1)^0,w,c
 11089  00161A  6EDA               	movwf	fsr2h,c
 11090  00161C  C00D  FFDF         	movff	inicializarObjetos@i,indf2
 11091                           
 11092                           ;main.c: 168:         horarios[i].regar = 0;
 11093  001620  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 11094  001624  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 11095  001628  0E00               	movlw	0
 11096  00162A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11097  00162C  0E0C               	movlw	12
 11098  00162E  6E03               	movwf	___wmul@multiplicand^0,c
 11099  001630  EC11  F018         	call	___wmul	;wreg free
 11100  001634  0E3B               	movlw	low (_horarios+9)
 11101  001636  2401               	addwf	?___wmul^0,w,c
 11102  001638  6ED9               	movwf	fsr2l,c
 11103  00163A  0E01               	movlw	high (_horarios+9)
 11104  00163C  2002               	addwfc	(?___wmul+1)^0,w,c
 11105  00163E  6EDA               	movwf	fsr2h,c
 11106  001640  0E00               	movlw	0
 11107  001642  6EDF               	movwf	indf2,c
 11108                           
 11109                           ;main.c: 169:         horarios[i].regado = 0;
 11110  001644  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 11111  001648  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 11112  00164C  0E00               	movlw	0
 11113  00164E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11114  001650  0E0C               	movlw	12
 11115  001652  6E03               	movwf	___wmul@multiplicand^0,c
 11116  001654  EC11  F018         	call	___wmul	;wreg free
 11117  001658  0E3C               	movlw	low (_horarios+10)
 11118  00165A  2401               	addwf	?___wmul^0,w,c
 11119  00165C  6ED9               	movwf	fsr2l,c
 11120  00165E  0E01               	movlw	high (_horarios+10)
 11121  001660  2002               	addwfc	(?___wmul+1)^0,w,c
 11122  001662  6EDA               	movwf	fsr2h,c
 11123  001664  0E00               	movlw	0
 11124  001666  6EDF               	movwf	indf2,c
 11125                           
 11126                           ;main.c: 170:         horarios[i].tiempoRegar = 15;
 11127  001668  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 11128  00166C  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 11129  001670  0E00               	movlw	0
 11130  001672  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11131  001674  0E0C               	movlw	12
 11132  001676  6E03               	movwf	___wmul@multiplicand^0,c
 11133  001678  EC11  F018         	call	___wmul	;wreg free
 11134  00167C  0E3D               	movlw	low (_horarios+11)
 11135  00167E  2401               	addwf	?___wmul^0,w,c
 11136  001680  6ED9               	movwf	fsr2l,c
 11137  001682  0E01               	movlw	high (_horarios+11)
 11138  001684  2002               	addwfc	(?___wmul+1)^0,w,c
 11139  001686  6EDA               	movwf	fsr2h,c
 11140  001688  0E0F               	movlw	15
 11141  00168A  6EDF               	movwf	indf2,c
 11142  00168C                     
 11143                           ;main.c: 171:     }
 11144  00168C  4A0D               	infsnz	inicializarObjetos@i^0,f,c
 11145  00168E  2A0E               	incf	(inicializarObjetos@i+1)^0,f,c
 11146  001690  BE0E               	btfsc	(inicializarObjetos@i+1)^0,7,c
 11147  001692  EF54  F00B         	goto	u3661
 11148  001696  500E               	movf	(inicializarObjetos@i+1)^0,w,c
 11149  001698  E109               	bnz	u3660
 11150  00169A  0E18               	movlw	24
 11151  00169C  5C0D               	subwf	inicializarObjetos@i^0,w,c
 11152  00169E  A0D8               	btfss	status,0,c
 11153  0016A0  EF54  F00B         	goto	u3661
 11154  0016A4  EF56  F00B         	goto	u3660
 11155  0016A8                     u3661:
 11156  0016A8  EFFE  F00A         	goto	l4670
 11157  0016AC                     u3660:
 11158  0016AC                     
 11159                           ;main.c: 173:     for (int i = 0; i < 24; i++) {
 11160  0016AC  0E00               	movlw	0
 11161  0016AE  6E0C               	movwf	(inicializarObjetos@i_809+1)^0,c
 11162  0016B0  0E00               	movlw	0
 11163  0016B2  6E0B               	movwf	inicializarObjetos@i_809^0,c
 11164  0016B4                     l4682:
 11165                           
 11166                           ;main.c: 175:         for (int j = 0; j < 7; j++)
 11167  0016B4  0E00               	movlw	0
 11168  0016B6  6E0A               	movwf	(inicializarObjetos@j+1)^0,c
 11169  0016B8  0E00               	movlw	0
 11170  0016BA  6E09               	movwf	inicializarObjetos@j^0,c
 11171  0016BC                     l4688:
 11172                           
 11173                           ;main.c: 176:             horarios[i].dias[j] = 0;
 11174  0016BC  C00B  F001         	movff	inicializarObjetos@i_809,___wmul@multiplier
 11175  0016C0  C00C  F002         	movff	inicializarObjetos@i_809+1,___wmul@multiplier+1
 11176  0016C4  0E00               	movlw	0
 11177  0016C6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11178  0016C8  0E0C               	movlw	12
 11179  0016CA  6E03               	movwf	___wmul@multiplicand^0,c
 11180  0016CC  EC11  F018         	call	___wmul	;wreg free
 11181  0016D0  0E32               	movlw	low _horarios
 11182  0016D2  6E07               	movwf	??_inicializarObjetos^0,c
 11183  0016D4  0E01               	movlw	high _horarios
 11184  0016D6  6E08               	movwf	(??_inicializarObjetos+1)^0,c
 11185  0016D8  0E01               	movlw	1
 11186  0016DA  2607               	addwf	??_inicializarObjetos^0,f,c
 11187  0016DC  0E00               	movlw	0
 11188  0016DE  2208               	addwfc	(??_inicializarObjetos+1)^0,f,c
 11189  0016E0  5001               	movf	?___wmul^0,w,c
 11190  0016E2  2607               	addwf	??_inicializarObjetos^0,f,c
 11191  0016E4  5002               	movf	(?___wmul+1)^0,w,c
 11192  0016E6  2208               	addwfc	(??_inicializarObjetos+1)^0,f,c
 11193  0016E8  5009               	movf	inicializarObjetos@j^0,w,c
 11194  0016EA  2407               	addwf	??_inicializarObjetos^0,w,c
 11195  0016EC  6ED9               	movwf	fsr2l,c
 11196  0016EE  500A               	movf	(inicializarObjetos@j+1)^0,w,c
 11197  0016F0  2008               	addwfc	(??_inicializarObjetos+1)^0,w,c
 11198  0016F2  6EDA               	movwf	fsr2h,c
 11199  0016F4  0E00               	movlw	0
 11200  0016F6  6EDF               	movwf	indf2,c
 11201  0016F8  4A09               	infsnz	inicializarObjetos@j^0,f,c
 11202  0016FA  2A0A               	incf	(inicializarObjetos@j+1)^0,f,c
 11203  0016FC  BE0A               	btfsc	(inicializarObjetos@j+1)^0,7,c
 11204  0016FE  EF8A  F00B         	goto	u3671
 11205  001702  500A               	movf	(inicializarObjetos@j+1)^0,w,c
 11206  001704  E109               	bnz	u3670
 11207  001706  0E07               	movlw	7
 11208  001708  5C09               	subwf	inicializarObjetos@j^0,w,c
 11209  00170A  A0D8               	btfss	status,0,c
 11210  00170C  EF8A  F00B         	goto	u3671
 11211  001710  EF8C  F00B         	goto	u3670
 11212  001714                     u3671:
 11213  001714  EF5E  F00B         	goto	l4688
 11214  001718                     u3670:
 11215  001718                     
 11216                           ;main.c: 178:         horarios[i].dias[7 - 1] = '\0';
 11217  001718  C00B  F001         	movff	inicializarObjetos@i_809,___wmul@multiplier
 11218  00171C  C00C  F002         	movff	inicializarObjetos@i_809+1,___wmul@multiplier+1
 11219  001720  0E00               	movlw	0
 11220  001722  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11221  001724  0E0C               	movlw	12
 11222  001726  6E03               	movwf	___wmul@multiplicand^0,c
 11223  001728  EC11  F018         	call	___wmul	;wreg free
 11224  00172C  0E39               	movlw	low (_horarios+7)
 11225  00172E  2401               	addwf	?___wmul^0,w,c
 11226  001730  6ED9               	movwf	fsr2l,c
 11227  001732  0E01               	movlw	high (_horarios+7)
 11228  001734  2002               	addwfc	(?___wmul+1)^0,w,c
 11229  001736  6EDA               	movwf	fsr2h,c
 11230  001738  0E00               	movlw	0
 11231  00173A  6EDF               	movwf	indf2,c
 11232  00173C                     
 11233                           ;main.c: 179:     }
 11234  00173C  4A0B               	infsnz	inicializarObjetos@i_809^0,f,c
 11235  00173E  2A0C               	incf	(inicializarObjetos@i_809+1)^0,f,c
 11236  001740  BE0C               	btfsc	(inicializarObjetos@i_809+1)^0,7,c
 11237  001742  EFAC  F00B         	goto	u3681
 11238  001746  500C               	movf	(inicializarObjetos@i_809+1)^0,w,c
 11239  001748  E109               	bnz	u3680
 11240  00174A  0E18               	movlw	24
 11241  00174C  5C0B               	subwf	inicializarObjetos@i_809^0,w,c
 11242  00174E  A0D8               	btfss	status,0,c
 11243  001750  EFAC  F00B         	goto	u3681
 11244  001754  EFAE  F00B         	goto	u3680
 11245  001758                     u3681:
 11246  001758  EF5A  F00B         	goto	l4682
 11247  00175C                     u3680:
 11248  00175C  0012               	return		;funcret
 11249  00175E                     __end_of_inicializarObjetos:
 11250                           	opt callstack 0
 11251                           
 11252 ;; *************** function ___wmul *****************
 11253 ;; Defined at:
 11254 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 11255 ;; Parameters:    Size  Location     Type
 11256 ;;  multiplier      2    0[COMRAM] unsigned int 
 11257 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11258 ;; Auto vars:     Size  Location     Type
 11259 ;;  product         2    4[COMRAM] unsigned int 
 11260 ;; Return value:  Size  Location     Type
 11261 ;;                  2    0[COMRAM] unsigned int 
 11262 ;; Registers used:
 11263 ;;		wreg, status,2, status,0, prodl, prodh
 11264 ;; Tracked objects:
 11265 ;;		On entry : 0/0
 11266 ;;		On exit  : 0/0
 11267 ;;		Unchanged: 0/0
 11268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11269 ;;      Params:         4       0       0       0       0       0       0       0       0
 11270 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11271 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11272 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11273 ;;Total ram usage:        6 bytes
 11274 ;; Hardware stack levels used:    1
 11275 ;; Hardware stack levels required when called:    1
 11276 ;; This function calls:
 11277 ;;		Nothing
 11278 ;; This function is called by:
 11279 ;;		_inicializarObjetos
 11280 ;;		_escribeHorariosMemoria
 11281 ;;		_leeHorariosMemoria
 11282 ;;		_dameDatosSistema
 11283 ;;		_atoi
 11284 ;; This function uses a non-reentrant model
 11285 ;;
 11286                           
 11287                           	psect	text66
 11288  003022                     __ptext66:
 11289                           	opt callstack 0
 11290  003022                     ___wmul:
 11291                           	opt callstack 26
 11292  003022  5001               	movf	___wmul@multiplier^0,w,c
 11293  003024  0203               	mulwf	___wmul@multiplicand^0,c
 11294  003026  CFF3 F005          	movff	prodl,___wmul@product
 11295  00302A  CFF4 F006          	movff	prodh,___wmul@product+1
 11296  00302E  5001               	movf	___wmul@multiplier^0,w,c
 11297  003030  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11298  003032  50F3               	movf	243,w,c
 11299  003034  2606               	addwf	(___wmul@product+1)^0,f,c
 11300  003036  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11301  003038  0203               	mulwf	___wmul@multiplicand^0,c
 11302  00303A  50F3               	movf	243,w,c
 11303  00303C  2606               	addwf	(___wmul@product+1)^0,f,c
 11304  00303E  C005  F001         	movff	___wmul@product,?___wmul
 11305  003042  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11306  003046  0012               	return		;funcret
 11307  003048                     __end_of___wmul:
 11308                           	opt callstack 0
 11309                           
 11310 ;; *************** function _i2c_iniciar *****************
 11311 ;; Defined at:
 11312 ;;		line 4 in file "./I2C.h"
 11313 ;; Parameters:    Size  Location     Type
 11314 ;;		None
 11315 ;; Auto vars:     Size  Location     Type
 11316 ;;		None
 11317 ;; Return value:  Size  Location     Type
 11318 ;;                  1    wreg      void 
 11319 ;; Registers used:
 11320 ;;		wreg, status,2
 11321 ;; Tracked objects:
 11322 ;;		On entry : 0/0
 11323 ;;		On exit  : 0/0
 11324 ;;		Unchanged: 0/0
 11325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11326 ;;      Params:         0       0       0       0       0       0       0       0       0
 11327 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11328 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11329 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11330 ;;Total ram usage:        0 bytes
 11331 ;; Hardware stack levels used:    1
 11332 ;; Hardware stack levels required when called:    1
 11333 ;; This function calls:
 11334 ;;		Nothing
 11335 ;; This function is called by:
 11336 ;;		_main
 11337 ;; This function uses a non-reentrant model
 11338 ;;
 11339                           
 11340                           	psect	text67
 11341  0030F4                     __ptext67:
 11342                           	opt callstack 0
 11343  0030F4                     _i2c_iniciar:
 11344                           	opt callstack 29
 11345  0030F4                     
 11346                           ;./I2C.h: 5:     TRISBbits.RB0 = 1;
 11347  0030F4  8093               	bsf	147,0,c	;volatile
 11348                           
 11349                           ;./I2C.h: 6:     TRISBbits.RB1 = 1;
 11350  0030F6  8293               	bsf	147,1,c	;volatile
 11351  0030F8                     
 11352                           ;./I2C.h: 7:     SSPSTAT = 0b10000000;
 11353  0030F8  0E80               	movlw	128
 11354  0030FA  6EC7               	movwf	199,c	;volatile
 11355                           
 11356                           ;./I2C.h: 8:     SSPCON1 = 0b00101000;
 11357  0030FC  0E28               	movlw	40
 11358  0030FE  6EC6               	movwf	198,c	;volatile
 11359                           
 11360                           ;./I2C.h: 9:     SSPCON2 = 0b00000000;
 11361  003100  0E00               	movlw	0
 11362  003102  6EC5               	movwf	197,c	;volatile
 11363                           
 11364                           ;./I2C.h: 10:     SSPADD = 9;
 11365  003104  0E09               	movlw	9
 11366  003106  6EC8               	movwf	200,c	;volatile
 11367  003108  0012               	return		;funcret
 11368  00310A                     __end_of_i2c_iniciar:
 11369                           	opt callstack 0
 11370                           
 11371 ;; *************** function _configurarAdc *****************
 11372 ;; Defined at:
 11373 ;;		line 145 in file "main.c"
 11374 ;; Parameters:    Size  Location     Type
 11375 ;;		None
 11376 ;; Auto vars:     Size  Location     Type
 11377 ;;		None
 11378 ;; Return value:  Size  Location     Type
 11379 ;;                  1    wreg      void 
 11380 ;; Registers used:
 11381 ;;		wreg, status,2
 11382 ;; Tracked objects:
 11383 ;;		On entry : 0/0
 11384 ;;		On exit  : 0/0
 11385 ;;		Unchanged: 0/0
 11386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11387 ;;      Params:         0       0       0       0       0       0       0       0       0
 11388 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11389 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11390 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11391 ;;Total ram usage:        0 bytes
 11392 ;; Hardware stack levels used:    1
 11393 ;; Hardware stack levels required when called:    1
 11394 ;; This function calls:
 11395 ;;		Nothing
 11396 ;; This function is called by:
 11397 ;;		_main
 11398 ;; This function uses a non-reentrant model
 11399 ;;
 11400                           
 11401                           	psect	text68
 11402  00313C                     __ptext68:
 11403                           	opt callstack 0
 11404  00313C                     _configurarAdc:
 11405                           	opt callstack 29
 11406  00313C                     
 11407                           ;main.c: 146:     ADCON1 = 0b00000110;
 11408  00313C  0E06               	movlw	6
 11409  00313E  6EC1               	movwf	193,c	;volatile
 11410                           
 11411                           ;main.c: 147:     ADCON2 = 0b10100101;
 11412  003140  0EA5               	movlw	165
 11413  003142  6EC0               	movwf	192,c	;volatile
 11414  003144  0012               	return		;funcret
 11415  003146                     __end_of_configurarAdc:
 11416                           	opt callstack 0
 11417                           
 11418 ;; *************** function _UART_init *****************
 11419 ;; Defined at:
 11420 ;;		line 12 in file "./UART.h"
 11421 ;; Parameters:    Size  Location     Type
 11422 ;;  BAUD            4   26[COMRAM] long 
 11423 ;; Auto vars:     Size  Location     Type
 11424 ;;  frecuenciaCr    4    0        long 
 11425 ;; Return value:  Size  Location     Type
 11426 ;;                  1    wreg      void 
 11427 ;; Registers used:
 11428 ;;		wreg, status,2, status,0, cstack
 11429 ;; Tracked objects:
 11430 ;;		On entry : 0/0
 11431 ;;		On exit  : 0/0
 11432 ;;		Unchanged: 0/0
 11433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11434 ;;      Params:         4       0       0       0       0       0       0       0       0
 11435 ;;      Locals:         8       0       0       0       0       0       0       0       0
 11436 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11437 ;;      Totals:        12       0       0       0       0       0       0       0       0
 11438 ;;Total ram usage:       12 bytes
 11439 ;; Hardware stack levels used:    1
 11440 ;; Hardware stack levels required when called:    2
 11441 ;; This function calls:
 11442 ;;		___aldiv
 11443 ;; This function is called by:
 11444 ;;		_main
 11445 ;; This function uses a non-reentrant model
 11446 ;;
 11447                           
 11448                           	psect	text69
 11449  0028BC                     __ptext69:
 11450                           	opt callstack 0
 11451  0028BC                     _UART_init:
 11452                           	opt callstack 28
 11453  0028BC                     
 11454                           ;./UART.h: 14:     TRISCbits.TRISC6 = 0;
 11455  0028BC  9C94               	bcf	148,6,c	;volatile
 11456  0028BE                     
 11457                           ;./UART.h: 15:     TRISCbits.TRISC7 = 1;
 11458  0028BE  8E94               	bsf	148,7,c	;volatile
 11459  0028C0                     
 11460                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 11461  0028C0  0E10               	movlw	16
 11462  0028C2  6E11               	movwf	___aldiv@divisor^0,c
 11463  0028C4  0E00               	movlw	0
 11464  0028C6  6E12               	movwf	(___aldiv@divisor+1)^0,c
 11465  0028C8  0E00               	movlw	0
 11466  0028CA  6E13               	movwf	(___aldiv@divisor+2)^0,c
 11467  0028CC  0E00               	movlw	0
 11468  0028CE  6E14               	movwf	(___aldiv@divisor+3)^0,c
 11469  0028D0  0E00               	movlw	0
 11470  0028D2  6E0D               	movwf	___aldiv@dividend^0,c
 11471  0028D4  0E09               	movlw	9
 11472  0028D6  6E0E               	movwf	(___aldiv@dividend+1)^0,c
 11473  0028D8  0E3D               	movlw	61
 11474  0028DA  6E0F               	movwf	(___aldiv@dividend+2)^0,c
 11475  0028DC  0E00               	movlw	0
 11476  0028DE  6E10               	movwf	(___aldiv@dividend+3)^0,c
 11477  0028E0  ECDE  F00E         	call	___aldiv	;wreg free
 11478  0028E4  C00D  F023         	movff	?___aldiv,_UART_init$1894
 11479  0028E8  C00E  F024         	movff	?___aldiv+1,_UART_init$1894+1
 11480  0028EC  C00F  F025         	movff	?___aldiv+2,_UART_init$1894+2
 11481  0028F0  C010  F026         	movff	?___aldiv+3,_UART_init$1894+3
 11482  0028F4                     
 11483                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 11484  0028F4  C023  F00D         	movff	_UART_init$1894,___aldiv@dividend
 11485  0028F8  C024  F00E         	movff	_UART_init$1894+1,___aldiv@dividend+1
 11486  0028FC  C025  F00F         	movff	_UART_init$1894+2,___aldiv@dividend+2
 11487  002900  C026  F010         	movff	_UART_init$1894+3,___aldiv@dividend+3
 11488  002904  C01B  F011         	movff	UART_init@BAUD,___aldiv@divisor
 11489  002908  C01C  F012         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 11490  00290C  C01D  F013         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 11491  002910  C01E  F014         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 11492  002914  ECDE  F00E         	call	___aldiv	;wreg free
 11493  002918  040D               	decf	?___aldiv^0,w,c
 11494  00291A  6EAF               	movwf	175,c	;volatile
 11495  00291C                     
 11496                           ;./UART.h: 21:     TXSTAbits.BRGH = 1;
 11497  00291C  84AC               	bsf	172,2,c	;volatile
 11498  00291E                     
 11499                           ;./UART.h: 22:     TXSTAbits.SYNC = 0;
 11500  00291E  98AC               	bcf	172,4,c	;volatile
 11501  002920                     
 11502                           ;./UART.h: 23:     RCSTAbits.SPEN = 1;
 11503  002920  8EAB               	bsf	171,7,c	;volatile
 11504  002922                     
 11505                           ;./UART.h: 26:     TXSTAbits.TX9 = 0;
 11506  002922  9CAC               	bcf	172,6,c	;volatile
 11507  002924                     
 11508                           ;./UART.h: 27:     TXSTAbits.TXEN = 1;
 11509  002924  8AAC               	bsf	172,5,c	;volatile
 11510  002926                     
 11511                           ;./UART.h: 30:     RCSTAbits.RC9 = 0;
 11512  002926  9CAB               	bcf	171,6,c	;volatile
 11513  002928                     
 11514                           ;./UART.h: 31:     RCSTAbits.CREN = 1;
 11515  002928  88AB               	bsf	171,4,c	;volatile
 11516  00292A  0012               	return		;funcret
 11517  00292C                     __end_of_UART_init:
 11518                           	opt callstack 0
 11519                           
 11520 ;; *************** function ___aldiv *****************
 11521 ;; Defined at:
 11522 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 11523 ;; Parameters:    Size  Location     Type
 11524 ;;  dividend        4   12[COMRAM] long 
 11525 ;;  divisor         4   16[COMRAM] long 
 11526 ;; Auto vars:     Size  Location     Type
 11527 ;;  quotient        4   22[COMRAM] long 
 11528 ;;  sign            1   21[COMRAM] unsigned char 
 11529 ;;  counter         1   20[COMRAM] unsigned char 
 11530 ;; Return value:  Size  Location     Type
 11531 ;;                  4   12[COMRAM] long 
 11532 ;; Registers used:
 11533 ;;		wreg, status,2, status,0
 11534 ;; Tracked objects:
 11535 ;;		On entry : 0/0
 11536 ;;		On exit  : 0/0
 11537 ;;		Unchanged: 0/0
 11538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11539 ;;      Params:         8       0       0       0       0       0       0       0       0
 11540 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11541 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11542 ;;      Totals:        14       0       0       0       0       0       0       0       0
 11543 ;;Total ram usage:       14 bytes
 11544 ;; Hardware stack levels used:    1
 11545 ;; Hardware stack levels required when called:    1
 11546 ;; This function calls:
 11547 ;;		Nothing
 11548 ;; This function is called by:
 11549 ;;		_UART_init
 11550 ;;		_map
 11551 ;; This function uses a non-reentrant model
 11552 ;;
 11553                           
 11554                           	psect	text70
 11555  001DBC                     __ptext70:
 11556                           	opt callstack 0
 11557  001DBC                     ___aldiv:
 11558                           	opt callstack 26
 11559  001DBC  0E00               	movlw	0
 11560  001DBE  6E16               	movwf	___aldiv@sign^0,c
 11561  001DC0  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
 11562  001DC2  EFE7  F00E         	goto	u2860
 11563  001DC6  EFE5  F00E         	goto	u2861
 11564  001DCA                     u2861:
 11565  001DCA  EFF1  F00E         	goto	l3790
 11566  001DCE                     u2860:
 11567  001DCE  1E14               	comf	(___aldiv@divisor+3)^0,f,c
 11568  001DD0  1E13               	comf	(___aldiv@divisor+2)^0,f,c
 11569  001DD2  1E12               	comf	(___aldiv@divisor+1)^0,f,c
 11570  001DD4  6C11               	negf	___aldiv@divisor^0,c
 11571  001DD6  0E00               	movlw	0
 11572  001DD8  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
 11573  001DDA  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
 11574  001DDC  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
 11575  001DDE  0E01               	movlw	1
 11576  001DE0  6E16               	movwf	___aldiv@sign^0,c
 11577  001DE2                     l3790:
 11578  001DE2  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
 11579  001DE4  EFF8  F00E         	goto	u2870
 11580  001DE8  EFF6  F00E         	goto	u2871
 11581  001DEC                     u2871:
 11582  001DEC  EF02  F00F         	goto	l3796
 11583  001DF0                     u2870:
 11584  001DF0  1E10               	comf	(___aldiv@dividend+3)^0,f,c
 11585  001DF2  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
 11586  001DF4  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
 11587  001DF6  6C0D               	negf	___aldiv@dividend^0,c
 11588  001DF8  0E00               	movlw	0
 11589  001DFA  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
 11590  001DFC  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
 11591  001DFE  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
 11592  001E00  0E01               	movlw	1
 11593  001E02  1A16               	xorwf	___aldiv@sign^0,f,c
 11594  001E04                     l3796:
 11595  001E04  0E00               	movlw	0
 11596  001E06  6E17               	movwf	___aldiv@quotient^0,c
 11597  001E08  0E00               	movlw	0
 11598  001E0A  6E18               	movwf	(___aldiv@quotient+1)^0,c
 11599  001E0C  0E00               	movlw	0
 11600  001E0E  6E19               	movwf	(___aldiv@quotient+2)^0,c
 11601  001E10  0E00               	movlw	0
 11602  001E12  6E1A               	movwf	(___aldiv@quotient+3)^0,c
 11603  001E14  5011               	movf	___aldiv@divisor^0,w,c
 11604  001E16  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
 11605  001E18  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
 11606  001E1A  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
 11607  001E1C  B4D8               	btfsc	status,2,c
 11608  001E1E  EF13  F00F         	goto	u2881
 11609  001E22  EF15  F00F         	goto	u2880
 11610  001E26                     u2881:
 11611  001E26  EF4B  F00F         	goto	l3818
 11612  001E2A                     u2880:
 11613  001E2A  0E01               	movlw	1
 11614  001E2C  6E15               	movwf	___aldiv@counter^0,c
 11615  001E2E  EF1F  F00F         	goto	l3804
 11616  001E32                     l3802:
 11617  001E32  90D8               	bcf	status,0,c
 11618  001E34  3611               	rlcf	___aldiv@divisor^0,f,c
 11619  001E36  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
 11620  001E38  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
 11621  001E3A  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
 11622  001E3C  2A15               	incf	___aldiv@counter^0,f,c
 11623  001E3E                     l3804:
 11624  001E3E  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
 11625  001E40  EF24  F00F         	goto	u2891
 11626  001E44  EF26  F00F         	goto	u2890
 11627  001E48                     u2891:
 11628  001E48  EF19  F00F         	goto	l3802
 11629  001E4C                     u2890:
 11630  001E4C                     l3806:
 11631  001E4C  90D8               	bcf	status,0,c
 11632  001E4E  3617               	rlcf	___aldiv@quotient^0,f,c
 11633  001E50  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
 11634  001E52  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
 11635  001E54  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
 11636  001E56  5011               	movf	___aldiv@divisor^0,w,c
 11637  001E58  5C0D               	subwf	___aldiv@dividend^0,w,c
 11638  001E5A  5012               	movf	(___aldiv@divisor+1)^0,w,c
 11639  001E5C  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
 11640  001E5E  5013               	movf	(___aldiv@divisor+2)^0,w,c
 11641  001E60  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
 11642  001E62  5014               	movf	(___aldiv@divisor+3)^0,w,c
 11643  001E64  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
 11644  001E66  A0D8               	btfss	status,0,c
 11645  001E68  EF38  F00F         	goto	u2901
 11646  001E6C  EF3A  F00F         	goto	u2900
 11647  001E70                     u2901:
 11648  001E70  EF43  F00F         	goto	l3814
 11649  001E74                     u2900:
 11650  001E74  5011               	movf	___aldiv@divisor^0,w,c
 11651  001E76  5E0D               	subwf	___aldiv@dividend^0,f,c
 11652  001E78  5012               	movf	(___aldiv@divisor+1)^0,w,c
 11653  001E7A  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
 11654  001E7C  5013               	movf	(___aldiv@divisor+2)^0,w,c
 11655  001E7E  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
 11656  001E80  5014               	movf	(___aldiv@divisor+3)^0,w,c
 11657  001E82  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
 11658  001E84  8017               	bsf	___aldiv@quotient^0,0,c
 11659  001E86                     l3814:
 11660  001E86  90D8               	bcf	status,0,c
 11661  001E88  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
 11662  001E8A  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
 11663  001E8C  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
 11664  001E8E  3211               	rrcf	___aldiv@divisor^0,f,c
 11665  001E90  2E15               	decfsz	___aldiv@counter^0,f,c
 11666  001E92  EF26  F00F         	goto	l3806
 11667  001E96                     l3818:
 11668  001E96  5016               	movf	___aldiv@sign^0,w,c
 11669  001E98  B4D8               	btfsc	status,2,c
 11670  001E9A  EF51  F00F         	goto	u2911
 11671  001E9E  EF53  F00F         	goto	u2910
 11672  001EA2                     u2911:
 11673  001EA2  EF5B  F00F         	goto	l3822
 11674  001EA6                     u2910:
 11675  001EA6  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
 11676  001EA8  1E19               	comf	(___aldiv@quotient+2)^0,f,c
 11677  001EAA  1E18               	comf	(___aldiv@quotient+1)^0,f,c
 11678  001EAC  6C17               	negf	___aldiv@quotient^0,c
 11679  001EAE  0E00               	movlw	0
 11680  001EB0  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
 11681  001EB2  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
 11682  001EB4  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
 11683  001EB6                     l3822:
 11684  001EB6  C017  F00D         	movff	___aldiv@quotient,?___aldiv
 11685  001EBA  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
 11686  001EBE  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
 11687  001EC2  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
 11688  001EC6  0012               	return		;funcret
 11689  001EC8                     __end_of___aldiv:
 11690                           	opt callstack 0
 11691                           
 11692 ;; *************** function _desbordamiento *****************
 11693 ;; Defined at:
 11694 ;;		line 107 in file "main.c"
 11695 ;; Parameters:    Size  Location     Type
 11696 ;;		None
 11697 ;; Auto vars:     Size  Location     Type
 11698 ;;		None
 11699 ;; Return value:  Size  Location     Type
 11700 ;;                  1    wreg      void 
 11701 ;; Registers used:
 11702 ;;		wreg, status,2, status,0
 11703 ;; Tracked objects:
 11704 ;;		On entry : 0/0
 11705 ;;		On exit  : 0/0
 11706 ;;		Unchanged: 0/0
 11707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11708 ;;      Params:         0       0       0       0       0       0       0       0       0
 11709 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11710 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11711 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11712 ;;Total ram usage:        0 bytes
 11713 ;; Hardware stack levels used:    1
 11714 ;; This function calls:
 11715 ;;		Nothing
 11716 ;; This function is called by:
 11717 ;;		Interrupt level 2
 11718 ;; This function uses a non-reentrant model
 11719 ;;
 11720                           
 11721                           	psect	intcode
 11722  000008                     __pintcode:
 11723                           	opt callstack 0
 11724  000008                     _desbordamiento:
 11725                           	opt callstack 20
 11726                           
 11727                           ;incstack = 0
 11728  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11729  00000A  EDFC  F014         	call	int_func,f	;refresh shadow registers
 11730                           
 11731                           	psect	intcode_body
 11732  0029F8                     __pintcode_body:
 11733                           	opt callstack 20
 11734  0029F8                     int_func:
 11735                           	opt callstack 20
 11736  0029F8  0006               	pop		; remove dummy address from shadow register refresh
 11737  0029FA                     
 11738                           ;main.c: 109:     if (INTCONbits.TMR0IF) {
 11739  0029FA  A4F2               	btfss	242,2,c	;volatile
 11740  0029FC  EF02  F015         	goto	i2u381_41
 11741  002A00  EF04  F015         	goto	i2u381_40
 11742  002A04                     i2u381_41:
 11743  002A04  EF1F  F015         	goto	i2l4798
 11744  002A08                     i2u381_40:
 11745  002A08                     
 11746                           ;main.c: 111:         if (esperandoDatos) {
 11747  002A08  0100               	movlb	0	; () banked
 11748  002A0A  5189               	movf	_esperandoDatos& (0+255),w,b
 11749  002A0C  B4D8               	btfsc	status,2,c
 11750  002A0E  EF0B  F015         	goto	i2u382_41
 11751  002A12  EF0D  F015         	goto	i2u382_40
 11752  002A16                     i2u382_41:
 11753  002A16  EF18  F015         	goto	i2l4794
 11754  002A1A                     i2u382_40:
 11755  002A1A                     
 11756                           ; BSR set to: 0
 11757                           ;main.c: 113:             tiempoInactividadTrans++;
 11758  002A1A  2B8C               	incf	_tiempoInactividadTrans& (0+255),f,b
 11759  002A1C                     
 11760                           ; BSR set to: 0
 11761                           ;main.c: 115:             if (tiempoInactividadTrans == 1)
 11762  002A1C  058C               	decf	_tiempoInactividadTrans& (0+255),w,b
 11763  002A1E  A4D8               	btfss	status,2,c
 11764  002A20  EF14  F015         	goto	i2u383_41
 11765  002A24  EF16  F015         	goto	i2u383_40
 11766  002A28                     i2u383_41:
 11767  002A28  EF18  F015         	goto	i2l4794
 11768  002A2C                     i2u383_40:
 11769  002A2C                     
 11770                           ; BSR set to: 0
 11771                           ;main.c: 116:                 esperaDatoConcluida = 1;
 11772  002A2C  0E01               	movlw	1
 11773  002A2E  6F8A               	movwf	_esperaDatoConcluida& (0+255),b
 11774  002A30                     i2l4794:
 11775                           
 11776                           ; BSR set to: 0
 11777                           ;main.c: 121:         INTCONbits.TMR0IF = 0;
 11778  002A30  94F2               	bcf	242,2,c	;volatile
 11779  002A32                     
 11780                           ; BSR set to: 0
 11781                           ;main.c: 122:         TMR0 = VALOR_TIMER0;
 11782  002A32  C0FB  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
 11783  002A36  C0FC  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
 11784                           
 11785                           ;main.c: 123:         overflowTimer = 1;
 11786  002A3A  0E01               	movlw	1
 11787  002A3C  6F82               	movwf	_overflowTimer& (0+255),b
 11788  002A3E                     i2l4798:
 11789                           
 11790                           ;main.c: 127:     if (PIR1bits.RCIF) {
 11791  002A3E  AA9E               	btfss	158,5,c	;volatile
 11792  002A40  EF24  F015         	goto	i2u384_41
 11793  002A44  EF26  F015         	goto	i2u384_40
 11794  002A48                     i2u384_41:
 11795  002A48  EF2B  F015         	goto	i2l217
 11796  002A4C                     i2u384_40:
 11797  002A4C                     
 11798                           ;main.c: 129:         byteUart = RCREG;
 11799  002A4C  CFAE F08B          	movff	4014,_byteUart	;volatile
 11800  002A50                     
 11801                           ;main.c: 130:         datoRecibido = 1;
 11802  002A50  0E01               	movlw	1
 11803  002A52  0100               	movlb	0	; () banked
 11804  002A54  6F83               	movwf	_datoRecibido& (0+255),b
 11805  002A56                     i2l217:
 11806  002A56  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11807  002A58  0011               	retfie		f
 11808  002A5A                     __end_of_desbordamiento:
 11809                           	opt callstack 0
 11810                           
 11811                           	psect	rparam
 11812  0000                     
 11813                           	psect	temp
 11814  00005F                     btemp:
 11815                           	opt callstack 0
 11816  00005F                     	ds	1
 11817  0000                     int$flags	set	btemp
 11818  0000                     wtemp8	set	btemp+1
 11819  0000                     ttemp5	set	btemp+1
 11820  0000                     ttemp6	set	btemp+4
 11821  0000                     ttemp7	set	btemp+8
 11822                           tosu	equ	0xFFF
 11823                           tosh	equ	0xFFE
 11824                           tosl	equ	0xFFD
 11825                           stkptr	equ	0xFFC
 11826                           pclatu	equ	0xFFB
 11827                           pclath	equ	0xFFA
 11828                           pcl	equ	0xFF9
 11829                           tblptru	equ	0xFF8
 11830                           tblptrh	equ	0xFF7
 11831                           tblptrl	equ	0xFF6
 11832                           tablat	equ	0xFF5
 11833                           prodh	equ	0xFF4
 11834                           prodl	equ	0xFF3
 11835                           indf0	equ	0xFEF
 11836                           postinc0	equ	0xFEE
 11837                           postdec0	equ	0xFED
 11838                           preinc0	equ	0xFEC
 11839                           plusw0	equ	0xFEB
 11840                           fsr0h	equ	0xFEA
 11841                           fsr0l	equ	0xFE9
 11842                           wreg	equ	0xFE8
 11843                           indf1	equ	0xFE7
 11844                           postinc1	equ	0xFE6
 11845                           postdec1	equ	0xFE5
 11846                           preinc1	equ	0xFE4
 11847                           plusw1	equ	0xFE3
 11848                           fsr1h	equ	0xFE2
 11849                           fsr1l	equ	0xFE1
 11850                           bsr	equ	0xFE0
 11851                           indf2	equ	0xFDF
 11852                           postinc2	equ	0xFDE
 11853                           postdec2	equ	0xFDD
 11854                           preinc2	equ	0xFDC
 11855                           plusw2	equ	0xFDB
 11856                           fsr2h	equ	0xFDA
 11857                           fsr2l	equ	0xFD9
 11858                           status	equ	0xFD8


Data Sizes:
    Strings     795
    Constant    0
    Data        11
    BSS         415
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     71     159
    BANK1           256      0      50
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    dameDatosSistema$1898	PTR unsigned char [8] size(2) Largest target is 288
		 -> horarios(BIGRAM[288]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), horarios(BIGRAM[288]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), horarios(BIGRAM[288]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_30(CODE[45]), STR_29(CODE[29]), STR_28(CODE[32]), STR_27(CODE[45]), 
		 -> STR_26(CODE[29]), STR_25(CODE[32]), STR_24(CODE[24]), STR_23(CODE[25]), 
		 -> STR_22(CODE[24]), STR_21(CODE[27]), STR_20(CODE[24]), STR_19(CODE[23]), 
		 -> STR_18(CODE[25]), STR_17(CODE[24]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), dameDatosSistema@bufferHorario(BANK0[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), dameDatosSistema@bufferHorario(BANK0[30]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1564_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), dameDatosSistema@bufferHorario(BANK0[30]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), dameDatosSistema@bufferHorario(BANK0[30]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_30(CODE[45]), STR_29(CODE[29]), STR_28(CODE[32]), STR_27(CODE[45]), 
		 -> STR_26(CODE[29]), STR_25(CODE[32]), STR_24(CODE[24]), STR_23(CODE[25]), 
		 -> STR_22(CODE[24]), STR_21(CODE[27]), STR_20(CODE[24]), STR_19(CODE[23]), 
		 -> STR_18(CODE[25]), STR_17(CODE[24]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_30(CODE[45]), STR_29(CODE[29]), STR_28(CODE[32]), STR_27(CODE[45]), 
		 -> STR_26(CODE[29]), STR_25(CODE[32]), STR_24(CODE[24]), STR_23(CODE[25]), 
		 -> STR_22(CODE[24]), STR_21(CODE[27]), STR_20(CODE[24]), STR_19(CODE[23]), 
		 -> STR_18(CODE[25]), STR_17(CODE[24]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 45
		 -> STR_30(CODE[45]), STR_29(CODE[29]), STR_28(CODE[32]), STR_27(CODE[45]), 
		 -> STR_26(CODE[29]), STR_25(CODE[32]), STR_24(CODE[24]), STR_23(CODE[25]), 
		 -> STR_22(CODE[24]), STR_21(CODE[27]), STR_20(CODE[24]), STR_19(CODE[23]), 
		 -> STR_18(CODE[25]), STR_17(CODE[24]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), horarios(BIGRAM[288]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), horarios(BIGRAM[288]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), horarios(BIGRAM[288]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 50
		 -> STR_33(CODE[11]), STR_32(CODE[9]), STR_31(CODE[17]), buffer(BANK1[50]), 
		 -> dameDatosSistema@bufferHorario(BANK0[30]), STR_16(CODE[26]), STR_15(CODE[38]), STR_14(CODE[36]), 
		 -> STR_13(CODE[28]), STR_12(CODE[13]), STR_11(CODE[3]), STR_10(CODE[14]), 
		 -> STR_9(CODE[36]), STR_8(CODE[26]), STR_7(CODE[23]), STR_6(CODE[34]), 
		 -> STR_5(CODE[32]), STR_4(CODE[49]), STR_3(CODE[37]), STR_2(CODE[27]), 
		 -> STR_1(CODE[37]), 


Critical Paths under _main in COMRAM

    _sistemaRegado->_lecturaAnalogaSensores
    _encenderBombas->_estaSeco
    _estaSeco->_dameTemperaturaHumedad
    _dameHoraActual->_leer_rtc
    _dameDiaActual->_leer_rtc
    _leer_rtc->_i2c_envia_dato
    _leer_rtc->_i2c_recibe_dato
    _sistemaPrincipal->_dameDatosSistema
    _setTiempoRegar->_escribeHorariosMemoria
    _regadoRapido->_getValue
    _lecturaWifi->_getValue
    _restablecerDatosSensor->_constructorSensor
    _lecturaAnalogaSensores->_map
    _map->___aldiv
    _dameTemperaturaHumedad->_DHT11_ReadData
    _leeHorariosMemoria->___wmul
    _leeHorariosMemoria->_leer_eeprom
    _leer_eeprom->_i2c_envia_dato
    _leer_eeprom->_i2c_recibe_dato
    _i2c_reinicia_com->_i2c_espera
    _i2c_recibe_dato->_i2c_espera
    _fijaHoraRtc->_setRtc
    _fijaDiaRtc->_setRtc
    _setRtc->_getValue
    _escribe_rtc->_i2c_envia_dato
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _UART_printf->_UART_write
    _asignarHorarios->_escribeHorariosMemoria
    _getValue->_UART_write
    _escribeHorariosMemoria->_escribe_eeprom
    _escribe_eeprom->___wmul
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera
    _inicializarObjetos->___wmul
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _desbordamiento in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sistemaPrincipal
    _sistemaPrincipal->_dameDatosSistema
    _mostrarDatosSensoresWIFI->_sprintf
    _mostrarDatosSensores->_sprintf
    _dameDatosSistema->_sprintf
    _sprintf->_vfprintf

Critical Paths under _desbordamiento in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _desbordamiento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _desbordamiento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _desbordamiento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _desbordamiento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _desbordamiento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _desbordamiento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _desbordamiento in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  113943
                          _UART_init
                      _configurarAdc
                        _i2c_iniciar
                 _inicializarObjetos
             _restablecerDatosSensor
                   _sistemaPrincipal
                      _sistemaRegado
 ---------------------------------------------------------------------------------
 (1) _sistemaRegado                                        0     0      0    5214
                      _dameDiaActual
                     _dameHoraActual
                     _encenderBombas
                          _horaRegar
             _lecturaAnalogaSensores
                        _lecturaWifi
 ---------------------------------------------------------------------------------
 (2) _horaRegar                                            6     4      2      24
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _encenderBombas                                       5     5      0    1228
                                             13 COMRAM     5     5      0
                           _estaSeco
 ---------------------------------------------------------------------------------
 (3) _estaSeco                                             3     1      2     953
                                             10 COMRAM     3     1      2
             _dameTemperaturaHumedad
 ---------------------------------------------------------------------------------
 (2) _dameHoraActual                                       0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (2) _dameDiaActual                                        0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (3) _leer_rtc                                             2     2      0      90
                                              2 COMRAM     2     2      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (3) _convertirDato                                        3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _sistemaPrincipal                                     3     3      0  103745
                                             68 BANK0      3     3      0
                    _asignarHorarios
                   _dameDatosSistema
                         _fijaDiaRtc
                        _fijaHoraRtc
                 _leeHorariosMemoria
               _mostrarDatosSensores
           _mostrarDatosSensoresWIFI
                       _regadoRapido
                     _setTiempoRegar
 ---------------------------------------------------------------------------------
 (2) _setTiempoRegar                                       2     2      0    5875
                                             18 COMRAM     2     2      0
                         _UART_write
             _escribeHorariosMemoria
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _regadoRapido                                         4     4      0    1305
                                             12 COMRAM     4     4      0
                         _UART_write
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensoresWIFI                             3     3      0   26325
                                             92 COMRAM     1     1      0
                                             28 BANK0      2     2      0
                        _UART_printf
                         _UART_write
             _dameTemperaturaHumedad
                        _lecturaWifi
                      _limpiarBuffer
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaWifi                                          4     4      0    1828
                                             12 COMRAM     4     4      0
                          _UART_read
                         _UART_write
                           _getValue
                      _limpiarBuffer
             _restablecerDatosSensor
 ---------------------------------------------------------------------------------
 (3) _restablecerDatosSensor                               2     2      0     387
                                              4 COMRAM     2     2      0
                  _constructorSensor
 ---------------------------------------------------------------------------------
 (4) _constructorSensor                                    4     0      4     297
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensores                                 3     3      0   26269
                                             92 COMRAM     1     1      0
                                             28 BANK0      2     2      0
                        _UART_printf
                         _UART_write
             _dameTemperaturaHumedad
             _lecturaAnalogaSensores
                      _limpiarBuffer
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaAnalogaSensores                               3     3      0    1772
                                             46 COMRAM     3     3      0
                   _dameHumedadSuelo
                                _map
 ---------------------------------------------------------------------------------
 (3) _map                                                 20     0     20    1660
                                             26 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
                   _dameHumedadSuelo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _dameHumedadSuelo                                     5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _dameTemperaturaHumedad                               8     8      0     299
                                              2 COMRAM     8     8      0
                     _DHT11_ReadData
                        _DHT11_Start
                     _check_response
 ---------------------------------------------------------------------------------
 (5) _check_response                                       1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _leeHorariosMemoria                                   9     9      0    4238
                                              6 COMRAM     9     9      0
                         _UART_write
                             ___wmul
                        _leer_eeprom
 ---------------------------------------------------------------------------------
 (3) _leer_eeprom                                          4     2      2     492
                                              2 COMRAM     4     2      2
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_recibe_dato                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (2) _fijaHoraRtc                                          0     0      0    3145
                         _UART_write
                        _escribe_rtc
                             _setRtc
 ---------------------------------------------------------------------------------
 (2) _fijaDiaRtc                                           0     0      0    2699
                         _UART_write
                             _setRtc
 ---------------------------------------------------------------------------------
 (3) _setRtc                                               4     4      0    2677
                                             12 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                        _escribe_rtc
                           _getValue
 ---------------------------------------------------------------------------------
 (4) _escribe_rtc                                          2     1      1     446
                                              2 COMRAM     2     1      1
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _dameDatosSistema                                    42    42      0   27789
                                             92 COMRAM     2     2      0
                                             28 BANK0     40    40      0
                        _UART_printf
                         _UART_write
                             ___wmul
                      _limpiarBuffer
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             22    10     12   21899
                                              6 BANK0     22    10     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   19564
                                             90 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           47    41      6   19174
                                             63 COMRAM    27    21      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5574
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 7     4      3    4145
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3925
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    4376
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _limpiarBuffer                                        2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2    2119
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (2) _asignarHorarios                                      7     7      0    6078
                                             18 COMRAM     7     7      0
                         _UART_write
             _escribeHorariosMemoria
                           _getValue
 ---------------------------------------------------------------------------------
 (3) _getValue                                            11     9      2    1192
                                              1 COMRAM    11     9      2
                          _UART_read
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _escribeHorariosMemoria                               8     8      0    4549
                                             10 COMRAM     8     8      0
                             ___wmul
                     _escribe_eeprom
 ---------------------------------------------------------------------------------
 (4) _escribe_eeprom                                       4     1      3     848
                                              6 COMRAM     4     1      3
                             ___wmul (ARG)
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializarObjetos                                   8     8      0    3697
                                              6 COMRAM     8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    3383
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     900
                                             26 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     756
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _desbordamiento                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _configurarAdc
   _i2c_iniciar
   _inicializarObjetos
     ___wmul
   _restablecerDatosSensor
     _constructorSensor
   _sistemaPrincipal
     _asignarHorarios
       _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
       _getValue
         _UART_read
         _UART_write
     _dameDatosSistema
       _UART_printf
         _UART_write
       _UART_write
       ___wmul
       _limpiarBuffer
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _fijaDiaRtc
       _UART_write
       _setRtc
         ___awdiv
         ___awmod
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _getValue
           _UART_read
           _UART_write
     _fijaHoraRtc
       _UART_write
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
       _setRtc
         ___awdiv
         ___awmod
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _getValue
           _UART_read
           _UART_write
     _leeHorariosMemoria
       _UART_write
       ___wmul
       _leer_eeprom
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _mostrarDatosSensores
       _UART_printf
         _UART_write
       _UART_write
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _check_response
       _lecturaAnalogaSensores
         _dameHumedadSuelo
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
           _dameHumedadSuelo (ARG)
       _limpiarBuffer
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _mostrarDatosSensoresWIFI
       _UART_printf
         _UART_write
       _UART_write
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _check_response
       _lecturaWifi
         _UART_read
         _UART_write
         _getValue
           _UART_read
           _UART_write
         _limpiarBuffer
         _restablecerDatosSensor
           _constructorSensor
       _limpiarBuffer
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _regadoRapido
       _UART_write
       _getValue
         _UART_read
         _UART_write
     _setTiempoRegar
       _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
       _getValue
         _UART_read
         _UART_write
   _sistemaRegado
     _dameDiaActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _dameHoraActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _encenderBombas
       _estaSeco
         _dameTemperaturaHumedad
           _DHT11_ReadData
           _DHT11_Start
           _check_response
     _horaRegar
     _lecturaAnalogaSensores
       _dameHumedadSuelo
       _map
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _dameHumedadSuelo (ARG)
     _lecturaWifi
       _UART_read
       _UART_write
       _getValue
         _UART_read
         _UART_write
       _limpiarBuffer
       _restablecerDatosSensor
         _constructorSensor

 _desbordamiento (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     120      21       14.1%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      32       7       19.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     47      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12F      20        0.0%
DATA                 0      0     24F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jul 01 12:18:06 2020

                 __size_of_escribe_eeprom 0030                                        l83 3108  
                                      l92 3154                                        l95 314C  
                                      l89 3020                                        l98 315C  
                            ___awdiv@sign 0006                            ?_configurarAdc 0001  
                     ___wmul@multiplicand 0003                               __CFG_BORV$3 000000  
          __end_of_dameTemperaturaHumedad 26D8                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                   regadoRapido@tiempoRegar 000F  
                                     l101 3124                                       l110 2FFA  
                                     l104 30DC                                       l113 3066  
                                     l107 30C2                                       l220 27D4  
                                     l141 30F2                                       l126 292A  
                                     l134 2C18                                       l135 2C1A  
                                     l223 313A                                       l231 2F3E  
                                     l160 2B12                                       l152 2AC0  
                                     l129 2BE2                                       l313 2E94  
                                     l226 3144                                       l138 30E4  
                                     l147 2AB6                                       l163 3086  
                                     l251 3118                                       l332 284A  
                                     l308 0DCE                                       l236 275A  
                                     l245 175C                                       l157 2AF0  
                                     l421 2096                                       l262 2FA4  
                                     l414 26CA                                       l327 1CA8  
                                     l255 30A4                                       l415 26D2  
                                     l335 2D30                                       l343 2D0C  
                                     l272 1A16                                       l408 0882  
                                     l168 2DD6                                       l416 26D6  
                                     l352 2464                                       l248 2FD0  
                                     l265 2ED0                                       l281 15F2  
                                     l337 2D3E                                       l530 21EA  
                                     l602 010E                                       l338 2D52  
                                     l443 0E52                                       l259 28BA  
                                     l427 1FB6                                       l532 2226  
                                     l453 0EFE                                       l357 25BE  
                                     l365 23AA                                       l463 0FE6  
                                     l527 21A8                                       l471 1D02  
                                     l376 23AC                                       l392 1B6A  
                                     l545 0924                                       l625 0592  
                                     l473 1D08                                       l481 1DBA  
                                     l650 2984                                       l474 1D0E  
                                     l539 2BC6                                       l547 092C  
                                     l635 29EE                                       l651 2994  
                                     l475 1D14                                       l572 1380  
                                     l636 29F6                                       l476 1D1A  
                                     l565 0B64                                       l477 1D20  
                                     l718 1EC6                                       l486 2E56  
                                     l574 1388                                       l478 1D26  
                                     l639 3046                                       l583 1432  
                                     l479 1D2C                                       l584 147C  
                                     l753 12FE                                       l588 1484  
                                     l766 18C0                                       l870 22EA  
                                     l883 2514                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                              __CFG_BOR$OFF 000000  
                                     _abs 2DD8                                       _pad 2162  
                                     _map 275C                              ___awmod@sign 0006  
                                     prod 000FF3                                       wreg 000FE8  
                __end_of_dameDatosSistema 0884                              __CFG_LVP$OFF 000000  
                       ?_i2c_reinicia_com 0001                              ?_escribe_rtc 0003  
                            __CFG_WDT$OFF 000000                                      ?_abs 0013  
                                    l1314 2E0E                                      l1317 2E16  
                                    l1351 2F08                                      l4000 2CEE  
                                    l1345 116E                                      l4010 2E20  
                                    l4002 2CF2                                      l4012 2E30  
                                    l4004 2E18                                      l1348 1176  
                                    l3300 1178                                      l4020 299E  
                                    l4100 2504                                      l4014 2E34  
                                    l1374 2160                                      l1382 2D96  
                                    l3310 11BC                                      l3302 117C  
                                    l4022 29AC                                      l4030 223A  
                                    l4102 250C                                      l1359 2CBE  
                                    l4200 19C2                                      l4016 2E50  
                                    l1392 315E                                      l3240 20E4  
                                    l3232 2098                                      l3400 2B82  
                                    l3320 1212                                      l3312 11DC  
                                    l3304 118A                                      l4024 29D2  
                                    l4040 2260                                      l4032 2242  
                                    l4112 304A                                      l4202 19FA  
                                    l4122 2A5A                                      l3242 211A  
                                    l3234 20AA                                      l3250 2D72  
                                    l3402 2B8E                                      l3330 1294  
                                    l3322 1226                                      l3314 11E0  
                                    l3306 11AA                                      l4018 2996  
                                    l4050 2298                                      l4042 2268  
                                    l4034 2246                                      l4026 2228  
                                    l4210 23B4                                      l4114 304A  
                                    l4106 2FD4                                      l4130 2F0A  
                                    l4124 2A5E                                      l3236 20BC  
                                    l3252 2D76                                      l3260 2F68  
                                    l3404 2B9A                                      l3340 12DE  
                                    l3332 1296                                      l3324 1234  
                                    l3316 11EC                                      l3308 11AE  
                                    l3420 08FC                                      l3412 0884  
                                    l3500 13EE                                      l4060 22C4  
                                    l4052 229E                                      l4044 227A  
                                    l4036 2254                                      l4028 222C  
                                    l4212 23BA                                      l4204 23AE  
                                    l4116 3052                                      l4108 2FF8  
                                    l4140 2F38                                      l4132 2F0E  
                                    l1389 2C6C                                      l4126 2A82  
                                    l3238 20C6                                      l3246 2D54  
                                    l1398 2F74                                      l3254 2F40  
                                    l3270 2194                                      l3406 2B9E  
                                    l3334 12A8                                      l3326 1246  
                                    l3318 120A                                      l3350 1790  
                                    l3430 0954                                      l3422 08FE  
                                    l3414 08A4                                      l3510 1446  
                                    l3502 140C                                      l4054 22B4  
                                    l4046 2282                                      l4062 22CA  
                                    l4038 225C                                      l4070 2466  
                                    l4150 2876                                      l4230 2430  
                                    l4222 23E0                                      l4214 23C0  
                                    l4206 23B0                                      l4118 3064  
                                    l4134 2F12                                      l4128 2A86  
                                    l3520 1000                                      l3248 2D60  
                                    l3256 2F4C                                      l3280 21FA  
                                    l3272 21A0                                      l3264 2162  
                                    l3408 2BA2                                      l3328 1274  
                                    l3336 12AE                                      l3360 17E8  
                                    l3352 1794                                      l3344 175E  
                                    l3440 09F2                                      l3432 095A  
                                    l3424 0918                                      l3416 08CC  
                                    l3512 145A                                      l3504 1410  
                                    l4064 22DA                                      l4056 22BC  
                                    l4048 228A                                      l4080 2492  
                                    l4072 246A                                      l4152 28B4  
                                    l4144 284E                                      l4160 2EC0  
                                    l4320 1542                                      l4304 14BA  
                                    l3600 2AEA                                      l4240 2462  
                                    l4232 2434                                      l4224 23EE  
                                    l4216 23D2                                      l4208 23B0  
                                    l4136 2F22                                      l4400 0DBA  
                                    l4170 18DA                                      l3290 2ED2  
                                    l3522 1004                                      l3258 2F50  
                                    l3282 220E                                      l3274 21B4  
                                    l3266 2172                                      l3338 12BE  
                                    l3370 186A                                      l3362 17FC  
                                    l3354 17A2                                      l3346 1762  
                                    l3450 0A9A                                      l3442 09F8  
                                    l3434 0962                                      l3426 0934  
                                    l3418 08EC                                      l3514 145E  
                                    l3506 1414                                      l4066 22E2  
                                    l4058 22BE                                      l4090 24CA  
                                    l4082 249A                                      l4074 2478  
                                    l4154 28B8                                      l4146 2856  
                                    l4410 2E84                                      l4162 2ECE  
                                    l4330 15E2                                      l4322 155E  
                                    l4314 14F4                                      l4306 14E8  
                                    l3602 2AFE                                      l3610 3068  
                                    l4250 2590                                      l4242 2516  
                                    l4234 244E                                      l4226 2400  
                                    l4138 2F34                                      l4180 1916  
                                    l4172 18DE                                      l4420 1B9A  
                                    l3380 2C6E                                      l3540 10BA  
                                    l3532 1060                                      l3524 1020  
                                    l3516 0FE8                                      l3276 21C8  
                                    l3268 2186                                      l3364 180A  
                                    l3372 1870                                      l3356 17C2  
                                    l3348 1770                                      l3460 0B00  
                                    l3452 0AB4                                      l3444 09FE  
                                    l3436 096A                                      l3428 0946  
                                    l3700 024A                                      l4260 2C36  
                                    l4500 0694                                      l4092 24E0  
                                    l4084 24AC                                      l4076 2480  
                                    l4148 2864                                      l4412 2E8E  
                                    l4324 158C                                      l4316 153A  
                                    l4308 14EC                                      l4332 15EC  
                                    l3604 2B00                                      l3612 306C  
                                    l3620 2D9C                                      l4252 25A0  
                                    l4228 241A                                      l4236 2458  
                                    l4340 0B76                                      l3294 3022  
                                    l4190 196A                                      l4182 191A  
                                    l4166 18C2                                      l4430 1BC0  
                                    l4422 1BAA                                      l4414 1B6C  
                                    l3382 2C72                                      l3550 1140  
                                    l3534 1076                                      l3526 1056  
                                    l3518 0FFC                                      l3278 21CC  
                                    l3374 1880                                      l3366 1838  
                                    l3358 17E0                                      l3286 2DD8  
                                    l3462 0B06                                      l3470 0B3C  
                                    l3454 0ACE                                      l3438 0970  
                                    l3446 0A62                                      l3710 02E4  
                                    l3702 0258                                      l4262 2C3E  
                                    l4510 0718                                      l4502 06B6  
                                    l4094 24E8                                      l4086 24B4  
                                    l4078 2484                                      l4406 2E58  
                                    l4158 2E96                                      l4326 1590  
                                    l4318 153E                                      l3606 2B10  
                                    l3614 307C                                      l3630 2DD0  
                                    l3622 2DA4                                      l4254 25A4  
                                    l4238 245E                                      l4342 0BA6  
                                    l4334 0B66                                      l4270 26DC  
                                    l3800 1E2A                                      l3296 303E  
                                    l3392 2FFC                                      l3560 3152  
                                    l4192 196E                                      l4168 18CA  
                                    l4440 1BE6                                      l4416 1B7A  
                                    l3384 2C86                                      l3552 1152  
                                    l3544 10F0                                      l3536 107E  
                                    l3528 105A                                      l3376 18A0  
                                    l3368 1858                                      l3288 2DF2  
                                    l3464 0B18                                      l3448 0A7C  
                                    l3456 0ADE                                      l3480 132C  
                                    l3720 0392                                      l3704 027C  
                                    l3640 0036                                      l4264 2C5A  
                                    l4256 2C1C                                      l4520 07B0  
                                    l4512 0720                                      l4504 06EA  
                                    l4096 24EE                                      l4088 24BC  
                                    l4408 2E6E                                      l4328 15C6  
                                    l3616 3084                                      l3624 2DB2  
                                    l3632 2DD4                                      l4248 251E  
                                    l4600 2076                                      l5080 1D46  
                                    l4360 0C4C                                      l4352 0BE6  
                                    l4344 0BA8                                      l4272 26FE  
                                    l3810 1E74                                      l3802 1E32  
                                    l3394 2FFC                                      l3562 3156  
                                    l3570 3124                                      l4194 1972  
                                    l4178 18E6                                      l5090 0E80  
                                    l4450 1C70                                      l4442 1C10  
                                    l4434 1BD6                                      l4418 1B8C  
                                    l3386 2CB4                                      l3538 1086  
                                    l3466 0B24                                      l3458 0AF0  
                                    l3482 1334                                      l3474 1300  
                                    l3730 043E                                      l3714 032A  
                                    l3706 02B6                                      l3650 006A  
                                    l3642 0044                                      l4258 2C2E  
                                    l5082 0832                                      l4522 07D4  
                                    l4514 0744                                      l4530 0870  
                                    l4506 06F6                                      l4098 24F4  
                                    l4290 1486                                      l3626 2DBA  
                                    l3618 2D98                                      l4602 2090  
                                    l4610 1CDC                                      l4282 2FA6  
                                    l4370 0C88                                      l4354 0C16  
                                    l4346 0BB0                                      l4274 271E  
                                    l3820 1EA6                                      l3812 1E84  
                                    l3804 1E3E                                      l3396 3012  
                                    l3564 315A                                      l4196 198E  
                                    l4188 1922                                      l3580 2C10  
                                    l5092 0F38                                      l4452 1C74  
                                    l4436 1BDE                                      l4444 1C3C  
                                    l4428 1BB2                                      l3388 2CB8  
                                    l3548 112E                                      l3468 0B2C  
                                    l3492 13AC                                      l3484 1348  
                                    l3476 1312                                      l3724 03AE  
                                    l3708 02D6                                      l3716 033C  
                                    l5084 00CE                                      l3660 008C  
                                    l3652 007C                                      l3644 0056  
                                    l4532 087C                                      l4524 07F8  
                                    l4516 0768                                      l4508 06FC  
                                    l4292 148E                                      l3628 2DC8  
                                    l3636 3132                                      l4540 1ECC  
                                    l4620 1D8C                                      l4612 1CEA  
                                    l4604 1CAA                                      l4700 22F0  
                                    l4284 310A                                      l5076 0D40  
                                    l4372 0CB8                                      l4364 0C52  
                                    l4348 0BE0                                      l4276 2750  
                                    l4268 26D8                                      l3822 1EB6  
                                    l3814 1E86                                      l3806 1E4C  
                                    l3566 311C                                      l3558 314E  
                                    l4198 19BE                                      l3582 2C14  
                                    l3574 2BC8                                      l5094 0F9E  
                                    l3910 0EA8                                      l3902 0E6A  
                                    l4446 1C40                                      l4454 1C7E  
                                    l5086 10A4                                      l3398 2B6E  
                                    l3494 13C0                                      l3486 1350  
                                    l3478 131A                                      l3742 04F0  
                                    l3734 0476                                      l3726 03D2  
                                    l3718 0360                                      l3646 005A  
                                    l3638 0012                                      l4518 078C  
                                    l4286 3088                                      l3830 30C4  
                                    l4294 149C                                      l4550 1F1A  
                                    l4542 1ED2                                      l4622 1D92  
                                    l4614 1CFC                                      l4606 1CBC  
                                    l4470 2804                                      l5078 2364  
                                    l4710 2316                                      l4702 22F6  
                                    l4382 0CF4                                      l4366 0C82  
                                    l4358 0C1C                                      l4390 0D2A  
                                    l4278 2754                                      ?_map 001B  
                                    ?_pad 0011                                      l3816 1E90  
                                    l3808 1E56                                      l4640 28BC  
                                    l3568 3120                                      l3576 2BF0  
                                    l3920 0ED6                                      l3912 0EC8  
                                    l3904 0E96                                      l4456 1C8E  
                                    l4448 1C5C                                      l5088 1BFA  
                                    l3496 13C4                                      l3488 135E  
                                    l3760 0580                                      l3744 0514  
                                    l3752 0542                                      l3736 049A  
                                    l3728 03F6                                      l3680 0144  
                                    l3672 00A8                                      l3664 0094  
                                    l3656 0084                                      l3648 0066  
                                    l4528 081C                                      l4480 059A  
                                    l4288 309E                                      l3840 30DA  
                                    l3832 30C8                                      l4296 14A0  
                                    l4552 1F26                                      l4544 1ED6  
                                    l4624 1DA6                                      l4608 1CCA  
                                    l4472 2816                                      l4464 27D6  
                                    l4720 2346                                      l4712 2326  
                                    l4704 22FE                                      l4384 0D24  
                                    l4376 0CBE                                      l4392 0D86  
                                    l3818 1E96                                      l4650 291E  
                                    l4642 28BE                                      l4634 30F4  
                                    l3578 2C00                                      l3586 30E0  
                                    l3930 0F1A                                      l3922 0EE6  
                                    l3906 0E9A                                      l4458 1CA2  
                                    l3498 13E2                                      l3754 0550  
                                    l3746 0522                                      l3738 04D0  
                                    l3690 01C4                                      l3682 017A  
                                    l3674 00FC                                      l4490 05D6  
                                    l4482 05A6                                      l3834 30CE  
                                    l3826 3146                                      l4298 14B2  
                                    l3594 2ACE                                      l3850 2650  
                                    l4562 1F44                                      l4570 1FB0  
                                    l4554 1F2A                                      l4546 1EF2  
                                    l4538 1EC8                                      l4626 1DAA  
                                    l4618 1D32                                      l4474 2840  
                                    l4466 27E4                                      l4714 232E  
                                    l4706 2306                                      l4394 0D8A  
                                    l4378 0CEE                                      l4730 1A18  
                                    l4660 2928                                      l4652 2920  
                                    l4644 28C0                                      l4636 30F8  
                                    l3940 0F64                                      l3924 0EF6  
                                    l3908 0EA4                                      l3748 0536  
                                    l3684 0188                                      l3676 011E  
                                    l3668 009C                                      l4484 05B2  
                                    l3844 30A8                                      l3836 30D6  
                                    l3828 314A                                      l3596 2AD4  
                                    l3588 2AB8                                      l3860 266C  
                                    l3852 2654                                      l3780 2964  
                                    l3772 292C                                      l4580 1FE2  
                                    l4572 1FB8                                      l4564 1F84  
                                    l4556 1F3C                                      l4548 1EFE  
                                    l4628 1DB4                                      l4476 2844  
                                    l4468 27F6                                      l4716 2336  
                                    l4708 230E                                      l4724 234E  
                                    l4396 0DA4                                      l4740 1A4C  
                                    l4732 1A2A                                      l3790 1DE2  
                                    l3782 1DBC                                      l4654 2922  
                                    l4646 28F4                                      l4638 28BC  
                                    l4662 313C                                      l4670 15FC  
                                    l3950 0FCE                                      l3942 0F68  
                                    l3926 0F02                                      l3934 0F22  
                                    l3918 0ED0                                      l3870 0DE2  
                                    l3694 020A                                      l3686 0196  
                                    l3678 0120                                      l3758 055C  
                                    l4486 05BE                                      l4478 0594  
                                    l3838 30D8                                      l3598 2AE2  
                                    l3862 2690                                      l3854 2654  
                                    l3774 293C                                      l3846 275C  
                                    l4582 1FEE                                      l4574 1FBC  
                                    l4566 1F90                                      l4718 233E  
                                    l4398 0DB4                                      l4742 1A5E  
                                    l4734 1A2E                                      l4750 1A8A  
                                    l4830 25CC                                      l3792 1DF0  
                                    l3784 1DC0                                      l4656 2924  
                                    l4648 291C                                      l4672 168C  
                                    l4664 15F4                                      l3952 0FDE  
                                    l3928 0F0E                                      l3936 0F56  
                                    l3880 0E14                                      l3872 0DF2  
                                    l3688 01B6                                      l3696 021C  
                                    l4496 05E0                                      l4488 05CA  
                                    l3776 294A                                      l4584 200A  
                                    l4576 1FC2                                      l4568 1F96  
                                    l4760 1ACE                                      l4752 1A92  
                                    l4744 1A6A                                      l4736 1A42  
                                    l4840 25F0                                      l4832 25D0  
                                    l3794 1E00                                      l3786 1DCE  
                                    l4658 2926                                      l4690 16F8  
                                    l4682 16B4                                      l4674 1690  
                                    l3938 0F5A                                      l3890 0E2A  
                                    l3882 0E1C                                      l3874 0E02  
                                    l3946 0F88                                      l3866 0DD0  
                                    l3698 0240                                      l4498 0610  
                                    l3858 2658                                      l3778 295A  
                                    l4594 2024                                      l4586 2016  
                                    l4578 1FC6                                      l4770 1B2E  
                                    l4762 1ADE                                      l4754 1AA6  
                                    l4746 1A7E                                      l4738 1A4A  
                                    l4850 2604                                      l4842 25F4  
                                    l4834 25D4                                      l4826 25C0  
                                    l3796 1E04                                      l3788 1DDE  
                                    l4692 16FC                                      l4676 16AC  
                                    l3892 0E3A                                      l3948 0FBC  
                                    l3876 0E06                                      l3868 0DDC  
                                    l3980 2D18                                      l4596 2064  
                                    l4588 201A                                      l4772 1B32  
                                    l4764 1AF4                                      l4756 1AB6  
                                    l4748 1A82                                      l4860 262A  
                                    l4852 260A                                      l4844 25F8  
                                    l4836 25E8                                      l4828 25C8  
                                    l3798 1E14                                      l4694 1718  
                                    l3974 2F76                                      l3958 0FE4  
                                    l3894 0E4A                                      l3878 0E0E  
                                    l3982 2D1A                                      l4598 2070  
                                    l4774 1B44                                      l4766 1B06  
                                    l4758 1ACA                                      l4862 263C  
                                    l4854 261C                                      l4846 2600  
                                    l4838 25EC                                      l4696 173C  
                                    l4688 16BC                                      l3976 2F96  
                                    l3896 0E56                                      l3888 0E24  
                                    l3984 2D2C                                      l3992 2CC0  
                                    l4776 1B5A                                      l4768 1B1C  
                                    l4864 2644                                      l4856 2620  
                                    l4848 2602                                      l4698 1740  
                                    l3898 0E62                                      l3986 2D2E  
                                    l3978 2D10                                      l4778 1B62  
                                    l4858 2624                                      l3988 2D40  
                                    l3998 2CC8                              ?_leer_eeprom 0003  
                                    STR_1 7D67                                      STR_2 7E94  
                                    STR_3 7D8C                                      STR_4 7CE3  
                                    STR_5 7E1B                                      STR_6 7DF9  
                                    STR_7 7F90                                      STR_8 7ECA  
                                    STR_9 7DB1                                      u2000 2172  
                                    u2001 216E                                      u2010 2194  
                                    u2011 2190                                      u2020 21EA  
                                    u2100 120A                                      u2021 21E6  
                                    u2101 1206                                      u2030 21FA  
                                    u2110 1234                                      u2031 21F6  
                                    u2111 1230                                      u3000 0EF6  
                                    u2200 2C86                                      u2120 1274  
                                    u2040 2DF2                                      u3001 0EF2  
                                    u2201 2C82                                      u2121 1270  
                                    u2041 2DEE                                      u3010 0F84  
                                    u2050 2F02                                      u2210 2CB4  
                                    u2130 12BE                                      u3011 0F80  
                                    u2051 2EFC                                      u2211 2CB0  
                                    u2131 12BA                                      u2220 3012  
                                    u3020 0FCE                                      u2060 2F04  
                                    u2140 1770                                      u2300 0946  
                                    u3100 227A                                      u2221 300E  
                                    u3021 0FCA                                      u2141 176C  
                                    u2301 0942                                      u3101 2276  
                                    u2230 3020                                      u3030 0FDE  
                                    u2070 118A                                      u2150 17A2  
                                    u2310 0954                                      u3110 2298  
                                    u2231 301C                                      u3031 0FDA  
                                    u2071 1186                                      u2151 179E  
                                    u2311 0950                                      u3111 2294  
                                    u3200 2A7E                                      u2240 2B82  
                                    u2080 11BC                                      u2160 17E0  
                                    u2320 0A7C                                      u3120 22B4  
                                    u3040 2D3E                                      _LATD 000F8C  
                                    u2241 2B7E                                      u2081 11B8  
                                    u2161 17DC                                      u2321 0A78  
                                    u2401 130A                                      u3121 22B0  
                                    u3041 2D3A                                      u3210 2AA6  
                                    u2170 180A                                      u2330 0A9A  
                                    u2250 08B4                                      u2410 132C  
                                    u3130 22DA                                      u3050 2D0C  
                                    u2091 11E6                                      u2171 1806  
                                    u2331 0A96                                      u2251 08AE  
                                    u2411 1328                                      u3131 22D6  
                                    u3051 2D08                                      u3220 2AB6  
                                    u3060 2E50                                      u2500 1056  
                                    u2180 1838                                      u2340 0AB4  
                                    u2260 08B6                                      u2420 135E  
                                    u3140 2478                                      u3300 244E  
                                    u3221 2AB2                                      u3061 2E4C  
                                    u2501 1052                                      u2181 1834  
                                    u2341 0AB0                                      u2421 135A  
                                    u3141 2474                                      u3301 244A  
                                    u2510 1072                                      u2190 1880  
                                    u2350 0ACE                                      u2270 08CC  
                                    u2430 137C                                      u3070 29EE  
                                    u3150 2492                                      u3310 25BE  
                                    u3230 2F22                                      u3207 2A74  
                                    u2511 106E                                      u2191 187C  
                                    u2351 0ACA                                      u2271 08C8  
                                    u2431 1378                                      u3071 29EA  
                                    u3151 248E                                      u3311 25BA  
                                    u3231 2F1E                                      u2520 1128  
                                    u2360 0ADE                                      u2280 08FC  
                                    u2440 13A8                                      u3080 223A  
                                    u3160 24AC                                      u2600 2ACE  
                                    u3240 2F34                                      u3400 0BE0  
                                    u3320 26FE                                      u3217 2A9C  
                                    u2521 1122                                      u2361 0ADA  
                                    u2281 08F8                                      u2441 13A4  
                                    u3081 2236                                      u3161 24A8  
                                    u2601 2ACA                                      u3241 2F30  
                                    u3401 0BDC                                      u3321 26FA  
                                    u2530 112A                                      u2370 0AF0  
                                    u2290 0918                                      u2450 13E2  
                                    u3090 2254                                      u3170 24CA  
                                    u3250 2876                                      u2610 2AE2  
                                    u3410 0C16                                      u3330 271E  
                                    u2371 0AEC                                      u2291 0914  
                                    u2451 13DE                                      u3091 2250  
                                    u3171 24C6                                      u3251 2872  
                                    u2611 2ADE                                      u3411 0C12  
                                    u3331 271A                                      u3260 198E  
                                    u2540 1140                                      u2380 0B00  
                                    u2460 1432                                      u2700 0188  
                                    u3180 24E0                                      u3500 2E84  
                                    u2620 2AFE                                      u3420 0C4C  
                                    u3340 2750                                      u3261 198A  
                                    u2541 113C                                      u2381 0AFC  
                                    u2461 142E                                      u2701 0184  
                                    u3181 24DC                                      u3501 2E80  
                                    u2621 2AFA                                      u3421 0C48  
                                    u3341 274C                                      u3270 1A16  
                                    u3510 1B8C                                      u2550 1152  
                                    u2390 0B18                                      u2470 1442  
                                    u2710 0204                                      u3190 2504  
                                    u3350 309E                                      u2630 2B10  
                                    u3430 0C82                                      u3271 1A12  
                                    u3511 1B88                                      u2551 114E  
                                    u2391 0B14                                      u2471 143E  
                                    u2711 01FE                                      u3191 2500  
                                    u3351 309A                                      u2631 2B0C  
                                    u3431 0C7E                                      u2560 2BF0  
                                    u3520 1BAA                                      u2480 147C  
                                    u2800 03D2                                      u2720 0206  
                                    u3360 14B2                                      u2640 2DB2  
                                    u3280 23D2                                      u3600 1F3C  
                                    u3440 0CB8                                      u2561 2BEC  
                                    u3521 1BA6                                      u2481 1478  
                                    u2801 03CE                                      u3361 14AE  
                                    u2641 2DAE                                      u3281 23CE  
                                    u3601 1F38                                      u3441 0CB4  
                                    u2570 2C00                                      u3530 1BD2  
                                    u2490 1020                                      u2810 03F6  
                                    u2730 021C                                      u3370 155E  
                                    u2650 2DC8                                      u3290 2400  
                                    u3610 1FB0                                      u3450 0CEE  
                                    u2571 2BFC                                      u3531 1BCE  
                                    u2491 101C                                      u2811 03F2  
                                    u2731 0218                                      u3371 155A  
                                    u2651 2DC4                                      u3291 23FC  
                                    u3611 1FAC                                      u3451 0CEA  
                                    u2900 1E74                                      u2580 2C10  
                                    u3540 1C5C                                      u1940 20AA  
                                    u2820 049A                                      u2740 0240  
                                    u2660 0036                                      u3380 15E2  
                                    u3620 2090                                      u3460 0D24  
                                    u3700 1A2A                                      u2901 1E70  
                                    u2581 2C0C                                      u3541 1C58  
                                    u1941 20A6                                      u2821 0496  
                                    u2741 023C                                      u2661 0032  
                                    u3381 15DE                                      u3621 208C  
                                    u3461 0D20                                      u3701 1A26  
                                    u2910 1EA6                                      u2590 30F2  
                                    u3550 1C8E                                      u1950 20BC  
                                    u2830 0514                                      u2750 027C  
                                    u2670 010E                                      u3630 1CBC  
                                    u3470 0DA4                                      u3390 0BA6  
                                    u3710 1A42                                      u2911 1EA2  
                                    u2591 30EE                                      u3551 1C8A  
                                    u1951 20B8                                      u2831 0510  
                                    u2751 0278                                      u2671 010A  
                                    u3631 1CB8                                      u3471 0DA0  
                                    u3391 0BA2                                      u3711 1A3E  
                                    u1960 20E4                                      u2760 0324  
                                    u2680 011E                                      u2920 266C  
                                    u2840 294A                                      u3640 1CDC  
                                    u3560 27F6                                      u3480 0DB4  
                                    u3800 1B44                                      u3720 1A5E  
                                    u1961 20E0                                      u2761 031E  
                                    u2681 011A                                      u2921 2668  
                                    u2841 2946                                      u3641 1CD8  
                                    u3561 27F2                                      u3481 0DB0  
                                    u3801 1B40                                      u3721 1A5A  
                                    u1970 211A                                      u2770 0326  
                                    u2690 0144                                      u3490 2E6E  
                                    u2930 26C6                                      u2850 2984  
                                    u3650 1CFC                                      u3570 2816  
                                    u3730 1AA6                                      u1971 2116  
                                    u2691 0140                                      u3491 2E6A  
                                    u2931 26C2                                      u2851 2980  
                                    u3651 1CF8                                      u3571 2812  
                                    u3731 1AA2                                      u2860 1DCE  
                                    u3660 16AC                                      u2940 0DF2  
                                    u1980 2D96                                      u2780 033C  
                                    u3580 0610                                      u3740 1AB6  
                                    u2861 1DCA                                      u3661 16A8  
                                    u2941 0DEE                                      u1981 2D92  
                                    u2781 0338                                      u3581 060C  
                                    u3741 1AB2                                      u2870 1DF0  
                                    u3670 1718                                      u2950 0E02  
                                    u1990 2F68                                      u2790 0360  
                                    u3590 0718                                      u3750 1ADE  
                                    u2871 1DEC                                      u3671 1714  
                                    u2951 0DFE                                      u1991 2F64  
                                    u2791 035C                                      u3591 0714  
                                    u3751 1ADA                                      u2880 1E2A  
                                    u3680 175C                                      u2960 0E3A  
                                    u3760 1AF4                                      u2881 1E26  
                                    u3681 1758                                      u2961 0E36  
                                    u3761 1AF0                                      u2890 1E4C  
                                    u2970 0E4A                                      u3690 2326  
                                    u3770 1B06                                      u3850 261C  
                                    u2891 1E48                                      u2971 0E46  
                                    u3907 2DB4                                      u3691 2322  
                                    u3771 1B02                                      u3851 2618  
                                    u2980 0EC4                                      u3780 1B1C  
                                    u3860 263C                                      u2981 0EC0  
                                    u3917 2DCA                                      u3781 1B18  
                                    u3861 2638                                      u2990 0EE6  
                                    u3790 1B2E                                      u2991 0EE2  
                                    u3927 3072                                      u3791 1B2A  
                                    u3937 3080                                      u3947 2AD0  
                                    u3957 2EC6                                      u3877 2596  
                                    u3967 2F9C                                      u3887 2D12  
                                    u3897 2D9E                                      _TMR0 000FD6  
                    _minutosTranscurridos 007C                        ??_i2c_reinicia_com 0002  
                          _check_response 2D98                   escribeHorariosMemoria@i 0011  
                 escribeHorariosMemoria@j 000D                             ??_i2c_detener 0002  
                                    abs@a 0013                                      _dbuf 008D  
                                    _atoi 0FE8                                      _ctoa 2B6E  
                                    _main 25C0                                      _dtoa 0884  
                                    _hora 0087                                      _prec 0074  
                                    _nout 0070                                      pad@i 0018  
                                    pad@p 0015                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    pad@w 001A                                      map@x 001B  
                                    fsr2l 000FD9                                      _stoa 1300  
                                    btemp 005F                            ?_sistemaRegado 0001  
                __size_of_asignarHorarios 013E                             ??_i2c_iniciar 0001  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 000E                  ??_restablecerDatosSensor 0005  
                           __CFG_IESO$OFF 000000                          ??_DHT11_ReadData 0001  
                       _constructorSensor 3132                      __size_of_DHT11_Start 0020  
                            ?_lecturaWifi 0001                   __size_of_setTiempoRegar 0076  
                           __CFG_MCLRE$ON 000000                              ___param_bank 000000  
                      ?_constructorSensor 0001                        setTiempoRegar@hora 0014  
                      _leeHorariosMemoria 1486                          ??_encenderBombas 000E  
                                   ??_abs 0015                                     ??_map 002F  
                                   ??_pad 0017                            _i2c_envia_dato 311A  
                           __CFG_PLLDIV$1 000000                            _i2c_inicia_com 314E  
                         __end_of___aldiv 1EC8                           __end_of___aodiv 1300  
                                   ?_atoi 0008                                     ?_ctoa 001C  
                                   ?_main 0001                                     ?_dtoa 001C  
                         __end_of___aomod 18C2                             _convertirDato 3048  
                         __end_of___awdiv 22EC                                     STR_10 7FCF  
                                   STR_12 7FDD                                     STR_20 7F48  
                                   STR_21 7EAF                                     STR_13 7E78  
                                   STR_30 7D14                                     STR_22 7F60  
                                   STR_14 7DD5                                     STR_31 7FBE  
                                   STR_23 7F17                                     STR_15 7D41  
                                   STR_32 7FF5                                     STR_24 7F30  
                                   STR_16 7EE4                                     STR_33 7FEA  
                                   STR_17 7F78                                     STR_25 7E3B  
                                   STR_18 7EFE                                     STR_26 7E5B  
                                   STR_19 7FA7                                     STR_27 7D14  
                                   STR_28 7E3B                           __end_of___awmod 2516  
                                   STR_29 7E5B                       ??_constructorSensor 0005  
                                   ?_stoa 000A                         convertirDato@dato 0002  
                                   _T0CON 000FD5                           ___awdiv@divisor 0003  
                                   i2l217 2A56                       ?_leeHorariosMemoria 0001  
                         ___awdiv@counter 0005                                     _RCREG 000FAE  
                            vfpfcnvrt@fmt 0042                                     _SPBRG 000FAF  
                           __CFG_USBDIV$1 000000                                     _TRISD 000F95  
                          limpiarBuffer@i 0001                                     _TXREG 000FAD  
                           __CFG_PWRT$OFF 000000                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                     ___lmul@multiplicand 0005                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                        __size_of_UART_init 0070  
                      __size_of_UART_read 0054                                     _flags 0076  
                                   _fputc 2098                                     _fputs 2D54  
                         __end_of_isdigit 2F0A                    __end_of_check_response 2DD8  
                             ?_UART_write 0001                                     atoi@n 0015  
                                   pad@fp 0011                                     atoi@s 0008  
                                   _width 0072                                     ctoa@c 001E  
                                   _putch 315E                                     ctoa@w 001F  
                                   dtoa@d 001E                                     dtoa@i 003E  
                                   dtoa@n 0036                                     dtoa@p 0030  
                                   dtoa@s 0034                                     dtoa@w 0032  
                         __end_of_isspace 2CC0                                     tablat 000FF5  
                                   plusw1 000FE3                                     plusw2 000FDB  
                                   stoa@i 0016                                     stoa@l 001E  
                                   stoa@p 001C                                     stoa@s 000C  
       __size_of_mostrarDatosSensoresWIFI 00F0                                     stoa@w 0018  
                                   ttemp5 0060                                     ttemp6 0063  
                                   ttemp7 0067                                     status 000FD8  
               ?_mostrarDatosSensoresWIFI 0001                                     wtemp8 0060  
                         __end_of_sprintf 2C6E                        escribe_eeprom@dato 0009  
               __end_of_constructorSensor 313C                      ??_leeHorariosMemoria 0007  
                          __CFG_ICPRT$OFF 000000                                _i2c_espera 2FFC  
                        ??_dameHoraActual 0005                           __initialization 2B14  
                     __end_of_i2c_detener 315E           __size_of_lecturaAnalogaSensores 00AA  
                  __end_of_i2c_envia_dato 3126                              __end_of_atoi 1178  
                            __end_of_ctoa 2BC8                              __end_of_main 2650  
                            __end_of_dtoa 0B66                  ??_escribeHorariosMemoria 000B  
                         ??_configurarAdc 0001                              __end_of_stoa 1486  
                  __end_of_i2c_inicia_com 3156                        _inicializarObjetos 15F4  
                     __end_of_i2c_iniciar 310A                    sistemaPrincipal@opcion 00F3  
                        _dameHumedadSuelo 2D0E                            ?_convertirDato 0001  
                    __size_of_fijaHoraRtc 003E                                    ??_atoi 000A  
                                  ??_ctoa 001F                                    ??_main 005F  
                                  ??_dtoa 0026                                    ??_stoa 000E  
               setTiempoRegar@tiempoRegar 0013                             __activetblptr 000002  
                     ?_inicializarObjetos 0001                        i2c_envia_dato@dato 0002  
                         __CFG_CCP2MX$OFF 000000                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    ?_fputc 0001  
                                  ?_fputs 000A                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                           ?_check_response 0001  
                        ___awdiv@dividend 0001                    encenderBombas@flagSeco 0010  
                                  ?_putch 0001                        convertirDato@datoR 0003  
                           _horaRegar$806 0006                                    i2l4800 2A4C  
                                  i2l4802 2A50                                    i2l4790 2A1C  
                                  i2l4792 2A2C                                    i2l4784 29FA  
                                  i2l4794 2A30                                    i2l4786 2A08  
                                  i2l4796 2A32                                    i2l4788 2A1A  
                                  i2l4798 2A3E                           ??_sistemaRegado 0032  
                           vfpfcnvrt@done 0054                                    _SSPADD 000FC8  
                                  _SSPBUF 000FC9                      ??_inicializarObjetos 0007  
         __size_of_restablecerDatosSensor 004E                            __CFG_XINST$OFF 000000  
                        __end_of_getValue 0FE8                              vfprintf@cfmt 005B  
                __end_of_sistemaPrincipal 23AE                            _escribe_eeprom 2F76  
                                  ___lmul 292C                           ?_i2c_envia_dato 0001  
                               ??___aldiv 0015                                 ??___aodiv 0011  
                               ??___aomod 0011                                    ___wmul 3022  
                       __end_of_UART_init 292C                         __end_of_UART_read 2C1C  
                               ??___awdiv 0005                                 ??___awmod 0005  
                       ??_asignarHorarios 0013                          __end_of_leer_rtc 2FFC  
                         ?_i2c_inicia_com 0001                          __end_of_estaSeco 2F40  
                                  _buffer 0100                       __size_of_UART_write 0016  
                            ?_UART_printf 0002                                    clear_0 2B3C  
                                  clear_1 2B4E                                    clear_2 2B5A  
                        ___awdiv@quotient 0007                           ___awmod@divisor 0003  
                                  _setRtc 284C                           ___awmod@counter 0005  
                                  pad@buf 0013                                    ctoa@fp 001C  
                                  dtoa@fp 001C                                    _strlen 2F40  
                         _i2c_recibe_dato 30C4                    __size_of_dameDiaActual 0010  
                                  fputc@c 0001                                    fputs@c 000E  
                                  fputs@i 000F                                    fputs@s 000A  
                               ??_isdigit 0003                      escribe_rtc@direccion 0004  
                            __mediumconst 7CE2                                 ??_isspace 0003  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                    _lecturaAnalogaSensores 2516  
            __end_of_mostrarDatosSensores 2098                                    stoa@cp 001A  
                                  stoa@fp 000A                                    putch@c 0001  
                        __end_of_vfprintf 29F8                                 ??_sprintf 005D  
                           ?_regadoRapido 0001                                __accesstop 0060  
                 __end_of__initialization 2B60                      __size_of_escribe_rtc 001E  
                         __CFG_PBADEN$OFF 000000                      __size_of_leer_eeprom 003C  
                         __CFG_FOSC$XT_XT 000000                               _i2c_detener 3156  
              __size_of_constructorSensor 000A                             ___rparam_used 000001  
                             _i2c_iniciar 30F4                    __end_of_escribe_eeprom 2FA6  
                             ?_i2c_espera 0001                            _setTiempoRegar 27D6  
         leeHorariosMemoria@caracterLeido 0009                            __pcstackCOMRAM 0001  
                            leer_rtc@dato 0004                              __pidataBANK0 3126  
                    __size_of_lecturaWifi 00B8           __size_of_escribeHorariosMemoria 0156  
                         ??_convertirDato 0001                             __end_of_fputc 2162  
                           __end_of_fputs 2D98                             __end_of_putch 3160  
                  __size_of_limpiarBuffer 0040                    _restablecerDatosSensor 2CC0  
                            _datoRecibido 0083                         ?_dameDatosSistema 0001  
                          ??_regadoRapido 000D                                   ??_fputc 0005  
                                 ??_fputs 000E                                   ??_putch 0001  
                              __pbssBANK0 0060                                __pbssBANK1 0100  
                      ??_dameDatosSistema 005D                   __size_of_desbordamiento 2A52  
                      __size_of_horaRegar 0084                    __end_of_setTiempoRegar 284C  
                           _dameDiaActual 310A         constructorSensor@porcientoHumedad 0003  
                            lecturaWifi@i 000F                           ?_escribe_eeprom 0007  
                              _fijaDiaRtc 3088                        _contInterrupciones 0078  
               __size_of_i2c_reinicia_com 0008                                   ?___lmul 0001  
                                 ?___wmul 0001                                _flagRegado 0080  
                 __end_of_i2c_recibe_dato 30DE                                   _ACKSTAT 007E2E  
                          ___lmul@product 0009                                   ?_setRtc 0001  
                                 ?_strlen 0001             dameTemperaturaHumedad@humedad 0009  
                      __size_of_vfpfcnvrt 0582                       __size_of_i2c_espera 0026  
                               ?_getValue 0002                    _escribeHorariosMemoria 18C2  
                                 _SSPCON1 000FC6                                   _SSPCON2 000FC5  
                            ??_UART_write 0001                                   _SSPSTAT 000FC7  
                __end_of_dameHumedadSuelo 2D54                                 ?_leer_rtc 0001  
                               ?_estaSeco 000B                           __CFG_VREGEN$OFF 000000  
                          ?_dameDiaActual 0001                             ??_DHT11_Start 0001  
                           _limpiarBuffer 2E18                           ?_setTiempoRegar 0001  
                                 _Humedad 007E                                   __Hparam 0000  
                                 __Lparam 0000                                   ___aldiv 1DBC  
                                 ___aodiv 1178                                   ___aomod 175E  
                                 ___awdiv 2228                           __size_of___lmul 006A  
                    _mostrarDatosSensores 1FB8                                   ___awmod 2466  
                         __size_of___wmul 0026                                 ?_vfprintf 00AD  
                         __CFG_STVREN$OFF 000000                               _Temperatura 007F  
                                 __pcinit 2B14                                   __ramtop 0800  
                      __end_of_UART_write 30F4                           __size_of_setRtc 0070  
                                 __ptext0 25C0                                   __ptext1 1A18  
                                 __ptext2 26D8                                   __ptext3 0B66  
                                 __ptext4 2F0A                                   __ptext5 2FA6  
                                 __ptext6 310A                                   __ptext7 2FD2  
                                 __ptext8 3048                                   __ptext9 22EC  
                 check_response@respuesta 0001                         __end_of_horaRegar 275C  
                               _T0CONbits 000FD5                           __size_of_strlen 0036  
                    __size_of_UART_printf 005E                              __size_of_abs 0040  
                            __size_of_pad 00C6                              __size_of_map 007A  
                        ??_check_response 0001                                   _isdigit 2ED2  
                        ___awmod@dividend 0001                                   _regando 007B  
                   regadoRapido@areaRegar 0010                          ___aldiv@dividend 000D  
                                 _isspace 2C6E                                   _minutos 0086  
                                 atoi@neg 000E                                ??_getValue 0004  
                                 _sprintf 2C1C                            __pintcode_body 29F8  
                    end_of_initialization 2B60                                ??_leer_rtc 0003  
                              ??_estaSeco 000D                                   fputc@fp 0003  
                          ?_limpiarBuffer 0001                           _asignarHorarios 1B6C  
                           __Lmediumconst 7CE2                                   int_func 29F8  
                                 fputs@fp 000C                          ??_i2c_envia_dato 0002  
             __size_of_leeHorariosMemoria 016E                          ??_i2c_inicia_com 0002  
                             ?_fijaDiaRtc 0001                          _VALOR_TIMER0UART 00FD  
                       __end_of_vfpfcnvrt 0594                  ??_dameTemperaturaHumedad 0003  
                               _RCSTAbits 000FAB                          ___aldiv@quotient 0017  
                   ?_mostrarDatosSensores 0001                       __end_of_DHT11_Start 3088  
                                 postdec1 000FE5                                   postdec2 000FDD  
                       ?_sistemaPrincipal 0001                   _peticionLecturaSensores 007A  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                             ??_fijaHoraRtc 0011  
                    __end_of_regadoRapido 1DBC                          ?_i2c_recibe_dato 0001  
                              ??_vfprintf 005B                             setRtc@datoRtc 000F  
                   __end_of_configurarAdc 3146                        ??_sistemaPrincipal 00F1  
                                 strlen@a 0003                                   strlen@s 0001  
                               _UART_init 28BC                                getValue@Rx 000C  
                               _UART_read 2BC8                                 _PORTDbits 000F83  
                 __size_of_DHT11_ReadData 005C                   ?_lecturaAnalogaSensores 0001  
                           setRtc@seteado 000E                 dameHumedadSuelo@canalLeer 0005  
                 lecturaAnalogaSensores@i 0030                                 _TRISBbits 000F93  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                 __size_of_encenderBombas 026A                  _mostrarDatosSensoresWIFI 1EC8  
                         ??_dameDiaActual 0005                                map@out_max 002B  
                              map@out_min 0027                            _desbordamiento 0008  
                          _esperandoDatos 0089                            _UART_init$1894 0023  
                            ?_i2c_detener 0001                     __end_of_sistemaRegado 1B6C  
                               _TXSTAbits 000FAC                         dameDatosSistema@i 00EF  
             __size_of_inicializarObjetos 016A                              ?_i2c_iniciar 0001  
                            ??_i2c_espera 0001                         _MODO_COMUNICACION 0088  
                      DHT11_ReadData@data 0002                          _i2c_reinicia_com 3146  
                          __end_of___lmul 2996                               vfpfcnvrt@ap 0044  
                             vfpfcnvrt@cp 0052                               vfpfcnvrt@fp 0040  
                             vfpfcnvrt@ll 004A                            __end_of___wmul 3048  
                 ?_restablecerDatosSensor 0001            __end_of_lecturaAnalogaSensores 25C0  
                              ?_UART_init 001B                                ?_UART_read 0001  
                 __size_of_dameHoraActual 002C                            __end_of_setRtc 28BC  
                     __end_of_fijaHoraRtc 2E96                            __end_of_strlen 2F76  
                     start_initialization 2B14                              _estaSeco$799 000D  
                             __end_of_abs 2E18                   __end_of_asignarHorarios 1CAA  
                             __end_of_pad 2228                               __end_of_map 27D6  
                     __size_of_fijaDiaRtc 001E         escribeHorariosMemoria@contMemoria 000F  
                  __end_of_desbordamiento 2A5A                        __end_of_i2c_espera 3022  
                           ??_escribe_rtc 0004                             ??_leer_eeprom 0005  
                         ??_limpiarBuffer 0001                          ??_escribe_eeprom 000A  
                     leeHorariosMemoria@i 000E                       leeHorariosMemoria@j 000A  
                    constructorSensor@pin 0004                               _DHT11_Start 3068  
                           ??_lecturaWifi 000D                     _dameDatosSistema$1895 00E7  
                   _dameDatosSistema$1896 00E9                     _dameDatosSistema$1897 00EB  
                   _dameDatosSistema$1898 00ED                    ??_mostrarDatosSensores 005D  
                             vfprintf@fmt 00AF                 __size_of_dameDatosSistema 02F0  
         __size_of_dameTemperaturaHumedad 0088                                  ??___lmul 0009  
                                ??___wmul 0005            __end_of_restablecerDatosSensor 2D0E  
                             __pdataBANK0 00F4                          __CFG_LPT1OSC$OFF 000000  
                       leer_rtc@direccion 0003                                  ??_setRtc 000D  
                   __end_of_convertirDato 3068                                  ??_strlen 0003  
                             __pbssBIGRAM 0132                   ?_escribeHorariosMemoria 0001  
                           __pcstackBANK0 00AD                          ___aodiv@dividend 0001  
           dameDatosSistema@bufferHorario 00C9                           ?_desbordamiento 0001  
                        ??_setTiempoRegar 0013                                 _diaActual 0084  
                 inicializarObjetos@i_809 000B                         __size_of_getValue 0218  
                       ?_dameHumedadSuelo 0001                    getValue@datoIncorrecto 0006  
                       UART_printf@cadena 0002                             lecturaWifi@Rx 000D  
                               _atoi$1542 0010                                 _atoi$1543 0014  
                               _atoi$1544 0012                        ??_dameHumedadSuelo 0003  
                       __size_of_leer_rtc 002A                         __size_of_estaSeco 0036  
                     __end_of_escribe_rtc 30C4                       __end_of_leer_eeprom 2ED2  
                   __size_of_regadoRapido 0112                                 _dtoa$1057 002E  
                               __pintcode 0008                             __pmediumconst 7CE2  
                                ?___aldiv 000D                                  ?___aodiv 0001  
                                ?___aomod 0001                                  ?___awdiv 0001  
                        ___aodiv@quotient 0013                                  ?___awmod 0001  
                             _fijaHoraRtc 2E58                       __end_of_lecturaWifi 2466  
                          _DHT11_ReadData 2AB8                                setRtc@dato 0010  
                             ??_UART_init 001F                               ??_UART_read 0001  
                       __size_of_vfprintf 0062            __end_of_escribeHorariosMemoria 1A18  
                                ?_isdigit 0001                            _encenderBombas 0B66  
                                ?_isspace 0001                                 _horaRegar 26D8  
          dameTemperaturaHumedad@checkSum 0005                    _dameTemperaturaHumedad 2650  
                        ?_asignarHorarios 0001                                  ?_sprintf 00B3  
                          __size_of_fputc 00CA                            __size_of_fputs 0044  
                            _regadoRapido 1CAA                            __size_of_putch 0002  
                         ___aldiv@divisor 0011                           ___aldiv@counter 0015  
                          ___wmul@product 0005                                  _LATDbits 000F8C  
                                _PIE1bits 000F9D                      __size_of_i2c_detener 0008  
                            ??_fijaDiaRtc 0011                                  _PIR1bits 000F9E  
                                i2u381_40 2A08                                  i2u381_41 2A04  
                                i2u382_40 2A1A                                  i2u382_41 2A16  
                                i2u383_40 2A2C                                  i2u383_41 2A28  
                                i2u384_40 2A4C                                  i2u384_41 2A48  
                 restablecerDatosSensor@i 0005                      __size_of_i2c_iniciar 0016  
                        __CFG_WDTPS$32768 000000                    _tiempoInactividadTrans 008C  
           leeHorariosMemoria@contMemoria 000C                       asignarHorarios@hora 0018  
                  __end_of_DHT11_ReadData 2B14                                 getValue@i 0007  
                           ??_UART_printf 0004                                 _vfpfcnvrt 0012  
                               map@in_max 0023                                 map@in_min 001F  
                              _ADCON0bits 000FC2                            _dameHoraActual 2FA6  
                       ___wmul@multiplier 0001                ??_mostrarDatosSensoresWIFI 005D  
                  __end_of_encenderBombas 0DD0                            UART_write@dato 0001  
                              ?_horaRegar 0001                     mostrarDatosSensores@i 00C9  
                            _isspace$1560 0007                 __size_of_sistemaPrincipal 00C2  
                __end_of_i2c_reinicia_com 314E                                vfpfcnvrt@c 005A  
                      __end_of_fijaDiaRtc 30A6                         ___lmul@multiplier 0001  
                               copy_data0 2B28                               _escribe_rtc 30A6  
                             _leer_eeprom 2E96                              _VALOR_TIMER0 00FB  
              __end_of_leeHorariosMemoria 15F4                                 estaSeco@s 000B  
                 asignarHorarios@diaRegar 0017                                  __Hrparam 0000  
                   getValue@numCharacters 0002                              _minutosRegar 007D  
                             _lecturaWifi 23AE                             UART_init@BAUD 001B  
                              vfprintf@ap 00B1                                  __Lrparam 0000  
                              vfprintf@fp 00AD                          _dameDatosSistema 0594  
dameTemperaturaHumedad@temperaturaDecimal 0008                       _esperaDatoConcluida 008A  
                        __size_of___aldiv 010C                           ?_DHT11_ReadData 0001  
                        __size_of___aodiv 0188                          __size_of___aomod 0164  
                        __size_of___awdiv 00C4                    __end_of_dameHoraActual 2FD2  
                        __size_of___awmod 00B0                                ?_vfpfcnvrt 0040  
                         DHT11_ReadData@i 0001                           ___aodiv@divisor 0009  
                         ___aodiv@counter 0011                           ?_encenderBombas 0001  
                              sprintf@fmt 00B5                  __size_of_i2c_recibe_dato 001A  
                     __end_of_UART_printf 2AB8                          __size_of_isdigit 0038  
                        __size_of_isspace 0052                                  __ptext10 27D6  
                                __ptext11 1CAA                                  __ptext20 2D0E  
                                __ptext12 1EC8                                  __ptext21 2650  
                                __ptext13 23AE                                  __ptext30 3088  
                                __ptext22 2D98                                  __ptext14 2CC0  
                                __ptext31 284C                                  __ptext23 3068  
                                __ptext15 3132                                  __ptext40 0884  
                                __ptext32 30A6                                  __ptext24 2AB8  
                                __ptext16 1FB8                                  __ptext41 2DD8  
                                __ptext33 2466                                  __ptext25 1486  
                                __ptext17 2516                                  __ptext50 0FE8  
                                __ptext42 175E                                  __ptext34 2228  
                                __ptext26 2E96                                  __ptext18 275C  
                                __ptext51 2C6E                                  __ptext43 1178  
                                __ptext35 0594                                  __ptext27 3146  
                                __ptext19 292C                                  __ptext60 2F76  
                                __ptext52 2ED2                                  __ptext44 2B6E  
                                __ptext36 2C1C                                  __ptext28 30C4  
                                __ptext61 314E                                  __ptext53 2E18  
                                __ptext45 2162                                  __ptext37 2996  
                                __ptext29 2E58                                  __ptext70 1DBC  
                                __ptext62 311A                                  __ptext54 2A5A  
                                __ptext46 2F40                                  __ptext38 0012  
                                __ptext63 3156                                  __ptext55 1B6C  
                                __ptext47 2D54                                  __ptext39 1300  
                                __ptext64 2FFC                                  __ptext56 0DD0  
                                __ptext48 2098                                  __ptext65 15F4  
                                __ptext57 30DE                                  __ptext49 315E  
                                __ptext66 3022                                  __ptext58 2BC8  
                                __ptext67 30F4                                  __ptext59 18C2  
                                __ptext68 313C                                  __ptext69 28BC  
                                _getValue 0DD0                          __size_of_sprintf 0052  
                                _leer_rtc 2FD2                                  _estaSeco 2F0A  
              __end_of_inicializarObjetos 175E                                  _byteUart 008B  
                  __size_of_configurarAdc 000A                  lecturaWifi@humedadMedida 000E  
                 __size_of_check_response 0040                     __end_of_dameDiaActual 311A  
                     inicializarObjetos@i 000D                       inicializarObjetos@j 0009  
                           __size_of_atoi 0190                             __size_of_ctoa 005A  
                           __size_of_main 0090                             __size_of_dtoa 02E2  
                                _horarios 0132                              ?_DHT11_Start 0001  
                           __size_of_stoa 0186      dameTemperaturaHumedad@humedadDecimal 0007  
                                _tempHora 0081                                  _segundos 0085  
                               stoa@F1144 00F4                           encenderBombas@i 0011  
                                _sensores 0060                 mostrarDatosSensoresWIFI@i 00C9  
                                int$flags 005F                                  _vfprintf 2996  
                         ?_dameHoraActual 0001                   __size_of_i2c_envia_dato 000C  
                           getValue@i_969 0009                   __size_of_i2c_inicia_com 0008  
                i2c_recibe_dato@datoleido 0002                          ___aomod@dividend 0001  
                   __CFG_CPUDIV$OSC1_PLL2 000000                          ??_desbordamiento 0001  
                          _vfpfcnvrt$1082 0056                            _vfpfcnvrt$1083 0058  
                  __size_of_sistemaRegado 0154                                _INTCONbits 000FF2  
                      constructorSensor@s 0001                               ??_horaRegar 0003  
                 escribe_eeprom@direccion 0007                                  isdigit@c 0001  
                                intlevel2 0000                                 sprintf@ap 00C1  
                         escribe_rtc@dato 0003                     __end_of_limpiarBuffer 2E58  
                                isspace@c 0001                           setRtc@direccion 000D  
                       asignarHorarios@Rx 0019             __size_of_mostrarDatosSensores 00E0  
                           _overflowTimer 0082                              ?_fijaHoraRtc 0001  
       dameTemperaturaHumedad@temperatura 000A                           ___aomod@divisor 0009  
                            getValue@dato 000B                 __size_of_dameHumedadSuelo 0046  
                             ??_vfpfcnvrt 0046                                  stoa@nuls 000F  
                         ___aomod@counter 0011                               _UART_printf 2A5A  
                           _configurarAdc 313C          __end_of_mostrarDatosSensoresWIFI 1FB8  
                                sprintf@f 00C3                                  sprintf@s 00B3  
                 ?_dameTemperaturaHumedad 0001                              ___aldiv@sign 0016  
                        asignarHorarios@i 0015                          _sistemaPrincipal 22EC  
                         leer_eeprom@dato 0006                               _SSPCON2bits 000FC5  
                              _UART_write 30DE                              ___aodiv@sign 0012  
                       ??_i2c_recibe_dato 0002                    __size_of_convertirDato 0020  
                    leer_eeprom@direccion 0003                             _sistemaRegado 1A18  
                            ___aomod@sign 0012                  ??_lecturaAnalogaSensores 002F  
