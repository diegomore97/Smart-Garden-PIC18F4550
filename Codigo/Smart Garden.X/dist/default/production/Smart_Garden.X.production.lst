

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jun 23 18:16:51 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    88                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    90                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    91  0000                     
    92                           ; Version 2.10
    93                           ; Generated 31/07/2019 GMT
    94                           ; 
    95                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    96                           ; All rights reserved.
    97                           ; 
    98                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    99                           ; 
   100                           ; Redistribution and use in source and binary forms, with or without modification, are
   101                           ; permitted provided that the following conditions are met:
   102                           ; 
   103                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   104                           ;        conditions and the following disclaimer.
   105                           ; 
   106                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   107                           ;        of conditions and the following disclaimer in the documentation and/or other
   108                           ;        materials provided with the distribution.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC18F4550 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126  0000                     
   127                           	psect	idataBANK0
   128  003340                     __pidataBANK0:
   129                           	opt callstack 0
   130                           
   131                           ;initializer for stoa@F1144
   132  003340  28                 	db	40
   133  003341  6E                 	db	110
   134  003342  75                 	db	117
   135  003343  6C                 	db	108
   136  003344  6C                 	db	108
   137  003345  29                 	db	41
   138  003346  00                 	db	0
   139                           
   140                           ;initializer for _VALOR_TIMER0
   141  003347  6769               	dw	26473
   142                           
   143                           ;initializer for _VALOR_TIMER0UART
   144  003349  6769               	dw	26473
   145  0000                     _TMR0	set	4054
   146  0000                     _TRISD	set	3989
   147  0000                     _T0CON	set	4053
   148  0000                     _T0CONbits	set	4053
   149  0000                     _LATD	set	3980
   150  0000                     _PIE1bits	set	3997
   151  0000                     _ADRESL	set	4035
   152  0000                     _ADRESH	set	4036
   153  0000                     _ADCON0bits	set	4034
   154  0000                     _ADCON2	set	4032
   155  0000                     _ADCON1	set	4033
   156  0000                     _INTCONbits	set	4082
   157  0000                     _LATDbits	set	3980
   158  0000                     _TRISDbits	set	3989
   159  0000                     _PORTDbits	set	3971
   160  0000                     _TXREG	set	4013
   161  0000                     _RCREG	set	4014
   162  0000                     _PIR1bits	set	3998
   163  0000                     _RCSTAbits	set	4011
   164  0000                     _TXSTAbits	set	4012
   165  0000                     _SPBRG	set	4015
   166  0000                     _TRISCbits	set	3988
   167  0000                     _SSPBUF	set	4041
   168  0000                     _SSPCON2bits	set	4037
   169  0000                     _SSPADD	set	4040
   170  0000                     _SSPCON2	set	4037
   171  0000                     _SSPCON1	set	4038
   172  0000                     _SSPSTAT	set	4039
   173  0000                     _TRISBbits	set	3987
   174  0000                     _ACKSTAT	set	32302
   175                           
   176                           	psect	mediumconst
   177  0078DA                     __pmediumconst:
   178                           	opt callstack 0
   179  0078DA  00                 	db	0
   180  0078DB                     STR_19:
   181  0078DB  0D                 	db	13
   182  0078DC  0A                 	db	10
   183  0078DD  20                 	db	32
   184  0078DE  49                 	db	73	;'I'
   185  0078DF  6E                 	db	110	;'n'
   186  0078E0  67                 	db	103	;'g'
   187  0078E1  72                 	db	114	;'r'
   188  0078E2  65                 	db	101	;'e'
   189  0078E3  73                 	db	115	;'s'
   190  0078E4  65                 	db	101	;'e'
   191  0078E5  20                 	db	32
   192  0078E6  6C                 	db	108	;'l'
   193  0078E7  6F                 	db	111	;'o'
   194  0078E8  73                 	db	115	;'s'
   195  0078E9  20                 	db	32
   196  0078EA  6D                 	db	109	;'m'
   197  0078EB  69                 	db	105	;'i'
   198  0078EC  6E                 	db	110	;'n'
   199  0078ED  75                 	db	117	;'u'
   200  0078EE  74                 	db	116	;'t'
   201  0078EF  6F                 	db	111	;'o'
   202  0078F0  73                 	db	115	;'s'
   203  0078F1  20                 	db	32
   204  0078F2  71                 	db	113	;'q'
   205  0078F3  75                 	db	117	;'u'
   206  0078F4  65                 	db	101	;'e'
   207  0078F5  20                 	db	32
   208  0078F6  64                 	db	100	;'d'
   209  0078F7  65                 	db	101	;'e'
   210  0078F8  73                 	db	115	;'s'
   211  0078F9  65                 	db	101	;'e'
   212  0078FA  65                 	db	101	;'e'
   213  0078FB  20                 	db	32
   214  0078FC  71                 	db	113	;'q'
   215  0078FD  75                 	db	117	;'u'
   216  0078FE  65                 	db	101	;'e'
   217  0078FF  20                 	db	32
   218  007900  73                 	db	115	;'s'
   219  007901  65                 	db	101	;'e'
   220  007902  20                 	db	32
   221  007903  72                 	db	114	;'r'
   222  007904  69                 	db	105	;'i'
   223  007905  65                 	db	101	;'e'
   224  007906  67                 	db	103	;'g'
   225  007907  75                 	db	117	;'u'
   226  007908  65                 	db	101	;'e'
   227  007909  20                 	db	32
   228  00790A  65                 	db	101	;'e'
   229  00790B  6E                 	db	110	;'n'
   230  00790C  20                 	db	32
   231  00790D  65                 	db	101	;'e'
   232  00790E  73                 	db	115	;'s'
   233  00790F  65                 	db	101	;'e'
   234  007910  20                 	db	32
   235  007911  68                 	db	104	;'h'
   236  007912  6F                 	db	111	;'o'
   237  007913  72                 	db	114	;'r'
   238  007914  61                 	db	97	;'a'
   239  007915  72                 	db	114	;'r'
   240  007916  69                 	db	105	;'i'
   241  007917  6F                 	db	111	;'o'
   242  007918  20                 	db	32
   243  007919  65                 	db	101	;'e'
   244  00791A  6A                 	db	106	;'j'
   245  00791B  3A                 	db	58	;':'
   246  00791C  20                 	db	32
   247  00791D  31                 	db	49	;'1'
   248  00791E  35                 	db	53	;'5'
   249  00791F  20                 	db	32
   250  007920  0D                 	db	13
   251  007921  0A                 	db	10
   252  007922  00                 	db	0
   253  007923                     STR_1:
   254  007923  0D                 	db	13
   255  007924  0A                 	db	10
   256  007925  20                 	db	32
   257  007926  45                 	db	69	;'E'
   258  007927  6E                 	db	110	;'n'
   259  007928  76                 	db	118	;'v'
   260  007929  69                 	db	105	;'i'
   261  00792A  65                 	db	101	;'e'
   262  00792B  20                 	db	32
   263  00792C  65                 	db	101	;'e'
   264  00792D  6C                 	db	108	;'l'
   265  00792E  20                 	db	32
   266  00792F  64                 	db	100	;'d'
   267  007930  69                 	db	105	;'i'
   268  007931  61                 	db	97	;'a'
   269  007932  20                 	db	32
   270  007933  64                 	db	100	;'d'
   271  007934  65                 	db	101	;'e'
   272  007935  20                 	db	32
   273  007936  6C                 	db	108	;'l'
   274  007937  61                 	db	97	;'a'
   275  007938  20                 	db	32
   276  007939  73                 	db	115	;'s'
   277  00793A  65                 	db	101	;'e'
   278  00793B  6D                 	db	109	;'m'
   279  00793C  61                 	db	97	;'a'
   280  00793D  6E                 	db	110	;'n'
   281  00793E  61                 	db	97	;'a'
   282  00793F  20                 	db	32
   283  007940  45                 	db	69	;'E'
   284  007941  6A                 	db	106	;'j'
   285  007942  3A                 	db	58	;':'
   286  007943  20                 	db	32
   287  007944  30                 	db	48	;'0'
   288  007945  31                 	db	49	;'1'
   289  007946  20                 	db	32
   290  007947  3D                 	db	61	;'='
   291  007948  20                 	db	32
   292  007949  44                 	db	68	;'D'
   293  00794A  4F                 	db	79	;'O'
   294  00794B  4D                 	db	77	;'M'
   295  00794C  49                 	db	73	;'I'
   296  00794D  4E                 	db	78	;'N'
   297  00794E  47                 	db	71	;'G'
   298  00794F  4F                 	db	79	;'O'
   299  007950  20                 	db	32
   300  007951  2E                 	db	46
   301  007952  2E                 	db	46
   302  007953  2E                 	db	46
   303  007954  20                 	db	32
   304  007955  30                 	db	48	;'0'
   305  007956  37                 	db	55	;'7'
   306  007957  20                 	db	32
   307  007958  3D                 	db	61	;'='
   308  007959  20                 	db	32
   309  00795A  53                 	db	83	;'S'
   310  00795B  41                 	db	65	;'A'
   311  00795C  42                 	db	66	;'B'
   312  00795D  41                 	db	65	;'A'
   313  00795E  44                 	db	68	;'D'
   314  00795F  4F                 	db	79	;'O'
   315  007960  20                 	db	32
   316  007961  0D                 	db	13
   317  007962  0A                 	db	10
   318  007963  00                 	db	0
   319  007964                     STR_11:
   320  007964  0D                 	db	13
   321  007965  0A                 	db	10
   322  007966  20                 	db	32
   323  007967  49                 	db	73	;'I'
   324  007968  6E                 	db	110	;'n'
   325  007969  67                 	db	103	;'g'
   326  00796A  72                 	db	114	;'r'
   327  00796B  65                 	db	101	;'e'
   328  00796C  73                 	db	115	;'s'
   329  00796D  65                 	db	101	;'e'
   330  00796E  20                 	db	32
   331  00796F  31                 	db	49	;'1'
   332  007970  20                 	db	32
   333  007971  70                 	db	112	;'p'
   334  007972  61                 	db	97	;'a'
   335  007973  72                 	db	114	;'r'
   336  007974  61                 	db	97	;'a'
   337  007975  20                 	db	32
   338  007976  61                 	db	97	;'a'
   339  007977  63                 	db	99	;'c'
   340  007978  74                 	db	116	;'t'
   341  007979  69                 	db	105	;'i'
   342  00797A  76                 	db	118	;'v'
   343  00797B  61                 	db	97	;'a'
   344  00797C  72                 	db	114	;'r'
   345  00797D  20                 	db	32
   346  00797E  7C                 	db	124
   347  00797F  7C                 	db	124
   348  007980  20                 	db	32
   349  007981  69                 	db	105	;'i'
   350  007982  6E                 	db	110	;'n'
   351  007983  67                 	db	103	;'g'
   352  007984  72                 	db	114	;'r'
   353  007985  65                 	db	101	;'e'
   354  007986  73                 	db	115	;'s'
   355  007987  65                 	db	101	;'e'
   356  007988  20                 	db	32
   357  007989  30                 	db	48	;'0'
   358  00798A  20                 	db	32
   359  00798B  70                 	db	112	;'p'
   360  00798C  61                 	db	97	;'a'
   361  00798D  72                 	db	114	;'r'
   362  00798E  61                 	db	97	;'a'
   363  00798F  20                 	db	32
   364  007990  64                 	db	100	;'d'
   365  007991  65                 	db	101	;'e'
   366  007992  73                 	db	115	;'s'
   367  007993  61                 	db	97	;'a'
   368  007994  63                 	db	99	;'c'
   369  007995  74                 	db	116	;'t'
   370  007996  69                 	db	105	;'i'
   371  007997  76                 	db	118	;'v'
   372  007998  61                 	db	97	;'a'
   373  007999  72                 	db	114	;'r'
   374  00799A  3A                 	db	58	;':'
   375  00799B  20                 	db	32
   376  00799C  0D                 	db	13
   377  00799D  0A                 	db	10
   378  00799E  00                 	db	0
   379  00799F                     STR_63:
   380  00799F  0D                 	db	13
   381  0079A0  0A                 	db	10
   382  0079A1  20                 	db	32
   383  0079A2  59                 	db	89	;'Y'
   384  0079A3  61                 	db	97	;'a'
   385  0079A4  20                 	db	32
   386  0079A5  73                 	db	115	;'s'
   387  0079A6  65                 	db	101	;'e'
   388  0079A7  20                 	db	32
   389  0079A8  65                 	db	101	;'e'
   390  0079A9  73                 	db	115	;'s'
   391  0079AA  74                 	db	116	;'t'
   392  0079AB  61                 	db	97	;'a'
   393  0079AC  20                 	db	32
   394  0079AD  65                 	db	101	;'e'
   395  0079AE  66                 	db	102	;'f'
   396  0079AF  65                 	db	101	;'e'
   397  0079B0  63                 	db	99	;'c'
   398  0079B1  74                 	db	116	;'t'
   399  0079B2  75                 	db	117	;'u'
   400  0079B3  61                 	db	97	;'a'
   401  0079B4  6E                 	db	110	;'n'
   402  0079B5  64                 	db	100	;'d'
   403  0079B6  6F                 	db	111	;'o'
   404  0079B7  20                 	db	32
   405  0079B8  75                 	db	117	;'u'
   406  0079B9  6E                 	db	110	;'n'
   407  0079BA  20                 	db	32
   408  0079BB  72                 	db	114	;'r'
   409  0079BC  69                 	db	105	;'i'
   410  0079BD  65                 	db	101	;'e'
   411  0079BE  67                 	db	103	;'g'
   412  0079BF  6F                 	db	111	;'o'
   413  0079C0  2C                 	db	44
   414  0079C1  20                 	db	32
   415  0079C2  69                 	db	105	;'i'
   416  0079C3  6E                 	db	110	;'n'
   417  0079C4  74                 	db	116	;'t'
   418  0079C5  65                 	db	101	;'e'
   419  0079C6  6E                 	db	110	;'n'
   420  0079C7  74                 	db	116	;'t'
   421  0079C8  65                 	db	101	;'e'
   422  0079C9  6C                 	db	108	;'l'
   423  0079CA  6F                 	db	111	;'o'
   424  0079CB  20                 	db	32
   425  0079CC  6D                 	db	109	;'m'
   426  0079CD  61                 	db	97	;'a'
   427  0079CE  73                 	db	115	;'s'
   428  0079CF  20                 	db	32
   429  0079D0  74                 	db	116	;'t'
   430  0079D1  61                 	db	97	;'a'
   431  0079D2  72                 	db	114	;'r'
   432  0079D3  64                 	db	100	;'d'
   433  0079D4  65                 	db	101	;'e'
   434  0079D5  20                 	db	32
   435  0079D6  0D                 	db	13
   436  0079D7  0A                 	db	10
   437  0079D8  00                 	db	0
   438  0079D9                     STR_62:
   439  0079D9  0D                 	db	13
   440  0079DA  0A                 	db	10
   441  0079DB  20                 	db	32
   442  0079DC  49                 	db	73	;'I'
   443  0079DD  6E                 	db	110	;'n'
   444  0079DE  67                 	db	103	;'g'
   445  0079DF  72                 	db	114	;'r'
   446  0079E0  65                 	db	101	;'e'
   447  0079E1  73                 	db	115	;'s'
   448  0079E2  65                 	db	101	;'e'
   449  0079E3  20                 	db	32
   450  0079E4  65                 	db	101	;'e'
   451  0079E5  6C                 	db	108	;'l'
   452  0079E6  20                 	db	32
   453  0079E7  6E                 	db	110	;'n'
   454  0079E8  75                 	db	117	;'u'
   455  0079E9  6D                 	db	109	;'m'
   456  0079EA  65                 	db	101	;'e'
   457  0079EB  72                 	db	114	;'r'
   458  0079EC  6F                 	db	111	;'o'
   459  0079ED  20                 	db	32
   460  0079EE  64                 	db	100	;'d'
   461  0079EF  65                 	db	101	;'e'
   462  0079F0  20                 	db	32
   463  0079F1  73                 	db	115	;'s'
   464  0079F2  65                 	db	101	;'e'
   465  0079F3  6E                 	db	110	;'n'
   466  0079F4  73                 	db	115	;'s'
   467  0079F5  6F                 	db	111	;'o'
   468  0079F6  72                 	db	114	;'r'
   469  0079F7  20                 	db	32
   470  0079F8  64                 	db	100	;'d'
   471  0079F9  65                 	db	101	;'e'
   472  0079FA  6C                 	db	108	;'l'
   473  0079FB  20                 	db	32
   474  0079FC  61                 	db	97	;'a'
   475  0079FD  72                 	db	114	;'r'
   476  0079FE  65                 	db	101	;'e'
   477  0079FF  61                 	db	97	;'a'
   478  007A00  20                 	db	32
   479  007A01  61                 	db	97	;'a'
   480  007A02  20                 	db	32
   481  007A03  72                 	db	114	;'r'
   482  007A04  65                 	db	101	;'e'
   483  007A05  67                 	db	103	;'g'
   484  007A06  61                 	db	97	;'a'
   485  007A07  72                 	db	114	;'r'
   486  007A08  20                 	db	32
   487  007A09  65                 	db	101	;'e'
   488  007A0A  6A                 	db	106	;'j'
   489  007A0B  3A                 	db	58	;':'
   490  007A0C  20                 	db	32
   491  007A0D  35                 	db	53	;'5'
   492  007A0E  20                 	db	32
   493  007A0F  0D                 	db	13
   494  007A10  0A                 	db	10
   495  007A11  00                 	db	0
   496  007A12                     STR_61:
   497  007A12  0D                 	db	13
   498  007A13  0A                 	db	10
   499  007A14  20                 	db	32
   500  007A15  49                 	db	73	;'I'
   501  007A16  6E                 	db	110	;'n'
   502  007A17  67                 	db	103	;'g'
   503  007A18  72                 	db	114	;'r'
   504  007A19  65                 	db	101	;'e'
   505  007A1A  73                 	db	115	;'s'
   506  007A1B  65                 	db	101	;'e'
   507  007A1C  20                 	db	32
   508  007A1D  6C                 	db	108	;'l'
   509  007A1E  6F                 	db	111	;'o'
   510  007A1F  73                 	db	115	;'s'
   511  007A20  20                 	db	32
   512  007A21  6D                 	db	109	;'m'
   513  007A22  69                 	db	105	;'i'
   514  007A23  6E                 	db	110	;'n'
   515  007A24  75                 	db	117	;'u'
   516  007A25  74                 	db	116	;'t'
   517  007A26  6F                 	db	111	;'o'
   518  007A27  73                 	db	115	;'s'
   519  007A28  20                 	db	32
   520  007A29  71                 	db	113	;'q'
   521  007A2A  75                 	db	117	;'u'
   522  007A2B  65                 	db	101	;'e'
   523  007A2C  20                 	db	32
   524  007A2D  64                 	db	100	;'d'
   525  007A2E  65                 	db	101	;'e'
   526  007A2F  73                 	db	115	;'s'
   527  007A30  65                 	db	101	;'e'
   528  007A31  65                 	db	101	;'e'
   529  007A32  20                 	db	32
   530  007A33  71                 	db	113	;'q'
   531  007A34  75                 	db	117	;'u'
   532  007A35  65                 	db	101	;'e'
   533  007A36  20                 	db	32
   534  007A37  73                 	db	115	;'s'
   535  007A38  65                 	db	101	;'e'
   536  007A39  20                 	db	32
   537  007A3A  72                 	db	114	;'r'
   538  007A3B  69                 	db	105	;'i'
   539  007A3C  65                 	db	101	;'e'
   540  007A3D  67                 	db	103	;'g'
   541  007A3E  75                 	db	117	;'u'
   542  007A3F  65                 	db	101	;'e'
   543  007A40  20                 	db	32
   544  007A41  65                 	db	101	;'e'
   545  007A42  6A                 	db	106	;'j'
   546  007A43  3A                 	db	58	;':'
   547  007A44  20                 	db	32
   548  007A45  31                 	db	49	;'1'
   549  007A46  35                 	db	53	;'5'
   550  007A47  20                 	db	32
   551  007A48  0D                 	db	13
   552  007A49  0A                 	db	10
   553  007A4A  00                 	db	0
   554  007A4B                     STR_10:
   555  007A4B  0D                 	db	13
   556  007A4C  0A                 	db	10
   557  007A4D  20                 	db	32
   558  007A4E  49                 	db	73	;'I'
   559  007A4F  6E                 	db	110	;'n'
   560  007A50  67                 	db	103	;'g'
   561  007A51  72                 	db	114	;'r'
   562  007A52  65                 	db	101	;'e'
   563  007A53  73                 	db	115	;'s'
   564  007A54  65                 	db	101	;'e'
   565  007A55  20                 	db	32
   566  007A56  75                 	db	117	;'u'
   567  007A57  6E                 	db	110	;'n'
   568  007A58  61                 	db	97	;'a'
   569  007A59  20                 	db	32
   570  007A5A  68                 	db	104	;'h'
   571  007A5B  6F                 	db	111	;'o'
   572  007A5C  72                 	db	114	;'r'
   573  007A5D  61                 	db	97	;'a'
   574  007A5E  20                 	db	32
   575  007A5F  65                 	db	101	;'e'
   576  007A60  6E                 	db	110	;'n'
   577  007A61  20                 	db	32
   578  007A62  66                 	db	102	;'f'
   579  007A63  6F                 	db	111	;'o'
   580  007A64  72                 	db	114	;'r'
   581  007A65  6D                 	db	109	;'m'
   582  007A66  61                 	db	97	;'a'
   583  007A67  74                 	db	116	;'t'
   584  007A68  6F                 	db	111	;'o'
   585  007A69  20                 	db	32
   586  007A6A  64                 	db	100	;'d'
   587  007A6B  65                 	db	101	;'e'
   588  007A6C  20                 	db	32
   589  007A6D  32                 	db	50	;'2'
   590  007A6E  34                 	db	52	;'4'
   591  007A6F  20                 	db	32
   592  007A70  68                 	db	104	;'h'
   593  007A71  72                 	db	114	;'r'
   594  007A72  73                 	db	115	;'s'
   595  007A73  20                 	db	32
   596  007A74  65                 	db	101	;'e'
   597  007A75  6A                 	db	106	;'j'
   598  007A76  3A                 	db	58	;':'
   599  007A77  20                 	db	32
   600  007A78  31                 	db	49	;'1'
   601  007A79  35                 	db	53	;'5'
   602  007A7A  20                 	db	32
   603  007A7B  0D                 	db	13
   604  007A7C  0A                 	db	10
   605  007A7D  00                 	db	0
   606  007A7E                     STR_22:
   607  007A7E  0D                 	db	13
   608  007A7F  0A                 	db	10
   609  007A80  49                 	db	73	;'I'
   610  007A81  6E                 	db	110	;'n'
   611  007A82  67                 	db	103	;'g'
   612  007A83  72                 	db	114	;'r'
   613  007A84  65                 	db	101	;'e'
   614  007A85  73                 	db	115	;'s'
   615  007A86  65                 	db	101	;'e'
   616  007A87  20                 	db	32
   617  007A88  65                 	db	101	;'e'
   618  007A89  6C                 	db	108	;'l'
   619  007A8A  20                 	db	32
   620  007A8B  70                 	db	112	;'p'
   621  007A8C  6F                 	db	111	;'o'
   622  007A8D  72                 	db	114	;'r'
   623  007A8E  63                 	db	99	;'c'
   624  007A8F  65                 	db	101	;'e'
   625  007A90  6E                 	db	110	;'n'
   626  007A91  74                 	db	116	;'t'
   627  007A92  61                 	db	97	;'a'
   628  007A93  6A                 	db	106	;'j'
   629  007A94  65                 	db	101	;'e'
   630  007A95  20                 	db	32
   631  007A96  64                 	db	100	;'d'
   632  007A97  65                 	db	101	;'e'
   633  007A98  20                 	db	32
   634  007A99  68                 	db	104	;'h'
   635  007A9A  75                 	db	117	;'u'
   636  007A9B  6D                 	db	109	;'m'
   637  007A9C  65                 	db	101	;'e'
   638  007A9D  64                 	db	100	;'d'
   639  007A9E  61                 	db	97	;'a'
   640  007A9F  64                 	db	100	;'d'
   641  007AA0  20                 	db	32
   642  007AA1  64                 	db	100	;'d'
   643  007AA2  65                 	db	101	;'e'
   644  007AA3  6C                 	db	108	;'l'
   645  007AA4  20                 	db	32
   646  007AA5  73                 	db	115	;'s'
   647  007AA6  65                 	db	101	;'e'
   648  007AA7  6E                 	db	110	;'n'
   649  007AA8  73                 	db	115	;'s'
   650  007AA9  6F                 	db	111	;'o'
   651  007AAA  72                 	db	114	;'r'
   652  007AAB  20                 	db	32
   653  007AAC  25                 	db	37
   654  007AAD  64                 	db	100	;'d'
   655  007AAE  0D                 	db	13
   656  007AAF  0A                 	db	10
   657  007AB0  00                 	db	0
   658  007AB1                     STR_27:
   659  007AB1  0D                 	db	13
   660  007AB2  0A                 	db	10
   661  007AB3  20                 	db	32
   662  007AB4  33                 	db	51	;'3'
   663  007AB5  2E                 	db	46
   664  007AB6  20                 	db	32
   665  007AB7  50                 	db	80	;'P'
   666  007AB8  72                 	db	114	;'r'
   667  007AB9  6F                 	db	111	;'o'
   668  007ABA  67                 	db	103	;'g'
   669  007ABB  72                 	db	114	;'r'
   670  007ABC  61                 	db	97	;'a'
   671  007ABD  6D                 	db	109	;'m'
   672  007ABE  61                 	db	97	;'a'
   673  007ABF  72                 	db	114	;'r'
   674  007AC0  20                 	db	32
   675  007AC1  74                 	db	116	;'t'
   676  007AC2  69                 	db	105	;'i'
   677  007AC3  65                 	db	101	;'e'
   678  007AC4  6D                 	db	109	;'m'
   679  007AC5  70                 	db	112	;'p'
   680  007AC6  6F                 	db	111	;'o'
   681  007AC7  20                 	db	32
   682  007AC8  64                 	db	100	;'d'
   683  007AC9  65                 	db	101	;'e'
   684  007ACA  20                 	db	32
   685  007ACB  72                 	db	114	;'r'
   686  007ACC  69                 	db	105	;'i'
   687  007ACD  65                 	db	101	;'e'
   688  007ACE  67                 	db	103	;'g'
   689  007ACF  6F                 	db	111	;'o'
   690  007AD0  20                 	db	32
   691  007AD1  65                 	db	101	;'e'
   692  007AD2  6E                 	db	110	;'n'
   693  007AD3  20                 	db	32
   694  007AD4  75                 	db	117	;'u'
   695  007AD5  6E                 	db	110	;'n'
   696  007AD6  20                 	db	32
   697  007AD7  68                 	db	104	;'h'
   698  007AD8  6F                 	db	111	;'o'
   699  007AD9  72                 	db	114	;'r'
   700  007ADA  61                 	db	97	;'a'
   701  007ADB  72                 	db	114	;'r'
   702  007ADC  69                 	db	105	;'i'
   703  007ADD  6F                 	db	111	;'o'
   704  007ADE  20                 	db	32
   705  007ADF  0D                 	db	13
   706  007AE0  0A                 	db	10
   707  007AE1  00                 	db	0
   708  007AE2                     STR_52:
   709  007AE2  0D                 	db	13
   710  007AE3  0A                 	db	10
   711  007AE4  0A                 	db	10
   712  007AE5  50                 	db	80	;'P'
   713  007AE6  6F                 	db	111	;'o'
   714  007AE7  72                 	db	114	;'r'
   715  007AE8  63                 	db	99	;'c'
   716  007AE9  65                 	db	101	;'e'
   717  007AEA  6E                 	db	110	;'n'
   718  007AEB  74                 	db	116	;'t'
   719  007AEC  61                 	db	97	;'a'
   720  007AED  6A                 	db	106	;'j'
   721  007AEE  65                 	db	101	;'e'
   722  007AEF  20                 	db	32
   723  007AF0  48                 	db	72	;'H'
   724  007AF1  75                 	db	117	;'u'
   725  007AF2  6D                 	db	109	;'m'
   726  007AF3  65                 	db	101	;'e'
   727  007AF4  64                 	db	100	;'d'
   728  007AF5  61                 	db	97	;'a'
   729  007AF6  64                 	db	100	;'d'
   730  007AF7  20                 	db	32
   731  007AF8  64                 	db	100	;'d'
   732  007AF9  65                 	db	101	;'e'
   733  007AFA  6C                 	db	108	;'l'
   734  007AFB  20                 	db	32
   735  007AFC  73                 	db	115	;'s'
   736  007AFD  65                 	db	101	;'e'
   737  007AFE  6E                 	db	110	;'n'
   738  007AFF  73                 	db	115	;'s'
   739  007B00  6F                 	db	111	;'o'
   740  007B01  72                 	db	114	;'r'
   741  007B02  20                 	db	32
   742  007B03  25                 	db	37
   743  007B04  64                 	db	100	;'d'
   744  007B05  3A                 	db	58	;':'
   745  007B06  20                 	db	32
   746  007B07  25                 	db	37
   747  007B08  64                 	db	100	;'d'
   748  007B09  20                 	db	32
   749  007B0A  25                 	db	37
   750  007B0B  63                 	db	99	;'c'
   751  007B0C  0D                 	db	13
   752  007B0D  0A                 	db	10
   753  007B0E  00                 	db	0
   754  007B0F                     STR_6:
   755  007B0F  0D                 	db	13
   756  007B10  0A                 	db	10
   757  007B11  20                 	db	32
   758  007B12  45                 	db	69	;'E'
   759  007B13  6E                 	db	110	;'n'
   760  007B14  76                 	db	118	;'v'
   761  007B15  69                 	db	105	;'i'
   762  007B16  65                 	db	101	;'e'
   763  007B17  20                 	db	32
   764  007B18  6C                 	db	108	;'l'
   765  007B19  61                 	db	97	;'a'
   766  007B1A  73                 	db	115	;'s'
   767  007B1B  20                 	db	32
   768  007B1C  48                 	db	72	;'H'
   769  007B1D  6F                 	db	111	;'o'
   770  007B1E  72                 	db	114	;'r'
   771  007B1F  61                 	db	97	;'a'
   772  007B20  73                 	db	115	;'s'
   773  007B21  20                 	db	32
   774  007B22  65                 	db	101	;'e'
   775  007B23  6E                 	db	110	;'n'
   776  007B24  20                 	db	32
   777  007B25  66                 	db	102	;'f'
   778  007B26  6F                 	db	111	;'o'
   779  007B27  72                 	db	114	;'r'
   780  007B28  6D                 	db	109	;'m'
   781  007B29  61                 	db	97	;'a'
   782  007B2A  74                 	db	116	;'t'
   783  007B2B  6F                 	db	111	;'o'
   784  007B2C  20                 	db	32
   785  007B2D  32                 	db	50	;'2'
   786  007B2E  34                 	db	52	;'4'
   787  007B2F  20                 	db	32
   788  007B30  45                 	db	69	;'E'
   789  007B31  6A                 	db	106	;'j'
   790  007B32  3A                 	db	58	;':'
   791  007B33  20                 	db	32
   792  007B34  31                 	db	49	;'1'
   793  007B35  35                 	db	53	;'5'
   794  007B36  20                 	db	32
   795  007B37  0D                 	db	13
   796  007B38  0A                 	db	10
   797  007B39  00                 	db	0
   798  007B3A                     STR_35:
   799  007B3A  0D                 	db	13
   800  007B3B  0A                 	db	10
   801  007B3C  20                 	db	32
   802  007B3D  53                 	db	83	;'S'
   803  007B3E  6F                 	db	111	;'o'
   804  007B3F  6C                 	db	108	;'l'
   805  007B40  6F                 	db	111	;'o'
   806  007B41  20                 	db	32
   807  007B42  73                 	db	115	;'s'
   808  007B43  65                 	db	101	;'e'
   809  007B44  20                 	db	32
   810  007B45  70                 	db	112	;'p'
   811  007B46  65                 	db	101	;'e'
   812  007B47  72                 	db	114	;'r'
   813  007B48  6D                 	db	109	;'m'
   814  007B49  69                 	db	105	;'i'
   815  007B4A  74                 	db	116	;'t'
   816  007B4B  65                 	db	101	;'e'
   817  007B4C  6E                 	db	110	;'n'
   818  007B4D  20                 	db	32
   819  007B4E  6E                 	db	110	;'n'
   820  007B4F  75                 	db	117	;'u'
   821  007B50  6D                 	db	109	;'m'
   822  007B51  65                 	db	101	;'e'
   823  007B52  72                 	db	114	;'r'
   824  007B53  6F                 	db	111	;'o'
   825  007B54  73                 	db	115	;'s'
   826  007B55  20                 	db	32
   827  007B56  64                 	db	100	;'d'
   828  007B57  65                 	db	101	;'e'
   829  007B58  6C                 	db	108	;'l'
   830  007B59  20                 	db	32
   831  007B5A  31                 	db	49	;'1'
   832  007B5B  20                 	db	32
   833  007B5C  61                 	db	97	;'a'
   834  007B5D  6C                 	db	108	;'l'
   835  007B5E  20                 	db	32
   836  007B5F  38                 	db	56	;'8'
   837  007B60  20                 	db	32
   838  007B61  0D                 	db	13
   839  007B62  0A                 	db	10
   840  007B63  00                 	db	0
   841  007B64                     STR_21:
   842  007B64  0D                 	db	13
   843  007B65  0A                 	db	10
   844  007B66  53                 	db	83	;'S'
   845  007B67  6F                 	db	111	;'o'
   846  007B68  6C                 	db	108	;'l'
   847  007B69  69                 	db	105	;'i'
   848  007B6A  63                 	db	99	;'c'
   849  007B6B  69                 	db	105	;'i'
   850  007B6C  74                 	db	116	;'t'
   851  007B6D  61                 	db	97	;'a'
   852  007B6E  6E                 	db	110	;'n'
   853  007B6F  64                 	db	100	;'d'
   854  007B70  6F                 	db	111	;'o'
   855  007B71  20                 	db	32
   856  007B72  4D                 	db	77	;'M'
   857  007B73  75                 	db	117	;'u'
   858  007B74  65                 	db	101	;'e'
   859  007B75  73                 	db	115	;'s'
   860  007B76  74                 	db	116	;'t'
   861  007B77  72                 	db	114	;'r'
   862  007B78  65                 	db	101	;'e'
   863  007B79  6F                 	db	111	;'o'
   864  007B7A  20                 	db	32
   865  007B7B  64                 	db	100	;'d'
   866  007B7C  65                 	db	101	;'e'
   867  007B7D  20                 	db	32
   868  007B7E  73                 	db	115	;'s'
   869  007B7F  65                 	db	101	;'e'
   870  007B80  6E                 	db	110	;'n'
   871  007B81  73                 	db	115	;'s'
   872  007B82  6F                 	db	111	;'o'
   873  007B83  72                 	db	114	;'r'
   874  007B84  65                 	db	101	;'e'
   875  007B85  73                 	db	115	;'s'
   876  007B86  0D                 	db	13
   877  007B87  0A                 	db	10
   878  007B88  0A                 	db	10
   879  007B89  00                 	db	0
   880  007B8A                     STR_39:
   881  007B8A  0D                 	db	13
   882  007B8B  0A                 	db	10
   883  007B8C  44                 	db	68	;'D'
   884  007B8D  20                 	db	32
   885  007B8E  3D                 	db	61	;'='
   886  007B8F  20                 	db	32
   887  007B90  44                 	db	68	;'D'
   888  007B91  49                 	db	73	;'I'
   889  007B92  41                 	db	65	;'A'
   890  007B93  53                 	db	83	;'S'
   891  007B94  20                 	db	32
   892  007B95  51                 	db	81	;'Q'
   893  007B96  55                 	db	85	;'U'
   894  007B97  45                 	db	69	;'E'
   895  007B98  20                 	db	32
   896  007B99  45                 	db	69	;'E'
   897  007B9A  4E                 	db	78	;'N'
   898  007B9B  20                 	db	32
   899  007B9C  4C                 	db	76	;'L'
   900  007B9D  4F                 	db	79	;'O'
   901  007B9E  53                 	db	83	;'S'
   902  007B9F  20                 	db	32
   903  007BA0  51                 	db	81	;'Q'
   904  007BA1  55                 	db	85	;'U'
   905  007BA2  45                 	db	69	;'E'
   906  007BA3  20                 	db	32
   907  007BA4  53                 	db	83	;'S'
   908  007BA5  45                 	db	69	;'E'
   909  007BA6  20                 	db	32
   910  007BA7  52                 	db	82	;'R'
   911  007BA8  45                 	db	69	;'E'
   912  007BA9  47                 	db	71	;'G'
   913  007BAA  41                 	db	65	;'A'
   914  007BAB  52                 	db	82	;'R'
   915  007BAC  41                 	db	65	;'A'
   916  007BAD  0D                 	db	13
   917  007BAE  0A                 	db	10
   918  007BAF  00                 	db	0
   919  007BB0                     STR_20:
   920  007BB0  0D                 	db	13
   921  007BB1  0A                 	db	10
   922  007BB2  20                 	db	32
   923  007BB3  4D                 	db	77	;'M'
   924  007BB4  69                 	db	105	;'i'
   925  007BB5  6E                 	db	110	;'n'
   926  007BB6  75                 	db	117	;'u'
   927  007BB7  74                 	db	116	;'t'
   928  007BB8  6F                 	db	111	;'o'
   929  007BB9  73                 	db	115	;'s'
   930  007BBA  20                 	db	32
   931  007BBB  64                 	db	100	;'d'
   932  007BBC  65                 	db	101	;'e'
   933  007BBD  20                 	db	32
   934  007BBE  72                 	db	114	;'r'
   935  007BBF  69                 	db	105	;'i'
   936  007BC0  65                 	db	101	;'e'
   937  007BC1  67                 	db	103	;'g'
   938  007BC2  6F                 	db	111	;'o'
   939  007BC3  20                 	db	32
   940  007BC4  65                 	db	101	;'e'
   941  007BC5  73                 	db	115	;'s'
   942  007BC6  74                 	db	116	;'t'
   943  007BC7  61                 	db	97	;'a'
   944  007BC8  62                 	db	98	;'b'
   945  007BC9  6C                 	db	108	;'l'
   946  007BCA  65                 	db	101	;'e'
   947  007BCB  63                 	db	99	;'c'
   948  007BCC  69                 	db	105	;'i'
   949  007BCD  64                 	db	100	;'d'
   950  007BCE  6F                 	db	111	;'o'
   951  007BCF  73                 	db	115	;'s'
   952  007BD0  21                 	db	33
   953  007BD1  20                 	db	32
   954  007BD2  0D                 	db	13
   955  007BD3  0A                 	db	10
   956  007BD4  00                 	db	0
   957  007BD5                     STR_24:
   958  007BD5  0D                 	db	13
   959  007BD6  0A                 	db	10
   960  007BD7  20                 	db	32
   961  007BD8  49                 	db	73	;'I'
   962  007BD9  6E                 	db	110	;'n'
   963  007BDA  67                 	db	103	;'g'
   964  007BDB  72                 	db	114	;'r'
   965  007BDC  65                 	db	101	;'e'
   966  007BDD  73                 	db	115	;'s'
   967  007BDE  61                 	db	97	;'a'
   968  007BDF  20                 	db	32
   969  007BE0  75                 	db	117	;'u'
   970  007BE1  6E                 	db	110	;'n'
   971  007BE2  61                 	db	97	;'a'
   972  007BE3  20                 	db	32
   973  007BE4  6F                 	db	111	;'o'
   974  007BE5  70                 	db	112	;'p'
   975  007BE6  63                 	db	99	;'c'
   976  007BE7  69                 	db	105	;'i'
   977  007BE8  6F                 	db	111	;'o'
   978  007BE9  6E                 	db	110	;'n'
   979  007BEA  20                 	db	32
   980  007BEB  61                 	db	97	;'a'
   981  007BEC  20                 	db	32
   982  007BED  52                 	db	82	;'R'
   983  007BEE  65                 	db	101	;'e'
   984  007BEF  61                 	db	97	;'a'
   985  007BF0  6C                 	db	108	;'l'
   986  007BF1  69                 	db	105	;'i'
   987  007BF2  7A                 	db	122	;'z'
   988  007BF3  61                 	db	97	;'a'
   989  007BF4  72                 	db	114	;'r'
   990  007BF5  3A                 	db	58	;':'
   991  007BF6  20                 	db	32
   992  007BF7  0D                 	db	13
   993  007BF8  0A                 	db	10
   994  007BF9  00                 	db	0
   995  007BFA                     STR_8:
   996  007BFA  0D                 	db	13
   997  007BFB  0A                 	db	10
   998  007BFC  20                 	db	32
   999  007BFD  48                 	db	72	;'H'
  1000  007BFE  4F                 	db	79	;'O'
  1001  007BFF  52                 	db	82	;'R'
  1002  007C00  41                 	db	65	;'A'
  1003  007C01  20                 	db	32
  1004  007C02  45                 	db	69	;'E'
  1005  007C03  53                 	db	83	;'S'
  1006  007C04  54                 	db	84	;'T'
  1007  007C05  41                 	db	65	;'A'
  1008  007C06  42                 	db	66	;'B'
  1009  007C07  4C                 	db	76	;'L'
  1010  007C08  45                 	db	69	;'E'
  1011  007C09  43                 	db	67	;'C'
  1012  007C0A  49                 	db	73	;'I'
  1013  007C0B  44                 	db	68	;'D'
  1014  007C0C  41                 	db	65	;'A'
  1015  007C0D  20                 	db	32
  1016  007C0E  43                 	db	67	;'C'
  1017  007C0F  4F                 	db	79	;'O'
  1018  007C10  52                 	db	82	;'R'
  1019  007C11  52                 	db	82	;'R'
  1020  007C12  45                 	db	69	;'E'
  1021  007C13  43                 	db	67	;'C'
  1022  007C14  54                 	db	84	;'T'
  1023  007C15  41                 	db	65	;'A'
  1024  007C16  4D                 	db	77	;'M'
  1025  007C17  45                 	db	69	;'E'
  1026  007C18  4E                 	db	78	;'N'
  1027  007C19  54                 	db	84	;'T'
  1028  007C1A  45                 	db	69	;'E'
  1029  007C1B  20                 	db	32
  1030  007C1C  0D                 	db	13
  1031  007C1D  0A                 	db	10
  1032  007C1E  00                 	db	0
  1033  007C1F                     STR_13:
  1034  007C1F  0D                 	db	13
  1035  007C20  0A                 	db	10
  1036  007C21  20                 	db	32
  1037  007C22  44                 	db	68	;'D'
  1038  007C23  4F                 	db	79	;'O'
  1039  007C24  4D                 	db	77	;'M'
  1040  007C25  49                 	db	73	;'I'
  1041  007C26  4E                 	db	78	;'N'
  1042  007C27  47                 	db	71	;'G'
  1043  007C28  4F                 	db	79	;'O'
  1044  007C29  20                 	db	32
  1045  007C2A  3D                 	db	61	;'='
  1046  007C2B  20                 	db	32
  1047  007C2C  5B                 	db	91	;'['
  1048  007C2D  31                 	db	49	;'1'
  1049  007C2E  5D                 	db	93	;']'
  1050  007C2F  20                 	db	32
  1051  007C30  2E                 	db	46
  1052  007C31  2E                 	db	46
  1053  007C32  2E                 	db	46
  1054  007C33  20                 	db	32
  1055  007C34  53                 	db	83	;'S'
  1056  007C35  41                 	db	65	;'A'
  1057  007C36  42                 	db	66	;'B'
  1058  007C37  41                 	db	65	;'A'
  1059  007C38  44                 	db	68	;'D'
  1060  007C39  4F                 	db	79	;'O'
  1061  007C3A  20                 	db	32
  1062  007C3B  3D                 	db	61	;'='
  1063  007C3C  20                 	db	32
  1064  007C3D  5B                 	db	91	;'['
  1065  007C3E  37                 	db	55	;'7'
  1066  007C3F  5D                 	db	93	;']'
  1067  007C40  20                 	db	32
  1068  007C41  0D                 	db	13
  1069  007C42  0A                 	db	10
  1070  007C43  00                 	db	0
  1071  007C44                     STR_26:
  1072  007C44  0D                 	db	13
  1073  007C45  0A                 	db	10
  1074  007C46  20                 	db	32
  1075  007C47  32                 	db	50	;'2'
  1076  007C48  2E                 	db	46
  1077  007C49  20                 	db	32
  1078  007C4A  41                 	db	65	;'A'
  1079  007C4B  73                 	db	115	;'s'
  1080  007C4C  69                 	db	105	;'i'
  1081  007C4D  67                 	db	103	;'g'
  1082  007C4E  6E                 	db	110	;'n'
  1083  007C4F  61                 	db	97	;'a'
  1084  007C50  72                 	db	114	;'r'
  1085  007C51  20                 	db	32
  1086  007C52  48                 	db	72	;'H'
  1087  007C53  6F                 	db	111	;'o'
  1088  007C54  72                 	db	114	;'r'
  1089  007C55  61                 	db	97	;'a'
  1090  007C56  72                 	db	114	;'r'
  1091  007C57  69                 	db	105	;'i'
  1092  007C58  6F                 	db	111	;'o'
  1093  007C59  73                 	db	115	;'s'
  1094  007C5A  20                 	db	32
  1095  007C5B  70                 	db	112	;'p'
  1096  007C5C  61                 	db	97	;'a'
  1097  007C5D  72                 	db	114	;'r'
  1098  007C5E  61                 	db	97	;'a'
  1099  007C5F  20                 	db	32
  1100  007C60  72                 	db	114	;'r'
  1101  007C61  65                 	db	101	;'e'
  1102  007C62  67                 	db	103	;'g'
  1103  007C63  61                 	db	97	;'a'
  1104  007C64  72                 	db	114	;'r'
  1105  007C65  20                 	db	32
  1106  007C66  0D                 	db	13
  1107  007C67  0A                 	db	10
  1108  007C68  00                 	db	0
  1109  007C69                     STR_2:
  1110  007C69  0D                 	db	13
  1111  007C6A  0A                 	db	10
  1112  007C6B  20                 	db	32
  1113  007C6C  44                 	db	68	;'D'
  1114  007C6D  49                 	db	73	;'I'
  1115  007C6E  41                 	db	65	;'A'
  1116  007C6F  20                 	db	32
  1117  007C70  45                 	db	69	;'E'
  1118  007C71  53                 	db	83	;'S'
  1119  007C72  54                 	db	84	;'T'
  1120  007C73  41                 	db	65	;'A'
  1121  007C74  42                 	db	66	;'B'
  1122  007C75  4C                 	db	76	;'L'
  1123  007C76  45                 	db	69	;'E'
  1124  007C77  43                 	db	67	;'C'
  1125  007C78  49                 	db	73	;'I'
  1126  007C79  44                 	db	68	;'D'
  1127  007C7A  4F                 	db	79	;'O'
  1128  007C7B  20                 	db	32
  1129  007C7C  43                 	db	67	;'C'
  1130  007C7D  4F                 	db	79	;'O'
  1131  007C7E  52                 	db	82	;'R'
  1132  007C7F  52                 	db	82	;'R'
  1133  007C80  45                 	db	69	;'E'
  1134  007C81  43                 	db	67	;'C'
  1135  007C82  54                 	db	84	;'T'
  1136  007C83  41                 	db	65	;'A'
  1137  007C84  4D                 	db	77	;'M'
  1138  007C85  45                 	db	69	;'E'
  1139  007C86  4E                 	db	78	;'N'
  1140  007C87  54                 	db	84	;'T'
  1141  007C88  45                 	db	69	;'E'
  1142  007C89  20                 	db	32
  1143  007C8A  0D                 	db	13
  1144  007C8B  0A                 	db	10
  1145  007C8C  00                 	db	0
  1146  007C8D                     STR_32:
  1147  007C8D  0D                 	db	13
  1148  007C8E  0A                 	db	10
  1149  007C8F  20                 	db	32
  1150  007C90  38                 	db	56	;'8'
  1151  007C91  2E                 	db	46
  1152  007C92  20                 	db	32
  1153  007C93  43                 	db	67	;'C'
  1154  007C94  61                 	db	97	;'a'
  1155  007C95  72                 	db	114	;'r'
  1156  007C96  67                 	db	103	;'g'
  1157  007C97  61                 	db	97	;'a'
  1158  007C98  72                 	db	114	;'r'
  1159  007C99  20                 	db	32
  1160  007C9A  64                 	db	100	;'d'
  1161  007C9B  61                 	db	97	;'a'
  1162  007C9C  74                 	db	116	;'t'
  1163  007C9D  6F                 	db	111	;'o'
  1164  007C9E  73                 	db	115	;'s'
  1165  007C9F  20                 	db	32
  1166  007CA0  64                 	db	100	;'d'
  1167  007CA1  65                 	db	101	;'e'
  1168  007CA2  20                 	db	32
  1169  007CA3  6C                 	db	108	;'l'
  1170  007CA4  61                 	db	97	;'a'
  1171  007CA5  20                 	db	32
  1172  007CA6  6D                 	db	109	;'m'
  1173  007CA7  65                 	db	101	;'e'
  1174  007CA8  6D                 	db	109	;'m'
  1175  007CA9  6F                 	db	111	;'o'
  1176  007CAA  72                 	db	114	;'r'
  1177  007CAB  69                 	db	105	;'i'
  1178  007CAC  61                 	db	97	;'a'
  1179  007CAD  20                 	db	32
  1180  007CAE  0D                 	db	13
  1181  007CAF  0A                 	db	10
  1182  007CB0  00                 	db	0
  1183  007CB1                     STR_38:
  1184  007CB1  0D                 	db	13
  1185  007CB2  0A                 	db	10
  1186  007CB3  54                 	db	84	;'T'
  1187  007CB4  20                 	db	32
  1188  007CB5  3D                 	db	61	;'='
  1189  007CB6  20                 	db	32
  1190  007CB7  4D                 	db	77	;'M'
  1191  007CB8  49                 	db	73	;'I'
  1192  007CB9  4E                 	db	78	;'N'
  1193  007CBA  55                 	db	85	;'U'
  1194  007CBB  54                 	db	84	;'T'
  1195  007CBC  4F                 	db	79	;'O'
  1196  007CBD  53                 	db	83	;'S'
  1197  007CBE  20                 	db	32
  1198  007CBF  51                 	db	81	;'Q'
  1199  007CC0  55                 	db	85	;'U'
  1200  007CC1  45                 	db	69	;'E'
  1201  007CC2  20                 	db	32
  1202  007CC3  44                 	db	68	;'D'
  1203  007CC4  55                 	db	85	;'U'
  1204  007CC5  52                 	db	82	;'R'
  1205  007CC6  41                 	db	65	;'A'
  1206  007CC7  52                 	db	82	;'R'
  1207  007CC8  41                 	db	65	;'A'
  1208  007CC9  20                 	db	32
  1209  007CCA  45                 	db	69	;'E'
  1210  007CCB  4C                 	db	76	;'L'
  1211  007CCC  20                 	db	32
  1212  007CCD  52                 	db	82	;'R'
  1213  007CCE  49                 	db	73	;'I'
  1214  007CCF  45                 	db	69	;'E'
  1215  007CD0  47                 	db	71	;'G'
  1216  007CD1  4F                 	db	79	;'O'
  1217  007CD2  0D                 	db	13
  1218  007CD3  0A                 	db	10
  1219  007CD4  00                 	db	0
  1220  007CD5                     STR_29:
  1221  007CD5  0D                 	db	13
  1222  007CD6  0A                 	db	10
  1223  007CD7  20                 	db	32
  1224  007CD8  35                 	db	53	;'5'
  1225  007CD9  2E                 	db	46
  1226  007CDA  20                 	db	32
  1227  007CDB  4D                 	db	77	;'M'
  1228  007CDC  6F                 	db	111	;'o'
  1229  007CDD  73                 	db	115	;'s'
  1230  007CDE  74                 	db	116	;'t'
  1231  007CDF  72                 	db	114	;'r'
  1232  007CE0  61                 	db	97	;'a'
  1233  007CE1  72                 	db	114	;'r'
  1234  007CE2  20                 	db	32
  1235  007CE3  76                 	db	118	;'v'
  1236  007CE4  61                 	db	97	;'a'
  1237  007CE5  6C                 	db	108	;'l'
  1238  007CE6  6F                 	db	111	;'o'
  1239  007CE7  72                 	db	114	;'r'
  1240  007CE8  65                 	db	101	;'e'
  1241  007CE9  73                 	db	115	;'s'
  1242  007CEA  20                 	db	32
  1243  007CEB  73                 	db	115	;'s'
  1244  007CEC  65                 	db	101	;'e'
  1245  007CED  6E                 	db	110	;'n'
  1246  007CEE  73                 	db	115	;'s'
  1247  007CEF  6F                 	db	111	;'o'
  1248  007CF0  72                 	db	114	;'r'
  1249  007CF1  65                 	db	101	;'e'
  1250  007CF2  73                 	db	115	;'s'
  1251  007CF3  20                 	db	32
  1252  007CF4  0D                 	db	13
  1253  007CF5  0A                 	db	10
  1254  007CF6  00                 	db	0
  1255  007CF7                     STR_3:
  1256  007CF7  0D                 	db	13
  1257  007CF8  0A                 	db	10
  1258  007CF9  20                 	db	32
  1259  007CFA  48                 	db	72	;'H'
  1260  007CFB  4F                 	db	79	;'O'
  1261  007CFC  52                 	db	82	;'R'
  1262  007CFD  41                 	db	65	;'A'
  1263  007CFE  52                 	db	82	;'R'
  1264  007CFF  49                 	db	73	;'I'
  1265  007D00  4F                 	db	79	;'O'
  1266  007D01  53                 	db	83	;'S'
  1267  007D02  20                 	db	32
  1268  007D03  43                 	db	67	;'C'
  1269  007D04  41                 	db	65	;'A'
  1270  007D05  52                 	db	82	;'R'
  1271  007D06  47                 	db	71	;'G'
  1272  007D07  41                 	db	65	;'A'
  1273  007D08  44                 	db	68	;'D'
  1274  007D09  4F                 	db	79	;'O'
  1275  007D0A  53                 	db	83	;'S'
  1276  007D0B  20                 	db	32
  1277  007D0C  43                 	db	67	;'C'
  1278  007D0D  4F                 	db	79	;'O'
  1279  007D0E  4E                 	db	78	;'N'
  1280  007D0F  20                 	db	32
  1281  007D10  45                 	db	69	;'E'
  1282  007D11  58                 	db	88	;'X'
  1283  007D12  49                 	db	73	;'I'
  1284  007D13  54                 	db	84	;'T'
  1285  007D14  4F                 	db	79	;'O'
  1286  007D15  21                 	db	33
  1287  007D16  0D                 	db	13
  1288  007D17  0A                 	db	10
  1289  007D18  00                 	db	0
  1290  007D19                     STR_4:
  1291  007D19  0D                 	db	13
  1292  007D1A  0A                 	db	10
  1293  007D1B  20                 	db	32
  1294  007D1C  4E                 	db	78	;'N'
  1295  007D1D  4F                 	db	79	;'O'
  1296  007D1E  20                 	db	32
  1297  007D1F  48                 	db	72	;'H'
  1298  007D20  41                 	db	65	;'A'
  1299  007D21  59                 	db	89	;'Y'
  1300  007D22  20                 	db	32
  1301  007D23  44                 	db	68	;'D'
  1302  007D24  41                 	db	65	;'A'
  1303  007D25  54                 	db	84	;'T'
  1304  007D26  4F                 	db	79	;'O'
  1305  007D27  53                 	db	83	;'S'
  1306  007D28  20                 	db	32
  1307  007D29  45                 	db	69	;'E'
  1308  007D2A  4E                 	db	78	;'N'
  1309  007D2B  20                 	db	32
  1310  007D2C  4C                 	db	76	;'L'
  1311  007D2D  41                 	db	65	;'A'
  1312  007D2E  20                 	db	32
  1313  007D2F  4D                 	db	77	;'M'
  1314  007D30  45                 	db	69	;'E'
  1315  007D31  4D                 	db	77	;'M'
  1316  007D32  4F                 	db	79	;'O'
  1317  007D33  52                 	db	82	;'R'
  1318  007D34  49                 	db	73	;'I'
  1319  007D35  41                 	db	65	;'A'
  1320  007D36  20                 	db	32
  1321  007D37  0D                 	db	13
  1322  007D38  0A                 	db	10
  1323  007D39  00                 	db	0
  1324  007D3A                     STR_23:
  1325  007D3A  0D                 	db	13
  1326  007D3B  0A                 	db	10
  1327  007D3C  53                 	db	83	;'S'
  1328  007D3D  65                 	db	101	;'e'
  1329  007D3E  6E                 	db	110	;'n'
  1330  007D3F  73                 	db	115	;'s'
  1331  007D40  6F                 	db	111	;'o'
  1332  007D41  72                 	db	114	;'r'
  1333  007D42  65                 	db	101	;'e'
  1334  007D43  73                 	db	115	;'s'
  1335  007D44  20                 	db	32
  1336  007D45  4C                 	db	76	;'L'
  1337  007D46  65                 	db	101	;'e'
  1338  007D47  69                 	db	105	;'i'
  1339  007D48  64                 	db	100	;'d'
  1340  007D49  6F                 	db	111	;'o'
  1341  007D4A  73                 	db	115	;'s'
  1342  007D4B  20                 	db	32
  1343  007D4C  63                 	db	99	;'c'
  1344  007D4D  6F                 	db	111	;'o'
  1345  007D4E  6E                 	db	110	;'n'
  1346  007D4F  20                 	db	32
  1347  007D50  45                 	db	69	;'E'
  1348  007D51  78                 	db	120	;'x'
  1349  007D52  69                 	db	105	;'i'
  1350  007D53  74                 	db	116	;'t'
  1351  007D54  6F                 	db	111	;'o'
  1352  007D55  21                 	db	33
  1353  007D56  0D                 	db	13
  1354  007D57  0A                 	db	10
  1355  007D58  0A                 	db	10
  1356  007D59  00                 	db	0
  1357  007D5A                     STR_28:
  1358  007D5A  0D                 	db	13
  1359  007D5B  0A                 	db	10
  1360  007D5C  20                 	db	32
  1361  007D5D  34                 	db	52	;'4'
  1362  007D5E  2E                 	db	46
  1363  007D5F  20                 	db	32
  1364  007D60  44                 	db	68	;'D'
  1365  007D61  61                 	db	97	;'a'
  1366  007D62  6D                 	db	109	;'m'
  1367  007D63  65                 	db	101	;'e'
  1368  007D64  20                 	db	32
  1369  007D65  64                 	db	100	;'d'
  1370  007D66  61                 	db	97	;'a'
  1371  007D67  74                 	db	116	;'t'
  1372  007D68  6F                 	db	111	;'o'
  1373  007D69  73                 	db	115	;'s'
  1374  007D6A  20                 	db	32
  1375  007D6B  64                 	db	100	;'d'
  1376  007D6C  65                 	db	101	;'e'
  1377  007D6D  6C                 	db	108	;'l'
  1378  007D6E  20                 	db	32
  1379  007D6F  73                 	db	115	;'s'
  1380  007D70  69                 	db	105	;'i'
  1381  007D71  73                 	db	115	;'s'
  1382  007D72  74                 	db	116	;'t'
  1383  007D73  65                 	db	101	;'e'
  1384  007D74  6D                 	db	109	;'m'
  1385  007D75  61                 	db	97	;'a'
  1386  007D76  20                 	db	32
  1387  007D77  0D                 	db	13
  1388  007D78  0A                 	db	10
  1389  007D79  00                 	db	0
  1390  007D7A                     STR_50:
  1391  007D7A  0D                 	db	13
  1392  007D7B  0A                 	db	10
  1393  007D7C  0A                 	db	10
  1394  007D7D  4C                 	db	76	;'L'
  1395  007D7E  61                 	db	97	;'a'
  1396  007D7F  20                 	db	32
  1397  007D80  48                 	db	72	;'H'
  1398  007D81  75                 	db	117	;'u'
  1399  007D82  6D                 	db	109	;'m'
  1400  007D83  65                 	db	101	;'e'
  1401  007D84  64                 	db	100	;'d'
  1402  007D85  61                 	db	97	;'a'
  1403  007D86  64                 	db	100	;'d'
  1404  007D87  20                 	db	32
  1405  007D88  41                 	db	65	;'A'
  1406  007D89  6D                 	db	109	;'m'
  1407  007D8A  62                 	db	98	;'b'
  1408  007D8B  69                 	db	105	;'i'
  1409  007D8C  65                 	db	101	;'e'
  1410  007D8D  6E                 	db	110	;'n'
  1411  007D8E  74                 	db	116	;'t'
  1412  007D8F  65                 	db	101	;'e'
  1413  007D90  20                 	db	32
  1414  007D91  65                 	db	101	;'e'
  1415  007D92  73                 	db	115	;'s'
  1416  007D93  3A                 	db	58	;':'
  1417  007D94  20                 	db	32
  1418  007D95  25                 	db	37
  1419  007D96  64                 	db	100	;'d'
  1420  007D97  0D                 	db	13
  1421  007D98  0A                 	db	10
  1422  007D99  00                 	db	0
  1423  007D9A                     STR_7:
  1424  007D9A  0D                 	db	13
  1425  007D9B  0A                 	db	10
  1426  007D9C  20                 	db	32
  1427  007D9D  45                 	db	69	;'E'
  1428  007D9E  6E                 	db	110	;'n'
  1429  007D9F  76                 	db	118	;'v'
  1430  007DA0  69                 	db	105	;'i'
  1431  007DA1  65                 	db	101	;'e'
  1432  007DA2  20                 	db	32
  1433  007DA3  6C                 	db	108	;'l'
  1434  007DA4  6F                 	db	111	;'o'
  1435  007DA5  73                 	db	115	;'s'
  1436  007DA6  20                 	db	32
  1437  007DA7  4D                 	db	77	;'M'
  1438  007DA8  69                 	db	105	;'i'
  1439  007DA9  6E                 	db	110	;'n'
  1440  007DAA  75                 	db	117	;'u'
  1441  007DAB  74                 	db	116	;'t'
  1442  007DAC  6F                 	db	111	;'o'
  1443  007DAD  73                 	db	115	;'s'
  1444  007DAE  20                 	db	32
  1445  007DAF  45                 	db	69	;'E'
  1446  007DB0  6A                 	db	106	;'j'
  1447  007DB1  3A                 	db	58	;':'
  1448  007DB2  20                 	db	32
  1449  007DB3  32                 	db	50	;'2'
  1450  007DB4  35                 	db	53	;'5'
  1451  007DB5  20                 	db	32
  1452  007DB6  0D                 	db	13
  1453  007DB7  0A                 	db	10
  1454  007DB8  00                 	db	0
  1455  007DB9                     STR_51:
  1456  007DB9  0D                 	db	13
  1457  007DBA  0A                 	db	10
  1458  007DBB  0A                 	db	10
  1459  007DBC  4C                 	db	76	;'L'
  1460  007DBD  61                 	db	97	;'a'
  1461  007DBE  20                 	db	32
  1462  007DBF  54                 	db	84	;'T'
  1463  007DC0  65                 	db	101	;'e'
  1464  007DC1  6D                 	db	109	;'m'
  1465  007DC2  70                 	db	112	;'p'
  1466  007DC3  65                 	db	101	;'e'
  1467  007DC4  72                 	db	114	;'r'
  1468  007DC5  61                 	db	97	;'a'
  1469  007DC6  74                 	db	116	;'t'
  1470  007DC7  75                 	db	117	;'u'
  1471  007DC8  72                 	db	114	;'r'
  1472  007DC9  61                 	db	97	;'a'
  1473  007DCA  20                 	db	32
  1474  007DCB  65                 	db	101	;'e'
  1475  007DCC  73                 	db	115	;'s'
  1476  007DCD  3A                 	db	58	;':'
  1477  007DCE  20                 	db	32
  1478  007DCF  25                 	db	37
  1479  007DD0  64                 	db	100	;'d'
  1480  007DD1  20                 	db	32
  1481  007DD2  43                 	db	67	;'C'
  1482  007DD3  0D                 	db	13
  1483  007DD4  0A                 	db	10
  1484  007DD5  00                 	db	0
  1485  007DD6                     STR_37:
  1486  007DD6  0D                 	db	13
  1487  007DD7  0A                 	db	10
  1488  007DD8  52                 	db	82	;'R'
  1489  007DD9  20                 	db	32
  1490  007DDA  3D                 	db	61	;'='
  1491  007DDB  20                 	db	32
  1492  007DDC  52                 	db	82	;'R'
  1493  007DDD  45                 	db	69	;'E'
  1494  007DDE  47                 	db	71	;'G'
  1495  007DDF  41                 	db	65	;'A'
  1496  007DE0  52                 	db	82	;'R'
  1497  007DE1  28                 	db	40
  1498  007DE2  20                 	db	32
  1499  007DE3  31                 	db	49	;'1'
  1500  007DE4  20                 	db	32
  1501  007DE5  53                 	db	83	;'S'
  1502  007DE6  49                 	db	73	;'I'
  1503  007DE7  20                 	db	32
  1504  007DE8  7C                 	db	124
  1505  007DE9  20                 	db	32
  1506  007DEA  30                 	db	48	;'0'
  1507  007DEB  20                 	db	32
  1508  007DEC  4E                 	db	78	;'N'
  1509  007DED  4F                 	db	79	;'O'
  1510  007DEE  29                 	db	41
  1511  007DEF  0D                 	db	13
  1512  007DF0  0A                 	db	10
  1513  007DF1  00                 	db	0
  1514  007DF2                     STR_25:
  1515  007DF2  0D                 	db	13
  1516  007DF3  0A                 	db	10
  1517  007DF4  20                 	db	32
  1518  007DF5  31                 	db	49	;'1'
  1519  007DF6  2E                 	db	46
  1520  007DF7  20                 	db	32
  1521  007DF8  46                 	db	70	;'F'
  1522  007DF9  69                 	db	105	;'i'
  1523  007DFA  6A                 	db	106	;'j'
  1524  007DFB  61                 	db	97	;'a'
  1525  007DFC  72                 	db	114	;'r'
  1526  007DFD  20                 	db	32
  1527  007DFE  48                 	db	72	;'H'
  1528  007DFF  6F                 	db	111	;'o'
  1529  007E00  72                 	db	114	;'r'
  1530  007E01  61                 	db	97	;'a'
  1531  007E02  20                 	db	32
  1532  007E03  41                 	db	65	;'A'
  1533  007E04  63                 	db	99	;'c'
  1534  007E05  74                 	db	116	;'t'
  1535  007E06  75                 	db	117	;'u'
  1536  007E07  61                 	db	97	;'a'
  1537  007E08  6C                 	db	108	;'l'
  1538  007E09  20                 	db	32
  1539  007E0A  0D                 	db	13
  1540  007E0B  0A                 	db	10
  1541  007E0C  00                 	db	0
  1542  007E0D                     STR_45:
  1543  007E0D  0D                 	db	13
  1544  007E0E  0A                 	db	10
  1545  007E0F  25                 	db	37
  1546  007E10  30                 	db	48	;'0'
  1547  007E11  2E                 	db	46
  1548  007E12  32                 	db	50	;'2'
  1549  007E13  64                 	db	100	;'d'
  1550  007E14  3A                 	db	58	;':'
  1551  007E15  25                 	db	37
  1552  007E16  30                 	db	48	;'0'
  1553  007E17  2E                 	db	46
  1554  007E18  32                 	db	50	;'2'
  1555  007E19  64                 	db	100	;'d'
  1556  007E1A  7C                 	db	124
  1557  007E1B  20                 	db	32
  1558  007E1C  4D                 	db	77	;'M'
  1559  007E1D  49                 	db	73	;'I'
  1560  007E1E  45                 	db	69	;'E'
  1561  007E1F  52                 	db	82	;'R'
  1562  007E20  43                 	db	67	;'C'
  1563  007E21  4F                 	db	79	;'O'
  1564  007E22  4C                 	db	76	;'L'
  1565  007E23  45                 	db	69	;'E'
  1566  007E24  53                 	db	83	;'S'
  1567  007E25  0D                 	db	13
  1568  007E26  0A                 	db	10
  1569  007E27  00                 	db	0
  1570  007E28                     STR_15:
  1571  007E28  0D                 	db	13
  1572  007E29  0A                 	db	10
  1573  007E2A  20                 	db	32
  1574  007E2B  48                 	db	72	;'H'
  1575  007E2C  6F                 	db	111	;'o'
  1576  007E2D  72                 	db	114	;'r'
  1577  007E2E  61                 	db	97	;'a'
  1578  007E2F  72                 	db	114	;'r'
  1579  007E30  69                 	db	105	;'i'
  1580  007E31  6F                 	db	111	;'o'
  1581  007E32  20                 	db	32
  1582  007E33  4D                 	db	77	;'M'
  1583  007E34  6F                 	db	111	;'o'
  1584  007E35  64                 	db	100	;'d'
  1585  007E36  69                 	db	105	;'i'
  1586  007E37  66                 	db	102	;'f'
  1587  007E38  69                 	db	105	;'i'
  1588  007E39  63                 	db	99	;'c'
  1589  007E3A  61                 	db	97	;'a'
  1590  007E3B  64                 	db	100	;'d'
  1591  007E3C  6F                 	db	111	;'o'
  1592  007E3D  21                 	db	33
  1593  007E3E  20                 	db	32
  1594  007E3F  0D                 	db	13
  1595  007E40  0A                 	db	10
  1596  007E41  00                 	db	0
  1597  007E42                     STR_31:
  1598  007E42  0D                 	db	13
  1599  007E43  0A                 	db	10
  1600  007E44  20                 	db	32
  1601  007E45  37                 	db	55	;'7'
  1602  007E46  2E                 	db	46
  1603  007E47  20                 	db	32
  1604  007E48  46                 	db	70	;'F'
  1605  007E49  69                 	db	105	;'i'
  1606  007E4A  6A                 	db	106	;'j'
  1607  007E4B  61                 	db	97	;'a'
  1608  007E4C  72                 	db	114	;'r'
  1609  007E4D  20                 	db	32
  1610  007E4E  44                 	db	68	;'D'
  1611  007E4F  69                 	db	105	;'i'
  1612  007E50  61                 	db	97	;'a'
  1613  007E51  20                 	db	32
  1614  007E52  41                 	db	65	;'A'
  1615  007E53  63                 	db	99	;'c'
  1616  007E54  74                 	db	116	;'t'
  1617  007E55  75                 	db	117	;'u'
  1618  007E56  61                 	db	97	;'a'
  1619  007E57  6C                 	db	108	;'l'
  1620  007E58  20                 	db	32
  1621  007E59  0D                 	db	13
  1622  007E5A  0A                 	db	10
  1623  007E5B  00                 	db	0
  1624  007E5C                     STR_40:
  1625  007E5C  20                 	db	32
  1626  007E5D  20                 	db	32
  1627  007E5E  20                 	db	32
  1628  007E5F  20                 	db	32
  1629  007E60  20                 	db	32
  1630  007E61  20                 	db	32
  1631  007E62  20                 	db	32
  1632  007E63  20                 	db	32
  1633  007E64  20                 	db	32
  1634  007E65  20                 	db	32
  1635  007E66  20                 	db	32
  1636  007E67  20                 	db	32
  1637  007E68  20                 	db	32
  1638  007E69  20                 	db	32
  1639  007E6A  20                 	db	32
  1640  007E6B  20                 	db	32
  1641  007E6C  44                 	db	68	;'D'
  1642  007E6D  4C                 	db	76	;'L'
  1643  007E6E  4D                 	db	77	;'M'
  1644  007E6F  49                 	db	73	;'I'
  1645  007E70  4A                 	db	74	;'J'
  1646  007E71  56                 	db	86	;'V'
  1647  007E72  53                 	db	83	;'S'
  1648  007E73  0D                 	db	13
  1649  007E74  0A                 	db	10
  1650  007E75  00                 	db	0
  1651  007E76                     STR_9:
  1652  007E76  0D                 	db	13
  1653  007E77  0A                 	db	10
  1654  007E78  20                 	db	32
  1655  007E79  4F                 	db	79	;'O'
  1656  007E7A  50                 	db	80	;'P'
  1657  007E7B  43                 	db	67	;'C'
  1658  007E7C  49                 	db	73	;'I'
  1659  007E7D  4F                 	db	79	;'O'
  1660  007E7E  4E                 	db	78	;'N'
  1661  007E7F  45                 	db	69	;'E'
  1662  007E80  53                 	db	83	;'S'
  1663  007E81  20                 	db	32
  1664  007E82  44                 	db	68	;'D'
  1665  007E83  45                 	db	69	;'E'
  1666  007E84  20                 	db	32
  1667  007E85  52                 	db	82	;'R'
  1668  007E86  45                 	db	69	;'E'
  1669  007E87  47                 	db	71	;'G'
  1670  007E88  41                 	db	65	;'A'
  1671  007E89  44                 	db	68	;'D'
  1672  007E8A  4F                 	db	79	;'O'
  1673  007E8B  20                 	db	32
  1674  007E8C  0D                 	db	13
  1675  007E8D  0A                 	db	10
  1676  007E8E  00                 	db	0
  1677  007E8F                     STR_49:
  1678  007E8F  45                 	db	69	;'E'
  1679  007E90  72                 	db	114	;'r'
  1680  007E91  72                 	db	114	;'r'
  1681  007E92  6F                 	db	111	;'o'
  1682  007E93  72                 	db	114	;'r'
  1683  007E94  20                 	db	32
  1684  007E95  64                 	db	100	;'d'
  1685  007E96  65                 	db	101	;'e'
  1686  007E97  20                 	db	32
  1687  007E98  6C                 	db	108	;'l'
  1688  007E99  65                 	db	101	;'e'
  1689  007E9A  63                 	db	99	;'c'
  1690  007E9B  74                 	db	116	;'t'
  1691  007E9C  75                 	db	117	;'u'
  1692  007E9D  72                 	db	114	;'r'
  1693  007E9E  61                 	db	97	;'a'
  1694  007E9F  20                 	db	32
  1695  007EA0  44                 	db	68	;'D'
  1696  007EA1  48                 	db	72	;'H'
  1697  007EA2  54                 	db	84	;'T'
  1698  007EA3  31                 	db	49	;'1'
  1699  007EA4  31                 	db	49	;'1'
  1700  007EA5  0D                 	db	13
  1701  007EA6  0A                 	db	10
  1702  007EA7  00                 	db	0
  1703  007EA8                     STR_42:
  1704  007EA8  0D                 	db	13
  1705  007EA9  0A                 	db	10
  1706  007EAA  25                 	db	37
  1707  007EAB  30                 	db	48	;'0'
  1708  007EAC  2E                 	db	46
  1709  007EAD  32                 	db	50	;'2'
  1710  007EAE  64                 	db	100	;'d'
  1711  007EAF  3A                 	db	58	;':'
  1712  007EB0  25                 	db	37
  1713  007EB1  30                 	db	48	;'0'
  1714  007EB2  2E                 	db	46
  1715  007EB3  32                 	db	50	;'2'
  1716  007EB4  64                 	db	100	;'d'
  1717  007EB5  7C                 	db	124
  1718  007EB6  20                 	db	32
  1719  007EB7  44                 	db	68	;'D'
  1720  007EB8  4F                 	db	79	;'O'
  1721  007EB9  4D                 	db	77	;'M'
  1722  007EBA  49                 	db	73	;'I'
  1723  007EBB  4E                 	db	78	;'N'
  1724  007EBC  47                 	db	71	;'G'
  1725  007EBD  4F                 	db	79	;'O'
  1726  007EBE  0D                 	db	13
  1727  007EBF  0A                 	db	10
  1728  007EC0  00                 	db	0
  1729  007EC1                     STR_47:
  1730  007EC1  0D                 	db	13
  1731  007EC2  0A                 	db	10
  1732  007EC3  25                 	db	37
  1733  007EC4  30                 	db	48	;'0'
  1734  007EC5  2E                 	db	46
  1735  007EC6  32                 	db	50	;'2'
  1736  007EC7  64                 	db	100	;'d'
  1737  007EC8  3A                 	db	58	;':'
  1738  007EC9  25                 	db	37
  1739  007ECA  30                 	db	48	;'0'
  1740  007ECB  2E                 	db	46
  1741  007ECC  32                 	db	50	;'2'
  1742  007ECD  64                 	db	100	;'d'
  1743  007ECE  7C                 	db	124
  1744  007ECF  20                 	db	32
  1745  007ED0  56                 	db	86	;'V'
  1746  007ED1  49                 	db	73	;'I'
  1747  007ED2  45                 	db	69	;'E'
  1748  007ED3  52                 	db	82	;'R'
  1749  007ED4  4E                 	db	78	;'N'
  1750  007ED5  45                 	db	69	;'E'
  1751  007ED6  53                 	db	83	;'S'
  1752  007ED7  0D                 	db	13
  1753  007ED8  0A                 	db	10
  1754  007ED9  00                 	db	0
  1755  007EDA                     STR_48:
  1756  007EDA  0D                 	db	13
  1757  007EDB  0A                 	db	10
  1758  007EDC  25                 	db	37
  1759  007EDD  30                 	db	48	;'0'
  1760  007EDE  2E                 	db	46
  1761  007EDF  32                 	db	50	;'2'
  1762  007EE0  64                 	db	100	;'d'
  1763  007EE1  3A                 	db	58	;':'
  1764  007EE2  25                 	db	37
  1765  007EE3  30                 	db	48	;'0'
  1766  007EE4  2E                 	db	46
  1767  007EE5  32                 	db	50	;'2'
  1768  007EE6  64                 	db	100	;'d'
  1769  007EE7  7C                 	db	124
  1770  007EE8  20                 	db	32
  1771  007EE9  53                 	db	83	;'S'
  1772  007EEA  41                 	db	65	;'A'
  1773  007EEB  42                 	db	66	;'B'
  1774  007EEC  41                 	db	65	;'A'
  1775  007EED  44                 	db	68	;'D'
  1776  007EEE  4F                 	db	79	;'O'
  1777  007EEF  0D                 	db	13
  1778  007EF0  0A                 	db	10
  1779  007EF1  00                 	db	0
  1780  007EF2                     STR_44:
  1781  007EF2  0D                 	db	13
  1782  007EF3  0A                 	db	10
  1783  007EF4  25                 	db	37
  1784  007EF5  30                 	db	48	;'0'
  1785  007EF6  2E                 	db	46
  1786  007EF7  32                 	db	50	;'2'
  1787  007EF8  64                 	db	100	;'d'
  1788  007EF9  3A                 	db	58	;':'
  1789  007EFA  25                 	db	37
  1790  007EFB  30                 	db	48	;'0'
  1791  007EFC  2E                 	db	46
  1792  007EFD  32                 	db	50	;'2'
  1793  007EFE  64                 	db	100	;'d'
  1794  007EFF  7C                 	db	124
  1795  007F00  20                 	db	32
  1796  007F01  4D                 	db	77	;'M'
  1797  007F02  41                 	db	65	;'A'
  1798  007F03  52                 	db	82	;'R'
  1799  007F04  54                 	db	84	;'T'
  1800  007F05  45                 	db	69	;'E'
  1801  007F06  53                 	db	83	;'S'
  1802  007F07  0D                 	db	13
  1803  007F08  0A                 	db	10
  1804  007F09  00                 	db	0
  1805  007F0A                     STR_46:
  1806  007F0A  0D                 	db	13
  1807  007F0B  0A                 	db	10
  1808  007F0C  25                 	db	37
  1809  007F0D  30                 	db	48	;'0'
  1810  007F0E  2E                 	db	46
  1811  007F0F  32                 	db	50	;'2'
  1812  007F10  64                 	db	100	;'d'
  1813  007F11  3A                 	db	58	;':'
  1814  007F12  25                 	db	37
  1815  007F13  30                 	db	48	;'0'
  1816  007F14  2E                 	db	46
  1817  007F15  32                 	db	50	;'2'
  1818  007F16  64                 	db	100	;'d'
  1819  007F17  7C                 	db	124
  1820  007F18  20                 	db	32
  1821  007F19  4A                 	db	74	;'J'
  1822  007F1A  55                 	db	85	;'U'
  1823  007F1B  45                 	db	69	;'E'
  1824  007F1C  56                 	db	86	;'V'
  1825  007F1D  45                 	db	69	;'E'
  1826  007F1E  53                 	db	83	;'S'
  1827  007F1F  0D                 	db	13
  1828  007F20  0A                 	db	10
  1829  007F21  00                 	db	0
  1830  007F22                     STR_41:
  1831  007F22  48                 	db	72	;'H'
  1832  007F23  3A                 	db	58	;':'
  1833  007F24  25                 	db	37
  1834  007F25  32                 	db	50	;'2'
  1835  007F26  64                 	db	100	;'d'
  1836  007F27  7C                 	db	124
  1837  007F28  52                 	db	82	;'R'
  1838  007F29  3A                 	db	58	;':'
  1839  007F2A  25                 	db	37
  1840  007F2B  64                 	db	100	;'d'
  1841  007F2C  7C                 	db	124
  1842  007F2D  54                 	db	84	;'T'
  1843  007F2E  3A                 	db	58	;':'
  1844  007F2F  25                 	db	37
  1845  007F30  32                 	db	50	;'2'
  1846  007F31  64                 	db	100	;'d'
  1847  007F32  7C                 	db	124
  1848  007F33  44                 	db	68	;'D'
  1849  007F34  3A                 	db	58	;':'
  1850  007F35  25                 	db	37
  1851  007F36  73                 	db	115	;'s'
  1852  007F37  0D                 	db	13
  1853  007F38  0A                 	db	10
  1854  007F39  00                 	db	0
  1855  007F3A                     STR_17:
  1856  007F3A  0D                 	db	13
  1857  007F3B  0A                 	db	10
  1858  007F3C  20                 	db	32
  1859  007F3D  54                 	db	84	;'T'
  1860  007F3E  49                 	db	73	;'I'
  1861  007F3F  45                 	db	69	;'E'
  1862  007F40  4D                 	db	77	;'M'
  1863  007F41  50                 	db	80	;'P'
  1864  007F42  4F                 	db	79	;'O'
  1865  007F43  20                 	db	32
  1866  007F44  44                 	db	68	;'D'
  1867  007F45  45                 	db	69	;'E'
  1868  007F46  20                 	db	32
  1869  007F47  52                 	db	82	;'R'
  1870  007F48  45                 	db	69	;'E'
  1871  007F49  47                 	db	71	;'G'
  1872  007F4A  41                 	db	65	;'A'
  1873  007F4B  44                 	db	68	;'D'
  1874  007F4C  4F                 	db	79	;'O'
  1875  007F4D  20                 	db	32
  1876  007F4E  0D                 	db	13
  1877  007F4F  0A                 	db	10
  1878  007F50  00                 	db	0
  1879  007F51                     STR_30:
  1880  007F51  0D                 	db	13
  1881  007F52  0A                 	db	10
  1882  007F53  20                 	db	32
  1883  007F54  36                 	db	54	;'6'
  1884  007F55  2E                 	db	46
  1885  007F56  20                 	db	32
  1886  007F57  52                 	db	82	;'R'
  1887  007F58  65                 	db	101	;'e'
  1888  007F59  67                 	db	103	;'g'
  1889  007F5A  61                 	db	97	;'a'
  1890  007F5B  64                 	db	100	;'d'
  1891  007F5C  6F                 	db	111	;'o'
  1892  007F5D  20                 	db	32
  1893  007F5E  72                 	db	114	;'r'
  1894  007F5F  61                 	db	97	;'a'
  1895  007F60  70                 	db	112	;'p'
  1896  007F61  69                 	db	105	;'i'
  1897  007F62  64                 	db	100	;'d'
  1898  007F63  6F                 	db	111	;'o'
  1899  007F64  20                 	db	32
  1900  007F65  0D                 	db	13
  1901  007F66  0A                 	db	10
  1902  007F67  00                 	db	0
  1903  007F68                     STR_43:
  1904  007F68  0D                 	db	13
  1905  007F69  0A                 	db	10
  1906  007F6A  25                 	db	37
  1907  007F6B  30                 	db	48	;'0'
  1908  007F6C  2E                 	db	46
  1909  007F6D  32                 	db	50	;'2'
  1910  007F6E  64                 	db	100	;'d'
  1911  007F6F  3A                 	db	58	;':'
  1912  007F70  25                 	db	37
  1913  007F71  30                 	db	48	;'0'
  1914  007F72  2E                 	db	46
  1915  007F73  32                 	db	50	;'2'
  1916  007F74  64                 	db	100	;'d'
  1917  007F75  7C                 	db	124
  1918  007F76  20                 	db	32
  1919  007F77  4C                 	db	76	;'L'
  1920  007F78  55                 	db	85	;'U'
  1921  007F79  4E                 	db	78	;'N'
  1922  007F7A  45                 	db	69	;'E'
  1923  007F7B  53                 	db	83	;'S'
  1924  007F7C  0D                 	db	13
  1925  007F7D  0A                 	db	10
  1926  007F7E  00                 	db	0
  1927  007F7F                     STR_60:
  1928  007F7F  0D                 	db	13
  1929  007F80  0A                 	db	10
  1930  007F81  20                 	db	32
  1931  007F82  52                 	db	82	;'R'
  1932  007F83  45                 	db	69	;'E'
  1933  007F84  47                 	db	71	;'G'
  1934  007F85  41                 	db	65	;'A'
  1935  007F86  44                 	db	68	;'D'
  1936  007F87  4F                 	db	79	;'O'
  1937  007F88  20                 	db	32
  1938  007F89  52                 	db	82	;'R'
  1939  007F8A  41                 	db	65	;'A'
  1940  007F8B  50                 	db	80	;'P'
  1941  007F8C  49                 	db	73	;'I'
  1942  007F8D  44                 	db	68	;'D'
  1943  007F8E  4F                 	db	79	;'O'
  1944  007F8F  20                 	db	32
  1945  007F90  0D                 	db	13
  1946  007F91  0A                 	db	10
  1947  007F92  00                 	db	0
  1948  007F93                     STR_59:
  1949  007F93  0A                 	db	10
  1950  007F94  46                 	db	70	;'F'
  1951  007F95  41                 	db	65	;'A'
  1952  007F96  4C                 	db	76	;'L'
  1953  007F97  4C                 	db	76	;'L'
  1954  007F98  4F                 	db	79	;'O'
  1955  007F99  20                 	db	32
  1956  007F9A  45                 	db	69	;'E'
  1957  007F9B  4C                 	db	76	;'L'
  1958  007F9C  20                 	db	32
  1959  007F9D  53                 	db	83	;'S'
  1960  007F9E  45                 	db	69	;'E'
  1961  007F9F  54                 	db	84	;'T'
  1962  007FA0  45                 	db	69	;'E'
  1963  007FA1  4F                 	db	79	;'O'
  1964  007FA2  0D                 	db	13
  1965  007FA3  0A                 	db	10
  1966  007FA4  00                 	db	0
  1967  007FA5  41                 	db	65	;'A'
  1968  007FA6  54                 	db	84	;'T'
  1969  007FA7  2B                 	db	43
  1970  007FA8  4E                 	db	78	;'N'
  1971  007FA9  41                 	db	65	;'A'
  1972  007FAA  4D                 	db	77	;'M'
  1973  007FAB  45                 	db	69	;'E'
  1974  007FAC  53                 	db	83	;'S'
  1975  007FAD  4D                 	db	77	;'M'
  1976  007FAE  41                 	db	65	;'A'
  1977  007FAF  52                 	db	82	;'R'
  1978  007FB0  54                 	db	84	;'T'
  1979  007FB1  48                 	db	72	;'H'
  1980  007FB2  4F                 	db	79	;'O'
  1981  007FB3  4D                 	db	77	;'M'
  1982  007FB4  45                 	db	69	;'E'
  1983  007FB5  00                 	db	0
  1984  007FB6                     STR_5:
  1985  007FB6  0D                 	db	13
  1986  007FB7  0A                 	db	10
  1987  007FB8  20                 	db	32
  1988  007FB9  46                 	db	70	;'F'
  1989  007FBA  49                 	db	73	;'I'
  1990  007FBB  4A                 	db	74	;'J'
  1991  007FBC  41                 	db	65	;'A'
  1992  007FBD  20                 	db	32
  1993  007FBE  48                 	db	72	;'H'
  1994  007FBF  4F                 	db	79	;'O'
  1995  007FC0  52                 	db	82	;'R'
  1996  007FC1  41                 	db	65	;'A'
  1997  007FC2  20                 	db	32
  1998  007FC3  0D                 	db	13
  1999  007FC4  0A                 	db	10
  2000  007FC5  00                 	db	0
  2001  007FC6                     STR_33:
  2002  007FC6  0D                 	db	13
  2003  007FC7  0A                 	db	10
  2004  007FC8  20                 	db	32
  2005  007FC9  4F                 	db	79	;'O'
  2006  007FCA  70                 	db	112	;'p'
  2007  007FCB  63                 	db	99	;'c'
  2008  007FCC  69                 	db	105	;'i'
  2009  007FCD  6F                 	db	111	;'o'
  2010  007FCE  6E                 	db	110	;'n'
  2011  007FCF  3A                 	db	58	;':'
  2012  007FD0  20                 	db	32
  2013  007FD1  20                 	db	32
  2014  007FD2  0D                 	db	13
  2015  007FD3  00                 	db	0
  2016  007FD4                     STR_36:
  2017  007FD4  0D                 	db	13
  2018  007FD5  0A                 	db	10
  2019  007FD6  48                 	db	72	;'H'
  2020  007FD7  20                 	db	32
  2021  007FD8  3D                 	db	61	;'='
  2022  007FD9  20                 	db	32
  2023  007FDA  48                 	db	72	;'H'
  2024  007FDB  4F                 	db	79	;'O'
  2025  007FDC  52                 	db	82	;'R'
  2026  007FDD  41                 	db	65	;'A'
  2027  007FDE  0D                 	db	13
  2028  007FDF  0A                 	db	10
  2029  007FE0  00                 	db	0
  2030  007FE1  41                 	db	65	;'A'
  2031  007FE2  54                 	db	84	;'T'
  2032  007FE3  2B                 	db	43
  2033  007FE4  50                 	db	80	;'P'
  2034  007FE5  49                 	db	73	;'I'
  2035  007FE6  4E                 	db	78	;'N'
  2036  007FE7  32                 	db	50	;'2'
  2037  007FE8  35                 	db	53	;'5'
  2038  007FE9  30                 	db	48	;'0'
  2039  007FEA  31                 	db	49	;'1'
  2040  007FEB  00                 	db	0
  2041  007FEC                     STR_14:
  2042  007FEC  0D                 	db	13
  2043  007FED  0A                 	db	10
  2044  007FEE  5B                 	db	91	;'['
  2045  007FEF  25                 	db	37
  2046  007FF0  64                 	db	100	;'d'
  2047  007FF1  5D                 	db	93	;']'
  2048  007FF2  3A                 	db	58	;':'
  2049  007FF3  20                 	db	32
  2050  007FF4  00                 	db	0
  2051  007FF5  41                 	db	65	;'A'
  2052  007FF6  54                 	db	84	;'T'
  2053  007FF7  2B                 	db	43
  2054  007FF8  42                 	db	66	;'B'
  2055  007FF9  41                 	db	65	;'A'
  2056  007FFA  55                 	db	85	;'U'
  2057  007FFB  44                 	db	68	;'D'
  2058  007FFC  34                 	db	52	;'4'
  2059  007FFD  00                 	db	0
  2060  0000                     
  2061                           ; #config settings
  2062  007FFE  00                 	db	0	; dummy byte at the end
  2063  0000                     
  2064                           	psect	cinit
  2065  002D5A                     __pcinit:
  2066                           	opt callstack 0
  2067  002D5A                     start_initialization:
  2068                           	opt callstack 0
  2069  002D5A                     __initialization:
  2070                           	opt callstack 0
  2071                           
  2072                           ; Initialize objects allocated to BANK0 (11 bytes)
  2073                           ; load TBLPTR registers with __pidataBANK0
  2074  002D5A  0E40               	movlw	low __pidataBANK0
  2075  002D5C  6EF6               	movwf	tblptrl,c
  2076  002D5E  0E33               	movlw	high __pidataBANK0
  2077  002D60  6EF7               	movwf	tblptrh,c
  2078  002D62  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2079  002D64  6EF8               	movwf	tblptru,c
  2080  002D66  EE00  F0F4         	lfsr	0,__pdataBANK0
  2081  002D6A  EE10 F00B          	lfsr	1,11
  2082  002D6E                     copy_data0:
  2083  002D6E  0009               	tblrd		*+
  2084  002D70  CFF5 FFEE          	movff	tablat,postinc0
  2085  002D74  50E5               	movf	postdec1,w,c
  2086  002D76  50E1               	movf	fsr1l,w,c
  2087  002D78  E1FA               	bnz	copy_data0
  2088                           
  2089                           ; Clear objects allocated to BIGRAM (288 bytes)
  2090  002D7A  EE01  F032         	lfsr	0,__pbssBIGRAM
  2091  002D7E  EE11 F020          	lfsr	1,288
  2092  002D82                     clear_0:
  2093  002D82  6AEE               	clrf	postinc0,c
  2094  002D84  50E5               	movf	postdec1,w,c
  2095  002D86  50E1               	movf	fsr1l,w,c
  2096  002D88  E1FC               	bnz	clear_0
  2097  002D8A  50E2               	movf	fsr1h,w,c
  2098  002D8C  E1FA               	bnz	clear_0
  2099                           
  2100                           ; Clear objects allocated to BANK1 (50 bytes)
  2101  002D8E  EE01  F000         	lfsr	0,__pbssBANK1
  2102  002D92  0E32               	movlw	50
  2103  002D94                     clear_1:
  2104  002D94  6AEE               	clrf	postinc0,c
  2105  002D96  06E8               	decf	wreg,f,c
  2106  002D98  E1FD               	bnz	clear_1
  2107                           
  2108                           ; Clear objects allocated to BANK0 (77 bytes)
  2109  002D9A  EE00  F060         	lfsr	0,__pbssBANK0
  2110  002D9E  0E4D               	movlw	77
  2111  002DA0                     clear_2:
  2112  002DA0  6AEE               	clrf	postinc0,c
  2113  002DA2  06E8               	decf	wreg,f,c
  2114  002DA4  E1FD               	bnz	clear_2
  2115  002DA6                     end_of_initialization:
  2116                           	opt callstack 0
  2117  002DA6                     __end_of__initialization:
  2118                           	opt callstack 0
  2119  002DA6  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2120  002DA8  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2121  002DAA  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2122  002DAC  6EF8               	movwf	tblptru,c
  2123  002DAE  0100               	movlb	0
  2124  002DB0  EFBF  F013         	goto	_main	;jump to C main() function
  2125                           
  2126                           	psect	bssBANK0
  2127  000060                     __pbssBANK0:
  2128                           	opt callstack 0
  2129  000060                     _sensores:
  2130                           	opt callstack 0
  2131  000060                     	ds	16
  2132  000070                     _nout:
  2133                           	opt callstack 0
  2134  000070                     	ds	2
  2135  000072                     _width:
  2136                           	opt callstack 0
  2137  000072                     	ds	2
  2138  000074                     _prec:
  2139                           	opt callstack 0
  2140  000074                     	ds	2
  2141  000076                     _flags:
  2142                           	opt callstack 0
  2143  000076                     	ds	2
  2144  000078                     _contInterrupciones:
  2145                           	opt callstack 0
  2146  000078                     	ds	2
  2147  00007A                     _peticionLecturaSensores:
  2148                           	opt callstack 0
  2149  00007A                     	ds	1
  2150  00007B                     _regando:
  2151                           	opt callstack 0
  2152  00007B                     	ds	1
  2153  00007C                     _minutosTranscurridos:
  2154                           	opt callstack 0
  2155  00007C                     	ds	1
  2156  00007D                     _minutosRegar:
  2157                           	opt callstack 0
  2158  00007D                     	ds	1
  2159  00007E                     _Humedad:
  2160                           	opt callstack 0
  2161  00007E                     	ds	1
  2162  00007F                     _Temperatura:
  2163                           	opt callstack 0
  2164  00007F                     	ds	1
  2165  000080                     _flagRegado:
  2166                           	opt callstack 0
  2167  000080                     	ds	1
  2168  000081                     _tempHora:
  2169                           	opt callstack 0
  2170  000081                     	ds	1
  2171  000082                     _overflowTimer:
  2172                           	opt callstack 0
  2173  000082                     	ds	1
  2174  000083                     _datoRecibido:
  2175                           	opt callstack 0
  2176  000083                     	ds	1
  2177  000084                     _diaActual:
  2178                           	opt callstack 0
  2179  000084                     	ds	1
  2180  000085                     _segundos:
  2181                           	opt callstack 0
  2182  000085                     	ds	1
  2183  000086                     _minutos:
  2184                           	opt callstack 0
  2185  000086                     	ds	1
  2186  000087                     _hora:
  2187                           	opt callstack 0
  2188  000087                     	ds	1
  2189  000088                     _MODO_COMUNICACION:
  2190                           	opt callstack 0
  2191  000088                     	ds	1
  2192  000089                     _esperandoDatos:
  2193                           	opt callstack 0
  2194  000089                     	ds	1
  2195  00008A                     _esperaDatoConcluida:
  2196                           	opt callstack 0
  2197  00008A                     	ds	1
  2198  00008B                     _byteUart:
  2199                           	opt callstack 0
  2200  00008B                     	ds	1
  2201  00008C                     _tiempoInactividadTrans:
  2202                           	opt callstack 0
  2203  00008C                     	ds	1
  2204  00008D                     _dbuf:
  2205                           	opt callstack 0
  2206  00008D                     	ds	32
  2207                           
  2208                           	psect	dataBANK0
  2209  0000F4                     __pdataBANK0:
  2210                           	opt callstack 0
  2211  0000F4                     stoa@F1144:
  2212                           	opt callstack 0
  2213  0000F4                     	ds	7
  2214  0000FB                     _VALOR_TIMER0:
  2215                           	opt callstack 0
  2216  0000FB                     	ds	2
  2217  0000FD                     _VALOR_TIMER0UART:
  2218                           	opt callstack 0
  2219  0000FD                     	ds	2
  2220                           
  2221                           	psect	bssBANK1
  2222  000100                     __pbssBANK1:
  2223                           	opt callstack 0
  2224  000100                     _buffer:
  2225                           	opt callstack 0
  2226  000100                     	ds	50
  2227                           
  2228                           	psect	bssBIGRAM
  2229  000132                     __pbssBIGRAM:
  2230                           	opt callstack 0
  2231  000132                     _horarios:
  2232                           	opt callstack 0
  2233  000132                     	ds	288
  2234                           
  2235                           	psect	cstackBANK0
  2236  0000AD                     __pcstackBANK0:
  2237                           	opt callstack 0
  2238  0000AD                     ?_vfprintf:
  2239                           	opt callstack 0
  2240  0000AD                     vfprintf@fp:
  2241                           	opt callstack 0
  2242                           
  2243                           ; 2 bytes @ 0x0
  2244  0000AD                     	ds	2
  2245  0000AF                     vfprintf@fmt:
  2246                           	opt callstack 0
  2247                           
  2248                           ; 2 bytes @ 0x2
  2249  0000AF                     	ds	2
  2250  0000B1                     vfprintf@ap:
  2251                           	opt callstack 0
  2252                           
  2253                           ; 2 bytes @ 0x4
  2254  0000B1                     	ds	2
  2255  0000B3                     ?_sprintf:
  2256                           	opt callstack 0
  2257  0000B3                     sprintf@s:
  2258                           	opt callstack 0
  2259                           
  2260                           ; 2 bytes @ 0x6
  2261  0000B3                     	ds	2
  2262  0000B5                     sprintf@fmt:
  2263                           	opt callstack 0
  2264                           
  2265                           ; 2 bytes @ 0x8
  2266  0000B5                     	ds	12
  2267  0000C1                     sprintf@ap:
  2268                           	opt callstack 0
  2269                           
  2270                           ; 2 bytes @ 0x14
  2271  0000C1                     	ds	2
  2272  0000C3                     sprintf@f:
  2273                           	opt callstack 0
  2274                           
  2275                           ; 6 bytes @ 0x16
  2276  0000C3                     	ds	6
  2277  0000C9                     asignarHorarios@diaRegar:
  2278                           	opt callstack 0
  2279  0000C9                     lecturaWifi@Rx:
  2280                           	opt callstack 0
  2281  0000C9                     mostrarDatosSensores@i:
  2282                           	opt callstack 0
  2283  0000C9                     dameDatosSistema@bufferHorario:
  2284                           	opt callstack 0
  2285                           
  2286                           ; 30 bytes @ 0x1C
  2287  0000C9                     	ds	1
  2288  0000CA                     lecturaWifi@humedadMedida:
  2289                           	opt callstack 0
  2290  0000CA                     asignarHorarios@i:
  2291                           	opt callstack 0
  2292                           
  2293                           ; 2 bytes @ 0x1D
  2294  0000CA                     	ds	1
  2295  0000CB                     lecturaWifi@i:
  2296                           	opt callstack 0
  2297                           
  2298                           ; 2 bytes @ 0x1E
  2299  0000CB                     	ds	1
  2300  0000CC                     asignarHorarios@hora:
  2301                           	opt callstack 0
  2302                           
  2303                           ; 1 bytes @ 0x1F
  2304  0000CC                     	ds	1
  2305  0000CD                     asignarHorarios@Rx:
  2306                           	opt callstack 0
  2307  0000CD                     mostrarDatosSensoresWIFI@i:
  2308                           	opt callstack 0
  2309                           
  2310                           ; 2 bytes @ 0x20
  2311  0000CD                     	ds	26
  2312  0000E7                     _dameDatosSistema$1925:
  2313                           	opt callstack 0
  2314                           
  2315                           ; 2 bytes @ 0x3A
  2316  0000E7                     	ds	2
  2317  0000E9                     _dameDatosSistema$1926:
  2318                           	opt callstack 0
  2319                           
  2320                           ; 2 bytes @ 0x3C
  2321  0000E9                     	ds	2
  2322  0000EB                     _dameDatosSistema$1927:
  2323                           	opt callstack 0
  2324                           
  2325                           ; 2 bytes @ 0x3E
  2326  0000EB                     	ds	2
  2327  0000ED                     _dameDatosSistema$1928:
  2328                           	opt callstack 0
  2329                           
  2330                           ; 2 bytes @ 0x40
  2331  0000ED                     	ds	2
  2332  0000EF                     dameDatosSistema@i:
  2333                           	opt callstack 0
  2334                           
  2335                           ; 2 bytes @ 0x42
  2336  0000EF                     	ds	2
  2337  0000F1                     ??_sistemaPrincipal:
  2338                           
  2339                           ; 1 bytes @ 0x44
  2340  0000F1                     	ds	2
  2341  0000F3                     sistemaPrincipal@opcion:
  2342                           	opt callstack 0
  2343                           
  2344                           ; 1 bytes @ 0x46
  2345  0000F3                     	ds	1
  2346                           
  2347                           	psect	cstackCOMRAM
  2348  000001                     __pcstackCOMRAM:
  2349                           	opt callstack 0
  2350  000001                     ??_i2c_espera:
  2351  000001                     ??_convertirDato:
  2352  000001                     ??_DHT11_Start:
  2353  000001                     ?_strlen:
  2354                           	opt callstack 0
  2355  000001                     ?_isdigit:
  2356                           	opt callstack 0
  2357  000001                     ?_isspace:
  2358                           	opt callstack 0
  2359  000001                     ?_horaRegar:
  2360                           	opt callstack 0
  2361  000001                     ?_dameHumedadSuelo:
  2362                           	opt callstack 0
  2363  000001                     ?___wmul:
  2364                           	opt callstack 0
  2365  000001                     ?___awdiv:
  2366                           	opt callstack 0
  2367  000001                     ?___awmod:
  2368                           	opt callstack 0
  2369  000001                     ?___lmul:
  2370                           	opt callstack 0
  2371  000001                     ?___aodiv:
  2372                           	opt callstack 0
  2373  000001                     ?___aomod:
  2374                           	opt callstack 0
  2375  000001                     UART_write@dato:
  2376                           	opt callstack 0
  2377  000001                     DHT11_ReadData@i:
  2378                           	opt callstack 0
  2379  000001                     check_response@respuesta:
  2380                           	opt callstack 0
  2381  000001                     constructorSensor@s:
  2382                           	opt callstack 0
  2383  000001                     limpiarBuffer@i:
  2384                           	opt callstack 0
  2385  000001                     ___wmul@multiplier:
  2386                           	opt callstack 0
  2387  000001                     ___awdiv@dividend:
  2388                           	opt callstack 0
  2389  000001                     ___awmod@dividend:
  2390                           	opt callstack 0
  2391  000001                     isdigit@c:
  2392                           	opt callstack 0
  2393  000001                     isspace@c:
  2394                           	opt callstack 0
  2395  000001                     fputc@c:
  2396                           	opt callstack 0
  2397  000001                     strlen@s:
  2398                           	opt callstack 0
  2399  000001                     ___lmul@multiplier:
  2400                           	opt callstack 0
  2401  000001                     ___aodiv@dividend:
  2402                           	opt callstack 0
  2403  000001                     ___aomod@dividend:
  2404                           	opt callstack 0
  2405                           
  2406                           ; 8 bytes @ 0x0
  2407  000001                     	ds	1
  2408  000002                     i2c_envia_dato@dato:
  2409                           	opt callstack 0
  2410  000002                     i2c_recibe_dato@datoleido:
  2411                           	opt callstack 0
  2412  000002                     convertirDato@dato:
  2413                           	opt callstack 0
  2414  000002                     DHT11_ReadData@data:
  2415                           	opt callstack 0
  2416  000002                     UART_printf@cadena:
  2417                           	opt callstack 0
  2418                           
  2419                           ; 2 bytes @ 0x1
  2420  000002                     	ds	1
  2421  000003                     ??_isdigit:
  2422  000003                     ??_isspace:
  2423  000003                     ??_horaRegar:
  2424  000003                     ??_dameHumedadSuelo:
  2425  000003                     escribe_rtc@dato:
  2426                           	opt callstack 0
  2427  000003                     leer_rtc@direccion:
  2428                           	opt callstack 0
  2429  000003                     convertirDato@datoR:
  2430                           	opt callstack 0
  2431  000003                     constructorSensor@porcientoHumedad:
  2432                           	opt callstack 0
  2433  000003                     leer_eeprom@direccion:
  2434                           	opt callstack 0
  2435  000003                     ___wmul@multiplicand:
  2436                           	opt callstack 0
  2437  000003                     ___awdiv@divisor:
  2438                           	opt callstack 0
  2439  000003                     ___awmod@divisor:
  2440                           	opt callstack 0
  2441  000003                     fputc@fp:
  2442                           	opt callstack 0
  2443  000003                     strlen@a:
  2444                           	opt callstack 0
  2445                           
  2446                           ; 2 bytes @ 0x2
  2447  000003                     	ds	1
  2448  000004                     ??_dameTemperaturaHumedad:
  2449  000004                     escribe_rtc@direccion:
  2450                           	opt callstack 0
  2451  000004                     leer_rtc@dato:
  2452                           	opt callstack 0
  2453  000004                     constructorSensor@pin:
  2454                           	opt callstack 0
  2455  000004                     getValue@numCharacters:
  2456                           	opt callstack 0
  2457                           
  2458                           ; 2 bytes @ 0x3
  2459  000004                     	ds	1
  2460  000005                     ??_fputc:
  2461  000005                     ??_leer_eeprom:
  2462  000005                     dameHumedadSuelo@canalLeer:
  2463                           	opt callstack 0
  2464  000005                     ___awdiv@counter:
  2465                           	opt callstack 0
  2466  000005                     ___awmod@counter:
  2467                           	opt callstack 0
  2468  000005                     restablecerDatosSensor@i:
  2469                           	opt callstack 0
  2470  000005                     ___wmul@product:
  2471                           	opt callstack 0
  2472  000005                     ___lmul@multiplicand:
  2473                           	opt callstack 0
  2474                           
  2475                           ; 4 bytes @ 0x4
  2476  000005                     	ds	1
  2477  000006                     ??_getValue:
  2478  000006                     _horaRegar$806:
  2479                           	opt callstack 0
  2480  000006                     leer_eeprom@dato:
  2481                           	opt callstack 0
  2482  000006                     ___awdiv@sign:
  2483                           	opt callstack 0
  2484  000006                     ___awmod@sign:
  2485                           	opt callstack 0
  2486  000006                     dameTemperaturaHumedad@checkSum:
  2487                           	opt callstack 0
  2488                           
  2489                           ; 2 bytes @ 0x5
  2490  000006                     	ds	1
  2491  000007                     ??_inicializarObjetos:
  2492  000007                     ??_leeHorariosMemoria:
  2493  000007                     _isspace$1591:
  2494                           	opt callstack 0
  2495  000007                     escribe_eeprom@direccion:
  2496                           	opt callstack 0
  2497  000007                     ___awdiv@quotient:
  2498                           	opt callstack 0
  2499                           
  2500                           ; 2 bytes @ 0x6
  2501  000007                     	ds	1
  2502  000008                     ?_atoi:
  2503                           	opt callstack 0
  2504  000008                     dameTemperaturaHumedad@humedadDecimal:
  2505                           	opt callstack 0
  2506  000008                     getValue@datoIncorrecto:
  2507                           	opt callstack 0
  2508  000008                     atoi@s:
  2509                           	opt callstack 0
  2510                           
  2511                           ; 2 bytes @ 0x7
  2512  000008                     	ds	1
  2513  000009                     escribe_eeprom@dato:
  2514                           	opt callstack 0
  2515  000009                     leeHorariosMemoria@caracterLeido:
  2516                           	opt callstack 0
  2517  000009                     dameTemperaturaHumedad@temperaturaDecimal:
  2518                           	opt callstack 0
  2519  000009                     inicializarObjetos@j:
  2520                           	opt callstack 0
  2521  000009                     getValue@i:
  2522                           	opt callstack 0
  2523  000009                     ___lmul@product:
  2524                           	opt callstack 0
  2525  000009                     ___aodiv@divisor:
  2526                           	opt callstack 0
  2527  000009                     ___aomod@divisor:
  2528                           	opt callstack 0
  2529                           
  2530                           ; 8 bytes @ 0x8
  2531  000009                     	ds	1
  2532  00000A                     ??_atoi:
  2533  00000A                     ??_escribe_eeprom:
  2534  00000A                     ?_stoa:
  2535                           	opt callstack 0
  2536  00000A                     dameTemperaturaHumedad@humedad:
  2537                           	opt callstack 0
  2538  00000A                     leeHorariosMemoria@j:
  2539                           	opt callstack 0
  2540  00000A                     stoa@fp:
  2541                           	opt callstack 0
  2542  00000A                     fputs@s:
  2543                           	opt callstack 0
  2544                           
  2545                           ; 2 bytes @ 0x9
  2546  00000A                     	ds	1
  2547  00000B                     ??_escribeHorariosMemoria:
  2548  00000B                     dameTemperaturaHumedad@temperatura:
  2549                           	opt callstack 0
  2550  00000B                     inicializarObjetos@i_809:
  2551                           	opt callstack 0
  2552  00000B                     getValue@i_995:
  2553                           	opt callstack 0
  2554                           
  2555                           ; 2 bytes @ 0xA
  2556  00000B                     	ds	1
  2557  00000C                     ?_estaSeco:
  2558                           	opt callstack 0
  2559  00000C                     estaSeco@s:
  2560                           	opt callstack 0
  2561  00000C                     leeHorariosMemoria@contMemoria:
  2562                           	opt callstack 0
  2563  00000C                     stoa@s:
  2564                           	opt callstack 0
  2565  00000C                     fputs@fp:
  2566                           	opt callstack 0
  2567                           
  2568                           ; 2 bytes @ 0xB
  2569  00000C                     	ds	1
  2570  00000D                     ?___aldiv:
  2571                           	opt callstack 0
  2572  00000D                     getValue@dato:
  2573                           	opt callstack 0
  2574  00000D                     inicializarObjetos@i:
  2575                           	opt callstack 0
  2576  00000D                     escribeHorariosMemoria@j:
  2577                           	opt callstack 0
  2578  00000D                     ___aldiv@dividend:
  2579                           	opt callstack 0
  2580                           
  2581                           ; 4 bytes @ 0xC
  2582  00000D                     	ds	1
  2583  00000E                     ??_stoa:
  2584  00000E                     _estaSeco$799:
  2585                           	opt callstack 0
  2586  00000E                     getValue@Rx:
  2587                           	opt callstack 0
  2588  00000E                     fputs@c:
  2589                           	opt callstack 0
  2590  00000E                     leeHorariosMemoria@i:
  2591                           	opt callstack 0
  2592  00000E                     atoi@neg:
  2593                           	opt callstack 0
  2594                           
  2595                           ; 2 bytes @ 0xD
  2596  00000E                     	ds	1
  2597  00000F                     ??_regadoRapido:
  2598  00000F                     ??_encenderBombas:
  2599  00000F                     setRtc@direccion:
  2600                           	opt callstack 0
  2601  00000F                     escribeHorariosMemoria@contMemoria:
  2602                           	opt callstack 0
  2603  00000F                     fputs@i:
  2604                           	opt callstack 0
  2605  00000F                     stoa@nuls:
  2606                           	opt callstack 0
  2607                           
  2608                           ; 7 bytes @ 0xE
  2609  00000F                     	ds	1
  2610  000010                     setRtc@seteado:
  2611                           	opt callstack 0
  2612  000010                     _atoi$1573:
  2613                           	opt callstack 0
  2614                           
  2615                           ; 2 bytes @ 0xF
  2616  000010                     	ds	1
  2617  000011                     ?_pad:
  2618                           	opt callstack 0
  2619  000011                     setRtc@datoRtc:
  2620                           	opt callstack 0
  2621  000011                     encenderBombas@flagSeco:
  2622                           	opt callstack 0
  2623  000011                     regadoRapido@tiempoRegar:
  2624                           	opt callstack 0
  2625  000011                     ___aodiv@counter:
  2626                           	opt callstack 0
  2627  000011                     ___aomod@counter:
  2628                           	opt callstack 0
  2629  000011                     escribeHorariosMemoria@i:
  2630                           	opt callstack 0
  2631  000011                     pad@fp:
  2632                           	opt callstack 0
  2633  000011                     ___aldiv@divisor:
  2634                           	opt callstack 0
  2635                           
  2636                           ; 4 bytes @ 0x10
  2637  000011                     	ds	1
  2638  000012                     setRtc@dato:
  2639                           	opt callstack 0
  2640  000012                     regadoRapido@areaRegar:
  2641                           	opt callstack 0
  2642  000012                     ___aodiv@sign:
  2643                           	opt callstack 0
  2644  000012                     ___aomod@sign:
  2645                           	opt callstack 0
  2646  000012                     encenderBombas@i:
  2647                           	opt callstack 0
  2648  000012                     _atoi$1575:
  2649                           	opt callstack 0
  2650                           
  2651                           ; 2 bytes @ 0x11
  2652  000012                     	ds	1
  2653  000013                     ?_abs:
  2654                           	opt callstack 0
  2655  000013                     setTiempoRegar@tiempoRegar:
  2656                           	opt callstack 0
  2657  000013                     pad@buf:
  2658                           	opt callstack 0
  2659  000013                     abs@a:
  2660                           	opt callstack 0
  2661  000013                     ___aodiv@quotient:
  2662                           	opt callstack 0
  2663                           
  2664                           ; 8 bytes @ 0x12
  2665  000013                     	ds	1
  2666  000014                     setTiempoRegar@hora:
  2667                           	opt callstack 0
  2668  000014                     _atoi$1574:
  2669                           	opt callstack 0
  2670                           
  2671                           ; 1 bytes @ 0x13
  2672  000014                     	ds	1
  2673  000015                     ??_abs:
  2674  000015                     ___aldiv@counter:
  2675                           	opt callstack 0
  2676  000015                     pad@p:
  2677                           	opt callstack 0
  2678  000015                     atoi@n:
  2679                           	opt callstack 0
  2680                           
  2681                           ; 2 bytes @ 0x14
  2682  000015                     	ds	1
  2683  000016                     ___aldiv@sign:
  2684                           	opt callstack 0
  2685  000016                     stoa@i:
  2686                           	opt callstack 0
  2687                           
  2688                           ; 2 bytes @ 0x15
  2689  000016                     	ds	1
  2690  000017                     ??_pad:
  2691  000017                     ___aldiv@quotient:
  2692                           	opt callstack 0
  2693                           
  2694                           ; 4 bytes @ 0x16
  2695  000017                     	ds	1
  2696  000018                     pad@i:
  2697                           	opt callstack 0
  2698  000018                     stoa@w:
  2699                           	opt callstack 0
  2700                           
  2701                           ; 2 bytes @ 0x17
  2702  000018                     	ds	2
  2703  00001A                     pad@w:
  2704                           	opt callstack 0
  2705  00001A                     stoa@cp:
  2706                           	opt callstack 0
  2707                           
  2708                           ; 2 bytes @ 0x19
  2709  00001A                     	ds	1
  2710  00001B                     ?_map:
  2711                           	opt callstack 0
  2712  00001B                     UART_init@BAUD:
  2713                           	opt callstack 0
  2714  00001B                     map@x:
  2715                           	opt callstack 0
  2716                           
  2717                           ; 4 bytes @ 0x1A
  2718  00001B                     	ds	1
  2719  00001C                     ?_ctoa:
  2720                           	opt callstack 0
  2721  00001C                     ?_dtoa:
  2722                           	opt callstack 0
  2723  00001C                     ctoa@fp:
  2724                           	opt callstack 0
  2725  00001C                     dtoa@fp:
  2726                           	opt callstack 0
  2727  00001C                     stoa@p:
  2728                           	opt callstack 0
  2729                           
  2730                           ; 2 bytes @ 0x1B
  2731  00001C                     	ds	2
  2732  00001E                     ctoa@c:
  2733                           	opt callstack 0
  2734  00001E                     stoa@l:
  2735                           	opt callstack 0
  2736  00001E                     dtoa@d:
  2737                           	opt callstack 0
  2738                           
  2739                           ; 8 bytes @ 0x1D
  2740  00001E                     	ds	1
  2741  00001F                     ctoa@w:
  2742                           	opt callstack 0
  2743  00001F                     map@in_min:
  2744                           	opt callstack 0
  2745                           
  2746                           ; 4 bytes @ 0x1E
  2747  00001F                     	ds	4
  2748  000023                     map@in_max:
  2749                           	opt callstack 0
  2750  000023                     _UART_init$1924:
  2751                           	opt callstack 0
  2752                           
  2753                           ; 4 bytes @ 0x22
  2754  000023                     	ds	3
  2755  000026                     ??_dtoa:
  2756                           
  2757                           ; 1 bytes @ 0x25
  2758  000026                     	ds	1
  2759  000027                     map@out_min:
  2760                           	opt callstack 0
  2761                           
  2762                           ; 4 bytes @ 0x26
  2763  000027                     	ds	4
  2764  00002B                     map@out_max:
  2765                           	opt callstack 0
  2766                           
  2767                           ; 4 bytes @ 0x2A
  2768  00002B                     	ds	3
  2769  00002E                     _dtoa$1088:
  2770                           	opt callstack 0
  2771                           
  2772                           ; 2 bytes @ 0x2D
  2773  00002E                     	ds	1
  2774  00002F                     ??_lecturaAnalogaSensores:
  2775                           
  2776                           ; 1 bytes @ 0x2E
  2777  00002F                     	ds	1
  2778  000030                     lecturaAnalogaSensores@i:
  2779                           	opt callstack 0
  2780  000030                     dtoa@p:
  2781                           	opt callstack 0
  2782                           
  2783                           ; 2 bytes @ 0x2F
  2784  000030                     	ds	2
  2785  000032                     dtoa@w:
  2786                           	opt callstack 0
  2787                           
  2788                           ; 2 bytes @ 0x31
  2789  000032                     	ds	2
  2790  000034                     dtoa@s:
  2791                           	opt callstack 0
  2792                           
  2793                           ; 2 bytes @ 0x33
  2794  000034                     	ds	2
  2795  000036                     dtoa@n:
  2796                           	opt callstack 0
  2797                           
  2798                           ; 8 bytes @ 0x35
  2799  000036                     	ds	8
  2800  00003E                     dtoa@i:
  2801                           	opt callstack 0
  2802                           
  2803                           ; 2 bytes @ 0x3D
  2804  00003E                     	ds	2
  2805  000040                     ?_vfpfcnvrt:
  2806                           	opt callstack 0
  2807  000040                     vfpfcnvrt@fp:
  2808                           	opt callstack 0
  2809                           
  2810                           ; 2 bytes @ 0x3F
  2811  000040                     	ds	2
  2812  000042                     vfpfcnvrt@fmt:
  2813                           	opt callstack 0
  2814                           
  2815                           ; 2 bytes @ 0x41
  2816  000042                     	ds	2
  2817  000044                     vfpfcnvrt@ap:
  2818                           	opt callstack 0
  2819                           
  2820                           ; 2 bytes @ 0x43
  2821  000044                     	ds	2
  2822  000046                     ??_vfpfcnvrt:
  2823                           
  2824                           ; 1 bytes @ 0x45
  2825  000046                     	ds	4
  2826  00004A                     vfpfcnvrt@ll:
  2827                           	opt callstack 0
  2828                           
  2829                           ; 8 bytes @ 0x49
  2830  00004A                     	ds	8
  2831  000052                     vfpfcnvrt@cp:
  2832                           	opt callstack 0
  2833                           
  2834                           ; 2 bytes @ 0x51
  2835  000052                     	ds	2
  2836  000054                     vfpfcnvrt@done:
  2837                           	opt callstack 0
  2838                           
  2839                           ; 2 bytes @ 0x53
  2840  000054                     	ds	2
  2841  000056                     _vfpfcnvrt$1113:
  2842                           	opt callstack 0
  2843                           
  2844                           ; 2 bytes @ 0x55
  2845  000056                     	ds	2
  2846  000058                     _vfpfcnvrt$1114:
  2847                           	opt callstack 0
  2848                           
  2849                           ; 2 bytes @ 0x57
  2850  000058                     	ds	2
  2851  00005A                     vfpfcnvrt@c:
  2852                           	opt callstack 0
  2853                           
  2854                           ; 1 bytes @ 0x59
  2855  00005A                     	ds	1
  2856  00005B                     vfprintf@cfmt:
  2857                           	opt callstack 0
  2858                           
  2859                           ; 2 bytes @ 0x5A
  2860  00005B                     	ds	2
  2861  00005D                     ??_dameDatosSistema:
  2862  00005D                     ??_mostrarDatosSensoresWIFI:
  2863  00005D                     ??_mostrarDatosSensores:
  2864  00005D                     ??_asignarHorarios:
  2865  00005D                     
  2866                           ; 1 bytes @ 0x5C
  2867  00005D                     	ds	2
  2868  00005F                     
  2869                           ; 1 bytes @ 0x5E
  2870 ;;
  2871 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2872 ;;
  2873 ;; *************** function _main *****************
  2874 ;; Defined at:
  2875 ;;		line 1050 in file "main.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;		None
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      void 
  2882 ;; Registers used:
  2883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2889 ;;      Params:         0       0       0       0       0       0       0       0       0
  2890 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2891 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2892 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2893 ;;Total ram usage:        0 bytes
  2894 ;; Hardware stack levels required when called:   12
  2895 ;; This function calls:
  2896 ;;		_UART_init
  2897 ;;		_configurarAdc
  2898 ;;		_i2c_iniciar
  2899 ;;		_inicializarObjetos
  2900 ;;		_mostrarMenu
  2901 ;;		_restablecerDatosSensor
  2902 ;;		_sistemaPrincipal
  2903 ;;		_sistemaRegado
  2904 ;; This function is called by:
  2905 ;;		Startup code after reset
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           	psect	text0
  2910  00277E                     __ptext0:
  2911                           	opt callstack 0
  2912  00277E                     _main:
  2913                           	opt callstack 19
  2914  00277E                     
  2915                           ;main.c: 1052:     INTCONbits.GIE = 1;
  2916  00277E  8EF2               	bsf	242,7,c	;volatile
  2917                           
  2918                           ;main.c: 1053:     INTCONbits.PEIE = 1;
  2919  002780  8CF2               	bsf	242,6,c	;volatile
  2920                           
  2921                           ;main.c: 1054:     INTCONbits.TMR0IE = 1;
  2922  002782  8AF2               	bsf	242,5,c	;volatile
  2923                           
  2924                           ;main.c: 1056:     PIE1bits.RCIE = 1;
  2925  002784  8A9D               	bsf	157,5,c	;volatile
  2926  002786                     
  2927                           ;main.c: 1058:     T0CON = 0b00000111;
  2928  002786  0E07               	movlw	7
  2929  002788  6ED5               	movwf	213,c	;volatile
  2930  00278A                     
  2931                           ;main.c: 1063:     restablecerDatosSensor();
  2932  00278A  EC83  F017         	call	_restablecerDatosSensor	;wreg free
  2933  00278E                     
  2934                           ;main.c: 1064:     configurarAdc();
  2935  00278E  ECAB  F019         	call	_configurarAdc	;wreg free
  2936  002792                     
  2937                           ;main.c: 1065:     UART_init(9600);
  2938  002792  0E80               	movlw	128
  2939  002794  6E1B               	movwf	UART_init@BAUD^0,c
  2940  002796  0E25               	movlw	37
  2941  002798  6E1C               	movwf	(UART_init@BAUD+1)^0,c
  2942  00279A  0E00               	movlw	0
  2943  00279C  6E1D               	movwf	(UART_init@BAUD+2)^0,c
  2944  00279E  0E00               	movlw	0
  2945  0027A0  6E1E               	movwf	(UART_init@BAUD+3)^0,c
  2946  0027A2  EC4D  F015         	call	_UART_init	;wreg free
  2947  0027A6                     
  2948                           ;main.c: 1066:     i2c_iniciar();
  2949  0027A6  EC87  F019         	call	_i2c_iniciar	;wreg free
  2950  0027AA                     
  2951                           ;main.c: 1067:     inicializarObjetos();
  2952  0027AA  EC99  F00C         	call	_inicializarObjetos	;wreg free
  2953  0027AE                     
  2954                           ;main.c: 1072:     TRISD = 0;
  2955  0027AE  0E00               	movlw	0
  2956  0027B0  6E95               	movwf	149,c	;volatile
  2957  0027B2                     
  2958                           ;main.c: 1073:     LATD = 0;
  2959  0027B2  0E00               	movlw	0
  2960  0027B4  6E8C               	movwf	140,c	;volatile
  2961  0027B6                     
  2962                           ;main.c: 1075:     TMR0 = VALOR_TIMER0;
  2963  0027B6  C0FB  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  2964  0027BA  C0FC  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  2965  0027BE                     
  2966                           ;main.c: 1077:     INTCONbits.TMR0IF = 1;
  2967  0027BE  84F2               	bsf	242,2,c	;volatile
  2968  0027C0                     
  2969                           ;main.c: 1080:     T0CONbits.TMR0ON = 1;
  2970  0027C0  8ED5               	bsf	213,7,c	;volatile
  2971  0027C2                     
  2972                           ;main.c: 1082:     mostrarMenu();
  2973  0027C2  EC53  F014         	call	_mostrarMenu	;wreg free
  2974  0027C6                     
  2975                           ;main.c: 1084:     MODO_COMUNICACION = 0;
  2976  0027C6  0E00               	movlw	0
  2977  0027C8  0100               	movlb	0	; () banked
  2978  0027CA  6F88               	movwf	_MODO_COMUNICACION& (0+255),b
  2979  0027CC                     l4940:
  2980                           
  2981                           ;main.c: 1089:         if (datoRecibido) {
  2982  0027CC  0100               	movlb	0	; () banked
  2983  0027CE  5183               	movf	_datoRecibido& (0+255),w,b
  2984  0027D0  B4D8               	btfsc	status,2,c
  2985  0027D2  EFED  F013         	goto	u3851
  2986  0027D6  EFEF  F013         	goto	u3850
  2987  0027DA                     u3851:
  2988  0027DA  EFF6  F013         	goto	l4948
  2989  0027DE                     u3850:
  2990  0027DE                     
  2991                           ; BSR set to: 0
  2992                           ;main.c: 1091:             datoRecibido = 0;
  2993  0027DE  0E00               	movlw	0
  2994  0027E0  6F83               	movwf	_datoRecibido& (0+255),b
  2995  0027E2                     
  2996                           ; BSR set to: 0
  2997                           ;main.c: 1092:             byteUart -= 48;
  2998  0027E2  0E30               	movlw	48
  2999  0027E4  5F8B               	subwf	_byteUart& (0+255),f,b
  3000  0027E6                     
  3001                           ; BSR set to: 0
  3002                           ;main.c: 1093:             sistemaPrincipal(byteUart);
  3003  0027E6  518B               	movf	_byteUart& (0+255),w,b
  3004  0027E8  EC2D  F011         	call	_sistemaPrincipal
  3005  0027EC                     l4948:
  3006                           
  3007                           ;main.c: 1097:         if (overflowTimer) {
  3008  0027EC  0100               	movlb	0	; () banked
  3009  0027EE  5182               	movf	_overflowTimer& (0+255),w,b
  3010  0027F0  B4D8               	btfsc	status,2,c
  3011  0027F2  EFFD  F013         	goto	u3861
  3012  0027F6  EFFF  F013         	goto	u3860
  3013  0027FA                     u3861:
  3014  0027FA  EFE6  F013         	goto	l4940
  3015  0027FE                     u3860:
  3016  0027FE                     
  3017                           ; BSR set to: 0
  3018                           ;main.c: 1099:             esperandoDatos = 0;
  3019  0027FE  0E00               	movlw	0
  3020  002800  6F89               	movwf	_esperandoDatos& (0+255),b
  3021                           
  3022                           ;main.c: 1100:             overflowTimer = 0;
  3023  002802  0E00               	movlw	0
  3024  002804  6F82               	movwf	_overflowTimer& (0+255),b
  3025  002806                     
  3026                           ; BSR set to: 0
  3027                           ;main.c: 1101:             sistemaRegado();
  3028  002806  ECE3  F00B         	call	_sistemaRegado	;wreg free
  3029  00280A  EFE6  F013         	goto	l4940
  3030  00280E  EF07  F000         	goto	start
  3031  002812                     __end_of_main:
  3032                           	opt callstack 0
  3033                           
  3034 ;; *************** function _sistemaRegado *****************
  3035 ;; Defined at:
  3036 ;;		line 639 in file "main.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;		None
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;		None
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      void 
  3043 ;; Registers used:
  3044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3050 ;;      Params:         0       0       0       0       0       0       0       0       0
  3051 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3052 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3053 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3054 ;;Total ram usage:        0 bytes
  3055 ;; Hardware stack levels used:    1
  3056 ;; Hardware stack levels required when called:   10
  3057 ;; This function calls:
  3058 ;;		_dameDiaActual
  3059 ;;		_dameHoraActual
  3060 ;;		_encenderBombas
  3061 ;;		_horaRegar
  3062 ;;		_lecturaAnalogaSensores
  3063 ;;		_lecturaWifi
  3064 ;;		_mostrarMenu
  3065 ;; This function is called by:
  3066 ;;		_main
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           	psect	text1
  3071  0017C6                     __ptext1:
  3072                           	opt callstack 0
  3073  0017C6                     _sistemaRegado:
  3074                           	opt callstack 20
  3075  0017C6                     
  3076                           ;main.c: 643:     if (regando) {
  3077  0017C6  0100               	movlb	0	; () banked
  3078  0017C8  517B               	movf	_regando& (0+255),w,b
  3079  0017CA  B4D8               	btfsc	status,2,c
  3080  0017CC  EFEA  F00B         	goto	u3701
  3081  0017D0  EFEC  F00B         	goto	u3700
  3082  0017D4                     u3701:
  3083  0017D4  EF1C  F00C         	goto	l4836
  3084  0017D8                     u3700:
  3085  0017D8                     
  3086                           ; BSR set to: 0
  3087                           ;main.c: 645:         contInterrupciones++;
  3088  0017D8  4B78               	infsnz	_contInterrupciones& (0+255),f,b
  3089  0017DA  2B79               	incf	(_contInterrupciones+1)& (0+255),f,b
  3090  0017DC                     
  3091                           ; BSR set to: 0
  3092                           ;main.c: 647:         if (contInterrupciones == 6) {
  3093  0017DC  0E06               	movlw	6
  3094  0017DE  1978               	xorwf	_contInterrupciones& (0+255),w,b
  3095  0017E0  1179               	iorwf	(_contInterrupciones+1)& (0+255),w,b
  3096  0017E2  A4D8               	btfss	status,2,c
  3097  0017E4  EFF6  F00B         	goto	u3711
  3098  0017E8  EFF8  F00B         	goto	u3710
  3099  0017EC                     u3711:
  3100  0017EC  EF98  F00C         	goto	l392
  3101  0017F0                     u3710:
  3102  0017F0                     
  3103                           ; BSR set to: 0
  3104                           ;main.c: 648:             contInterrupciones = 0;
  3105  0017F0  0E00               	movlw	0
  3106  0017F2  6F79               	movwf	(_contInterrupciones+1)& (0+255),b
  3107  0017F4  0E00               	movlw	0
  3108  0017F6  6F78               	movwf	_contInterrupciones& (0+255),b
  3109  0017F8                     
  3110                           ; BSR set to: 0
  3111                           ;main.c: 649:             minutosTranscurridos++;
  3112  0017F8  2B7C               	incf	_minutosTranscurridos& (0+255),f,b
  3113  0017FA                     
  3114                           ; BSR set to: 0
  3115                           ;main.c: 652:             if (minutosTranscurridos >= minutosRegar) {
  3116  0017FA  517D               	movf	_minutosRegar& (0+255),w,b
  3117  0017FC  5D7C               	subwf	_minutosTranscurridos& (0+255),w,b
  3118  0017FE  A0D8               	btfss	status,0,c
  3119  001800  EF04  F00C         	goto	u3721
  3120  001804  EF06  F00C         	goto	u3720
  3121  001808                     u3721:
  3122  001808  EF98  F00C         	goto	l392
  3123  00180C                     u3720:
  3124  00180C                     
  3125                           ; BSR set to: 0
  3126                           ;main.c: 654:                 LATD = 0;
  3127  00180C  0E00               	movlw	0
  3128  00180E  6E8C               	movwf	140,c	;volatile
  3129                           
  3130                           ;main.c: 655:                 minutosTranscurridos = 0;
  3131  001810  0E00               	movlw	0
  3132  001812  6F7C               	movwf	_minutosTranscurridos& (0+255),b
  3133                           
  3134                           ;main.c: 656:                 regando = 0;
  3135  001814  0E00               	movlw	0
  3136  001816  6F7B               	movwf	_regando& (0+255),b
  3137  001818                     
  3138                           ; BSR set to: 0
  3139                           ;main.c: 657:                 horarios[hora].regado = 1;
  3140  001818  5187               	movf	_hora& (0+255),w,b
  3141  00181A  0D0C               	mullw	12
  3142  00181C  0E3C               	movlw	low (_horarios+10)
  3143  00181E  24F3               	addwf	243,w,c
  3144  001820  6ED9               	movwf	fsr2l,c
  3145  001822  0E01               	movlw	high (_horarios+10)
  3146  001824  20F4               	addwfc	prodh,w,c
  3147  001826  6EDA               	movwf	fsr2h,c
  3148  001828  0E01               	movlw	1
  3149  00182A  6EDF               	movwf	indf2,c
  3150  00182C                     
  3151                           ; BSR set to: 0
  3152                           ;main.c: 658:                 tempHora = hora;
  3153  00182C  C087  F081         	movff	_hora,_tempHora
  3154  001830                     
  3155                           ; BSR set to: 0
  3156                           ;main.c: 659:                 flagRegado = 0;
  3157  001830  0E00               	movlw	0
  3158  001832  6F80               	movwf	_flagRegado& (0+255),b
  3159  001834  EF98  F00C         	goto	l392
  3160  001838                     l4836:
  3161                           
  3162                           ; BSR set to: 0
  3163                           ;main.c: 665:         dameHoraActual();
  3164  001838  ECEF  F018         	call	_dameHoraActual	;wreg free
  3165                           
  3166                           ;main.c: 666:         dameDiaActual();
  3167  00183C  EC92  F019         	call	_dameDiaActual	;wreg free
  3168  001840                     
  3169                           ;main.c: 668:         if (hora != tempHora && !flagRegado) {
  3170  001840  0100               	movlb	0	; () banked
  3171  001842  5181               	movf	_tempHora& (0+255),w,b
  3172  001844  1987               	xorwf	_hora& (0+255),w,b
  3173  001846  B4D8               	btfsc	status,2,c
  3174  001848  EF28  F00C         	goto	u3731
  3175  00184C  EF2A  F00C         	goto	u3730
  3176  001850                     u3731:
  3177  001850  EF3E  F00C         	goto	l4846
  3178  001854                     u3730:
  3179  001854                     
  3180                           ; BSR set to: 0
  3181  001854  5180               	movf	_flagRegado& (0+255),w,b
  3182  001856  A4D8               	btfss	status,2,c
  3183  001858  EF30  F00C         	goto	u3741
  3184  00185C  EF32  F00C         	goto	u3740
  3185  001860                     u3741:
  3186  001860  EF3E  F00C         	goto	l4846
  3187  001864                     u3740:
  3188  001864                     
  3189                           ; BSR set to: 0
  3190                           ;main.c: 669:             horarios[tempHora].regado = 0;
  3191  001864  5181               	movf	_tempHora& (0+255),w,b
  3192  001866  0D0C               	mullw	12
  3193  001868  0E3C               	movlw	low (_horarios+10)
  3194  00186A  24F3               	addwf	243,w,c
  3195  00186C  6ED9               	movwf	fsr2l,c
  3196  00186E  0E01               	movlw	high (_horarios+10)
  3197  001870  20F4               	addwfc	prodh,w,c
  3198  001872  6EDA               	movwf	fsr2h,c
  3199  001874  0E00               	movlw	0
  3200  001876  6EDF               	movwf	indf2,c
  3201  001878                     
  3202                           ; BSR set to: 0
  3203                           ;main.c: 670:             flagRegado = 1;
  3204  001878  0E01               	movlw	1
  3205  00187A  6F80               	movwf	_flagRegado& (0+255),b
  3206  00187C                     l4846:
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;main.c: 673:         if ((!MODO_COMUNICACION && horaRegar()) || (MODO_COMUNICACION
  3210  00187C  5188               	movf	_MODO_COMUNICACION& (0+255),w,b
  3211  00187E  A4D8               	btfss	status,2,c
  3212  001880  EF44  F00C         	goto	u3751
  3213  001884  EF46  F00C         	goto	u3750
  3214  001888                     u3751:
  3215  001888  EF51  F00C         	goto	l4850
  3216  00188C                     u3750:
  3217  00188C                     
  3218                           ; BSR set to: 0
  3219  00188C  EC96  F014         	call	_horaRegar	;wreg free
  3220  001890  5001               	movf	?_horaRegar^0,w,c
  3221  001892  1002               	iorwf	(?_horaRegar+1)^0,w,c
  3222  001894  A4D8               	btfss	status,2,c
  3223  001896  EF4F  F00C         	goto	u3761
  3224  00189A  EF51  F00C         	goto	u3760
  3225  00189E                     u3761:
  3226  00189E  EF65  F00C         	goto	l4854
  3227  0018A2                     u3760:
  3228  0018A2                     l4850:
  3229  0018A2  0100               	movlb	0	; () banked
  3230  0018A4  5188               	movf	_MODO_COMUNICACION& (0+255),w,b
  3231  0018A6  B4D8               	btfsc	status,2,c
  3232  0018A8  EF58  F00C         	goto	u3771
  3233  0018AC  EF5A  F00C         	goto	u3770
  3234  0018B0                     u3771:
  3235  0018B0  EF98  F00C         	goto	l392
  3236  0018B4                     u3770:
  3237  0018B4                     
  3238                           ; BSR set to: 0
  3239  0018B4  EC96  F014         	call	_horaRegar	;wreg free
  3240  0018B8  5001               	movf	?_horaRegar^0,w,c
  3241  0018BA  1002               	iorwf	(?_horaRegar+1)^0,w,c
  3242  0018BC  B4D8               	btfsc	status,2,c
  3243  0018BE  EF63  F00C         	goto	u3781
  3244  0018C2  EF65  F00C         	goto	u3780
  3245  0018C6                     u3781:
  3246  0018C6  EF98  F00C         	goto	l392
  3247  0018CA                     u3780:
  3248  0018CA                     l4854:
  3249                           
  3250                           ;main.c: 674:                 && horaRegar())) {;main.c: 678:             if (MODO_COMUN
      +                          ICACION) {
  3251  0018CA  0100               	movlb	0	; () banked
  3252  0018CC  5188               	movf	_MODO_COMUNICACION& (0+255),w,b
  3253  0018CE  B4D8               	btfsc	status,2,c
  3254  0018D0  EF6C  F00C         	goto	u3791
  3255  0018D4  EF6E  F00C         	goto	u3790
  3256  0018D8                     u3791:
  3257  0018D8  EF89  F00C         	goto	l4866
  3258  0018DC                     u3790:
  3259  0018DC                     
  3260                           ; BSR set to: 0
  3261                           ;main.c: 679:                 lecturaWifi();
  3262  0018DC  ECCC  F00F         	call	_lecturaWifi	;wreg free
  3263  0018E0                     
  3264                           ;main.c: 680:                 if (peticionLecturaSensores) {
  3265  0018E0  0100               	movlb	0	; () banked
  3266  0018E2  517A               	movf	_peticionLecturaSensores& (0+255),w,b
  3267  0018E4  B4D8               	btfsc	status,2,c
  3268  0018E6  EF77  F00C         	goto	u3801
  3269  0018EA  EF79  F00C         	goto	u3800
  3270  0018EE                     u3801:
  3271  0018EE  EF85  F00C         	goto	l4864
  3272  0018F2                     u3800:
  3273  0018F2                     
  3274                           ; BSR set to: 0
  3275                           ;main.c: 681:                     minutosRegar = horarios[hora].tiempoRegar;
  3276  0018F2  5187               	movf	_hora& (0+255),w,b
  3277  0018F4  0D0C               	mullw	12
  3278  0018F6  0E3D               	movlw	low (_horarios+11)
  3279  0018F8  24F3               	addwf	243,w,c
  3280  0018FA  6ED9               	movwf	fsr2l,c
  3281  0018FC  0E01               	movlw	high (_horarios+11)
  3282  0018FE  20F4               	addwfc	prodh,w,c
  3283  001900  6EDA               	movwf	fsr2h,c
  3284  001902  50DF               	movf	indf2,w,c
  3285  001904  6F7D               	movwf	_minutosRegar& (0+255),b
  3286  001906                     
  3287                           ; BSR set to: 0
  3288                           ;main.c: 682:                     encenderBombas();
  3289  001906  ECB3  F005         	call	_encenderBombas	;wreg free
  3290  00190A                     l4864:
  3291                           
  3292                           ;main.c: 684:                 mostrarMenu();
  3293  00190A  EC53  F014         	call	_mostrarMenu	;wreg free
  3294                           
  3295                           ;main.c: 685:             } else {
  3296  00190E  EF98  F00C         	goto	l392
  3297  001912                     l4866:
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;main.c: 686:                 lecturaAnalogaSensores();
  3301  001912  EC1A  F013         	call	_lecturaAnalogaSensores	;wreg free
  3302  001916                     
  3303                           ;main.c: 687:                 minutosRegar = horarios[hora].tiempoRegar;
  3304  001916  0100               	movlb	0	; () banked
  3305  001918  5187               	movf	_hora& (0+255),w,b
  3306  00191A  0D0C               	mullw	12
  3307  00191C  0E3D               	movlw	low (_horarios+11)
  3308  00191E  24F3               	addwf	243,w,c
  3309  001920  6ED9               	movwf	fsr2l,c
  3310  001922  0E01               	movlw	high (_horarios+11)
  3311  001924  20F4               	addwfc	prodh,w,c
  3312  001926  6EDA               	movwf	fsr2h,c
  3313  001928  50DF               	movf	indf2,w,c
  3314  00192A  6F7D               	movwf	_minutosRegar& (0+255),b
  3315  00192C                     
  3316                           ; BSR set to: 0
  3317                           ;main.c: 688:                 encenderBombas();
  3318  00192C  ECB3  F005         	call	_encenderBombas	;wreg free
  3319  001930                     l392:
  3320  001930  0012               	return		;funcret
  3321  001932                     __end_of_sistemaRegado:
  3322                           	opt callstack 0
  3323                           
  3324 ;; *************** function _horaRegar *****************
  3325 ;; Defined at:
  3326 ;;		line 157 in file "main.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;		None
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;		None
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  2    0[COMRAM] int 
  3333 ;; Registers used:
  3334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3340 ;;      Params:         2       0       0       0       0       0       0       0       0
  3341 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3342 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3343 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3344 ;;Total ram usage:        6 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    1
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		_sistemaRegado
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text2
  3355  00292C                     __ptext2:
  3356                           	opt callstack 0
  3357  00292C                     _horaRegar:
  3358                           	opt callstack 28
  3359  00292C                     
  3360                           ;main.c: 159:     return (horarios[hora].regar) && (!horarios[hora].regado) &&
  3361  00292C  0E00               	movlw	0
  3362  00292E  6E06               	movwf	_horaRegar$806^0,c
  3363  002930  0100               	movlb	0	; () banked
  3364  002932  5187               	movf	_hora& (0+255),w,b
  3365  002934  0D0C               	mullw	12
  3366  002936  0E3B               	movlw	low (_horarios+9)
  3367  002938  24F3               	addwf	243,w,c
  3368  00293A  6ED9               	movwf	fsr2l,c
  3369  00293C  0E01               	movlw	high (_horarios+9)
  3370  00293E  20F4               	addwfc	prodh,w,c
  3371  002940  6EDA               	movwf	fsr2h,c
  3372  002942  50DF               	movf	indf2,w,c
  3373  002944  B4D8               	btfsc	status,2,c
  3374  002946  EFA7  F014         	goto	u3321
  3375  00294A  EFA9  F014         	goto	u3320
  3376  00294E                     u3321:
  3377  00294E  EFD4  F014         	goto	l4330
  3378  002952                     u3320:
  3379  002952                     
  3380                           ; BSR set to: 0
  3381  002952  5187               	movf	_hora& (0+255),w,b
  3382  002954  0D0C               	mullw	12
  3383  002956  0E3C               	movlw	low (_horarios+10)
  3384  002958  24F3               	addwf	243,w,c
  3385  00295A  6ED9               	movwf	fsr2l,c
  3386  00295C  0E01               	movlw	high (_horarios+10)
  3387  00295E  20F4               	addwfc	prodh,w,c
  3388  002960  6EDA               	movwf	fsr2h,c
  3389  002962  50DF               	movf	indf2,w,c
  3390  002964  A4D8               	btfss	status,2,c
  3391  002966  EFB7  F014         	goto	u3331
  3392  00296A  EFB9  F014         	goto	u3330
  3393  00296E                     u3331:
  3394  00296E  EFD4  F014         	goto	l4330
  3395  002972                     u3330:
  3396  002972                     
  3397                           ; BSR set to: 0
  3398  002972  5187               	movf	_hora& (0+255),w,b
  3399  002974  0D0C               	mullw	12
  3400  002976  0E32               	movlw	low _horarios
  3401  002978  6E03               	movwf	??_horaRegar^0,c
  3402  00297A  0E01               	movlw	high _horarios
  3403  00297C  6E04               	movwf	(??_horaRegar+1)^0,c
  3404  00297E  50F3               	movf	243,w,c
  3405  002980  2603               	addwf	??_horaRegar^0,f,c
  3406  002982  50F4               	movf	244,w,c
  3407  002984  2204               	addwfc	(??_horaRegar+1)^0,f,c
  3408  002986  5184               	movf	_diaActual& (0+255),w,b
  3409  002988  2403               	addwf	??_horaRegar^0,w,c
  3410  00298A  6ED9               	movwf	fsr2l,c
  3411  00298C  0E00               	movlw	0
  3412  00298E  2004               	addwfc	(??_horaRegar+1)^0,w,c
  3413  002990  6EDA               	movwf	fsr2h,c
  3414  002992  0E31               	movlw	49
  3415  002994  18DE               	xorwf	postinc2,w,c
  3416  002996  A4D8               	btfss	status,2,c
  3417  002998  EFD0  F014         	goto	u3341
  3418  00299C  EFD2  F014         	goto	u3340
  3419  0029A0                     u3341:
  3420  0029A0  EFD4  F014         	goto	l4330
  3421  0029A4                     u3340:
  3422  0029A4                     
  3423                           ; BSR set to: 0
  3424  0029A4  0E01               	movlw	1
  3425  0029A6  6E06               	movwf	_horaRegar$806^0,c
  3426  0029A8                     l4330:
  3427                           
  3428                           ; BSR set to: 0
  3429  0029A8  C006  F001         	movff	_horaRegar$806,?_horaRegar
  3430  0029AC  6A02               	clrf	(?_horaRegar+1)^0,c
  3431  0029AE                     
  3432                           ; BSR set to: 0
  3433  0029AE  0012               	return		;funcret
  3434  0029B0                     __end_of_horaRegar:
  3435                           	opt callstack 0
  3436                           
  3437 ;; *************** function _encenderBombas *****************
  3438 ;; Defined at:
  3439 ;;		line 311 in file "main.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;		None
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;  i               2   17[COMRAM] int 
  3444 ;;  flagSeco        1   16[COMRAM] unsigned char 
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3454 ;;      Params:         0       0       0       0       0       0       0       0       0
  3455 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3456 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3457 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3458 ;;Total ram usage:        5 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; Hardware stack levels required when called:    5
  3461 ;; This function calls:
  3462 ;;		_estaSeco
  3463 ;; This function is called by:
  3464 ;;		_sistemaRegado
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text3
  3469  000B66                     __ptext3:
  3470                           	opt callstack 0
  3471  000B66                     _encenderBombas:
  3472                           	opt callstack 24
  3473  000B66                     
  3474                           ;main.c: 313:     char flagSeco = 0;
  3475  000B66  0E00               	movlw	0
  3476  000B68  6E11               	movwf	encenderBombas@flagSeco^0,c
  3477                           
  3478                           ;main.c: 315:     for (int i = 0; i < 1; i++) {
  3479  000B6A  0E00               	movlw	0
  3480  000B6C  6E13               	movwf	(encenderBombas@i+1)^0,c
  3481  000B6E  0E00               	movlw	0
  3482  000B70  6E12               	movwf	encenderBombas@i^0,c
  3483  000B72  EF95  F006         	goto	l4444
  3484  000B76                     l4394:
  3485                           
  3486                           ;main.c: 320:                 if (estaSeco(sensores[i])) {
  3487  000B76  90D8               	bcf	status,0,c
  3488  000B78  3412               	rlcf	encenderBombas@i^0,w,c
  3489  000B7A  6ED9               	movwf	fsr2l,c
  3490  000B7C  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3491  000B7E  6EDA               	movwf	fsr2h,c
  3492  000B80  0E60               	movlw	low _sensores
  3493  000B82  26D9               	addwf	fsr2l,f,c
  3494  000B84  0E00               	movlw	high _sensores
  3495  000B86  22DA               	addwfc	fsr2h,f,c
  3496  000B88  CFDE F00C          	movff	postinc2,estaSeco@s
  3497  000B8C  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3498  000B90  EC89  F018         	call	_estaSeco	;wreg free
  3499  000B94  500C               	movf	?_estaSeco^0,w,c
  3500  000B96  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3501  000B98  B4D8               	btfsc	status,2,c
  3502  000B9A  EFD1  F005         	goto	u3391
  3503  000B9E  EFD3  F005         	goto	u3390
  3504  000BA2                     u3391:
  3505  000BA2  EFC3  F006         	goto	l4446
  3506  000BA6                     u3390:
  3507  000BA6                     
  3508                           ;main.c: 321:                     LATDbits.LATD0 = 1;
  3509  000BA6  808C               	bsf	140,0,c	;volatile
  3510  000BA8                     l4398:
  3511                           
  3512                           ;main.c: 322:                     flagSeco = 1;
  3513  000BA8  0E01               	movlw	1
  3514  000BAA  6E11               	movwf	encenderBombas@flagSeco^0,c
  3515  000BAC  EFC3  F006         	goto	l4446
  3516  000BB0                     l4400:
  3517                           
  3518                           ;main.c: 327:                 if (estaSeco(sensores[i])) {
  3519  000BB0  90D8               	bcf	status,0,c
  3520  000BB2  3412               	rlcf	encenderBombas@i^0,w,c
  3521  000BB4  6ED9               	movwf	fsr2l,c
  3522  000BB6  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3523  000BB8  6EDA               	movwf	fsr2h,c
  3524  000BBA  0E60               	movlw	low _sensores
  3525  000BBC  26D9               	addwf	fsr2l,f,c
  3526  000BBE  0E00               	movlw	high _sensores
  3527  000BC0  22DA               	addwfc	fsr2h,f,c
  3528  000BC2  CFDE F00C          	movff	postinc2,estaSeco@s
  3529  000BC6  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3530  000BCA  EC89  F018         	call	_estaSeco	;wreg free
  3531  000BCE  500C               	movf	?_estaSeco^0,w,c
  3532  000BD0  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3533  000BD2  B4D8               	btfsc	status,2,c
  3534  000BD4  EFEE  F005         	goto	u3401
  3535  000BD8  EFF0  F005         	goto	u3400
  3536  000BDC                     u3401:
  3537  000BDC  EFC3  F006         	goto	l4446
  3538  000BE0                     u3400:
  3539  000BE0                     
  3540                           ;main.c: 328:                     LATDbits.LATD1 = 1;
  3541  000BE0  828C               	bsf	140,1,c	;volatile
  3542  000BE2  EFD4  F005         	goto	l4398
  3543  000BE6                     l4406:
  3544                           
  3545                           ;main.c: 334:                 if (estaSeco(sensores[i])) {
  3546  000BE6  90D8               	bcf	status,0,c
  3547  000BE8  3412               	rlcf	encenderBombas@i^0,w,c
  3548  000BEA  6ED9               	movwf	fsr2l,c
  3549  000BEC  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3550  000BEE  6EDA               	movwf	fsr2h,c
  3551  000BF0  0E60               	movlw	low _sensores
  3552  000BF2  26D9               	addwf	fsr2l,f,c
  3553  000BF4  0E00               	movlw	high _sensores
  3554  000BF6  22DA               	addwfc	fsr2h,f,c
  3555  000BF8  CFDE F00C          	movff	postinc2,estaSeco@s
  3556  000BFC  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3557  000C00  EC89  F018         	call	_estaSeco	;wreg free
  3558  000C04  500C               	movf	?_estaSeco^0,w,c
  3559  000C06  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3560  000C08  B4D8               	btfsc	status,2,c
  3561  000C0A  EF09  F006         	goto	u3411
  3562  000C0E  EF0B  F006         	goto	u3410
  3563  000C12                     u3411:
  3564  000C12  EFC3  F006         	goto	l4446
  3565  000C16                     u3410:
  3566  000C16                     
  3567                           ;main.c: 335:                     LATDbits.LATD2 = 1;
  3568  000C16  848C               	bsf	140,2,c	;volatile
  3569  000C18  EFD4  F005         	goto	l4398
  3570  000C1C                     l4412:
  3571                           
  3572                           ;main.c: 341:                 if (estaSeco(sensores[i])) {
  3573  000C1C  90D8               	bcf	status,0,c
  3574  000C1E  3412               	rlcf	encenderBombas@i^0,w,c
  3575  000C20  6ED9               	movwf	fsr2l,c
  3576  000C22  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3577  000C24  6EDA               	movwf	fsr2h,c
  3578  000C26  0E60               	movlw	low _sensores
  3579  000C28  26D9               	addwf	fsr2l,f,c
  3580  000C2A  0E00               	movlw	high _sensores
  3581  000C2C  22DA               	addwfc	fsr2h,f,c
  3582  000C2E  CFDE F00C          	movff	postinc2,estaSeco@s
  3583  000C32  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3584  000C36  EC89  F018         	call	_estaSeco	;wreg free
  3585  000C3A  500C               	movf	?_estaSeco^0,w,c
  3586  000C3C  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3587  000C3E  B4D8               	btfsc	status,2,c
  3588  000C40  EF24  F006         	goto	u3421
  3589  000C44  EF26  F006         	goto	u3420
  3590  000C48                     u3421:
  3591  000C48  EFC3  F006         	goto	l4446
  3592  000C4C                     u3420:
  3593  000C4C                     
  3594                           ;main.c: 342:                     LATDbits.LATD3 = 1;
  3595  000C4C  868C               	bsf	140,3,c	;volatile
  3596  000C4E  EFD4  F005         	goto	l4398
  3597  000C52                     l4418:
  3598                           
  3599                           ;main.c: 348:                 if (estaSeco(sensores[i])) {
  3600  000C52  90D8               	bcf	status,0,c
  3601  000C54  3412               	rlcf	encenderBombas@i^0,w,c
  3602  000C56  6ED9               	movwf	fsr2l,c
  3603  000C58  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3604  000C5A  6EDA               	movwf	fsr2h,c
  3605  000C5C  0E60               	movlw	low _sensores
  3606  000C5E  26D9               	addwf	fsr2l,f,c
  3607  000C60  0E00               	movlw	high _sensores
  3608  000C62  22DA               	addwfc	fsr2h,f,c
  3609  000C64  CFDE F00C          	movff	postinc2,estaSeco@s
  3610  000C68  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3611  000C6C  EC89  F018         	call	_estaSeco	;wreg free
  3612  000C70  500C               	movf	?_estaSeco^0,w,c
  3613  000C72  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3614  000C74  B4D8               	btfsc	status,2,c
  3615  000C76  EF3F  F006         	goto	u3431
  3616  000C7A  EF41  F006         	goto	u3430
  3617  000C7E                     u3431:
  3618  000C7E  EFC3  F006         	goto	l4446
  3619  000C82                     u3430:
  3620  000C82                     
  3621                           ;main.c: 349:                     LATDbits.LATD4 = 1;
  3622  000C82  888C               	bsf	140,4,c	;volatile
  3623  000C84  EFD4  F005         	goto	l4398
  3624  000C88                     l4424:
  3625                           
  3626                           ;main.c: 355:                 if (estaSeco(sensores[i])) {
  3627  000C88  90D8               	bcf	status,0,c
  3628  000C8A  3412               	rlcf	encenderBombas@i^0,w,c
  3629  000C8C  6ED9               	movwf	fsr2l,c
  3630  000C8E  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3631  000C90  6EDA               	movwf	fsr2h,c
  3632  000C92  0E60               	movlw	low _sensores
  3633  000C94  26D9               	addwf	fsr2l,f,c
  3634  000C96  0E00               	movlw	high _sensores
  3635  000C98  22DA               	addwfc	fsr2h,f,c
  3636  000C9A  CFDE F00C          	movff	postinc2,estaSeco@s
  3637  000C9E  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3638  000CA2  EC89  F018         	call	_estaSeco	;wreg free
  3639  000CA6  500C               	movf	?_estaSeco^0,w,c
  3640  000CA8  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3641  000CAA  B4D8               	btfsc	status,2,c
  3642  000CAC  EF5A  F006         	goto	u3441
  3643  000CB0  EF5C  F006         	goto	u3440
  3644  000CB4                     u3441:
  3645  000CB4  EFC3  F006         	goto	l4446
  3646  000CB8                     u3440:
  3647  000CB8                     
  3648                           ;main.c: 356:                     LATDbits.LATD5 = 1;
  3649  000CB8  8A8C               	bsf	140,5,c	;volatile
  3650  000CBA  EFD4  F005         	goto	l4398
  3651  000CBE                     l4430:
  3652                           
  3653                           ;main.c: 362:                 if (estaSeco(sensores[i])) {
  3654  000CBE  90D8               	bcf	status,0,c
  3655  000CC0  3412               	rlcf	encenderBombas@i^0,w,c
  3656  000CC2  6ED9               	movwf	fsr2l,c
  3657  000CC4  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3658  000CC6  6EDA               	movwf	fsr2h,c
  3659  000CC8  0E60               	movlw	low _sensores
  3660  000CCA  26D9               	addwf	fsr2l,f,c
  3661  000CCC  0E00               	movlw	high _sensores
  3662  000CCE  22DA               	addwfc	fsr2h,f,c
  3663  000CD0  CFDE F00C          	movff	postinc2,estaSeco@s
  3664  000CD4  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3665  000CD8  EC89  F018         	call	_estaSeco	;wreg free
  3666  000CDC  500C               	movf	?_estaSeco^0,w,c
  3667  000CDE  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3668  000CE0  B4D8               	btfsc	status,2,c
  3669  000CE2  EF75  F006         	goto	u3451
  3670  000CE6  EF77  F006         	goto	u3450
  3671  000CEA                     u3451:
  3672  000CEA  EFC3  F006         	goto	l4446
  3673  000CEE                     u3450:
  3674  000CEE                     
  3675                           ;main.c: 363:                     LATDbits.LATD6 = 1;
  3676  000CEE  8C8C               	bsf	140,6,c	;volatile
  3677  000CF0  EFD4  F005         	goto	l4398
  3678  000CF4                     l4436:
  3679                           
  3680                           ;main.c: 369:                 if (estaSeco(sensores[i])) {
  3681  000CF4  90D8               	bcf	status,0,c
  3682  000CF6  3412               	rlcf	encenderBombas@i^0,w,c
  3683  000CF8  6ED9               	movwf	fsr2l,c
  3684  000CFA  3413               	rlcf	(encenderBombas@i+1)^0,w,c
  3685  000CFC  6EDA               	movwf	fsr2h,c
  3686  000CFE  0E60               	movlw	low _sensores
  3687  000D00  26D9               	addwf	fsr2l,f,c
  3688  000D02  0E00               	movlw	high _sensores
  3689  000D04  22DA               	addwfc	fsr2h,f,c
  3690  000D06  CFDE F00C          	movff	postinc2,estaSeco@s
  3691  000D0A  CFDD F00D          	movff	postdec2,estaSeco@s+1
  3692  000D0E  EC89  F018         	call	_estaSeco	;wreg free
  3693  000D12  500C               	movf	?_estaSeco^0,w,c
  3694  000D14  100D               	iorwf	(?_estaSeco+1)^0,w,c
  3695  000D16  B4D8               	btfsc	status,2,c
  3696  000D18  EF90  F006         	goto	u3461
  3697  000D1C  EF92  F006         	goto	u3460
  3698  000D20                     u3461:
  3699  000D20  EFC3  F006         	goto	l4446
  3700  000D24                     u3460:
  3701  000D24                     
  3702                           ;main.c: 370:                     LATDbits.LATD7 = 1;
  3703  000D24  8E8C               	bsf	140,7,c	;volatile
  3704  000D26  EFD4  F005         	goto	l4398
  3705  000D2A                     l4444:
  3706  000D2A  C012  F00F         	movff	encenderBombas@i,??_encenderBombas
  3707  000D2E  C013  F010         	movff	encenderBombas@i+1,??_encenderBombas+1
  3708                           
  3709                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3710                           ; Switch size 1, requested type "simple"
  3711                           ; Number of cases is 1, Range of values is 0 to 0
  3712                           ; switch strategies available:
  3713                           ; Name         Instructions Cycles
  3714                           ; simple_byte            4     3 (average)
  3715                           ;	Chosen strategy is simple_byte
  3716  000D32  5010               	movf	(??_encenderBombas+1)^0,w,c
  3717  000D34  0A00               	xorlw	0	; case 0
  3718  000D36  B4D8               	btfsc	status,2,c
  3719  000D38  EFA0  F006         	goto	l5164
  3720  000D3C  EFC3  F006         	goto	l4446
  3721  000D40                     l5164:
  3722                           
  3723                           ; Switch size 1, requested type "simple"
  3724                           ; Number of cases is 8, Range of values is 0 to 7
  3725                           ; switch strategies available:
  3726                           ; Name         Instructions Cycles
  3727                           ; simple_byte           25    13 (average)
  3728                           ;	Chosen strategy is simple_byte
  3729  000D40  500F               	movf	??_encenderBombas^0,w,c
  3730  000D42  0A00               	xorlw	0	; case 0
  3731  000D44  B4D8               	btfsc	status,2,c
  3732  000D46  EFBB  F005         	goto	l4394
  3733  000D4A  0A01               	xorlw	1	; case 1
  3734  000D4C  B4D8               	btfsc	status,2,c
  3735  000D4E  EFD8  F005         	goto	l4400
  3736  000D52  0A03               	xorlw	3	; case 2
  3737  000D54  B4D8               	btfsc	status,2,c
  3738  000D56  EFF3  F005         	goto	l4406
  3739  000D5A  0A01               	xorlw	1	; case 3
  3740  000D5C  B4D8               	btfsc	status,2,c
  3741  000D5E  EF0E  F006         	goto	l4412
  3742  000D62  0A07               	xorlw	7	; case 4
  3743  000D64  B4D8               	btfsc	status,2,c
  3744  000D66  EF29  F006         	goto	l4418
  3745  000D6A  0A01               	xorlw	1	; case 5
  3746  000D6C  B4D8               	btfsc	status,2,c
  3747  000D6E  EF44  F006         	goto	l4424
  3748  000D72  0A03               	xorlw	3	; case 6
  3749  000D74  B4D8               	btfsc	status,2,c
  3750  000D76  EF5F  F006         	goto	l4430
  3751  000D7A  0A01               	xorlw	1	; case 7
  3752  000D7C  B4D8               	btfsc	status,2,c
  3753  000D7E  EF7A  F006         	goto	l4436
  3754  000D82  EFC3  F006         	goto	l4446
  3755  000D86                     l4446:
  3756                           
  3757                           ;main.c: 376:     }
  3758  000D86  4A12               	infsnz	encenderBombas@i^0,f,c
  3759  000D88  2A13               	incf	(encenderBombas@i+1)^0,f,c
  3760  000D8A  BE13               	btfsc	(encenderBombas@i+1)^0,7,c
  3761  000D8C  EFD0  F006         	goto	u3471
  3762  000D90  5013               	movf	(encenderBombas@i+1)^0,w,c
  3763  000D92  E108               	bnz	u3470
  3764  000D94  0412               	decf	encenderBombas@i^0,w,c
  3765  000D96  A0D8               	btfss	status,0,c
  3766  000D98  EFD0  F006         	goto	u3471
  3767  000D9C  EFD2  F006         	goto	u3470
  3768  000DA0                     u3471:
  3769  000DA0  EF95  F006         	goto	l4444
  3770  000DA4                     u3470:
  3771  000DA4                     
  3772                           ;main.c: 378:     if (flagSeco) {
  3773  000DA4  5011               	movf	encenderBombas@flagSeco^0,w,c
  3774  000DA6  B4D8               	btfsc	status,2,c
  3775  000DA8  EFD8  F006         	goto	u3481
  3776  000DAC  EFDA  F006         	goto	u3480
  3777  000DB0                     u3481:
  3778  000DB0  EFE7  F006         	goto	l308
  3779  000DB4                     u3480:
  3780  000DB4                     
  3781                           ;main.c: 379:         regando = 1;
  3782  000DB4  0E01               	movlw	1
  3783  000DB6  0100               	movlb	0	; () banked
  3784  000DB8  6F7B               	movwf	_regando& (0+255),b
  3785  000DBA                     
  3786                           ; BSR set to: 0
  3787                           ;main.c: 380:         horarios[hora].regado = 0;
  3788  000DBA  5187               	movf	_hora& (0+255),w,b
  3789  000DBC  0D0C               	mullw	12
  3790  000DBE  0E3C               	movlw	low (_horarios+10)
  3791  000DC0  24F3               	addwf	243,w,c
  3792  000DC2  6ED9               	movwf	fsr2l,c
  3793  000DC4  0E01               	movlw	high (_horarios+10)
  3794  000DC6  20F4               	addwfc	prodh,w,c
  3795  000DC8  6EDA               	movwf	fsr2h,c
  3796  000DCA  0E00               	movlw	0
  3797  000DCC  6EDF               	movwf	indf2,c
  3798  000DCE                     l308:
  3799  000DCE  0012               	return		;funcret
  3800  000DD0                     __end_of_encenderBombas:
  3801                           	opt callstack 0
  3802                           
  3803 ;; *************** function _estaSeco *****************
  3804 ;; Defined at:
  3805 ;;		line 149 in file "main.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;  s               2   11[COMRAM] struct .
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;		None
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  2   11[COMRAM] int 
  3812 ;; Registers used:
  3813 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3819 ;;      Params:         2       0       0       0       0       0       0       0       0
  3820 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3821 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3822 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3823 ;;Total ram usage:        3 bytes
  3824 ;; Hardware stack levels used:    1
  3825 ;; Hardware stack levels required when called:    4
  3826 ;; This function calls:
  3827 ;;		_dameTemperaturaHumedad
  3828 ;; This function is called by:
  3829 ;;		_encenderBombas
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           	psect	text4
  3834  003112                     __ptext4:
  3835                           	opt callstack 0
  3836  003112                     _estaSeco:
  3837                           	opt callstack 24
  3838  003112                     
  3839                           ;main.c: 151:     dameTemperaturaHumedad();
  3840  003112  EC09  F014         	call	_dameTemperaturaHumedad	;wreg free
  3841  003116                     
  3842                           ;main.c: 154:     return (s.porcientoHumedad < 94) && (Temperatura < 34);
  3843  003116  0E00               	movlw	0
  3844  003118  6E0E               	movwf	_estaSeco$799^0,c
  3845  00311A  0E5E               	movlw	94
  3846  00311C  600C               	cpfslt	estaSeco@s^0,c
  3847  00311E  EF93  F018         	goto	u3231
  3848  003122  EF95  F018         	goto	u3230
  3849  003126                     u3231:
  3850  003126  EFA0  F018         	goto	l4198
  3851  00312A                     u3230:
  3852  00312A  0E22               	movlw	34
  3853  00312C  0100               	movlb	0	; () banked
  3854  00312E  617F               	cpfslt	_Temperatura& (0+255),b
  3855  003130  EF9C  F018         	goto	u3241
  3856  003134  EF9E  F018         	goto	u3240
  3857  003138                     u3241:
  3858  003138  EFA0  F018         	goto	l4198
  3859  00313C                     u3240:
  3860  00313C                     
  3861                           ; BSR set to: 0
  3862  00313C  0E01               	movlw	1
  3863  00313E  6E0E               	movwf	_estaSeco$799^0,c
  3864  003140                     l4198:
  3865  003140  C00E  F00C         	movff	_estaSeco$799,?_estaSeco
  3866  003144  6A0D               	clrf	(?_estaSeco+1)^0,c
  3867  003146  0012               	return		;funcret
  3868  003148                     __end_of_estaSeco:
  3869                           	opt callstack 0
  3870                           
  3871 ;; *************** function _dameHoraActual *****************
  3872 ;; Defined at:
  3873 ;;		line 182 in file "main.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;		None
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;		None
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  1    wreg      void 
  3880 ;; Registers used:
  3881 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3887 ;;      Params:         0       0       0       0       0       0       0       0       0
  3888 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3889 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3890 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3891 ;;Total ram usage:        0 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; Hardware stack levels required when called:    4
  3894 ;; This function calls:
  3895 ;;		_convertirDato
  3896 ;;		_leer_rtc
  3897 ;; This function is called by:
  3898 ;;		_sistemaRegado
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           	psect	text5
  3903  0031DE                     __ptext5:
  3904                           	opt callstack 0
  3905  0031DE                     _dameHoraActual:
  3906                           	opt callstack 25
  3907  0031DE                     
  3908                           ;main.c: 184:     segundos = convertirDato(leer_rtc(0x00));
  3909  0031DE  0E00               	movlw	0
  3910  0031E0  EC05  F019         	call	_leer_rtc
  3911  0031E4  EC40  F019         	call	_convertirDato
  3912  0031E8  0100               	movlb	0	; () banked
  3913  0031EA  6F85               	movwf	_segundos& (0+255),b
  3914                           
  3915                           ;main.c: 185:     minutos = convertirDato(leer_rtc(0x01));
  3916  0031EC  0E01               	movlw	1
  3917  0031EE  EC05  F019         	call	_leer_rtc
  3918  0031F2  EC40  F019         	call	_convertirDato
  3919  0031F6  0100               	movlb	0	; () banked
  3920  0031F8  6F86               	movwf	_minutos& (0+255),b
  3921                           
  3922                           ;main.c: 186:     hora = convertirDato(leer_rtc(0x02));
  3923  0031FA  0E02               	movlw	2
  3924  0031FC  EC05  F019         	call	_leer_rtc
  3925  003200  EC40  F019         	call	_convertirDato
  3926  003204  0100               	movlb	0	; () banked
  3927  003206  6F87               	movwf	_hora& (0+255),b
  3928  003208                     
  3929                           ; BSR set to: 0
  3930  003208  0012               	return		;funcret
  3931  00320A                     __end_of_dameHoraActual:
  3932                           	opt callstack 0
  3933                           
  3934 ;; *************** function _dameDiaActual *****************
  3935 ;; Defined at:
  3936 ;;		line 189 in file "main.c"
  3937 ;; Parameters:    Size  Location     Type
  3938 ;;		None
  3939 ;; Auto vars:     Size  Location     Type
  3940 ;;		None
  3941 ;; Return value:  Size  Location     Type
  3942 ;;                  1    wreg      void 
  3943 ;; Registers used:
  3944 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3945 ;; Tracked objects:
  3946 ;;		On entry : 0/0
  3947 ;;		On exit  : 0/0
  3948 ;;		Unchanged: 0/0
  3949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3950 ;;      Params:         0       0       0       0       0       0       0       0       0
  3951 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3952 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3953 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3954 ;;Total ram usage:        0 bytes
  3955 ;; Hardware stack levels used:    1
  3956 ;; Hardware stack levels required when called:    4
  3957 ;; This function calls:
  3958 ;;		_convertirDato
  3959 ;;		_leer_rtc
  3960 ;; This function is called by:
  3961 ;;		_sistemaRegado
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965                           	psect	text6
  3966  003324                     __ptext6:
  3967                           	opt callstack 0
  3968  003324                     _dameDiaActual:
  3969                           	opt callstack 25
  3970  003324                     
  3971                           ;main.c: 191:     diaActual = convertirDato(leer_rtc(0x03));
  3972  003324  0E03               	movlw	3
  3973  003326  EC05  F019         	call	_leer_rtc
  3974  00332A  EC40  F019         	call	_convertirDato
  3975  00332E  0100               	movlb	0	; () banked
  3976  003330  6F84               	movwf	_diaActual& (0+255),b
  3977  003332                     
  3978                           ; BSR set to: 0
  3979  003332  0012               	return		;funcret
  3980  003334                     __end_of_dameDiaActual:
  3981                           	opt callstack 0
  3982                           
  3983 ;; *************** function _leer_rtc *****************
  3984 ;; Defined at:
  3985 ;;		line 13 in file "./RTC.h"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;  direccion       1    wreg     unsigned char 
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;  direccion       1    2[COMRAM] unsigned char 
  3990 ;;  dato            1    3[COMRAM] unsigned char 
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1    wreg      unsigned char 
  3993 ;; Registers used:
  3994 ;;		wreg, status,2, status,0, cstack
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4000 ;;      Params:         0       0       0       0       0       0       0       0       0
  4001 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4003 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4004 ;;Total ram usage:        2 bytes
  4005 ;; Hardware stack levels used:    1
  4006 ;; Hardware stack levels required when called:    3
  4007 ;; This function calls:
  4008 ;;		_i2c_detener
  4009 ;;		_i2c_envia_dato
  4010 ;;		_i2c_inicia_com
  4011 ;;		_i2c_recibe_dato
  4012 ;;		_i2c_reinicia_com
  4013 ;; This function is called by:
  4014 ;;		_dameHoraActual
  4015 ;;		_dameDiaActual
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           	psect	text7
  4020  00320A                     __ptext7:
  4021                           	opt callstack 0
  4022  00320A                     _leer_rtc:
  4023                           	opt callstack 25
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;incstack = 0
  4027                           ;leer_rtc@direccion stored from wreg
  4028  00320A  6E03               	movwf	leer_rtc@direccion^0,c
  4029  00320C                     
  4030                           ;./RTC.h: 14:     unsigned char dato;;./RTC.h: 15:     i2c_inicia_com();
  4031  00320C  ECB4  F019         	call	_i2c_inicia_com	;wreg free
  4032                           
  4033                           ;./RTC.h: 16:     i2c_envia_dato(0xD0);
  4034  003210  0ED0               	movlw	208
  4035  003212  EC9A  F019         	call	_i2c_envia_dato
  4036                           
  4037                           ;./RTC.h: 17:     i2c_envia_dato(direccion);
  4038  003216  5003               	movf	leer_rtc@direccion^0,w,c
  4039  003218  EC9A  F019         	call	_i2c_envia_dato
  4040                           
  4041                           ;./RTC.h: 18:     i2c_reinicia_com();
  4042  00321C  ECB0  F019         	call	_i2c_reinicia_com	;wreg free
  4043                           
  4044                           ;./RTC.h: 19:     i2c_envia_dato(0xD1);
  4045  003220  0ED1               	movlw	209
  4046  003222  EC9A  F019         	call	_i2c_envia_dato
  4047                           
  4048                           ;./RTC.h: 20:     dato = i2c_recibe_dato();
  4049  003226  EC6F  F019         	call	_i2c_recibe_dato	;wreg free
  4050  00322A  6E04               	movwf	leer_rtc@dato^0,c
  4051                           
  4052                           ;./RTC.h: 21:     i2c_detener();
  4053  00322C  ECB8  F019         	call	_i2c_detener	;wreg free
  4054  003230                     
  4055                           ;./RTC.h: 22:     return dato;
  4056  003230  5004               	movf	leer_rtc@dato^0,w,c
  4057  003232  0012               	return		;funcret
  4058  003234                     __end_of_leer_rtc:
  4059                           	opt callstack 0
  4060                           
  4061 ;; *************** function _convertirDato *****************
  4062 ;; Defined at:
  4063 ;;		line 28 in file "./RTC.h"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  dato            1    wreg     unsigned char 
  4066 ;; Auto vars:     Size  Location     Type
  4067 ;;  dato            1    1[COMRAM] unsigned char 
  4068 ;;  datoR           1    2[COMRAM] unsigned char 
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  1    wreg      unsigned char 
  4071 ;; Registers used:
  4072 ;;		wreg, status,2, status,0, prodl, prodh
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4078 ;;      Params:         0       0       0       0       0       0       0       0       0
  4079 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4080 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4081 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4082 ;;Total ram usage:        3 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; Hardware stack levels required when called:    1
  4085 ;; This function calls:
  4086 ;;		Nothing
  4087 ;; This function is called by:
  4088 ;;		_dameHoraActual
  4089 ;;		_dameDiaActual
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           	psect	text8
  4094  003280                     __ptext8:
  4095                           	opt callstack 0
  4096  003280                     _convertirDato:
  4097                           	opt callstack 27
  4098                           
  4099                           ;incstack = 0
  4100                           ;convertirDato@dato stored from wreg
  4101  003280  6E02               	movwf	convertirDato@dato^0,c
  4102  003282                     
  4103                           ;./RTC.h: 30:     datoR = (dato & 0xF0) >> 4;
  4104  003282  3802               	swapf	convertirDato@dato^0,w,c
  4105  003284  0B0F               	andlw	15
  4106  003286  0B0F               	andlw	15
  4107  003288  6E03               	movwf	convertirDato@datoR^0,c
  4108  00328A                     
  4109                           ;./RTC.h: 31:     datoR = (datoR * 10) + (dato & 0x0F);
  4110  00328A  C002  F001         	movff	convertirDato@dato,??_convertirDato
  4111  00328E  0E0F               	movlw	15
  4112  003290  1601               	andwf	??_convertirDato^0,f,c
  4113  003292  5003               	movf	convertirDato@datoR^0,w,c
  4114  003294  0D0A               	mullw	10
  4115  003296  50F3               	movf	243,w,c
  4116  003298  2401               	addwf	??_convertirDato^0,w,c
  4117  00329A  6E03               	movwf	convertirDato@datoR^0,c
  4118  00329C                     
  4119                           ;./RTC.h: 32:     return datoR;
  4120  00329C  5003               	movf	convertirDato@datoR^0,w,c
  4121  00329E  0012               	return		;funcret
  4122  0032A0                     __end_of_convertirDato:
  4123                           	opt callstack 0
  4124                           
  4125 ;; *************** function _sistemaPrincipal *****************
  4126 ;; Defined at:
  4127 ;;		line 587 in file "main.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;  opcion          1    wreg     unsigned char 
  4130 ;; Auto vars:     Size  Location     Type
  4131 ;;  opcion          1   70[BANK0 ] unsigned char 
  4132 ;; Return value:  Size  Location     Type
  4133 ;;                  1    wreg      void 
  4134 ;; Registers used:
  4135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4136 ;; Tracked objects:
  4137 ;;		On entry : 0/0
  4138 ;;		On exit  : 0/0
  4139 ;;		Unchanged: 0/0
  4140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4141 ;;      Params:         0       0       0       0       0       0       0       0       0
  4142 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4143 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4144 ;;      Totals:         0       3       0       0       0       0       0       0       0
  4145 ;;Total ram usage:        3 bytes
  4146 ;; Hardware stack levels used:    1
  4147 ;; Hardware stack levels required when called:   11
  4148 ;; This function calls:
  4149 ;;		_UART_printf
  4150 ;;		_asignarHorarios
  4151 ;;		_dameDatosSistema
  4152 ;;		_fijaDiaRtc
  4153 ;;		_fijaHoraRtc
  4154 ;;		_leeHorariosMemoria
  4155 ;;		_mostrarDatosSensores
  4156 ;;		_mostrarDatosSensoresWIFI
  4157 ;;		_mostrarMenu
  4158 ;;		_regadoRapido
  4159 ;;		_setTiempoRegar
  4160 ;; This function is called by:
  4161 ;;		_main
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           	psect	text9
  4166  00225A                     __ptext9:
  4167                           	opt callstack 0
  4168  00225A                     _sistemaPrincipal:
  4169                           	opt callstack 19
  4170                           
  4171                           ;incstack = 0
  4172                           ;sistemaPrincipal@opcion stored from wreg
  4173  00225A  0100               	movlb	0	; () banked
  4174  00225C  6FF3               	movwf	sistemaPrincipal@opcion& (0+255),b
  4175  00225E                     
  4176                           ;main.c: 589:     PIE1bits.RCIE = 0;
  4177  00225E  9A9D               	bcf	157,5,c	;volatile
  4178                           
  4179                           ;main.c: 591:     switch (opcion) {
  4180  002260  EF66  F011         	goto	l4806
  4181  002264                     l4782:
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;main.c: 594:             fijaHoraRtc();
  4185  002264  ECBA  F015         	call	_fijaHoraRtc	;wreg free
  4186                           
  4187                           ;main.c: 595:             break;
  4188  002268  EF94  F011         	goto	l4808
  4189  00226C                     l4784:
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;main.c: 598:             asignarHorarios();
  4193  00226C  ECFA  F007         	call	_asignarHorarios	;wreg free
  4194                           
  4195                           ;main.c: 599:             break;
  4196  002270  EF94  F011         	goto	l4808
  4197  002274                     l4786:
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;main.c: 602:             setTiempoRegar();
  4201  002274  EC6F  F013         	call	_setTiempoRegar	;wreg free
  4202                           
  4203                           ;main.c: 603:             break;
  4204  002278  EF94  F011         	goto	l4808
  4205  00227C                     l4788:
  4206                           
  4207                           ; BSR set to: 0
  4208                           ;main.c: 606:             dameDatosSistema();
  4209  00227C  ECCA  F002         	call	_dameDatosSistema	;wreg free
  4210                           
  4211                           ;main.c: 607:             break;
  4212  002280  EF94  F011         	goto	l4808
  4213  002284                     l4790:
  4214                           
  4215                           ; BSR set to: 0
  4216                           ;main.c: 610:             if (MODO_COMUNICACION)
  4217  002284  5188               	movf	_MODO_COMUNICACION& (0+255),w,b
  4218  002286  B4D8               	btfsc	status,2,c
  4219  002288  EF48  F011         	goto	u3691
  4220  00228C  EF4A  F011         	goto	u3690
  4221  002290                     u3691:
  4222  002290  EF4E  F011         	goto	l4794
  4223  002294                     u3690:
  4224  002294                     
  4225                           ; BSR set to: 0
  4226                           ;main.c: 611:                 mostrarDatosSensoresWIFI();
  4227  002294  EC45  F010         	call	_mostrarDatosSensoresWIFI	;wreg free
  4228  002298  EF94  F011         	goto	l4808
  4229  00229C                     l4794:
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;main.c: 613:                 mostrarDatosSensores();
  4233  00229C  ECBD  F010         	call	_mostrarDatosSensores	;wreg free
  4234  0022A0  EF94  F011         	goto	l4808
  4235  0022A4                     l4796:
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;main.c: 618:             regadoRapido();
  4239  0022A4  ECAB  F00E         	call	_regadoRapido	;wreg free
  4240                           
  4241                           ;main.c: 619:             break;
  4242  0022A8  EF94  F011         	goto	l4808
  4243  0022AC                     l4798:
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;main.c: 622:             fijaDiaRtc();
  4247  0022AC  ECBF  F018         	call	_fijaDiaRtc	;wreg free
  4248                           
  4249                           ;main.c: 623:             break;
  4250  0022B0  EF94  F011         	goto	l4808
  4251  0022B4                     l4800:
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;main.c: 626:             leeHorariosMemoria();
  4255  0022B4  EC26  F00B         	call	_leeHorariosMemoria	;wreg free
  4256                           
  4257                           ;main.c: 627:             break;
  4258  0022B8  EF94  F011         	goto	l4808
  4259  0022BC                     l4802:
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;main.c: 630:             UART_printf("\r\n Solo se permiten numeros del 1 al 8 \r\n");
  4263  0022BC  0E3A               	movlw	low STR_35
  4264  0022BE  6E02               	movwf	UART_printf@cadena^0,c
  4265  0022C0  0E7B               	movlw	high STR_35
  4266  0022C2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4267  0022C4  EC50  F016         	call	_UART_printf	;wreg free
  4268                           
  4269                           ;main.c: 631:             break;
  4270  0022C8  EF94  F011         	goto	l4808
  4271  0022CC                     l4806:
  4272  0022CC  0100               	movlb	0	; () banked
  4273  0022CE  51F3               	movf	sistemaPrincipal@opcion& (0+255),w,b
  4274  0022D0  6FF1               	movwf	??_sistemaPrincipal& (0+255),b
  4275  0022D2  6BF2               	clrf	(??_sistemaPrincipal+1)& (0+255),b
  4276                           
  4277                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4278                           ; Switch size 1, requested type "simple"
  4279                           ; Number of cases is 1, Range of values is 0 to 0
  4280                           ; switch strategies available:
  4281                           ; Name         Instructions Cycles
  4282                           ; simple_byte            4     3 (average)
  4283                           ;	Chosen strategy is simple_byte
  4284  0022D4  51F2               	movf	(??_sistemaPrincipal+1)& (0+255),w,b
  4285  0022D6  0A00               	xorlw	0	; case 0
  4286  0022D8  B4D8               	btfsc	status,2,c
  4287  0022DA  EF71  F011         	goto	l5166
  4288  0022DE  EF5E  F011         	goto	l4802
  4289  0022E2                     l5166:
  4290                           
  4291                           ; BSR set to: 0
  4292                           ; Switch size 1, requested type "simple"
  4293                           ; Number of cases is 8, Range of values is 1 to 8
  4294                           ; switch strategies available:
  4295                           ; Name         Instructions Cycles
  4296                           ; simple_byte           25    13 (average)
  4297                           ;	Chosen strategy is simple_byte
  4298  0022E2  51F1               	movf	??_sistemaPrincipal& (0+255),w,b
  4299  0022E4  0A01               	xorlw	1	; case 1
  4300  0022E6  B4D8               	btfsc	status,2,c
  4301  0022E8  EF32  F011         	goto	l4782
  4302  0022EC  0A03               	xorlw	3	; case 2
  4303  0022EE  B4D8               	btfsc	status,2,c
  4304  0022F0  EF36  F011         	goto	l4784
  4305  0022F4  0A01               	xorlw	1	; case 3
  4306  0022F6  B4D8               	btfsc	status,2,c
  4307  0022F8  EF3A  F011         	goto	l4786
  4308  0022FC  0A07               	xorlw	7	; case 4
  4309  0022FE  B4D8               	btfsc	status,2,c
  4310  002300  EF3E  F011         	goto	l4788
  4311  002304  0A01               	xorlw	1	; case 5
  4312  002306  B4D8               	btfsc	status,2,c
  4313  002308  EF42  F011         	goto	l4790
  4314  00230C  0A03               	xorlw	3	; case 6
  4315  00230E  B4D8               	btfsc	status,2,c
  4316  002310  EF52  F011         	goto	l4796
  4317  002314  0A01               	xorlw	1	; case 7
  4318  002316  B4D8               	btfsc	status,2,c
  4319  002318  EF56  F011         	goto	l4798
  4320  00231C  0A0F               	xorlw	15	; case 8
  4321  00231E  B4D8               	btfsc	status,2,c
  4322  002320  EF5A  F011         	goto	l4800
  4323  002324  EF5E  F011         	goto	l4802
  4324  002328                     l4808:
  4325                           
  4326                           ;main.c: 634:     mostrarMenu();
  4327  002328  EC53  F014         	call	_mostrarMenu	;wreg free
  4328  00232C                     
  4329                           ;main.c: 635:     PIE1bits.RCIE = 1;
  4330  00232C  8A9D               	bsf	157,5,c	;volatile
  4331  00232E  0012               	return		;funcret
  4332  002330                     __end_of_sistemaPrincipal:
  4333                           	opt callstack 0
  4334                           
  4335 ;; *************** function _setTiempoRegar *****************
  4336 ;; Defined at:
  4337 ;;		line 466 in file "main.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;		None
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;  hora            1   19[COMRAM] unsigned char 
  4342 ;;  tiempoRegar     1   18[COMRAM] unsigned char 
  4343 ;; Return value:  Size  Location     Type
  4344 ;;                  1    wreg      void 
  4345 ;; Registers used:
  4346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4352 ;;      Params:         0       0       0       0       0       0       0       0       0
  4353 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4354 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4355 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4356 ;;Total ram usage:        2 bytes
  4357 ;; Hardware stack levels used:    1
  4358 ;; Hardware stack levels required when called:    5
  4359 ;; This function calls:
  4360 ;;		_UART_printf
  4361 ;;		_escribeHorariosMemoria
  4362 ;;		_getValue
  4363 ;; This function is called by:
  4364 ;;		_sistemaPrincipal
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           	psect	text10
  4369  0026DE                     __ptext10:
  4370                           	opt callstack 0
  4371  0026DE                     _setTiempoRegar:
  4372                           	opt callstack 24
  4373  0026DE                     
  4374                           ;main.c: 468:     unsigned char hora;;main.c: 469:     unsigned char tiempoRegar;;main.c
      +                          : 471:     UART_printf("\r\n TIEMPO DE REGADO \r\n");
  4375  0026DE  0E3A               	movlw	low STR_17
  4376  0026E0  6E02               	movwf	UART_printf@cadena^0,c
  4377  0026E2  0E7F               	movlw	high STR_17
  4378  0026E4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4379  0026E6  EC50  F016         	call	_UART_printf	;wreg free
  4380                           
  4381                           ;main.c: 473:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  4382  0026EA  0E4B               	movlw	low STR_10
  4383  0026EC  6E02               	movwf	UART_printf@cadena^0,c
  4384  0026EE  0E7A               	movlw	high STR_10
  4385  0026F0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4386  0026F2  EC50  F016         	call	_UART_printf	;wreg free
  4387  0026F6                     
  4388                           ;main.c: 474:     hora = getValue(2);
  4389  0026F6  0E00               	movlw	0
  4390  0026F8  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4391  0026FA  0E02               	movlw	2
  4392  0026FC  6E04               	movwf	getValue@numCharacters^0,c
  4393  0026FE  ECE8  F006         	call	_getValue	;wreg free
  4394  002702  6E14               	movwf	setTiempoRegar@hora^0,c
  4395  002704                     
  4396                           ;main.c: 476:     if (hora != '@') {
  4397  002704  0E40               	movlw	64
  4398  002706  1814               	xorwf	setTiempoRegar@hora^0,w,c
  4399  002708  B4D8               	btfsc	status,2,c
  4400  00270A  EF89  F013         	goto	u3561
  4401  00270E  EF8B  F013         	goto	u3560
  4402  002712                     u3561:
  4403  002712  EFBE  F013         	goto	l332
  4404  002716                     u3560:
  4405  002716                     
  4406                           ;main.c: 478:         UART_printf("\r\n Ingrese los minutos que desee que se riegue en e
      +                          se horario ej: 15 \r\n");
  4407  002716  0EDB               	movlw	low STR_19
  4408  002718  6E02               	movwf	UART_printf@cadena^0,c
  4409  00271A  0E78               	movlw	high STR_19
  4410  00271C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4411  00271E  EC50  F016         	call	_UART_printf	;wreg free
  4412  002722                     
  4413                           ;main.c: 479:         tiempoRegar = getValue(2);
  4414  002722  0E00               	movlw	0
  4415  002724  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4416  002726  0E02               	movlw	2
  4417  002728  6E04               	movwf	getValue@numCharacters^0,c
  4418  00272A  ECE8  F006         	call	_getValue	;wreg free
  4419  00272E  6E13               	movwf	setTiempoRegar@tiempoRegar^0,c
  4420  002730                     
  4421                           ;main.c: 481:         if (tiempoRegar != '@') {
  4422  002730  0E40               	movlw	64
  4423  002732  1813               	xorwf	setTiempoRegar@tiempoRegar^0,w,c
  4424  002734  B4D8               	btfsc	status,2,c
  4425  002736  EF9F  F013         	goto	u3571
  4426  00273A  EFA1  F013         	goto	u3570
  4427  00273E                     u3571:
  4428  00273E  EFBE  F013         	goto	l332
  4429  002742                     u3570:
  4430  002742                     
  4431                           ;main.c: 485:             UART_printf("\r\n Minutos de riego establecidos! \r\n");
  4432  002742  0EB0               	movlw	low STR_20
  4433  002744  6E02               	movwf	UART_printf@cadena^0,c
  4434  002746  0E7B               	movlw	high STR_20
  4435  002748  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4436  00274A  EC50  F016         	call	_UART_printf	;wreg free
  4437  00274E                     
  4438                           ;main.c: 487:             horarios[hora].tiempoRegar = tiempoRegar;
  4439  00274E  5014               	movf	setTiempoRegar@hora^0,w,c
  4440  002750  0D0C               	mullw	12
  4441  002752  0E3D               	movlw	low (_horarios+11)
  4442  002754  24F3               	addwf	243,w,c
  4443  002756  6ED9               	movwf	fsr2l,c
  4444  002758  0E01               	movlw	high (_horarios+11)
  4445  00275A  20F4               	addwfc	prodh,w,c
  4446  00275C  6EDA               	movwf	fsr2h,c
  4447  00275E  C013  FFDF         	movff	setTiempoRegar@tiempoRegar,indf2
  4448  002762                     
  4449                           ;main.c: 488:             minutosRegar = horarios[hora].tiempoRegar;
  4450  002762  5014               	movf	setTiempoRegar@hora^0,w,c
  4451  002764  0D0C               	mullw	12
  4452  002766  0E3D               	movlw	low (_horarios+11)
  4453  002768  24F3               	addwf	243,w,c
  4454  00276A  6ED9               	movwf	fsr2l,c
  4455  00276C  0E01               	movlw	high (_horarios+11)
  4456  00276E  20F4               	addwfc	prodh,w,c
  4457  002770  6EDA               	movwf	fsr2h,c
  4458  002772  50DF               	movf	indf2,w,c
  4459  002774  0100               	movlb	0	; () banked
  4460  002776  6F7D               	movwf	_minutosRegar& (0+255),b
  4461  002778                     
  4462                           ; BSR set to: 0
  4463                           ;main.c: 490:             escribeHorariosMemoria();
  4464  002778  EC00  F00E         	call	_escribeHorariosMemoria	;wreg free
  4465  00277C                     l332:
  4466  00277C  0012               	return		;funcret
  4467  00277E                     __end_of_setTiempoRegar:
  4468                           	opt callstack 0
  4469                           
  4470 ;; *************** function _regadoRapido *****************
  4471 ;; Defined at:
  4472 ;;		line 972 in file "main.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;		None
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;  areaRegar       1   17[COMRAM] unsigned char 
  4477 ;;  tiempoRegar     1   16[COMRAM] unsigned char 
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  1    wreg      void 
  4480 ;; Registers used:
  4481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4487 ;;      Params:         0       0       0       0       0       0       0       0       0
  4488 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4489 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4490 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4491 ;;Total ram usage:        4 bytes
  4492 ;; Hardware stack levels used:    1
  4493 ;; Hardware stack levels required when called:    4
  4494 ;; This function calls:
  4495 ;;		_UART_printf
  4496 ;;		_getValue
  4497 ;; This function is called by:
  4498 ;;		_sistemaPrincipal
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           	psect	text11
  4503  001D56                     __ptext11:
  4504                           	opt callstack 0
  4505  001D56                     _regadoRapido:
  4506                           	opt callstack 25
  4507  001D56                     
  4508                           ;main.c: 974:     unsigned char tiempoRegar;;main.c: 975:     unsigned char areaRegar;;m
      +                          ain.c: 977:     UART_printf("\r\n REGADO RAPIDO \r\n");
  4509  001D56  0E7F               	movlw	low STR_60
  4510  001D58  6E02               	movwf	UART_printf@cadena^0,c
  4511  001D5A  0E7F               	movlw	high STR_60
  4512  001D5C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4513  001D5E  EC50  F016         	call	_UART_printf	;wreg free
  4514  001D62                     
  4515                           ;main.c: 979:     if (!regando) {
  4516  001D62  0100               	movlb	0	; () banked
  4517  001D64  517B               	movf	_regando& (0+255),w,b
  4518  001D66  A4D8               	btfss	status,2,c
  4519  001D68  EFB8  F00E         	goto	u3631
  4520  001D6C  EFBA  F00E         	goto	u3630
  4521  001D70                     u3631:
  4522  001D70  EF3F  F00F         	goto	l4708
  4523  001D74                     u3630:
  4524  001D74                     
  4525                           ; BSR set to: 0
  4526                           ;main.c: 980:         UART_printf("\r\n Ingrese los minutos que desee que se riegue ej: 
      +                          15 \r\n");
  4527  001D74  0E12               	movlw	low STR_61
  4528  001D76  6E02               	movwf	UART_printf@cadena^0,c
  4529  001D78  0E7A               	movlw	high STR_61
  4530  001D7A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4531  001D7C  EC50  F016         	call	_UART_printf	;wreg free
  4532  001D80                     
  4533                           ;main.c: 981:         tiempoRegar = getValue(2);
  4534  001D80  0E00               	movlw	0
  4535  001D82  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4536  001D84  0E02               	movlw	2
  4537  001D86  6E04               	movwf	getValue@numCharacters^0,c
  4538  001D88  ECE8  F006         	call	_getValue	;wreg free
  4539  001D8C  6E11               	movwf	regadoRapido@tiempoRegar^0,c
  4540  001D8E                     
  4541                           ;main.c: 983:         if (tiempoRegar != '@') {
  4542  001D8E  0E40               	movlw	64
  4543  001D90  1811               	xorwf	regadoRapido@tiempoRegar^0,w,c
  4544  001D92  B4D8               	btfsc	status,2,c
  4545  001D94  EFCE  F00E         	goto	u3641
  4546  001D98  EFD0  F00E         	goto	u3640
  4547  001D9C                     u3641:
  4548  001D9C  EF45  F00F         	goto	l481
  4549  001DA0                     u3640:
  4550  001DA0                     
  4551                           ;main.c: 985:             UART_printf("\r\n Ingrese el numero de sensor del area a regar
      +                           ej: 5 \r\n");
  4552  001DA0  0ED9               	movlw	low STR_62
  4553  001DA2  6E02               	movwf	UART_printf@cadena^0,c
  4554  001DA4  0E79               	movlw	high STR_62
  4555  001DA6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4556  001DA8  EC50  F016         	call	_UART_printf	;wreg free
  4557  001DAC                     
  4558                           ;main.c: 986:             areaRegar = getValue(1);
  4559  001DAC  0E00               	movlw	0
  4560  001DAE  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4561  001DB0  0E01               	movlw	1
  4562  001DB2  6E04               	movwf	getValue@numCharacters^0,c
  4563  001DB4  ECE8  F006         	call	_getValue	;wreg free
  4564  001DB8  6E12               	movwf	regadoRapido@areaRegar^0,c
  4565  001DBA                     
  4566                           ;main.c: 988:             if (areaRegar != '@') {
  4567  001DBA  0E40               	movlw	64
  4568  001DBC  1812               	xorwf	regadoRapido@areaRegar^0,w,c
  4569  001DBE  B4D8               	btfsc	status,2,c
  4570  001DC0  EFE4  F00E         	goto	u3651
  4571  001DC4  EFE6  F00E         	goto	u3650
  4572  001DC8                     u3651:
  4573  001DC8  EF45  F00F         	goto	l481
  4574  001DCC                     u3650:
  4575  001DCC                     
  4576                           ;main.c: 990:                 areaRegar--;
  4577  001DCC  0612               	decf	regadoRapido@areaRegar^0,f,c
  4578                           
  4579                           ;main.c: 992:                 switch (areaRegar) {
  4580  001DCE  EF01  F00F         	goto	l4700
  4581  001DD2                     l471:
  4582                           
  4583                           ;main.c: 995:                         LATDbits.LATD0 = 1;
  4584  001DD2  808C               	bsf	140,0,c	;volatile
  4585                           
  4586                           ;main.c: 996:                         break;
  4587  001DD4  EF2E  F00F         	goto	l4702
  4588  001DD8                     l473:
  4589                           
  4590                           ;main.c: 999:                         LATDbits.LATD1 = 1;
  4591  001DD8  828C               	bsf	140,1,c	;volatile
  4592                           
  4593                           ;main.c: 1000:                         break;
  4594  001DDA  EF2E  F00F         	goto	l4702
  4595  001DDE                     l474:
  4596                           
  4597                           ;main.c: 1003:                         LATDbits.LATD2 = 1;
  4598  001DDE  848C               	bsf	140,2,c	;volatile
  4599                           
  4600                           ;main.c: 1004:                         break;
  4601  001DE0  EF2E  F00F         	goto	l4702
  4602  001DE4                     l475:
  4603                           
  4604                           ;main.c: 1007:                         LATDbits.LATD3 = 1;
  4605  001DE4  868C               	bsf	140,3,c	;volatile
  4606                           
  4607                           ;main.c: 1008:                         break;
  4608  001DE6  EF2E  F00F         	goto	l4702
  4609  001DEA                     l476:
  4610                           
  4611                           ;main.c: 1011:                         LATDbits.LATD4 = 1;
  4612  001DEA  888C               	bsf	140,4,c	;volatile
  4613                           
  4614                           ;main.c: 1012:                         break;
  4615  001DEC  EF2E  F00F         	goto	l4702
  4616  001DF0                     l477:
  4617                           
  4618                           ;main.c: 1015:                         LATDbits.LATD5 = 1;
  4619  001DF0  8A8C               	bsf	140,5,c	;volatile
  4620                           
  4621                           ;main.c: 1016:                         break;
  4622  001DF2  EF2E  F00F         	goto	l4702
  4623  001DF6                     l478:
  4624                           
  4625                           ;main.c: 1019:                         LATDbits.LATD6 = 1;
  4626  001DF6  8C8C               	bsf	140,6,c	;volatile
  4627                           
  4628                           ;main.c: 1020:                         break;
  4629  001DF8  EF2E  F00F         	goto	l4702
  4630  001DFC                     l479:
  4631                           
  4632                           ;main.c: 1023:                         LATDbits.LATD7 = 1;
  4633  001DFC  8E8C               	bsf	140,7,c	;volatile
  4634                           
  4635                           ;main.c: 1024:                         break;
  4636  001DFE  EF2E  F00F         	goto	l4702
  4637  001E02                     l4700:
  4638  001E02  5012               	movf	regadoRapido@areaRegar^0,w,c
  4639  001E04  6E0F               	movwf	??_regadoRapido^0,c
  4640  001E06  6A10               	clrf	(??_regadoRapido+1)^0,c
  4641                           
  4642                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4643                           ; Switch size 1, requested type "simple"
  4644                           ; Number of cases is 1, Range of values is 0 to 0
  4645                           ; switch strategies available:
  4646                           ; Name         Instructions Cycles
  4647                           ; simple_byte            4     3 (average)
  4648                           ;	Chosen strategy is simple_byte
  4649  001E08  5010               	movf	(??_regadoRapido+1)^0,w,c
  4650  001E0A  0A00               	xorlw	0	; case 0
  4651  001E0C  B4D8               	btfsc	status,2,c
  4652  001E0E  EF0B  F00F         	goto	l5168
  4653  001E12  EF2E  F00F         	goto	l4702
  4654  001E16                     l5168:
  4655                           
  4656                           ; Switch size 1, requested type "simple"
  4657                           ; Number of cases is 8, Range of values is 0 to 7
  4658                           ; switch strategies available:
  4659                           ; Name         Instructions Cycles
  4660                           ; simple_byte           25    13 (average)
  4661                           ;	Chosen strategy is simple_byte
  4662  001E16  500F               	movf	??_regadoRapido^0,w,c
  4663  001E18  0A00               	xorlw	0	; case 0
  4664  001E1A  B4D8               	btfsc	status,2,c
  4665  001E1C  EFE9  F00E         	goto	l471
  4666  001E20  0A01               	xorlw	1	; case 1
  4667  001E22  B4D8               	btfsc	status,2,c
  4668  001E24  EFEC  F00E         	goto	l473
  4669  001E28  0A03               	xorlw	3	; case 2
  4670  001E2A  B4D8               	btfsc	status,2,c
  4671  001E2C  EFEF  F00E         	goto	l474
  4672  001E30  0A01               	xorlw	1	; case 3
  4673  001E32  B4D8               	btfsc	status,2,c
  4674  001E34  EFF2  F00E         	goto	l475
  4675  001E38  0A07               	xorlw	7	; case 4
  4676  001E3A  B4D8               	btfsc	status,2,c
  4677  001E3C  EFF5  F00E         	goto	l476
  4678  001E40  0A01               	xorlw	1	; case 5
  4679  001E42  B4D8               	btfsc	status,2,c
  4680  001E44  EFF8  F00E         	goto	l477
  4681  001E48  0A03               	xorlw	3	; case 6
  4682  001E4A  B4D8               	btfsc	status,2,c
  4683  001E4C  EFFB  F00E         	goto	l478
  4684  001E50  0A01               	xorlw	1	; case 7
  4685  001E52  B4D8               	btfsc	status,2,c
  4686  001E54  EFFE  F00E         	goto	l479
  4687  001E58  EF2E  F00F         	goto	l4702
  4688  001E5C                     l4702:
  4689                           
  4690                           ;main.c: 1028:                 regando = 1;
  4691  001E5C  0E01               	movlw	1
  4692  001E5E  0100               	movlb	0	; () banked
  4693  001E60  6F7B               	movwf	_regando& (0+255),b
  4694  001E62                     
  4695                           ; BSR set to: 0
  4696                           ;main.c: 1029:                 horarios[hora].regado = 0;
  4697  001E62  5187               	movf	_hora& (0+255),w,b
  4698  001E64  0D0C               	mullw	12
  4699  001E66  0E3C               	movlw	low (_horarios+10)
  4700  001E68  24F3               	addwf	243,w,c
  4701  001E6A  6ED9               	movwf	fsr2l,c
  4702  001E6C  0E01               	movlw	high (_horarios+10)
  4703  001E6E  20F4               	addwfc	prodh,w,c
  4704  001E70  6EDA               	movwf	fsr2h,c
  4705  001E72  0E00               	movlw	0
  4706  001E74  6EDF               	movwf	indf2,c
  4707  001E76                     
  4708                           ; BSR set to: 0
  4709                           ;main.c: 1030:                 minutosRegar = tiempoRegar;
  4710  001E76  C011  F07D         	movff	regadoRapido@tiempoRegar,_minutosRegar
  4711  001E7A  EF45  F00F         	goto	l481
  4712  001E7E                     l4708:
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;main.c: 1037:         UART_printf("\r\n Ya se esta efectuando un riego, intentelo mas t
      +                          arde \r\n");
  4716  001E7E  0E9F               	movlw	low STR_63
  4717  001E80  6E02               	movwf	UART_printf@cadena^0,c
  4718  001E82  0E79               	movlw	high STR_63
  4719  001E84  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4720  001E86  EC50  F016         	call	_UART_printf	;wreg free
  4721  001E8A                     l481:
  4722  001E8A  0012               	return		;funcret
  4723  001E8C                     __end_of_regadoRapido:
  4724                           	opt callstack 0
  4725                           
  4726 ;; *************** function _mostrarMenu *****************
  4727 ;; Defined at:
  4728 ;;		line 572 in file "main.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;		None
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;		None
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      void 
  4735 ;; Registers used:
  4736 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4742 ;;      Params:         0       0       0       0       0       0       0       0       0
  4743 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4745 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4746 ;;Total ram usage:        0 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; Hardware stack levels required when called:    3
  4749 ;; This function calls:
  4750 ;;		_UART_printf
  4751 ;; This function is called by:
  4752 ;;		_sistemaPrincipal
  4753 ;;		_sistemaRegado
  4754 ;;		_main
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           	psect	text12
  4759  0028A6                     __ptext12:
  4760                           	opt callstack 0
  4761  0028A6                     _mostrarMenu:
  4762                           	opt callstack 26
  4763  0028A6                     
  4764                           ;main.c: 574:     UART_printf("\r\n Ingresa una opcion a Realizar: \r\n");
  4765  0028A6  0ED5               	movlw	low STR_24
  4766  0028A8  6E02               	movwf	UART_printf@cadena^0,c
  4767  0028AA  0E7B               	movlw	high STR_24
  4768  0028AC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4769  0028AE  EC50  F016         	call	_UART_printf	;wreg free
  4770                           
  4771                           ;main.c: 575:     UART_printf("\r\n 1. Fijar Hora Actual \r\n");
  4772  0028B2  0EF2               	movlw	low STR_25
  4773  0028B4  6E02               	movwf	UART_printf@cadena^0,c
  4774  0028B6  0E7D               	movlw	high STR_25
  4775  0028B8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4776  0028BA  EC50  F016         	call	_UART_printf	;wreg free
  4777                           
  4778                           ;main.c: 576:     UART_printf("\r\n 2. Asignar Horarios para regar \r\n");
  4779  0028BE  0E44               	movlw	low STR_26
  4780  0028C0  6E02               	movwf	UART_printf@cadena^0,c
  4781  0028C2  0E7C               	movlw	high STR_26
  4782  0028C4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4783  0028C6  EC50  F016         	call	_UART_printf	;wreg free
  4784                           
  4785                           ;main.c: 577:     UART_printf("\r\n 3. Programar tiempo de riego en un horario \r\n");
  4786  0028CA  0EB1               	movlw	low STR_27
  4787  0028CC  6E02               	movwf	UART_printf@cadena^0,c
  4788  0028CE  0E7A               	movlw	high STR_27
  4789  0028D0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4790  0028D2  EC50  F016         	call	_UART_printf	;wreg free
  4791                           
  4792                           ;main.c: 578:     UART_printf("\r\n 4. Dame datos del sistema \r\n");
  4793  0028D6  0E5A               	movlw	low STR_28
  4794  0028D8  6E02               	movwf	UART_printf@cadena^0,c
  4795  0028DA  0E7D               	movlw	high STR_28
  4796  0028DC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4797  0028DE  EC50  F016         	call	_UART_printf	;wreg free
  4798                           
  4799                           ;main.c: 579:     UART_printf("\r\n 5. Mostrar valores sensores \r\n");
  4800  0028E2  0ED5               	movlw	low STR_29
  4801  0028E4  6E02               	movwf	UART_printf@cadena^0,c
  4802  0028E6  0E7C               	movlw	high STR_29
  4803  0028E8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4804  0028EA  EC50  F016         	call	_UART_printf	;wreg free
  4805                           
  4806                           ;main.c: 580:     UART_printf("\r\n 6. Regado rapido \r\n");
  4807  0028EE  0E51               	movlw	low STR_30
  4808  0028F0  6E02               	movwf	UART_printf@cadena^0,c
  4809  0028F2  0E7F               	movlw	high STR_30
  4810  0028F4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4811  0028F6  EC50  F016         	call	_UART_printf	;wreg free
  4812                           
  4813                           ;main.c: 581:     UART_printf("\r\n 7. Fijar Dia Actual \r\n");
  4814  0028FA  0E42               	movlw	low STR_31
  4815  0028FC  6E02               	movwf	UART_printf@cadena^0,c
  4816  0028FE  0E7E               	movlw	high STR_31
  4817  002900  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4818  002902  EC50  F016         	call	_UART_printf	;wreg free
  4819                           
  4820                           ;main.c: 582:     UART_printf("\r\n 8. Cargar datos de la memoria \r\n");
  4821  002906  0E8D               	movlw	low STR_32
  4822  002908  6E02               	movwf	UART_printf@cadena^0,c
  4823  00290A  0E7C               	movlw	high STR_32
  4824  00290C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4825  00290E  EC50  F016         	call	_UART_printf	;wreg free
  4826                           
  4827                           ;main.c: 583:     UART_printf("\r\n Opcion:  \r");
  4828  002912  0EC6               	movlw	low STR_33
  4829  002914  6E02               	movwf	UART_printf@cadena^0,c
  4830  002916  0E7F               	movlw	high STR_33
  4831  002918  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4832  00291A  EC50  F016         	call	_UART_printf	;wreg free
  4833                           
  4834                           ;main.c: 584:     UART_printf("\r\n");
  4835  00291E  0E3F               	movlw	low (STR_15+23)
  4836  002920  6E02               	movwf	UART_printf@cadena^0,c
  4837  002922  0E7E               	movlw	high (STR_15+23)
  4838  002924  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4839  002926  EC50  F016         	call	_UART_printf	;wreg free
  4840  00292A  0012               	return		;funcret
  4841  00292C                     __end_of_mostrarMenu:
  4842                           	opt callstack 0
  4843                           
  4844 ;; *************** function _mostrarDatosSensoresWIFI *****************
  4845 ;; Defined at:
  4846 ;;		line 827 in file "main.c"
  4847 ;; Parameters:    Size  Location     Type
  4848 ;;		None
  4849 ;; Auto vars:     Size  Location     Type
  4850 ;;  i               2   32[BANK0 ] int 
  4851 ;; Return value:  Size  Location     Type
  4852 ;;                  1    wreg      void 
  4853 ;; Registers used:
  4854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4855 ;; Tracked objects:
  4856 ;;		On entry : 0/0
  4857 ;;		On exit  : 0/0
  4858 ;;		Unchanged: 0/0
  4859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4860 ;;      Params:         0       0       0       0       0       0       0       0       0
  4861 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4862 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4863 ;;      Totals:         1       2       0       0       0       0       0       0       0
  4864 ;;Total ram usage:        3 bytes
  4865 ;; Hardware stack levels used:    1
  4866 ;; Hardware stack levels required when called:   10
  4867 ;; This function calls:
  4868 ;;		_UART_printf
  4869 ;;		_UART_write
  4870 ;;		_dameTemperaturaHumedad
  4871 ;;		_lecturaWifi
  4872 ;;		_limpiarBuffer
  4873 ;;		_sprintf
  4874 ;; This function is called by:
  4875 ;;		_sistemaPrincipal
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           	psect	text13
  4880  00208A                     __ptext13:
  4881                           	opt callstack 0
  4882  00208A                     _mostrarDatosSensoresWIFI:
  4883                           	opt callstack 19
  4884  00208A                     
  4885                           ;main.c: 829:     dameTemperaturaHumedad();
  4886  00208A  EC09  F014         	call	_dameTemperaturaHumedad	;wreg free
  4887  00208E                     
  4888                           ;main.c: 831:     UART_write('I');
  4889  00208E  0E49               	movlw	73
  4890  002090  EC7C  F019         	call	_UART_write
  4891  002094                     
  4892                           ;main.c: 834:     limpiarBuffer();
  4893  002094  EC0F  F018         	call	_limpiarBuffer	;wreg free
  4894  002098                     
  4895                           ;main.c: 836:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", Humedad);
  4896  002098  0E00               	movlw	low _buffer
  4897  00209A  0100               	movlb	0	; () banked
  4898  00209C  6FB3               	movwf	sprintf@s& (0+255),b
  4899  00209E  0E01               	movlw	high _buffer
  4900  0020A0  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  4901  0020A2  0E7A               	movlw	low STR_50
  4902  0020A4  6FB5               	movwf	sprintf@fmt& (0+255),b
  4903  0020A6  0E7D               	movlw	high STR_50
  4904  0020A8  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  4905  0020AA  C07E  F0B7         	movff	_Humedad,?_sprintf+4
  4906  0020AE  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  4907  0020B0  EC31  F017         	call	_sprintf	;wreg free
  4908  0020B4                     
  4909                           ;main.c: 837:     UART_printf(buffer);
  4910  0020B4  0E00               	movlw	low _buffer
  4911  0020B6  6E02               	movwf	UART_printf@cadena^0,c
  4912  0020B8  0E01               	movlw	high _buffer
  4913  0020BA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4914  0020BC  EC50  F016         	call	_UART_printf	;wreg free
  4915  0020C0                     
  4916                           ;main.c: 838:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", Temperatura);
  4917  0020C0  0E00               	movlw	low _buffer
  4918  0020C2  0100               	movlb	0	; () banked
  4919  0020C4  6FB3               	movwf	sprintf@s& (0+255),b
  4920  0020C6  0E01               	movlw	high _buffer
  4921  0020C8  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  4922  0020CA  0EB9               	movlw	low STR_51
  4923  0020CC  6FB5               	movwf	sprintf@fmt& (0+255),b
  4924  0020CE  0E7D               	movlw	high STR_51
  4925  0020D0  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  4926  0020D2  C07F  F0B7         	movff	_Temperatura,?_sprintf+4
  4927  0020D6  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  4928  0020D8  EC31  F017         	call	_sprintf	;wreg free
  4929  0020DC                     
  4930                           ;main.c: 839:     UART_printf(buffer);
  4931  0020DC  0E00               	movlw	low _buffer
  4932  0020DE  6E02               	movwf	UART_printf@cadena^0,c
  4933  0020E0  0E01               	movlw	high _buffer
  4934  0020E2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4935  0020E4  EC50  F016         	call	_UART_printf	;wreg free
  4936  0020E8                     
  4937                           ;main.c: 841:     lecturaWifi();
  4938  0020E8  ECCC  F00F         	call	_lecturaWifi	;wreg free
  4939  0020EC                     
  4940                           ;main.c: 842:     if (peticionLecturaSensores) {
  4941  0020EC  0100               	movlb	0	; () banked
  4942  0020EE  517A               	movf	_peticionLecturaSensores& (0+255),w,b
  4943  0020F0  B4D8               	btfsc	status,2,c
  4944  0020F2  EF7D  F010         	goto	u3601
  4945  0020F6  EF7F  F010         	goto	u3600
  4946  0020FA                     u3601:
  4947  0020FA  EFB9  F010         	goto	l4646
  4948  0020FE                     u3600:
  4949  0020FE                     
  4950                           ; BSR set to: 0
  4951                           ;main.c: 844:         for (int i = 0; i < 1; i++) {
  4952  0020FE  0E00               	movlw	0
  4953  002100  6FCE               	movwf	(mostrarDatosSensoresWIFI@i+1)& (0+255),b
  4954  002102  0E00               	movlw	0
  4955  002104  6FCD               	movwf	mostrarDatosSensoresWIFI@i& (0+255),b
  4956  002106                     l4638:
  4957                           
  4958                           ; BSR set to: 0
  4959                           ;main.c: 846:             sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d %c
      +                          \r\n"
  4960  002106  0E00               	movlw	low _buffer
  4961  002108  6FB3               	movwf	sprintf@s& (0+255),b
  4962  00210A  0E01               	movlw	high _buffer
  4963  00210C  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  4964  00210E  0EE2               	movlw	low STR_52
  4965  002110  6FB5               	movwf	sprintf@fmt& (0+255),b
  4966  002112  0E7A               	movlw	high STR_52
  4967  002114  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  4968  002116  C0CD  F0B7         	movff	mostrarDatosSensoresWIFI@i,?_sprintf+4
  4969  00211A  C0CE  F0B8         	movff	mostrarDatosSensoresWIFI@i+1,?_sprintf+5
  4970  00211E  90D8               	bcf	status,0,c
  4971  002120  35CD               	rlcf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  4972  002122  6ED9               	movwf	fsr2l,c
  4973  002124  35CE               	rlcf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  4974  002126  6EDA               	movwf	fsr2h,c
  4975  002128  0E60               	movlw	low _sensores
  4976  00212A  26D9               	addwf	fsr2l,f,c
  4977  00212C  0E00               	movlw	high _sensores
  4978  00212E  22DA               	addwfc	fsr2h,f,c
  4979  002130  50DF               	movf	indf2,w,c
  4980  002132  6E5D               	movwf	??_mostrarDatosSensoresWIFI^0,c
  4981  002134  505D               	movf	??_mostrarDatosSensoresWIFI^0,w,c
  4982  002136  6FB9               	movwf	(?_sprintf+6)& (0+255),b
  4983  002138  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  4984  00213A  0E00               	movlw	0
  4985  00213C  6FBC               	movwf	(?_sprintf+9)& (0+255),b
  4986  00213E  0E25               	movlw	37
  4987  002140  6FBB               	movwf	(?_sprintf+8)& (0+255),b
  4988  002142  EC31  F017         	call	_sprintf	;wreg free
  4989  002146                     
  4990                           ;main.c: 848:             UART_printf(buffer);
  4991  002146  0E00               	movlw	low _buffer
  4992  002148  6E02               	movwf	UART_printf@cadena^0,c
  4993  00214A  0E01               	movlw	high _buffer
  4994  00214C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4995  00214E  EC50  F016         	call	_UART_printf	;wreg free
  4996  002152                     
  4997                           ;main.c: 850:         }
  4998  002152  0100               	movlb	0	; () banked
  4999  002154  4BCD               	infsnz	mostrarDatosSensoresWIFI@i& (0+255),f,b
  5000  002156  2BCE               	incf	(mostrarDatosSensoresWIFI@i+1)& (0+255),f,b
  5001  002158                     
  5002                           ; BSR set to: 0
  5003  002158  BFCE               	btfsc	(mostrarDatosSensoresWIFI@i+1)& (0+255),7,b
  5004  00215A  EFB7  F010         	goto	u3611
  5005  00215E  51CE               	movf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  5006  002160  E108               	bnz	u3610
  5007  002162  05CD               	decf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  5008  002164  A0D8               	btfss	status,0,c
  5009  002166  EFB7  F010         	goto	u3611
  5010  00216A  EFB9  F010         	goto	u3610
  5011  00216E                     u3611:
  5012  00216E  EF83  F010         	goto	l4638
  5013  002172                     u3610:
  5014  002172                     l4646:
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;main.c: 854:     UART_write('I');
  5018  002172  0E49               	movlw	73
  5019  002174  EC7C  F019         	call	_UART_write
  5020  002178  0012               	return		;funcret
  5021  00217A                     __end_of_mostrarDatosSensoresWIFI:
  5022                           	opt callstack 0
  5023                           
  5024 ;; *************** function _lecturaWifi *****************
  5025 ;; Defined at:
  5026 ;;		line 519 in file "main.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;		None
  5029 ;; Auto vars:     Size  Location     Type
  5030 ;;  i               2   30[BANK0 ] int 
  5031 ;;  humedadMedid    1   29[BANK0 ] unsigned char 
  5032 ;;  Rx              1   28[BANK0 ] unsigned char 
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  1    wreg      void 
  5035 ;; Registers used:
  5036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5042 ;;      Params:         0       0       0       0       0       0       0       0       0
  5043 ;;      Locals:         0       4       0       0       0       0       0       0       0
  5044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5045 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5046 ;;Total ram usage:        4 bytes
  5047 ;; Hardware stack levels used:    1
  5048 ;; Hardware stack levels required when called:    9
  5049 ;; This function calls:
  5050 ;;		_UART_printf
  5051 ;;		_UART_read
  5052 ;;		_UART_write
  5053 ;;		_getValue
  5054 ;;		_limpiarBuffer
  5055 ;;		_restablecerDatosSensor
  5056 ;;		_sprintf
  5057 ;; This function is called by:
  5058 ;;		_sistemaRegado
  5059 ;;		_mostrarDatosSensoresWIFI
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           	psect	text14
  5064  001F98                     __ptext14:
  5065                           	opt callstack 0
  5066  001F98                     _lecturaWifi:
  5067                           	opt callstack 20
  5068  001F98                     
  5069                           ;main.c: 521:     PIE1bits.RCIE = 0;
  5070  001F98  9A9D               	bcf	157,5,c	;volatile
  5071  001F9A                     
  5072                           ;main.c: 525:     restablecerDatosSensor();
  5073  001F9A  EC83  F017         	call	_restablecerDatosSensor	;wreg free
  5074  001F9E                     
  5075                           ;main.c: 527:     UART_write('R');
  5076  001F9E  0E52               	movlw	82
  5077  001FA0  EC7C  F019         	call	_UART_write
  5078  001FA4                     
  5079                           ;main.c: 529:     UART_printf("\r\nSolicitando Muestreo de sensores\r\n\n");
  5080  001FA4  0E64               	movlw	low STR_21
  5081  001FA6  6E02               	movwf	UART_printf@cadena^0,c
  5082  001FA8  0E7B               	movlw	high STR_21
  5083  001FAA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5084  001FAC  EC50  F016         	call	_UART_printf	;wreg free
  5085  001FB0                     
  5086                           ;main.c: 531:     Rx = UART_read();
  5087  001FB0  EC07  F017         	call	_UART_read	;wreg free
  5088  001FB4  0100               	movlb	0	; () banked
  5089  001FB6  6FC9               	movwf	lecturaWifi@Rx& (0+255),b
  5090  001FB8                     
  5091                           ; BSR set to: 0
  5092                           ;main.c: 533:     if (Rx == 'O') {
  5093  001FB8  0E4F               	movlw	79
  5094  001FBA  19C9               	xorwf	lecturaWifi@Rx& (0+255),w,b
  5095  001FBC  A4D8               	btfss	status,2,c
  5096  001FBE  EFE3  F00F         	goto	u3281
  5097  001FC2  EFE5  F00F         	goto	u3280
  5098  001FC6                     u3281:
  5099  001FC6  EF3F  F010         	goto	l4300
  5100  001FCA                     u3280:
  5101  001FCA                     
  5102                           ; BSR set to: 0
  5103                           ;main.c: 535:         peticionLecturaSensores = 1;
  5104  001FCA  0E01               	movlw	1
  5105  001FCC  6F7A               	movwf	_peticionLecturaSensores& (0+255),b
  5106                           
  5107                           ;main.c: 537:         for (int i = 0; i < 1; i++) {
  5108  001FCE  0E00               	movlw	0
  5109  001FD0  6FCC               	movwf	(lecturaWifi@i+1)& (0+255),b
  5110  001FD2  0E00               	movlw	0
  5111  001FD4  6FCB               	movwf	lecturaWifi@i& (0+255),b
  5112  001FD6                     l4282:
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;main.c: 539:             sprintf(buffer, "\r\nIngrese el porcentaje de humedad del sens
      +                          or %d\r\n", i);
  5116  001FD6  0E00               	movlw	low _buffer
  5117  001FD8  6FB3               	movwf	sprintf@s& (0+255),b
  5118  001FDA  0E01               	movlw	high _buffer
  5119  001FDC  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  5120  001FDE  0E7E               	movlw	low STR_22
  5121  001FE0  6FB5               	movwf	sprintf@fmt& (0+255),b
  5122  001FE2  0E7A               	movlw	high STR_22
  5123  001FE4  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  5124  001FE6  C0CB  F0B7         	movff	lecturaWifi@i,?_sprintf+4
  5125  001FEA  C0CC  F0B8         	movff	lecturaWifi@i+1,?_sprintf+5
  5126  001FEE  EC31  F017         	call	_sprintf	;wreg free
  5127  001FF2                     
  5128                           ;main.c: 540:             UART_printf(buffer);
  5129  001FF2  0E00               	movlw	low _buffer
  5130  001FF4  6E02               	movwf	UART_printf@cadena^0,c
  5131  001FF6  0E01               	movlw	high _buffer
  5132  001FF8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5133  001FFA  EC50  F016         	call	_UART_printf	;wreg free
  5134  001FFE                     
  5135                           ;main.c: 542:             humedadMedida = getValue(3);
  5136  001FFE  0E00               	movlw	0
  5137  002000  6E05               	movwf	(getValue@numCharacters+1)^0,c
  5138  002002  0E03               	movlw	3
  5139  002004  6E04               	movwf	getValue@numCharacters^0,c
  5140  002006  ECE8  F006         	call	_getValue	;wreg free
  5141  00200A  0100               	movlb	0	; () banked
  5142  00200C  6FCA               	movwf	lecturaWifi@humedadMedida& (0+255),b
  5143  00200E                     
  5144                           ; BSR set to: 0
  5145                           ;main.c: 544:             if (humedadMedida != '@')
  5146  00200E  0E40               	movlw	64
  5147  002010  19CA               	xorwf	lecturaWifi@humedadMedida& (0+255),w,b
  5148  002012  B4D8               	btfsc	status,2,c
  5149  002014  EF0E  F010         	goto	u3291
  5150  002018  EF10  F010         	goto	u3290
  5151  00201C                     u3291:
  5152  00201C  EF1D  F010         	goto	l4292
  5153  002020                     u3290:
  5154  002020                     
  5155                           ; BSR set to: 0
  5156                           ;main.c: 545:                 sensores[i].porcientoHumedad = humedadMedida;
  5157  002020  90D8               	bcf	status,0,c
  5158  002022  35CB               	rlcf	lecturaWifi@i& (0+255),w,b
  5159  002024  6ED9               	movwf	fsr2l,c
  5160  002026  35CC               	rlcf	(lecturaWifi@i+1)& (0+255),w,b
  5161  002028  6EDA               	movwf	fsr2h,c
  5162  00202A  0E60               	movlw	low _sensores
  5163  00202C  26D9               	addwf	fsr2l,f,c
  5164  00202E  0E00               	movlw	high _sensores
  5165  002030  22DA               	addwfc	fsr2h,f,c
  5166  002032  C0CA  FFDF         	movff	lecturaWifi@humedadMedida,indf2
  5167  002036  EF28  F010         	goto	l4294
  5168  00203A                     l4292:
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;main.c: 547:                 sensores[i].porcientoHumedad = 100;
  5172  00203A  90D8               	bcf	status,0,c
  5173  00203C  35CB               	rlcf	lecturaWifi@i& (0+255),w,b
  5174  00203E  6ED9               	movwf	fsr2l,c
  5175  002040  35CC               	rlcf	(lecturaWifi@i+1)& (0+255),w,b
  5176  002042  6EDA               	movwf	fsr2h,c
  5177  002044  0E60               	movlw	low _sensores
  5178  002046  26D9               	addwf	fsr2l,f,c
  5179  002048  0E00               	movlw	high _sensores
  5180  00204A  22DA               	addwfc	fsr2h,f,c
  5181  00204C  0E64               	movlw	100
  5182  00204E  6EDF               	movwf	indf2,c
  5183  002050                     l4294:
  5184                           
  5185                           ; BSR set to: 0
  5186                           ;main.c: 549:         }
  5187  002050  4BCB               	infsnz	lecturaWifi@i& (0+255),f,b
  5188  002052  2BCC               	incf	(lecturaWifi@i+1)& (0+255),f,b
  5189  002054                     
  5190                           ; BSR set to: 0
  5191  002054  BFCC               	btfsc	(lecturaWifi@i+1)& (0+255),7,b
  5192  002056  EF35  F010         	goto	u3301
  5193  00205A  51CC               	movf	(lecturaWifi@i+1)& (0+255),w,b
  5194  00205C  E108               	bnz	u3300
  5195  00205E  05CB               	decf	lecturaWifi@i& (0+255),w,b
  5196  002060  A0D8               	btfss	status,0,c
  5197  002062  EF35  F010         	goto	u3301
  5198  002066  EF37  F010         	goto	u3300
  5199  00206A                     u3301:
  5200  00206A  EFEB  F00F         	goto	l4282
  5201  00206E                     u3300:
  5202  00206E                     
  5203                           ; BSR set to: 0
  5204                           ;main.c: 551:         UART_printf("\r\nSensores Leidos con Exito!\r\n\n");
  5205  00206E  0E3A               	movlw	low STR_23
  5206  002070  6E02               	movwf	UART_printf@cadena^0,c
  5207  002072  0E7D               	movlw	high STR_23
  5208  002074  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5209  002076  EC50  F016         	call	_UART_printf	;wreg free
  5210                           
  5211                           ;main.c: 553:     } else {
  5212  00207A  EF41  F010         	goto	l4302
  5213  00207E                     l4300:
  5214                           
  5215                           ; BSR set to: 0
  5216                           ;main.c: 554:         peticionLecturaSensores = 0;
  5217  00207E  0E00               	movlw	0
  5218  002080  6F7A               	movwf	_peticionLecturaSensores& (0+255),b
  5219  002082                     l4302:
  5220                           
  5221                           ;main.c: 557:     limpiarBuffer();
  5222  002082  EC0F  F018         	call	_limpiarBuffer	;wreg free
  5223  002086                     
  5224                           ;main.c: 559:     PIE1bits.RCIE = 1;
  5225  002086  8A9D               	bsf	157,5,c	;volatile
  5226  002088  0012               	return		;funcret
  5227  00208A                     __end_of_lecturaWifi:
  5228                           	opt callstack 0
  5229                           
  5230 ;; *************** function _restablecerDatosSensor *****************
  5231 ;; Defined at:
  5232 ;;		line 514 in file "main.c"
  5233 ;; Parameters:    Size  Location     Type
  5234 ;;		None
  5235 ;; Auto vars:     Size  Location     Type
  5236 ;;  i               2    4[COMRAM] int 
  5237 ;; Return value:  Size  Location     Type
  5238 ;;                  1    wreg      void 
  5239 ;; Registers used:
  5240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5241 ;; Tracked objects:
  5242 ;;		On entry : 0/0
  5243 ;;		On exit  : 0/0
  5244 ;;		Unchanged: 0/0
  5245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5246 ;;      Params:         0       0       0       0       0       0       0       0       0
  5247 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5248 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5249 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5250 ;;Total ram usage:        2 bytes
  5251 ;; Hardware stack levels used:    1
  5252 ;; Hardware stack levels required when called:    2
  5253 ;; This function calls:
  5254 ;;		_constructorSensor
  5255 ;; This function is called by:
  5256 ;;		_lecturaWifi
  5257 ;;		_main
  5258 ;; This function uses a non-reentrant model
  5259 ;;
  5260                           
  5261                           	psect	text15
  5262  002F06                     __ptext15:
  5263                           	opt callstack 0
  5264  002F06                     _restablecerDatosSensor:
  5265                           	opt callstack 26
  5266  002F06                     
  5267                           ;main.c: 515:     for (int i = 0; i < 1; i++)
  5268  002F06  0E00               	movlw	0
  5269  002F08  6E06               	movwf	(restablecerDatosSensor@i+1)^0,c
  5270  002F0A  0E00               	movlw	0
  5271  002F0C  6E05               	movwf	restablecerDatosSensor@i^0,c
  5272  002F0E                     l4072:
  5273                           
  5274                           ;main.c: 516:         constructorSensor(sensores[i], 0, i);
  5275  002F0E  90D8               	bcf	status,0,c
  5276  002F10  3405               	rlcf	restablecerDatosSensor@i^0,w,c
  5277  002F12  6ED9               	movwf	fsr2l,c
  5278  002F14  3406               	rlcf	(restablecerDatosSensor@i+1)^0,w,c
  5279  002F16  6EDA               	movwf	fsr2h,c
  5280  002F18  0E60               	movlw	low _sensores
  5281  002F1A  26D9               	addwf	fsr2l,f,c
  5282  002F1C  0E00               	movlw	high _sensores
  5283  002F1E  22DA               	addwfc	fsr2h,f,c
  5284  002F20  CFDE F001          	movff	postinc2,constructorSensor@s
  5285  002F24  CFDD F002          	movff	postdec2,constructorSensor@s+1
  5286  002F28  0E00               	movlw	0
  5287  002F2A  6E03               	movwf	constructorSensor@porcientoHumedad^0,c
  5288  002F2C  C005  F004         	movff	restablecerDatosSensor@i,constructorSensor@pin
  5289  002F30  ECA6  F019         	call	_constructorSensor	;wreg free
  5290  002F34  4A05               	infsnz	restablecerDatosSensor@i^0,f,c
  5291  002F36  2A06               	incf	(restablecerDatosSensor@i+1)^0,f,c
  5292  002F38  BE06               	btfsc	(restablecerDatosSensor@i+1)^0,7,c
  5293  002F3A  EFA7  F017         	goto	u3091
  5294  002F3E  5006               	movf	(restablecerDatosSensor@i+1)^0,w,c
  5295  002F40  E108               	bnz	u3090
  5296  002F42  0405               	decf	restablecerDatosSensor@i^0,w,c
  5297  002F44  A0D8               	btfss	status,0,c
  5298  002F46  EFA7  F017         	goto	u3091
  5299  002F4A  EFA9  F017         	goto	u3090
  5300  002F4E                     u3091:
  5301  002F4E  EF87  F017         	goto	l4072
  5302  002F52                     u3090:
  5303  002F52  0012               	return		;funcret
  5304  002F54                     __end_of_restablecerDatosSensor:
  5305                           	opt callstack 0
  5306                           
  5307 ;; *************** function _constructorSensor *****************
  5308 ;; Defined at:
  5309 ;;		line 139 in file "main.c"
  5310 ;; Parameters:    Size  Location     Type
  5311 ;;  s               2    0[COMRAM] struct .
  5312 ;;  porcientoHum    1    2[COMRAM] unsigned char 
  5313 ;;  pin             1    3[COMRAM] unsigned char 
  5314 ;; Auto vars:     Size  Location     Type
  5315 ;;		None
  5316 ;; Return value:  Size  Location     Type
  5317 ;;                  1    wreg      void 
  5318 ;; Registers used:
  5319 ;;		None
  5320 ;; Tracked objects:
  5321 ;;		On entry : 0/0
  5322 ;;		On exit  : 0/0
  5323 ;;		Unchanged: 0/0
  5324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5325 ;;      Params:         4       0       0       0       0       0       0       0       0
  5326 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5327 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5328 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5329 ;;Total ram usage:        4 bytes
  5330 ;; Hardware stack levels used:    1
  5331 ;; Hardware stack levels required when called:    1
  5332 ;; This function calls:
  5333 ;;		Nothing
  5334 ;; This function is called by:
  5335 ;;		_restablecerDatosSensor
  5336 ;; This function uses a non-reentrant model
  5337 ;;
  5338                           
  5339                           	psect	text16
  5340  00334C                     __ptext16:
  5341                           	opt callstack 0
  5342  00334C                     _constructorSensor:
  5343                           	opt callstack 26
  5344  00334C                     
  5345                           ;main.c: 140:     s.porcientoHumedad = porcientoHumedad;
  5346  00334C  C003  F001         	movff	constructorSensor@porcientoHumedad,constructorSensor@s
  5347                           
  5348                           ;main.c: 141:     s.pinSensor = pin;
  5349  003350  C004  F002         	movff	constructorSensor@pin,constructorSensor@s+1
  5350  003354  0012               	return		;funcret
  5351  003356                     __end_of_constructorSensor:
  5352                           	opt callstack 0
  5353                           
  5354 ;; *************** function _mostrarDatosSensores *****************
  5355 ;; Defined at:
  5356 ;;		line 799 in file "main.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;		None
  5359 ;; Auto vars:     Size  Location     Type
  5360 ;;  i               2   28[BANK0 ] int 
  5361 ;; Return value:  Size  Location     Type
  5362 ;;                  1    wreg      void 
  5363 ;; Registers used:
  5364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5365 ;; Tracked objects:
  5366 ;;		On entry : 0/0
  5367 ;;		On exit  : 0/0
  5368 ;;		Unchanged: 0/0
  5369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5370 ;;      Params:         0       0       0       0       0       0       0       0       0
  5371 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5372 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5373 ;;      Totals:         1       2       0       0       0       0       0       0       0
  5374 ;;Total ram usage:        3 bytes
  5375 ;; Hardware stack levels used:    1
  5376 ;; Hardware stack levels required when called:    9
  5377 ;; This function calls:
  5378 ;;		_UART_printf
  5379 ;;		_UART_write
  5380 ;;		_dameTemperaturaHumedad
  5381 ;;		_lecturaAnalogaSensores
  5382 ;;		_limpiarBuffer
  5383 ;;		_sprintf
  5384 ;; This function is called by:
  5385 ;;		_sistemaPrincipal
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           	psect	text17
  5390  00217A                     __ptext17:
  5391                           	opt callstack 0
  5392  00217A                     _mostrarDatosSensores:
  5393                           	opt callstack 20
  5394  00217A                     
  5395                           ;main.c: 801:     dameTemperaturaHumedad();
  5396  00217A  EC09  F014         	call	_dameTemperaturaHumedad	;wreg free
  5397  00217E                     
  5398                           ;main.c: 803:     UART_write('I');
  5399  00217E  0E49               	movlw	73
  5400  002180  EC7C  F019         	call	_UART_write
  5401  002184                     
  5402                           ;main.c: 806:     limpiarBuffer();
  5403  002184  EC0F  F018         	call	_limpiarBuffer	;wreg free
  5404  002188                     
  5405                           ;main.c: 808:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", Humedad);
  5406  002188  0E00               	movlw	low _buffer
  5407  00218A  0100               	movlb	0	; () banked
  5408  00218C  6FB3               	movwf	sprintf@s& (0+255),b
  5409  00218E  0E01               	movlw	high _buffer
  5410  002190  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  5411  002192  0E7A               	movlw	low STR_50
  5412  002194  6FB5               	movwf	sprintf@fmt& (0+255),b
  5413  002196  0E7D               	movlw	high STR_50
  5414  002198  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  5415  00219A  C07E  F0B7         	movff	_Humedad,?_sprintf+4
  5416  00219E  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  5417  0021A0  EC31  F017         	call	_sprintf	;wreg free
  5418  0021A4                     
  5419                           ;main.c: 809:     UART_printf(buffer);
  5420  0021A4  0E00               	movlw	low _buffer
  5421  0021A6  6E02               	movwf	UART_printf@cadena^0,c
  5422  0021A8  0E01               	movlw	high _buffer
  5423  0021AA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5424  0021AC  EC50  F016         	call	_UART_printf	;wreg free
  5425  0021B0                     
  5426                           ;main.c: 810:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", Temperatura);
  5427  0021B0  0E00               	movlw	low _buffer
  5428  0021B2  0100               	movlb	0	; () banked
  5429  0021B4  6FB3               	movwf	sprintf@s& (0+255),b
  5430  0021B6  0E01               	movlw	high _buffer
  5431  0021B8  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  5432  0021BA  0EB9               	movlw	low STR_51
  5433  0021BC  6FB5               	movwf	sprintf@fmt& (0+255),b
  5434  0021BE  0E7D               	movlw	high STR_51
  5435  0021C0  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  5436  0021C2  C07F  F0B7         	movff	_Temperatura,?_sprintf+4
  5437  0021C6  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  5438  0021C8  EC31  F017         	call	_sprintf	;wreg free
  5439  0021CC                     
  5440                           ;main.c: 811:     UART_printf(buffer);
  5441  0021CC  0E00               	movlw	low _buffer
  5442  0021CE  6E02               	movwf	UART_printf@cadena^0,c
  5443  0021D0  0E01               	movlw	high _buffer
  5444  0021D2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5445  0021D4  EC50  F016         	call	_UART_printf	;wreg free
  5446  0021D8                     
  5447                           ;main.c: 813:     lecturaAnalogaSensores();
  5448  0021D8  EC1A  F013         	call	_lecturaAnalogaSensores	;wreg free
  5449  0021DC                     
  5450                           ;main.c: 816:     for (int i = 0; i < 1; i++) {
  5451  0021DC  0E00               	movlw	0
  5452  0021DE  0100               	movlb	0	; () banked
  5453  0021E0  6FCA               	movwf	(mostrarDatosSensores@i+1)& (0+255),b
  5454  0021E2  0E00               	movlw	0
  5455  0021E4  6FC9               	movwf	mostrarDatosSensores@i& (0+255),b
  5456  0021E6                     l4670:
  5457                           
  5458                           ; BSR set to: 0
  5459                           ;main.c: 818:         sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d %c\r\n
      +                          "
  5460  0021E6  0E00               	movlw	low _buffer
  5461  0021E8  6FB3               	movwf	sprintf@s& (0+255),b
  5462  0021EA  0E01               	movlw	high _buffer
  5463  0021EC  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  5464  0021EE  0EE2               	movlw	low STR_52
  5465  0021F0  6FB5               	movwf	sprintf@fmt& (0+255),b
  5466  0021F2  0E7A               	movlw	high STR_52
  5467  0021F4  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  5468  0021F6  C0C9  F0B7         	movff	mostrarDatosSensores@i,?_sprintf+4
  5469  0021FA  C0CA  F0B8         	movff	mostrarDatosSensores@i+1,?_sprintf+5
  5470  0021FE  90D8               	bcf	status,0,c
  5471  002200  35C9               	rlcf	mostrarDatosSensores@i& (0+255),w,b
  5472  002202  6ED9               	movwf	fsr2l,c
  5473  002204  35CA               	rlcf	(mostrarDatosSensores@i+1)& (0+255),w,b
  5474  002206  6EDA               	movwf	fsr2h,c
  5475  002208  0E60               	movlw	low _sensores
  5476  00220A  26D9               	addwf	fsr2l,f,c
  5477  00220C  0E00               	movlw	high _sensores
  5478  00220E  22DA               	addwfc	fsr2h,f,c
  5479  002210  50DF               	movf	indf2,w,c
  5480  002212  6E5D               	movwf	??_mostrarDatosSensores^0,c
  5481  002214  505D               	movf	??_mostrarDatosSensores^0,w,c
  5482  002216  6FB9               	movwf	(?_sprintf+6)& (0+255),b
  5483  002218  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  5484  00221A  0E00               	movlw	0
  5485  00221C  6FBC               	movwf	(?_sprintf+9)& (0+255),b
  5486  00221E  0E25               	movlw	37
  5487  002220  6FBB               	movwf	(?_sprintf+8)& (0+255),b
  5488  002222  EC31  F017         	call	_sprintf	;wreg free
  5489  002226                     
  5490                           ;main.c: 820:         UART_printf(buffer);
  5491  002226  0E00               	movlw	low _buffer
  5492  002228  6E02               	movwf	UART_printf@cadena^0,c
  5493  00222A  0E01               	movlw	high _buffer
  5494  00222C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5495  00222E  EC50  F016         	call	_UART_printf	;wreg free
  5496  002232                     
  5497                           ;main.c: 821:     }
  5498  002232  0100               	movlb	0	; () banked
  5499  002234  4BC9               	infsnz	mostrarDatosSensores@i& (0+255),f,b
  5500  002236  2BCA               	incf	(mostrarDatosSensores@i+1)& (0+255),f,b
  5501  002238                     
  5502                           ; BSR set to: 0
  5503  002238  BFCA               	btfsc	(mostrarDatosSensores@i+1)& (0+255),7,b
  5504  00223A  EF27  F011         	goto	u3621
  5505  00223E  51CA               	movf	(mostrarDatosSensores@i+1)& (0+255),w,b
  5506  002240  E108               	bnz	u3620
  5507  002242  05C9               	decf	mostrarDatosSensores@i& (0+255),w,b
  5508  002244  A0D8               	btfss	status,0,c
  5509  002246  EF27  F011         	goto	u3621
  5510  00224A  EF29  F011         	goto	u3620
  5511  00224E                     u3621:
  5512  00224E  EFF3  F010         	goto	l4670
  5513  002252                     u3620:
  5514  002252                     
  5515                           ; BSR set to: 0
  5516                           ;main.c: 823:     UART_write('I');
  5517  002252  0E49               	movlw	73
  5518  002254  EC7C  F019         	call	_UART_write
  5519  002258  0012               	return		;funcret
  5520  00225A                     __end_of_mostrarDatosSensores:
  5521                           	opt callstack 0
  5522                           
  5523 ;; *************** function _lecturaAnalogaSensores *****************
  5524 ;; Defined at:
  5525 ;;		line 563 in file "main.c"
  5526 ;; Parameters:    Size  Location     Type
  5527 ;;		None
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;  i               2   47[COMRAM] int 
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  1    wreg      void 
  5532 ;; Registers used:
  5533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5539 ;;      Params:         0       0       0       0       0       0       0       0       0
  5540 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5541 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5542 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5543 ;;Total ram usage:        3 bytes
  5544 ;; Hardware stack levels used:    1
  5545 ;; Hardware stack levels required when called:    3
  5546 ;; This function calls:
  5547 ;;		_dameHumedadSuelo
  5548 ;;		_map
  5549 ;; This function is called by:
  5550 ;;		_sistemaRegado
  5551 ;;		_mostrarDatosSensores
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text18
  5556  002634                     __ptext18:
  5557                           	opt callstack 0
  5558  002634                     _lecturaAnalogaSensores:
  5559                           	opt callstack 26
  5560  002634                     
  5561                           ;main.c: 565:     for (int i = 0; i < 1; i++) {
  5562  002634  0E00               	movlw	0
  5563  002636  6E31               	movwf	(lecturaAnalogaSensores@i+1)^0,c
  5564  002638  0E00               	movlw	0
  5565  00263A  6E30               	movwf	lecturaAnalogaSensores@i^0,c
  5566  00263C                     l4312:
  5567                           
  5568                           ;main.c: 566:         sensores[i].porcientoHumedad = map(dameHumedadSuelo(i), 0, 1023, 1
      +                          00, 0);
  5569  00263C  90D8               	bcf	status,0,c
  5570  00263E  3430               	rlcf	lecturaAnalogaSensores@i^0,w,c
  5571  002640  6ED9               	movwf	fsr2l,c
  5572  002642  3431               	rlcf	(lecturaAnalogaSensores@i+1)^0,w,c
  5573  002644  6EDA               	movwf	fsr2h,c
  5574  002646  0E60               	movlw	low _sensores
  5575  002648  26D9               	addwf	fsr2l,f,c
  5576  00264A  0E00               	movlw	high _sensores
  5577  00264C  22DA               	addwfc	fsr2h,f,c
  5578  00264E  5030               	movf	lecturaAnalogaSensores@i^0,w,c
  5579  002650  ECAA  F017         	call	_dameHumedadSuelo
  5580  002654  C001  F01B         	movff	?_dameHumedadSuelo,map@x
  5581  002658  C002  F01C         	movff	?_dameHumedadSuelo+1,map@x+1
  5582  00265C  0E00               	movlw	0
  5583  00265E  BE1C               	btfsc	(map@x+1)^0,7,c
  5584  002660  0EFF               	movlw	-1
  5585  002662  6E1D               	movwf	(map@x+2)^0,c
  5586  002664  6E1E               	movwf	(map@x+3)^0,c
  5587  002666  0E00               	movlw	0
  5588  002668  6E1F               	movwf	map@in_min^0,c
  5589  00266A  0E00               	movlw	0
  5590  00266C  6E20               	movwf	(map@in_min+1)^0,c
  5591  00266E  0E00               	movlw	0
  5592  002670  6E21               	movwf	(map@in_min+2)^0,c
  5593  002672  0E00               	movlw	0
  5594  002674  6E22               	movwf	(map@in_min+3)^0,c
  5595  002676  0EFF               	movlw	255
  5596  002678  6E23               	movwf	map@in_max^0,c
  5597  00267A  0E03               	movlw	3
  5598  00267C  6E24               	movwf	(map@in_max+1)^0,c
  5599  00267E  0E00               	movlw	0
  5600  002680  6E25               	movwf	(map@in_max+2)^0,c
  5601  002682  0E00               	movlw	0
  5602  002684  6E26               	movwf	(map@in_max+3)^0,c
  5603  002686  0E64               	movlw	100
  5604  002688  6E27               	movwf	map@out_min^0,c
  5605  00268A  0E00               	movlw	0
  5606  00268C  6E28               	movwf	(map@out_min+1)^0,c
  5607  00268E  0E00               	movlw	0
  5608  002690  6E29               	movwf	(map@out_min+2)^0,c
  5609  002692  0E00               	movlw	0
  5610  002694  6E2A               	movwf	(map@out_min+3)^0,c
  5611  002696  0E00               	movlw	0
  5612  002698  6E2B               	movwf	map@out_max^0,c
  5613  00269A  0E00               	movlw	0
  5614  00269C  6E2C               	movwf	(map@out_max+1)^0,c
  5615  00269E  0E00               	movlw	0
  5616  0026A0  6E2D               	movwf	(map@out_max+2)^0,c
  5617  0026A2  0E00               	movlw	0
  5618  0026A4  6E2E               	movwf	(map@out_max+3)^0,c
  5619  0026A6  ECD8  F014         	call	_map	;wreg free
  5620  0026AA  501B               	movf	?_map^0,w,c
  5621  0026AC  6EDF               	movwf	indf2,c
  5622  0026AE                     
  5623                           ;main.c: 567:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5624  0026AE  0E07               	movlw	7
  5625  0026B0  6E2F               	movwf	??_lecturaAnalogaSensores^0,c
  5626  0026B2  0E7D               	movlw	125
  5627  0026B4                     u3877:
  5628  0026B4  2EE8               	decfsz	wreg,f,c
  5629  0026B6  D7FE               	bra	u3877
  5630  0026B8  2E2F               	decfsz	??_lecturaAnalogaSensores^0,f,c
  5631  0026BA  D7FC               	bra	u3877
  5632  0026BC  F000               	nop	
  5633  0026BE                     
  5634                           ;main.c: 568:     }
  5635  0026BE  4A30               	infsnz	lecturaAnalogaSensores@i^0,f,c
  5636  0026C0  2A31               	incf	(lecturaAnalogaSensores@i+1)^0,f,c
  5637  0026C2  BE31               	btfsc	(lecturaAnalogaSensores@i+1)^0,7,c
  5638  0026C4  EF6C  F013         	goto	u3311
  5639  0026C8  5031               	movf	(lecturaAnalogaSensores@i+1)^0,w,c
  5640  0026CA  E108               	bnz	u3310
  5641  0026CC  0430               	decf	lecturaAnalogaSensores@i^0,w,c
  5642  0026CE  A0D8               	btfss	status,0,c
  5643  0026D0  EF6C  F013         	goto	u3311
  5644  0026D4  EF6E  F013         	goto	u3310
  5645  0026D8                     u3311:
  5646  0026D8  EF1E  F013         	goto	l4312
  5647  0026DC                     u3310:
  5648  0026DC  0012               	return		;funcret
  5649  0026DE                     __end_of_lecturaAnalogaSensores:
  5650                           	opt callstack 0
  5651                           
  5652 ;; *************** function _map *****************
  5653 ;; Defined at:
  5654 ;;		line 135 in file "main.c"
  5655 ;; Parameters:    Size  Location     Type
  5656 ;;  x               4   26[COMRAM] long 
  5657 ;;  in_min          4   30[COMRAM] long 
  5658 ;;  in_max          4   34[COMRAM] long 
  5659 ;;  out_min         4   38[COMRAM] long 
  5660 ;;  out_max         4   42[COMRAM] long 
  5661 ;; Auto vars:     Size  Location     Type
  5662 ;;		None
  5663 ;; Return value:  Size  Location     Type
  5664 ;;                  4   26[COMRAM] long 
  5665 ;; Registers used:
  5666 ;;		wreg, status,2, status,0, cstack
  5667 ;; Tracked objects:
  5668 ;;		On entry : 0/0
  5669 ;;		On exit  : 0/0
  5670 ;;		Unchanged: 0/0
  5671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5672 ;;      Params:        20       0       0       0       0       0       0       0       0
  5673 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5674 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5675 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5676 ;;Total ram usage:       20 bytes
  5677 ;; Hardware stack levels used:    1
  5678 ;; Hardware stack levels required when called:    2
  5679 ;; This function calls:
  5680 ;;		___aldiv
  5681 ;;		___lmul
  5682 ;; This function is called by:
  5683 ;;		_lecturaAnalogaSensores
  5684 ;; This function uses a non-reentrant model
  5685 ;;
  5686                           
  5687                           	psect	text19
  5688  0029B0                     __ptext19:
  5689                           	opt callstack 0
  5690  0029B0                     _map:
  5691                           	opt callstack 26
  5692  0029B0                     
  5693                           ;main.c: 136:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  5694  0029B0  501F               	movf	map@in_min^0,w,c
  5695  0029B2  5C1B               	subwf	map@x^0,w,c
  5696  0029B4  6E01               	movwf	___lmul@multiplier^0,c
  5697  0029B6  5020               	movf	(map@in_min+1)^0,w,c
  5698  0029B8  581C               	subwfb	(map@x+1)^0,w,c
  5699  0029BA  6E02               	movwf	(___lmul@multiplier+1)^0,c
  5700  0029BC  5021               	movf	(map@in_min+2)^0,w,c
  5701  0029BE  581D               	subwfb	(map@x+2)^0,w,c
  5702  0029C0  6E03               	movwf	(___lmul@multiplier+2)^0,c
  5703  0029C2  5022               	movf	(map@in_min+3)^0,w,c
  5704  0029C4  581E               	subwfb	(map@x+3)^0,w,c
  5705  0029C6  6E04               	movwf	(___lmul@multiplier+3)^0,c
  5706  0029C8  5027               	movf	map@out_min^0,w,c
  5707  0029CA  5C2B               	subwf	map@out_max^0,w,c
  5708  0029CC  6E05               	movwf	___lmul@multiplicand^0,c
  5709  0029CE  5028               	movf	(map@out_min+1)^0,w,c
  5710  0029D0  582C               	subwfb	(map@out_max+1)^0,w,c
  5711  0029D2  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5712  0029D4  5029               	movf	(map@out_min+2)^0,w,c
  5713  0029D6  582D               	subwfb	(map@out_max+2)^0,w,c
  5714  0029D8  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5715  0029DA  502A               	movf	(map@out_min+3)^0,w,c
  5716  0029DC  582E               	subwfb	(map@out_max+3)^0,w,c
  5717  0029DE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5718  0029E0  EC85  F015         	call	___lmul	;wreg free
  5719  0029E4  C001  F00D         	movff	?___lmul,___aldiv@dividend
  5720  0029E8  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  5721  0029EC  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  5722  0029F0  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  5723  0029F4  501F               	movf	map@in_min^0,w,c
  5724  0029F6  5C23               	subwf	map@in_max^0,w,c
  5725  0029F8  6E11               	movwf	___aldiv@divisor^0,c
  5726  0029FA  5020               	movf	(map@in_min+1)^0,w,c
  5727  0029FC  5824               	subwfb	(map@in_max+1)^0,w,c
  5728  0029FE  6E12               	movwf	(___aldiv@divisor+1)^0,c
  5729  002A00  5021               	movf	(map@in_min+2)^0,w,c
  5730  002A02  5825               	subwfb	(map@in_max+2)^0,w,c
  5731  002A04  6E13               	movwf	(___aldiv@divisor+2)^0,c
  5732  002A06  5022               	movf	(map@in_min+3)^0,w,c
  5733  002A08  5826               	subwfb	(map@in_max+3)^0,w,c
  5734  002A0A  6E14               	movwf	(___aldiv@divisor+3)^0,c
  5735  002A0C  EC46  F00F         	call	___aldiv	;wreg free
  5736  002A10  5027               	movf	map@out_min^0,w,c
  5737  002A12  240D               	addwf	?___aldiv^0,w,c
  5738  002A14  6E1B               	movwf	?_map^0,c
  5739  002A16  5028               	movf	(map@out_min+1)^0,w,c
  5740  002A18  200E               	addwfc	(?___aldiv+1)^0,w,c
  5741  002A1A  6E1C               	movwf	(?_map+1)^0,c
  5742  002A1C  5029               	movf	(map@out_min+2)^0,w,c
  5743  002A1E  200F               	addwfc	(?___aldiv+2)^0,w,c
  5744  002A20  6E1D               	movwf	(?_map+2)^0,c
  5745  002A22  502A               	movf	(map@out_min+3)^0,w,c
  5746  002A24  2010               	addwfc	(?___aldiv+3)^0,w,c
  5747  002A26  6E1E               	movwf	(?_map+3)^0,c
  5748  002A28  0012               	return		;funcret
  5749  002A2A                     __end_of_map:
  5750                           	opt callstack 0
  5751                           
  5752 ;; *************** function ___lmul *****************
  5753 ;; Defined at:
  5754 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;  multiplier      4    0[COMRAM] unsigned long 
  5757 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;  product         4    8[COMRAM] unsigned long 
  5760 ;; Return value:  Size  Location     Type
  5761 ;;                  4    0[COMRAM] unsigned long 
  5762 ;; Registers used:
  5763 ;;		wreg, status,2, status,0
  5764 ;; Tracked objects:
  5765 ;;		On entry : 0/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5769 ;;      Params:         8       0       0       0       0       0       0       0       0
  5770 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5771 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5772 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5773 ;;Total ram usage:       12 bytes
  5774 ;; Hardware stack levels used:    1
  5775 ;; Hardware stack levels required when called:    1
  5776 ;; This function calls:
  5777 ;;		Nothing
  5778 ;; This function is called by:
  5779 ;;		_map
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782                           
  5783                           	psect	text20
  5784  002B0A                     __ptext20:
  5785                           	opt callstack 0
  5786  002B0A                     ___lmul:
  5787                           	opt callstack 26
  5788  002B0A  0E00               	movlw	0
  5789  002B0C  6E09               	movwf	___lmul@product^0,c
  5790  002B0E  0E00               	movlw	0
  5791  002B10  6E0A               	movwf	(___lmul@product+1)^0,c
  5792  002B12  0E00               	movlw	0
  5793  002B14  6E0B               	movwf	(___lmul@product+2)^0,c
  5794  002B16  0E00               	movlw	0
  5795  002B18  6E0C               	movwf	(___lmul@product+3)^0,c
  5796  002B1A                     l3834:
  5797  002B1A  A001               	btfss	___lmul@multiplier^0,0,c
  5798  002B1C  EF92  F015         	goto	u2881
  5799  002B20  EF94  F015         	goto	u2880
  5800  002B24                     u2881:
  5801  002B24  EF9C  F015         	goto	l3838
  5802  002B28                     u2880:
  5803  002B28  5005               	movf	___lmul@multiplicand^0,w,c
  5804  002B2A  2609               	addwf	___lmul@product^0,f,c
  5805  002B2C  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5806  002B2E  220A               	addwfc	(___lmul@product+1)^0,f,c
  5807  002B30  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5808  002B32  220B               	addwfc	(___lmul@product+2)^0,f,c
  5809  002B34  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5810  002B36  220C               	addwfc	(___lmul@product+3)^0,f,c
  5811  002B38                     l3838:
  5812  002B38  90D8               	bcf	status,0,c
  5813  002B3A  3605               	rlcf	___lmul@multiplicand^0,f,c
  5814  002B3C  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5815  002B3E  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5816  002B40  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5817  002B42  90D8               	bcf	status,0,c
  5818  002B44  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5819  002B46  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5820  002B48  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5821  002B4A  3201               	rrcf	___lmul@multiplier^0,f,c
  5822  002B4C  5001               	movf	___lmul@multiplier^0,w,c
  5823  002B4E  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5824  002B50  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5825  002B52  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5826  002B54  A4D8               	btfss	status,2,c
  5827  002B56  EFAF  F015         	goto	u2891
  5828  002B5A  EFB1  F015         	goto	u2890
  5829  002B5E                     u2891:
  5830  002B5E  EF8D  F015         	goto	l3834
  5831  002B62                     u2890:
  5832  002B62  C009  F001         	movff	___lmul@product,?___lmul
  5833  002B66  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5834  002B6A  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5835  002B6E  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5836  002B72  0012               	return		;funcret
  5837  002B74                     __end_of___lmul:
  5838                           	opt callstack 0
  5839                           
  5840 ;; *************** function _dameHumedadSuelo *****************
  5841 ;; Defined at:
  5842 ;;		line 497 in file "main.c"
  5843 ;; Parameters:    Size  Location     Type
  5844 ;;  canalLeer       1    wreg     unsigned char 
  5845 ;; Auto vars:     Size  Location     Type
  5846 ;;  canalLeer       1    4[COMRAM] unsigned char 
  5847 ;; Return value:  Size  Location     Type
  5848 ;;                  2    0[COMRAM] short 
  5849 ;; Registers used:
  5850 ;;		wreg, status,2, status,0
  5851 ;; Tracked objects:
  5852 ;;		On entry : 0/0
  5853 ;;		On exit  : 0/0
  5854 ;;		Unchanged: 0/0
  5855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5856 ;;      Params:         2       0       0       0       0       0       0       0       0
  5857 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5858 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5859 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5860 ;;Total ram usage:        5 bytes
  5861 ;; Hardware stack levels used:    1
  5862 ;; Hardware stack levels required when called:    1
  5863 ;; This function calls:
  5864 ;;		Nothing
  5865 ;; This function is called by:
  5866 ;;		_lecturaAnalogaSensores
  5867 ;; This function uses a non-reentrant model
  5868 ;;
  5869                           
  5870                           	psect	text21
  5871  002F54                     __ptext21:
  5872                           	opt callstack 0
  5873  002F54                     _dameHumedadSuelo:
  5874                           	opt callstack 27
  5875                           
  5876                           ;incstack = 0
  5877                           ;dameHumedadSuelo@canalLeer stored from wreg
  5878  002F54  6E05               	movwf	dameHumedadSuelo@canalLeer^0,c
  5879  002F56                     
  5880                           ;main.c: 499:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  5881  002F56  0E06               	movlw	6
  5882  002F58                     u3887:
  5883  002F58  2EE8               	decfsz	wreg,f,c
  5884  002F5A  D7FE               	bra	u3887
  5885  002F5C  D000               	nop2	
  5886  002F5E                     
  5887                           ;main.c: 501:     ADCON0bits.ADON = 1;
  5888  002F5E  80C2               	bsf	194,0,c	;volatile
  5889  002F60                     
  5890                           ;main.c: 502:     ADCON0bits.CHS = canalLeer;
  5891  002F60  C005  F003         	movff	dameHumedadSuelo@canalLeer,??_dameHumedadSuelo
  5892  002F64  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  5893  002F66  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  5894  002F68  50C2               	movf	194,w,c	;volatile
  5895  002F6A  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  5896  002F6C  0BC3               	andlw	-61
  5897  002F6E  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  5898  002F70  6EC2               	movwf	194,c	;volatile
  5899  002F72                     
  5900                           ;main.c: 503:     ADCON0bits.GO = 1;
  5901  002F72  82C2               	bsf	194,1,c	;volatile
  5902  002F74                     
  5903                           ;main.c: 504:     ADCON0bits.GO_DONE = 1;
  5904  002F74  82C2               	bsf	194,1,c	;volatile
  5905  002F76                     l335:
  5906  002F76  B2C2               	btfsc	194,1,c	;volatile
  5907  002F78  EFC0  F017         	goto	u3081
  5908  002F7C  EFC2  F017         	goto	u3080
  5909  002F80                     u3081:
  5910  002F80  EFBB  F017         	goto	l335
  5911  002F84                     u3080:
  5912  002F84                     
  5913                           ;main.c: 508:     ADCON0bits.ADON = 0;
  5914  002F84  90C2               	bcf	194,0,c	;volatile
  5915  002F86                     
  5916                           ;main.c: 510:     return (ADRESH << 8) +ADRESL;
  5917  002F86  50C4               	movf	196,w,c	;volatile
  5918  002F88  6E04               	movwf	(??_dameHumedadSuelo+1)^0,c
  5919  002F8A  6A03               	clrf	??_dameHumedadSuelo^0,c
  5920  002F8C  50C3               	movf	195,w,c	;volatile
  5921  002F8E  2403               	addwf	??_dameHumedadSuelo^0,w,c
  5922  002F90  6E01               	movwf	?_dameHumedadSuelo^0,c
  5923  002F92  0E00               	movlw	0
  5924  002F94  2004               	addwfc	(??_dameHumedadSuelo+1)^0,w,c
  5925  002F96  6E02               	movwf	(?_dameHumedadSuelo+1)^0,c
  5926  002F98  0012               	return		;funcret
  5927  002F9A                     __end_of_dameHumedadSuelo:
  5928                           	opt callstack 0
  5929                           
  5930 ;; *************** function _dameTemperaturaHumedad *****************
  5931 ;; Defined at:
  5932 ;;		line 765 in file "main.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;		None
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;  checkSum        2    5[COMRAM] unsigned int 
  5937 ;;  temperatura     1   10[COMRAM] unsigned char 
  5938 ;;  humedad         1    9[COMRAM] unsigned char 
  5939 ;;  temperaturaD    1    8[COMRAM] unsigned char 
  5940 ;;  humedadDecim    1    7[COMRAM] unsigned char 
  5941 ;; Return value:  Size  Location     Type
  5942 ;;                  1    wreg      void 
  5943 ;; Registers used:
  5944 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5945 ;; Tracked objects:
  5946 ;;		On entry : 0/0
  5947 ;;		On exit  : 0/0
  5948 ;;		Unchanged: 0/0
  5949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5950 ;;      Params:         0       0       0       0       0       0       0       0       0
  5951 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5952 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5953 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5954 ;;Total ram usage:        8 bytes
  5955 ;; Hardware stack levels used:    1
  5956 ;; Hardware stack levels required when called:    3
  5957 ;; This function calls:
  5958 ;;		_DHT11_ReadData
  5959 ;;		_DHT11_Start
  5960 ;;		_UART_printf
  5961 ;;		_check_response
  5962 ;; This function is called by:
  5963 ;;		_estaSeco
  5964 ;;		_mostrarDatosSensores
  5965 ;;		_mostrarDatosSensoresWIFI
  5966 ;; This function uses a non-reentrant model
  5967 ;;
  5968                           
  5969                           	psect	text22
  5970  002812                     __ptext22:
  5971                           	opt callstack 0
  5972  002812                     _dameTemperaturaHumedad:
  5973                           	opt callstack 24
  5974  002812                     
  5975                           ;main.c: 767:     PIE1bits.RCIE = 0;
  5976  002812  9A9D               	bcf	157,5,c	;volatile
  5977                           
  5978                           ;main.c: 768:     T0CONbits.TMR0ON = 0;
  5979  002814  9ED5               	bcf	213,7,c	;volatile
  5980  002816                     l3914:
  5981                           
  5982                           ;main.c: 774:     DHT11_Start();
  5983  002816  EC50  F019         	call	_DHT11_Start	;wreg free
  5984  00281A                     
  5985                           ;main.c: 776:     while (!(check_response())) {
  5986  00281A  ECEF  F017         	call	_check_response	;wreg free
  5987  00281E  0900               	iorlw	0
  5988  002820  B4D8               	btfsc	status,2,c
  5989  002822  EF15  F014         	goto	u2961
  5990  002826  EF17  F014         	goto	u2960
  5991  00282A                     u2961:
  5992  00282A  EF0B  F014         	goto	l3914
  5993  00282E                     u2960:
  5994  00282E                     
  5995                           ;main.c: 782:     humedad = DHT11_ReadData();
  5996  00282E  EC7F  F016         	call	_DHT11_ReadData	;wreg free
  5997  002832  6E0A               	movwf	dameTemperaturaHumedad@humedad^0,c
  5998                           
  5999                           ;main.c: 783:     humedadDecimal = DHT11_ReadData();
  6000  002834  EC7F  F016         	call	_DHT11_ReadData	;wreg free
  6001  002838  6E08               	movwf	dameTemperaturaHumedad@humedadDecimal^0,c
  6002                           
  6003                           ;main.c: 784:     temperatura = DHT11_ReadData();
  6004  00283A  EC7F  F016         	call	_DHT11_ReadData	;wreg free
  6005  00283E  6E0B               	movwf	dameTemperaturaHumedad@temperatura^0,c
  6006                           
  6007                           ;main.c: 785:     temperaturaDecimal = DHT11_ReadData();
  6008  002840  EC7F  F016         	call	_DHT11_ReadData	;wreg free
  6009  002844  6E09               	movwf	dameTemperaturaHumedad@temperaturaDecimal^0,c
  6010                           
  6011                           ;main.c: 786:     checkSum = DHT11_ReadData();
  6012  002846  EC7F  F016         	call	_DHT11_ReadData	;wreg free
  6013  00284A  6E04               	movwf	??_dameTemperaturaHumedad^0,c
  6014  00284C  5004               	movf	??_dameTemperaturaHumedad^0,w,c
  6015  00284E  6E06               	movwf	dameTemperaturaHumedad@checkSum^0,c
  6016  002850  6A07               	clrf	(dameTemperaturaHumedad@checkSum+1)^0,c
  6017  002852                     
  6018                           ;main.c: 788:     if (checkSum != (humedad + humedadDecimal + temperatura + temperaturaD
      +                          ecimal))
  6019  002852  5008               	movf	dameTemperaturaHumedad@humedadDecimal^0,w,c
  6020  002854  C00A  F004         	movff	dameTemperaturaHumedad@humedad,??_dameTemperaturaHumedad
  6021  002858  6A05               	clrf	(??_dameTemperaturaHumedad+1)^0,c
  6022  00285A  2604               	addwf	??_dameTemperaturaHumedad^0,f,c
  6023  00285C  0E00               	movlw	0
  6024  00285E  2205               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  6025  002860  500B               	movf	dameTemperaturaHumedad@temperatura^0,w,c
  6026  002862  2604               	addwf	??_dameTemperaturaHumedad^0,f,c
  6027  002864  0E00               	movlw	0
  6028  002866  2205               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  6029  002868  5009               	movf	dameTemperaturaHumedad@temperaturaDecimal^0,w,c
  6030  00286A  2604               	addwf	??_dameTemperaturaHumedad^0,f,c
  6031  00286C  0E00               	movlw	0
  6032  00286E  2205               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  6033  002870  5006               	movf	dameTemperaturaHumedad@checkSum^0,w,c
  6034  002872  1804               	xorwf	??_dameTemperaturaHumedad^0,w,c
  6035  002874  E109               	bnz	u2970
  6036  002876  5007               	movf	(dameTemperaturaHumedad@checkSum+1)^0,w,c
  6037  002878  1805               	xorwf	(??_dameTemperaturaHumedad+1)^0,w,c
  6038  00287A  B4D8               	btfsc	status,2,c
  6039  00287C  EF42  F014         	goto	u2971
  6040  002880  EF44  F014         	goto	u2970
  6041  002884                     u2971:
  6042  002884  EF4C  F014         	goto	l414
  6043  002888                     u2970:
  6044  002888                     
  6045                           ;main.c: 789:         UART_printf("Error de lectura DHT11\r\n");
  6046  002888  0E8F               	movlw	low STR_49
  6047  00288A  6E02               	movwf	UART_printf@cadena^0,c
  6048  00288C  0E7E               	movlw	high STR_49
  6049  00288E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6050  002890  EC50  F016         	call	_UART_printf	;wreg free
  6051  002894  EF50  F014         	goto	l415
  6052  002898                     l414:
  6053                           
  6054                           ;main.c: 791:         Humedad = humedad;
  6055  002898  C00A  F07E         	movff	dameTemperaturaHumedad@humedad,_Humedad
  6056                           
  6057                           ;main.c: 792:         Temperatura = temperatura;
  6058  00289C  C00B  F07F         	movff	dameTemperaturaHumedad@temperatura,_Temperatura
  6059  0028A0                     l415:
  6060                           
  6061                           ;main.c: 795:     PIE1bits.RCIE = 1;
  6062  0028A0  8A9D               	bsf	157,5,c	;volatile
  6063                           
  6064                           ;main.c: 796:     T0CONbits.TMR0ON = 1;
  6065  0028A2  8ED5               	bsf	213,7,c	;volatile
  6066  0028A4  0012               	return		;funcret
  6067  0028A6                     __end_of_dameTemperaturaHumedad:
  6068                           	opt callstack 0
  6069                           
  6070 ;; *************** function _check_response *****************
  6071 ;; Defined at:
  6072 ;;		line 38 in file "./DHT11.h"
  6073 ;; Parameters:    Size  Location     Type
  6074 ;;		None
  6075 ;; Auto vars:     Size  Location     Type
  6076 ;;  respuesta       1    0[COMRAM] unsigned char 
  6077 ;; Return value:  Size  Location     Type
  6078 ;;                  1    wreg      unsigned char 
  6079 ;; Registers used:
  6080 ;;		wreg, status,2
  6081 ;; Tracked objects:
  6082 ;;		On entry : 0/0
  6083 ;;		On exit  : 0/0
  6084 ;;		Unchanged: 0/0
  6085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6086 ;;      Params:         0       0       0       0       0       0       0       0       0
  6087 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6088 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6089 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6090 ;;Total ram usage:        1 bytes
  6091 ;; Hardware stack levels used:    1
  6092 ;; Hardware stack levels required when called:    1
  6093 ;; This function calls:
  6094 ;;		Nothing
  6095 ;; This function is called by:
  6096 ;;		_dameTemperaturaHumedad
  6097 ;; This function uses a non-reentrant model
  6098 ;;
  6099                           
  6100                           	psect	text23
  6101  002FDE                     __ptext23:
  6102                           	opt callstack 0
  6103  002FDE                     _check_response:
  6104                           	opt callstack 25
  6105  002FDE                     
  6106                           ;./DHT11.h: 40:     unsigned char respuesta = 0;
  6107  002FDE  0E00               	movlw	0
  6108  002FE0  6E01               	movwf	check_response@respuesta^0,c
  6109  002FE2                     
  6110                           ;./DHT11.h: 41:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  6111  002FE2  0E0D               	movlw	13
  6112  002FE4                     u3897:
  6113  002FE4  2EE8               	decfsz	wreg,f,c
  6114  002FE6  D7FE               	bra	u3897
  6115  002FE8  F000               	nop	
  6116  002FEA                     
  6117                           ;./DHT11.h: 42:     if (!PORTDbits.RD7) {
  6118  002FEA  BE83               	btfsc	131,7,c	;volatile
  6119  002FEC  EFFA  F017         	goto	u2851
  6120  002FF0  EFFC  F017         	goto	u2850
  6121  002FF4                     u2851:
  6122  002FF4  EF0D  F018         	goto	l3818
  6123  002FF8                     u2850:
  6124  002FF8                     
  6125                           ;./DHT11.h: 43:         _delay((unsigned long)((80)*(4000000/4000000.0)));
  6126  002FF8  0E1A               	movlw	26
  6127  002FFA                     u3907:
  6128  002FFA  2EE8               	decfsz	wreg,f,c
  6129  002FFC  D7FE               	bra	u3907
  6130  002FFE  D000               	nop2	
  6131  003000                     
  6132                           ;./DHT11.h: 44:         if (PORTDbits.RD7) {
  6133  003000  AE83               	btfss	131,7,c	;volatile
  6134  003002  EF05  F018         	goto	u2861
  6135  003006  EF07  F018         	goto	u2860
  6136  00300A                     u2861:
  6137  00300A  EF0D  F018         	goto	l3818
  6138  00300E                     u2860:
  6139  00300E                     
  6140                           ;./DHT11.h: 45:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  6141  00300E  0E10               	movlw	16
  6142  003010                     u3917:
  6143  003010  2EE8               	decfsz	wreg,f,c
  6144  003012  D7FE               	bra	u3917
  6145  003014  D000               	nop2	
  6146  003016                     
  6147                           ;./DHT11.h: 46:             respuesta = 1;
  6148  003016  0E01               	movlw	1
  6149  003018  6E01               	movwf	check_response@respuesta^0,c
  6150  00301A                     l3818:
  6151                           
  6152                           ;./DHT11.h: 50:     return respuesta;
  6153  00301A  5001               	movf	check_response@respuesta^0,w,c
  6154  00301C  0012               	return		;funcret
  6155  00301E                     __end_of_check_response:
  6156                           	opt callstack 0
  6157                           
  6158 ;; *************** function _DHT11_Start *****************
  6159 ;; Defined at:
  6160 ;;		line 23 in file "./DHT11.h"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;		None
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;		None
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  1    wreg      void 
  6167 ;; Registers used:
  6168 ;;		wreg
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6174 ;;      Params:         0       0       0       0       0       0       0       0       0
  6175 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6176 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6177 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6178 ;;Total ram usage:        1 bytes
  6179 ;; Hardware stack levels used:    1
  6180 ;; Hardware stack levels required when called:    1
  6181 ;; This function calls:
  6182 ;;		Nothing
  6183 ;; This function is called by:
  6184 ;;		_dameTemperaturaHumedad
  6185 ;; This function uses a non-reentrant model
  6186 ;;
  6187                           
  6188                           	psect	text24
  6189  0032A0                     __ptext24:
  6190                           	opt callstack 0
  6191  0032A0                     _DHT11_Start:
  6192                           	opt callstack 25
  6193  0032A0                     
  6194                           ;./DHT11.h: 24:     TRISDbits.RD7 = 0;
  6195  0032A0  9E95               	bcf	149,7,c	;volatile
  6196                           
  6197                           ;./DHT11.h: 26:     LATDbits.LATD7 = 0;
  6198  0032A2  9E8C               	bcf	140,7,c	;volatile
  6199  0032A4                     
  6200                           ;./DHT11.h: 28:     _delay((unsigned long)((20)*(4000000/4000.0)));
  6201  0032A4  0E1A               	movlw	26
  6202  0032A6  6E01               	movwf	??_DHT11_Start^0,c
  6203  0032A8  0EF8               	movlw	248
  6204  0032AA                     u3927:
  6205  0032AA  2EE8               	decfsz	wreg,f,c
  6206  0032AC  D7FE               	bra	u3927
  6207  0032AE  2E01               	decfsz	??_DHT11_Start^0,f,c
  6208  0032B0  D7FC               	bra	u3927
  6209  0032B2  D000               	nop2	
  6210  0032B4                     
  6211                           ;./DHT11.h: 30:     LATDbits.LATD7 = 1;
  6212  0032B4  8E8C               	bsf	140,7,c	;volatile
  6213                           
  6214                           ;./DHT11.h: 32:     _delay((unsigned long)((30)*(4000000/4000000.0)));
  6215  0032B6  0E0A               	movlw	10
  6216  0032B8                     u3937:
  6217  0032B8  2EE8               	decfsz	wreg,f,c
  6218  0032BA  D7FE               	bra	u3937
  6219  0032BC                     
  6220                           ;./DHT11.h: 34:     TRISDbits.RD7 = 1;
  6221  0032BC  8E95               	bsf	149,7,c	;volatile
  6222  0032BE  0012               	return		;funcret
  6223  0032C0                     __end_of_DHT11_Start:
  6224                           	opt callstack 0
  6225                           
  6226 ;; *************** function _DHT11_ReadData *****************
  6227 ;; Defined at:
  6228 ;;		line 9 in file "./DHT11.h"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;		None
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;  data            1    1[COMRAM] unsigned char 
  6233 ;;  i               1    0[COMRAM] unsigned char 
  6234 ;; Return value:  Size  Location     Type
  6235 ;;                  1    wreg      unsigned char 
  6236 ;; Registers used:
  6237 ;;		wreg, status,2, status,0
  6238 ;; Tracked objects:
  6239 ;;		On entry : 0/0
  6240 ;;		On exit  : 0/0
  6241 ;;		Unchanged: 0/0
  6242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6243 ;;      Params:         0       0       0       0       0       0       0       0       0
  6244 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6245 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6246 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6247 ;;Total ram usage:        2 bytes
  6248 ;; Hardware stack levels used:    1
  6249 ;; Hardware stack levels required when called:    1
  6250 ;; This function calls:
  6251 ;;		Nothing
  6252 ;; This function is called by:
  6253 ;;		_dameTemperaturaHumedad
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257                           	psect	text25
  6258  002CFE                     __ptext25:
  6259                           	opt callstack 0
  6260  002CFE                     _DHT11_ReadData:
  6261                           	opt callstack 25
  6262  002CFE                     
  6263                           ;./DHT11.h: 10:     char i, data = 0;
  6264  002CFE  0E00               	movlw	0
  6265  002D00  6E02               	movwf	DHT11_ReadData@data^0,c
  6266                           
  6267                           ;./DHT11.h: 11:     for (i = 0; i < 8; i++) {
  6268  002D02  0E00               	movlw	0
  6269  002D04  6E01               	movwf	DHT11_ReadData@i^0,c
  6270  002D06                     l152:
  6271  002D06  AE83               	btfss	131,7,c	;volatile
  6272  002D08  EF88  F016         	goto	u2811
  6273  002D0C  EF8A  F016         	goto	u2810
  6274  002D10                     u2811:
  6275  002D10  EF83  F016         	goto	l152
  6276  002D14                     u2810:
  6277  002D14                     
  6278                           ;./DHT11.h: 13:         _delay((unsigned long)((30)*(4000000/4000000.0)));
  6279  002D14  0E0A               	movlw	10
  6280  002D16                     u3947:
  6281  002D16  2EE8               	decfsz	wreg,f,c
  6282  002D18  D7FE               	bra	u3947
  6283  002D1A                     
  6284                           ;./DHT11.h: 14:         if (PORTDbits.RD7 & 1)
  6285  002D1A  AE83               	btfss	131,7,c	;volatile
  6286  002D1C  EF92  F016         	goto	u2821
  6287  002D20  EF94  F016         	goto	u2820
  6288  002D24                     u2821:
  6289  002D24  EF98  F016         	goto	l3786
  6290  002D28                     u2820:
  6291  002D28                     
  6292                           ;./DHT11.h: 15:             data = ((data << 1) | 1);
  6293  002D28  80D8               	bsf	status,0,c
  6294  002D2A  3602               	rlcf	DHT11_ReadData@data^0,f,c
  6295  002D2C  EF9B  F016         	goto	l157
  6296  002D30                     l3786:
  6297                           
  6298                           ;./DHT11.h: 17:             data = (data << 1);
  6299  002D30  5002               	movf	DHT11_ReadData@data^0,w,c
  6300  002D32  2402               	addwf	DHT11_ReadData@data^0,w,c
  6301  002D34  6E02               	movwf	DHT11_ReadData@data^0,c
  6302  002D36                     l157:
  6303  002D36  BE83               	btfsc	131,7,c	;volatile
  6304  002D38  EFA0  F016         	goto	u2831
  6305  002D3C  EFA2  F016         	goto	u2830
  6306  002D40                     u2831:
  6307  002D40  EF9B  F016         	goto	l157
  6308  002D44                     u2830:
  6309  002D44                     
  6310                           ;./DHT11.h: 19:     }
  6311  002D44  2A01               	incf	DHT11_ReadData@i^0,f,c
  6312  002D46  0E07               	movlw	7
  6313  002D48  6401               	cpfsgt	DHT11_ReadData@i^0,c
  6314  002D4A  EFA9  F016         	goto	u2841
  6315  002D4E  EFAB  F016         	goto	u2840
  6316  002D52                     u2841:
  6317  002D52  EF83  F016         	goto	l152
  6318  002D56                     u2840:
  6319  002D56                     
  6320                           ;./DHT11.h: 20:     return data;
  6321  002D56  5002               	movf	DHT11_ReadData@data^0,w,c
  6322  002D58  0012               	return		;funcret
  6323  002D5A                     __end_of_DHT11_ReadData:
  6324                           	opt callstack 0
  6325                           
  6326 ;; *************** function _leeHorariosMemoria *****************
  6327 ;; Defined at:
  6328 ;;		line 271 in file "main.c"
  6329 ;; Parameters:    Size  Location     Type
  6330 ;;		None
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;  j               2    9[COMRAM] int 
  6333 ;;  i               2   13[COMRAM] int 
  6334 ;;  contMemoria     2   11[COMRAM] int 
  6335 ;;  caracterLeid    1    8[COMRAM] unsigned char 
  6336 ;; Return value:  Size  Location     Type
  6337 ;;                  1    wreg      void 
  6338 ;; Registers used:
  6339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6340 ;; Tracked objects:
  6341 ;;		On entry : 0/0
  6342 ;;		On exit  : 0/0
  6343 ;;		Unchanged: 0/0
  6344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6345 ;;      Params:         0       0       0       0       0       0       0       0       0
  6346 ;;      Locals:         7       0       0       0       0       0       0       0       0
  6347 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6348 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6349 ;;Total ram usage:        9 bytes
  6350 ;; Hardware stack levels used:    1
  6351 ;; Hardware stack levels required when called:    4
  6352 ;; This function calls:
  6353 ;;		_UART_printf
  6354 ;;		___wmul
  6355 ;;		_leer_eeprom
  6356 ;; This function is called by:
  6357 ;;		_sistemaPrincipal
  6358 ;; This function uses a non-reentrant model
  6359 ;;
  6360                           
  6361                           	psect	text26
  6362  00164C                     __ptext26:
  6363                           	opt callstack 0
  6364  00164C                     _leeHorariosMemoria:
  6365                           	opt callstack 25
  6366  00164C                     
  6367                           ;main.c: 273:     int contMemoria = 0;
  6368  00164C  0E00               	movlw	0
  6369  00164E  6E0D               	movwf	(leeHorariosMemoria@contMemoria+1)^0,c
  6370  001650  0E00               	movlw	0
  6371  001652  6E0C               	movwf	leeHorariosMemoria@contMemoria^0,c
  6372  001654                     
  6373                           ;main.c: 274:     unsigned char caracterLeido;;main.c: 276:     caracterLeido = leer_eep
      +                          rom(contMemoria++);
  6374  001654  0E00               	movlw	0
  6375  001656  6E04               	movwf	(leer_eeprom@direccion+1)^0,c
  6376  001658  0E00               	movlw	0
  6377  00165A  6E03               	movwf	leer_eeprom@direccion^0,c
  6378  00165C  EC4F  F018         	call	_leer_eeprom	;wreg free
  6379  001660  6E09               	movwf	leeHorariosMemoria@caracterLeido^0,c
  6380  001662  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  6381  001664  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  6382  001666                     
  6383                           ;main.c: 278:     if (caracterLeido == 'T') {
  6384  001666  0E54               	movlw	84
  6385  001668  1809               	xorwf	leeHorariosMemoria@caracterLeido^0,w,c
  6386  00166A  A4D8               	btfss	status,2,c
  6387  00166C  EF3A  F00B         	goto	u3361
  6388  001670  EF3C  F00B         	goto	u3360
  6389  001674                     u3361:
  6390  001674  EFDC  F00B         	goto	l4386
  6391  001678                     u3360:
  6392  001678                     
  6393                           ;main.c: 280:         for (int i = 0; i < 24; i++) {
  6394  001678  0E00               	movlw	0
  6395  00167A  6E0F               	movwf	(leeHorariosMemoria@i+1)^0,c
  6396  00167C  0E00               	movlw	0
  6397  00167E  6E0E               	movwf	leeHorariosMemoria@i^0,c
  6398  001680                     l4358:
  6399                           
  6400                           ;main.c: 281:             horarios[i].hora = leer_eeprom(contMemoria++);
  6401  001680  C00E  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  6402  001684  C00F  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  6403  001688  0E00               	movlw	0
  6404  00168A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6405  00168C  0E0C               	movlw	12
  6406  00168E  6E03               	movwf	___wmul@multiplicand^0,c
  6407  001690  EC2D  F019         	call	___wmul	;wreg free
  6408  001694  0E32               	movlw	low _horarios
  6409  001696  2401               	addwf	?___wmul^0,w,c
  6410  001698  6ED9               	movwf	fsr2l,c
  6411  00169A  0E01               	movlw	high _horarios
  6412  00169C  2002               	addwfc	(?___wmul+1)^0,w,c
  6413  00169E  6EDA               	movwf	fsr2h,c
  6414  0016A0  C00C  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  6415  0016A4  C00D  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  6416  0016A8  EC4F  F018         	call	_leer_eeprom	;wreg free
  6417  0016AC  6EDF               	movwf	indf2,c
  6418  0016AE  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  6419  0016B0  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  6420  0016B2                     
  6421                           ;main.c: 283:             for (int j = 0; j < 7; j++) {
  6422  0016B2  0E00               	movlw	0
  6423  0016B4  6E0B               	movwf	(leeHorariosMemoria@j+1)^0,c
  6424  0016B6  0E00               	movlw	0
  6425  0016B8  6E0A               	movwf	leeHorariosMemoria@j^0,c
  6426  0016BA                     l4368:
  6427                           
  6428                           ;main.c: 284:                 horarios[i].dias[j] = leer_eeprom(contMemoria++);
  6429  0016BA  C00E  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  6430  0016BE  C00F  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  6431  0016C2  0E00               	movlw	0
  6432  0016C4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6433  0016C6  0E0C               	movlw	12
  6434  0016C8  6E03               	movwf	___wmul@multiplicand^0,c
  6435  0016CA  EC2D  F019         	call	___wmul	;wreg free
  6436  0016CE  0E32               	movlw	low _horarios
  6437  0016D0  6E07               	movwf	??_leeHorariosMemoria^0,c
  6438  0016D2  0E01               	movlw	high _horarios
  6439  0016D4  6E08               	movwf	(??_leeHorariosMemoria+1)^0,c
  6440  0016D6  0E01               	movlw	1
  6441  0016D8  2607               	addwf	??_leeHorariosMemoria^0,f,c
  6442  0016DA  0E00               	movlw	0
  6443  0016DC  2208               	addwfc	(??_leeHorariosMemoria+1)^0,f,c
  6444  0016DE  5001               	movf	?___wmul^0,w,c
  6445  0016E0  2607               	addwf	??_leeHorariosMemoria^0,f,c
  6446  0016E2  5002               	movf	(?___wmul+1)^0,w,c
  6447  0016E4  2208               	addwfc	(??_leeHorariosMemoria+1)^0,f,c
  6448  0016E6  500A               	movf	leeHorariosMemoria@j^0,w,c
  6449  0016E8  2407               	addwf	??_leeHorariosMemoria^0,w,c
  6450  0016EA  6ED9               	movwf	fsr2l,c
  6451  0016EC  500B               	movf	(leeHorariosMemoria@j+1)^0,w,c
  6452  0016EE  2008               	addwfc	(??_leeHorariosMemoria+1)^0,w,c
  6453  0016F0  6EDA               	movwf	fsr2h,c
  6454  0016F2  C00C  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  6455  0016F6  C00D  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  6456  0016FA  EC4F  F018         	call	_leer_eeprom	;wreg free
  6457  0016FE  6EDF               	movwf	indf2,c
  6458  001700  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  6459  001702  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  6460  001704                     
  6461                           ;main.c: 285:             }
  6462  001704  4A0A               	infsnz	leeHorariosMemoria@j^0,f,c
  6463  001706  2A0B               	incf	(leeHorariosMemoria@j+1)^0,f,c
  6464  001708  BE0B               	btfsc	(leeHorariosMemoria@j+1)^0,7,c
  6465  00170A  EF90  F00B         	goto	u3371
  6466  00170E  500B               	movf	(leeHorariosMemoria@j+1)^0,w,c
  6467  001710  E109               	bnz	u3370
  6468  001712  0E07               	movlw	7
  6469  001714  5C0A               	subwf	leeHorariosMemoria@j^0,w,c
  6470  001716  A0D8               	btfss	status,0,c
  6471  001718  EF90  F00B         	goto	u3371
  6472  00171C  EF92  F00B         	goto	u3370
  6473  001720                     u3371:
  6474  001720  EF5D  F00B         	goto	l4368
  6475  001724                     u3370:
  6476  001724                     
  6477                           ;main.c: 287:             horarios[i].regar = leer_eeprom(contMemoria++);
  6478  001724  C00E  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  6479  001728  C00F  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  6480  00172C  0E00               	movlw	0
  6481  00172E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6482  001730  0E0C               	movlw	12
  6483  001732  6E03               	movwf	___wmul@multiplicand^0,c
  6484  001734  EC2D  F019         	call	___wmul	;wreg free
  6485  001738  0E3B               	movlw	low (_horarios+9)
  6486  00173A  2401               	addwf	?___wmul^0,w,c
  6487  00173C  6ED9               	movwf	fsr2l,c
  6488  00173E  0E01               	movlw	high (_horarios+9)
  6489  001740  2002               	addwfc	(?___wmul+1)^0,w,c
  6490  001742  6EDA               	movwf	fsr2h,c
  6491  001744  C00C  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  6492  001748  C00D  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  6493  00174C  EC4F  F018         	call	_leer_eeprom	;wreg free
  6494  001750  6EDF               	movwf	indf2,c
  6495  001752  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  6496  001754  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  6497  001756                     
  6498                           ;main.c: 288:             horarios[i].tiempoRegar = leer_eeprom(contMemoria++);
  6499  001756  C00E  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  6500  00175A  C00F  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  6501  00175E  0E00               	movlw	0
  6502  001760  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6503  001762  0E0C               	movlw	12
  6504  001764  6E03               	movwf	___wmul@multiplicand^0,c
  6505  001766  EC2D  F019         	call	___wmul	;wreg free
  6506  00176A  0E3D               	movlw	low (_horarios+11)
  6507  00176C  2401               	addwf	?___wmul^0,w,c
  6508  00176E  6ED9               	movwf	fsr2l,c
  6509  001770  0E01               	movlw	high (_horarios+11)
  6510  001772  2002               	addwfc	(?___wmul+1)^0,w,c
  6511  001774  6EDA               	movwf	fsr2h,c
  6512  001776  C00C  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  6513  00177A  C00D  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  6514  00177E  EC4F  F018         	call	_leer_eeprom	;wreg free
  6515  001782  6EDF               	movwf	indf2,c
  6516  001784  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  6517  001786  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  6518                           
  6519                           ;main.c: 289:         }
  6520  001788  4A0E               	infsnz	leeHorariosMemoria@i^0,f,c
  6521  00178A  2A0F               	incf	(leeHorariosMemoria@i+1)^0,f,c
  6522  00178C  BE0F               	btfsc	(leeHorariosMemoria@i+1)^0,7,c
  6523  00178E  EFD2  F00B         	goto	u3381
  6524  001792  500F               	movf	(leeHorariosMemoria@i+1)^0,w,c
  6525  001794  E109               	bnz	u3380
  6526  001796  0E18               	movlw	24
  6527  001798  5C0E               	subwf	leeHorariosMemoria@i^0,w,c
  6528  00179A  A0D8               	btfss	status,0,c
  6529  00179C  EFD2  F00B         	goto	u3381
  6530  0017A0  EFD4  F00B         	goto	u3380
  6531  0017A4                     u3381:
  6532  0017A4  EF40  F00B         	goto	l4358
  6533  0017A8                     u3380:
  6534  0017A8                     
  6535                           ;main.c: 291:         UART_printf("\r\n HORARIOS CARGADOS CON EXITO!\r\n");
  6536  0017A8  0EF7               	movlw	low STR_3
  6537  0017AA  6E02               	movwf	UART_printf@cadena^0,c
  6538  0017AC  0E7C               	movlw	high STR_3
  6539  0017AE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6540  0017B0  EC50  F016         	call	_UART_printf	;wreg free
  6541                           
  6542                           ;main.c: 293:     } else
  6543  0017B4  EFE2  F00B         	goto	l281
  6544  0017B8                     l4386:
  6545                           
  6546                           ;main.c: 294:         UART_printf("\r\n NO HAY DATOS EN LA MEMORIA \r\n");
  6547  0017B8  0E19               	movlw	low STR_4
  6548  0017BA  6E02               	movwf	UART_printf@cadena^0,c
  6549  0017BC  0E7D               	movlw	high STR_4
  6550  0017BE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6551  0017C0  EC50  F016         	call	_UART_printf	;wreg free
  6552  0017C4                     l281:
  6553  0017C4  0012               	return		;funcret
  6554  0017C6                     __end_of_leeHorariosMemoria:
  6555                           	opt callstack 0
  6556                           
  6557 ;; *************** function _leer_eeprom *****************
  6558 ;; Defined at:
  6559 ;;		line 235 in file "main.c"
  6560 ;; Parameters:    Size  Location     Type
  6561 ;;  direccion       2    2[COMRAM] unsigned short 
  6562 ;; Auto vars:     Size  Location     Type
  6563 ;;  dato            1    5[COMRAM] unsigned char 
  6564 ;; Return value:  Size  Location     Type
  6565 ;;                  1    wreg      unsigned char 
  6566 ;; Registers used:
  6567 ;;		wreg, status,2, status,0, cstack
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6573 ;;      Params:         2       0       0       0       0       0       0       0       0
  6574 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6575 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6576 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6577 ;;Total ram usage:        4 bytes
  6578 ;; Hardware stack levels used:    1
  6579 ;; Hardware stack levels required when called:    3
  6580 ;; This function calls:
  6581 ;;		_i2c_detener
  6582 ;;		_i2c_envia_dato
  6583 ;;		_i2c_inicia_com
  6584 ;;		_i2c_recibe_dato
  6585 ;;		_i2c_reinicia_com
  6586 ;; This function is called by:
  6587 ;;		_leeHorariosMemoria
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           	psect	text27
  6592  00309E                     __ptext27:
  6593                           	opt callstack 0
  6594  00309E                     _leer_eeprom:
  6595                           	opt callstack 25
  6596  00309E                     
  6597                           ;main.c: 237:     unsigned char dato;;main.c: 239:     i2c_inicia_com();
  6598  00309E  ECB4  F019         	call	_i2c_inicia_com	;wreg free
  6599                           
  6600                           ;main.c: 240:     i2c_envia_dato(0xAE);
  6601  0030A2  0EAE               	movlw	174
  6602  0030A4  EC9A  F019         	call	_i2c_envia_dato
  6603                           
  6604                           ;main.c: 241:     i2c_envia_dato(direccion >> 8);
  6605  0030A8  5004               	movf	(leer_eeprom@direccion+1)^0,w,c
  6606  0030AA  EC9A  F019         	call	_i2c_envia_dato
  6607                           
  6608                           ;main.c: 242:     i2c_envia_dato(direccion);
  6609  0030AE  5003               	movf	leer_eeprom@direccion^0,w,c
  6610  0030B0  EC9A  F019         	call	_i2c_envia_dato
  6611                           
  6612                           ;main.c: 243:     i2c_reinicia_com();
  6613  0030B4  ECB0  F019         	call	_i2c_reinicia_com	;wreg free
  6614                           
  6615                           ;main.c: 244:     i2c_envia_dato(0xAF);
  6616  0030B8  0EAF               	movlw	175
  6617  0030BA  EC9A  F019         	call	_i2c_envia_dato
  6618                           
  6619                           ;main.c: 245:     dato = i2c_recibe_dato();
  6620  0030BE  EC6F  F019         	call	_i2c_recibe_dato	;wreg free
  6621  0030C2  6E06               	movwf	leer_eeprom@dato^0,c
  6622                           
  6623                           ;main.c: 246:     i2c_detener();
  6624  0030C4  ECB8  F019         	call	_i2c_detener	;wreg free
  6625  0030C8                     
  6626                           ;main.c: 247:     _delay((unsigned long)((10)*(4000000/4000.0)));
  6627  0030C8  0E0D               	movlw	13
  6628  0030CA  6E05               	movwf	??_leer_eeprom^0,c
  6629  0030CC  0EFC               	movlw	252
  6630  0030CE                     u3957:
  6631  0030CE  2EE8               	decfsz	wreg,f,c
  6632  0030D0  D7FE               	bra	u3957
  6633  0030D2  2E05               	decfsz	??_leer_eeprom^0,f,c
  6634  0030D4  D7FC               	bra	u3957
  6635  0030D6                     
  6636                           ;main.c: 249:     return dato;
  6637  0030D6  5006               	movf	leer_eeprom@dato^0,w,c
  6638  0030D8  0012               	return		;funcret
  6639  0030DA                     __end_of_leer_eeprom:
  6640                           	opt callstack 0
  6641                           
  6642 ;; *************** function _i2c_reinicia_com *****************
  6643 ;; Defined at:
  6644 ;;		line 37 in file "./I2C.h"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;		None
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;		None
  6649 ;; Return value:  Size  Location     Type
  6650 ;;                  1    wreg      void 
  6651 ;; Registers used:
  6652 ;;		wreg, status,2, status,0, cstack
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 0/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6658 ;;      Params:         0       0       0       0       0       0       0       0       0
  6659 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6660 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6661 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6662 ;;Total ram usage:        0 bytes
  6663 ;; Hardware stack levels used:    1
  6664 ;; Hardware stack levels required when called:    2
  6665 ;; This function calls:
  6666 ;;		_i2c_espera
  6667 ;; This function is called by:
  6668 ;;		_leer_rtc
  6669 ;;		_leer_eeprom
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673                           	psect	text28
  6674  003360                     __ptext28:
  6675                           	opt callstack 0
  6676  003360                     _i2c_reinicia_com:
  6677                           	opt callstack 25
  6678  003360                     
  6679                           ;./I2C.h: 38:     i2c_espera();
  6680  003360  EC1A  F019         	call	_i2c_espera	;wreg free
  6681  003364                     
  6682                           ;./I2C.h: 39:     SSPCON2bits.RSEN = 1;
  6683  003364  82C5               	bsf	197,1,c	;volatile
  6684  003366  0012               	return		;funcret
  6685  003368                     __end_of_i2c_reinicia_com:
  6686                           	opt callstack 0
  6687                           
  6688 ;; *************** function _i2c_recibe_dato *****************
  6689 ;; Defined at:
  6690 ;;		line 68 in file "./I2C.h"
  6691 ;; Parameters:    Size  Location     Type
  6692 ;;		None
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;  datoleido       1    1[COMRAM] unsigned char 
  6695 ;; Return value:  Size  Location     Type
  6696 ;;                  1    wreg      unsigned char 
  6697 ;; Registers used:
  6698 ;;		wreg, status,2, status,0, cstack
  6699 ;; Tracked objects:
  6700 ;;		On entry : 0/0
  6701 ;;		On exit  : 0/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6704 ;;      Params:         0       0       0       0       0       0       0       0       0
  6705 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6706 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6707 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6708 ;;Total ram usage:        1 bytes
  6709 ;; Hardware stack levels used:    1
  6710 ;; Hardware stack levels required when called:    2
  6711 ;; This function calls:
  6712 ;;		_i2c_espera
  6713 ;; This function is called by:
  6714 ;;		_leer_rtc
  6715 ;;		_leer_eeprom
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719                           	psect	text29
  6720  0032DE                     __ptext29:
  6721                           	opt callstack 0
  6722  0032DE                     _i2c_recibe_dato:
  6723                           	opt callstack 25
  6724  0032DE                     
  6725                           ;./I2C.h: 70:     unsigned char datoleido;;./I2C.h: 73:     i2c_espera();
  6726  0032DE  EC1A  F019         	call	_i2c_espera	;wreg free
  6727  0032E2                     
  6728                           ;./I2C.h: 74:     SSPCON2bits.RCEN = 1;
  6729  0032E2  86C5               	bsf	197,3,c	;volatile
  6730                           
  6731                           ;./I2C.h: 76:     i2c_espera();
  6732  0032E4  EC1A  F019         	call	_i2c_espera	;wreg free
  6733  0032E8                     
  6734                           ;./I2C.h: 77:     datoleido = SSPBUF;
  6735  0032E8  CFC9 F002          	movff	4041,i2c_recibe_dato@datoleido	;volatile
  6736                           
  6737                           ;./I2C.h: 80:     i2c_espera();
  6738  0032EC  EC1A  F019         	call	_i2c_espera	;wreg free
  6739  0032F0                     
  6740                           ;./I2C.h: 82:     SSPCON2bits.ACKDT = 1;
  6741  0032F0  8AC5               	bsf	197,5,c	;volatile
  6742  0032F2                     
  6743                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
  6744  0032F2  88C5               	bsf	197,4,c	;volatile
  6745  0032F4                     
  6746                           ;./I2C.h: 91:     return datoleido;
  6747  0032F4  5002               	movf	i2c_recibe_dato@datoleido^0,w,c
  6748  0032F6  0012               	return		;funcret
  6749  0032F8                     __end_of_i2c_recibe_dato:
  6750                           	opt callstack 0
  6751                           
  6752 ;; *************** function _fijaHoraRtc *****************
  6753 ;; Defined at:
  6754 ;;		line 385 in file "main.c"
  6755 ;; Parameters:    Size  Location     Type
  6756 ;;		None
  6757 ;; Auto vars:     Size  Location     Type
  6758 ;;		None
  6759 ;; Return value:  Size  Location     Type
  6760 ;;                  1    wreg      void 
  6761 ;; Registers used:
  6762 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6763 ;; Tracked objects:
  6764 ;;		On entry : 0/0
  6765 ;;		On exit  : 0/0
  6766 ;;		Unchanged: 0/0
  6767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6768 ;;      Params:         0       0       0       0       0       0       0       0       0
  6769 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6770 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6771 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6772 ;;Total ram usage:        0 bytes
  6773 ;; Hardware stack levels used:    1
  6774 ;; Hardware stack levels required when called:    5
  6775 ;; This function calls:
  6776 ;;		_UART_printf
  6777 ;;		_escribe_rtc
  6778 ;;		_setRtc
  6779 ;; This function is called by:
  6780 ;;		_sistemaPrincipal
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784                           	psect	text30
  6785  002B74                     __ptext30:
  6786                           	opt callstack 0
  6787  002B74                     _fijaHoraRtc:
  6788                           	opt callstack 24
  6789  002B74                     
  6790                           ;main.c: 387:     UART_printf("\r\n FIJA HORA \r\n");
  6791  002B74  0EB6               	movlw	low STR_5
  6792  002B76  6E02               	movwf	UART_printf@cadena^0,c
  6793  002B78  0E7F               	movlw	high STR_5
  6794  002B7A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6795  002B7C  EC50  F016         	call	_UART_printf	;wreg free
  6796                           
  6797                           ;main.c: 390:     UART_printf("\r\n Envie las Horas en formato 24 Ej: 15 \r\n");
  6798  002B80  0E0F               	movlw	low STR_6
  6799  002B82  6E02               	movwf	UART_printf@cadena^0,c
  6800  002B84  0E7B               	movlw	high STR_6
  6801  002B86  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6802  002B88  EC50  F016         	call	_UART_printf	;wreg free
  6803  002B8C                     
  6804                           ;main.c: 393:     if (setRtc(0x02)) {
  6805  002B8C  0E02               	movlw	2
  6806  002B8E  EC15  F015         	call	_setRtc
  6807  002B92  0900               	iorlw	0
  6808  002B94  B4D8               	btfsc	status,2,c
  6809  002B96  EFCF  F015         	goto	u3491
  6810  002B9A  EFD1  F015         	goto	u3490
  6811  002B9E                     u3491:
  6812  002B9E  EFED  F015         	goto	l313
  6813  002BA2                     u3490:
  6814  002BA2                     
  6815                           ;main.c: 394:         UART_printf("\r\n Envie los Minutos Ej: 25 \r\n");
  6816  002BA2  0E9A               	movlw	low STR_7
  6817  002BA4  6E02               	movwf	UART_printf@cadena^0,c
  6818  002BA6  0E7D               	movlw	high STR_7
  6819  002BA8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6820  002BAA  EC50  F016         	call	_UART_printf	;wreg free
  6821  002BAE                     
  6822                           ;main.c: 395:         if (setRtc(0x01)) {
  6823  002BAE  0E01               	movlw	1
  6824  002BB0  EC15  F015         	call	_setRtc
  6825  002BB4  0900               	iorlw	0
  6826  002BB6  B4D8               	btfsc	status,2,c
  6827  002BB8  EFE0  F015         	goto	u3501
  6828  002BBC  EFE2  F015         	goto	u3500
  6829  002BC0                     u3501:
  6830  002BC0  EFED  F015         	goto	l313
  6831  002BC4                     u3500:
  6832  002BC4                     
  6833                           ;main.c: 396:             UART_printf("\r\n HORA ESTABLECIDA CORRECTAMENTE \r\n");
  6834  002BC4  0EFA               	movlw	low STR_8
  6835  002BC6  6E02               	movwf	UART_printf@cadena^0,c
  6836  002BC8  0E7B               	movlw	high STR_8
  6837  002BCA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6838  002BCC  EC50  F016         	call	_UART_printf	;wreg free
  6839  002BD0                     
  6840                           ;main.c: 397:             escribe_rtc(0x00, 0);
  6841  002BD0  0E00               	movlw	0
  6842  002BD2  6E03               	movwf	escribe_rtc@dato^0,c
  6843  002BD4  0E00               	movlw	0
  6844  002BD6  EC60  F019         	call	_escribe_rtc
  6845  002BDA                     l313:
  6846  002BDA  0012               	return		;funcret
  6847  002BDC                     __end_of_fijaHoraRtc:
  6848                           	opt callstack 0
  6849                           
  6850 ;; *************** function _fijaDiaRtc *****************
  6851 ;; Defined at:
  6852 ;;		line 194 in file "main.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;		None
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;		None
  6857 ;; Return value:  Size  Location     Type
  6858 ;;                  1    wreg      void 
  6859 ;; Registers used:
  6860 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6861 ;; Tracked objects:
  6862 ;;		On entry : 0/0
  6863 ;;		On exit  : 0/0
  6864 ;;		Unchanged: 0/0
  6865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6866 ;;      Params:         0       0       0       0       0       0       0       0       0
  6867 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6868 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6869 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6870 ;;Total ram usage:        0 bytes
  6871 ;; Hardware stack levels used:    1
  6872 ;; Hardware stack levels required when called:    5
  6873 ;; This function calls:
  6874 ;;		_UART_printf
  6875 ;;		_setRtc
  6876 ;; This function is called by:
  6877 ;;		_sistemaPrincipal
  6878 ;; This function uses a non-reentrant model
  6879 ;;
  6880                           
  6881                           	psect	text31
  6882  00317E                     __ptext31:
  6883                           	opt callstack 0
  6884  00317E                     _fijaDiaRtc:
  6885                           	opt callstack 24
  6886  00317E                     
  6887                           ;main.c: 196:     UART_printf("\r\n Envie el dia de la semana Ej: 01 = DOMINGO ... 07 = 
      +                          SABADO \r\n");
  6888  00317E  0E23               	movlw	low STR_1
  6889  003180  6E02               	movwf	UART_printf@cadena^0,c
  6890  003182  0E79               	movlw	high STR_1
  6891  003184  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6892  003186  EC50  F016         	call	_UART_printf	;wreg free
  6893  00318A                     
  6894                           ;main.c: 198:     if (setRtc(0x03)) {
  6895  00318A  0E03               	movlw	3
  6896  00318C  EC15  F015         	call	_setRtc
  6897  003190  0900               	iorlw	0
  6898  003192  B4D8               	btfsc	status,2,c
  6899  003194  EFCE  F018         	goto	u3351
  6900  003198  EFD0  F018         	goto	u3350
  6901  00319C                     u3351:
  6902  00319C  EFD6  F018         	goto	l255
  6903  0031A0                     u3350:
  6904  0031A0                     
  6905                           ;main.c: 199:         UART_printf("\r\n DIA ESTABLECIDO CORRECTAMENTE \r\n");
  6906  0031A0  0E69               	movlw	low STR_2
  6907  0031A2  6E02               	movwf	UART_printf@cadena^0,c
  6908  0031A4  0E7C               	movlw	high STR_2
  6909  0031A6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6910  0031A8  EC50  F016         	call	_UART_printf	;wreg free
  6911  0031AC                     l255:
  6912  0031AC  0012               	return		;funcret
  6913  0031AE                     __end_of_fijaDiaRtc:
  6914                           	opt callstack 0
  6915                           
  6916 ;; *************** function _setRtc *****************
  6917 ;; Defined at:
  6918 ;;		line 204 in file "main.c"
  6919 ;; Parameters:    Size  Location     Type
  6920 ;;  direccion       1    wreg     unsigned char 
  6921 ;; Auto vars:     Size  Location     Type
  6922 ;;  direccion       1   14[COMRAM] unsigned char 
  6923 ;;  dato            1   17[COMRAM] unsigned char 
  6924 ;;  datoRtc         1   16[COMRAM] unsigned char 
  6925 ;;  seteado         1   15[COMRAM] unsigned char 
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  1    wreg      unsigned char 
  6928 ;; Registers used:
  6929 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6935 ;;      Params:         0       0       0       0       0       0       0       0       0
  6936 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6937 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6938 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6939 ;;Total ram usage:        4 bytes
  6940 ;; Hardware stack levels used:    1
  6941 ;; Hardware stack levels required when called:    4
  6942 ;; This function calls:
  6943 ;;		___awdiv
  6944 ;;		___awmod
  6945 ;;		_escribe_rtc
  6946 ;;		_getValue
  6947 ;; This function is called by:
  6948 ;;		_fijaDiaRtc
  6949 ;;		_fijaHoraRtc
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           
  6953                           	psect	text32
  6954  002A2A                     __ptext32:
  6955                           	opt callstack 0
  6956  002A2A                     _setRtc:
  6957                           	opt callstack 24
  6958                           
  6959                           ;incstack = 0
  6960                           ;setRtc@direccion stored from wreg
  6961  002A2A  6E0F               	movwf	setRtc@direccion^0,c
  6962  002A2C                     
  6963                           ;main.c: 207:     unsigned char seteado = 0;
  6964  002A2C  0E00               	movlw	0
  6965  002A2E  6E10               	movwf	setRtc@seteado^0,c
  6966                           
  6967                           ;main.c: 208:     unsigned char datoRtc = 0;
  6968  002A30  0E00               	movlw	0
  6969  002A32  6E11               	movwf	setRtc@datoRtc^0,c
  6970  002A34                     
  6971                           ;main.c: 210:     dato = getValue(2);
  6972  002A34  0E00               	movlw	0
  6973  002A36  6E05               	movwf	(getValue@numCharacters+1)^0,c
  6974  002A38  0E02               	movlw	2
  6975  002A3A  6E04               	movwf	getValue@numCharacters^0,c
  6976  002A3C  ECE8  F006         	call	_getValue	;wreg free
  6977  002A40  6E12               	movwf	setRtc@dato^0,c
  6978  002A42                     
  6979                           ;main.c: 212:     if (dato != '@') {
  6980  002A42  0E40               	movlw	64
  6981  002A44  1812               	xorwf	setRtc@dato^0,w,c
  6982  002A46  B4D8               	btfsc	status,2,c
  6983  002A48  EF28  F015         	goto	u3251
  6984  002A4C  EF2A  F015         	goto	u3250
  6985  002A50                     u3251:
  6986  002A50  EF4B  F015         	goto	l4212
  6987  002A54                     u3250:
  6988  002A54                     
  6989                           ;main.c: 214:         datoRtc = ((dato / 10) & 0x0F) << 4;
  6990  002A54  C012  F001         	movff	setRtc@dato,___awdiv@dividend
  6991  002A58  6A02               	clrf	(___awdiv@dividend+1)^0,c
  6992  002A5A  0E00               	movlw	0
  6993  002A5C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6994  002A5E  0E0A               	movlw	10
  6995  002A60  6E03               	movwf	___awdiv@divisor^0,c
  6996  002A62  EC60  F012         	call	___awdiv	;wreg free
  6997  002A66  0E0F               	movlw	15
  6998  002A68  1601               	andwf	?___awdiv^0,f,c
  6999  002A6A  3801               	swapf	?___awdiv^0,w,c
  7000  002A6C  0BF0               	andlw	240
  7001  002A6E  6E11               	movwf	setRtc@datoRtc^0,c
  7002                           
  7003                           ;main.c: 215:         datoRtc |= (dato % 10) & 0x0F;
  7004  002A70  C012  F001         	movff	setRtc@dato,___awmod@dividend
  7005  002A74  6A02               	clrf	(___awmod@dividend+1)^0,c
  7006  002A76  0E00               	movlw	0
  7007  002A78  6E04               	movwf	(___awmod@divisor+1)^0,c
  7008  002A7A  0E0A               	movlw	10
  7009  002A7C  6E03               	movwf	___awmod@divisor^0,c
  7010  002A7E  ECC2  F012         	call	___awmod	;wreg free
  7011  002A82  5001               	movf	?___awmod^0,w,c
  7012  002A84  0B0F               	andlw	15
  7013  002A86  1211               	iorwf	setRtc@datoRtc^0,f,c
  7014                           
  7015                           ;main.c: 216:         escribe_rtc(direccion, datoRtc);
  7016  002A88  C011  F003         	movff	setRtc@datoRtc,escribe_rtc@dato
  7017  002A8C  500F               	movf	setRtc@direccion^0,w,c
  7018  002A8E  EC60  F019         	call	_escribe_rtc
  7019  002A92                     
  7020                           ;main.c: 217:         seteado = 1;
  7021  002A92  0E01               	movlw	1
  7022  002A94  6E10               	movwf	setRtc@seteado^0,c
  7023  002A96                     l4212:
  7024                           
  7025                           ;main.c: 220:     return seteado;
  7026  002A96  5010               	movf	setRtc@seteado^0,w,c
  7027  002A98  0012               	return		;funcret
  7028  002A9A                     __end_of_setRtc:
  7029                           	opt callstack 0
  7030                           
  7031 ;; *************** function _escribe_rtc *****************
  7032 ;; Defined at:
  7033 ;;		line 2 in file "./RTC.h"
  7034 ;; Parameters:    Size  Location     Type
  7035 ;;  direccion       1    wreg     unsigned char 
  7036 ;;  dato            1    2[COMRAM] unsigned char 
  7037 ;; Auto vars:     Size  Location     Type
  7038 ;;  direccion       1    3[COMRAM] unsigned char 
  7039 ;; Return value:  Size  Location     Type
  7040 ;;                  1    wreg      void 
  7041 ;; Registers used:
  7042 ;;		wreg, status,2, status,0, cstack
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/0
  7045 ;;		On exit  : 0/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7048 ;;      Params:         1       0       0       0       0       0       0       0       0
  7049 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7050 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7051 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7052 ;;Total ram usage:        2 bytes
  7053 ;; Hardware stack levels used:    1
  7054 ;; Hardware stack levels required when called:    3
  7055 ;; This function calls:
  7056 ;;		_i2c_detener
  7057 ;;		_i2c_envia_dato
  7058 ;;		_i2c_inicia_com
  7059 ;; This function is called by:
  7060 ;;		_setRtc
  7061 ;;		_fijaHoraRtc
  7062 ;;		_setRtcDefault
  7063 ;; This function uses a non-reentrant model
  7064 ;;
  7065                           
  7066                           	psect	text33
  7067  0032C0                     __ptext33:
  7068                           	opt callstack 0
  7069  0032C0                     _escribe_rtc:
  7070                           	opt callstack 24
  7071                           
  7072                           ;incstack = 0
  7073                           ;escribe_rtc@direccion stored from wreg
  7074  0032C0  6E04               	movwf	escribe_rtc@direccion^0,c
  7075  0032C2                     
  7076                           ;./RTC.h: 3:     i2c_inicia_com();
  7077  0032C2  ECB4  F019         	call	_i2c_inicia_com	;wreg free
  7078                           
  7079                           ;./RTC.h: 4:     i2c_envia_dato(0xD0);
  7080  0032C6  0ED0               	movlw	208
  7081  0032C8  EC9A  F019         	call	_i2c_envia_dato
  7082                           
  7083                           ;./RTC.h: 5:     i2c_envia_dato(direccion);
  7084  0032CC  5004               	movf	escribe_rtc@direccion^0,w,c
  7085  0032CE  EC9A  F019         	call	_i2c_envia_dato
  7086                           
  7087                           ;./RTC.h: 6:     i2c_envia_dato(dato);
  7088  0032D2  5003               	movf	escribe_rtc@dato^0,w,c
  7089  0032D4  EC9A  F019         	call	_i2c_envia_dato
  7090                           
  7091                           ;./RTC.h: 7:     i2c_detener();
  7092  0032D8  ECB8  F019         	call	_i2c_detener	;wreg free
  7093  0032DC  0012               	return		;funcret
  7094  0032DE                     __end_of_escribe_rtc:
  7095                           	opt callstack 0
  7096                           
  7097 ;; *************** function ___awmod *****************
  7098 ;; Defined at:
  7099 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  7100 ;; Parameters:    Size  Location     Type
  7101 ;;  dividend        2    0[COMRAM] int 
  7102 ;;  divisor         2    2[COMRAM] int 
  7103 ;; Auto vars:     Size  Location     Type
  7104 ;;  sign            1    5[COMRAM] unsigned char 
  7105 ;;  counter         1    4[COMRAM] unsigned char 
  7106 ;; Return value:  Size  Location     Type
  7107 ;;                  2    0[COMRAM] int 
  7108 ;; Registers used:
  7109 ;;		wreg, status,2, status,0
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/0
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7115 ;;      Params:         4       0       0       0       0       0       0       0       0
  7116 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7117 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7118 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7119 ;;Total ram usage:        6 bytes
  7120 ;; Hardware stack levels used:    1
  7121 ;; Hardware stack levels required when called:    1
  7122 ;; This function calls:
  7123 ;;		Nothing
  7124 ;; This function is called by:
  7125 ;;		_setRtc
  7126 ;; This function uses a non-reentrant model
  7127 ;;
  7128                           
  7129                           	psect	text34
  7130  002584                     __ptext34:
  7131                           	opt callstack 0
  7132  002584                     ___awmod:
  7133                           	opt callstack 26
  7134  002584  0E00               	movlw	0
  7135  002586  6E06               	movwf	___awmod@sign^0,c
  7136  002588  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7137  00258A  EFCB  F012         	goto	u3170
  7138  00258E  EFC9  F012         	goto	u3171
  7139  002592                     u3171:
  7140  002592  EFD1  F012         	goto	l4144
  7141  002596                     u3170:
  7142  002596  6C01               	negf	___awmod@dividend^0,c
  7143  002598  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7144  00259A  B0D8               	btfsc	status,0,c
  7145  00259C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7146  00259E  0E01               	movlw	1
  7147  0025A0  6E06               	movwf	___awmod@sign^0,c
  7148  0025A2                     l4144:
  7149  0025A2  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7150  0025A4  EFD8  F012         	goto	u3180
  7151  0025A8  EFD6  F012         	goto	u3181
  7152  0025AC                     u3181:
  7153  0025AC  EFDC  F012         	goto	l4148
  7154  0025B0                     u3180:
  7155  0025B0  6C03               	negf	___awmod@divisor^0,c
  7156  0025B2  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7157  0025B4  B0D8               	btfsc	status,0,c
  7158  0025B6  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7159  0025B8                     l4148:
  7160  0025B8  5003               	movf	___awmod@divisor^0,w,c
  7161  0025BA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7162  0025BC  B4D8               	btfsc	status,2,c
  7163  0025BE  EFE3  F012         	goto	u3191
  7164  0025C2  EFE5  F012         	goto	u3190
  7165  0025C6                     u3191:
  7166  0025C6  EF09  F013         	goto	l4164
  7167  0025CA                     u3190:
  7168  0025CA  0E01               	movlw	1
  7169  0025CC  6E05               	movwf	___awmod@counter^0,c
  7170  0025CE  EFED  F012         	goto	l4154
  7171  0025D2                     l4152:
  7172  0025D2  90D8               	bcf	status,0,c
  7173  0025D4  3603               	rlcf	___awmod@divisor^0,f,c
  7174  0025D6  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7175  0025D8  2A05               	incf	___awmod@counter^0,f,c
  7176  0025DA                     l4154:
  7177  0025DA  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7178  0025DC  EFF2  F012         	goto	u3201
  7179  0025E0  EFF4  F012         	goto	u3200
  7180  0025E4                     u3201:
  7181  0025E4  EFE9  F012         	goto	l4152
  7182  0025E8                     u3200:
  7183  0025E8                     l4156:
  7184  0025E8  5003               	movf	___awmod@divisor^0,w,c
  7185  0025EA  5C01               	subwf	___awmod@dividend^0,w,c
  7186  0025EC  5004               	movf	(___awmod@divisor+1)^0,w,c
  7187  0025EE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7188  0025F0  A0D8               	btfss	status,0,c
  7189  0025F2  EFFD  F012         	goto	u3211
  7190  0025F6  EFFF  F012         	goto	u3210
  7191  0025FA                     u3211:
  7192  0025FA  EF03  F013         	goto	l4160
  7193  0025FE                     u3210:
  7194  0025FE  5003               	movf	___awmod@divisor^0,w,c
  7195  002600  5E01               	subwf	___awmod@dividend^0,f,c
  7196  002602  5004               	movf	(___awmod@divisor+1)^0,w,c
  7197  002604  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7198  002606                     l4160:
  7199  002606  90D8               	bcf	status,0,c
  7200  002608  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7201  00260A  3203               	rrcf	___awmod@divisor^0,f,c
  7202  00260C  2E05               	decfsz	___awmod@counter^0,f,c
  7203  00260E  EFF4  F012         	goto	l4156
  7204  002612                     l4164:
  7205  002612  5006               	movf	___awmod@sign^0,w,c
  7206  002614  B4D8               	btfsc	status,2,c
  7207  002616  EF0F  F013         	goto	u3221
  7208  00261A  EF11  F013         	goto	u3220
  7209  00261E                     u3221:
  7210  00261E  EF15  F013         	goto	l4168
  7211  002622                     u3220:
  7212  002622  6C01               	negf	___awmod@dividend^0,c
  7213  002624  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7214  002626  B0D8               	btfsc	status,0,c
  7215  002628  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7216  00262A                     l4168:
  7217  00262A  C001  F001         	movff	___awmod@dividend,?___awmod
  7218  00262E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7219  002632  0012               	return		;funcret
  7220  002634                     __end_of___awmod:
  7221                           	opt callstack 0
  7222                           
  7223 ;; *************** function ___awdiv *****************
  7224 ;; Defined at:
  7225 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  7226 ;; Parameters:    Size  Location     Type
  7227 ;;  dividend        2    0[COMRAM] int 
  7228 ;;  divisor         2    2[COMRAM] int 
  7229 ;; Auto vars:     Size  Location     Type
  7230 ;;  quotient        2    6[COMRAM] int 
  7231 ;;  sign            1    5[COMRAM] unsigned char 
  7232 ;;  counter         1    4[COMRAM] unsigned char 
  7233 ;; Return value:  Size  Location     Type
  7234 ;;                  2    0[COMRAM] int 
  7235 ;; Registers used:
  7236 ;;		wreg, status,2, status,0
  7237 ;; Tracked objects:
  7238 ;;		On entry : 0/0
  7239 ;;		On exit  : 0/0
  7240 ;;		Unchanged: 0/0
  7241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7242 ;;      Params:         4       0       0       0       0       0       0       0       0
  7243 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7244 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7245 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7246 ;;Total ram usage:        8 bytes
  7247 ;; Hardware stack levels used:    1
  7248 ;; Hardware stack levels required when called:    1
  7249 ;; This function calls:
  7250 ;;		Nothing
  7251 ;; This function is called by:
  7252 ;;		_setRtc
  7253 ;; This function uses a non-reentrant model
  7254 ;;
  7255                           
  7256                           	psect	text35
  7257  0024C0                     __ptext35:
  7258                           	opt callstack 0
  7259  0024C0                     ___awdiv:
  7260                           	opt callstack 26
  7261  0024C0  0E00               	movlw	0
  7262  0024C2  6E06               	movwf	___awdiv@sign^0,c
  7263  0024C4  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7264  0024C6  EF69  F012         	goto	u3110
  7265  0024CA  EF67  F012         	goto	u3111
  7266  0024CE                     u3111:
  7267  0024CE  EF6F  F012         	goto	l4100
  7268  0024D2                     u3110:
  7269  0024D2  6C03               	negf	___awdiv@divisor^0,c
  7270  0024D4  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7271  0024D6  B0D8               	btfsc	status,0,c
  7272  0024D8  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7273  0024DA  0E01               	movlw	1
  7274  0024DC  6E06               	movwf	___awdiv@sign^0,c
  7275  0024DE                     l4100:
  7276  0024DE  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7277  0024E0  EF76  F012         	goto	u3120
  7278  0024E4  EF74  F012         	goto	u3121
  7279  0024E8                     u3121:
  7280  0024E8  EF7C  F012         	goto	l4106
  7281  0024EC                     u3120:
  7282  0024EC  6C01               	negf	___awdiv@dividend^0,c
  7283  0024EE  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7284  0024F0  B0D8               	btfsc	status,0,c
  7285  0024F2  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7286  0024F4  0E01               	movlw	1
  7287  0024F6  1A06               	xorwf	___awdiv@sign^0,f,c
  7288  0024F8                     l4106:
  7289  0024F8  0E00               	movlw	0
  7290  0024FA  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7291  0024FC  0E00               	movlw	0
  7292  0024FE  6E07               	movwf	___awdiv@quotient^0,c
  7293  002500  5003               	movf	___awdiv@divisor^0,w,c
  7294  002502  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7295  002504  B4D8               	btfsc	status,2,c
  7296  002506  EF87  F012         	goto	u3131
  7297  00250A  EF89  F012         	goto	u3130
  7298  00250E                     u3131:
  7299  00250E  EFB1  F012         	goto	l4128
  7300  002512                     u3130:
  7301  002512  0E01               	movlw	1
  7302  002514  6E05               	movwf	___awdiv@counter^0,c
  7303  002516  EF91  F012         	goto	l4114
  7304  00251A                     l4112:
  7305  00251A  90D8               	bcf	status,0,c
  7306  00251C  3603               	rlcf	___awdiv@divisor^0,f,c
  7307  00251E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7308  002520  2A05               	incf	___awdiv@counter^0,f,c
  7309  002522                     l4114:
  7310  002522  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7311  002524  EF96  F012         	goto	u3141
  7312  002528  EF98  F012         	goto	u3140
  7313  00252C                     u3141:
  7314  00252C  EF8D  F012         	goto	l4112
  7315  002530                     u3140:
  7316  002530                     l4116:
  7317  002530  90D8               	bcf	status,0,c
  7318  002532  3607               	rlcf	___awdiv@quotient^0,f,c
  7319  002534  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7320  002536  5003               	movf	___awdiv@divisor^0,w,c
  7321  002538  5C01               	subwf	___awdiv@dividend^0,w,c
  7322  00253A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7323  00253C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7324  00253E  A0D8               	btfss	status,0,c
  7325  002540  EFA4  F012         	goto	u3151
  7326  002544  EFA6  F012         	goto	u3150
  7327  002548                     u3151:
  7328  002548  EFAB  F012         	goto	l4124
  7329  00254C                     u3150:
  7330  00254C  5003               	movf	___awdiv@divisor^0,w,c
  7331  00254E  5E01               	subwf	___awdiv@dividend^0,f,c
  7332  002550  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7333  002552  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7334  002554  8007               	bsf	___awdiv@quotient^0,0,c
  7335  002556                     l4124:
  7336  002556  90D8               	bcf	status,0,c
  7337  002558  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7338  00255A  3203               	rrcf	___awdiv@divisor^0,f,c
  7339  00255C  2E05               	decfsz	___awdiv@counter^0,f,c
  7340  00255E  EF98  F012         	goto	l4116
  7341  002562                     l4128:
  7342  002562  5006               	movf	___awdiv@sign^0,w,c
  7343  002564  B4D8               	btfsc	status,2,c
  7344  002566  EFB7  F012         	goto	u3161
  7345  00256A  EFB9  F012         	goto	u3160
  7346  00256E                     u3161:
  7347  00256E  EFBD  F012         	goto	l4132
  7348  002572                     u3160:
  7349  002572  6C07               	negf	___awdiv@quotient^0,c
  7350  002574  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7351  002576  B0D8               	btfsc	status,0,c
  7352  002578  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7353  00257A                     l4132:
  7354  00257A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7355  00257E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7356  002582  0012               	return		;funcret
  7357  002584                     __end_of___awdiv:
  7358                           	opt callstack 0
  7359                           
  7360 ;; *************** function _dameDatosSistema *****************
  7361 ;; Defined at:
  7362 ;;		line 695 in file "main.c"
  7363 ;; Parameters:    Size  Location     Type
  7364 ;;		None
  7365 ;; Auto vars:     Size  Location     Type
  7366 ;;  i               2   66[BANK0 ] int 
  7367 ;;  bufferHorari   30   28[BANK0 ] unsigned char [30]
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  1    wreg      void 
  7370 ;; Registers used:
  7371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7377 ;;      Params:         0       0       0       0       0       0       0       0       0
  7378 ;;      Locals:         0      40       0       0       0       0       0       0       0
  7379 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7380 ;;      Totals:         2      40       0       0       0       0       0       0       0
  7381 ;;Total ram usage:       42 bytes
  7382 ;; Hardware stack levels used:    1
  7383 ;; Hardware stack levels required when called:    9
  7384 ;; This function calls:
  7385 ;;		_UART_printf
  7386 ;;		_UART_write
  7387 ;;		___wmul
  7388 ;;		_limpiarBuffer
  7389 ;;		_sprintf
  7390 ;; This function is called by:
  7391 ;;		_sistemaPrincipal
  7392 ;; This function uses a non-reentrant model
  7393 ;;
  7394                           
  7395                           	psect	text36
  7396  000594                     __ptext36:
  7397                           	opt callstack 0
  7398  000594                     _dameDatosSistema:
  7399                           	opt callstack 20
  7400  000594                     
  7401                           ;main.c: 697:     char bufferHorario[30];;main.c: 699:     UART_write('I');
  7402  000594  0E49               	movlw	73
  7403  000596  EC7C  F019         	call	_UART_write
  7404  00059A                     
  7405                           ;main.c: 701:     UART_printf("\r\nH = HORA\r\n");
  7406  00059A  0ED4               	movlw	low STR_36
  7407  00059C  6E02               	movwf	UART_printf@cadena^0,c
  7408  00059E  0E7F               	movlw	high STR_36
  7409  0005A0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7410  0005A2  EC50  F016         	call	_UART_printf	;wreg free
  7411  0005A6                     
  7412                           ;main.c: 702:     UART_printf("\r\nR = REGAR( 1 SI | 0 NO)\r\n");
  7413  0005A6  0ED6               	movlw	low STR_37
  7414  0005A8  6E02               	movwf	UART_printf@cadena^0,c
  7415  0005AA  0E7D               	movlw	high STR_37
  7416  0005AC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7417  0005AE  EC50  F016         	call	_UART_printf	;wreg free
  7418  0005B2                     
  7419                           ;main.c: 703:     UART_printf("\r\nT = MINUTOS QUE DURARA EL RIEGO\r\n");
  7420  0005B2  0EB1               	movlw	low STR_38
  7421  0005B4  6E02               	movwf	UART_printf@cadena^0,c
  7422  0005B6  0E7C               	movlw	high STR_38
  7423  0005B8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7424  0005BA  EC50  F016         	call	_UART_printf	;wreg free
  7425  0005BE                     
  7426                           ;main.c: 704:     UART_printf("\r\nD = DIAS QUE EN LOS QUE SE REGARA\r\n");
  7427  0005BE  0E8A               	movlw	low STR_39
  7428  0005C0  6E02               	movwf	UART_printf@cadena^0,c
  7429  0005C2  0E7B               	movlw	high STR_39
  7430  0005C4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7431  0005C6  EC50  F016         	call	_UART_printf	;wreg free
  7432  0005CA                     
  7433                           ;main.c: 706:     UART_printf("                DLMIJVS\r\n");
  7434  0005CA  0E5C               	movlw	low STR_40
  7435  0005CC  6E02               	movwf	UART_printf@cadena^0,c
  7436  0005CE  0E7E               	movlw	high STR_40
  7437  0005D0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7438  0005D2  EC50  F016         	call	_UART_printf	;wreg free
  7439  0005D6                     
  7440                           ;main.c: 709:     for (int i = 0; i < 24; i++) {
  7441  0005D6  0E00               	movlw	0
  7442  0005D8  0100               	movlb	0	; () banked
  7443  0005DA  6FF0               	movwf	(dameDatosSistema@i+1)& (0+255),b
  7444  0005DC  0E00               	movlw	0
  7445  0005DE  6FEF               	movwf	dameDatosSistema@i& (0+255),b
  7446  0005E0                     l4572:
  7447                           
  7448                           ; BSR set to: 0
  7449                           ;main.c: 711:         if (horarios[i].regar) {
  7450  0005E0  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  7451  0005E4  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  7452  0005E8  0E00               	movlw	0
  7453  0005EA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7454  0005EC  0E0C               	movlw	12
  7455  0005EE  6E03               	movwf	___wmul@multiplicand^0,c
  7456  0005F0  EC2D  F019         	call	___wmul	;wreg free
  7457  0005F4  0E3B               	movlw	low (_horarios+9)
  7458  0005F6  2401               	addwf	?___wmul^0,w,c
  7459  0005F8  6ED9               	movwf	fsr2l,c
  7460  0005FA  0E01               	movlw	high (_horarios+9)
  7461  0005FC  2002               	addwfc	(?___wmul+1)^0,w,c
  7462  0005FE  6EDA               	movwf	fsr2h,c
  7463  000600  50DF               	movf	indf2,w,c
  7464  000602  B4D8               	btfsc	status,2,c
  7465  000604  EF06  F003         	goto	u3581
  7466  000608  EF08  F003         	goto	u3580
  7467  00060C                     u3581:
  7468  00060C  EF7B  F003         	goto	l4582
  7469  000610                     u3580:
  7470  000610                     
  7471                           ;main.c: 713:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  7472  000610  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  7473  000614  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  7474  000618  0E00               	movlw	0
  7475  00061A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7476  00061C  0E0C               	movlw	12
  7477  00061E  6E03               	movwf	___wmul@multiplicand^0,c
  7478  000620  EC2D  F019         	call	___wmul	;wreg free
  7479  000624  0E32               	movlw	low _horarios
  7480  000626  2401               	addwf	?___wmul^0,w,c
  7481  000628  6ED9               	movwf	fsr2l,c
  7482  00062A  0E01               	movlw	high _horarios
  7483  00062C  2002               	addwfc	(?___wmul+1)^0,w,c
  7484  00062E  6EDA               	movwf	fsr2h,c
  7485  000630  50DF               	movf	indf2,w,c
  7486  000632  6E5D               	movwf	??_dameDatosSistema^0,c
  7487  000634  505D               	movf	??_dameDatosSistema^0,w,c
  7488  000636  0100               	movlb	0	; () banked
  7489  000638  6FE7               	movwf	_dameDatosSistema$1925& (0+255),b
  7490  00063A  6BE8               	clrf	(_dameDatosSistema$1925+1)& (0+255),b
  7491                           
  7492                           ;main.c: 713:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  7493  00063C  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  7494  000640  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  7495  000644  0E00               	movlw	0
  7496  000646  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7497  000648  0E0C               	movlw	12
  7498  00064A  6E03               	movwf	___wmul@multiplicand^0,c
  7499  00064C  EC2D  F019         	call	___wmul	;wreg free
  7500  000650  0E3B               	movlw	low (_horarios+9)
  7501  000652  2401               	addwf	?___wmul^0,w,c
  7502  000654  6ED9               	movwf	fsr2l,c
  7503  000656  0E01               	movlw	high (_horarios+9)
  7504  000658  2002               	addwfc	(?___wmul+1)^0,w,c
  7505  00065A  6EDA               	movwf	fsr2h,c
  7506  00065C  50DF               	movf	indf2,w,c
  7507  00065E  6E5D               	movwf	??_dameDatosSistema^0,c
  7508  000660  505D               	movf	??_dameDatosSistema^0,w,c
  7509  000662  0100               	movlb	0	; () banked
  7510  000664  6FE9               	movwf	_dameDatosSistema$1926& (0+255),b
  7511  000666  6BEA               	clrf	(_dameDatosSistema$1926+1)& (0+255),b
  7512                           
  7513                           ;main.c: 713:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  7514  000668  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  7515  00066C  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  7516  000670  0E00               	movlw	0
  7517  000672  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7518  000674  0E0C               	movlw	12
  7519  000676  6E03               	movwf	___wmul@multiplicand^0,c
  7520  000678  EC2D  F019         	call	___wmul	;wreg free
  7521  00067C  0E3D               	movlw	low (_horarios+11)
  7522  00067E  2401               	addwf	?___wmul^0,w,c
  7523  000680  6ED9               	movwf	fsr2l,c
  7524  000682  0E01               	movlw	high (_horarios+11)
  7525  000684  2002               	addwfc	(?___wmul+1)^0,w,c
  7526  000686  6EDA               	movwf	fsr2h,c
  7527  000688  50DF               	movf	indf2,w,c
  7528  00068A  6E5D               	movwf	??_dameDatosSistema^0,c
  7529  00068C  505D               	movf	??_dameDatosSistema^0,w,c
  7530  00068E  0100               	movlb	0	; () banked
  7531  000690  6FEB               	movwf	_dameDatosSistema$1927& (0+255),b
  7532  000692  6BEC               	clrf	(_dameDatosSistema$1927+1)& (0+255),b
  7533  000694                     
  7534                           ; BSR set to: 0
  7535                           ;main.c: 713:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  7536  000694  C0EF  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  7537  000698  C0F0  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  7538  00069C  0E00               	movlw	0
  7539  00069E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7540  0006A0  0E0C               	movlw	12
  7541  0006A2  6E03               	movwf	___wmul@multiplicand^0,c
  7542  0006A4  EC2D  F019         	call	___wmul	;wreg free
  7543  0006A8  0E33               	movlw	low (_horarios+1)
  7544  0006AA  2401               	addwf	?___wmul^0,w,c
  7545  0006AC  0100               	movlb	0	; () banked
  7546  0006AE  6FED               	movwf	_dameDatosSistema$1928& (0+255),b
  7547  0006B0  0E01               	movlw	high (_horarios+1)
  7548  0006B2  2002               	addwfc	(?___wmul+1)^0,w,c
  7549  0006B4  6FEE               	movwf	(_dameDatosSistema$1928+1)& (0+255),b
  7550  0006B6                     
  7551                           ; BSR set to: 0
  7552                           ;main.c: 713:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  7553  0006B6  0EC9               	movlw	low dameDatosSistema@bufferHorario
  7554  0006B8  6FB3               	movwf	sprintf@s& (0+255),b
  7555  0006BA  0E00               	movlw	high dameDatosSistema@bufferHorario
  7556  0006BC  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7557  0006BE  0E22               	movlw	low STR_41
  7558  0006C0  6FB5               	movwf	sprintf@fmt& (0+255),b
  7559  0006C2  0E7F               	movlw	high STR_41
  7560  0006C4  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7561  0006C6  C0E7  F0B7         	movff	_dameDatosSistema$1925,?_sprintf+4
  7562  0006CA  C0E8  F0B8         	movff	_dameDatosSistema$1925+1,?_sprintf+5
  7563  0006CE  C0E9  F0B9         	movff	_dameDatosSistema$1926,?_sprintf+6
  7564  0006D2  C0EA  F0BA         	movff	_dameDatosSistema$1926+1,?_sprintf+7
  7565  0006D6  C0EB  F0BB         	movff	_dameDatosSistema$1927,?_sprintf+8
  7566  0006DA  C0EC  F0BC         	movff	_dameDatosSistema$1927+1,?_sprintf+9
  7567  0006DE  C0ED  F0BD         	movff	_dameDatosSistema$1928,?_sprintf+10
  7568  0006E2  C0EE  F0BE         	movff	_dameDatosSistema$1928+1,?_sprintf+11
  7569  0006E6  EC31  F017         	call	_sprintf	;wreg free
  7570  0006EA                     
  7571                           ;main.c: 717:             UART_printf(bufferHorario);
  7572  0006EA  0EC9               	movlw	low dameDatosSistema@bufferHorario
  7573  0006EC  6E02               	movwf	UART_printf@cadena^0,c
  7574  0006EE  0E00               	movlw	high dameDatosSistema@bufferHorario
  7575  0006F0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7576  0006F2  EC50  F016         	call	_UART_printf	;wreg free
  7577  0006F6                     l4582:
  7578                           
  7579                           ;main.c: 721:     }
  7580  0006F6  0100               	movlb	0	; () banked
  7581  0006F8  4BEF               	infsnz	dameDatosSistema@i& (0+255),f,b
  7582  0006FA  2BF0               	incf	(dameDatosSistema@i+1)& (0+255),f,b
  7583  0006FC                     
  7584                           ; BSR set to: 0
  7585  0006FC  BFF0               	btfsc	(dameDatosSistema@i+1)& (0+255),7,b
  7586  0006FE  EF8A  F003         	goto	u3591
  7587  000702  51F0               	movf	(dameDatosSistema@i+1)& (0+255),w,b
  7588  000704  E109               	bnz	u3590
  7589  000706  0E18               	movlw	24
  7590  000708  5DEF               	subwf	dameDatosSistema@i& (0+255),w,b
  7591  00070A  A0D8               	btfss	status,0,c
  7592  00070C  EF8A  F003         	goto	u3591
  7593  000710  EF8C  F003         	goto	u3590
  7594  000714                     u3591:
  7595  000714  EFF0  F002         	goto	l4572
  7596  000718                     u3590:
  7597  000718                     
  7598                           ; BSR set to: 0
  7599                           ;main.c: 723:     limpiarBuffer();
  7600  000718  EC0F  F018         	call	_limpiarBuffer	;wreg free
  7601                           
  7602                           ;main.c: 725:     switch (diaActual) {
  7603  00071C  EF0E  F004         	goto	l4604
  7604  000720                     l4588:
  7605                           
  7606                           ; BSR set to: 0
  7607                           ;main.c: 727:             sprintf(buffer, "\r\n%0.2d:%0.2d| DOMINGO\r\n", hora, minutos)
      +                          ;
  7608  000720  0E00               	movlw	low _buffer
  7609  000722  6FB3               	movwf	sprintf@s& (0+255),b
  7610  000724  0E01               	movlw	high _buffer
  7611  000726  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7612  000728  0EA8               	movlw	low STR_42
  7613  00072A  6FB5               	movwf	sprintf@fmt& (0+255),b
  7614  00072C  0E7E               	movlw	high STR_42
  7615  00072E  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7616  000730  C087  F0B7         	movff	_hora,?_sprintf+4
  7617  000734  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  7618  000736  C086  F0B9         	movff	_minutos,?_sprintf+6
  7619  00073A  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  7620  00073C  EC31  F017         	call	_sprintf	;wreg free
  7621                           
  7622                           ;main.c: 728:             break;
  7623  000740  EF38  F004         	goto	l4606
  7624  000744                     l4590:
  7625                           
  7626                           ; BSR set to: 0
  7627                           ;main.c: 731:             sprintf(buffer, "\r\n%0.2d:%0.2d| LUNES\r\n", hora, minutos);
  7628  000744  0E00               	movlw	low _buffer
  7629  000746  6FB3               	movwf	sprintf@s& (0+255),b
  7630  000748  0E01               	movlw	high _buffer
  7631  00074A  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7632  00074C  0E68               	movlw	low STR_43
  7633  00074E  6FB5               	movwf	sprintf@fmt& (0+255),b
  7634  000750  0E7F               	movlw	high STR_43
  7635  000752  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7636  000754  C087  F0B7         	movff	_hora,?_sprintf+4
  7637  000758  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  7638  00075A  C086  F0B9         	movff	_minutos,?_sprintf+6
  7639  00075E  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  7640  000760  EC31  F017         	call	_sprintf	;wreg free
  7641                           
  7642                           ;main.c: 732:             break;
  7643  000764  EF38  F004         	goto	l4606
  7644  000768                     l4592:
  7645                           
  7646                           ; BSR set to: 0
  7647                           ;main.c: 735:             sprintf(buffer, "\r\n%0.2d:%0.2d| MARTES\r\n", hora, minutos);
  7648  000768  0E00               	movlw	low _buffer
  7649  00076A  6FB3               	movwf	sprintf@s& (0+255),b
  7650  00076C  0E01               	movlw	high _buffer
  7651  00076E  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7652  000770  0EF2               	movlw	low STR_44
  7653  000772  6FB5               	movwf	sprintf@fmt& (0+255),b
  7654  000774  0E7E               	movlw	high STR_44
  7655  000776  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7656  000778  C087  F0B7         	movff	_hora,?_sprintf+4
  7657  00077C  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  7658  00077E  C086  F0B9         	movff	_minutos,?_sprintf+6
  7659  000782  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  7660  000784  EC31  F017         	call	_sprintf	;wreg free
  7661                           
  7662                           ;main.c: 736:             break;
  7663  000788  EF38  F004         	goto	l4606
  7664  00078C                     l4594:
  7665                           
  7666                           ; BSR set to: 0
  7667                           ;main.c: 739:             sprintf(buffer, "\r\n%0.2d:%0.2d| MIERCOLES\r\n", hora, minuto
      +                          s);
  7668  00078C  0E00               	movlw	low _buffer
  7669  00078E  6FB3               	movwf	sprintf@s& (0+255),b
  7670  000790  0E01               	movlw	high _buffer
  7671  000792  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7672  000794  0E0D               	movlw	low STR_45
  7673  000796  6FB5               	movwf	sprintf@fmt& (0+255),b
  7674  000798  0E7E               	movlw	high STR_45
  7675  00079A  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7676  00079C  C087  F0B7         	movff	_hora,?_sprintf+4
  7677  0007A0  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  7678  0007A2  C086  F0B9         	movff	_minutos,?_sprintf+6
  7679  0007A6  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  7680  0007A8  EC31  F017         	call	_sprintf	;wreg free
  7681                           
  7682                           ;main.c: 740:             break;
  7683  0007AC  EF38  F004         	goto	l4606
  7684  0007B0                     l4596:
  7685                           
  7686                           ; BSR set to: 0
  7687                           ;main.c: 743:             sprintf(buffer, "\r\n%0.2d:%0.2d| JUEVES\r\n", hora, minutos);
  7688  0007B0  0E00               	movlw	low _buffer
  7689  0007B2  6FB3               	movwf	sprintf@s& (0+255),b
  7690  0007B4  0E01               	movlw	high _buffer
  7691  0007B6  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7692  0007B8  0E0A               	movlw	low STR_46
  7693  0007BA  6FB5               	movwf	sprintf@fmt& (0+255),b
  7694  0007BC  0E7F               	movlw	high STR_46
  7695  0007BE  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7696  0007C0  C087  F0B7         	movff	_hora,?_sprintf+4
  7697  0007C4  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  7698  0007C6  C086  F0B9         	movff	_minutos,?_sprintf+6
  7699  0007CA  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  7700  0007CC  EC31  F017         	call	_sprintf	;wreg free
  7701                           
  7702                           ;main.c: 744:             break;
  7703  0007D0  EF38  F004         	goto	l4606
  7704  0007D4                     l4598:
  7705                           
  7706                           ; BSR set to: 0
  7707                           ;main.c: 747:             sprintf(buffer, "\r\n%0.2d:%0.2d| VIERNES\r\n", hora, minutos)
      +                          ;
  7708  0007D4  0E00               	movlw	low _buffer
  7709  0007D6  6FB3               	movwf	sprintf@s& (0+255),b
  7710  0007D8  0E01               	movlw	high _buffer
  7711  0007DA  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7712  0007DC  0EC1               	movlw	low STR_47
  7713  0007DE  6FB5               	movwf	sprintf@fmt& (0+255),b
  7714  0007E0  0E7E               	movlw	high STR_47
  7715  0007E2  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7716  0007E4  C087  F0B7         	movff	_hora,?_sprintf+4
  7717  0007E8  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  7718  0007EA  C086  F0B9         	movff	_minutos,?_sprintf+6
  7719  0007EE  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  7720  0007F0  EC31  F017         	call	_sprintf	;wreg free
  7721                           
  7722                           ;main.c: 748:             break;
  7723  0007F4  EF38  F004         	goto	l4606
  7724  0007F8                     l4600:
  7725                           
  7726                           ; BSR set to: 0
  7727                           ;main.c: 751:             sprintf(buffer, "\r\n%0.2d:%0.2d| SABADO\r\n", hora, minutos);
  7728  0007F8  0E00               	movlw	low _buffer
  7729  0007FA  6FB3               	movwf	sprintf@s& (0+255),b
  7730  0007FC  0E01               	movlw	high _buffer
  7731  0007FE  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  7732  000800  0EDA               	movlw	low STR_48
  7733  000802  6FB5               	movwf	sprintf@fmt& (0+255),b
  7734  000804  0E7E               	movlw	high STR_48
  7735  000806  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  7736  000808  C087  F0B7         	movff	_hora,?_sprintf+4
  7737  00080C  6BB8               	clrf	(?_sprintf+5)& (0+255),b
  7738  00080E  C086  F0B9         	movff	_minutos,?_sprintf+6
  7739  000812  6BBA               	clrf	(?_sprintf+7)& (0+255),b
  7740  000814  EC31  F017         	call	_sprintf	;wreg free
  7741                           
  7742                           ;main.c: 752:             break;
  7743  000818  EF38  F004         	goto	l4606
  7744  00081C                     l4604:
  7745  00081C  0100               	movlb	0	; () banked
  7746  00081E  5184               	movf	_diaActual& (0+255),w,b
  7747  000820  6E5D               	movwf	??_dameDatosSistema^0,c
  7748  000822  6A5E               	clrf	(??_dameDatosSistema+1)^0,c
  7749                           
  7750                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7751                           ; Switch size 1, requested type "simple"
  7752                           ; Number of cases is 1, Range of values is 0 to 0
  7753                           ; switch strategies available:
  7754                           ; Name         Instructions Cycles
  7755                           ; simple_byte            4     3 (average)
  7756                           ;	Chosen strategy is simple_byte
  7757  000824  505E               	movf	(??_dameDatosSistema+1)^0,w,c
  7758  000826  0A00               	xorlw	0	; case 0
  7759  000828  B4D8               	btfsc	status,2,c
  7760  00082A  EF19  F004         	goto	l5170
  7761  00082E  EF38  F004         	goto	l4606
  7762  000832                     l5170:
  7763                           
  7764                           ; BSR set to: 0
  7765                           ; Switch size 1, requested type "simple"
  7766                           ; Number of cases is 7, Range of values is 1 to 7
  7767                           ; switch strategies available:
  7768                           ; Name         Instructions Cycles
  7769                           ; simple_byte           22    12 (average)
  7770                           ;	Chosen strategy is simple_byte
  7771  000832  505D               	movf	??_dameDatosSistema^0,w,c
  7772  000834  0A01               	xorlw	1	; case 1
  7773  000836  B4D8               	btfsc	status,2,c
  7774  000838  EF90  F003         	goto	l4588
  7775  00083C  0A03               	xorlw	3	; case 2
  7776  00083E  B4D8               	btfsc	status,2,c
  7777  000840  EFA2  F003         	goto	l4590
  7778  000844  0A01               	xorlw	1	; case 3
  7779  000846  B4D8               	btfsc	status,2,c
  7780  000848  EFB4  F003         	goto	l4592
  7781  00084C  0A07               	xorlw	7	; case 4
  7782  00084E  B4D8               	btfsc	status,2,c
  7783  000850  EFC6  F003         	goto	l4594
  7784  000854  0A01               	xorlw	1	; case 5
  7785  000856  B4D8               	btfsc	status,2,c
  7786  000858  EFD8  F003         	goto	l4596
  7787  00085C  0A03               	xorlw	3	; case 6
  7788  00085E  B4D8               	btfsc	status,2,c
  7789  000860  EFEA  F003         	goto	l4598
  7790  000864  0A01               	xorlw	1	; case 7
  7791  000866  B4D8               	btfsc	status,2,c
  7792  000868  EFFC  F003         	goto	l4600
  7793  00086C  EF38  F004         	goto	l4606
  7794  000870                     l4606:
  7795                           
  7796                           ;main.c: 759:     UART_printf(buffer);
  7797  000870  0E00               	movlw	low _buffer
  7798  000872  6E02               	movwf	UART_printf@cadena^0,c
  7799  000874  0E01               	movlw	high _buffer
  7800  000876  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7801  000878  EC50  F016         	call	_UART_printf	;wreg free
  7802  00087C                     
  7803                           ;main.c: 761:     UART_write('I');
  7804  00087C  0E49               	movlw	73
  7805  00087E  EC7C  F019         	call	_UART_write
  7806  000882  0012               	return		;funcret
  7807  000884                     __end_of_dameDatosSistema:
  7808                           	opt callstack 0
  7809                           
  7810 ;; *************** function _limpiarBuffer *****************
  7811 ;; Defined at:
  7812 ;;		line 1042 in file "main.c"
  7813 ;; Parameters:    Size  Location     Type
  7814 ;;		None
  7815 ;; Auto vars:     Size  Location     Type
  7816 ;;  i               2    0[COMRAM] int 
  7817 ;; Return value:  Size  Location     Type
  7818 ;;                  1    wreg      void 
  7819 ;; Registers used:
  7820 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7821 ;; Tracked objects:
  7822 ;;		On entry : 0/0
  7823 ;;		On exit  : 0/0
  7824 ;;		Unchanged: 0/0
  7825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7826 ;;      Params:         0       0       0       0       0       0       0       0       0
  7827 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7828 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7829 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7830 ;;Total ram usage:        2 bytes
  7831 ;; Hardware stack levels used:    1
  7832 ;; Hardware stack levels required when called:    1
  7833 ;; This function calls:
  7834 ;;		Nothing
  7835 ;; This function is called by:
  7836 ;;		_lecturaWifi
  7837 ;;		_dameDatosSistema
  7838 ;;		_mostrarDatosSensores
  7839 ;;		_mostrarDatosSensoresWIFI
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           	psect	text37
  7844  00301E                     __ptext37:
  7845                           	opt callstack 0
  7846  00301E                     _limpiarBuffer:
  7847                           	opt callstack 27
  7848  00301E                     
  7849                           ;main.c: 1043:     for (int i = 0; i < 50; i++) {
  7850  00301E  0E00               	movlw	0
  7851  003020  6E02               	movwf	(limpiarBuffer@i+1)^0,c
  7852  003022  0E00               	movlw	0
  7853  003024  6E01               	movwf	limpiarBuffer@i^0,c
  7854  003026                     l4084:
  7855                           
  7856                           ;main.c: 1044:         buffer[i] = 0;
  7857  003026  0E00               	movlw	low _buffer
  7858  003028  2401               	addwf	limpiarBuffer@i^0,w,c
  7859  00302A  6ED9               	movwf	fsr2l,c
  7860  00302C  0E01               	movlw	high _buffer
  7861  00302E  2002               	addwfc	(limpiarBuffer@i+1)^0,w,c
  7862  003030  6EDA               	movwf	fsr2h,c
  7863  003032  0E00               	movlw	0
  7864  003034  6EDF               	movwf	indf2,c
  7865  003036                     
  7866                           ;main.c: 1045:     }
  7867  003036  4A01               	infsnz	limpiarBuffer@i^0,f,c
  7868  003038  2A02               	incf	(limpiarBuffer@i+1)^0,f,c
  7869  00303A  BE02               	btfsc	(limpiarBuffer@i+1)^0,7,c
  7870  00303C  EF29  F018         	goto	u3101
  7871  003040  5002               	movf	(limpiarBuffer@i+1)^0,w,c
  7872  003042  E109               	bnz	u3100
  7873  003044  0E32               	movlw	50
  7874  003046  5C01               	subwf	limpiarBuffer@i^0,w,c
  7875  003048  A0D8               	btfss	status,0,c
  7876  00304A  EF29  F018         	goto	u3101
  7877  00304E  EF2B  F018         	goto	u3100
  7878  003052                     u3101:
  7879  003052  EF13  F018         	goto	l4084
  7880  003056                     u3100:
  7881  003056                     
  7882                           ;main.c: 1047:     buffer[50 - 1] = '\0';
  7883  003056  0E00               	movlw	0
  7884  003058  0101               	movlb	1	; () banked
  7885  00305A  6F31               	movwf	(_buffer+49)& (0+255),b
  7886  00305C                     
  7887                           ; BSR set to: 1
  7888  00305C  0012               	return		;funcret
  7889  00305E                     __end_of_limpiarBuffer:
  7890                           	opt callstack 0
  7891                           
  7892 ;; *************** function _asignarHorarios *****************
  7893 ;; Defined at:
  7894 ;;		line 404 in file "main.c"
  7895 ;; Parameters:    Size  Location     Type
  7896 ;;		None
  7897 ;; Auto vars:     Size  Location     Type
  7898 ;;  i               2   29[BANK0 ] int 
  7899 ;;  Rx              1   32[BANK0 ] unsigned char 
  7900 ;;  hora            1   31[BANK0 ] unsigned char 
  7901 ;;  diaRegar        1   28[BANK0 ] unsigned char 
  7902 ;; Return value:  Size  Location     Type
  7903 ;;                  1    wreg      void 
  7904 ;; Registers used:
  7905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7906 ;; Tracked objects:
  7907 ;;		On entry : 0/0
  7908 ;;		On exit  : 0/0
  7909 ;;		Unchanged: 0/0
  7910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7911 ;;      Params:         0       0       0       0       0       0       0       0       0
  7912 ;;      Locals:         0       5       0       0       0       0       0       0       0
  7913 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7914 ;;      Totals:         2       5       0       0       0       0       0       0       0
  7915 ;;Total ram usage:        7 bytes
  7916 ;; Hardware stack levels used:    1
  7917 ;; Hardware stack levels required when called:    9
  7918 ;; This function calls:
  7919 ;;		_UART_printf
  7920 ;;		_escribeHorariosMemoria
  7921 ;;		_getValue
  7922 ;;		_sprintf
  7923 ;; This function is called by:
  7924 ;;		_sistemaPrincipal
  7925 ;; This function uses a non-reentrant model
  7926 ;;
  7927                           
  7928                           	psect	text38
  7929  000FF4                     __ptext38:
  7930                           	opt callstack 0
  7931  000FF4                     _asignarHorarios:
  7932                           	opt callstack 20
  7933  000FF4                     
  7934                           ;main.c: 406:     unsigned char hora;;main.c: 407:     unsigned char Rx;;main.c: 408:   
      +                            unsigned char diaRegar;;main.c: 410:     UART_printf("\r\n OPCIONES DE REGADO \r\n");
  7935  000FF4  0E76               	movlw	low STR_9
  7936  000FF6  6E02               	movwf	UART_printf@cadena^0,c
  7937  000FF8  0E7E               	movlw	high STR_9
  7938  000FFA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7939  000FFC  EC50  F016         	call	_UART_printf	;wreg free
  7940                           
  7941                           ;main.c: 412:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  7942  001000  0E4B               	movlw	low STR_10
  7943  001002  6E02               	movwf	UART_printf@cadena^0,c
  7944  001004  0E7A               	movlw	high STR_10
  7945  001006  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7946  001008  EC50  F016         	call	_UART_printf	;wreg free
  7947  00100C                     
  7948                           ;main.c: 413:     hora = getValue(2);
  7949  00100C  0E00               	movlw	0
  7950  00100E  6E05               	movwf	(getValue@numCharacters+1)^0,c
  7951  001010  0E02               	movlw	2
  7952  001012  6E04               	movwf	getValue@numCharacters^0,c
  7953  001014  ECE8  F006         	call	_getValue	;wreg free
  7954  001018  0100               	movlb	0	; () banked
  7955  00101A  6FCC               	movwf	asignarHorarios@hora& (0+255),b
  7956  00101C                     
  7957                           ; BSR set to: 0
  7958                           ;main.c: 415:     if (hora != '@') {
  7959  00101C  0E40               	movlw	64
  7960  00101E  19CC               	xorwf	asignarHorarios@hora& (0+255),w,b
  7961  001020  B4D8               	btfsc	status,2,c
  7962  001022  EF15  F008         	goto	u3511
  7963  001026  EF17  F008         	goto	u3510
  7964  00102A                     u3511:
  7965  00102A  EFD6  F008         	goto	l327
  7966  00102E                     u3510:
  7967  00102E                     
  7968                           ; BSR set to: 0
  7969                           ;main.c: 417:         UART_printf("\r\n Ingrese 1 para activar || ingrese 0 para desacti
      +                          var: \r\n");
  7970  00102E  0E64               	movlw	low STR_11
  7971  001030  6E02               	movwf	UART_printf@cadena^0,c
  7972  001032  0E79               	movlw	high STR_11
  7973  001034  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7974  001036  EC50  F016         	call	_UART_printf	;wreg free
  7975  00103A                     
  7976                           ;main.c: 419:         Rx = getValue(1);
  7977  00103A  0E00               	movlw	0
  7978  00103C  6E05               	movwf	(getValue@numCharacters+1)^0,c
  7979  00103E  0E01               	movlw	1
  7980  001040  6E04               	movwf	getValue@numCharacters^0,c
  7981  001042  ECE8  F006         	call	_getValue	;wreg free
  7982  001046  0100               	movlb	0	; () banked
  7983  001048  6FCD               	movwf	asignarHorarios@Rx& (0+255),b
  7984  00104A                     
  7985                           ; BSR set to: 0
  7986                           ;main.c: 422:         if (Rx == 1) {
  7987  00104A  05CD               	decf	asignarHorarios@Rx& (0+255),w,b
  7988  00104C  A4D8               	btfss	status,2,c
  7989  00104E  EF2B  F008         	goto	u3521
  7990  001052  EF2D  F008         	goto	u3520
  7991  001056                     u3521:
  7992  001056  EFBE  F008         	goto	l4522
  7993  00105A                     u3520:
  7994  00105A                     
  7995                           ; BSR set to: 0
  7996                           ;main.c: 424:             UART_printf("\r\n Ingrese 1 para activar || ingrese 0 para des
      +                          activar: \r\n");
  7997  00105A  0E64               	movlw	low STR_11
  7998  00105C  6E02               	movwf	UART_printf@cadena^0,c
  7999  00105E  0E79               	movlw	high STR_11
  8000  001060  6E03               	movwf	(UART_printf@cadena+1)^0,c
  8001  001062  EC50  F016         	call	_UART_printf	;wreg free
  8002                           
  8003                           ;main.c: 425:             UART_printf("\r\n DOMINGO = [1] ... SABADO = [7] \r\n");
  8004  001066  0E1F               	movlw	low STR_13
  8005  001068  6E02               	movwf	UART_printf@cadena^0,c
  8006  00106A  0E7C               	movlw	high STR_13
  8007  00106C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  8008  00106E  EC50  F016         	call	_UART_printf	;wreg free
  8009  001072                     
  8010                           ;main.c: 427:             for (int i = 0; i < 7; i++) {
  8011  001072  0E00               	movlw	0
  8012  001074  0100               	movlb	0	; () banked
  8013  001076  6FCB               	movwf	(asignarHorarios@i+1)& (0+255),b
  8014  001078  0E00               	movlw	0
  8015  00107A  6FCA               	movwf	asignarHorarios@i& (0+255),b
  8016  00107C                     l4492:
  8017                           
  8018                           ; BSR set to: 0
  8019                           ;main.c: 428:                 sprintf(buffer, "\r\n[%d]: ", i + 1);
  8020  00107C  0E00               	movlw	low _buffer
  8021  00107E  6FB3               	movwf	sprintf@s& (0+255),b
  8022  001080  0E01               	movlw	high _buffer
  8023  001082  6FB4               	movwf	(sprintf@s+1)& (0+255),b
  8024  001084  0EEC               	movlw	low STR_14
  8025  001086  6FB5               	movwf	sprintf@fmt& (0+255),b
  8026  001088  0E7F               	movlw	high STR_14
  8027  00108A  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
  8028  00108C  0E01               	movlw	1
  8029  00108E  25CA               	addwf	asignarHorarios@i& (0+255),w,b
  8030  001090  6FB7               	movwf	(?_sprintf+4)& (0+255),b
  8031  001092  0E00               	movlw	0
  8032  001094  21CB               	addwfc	(asignarHorarios@i+1)& (0+255),w,b
  8033  001096  6FB8               	movwf	(?_sprintf+5)& (0+255),b
  8034  001098  EC31  F017         	call	_sprintf	;wreg free
  8035  00109C                     
  8036                           ;main.c: 429:                 UART_printf(buffer);
  8037  00109C  0E00               	movlw	low _buffer
  8038  00109E  6E02               	movwf	UART_printf@cadena^0,c
  8039  0010A0  0E01               	movlw	high _buffer
  8040  0010A2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  8041  0010A4  EC50  F016         	call	_UART_printf	;wreg free
  8042  0010A8                     
  8043                           ;main.c: 430:                 diaRegar = getValue(1);
  8044  0010A8  0E00               	movlw	0
  8045  0010AA  6E05               	movwf	(getValue@numCharacters+1)^0,c
  8046  0010AC  0E01               	movlw	1
  8047  0010AE  6E04               	movwf	getValue@numCharacters^0,c
  8048  0010B0  ECE8  F006         	call	_getValue	;wreg free
  8049  0010B4  0100               	movlb	0	; () banked
  8050  0010B6  6FC9               	movwf	asignarHorarios@diaRegar& (0+255),b
  8051  0010B8                     
  8052                           ; BSR set to: 0
  8053                           ;main.c: 432:                 if (diaRegar != '@') {
  8054  0010B8  0E40               	movlw	64
  8055  0010BA  19C9               	xorwf	asignarHorarios@diaRegar& (0+255),w,b
  8056  0010BC  B4D8               	btfsc	status,2,c
  8057  0010BE  EF63  F008         	goto	u3531
  8058  0010C2  EF65  F008         	goto	u3530
  8059  0010C6                     u3531:
  8060  0010C6  EF9A  F008         	goto	l4512
  8061  0010CA                     u3530:
  8062  0010CA  EF6F  F008         	goto	l4508
  8063  0010CE                     l4502:
  8064                           
  8065                           ; BSR set to: 0
  8066                           ;main.c: 436:                             diaRegar = '0';
  8067  0010CE  0E30               	movlw	48
  8068  0010D0  6FC9               	movwf	asignarHorarios@diaRegar& (0+255),b
  8069                           
  8070                           ;main.c: 437:                             break;
  8071  0010D2  EF84  F008         	goto	l4510
  8072  0010D6                     l4504:
  8073                           
  8074                           ; BSR set to: 0
  8075                           ;main.c: 440:                             diaRegar = '1';
  8076  0010D6  0E31               	movlw	49
  8077  0010D8  6FC9               	movwf	asignarHorarios@diaRegar& (0+255),b
  8078                           
  8079                           ;main.c: 441:                             break;
  8080  0010DA  EF84  F008         	goto	l4510
  8081  0010DE                     l4508:
  8082                           
  8083                           ; BSR set to: 0
  8084  0010DE  51C9               	movf	asignarHorarios@diaRegar& (0+255),w,b
  8085  0010E0  6E5D               	movwf	??_asignarHorarios^0,c
  8086  0010E2  6A5E               	clrf	(??_asignarHorarios+1)^0,c
  8087                           
  8088                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8089                           ; Switch size 1, requested type "simple"
  8090                           ; Number of cases is 1, Range of values is 0 to 0
  8091                           ; switch strategies available:
  8092                           ; Name         Instructions Cycles
  8093                           ; simple_byte            4     3 (average)
  8094                           ;	Chosen strategy is simple_byte
  8095  0010E4  505E               	movf	(??_asignarHorarios+1)^0,w,c
  8096  0010E6  0A00               	xorlw	0	; case 0
  8097  0010E8  B4D8               	btfsc	status,2,c
  8098  0010EA  EF79  F008         	goto	l5172
  8099  0010EE  EF84  F008         	goto	l4510
  8100  0010F2                     l5172:
  8101                           
  8102                           ; BSR set to: 0
  8103                           ; Switch size 1, requested type "simple"
  8104                           ; Number of cases is 2, Range of values is 0 to 1
  8105                           ; switch strategies available:
  8106                           ; Name         Instructions Cycles
  8107                           ; simple_byte            7     4 (average)
  8108                           ;	Chosen strategy is simple_byte
  8109  0010F2  505D               	movf	??_asignarHorarios^0,w,c
  8110  0010F4  0A00               	xorlw	0	; case 0
  8111  0010F6  B4D8               	btfsc	status,2,c
  8112  0010F8  EF67  F008         	goto	l4502
  8113  0010FC  0A01               	xorlw	1	; case 1
  8114  0010FE  B4D8               	btfsc	status,2,c
  8115  001100  EF6B  F008         	goto	l4504
  8116  001104  EF84  F008         	goto	l4510
  8117  001108                     l4510:
  8118                           
  8119                           ; BSR set to: 0
  8120                           ;main.c: 445:                     horarios[hora].dias[i] = diaRegar;
  8121  001108  51CC               	movf	asignarHorarios@hora& (0+255),w,b
  8122  00110A  0D0C               	mullw	12
  8123  00110C  0E32               	movlw	low _horarios
  8124  00110E  6E5D               	movwf	??_asignarHorarios^0,c
  8125  001110  0E01               	movlw	high _horarios
  8126  001112  6E5E               	movwf	(??_asignarHorarios+1)^0,c
  8127  001114  0E01               	movlw	1
  8128  001116  265D               	addwf	??_asignarHorarios^0,f,c
  8129  001118  0E00               	movlw	0
  8130  00111A  225E               	addwfc	(??_asignarHorarios+1)^0,f,c
  8131  00111C  50F3               	movf	243,w,c
  8132  00111E  265D               	addwf	??_asignarHorarios^0,f,c
  8133  001120  50F4               	movf	244,w,c
  8134  001122  225E               	addwfc	(??_asignarHorarios+1)^0,f,c
  8135  001124  51CA               	movf	asignarHorarios@i& (0+255),w,b
  8136  001126  245D               	addwf	??_asignarHorarios^0,w,c
  8137  001128  6ED9               	movwf	fsr2l,c
  8138  00112A  51CB               	movf	(asignarHorarios@i+1)& (0+255),w,b
  8139  00112C  205E               	addwfc	(??_asignarHorarios+1)^0,w,c
  8140  00112E  6EDA               	movwf	fsr2h,c
  8141  001130  C0C9  FFDF         	movff	asignarHorarios@diaRegar,indf2
  8142  001134                     l4512:
  8143                           
  8144                           ; BSR set to: 0
  8145                           ;main.c: 448:             }
  8146  001134  4BCA               	infsnz	asignarHorarios@i& (0+255),f,b
  8147  001136  2BCB               	incf	(asignarHorarios@i+1)& (0+255),f,b
  8148  001138                     
  8149                           ; BSR set to: 0
  8150  001138  BFCB               	btfsc	(asignarHorarios@i+1)& (0+255),7,b
  8151  00113A  EFA8  F008         	goto	u3541
  8152  00113E  51CB               	movf	(asignarHorarios@i+1)& (0+255),w,b
  8153  001140  E109               	bnz	u3540
  8154  001142  0E07               	movlw	7
  8155  001144  5DCA               	subwf	asignarHorarios@i& (0+255),w,b
  8156  001146  A0D8               	btfss	status,0,c
  8157  001148  EFA8  F008         	goto	u3541
  8158  00114C  EFAA  F008         	goto	u3540
  8159  001150                     u3541:
  8160  001150  EF3E  F008         	goto	l4492
  8161  001154                     u3540:
  8162  001154                     
  8163                           ; BSR set to: 0
  8164                           ;main.c: 450:             horarios[hora].regar = Rx;
  8165  001154  51CC               	movf	asignarHorarios@hora& (0+255),w,b
  8166  001156  0D0C               	mullw	12
  8167  001158  0E3B               	movlw	low (_horarios+9)
  8168  00115A  24F3               	addwf	243,w,c
  8169  00115C  6ED9               	movwf	fsr2l,c
  8170  00115E  0E01               	movlw	high (_horarios+9)
  8171  001160  20F4               	addwfc	prodh,w,c
  8172  001162  6EDA               	movwf	fsr2h,c
  8173  001164  C0CD  FFDF         	movff	asignarHorarios@Rx,indf2
  8174  001168                     
  8175                           ; BSR set to: 0
  8176                           ;main.c: 452:             escribeHorariosMemoria();
  8177  001168  EC00  F00E         	call	_escribeHorariosMemoria	;wreg free
  8178  00116C                     
  8179                           ;main.c: 455:             UART_printf("\r\n Horario Modificado! \r\n");
  8180  00116C  0E28               	movlw	low STR_15
  8181  00116E  6E02               	movwf	UART_printf@cadena^0,c
  8182  001170  0E7E               	movlw	high STR_15
  8183  001172  6E03               	movwf	(UART_printf@cadena+1)^0,c
  8184  001174  EC50  F016         	call	_UART_printf	;wreg free
  8185                           
  8186                           ;main.c: 457:         } else if (Rx == 0) {
  8187  001178  EFD6  F008         	goto	l327
  8188  00117C                     l4522:
  8189                           
  8190                           ; BSR set to: 0
  8191  00117C  51CD               	movf	asignarHorarios@Rx& (0+255),w,b
  8192  00117E  A4D8               	btfss	status,2,c
  8193  001180  EFC4  F008         	goto	u3551
  8194  001184  EFC6  F008         	goto	u3550
  8195  001188                     u3551:
  8196  001188  EFD6  F008         	goto	l327
  8197  00118C                     u3550:
  8198  00118C                     
  8199                           ; BSR set to: 0
  8200                           ;main.c: 458:             horarios[hora].regar = Rx;
  8201  00118C  51CC               	movf	asignarHorarios@hora& (0+255),w,b
  8202  00118E  0D0C               	mullw	12
  8203  001190  0E3B               	movlw	low (_horarios+9)
  8204  001192  24F3               	addwf	243,w,c
  8205  001194  6ED9               	movwf	fsr2l,c
  8206  001196  0E01               	movlw	high (_horarios+9)
  8207  001198  20F4               	addwfc	prodh,w,c
  8208  00119A  6EDA               	movwf	fsr2h,c
  8209  00119C  C0CD  FFDF         	movff	asignarHorarios@Rx,indf2
  8210  0011A0                     
  8211                           ; BSR set to: 0
  8212                           ;main.c: 459:             UART_printf("\r\n Horario Modificado! \r\n");
  8213  0011A0  0E28               	movlw	low STR_15
  8214  0011A2  6E02               	movwf	UART_printf@cadena^0,c
  8215  0011A4  0E7E               	movlw	high STR_15
  8216  0011A6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  8217  0011A8  EC50  F016         	call	_UART_printf	;wreg free
  8218  0011AC                     l327:
  8219  0011AC  0012               	return		;funcret
  8220  0011AE                     __end_of_asignarHorarios:
  8221                           	opt callstack 0
  8222                           
  8223 ;; *************** function _sprintf *****************
  8224 ;; Defined at:
  8225 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  8226 ;; Parameters:    Size  Location     Type
  8227 ;;  s               2    6[BANK0 ] PTR unsigned char 
  8228 ;;		 -> dameDatosSistema@bufferHorario(30), buffer(50), 
  8229 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  8230 ;;		 -> STR_55(45), STR_54(29), STR_53(32), STR_52(45), 
  8231 ;;		 -> STR_51(29), STR_50(32), STR_48(24), STR_47(25), 
  8232 ;;		 -> STR_46(24), STR_45(27), STR_44(24), STR_43(23), 
  8233 ;;		 -> STR_42(25), STR_41(24), STR_22(51), STR_14(9), 
  8234 ;; Auto vars:     Size  Location     Type
  8235 ;;  f               6   22[BANK0 ] struct _IO_FILE
  8236 ;;  ap              2   20[BANK0 ] PTR void [1]
  8237 ;;		 -> ?_sprintf(2), 
  8238 ;;  ret             2    0        int 
  8239 ;; Return value:  Size  Location     Type
  8240 ;;                  2    6[BANK0 ] int 
  8241 ;; Registers used:
  8242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8243 ;; Tracked objects:
  8244 ;;		On entry : 0/0
  8245 ;;		On exit  : 0/0
  8246 ;;		Unchanged: 0/0
  8247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8248 ;;      Params:         0      12       0       0       0       0       0       0       0
  8249 ;;      Locals:         0      10       0       0       0       0       0       0       0
  8250 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8251 ;;      Totals:         0      22       0       0       0       0       0       0       0
  8252 ;;Total ram usage:       22 bytes
  8253 ;; Hardware stack levels used:    1
  8254 ;; Hardware stack levels required when called:    8
  8255 ;; This function calls:
  8256 ;;		_vfprintf
  8257 ;; This function is called by:
  8258 ;;		_asignarHorarios
  8259 ;;		_lecturaWifi
  8260 ;;		_dameDatosSistema
  8261 ;;		_mostrarDatosSensores
  8262 ;;		_mostrarDatosSensoresWIFI
  8263 ;; This function uses a non-reentrant model
  8264 ;;
  8265                           
  8266                           	psect	text39
  8267  002E62                     __ptext39:
  8268                           	opt callstack 0
  8269  002E62                     _sprintf:
  8270                           	opt callstack 20
  8271  002E62  0EB7               	movlw	low (?_sprintf+4)
  8272  002E64  0100               	movlb	0	; () banked
  8273  002E66  6FC1               	movwf	sprintf@ap& (0+255),b
  8274  002E68  0E00               	movlw	high (?_sprintf+4)
  8275  002E6A  6FC2               	movwf	(sprintf@ap+1)& (0+255),b
  8276  002E6C  C0B3  F0C3         	movff	sprintf@s,sprintf@f
  8277  002E70  C0B4  F0C4         	movff	sprintf@s+1,sprintf@f+1
  8278  002E74                     
  8279                           ; BSR set to: 0
  8280  002E74  0E00               	movlw	0
  8281  002E76  6FC6               	movwf	(sprintf@f+3)& (0+255),b
  8282  002E78  0E00               	movlw	0
  8283  002E7A  6FC5               	movwf	(sprintf@f+2)& (0+255),b
  8284  002E7C                     
  8285                           ; BSR set to: 0
  8286  002E7C  0E00               	movlw	0
  8287  002E7E  6FC8               	movwf	(sprintf@f+5)& (0+255),b
  8288  002E80  0E00               	movlw	0
  8289  002E82  6FC7               	movwf	(sprintf@f+4)& (0+255),b
  8290  002E84                     
  8291                           ; BSR set to: 0
  8292  002E84  0EC3               	movlw	low sprintf@f
  8293  002E86  6FAD               	movwf	vfprintf@fp& (0+255),b
  8294  002E88  0E00               	movlw	high sprintf@f
  8295  002E8A  6FAE               	movwf	(vfprintf@fp+1)& (0+255),b
  8296  002E8C  C0B5  F0AF         	movff	sprintf@fmt,vfprintf@fmt
  8297  002E90  C0B6  F0B0         	movff	sprintf@fmt+1,vfprintf@fmt+1
  8298  002E94  0EC1               	movlw	low sprintf@ap
  8299  002E96  6FB1               	movwf	vfprintf@ap& (0+255),b
  8300  002E98  0E00               	movlw	high sprintf@ap
  8301  002E9A  6FB2               	movwf	(vfprintf@ap+1)& (0+255),b
  8302  002E9C  ECEE  F015         	call	_vfprintf	;wreg free
  8303  002EA0  0100               	movlb	0	; () banked
  8304  002EA2  51C5               	movf	(sprintf@f+2)& (0+255),w,b
  8305  002EA4  25B3               	addwf	sprintf@s& (0+255),w,b
  8306  002EA6  6ED9               	movwf	fsr2l,c
  8307  002EA8  51C6               	movf	(sprintf@f+3)& (0+255),w,b
  8308  002EAA  21B4               	addwfc	(sprintf@s+1)& (0+255),w,b
  8309  002EAC  6EDA               	movwf	fsr2h,c
  8310  002EAE  0E00               	movlw	0
  8311  002EB0  6EDF               	movwf	indf2,c
  8312  002EB2                     
  8313                           ; BSR set to: 0
  8314  002EB2  0012               	return		;funcret
  8315  002EB4                     __end_of_sprintf:
  8316                           	opt callstack 0
  8317                           
  8318 ;; *************** function _vfprintf *****************
  8319 ;; Defined at:
  8320 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8321 ;; Parameters:    Size  Location     Type
  8322 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  8323 ;;		 -> sprintf@f(6), 
  8324 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  8325 ;;		 -> STR_55(45), STR_54(29), STR_53(32), STR_52(45), 
  8326 ;;		 -> STR_51(29), STR_50(32), STR_48(24), STR_47(25), 
  8327 ;;		 -> STR_46(24), STR_45(27), STR_44(24), STR_43(23), 
  8328 ;;		 -> STR_42(25), STR_41(24), STR_22(51), STR_14(9), 
  8329 ;;  ap              2    4[BANK0 ] PTR PTR void 
  8330 ;;		 -> sprintf@ap(2), 
  8331 ;; Auto vars:     Size  Location     Type
  8332 ;;  cfmt            2   90[COMRAM] PTR unsigned char 
  8333 ;;		 -> STR_55(45), STR_54(29), STR_53(32), STR_52(45), 
  8334 ;;		 -> STR_51(29), STR_50(32), STR_48(24), STR_47(25), 
  8335 ;;		 -> STR_46(24), STR_45(27), STR_44(24), STR_43(23), 
  8336 ;;		 -> STR_42(25), STR_41(24), STR_22(51), STR_14(9), 
  8337 ;; Return value:  Size  Location     Type
  8338 ;;                  2    0[BANK0 ] int 
  8339 ;; Registers used:
  8340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8341 ;; Tracked objects:
  8342 ;;		On entry : 0/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8346 ;;      Params:         0       6       0       0       0       0       0       0       0
  8347 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8348 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8349 ;;      Totals:         2       6       0       0       0       0       0       0       0
  8350 ;;Total ram usage:        8 bytes
  8351 ;; Hardware stack levels used:    1
  8352 ;; Hardware stack levels required when called:    7
  8353 ;; This function calls:
  8354 ;;		_vfpfcnvrt
  8355 ;; This function is called by:
  8356 ;;		_sprintf
  8357 ;; This function uses a non-reentrant model
  8358 ;;
  8359                           
  8360                           	psect	text40
  8361  002BDC                     __ptext40:
  8362                           	opt callstack 0
  8363  002BDC                     _vfprintf:
  8364                           	opt callstack 20
  8365  002BDC                     
  8366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  8367  002BDC  C0AF  F05B         	movff	vfprintf@fmt,vfprintf@cfmt
  8368  002BE0  C0B0  F05C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8369  002BE4                     
  8370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  8371  002BE4  0E00               	movlw	0
  8372  002BE6  0100               	movlb	0	; () banked
  8373  002BE8  6F71               	movwf	(_nout+1)& (0+255),b
  8374  002BEA  0E00               	movlw	0
  8375  002BEC  6F70               	movwf	_nout& (0+255),b
  8376                           
  8377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8378  002BEE  EF0C  F016         	goto	l3830
  8379  002BF2                     l3828:
  8380                           
  8381                           ; BSR set to: 0
  8382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  8383  002BF2  C0AD  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  8384  002BF6  C0AE  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8385  002BFA  0E5B               	movlw	low vfprintf@cfmt
  8386  002BFC  6E42               	movwf	vfpfcnvrt@fmt^0,c
  8387  002BFE  0E00               	movlw	high vfprintf@cfmt
  8388  002C00  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  8389  002C02  C0B1  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  8390  002C06  C0B2  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8391  002C0A  EC09  F000         	call	_vfpfcnvrt	;wreg free
  8392  002C0E  5040               	movf	?_vfpfcnvrt^0,w,c
  8393  002C10  0100               	movlb	0	; () banked
  8394  002C12  2770               	addwf	_nout& (0+255),f,b
  8395  002C14  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  8396  002C16  2371               	addwfc	(_nout+1)& (0+255),f,b
  8397  002C18                     l3830:
  8398                           
  8399                           ; BSR set to: 0
  8400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8401  002C18  C05B  FFF6         	movff	vfprintf@cfmt,tblptrl
  8402  002C1C  C05C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8403  002C20                     	if	0	;tblptru may be non-zero
  8404  002C20                     	endif
  8405  002C20                     	if	0	;tblptru may be non-zero
  8406  002C20                     	endif
  8407  002C20  0008               	tblrd		*
  8408  002C22  50F5               	movf	tablat,w,c
  8409  002C24  0900               	iorlw	0
  8410  002C26  A4D8               	btfss	status,2,c
  8411  002C28  EF18  F016         	goto	u2871
  8412  002C2C  EF1A  F016         	goto	u2870
  8413  002C30                     u2871:
  8414  002C30  EFF9  F015         	goto	l3828
  8415  002C34                     u2870:
  8416  002C34                     
  8417                           ; BSR set to: 0
  8418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  8419  002C34  C070  F0AD         	movff	_nout,?_vfprintf
  8420  002C38  C071  F0AE         	movff	_nout+1,?_vfprintf+1
  8421  002C3C                     
  8422                           ; BSR set to: 0
  8423  002C3C  0012               	return		;funcret
  8424  002C3E                     __end_of_vfprintf:
  8425                           	opt callstack 0
  8426                           
  8427 ;; *************** function _vfpfcnvrt *****************
  8428 ;; Defined at:
  8429 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8430 ;; Parameters:    Size  Location     Type
  8431 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  8432 ;;		 -> sprintf@f(6), 
  8433 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  8434 ;;		 -> vfprintf@cfmt(2), 
  8435 ;;  ap              2   67[COMRAM] PTR PTR void 
  8436 ;;		 -> sprintf@ap(2), 
  8437 ;; Auto vars:     Size  Location     Type
  8438 ;;  ll              8   73[COMRAM] long long 
  8439 ;;  llu             8    0        unsigned long long 
  8440 ;;  f               4    0        unsigned long long 
  8441 ;;  vp              3    0        PTR void 
  8442 ;;  ct              3    0        unsigned char [3]
  8443 ;;  done            2   83[COMRAM] int 
  8444 ;;  cp              2   81[COMRAM] PTR unsigned char 
  8445 ;;		 -> ?_sprintf(2), horarios(288), 
  8446 ;;  i               2    0        int 
  8447 ;;  c               1   89[COMRAM] unsigned char 
  8448 ;; Return value:  Size  Location     Type
  8449 ;;                  2   63[COMRAM] int 
  8450 ;; Registers used:
  8451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8452 ;; Tracked objects:
  8453 ;;		On entry : 0/0
  8454 ;;		On exit  : 0/0
  8455 ;;		Unchanged: 0/0
  8456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8457 ;;      Params:         6       0       0       0       0       0       0       0       0
  8458 ;;      Locals:        17       0       0       0       0       0       0       0       0
  8459 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8460 ;;      Totals:        27       0       0       0       0       0       0       0       0
  8461 ;;Total ram usage:       27 bytes
  8462 ;; Hardware stack levels used:    1
  8463 ;; Hardware stack levels required when called:    6
  8464 ;; This function calls:
  8465 ;;		_atoi
  8466 ;;		_ctoa
  8467 ;;		_dtoa
  8468 ;;		_fputc
  8469 ;;		_isdigit
  8470 ;;		_stoa
  8471 ;; This function is called by:
  8472 ;;		_vfprintf
  8473 ;; This function uses a non-reentrant model
  8474 ;;
  8475                           
  8476                           	psect	text41
  8477  000012                     __ptext41:
  8478                           	opt callstack 0
  8479  000012                     _vfpfcnvrt:
  8480                           	opt callstack 20
  8481  000012                     
  8482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  8483  000012  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8484  000016  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8485  00001A  CFDE FFF6          	movff	postinc2,tblptrl
  8486  00001E  CFDD FFF7          	movff	postdec2,tblptrh
  8487  000022                     	if	0	;tblptru may be non-zero
  8488  000022                     	endif
  8489  000022                     	if	0	;tblptru may be non-zero
  8490  000022                     	endif
  8491  000022  0008               	tblrd		*
  8492  000024  50F5               	movf	tablat,w,c
  8493  000026  0A25               	xorlw	37
  8494  000028  A4D8               	btfss	status,2,c
  8495  00002A  EF19  F000         	goto	u2571
  8496  00002E  EF1B  F000         	goto	u2570
  8497  000032                     u2571:
  8498  000032  EFAE  F002         	goto	l3724
  8499  000036                     u2570:
  8500  000036                     
  8501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  8502  000036  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8503  00003A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8504  00003E  2ADE               	incf	postinc2,f,c
  8505  000040  0E00               	movlw	0
  8506  000042  22DD               	addwfc	postdec2,f,c
  8507  000044                     
  8508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  8509  000044  0E00               	movlw	0
  8510  000046  0100               	movlb	0	; () banked
  8511  000048  6F73               	movwf	(_width+1)& (0+255),b
  8512  00004A  0E00               	movlw	0
  8513  00004C  6F72               	movwf	_width& (0+255),b
  8514  00004E  C072  F076         	movff	_width,_flags
  8515  000052  C073  F077         	movff	_width+1,_flags+1
  8516  000056                     
  8517                           ; BSR set to: 0
  8518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  8519  000056  6974               	setf	_prec& (0+255),b
  8520  000058  6975               	setf	(_prec+1)& (0+255),b
  8521  00005A                     
  8522                           ; BSR set to: 0
  8523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  8524  00005A  0E00               	movlw	0
  8525  00005C  6E55               	movwf	(vfpfcnvrt@done+1)^0,c
  8526  00005E  0E00               	movlw	0
  8527  000060  6E54               	movwf	vfpfcnvrt@done^0,c
  8528                           
  8529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  8530  000062  EF7E  F000         	goto	l3640
  8531  000066                     l3614:
  8532                           
  8533                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  8534  000066  0100               	movlb	0	; () banked
  8535  000068  8176               	bsf	_flags& (0+255),0,b
  8536  00006A                     l3616:
  8537                           
  8538                           ; BSR set to: 0
  8539                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  8540  00006A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8541  00006E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8542  000072  2ADE               	incf	postinc2,f,c
  8543  000074  0E00               	movlw	0
  8544  000076  22DD               	addwfc	postdec2,f,c
  8545                           
  8546                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  8547  000078  EF7E  F000         	goto	l3640
  8548  00007C                     l3618:
  8549                           
  8550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  8551  00007C  0100               	movlb	0	; () banked
  8552  00007E  8376               	bsf	_flags& (0+255),1,b
  8553  000080  EF35  F000         	goto	l3616
  8554  000084                     l3622:
  8555                           
  8556                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  8557  000084  0100               	movlb	0	; () banked
  8558  000086  8576               	bsf	_flags& (0+255),2,b
  8559  000088  EF35  F000         	goto	l3616
  8560  00008C                     l3626:
  8561                           
  8562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  8563  00008C  0100               	movlb	0	; () banked
  8564  00008E  8776               	bsf	_flags& (0+255),3,b
  8565  000090  EF35  F000         	goto	l3616
  8566  000094                     l3630:
  8567                           
  8568                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  8569  000094  0100               	movlb	0	; () banked
  8570  000096  8976               	bsf	_flags& (0+255),4,b
  8571  000098  EF35  F000         	goto	l3616
  8572  00009C                     l3634:
  8573                           
  8574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  8575  00009C  0E00               	movlw	0
  8576  00009E  6E55               	movwf	(vfpfcnvrt@done+1)^0,c
  8577  0000A0  0E01               	movlw	1
  8578  0000A2  6E54               	movwf	vfpfcnvrt@done^0,c
  8579                           
  8580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  8581  0000A4  EF7E  F000         	goto	l3640
  8582  0000A8                     l3638:
  8583  0000A8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8584  0000AC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8585  0000B0  CFDE FFF6          	movff	postinc2,tblptrl
  8586  0000B4  CFDD FFF7          	movff	postdec2,tblptrh
  8587  0000B8                     	if	0	;tblptru may be non-zero
  8588  0000B8                     	endif
  8589  0000B8                     	if	0	;tblptru may be non-zero
  8590  0000B8                     	endif
  8591  0000B8  0008               	tblrd		*
  8592  0000BA  50F5               	movf	tablat,w,c
  8593  0000BC  6E46               	movwf	??_vfpfcnvrt^0,c
  8594  0000BE  6A47               	clrf	(??_vfpfcnvrt+1)^0,c
  8595                           
  8596                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8597                           ; Switch size 1, requested type "simple"
  8598                           ; Number of cases is 1, Range of values is 0 to 0
  8599                           ; switch strategies available:
  8600                           ; Name         Instructions Cycles
  8601                           ; simple_byte            4     3 (average)
  8602                           ;	Chosen strategy is simple_byte
  8603  0000C0  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  8604  0000C2  0A00               	xorlw	0	; case 0
  8605  0000C4  B4D8               	btfsc	status,2,c
  8606  0000C6  EF67  F000         	goto	l5174
  8607  0000CA  EF4E  F000         	goto	l3634
  8608  0000CE                     l5174:
  8609                           
  8610                           ; Switch size 1, requested type "simple"
  8611                           ; Number of cases is 5, Range of values is 32 to 48
  8612                           ; switch strategies available:
  8613                           ; Name         Instructions Cycles
  8614                           ; simple_byte           16     9 (average)
  8615                           ;	Chosen strategy is simple_byte
  8616  0000CE  5046               	movf	??_vfpfcnvrt^0,w,c
  8617  0000D0  0A20               	xorlw	32	; case 32
  8618  0000D2  B4D8               	btfsc	status,2,c
  8619  0000D4  EF46  F000         	goto	l3626
  8620  0000D8  0A03               	xorlw	3	; case 35
  8621  0000DA  B4D8               	btfsc	status,2,c
  8622  0000DC  EF4A  F000         	goto	l3630
  8623  0000E0  0A08               	xorlw	8	; case 43
  8624  0000E2  B4D8               	btfsc	status,2,c
  8625  0000E4  EF42  F000         	goto	l3622
  8626  0000E8  0A06               	xorlw	6	; case 45
  8627  0000EA  B4D8               	btfsc	status,2,c
  8628  0000EC  EF33  F000         	goto	l3614
  8629  0000F0  0A1D               	xorlw	29	; case 48
  8630  0000F2  B4D8               	btfsc	status,2,c
  8631  0000F4  EF3E  F000         	goto	l3618
  8632  0000F8  EF4E  F000         	goto	l3634
  8633  0000FC                     l3640:
  8634                           
  8635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  8636  0000FC  5054               	movf	vfpfcnvrt@done^0,w,c
  8637  0000FE  1055               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  8638  000100  B4D8               	btfsc	status,2,c
  8639  000102  EF85  F000         	goto	u2581
  8640  000106  EF87  F000         	goto	u2580
  8641  00010A                     u2581:
  8642  00010A  EF54  F000         	goto	l3638
  8643  00010E                     u2580:
  8644  00010E                     
  8645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  8646  00010E  0100               	movlb	0	; () banked
  8647  000110  A176               	btfss	_flags& (0+255),0,b
  8648  000112  EF8D  F000         	goto	u2591
  8649  000116  EF8F  F000         	goto	u2590
  8650  00011A                     u2591:
  8651  00011A  EF90  F000         	goto	l3644
  8652  00011E                     u2590:
  8653  00011E                     
  8654                           ; BSR set to: 0
  8655                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  8656  00011E  9376               	bcf	_flags& (0+255),1,b
  8657  000120                     l3644:
  8658                           
  8659                           ; BSR set to: 0
  8660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  8661  000120  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8662  000124  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8663  000128  CFDE FFF6          	movff	postinc2,tblptrl
  8664  00012C  CFDD FFF7          	movff	postdec2,tblptrh
  8665  000130                     	if	0	;tblptru may be non-zero
  8666  000130                     	endif
  8667  000130                     	if	0	;tblptru may be non-zero
  8668  000130                     	endif
  8669  000130  0008               	tblrd		*
  8670  000132  50F5               	movf	tablat,w,c
  8671  000134  0A2A               	xorlw	42
  8672  000136  A4D8               	btfss	status,2,c
  8673  000138  EFA0  F000         	goto	u2601
  8674  00013C  EFA2  F000         	goto	u2600
  8675  000140                     u2601:
  8676  000140  EFCB  F000         	goto	l3652
  8677  000144                     u2600:
  8678  000144                     
  8679                           ; BSR set to: 0
  8680                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  8681  000144  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8682  000148  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8683  00014C  2ADE               	incf	postinc2,f,c
  8684  00014E  0E00               	movlw	0
  8685  000150  22DD               	addwfc	postdec2,f,c
  8686                           
  8687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  8688  000152  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8689  000156  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8690  00015A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  8691  00015E  0E02               	movlw	2
  8692  000160  26DE               	addwf	postinc2,f,c
  8693  000162  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  8694  000166  0E00               	movlw	0
  8695  000168  22DD               	addwfc	postdec2,f,c
  8696  00016A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8697  00016E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8698  000172  CFDE F072          	movff	postinc2,_width
  8699  000176  CFDD F073          	movff	postdec2,_width+1
  8700  00017A                     
  8701                           ; BSR set to: 0
  8702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  8703  00017A  BF73               	btfsc	(_width+1)& (0+255),7,b
  8704  00017C  EFC4  F000         	goto	u2610
  8705  000180  EFC2  F000         	goto	u2611
  8706  000184                     u2611:
  8707  000184  EF0E  F001         	goto	l3662
  8708  000188                     u2610:
  8709  000188                     
  8710                           ; BSR set to: 0
  8711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  8712  000188  8176               	bsf	_flags& (0+255),0,b
  8713                           
  8714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  8715  00018A  6D72               	negf	_width& (0+255),b
  8716  00018C  1F73               	comf	(_width+1)& (0+255),f,b
  8717  00018E  B0D8               	btfsc	status,0,c
  8718  000190  2B73               	incf	(_width+1)& (0+255),f,b
  8719  000192  EF0E  F001         	goto	l3662
  8720  000196                     l3652:
  8721                           
  8722                           ; BSR set to: 0
  8723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  8724  000196  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8725  00019A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8726  00019E  CFDE F008          	movff	postinc2,atoi@s
  8727  0001A2  CFDD F009          	movff	postdec2,atoi@s+1
  8728  0001A6  ECD7  F008         	call	_atoi	;wreg free
  8729  0001AA  C008  F072         	movff	?_atoi,_width
  8730  0001AE  C009  F073         	movff	?_atoi+1,_width+1
  8731                           
  8732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8733  0001B2  EFE2  F000         	goto	l3656
  8734  0001B6                     l3654:
  8735                           
  8736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  8737  0001B6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8738  0001BA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8739  0001BE  2ADE               	incf	postinc2,f,c
  8740  0001C0  0E00               	movlw	0
  8741  0001C2  22DD               	addwfc	postdec2,f,c
  8742  0001C4                     l3656:
  8743  0001C4  0ED0               	movlw	208
  8744  0001C6  6E46               	movwf	??_vfpfcnvrt^0,c
  8745  0001C8  0EFF               	movlw	255
  8746  0001CA  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  8747  0001CC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8748  0001D0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8749  0001D4  CFDE FFF6          	movff	postinc2,tblptrl
  8750  0001D8  CFDD FFF7          	movff	postdec2,tblptrh
  8751  0001DC                     	if	0	;tblptru may be non-zero
  8752  0001DC                     	endif
  8753  0001DC                     	if	0	;tblptru may be non-zero
  8754  0001DC                     	endif
  8755  0001DC  0008               	tblrd		*
  8756  0001DE  50F5               	movf	tablat,w,c
  8757  0001E0  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  8758  0001E2  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  8759  0001E4  5046               	movf	??_vfpfcnvrt^0,w,c
  8760  0001E6  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  8761  0001E8  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  8762  0001EA  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  8763  0001EC  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  8764  0001EE  E10A               	bnz	u2620
  8765  0001F0  0E0A               	movlw	10
  8766  0001F2  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  8767  0001F4  A0D8               	btfss	status,0,c
  8768  0001F6  EFFF  F000         	goto	u2621
  8769  0001FA  EF02  F001         	goto	u2620
  8770  0001FE                     u2621:
  8771  0001FE  0E01               	movlw	1
  8772  000200  EF03  F001         	goto	u2630
  8773  000204                     u2620:
  8774  000204  0E00               	movlw	0
  8775  000206                     u2630:
  8776  000206  6E56               	movwf	_vfpfcnvrt$1113^0,c
  8777  000208  6A57               	clrf	(_vfpfcnvrt$1113+1)^0,c
  8778  00020A  5056               	movf	_vfpfcnvrt$1113^0,w,c
  8779  00020C  1057               	iorwf	(_vfpfcnvrt$1113+1)^0,w,c
  8780  00020E  A4D8               	btfss	status,2,c
  8781  000210  EF0C  F001         	goto	u2641
  8782  000214  EF0E  F001         	goto	u2640
  8783  000218                     u2641:
  8784  000218  EFDB  F000         	goto	l3654
  8785  00021C                     u2640:
  8786  00021C                     l3662:
  8787                           
  8788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  8789  00021C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8790  000220  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8791  000224  CFDE FFF6          	movff	postinc2,tblptrl
  8792  000228  CFDD FFF7          	movff	postdec2,tblptrh
  8793  00022C                     	if	0	;tblptru may be non-zero
  8794  00022C                     	endif
  8795  00022C                     	if	0	;tblptru may be non-zero
  8796  00022C                     	endif
  8797  00022C  0008               	tblrd		*
  8798  00022E  50F5               	movf	tablat,w,c
  8799  000230  0A2E               	xorlw	46
  8800  000232  A4D8               	btfss	status,2,c
  8801  000234  EF1E  F001         	goto	u2651
  8802  000238  EF20  F001         	goto	u2650
  8803  00023C                     u2651:
  8804  00023C  EF9E  F001         	goto	l3682
  8805  000240                     u2650:
  8806  000240                     
  8807                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  8808  000240  0E00               	movlw	0
  8809  000242  0100               	movlb	0	; () banked
  8810  000244  6F75               	movwf	(_prec+1)& (0+255),b
  8811  000246  0E00               	movlw	0
  8812  000248  6F74               	movwf	_prec& (0+255),b
  8813  00024A                     
  8814                           ; BSR set to: 0
  8815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  8816  00024A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8817  00024E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8818  000252  2ADE               	incf	postinc2,f,c
  8819  000254  0E00               	movlw	0
  8820  000256  22DD               	addwfc	postdec2,f,c
  8821  000258                     
  8822                           ; BSR set to: 0
  8823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  8824  000258  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8825  00025C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8826  000260  CFDE FFF6          	movff	postinc2,tblptrl
  8827  000264  CFDD FFF7          	movff	postdec2,tblptrh
  8828  000268                     	if	0	;tblptru may be non-zero
  8829  000268                     	endif
  8830  000268                     	if	0	;tblptru may be non-zero
  8831  000268                     	endif
  8832  000268  0008               	tblrd		*
  8833  00026A  50F5               	movf	tablat,w,c
  8834  00026C  0A2A               	xorlw	42
  8835  00026E  A4D8               	btfss	status,2,c
  8836  000270  EF3C  F001         	goto	u2661
  8837  000274  EF3E  F001         	goto	u2660
  8838  000278                     u2661:
  8839  000278  EF5B  F001         	goto	l3672
  8840  00027C                     u2660:
  8841  00027C                     
  8842                           ; BSR set to: 0
  8843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  8844  00027C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8845  000280  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8846  000284  2ADE               	incf	postinc2,f,c
  8847  000286  0E00               	movlw	0
  8848  000288  22DD               	addwfc	postdec2,f,c
  8849                           
  8850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  8851  00028A  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8852  00028E  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8853  000292  CFDF F046          	movff	indf2,??_vfpfcnvrt
  8854  000296  0E02               	movlw	2
  8855  000298  26DE               	addwf	postinc2,f,c
  8856  00029A  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  8857  00029E  0E00               	movlw	0
  8858  0002A0  22DD               	addwfc	postdec2,f,c
  8859  0002A2  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8860  0002A6  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8861  0002AA  CFDE F074          	movff	postinc2,_prec
  8862  0002AE  CFDD F075          	movff	postdec2,_prec+1
  8863                           
  8864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  8865  0002B2  EF9E  F001         	goto	l3682
  8866  0002B6                     l3672:
  8867                           
  8868                           ; BSR set to: 0
  8869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  8870  0002B6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8871  0002BA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8872  0002BE  CFDE F008          	movff	postinc2,atoi@s
  8873  0002C2  CFDD F009          	movff	postdec2,atoi@s+1
  8874  0002C6  ECD7  F008         	call	_atoi	;wreg free
  8875  0002CA  C008  F074         	movff	?_atoi,_prec
  8876  0002CE  C009  F075         	movff	?_atoi+1,_prec+1
  8877                           
  8878                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8879  0002D2  EF72  F001         	goto	l3676
  8880  0002D6                     l3674:
  8881                           
  8882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  8883  0002D6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8884  0002DA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8885  0002DE  2ADE               	incf	postinc2,f,c
  8886  0002E0  0E00               	movlw	0
  8887  0002E2  22DD               	addwfc	postdec2,f,c
  8888  0002E4                     l3676:
  8889  0002E4  0ED0               	movlw	208
  8890  0002E6  6E46               	movwf	??_vfpfcnvrt^0,c
  8891  0002E8  0EFF               	movlw	255
  8892  0002EA  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  8893  0002EC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8894  0002F0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8895  0002F4  CFDE FFF6          	movff	postinc2,tblptrl
  8896  0002F8  CFDD FFF7          	movff	postdec2,tblptrh
  8897  0002FC                     	if	0	;tblptru may be non-zero
  8898  0002FC                     	endif
  8899  0002FC                     	if	0	;tblptru may be non-zero
  8900  0002FC                     	endif
  8901  0002FC  0008               	tblrd		*
  8902  0002FE  50F5               	movf	tablat,w,c
  8903  000300  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  8904  000302  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  8905  000304  5046               	movf	??_vfpfcnvrt^0,w,c
  8906  000306  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  8907  000308  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  8908  00030A  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  8909  00030C  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  8910  00030E  E10A               	bnz	u2670
  8911  000310  0E0A               	movlw	10
  8912  000312  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  8913  000314  A0D8               	btfss	status,0,c
  8914  000316  EF8F  F001         	goto	u2671
  8915  00031A  EF92  F001         	goto	u2670
  8916  00031E                     u2671:
  8917  00031E  0E01               	movlw	1
  8918  000320  EF93  F001         	goto	u2680
  8919  000324                     u2670:
  8920  000324  0E00               	movlw	0
  8921  000326                     u2680:
  8922  000326  6E58               	movwf	_vfpfcnvrt$1114^0,c
  8923  000328  6A59               	clrf	(_vfpfcnvrt$1114+1)^0,c
  8924  00032A  5058               	movf	_vfpfcnvrt$1114^0,w,c
  8925  00032C  1059               	iorwf	(_vfpfcnvrt$1114+1)^0,w,c
  8926  00032E  A4D8               	btfss	status,2,c
  8927  000330  EF9C  F001         	goto	u2691
  8928  000334  EF9E  F001         	goto	u2690
  8929  000338                     u2691:
  8930  000338  EF6B  F001         	goto	l3674
  8931  00033C                     u2690:
  8932  00033C                     l3682:
  8933                           
  8934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  8935  00033C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8936  000340  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8937  000344  CFDE FFF6          	movff	postinc2,tblptrl
  8938  000348  CFDD FFF7          	movff	postdec2,tblptrh
  8939  00034C                     	if	0	;tblptru may be non-zero
  8940  00034C                     	endif
  8941  00034C                     	if	0	;tblptru may be non-zero
  8942  00034C                     	endif
  8943  00034C  0008               	tblrd		*
  8944  00034E  50F5               	movf	tablat,w,c
  8945  000350  0A63               	xorlw	99
  8946  000352  A4D8               	btfss	status,2,c
  8947  000354  EFAE  F001         	goto	u2701
  8948  000358  EFB0  F001         	goto	u2700
  8949  00035C                     u2701:
  8950  00035C  EFD7  F001         	goto	l3690
  8951  000360                     u2700:
  8952  000360                     
  8953                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  8954  000360  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8955  000364  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8956  000368  2ADE               	incf	postinc2,f,c
  8957  00036A  0E00               	movlw	0
  8958  00036C  22DD               	addwfc	postdec2,f,c
  8959                           
  8960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8961  00036E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8962  000372  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8963  000376  CFDF F046          	movff	indf2,??_vfpfcnvrt
  8964  00037A  0E02               	movlw	2
  8965  00037C  26DE               	addwf	postinc2,f,c
  8966  00037E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  8967  000382  0E00               	movlw	0
  8968  000384  22DD               	addwfc	postdec2,f,c
  8969  000386  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8970  00038A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8971  00038E  50DF               	movf	indf2,w,c
  8972  000390  6E5A               	movwf	vfpfcnvrt@c^0,c
  8973  000392                     
  8974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  8975  000392  C040  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  8976  000396  C041  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  8977  00039A  C05A  F01E         	movff	vfpfcnvrt@c,ctoa@c
  8978  00039E  ECDA  F016         	call	_ctoa	;wreg free
  8979  0003A2  C01C  F040         	movff	?_ctoa,?_vfpfcnvrt
  8980  0003A6  C01D  F041         	movff	?_ctoa+1,?_vfpfcnvrt+1
  8981  0003AA  EFC9  F002         	goto	l625
  8982  0003AE                     l3690:
  8983                           
  8984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8985  0003AE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8986  0003B2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8987  0003B6  CFDE FFF6          	movff	postinc2,tblptrl
  8988  0003BA  CFDD FFF7          	movff	postdec2,tblptrh
  8989  0003BE                     	if	0	;tblptru may be non-zero
  8990  0003BE                     	endif
  8991  0003BE                     	if	0	;tblptru may be non-zero
  8992  0003BE                     	endif
  8993  0003BE  0008               	tblrd		*
  8994  0003C0  50F5               	movf	tablat,w,c
  8995  0003C2  0A64               	xorlw	100
  8996  0003C4  B4D8               	btfsc	status,2,c
  8997  0003C6  EFE7  F001         	goto	u2711
  8998  0003CA  EFE9  F001         	goto	u2710
  8999  0003CE                     u2711:
  9000  0003CE  EFFB  F001         	goto	l3694
  9001  0003D2                     u2710:
  9002  0003D2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9003  0003D6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9004  0003DA  CFDE FFF6          	movff	postinc2,tblptrl
  9005  0003DE  CFDD FFF7          	movff	postdec2,tblptrh
  9006  0003E2                     	if	0	;tblptru may be non-zero
  9007  0003E2                     	endif
  9008  0003E2                     	if	0	;tblptru may be non-zero
  9009  0003E2                     	endif
  9010  0003E2  0008               	tblrd		*
  9011  0003E4  50F5               	movf	tablat,w,c
  9012  0003E6  0A69               	xorlw	105
  9013  0003E8  A4D8               	btfss	status,2,c
  9014  0003EA  EFF9  F001         	goto	u2721
  9015  0003EE  EFFB  F001         	goto	u2720
  9016  0003F2                     u2721:
  9017  0003F2  EF3B  F002         	goto	l3700
  9018  0003F6                     u2720:
  9019  0003F6                     l3694:
  9020                           
  9021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  9022  0003F6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9023  0003FA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9024  0003FE  2ADE               	incf	postinc2,f,c
  9025  000400  0E00               	movlw	0
  9026  000402  22DD               	addwfc	postdec2,f,c
  9027                           
  9028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  9029  000404  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9030  000408  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9031  00040C  CFDF F046          	movff	indf2,??_vfpfcnvrt
  9032  000410  0E02               	movlw	2
  9033  000412  26DE               	addwf	postinc2,f,c
  9034  000414  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  9035  000418  0E00               	movlw	0
  9036  00041A  22DD               	addwfc	postdec2,f,c
  9037  00041C  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9038  000420  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9039  000424  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  9040  000428  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  9041  00042C  0E00               	movlw	0
  9042  00042E  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  9043  000430  0EFF               	movlw	-1
  9044  000432  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  9045  000434  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  9046  000436  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  9047  000438  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  9048  00043A  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  9049  00043C  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  9050  00043E                     
  9051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  9052  00043E  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  9053  000442  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  9054  000446  C04A  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  9055  00044A  C04B  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  9056  00044E  C04C  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  9057  000452  C04D  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  9058  000456  C04E  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  9059  00045A  C04F  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  9060  00045E  C050  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  9061  000462  C051  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  9062  000466  EC42  F004         	call	_dtoa	;wreg free
  9063  00046A  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  9064  00046E  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  9065  000472  EFC9  F002         	goto	l625
  9066  000476                     l3700:
  9067                           
  9068                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  9069  000476  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9070  00047A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9071  00047E  CFDE FFF6          	movff	postinc2,tblptrl
  9072  000482  CFDD FFF7          	movff	postdec2,tblptrh
  9073  000486                     	if	0	;tblptru may be non-zero
  9074  000486                     	endif
  9075  000486                     	if	0	;tblptru may be non-zero
  9076  000486                     	endif
  9077  000486  0008               	tblrd		*
  9078  000488  50F5               	movf	tablat,w,c
  9079  00048A  0A73               	xorlw	115
  9080  00048C  A4D8               	btfss	status,2,c
  9081  00048E  EF4B  F002         	goto	u2731
  9082  000492  EF4D  F002         	goto	u2730
  9083  000496                     u2731:
  9084  000496  EF78  F002         	goto	l3708
  9085  00049A                     u2730:
  9086  00049A                     
  9087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  9088  00049A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9089  00049E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9090  0004A2  2ADE               	incf	postinc2,f,c
  9091  0004A4  0E00               	movlw	0
  9092  0004A6  22DD               	addwfc	postdec2,f,c
  9093                           
  9094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  9095  0004A8  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9096  0004AC  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9097  0004B0  CFDF F046          	movff	indf2,??_vfpfcnvrt
  9098  0004B4  0E02               	movlw	2
  9099  0004B6  26DE               	addwf	postinc2,f,c
  9100  0004B8  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  9101  0004BC  0E00               	movlw	0
  9102  0004BE  22DD               	addwfc	postdec2,f,c
  9103  0004C0  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9104  0004C4  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9105  0004C8  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  9106  0004CC  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  9107  0004D0                     
  9108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  9109  0004D0  C040  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  9110  0004D4  C041  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  9111  0004D8  C052  F00C         	movff	vfpfcnvrt@cp,stoa@s
  9112  0004DC  C053  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  9113  0004E0  EC63  F00A         	call	_stoa	;wreg free
  9114  0004E4  C00A  F040         	movff	?_stoa,?_vfpfcnvrt
  9115  0004E8  C00B  F041         	movff	?_stoa+1,?_vfpfcnvrt+1
  9116  0004EC  EFC9  F002         	goto	l625
  9117  0004F0                     l3708:
  9118                           
  9119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  9120  0004F0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9121  0004F4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9122  0004F8  CFDE FFF6          	movff	postinc2,tblptrl
  9123  0004FC  CFDD FFF7          	movff	postdec2,tblptrh
  9124  000500                     	if	0	;tblptru may be non-zero
  9125  000500                     	endif
  9126  000500                     	if	0	;tblptru may be non-zero
  9127  000500                     	endif
  9128  000500  0008               	tblrd		*
  9129  000502  50F5               	movf	tablat,w,c
  9130  000504  0A25               	xorlw	37
  9131  000506  A4D8               	btfss	status,2,c
  9132  000508  EF88  F002         	goto	u2741
  9133  00050C  EF8A  F002         	goto	u2740
  9134  000510                     u2741:
  9135  000510  EFA1  F002         	goto	l3718
  9136  000514                     u2740:
  9137  000514                     
  9138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  9139  000514  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9140  000518  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9141  00051C  2ADE               	incf	postinc2,f,c
  9142  00051E  0E00               	movlw	0
  9143  000520  22DD               	addwfc	postdec2,f,c
  9144  000522                     
  9145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  9146  000522  0E00               	movlw	0
  9147  000524  6E02               	movwf	(fputc@c+1)^0,c
  9148  000526  0E25               	movlw	37
  9149  000528  6E01               	movwf	fputc@c^0,c
  9150  00052A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  9151  00052E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9152  000532  EC98  F011         	call	_fputc	;wreg free
  9153  000536                     l3714:
  9154                           
  9155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  9156  000536  0E00               	movlw	0
  9157  000538  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  9158  00053A  0E01               	movlw	1
  9159  00053C  6E40               	movwf	?_vfpfcnvrt^0,c
  9160  00053E  EFC9  F002         	goto	l625
  9161  000542                     l3718:
  9162                           
  9163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  9164  000542  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9165  000546  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9166  00054A  2ADE               	incf	postinc2,f,c
  9167  00054C  0E00               	movlw	0
  9168  00054E  22DD               	addwfc	postdec2,f,c
  9169  000550                     
  9170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  9171  000550  0E00               	movlw	0
  9172  000552  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  9173  000554  0E00               	movlw	0
  9174  000556  6E40               	movwf	?_vfpfcnvrt^0,c
  9175  000558  EFC9  F002         	goto	l625
  9176  00055C                     l3724:
  9177                           
  9178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  9179  00055C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9180  000560  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9181  000564  CFDE FFF6          	movff	postinc2,tblptrl
  9182  000568  CFDD FFF7          	movff	postdec2,tblptrh
  9183  00056C                     	if	0	;tblptru may be non-zero
  9184  00056C                     	endif
  9185  00056C                     	if	0	;tblptru may be non-zero
  9186  00056C                     	endif
  9187  00056C  0008               	tblrd		*
  9188  00056E  50F5               	movf	tablat,w,c
  9189  000570  6E01               	movwf	fputc@c^0,c
  9190  000572  6A02               	clrf	(fputc@c+1)^0,c
  9191  000574  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  9192  000578  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9193  00057C  EC98  F011         	call	_fputc	;wreg free
  9194  000580                     
  9195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  9196  000580  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9197  000584  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9198  000588  2ADE               	incf	postinc2,f,c
  9199  00058A  0E00               	movlw	0
  9200  00058C  22DD               	addwfc	postdec2,f,c
  9201  00058E  EF9B  F002         	goto	l3714
  9202  000592                     l625:
  9203  000592  0012               	return		;funcret
  9204  000594                     __end_of_vfpfcnvrt:
  9205                           	opt callstack 0
  9206                           
  9207 ;; *************** function _stoa *****************
  9208 ;; Defined at:
  9209 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9210 ;; Parameters:    Size  Location     Type
  9211 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  9212 ;;		 -> sprintf@f(6), 
  9213 ;;  s               2   11[COMRAM] PTR unsigned char 
  9214 ;;		 -> ?_sprintf(2), horarios(288), 
  9215 ;; Auto vars:     Size  Location     Type
  9216 ;;  nuls            7   14[COMRAM] unsigned char [7]
  9217 ;;  l               2   29[COMRAM] int 
  9218 ;;  p               2   27[COMRAM] int 
  9219 ;;  cp              2   25[COMRAM] PTR unsigned char 
  9220 ;;		 -> ?_sprintf(2), stoa@nuls(7), horarios(288), 
  9221 ;;  w               2   23[COMRAM] int 
  9222 ;;  i               2   21[COMRAM] int 
  9223 ;; Return value:  Size  Location     Type
  9224 ;;                  2    9[COMRAM] int 
  9225 ;; Registers used:
  9226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9227 ;; Tracked objects:
  9228 ;;		On entry : 0/0
  9229 ;;		On exit  : 0/0
  9230 ;;		Unchanged: 0/0
  9231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9232 ;;      Params:         4       0       0       0       0       0       0       0       0
  9233 ;;      Locals:        17       0       0       0       0       0       0       0       0
  9234 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9235 ;;      Totals:        22       0       0       0       0       0       0       0       0
  9236 ;;Total ram usage:       22 bytes
  9237 ;; Hardware stack levels used:    1
  9238 ;; Hardware stack levels required when called:    3
  9239 ;; This function calls:
  9240 ;;		_fputc
  9241 ;;		_strlen
  9242 ;; This function is called by:
  9243 ;;		_vfpfcnvrt
  9244 ;; This function uses a non-reentrant model
  9245 ;;
  9246                           
  9247                           	psect	text42
  9248  0014C6                     __ptext42:
  9249                           	opt callstack 0
  9250  0014C6                     _stoa:
  9251                           	opt callstack 22
  9252  0014C6                     
  9253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9254  0014C6  EE20  F0F4         	lfsr	2,stoa@F1144
  9255  0014CA  EE10  F00F         	lfsr	1,stoa@nuls
  9256  0014CE  0E06               	movlw	6
  9257  0014D0                     u2381:
  9258  0014D0  CFDB FFE3          	movff	plusw2,plusw1
  9259  0014D4  06E8               	decf	wreg,f,c
  9260  0014D6  E2FC               	bc	u2381
  9261  0014D8                     
  9262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  9263  0014D8  C00C  F01A         	movff	stoa@s,stoa@cp
  9264  0014DC  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  9265  0014E0                     
  9266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  9267  0014E0  501A               	movf	stoa@cp^0,w,c
  9268  0014E2  101B               	iorwf	(stoa@cp+1)^0,w,c
  9269  0014E4  A4D8               	btfss	status,2,c
  9270  0014E6  EF77  F00A         	goto	u2391
  9271  0014EA  EF79  F00A         	goto	u2390
  9272  0014EE                     u2391:
  9273  0014EE  EF7D  F00A         	goto	l3520
  9274  0014F2                     u2390:
  9275  0014F2                     
  9276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  9277  0014F2  0E0F               	movlw	low stoa@nuls
  9278  0014F4  6E1A               	movwf	stoa@cp^0,c
  9279  0014F6  0E00               	movlw	high stoa@nuls
  9280  0014F8  6E1B               	movwf	(stoa@cp+1)^0,c
  9281  0014FA                     l3520:
  9282                           
  9283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  9284  0014FA  C01A  F001         	movff	stoa@cp,strlen@s
  9285  0014FE  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  9286  001502  ECA4  F018         	call	_strlen	;wreg free
  9287  001506  C001  F01E         	movff	?_strlen,stoa@l
  9288  00150A  C002  F01F         	movff	?_strlen+1,stoa@l+1
  9289  00150E                     
  9290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  9291  00150E  C074  F01C         	movff	_prec,stoa@p
  9292  001512  C075  F01D         	movff	_prec+1,stoa@p+1
  9293  001516                     
  9294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  9295  001516  BE1D               	btfsc	(stoa@p+1)^0,7,c
  9296  001518  EF90  F00A         	goto	u2401
  9297  00151C  EF92  F00A         	goto	u2400
  9298  001520                     u2401:
  9299  001520  EFA7  F00A         	goto	l574
  9300  001524                     u2400:
  9301  001524  501E               	movf	stoa@l^0,w,c
  9302  001526  5C1C               	subwf	stoa@p^0,w,c
  9303  001528  501D               	movf	(stoa@p+1)^0,w,c
  9304  00152A  0A80               	xorlw	128
  9305  00152C  6E0E               	movwf	??_stoa^0,c
  9306  00152E  501F               	movf	(stoa@l+1)^0,w,c
  9307  001530  0A80               	xorlw	128
  9308  001532  580E               	subwfb	??_stoa^0,w,c
  9309  001534  A0D8               	btfss	status,0,c
  9310  001536  EF9F  F00A         	goto	u2411
  9311  00153A  EFA1  F00A         	goto	u2410
  9312  00153E                     u2411:
  9313  00153E  EFA3  F00A         	goto	l572
  9314  001542                     u2410:
  9315  001542  EFA7  F00A         	goto	l574
  9316  001546                     l572:
  9317  001546  C01C  F01E         	movff	stoa@p,stoa@l
  9318  00154A  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  9319  00154E                     l574:
  9320                           
  9321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  9322  00154E  C01E  F01C         	movff	stoa@l,stoa@p
  9323  001552  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  9324                           
  9325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  9326  001556  C072  F018         	movff	_width,stoa@w
  9327  00155A  C073  F019         	movff	_width+1,stoa@w+1
  9328                           
  9329                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  9330  00155E  0100               	movlb	0	; () banked
  9331  001560  B176               	btfsc	_flags& (0+255),0,b
  9332  001562  EFB5  F00A         	goto	u2421
  9333  001566  EFB7  F00A         	goto	u2420
  9334  00156A                     u2421:
  9335  00156A  EFD4  F00A         	goto	l3536
  9336  00156E                     u2420:
  9337  00156E  EFC5  F00A         	goto	l3534
  9338  001572                     l3530:
  9339                           
  9340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  9341  001572  0E00               	movlw	0
  9342  001574  6E02               	movwf	(fputc@c+1)^0,c
  9343  001576  0E20               	movlw	32
  9344  001578  6E01               	movwf	fputc@c^0,c
  9345  00157A  C00A  F003         	movff	stoa@fp,fputc@fp
  9346  00157E  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  9347  001582  EC98  F011         	call	_fputc	;wreg free
  9348  001586                     
  9349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  9350  001586  4A1E               	infsnz	stoa@l^0,f,c
  9351  001588  2A1F               	incf	(stoa@l+1)^0,f,c
  9352  00158A                     l3534:
  9353                           
  9354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  9355  00158A  5018               	movf	stoa@w^0,w,c
  9356  00158C  5C1E               	subwf	stoa@l^0,w,c
  9357  00158E  501F               	movf	(stoa@l+1)^0,w,c
  9358  001590  0A80               	xorlw	128
  9359  001592  6E0E               	movwf	??_stoa^0,c
  9360  001594  5019               	movf	(stoa@w+1)^0,w,c
  9361  001596  0A80               	xorlw	128
  9362  001598  580E               	subwfb	??_stoa^0,w,c
  9363  00159A  A0D8               	btfss	status,0,c
  9364  00159C  EFD2  F00A         	goto	u2431
  9365  0015A0  EFD4  F00A         	goto	u2430
  9366  0015A4                     u2431:
  9367  0015A4  EFB9  F00A         	goto	l3530
  9368  0015A8                     u2430:
  9369  0015A8                     l3536:
  9370                           
  9371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  9372  0015A8  0E00               	movlw	0
  9373  0015AA  6E17               	movwf	(stoa@i+1)^0,c
  9374  0015AC  0E00               	movlw	0
  9375  0015AE  6E16               	movwf	stoa@i^0,c
  9376                           
  9377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  9378  0015B0  EFED  F00A         	goto	l3544
  9379  0015B4                     l3538:
  9380                           
  9381                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  9382  0015B4  C01A  FFD9         	movff	stoa@cp,fsr2l
  9383  0015B8  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  9384  0015BC  50DF               	movf	indf2,w,c
  9385  0015BE  6E0E               	movwf	??_stoa^0,c
  9386  0015C0  500E               	movf	??_stoa^0,w,c
  9387  0015C2  6E01               	movwf	fputc@c^0,c
  9388  0015C4  6A02               	clrf	(fputc@c+1)^0,c
  9389  0015C6  C00A  F003         	movff	stoa@fp,fputc@fp
  9390  0015CA  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  9391  0015CE  EC98  F011         	call	_fputc	;wreg free
  9392  0015D2                     
  9393                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  9394  0015D2  4A1A               	infsnz	stoa@cp^0,f,c
  9395  0015D4  2A1B               	incf	(stoa@cp+1)^0,f,c
  9396  0015D6                     
  9397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  9398  0015D6  4A16               	infsnz	stoa@i^0,f,c
  9399  0015D8  2A17               	incf	(stoa@i+1)^0,f,c
  9400  0015DA                     l3544:
  9401                           
  9402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  9403  0015DA  501C               	movf	stoa@p^0,w,c
  9404  0015DC  5C16               	subwf	stoa@i^0,w,c
  9405  0015DE  5017               	movf	(stoa@i+1)^0,w,c
  9406  0015E0  0A80               	xorlw	128
  9407  0015E2  6E0E               	movwf	??_stoa^0,c
  9408  0015E4  501D               	movf	(stoa@p+1)^0,w,c
  9409  0015E6  0A80               	xorlw	128
  9410  0015E8  580E               	subwfb	??_stoa^0,w,c
  9411  0015EA  A0D8               	btfss	status,0,c
  9412  0015EC  EFFA  F00A         	goto	u2441
  9413  0015F0  EFFC  F00A         	goto	u2440
  9414  0015F4                     u2441:
  9415  0015F4  EFDA  F00A         	goto	l3538
  9416  0015F8                     u2440:
  9417  0015F8                     
  9418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  9419  0015F8  0100               	movlb	0	; () banked
  9420  0015FA  A176               	btfss	_flags& (0+255),0,b
  9421  0015FC  EF02  F00B         	goto	u2451
  9422  001600  EF04  F00B         	goto	u2450
  9423  001604                     u2451:
  9424  001604  EF21  F00B         	goto	l584
  9425  001608                     u2450:
  9426  001608  EF12  F00B         	goto	l3552
  9427  00160C                     l3548:
  9428                           
  9429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  9430  00160C  0E00               	movlw	0
  9431  00160E  6E02               	movwf	(fputc@c+1)^0,c
  9432  001610  0E20               	movlw	32
  9433  001612  6E01               	movwf	fputc@c^0,c
  9434  001614  C00A  F003         	movff	stoa@fp,fputc@fp
  9435  001618  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  9436  00161C  EC98  F011         	call	_fputc	;wreg free
  9437  001620                     
  9438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  9439  001620  4A1E               	infsnz	stoa@l^0,f,c
  9440  001622  2A1F               	incf	(stoa@l+1)^0,f,c
  9441  001624                     l3552:
  9442                           
  9443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  9444  001624  5018               	movf	stoa@w^0,w,c
  9445  001626  5C1E               	subwf	stoa@l^0,w,c
  9446  001628  501F               	movf	(stoa@l+1)^0,w,c
  9447  00162A  0A80               	xorlw	128
  9448  00162C  6E0E               	movwf	??_stoa^0,c
  9449  00162E  5019               	movf	(stoa@w+1)^0,w,c
  9450  001630  0A80               	xorlw	128
  9451  001632  580E               	subwfb	??_stoa^0,w,c
  9452  001634  A0D8               	btfss	status,0,c
  9453  001636  EF1F  F00B         	goto	u2461
  9454  00163A  EF21  F00B         	goto	u2460
  9455  00163E                     u2461:
  9456  00163E  EF06  F00B         	goto	l3548
  9457  001642                     u2460:
  9458  001642                     l584:
  9459                           
  9460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  9461  001642  C01E  F00A         	movff	stoa@l,?_stoa
  9462  001646  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  9463  00164A  0012               	return		;funcret
  9464  00164C                     __end_of_stoa:
  9465                           	opt callstack 0
  9466                           
  9467 ;; *************** function _dtoa *****************
  9468 ;; Defined at:
  9469 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9470 ;; Parameters:    Size  Location     Type
  9471 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9472 ;;		 -> sprintf@f(6), 
  9473 ;;  d               8   29[COMRAM] long long 
  9474 ;; Auto vars:     Size  Location     Type
  9475 ;;  n               8   53[COMRAM] long long 
  9476 ;;  i               2   61[COMRAM] int 
  9477 ;;  s               2   51[COMRAM] int 
  9478 ;;  w               2   49[COMRAM] int 
  9479 ;;  p               2   47[COMRAM] int 
  9480 ;; Return value:  Size  Location     Type
  9481 ;;                  2   27[COMRAM] int 
  9482 ;; Registers used:
  9483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9484 ;; Tracked objects:
  9485 ;;		On entry : 0/0
  9486 ;;		On exit  : 0/0
  9487 ;;		Unchanged: 0/0
  9488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9489 ;;      Params:        10       0       0       0       0       0       0       0       0
  9490 ;;      Locals:        18       0       0       0       0       0       0       0       0
  9491 ;;      Temps:          8       0       0       0       0       0       0       0       0
  9492 ;;      Totals:        36       0       0       0       0       0       0       0       0
  9493 ;;Total ram usage:       36 bytes
  9494 ;; Hardware stack levels used:    1
  9495 ;; Hardware stack levels required when called:    5
  9496 ;; This function calls:
  9497 ;;		___aodiv
  9498 ;;		___aomod
  9499 ;;		_abs
  9500 ;;		_pad
  9501 ;; This function is called by:
  9502 ;;		_vfpfcnvrt
  9503 ;; This function uses a non-reentrant model
  9504 ;;
  9505                           
  9506                           	psect	text43
  9507  000884                     __ptext43:
  9508                           	opt callstack 0
  9509  000884                     _dtoa:
  9510                           	opt callstack 20
  9511  000884                     
  9512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  9513  000884  C01E  F036         	movff	dtoa@d,dtoa@n
  9514  000888  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  9515  00088C  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  9516  000890  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  9517  000894  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  9518  000898  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  9519  00089C  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  9520  0008A0  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  9521  0008A4                     
  9522                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  9523  0008A4  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  9524  0008A6  EF57  F004         	goto	u2231
  9525  0008AA  EF5A  F004         	goto	u2230
  9526  0008AE                     u2231:
  9527  0008AE  0E01               	movlw	1
  9528  0008B0  EF5B  F004         	goto	u2240
  9529  0008B4                     u2230:
  9530  0008B4  0E00               	movlw	0
  9531  0008B6                     u2240:
  9532  0008B6  6E34               	movwf	dtoa@s^0,c
  9533  0008B8  6A35               	clrf	(dtoa@s+1)^0,c
  9534                           
  9535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  9536  0008BA  5034               	movf	dtoa@s^0,w,c
  9537  0008BC  1035               	iorwf	(dtoa@s+1)^0,w,c
  9538  0008BE  B4D8               	btfsc	status,2,c
  9539  0008C0  EF64  F004         	goto	u2251
  9540  0008C4  EF66  F004         	goto	u2250
  9541  0008C8                     u2251:
  9542  0008C8  EF76  F004         	goto	l3456
  9543  0008CC                     u2250:
  9544  0008CC                     
  9545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  9546  0008CC  1E3D               	comf	(dtoa@n+7)^0,f,c
  9547  0008CE  1E3C               	comf	(dtoa@n+6)^0,f,c
  9548  0008D0  1E3B               	comf	(dtoa@n+5)^0,f,c
  9549  0008D2  1E3A               	comf	(dtoa@n+4)^0,f,c
  9550  0008D4  1E39               	comf	(dtoa@n+3)^0,f,c
  9551  0008D6  1E38               	comf	(dtoa@n+2)^0,f,c
  9552  0008D8  1E37               	comf	(dtoa@n+1)^0,f,c
  9553  0008DA  6C36               	negf	dtoa@n^0,c
  9554  0008DC  0E00               	movlw	0
  9555  0008DE  2237               	addwfc	(dtoa@n+1)^0,f,c
  9556  0008E0  2238               	addwfc	(dtoa@n+2)^0,f,c
  9557  0008E2  2239               	addwfc	(dtoa@n+3)^0,f,c
  9558  0008E4  223A               	addwfc	(dtoa@n+4)^0,f,c
  9559  0008E6  223B               	addwfc	(dtoa@n+5)^0,f,c
  9560  0008E8  223C               	addwfc	(dtoa@n+6)^0,f,c
  9561  0008EA  223D               	addwfc	(dtoa@n+7)^0,f,c
  9562  0008EC                     l3456:
  9563                           
  9564                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  9565  0008EC  0100               	movlb	0	; () banked
  9566  0008EE  BF75               	btfsc	(_prec+1)& (0+255),7,b
  9567  0008F0  EF7C  F004         	goto	u2261
  9568  0008F4  EF7E  F004         	goto	u2260
  9569  0008F8                     u2261:
  9570  0008F8  EF7F  F004         	goto	l3460
  9571  0008FC                     u2260:
  9572  0008FC                     
  9573                           ; BSR set to: 0
  9574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  9575  0008FC  9376               	bcf	_flags& (0+255),1,b
  9576  0008FE                     l3460:
  9577                           
  9578                           ; BSR set to: 0
  9579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  9580  0008FE  BF75               	btfsc	(_prec+1)& (0+255),7,b
  9581  000900  EF8C  F004         	goto	u2270
  9582  000904  5175               	movf	(_prec+1)& (0+255),w,b
  9583  000906  E106               	bnz	u2271
  9584  000908  0574               	decf	_prec& (0+255),w,b
  9585  00090A  B0D8               	btfsc	status,0,c
  9586  00090C  EF8A  F004         	goto	u2271
  9587  000910  EF8C  F004         	goto	u2270
  9588  000914                     u2271:
  9589  000914  EF92  F004         	goto	l545
  9590  000918                     u2270:
  9591  000918                     
  9592                           ; BSR set to: 0
  9593  000918  0E00               	movlw	0
  9594  00091A  6E31               	movwf	(dtoa@p+1)^0,c
  9595  00091C  0E01               	movlw	1
  9596  00091E  6E30               	movwf	dtoa@p^0,c
  9597  000920  EF96  F004         	goto	l547
  9598  000924                     l545:
  9599                           
  9600                           ; BSR set to: 0
  9601  000924  C074  F030         	movff	_prec,dtoa@p
  9602  000928  C075  F031         	movff	_prec+1,dtoa@p+1
  9603  00092C                     l547:
  9604                           
  9605                           ; BSR set to: 0
  9606                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  9607  00092C  C072  F032         	movff	_width,dtoa@w
  9608  000930  C073  F033         	movff	_width+1,dtoa@w+1
  9609  000934                     
  9610                           ; BSR set to: 0
  9611                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  9612  000934  5034               	movf	dtoa@s^0,w,c
  9613  000936  1035               	iorwf	(dtoa@s+1)^0,w,c
  9614  000938  A4D8               	btfss	status,2,c
  9615  00093A  EFA1  F004         	goto	u2281
  9616  00093E  EFA3  F004         	goto	u2280
  9617  000942                     u2281:
  9618  000942  EFAA  F004         	goto	l3468
  9619  000946                     u2280:
  9620  000946                     
  9621                           ; BSR set to: 0
  9622  000946  A576               	btfss	_flags& (0+255),2,b
  9623  000948  EFA8  F004         	goto	u2291
  9624  00094C  EFAA  F004         	goto	u2290
  9625  000950                     u2291:
  9626  000950  EFAD  F004         	goto	l3470
  9627  000954                     u2290:
  9628  000954                     l3468:
  9629                           
  9630                           ; BSR set to: 0
  9631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  9632  000954  0632               	decf	dtoa@w^0,f,c
  9633  000956  A0D8               	btfss	status,0,c
  9634  000958  0633               	decf	(dtoa@w+1)^0,f,c
  9635  00095A                     l3470:
  9636                           
  9637                           ; BSR set to: 0
  9638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  9639  00095A  0E00               	movlw	0
  9640  00095C  6E3F               	movwf	(dtoa@i+1)^0,c
  9641  00095E  0E1F               	movlw	31
  9642  000960  6E3E               	movwf	dtoa@i^0,c
  9643  000962                     
  9644                           ; BSR set to: 0
  9645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  9646  000962  0E00               	movlw	0
  9647  000964  6FAC               	movwf	(_dbuf+31)& (0+255),b
  9648                           
  9649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9650  000966  EF31  F005         	goto	l3484
  9651  00096A                     l3474:
  9652                           
  9653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  9654  00096A  063E               	decf	dtoa@i^0,f,c
  9655  00096C  A0D8               	btfss	status,0,c
  9656  00096E  063F               	decf	(dtoa@i+1)^0,f,c
  9657  000970                     
  9658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  9659  000970  0E8D               	movlw	low _dbuf
  9660  000972  243E               	addwf	dtoa@i^0,w,c
  9661  000974  6ED9               	movwf	fsr2l,c
  9662  000976  0E00               	movlw	high _dbuf
  9663  000978  203F               	addwfc	(dtoa@i+1)^0,w,c
  9664  00097A  6EDA               	movwf	fsr2h,c
  9665  00097C  C036  F001         	movff	dtoa@n,___aomod@dividend
  9666  000980  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  9667  000984  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  9668  000988  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  9669  00098C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  9670  000990  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  9671  000994  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  9672  000998  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  9673  00099C  0E0A               	movlw	10
  9674  00099E  6E09               	movwf	___aomod@divisor^0,c
  9675  0009A0  0E00               	movlw	0
  9676  0009A2  6E0A               	movwf	(___aomod@divisor+1)^0,c
  9677  0009A4  0E00               	movlw	0
  9678  0009A6  6E0B               	movwf	(___aomod@divisor+2)^0,c
  9679  0009A8  0E00               	movlw	0
  9680  0009AA  6E0C               	movwf	(___aomod@divisor+3)^0,c
  9681  0009AC  0E00               	movlw	0
  9682  0009AE  6E0D               	movwf	(___aomod@divisor+4)^0,c
  9683  0009B0  0E00               	movlw	0
  9684  0009B2  6E0E               	movwf	(___aomod@divisor+5)^0,c
  9685  0009B4  0E00               	movlw	0
  9686  0009B6  6E0F               	movwf	(___aomod@divisor+6)^0,c
  9687  0009B8  0E00               	movlw	0
  9688  0009BA  6E10               	movwf	(___aomod@divisor+7)^0,c
  9689  0009BC  EC4E  F00D         	call	___aomod	;wreg free
  9690  0009C0  C001  F026         	movff	?___aomod,??_dtoa
  9691  0009C4  C002  F027         	movff	?___aomod+1,??_dtoa+1
  9692  0009C8  C003  F028         	movff	?___aomod+2,??_dtoa+2
  9693  0009CC  C004  F029         	movff	?___aomod+3,??_dtoa+3
  9694  0009D0  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  9695  0009D4  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  9696  0009D8  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  9697  0009DC  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  9698  0009E0  C026  F013         	movff	??_dtoa,abs@a
  9699  0009E4  C028  F014         	movff	??_dtoa+2,abs@a+1
  9700  0009E8  EC2F  F018         	call	_abs	;wreg free
  9701  0009EC  5013               	movf	?_abs^0,w,c
  9702  0009EE  0F30               	addlw	48
  9703  0009F0  6EDF               	movwf	indf2,c
  9704  0009F2                     
  9705                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  9706  0009F2  0630               	decf	dtoa@p^0,f,c
  9707  0009F4  A0D8               	btfss	status,0,c
  9708  0009F6  0631               	decf	(dtoa@p+1)^0,f,c
  9709  0009F8                     
  9710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  9711  0009F8  0632               	decf	dtoa@w^0,f,c
  9712  0009FA  A0D8               	btfss	status,0,c
  9713  0009FC  0633               	decf	(dtoa@w+1)^0,f,c
  9714  0009FE                     
  9715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  9716  0009FE  C036  F001         	movff	dtoa@n,___aodiv@dividend
  9717  000A02  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  9718  000A06  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  9719  000A0A  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  9720  000A0E  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  9721  000A12  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  9722  000A16  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  9723  000A1A  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  9724  000A1E  0E0A               	movlw	10
  9725  000A20  6E09               	movwf	___aodiv@divisor^0,c
  9726  000A22  0E00               	movlw	0
  9727  000A24  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  9728  000A26  0E00               	movlw	0
  9729  000A28  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  9730  000A2A  0E00               	movlw	0
  9731  000A2C  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  9732  000A2E  0E00               	movlw	0
  9733  000A30  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  9734  000A32  0E00               	movlw	0
  9735  000A34  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  9736  000A36  0E00               	movlw	0
  9737  000A38  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  9738  000A3A  0E00               	movlw	0
  9739  000A3C  6E10               	movwf	(___aodiv@divisor+7)^0,c
  9740  000A3E  EC9F  F009         	call	___aodiv	;wreg free
  9741  000A42  C001  F036         	movff	?___aodiv,dtoa@n
  9742  000A46  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  9743  000A4A  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  9744  000A4E  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  9745  000A52  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  9746  000A56  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  9747  000A5A  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  9748  000A5E  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  9749  000A62                     l3484:
  9750                           
  9751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9752  000A62  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  9753  000A64  EF3C  F005         	goto	u2301
  9754  000A68  503F               	movf	(dtoa@i+1)^0,w,c
  9755  000A6A  E108               	bnz	u2300
  9756  000A6C  043E               	decf	dtoa@i^0,w,c
  9757  000A6E  A0D8               	btfss	status,0,c
  9758  000A70  EF3C  F005         	goto	u2301
  9759  000A74  EF3E  F005         	goto	u2300
  9760  000A78                     u2301:
  9761  000A78  EF6F  F005         	goto	l3494
  9762  000A7C                     u2300:
  9763  000A7C  5036               	movf	dtoa@n^0,w,c
  9764  000A7E  1037               	iorwf	(dtoa@n+1)^0,w,c
  9765  000A80  1038               	iorwf	(dtoa@n+2)^0,w,c
  9766  000A82  1039               	iorwf	(dtoa@n+3)^0,w,c
  9767  000A84  103A               	iorwf	(dtoa@n+4)^0,w,c
  9768  000A86  103B               	iorwf	(dtoa@n+5)^0,w,c
  9769  000A88  103C               	iorwf	(dtoa@n+6)^0,w,c
  9770  000A8A  103D               	iorwf	(dtoa@n+7)^0,w,c
  9771  000A8C  A4D8               	btfss	status,2,c
  9772  000A8E  EF4B  F005         	goto	u2311
  9773  000A92  EF4D  F005         	goto	u2310
  9774  000A96                     u2311:
  9775  000A96  EFB5  F004         	goto	l3474
  9776  000A9A                     u2310:
  9777  000A9A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  9778  000A9C  EF5A  F005         	goto	u2320
  9779  000AA0  5031               	movf	(dtoa@p+1)^0,w,c
  9780  000AA2  E106               	bnz	u2321
  9781  000AA4  0430               	decf	dtoa@p^0,w,c
  9782  000AA6  B0D8               	btfsc	status,0,c
  9783  000AA8  EF58  F005         	goto	u2321
  9784  000AAC  EF5A  F005         	goto	u2320
  9785  000AB0                     u2321:
  9786  000AB0  EFB5  F004         	goto	l3474
  9787  000AB4                     u2320:
  9788  000AB4  BE33               	btfsc	(dtoa@w+1)^0,7,c
  9789  000AB6  EF65  F005         	goto	u2331
  9790  000ABA  5033               	movf	(dtoa@w+1)^0,w,c
  9791  000ABC  E108               	bnz	u2330
  9792  000ABE  0432               	decf	dtoa@w^0,w,c
  9793  000AC0  A0D8               	btfss	status,0,c
  9794  000AC2  EF65  F005         	goto	u2331
  9795  000AC6  EF67  F005         	goto	u2330
  9796  000ACA                     u2331:
  9797  000ACA  EF6F  F005         	goto	l3494
  9798  000ACE                     u2330:
  9799  000ACE  0100               	movlb	0	; () banked
  9800  000AD0  B376               	btfsc	_flags& (0+255),1,b
  9801  000AD2  EF6D  F005         	goto	u2341
  9802  000AD6  EF6F  F005         	goto	u2340
  9803  000ADA                     u2341:
  9804  000ADA  EFB5  F004         	goto	l3474
  9805  000ADE                     u2340:
  9806  000ADE                     l3494:
  9807                           
  9808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  9809  000ADE  5034               	movf	dtoa@s^0,w,c
  9810  000AE0  1035               	iorwf	(dtoa@s+1)^0,w,c
  9811  000AE2  A4D8               	btfss	status,2,c
  9812  000AE4  EF76  F005         	goto	u2351
  9813  000AE8  EF78  F005         	goto	u2350
  9814  000AEC                     u2351:
  9815  000AEC  EF80  F005         	goto	l3498
  9816  000AF0                     u2350:
  9817  000AF0  0100               	movlb	0	; () banked
  9818  000AF2  A576               	btfss	_flags& (0+255),2,b
  9819  000AF4  EF7E  F005         	goto	u2361
  9820  000AF8  EF80  F005         	goto	u2360
  9821  000AFC                     u2361:
  9822  000AFC  EF9E  F005         	goto	l3508
  9823  000B00                     u2360:
  9824  000B00                     l3498:
  9825                           
  9826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  9827  000B00  063E               	decf	dtoa@i^0,f,c
  9828  000B02  A0D8               	btfss	status,0,c
  9829  000B04  063F               	decf	(dtoa@i+1)^0,f,c
  9830  000B06                     
  9831                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9832  000B06  5034               	movf	dtoa@s^0,w,c
  9833  000B08  1035               	iorwf	(dtoa@s+1)^0,w,c
  9834  000B0A  A4D8               	btfss	status,2,c
  9835  000B0C  EF8A  F005         	goto	u2371
  9836  000B10  EF8C  F005         	goto	u2370
  9837  000B14                     u2371:
  9838  000B14  EF92  F005         	goto	l3504
  9839  000B18                     u2370:
  9840  000B18  0E00               	movlw	0
  9841  000B1A  6E2F               	movwf	(_dtoa$1088+1)^0,c
  9842  000B1C  0E2B               	movlw	43
  9843  000B1E  6E2E               	movwf	_dtoa$1088^0,c
  9844  000B20  EF96  F005         	goto	l3506
  9845  000B24                     l3504:
  9846  000B24  0E00               	movlw	0
  9847  000B26  6E2F               	movwf	(_dtoa$1088+1)^0,c
  9848  000B28  0E2D               	movlw	45
  9849  000B2A  6E2E               	movwf	_dtoa$1088^0,c
  9850  000B2C                     l3506:
  9851  000B2C  0E8D               	movlw	low _dbuf
  9852  000B2E  243E               	addwf	dtoa@i^0,w,c
  9853  000B30  6ED9               	movwf	fsr2l,c
  9854  000B32  0E00               	movlw	high _dbuf
  9855  000B34  203F               	addwfc	(dtoa@i+1)^0,w,c
  9856  000B36  6EDA               	movwf	fsr2h,c
  9857  000B38  C02E  FFDF         	movff	_dtoa$1088,indf2
  9858  000B3C                     l3508:
  9859                           
  9860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9861  000B3C  C01C  F011         	movff	dtoa@fp,pad@fp
  9862  000B40  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  9863  000B44  0E8D               	movlw	low _dbuf
  9864  000B46  243E               	addwf	dtoa@i^0,w,c
  9865  000B48  6E13               	movwf	pad@buf^0,c
  9866  000B4A  0E00               	movlw	high _dbuf
  9867  000B4C  203F               	addwfc	(dtoa@i+1)^0,w,c
  9868  000B4E  6E14               	movwf	(pad@buf+1)^0,c
  9869  000B50  C032  F015         	movff	dtoa@w,pad@p
  9870  000B54  C033  F016         	movff	dtoa@w+1,pad@p+1
  9871  000B58  ECFD  F011         	call	_pad	;wreg free
  9872  000B5C  C011  F01C         	movff	?_pad,?_dtoa
  9873  000B60  C012  F01D         	movff	?_pad+1,?_dtoa+1
  9874  000B64  0012               	return		;funcret
  9875  000B66                     __end_of_dtoa:
  9876                           	opt callstack 0
  9877                           
  9878 ;; *************** function _abs *****************
  9879 ;; Defined at:
  9880 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  9881 ;; Parameters:    Size  Location     Type
  9882 ;;  a               2   18[COMRAM] int 
  9883 ;; Auto vars:     Size  Location     Type
  9884 ;;		None
  9885 ;; Return value:  Size  Location     Type
  9886 ;;                  2   18[COMRAM] int 
  9887 ;; Registers used:
  9888 ;;		wreg, status,2, status,0
  9889 ;; Tracked objects:
  9890 ;;		On entry : 0/0
  9891 ;;		On exit  : 0/0
  9892 ;;		Unchanged: 0/0
  9893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9894 ;;      Params:         2       0       0       0       0       0       0       0       0
  9895 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9896 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9897 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9898 ;;Total ram usage:        4 bytes
  9899 ;; Hardware stack levels used:    1
  9900 ;; Hardware stack levels required when called:    1
  9901 ;; This function calls:
  9902 ;;		Nothing
  9903 ;; This function is called by:
  9904 ;;		_dtoa
  9905 ;; This function uses a non-reentrant model
  9906 ;;
  9907                           
  9908                           	psect	text44
  9909  00305E                     __ptext44:
  9910                           	opt callstack 0
  9911  00305E                     _abs:
  9912                           	opt callstack 23
  9913  00305E  BE14               	btfsc	(abs@a+1)^0,7,c
  9914  003060  EF3C  F018         	goto	u2040
  9915  003064  5014               	movf	(abs@a+1)^0,w,c
  9916  003066  E106               	bnz	u2041
  9917  003068  0413               	decf	abs@a^0,w,c
  9918  00306A  B0D8               	btfsc	status,0,c
  9919  00306C  EF3A  F018         	goto	u2041
  9920  003070  EF3C  F018         	goto	u2040
  9921  003074                     u2041:
  9922  003074  EF4A  F018         	goto	l1314
  9923  003078                     u2040:
  9924  003078  C013  F015         	movff	abs@a,??_abs
  9925  00307C  C014  F016         	movff	abs@a+1,??_abs+1
  9926  003080  1E15               	comf	??_abs^0,f,c
  9927  003082  1E16               	comf	(??_abs+1)^0,f,c
  9928  003084  4A15               	infsnz	??_abs^0,f,c
  9929  003086  2A16               	incf	(??_abs+1)^0,f,c
  9930  003088  C015  F013         	movff	??_abs,?_abs
  9931  00308C  C016  F014         	movff	??_abs+1,?_abs+1
  9932  003090  EF4E  F018         	goto	l1317
  9933  003094                     l1314:
  9934  003094  C013  F013         	movff	abs@a,?_abs
  9935  003098  C014  F014         	movff	abs@a+1,?_abs+1
  9936  00309C                     l1317:
  9937  00309C  0012               	return		;funcret
  9938  00309E                     __end_of_abs:
  9939                           	opt callstack 0
  9940                           
  9941 ;; *************** function ___aomod *****************
  9942 ;; Defined at:
  9943 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  9944 ;; Parameters:    Size  Location     Type
  9945 ;;  dividend        8    0[COMRAM] long long 
  9946 ;;  divisor         8    8[COMRAM] long long 
  9947 ;; Auto vars:     Size  Location     Type
  9948 ;;  sign            1   17[COMRAM] unsigned char 
  9949 ;;  counter         1   16[COMRAM] unsigned char 
  9950 ;; Return value:  Size  Location     Type
  9951 ;;                  8    0[COMRAM] long long 
  9952 ;; Registers used:
  9953 ;;		wreg, status,2, status,0
  9954 ;; Tracked objects:
  9955 ;;		On entry : 0/0
  9956 ;;		On exit  : 0/0
  9957 ;;		Unchanged: 0/0
  9958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9959 ;;      Params:        16       0       0       0       0       0       0       0       0
  9960 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9962 ;;      Totals:        18       0       0       0       0       0       0       0       0
  9963 ;;Total ram usage:       18 bytes
  9964 ;; Hardware stack levels used:    1
  9965 ;; Hardware stack levels required when called:    1
  9966 ;; This function calls:
  9967 ;;		Nothing
  9968 ;; This function is called by:
  9969 ;;		_dtoa
  9970 ;; This function uses a non-reentrant model
  9971 ;;
  9972                           
  9973                           	psect	text45
  9974  001A9C                     __ptext45:
  9975                           	opt callstack 0
  9976  001A9C                     ___aomod:
  9977                           	opt callstack 23
  9978  001A9C  0E00               	movlw	0
  9979  001A9E  6E12               	movwf	___aomod@sign^0,c
  9980  001AA0  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  9981  001AA2  EF57  F00D         	goto	u2140
  9982  001AA6  EF55  F00D         	goto	u2141
  9983  001AAA                     u2141:
  9984  001AAA  EF69  F00D         	goto	l3396
  9985  001AAE                     u2140:
  9986  001AAE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  9987  001AB0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  9988  001AB2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  9989  001AB4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  9990  001AB6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  9991  001AB8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  9992  001ABA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  9993  001ABC  6C01               	negf	___aomod@dividend^0,c
  9994  001ABE  0E00               	movlw	0
  9995  001AC0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  9996  001AC2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  9997  001AC4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  9998  001AC6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  9999  001AC8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 10000  001ACA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 10001  001ACC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 10002  001ACE  0E01               	movlw	1
 10003  001AD0  6E12               	movwf	___aomod@sign^0,c
 10004  001AD2                     l3396:
 10005  001AD2  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 10006  001AD4  EF70  F00D         	goto	u2150
 10007  001AD8  EF6E  F00D         	goto	u2151
 10008  001ADC                     u2151:
 10009  001ADC  EF80  F00D         	goto	l3400
 10010  001AE0                     u2150:
 10011  001AE0  1E10               	comf	(___aomod@divisor+7)^0,f,c
 10012  001AE2  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 10013  001AE4  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 10014  001AE6  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 10015  001AE8  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 10016  001AEA  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 10017  001AEC  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 10018  001AEE  6C09               	negf	___aomod@divisor^0,c
 10019  001AF0  0E00               	movlw	0
 10020  001AF2  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 10021  001AF4  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 10022  001AF6  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 10023  001AF8  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 10024  001AFA  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 10025  001AFC  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 10026  001AFE  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 10027  001B00                     l3400:
 10028  001B00  5009               	movf	___aomod@divisor^0,w,c
 10029  001B02  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 10030  001B04  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 10031  001B06  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 10032  001B08  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 10033  001B0A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 10034  001B0C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 10035  001B0E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 10036  001B10  B4D8               	btfsc	status,2,c
 10037  001B12  EF8D  F00D         	goto	u2161
 10038  001B16  EF8F  F00D         	goto	u2160
 10039  001B1A                     u2161:
 10040  001B1A  EFD7  F00D         	goto	l3416
 10041  001B1E                     u2160:
 10042  001B1E  0E01               	movlw	1
 10043  001B20  6E11               	movwf	___aomod@counter^0,c
 10044  001B22  EF9D  F00D         	goto	l3406
 10045  001B26                     l3404:
 10046  001B26  90D8               	bcf	status,0,c
 10047  001B28  3609               	rlcf	___aomod@divisor^0,f,c
 10048  001B2A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 10049  001B2C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 10050  001B2E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 10051  001B30  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 10052  001B32  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 10053  001B34  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 10054  001B36  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 10055  001B38  2A11               	incf	___aomod@counter^0,f,c
 10056  001B3A                     l3406:
 10057  001B3A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 10058  001B3C  EFA2  F00D         	goto	u2171
 10059  001B40  EFA4  F00D         	goto	u2170
 10060  001B44                     u2171:
 10061  001B44  EF93  F00D         	goto	l3404
 10062  001B48                     u2170:
 10063  001B48                     l3408:
 10064  001B48  5009               	movf	___aomod@divisor^0,w,c
 10065  001B4A  5C01               	subwf	___aomod@dividend^0,w,c
 10066  001B4C  500A               	movf	(___aomod@divisor+1)^0,w,c
 10067  001B4E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 10068  001B50  500B               	movf	(___aomod@divisor+2)^0,w,c
 10069  001B52  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 10070  001B54  500C               	movf	(___aomod@divisor+3)^0,w,c
 10071  001B56  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 10072  001B58  500D               	movf	(___aomod@divisor+4)^0,w,c
 10073  001B5A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 10074  001B5C  500E               	movf	(___aomod@divisor+5)^0,w,c
 10075  001B5E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 10076  001B60  500F               	movf	(___aomod@divisor+6)^0,w,c
 10077  001B62  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 10078  001B64  5010               	movf	(___aomod@divisor+7)^0,w,c
 10079  001B66  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 10080  001B68  A0D8               	btfss	status,0,c
 10081  001B6A  EFB9  F00D         	goto	u2181
 10082  001B6E  EFBB  F00D         	goto	u2180
 10083  001B72                     u2181:
 10084  001B72  EFCB  F00D         	goto	l3412
 10085  001B76                     u2180:
 10086  001B76  5009               	movf	___aomod@divisor^0,w,c
 10087  001B78  5E01               	subwf	___aomod@dividend^0,f,c
 10088  001B7A  500A               	movf	(___aomod@divisor+1)^0,w,c
 10089  001B7C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 10090  001B7E  500B               	movf	(___aomod@divisor+2)^0,w,c
 10091  001B80  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 10092  001B82  500C               	movf	(___aomod@divisor+3)^0,w,c
 10093  001B84  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 10094  001B86  500D               	movf	(___aomod@divisor+4)^0,w,c
 10095  001B88  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 10096  001B8A  500E               	movf	(___aomod@divisor+5)^0,w,c
 10097  001B8C  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 10098  001B8E  500F               	movf	(___aomod@divisor+6)^0,w,c
 10099  001B90  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 10100  001B92  5010               	movf	(___aomod@divisor+7)^0,w,c
 10101  001B94  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 10102  001B96                     l3412:
 10103  001B96  90D8               	bcf	status,0,c
 10104  001B98  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 10105  001B9A  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 10106  001B9C  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 10107  001B9E  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 10108  001BA0  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 10109  001BA2  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 10110  001BA4  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 10111  001BA6  3209               	rrcf	___aomod@divisor^0,f,c
 10112  001BA8  2E11               	decfsz	___aomod@counter^0,f,c
 10113  001BAA  EFA4  F00D         	goto	l3408
 10114  001BAE                     l3416:
 10115  001BAE  5012               	movf	___aomod@sign^0,w,c
 10116  001BB0  B4D8               	btfsc	status,2,c
 10117  001BB2  EFDD  F00D         	goto	u2191
 10118  001BB6  EFDF  F00D         	goto	u2190
 10119  001BBA                     u2191:
 10120  001BBA  EFEF  F00D         	goto	l3420
 10121  001BBE                     u2190:
 10122  001BBE  1E08               	comf	(___aomod@dividend+7)^0,f,c
 10123  001BC0  1E07               	comf	(___aomod@dividend+6)^0,f,c
 10124  001BC2  1E06               	comf	(___aomod@dividend+5)^0,f,c
 10125  001BC4  1E05               	comf	(___aomod@dividend+4)^0,f,c
 10126  001BC6  1E04               	comf	(___aomod@dividend+3)^0,f,c
 10127  001BC8  1E03               	comf	(___aomod@dividend+2)^0,f,c
 10128  001BCA  1E02               	comf	(___aomod@dividend+1)^0,f,c
 10129  001BCC  6C01               	negf	___aomod@dividend^0,c
 10130  001BCE  0E00               	movlw	0
 10131  001BD0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 10132  001BD2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 10133  001BD4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 10134  001BD6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 10135  001BD8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 10136  001BDA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 10137  001BDC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 10138  001BDE                     l3420:
 10139  001BDE  C001  F001         	movff	___aomod@dividend,?___aomod
 10140  001BE2  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 10141  001BE6  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 10142  001BEA  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 10143  001BEE  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 10144  001BF2  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 10145  001BF6  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 10146  001BFA  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 10147  001BFE  0012               	return		;funcret
 10148  001C00                     __end_of___aomod:
 10149                           	opt callstack 0
 10150                           
 10151 ;; *************** function ___aodiv *****************
 10152 ;; Defined at:
 10153 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 10154 ;; Parameters:    Size  Location     Type
 10155 ;;  dividend        8    0[COMRAM] long long 
 10156 ;;  divisor         8    8[COMRAM] long long 
 10157 ;; Auto vars:     Size  Location     Type
 10158 ;;  quotient        8   18[COMRAM] long long 
 10159 ;;  sign            1   17[COMRAM] unsigned char 
 10160 ;;  counter         1   16[COMRAM] unsigned char 
 10161 ;; Return value:  Size  Location     Type
 10162 ;;                  8    0[COMRAM] long long 
 10163 ;; Registers used:
 10164 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10165 ;; Tracked objects:
 10166 ;;		On entry : 0/0
 10167 ;;		On exit  : 0/0
 10168 ;;		Unchanged: 0/0
 10169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10170 ;;      Params:        16       0       0       0       0       0       0       0       0
 10171 ;;      Locals:        10       0       0       0       0       0       0       0       0
 10172 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10173 ;;      Totals:        26       0       0       0       0       0       0       0       0
 10174 ;;Total ram usage:       26 bytes
 10175 ;; Hardware stack levels used:    1
 10176 ;; Hardware stack levels required when called:    1
 10177 ;; This function calls:
 10178 ;;		Nothing
 10179 ;; This function is called by:
 10180 ;;		_dtoa
 10181 ;; This function uses a non-reentrant model
 10182 ;;
 10183                           
 10184                           	psect	text46
 10185  00133E                     __ptext46:
 10186                           	opt callstack 0
 10187  00133E                     ___aodiv:
 10188                           	opt callstack 23
 10189  00133E  0E00               	movlw	0
 10190  001340  6E12               	movwf	___aodiv@sign^0,c
 10191  001342  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 10192  001344  EFA8  F009         	goto	u2070
 10193  001348  EFA6  F009         	goto	u2071
 10194  00134C                     u2071:
 10195  00134C  EFBA  F009         	goto	l3352
 10196  001350                     u2070:
 10197  001350  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 10198  001352  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 10199  001354  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 10200  001356  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 10201  001358  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 10202  00135A  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 10203  00135C  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 10204  00135E  6C09               	negf	___aodiv@divisor^0,c
 10205  001360  0E00               	movlw	0
 10206  001362  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 10207  001364  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 10208  001366  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 10209  001368  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 10210  00136A  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 10211  00136C  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 10212  00136E  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 10213  001370  0E01               	movlw	1
 10214  001372  6E12               	movwf	___aodiv@sign^0,c
 10215  001374                     l3352:
 10216  001374  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 10217  001376  EFC1  F009         	goto	u2080
 10218  00137A  EFBF  F009         	goto	u2081
 10219  00137E                     u2081:
 10220  00137E  EFD3  F009         	goto	l3358
 10221  001382                     u2080:
 10222  001382  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 10223  001384  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 10224  001386  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 10225  001388  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 10226  00138A  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 10227  00138C  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 10228  00138E  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 10229  001390  6C01               	negf	___aodiv@dividend^0,c
 10230  001392  0E00               	movlw	0
 10231  001394  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 10232  001396  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 10233  001398  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 10234  00139A  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 10235  00139C  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 10236  00139E  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 10237  0013A0  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 10238  0013A2  0E01               	movlw	1
 10239  0013A4  1A12               	xorwf	___aodiv@sign^0,f,c
 10240  0013A6                     l3358:
 10241  0013A6  EE20  F013         	lfsr	2,___aodiv@quotient
 10242  0013AA  0E07               	movlw	7
 10243  0013AC                     u2091:
 10244  0013AC  6ADE               	clrf	postinc2,c
 10245  0013AE  06E8               	decf	wreg,f,c
 10246  0013B0  E2FD               	bc	u2091
 10247  0013B2  5009               	movf	___aodiv@divisor^0,w,c
 10248  0013B4  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 10249  0013B6  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 10250  0013B8  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 10251  0013BA  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 10252  0013BC  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 10253  0013BE  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 10254  0013C0  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 10255  0013C2  B4D8               	btfsc	status,2,c
 10256  0013C4  EFE6  F009         	goto	u2101
 10257  0013C8  EFE8  F009         	goto	u2100
 10258  0013CC                     u2101:
 10259  0013CC  EF3A  F00A         	goto	l3380
 10260  0013D0                     u2100:
 10261  0013D0  0E01               	movlw	1
 10262  0013D2  6E11               	movwf	___aodiv@counter^0,c
 10263  0013D4  EFF6  F009         	goto	l3366
 10264  0013D8                     l3364:
 10265  0013D8  90D8               	bcf	status,0,c
 10266  0013DA  3609               	rlcf	___aodiv@divisor^0,f,c
 10267  0013DC  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 10268  0013DE  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 10269  0013E0  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 10270  0013E2  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 10271  0013E4  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 10272  0013E6  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 10273  0013E8  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 10274  0013EA  2A11               	incf	___aodiv@counter^0,f,c
 10275  0013EC                     l3366:
 10276  0013EC  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 10277  0013EE  EFFB  F009         	goto	u2111
 10278  0013F2  EFFD  F009         	goto	u2110
 10279  0013F6                     u2111:
 10280  0013F6  EFEC  F009         	goto	l3364
 10281  0013FA                     u2110:
 10282  0013FA                     l3368:
 10283  0013FA  90D8               	bcf	status,0,c
 10284  0013FC  3613               	rlcf	___aodiv@quotient^0,f,c
 10285  0013FE  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 10286  001400  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 10287  001402  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 10288  001404  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 10289  001406  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 10290  001408  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 10291  00140A  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 10292  00140C  5009               	movf	___aodiv@divisor^0,w,c
 10293  00140E  5C01               	subwf	___aodiv@dividend^0,w,c
 10294  001410  500A               	movf	(___aodiv@divisor+1)^0,w,c
 10295  001412  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 10296  001414  500B               	movf	(___aodiv@divisor+2)^0,w,c
 10297  001416  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 10298  001418  500C               	movf	(___aodiv@divisor+3)^0,w,c
 10299  00141A  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 10300  00141C  500D               	movf	(___aodiv@divisor+4)^0,w,c
 10301  00141E  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 10302  001420  500E               	movf	(___aodiv@divisor+5)^0,w,c
 10303  001422  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 10304  001424  500F               	movf	(___aodiv@divisor+6)^0,w,c
 10305  001426  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 10306  001428  5010               	movf	(___aodiv@divisor+7)^0,w,c
 10307  00142A  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 10308  00142C  A0D8               	btfss	status,0,c
 10309  00142E  EF1B  F00A         	goto	u2121
 10310  001432  EF1D  F00A         	goto	u2120
 10311  001436                     u2121:
 10312  001436  EF2E  F00A         	goto	l3376
 10313  00143A                     u2120:
 10314  00143A  5009               	movf	___aodiv@divisor^0,w,c
 10315  00143C  5E01               	subwf	___aodiv@dividend^0,f,c
 10316  00143E  500A               	movf	(___aodiv@divisor+1)^0,w,c
 10317  001440  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 10318  001442  500B               	movf	(___aodiv@divisor+2)^0,w,c
 10319  001444  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 10320  001446  500C               	movf	(___aodiv@divisor+3)^0,w,c
 10321  001448  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 10322  00144A  500D               	movf	(___aodiv@divisor+4)^0,w,c
 10323  00144C  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 10324  00144E  500E               	movf	(___aodiv@divisor+5)^0,w,c
 10325  001450  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 10326  001452  500F               	movf	(___aodiv@divisor+6)^0,w,c
 10327  001454  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 10328  001456  5010               	movf	(___aodiv@divisor+7)^0,w,c
 10329  001458  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 10330  00145A  8013               	bsf	___aodiv@quotient^0,0,c
 10331  00145C                     l3376:
 10332  00145C  90D8               	bcf	status,0,c
 10333  00145E  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 10334  001460  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 10335  001462  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 10336  001464  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 10337  001466  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 10338  001468  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 10339  00146A  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 10340  00146C  3209               	rrcf	___aodiv@divisor^0,f,c
 10341  00146E  2E11               	decfsz	___aodiv@counter^0,f,c
 10342  001470  EFFD  F009         	goto	l3368
 10343  001474                     l3380:
 10344  001474  5012               	movf	___aodiv@sign^0,w,c
 10345  001476  B4D8               	btfsc	status,2,c
 10346  001478  EF40  F00A         	goto	u2131
 10347  00147C  EF42  F00A         	goto	u2130
 10348  001480                     u2131:
 10349  001480  EF52  F00A         	goto	l3384
 10350  001484                     u2130:
 10351  001484  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 10352  001486  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 10353  001488  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 10354  00148A  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 10355  00148C  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 10356  00148E  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 10357  001490  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 10358  001492  6C13               	negf	___aodiv@quotient^0,c
 10359  001494  0E00               	movlw	0
 10360  001496  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 10361  001498  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 10362  00149A  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 10363  00149C  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 10364  00149E  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 10365  0014A0  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 10366  0014A2  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 10367  0014A4                     l3384:
 10368  0014A4  C013  F001         	movff	___aodiv@quotient,?___aodiv
 10369  0014A8  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 10370  0014AC  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 10371  0014B0  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 10372  0014B4  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 10373  0014B8  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 10374  0014BC  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 10375  0014C0  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 10376  0014C4  0012               	return		;funcret
 10377  0014C6                     __end_of___aodiv:
 10378                           	opt callstack 0
 10379                           
 10380 ;; *************** function _ctoa *****************
 10381 ;; Defined at:
 10382 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10383 ;; Parameters:    Size  Location     Type
 10384 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 10385 ;;		 -> sprintf@f(6), 
 10386 ;;  c               1   29[COMRAM] unsigned char 
 10387 ;; Auto vars:     Size  Location     Type
 10388 ;;  w               2   30[COMRAM] int 
 10389 ;;  l               2    0        int 
 10390 ;; Return value:  Size  Location     Type
 10391 ;;                  2   27[COMRAM] int 
 10392 ;; Registers used:
 10393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10394 ;; Tracked objects:
 10395 ;;		On entry : 0/0
 10396 ;;		On exit  : 0/0
 10397 ;;		Unchanged: 0/0
 10398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10399 ;;      Params:         3       0       0       0       0       0       0       0       0
 10400 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10401 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10402 ;;      Totals:         5       0       0       0       0       0       0       0       0
 10403 ;;Total ram usage:        5 bytes
 10404 ;; Hardware stack levels used:    1
 10405 ;; Hardware stack levels required when called:    5
 10406 ;; This function calls:
 10407 ;;		_pad
 10408 ;; This function is called by:
 10409 ;;		_vfpfcnvrt
 10410 ;; This function uses a non-reentrant model
 10411 ;;
 10412                           
 10413                           	psect	text47
 10414  002DB4                     __ptext47:
 10415                           	opt callstack 0
 10416  002DB4                     _ctoa:
 10417                           	opt callstack 20
 10418  002DB4                     
 10419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 10420  002DB4  0100               	movlb	0	; () banked
 10421  002DB6  5172               	movf	_width& (0+255),w,b
 10422  002DB8  1173               	iorwf	(_width+1)& (0+255),w,b
 10423  002DBA  A4D8               	btfss	status,2,c
 10424  002DBC  EFE2  F016         	goto	u2221
 10425  002DC0  EFE4  F016         	goto	u2220
 10426  002DC4                     u2221:
 10427  002DC4  EFEA  F016         	goto	l3440
 10428  002DC8                     u2220:
 10429  002DC8                     
 10430                           ; BSR set to: 0
 10431  002DC8  C072  F01F         	movff	_width,ctoa@w
 10432  002DCC  C073  F020         	movff	_width+1,ctoa@w+1
 10433  002DD0  EFF0  F016         	goto	l3442
 10434  002DD4                     l3440:
 10435                           
 10436                           ; BSR set to: 0
 10437  002DD4  0EFF               	movlw	255
 10438  002DD6  2572               	addwf	_width& (0+255),w,b
 10439  002DD8  6E1F               	movwf	ctoa@w^0,c
 10440  002DDA  0EFF               	movlw	255
 10441  002DDC  2173               	addwfc	(_width+1)& (0+255),w,b
 10442  002DDE  6E20               	movwf	(ctoa@w+1)^0,c
 10443  002DE0                     l3442:
 10444                           
 10445                           ; BSR set to: 0
 10446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 10447  002DE0  C01E  F08D         	movff	ctoa@c,_dbuf
 10448  002DE4                     
 10449                           ; BSR set to: 0
 10450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 10451  002DE4  0E00               	movlw	0
 10452  002DE6  6F8E               	movwf	(_dbuf+1)& (0+255),b
 10453  002DE8                     
 10454                           ; BSR set to: 0
 10455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 10456  002DE8  C01C  F011         	movff	ctoa@fp,pad@fp
 10457  002DEC  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
 10458  002DF0  0E8D               	movlw	low _dbuf
 10459  002DF2  6E13               	movwf	pad@buf^0,c
 10460  002DF4  0E00               	movlw	high _dbuf
 10461  002DF6  6E14               	movwf	(pad@buf+1)^0,c
 10462  002DF8  C01F  F015         	movff	ctoa@w,pad@p
 10463  002DFC  C020  F016         	movff	ctoa@w+1,pad@p+1
 10464  002E00  ECFD  F011         	call	_pad	;wreg free
 10465  002E04  C011  F01C         	movff	?_pad,?_ctoa
 10466  002E08  C012  F01D         	movff	?_pad+1,?_ctoa+1
 10467  002E0C  0012               	return		;funcret
 10468  002E0E                     __end_of_ctoa:
 10469                           	opt callstack 0
 10470                           
 10471 ;; *************** function _pad *****************
 10472 ;; Defined at:
 10473 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10474 ;; Parameters:    Size  Location     Type
 10475 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 10476 ;;		 -> sprintf@f(6), 
 10477 ;;  buf             2   18[COMRAM] PTR unsigned char 
 10478 ;;		 -> dbuf(32), 
 10479 ;;  p               2   20[COMRAM] int 
 10480 ;; Auto vars:     Size  Location     Type
 10481 ;;  w               2   25[COMRAM] int 
 10482 ;;  i               2   23[COMRAM] int 
 10483 ;; Return value:  Size  Location     Type
 10484 ;;                  2   16[COMRAM] int 
 10485 ;; Registers used:
 10486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10487 ;; Tracked objects:
 10488 ;;		On entry : 0/0
 10489 ;;		On exit  : 0/0
 10490 ;;		Unchanged: 0/0
 10491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10492 ;;      Params:         6       0       0       0       0       0       0       0       0
 10493 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10494 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10495 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10496 ;;Total ram usage:       11 bytes
 10497 ;; Hardware stack levels used:    1
 10498 ;; Hardware stack levels required when called:    4
 10499 ;; This function calls:
 10500 ;;		_fputc
 10501 ;;		_fputs
 10502 ;;		_strlen
 10503 ;; This function is called by:
 10504 ;;		_ctoa
 10505 ;;		_dtoa
 10506 ;; This function uses a non-reentrant model
 10507 ;;
 10508                           
 10509                           	psect	text48
 10510  0023FA                     __ptext48:
 10511                           	opt callstack 0
 10512  0023FA                     _pad:
 10513                           	opt callstack 20
 10514  0023FA                     
 10515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 10516  0023FA  0100               	movlb	0	; () banked
 10517  0023FC  A176               	btfss	_flags& (0+255),0,b
 10518  0023FE  EF03  F012         	goto	u2001
 10519  002402  EF05  F012         	goto	u2000
 10520  002406                     u2001:
 10521  002406  EF0F  F012         	goto	l3312
 10522  00240A                     u2000:
 10523  00240A                     
 10524                           ; BSR set to: 0
 10525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 10526  00240A  C013  F00A         	movff	pad@buf,fputs@s
 10527  00240E  C014  F00B         	movff	pad@buf+1,fputs@s+1
 10528  002412  C011  F00C         	movff	pad@fp,fputs@fp
 10529  002416  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 10530  00241A  ECCD  F017         	call	_fputs	;wreg free
 10531  00241E                     l3312:
 10532                           
 10533                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 10534  00241E  BE16               	btfsc	(pad@p+1)^0,7,c
 10535  002420  EF14  F012         	goto	u2011
 10536  002424  EF16  F012         	goto	u2010
 10537  002428                     u2011:
 10538  002428  EF1C  F012         	goto	l3316
 10539  00242C                     u2010:
 10540  00242C  C015  F01A         	movff	pad@p,pad@w
 10541  002430  C016  F01B         	movff	pad@p+1,pad@w+1
 10542  002434  EF20  F012         	goto	l527
 10543  002438                     l3316:
 10544  002438  0E00               	movlw	0
 10545  00243A  6E1B               	movwf	(pad@w+1)^0,c
 10546  00243C  0E00               	movlw	0
 10547  00243E  6E1A               	movwf	pad@w^0,c
 10548  002440                     l527:
 10549                           
 10550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 10551  002440  0E00               	movlw	0
 10552  002442  6E19               	movwf	(pad@i+1)^0,c
 10553  002444  0E00               	movlw	0
 10554  002446  6E18               	movwf	pad@i^0,c
 10555                           
 10556                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10557  002448  EF32  F012         	goto	l3322
 10558  00244C                     l3318:
 10559                           
 10560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 10561  00244C  0E00               	movlw	0
 10562  00244E  6E02               	movwf	(fputc@c+1)^0,c
 10563  002450  0E20               	movlw	32
 10564  002452  6E01               	movwf	fputc@c^0,c
 10565  002454  C011  F003         	movff	pad@fp,fputc@fp
 10566  002458  C012  F004         	movff	pad@fp+1,fputc@fp+1
 10567  00245C  EC98  F011         	call	_fputc	;wreg free
 10568  002460                     
 10569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 10570  002460  4A18               	infsnz	pad@i^0,f,c
 10571  002462  2A19               	incf	(pad@i+1)^0,f,c
 10572  002464                     l3322:
 10573                           
 10574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10575  002464  501A               	movf	pad@w^0,w,c
 10576  002466  5C18               	subwf	pad@i^0,w,c
 10577  002468  5019               	movf	(pad@i+1)^0,w,c
 10578  00246A  0A80               	xorlw	128
 10579  00246C  6E17               	movwf	??_pad^0,c
 10580  00246E  501B               	movf	(pad@w+1)^0,w,c
 10581  002470  0A80               	xorlw	128
 10582  002472  5817               	subwfb	??_pad^0,w,c
 10583  002474  A0D8               	btfss	status,0,c
 10584  002476  EF3F  F012         	goto	u2021
 10585  00247A  EF41  F012         	goto	u2020
 10586  00247E                     u2021:
 10587  00247E  EF26  F012         	goto	l3318
 10588  002482                     u2020:
 10589  002482                     
 10590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 10591  002482  0100               	movlb	0	; () banked
 10592  002484  B176               	btfsc	_flags& (0+255),0,b
 10593  002486  EF47  F012         	goto	u2031
 10594  00248A  EF49  F012         	goto	u2030
 10595  00248E                     u2031:
 10596  00248E  EF53  F012         	goto	l3326
 10597  002492                     u2030:
 10598  002492                     
 10599                           ; BSR set to: 0
 10600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 10601  002492  C013  F00A         	movff	pad@buf,fputs@s
 10602  002496  C014  F00B         	movff	pad@buf+1,fputs@s+1
 10603  00249A  C011  F00C         	movff	pad@fp,fputs@fp
 10604  00249E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 10605  0024A2  ECCD  F017         	call	_fputs	;wreg free
 10606  0024A6                     l3326:
 10607                           
 10608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10609  0024A6  C013  F001         	movff	pad@buf,strlen@s
 10610  0024AA  C014  F002         	movff	pad@buf+1,strlen@s+1
 10611  0024AE  ECA4  F018         	call	_strlen	;wreg free
 10612  0024B2  501A               	movf	pad@w^0,w,c
 10613  0024B4  2401               	addwf	?_strlen^0,w,c
 10614  0024B6  6E11               	movwf	?_pad^0,c
 10615  0024B8  501B               	movf	(pad@w+1)^0,w,c
 10616  0024BA  2002               	addwfc	(?_strlen+1)^0,w,c
 10617  0024BC  6E12               	movwf	(?_pad+1)^0,c
 10618  0024BE  0012               	return		;funcret
 10619  0024C0                     __end_of_pad:
 10620                           	opt callstack 0
 10621                           
 10622 ;; *************** function _strlen *****************
 10623 ;; Defined at:
 10624 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 10625 ;; Parameters:    Size  Location     Type
 10626 ;;  s               2    0[COMRAM] PTR const unsigned char 
 10627 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), horarios(288), 
 10628 ;; Auto vars:     Size  Location     Type
 10629 ;;  a               2    2[COMRAM] PTR const unsigned char 
 10630 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), horarios(288), 
 10631 ;; Return value:  Size  Location     Type
 10632 ;;                  2    0[COMRAM] unsigned int 
 10633 ;; Registers used:
 10634 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10635 ;; Tracked objects:
 10636 ;;		On entry : 0/0
 10637 ;;		On exit  : 0/0
 10638 ;;		Unchanged: 0/0
 10639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10640 ;;      Params:         2       0       0       0       0       0       0       0       0
 10641 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10642 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10643 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10644 ;;Total ram usage:        4 bytes
 10645 ;; Hardware stack levels used:    1
 10646 ;; Hardware stack levels required when called:    1
 10647 ;; This function calls:
 10648 ;;		Nothing
 10649 ;; This function is called by:
 10650 ;;		_pad
 10651 ;;		_stoa
 10652 ;; This function uses a non-reentrant model
 10653 ;;
 10654                           
 10655                           	psect	text49
 10656  003148                     __ptext49:
 10657                           	opt callstack 0
 10658  003148                     _strlen:
 10659                           	opt callstack 23
 10660  003148  C001  F003         	movff	strlen@s,strlen@a
 10661  00314C  C002  F004         	movff	strlen@s+1,strlen@a+1
 10662  003150  EFAC  F018         	goto	l3302
 10663  003154                     l3300:
 10664  003154  4A01               	infsnz	strlen@s^0,f,c
 10665  003156  2A02               	incf	(strlen@s+1)^0,f,c
 10666  003158                     l3302:
 10667  003158  C001  FFD9         	movff	strlen@s,fsr2l
 10668  00315C  C002  FFDA         	movff	strlen@s+1,fsr2h
 10669  003160  50DF               	movf	indf2,w,c
 10670  003162  A4D8               	btfss	status,2,c
 10671  003164  EFB6  F018         	goto	u1991
 10672  003168  EFB8  F018         	goto	u1990
 10673  00316C                     u1991:
 10674  00316C  EFAA  F018         	goto	l3300
 10675  003170                     u1990:
 10676  003170  5003               	movf	strlen@a^0,w,c
 10677  003172  5C01               	subwf	strlen@s^0,w,c
 10678  003174  6E01               	movwf	?_strlen^0,c
 10679  003176  5004               	movf	(strlen@a+1)^0,w,c
 10680  003178  5802               	subwfb	(strlen@s+1)^0,w,c
 10681  00317A  6E02               	movwf	(?_strlen+1)^0,c
 10682  00317C  0012               	return		;funcret
 10683  00317E                     __end_of_strlen:
 10684                           	opt callstack 0
 10685                           
 10686 ;; *************** function _fputs *****************
 10687 ;; Defined at:
 10688 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 10689 ;; Parameters:    Size  Location     Type
 10690 ;;  s               2    9[COMRAM] PTR const unsigned char 
 10691 ;;		 -> dbuf(32), 
 10692 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 10693 ;;		 -> sprintf@f(6), 
 10694 ;; Auto vars:     Size  Location     Type
 10695 ;;  i               2   14[COMRAM] int 
 10696 ;;  c               1   13[COMRAM] unsigned char 
 10697 ;; Return value:  Size  Location     Type
 10698 ;;                  2    9[COMRAM] int 
 10699 ;; Registers used:
 10700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10701 ;; Tracked objects:
 10702 ;;		On entry : 0/0
 10703 ;;		On exit  : 0/0
 10704 ;;		Unchanged: 0/0
 10705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10706 ;;      Params:         4       0       0       0       0       0       0       0       0
 10707 ;;      Locals:         3       0       0       0       0       0       0       0       0
 10708 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10709 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10710 ;;Total ram usage:        7 bytes
 10711 ;; Hardware stack levels used:    1
 10712 ;; Hardware stack levels required when called:    3
 10713 ;; This function calls:
 10714 ;;		_fputc
 10715 ;; This function is called by:
 10716 ;;		_pad
 10717 ;; This function uses a non-reentrant model
 10718 ;;
 10719                           
 10720                           	psect	text50
 10721  002F9A                     __ptext50:
 10722                           	opt callstack 0
 10723  002F9A                     _fputs:
 10724                           	opt callstack 20
 10725  002F9A  0E00               	movlw	0
 10726  002F9C  6E10               	movwf	(fputs@i+1)^0,c
 10727  002F9E  0E00               	movlw	0
 10728  002FA0  6E0F               	movwf	fputs@i^0,c
 10729  002FA2  EFDE  F017         	goto	l3296
 10730  002FA6                     l3292:
 10731  002FA6  C00E  F001         	movff	fputs@c,fputc@c
 10732  002FAA  6A02               	clrf	(fputc@c+1)^0,c
 10733  002FAC  C00C  F003         	movff	fputs@fp,fputc@fp
 10734  002FB0  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 10735  002FB4  EC98  F011         	call	_fputc	;wreg free
 10736  002FB8  4A0F               	infsnz	fputs@i^0,f,c
 10737  002FBA  2A10               	incf	(fputs@i+1)^0,f,c
 10738  002FBC                     l3296:
 10739  002FBC  500F               	movf	fputs@i^0,w,c
 10740  002FBE  240A               	addwf	fputs@s^0,w,c
 10741  002FC0  6ED9               	movwf	fsr2l,c
 10742  002FC2  5010               	movf	(fputs@i+1)^0,w,c
 10743  002FC4  200B               	addwfc	(fputs@s+1)^0,w,c
 10744  002FC6  6EDA               	movwf	fsr2h,c
 10745  002FC8  50DF               	movf	indf2,w,c
 10746  002FCA  6E0E               	movwf	fputs@c^0,c
 10747  002FCC  500E               	movf	fputs@c^0,w,c
 10748  002FCE  A4D8               	btfss	status,2,c
 10749  002FD0  EFEC  F017         	goto	u1981
 10750  002FD4  EFEE  F017         	goto	u1980
 10751  002FD8                     u1981:
 10752  002FD8  EFD3  F017         	goto	l3292
 10753  002FDC                     u1980:
 10754  002FDC  0012               	return		;funcret
 10755  002FDE                     __end_of_fputs:
 10756                           	opt callstack 0
 10757                           
 10758 ;; *************** function _fputc *****************
 10759 ;; Defined at:
 10760 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 10761 ;; Parameters:    Size  Location     Type
 10762 ;;  c               2    0[COMRAM] int 
 10763 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 10764 ;;		 -> sprintf@f(6), 
 10765 ;; Auto vars:     Size  Location     Type
 10766 ;;		None
 10767 ;; Return value:  Size  Location     Type
 10768 ;;                  2    0[COMRAM] int 
 10769 ;; Registers used:
 10770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10771 ;; Tracked objects:
 10772 ;;		On entry : 0/0
 10773 ;;		On exit  : 0/0
 10774 ;;		Unchanged: 0/0
 10775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10776 ;;      Params:         4       0       0       0       0       0       0       0       0
 10777 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10778 ;;      Temps:          5       0       0       0       0       0       0       0       0
 10779 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10780 ;;Total ram usage:        9 bytes
 10781 ;; Hardware stack levels used:    1
 10782 ;; Hardware stack levels required when called:    2
 10783 ;; This function calls:
 10784 ;;		_putch
 10785 ;; This function is called by:
 10786 ;;		_pad
 10787 ;;		_stoa
 10788 ;;		_vfpfcnvrt
 10789 ;;		_fputs
 10790 ;; This function uses a non-reentrant model
 10791 ;;
 10792                           
 10793                           	psect	text51
 10794  002330                     __ptext51:
 10795                           	opt callstack 0
 10796  002330                     _fputc:
 10797                           	opt callstack 22
 10798  002330  5003               	movf	fputc@fp^0,w,c
 10799  002332  1004               	iorwf	(fputc@fp+1)^0,w,c
 10800  002334  B4D8               	btfsc	status,2,c
 10801  002336  EF9F  F011         	goto	u1941
 10802  00233A  EFA1  F011         	goto	u1940
 10803  00233E                     u1941:
 10804  00233E  EFAA  F011         	goto	l3280
 10805  002342                     u1940:
 10806  002342  5003               	movf	fputc@fp^0,w,c
 10807  002344  1004               	iorwf	(fputc@fp+1)^0,w,c
 10808  002346  A4D8               	btfss	status,2,c
 10809  002348  EFA8  F011         	goto	u1951
 10810  00234C  EFAA  F011         	goto	u1950
 10811  002350                     u1951:
 10812  002350  EFAF  F011         	goto	l3282
 10813  002354                     u1950:
 10814  002354                     l3280:
 10815  002354  5001               	movf	fputc@c^0,w,c
 10816  002356  ECBC  F019         	call	_putch
 10817  00235A  EFFC  F011         	goto	l1374
 10818  00235E                     l3282:
 10819  00235E  EE20 F004          	lfsr	2,4
 10820  002362  5003               	movf	fputc@fp^0,w,c
 10821  002364  26D9               	addwf	fsr2l,f,c
 10822  002366  5004               	movf	(fputc@fp+1)^0,w,c
 10823  002368  22DA               	addwfc	fsr2h,f,c
 10824  00236A  50DE               	movf	postinc2,w,c
 10825  00236C  10DE               	iorwf	postinc2,w,c
 10826  00236E  B4D8               	btfsc	status,2,c
 10827  002370  EFBC  F011         	goto	u1961
 10828  002374  EFBE  F011         	goto	u1960
 10829  002378                     u1961:
 10830  002378  EFD9  F011         	goto	l3286
 10831  00237C                     u1960:
 10832  00237C  EE20 F004          	lfsr	2,4
 10833  002380  5003               	movf	fputc@fp^0,w,c
 10834  002382  26D9               	addwf	fsr2l,f,c
 10835  002384  5004               	movf	(fputc@fp+1)^0,w,c
 10836  002386  22DA               	addwfc	fsr2h,f,c
 10837  002388  EE10 F002          	lfsr	1,2
 10838  00238C  5003               	movf	fputc@fp^0,w,c
 10839  00238E  26E1               	addwf	fsr1l,f,c
 10840  002390  5004               	movf	(fputc@fp+1)^0,w,c
 10841  002392  22E2               	addwfc	fsr1h,f,c
 10842  002394  50DE               	movf	postinc2,w,c
 10843  002396  5CE6               	subwf	postinc1,w,c
 10844  002398  50E6               	movf	postinc1,w,c
 10845  00239A  0A80               	xorlw	128
 10846  00239C  6E09               	movwf	(??_fputc+4)^0,c
 10847  00239E  50DE               	movf	postinc2,w,c
 10848  0023A0  0A80               	xorlw	128
 10849  0023A2  5809               	subwfb	(??_fputc+4)^0,w,c
 10850  0023A4  B0D8               	btfsc	status,0,c
 10851  0023A6  EFD7  F011         	goto	u1971
 10852  0023AA  EFD9  F011         	goto	u1970
 10853  0023AE                     u1971:
 10854  0023AE  EFFC  F011         	goto	l1374
 10855  0023B2                     u1970:
 10856  0023B2                     l3286:
 10857  0023B2  EE20 F002          	lfsr	2,2
 10858  0023B6  5003               	movf	fputc@fp^0,w,c
 10859  0023B8  26D9               	addwf	fsr2l,f,c
 10860  0023BA  5004               	movf	(fputc@fp+1)^0,w,c
 10861  0023BC  22DA               	addwfc	fsr2h,f,c
 10862  0023BE  CFDE F005          	movff	postinc2,??_fputc
 10863  0023C2  CFDD F006          	movff	postdec2,??_fputc+1
 10864  0023C6  C003  FFD9         	movff	fputc@fp,fsr2l
 10865  0023CA  C004  FFDA         	movff	fputc@fp+1,fsr2h
 10866  0023CE  CFDE F007          	movff	postinc2,??_fputc+2
 10867  0023D2  CFDD F008          	movff	postdec2,??_fputc+3
 10868  0023D6  5005               	movf	??_fputc^0,w,c
 10869  0023D8  2407               	addwf	(??_fputc+2)^0,w,c
 10870  0023DA  6ED9               	movwf	fsr2l,c
 10871  0023DC  5006               	movf	(??_fputc+1)^0,w,c
 10872  0023DE  2008               	addwfc	(??_fputc+3)^0,w,c
 10873  0023E0  6EDA               	movwf	fsr2h,c
 10874  0023E2  C001  FFDF         	movff	fputc@c,indf2
 10875  0023E6  EE20 F002          	lfsr	2,2
 10876  0023EA  5003               	movf	fputc@fp^0,w,c
 10877  0023EC  26D9               	addwf	fsr2l,f,c
 10878  0023EE  5004               	movf	(fputc@fp+1)^0,w,c
 10879  0023F0  22DA               	addwfc	fsr2h,f,c
 10880  0023F2  2ADE               	incf	postinc2,f,c
 10881  0023F4  0E00               	movlw	0
 10882  0023F6  22DD               	addwfc	postdec2,f,c
 10883  0023F8                     l1374:
 10884  0023F8  0012               	return		;funcret
 10885  0023FA                     __end_of_fputc:
 10886                           	opt callstack 0
 10887                           
 10888 ;; *************** function _putch *****************
 10889 ;; Defined at:
 10890 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
 10891 ;; Parameters:    Size  Location     Type
 10892 ;;  c               1    wreg     unsigned char 
 10893 ;; Auto vars:     Size  Location     Type
 10894 ;;  c               1    0[COMRAM] unsigned char 
 10895 ;; Return value:  Size  Location     Type
 10896 ;;                  1    wreg      void 
 10897 ;; Registers used:
 10898 ;;		wreg
 10899 ;; Tracked objects:
 10900 ;;		On entry : 0/0
 10901 ;;		On exit  : 0/0
 10902 ;;		Unchanged: 0/0
 10903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10904 ;;      Params:         0       0       0       0       0       0       0       0       0
 10905 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10906 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10907 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10908 ;;Total ram usage:        0 bytes
 10909 ;; Hardware stack levels used:    1
 10910 ;; Hardware stack levels required when called:    1
 10911 ;; This function calls:
 10912 ;;		Nothing
 10913 ;; This function is called by:
 10914 ;;		_fputc
 10915 ;; This function uses a non-reentrant model
 10916 ;;
 10917                           
 10918                           	psect	text52
 10919  003378                     __ptext52:
 10920                           	opt callstack 0
 10921  003378                     _putch:
 10922                           	opt callstack 22
 10923  003378  0012               	return		;funcret
 10924  00337A                     __end_of_putch:
 10925                           	opt callstack 0
 10926                           
 10927 ;; *************** function _atoi *****************
 10928 ;; Defined at:
 10929 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 10930 ;; Parameters:    Size  Location     Type
 10931 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10932 ;;		 -> STR_55(45), STR_54(29), STR_53(32), STR_52(45), 
 10933 ;;		 -> STR_51(29), STR_50(32), STR_48(24), STR_47(25), 
 10934 ;;		 -> STR_46(24), STR_45(27), STR_44(24), STR_43(23), 
 10935 ;;		 -> STR_42(25), STR_41(24), STR_22(51), STR_14(9), 
 10936 ;; Auto vars:     Size  Location     Type
 10937 ;;  n               2   20[COMRAM] int 
 10938 ;;  neg             2   13[COMRAM] int 
 10939 ;; Return value:  Size  Location     Type
 10940 ;;                  2    7[COMRAM] int 
 10941 ;; Registers used:
 10942 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10943 ;; Tracked objects:
 10944 ;;		On entry : 0/0
 10945 ;;		On exit  : 0/0
 10946 ;;		Unchanged: 0/0
 10947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10948 ;;      Params:         2       0       0       0       0       0       0       0       0
 10949 ;;      Locals:         9       0       0       0       0       0       0       0       0
 10950 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10951 ;;      Totals:        15       0       0       0       0       0       0       0       0
 10952 ;;Total ram usage:       15 bytes
 10953 ;; Hardware stack levels used:    1
 10954 ;; Hardware stack levels required when called:    2
 10955 ;; This function calls:
 10956 ;;		___wmul
 10957 ;;		_isdigit
 10958 ;;		_isspace
 10959 ;; This function is called by:
 10960 ;;		_vfpfcnvrt
 10961 ;; This function uses a non-reentrant model
 10962 ;;
 10963                           
 10964                           	psect	text53
 10965  0011AE                     __ptext53:
 10966                           	opt callstack 0
 10967  0011AE                     _atoi:
 10968                           	opt callstack 23
 10969  0011AE  0E00               	movlw	0
 10970  0011B0  6E16               	movwf	(atoi@n+1)^0,c
 10971  0011B2  0E00               	movlw	0
 10972  0011B4  6E15               	movwf	atoi@n^0,c
 10973  0011B6  0E00               	movlw	0
 10974  0011B8  6E0F               	movwf	(atoi@neg+1)^0,c
 10975  0011BA  0E00               	movlw	0
 10976  0011BC  6E0E               	movwf	atoi@neg^0,c
 10977  0011BE  EFE3  F008         	goto	l3558
 10978  0011C2                     l3556:
 10979  0011C2  4A08               	infsnz	atoi@s^0,f,c
 10980  0011C4  2A09               	incf	(atoi@s+1)^0,f,c
 10981  0011C6                     l3558:
 10982  0011C6  0E01               	movlw	1
 10983  0011C8  6E14               	movwf	_atoi$1574^0,c
 10984  0011CA  C008  FFF6         	movff	atoi@s,tblptrl
 10985  0011CE  C009  FFF7         	movff	atoi@s+1,tblptrh
 10986  0011D2                     	if	0	;tblptru may be non-zero
 10987  0011D2                     	endif
 10988  0011D2                     	if	0	;tblptru may be non-zero
 10989  0011D2                     	endif
 10990  0011D2  0008               	tblrd		*
 10991  0011D4  50F5               	movf	tablat,w,c
 10992  0011D6  0A20               	xorlw	32
 10993  0011D8  B4D8               	btfsc	status,2,c
 10994  0011DA  EFF1  F008         	goto	u2471
 10995  0011DE  EFF3  F008         	goto	u2470
 10996  0011E2                     u2471:
 10997  0011E2  EF10  F009         	goto	l3566
 10998  0011E6                     u2470:
 10999  0011E6  0EF7               	movlw	247
 11000  0011E8  6E0A               	movwf	??_atoi^0,c
 11001  0011EA  0EFF               	movlw	255
 11002  0011EC  6E0B               	movwf	(??_atoi+1)^0,c
 11003  0011EE  C008  FFF6         	movff	atoi@s,tblptrl
 11004  0011F2  C009  FFF7         	movff	atoi@s+1,tblptrh
 11005  0011F6                     	if	0	;tblptru may be non-zero
 11006  0011F6                     	endif
 11007  0011F6                     	if	0	;tblptru may be non-zero
 11008  0011F6                     	endif
 11009  0011F6  0008               	tblrd		*
 11010  0011F8  50F5               	movf	tablat,w,c
 11011  0011FA  6E0C               	movwf	(??_atoi+2)^0,c
 11012  0011FC  6A0D               	clrf	(??_atoi+3)^0,c
 11013  0011FE  500A               	movf	??_atoi^0,w,c
 11014  001200  260C               	addwf	(??_atoi+2)^0,f,c
 11015  001202  500B               	movf	(??_atoi+1)^0,w,c
 11016  001204  220D               	addwfc	(??_atoi+3)^0,f,c
 11017  001206  500D               	movf	(??_atoi+3)^0,w,c
 11018  001208  E109               	bnz	u2480
 11019  00120A  0E05               	movlw	5
 11020  00120C  5C0C               	subwf	(??_atoi+2)^0,w,c
 11021  00120E  A0D8               	btfss	status,0,c
 11022  001210  EF0C  F009         	goto	u2481
 11023  001214  EF0E  F009         	goto	u2480
 11024  001218                     u2481:
 11025  001218  EF10  F009         	goto	l3566
 11026  00121C                     u2480:
 11027  00121C  0E00               	movlw	0
 11028  00121E  6E14               	movwf	_atoi$1574^0,c
 11029  001220                     l3566:
 11030  001220  C014  F010         	movff	_atoi$1574,_atoi$1573
 11031  001224  6A11               	clrf	(_atoi$1573+1)^0,c
 11032  001226  5010               	movf	_atoi$1573^0,w,c
 11033  001228  1011               	iorwf	(_atoi$1573+1)^0,w,c
 11034  00122A  A4D8               	btfss	status,2,c
 11035  00122C  EF1A  F009         	goto	u2491
 11036  001230  EF1C  F009         	goto	u2490
 11037  001234                     u2491:
 11038  001234  EFE1  F008         	goto	l3556
 11039  001238                     u2490:
 11040  001238  EF26  F009         	goto	l3576
 11041  00123C                     l3572:
 11042  00123C  0E00               	movlw	0
 11043  00123E  6E0F               	movwf	(atoi@neg+1)^0,c
 11044  001240  0E01               	movlw	1
 11045  001242  6E0E               	movwf	atoi@neg^0,c
 11046  001244                     l3574:
 11047  001244  4A08               	infsnz	atoi@s^0,f,c
 11048  001246  2A09               	incf	(atoi@s+1)^0,f,c
 11049  001248  EF5B  F009         	goto	l3582
 11050  00124C                     l3576:
 11051  00124C  C008  FFF6         	movff	atoi@s,tblptrl
 11052  001250  C009  FFF7         	movff	atoi@s+1,tblptrh
 11053  001254                     	if	0	;tblptru may be non-zero
 11054  001254                     	endif
 11055  001254                     	if	0	;tblptru may be non-zero
 11056  001254                     	endif
 11057  001254  0008               	tblrd		*
 11058  001256  50F5               	movf	tablat,w,c
 11059  001258  6E0A               	movwf	??_atoi^0,c
 11060  00125A  6A0B               	clrf	(??_atoi+1)^0,c
 11061                           
 11062                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11063                           ; Switch size 1, requested type "simple"
 11064                           ; Number of cases is 1, Range of values is 0 to 0
 11065                           ; switch strategies available:
 11066                           ; Name         Instructions Cycles
 11067                           ; simple_byte            4     3 (average)
 11068                           ;	Chosen strategy is simple_byte
 11069  00125C  500B               	movf	(??_atoi+1)^0,w,c
 11070  00125E  0A00               	xorlw	0	; case 0
 11071  001260  B4D8               	btfsc	status,2,c
 11072  001262  EF35  F009         	goto	l5176
 11073  001266  EF5B  F009         	goto	l3582
 11074  00126A                     l5176:
 11075                           
 11076                           ; Switch size 1, requested type "simple"
 11077                           ; Number of cases is 2, Range of values is 43 to 45
 11078                           ; switch strategies available:
 11079                           ; Name         Instructions Cycles
 11080                           ; simple_byte            7     4 (average)
 11081                           ;	Chosen strategy is simple_byte
 11082  00126A  500A               	movf	??_atoi^0,w,c
 11083  00126C  0A2B               	xorlw	43	; case 43
 11084  00126E  B4D8               	btfsc	status,2,c
 11085  001270  EF22  F009         	goto	l3574
 11086  001274  0A06               	xorlw	6	; case 45
 11087  001276  B4D8               	btfsc	status,2,c
 11088  001278  EF1E  F009         	goto	l3572
 11089  00127C  EF5B  F009         	goto	l3582
 11090  001280                     l3578:
 11091  001280  C015  F001         	movff	atoi@n,___wmul@multiplier
 11092  001284  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 11093  001288  0E00               	movlw	0
 11094  00128A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11095  00128C  0E0A               	movlw	10
 11096  00128E  6E03               	movwf	___wmul@multiplicand^0,c
 11097  001290  EC2D  F019         	call	___wmul	;wreg free
 11098  001294  C008  FFF6         	movff	atoi@s,tblptrl
 11099  001298  C009  FFF7         	movff	atoi@s+1,tblptrh
 11100  00129C                     	if	0	;tblptru may be non-zero
 11101  00129C                     	endif
 11102  00129C                     	if	0	;tblptru may be non-zero
 11103  00129C                     	endif
 11104  00129C  0008               	tblrd		*
 11105  00129E  50F5               	movf	tablat,w,c
 11106  0012A0  5E01               	subwf	?___wmul^0,f,c
 11107  0012A2  0E00               	movlw	0
 11108  0012A4  5A02               	subwfb	(?___wmul+1)^0,f,c
 11109  0012A6  0E30               	movlw	48
 11110  0012A8  2401               	addwf	?___wmul^0,w,c
 11111  0012AA  6E15               	movwf	atoi@n^0,c
 11112  0012AC  0E00               	movlw	0
 11113  0012AE  2002               	addwfc	(?___wmul+1)^0,w,c
 11114  0012B0  6E16               	movwf	(atoi@n+1)^0,c
 11115  0012B2  EF22  F009         	goto	l3574
 11116  0012B6                     l3582:
 11117  0012B6  0ED0               	movlw	208
 11118  0012B8  6E0A               	movwf	??_atoi^0,c
 11119  0012BA  0EFF               	movlw	255
 11120  0012BC  6E0B               	movwf	(??_atoi+1)^0,c
 11121  0012BE  C008  FFF6         	movff	atoi@s,tblptrl
 11122  0012C2  C009  FFF7         	movff	atoi@s+1,tblptrh
 11123  0012C6                     	if	0	;tblptru may be non-zero
 11124  0012C6                     	endif
 11125  0012C6                     	if	0	;tblptru may be non-zero
 11126  0012C6                     	endif
 11127  0012C6  0008               	tblrd		*
 11128  0012C8  50F5               	movf	tablat,w,c
 11129  0012CA  6E0C               	movwf	(??_atoi+2)^0,c
 11130  0012CC  6A0D               	clrf	(??_atoi+3)^0,c
 11131  0012CE  500A               	movf	??_atoi^0,w,c
 11132  0012D0  260C               	addwf	(??_atoi+2)^0,f,c
 11133  0012D2  500B               	movf	(??_atoi+1)^0,w,c
 11134  0012D4  220D               	addwfc	(??_atoi+3)^0,f,c
 11135  0012D6  500D               	movf	(??_atoi+3)^0,w,c
 11136  0012D8  E10A               	bnz	u2500
 11137  0012DA  0E0A               	movlw	10
 11138  0012DC  5C0C               	subwf	(??_atoi+2)^0,w,c
 11139  0012DE  A0D8               	btfss	status,0,c
 11140  0012E0  EF74  F009         	goto	u2501
 11141  0012E4  EF77  F009         	goto	u2500
 11142  0012E8                     u2501:
 11143  0012E8  0E01               	movlw	1
 11144  0012EA  EF78  F009         	goto	u2510
 11145  0012EE                     u2500:
 11146  0012EE  0E00               	movlw	0
 11147  0012F0                     u2510:
 11148  0012F0  6E12               	movwf	_atoi$1575^0,c
 11149  0012F2  6A13               	clrf	(_atoi$1575+1)^0,c
 11150  0012F4  5012               	movf	_atoi$1575^0,w,c
 11151  0012F6  1013               	iorwf	(_atoi$1575+1)^0,w,c
 11152  0012F8  A4D8               	btfss	status,2,c
 11153  0012FA  EF81  F009         	goto	u2521
 11154  0012FE  EF83  F009         	goto	u2520
 11155  001302                     u2521:
 11156  001302  EF40  F009         	goto	l3578
 11157  001306                     u2520:
 11158  001306  500E               	movf	atoi@neg^0,w,c
 11159  001308  100F               	iorwf	(atoi@neg+1)^0,w,c
 11160  00130A  A4D8               	btfss	status,2,c
 11161  00130C  EF8A  F009         	goto	u2531
 11162  001310  EF8C  F009         	goto	u2530
 11163  001314                     u2531:
 11164  001314  EF9A  F009         	goto	l1345
 11165  001318                     u2530:
 11166  001318  C015  F00A         	movff	atoi@n,??_atoi
 11167  00131C  C016  F00B         	movff	atoi@n+1,??_atoi+1
 11168  001320  1E0A               	comf	??_atoi^0,f,c
 11169  001322  1E0B               	comf	(??_atoi+1)^0,f,c
 11170  001324  4A0A               	infsnz	??_atoi^0,f,c
 11171  001326  2A0B               	incf	(??_atoi+1)^0,f,c
 11172  001328  C00A  F008         	movff	??_atoi,?_atoi
 11173  00132C  C00B  F009         	movff	??_atoi+1,?_atoi+1
 11174  001330  EF9E  F009         	goto	l1348
 11175  001334                     l1345:
 11176  001334  C015  F008         	movff	atoi@n,?_atoi
 11177  001338  C016  F009         	movff	atoi@n+1,?_atoi+1
 11178  00133C                     l1348:
 11179  00133C  0012               	return		;funcret
 11180  00133E                     __end_of_atoi:
 11181                           	opt callstack 0
 11182                           
 11183 ;; *************** function _isspace *****************
 11184 ;; Defined at:
 11185 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 11186 ;; Parameters:    Size  Location     Type
 11187 ;;  c               2    0[COMRAM] int 
 11188 ;; Auto vars:     Size  Location     Type
 11189 ;;		None
 11190 ;; Return value:  Size  Location     Type
 11191 ;;                  2    0[COMRAM] int 
 11192 ;; Registers used:
 11193 ;;		wreg, status,2, status,0
 11194 ;; Tracked objects:
 11195 ;;		On entry : 0/0
 11196 ;;		On exit  : 0/0
 11197 ;;		Unchanged: 0/0
 11198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11199 ;;      Params:         2       0       0       0       0       0       0       0       0
 11200 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11201 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11202 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11203 ;;Total ram usage:        7 bytes
 11204 ;; Hardware stack levels used:    1
 11205 ;; Hardware stack levels required when called:    1
 11206 ;; This function calls:
 11207 ;;		Nothing
 11208 ;; This function is called by:
 11209 ;;		_atoi
 11210 ;; This function uses a non-reentrant model
 11211 ;;
 11212                           
 11213                           	psect	text54
 11214  002EB4                     __ptext54:
 11215                           	opt callstack 0
 11216  002EB4                     _isspace:
 11217                           	opt callstack 23
 11218  002EB4  0E01               	movlw	1
 11219  002EB6  6E07               	movwf	_isspace$1591^0,c
 11220  002EB8  0E20               	movlw	32
 11221  002EBA  1801               	xorwf	isspace@c^0,w,c
 11222  002EBC  1002               	iorwf	(isspace@c+1)^0,w,c
 11223  002EBE  B4D8               	btfsc	status,2,c
 11224  002EC0  EF64  F017         	goto	u2201
 11225  002EC4  EF66  F017         	goto	u2200
 11226  002EC8                     u2201:
 11227  002EC8  EF7F  F017         	goto	l3432
 11228  002ECC                     u2200:
 11229  002ECC  0EF7               	movlw	247
 11230  002ECE  6E03               	movwf	??_isspace^0,c
 11231  002ED0  0EFF               	movlw	255
 11232  002ED2  6E04               	movwf	(??_isspace+1)^0,c
 11233  002ED4  C001  F005         	movff	isspace@c,??_isspace+2
 11234  002ED8  C002  F006         	movff	isspace@c+1,??_isspace+3
 11235  002EDC  5003               	movf	??_isspace^0,w,c
 11236  002EDE  2605               	addwf	(??_isspace+2)^0,f,c
 11237  002EE0  5004               	movf	(??_isspace+1)^0,w,c
 11238  002EE2  2206               	addwfc	(??_isspace+3)^0,f,c
 11239  002EE4  5006               	movf	(??_isspace+3)^0,w,c
 11240  002EE6  E109               	bnz	u2210
 11241  002EE8  0E05               	movlw	5
 11242  002EEA  5C05               	subwf	(??_isspace+2)^0,w,c
 11243  002EEC  A0D8               	btfss	status,0,c
 11244  002EEE  EF7B  F017         	goto	u2211
 11245  002EF2  EF7D  F017         	goto	u2210
 11246  002EF6                     u2211:
 11247  002EF6  EF7F  F017         	goto	l3432
 11248  002EFA                     u2210:
 11249  002EFA  0E00               	movlw	0
 11250  002EFC  6E07               	movwf	_isspace$1591^0,c
 11251  002EFE                     l3432:
 11252  002EFE  C007  F001         	movff	_isspace$1591,?_isspace
 11253  002F02  6A02               	clrf	(?_isspace+1)^0,c
 11254  002F04  0012               	return		;funcret
 11255  002F06                     __end_of_isspace:
 11256                           	opt callstack 0
 11257                           
 11258 ;; *************** function _isdigit *****************
 11259 ;; Defined at:
 11260 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 11261 ;; Parameters:    Size  Location     Type
 11262 ;;  c               2    0[COMRAM] int 
 11263 ;; Auto vars:     Size  Location     Type
 11264 ;;		None
 11265 ;; Return value:  Size  Location     Type
 11266 ;;                  2    0[COMRAM] int 
 11267 ;; Registers used:
 11268 ;;		wreg, status,2, status,0
 11269 ;; Tracked objects:
 11270 ;;		On entry : 0/0
 11271 ;;		On exit  : 0/0
 11272 ;;		Unchanged: 0/0
 11273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11274 ;;      Params:         2       0       0       0       0       0       0       0       0
 11275 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11276 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11277 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11278 ;;Total ram usage:        6 bytes
 11279 ;; Hardware stack levels used:    1
 11280 ;; Hardware stack levels required when called:    1
 11281 ;; This function calls:
 11282 ;;		Nothing
 11283 ;; This function is called by:
 11284 ;;		_vfpfcnvrt
 11285 ;;		_atoi
 11286 ;; This function uses a non-reentrant model
 11287 ;;
 11288                           
 11289                           	psect	text55
 11290  0030DA                     __ptext55:
 11291                           	opt callstack 0
 11292  0030DA                     _isdigit:
 11293                           	opt callstack 24
 11294  0030DA  0ED0               	movlw	208
 11295  0030DC  6E03               	movwf	??_isdigit^0,c
 11296  0030DE  0EFF               	movlw	255
 11297  0030E0  6E04               	movwf	(??_isdigit+1)^0,c
 11298  0030E2  C001  F005         	movff	isdigit@c,??_isdigit+2
 11299  0030E6  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 11300  0030EA  5003               	movf	??_isdigit^0,w,c
 11301  0030EC  2605               	addwf	(??_isdigit+2)^0,f,c
 11302  0030EE  5004               	movf	(??_isdigit+1)^0,w,c
 11303  0030F0  2206               	addwfc	(??_isdigit+3)^0,f,c
 11304  0030F2  5006               	movf	(??_isdigit+3)^0,w,c
 11305  0030F4  E10A               	bnz	u2050
 11306  0030F6  0E0A               	movlw	10
 11307  0030F8  5C05               	subwf	(??_isdigit+2)^0,w,c
 11308  0030FA  A0D8               	btfss	status,0,c
 11309  0030FC  EF82  F018         	goto	u2051
 11310  003100  EF85  F018         	goto	u2050
 11311  003104                     u2051:
 11312  003104  0E01               	movlw	1
 11313  003106  EF86  F018         	goto	u2060
 11314  00310A                     u2050:
 11315  00310A  0E00               	movlw	0
 11316  00310C                     u2060:
 11317  00310C  6E01               	movwf	?_isdigit^0,c
 11318  00310E  6A02               	clrf	(?_isdigit+1)^0,c
 11319  003110  0012               	return		;funcret
 11320  003112                     __end_of_isdigit:
 11321                           	opt callstack 0
 11322                           
 11323 ;; *************** function _getValue *****************
 11324 ;; Defined at:
 11325 ;;		line 868 in file "main.c"
 11326 ;; Parameters:    Size  Location     Type
 11327 ;;  numCharacter    2    3[COMRAM] short 
 11328 ;; Auto vars:     Size  Location     Type
 11329 ;;  i               2   10[COMRAM] int 
 11330 ;;  i               2    8[COMRAM] int 
 11331 ;;  Rx              1   13[COMRAM] unsigned char 
 11332 ;;  dato            1   12[COMRAM] unsigned char 
 11333 ;;  datoIncorrec    1    7[COMRAM] unsigned char 
 11334 ;; Return value:  Size  Location     Type
 11335 ;;                  1    wreg      unsigned char 
 11336 ;; Registers used:
 11337 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11338 ;; Tracked objects:
 11339 ;;		On entry : 0/0
 11340 ;;		On exit  : 0/0
 11341 ;;		Unchanged: 0/0
 11342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11343 ;;      Params:         2       0       0       0       0       0       0       0       0
 11344 ;;      Locals:         7       0       0       0       0       0       0       0       0
 11345 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11346 ;;      Totals:        11       0       0       0       0       0       0       0       0
 11347 ;;Total ram usage:       11 bytes
 11348 ;; Hardware stack levels used:    1
 11349 ;; Hardware stack levels required when called:    3
 11350 ;; This function calls:
 11351 ;;		_UART_printf
 11352 ;;		_UART_read
 11353 ;;		_UART_write
 11354 ;; This function is called by:
 11355 ;;		_setRtc
 11356 ;;		_asignarHorarios
 11357 ;;		_setTiempoRegar
 11358 ;;		_lecturaWifi
 11359 ;;		_regadoRapido
 11360 ;; This function uses a non-reentrant model
 11361 ;;
 11362                           
 11363                           	psect	text56
 11364  000DD0                     __ptext56:
 11365                           	opt callstack 0
 11366  000DD0                     _getValue:
 11367                           	opt callstack 25
 11368  000DD0                     
 11369                           ;main.c: 871:     unsigned char datoIncorrecto = 0;
 11370  000DD0  0E00               	movlw	0
 11371  000DD2  6E08               	movwf	getValue@datoIncorrecto^0,c
 11372                           
 11373                           ;main.c: 872:     unsigned char dato = 0;
 11374  000DD4  0E00               	movlw	0
 11375  000DD6  6E0D               	movwf	getValue@dato^0,c
 11376                           
 11377                           ;main.c: 874:     switch (numCharacters) {
 11378  000DD8  EFC4  F007         	goto	l4006
 11379  000DDC                     l3928:
 11380                           
 11381                           ;main.c: 877:             Rx = UART_read();
 11382  000DDC  EC07  F017         	call	_UART_read	;wreg free
 11383  000DE0  6E0E               	movwf	getValue@Rx^0,c
 11384  000DE2                     
 11385                           ;main.c: 879:             if (Rx >= 48 && Rx <= 57) {
 11386  000DE2  0E2F               	movlw	47
 11387  000DE4  640E               	cpfsgt	getValue@Rx^0,c
 11388  000DE6  EFF7  F006         	goto	u2981
 11389  000DEA  EFF9  F006         	goto	u2980
 11390  000DEE                     u2981:
 11391  000DEE  EF07  F007         	goto	l3938
 11392  000DF2                     u2980:
 11393  000DF2  0E3A               	movlw	58
 11394  000DF4  600E               	cpfslt	getValue@Rx^0,c
 11395  000DF6  EFFF  F006         	goto	u2991
 11396  000DFA  EF01  F007         	goto	u2990
 11397  000DFE                     u2991:
 11398  000DFE  EF07  F007         	goto	l3938
 11399  000E02                     u2990:
 11400  000E02                     
 11401                           ;main.c: 880:                 Rx -= 48;
 11402  000E02  0E30               	movlw	48
 11403  000E04  5E0E               	subwf	getValue@Rx^0,f,c
 11404  000E06                     
 11405                           ;main.c: 881:                 dato = Rx;
 11406  000E06  C00E  F00D         	movff	getValue@Rx,getValue@dato
 11407                           
 11408                           ;main.c: 882:             } else {
 11409  000E0A  EFDE  F007         	goto	l4008
 11410  000E0E                     l3938:
 11411                           
 11412                           ;main.c: 883:                 UART_write('@');
 11413  000E0E  0E40               	movlw	64
 11414  000E10  EC7C  F019         	call	_UART_write
 11415  000E14                     
 11416                           ;main.c: 884:                 datoIncorrecto = 1;
 11417  000E14  0E01               	movlw	1
 11418  000E16  6E08               	movwf	getValue@datoIncorrecto^0,c
 11419  000E18  EFDE  F007         	goto	l4008
 11420  000E1C                     l3942:
 11421                           
 11422                           ;main.c: 890:             for (int i = 0; i < 2; i++) {
 11423  000E1C  0E00               	movlw	0
 11424  000E1E  6E0A               	movwf	(getValue@i+1)^0,c
 11425  000E20  0E00               	movlw	0
 11426  000E22  6E09               	movwf	getValue@i^0,c
 11427  000E24                     l3948:
 11428                           
 11429                           ;main.c: 892:                 Rx = UART_read();
 11430  000E24  EC07  F017         	call	_UART_read	;wreg free
 11431  000E28  6E0E               	movwf	getValue@Rx^0,c
 11432  000E2A                     
 11433                           ;main.c: 894:                 if (Rx >= 48 && Rx <= 57) {
 11434  000E2A  0E2F               	movlw	47
 11435  000E2C  640E               	cpfsgt	getValue@Rx^0,c
 11436  000E2E  EF1B  F007         	goto	u3001
 11437  000E32  EF1D  F007         	goto	u3000
 11438  000E36                     u3001:
 11439  000E36  EF4B  F007         	goto	l3964
 11440  000E3A                     u3000:
 11441  000E3A  0E3A               	movlw	58
 11442  000E3C  600E               	cpfslt	getValue@Rx^0,c
 11443  000E3E  EF23  F007         	goto	u3011
 11444  000E42  EF25  F007         	goto	u3010
 11445  000E46                     u3011:
 11446  000E46  EF4B  F007         	goto	l3964
 11447  000E4A                     u3010:
 11448  000E4A                     
 11449                           ;main.c: 896:                     Rx -= 48;
 11450  000E4A  0E30               	movlw	48
 11451  000E4C  5E0E               	subwf	getValue@Rx^0,f,c
 11452                           
 11453                           ;main.c: 898:                     switch (i) {
 11454  000E4E  EF35  F007         	goto	l3962
 11455  000E52                     l443:
 11456                           
 11457                           ;main.c: 900:                             dato = Rx;
 11458  000E52  C00E  F00D         	movff	getValue@Rx,getValue@dato
 11459  000E56                     
 11460                           ;main.c: 901:                             dato *= 10;
 11461  000E56  0E0A               	movlw	10
 11462  000E58  020D               	mulwf	getValue@dato^0,c
 11463  000E5A  50F3               	movf	prodl,w,c
 11464  000E5C  6E0D               	movwf	getValue@dato^0,c
 11465                           
 11466                           ;main.c: 902:                             break;
 11467  000E5E  EF52  F007         	goto	l3968
 11468  000E62                     l3958:
 11469                           
 11470                           ;main.c: 905:                             dato += Rx;
 11471  000E62  500E               	movf	getValue@Rx^0,w,c
 11472  000E64  260D               	addwf	getValue@dato^0,f,c
 11473                           
 11474                           ;main.c: 906:                             break;
 11475  000E66  EF52  F007         	goto	l3968
 11476  000E6A                     l3962:
 11477  000E6A  C009  F006         	movff	getValue@i,??_getValue
 11478  000E6E  C00A  F007         	movff	getValue@i+1,??_getValue+1
 11479                           
 11480                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11481                           ; Switch size 1, requested type "simple"
 11482                           ; Number of cases is 1, Range of values is 0 to 0
 11483                           ; switch strategies available:
 11484                           ; Name         Instructions Cycles
 11485                           ; simple_byte            4     3 (average)
 11486                           ;	Chosen strategy is simple_byte
 11487  000E72  5007               	movf	(??_getValue+1)^0,w,c
 11488  000E74  0A00               	xorlw	0	; case 0
 11489  000E76  B4D8               	btfsc	status,2,c
 11490  000E78  EF40  F007         	goto	l5178
 11491  000E7C  EF52  F007         	goto	l3968
 11492  000E80                     l5178:
 11493                           
 11494                           ; Switch size 1, requested type "simple"
 11495                           ; Number of cases is 2, Range of values is 0 to 1
 11496                           ; switch strategies available:
 11497                           ; Name         Instructions Cycles
 11498                           ; simple_byte            7     4 (average)
 11499                           ;	Chosen strategy is simple_byte
 11500  000E80  5006               	movf	??_getValue^0,w,c
 11501  000E82  0A00               	xorlw	0	; case 0
 11502  000E84  B4D8               	btfsc	status,2,c
 11503  000E86  EF29  F007         	goto	l443
 11504  000E8A  0A01               	xorlw	1	; case 1
 11505  000E8C  B4D8               	btfsc	status,2,c
 11506  000E8E  EF31  F007         	goto	l3958
 11507  000E92  EF52  F007         	goto	l3968
 11508  000E96                     l3964:
 11509                           
 11510                           ;main.c: 914:                     datoIncorrecto = 1;
 11511  000E96  0E01               	movlw	1
 11512  000E98  6E08               	movwf	getValue@datoIncorrecto^0,c
 11513  000E9A                     
 11514                           ;main.c: 915:                     UART_write('@');
 11515  000E9A  0E40               	movlw	64
 11516  000E9C  EC7C  F019         	call	_UART_write
 11517                           
 11518                           ;main.c: 916:                     break;
 11519  000EA0  EFDE  F007         	goto	l4008
 11520  000EA4                     l3968:
 11521                           
 11522                           ;main.c: 918:             }
 11523  000EA4  4A09               	infsnz	getValue@i^0,f,c
 11524  000EA6  2A0A               	incf	(getValue@i+1)^0,f,c
 11525  000EA8  BE0A               	btfsc	(getValue@i+1)^0,7,c
 11526  000EAA  EF60  F007         	goto	u3021
 11527  000EAE  500A               	movf	(getValue@i+1)^0,w,c
 11528  000EB0  E109               	bnz	u3020
 11529  000EB2  0E02               	movlw	2
 11530  000EB4  5C09               	subwf	getValue@i^0,w,c
 11531  000EB6  A0D8               	btfss	status,0,c
 11532  000EB8  EF60  F007         	goto	u3021
 11533  000EBC  EF62  F007         	goto	u3020
 11534  000EC0                     u3021:
 11535  000EC0  EF12  F007         	goto	l3948
 11536  000EC4                     u3020:
 11537  000EC4  EFDE  F007         	goto	l4008
 11538  000EC8                     l3972:
 11539                           
 11540                           ;main.c: 922:             for (int i = 0; i < 3; i++) {
 11541  000EC8  0E00               	movlw	0
 11542  000ECA  6E0C               	movwf	(getValue@i_995+1)^0,c
 11543  000ECC  0E00               	movlw	0
 11544  000ECE  6E0B               	movwf	getValue@i_995^0,c
 11545  000ED0                     l3978:
 11546                           
 11547                           ;main.c: 924:                 Rx = UART_read();
 11548  000ED0  EC07  F017         	call	_UART_read	;wreg free
 11549  000ED4  6E0E               	movwf	getValue@Rx^0,c
 11550  000ED6                     
 11551                           ;main.c: 926:                 if (Rx >= 48 && Rx <= 57) {
 11552  000ED6  0E2F               	movlw	47
 11553  000ED8  640E               	cpfsgt	getValue@Rx^0,c
 11554  000EDA  EF71  F007         	goto	u3031
 11555  000EDE  EF73  F007         	goto	u3030
 11556  000EE2                     u3031:
 11557  000EE2  EFAB  F007         	goto	l3996
 11558  000EE6                     u3030:
 11559  000EE6  0E3A               	movlw	58
 11560  000EE8  600E               	cpfslt	getValue@Rx^0,c
 11561  000EEA  EF79  F007         	goto	u3041
 11562  000EEE  EF7B  F007         	goto	u3040
 11563  000EF2                     u3041:
 11564  000EF2  EFAB  F007         	goto	l3996
 11565  000EF6                     u3040:
 11566  000EF6                     
 11567                           ;main.c: 928:                     Rx -= 48;
 11568  000EF6  0E30               	movlw	48
 11569  000EF8  5E0E               	subwf	getValue@Rx^0,f,c
 11570                           
 11571                           ;main.c: 930:                     switch (i) {
 11572  000EFA  EF91  F007         	goto	l3994
 11573  000EFE                     l453:
 11574                           
 11575                           ;main.c: 932:                             dato = Rx;
 11576  000EFE  C00E  F00D         	movff	getValue@Rx,getValue@dato
 11577  000F02                     
 11578                           ;main.c: 933:                             dato *= 100;
 11579  000F02  0E64               	movlw	100
 11580  000F04  020D               	mulwf	getValue@dato^0,c
 11581  000F06  50F3               	movf	prodl,w,c
 11582  000F08  6E0D               	movwf	getValue@dato^0,c
 11583                           
 11584                           ;main.c: 934:                             break;
 11585  000F0A  EFB2  F007         	goto	l4000
 11586  000F0E                     l3988:
 11587                           
 11588                           ;main.c: 937:                             dato += (Rx * 10);
 11589  000F0E  500E               	movf	getValue@Rx^0,w,c
 11590  000F10  0D0A               	mullw	10
 11591  000F12  50F3               	movf	243,w,c
 11592  000F14  260D               	addwf	getValue@dato^0,f,c
 11593                           
 11594                           ;main.c: 938:                             break;
 11595  000F16  EFB2  F007         	goto	l4000
 11596  000F1A                     l3990:
 11597                           
 11598                           ;main.c: 941:                             dato += Rx;
 11599  000F1A  500E               	movf	getValue@Rx^0,w,c
 11600  000F1C  260D               	addwf	getValue@dato^0,f,c
 11601                           
 11602                           ;main.c: 942:                             break;
 11603  000F1E  EFB2  F007         	goto	l4000
 11604  000F22                     l3994:
 11605  000F22  C00B  F006         	movff	getValue@i_995,??_getValue
 11606  000F26  C00C  F007         	movff	getValue@i_995+1,??_getValue+1
 11607                           
 11608                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11609                           ; Switch size 1, requested type "simple"
 11610                           ; Number of cases is 1, Range of values is 0 to 0
 11611                           ; switch strategies available:
 11612                           ; Name         Instructions Cycles
 11613                           ; simple_byte            4     3 (average)
 11614                           ;	Chosen strategy is simple_byte
 11615  000F2A  5007               	movf	(??_getValue+1)^0,w,c
 11616  000F2C  0A00               	xorlw	0	; case 0
 11617  000F2E  B4D8               	btfsc	status,2,c
 11618  000F30  EF9C  F007         	goto	l5180
 11619  000F34  EFB2  F007         	goto	l4000
 11620  000F38                     l5180:
 11621                           
 11622                           ; Switch size 1, requested type "simple"
 11623                           ; Number of cases is 3, Range of values is 0 to 2
 11624                           ; switch strategies available:
 11625                           ; Name         Instructions Cycles
 11626                           ; simple_byte           10     6 (average)
 11627                           ;	Chosen strategy is simple_byte
 11628  000F38  5006               	movf	??_getValue^0,w,c
 11629  000F3A  0A00               	xorlw	0	; case 0
 11630  000F3C  B4D8               	btfsc	status,2,c
 11631  000F3E  EF7F  F007         	goto	l453
 11632  000F42  0A01               	xorlw	1	; case 1
 11633  000F44  B4D8               	btfsc	status,2,c
 11634  000F46  EF87  F007         	goto	l3988
 11635  000F4A  0A03               	xorlw	3	; case 2
 11636  000F4C  B4D8               	btfsc	status,2,c
 11637  000F4E  EF8D  F007         	goto	l3990
 11638  000F52  EFB2  F007         	goto	l4000
 11639  000F56                     l3996:
 11640                           
 11641                           ;main.c: 950:                     datoIncorrecto = 1;
 11642  000F56  0E01               	movlw	1
 11643  000F58  6E08               	movwf	getValue@datoIncorrecto^0,c
 11644  000F5A                     
 11645                           ;main.c: 951:                     UART_write('@');
 11646  000F5A  0E40               	movlw	64
 11647  000F5C  EC7C  F019         	call	_UART_write
 11648                           
 11649                           ;main.c: 952:                     break;
 11650  000F60  EFDE  F007         	goto	l4008
 11651  000F64                     l4000:
 11652                           
 11653                           ;main.c: 954:             }
 11654  000F64  4A0B               	infsnz	getValue@i_995^0,f,c
 11655  000F66  2A0C               	incf	(getValue@i_995+1)^0,f,c
 11656  000F68  BE0C               	btfsc	(getValue@i_995+1)^0,7,c
 11657  000F6A  EFC0  F007         	goto	u3051
 11658  000F6E  500C               	movf	(getValue@i_995+1)^0,w,c
 11659  000F70  E109               	bnz	u3050
 11660  000F72  0E03               	movlw	3
 11661  000F74  5C0B               	subwf	getValue@i_995^0,w,c
 11662  000F76  A0D8               	btfss	status,0,c
 11663  000F78  EFC0  F007         	goto	u3051
 11664  000F7C  EFC2  F007         	goto	u3050
 11665  000F80                     u3051:
 11666  000F80  EF68  F007         	goto	l3978
 11667  000F84                     u3050:
 11668  000F84  EFDE  F007         	goto	l4008
 11669  000F88                     l4006:
 11670  000F88  C004  F006         	movff	getValue@numCharacters,??_getValue
 11671  000F8C  C005  F007         	movff	getValue@numCharacters+1,??_getValue+1
 11672                           
 11673                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11674                           ; Switch size 1, requested type "simple"
 11675                           ; Number of cases is 1, Range of values is 0 to 0
 11676                           ; switch strategies available:
 11677                           ; Name         Instructions Cycles
 11678                           ; simple_byte            4     3 (average)
 11679                           ;	Chosen strategy is simple_byte
 11680  000F90  5007               	movf	(??_getValue+1)^0,w,c
 11681  000F92  0A00               	xorlw	0	; case 0
 11682  000F94  B4D8               	btfsc	status,2,c
 11683  000F96  EFCF  F007         	goto	l5182
 11684  000F9A  EFDE  F007         	goto	l4008
 11685  000F9E                     l5182:
 11686                           
 11687                           ; Switch size 1, requested type "simple"
 11688                           ; Number of cases is 3, Range of values is 1 to 3
 11689                           ; switch strategies available:
 11690                           ; Name         Instructions Cycles
 11691                           ; simple_byte           10     6 (average)
 11692                           ;	Chosen strategy is simple_byte
 11693  000F9E  5006               	movf	??_getValue^0,w,c
 11694  000FA0  0A01               	xorlw	1	; case 1
 11695  000FA2  B4D8               	btfsc	status,2,c
 11696  000FA4  EFEE  F006         	goto	l3928
 11697  000FA8  0A03               	xorlw	3	; case 2
 11698  000FAA  B4D8               	btfsc	status,2,c
 11699  000FAC  EF0E  F007         	goto	l3942
 11700  000FB0  0A01               	xorlw	1	; case 3
 11701  000FB2  B4D8               	btfsc	status,2,c
 11702  000FB4  EF64  F007         	goto	l3972
 11703  000FB8  EFDE  F007         	goto	l4008
 11704  000FBC                     l4008:
 11705                           
 11706                           ;main.c: 963:     if (esperandoDatos || datoIncorrecto) {
 11707  000FBC  0100               	movlb	0	; () banked
 11708  000FBE  5189               	movf	_esperandoDatos& (0+255),w,b
 11709  000FC0  A4D8               	btfss	status,2,c
 11710  000FC2  EFE5  F007         	goto	u3061
 11711  000FC6  EFE7  F007         	goto	u3060
 11712  000FCA                     u3061:
 11713  000FCA  EFEF  F007         	goto	l4012
 11714  000FCE                     u3060:
 11715  000FCE                     
 11716                           ; BSR set to: 0
 11717  000FCE  5008               	movf	getValue@datoIncorrecto^0,w,c
 11718  000FD0  B4D8               	btfsc	status,2,c
 11719  000FD2  EFED  F007         	goto	u3071
 11720  000FD6  EFEF  F007         	goto	u3070
 11721  000FDA                     u3071:
 11722  000FDA  EFF8  F007         	goto	l4020
 11723  000FDE                     u3070:
 11724  000FDE                     l4012:
 11725                           
 11726                           ; BSR set to: 0
 11727                           ;main.c: 965:         UART_printf("\nFALLO EL SETEO\r\n");
 11728  000FDE  0E93               	movlw	low STR_59
 11729  000FE0  6E02               	movwf	UART_printf@cadena^0,c
 11730  000FE2  0E7F               	movlw	high STR_59
 11731  000FE4  6E03               	movwf	(UART_printf@cadena+1)^0,c
 11732  000FE6  EC50  F016         	call	_UART_printf	;wreg free
 11733  000FEA                     
 11734                           ;main.c: 966:         return '@';
 11735  000FEA  0E40               	movlw	64
 11736  000FEC  EFF9  F007         	goto	l463
 11737  000FF0                     l4020:
 11738                           
 11739                           ; BSR set to: 0
 11740                           ;main.c: 968:         return dato;
 11741  000FF0  500D               	movf	getValue@dato^0,w,c
 11742  000FF2                     l463:
 11743  000FF2  0012               	return		;funcret
 11744  000FF4                     __end_of_getValue:
 11745                           	opt callstack 0
 11746                           
 11747 ;; *************** function _UART_read *****************
 11748 ;; Defined at:
 11749 ;;		line 34 in file "./UART.h"
 11750 ;; Parameters:    Size  Location     Type
 11751 ;;		None
 11752 ;; Auto vars:     Size  Location     Type
 11753 ;;		None
 11754 ;; Return value:  Size  Location     Type
 11755 ;;                  1    wreg      unsigned char 
 11756 ;; Registers used:
 11757 ;;		wreg, status,2
 11758 ;; Tracked objects:
 11759 ;;		On entry : 0/0
 11760 ;;		On exit  : 0/0
 11761 ;;		Unchanged: 0/0
 11762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11763 ;;      Params:         0       0       0       0       0       0       0       0       0
 11764 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11765 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11766 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11767 ;;Total ram usage:        0 bytes
 11768 ;; Hardware stack levels used:    1
 11769 ;; Hardware stack levels required when called:    1
 11770 ;; This function calls:
 11771 ;;		Nothing
 11772 ;; This function is called by:
 11773 ;;		_lecturaWifi
 11774 ;;		_getValue
 11775 ;; This function uses a non-reentrant model
 11776 ;;
 11777                           
 11778                           	psect	text57
 11779  002E0E                     __ptext57:
 11780                           	opt callstack 0
 11781  002E0E                     _UART_read:
 11782                           	opt callstack 26
 11783  002E0E                     
 11784                           ;./UART.h: 36:     TMR0 = VALOR_TIMER0UART;
 11785  002E0E  0E67               	movlw	103
 11786  002E10  6ED7               	movwf	215,c	;volatile
 11787  002E12  0E69               	movlw	105
 11788  002E14  6ED6               	movwf	214,c	;volatile
 11789                           
 11790                           ;./UART.h: 37:     esperaDatoConcluida = 0;
 11791  002E16  0E00               	movlw	0
 11792  002E18  0100               	movlb	0	; () banked
 11793  002E1A  6F8A               	movwf	_esperaDatoConcluida& (0+255),b
 11794                           
 11795                           ;./UART.h: 38:     esperandoDatos = 1;
 11796  002E1C  0E01               	movlw	1
 11797  002E1E  6F89               	movwf	_esperandoDatos& (0+255),b
 11798                           
 11799                           ;./UART.h: 39:     byteUart = 0;
 11800  002E20  0E00               	movlw	0
 11801  002E22  6F8B               	movwf	_byteUart& (0+255),b
 11802                           
 11803                           ;./UART.h: 40:     tiempoInactividadTrans = 0;
 11804  002E24  0E00               	movlw	0
 11805  002E26  6F8C               	movwf	_tiempoInactividadTrans& (0+255),b
 11806  002E28                     l129:
 11807                           
 11808                           ; BSR set to: 0
 11809  002E28  BA9E               	btfsc	158,5,c	;volatile
 11810  002E2A  EF19  F017         	goto	u2751
 11811  002E2E  EF1B  F017         	goto	u2750
 11812  002E32                     u2751:
 11813  002E32  EF23  F017         	goto	l3758
 11814  002E36                     u2750:
 11815  002E36                     
 11816                           ; BSR set to: 0
 11817  002E36  518A               	movf	_esperaDatoConcluida& (0+255),w,b
 11818  002E38  B4D8               	btfsc	status,2,c
 11819  002E3A  EF21  F017         	goto	u2761
 11820  002E3E  EF23  F017         	goto	u2760
 11821  002E42                     u2761:
 11822  002E42  EF14  F017         	goto	l129
 11823  002E46                     u2760:
 11824  002E46                     l3758:
 11825                           
 11826                           ; BSR set to: 0
 11827                           ;./UART.h: 44:     if (!esperaDatoConcluida) {
 11828  002E46  518A               	movf	_esperaDatoConcluida& (0+255),w,b
 11829  002E48  A4D8               	btfss	status,2,c
 11830  002E4A  EF29  F017         	goto	u2771
 11831  002E4E  EF2B  F017         	goto	u2770
 11832  002E52                     u2771:
 11833  002E52  EF2F  F017         	goto	l134
 11834  002E56                     u2770:
 11835  002E56                     
 11836                           ; BSR set to: 0
 11837                           ;./UART.h: 45:         byteUart = RCREG;
 11838  002E56  CFAE F08B          	movff	4014,_byteUart	;volatile
 11839  002E5A                     
 11840                           ; BSR set to: 0
 11841                           ;./UART.h: 46:         esperandoDatos = 0;
 11842  002E5A  0E00               	movlw	0
 11843  002E5C  6F89               	movwf	_esperandoDatos& (0+255),b
 11844  002E5E                     l134:
 11845                           
 11846                           ; BSR set to: 0
 11847                           ;./UART.h: 49:     return byteUart;
 11848  002E5E  518B               	movf	_byteUart& (0+255),w,b
 11849  002E60                     
 11850                           ; BSR set to: 0
 11851  002E60  0012               	return		;funcret
 11852  002E62                     __end_of_UART_read:
 11853                           	opt callstack 0
 11854                           
 11855 ;; *************** function _UART_printf *****************
 11856 ;; Defined at:
 11857 ;;		line 57 in file "./UART.h"
 11858 ;; Parameters:    Size  Location     Type
 11859 ;;  cadena          2    1[COMRAM] PTR unsigned char 
 11860 ;;		 -> STR_63(58), STR_62(57), STR_61(57), STR_60(20), 
 11861 ;;		 -> STR_59(18), STR_58(11), STR_57(9), STR_56(17), 
 11862 ;;		 -> STR_49(25), dameDatosSistema@bufferHorario(30), STR_40(26), STR_39(38), 
 11863 ;;		 -> STR_38(36), STR_37(28), STR_36(13), STR_35(42), 
 11864 ;;		 -> STR_34(3), STR_33(14), STR_32(36), STR_31(26), 
 11865 ;;		 -> STR_30(23), STR_29(34), STR_28(32), STR_27(49), 
 11866 ;;		 -> STR_26(37), STR_25(27), STR_24(37), STR_23(32), 
 11867 ;;		 -> STR_21(38), STR_20(37), STR_19(72), STR_18(51), 
 11868 ;;		 -> STR_17(23), STR_16(26), STR_15(26), buffer(50), 
 11869 ;;		 -> STR_13(37), STR_12(59), STR_11(59), STR_10(51), 
 11870 ;;		 -> STR_9(25), STR_8(37), STR_7(31), STR_6(43), 
 11871 ;;		 -> STR_5(16), STR_4(33), STR_3(34), STR_2(36), 
 11872 ;;		 -> STR_1(65), 
 11873 ;; Auto vars:     Size  Location     Type
 11874 ;;		None
 11875 ;; Return value:  Size  Location     Type
 11876 ;;                  1    wreg      void 
 11877 ;; Registers used:
 11878 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11879 ;; Tracked objects:
 11880 ;;		On entry : 0/0
 11881 ;;		On exit  : 0/0
 11882 ;;		Unchanged: 0/0
 11883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11884 ;;      Params:         2       0       0       0       0       0       0       0       0
 11885 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11886 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11887 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11888 ;;Total ram usage:        2 bytes
 11889 ;; Hardware stack levels used:    1
 11890 ;; Hardware stack levels required when called:    2
 11891 ;; This function calls:
 11892 ;;		_UART_write
 11893 ;; This function is called by:
 11894 ;;		_fijaDiaRtc
 11895 ;;		_leeHorariosMemoria
 11896 ;;		_fijaHoraRtc
 11897 ;;		_asignarHorarios
 11898 ;;		_setTiempoRegar
 11899 ;;		_lecturaWifi
 11900 ;;		_mostrarMenu
 11901 ;;		_sistemaPrincipal
 11902 ;;		_dameDatosSistema
 11903 ;;		_dameTemperaturaHumedad
 11904 ;;		_mostrarDatosSensores
 11905 ;;		_mostrarDatosSensoresWIFI
 11906 ;;		_getValue
 11907 ;;		_regadoRapido
 11908 ;;		_configBluetoothHC_06
 11909 ;; This function uses a non-reentrant model
 11910 ;;
 11911                           
 11912                           	psect	text58
 11913  002CA0                     __ptext58:
 11914                           	opt callstack 0
 11915  002CA0                     _UART_printf:
 11916                           	opt callstack 26
 11917  002CA0                     
 11918                           ;./UART.h: 58:     while (*cadena) {
 11919  002CA0  EF66  F016         	goto	l3772
 11920  002CA4                     l3768:
 11921                           
 11922                           ;./UART.h: 59:         UART_write(*cadena++);
 11923  002CA4  C002  FFF6         	movff	UART_printf@cadena,tblptrl
 11924  002CA8  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
 11925  002CAC  6AF8               	clrf	tblptru,c
 11926  002CAE  0E07               	movlw	(high __ramtop+-1)
 11927  002CB0  64F7               	cpfsgt	tblptrh,c
 11928  002CB2  D003               	bra	u2787
 11929  002CB4  0008               	tblrd		*
 11930  002CB6  50F5               	movf	tablat,w,c
 11931  002CB8  D005               	bra	u2780
 11932  002CBA                     u2787:
 11933  002CBA  CFF6 FFE1          	movff	tblptrl,fsr1l
 11934  002CBE  CFF7 FFE2          	movff	tblptrh,fsr1h
 11935  002CC2  50E7               	movf	indf1,w,c
 11936  002CC4                     u2780:
 11937  002CC4  EC7C  F019         	call	_UART_write
 11938  002CC8  4A02               	infsnz	UART_printf@cadena^0,f,c
 11939  002CCA  2A03               	incf	(UART_printf@cadena+1)^0,f,c
 11940  002CCC                     l3772:
 11941                           
 11942                           ;./UART.h: 58:     while (*cadena) {
 11943  002CCC  C002  FFF6         	movff	UART_printf@cadena,tblptrl
 11944  002CD0  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
 11945  002CD4  6AF8               	clrf	tblptru,c
 11946  002CD6  0E07               	movlw	(high __ramtop+-1)
 11947  002CD8  64F7               	cpfsgt	tblptrh,c
 11948  002CDA  D003               	bra	u2797
 11949  002CDC  0008               	tblrd		*
 11950  002CDE  50F5               	movf	tablat,w,c
 11951  002CE0  D005               	bra	u2790
 11952  002CE2                     u2797:
 11953  002CE2  CFF6 FFE1          	movff	tblptrl,fsr1l
 11954  002CE6  CFF7 FFE2          	movff	tblptrh,fsr1h
 11955  002CEA  50E7               	movf	indf1,w,c
 11956  002CEC                     u2790:
 11957  002CEC  0900               	iorlw	0
 11958  002CEE  A4D8               	btfss	status,2,c
 11959  002CF0  EF7C  F016         	goto	u2801
 11960  002CF4  EF7E  F016         	goto	u2800
 11961  002CF8                     u2801:
 11962  002CF8  EF52  F016         	goto	l3768
 11963  002CFC                     u2800:
 11964  002CFC  0012               	return		;funcret
 11965  002CFE                     __end_of_UART_printf:
 11966                           	opt callstack 0
 11967                           
 11968 ;; *************** function _UART_write *****************
 11969 ;; Defined at:
 11970 ;;		line 52 in file "./UART.h"
 11971 ;; Parameters:    Size  Location     Type
 11972 ;;  dato            1    wreg     unsigned char 
 11973 ;; Auto vars:     Size  Location     Type
 11974 ;;  dato            1    0[COMRAM] unsigned char 
 11975 ;; Return value:  Size  Location     Type
 11976 ;;                  1    wreg      void 
 11977 ;; Registers used:
 11978 ;;		wreg
 11979 ;; Tracked objects:
 11980 ;;		On entry : 0/0
 11981 ;;		On exit  : 0/0
 11982 ;;		Unchanged: 0/0
 11983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11984 ;;      Params:         0       0       0       0       0       0       0       0       0
 11985 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11986 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11987 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11988 ;;Total ram usage:        1 bytes
 11989 ;; Hardware stack levels used:    1
 11990 ;; Hardware stack levels required when called:    1
 11991 ;; This function calls:
 11992 ;;		Nothing
 11993 ;; This function is called by:
 11994 ;;		_UART_printf
 11995 ;;		_lecturaWifi
 11996 ;;		_dameDatosSistema
 11997 ;;		_mostrarDatosSensores
 11998 ;;		_mostrarDatosSensoresWIFI
 11999 ;;		_getValue
 12000 ;; This function uses a non-reentrant model
 12001 ;;
 12002                           
 12003                           	psect	text59
 12004  0032F8                     __ptext59:
 12005                           	opt callstack 0
 12006  0032F8                     _UART_write:
 12007                           	opt callstack 26
 12008                           
 12009                           ;incstack = 0
 12010                           ;UART_write@dato stored from wreg
 12011  0032F8  6E01               	movwf	UART_write@dato^0,c
 12012  0032FA                     
 12013                           ;./UART.h: 53:     TXREG = dato;
 12014  0032FA  C001  FFAD         	movff	UART_write@dato,4013	;volatile
 12015  0032FE                     l138:
 12016  0032FE  A2AC               	btfss	172,1,c	;volatile
 12017  003300  EF84  F019         	goto	u2561
 12018  003304  EF86  F019         	goto	u2560
 12019  003308                     u2561:
 12020  003308  EF7F  F019         	goto	l138
 12021  00330C                     u2560:
 12022  00330C  0012               	return		;funcret
 12023  00330E                     __end_of_UART_write:
 12024                           	opt callstack 0
 12025                           
 12026 ;; *************** function _escribeHorariosMemoria *****************
 12027 ;; Defined at:
 12028 ;;		line 252 in file "main.c"
 12029 ;; Parameters:    Size  Location     Type
 12030 ;;		None
 12031 ;; Auto vars:     Size  Location     Type
 12032 ;;  j               2   12[COMRAM] int 
 12033 ;;  i               2   16[COMRAM] int 
 12034 ;;  contMemoria     2   14[COMRAM] int 
 12035 ;; Return value:  Size  Location     Type
 12036 ;;                  1    wreg      void 
 12037 ;; Registers used:
 12038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12039 ;; Tracked objects:
 12040 ;;		On entry : 0/0
 12041 ;;		On exit  : 0/0
 12042 ;;		Unchanged: 0/0
 12043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12044 ;;      Params:         0       0       0       0       0       0       0       0       0
 12045 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12046 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12047 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12048 ;;Total ram usage:        8 bytes
 12049 ;; Hardware stack levels used:    1
 12050 ;; Hardware stack levels required when called:    4
 12051 ;; This function calls:
 12052 ;;		___wmul
 12053 ;;		_escribe_eeprom
 12054 ;; This function is called by:
 12055 ;;		_asignarHorarios
 12056 ;;		_setTiempoRegar
 12057 ;; This function uses a non-reentrant model
 12058 ;;
 12059                           
 12060                           	psect	text60
 12061  001C00                     __ptext60:
 12062                           	opt callstack 0
 12063  001C00                     _escribeHorariosMemoria:
 12064                           	opt callstack 24
 12065  001C00                     
 12066                           ;main.c: 254:     int contMemoria = 0;
 12067  001C00  0E00               	movlw	0
 12068  001C02  6E10               	movwf	(escribeHorariosMemoria@contMemoria+1)^0,c
 12069  001C04  0E00               	movlw	0
 12070  001C06  6E0F               	movwf	escribeHorariosMemoria@contMemoria^0,c
 12071  001C08                     
 12072                           ;main.c: 256:     escribe_eeprom(contMemoria++, 'T');
 12073  001C08  0E00               	movlw	0
 12074  001C0A  6E08               	movwf	(escribe_eeprom@direccion+1)^0,c
 12075  001C0C  0E00               	movlw	0
 12076  001C0E  6E07               	movwf	escribe_eeprom@direccion^0,c
 12077  001C10  0E54               	movlw	84
 12078  001C12  6E09               	movwf	escribe_eeprom@dato^0,c
 12079  001C14  ECD7  F018         	call	_escribe_eeprom	;wreg free
 12080  001C18  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 12081  001C1A  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 12082  001C1C                     
 12083                           ;main.c: 259:     for (int i = 0; i < 24; i++) {
 12084  001C1C  0E00               	movlw	0
 12085  001C1E  6E12               	movwf	(escribeHorariosMemoria@i+1)^0,c
 12086  001C20  0E00               	movlw	0
 12087  001C22  6E11               	movwf	escribeHorariosMemoria@i^0,c
 12088  001C24                     l4236:
 12089                           
 12090                           ;main.c: 260:         escribe_eeprom(contMemoria++, horarios[i].hora);
 12091  001C24  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 12092  001C28  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 12093  001C2C  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 12094  001C30  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 12095  001C34  0E00               	movlw	0
 12096  001C36  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12097  001C38  0E0C               	movlw	12
 12098  001C3A  6E03               	movwf	___wmul@multiplicand^0,c
 12099  001C3C  EC2D  F019         	call	___wmul	;wreg free
 12100  001C40  0E32               	movlw	low _horarios
 12101  001C42  2401               	addwf	?___wmul^0,w,c
 12102  001C44  6ED9               	movwf	fsr2l,c
 12103  001C46  0E01               	movlw	high _horarios
 12104  001C48  2002               	addwfc	(?___wmul+1)^0,w,c
 12105  001C4A  6EDA               	movwf	fsr2h,c
 12106  001C4C  50DF               	movf	indf2,w,c
 12107  001C4E  6E09               	movwf	escribe_eeprom@dato^0,c
 12108  001C50  ECD7  F018         	call	_escribe_eeprom	;wreg free
 12109  001C54  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 12110  001C56  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 12111  001C58                     
 12112                           ;main.c: 262:         for (int j = 0; j < 7; j++) {
 12113  001C58  0E00               	movlw	0
 12114  001C5A  6E0E               	movwf	(escribeHorariosMemoria@j+1)^0,c
 12115  001C5C  0E00               	movlw	0
 12116  001C5E  6E0D               	movwf	escribeHorariosMemoria@j^0,c
 12117  001C60                     l4246:
 12118                           
 12119                           ;main.c: 263:             escribe_eeprom(contMemoria++, horarios[i].dias[j]);
 12120  001C60  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 12121  001C64  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 12122  001C68  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 12123  001C6C  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 12124  001C70  0E00               	movlw	0
 12125  001C72  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12126  001C74  0E0C               	movlw	12
 12127  001C76  6E03               	movwf	___wmul@multiplicand^0,c
 12128  001C78  EC2D  F019         	call	___wmul	;wreg free
 12129  001C7C  0E32               	movlw	low _horarios
 12130  001C7E  6E0B               	movwf	??_escribeHorariosMemoria^0,c
 12131  001C80  0E01               	movlw	high _horarios
 12132  001C82  6E0C               	movwf	(??_escribeHorariosMemoria+1)^0,c
 12133  001C84  0E01               	movlw	1
 12134  001C86  260B               	addwf	??_escribeHorariosMemoria^0,f,c
 12135  001C88  0E00               	movlw	0
 12136  001C8A  220C               	addwfc	(??_escribeHorariosMemoria+1)^0,f,c
 12137  001C8C  5001               	movf	?___wmul^0,w,c
 12138  001C8E  260B               	addwf	??_escribeHorariosMemoria^0,f,c
 12139  001C90  5002               	movf	(?___wmul+1)^0,w,c
 12140  001C92  220C               	addwfc	(??_escribeHorariosMemoria+1)^0,f,c
 12141  001C94  500D               	movf	escribeHorariosMemoria@j^0,w,c
 12142  001C96  240B               	addwf	??_escribeHorariosMemoria^0,w,c
 12143  001C98  6ED9               	movwf	fsr2l,c
 12144  001C9A  500E               	movf	(escribeHorariosMemoria@j+1)^0,w,c
 12145  001C9C  200C               	addwfc	(??_escribeHorariosMemoria+1)^0,w,c
 12146  001C9E  6EDA               	movwf	fsr2h,c
 12147  001CA0  50DF               	movf	indf2,w,c
 12148  001CA2  6E09               	movwf	escribe_eeprom@dato^0,c
 12149  001CA4  ECD7  F018         	call	_escribe_eeprom	;wreg free
 12150  001CA8  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 12151  001CAA  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 12152  001CAC                     
 12153                           ;main.c: 264:         }
 12154  001CAC  4A0D               	infsnz	escribeHorariosMemoria@j^0,f,c
 12155  001CAE  2A0E               	incf	(escribeHorariosMemoria@j+1)^0,f,c
 12156  001CB0  BE0E               	btfsc	(escribeHorariosMemoria@j+1)^0,7,c
 12157  001CB2  EF64  F00E         	goto	u3261
 12158  001CB6  500E               	movf	(escribeHorariosMemoria@j+1)^0,w,c
 12159  001CB8  E109               	bnz	u3260
 12160  001CBA  0E07               	movlw	7
 12161  001CBC  5C0D               	subwf	escribeHorariosMemoria@j^0,w,c
 12162  001CBE  A0D8               	btfss	status,0,c
 12163  001CC0  EF64  F00E         	goto	u3261
 12164  001CC4  EF66  F00E         	goto	u3260
 12165  001CC8                     u3261:
 12166  001CC8  EF30  F00E         	goto	l4246
 12167  001CCC                     u3260:
 12168  001CCC                     
 12169                           ;main.c: 266:         escribe_eeprom(contMemoria++, horarios[i].regar);
 12170  001CCC  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 12171  001CD0  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 12172  001CD4  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 12173  001CD8  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 12174  001CDC  0E00               	movlw	0
 12175  001CDE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12176  001CE0  0E0C               	movlw	12
 12177  001CE2  6E03               	movwf	___wmul@multiplicand^0,c
 12178  001CE4  EC2D  F019         	call	___wmul	;wreg free
 12179  001CE8  0E3B               	movlw	low (_horarios+9)
 12180  001CEA  2401               	addwf	?___wmul^0,w,c
 12181  001CEC  6ED9               	movwf	fsr2l,c
 12182  001CEE  0E01               	movlw	high (_horarios+9)
 12183  001CF0  2002               	addwfc	(?___wmul+1)^0,w,c
 12184  001CF2  6EDA               	movwf	fsr2h,c
 12185  001CF4  50DF               	movf	indf2,w,c
 12186  001CF6  6E09               	movwf	escribe_eeprom@dato^0,c
 12187  001CF8  ECD7  F018         	call	_escribe_eeprom	;wreg free
 12188  001CFC  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 12189  001CFE  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 12190  001D00                     
 12191                           ;main.c: 267:         escribe_eeprom(contMemoria++, horarios[i].tiempoRegar);
 12192  001D00  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 12193  001D04  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 12194  001D08  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 12195  001D0C  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 12196  001D10  0E00               	movlw	0
 12197  001D12  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12198  001D14  0E0C               	movlw	12
 12199  001D16  6E03               	movwf	___wmul@multiplicand^0,c
 12200  001D18  EC2D  F019         	call	___wmul	;wreg free
 12201  001D1C  0E3D               	movlw	low (_horarios+11)
 12202  001D1E  2401               	addwf	?___wmul^0,w,c
 12203  001D20  6ED9               	movwf	fsr2l,c
 12204  001D22  0E01               	movlw	high (_horarios+11)
 12205  001D24  2002               	addwfc	(?___wmul+1)^0,w,c
 12206  001D26  6EDA               	movwf	fsr2h,c
 12207  001D28  50DF               	movf	indf2,w,c
 12208  001D2A  6E09               	movwf	escribe_eeprom@dato^0,c
 12209  001D2C  ECD7  F018         	call	_escribe_eeprom	;wreg free
 12210  001D30  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 12211  001D32  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 12212                           
 12213                           ;main.c: 268:     }
 12214  001D34  4A11               	infsnz	escribeHorariosMemoria@i^0,f,c
 12215  001D36  2A12               	incf	(escribeHorariosMemoria@i+1)^0,f,c
 12216  001D38  BE12               	btfsc	(escribeHorariosMemoria@i+1)^0,7,c
 12217  001D3A  EFA8  F00E         	goto	u3271
 12218  001D3E  5012               	movf	(escribeHorariosMemoria@i+1)^0,w,c
 12219  001D40  E109               	bnz	u3270
 12220  001D42  0E18               	movlw	24
 12221  001D44  5C11               	subwf	escribeHorariosMemoria@i^0,w,c
 12222  001D46  A0D8               	btfss	status,0,c
 12223  001D48  EFA8  F00E         	goto	u3271
 12224  001D4C  EFAA  F00E         	goto	u3270
 12225  001D50                     u3271:
 12226  001D50  EF12  F00E         	goto	l4236
 12227  001D54                     u3270:
 12228  001D54  0012               	return		;funcret
 12229  001D56                     __end_of_escribeHorariosMemoria:
 12230                           	opt callstack 0
 12231                           
 12232 ;; *************** function _escribe_eeprom *****************
 12233 ;; Defined at:
 12234 ;;		line 223 in file "main.c"
 12235 ;; Parameters:    Size  Location     Type
 12236 ;;  direccion       2    6[COMRAM] unsigned short 
 12237 ;;  dato            1    8[COMRAM] unsigned char 
 12238 ;; Auto vars:     Size  Location     Type
 12239 ;;		None
 12240 ;; Return value:  Size  Location     Type
 12241 ;;                  1    wreg      void 
 12242 ;; Registers used:
 12243 ;;		wreg, status,2, status,0, cstack
 12244 ;; Tracked objects:
 12245 ;;		On entry : 0/0
 12246 ;;		On exit  : 0/0
 12247 ;;		Unchanged: 0/0
 12248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12249 ;;      Params:         3       0       0       0       0       0       0       0       0
 12250 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12251 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12252 ;;      Totals:         4       0       0       0       0       0       0       0       0
 12253 ;;Total ram usage:        4 bytes
 12254 ;; Hardware stack levels used:    1
 12255 ;; Hardware stack levels required when called:    3
 12256 ;; This function calls:
 12257 ;;		_i2c_detener
 12258 ;;		_i2c_envia_dato
 12259 ;;		_i2c_inicia_com
 12260 ;; This function is called by:
 12261 ;;		_escribeHorariosMemoria
 12262 ;; This function uses a non-reentrant model
 12263 ;;
 12264                           
 12265                           	psect	text61
 12266  0031AE                     __ptext61:
 12267                           	opt callstack 0
 12268  0031AE                     _escribe_eeprom:
 12269                           	opt callstack 24
 12270  0031AE                     
 12271                           ;main.c: 224:     i2c_inicia_com();
 12272  0031AE  ECB4  F019         	call	_i2c_inicia_com	;wreg free
 12273                           
 12274                           ;main.c: 225:     i2c_envia_dato(0xAE);
 12275  0031B2  0EAE               	movlw	174
 12276  0031B4  EC9A  F019         	call	_i2c_envia_dato
 12277                           
 12278                           ;main.c: 226:     i2c_envia_dato(direccion >> 8);
 12279  0031B8  5008               	movf	(escribe_eeprom@direccion+1)^0,w,c
 12280  0031BA  EC9A  F019         	call	_i2c_envia_dato
 12281                           
 12282                           ;main.c: 228:     i2c_envia_dato(direccion);
 12283  0031BE  5007               	movf	escribe_eeprom@direccion^0,w,c
 12284  0031C0  EC9A  F019         	call	_i2c_envia_dato
 12285                           
 12286                           ;main.c: 230:     i2c_envia_dato(dato);
 12287  0031C4  5009               	movf	escribe_eeprom@dato^0,w,c
 12288  0031C6  EC9A  F019         	call	_i2c_envia_dato
 12289                           
 12290                           ;main.c: 231:     i2c_detener();
 12291  0031CA  ECB8  F019         	call	_i2c_detener	;wreg free
 12292  0031CE                     
 12293                           ;main.c: 232:     _delay((unsigned long)((10)*(4000000/4000.0)));
 12294  0031CE  0E0D               	movlw	13
 12295  0031D0  6E0A               	movwf	??_escribe_eeprom^0,c
 12296  0031D2  0EFC               	movlw	252
 12297  0031D4                     u3967:
 12298  0031D4  2EE8               	decfsz	wreg,f,c
 12299  0031D6  D7FE               	bra	u3967
 12300  0031D8  2E0A               	decfsz	??_escribe_eeprom^0,f,c
 12301  0031DA  D7FC               	bra	u3967
 12302  0031DC  0012               	return		;funcret
 12303  0031DE                     __end_of_escribe_eeprom:
 12304                           	opt callstack 0
 12305                           
 12306 ;; *************** function _i2c_inicia_com *****************
 12307 ;; Defined at:
 12308 ;;		line 28 in file "./I2C.h"
 12309 ;; Parameters:    Size  Location     Type
 12310 ;;		None
 12311 ;; Auto vars:     Size  Location     Type
 12312 ;;		None
 12313 ;; Return value:  Size  Location     Type
 12314 ;;                  1    wreg      void 
 12315 ;; Registers used:
 12316 ;;		wreg, status,2, status,0, cstack
 12317 ;; Tracked objects:
 12318 ;;		On entry : 0/0
 12319 ;;		On exit  : 0/0
 12320 ;;		Unchanged: 0/0
 12321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12322 ;;      Params:         0       0       0       0       0       0       0       0       0
 12323 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12324 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12325 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12326 ;;Total ram usage:        0 bytes
 12327 ;; Hardware stack levels used:    1
 12328 ;; Hardware stack levels required when called:    2
 12329 ;; This function calls:
 12330 ;;		_i2c_espera
 12331 ;; This function is called by:
 12332 ;;		_escribe_rtc
 12333 ;;		_leer_rtc
 12334 ;;		_escribe_eeprom
 12335 ;;		_leer_eeprom
 12336 ;; This function uses a non-reentrant model
 12337 ;;
 12338                           
 12339                           	psect	text62
 12340  003368                     __ptext62:
 12341                           	opt callstack 0
 12342  003368                     _i2c_inicia_com:
 12343                           	opt callstack 25
 12344  003368                     
 12345                           ;./I2C.h: 29:     i2c_espera();
 12346  003368  EC1A  F019         	call	_i2c_espera	;wreg free
 12347  00336C                     
 12348                           ;./I2C.h: 30:     SSPCON2bits.SEN = 1;
 12349  00336C  80C5               	bsf	197,0,c	;volatile
 12350  00336E  0012               	return		;funcret
 12351  003370                     __end_of_i2c_inicia_com:
 12352                           	opt callstack 0
 12353                           
 12354 ;; *************** function _i2c_envia_dato *****************
 12355 ;; Defined at:
 12356 ;;		line 57 in file "./I2C.h"
 12357 ;; Parameters:    Size  Location     Type
 12358 ;;  dato            1    wreg     unsigned char 
 12359 ;; Auto vars:     Size  Location     Type
 12360 ;;  dato            1    1[COMRAM] unsigned char 
 12361 ;; Return value:  Size  Location     Type
 12362 ;;                  1    wreg      unsigned char 
 12363 ;; Registers used:
 12364 ;;		wreg, status,2, status,0, cstack
 12365 ;; Tracked objects:
 12366 ;;		On entry : 0/0
 12367 ;;		On exit  : 0/0
 12368 ;;		Unchanged: 0/0
 12369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12370 ;;      Params:         0       0       0       0       0       0       0       0       0
 12371 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12372 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12373 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12374 ;;Total ram usage:        1 bytes
 12375 ;; Hardware stack levels used:    1
 12376 ;; Hardware stack levels required when called:    2
 12377 ;; This function calls:
 12378 ;;		_i2c_espera
 12379 ;; This function is called by:
 12380 ;;		_escribe_rtc
 12381 ;;		_leer_rtc
 12382 ;;		_escribe_eeprom
 12383 ;;		_leer_eeprom
 12384 ;; This function uses a non-reentrant model
 12385 ;;
 12386                           
 12387                           	psect	text63
 12388  003334                     __ptext63:
 12389                           	opt callstack 0
 12390  003334                     _i2c_envia_dato:
 12391                           	opt callstack 25
 12392                           
 12393                           ;incstack = 0
 12394                           ;i2c_envia_dato@dato stored from wreg
 12395  003334  6E02               	movwf	i2c_envia_dato@dato^0,c
 12396  003336                     
 12397                           ;./I2C.h: 58:     i2c_espera();
 12398  003336  EC1A  F019         	call	_i2c_espera	;wreg free
 12399  00333A                     
 12400                           ;./I2C.h: 59:     SSPBUF = dato;
 12401  00333A  C002  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
 12402  00333E  0012               	return		;funcret
 12403  003340                     __end_of_i2c_envia_dato:
 12404                           	opt callstack 0
 12405                           
 12406 ;; *************** function _i2c_detener *****************
 12407 ;; Defined at:
 12408 ;;		line 46 in file "./I2C.h"
 12409 ;; Parameters:    Size  Location     Type
 12410 ;;		None
 12411 ;; Auto vars:     Size  Location     Type
 12412 ;;		None
 12413 ;; Return value:  Size  Location     Type
 12414 ;;                  1    wreg      void 
 12415 ;; Registers used:
 12416 ;;		wreg, status,2, status,0, cstack
 12417 ;; Tracked objects:
 12418 ;;		On entry : 0/0
 12419 ;;		On exit  : 0/0
 12420 ;;		Unchanged: 0/0
 12421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12422 ;;      Params:         0       0       0       0       0       0       0       0       0
 12423 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12424 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12425 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12426 ;;Total ram usage:        0 bytes
 12427 ;; Hardware stack levels used:    1
 12428 ;; Hardware stack levels required when called:    2
 12429 ;; This function calls:
 12430 ;;		_i2c_espera
 12431 ;; This function is called by:
 12432 ;;		_escribe_rtc
 12433 ;;		_leer_rtc
 12434 ;;		_escribe_eeprom
 12435 ;;		_leer_eeprom
 12436 ;; This function uses a non-reentrant model
 12437 ;;
 12438                           
 12439                           	psect	text64
 12440  003370                     __ptext64:
 12441                           	opt callstack 0
 12442  003370                     _i2c_detener:
 12443                           	opt callstack 25
 12444  003370                     
 12445                           ;./I2C.h: 47:     i2c_espera();
 12446  003370  EC1A  F019         	call	_i2c_espera	;wreg free
 12447  003374                     
 12448                           ;./I2C.h: 48:     SSPCON2bits.PEN = 1;
 12449  003374  84C5               	bsf	197,2,c	;volatile
 12450  003376  0012               	return		;funcret
 12451  003378                     __end_of_i2c_detener:
 12452                           	opt callstack 0
 12453                           
 12454 ;; *************** function _i2c_espera *****************
 12455 ;; Defined at:
 12456 ;;		line 20 in file "./I2C.h"
 12457 ;; Parameters:    Size  Location     Type
 12458 ;;		None
 12459 ;; Auto vars:     Size  Location     Type
 12460 ;;		None
 12461 ;; Return value:  Size  Location     Type
 12462 ;;                  1    wreg      void 
 12463 ;; Registers used:
 12464 ;;		wreg, status,2, status,0
 12465 ;; Tracked objects:
 12466 ;;		On entry : 0/0
 12467 ;;		On exit  : 0/0
 12468 ;;		Unchanged: 0/0
 12469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12470 ;;      Params:         0       0       0       0       0       0       0       0       0
 12471 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12472 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12473 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12474 ;;Total ram usage:        1 bytes
 12475 ;; Hardware stack levels used:    1
 12476 ;; Hardware stack levels required when called:    1
 12477 ;; This function calls:
 12478 ;;		Nothing
 12479 ;; This function is called by:
 12480 ;;		_i2c_inicia_com
 12481 ;;		_i2c_reinicia_com
 12482 ;;		_i2c_detener
 12483 ;;		_i2c_envia_dato
 12484 ;;		_i2c_recibe_dato
 12485 ;; This function uses a non-reentrant model
 12486 ;;
 12487                           
 12488                           	psect	text65
 12489  003234                     __ptext65:
 12490                           	opt callstack 0
 12491  003234                     _i2c_espera:
 12492                           	opt callstack 25
 12493  003234                     l3598:
 12494  003234  CFC5 F001          	movff	4037,??_i2c_espera	;volatile
 12495  003238  0E1F               	movlw	31
 12496  00323A  1601               	andwf	??_i2c_espera^0,f,c
 12497  00323C  A4D8               	btfss	status,2,c
 12498  00323E  EF23  F019         	goto	u2541
 12499  003242  EF25  F019         	goto	u2540
 12500  003246                     u2541:
 12501  003246  EF1A  F019         	goto	l3598
 12502  00324A                     u2540:
 12503  00324A  B4C7               	btfsc	199,2,c	;volatile
 12504  00324C  EF2A  F019         	goto	u2551
 12505  003250  EF2C  F019         	goto	u2550
 12506  003254                     u2551:
 12507  003254  EF1A  F019         	goto	l3598
 12508  003258                     u2550:
 12509  003258  0012               	return		;funcret
 12510  00325A                     __end_of_i2c_espera:
 12511                           	opt callstack 0
 12512                           
 12513 ;; *************** function _inicializarObjetos *****************
 12514 ;; Defined at:
 12515 ;;		line 163 in file "main.c"
 12516 ;; Parameters:    Size  Location     Type
 12517 ;;		None
 12518 ;; Auto vars:     Size  Location     Type
 12519 ;;  j               2    8[COMRAM] int 
 12520 ;;  i               2   10[COMRAM] int 
 12521 ;;  i               2   12[COMRAM] int 
 12522 ;; Return value:  Size  Location     Type
 12523 ;;                  1    wreg      void 
 12524 ;; Registers used:
 12525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12526 ;; Tracked objects:
 12527 ;;		On entry : 0/0
 12528 ;;		On exit  : 0/0
 12529 ;;		Unchanged: 0/0
 12530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12531 ;;      Params:         0       0       0       0       0       0       0       0       0
 12532 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12533 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12534 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12535 ;;Total ram usage:        8 bytes
 12536 ;; Hardware stack levels used:    1
 12537 ;; Hardware stack levels required when called:    2
 12538 ;; This function calls:
 12539 ;;		___wmul
 12540 ;; This function is called by:
 12541 ;;		_main
 12542 ;; This function uses a non-reentrant model
 12543 ;;
 12544                           
 12545                           	psect	text66
 12546  001932                     __ptext66:
 12547                           	opt callstack 0
 12548  001932                     _inicializarObjetos:
 12549                           	opt callstack 28
 12550  001932                     
 12551                           ;main.c: 165:     for (int i = 0; i < 24; i++) {
 12552  001932  0E00               	movlw	0
 12553  001934  6E0E               	movwf	(inicializarObjetos@i+1)^0,c
 12554  001936  0E00               	movlw	0
 12555  001938  6E0D               	movwf	inicializarObjetos@i^0,c
 12556  00193A                     l4750:
 12557                           
 12558                           ;main.c: 166:         horarios[i].hora = i;
 12559  00193A  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 12560  00193E  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 12561  001942  0E00               	movlw	0
 12562  001944  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12563  001946  0E0C               	movlw	12
 12564  001948  6E03               	movwf	___wmul@multiplicand^0,c
 12565  00194A  EC2D  F019         	call	___wmul	;wreg free
 12566  00194E  0E32               	movlw	low _horarios
 12567  001950  2401               	addwf	?___wmul^0,w,c
 12568  001952  6ED9               	movwf	fsr2l,c
 12569  001954  0E01               	movlw	high _horarios
 12570  001956  2002               	addwfc	(?___wmul+1)^0,w,c
 12571  001958  6EDA               	movwf	fsr2h,c
 12572  00195A  C00D  FFDF         	movff	inicializarObjetos@i,indf2
 12573                           
 12574                           ;main.c: 167:         horarios[i].regar = 0;
 12575  00195E  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 12576  001962  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 12577  001966  0E00               	movlw	0
 12578  001968  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12579  00196A  0E0C               	movlw	12
 12580  00196C  6E03               	movwf	___wmul@multiplicand^0,c
 12581  00196E  EC2D  F019         	call	___wmul	;wreg free
 12582  001972  0E3B               	movlw	low (_horarios+9)
 12583  001974  2401               	addwf	?___wmul^0,w,c
 12584  001976  6ED9               	movwf	fsr2l,c
 12585  001978  0E01               	movlw	high (_horarios+9)
 12586  00197A  2002               	addwfc	(?___wmul+1)^0,w,c
 12587  00197C  6EDA               	movwf	fsr2h,c
 12588  00197E  0E00               	movlw	0
 12589  001980  6EDF               	movwf	indf2,c
 12590                           
 12591                           ;main.c: 168:         horarios[i].regado = 0;
 12592  001982  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 12593  001986  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 12594  00198A  0E00               	movlw	0
 12595  00198C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12596  00198E  0E0C               	movlw	12
 12597  001990  6E03               	movwf	___wmul@multiplicand^0,c
 12598  001992  EC2D  F019         	call	___wmul	;wreg free
 12599  001996  0E3C               	movlw	low (_horarios+10)
 12600  001998  2401               	addwf	?___wmul^0,w,c
 12601  00199A  6ED9               	movwf	fsr2l,c
 12602  00199C  0E01               	movlw	high (_horarios+10)
 12603  00199E  2002               	addwfc	(?___wmul+1)^0,w,c
 12604  0019A0  6EDA               	movwf	fsr2h,c
 12605  0019A2  0E00               	movlw	0
 12606  0019A4  6EDF               	movwf	indf2,c
 12607                           
 12608                           ;main.c: 169:         horarios[i].tiempoRegar = 15;
 12609  0019A6  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 12610  0019AA  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 12611  0019AE  0E00               	movlw	0
 12612  0019B0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12613  0019B2  0E0C               	movlw	12
 12614  0019B4  6E03               	movwf	___wmul@multiplicand^0,c
 12615  0019B6  EC2D  F019         	call	___wmul	;wreg free
 12616  0019BA  0E3D               	movlw	low (_horarios+11)
 12617  0019BC  2401               	addwf	?___wmul^0,w,c
 12618  0019BE  6ED9               	movwf	fsr2l,c
 12619  0019C0  0E01               	movlw	high (_horarios+11)
 12620  0019C2  2002               	addwfc	(?___wmul+1)^0,w,c
 12621  0019C4  6EDA               	movwf	fsr2h,c
 12622  0019C6  0E0F               	movlw	15
 12623  0019C8  6EDF               	movwf	indf2,c
 12624  0019CA                     
 12625                           ;main.c: 170:     }
 12626  0019CA  4A0D               	infsnz	inicializarObjetos@i^0,f,c
 12627  0019CC  2A0E               	incf	(inicializarObjetos@i+1)^0,f,c
 12628  0019CE  BE0E               	btfsc	(inicializarObjetos@i+1)^0,7,c
 12629  0019D0  EFF3  F00C         	goto	u3661
 12630  0019D4  500E               	movf	(inicializarObjetos@i+1)^0,w,c
 12631  0019D6  E109               	bnz	u3660
 12632  0019D8  0E18               	movlw	24
 12633  0019DA  5C0D               	subwf	inicializarObjetos@i^0,w,c
 12634  0019DC  A0D8               	btfss	status,0,c
 12635  0019DE  EFF3  F00C         	goto	u3661
 12636  0019E2  EFF5  F00C         	goto	u3660
 12637  0019E6                     u3661:
 12638  0019E6  EF9D  F00C         	goto	l4750
 12639  0019EA                     u3660:
 12640  0019EA                     
 12641                           ;main.c: 172:     for (int i = 0; i < 24; i++) {
 12642  0019EA  0E00               	movlw	0
 12643  0019EC  6E0C               	movwf	(inicializarObjetos@i_809+1)^0,c
 12644  0019EE  0E00               	movlw	0
 12645  0019F0  6E0B               	movwf	inicializarObjetos@i_809^0,c
 12646  0019F2                     l4762:
 12647                           
 12648                           ;main.c: 174:         for (int j = 0; j < 7; j++)
 12649  0019F2  0E00               	movlw	0
 12650  0019F4  6E0A               	movwf	(inicializarObjetos@j+1)^0,c
 12651  0019F6  0E00               	movlw	0
 12652  0019F8  6E09               	movwf	inicializarObjetos@j^0,c
 12653  0019FA                     l4768:
 12654                           
 12655                           ;main.c: 175:             horarios[i].dias[j] = 0;
 12656  0019FA  C00B  F001         	movff	inicializarObjetos@i_809,___wmul@multiplier
 12657  0019FE  C00C  F002         	movff	inicializarObjetos@i_809+1,___wmul@multiplier+1
 12658  001A02  0E00               	movlw	0
 12659  001A04  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12660  001A06  0E0C               	movlw	12
 12661  001A08  6E03               	movwf	___wmul@multiplicand^0,c
 12662  001A0A  EC2D  F019         	call	___wmul	;wreg free
 12663  001A0E  0E32               	movlw	low _horarios
 12664  001A10  6E07               	movwf	??_inicializarObjetos^0,c
 12665  001A12  0E01               	movlw	high _horarios
 12666  001A14  6E08               	movwf	(??_inicializarObjetos+1)^0,c
 12667  001A16  0E01               	movlw	1
 12668  001A18  2607               	addwf	??_inicializarObjetos^0,f,c
 12669  001A1A  0E00               	movlw	0
 12670  001A1C  2208               	addwfc	(??_inicializarObjetos+1)^0,f,c
 12671  001A1E  5001               	movf	?___wmul^0,w,c
 12672  001A20  2607               	addwf	??_inicializarObjetos^0,f,c
 12673  001A22  5002               	movf	(?___wmul+1)^0,w,c
 12674  001A24  2208               	addwfc	(??_inicializarObjetos+1)^0,f,c
 12675  001A26  5009               	movf	inicializarObjetos@j^0,w,c
 12676  001A28  2407               	addwf	??_inicializarObjetos^0,w,c
 12677  001A2A  6ED9               	movwf	fsr2l,c
 12678  001A2C  500A               	movf	(inicializarObjetos@j+1)^0,w,c
 12679  001A2E  2008               	addwfc	(??_inicializarObjetos+1)^0,w,c
 12680  001A30  6EDA               	movwf	fsr2h,c
 12681  001A32  0E00               	movlw	0
 12682  001A34  6EDF               	movwf	indf2,c
 12683  001A36  4A09               	infsnz	inicializarObjetos@j^0,f,c
 12684  001A38  2A0A               	incf	(inicializarObjetos@j+1)^0,f,c
 12685  001A3A  BE0A               	btfsc	(inicializarObjetos@j+1)^0,7,c
 12686  001A3C  EF29  F00D         	goto	u3671
 12687  001A40  500A               	movf	(inicializarObjetos@j+1)^0,w,c
 12688  001A42  E109               	bnz	u3670
 12689  001A44  0E07               	movlw	7
 12690  001A46  5C09               	subwf	inicializarObjetos@j^0,w,c
 12691  001A48  A0D8               	btfss	status,0,c
 12692  001A4A  EF29  F00D         	goto	u3671
 12693  001A4E  EF2B  F00D         	goto	u3670
 12694  001A52                     u3671:
 12695  001A52  EFFD  F00C         	goto	l4768
 12696  001A56                     u3670:
 12697  001A56                     
 12698                           ;main.c: 177:         horarios[i].dias[7 - 1] = '\0';
 12699  001A56  C00B  F001         	movff	inicializarObjetos@i_809,___wmul@multiplier
 12700  001A5A  C00C  F002         	movff	inicializarObjetos@i_809+1,___wmul@multiplier+1
 12701  001A5E  0E00               	movlw	0
 12702  001A60  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12703  001A62  0E0C               	movlw	12
 12704  001A64  6E03               	movwf	___wmul@multiplicand^0,c
 12705  001A66  EC2D  F019         	call	___wmul	;wreg free
 12706  001A6A  0E39               	movlw	low (_horarios+7)
 12707  001A6C  2401               	addwf	?___wmul^0,w,c
 12708  001A6E  6ED9               	movwf	fsr2l,c
 12709  001A70  0E01               	movlw	high (_horarios+7)
 12710  001A72  2002               	addwfc	(?___wmul+1)^0,w,c
 12711  001A74  6EDA               	movwf	fsr2h,c
 12712  001A76  0E00               	movlw	0
 12713  001A78  6EDF               	movwf	indf2,c
 12714  001A7A                     
 12715                           ;main.c: 178:     }
 12716  001A7A  4A0B               	infsnz	inicializarObjetos@i_809^0,f,c
 12717  001A7C  2A0C               	incf	(inicializarObjetos@i_809+1)^0,f,c
 12718  001A7E  BE0C               	btfsc	(inicializarObjetos@i_809+1)^0,7,c
 12719  001A80  EF4B  F00D         	goto	u3681
 12720  001A84  500C               	movf	(inicializarObjetos@i_809+1)^0,w,c
 12721  001A86  E109               	bnz	u3680
 12722  001A88  0E18               	movlw	24
 12723  001A8A  5C0B               	subwf	inicializarObjetos@i_809^0,w,c
 12724  001A8C  A0D8               	btfss	status,0,c
 12725  001A8E  EF4B  F00D         	goto	u3681
 12726  001A92  EF4D  F00D         	goto	u3680
 12727  001A96                     u3681:
 12728  001A96  EFF9  F00C         	goto	l4762
 12729  001A9A                     u3680:
 12730  001A9A  0012               	return		;funcret
 12731  001A9C                     __end_of_inicializarObjetos:
 12732                           	opt callstack 0
 12733                           
 12734 ;; *************** function ___wmul *****************
 12735 ;; Defined at:
 12736 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 12737 ;; Parameters:    Size  Location     Type
 12738 ;;  multiplier      2    0[COMRAM] unsigned int 
 12739 ;;  multiplicand    2    2[COMRAM] unsigned int 
 12740 ;; Auto vars:     Size  Location     Type
 12741 ;;  product         2    4[COMRAM] unsigned int 
 12742 ;; Return value:  Size  Location     Type
 12743 ;;                  2    0[COMRAM] unsigned int 
 12744 ;; Registers used:
 12745 ;;		wreg, status,2, status,0, prodl, prodh
 12746 ;; Tracked objects:
 12747 ;;		On entry : 0/0
 12748 ;;		On exit  : 0/0
 12749 ;;		Unchanged: 0/0
 12750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12751 ;;      Params:         4       0       0       0       0       0       0       0       0
 12752 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12753 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12754 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12755 ;;Total ram usage:        6 bytes
 12756 ;; Hardware stack levels used:    1
 12757 ;; Hardware stack levels required when called:    1
 12758 ;; This function calls:
 12759 ;;		Nothing
 12760 ;; This function is called by:
 12761 ;;		_inicializarObjetos
 12762 ;;		_escribeHorariosMemoria
 12763 ;;		_leeHorariosMemoria
 12764 ;;		_dameDatosSistema
 12765 ;;		_atoi
 12766 ;; This function uses a non-reentrant model
 12767 ;;
 12768                           
 12769                           	psect	text67
 12770  00325A                     __ptext67:
 12771                           	opt callstack 0
 12772  00325A                     ___wmul:
 12773                           	opt callstack 23
 12774  00325A  5001               	movf	___wmul@multiplier^0,w,c
 12775  00325C  0203               	mulwf	___wmul@multiplicand^0,c
 12776  00325E  CFF3 F005          	movff	prodl,___wmul@product
 12777  003262  CFF4 F006          	movff	prodh,___wmul@product+1
 12778  003266  5001               	movf	___wmul@multiplier^0,w,c
 12779  003268  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 12780  00326A  50F3               	movf	243,w,c
 12781  00326C  2606               	addwf	(___wmul@product+1)^0,f,c
 12782  00326E  5002               	movf	(___wmul@multiplier+1)^0,w,c
 12783  003270  0203               	mulwf	___wmul@multiplicand^0,c
 12784  003272  50F3               	movf	243,w,c
 12785  003274  2606               	addwf	(___wmul@product+1)^0,f,c
 12786  003276  C005  F001         	movff	___wmul@product,?___wmul
 12787  00327A  C006  F002         	movff	___wmul@product+1,?___wmul+1
 12788  00327E  0012               	return		;funcret
 12789  003280                     __end_of___wmul:
 12790                           	opt callstack 0
 12791                           
 12792 ;; *************** function _i2c_iniciar *****************
 12793 ;; Defined at:
 12794 ;;		line 4 in file "./I2C.h"
 12795 ;; Parameters:    Size  Location     Type
 12796 ;;		None
 12797 ;; Auto vars:     Size  Location     Type
 12798 ;;		None
 12799 ;; Return value:  Size  Location     Type
 12800 ;;                  1    wreg      void 
 12801 ;; Registers used:
 12802 ;;		wreg, status,2
 12803 ;; Tracked objects:
 12804 ;;		On entry : 0/0
 12805 ;;		On exit  : 0/0
 12806 ;;		Unchanged: 0/0
 12807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12808 ;;      Params:         0       0       0       0       0       0       0       0       0
 12809 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12810 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12811 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12812 ;;Total ram usage:        0 bytes
 12813 ;; Hardware stack levels used:    1
 12814 ;; Hardware stack levels required when called:    1
 12815 ;; This function calls:
 12816 ;;		Nothing
 12817 ;; This function is called by:
 12818 ;;		_main
 12819 ;; This function uses a non-reentrant model
 12820 ;;
 12821                           
 12822                           	psect	text68
 12823  00330E                     __ptext68:
 12824                           	opt callstack 0
 12825  00330E                     _i2c_iniciar:
 12826                           	opt callstack 29
 12827  00330E                     
 12828                           ;./I2C.h: 5:     TRISBbits.RB0 = 1;
 12829  00330E  8093               	bsf	147,0,c	;volatile
 12830                           
 12831                           ;./I2C.h: 6:     TRISBbits.RB1 = 1;
 12832  003310  8293               	bsf	147,1,c	;volatile
 12833  003312                     
 12834                           ;./I2C.h: 7:     SSPSTAT = 0b10000000;
 12835  003312  0E80               	movlw	128
 12836  003314  6EC7               	movwf	199,c	;volatile
 12837                           
 12838                           ;./I2C.h: 8:     SSPCON1 = 0b00101000;
 12839  003316  0E28               	movlw	40
 12840  003318  6EC6               	movwf	198,c	;volatile
 12841                           
 12842                           ;./I2C.h: 9:     SSPCON2 = 0b00000000;
 12843  00331A  0E00               	movlw	0
 12844  00331C  6EC5               	movwf	197,c	;volatile
 12845                           
 12846                           ;./I2C.h: 10:     SSPADD = 9;
 12847  00331E  0E09               	movlw	9
 12848  003320  6EC8               	movwf	200,c	;volatile
 12849  003322  0012               	return		;funcret
 12850  003324                     __end_of_i2c_iniciar:
 12851                           	opt callstack 0
 12852                           
 12853 ;; *************** function _configurarAdc *****************
 12854 ;; Defined at:
 12855 ;;		line 144 in file "main.c"
 12856 ;; Parameters:    Size  Location     Type
 12857 ;;		None
 12858 ;; Auto vars:     Size  Location     Type
 12859 ;;		None
 12860 ;; Return value:  Size  Location     Type
 12861 ;;                  1    wreg      void 
 12862 ;; Registers used:
 12863 ;;		wreg, status,2
 12864 ;; Tracked objects:
 12865 ;;		On entry : 0/0
 12866 ;;		On exit  : 0/0
 12867 ;;		Unchanged: 0/0
 12868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12869 ;;      Params:         0       0       0       0       0       0       0       0       0
 12870 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12871 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12872 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12873 ;;Total ram usage:        0 bytes
 12874 ;; Hardware stack levels used:    1
 12875 ;; Hardware stack levels required when called:    1
 12876 ;; This function calls:
 12877 ;;		Nothing
 12878 ;; This function is called by:
 12879 ;;		_main
 12880 ;; This function uses a non-reentrant model
 12881 ;;
 12882                           
 12883                           	psect	text69
 12884  003356                     __ptext69:
 12885                           	opt callstack 0
 12886  003356                     _configurarAdc:
 12887                           	opt callstack 29
 12888  003356                     
 12889                           ;main.c: 145:     ADCON1 = 0b00000110;
 12890  003356  0E06               	movlw	6
 12891  003358  6EC1               	movwf	193,c	;volatile
 12892                           
 12893                           ;main.c: 146:     ADCON2 = 0b10100101;
 12894  00335A  0EA5               	movlw	165
 12895  00335C  6EC0               	movwf	192,c	;volatile
 12896  00335E  0012               	return		;funcret
 12897  003360                     __end_of_configurarAdc:
 12898                           	opt callstack 0
 12899                           
 12900 ;; *************** function _UART_init *****************
 12901 ;; Defined at:
 12902 ;;		line 12 in file "./UART.h"
 12903 ;; Parameters:    Size  Location     Type
 12904 ;;  BAUD            4   26[COMRAM] long 
 12905 ;; Auto vars:     Size  Location     Type
 12906 ;;  frecuenciaCr    4    0        long 
 12907 ;; Return value:  Size  Location     Type
 12908 ;;                  1    wreg      void 
 12909 ;; Registers used:
 12910 ;;		wreg, status,2, status,0, cstack
 12911 ;; Tracked objects:
 12912 ;;		On entry : 0/0
 12913 ;;		On exit  : 0/0
 12914 ;;		Unchanged: 0/0
 12915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12916 ;;      Params:         4       0       0       0       0       0       0       0       0
 12917 ;;      Locals:         8       0       0       0       0       0       0       0       0
 12918 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12919 ;;      Totals:        12       0       0       0       0       0       0       0       0
 12920 ;;Total ram usage:       12 bytes
 12921 ;; Hardware stack levels used:    1
 12922 ;; Hardware stack levels required when called:    2
 12923 ;; This function calls:
 12924 ;;		___aldiv
 12925 ;; This function is called by:
 12926 ;;		_main
 12927 ;; This function uses a non-reentrant model
 12928 ;;
 12929                           
 12930                           	psect	text70
 12931  002A9A                     __ptext70:
 12932                           	opt callstack 0
 12933  002A9A                     _UART_init:
 12934                           	opt callstack 28
 12935  002A9A                     
 12936                           ;./UART.h: 14:     TRISCbits.TRISC6 = 0;
 12937  002A9A  9C94               	bcf	148,6,c	;volatile
 12938  002A9C                     
 12939                           ;./UART.h: 15:     TRISCbits.TRISC7 = 1;
 12940  002A9C  8E94               	bsf	148,7,c	;volatile
 12941  002A9E                     
 12942                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 12943  002A9E  0E10               	movlw	16
 12944  002AA0  6E11               	movwf	___aldiv@divisor^0,c
 12945  002AA2  0E00               	movlw	0
 12946  002AA4  6E12               	movwf	(___aldiv@divisor+1)^0,c
 12947  002AA6  0E00               	movlw	0
 12948  002AA8  6E13               	movwf	(___aldiv@divisor+2)^0,c
 12949  002AAA  0E00               	movlw	0
 12950  002AAC  6E14               	movwf	(___aldiv@divisor+3)^0,c
 12951  002AAE  0E00               	movlw	0
 12952  002AB0  6E0D               	movwf	___aldiv@dividend^0,c
 12953  002AB2  0E09               	movlw	9
 12954  002AB4  6E0E               	movwf	(___aldiv@dividend+1)^0,c
 12955  002AB6  0E3D               	movlw	61
 12956  002AB8  6E0F               	movwf	(___aldiv@dividend+2)^0,c
 12957  002ABA  0E00               	movlw	0
 12958  002ABC  6E10               	movwf	(___aldiv@dividend+3)^0,c
 12959  002ABE  EC46  F00F         	call	___aldiv	;wreg free
 12960  002AC2  C00D  F023         	movff	?___aldiv,_UART_init$1924
 12961  002AC6  C00E  F024         	movff	?___aldiv+1,_UART_init$1924+1
 12962  002ACA  C00F  F025         	movff	?___aldiv+2,_UART_init$1924+2
 12963  002ACE  C010  F026         	movff	?___aldiv+3,_UART_init$1924+3
 12964  002AD2                     
 12965                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 12966  002AD2  C023  F00D         	movff	_UART_init$1924,___aldiv@dividend
 12967  002AD6  C024  F00E         	movff	_UART_init$1924+1,___aldiv@dividend+1
 12968  002ADA  C025  F00F         	movff	_UART_init$1924+2,___aldiv@dividend+2
 12969  002ADE  C026  F010         	movff	_UART_init$1924+3,___aldiv@dividend+3
 12970  002AE2  C01B  F011         	movff	UART_init@BAUD,___aldiv@divisor
 12971  002AE6  C01C  F012         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 12972  002AEA  C01D  F013         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 12973  002AEE  C01E  F014         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 12974  002AF2  EC46  F00F         	call	___aldiv	;wreg free
 12975  002AF6  040D               	decf	?___aldiv^0,w,c
 12976  002AF8  6EAF               	movwf	175,c	;volatile
 12977  002AFA                     
 12978                           ;./UART.h: 21:     TXSTAbits.BRGH = 1;
 12979  002AFA  84AC               	bsf	172,2,c	;volatile
 12980  002AFC                     
 12981                           ;./UART.h: 22:     TXSTAbits.SYNC = 0;
 12982  002AFC  98AC               	bcf	172,4,c	;volatile
 12983  002AFE                     
 12984                           ;./UART.h: 23:     RCSTAbits.SPEN = 1;
 12985  002AFE  8EAB               	bsf	171,7,c	;volatile
 12986  002B00                     
 12987                           ;./UART.h: 26:     TXSTAbits.TX9 = 0;
 12988  002B00  9CAC               	bcf	172,6,c	;volatile
 12989  002B02                     
 12990                           ;./UART.h: 27:     TXSTAbits.TXEN = 1;
 12991  002B02  8AAC               	bsf	172,5,c	;volatile
 12992  002B04                     
 12993                           ;./UART.h: 30:     RCSTAbits.RC9 = 0;
 12994  002B04  9CAB               	bcf	171,6,c	;volatile
 12995  002B06                     
 12996                           ;./UART.h: 31:     RCSTAbits.CREN = 1;
 12997  002B06  88AB               	bsf	171,4,c	;volatile
 12998  002B08  0012               	return		;funcret
 12999  002B0A                     __end_of_UART_init:
 13000                           	opt callstack 0
 13001                           
 13002 ;; *************** function ___aldiv *****************
 13003 ;; Defined at:
 13004 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 13005 ;; Parameters:    Size  Location     Type
 13006 ;;  dividend        4   12[COMRAM] long 
 13007 ;;  divisor         4   16[COMRAM] long 
 13008 ;; Auto vars:     Size  Location     Type
 13009 ;;  quotient        4   22[COMRAM] long 
 13010 ;;  sign            1   21[COMRAM] unsigned char 
 13011 ;;  counter         1   20[COMRAM] unsigned char 
 13012 ;; Return value:  Size  Location     Type
 13013 ;;                  4   12[COMRAM] long 
 13014 ;; Registers used:
 13015 ;;		wreg, status,2, status,0
 13016 ;; Tracked objects:
 13017 ;;		On entry : 0/0
 13018 ;;		On exit  : 0/0
 13019 ;;		Unchanged: 0/0
 13020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13021 ;;      Params:         8       0       0       0       0       0       0       0       0
 13022 ;;      Locals:         6       0       0       0       0       0       0       0       0
 13023 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13024 ;;      Totals:        14       0       0       0       0       0       0       0       0
 13025 ;;Total ram usage:       14 bytes
 13026 ;; Hardware stack levels used:    1
 13027 ;; Hardware stack levels required when called:    1
 13028 ;; This function calls:
 13029 ;;		Nothing
 13030 ;; This function is called by:
 13031 ;;		_UART_init
 13032 ;;		_map
 13033 ;; This function uses a non-reentrant model
 13034 ;;
 13035                           
 13036                           	psect	text71
 13037  001E8C                     __ptext71:
 13038                           	opt callstack 0
 13039  001E8C                     ___aldiv:
 13040                           	opt callstack 26
 13041  001E8C  0E00               	movlw	0
 13042  001E8E  6E16               	movwf	___aldiv@sign^0,c
 13043  001E90  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
 13044  001E92  EF4F  F00F         	goto	u2900
 13045  001E96  EF4D  F00F         	goto	u2901
 13046  001E9A                     u2901:
 13047  001E9A  EF59  F00F         	goto	l3850
 13048  001E9E                     u2900:
 13049  001E9E  1E14               	comf	(___aldiv@divisor+3)^0,f,c
 13050  001EA0  1E13               	comf	(___aldiv@divisor+2)^0,f,c
 13051  001EA2  1E12               	comf	(___aldiv@divisor+1)^0,f,c
 13052  001EA4  6C11               	negf	___aldiv@divisor^0,c
 13053  001EA6  0E00               	movlw	0
 13054  001EA8  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
 13055  001EAA  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
 13056  001EAC  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
 13057  001EAE  0E01               	movlw	1
 13058  001EB0  6E16               	movwf	___aldiv@sign^0,c
 13059  001EB2                     l3850:
 13060  001EB2  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
 13061  001EB4  EF60  F00F         	goto	u2910
 13062  001EB8  EF5E  F00F         	goto	u2911
 13063  001EBC                     u2911:
 13064  001EBC  EF6A  F00F         	goto	l3856
 13065  001EC0                     u2910:
 13066  001EC0  1E10               	comf	(___aldiv@dividend+3)^0,f,c
 13067  001EC2  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
 13068  001EC4  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
 13069  001EC6  6C0D               	negf	___aldiv@dividend^0,c
 13070  001EC8  0E00               	movlw	0
 13071  001ECA  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
 13072  001ECC  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
 13073  001ECE  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
 13074  001ED0  0E01               	movlw	1
 13075  001ED2  1A16               	xorwf	___aldiv@sign^0,f,c
 13076  001ED4                     l3856:
 13077  001ED4  0E00               	movlw	0
 13078  001ED6  6E17               	movwf	___aldiv@quotient^0,c
 13079  001ED8  0E00               	movlw	0
 13080  001EDA  6E18               	movwf	(___aldiv@quotient+1)^0,c
 13081  001EDC  0E00               	movlw	0
 13082  001EDE  6E19               	movwf	(___aldiv@quotient+2)^0,c
 13083  001EE0  0E00               	movlw	0
 13084  001EE2  6E1A               	movwf	(___aldiv@quotient+3)^0,c
 13085  001EE4  5011               	movf	___aldiv@divisor^0,w,c
 13086  001EE6  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
 13087  001EE8  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
 13088  001EEA  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
 13089  001EEC  B4D8               	btfsc	status,2,c
 13090  001EEE  EF7B  F00F         	goto	u2921
 13091  001EF2  EF7D  F00F         	goto	u2920
 13092  001EF6                     u2921:
 13093  001EF6  EFB3  F00F         	goto	l3878
 13094  001EFA                     u2920:
 13095  001EFA  0E01               	movlw	1
 13096  001EFC  6E15               	movwf	___aldiv@counter^0,c
 13097  001EFE  EF87  F00F         	goto	l3864
 13098  001F02                     l3862:
 13099  001F02  90D8               	bcf	status,0,c
 13100  001F04  3611               	rlcf	___aldiv@divisor^0,f,c
 13101  001F06  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
 13102  001F08  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
 13103  001F0A  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
 13104  001F0C  2A15               	incf	___aldiv@counter^0,f,c
 13105  001F0E                     l3864:
 13106  001F0E  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
 13107  001F10  EF8C  F00F         	goto	u2931
 13108  001F14  EF8E  F00F         	goto	u2930
 13109  001F18                     u2931:
 13110  001F18  EF81  F00F         	goto	l3862
 13111  001F1C                     u2930:
 13112  001F1C                     l3866:
 13113  001F1C  90D8               	bcf	status,0,c
 13114  001F1E  3617               	rlcf	___aldiv@quotient^0,f,c
 13115  001F20  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
 13116  001F22  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
 13117  001F24  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
 13118  001F26  5011               	movf	___aldiv@divisor^0,w,c
 13119  001F28  5C0D               	subwf	___aldiv@dividend^0,w,c
 13120  001F2A  5012               	movf	(___aldiv@divisor+1)^0,w,c
 13121  001F2C  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
 13122  001F2E  5013               	movf	(___aldiv@divisor+2)^0,w,c
 13123  001F30  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
 13124  001F32  5014               	movf	(___aldiv@divisor+3)^0,w,c
 13125  001F34  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
 13126  001F36  A0D8               	btfss	status,0,c
 13127  001F38  EFA0  F00F         	goto	u2941
 13128  001F3C  EFA2  F00F         	goto	u2940
 13129  001F40                     u2941:
 13130  001F40  EFAB  F00F         	goto	l3874
 13131  001F44                     u2940:
 13132  001F44  5011               	movf	___aldiv@divisor^0,w,c
 13133  001F46  5E0D               	subwf	___aldiv@dividend^0,f,c
 13134  001F48  5012               	movf	(___aldiv@divisor+1)^0,w,c
 13135  001F4A  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
 13136  001F4C  5013               	movf	(___aldiv@divisor+2)^0,w,c
 13137  001F4E  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
 13138  001F50  5014               	movf	(___aldiv@divisor+3)^0,w,c
 13139  001F52  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
 13140  001F54  8017               	bsf	___aldiv@quotient^0,0,c
 13141  001F56                     l3874:
 13142  001F56  90D8               	bcf	status,0,c
 13143  001F58  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
 13144  001F5A  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
 13145  001F5C  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
 13146  001F5E  3211               	rrcf	___aldiv@divisor^0,f,c
 13147  001F60  2E15               	decfsz	___aldiv@counter^0,f,c
 13148  001F62  EF8E  F00F         	goto	l3866
 13149  001F66                     l3878:
 13150  001F66  5016               	movf	___aldiv@sign^0,w,c
 13151  001F68  B4D8               	btfsc	status,2,c
 13152  001F6A  EFB9  F00F         	goto	u2951
 13153  001F6E  EFBB  F00F         	goto	u2950
 13154  001F72                     u2951:
 13155  001F72  EFC3  F00F         	goto	l3882
 13156  001F76                     u2950:
 13157  001F76  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
 13158  001F78  1E19               	comf	(___aldiv@quotient+2)^0,f,c
 13159  001F7A  1E18               	comf	(___aldiv@quotient+1)^0,f,c
 13160  001F7C  6C17               	negf	___aldiv@quotient^0,c
 13161  001F7E  0E00               	movlw	0
 13162  001F80  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
 13163  001F82  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
 13164  001F84  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
 13165  001F86                     l3882:
 13166  001F86  C017  F00D         	movff	___aldiv@quotient,?___aldiv
 13167  001F8A  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
 13168  001F8E  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
 13169  001F92  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
 13170  001F96  0012               	return		;funcret
 13171  001F98                     __end_of___aldiv:
 13172                           	opt callstack 0
 13173                           
 13174 ;; *************** function _desbordamiento *****************
 13175 ;; Defined at:
 13176 ;;		line 106 in file "main.c"
 13177 ;; Parameters:    Size  Location     Type
 13178 ;;		None
 13179 ;; Auto vars:     Size  Location     Type
 13180 ;;		None
 13181 ;; Return value:  Size  Location     Type
 13182 ;;                  1    wreg      void 
 13183 ;; Registers used:
 13184 ;;		wreg, status,2, status,0
 13185 ;; Tracked objects:
 13186 ;;		On entry : 0/0
 13187 ;;		On exit  : 0/0
 13188 ;;		Unchanged: 0/0
 13189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13190 ;;      Params:         0       0       0       0       0       0       0       0       0
 13191 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13192 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13193 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13194 ;;Total ram usage:        0 bytes
 13195 ;; Hardware stack levels used:    1
 13196 ;; This function calls:
 13197 ;;		Nothing
 13198 ;; This function is called by:
 13199 ;;		Interrupt level 2
 13200 ;; This function uses a non-reentrant model
 13201 ;;
 13202                           
 13203                           	psect	intcode
 13204  000008                     __pintcode:
 13205                           	opt callstack 0
 13206  000008                     _desbordamiento:
 13207                           	opt callstack 19
 13208                           
 13209                           ;incstack = 0
 13210  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13211  00000A  ED1F  F016         	call	int_func,f	;refresh shadow registers
 13212                           
 13213                           	psect	intcode_body
 13214  002C3E                     __pintcode_body:
 13215                           	opt callstack 19
 13216  002C3E                     int_func:
 13217                           	opt callstack 19
 13218  002C3E  0006               	pop		; remove dummy address from shadow register refresh
 13219  002C40                     
 13220                           ;main.c: 108:     if (INTCONbits.TMR0IF) {
 13221  002C40  A4F2               	btfss	242,2,c	;volatile
 13222  002C42  EF25  F016         	goto	i2u381_41
 13223  002C46  EF27  F016         	goto	i2u381_40
 13224  002C4A                     i2u381_41:
 13225  002C4A  EF42  F016         	goto	i2l4886
 13226  002C4E                     i2u381_40:
 13227  002C4E                     
 13228                           ;main.c: 110:         if (esperandoDatos) {
 13229  002C4E  0100               	movlb	0	; () banked
 13230  002C50  5189               	movf	_esperandoDatos& (0+255),w,b
 13231  002C52  B4D8               	btfsc	status,2,c
 13232  002C54  EF2E  F016         	goto	i2u382_41
 13233  002C58  EF30  F016         	goto	i2u382_40
 13234  002C5C                     i2u382_41:
 13235  002C5C  EF3B  F016         	goto	i2l4882
 13236  002C60                     i2u382_40:
 13237  002C60                     
 13238                           ; BSR set to: 0
 13239                           ;main.c: 112:             tiempoInactividadTrans++;
 13240  002C60  2B8C               	incf	_tiempoInactividadTrans& (0+255),f,b
 13241  002C62                     
 13242                           ; BSR set to: 0
 13243                           ;main.c: 114:             if (tiempoInactividadTrans == 1)
 13244  002C62  058C               	decf	_tiempoInactividadTrans& (0+255),w,b
 13245  002C64  A4D8               	btfss	status,2,c
 13246  002C66  EF37  F016         	goto	i2u383_41
 13247  002C6A  EF39  F016         	goto	i2u383_40
 13248  002C6E                     i2u383_41:
 13249  002C6E  EF3B  F016         	goto	i2l4882
 13250  002C72                     i2u383_40:
 13251  002C72                     
 13252                           ; BSR set to: 0
 13253                           ;main.c: 115:                 esperaDatoConcluida = 1;
 13254  002C72  0E01               	movlw	1
 13255  002C74  6F8A               	movwf	_esperaDatoConcluida& (0+255),b
 13256  002C76                     i2l4882:
 13257                           
 13258                           ; BSR set to: 0
 13259                           ;main.c: 120:         INTCONbits.TMR0IF = 0;
 13260  002C76  94F2               	bcf	242,2,c	;volatile
 13261  002C78                     
 13262                           ; BSR set to: 0
 13263                           ;main.c: 121:         TMR0 = VALOR_TIMER0;
 13264  002C78  C0FB  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
 13265  002C7C  C0FC  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
 13266                           
 13267                           ;main.c: 122:         overflowTimer = 1;
 13268  002C80  0E01               	movlw	1
 13269  002C82  6F82               	movwf	_overflowTimer& (0+255),b
 13270  002C84                     i2l4886:
 13271                           
 13272                           ;main.c: 126:     if (PIR1bits.RCIF) {
 13273  002C84  AA9E               	btfss	158,5,c	;volatile
 13274  002C86  EF47  F016         	goto	i2u384_41
 13275  002C8A  EF49  F016         	goto	i2u384_40
 13276  002C8E                     i2u384_41:
 13277  002C8E  EF4E  F016         	goto	i2l217
 13278  002C92                     i2u384_40:
 13279  002C92                     
 13280                           ;main.c: 128:         byteUart = RCREG;
 13281  002C92  CFAE F08B          	movff	4014,_byteUart	;volatile
 13282  002C96                     
 13283                           ;main.c: 129:         datoRecibido = 1;
 13284  002C96  0E01               	movlw	1
 13285  002C98  0100               	movlb	0	; () banked
 13286  002C9A  6F83               	movwf	_datoRecibido& (0+255),b
 13287  002C9C                     i2l217:
 13288  002C9C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13289  002C9E  0011               	retfie		f
 13290  002CA0                     __end_of_desbordamiento:
 13291                           	opt callstack 0
 13292                           
 13293                           	psect	rparam
 13294  0000                     
 13295                           	psect	temp
 13296  00005F                     btemp:
 13297                           	opt callstack 0
 13298  00005F                     	ds	1
 13299  0000                     int$flags	set	btemp
 13300  0000                     wtemp8	set	btemp+1
 13301  0000                     ttemp5	set	btemp+1
 13302  0000                     ttemp6	set	btemp+4
 13303  0000                     ttemp7	set	btemp+8
 13304                           tosu	equ	0xFFF
 13305                           tosh	equ	0xFFE
 13306                           tosl	equ	0xFFD
 13307                           stkptr	equ	0xFFC
 13308                           pclatu	equ	0xFFB
 13309                           pclath	equ	0xFFA
 13310                           pcl	equ	0xFF9
 13311                           tblptru	equ	0xFF8
 13312                           tblptrh	equ	0xFF7
 13313                           tblptrl	equ	0xFF6
 13314                           tablat	equ	0xFF5
 13315                           prodh	equ	0xFF4
 13316                           prodl	equ	0xFF3
 13317                           indf0	equ	0xFEF
 13318                           postinc0	equ	0xFEE
 13319                           postdec0	equ	0xFED
 13320                           preinc0	equ	0xFEC
 13321                           plusw0	equ	0xFEB
 13322                           fsr0h	equ	0xFEA
 13323                           fsr0l	equ	0xFE9
 13324                           wreg	equ	0xFE8
 13325                           indf1	equ	0xFE7
 13326                           postinc1	equ	0xFE6
 13327                           postdec1	equ	0xFE5
 13328                           preinc1	equ	0xFE4
 13329                           plusw1	equ	0xFE3
 13330                           fsr1h	equ	0xFE2
 13331                           fsr1l	equ	0xFE1
 13332                           bsr	equ	0xFE0
 13333                           indf2	equ	0xFDF
 13334                           postinc2	equ	0xFDE
 13335                           postdec2	equ	0xFDD
 13336                           preinc2	equ	0xFDC
 13337                           plusw2	equ	0xFDB
 13338                           fsr2h	equ	0xFDA
 13339                           fsr2l	equ	0xFD9
 13340                           status	equ	0xFD8


Data Sizes:
    Strings     1827
    Constant    0
    Data        11
    BSS         415
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     71     159
    BANK1           256      0      50
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    dameDatosSistema$1928	PTR unsigned char [8] size(2) Largest target is 288
		 -> horarios(BIGRAM[288]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), horarios(BIGRAM[288]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), horarios(BIGRAM[288]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_55(CODE[45]), STR_54(CODE[29]), STR_53(CODE[32]), STR_52(CODE[45]), 
		 -> STR_51(CODE[29]), STR_50(CODE[32]), STR_48(CODE[24]), STR_47(CODE[25]), 
		 -> STR_46(CODE[24]), STR_45(CODE[27]), STR_44(CODE[24]), STR_43(CODE[23]), 
		 -> STR_42(CODE[25]), STR_41(CODE[24]), STR_22(CODE[51]), STR_14(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> dameDatosSistema@bufferHorario(BANK0[30]), buffer(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> dameDatosSistema@bufferHorario(BANK0[30]), buffer(BANK1[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1595_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> dameDatosSistema@bufferHorario(BANK0[30]), buffer(BANK1[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> dameDatosSistema@bufferHorario(BANK0[30]), buffer(BANK1[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_55(CODE[45]), STR_54(CODE[29]), STR_53(CODE[32]), STR_52(CODE[45]), 
		 -> STR_51(CODE[29]), STR_50(CODE[32]), STR_48(CODE[24]), STR_47(CODE[25]), 
		 -> STR_46(CODE[24]), STR_45(CODE[27]), STR_44(CODE[24]), STR_43(CODE[23]), 
		 -> STR_42(CODE[25]), STR_41(CODE[24]), STR_22(CODE[51]), STR_14(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_55(CODE[45]), STR_54(CODE[29]), STR_53(CODE[32]), STR_52(CODE[45]), 
		 -> STR_51(CODE[29]), STR_50(CODE[32]), STR_48(CODE[24]), STR_47(CODE[25]), 
		 -> STR_46(CODE[24]), STR_45(CODE[27]), STR_44(CODE[24]), STR_43(CODE[23]), 
		 -> STR_42(CODE[25]), STR_41(CODE[24]), STR_22(CODE[51]), STR_14(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 51
		 -> STR_55(CODE[45]), STR_54(CODE[29]), STR_53(CODE[32]), STR_52(CODE[45]), 
		 -> STR_51(CODE[29]), STR_50(CODE[32]), STR_48(CODE[24]), STR_47(CODE[25]), 
		 -> STR_46(CODE[24]), STR_45(CODE[27]), STR_44(CODE[24]), STR_43(CODE[23]), 
		 -> STR_42(CODE[25]), STR_41(CODE[24]), STR_22(CODE[51]), STR_14(CODE[9]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), horarios(BIGRAM[288]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), horarios(BIGRAM[288]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), horarios(BIGRAM[288]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 72
		 -> STR_63(CODE[58]), STR_62(CODE[57]), STR_61(CODE[57]), STR_60(CODE[20]), 
		 -> STR_59(CODE[18]), STR_58(CODE[11]), STR_57(CODE[9]), STR_56(CODE[17]), 
		 -> STR_49(CODE[25]), dameDatosSistema@bufferHorario(BANK0[30]), STR_40(CODE[26]), STR_39(CODE[38]), 
		 -> STR_38(CODE[36]), STR_37(CODE[28]), STR_36(CODE[13]), STR_35(CODE[42]), 
		 -> STR_34(CODE[3]), STR_33(CODE[14]), STR_32(CODE[36]), STR_31(CODE[26]), 
		 -> STR_30(CODE[23]), STR_29(CODE[34]), STR_28(CODE[32]), STR_27(CODE[49]), 
		 -> STR_26(CODE[37]), STR_25(CODE[27]), STR_24(CODE[37]), STR_23(CODE[32]), 
		 -> STR_21(CODE[38]), STR_20(CODE[37]), STR_19(CODE[72]), STR_18(CODE[51]), 
		 -> STR_17(CODE[23]), STR_16(CODE[26]), STR_15(CODE[26]), buffer(BANK1[50]), 
		 -> STR_13(CODE[37]), STR_12(CODE[59]), STR_11(CODE[59]), STR_10(CODE[51]), 
		 -> STR_9(CODE[25]), STR_8(CODE[37]), STR_7(CODE[31]), STR_6(CODE[43]), 
		 -> STR_5(CODE[16]), STR_4(CODE[33]), STR_3(CODE[34]), STR_2(CODE[36]), 
		 -> STR_1(CODE[65]), 


Critical Paths under _main in COMRAM

    _encenderBombas->_estaSeco
    _estaSeco->_dameTemperaturaHumedad
    _dameHoraActual->_leer_rtc
    _dameDiaActual->_leer_rtc
    _leer_rtc->_i2c_envia_dato
    _leer_rtc->_i2c_recibe_dato
    _sistemaPrincipal->_asignarHorarios
    _sistemaPrincipal->_dameDatosSistema
    _setTiempoRegar->_escribeHorariosMemoria
    _regadoRapido->_getValue
    _mostrarMenu->_UART_printf
    _restablecerDatosSensor->_constructorSensor
    _lecturaAnalogaSensores->_map
    _map->___aldiv
    _dameTemperaturaHumedad->_UART_printf
    _leeHorariosMemoria->___wmul
    _leeHorariosMemoria->_leer_eeprom
    _leer_eeprom->_i2c_envia_dato
    _leer_eeprom->_i2c_recibe_dato
    _i2c_reinicia_com->_i2c_espera
    _i2c_recibe_dato->_i2c_espera
    _fijaHoraRtc->_setRtc
    _fijaDiaRtc->_setRtc
    _setRtc->_getValue
    _escribe_rtc->_i2c_envia_dato
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _getValue->_UART_printf
    _UART_printf->_UART_write
    _escribeHorariosMemoria->_escribe_eeprom
    _escribe_eeprom->___wmul
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera
    _inicializarObjetos->___wmul
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _desbordamiento in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sistemaPrincipal
    _sistemaRegado->_lecturaWifi
    _sistemaPrincipal->_dameDatosSistema
    _mostrarDatosSensoresWIFI->_lecturaWifi
    _lecturaWifi->_sprintf
    _mostrarDatosSensores->_sprintf
    _dameDatosSistema->_sprintf
    _asignarHorarios->_sprintf
    _sprintf->_vfprintf

Critical Paths under _desbordamiento in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _desbordamiento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _desbordamiento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _desbordamiento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _desbordamiento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _desbordamiento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _desbordamiento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _desbordamiento in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  285016
                          _UART_init
                      _configurarAdc
                        _i2c_iniciar
                 _inicializarObjetos
                        _mostrarMenu
             _restablecerDatosSensor
                   _sistemaPrincipal
                      _sistemaRegado
 ---------------------------------------------------------------------------------
 (1) _sistemaRegado                                        0     0      0   45035
                      _dameDiaActual
                     _dameHoraActual
                     _encenderBombas
                          _horaRegar
             _lecturaAnalogaSensores
                        _lecturaWifi
                        _mostrarMenu
 ---------------------------------------------------------------------------------
 (2) _horaRegar                                            6     4      2      24
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _encenderBombas                                       5     5      0    5627
                                             14 COMRAM     5     5      0
                           _estaSeco
 ---------------------------------------------------------------------------------
 (3) _estaSeco                                             3     1      2    5352
                                             11 COMRAM     3     1      2
             _dameTemperaturaHumedad
 ---------------------------------------------------------------------------------
 (2) _dameHoraActual                                       0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (2) _dameDiaActual                                        0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (3) _leer_rtc                                             2     2      0      90
                                              2 COMRAM     2     2      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (3) _convertirDato                                        3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _sistemaPrincipal                                     3     3      0  230598
                                             68 BANK0      3     3      0
                        _UART_printf
                    _asignarHorarios
                   _dameDatosSistema
                         _fijaDiaRtc
                        _fijaHoraRtc
                 _leeHorariosMemoria
               _mostrarDatosSensores
           _mostrarDatosSensoresWIFI
                        _mostrarMenu
                       _regadoRapido
                     _setTiempoRegar
 ---------------------------------------------------------------------------------
 (2) _setTiempoRegar                                       2     2      0   14651
                                             18 COMRAM     2     2      0
                        _UART_printf
             _escribeHorariosMemoria
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _regadoRapido                                         4     4      0   10081
                                             14 COMRAM     4     4      0
                        _UART_printf
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _mostrarMenu                                          0     0      0    4399
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensoresWIFI                             3     3      0   64331
                                             92 COMRAM     1     1      0
                                             32 BANK0      2     2      0
                        _UART_printf
                         _UART_write
             _dameTemperaturaHumedad
                        _lecturaWifi
                      _limpiarBuffer
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaWifi                                          4     4      0   32851
                                             28 BANK0      4     4      0
                        _UART_printf
                          _UART_read
                         _UART_write
                           _getValue
                      _limpiarBuffer
             _restablecerDatosSensor
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _restablecerDatosSensor                               2     2      0     387
                                              4 COMRAM     2     2      0
                  _constructorSensor
 ---------------------------------------------------------------------------------
 (4) _constructorSensor                                    4     0      4     297
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensores                                 3     3      0   33252
                                             92 COMRAM     1     1      0
                                             28 BANK0      2     2      0
                        _UART_printf
                         _UART_write
             _dameTemperaturaHumedad
             _lecturaAnalogaSensores
                      _limpiarBuffer
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaAnalogaSensores                               3     3      0    1772
                                             46 COMRAM     3     3      0
                   _dameHumedadSuelo
                                _map
 ---------------------------------------------------------------------------------
 (3) _map                                                 20     0     20    1660
                                             26 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
                   _dameHumedadSuelo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _dameHumedadSuelo                                     5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _dameTemperaturaHumedad                               8     8      0    4698
                                              3 COMRAM     8     8      0
                     _DHT11_ReadData
                        _DHT11_Start
                        _UART_printf
                     _check_response
 ---------------------------------------------------------------------------------
 (5) _check_response                                       1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _leeHorariosMemoria                                   9     9      0    8615
                                              6 COMRAM     9     9      0
                        _UART_printf
                             ___wmul
                        _leer_eeprom
 ---------------------------------------------------------------------------------
 (3) _leer_eeprom                                          4     2      2     492
                                              2 COMRAM     4     2      2
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_recibe_dato                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (2) _fijaHoraRtc                                          0     0      0   11921
                        _UART_printf
                        _escribe_rtc
                             _setRtc
 ---------------------------------------------------------------------------------
 (2) _fijaDiaRtc                                           0     0      0   11475
                        _UART_printf
                             _setRtc
 ---------------------------------------------------------------------------------
 (3) _setRtc                                               4     4      0    7076
                                             14 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                        _escribe_rtc
                           _getValue
 ---------------------------------------------------------------------------------
 (4) _escribe_rtc                                          2     1      1     446
                                              2 COMRAM     2     1      1
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _dameDatosSistema                                    42    42      0   30373
                                             92 COMRAM     2     2      0
                                             28 BANK0     40    40      0
                        _UART_printf
                         _UART_write
                             ___wmul
                      _limpiarBuffer
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _limpiarBuffer                                        2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _asignarHorarios                                      7     7      0   37079
                                             92 COMRAM     2     2      0
                                             28 BANK0      5     5      0
                        _UART_printf
             _escribeHorariosMemoria
                           _getValue
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             22    10     12   22203
                                              6 BANK0     22    10     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   19564
                                             90 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           47    41      6   19174
                                             63 COMRAM    27    21      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5574
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 7     4      3    4145
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3925
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    4376
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _getValue                                            11     9      2    5591
                                              3 COMRAM    11     9      2
                        _UART_printf
                          _UART_read
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2    4399
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _escribeHorariosMemoria                               8     8      0    4549
                                             10 COMRAM     8     8      0
                             ___wmul
                     _escribe_eeprom
 ---------------------------------------------------------------------------------
 (4) _escribe_eeprom                                       4     1      3     848
                                              6 COMRAM     4     1      3
                             ___wmul (ARG)
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializarObjetos                                   8     8      0    3697
                                              6 COMRAM     8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    3383
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     900
                                             26 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     756
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _desbordamiento                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _configurarAdc
   _i2c_iniciar
   _inicializarObjetos
     ___wmul
   _mostrarMenu
     _UART_printf
       _UART_write
   _restablecerDatosSensor
     _constructorSensor
   _sistemaPrincipal
     _UART_printf
       _UART_write
     _asignarHorarios
       _UART_printf
         _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _dameDatosSistema
       _UART_printf
         _UART_write
       _UART_write
       ___wmul
       _limpiarBuffer
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _fijaDiaRtc
       _UART_printf
         _UART_write
       _setRtc
         ___awdiv
         ___awmod
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
     _fijaHoraRtc
       _UART_printf
         _UART_write
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
       _setRtc
         ___awdiv
         ___awmod
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
     _leeHorariosMemoria
       _UART_printf
         _UART_write
       ___wmul
       _leer_eeprom
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _mostrarDatosSensores
       _UART_printf
         _UART_write
       _UART_write
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaAnalogaSensores
         _dameHumedadSuelo
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
           _dameHumedadSuelo (ARG)
       _limpiarBuffer
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _mostrarDatosSensoresWIFI
       _UART_printf
         _UART_write
       _UART_write
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaWifi
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
         _limpiarBuffer
         _restablecerDatosSensor
           _constructorSensor
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _stoa
                 _fputc
                   _putch
                 _strlen
       _limpiarBuffer
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _mostrarMenu
       _UART_printf
         _UART_write
     _regadoRapido
       _UART_printf
         _UART_write
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
     _setTiempoRegar
       _UART_printf
         _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
   _sistemaRegado
     _dameDiaActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _dameHoraActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _encenderBombas
       _estaSeco
         _dameTemperaturaHumedad
           _DHT11_ReadData
           _DHT11_Start
           _UART_printf
             _UART_write
           _check_response
     _horaRegar
     _lecturaAnalogaSensores
       _dameHumedadSuelo
       _map
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _dameHumedadSuelo (ARG)
     _lecturaWifi
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
       _limpiarBuffer
       _restablecerDatosSensor
         _constructorSensor
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _mostrarMenu
       _UART_printf
         _UART_write

 _desbordamiento (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     120      21       14.1%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      32       7       19.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     47      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12F      20        0.0%
DATA                 0      0     24F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jun 23 18:16:51 2020

                 __size_of_escribe_eeprom 0030                                        l83 3322  
                                      l92 336E                                        l95 3366  
                                      l89 3258                                        l98 3376  
                            ___awdiv@sign 0006                            ?_configurarAdc 0001  
                     ___wmul@multiplicand 0003                               __CFG_BORV$3 000000  
          __end_of_dameTemperaturaHumedad 28A6                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                   regadoRapido@tiempoRegar 0011  
                                     l101 333E                                       l110 3232  
                                     l104 32F6                                       l113 329E  
                                     l107 32DC                                       l220 2A28  
                                     l141 330C                                       l126 2B08  
                                     l134 2E5E                                       l135 2E60  
                                     l223 3354                                       l231 3146  
                                     l160 2D58                                       l152 2D06  
                                     l129 2E28                                       l313 2BDA  
                                     l226 335E                                       l138 32FE  
                                     l147 2CFC                                       l163 32BE  
                                     l251 3332                                       l332 277C  
                                     l308 0DCE                                       l236 29AE  
                                     l245 1A9A                                       l157 2D36  
                                     l421 2258                                       l262 31DC  
                                     l414 2898                                       l327 11AC  
                                     l255 31AC                                       l415 28A0  
                                     l335 2F76                                       l343 2F52  
                                     l272 1D54                                       l408 0882  
                                     l168 301C                                       l416 28A4  
                                     l352 2088                                       l360 292A  
                                     l248 3208                                       l265 30D8  
                                     l281 17C4                                       l337 2F84  
                                     l530 2482                                       l602 010E  
                                     l338 2F98                                       l443 0E52  
                                     l259 2A98                                       l427 2178  
                                     l532 24BE                                       l453 0EFE  
                                     l357 26DC                                       l463 0FF2  
                                     l527 2440                                       l471 1DD2  
                                     l376 232E                                       l392 1930  
                                     l545 0924                                       l625 0592  
                                     l473 1DD8                                       l481 1E8A  
                                     l650 2B62                                       l474 1DDE  
                                     l539 2E0C                                       l547 092C  
                                     l635 2C34                                       l651 2B72  
                                     l475 1DE4                                       l572 1546  
                                     l636 2C3C                                       l476 1DEA  
                                     l565 0B64                                       l477 1DF0  
                                     l718 1F96                                       l574 154E  
                                     l486 305C                                       l478 1DF6  
                                     l639 327E                                       l583 15F8  
                                     l479 1DFC                                       l584 1642  
                                     l753 14C4                                       l588 164A  
                                     l766 1BFE                                       l870 2582  
                                     l883 2632                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                              __CFG_BOR$OFF 000000  
                                     _abs 305E                                       _pad 23FA  
                                     _map 29B0                              ___awmod@sign 0006  
                                     prod 000FF3                                       wreg 000FE8  
                __end_of_dameDatosSistema 0884                              __CFG_LVP$OFF 000000  
                       ?_i2c_reinicia_com 0001                              ?_escribe_rtc 0003  
                            __CFG_WDT$OFF 000000                                      ?_abs 0013  
                                    l1314 3094                                      l1317 309C  
                                    l1351 3110                                      l4000 0F64  
                                    l1345 1334                                      l4010 0FCE  
                                    l4002 0F68                                      l4020 0FF0  
                                    l4012 0FDE                                      l1348 133C  
                                    l3300 3154                                      l4100 24DE  
                                    l4014 0FEA                                      l4006 0F88  
                                    l1374 23F8                                      l1382 2FDC  
                                    l3302 3158                                      l3310 240A  
                                    l4110 2512                                      l4102 24EC  
                                    l1359 2F04                                      l4008 0FBC  
                                    l1392 3378                                      l3304 3170  
                                    l3320 2460                                      l3312 241E  
                                    l3400 1B00                                      l4040 2E62  
                                    l4120 254C                                      l4112 251A  
                                    l4104 24F4                                      l3322 2464  
                                    l3314 242C                                      l3410 1B76  
                                    l3402 1B1E                                      l3330 305E  
                                    l4042 2E74                                      l4130 2572  
                                    l4122 2554                                      l4114 2522  
                                    l4106 24F8                                      l4210 2A92  
                                    l4202 2A2C                                      l3340 3276  
                                    l4036 31AE                                      l3324 2492  
                                    l3316 2438                                      l3308 23FA  
                                    l3420 1BDE                                      l3412 1B96  
                                    l3404 1B26                                      l3332 3078  
                                    l3500 0B06                                      l4044 2E7C  
                                    l4132 257A                                      l4124 2556  
                                    l4116 2530                                      l4108 2500  
                                    l4140 2596                                      l4212 2A96  
                                    l4204 2A34                                      l4220 30D6  
                                    l4060 2F74                                      l4052 2F56  
                                    l4300 207E                                      l1389 2EB2  
                                    l4038 31CE                                      l4230 1C1C  
                                    l3334 30DA                                      l3430 2EFA  
                                    l1398 317C                                      l3326 24A6  
                                    l3318 244C                                      l3350 1370  
                                    l3414 1BA8                                      l3406 1B3A  
                                    l3502 0B18                                      l4046 2E84  
                                    l4126 255C                                      l4118 2536  
                                    l4150 25CA                                      l4142 259E  
                                    l4206 2A42                                      l4062 2F86  
                                    l4054 2F5E                                      l4302 2082  
                                    l3600 324A                                      l4240 1C58  
                                    l4224 1C00                                      l3432 2EFE  
                                    l3424 2EB4                                      l3280 2354  
                                    l3440 2DD4                                      l3360 13B2  
                                    l3352 1374                                      l3344 133E  
                                    l3408 1B48                                      l3416 1BAE  
                                    l3504 0B24                                      l3520 14FA  
                                    l3512 14C6                                      l4048 2EA0  
                                    l4128 2562                                      l4160 2606  
                                    l4152 25D2                                      l4144 25A2  
                                    l4136 2584                                      l4208 2A54  
                                    l4216 309E                                      l4056 2F60  
                                    l4312 263C                                      l4072 2F0E  
                                    l4304 2086                                      l4400 0BB0  
                                    l4320 292C                                      l3338 325A  
                                    l4250 1CAC                                      l4226 1C08  
                                    l3602 32FA                                      l3426 2EB8  
                                    l3282 235E                                      l3290 2F9A  
                                    l3442 2DE0                                      l3370 140C  
                                    l3362 13D0                                      l3354 1382  
                                    l3346 1342                                      l3418 1BBE  
                                    l3506 0B2C                                      l3450 0884  
                                    l3530 1572                                      l3522 150E  
                                    l3514 14D8                                      l3610 0056  
                                    l4090 3056                                      l4162 260C  
                                    l4154 25DA                                      l4146 25B0  
                                    l4138 2588                                      l4218 30C8  
                                    l4058 2F72                                      l4314 26AE  
                                    l4306 2634                                      l4074 2F34  
                                    l4066 2F06                                      l4402 0BE0  
                                    l4330 29A8                                      l4322 2930  
                                    l4260 1D38                                      l4252 1CB0  
                                    l4236 1C24                                      l4228 1C18  
                                    l3428 2ECC                                      l3284 237C  
                                    l3276 2330                                      l3292 2FA6  
                                    l3444 2DE4                                      l3436 2DB4  
                                    l3372 143A                                      l3364 13D8  
                                    l3380 1474                                      l3356 13A2  
                                    l3348 1350                                      l3508 0B3C  
                                    l3460 08FE                                      l3452 08A4  
                                    l3540 15D2                                      l3532 1586  
                                    l3524 1516                                      l3516 14E0  
                                    l3700 0476                                      l3612 005A  
                                    l3604 0012                                      l4084 3026  
                                    l4092 24C0                                      l4156 25E8  
                                    l4164 2612                                      l4148 25B8  
                                    l4340 318A                                      l4316 26BE  
                                    l4076 2F38                                      l4180 3282  
                                    l4172 320C                                      l4420 0C82  
                                    l4412 0C1C                                      l4324 2952  
                                    l4254 1CCC                                      l4246 1C60  
                                    l4238 1C54                                      l3286 23B2  
                                    l3278 2342                                      l3294 2FB8  
                                    l3446 2DE8                                      l3438 2DC8  
                                    l3382 1484                                      l3374 145A  
                                    l3366 13EC                                      l3358 13A6  
                                    l3390 1AA0                                      l3470 095A  
                                    l3462 0918                                      l3454 08CC  
                                    l3550 1620                                      l3542 15D6  
                                    l3534 158A                                      l3526 1524  
                                    l3518 14F2                                      l3710 0514  
                                    l3702 049A                                      l3630 0094  
                                    l3622 0084                                      l3614 0066  
                                    l3606 0036                                      l4510 1108  
                                    l4502 10CE                                      l4086 3036  
                                    l4078 301E                                      l4094 24C4  
                                    l4166 2622                                      l4158 25FE  
                                    l4342 31A0                                      l4350 1666  
                                    l4318 26C2                                      l4270 1FA4  
                                    l4262 1F98                                      l4182 328A  
                                    l4174 3230                                      l4334 31DE  
                                    l4190 3116                                      l4430 0CBE  
                                    l4414 0C4C                                      l4406 0BE6  
                                    l4326 2972                                      l4256 1CFC  
                                    l4248 1CA8                                      l3560 11CA  
                                    l3296 2FBC                                      l3384 14A4  
                                    l3376 145C                                      l3368 13FA  
                                    l3392 1AAE                                      l3480 09F8  
                                    l3472 0962                                      l3464 0934  
                                    l3456 08EC                                      l3552 1624  
                                    l3544 15DA                                      l3536 15A8  
                                    l3720 0550                                      l3712 0522  
                                    l3704 04D0                                      l3616 006A  
                                    l3640 00FC                                      l3608 0044  
                                    l4520 116C                                      l4504 10D6  
                                    l4512 1134                                      l4088 303A  
                                    l4600 07F8                                      l4096 24D2  
                                    l4168 262A                                      l4360 16AE  
                                    l4352 1678                                      l4344 164C  
                                    l3800 32B4                                      l4272 1FB0  
                                    l4264 1F9A                                      l4184 329C  
                                    l4336 3324                                      l4192 311A  
                                    l4432 0CEE                                      l4424 0C88  
                                    l4408 0C16                                      l4328 29A4  
                                    l4258 1D00                                      l3570 1226  
                                    l3562 11E6                                      l3554 11AE  
                                    l3298 3148                                      l3378 146E  
                                    l3394 1ACE                                      l3490 0AB4  
                                    l3482 09FE                                      l3474 096A  
                                    l3466 0946                                      l3458 08FC  
                                    l3538 15B4                                      l3714 0536  
                                    l3650 0188                                      l3642 011E  
                                    l3634 009C                                      l3626 008C  
                                    l3618 007C                                      l4514 1138  
                                    l4522 117C                                      l5170 0832  
                                    l4098 24DA                                      l4338 317E  
                                    l4370 1700                                      l4362 16B2  
                                    l4346 1654                                      l3802 32BC  
                                    l3810 2FF8                                      l4290 2020  
                                    l4282 1FD6                                      l4274 1FB8  
                                    l4266 1F9A                                      l4178 3282  
                                    l4194 312A                                      l4450 0DA4  
                                    l4426 0CB8                                      l4418 0C52  
                                    l3740 336C                                      l5180 0F38  
                                    l3572 123C                                      l3564 121C  
                                    l3556 11C2                                      l3396 1AD2  
                                    l3388 1A9C                                      l3492 0ACE  
                                    l3476 0970                                      l3484 0A62  
                                    l3468 0954                                      l3548 160C  
                                    l3708 04F0                                      l3660 020A  
                                    l3652 0196                                      l3644 0120  
                                    l3724 055C                                      l4524 118C  
                                    l4516 1154                                      l5172 10F2  
                                    l4508 10DE                                      l4604 081C  
                                    l4460 2B74                                      l3900 32F4  
                                    l4380 1756                                      l4372 1704  
                                    l4348 1662                                      l3812 3000  
                                    l3804 2FDE                                      l4292 203A  
                                    l4284 1FF2                                      l4276 1FCA  
                                    l4268 1F9E                                      l4620 2098  
                                    l4700 1E02                                      l4540 2722  
                                    l4532 26DE                                      l4196 313C  
                                    l4188 3112                                      l4452 0DB4  
                                    l5164 0D40                                      l4436 0CF4  
                                    l4444 0D2A                                      l3742 3370  
                                    l3750 333E                                      l5182 0F9E  
                                    l3590 1318                                      l3582 12B6  
                                    l3574 1244                                      l3566 1220  
                                    l3558 11C6                                      l3398 1AE0  
                                    l3486 0A7C                                      l3494 0ADE  
                                    l3478 09F2                                      l3726 0580  
                                    l3718 0542                                      l3670 027C  
                                    l3654 01B6                                      l3662 021C  
                                    l3646 0144                                      l5174 00CE  
                                    l3638 00A8                                      l3830 2C18  
                                    l4526 11A0                                      l4518 1168  
                                    l4606 0870                                      l4470 2BD0  
                                    l4462 2B8C                                      l4382 178C  
                                    l4374 1708                                      l4358 1680  
                                    l3814 300E                                      l3806 2FE2  
                                    l3910 2812                                      l3822 334C  
                                    l4294 2050                                      l4286 1FFE  
                                    l4630 20EC                                      l4622 20B4  
                                    l4614 208A                                      l4702 1E5C  
                                    l4550 2778                                      l4542 2730  
                                    l4534 26F6                                      l5166 22E2  
                                    l4198 3140                                      l4454 0DBA  
                                    l4438 0D24                                      l4446 0D86  
                                    ?_map 001B                                      ?_pad 0011  
                                    l4720 2A9A                                      l3744 3374  
                                    l3760 2E56                                      l5176 126A  
                                    l3576 124C                                      l3496 0AF0  
                                    l3488 0A9A                                      l3680 032A  
                                    l3672 02B6                                      l3664 0240  
                                    l3656 01C4                                      l3648 017A  
                                    l3824 2BDC                                      l4480 103A  
                                    l4472 0FF4                                      l4608 087C  
                                    l4560 05B2                                      l3904 32C2  
                                    l4464 2BA2                                      l4384 17A8  
                                    l4376 1724                                      l4368 16BA  
                                    l3816 3016                                      l3808 2FEA  
                                    l3920 282E                                      l3912 2816  
                                    l3840 2B42                                      l3832 2B0A  
                                    l4296 2054                                      l4288 200E  
                                    l4640 2146                                      l4632 20FE  
                                    l4624 20C0                                      l4616 208E  
                                    l4552 28A6                                      l4704 1E62  
                                    l5168 1E16                                      l4544 2742  
                                    l4536 2704                                      l4800 22B4  
                                    l4448 0D8A                                      l3850 1EB2  
                                    l3842 1E8C                                      l4730 2AFC  
                                    l4722 2A9C                                      l4714 330E  
                                    l3746 3336                                      l3738 3368  
                                    l3770 2CC8                                      l3762 2E5A  
                                    l3754 2E0E                                      l5178 0E80  
                                    l3930 0DE2                                      l3586 12F4  
                                    l3578 1280                                      l3498 0B00  
                                    l3690 03AE                                      l3674 02D6  
                                    l3666 024A                                      l3682 033C  
                                    l3826 2BE4                                      l4482 104A  
                                    l4474 100C                                      l4562 05BE  
                                    l4554 0594                                      l4466 2BAE  
                                    l4378 1752                                      l4386 17B8  
                                    l3818 301A                                      l3922 2852  
                                    l3914 2816                                      l3834 2B1A  
                                    l3906 29B0                                      l4650 217E  
                                    l4298 206E                                      l4642 2152  
                                    l4626 20DC                                      l4618 2094  
                                    l4706 1E76                                      l4546 274E  
                                    l4538 2716                                      l4810 232C  
                                    l4802 22BC                                      l4394 0B76  
                                    l3860 1EFA                                      l3852 1EC0  
                                    l3844 1E90                                      l4740 2B06  
                                    l4732 2AFE                                      l4724 2A9E  
                                    l4716 3312                                      l3596 3234  
                                    l3748 333A                                      l3772 2CCC  
                                    l3756 2E36                                      l3940 0E14  
                                    l3932 0DF2                                      l3588 1306  
                                    l3692 03D2                                      l3684 0360  
                                    l3676 02E4                                      l3668 0258  
                                    l3828 2BF2                                      l4492 107C  
                                    l4484 105A                                      l4476 101C  
                                    l4580 06EA                                      l4572 05E0  
                                    l4564 05CA                                      l4556 059A  
                                    l4468 2BC4                                      l3780 2D14  
                                    l3924 2888                                      l3836 2B28  
                                    l4660 21CC                                      l4652 2184  
                                    l4644 2158                                      l4628 20E8  
                                    l4708 1E7E                                      l4548 2762  
                                    l4396 0BA6                                      l4388 0B66  
                                    l4820 17DC                                      l3870 1F44  
                                    l3862 1F02                                      l3854 1ED0  
                                    l3846 1E9E                                      l4734 2B00  
                                    l4726 2AD2                                      l4718 2A9A  
                                    l4742 3356                                      l4750 193A  
                                    l3598 3234                                      l3766 2CA0  
                                    l3758 2E46                                      l3950 0E2A  
                                    l3942 0E1C                                      l3934 0E02  
                                    l3926 0DD0                                      l3694 03F6  
                                    l3686 0392                                      l4494 109C  
                                    l4486 1072                                      l4478 102E  
                                    l4590 0744                                      l4574 0610  
                                    l4582 06F6                                      l4566 05D6  
                                    l4558 05A6                                      l3790 2D46  
                                    l3782 2D1A                                      l3774 2CFE  
                                    l3918 281A                                      l3838 2B38  
                                    l4670 21E6                                      l4662 21D8  
                                    l4654 2188                                      l4638 2106  
                                    l4646 2172                                      l4806 22CC  
                                    l4398 0BA8                                      l4830 1818  
                                    l4822 17F0                                      l3880 1F76  
                                    l3872 1F54                                      l3864 1F0E  
                                    l3856 1ED4                                      l3848 1EAE  
                                    l4736 2B02                                      l4728 2AFA  
                                    l4752 19CA                                      l4744 1932  
                                    l3768 2CA4                                      l3952 0E3A  
                                    l3936 0E06                                      l3928 0DDC  
                                    l3696 043E                                      l4496 10A8  
                                    l4592 0768                                      l4584 06FC  
                                    l4576 0694                                      l3792 2D56  
                                    l3784 2D28                                      l4672 2226  
                                    l4664 21DC                                      l4656 21A4  
                                    l4648 217A                                      l4680 1D56  
                                    l4808 2328                                      l4840 1854  
                                    l4832 182C                                      l4824 17F8  
                                    l4816 17C6                                      l4920 2792  
                                    l4912 277E                                      l3882 1F86  
                                    l3874 1F56                                      l3866 1F1C  
                                    l3858 1EE4                                      l4738 2B04  
                                    l4770 1A36                                      l4762 19F2  
                                    l4754 19CE                                      l3970 0EA8  
                                    l3962 0E6A                                      l3954 0E4A  
                                    l3938 0E0E                                      l4498 10B8  
                                    l4594 078C                                      l4586 0718  
                                    l4578 06B6                                      l3890 32DE  
                                    l3786 2D30                                      l4674 2232  
                                    l4658 21B0                                      l4690 1DA0  
                                    l4682 1D62                                      l4850 18A2  
                                    l4842 1864                                      l4834 1830  
                                    l4826 17FA                                      l4818 17D8  
                                    l4930 27B6                                      l4922 27A6  
                                    l4914 2786                                      l3876 1F60  
                                    l3868 1F26                                      l4772 1A3A  
                                    l4756 19EA                                      l3980 0ED6  
                                    l3972 0EC8                                      l3956 0E56  
                                    l3964 0E96                                      l3948 0E24  
                                    l4596 07B0                                      l4588 0720  
                                    l3892 32E2                                      l3788 2D44  
                                    l3796 32A0                                      l4676 2238  
                                    l4692 1DAC                                      l4684 1D74  
                                    l4780 225E                                      l4860 18F2  
                                    l4852 18B4                                      l4844 1878  
                                    l4828 180C                                      l4836 1838  
                                    l4940 27CC                                      l4932 27BE  
                                    l4924 27AA                                      l4916 278A  
                                    l3878 1F66                                      l4774 1A56  
                                    l3990 0F1A                                      l3982 0EE6  
                                    l3966 0E9A                                      l3958 0E62  
                                    l4598 07D4                                      l3894 32E8  
                                    l3886 3360                                      l3798 32A4  
                                    l4678 2252                                      l4694 1DBA  
                                    l4686 1D80                                      l4790 2284  
                                    l4782 2264                                      l4870 192C  
                                    l4862 1906                                      l4854 18CA  
                                    l4846 187C                                      l4838 1840  
                                    l4950 27FE                                      l4942 27DE  
                                    l4934 27C0                                      l4926 27AE  
                                    l4918 278E                                      l4776 1A7A  
                                    l4768 19FA                                      l3984 0EF6  
                                    l3968 0EA4                                      l3896 32F0  
                                    l3888 3364                                      l4696 1DCC  
                                    l4688 1D8E                                      l4792 2294  
                                    l4784 226C                                      l4864 190A  
                                    l4856 18DC                                      l4848 188C  
                                    l4952 2806                                      l4944 27E2  
                                    l4936 27C2                                      l4928 27B2  
                                    l4778 1A7E                                      l3986 0F02  
                                    l3994 0F22                                      l3978 0ED0  
                                    l3898 32F2                                      l4794 229C  
                                    l4786 2274                                      l4858 18E0  
                                    l4866 1912                                      l4946 27E6  
                                    l4938 27C6                                      l3988 0F0E  
                                    l3996 0F56                                      l4796 22A4  
                                    l4788 227C                                      l4868 1916  
                                    l4948 27EC                                      l3998 0F5A  
                                    l4798 22AC                              ?_leer_eeprom 0003  
                                    STR_1 7923                                      STR_2 7C69  
                                    STR_3 7CF7                                      STR_4 7D19  
                                    STR_5 7FB6                                      STR_6 7B0F  
                                    STR_7 7D9A                                      STR_8 7BFA  
                                    STR_9 7E76                                      u2000 240A  
                                    u2001 2406                                      u2010 242C  
                                    u2011 2428                                      u2020 2482  
                                    u2100 13D0                                      u2021 247E  
                                    u2101 13CC                                      u2030 2492  
                                    u2110 13FA                                      u2031 248E  
                                    u2111 13F6                                      u3000 0E3A  
                                    u2200 2ECC                                      u2120 143A  
                                    u2040 3078                                      u3001 0E36  
                                    u2201 2EC8                                      u2121 1436  
                                    u2041 3074                                      u3010 0E4A  
                                    u2050 310A                                      u2210 2EFA  
                                    u2130 1484                                      u3011 0E46  
                                    u2051 3104                                      u2211 2EF6  
                                    u2131 1480                                      u3020 0EC4  
                                    u2060 310C                                      u2220 2DC8  
                                    u2140 1AAE                                      u2300 0A7C  
                                    u3100 3056                                      u3021 0EC0  
                                    u2221 2DC4                                      u2141 1AAA  
                                    u2301 0A78                                      u3101 3052  
                                    u3030 0EE6                                      u2070 1350  
                                    u2150 1AE0                                      u2310 0A9A  
                                    u2230 08B4                                      u3110 24D2  
                                    u3031 0EE2                                      u2071 134C  
                                    u2151 1ADC                                      u2311 0A96  
                                    u2231 08AE                                      u3111 24CE  
                                    u3040 0EF6                                      u2080 1382  
                                    u2160 1B1E                                      u2320 0AB4  
                                    u2240 08B6                                      u2400 1524  
                                    u3120 24EC                                      u3200 25E8  
                                    _LATD 000F8C                                      u3041 0EF2  
                                    u2081 137E                                      u2161 1B1A  
                                    u2321 0AB0                                      u2401 1520  
                                    u3121 24E8                                      u3201 25E4  
                                    u3050 0F84                                      u2170 1B48  
                                    u2330 0ACE                                      u2250 08CC  
                                    u2410 1542                                      u3130 2512  
                                    u3210 25FE                                      u3051 0F80  
                                    u2091 13AC                                      u2171 1B44  
                                    u2331 0ACA                                      u2251 08C8  
                                    u2411 153E                                      u3131 250E  
                                    u3211 25FA                                      u3060 0FCE  
                                    u2500 12EE                                      u2180 1B76  
                                    u2340 0ADE                                      u2260 08FC  
                                    u2420 156E                                      u3140 2530  
                                    u3220 2622                                      u3300 206E  
                                    u3061 0FCA                                      u2501 12E8  
                                    u2181 1B72                                      u2341 0ADA  
                                    u2261 08F8                                      u2421 156A  
                                    u3141 252C                                      u3221 261E  
                                    u3301 206A                                      u3070 0FDE  
                                    u2510 12F0                                      u2190 1BBE  
                                    u2350 0AF0                                      u2270 0918  
                                    u2430 15A8                                      u3150 254C  
                                    u3310 26DC                                      u3230 312A  
                                    u3071 0FDA                                      u2191 1BBA  
                                    u2351 0AEC                                      u2271 0914  
                                    u2431 15A4                                      u3151 2548  
                                    u3311 26D8                                      u3231 3126  
                                    u2520 1306                                      u2360 0B00  
                                    u2280 0946                                      u2440 15F8  
                                    u2600 0144                                      u3160 2572  
                                    u3080 2F84                                      u3240 313C  
                                    u3400 0BE0                                      u3320 2952  
                                    u2521 1302                                      u2361 0AFC  
                                    u2281 0942                                      u2441 15F4  
                                    u2601 0140                                      u3161 256E  
                                    u3081 2F80                                      u3241 3138  
                                    u3401 0BDC                                      u3321 294E  
                                    u2530 1318                                      u2370 0B18  
                                    u2290 0954                                      u2450 1608  
                                    u2610 0188                                      u3170 2596  
                                    u3250 2A54                                      u3090 2F52  
                                    u3410 0C16                                      u3330 2972  
                                    u2531 1314                                      u2371 0B14  
                                    u2291 0950                                      u2451 1604  
                                    u2611 0184                                      u3171 2592  
                                    u3251 2A50                                      u3091 2F4E  
                                    u3411 0C12                                      u3331 296E  
                                    u2540 324A                                      u3260 1CCC  
                                    u2460 1642                                      u2700 0360  
                                    u2620 0204                                      u3180 25B0  
                                    u3500 2BC4                                      u3420 0C4C  
                                    u3340 29A4                                      u2541 3246  
                                    u3261 1CC8                                      u2461 163E  
                                    u2381 14D0                                      u2701 035C  
                                    u2621 01FE                                      u3181 25AC  
                                    u3501 2BC0                                      u3421 0C48  
                                    u3341 29A0                                      u2550 3258  
                                    u3270 1D54                                      u2470 11E6  
                                    u2390 14F2                                      u2710 03D2  
                                    u2630 0206                                      u3510 102E  
                                    u3190 25CA                                      u3350 31A0  
                                    u3430 0C82                                      u2551 3254  
                                    u3271 1D50                                      u2471 11E2  
                                    u2391 14EE                                      u2711 03CE  
                                    u3511 102A                                      u3191 25C6  
                                    u3351 319C                                      u3431 0C7E  
                                    u2560 330C                                      u2800 2CFC  
                                    u2480 121C                                      u2720 03F6  
                                    u2640 021C                                      u3520 105A  
                                    u3360 1678                                      u3280 1FCA  
                                    u3600 20FE                                      u3440 0CB8  
                                    u2561 3308                                      u2801 2CF8  
                                    u2481 1218                                      u2721 03F2  
                                    u2641 0218                                      u3521 1056  
                                    u3361 1674                                      u3281 1FC6  
                                    u3601 20FA                                      u3441 0CB4  
                                    u2490 1238                                      u2730 049A  
                                    u2650 0240                                      u2570 0036  
                                    u3530 10CA                                      u3370 1724  
                                    u2810 2D14                                      u3290 2020  
                                    u3610 2172                                      u3450 0CEE  
                                    u2491 1234                                      u2731 0496  
                                    u2651 023C                                      u2571 0032  
                                    u3531 10C6                                      u3371 1720  
                                    u2811 2D10                                      u3291 201C  
                                    u3611 216E                                      u3451 0CEA  
                                    u2900 1E9E                                      u1940 2342  
                                    u2740 0514                                      u2660 027C  
                                    u2580 010E                                      u3540 1154  
                                    u3380 17A8                                      u2820 2D28  
                                    u3620 2252                                      u3460 0D24  
                                    u3700 17D8                                      u2901 1E9A  
                                    u1941 233E                                      u2741 0510  
                                    u2661 0278                                      u2581 010A  
                                    u3541 1150                                      u3381 17A4  
                                    u2821 2D24                                      u3621 224E  
                                    u3461 0D20                                      u3701 17D4  
                                    u2910 1EC0                                      u2750 2E36  
                                    u1950 2354                                      u2670 0324  
                                    u2590 011E                                      u3550 118C  
                                    u2830 2D44                                      u3630 1D74  
                                    u3470 0DA4                                      u3390 0BA6  
                                    u3710 17F0                                      u2911 1EBC  
                                    u2751 2E32                                      u1951 2350  
                                    u2671 031E                                      u2591 011A  
                                    u3551 1188                                      u2831 2D40  
                                    u3631 1D70                                      u3471 0DA0  
                                    u3391 0BA2                                      u3711 17EC  
                                    u2920 1EFA                                      u2760 2E46  
                                    u1960 237C                                      u2680 0326  
                                    u2840 2D56                                      u3640 1DA0  
                                    u3560 2716                                      u3480 0DB4  
                                    u3800 18F2                                      u3720 180C  
                                    u2921 1EF6                                      u2761 2E42  
                                    u1961 2378                                      u2841 2D52  
                                    u3641 1D9C                                      u3561 2712  
                                    u3481 0DB0                                      u3801 18EE  
                                    u3721 1808                                      u2930 1F1C  
                                    u2770 2E56                                      u1970 23B2  
                                    u2690 033C                                      u3490 2BA2  
                                    u2850 2FF8                                      u3650 1DCC  
                                    u3570 2742                                      u3730 1854  
                                    u2931 1F18                                      u2771 2E52  
                                    u1971 23AE                                      u2691 0338  
                                    u3491 2B9E                                      u2851 2FF4  
                                    u3651 1DC8                                      u3571 273E  
                                    u3731 1850                                      u2940 1F44  
                                    u3660 19EA                                      u2780 2CC4  
                                    u1980 2FDC                                      u3580 0610  
                                    u2860 300E                                      u3740 1864  
                                    u2941 1F40                                      u3661 19E6  
                                    u1981 2FD8                                      u3581 060C  
                                    u2861 300A                                      u3741 1860  
                                    u2950 1F76                                      u3670 1A56  
                                    u2790 2CEC                                      u1990 3170  
                                    u2870 2C34                                      u3590 0718  
                                    u3750 188C                                      u2951 1F72  
                                    u3671 1A52                                      u1991 316C  
                                    u2871 2C30                                      u3591 0714  
                                    u3751 1888                                      u3680 1A9A  
                                    u2960 282E                                      u2880 2B28  
                                    u3760 18A2                                      u3681 1A96  
                                    u2961 282A                                      u2881 2B24  
                                    u3761 189E                                      u2970 2888  
                                    u2890 2B62                                      u3690 2294  
                                    u3770 18B4                                      u3850 27DE  
                                    u2787 2CBA                                      u3907 2FFA  
                                    u2971 2884                                      u2891 2B5E  
                                    u3691 2290                                      u3771 18B0  
                                    u3851 27DA                                      u2980 0DF2  
                                    u3780 18CA                                      u3860 27FE  
                                    u2797 2CE2                                      u2981 0DEE  
                                    u3917 3010                                      u3781 18C6  
                                    u3861 27FA                                      u2990 0E02  
                                    u3790 18DC                                      u2991 0DFE  
                                    u3927 32AA                                      u3791 18D8  
                                    u3937 32B8                                      u3947 2D16  
                                    u3957 30CE                                      u3877 26B4  
                                    u3967 31D4                                      u3887 2F58  
                                    u3897 2FE4                                      _TMR0 000FD6  
                    _minutosTranscurridos 007C                        ??_i2c_reinicia_com 0002  
                          _check_response 2FDE                   escribeHorariosMemoria@i 0011  
                 escribeHorariosMemoria@j 000D                             ??_i2c_detener 0002  
                                    abs@a 0013                                      _dbuf 008D  
                                    _atoi 11AE                                      _ctoa 2DB4  
                                    _main 277E                                      _dtoa 0884  
                                    _hora 0087                                      _prec 0074  
                                    _nout 0070                                      pad@i 0018  
                                    pad@p 0015                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    pad@w 001A                                      map@x 001B  
                                    fsr2l 000FD9                                      _stoa 14C6  
                                    btemp 005F                            ?_sistemaRegado 0001  
                __size_of_asignarHorarios 01BA                             ??_i2c_iniciar 0001  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 000E                  ??_restablecerDatosSensor 0005  
                           __CFG_IESO$OFF 000000                          ??_DHT11_ReadData 0001  
                       _constructorSensor 334C                      __size_of_DHT11_Start 0020  
                            ?_lecturaWifi 0001                   __size_of_setTiempoRegar 00A0  
                           __CFG_MCLRE$ON 000000                              ___param_bank 000000  
                      ?_constructorSensor 0001                        setTiempoRegar@hora 0014  
                      _leeHorariosMemoria 164C                          ??_encenderBombas 000F  
                                   ??_abs 0015                                     ??_map 002F  
                                   ??_pad 0017                            _i2c_envia_dato 3334  
                           __CFG_PLLDIV$1 000000                            _i2c_inicia_com 3368  
                         __end_of___aldiv 1F98                           __end_of___aodiv 14C6  
                                   ?_atoi 0008                                     ?_ctoa 001C  
                                   ?_main 0001                                     ?_dtoa 001C  
                         __end_of___aomod 1C00                             _convertirDato 3280  
                         __end_of___awdiv 2584                                     STR_10 7A4B  
                                   STR_11 7964                                     STR_12 7964  
                                   STR_20 7BB0                                     STR_13 7C1F  
                                   STR_21 7B64                                     STR_14 7FEC  
                                   STR_30 7F51                                     STR_22 7A7E  
                                   STR_31 7E42                                     STR_15 7E28  
                                   STR_23 7D3A                                     STR_16 7E28  
                                   STR_40 7E5C                                     STR_32 7C8D  
                                   STR_24 7BD5                                     STR_33 7FC6  
                                   STR_17 7F3A                                     STR_41 7F22  
                                   STR_25 7DF2                                     STR_34 7E3F  
                                   STR_18 7A4B                                     STR_42 7EA8  
                                   STR_50 7D7A                                     STR_26 7C44  
                                   STR_43 7F68                                     STR_51 7DB9  
                                   STR_35 7B3A                                     STR_27 7AB1  
                                   STR_19 78DB                                     STR_36 7FD4  
                                   STR_60 7F7F                                     STR_44 7EF2  
                                   STR_28 7D5A                                     STR_52 7AE2  
                         __end_of___awmod 2634                                     STR_53 7D7A  
                                   STR_45 7E0D                                     STR_37 7DD6  
                                   STR_29 7CD5                                     STR_61 7A12  
                                   STR_54 7DB9                                     STR_46 7F0A  
                                   STR_38 7CB1                                     STR_62 79D9  
                                   STR_55 7AE2                                     STR_47 7EC1  
                                   STR_39 7B8A                                     STR_63 799F  
                                   STR_56 7FA5                                     STR_48 7EDA  
                                   STR_57 7FF5                                     STR_49 7E8F  
                                   STR_58 7FE1                                     STR_59 7F93  
                     ??_constructorSensor 0005                                     ?_stoa 000A  
                       convertirDato@dato 0002                                     _T0CON 000FD5  
                         ___awdiv@divisor 0003                                     i2l217 2C9C  
                     ?_leeHorariosMemoria 0001                           ___awdiv@counter 0005  
                                   _RCREG 000FAE                              vfpfcnvrt@fmt 0042  
                                   _SPBRG 000FAF                             __CFG_USBDIV$1 000000  
                                   _TRISD 000F95                            limpiarBuffer@i 0001  
                                   _TXREG 000FAD                             __CFG_PWRT$OFF 000000  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                       ___lmul@multiplicand 0005  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                      __size_of_UART_init 0070                        __size_of_UART_read 0054  
                                   _flags 0076                                     _fputc 2330  
                                   _fputs 2F9A                           __end_of_isdigit 3112  
                  __end_of_check_response 301E                               ?_UART_write 0001  
                                   atoi@n 0015                                     pad@fp 0011  
                                   atoi@s 0008                                     _width 0072  
                                   ctoa@c 001E                                     _putch 3378  
                                   ctoa@w 001F                                     dtoa@d 001E  
                                   dtoa@i 003E                                     dtoa@n 0036  
                                   dtoa@p 0030                                     dtoa@s 0034  
                                   dtoa@w 0032                           __end_of_isspace 2F06  
                                   tablat 000FF5                                     plusw1 000FE3  
                                   plusw2 000FDB                                     stoa@i 0016  
                                   stoa@l 001E                                     stoa@p 001C  
                                   stoa@s 000C         __size_of_mostrarDatosSensoresWIFI 00F0  
                                   stoa@w 0018                                     ttemp5 0060  
                                   ttemp6 0063                                     ttemp7 0067  
                                   status 000FD8                 ?_mostrarDatosSensoresWIFI 0001  
                                   wtemp8 0060                           __end_of_sprintf 2EB4  
                      escribe_eeprom@dato 0009                 __end_of_constructorSensor 3356  
                    ??_leeHorariosMemoria 0007                            __CFG_ICPRT$OFF 000000  
                              _i2c_espera 3234                          ??_dameHoraActual 0005  
                         __initialization 2D5A                       __end_of_i2c_detener 3378  
         __size_of_lecturaAnalogaSensores 00AA                    __end_of_i2c_envia_dato 3340  
                            __end_of_atoi 133E                              __end_of_ctoa 2E0E  
                            __end_of_main 2812                              __end_of_dtoa 0B66  
                ??_escribeHorariosMemoria 000B                           ??_configurarAdc 0001  
                            __end_of_stoa 164C                    __end_of_i2c_inicia_com 3370  
                      _inicializarObjetos 1932                       __end_of_i2c_iniciar 3324  
                  sistemaPrincipal@opcion 00F3                          _dameHumedadSuelo 2F54  
                          ?_convertirDato 0001                      __size_of_fijaHoraRtc 0068  
                                  ??_atoi 000A                                    ??_ctoa 001F  
                                  ??_main 005F                                    ??_dtoa 0026  
                                  ??_stoa 000E                 setTiempoRegar@tiempoRegar 0013  
                           __activetblptr 000002                       ?_inicializarObjetos 0001  
                      i2c_envia_dato@dato 0002                           __CFG_CCP2MX$OFF 000000  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  ?_fputc 0001                                    ?_fputs 000A  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                         ?_check_response 0001                          ___awdiv@dividend 0001  
                  encenderBombas@flagSeco 0011                                    ?_putch 0001  
                      convertirDato@datoR 0003                             _horaRegar$806 0006  
                                  i2l4880 2C72                                    i2l4872 2C40  
                                  i2l4890 2C96                                    i2l4882 2C76  
                                  i2l4874 2C4E                                    i2l4884 2C78  
                                  i2l4876 2C60                                    i2l4878 2C62  
                                  i2l4886 2C84                                    i2l4888 2C92  
                         ??_sistemaRegado 005D                             vfpfcnvrt@done 0054  
                                  _SSPADD 000FC8                                    _SSPBUF 000FC9  
                    ??_inicializarObjetos 0007           __size_of_restablecerDatosSensor 004E  
                          __CFG_XINST$OFF 000000                          __end_of_getValue 0FF4  
                            vfprintf@cfmt 005B                  __end_of_sistemaPrincipal 2330  
                          _escribe_eeprom 31AE                                    ___lmul 2B0A  
                         ?_i2c_envia_dato 0001                                 ??___aldiv 0015  
                               ??___aodiv 0011                                 ??___aomod 0011  
                                  ___wmul 325A                         __end_of_UART_init 2B0A  
                       __end_of_UART_read 2E62                                 ??___awdiv 0005  
                               ??___awmod 0005                         ??_asignarHorarios 005D  
                        __end_of_leer_rtc 3234                           ?_i2c_inicia_com 0001  
                        __end_of_estaSeco 3148                                    _buffer 0100  
                     __size_of_UART_write 0016                              ?_UART_printf 0002  
                                  clear_0 2D82                                    clear_1 2D94  
                                  clear_2 2DA0                          ___awdiv@quotient 0007  
                         ___awmod@divisor 0003                                    _setRtc 2A2A  
                         ___awmod@counter 0005                                    pad@buf 0013  
                                  ctoa@fp 001C                                    dtoa@fp 001C  
                                  _strlen 3148                           _i2c_recibe_dato 32DE  
                  __size_of_dameDiaActual 0010                              ?_mostrarMenu 0001  
                                  fputc@c 0001                                    fputs@c 000E  
                                  fputs@i 000F                                    fputs@s 000A  
                               ??_isdigit 0003                      escribe_rtc@direccion 0004  
                            __mediumconst 78DA                                 ??_isspace 0003  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                    _lecturaAnalogaSensores 2634  
            __end_of_mostrarDatosSensores 225A                                    stoa@cp 001A  
                                  stoa@fp 000A                                    putch@c 0001  
                        __end_of_vfprintf 2C3E                                 ??_sprintf 005D  
                           ?_regadoRapido 0001                                __accesstop 0060  
                 __end_of__initialization 2DA6                      __size_of_escribe_rtc 001E  
                         __CFG_PBADEN$OFF 000000                      __size_of_leer_eeprom 003C  
                         __CFG_FOSC$XT_XT 000000                               _i2c_detener 3370  
              __size_of_constructorSensor 000A                             ___rparam_used 000001  
                             _i2c_iniciar 330E                    __end_of_escribe_eeprom 31DE  
                             ?_i2c_espera 0001                            _setTiempoRegar 26DE  
         leeHorariosMemoria@caracterLeido 0009                            __pcstackCOMRAM 0001  
                            leer_rtc@dato 0004                              __pidataBANK0 3340  
                    __size_of_lecturaWifi 00F2           __size_of_escribeHorariosMemoria 0156  
                         ??_convertirDato 0001                             __end_of_fputc 23FA  
                           __end_of_fputs 2FDE                             __end_of_putch 337A  
                  __size_of_limpiarBuffer 0040                    _restablecerDatosSensor 2F06  
                            _datoRecibido 0083                         ?_dameDatosSistema 0001  
                          ??_regadoRapido 000F                                   ??_fputc 0005  
                                 ??_fputs 000E                                   ??_putch 0001  
                              __pbssBANK0 0060                                __pbssBANK1 0100  
                      ??_dameDatosSistema 005D                   __size_of_desbordamiento 2C98  
                      __size_of_horaRegar 0084                    __end_of_setTiempoRegar 277E  
                           _dameDiaActual 3324         constructorSensor@porcientoHumedad 0003  
                            lecturaWifi@i 00CB                           ?_escribe_eeprom 0007  
                              _fijaDiaRtc 317E                        _contInterrupciones 0078  
               __size_of_i2c_reinicia_com 0008                                   ?___lmul 0001  
                                 ?___wmul 0001                                _flagRegado 0080  
                 __end_of_i2c_recibe_dato 32F8                                   _ACKSTAT 007E2E  
                          ___lmul@product 0009                                   ?_setRtc 0001  
                                 ?_strlen 0001             dameTemperaturaHumedad@humedad 000A  
                      __size_of_vfpfcnvrt 0582                       __size_of_i2c_espera 0026  
                               ?_getValue 0004                    _escribeHorariosMemoria 1C00  
                                 _SSPCON1 000FC6                                   _SSPCON2 000FC5  
                            ??_UART_write 0001                                   _SSPSTAT 000FC7  
                __end_of_dameHumedadSuelo 2F9A                                 ?_leer_rtc 0001  
                               ?_estaSeco 000C                           __CFG_VREGEN$OFF 000000  
                          ?_dameDiaActual 0001                             ??_DHT11_Start 0001  
                           _limpiarBuffer 301E                           ?_setTiempoRegar 0001  
                                 _Humedad 007E                                   __Hparam 0000  
                                 __Lparam 0000                                   ___aldiv 1E8C  
                                 ___aodiv 133E                                   ___aomod 1A9C  
                                 ___awdiv 24C0                           __size_of___lmul 006A  
                    _mostrarDatosSensores 217A                                   ___awmod 2584  
                         __size_of___wmul 0026                                 ?_vfprintf 00AD  
                         __CFG_STVREN$OFF 000000                               _Temperatura 007F  
                                 __pcinit 2D5A                                   __ramtop 0800  
                      __end_of_UART_write 330E                           __size_of_setRtc 0070  
                                 __ptext0 277E                                   __ptext1 17C6  
                                 __ptext2 292C                                   __ptext3 0B66  
                                 __ptext4 3112                                   __ptext5 31DE  
                                 __ptext6 3324                                   __ptext7 320A  
                                 __ptext8 3280                                   __ptext9 225A  
                 check_response@respuesta 0001                         __end_of_horaRegar 29B0  
                               _T0CONbits 000FD5                           __size_of_strlen 0036  
                    __size_of_UART_printf 005E                              __size_of_abs 0040  
                            __size_of_pad 00C6                              __size_of_map 007A  
                        ??_check_response 0001                                   _isdigit 30DA  
                        ___awmod@dividend 0001                                   _regando 007B  
                   regadoRapido@areaRegar 0012                          ___aldiv@dividend 000D  
                                 _isspace 2EB4                                   _minutos 0086  
                    __size_of_mostrarMenu 0086                                   atoi@neg 000E  
                              ??_getValue 0006                                   _sprintf 2E62  
                          __pintcode_body 2C3E                      end_of_initialization 2DA6  
                              ??_leer_rtc 0003                                ??_estaSeco 000E  
                                 fputc@fp 0003                            ?_limpiarBuffer 0001  
                         _asignarHorarios 0FF4                             __Lmediumconst 78DA  
                                 int_func 2C3E                                   fputs@fp 000C  
                        ??_i2c_envia_dato 0002               __size_of_leeHorariosMemoria 017A  
                        ??_i2c_inicia_com 0002                               ?_fijaDiaRtc 0001  
                        _VALOR_TIMER0UART 00FD                         __end_of_vfpfcnvrt 0594  
                ??_dameTemperaturaHumedad 0004                                 _RCSTAbits 000FAB  
                        ___aldiv@quotient 0017                     ?_mostrarDatosSensores 0001  
                     __end_of_DHT11_Start 32C0                                   postdec1 000FE5  
                                 postdec2 000FDD                         ?_sistemaPrincipal 0001  
                 _peticionLecturaSensores 007A                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                           ??_fijaHoraRtc 0013                      __end_of_regadoRapido 1E8C  
                        ?_i2c_recibe_dato 0001                                ??_vfprintf 005B  
                           setRtc@datoRtc 0011                     __end_of_configurarAdc 3360  
                      ??_sistemaPrincipal 00F1                                   strlen@a 0003  
                                 strlen@s 0001                                 _UART_init 2A9A  
                              getValue@Rx 000E                                 _UART_read 2E0E  
                               _PORTDbits 000F83                   __size_of_DHT11_ReadData 005C  
                 ?_lecturaAnalogaSensores 0001                             setRtc@seteado 0010  
               dameHumedadSuelo@canalLeer 0005                   lecturaAnalogaSensores@i 0030  
                               _TRISBbits 000F93                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                   __size_of_encenderBombas 026A  
                _mostrarDatosSensoresWIFI 208A                           ??_dameDiaActual 0005  
                              map@out_max 002B                                map@out_min 0027  
                          _desbordamiento 0008                            _esperandoDatos 0089  
                          _UART_init$1924 0023                              ?_i2c_detener 0001  
                   __end_of_sistemaRegado 1932                                 _TXSTAbits 000FAC  
                       dameDatosSistema@i 00EF               __size_of_inicializarObjetos 016A  
                            ?_i2c_iniciar 0001                              ??_i2c_espera 0001  
                       _MODO_COMUNICACION 0088                        DHT11_ReadData@data 0002  
                        _i2c_reinicia_com 3360                            __end_of___lmul 2B74  
                             vfpfcnvrt@ap 0044                               vfpfcnvrt@cp 0052  
                             vfpfcnvrt@fp 0040                               vfpfcnvrt@ll 004A  
                          __end_of___wmul 3280                   ?_restablecerDatosSensor 0001  
          __end_of_lecturaAnalogaSensores 26DE                                ?_UART_init 001B  
                              ?_UART_read 0001                   __size_of_dameHoraActual 002C  
                          __end_of_setRtc 2A9A                       __end_of_fijaHoraRtc 2BDC  
                          __end_of_strlen 317E                       start_initialization 2D5A  
                            _estaSeco$799 000E                               __end_of_abs 309E  
                             __end_of_pad 24C0                   __end_of_asignarHorarios 11AE  
                             __end_of_map 2A2A                       __size_of_fijaDiaRtc 0030  
       escribeHorariosMemoria@contMemoria 000F                    __end_of_desbordamiento 2CA0  
                      __end_of_i2c_espera 325A                             ??_escribe_rtc 0004  
                           ??_leer_eeprom 0005                           ??_limpiarBuffer 0001  
                        ??_escribe_eeprom 000A                       leeHorariosMemoria@i 000E  
                     leeHorariosMemoria@j 000A                      constructorSensor@pin 0004  
                             _DHT11_Start 32A0                     _dameDatosSistema$1925 00E7  
                   _dameDatosSistema$1926 00E9                     _dameDatosSistema$1927 00EB  
                   _dameDatosSistema$1928 00ED                             ??_lecturaWifi 005D  
                  ??_mostrarDatosSensores 005D                               vfprintf@fmt 00AF  
               __size_of_dameDatosSistema 02F0           __size_of_dameTemperaturaHumedad 0094  
                                ??___lmul 0009                                  ??___wmul 0005  
          __end_of_restablecerDatosSensor 2F54                               __pdataBANK0 00F4  
                        __CFG_LPT1OSC$OFF 000000                         leer_rtc@direccion 0003  
                                ??_setRtc 000F                     __end_of_convertirDato 32A0  
                                ??_strlen 0003                               __pbssBIGRAM 0132  
                 ?_escribeHorariosMemoria 0001                             __pcstackBANK0 00AD  
                        ___aodiv@dividend 0001             dameDatosSistema@bufferHorario 00C9  
                         ?_desbordamiento 0001                          ??_setTiempoRegar 0013  
                               _diaActual 0084                   inicializarObjetos@i_809 000B  
                       __size_of_getValue 0224                         ?_dameHumedadSuelo 0001  
                  getValue@datoIncorrecto 0008                         UART_printf@cadena 0002  
                           lecturaWifi@Rx 00C9                                 _atoi$1573 0010  
                               _atoi$1574 0014                                 _atoi$1575 0012  
                      ??_dameHumedadSuelo 0003                         __size_of_leer_rtc 002A  
                       __size_of_estaSeco 0036                       __end_of_escribe_rtc 32DE  
                     __end_of_leer_eeprom 30DA                     __size_of_regadoRapido 0136  
                               _dtoa$1088 002E                                 __pintcode 0008  
                           __pmediumconst 78DA                                  ?___aldiv 000D  
                                ?___aodiv 0001                                  ?___aomod 0001  
                                ?___awdiv 0001                          ___aodiv@quotient 0013  
                                ?___awmod 0001                               _fijaHoraRtc 2B74  
                     __end_of_lecturaWifi 208A                            _DHT11_ReadData 2CFE  
                              setRtc@dato 0012                               ??_UART_init 001F  
                             ??_UART_read 0001                         __size_of_vfprintf 0062  
          __end_of_escribeHorariosMemoria 1D56                                  ?_isdigit 0001  
                          _encenderBombas 0B66                                  ?_isspace 0001  
                               _horaRegar 292C            dameTemperaturaHumedad@checkSum 0006  
                  _dameTemperaturaHumedad 2812                          ?_asignarHorarios 0001  
                                ?_sprintf 00B3                            __size_of_fputc 00CA  
                          __size_of_fputs 0044                              _regadoRapido 1D56  
                          __size_of_putch 0002                           ___aldiv@divisor 0011  
                         ___aldiv@counter 0015                            ___wmul@product 0005  
                                _LATDbits 000F8C                                  _PIE1bits 000F9D  
                    __size_of_i2c_detener 0008                              ??_fijaDiaRtc 0013  
                                _PIR1bits 000F9E                                  i2u381_40 2C4E  
                                i2u381_41 2C4A                                  i2u382_40 2C60  
                                i2u382_41 2C5C                                  i2u383_40 2C72  
                                i2u383_41 2C6E                                  i2u384_40 2C92  
                                i2u384_41 2C8E                   restablecerDatosSensor@i 0005  
                    __size_of_i2c_iniciar 0016                          __CFG_WDTPS$32768 000000  
                  _tiempoInactividadTrans 008C             leeHorariosMemoria@contMemoria 000C  
                     asignarHorarios@hora 00CC                    __end_of_DHT11_ReadData 2D5A  
                               getValue@i 0009                             ??_UART_printf 0004  
                               _vfpfcnvrt 0012                                 map@in_max 0023  
                               map@in_min 001F                                _ADCON0bits 000FC2  
                          _dameHoraActual 31DE                         ___wmul@multiplier 0001  
              ??_mostrarDatosSensoresWIFI 005D                    __end_of_encenderBombas 0DD0  
                           ??_mostrarMenu 0004                            UART_write@dato 0001  
                              ?_horaRegar 0001                     mostrarDatosSensores@i 00C9  
                            _isspace$1591 0007                 __size_of_sistemaPrincipal 00D6  
                __end_of_i2c_reinicia_com 3368                                vfpfcnvrt@c 005A  
                      __end_of_fijaDiaRtc 31AE                         ___lmul@multiplier 0001  
                               copy_data0 2D6E                               _escribe_rtc 32C0  
                             _leer_eeprom 309E                              _VALOR_TIMER0 00FB  
              __end_of_leeHorariosMemoria 17C6                                 estaSeco@s 000C  
                 asignarHorarios@diaRegar 00C9                                  __Hrparam 0000  
                   getValue@numCharacters 0004                              _minutosRegar 007D  
                             _lecturaWifi 1F98                             UART_init@BAUD 001B  
                              vfprintf@ap 00B1                                  __Lrparam 0000  
                              vfprintf@fp 00AD                          _dameDatosSistema 0594  
dameTemperaturaHumedad@temperaturaDecimal 0009                       _esperaDatoConcluida 008A  
                        __size_of___aldiv 010C                           ?_DHT11_ReadData 0001  
                        __size_of___aodiv 0188                          __size_of___aomod 0164  
                        __size_of___awdiv 00C4                    __end_of_dameHoraActual 320A  
                        __size_of___awmod 00B0                                ?_vfpfcnvrt 0040  
                         DHT11_ReadData@i 0001                           ___aodiv@divisor 0009  
                         ___aodiv@counter 0011                           ?_encenderBombas 0001  
                              sprintf@fmt 00B5                  __size_of_i2c_recibe_dato 001A  
                     __end_of_UART_printf 2CFE                          __size_of_isdigit 0038  
                        __size_of_isspace 0052                                  __ptext10 26DE  
                                __ptext11 1D56                                  __ptext20 2B0A  
                                __ptext12 28A6                                  __ptext21 2F54  
                                __ptext13 208A                                  __ptext30 2B74  
                                __ptext22 2812                                  __ptext14 1F98  
                                __ptext31 317E                                  __ptext23 2FDE  
                                __ptext15 2F06                                  __ptext40 2BDC  
                                __ptext32 2A2A                                  __ptext24 32A0  
                                __ptext16 334C                                  __ptext41 0012  
                                __ptext33 32C0                                  __ptext25 2CFE  
                                __ptext17 217A                                  __ptext50 2F9A  
                                __ptext42 14C6                                  __ptext34 2584  
                                __ptext26 164C                                  __ptext18 2634  
                                __ptext51 2330                                  __ptext43 0884  
                                __ptext35 24C0                                  __ptext27 309E  
                                __ptext19 29B0                                  __ptext60 1C00  
                                __ptext52 3378                                  __ptext44 305E  
                                __ptext36 0594                                  __ptext28 3360  
                                __ptext61 31AE                                  __ptext53 11AE  
                                __ptext45 1A9C                                  __ptext37 301E  
                                __ptext29 32DE                                  __ptext70 2A9A  
                                __ptext62 3368                                  __ptext54 2EB4  
                                __ptext46 133E                                  __ptext38 0FF4  
                                __ptext71 1E8C                                  __ptext63 3334  
                                __ptext55 30DA                                  __ptext47 2DB4  
                                __ptext39 2E62                                  __ptext64 3370  
                                __ptext56 0DD0                                  __ptext48 23FA  
                                __ptext65 3234                                  __ptext57 2E0E  
                                __ptext49 3148                                  __ptext66 1932  
                                __ptext58 2CA0                                  __ptext67 325A  
                                __ptext59 32F8                                  __ptext68 330E  
                                __ptext69 3356                                  _getValue 0DD0  
                     __end_of_mostrarMenu 292C                          __size_of_sprintf 0052  
                                _leer_rtc 320A                                  _estaSeco 3112  
              __end_of_inicializarObjetos 1A9C                                  _byteUart 008B  
                  __size_of_configurarAdc 000A                  lecturaWifi@humedadMedida 00CA  
                 __size_of_check_response 0040                     __end_of_dameDiaActual 3334  
                     inicializarObjetos@i 000D                       inicializarObjetos@j 0009  
                           __size_of_atoi 0190                             __size_of_ctoa 005A  
                           __size_of_main 0094                             __size_of_dtoa 02E2  
                                _horarios 0132                              ?_DHT11_Start 0001  
                           __size_of_stoa 0186      dameTemperaturaHumedad@humedadDecimal 0008  
                                _tempHora 0081                                  _segundos 0085  
                               stoa@F1144 00F4                           encenderBombas@i 0012  
                                _sensores 0060                 mostrarDatosSensoresWIFI@i 00CD  
                                int$flags 005F                                  _vfprintf 2BDC  
                         ?_dameHoraActual 0001                   __size_of_i2c_envia_dato 000C  
                           getValue@i_995 000B                   __size_of_i2c_inicia_com 0008  
                i2c_recibe_dato@datoleido 0002                          ___aomod@dividend 0001  
                   __CFG_CPUDIV$OSC1_PLL2 000000                          ??_desbordamiento 0001  
                          _vfpfcnvrt$1113 0056                            _vfpfcnvrt$1114 0058  
                  __size_of_sistemaRegado 016C                                _INTCONbits 000FF2  
                      constructorSensor@s 0001                               ??_horaRegar 0003  
                 escribe_eeprom@direccion 0007                                  isdigit@c 0001  
                                intlevel2 0000                                 sprintf@ap 00C1  
                         escribe_rtc@dato 0003                     __end_of_limpiarBuffer 305E  
                                isspace@c 0001                           setRtc@direccion 000F  
                       asignarHorarios@Rx 00CD             __size_of_mostrarDatosSensores 00E0  
                           _overflowTimer 0082                              ?_fijaHoraRtc 0001  
       dameTemperaturaHumedad@temperatura 000B                           ___aomod@divisor 0009  
                            getValue@dato 000D                 __size_of_dameHumedadSuelo 0046  
                             ??_vfpfcnvrt 0046                                  stoa@nuls 000F  
                         ___aomod@counter 0011                               _UART_printf 2CA0  
                           _configurarAdc 3356          __end_of_mostrarDatosSensoresWIFI 217A  
                                sprintf@f 00C3                                  sprintf@s 00B3  
                 ?_dameTemperaturaHumedad 0001                               _mostrarMenu 28A6  
                            ___aldiv@sign 0016                          asignarHorarios@i 00CA  
                        _sistemaPrincipal 225A                           leer_eeprom@dato 0006  
                             _SSPCON2bits 000FC5                                _UART_write 32F8  
                            ___aodiv@sign 0012                         ??_i2c_recibe_dato 0002  
                  __size_of_convertirDato 0020                      leer_eeprom@direccion 0003  
                           _sistemaRegado 17C6                              ___aomod@sign 0012  
                ??_lecturaAnalogaSensores 002F  
