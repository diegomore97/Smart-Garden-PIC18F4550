

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Apr 29 12:43:58 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           ; Version 2.10
    80                           ; Generated 31/07/2019 GMT
    81                           ; 
    82                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F4550 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataBANK0
   115  0022DC                     __pidataBANK0:
   116                           	opt callstack 0
   117                           
   118                           ;initializer for _VALOR_TIMER0
   119  0022DC  6769               	dw	26473
   120                           
   121                           ;initializer for _VALOR_TIMER0UART
   122  0022DE  6769               	dw	26473
   123  0000                     _TMR0	set	4054
   124  0000                     _TRISD	set	3989
   125  0000                     _T0CON	set	4053
   126  0000                     _T0CONbits	set	4053
   127  0000                     _LATD	set	3980
   128  0000                     _PIE1bits	set	3997
   129  0000                     _ADRESL	set	4035
   130  0000                     _ADRESH	set	4036
   131  0000                     _ADCON0bits	set	4034
   132  0000                     _ADCON2	set	4032
   133  0000                     _ADCON1	set	4033
   134  0000                     _INTCONbits	set	4082
   135  0000                     _LATDbits	set	3980
   136  0000                     _TRISDbits	set	3989
   137  0000                     _PORTDbits	set	3971
   138  0000                     _TXREG	set	4013
   139  0000                     _RCREG	set	4014
   140  0000                     _PIR1bits	set	3998
   141  0000                     _RCSTAbits	set	4011
   142  0000                     _TXSTAbits	set	4012
   143  0000                     _SPBRG	set	4015
   144  0000                     _TRISCbits	set	3988
   145  0000                     _SSPBUF	set	4041
   146  0000                     _SSPCON2bits	set	4037
   147  0000                     _SSPADD	set	4040
   148  0000                     _SSPCON2	set	4037
   149  0000                     _SSPCON1	set	4038
   150  0000                     _SSPSTAT	set	4039
   151  0000                     _TRISBbits	set	3987
   152  0000                     _ACKSTAT	set	32302
   153                           
   154                           	psect	mediumconst
   155  007BC6                     __pmediumconst:
   156                           	opt callstack 0
   157  007BC6  00                 	db	0
   158  007BC7                     STR_11:
   159  007BC7  0D                 	db	13
   160  007BC8  0A                 	db	10
   161  007BC9  20                 	db	32
   162  007BCA  49                 	db	73	;'I'
   163  007BCB  6E                 	db	110	;'n'
   164  007BCC  67                 	db	103	;'g'
   165  007BCD  72                 	db	114	;'r'
   166  007BCE  65                 	db	101	;'e'
   167  007BCF  73                 	db	115	;'s'
   168  007BD0  65                 	db	101	;'e'
   169  007BD1  20                 	db	32
   170  007BD2  6C                 	db	108	;'l'
   171  007BD3  6F                 	db	111	;'o'
   172  007BD4  73                 	db	115	;'s'
   173  007BD5  20                 	db	32
   174  007BD6  6D                 	db	109	;'m'
   175  007BD7  69                 	db	105	;'i'
   176  007BD8  6E                 	db	110	;'n'
   177  007BD9  75                 	db	117	;'u'
   178  007BDA  74                 	db	116	;'t'
   179  007BDB  6F                 	db	111	;'o'
   180  007BDC  73                 	db	115	;'s'
   181  007BDD  20                 	db	32
   182  007BDE  71                 	db	113	;'q'
   183  007BDF  75                 	db	117	;'u'
   184  007BE0  65                 	db	101	;'e'
   185  007BE1  20                 	db	32
   186  007BE2  64                 	db	100	;'d'
   187  007BE3  65                 	db	101	;'e'
   188  007BE4  73                 	db	115	;'s'
   189  007BE5  65                 	db	101	;'e'
   190  007BE6  65                 	db	101	;'e'
   191  007BE7  20                 	db	32
   192  007BE8  71                 	db	113	;'q'
   193  007BE9  75                 	db	117	;'u'
   194  007BEA  65                 	db	101	;'e'
   195  007BEB  20                 	db	32
   196  007BEC  73                 	db	115	;'s'
   197  007BED  65                 	db	101	;'e'
   198  007BEE  20                 	db	32
   199  007BEF  72                 	db	114	;'r'
   200  007BF0  69                 	db	105	;'i'
   201  007BF1  65                 	db	101	;'e'
   202  007BF2  67                 	db	103	;'g'
   203  007BF3  75                 	db	117	;'u'
   204  007BF4  65                 	db	101	;'e'
   205  007BF5  20                 	db	32
   206  007BF6  65                 	db	101	;'e'
   207  007BF7  6E                 	db	110	;'n'
   208  007BF8  20                 	db	32
   209  007BF9  65                 	db	101	;'e'
   210  007BFA  73                 	db	115	;'s'
   211  007BFB  65                 	db	101	;'e'
   212  007BFC  20                 	db	32
   213  007BFD  68                 	db	104	;'h'
   214  007BFE  6F                 	db	111	;'o'
   215  007BFF  72                 	db	114	;'r'
   216  007C00  61                 	db	97	;'a'
   217  007C01  72                 	db	114	;'r'
   218  007C02  69                 	db	105	;'i'
   219  007C03  6F                 	db	111	;'o'
   220  007C04  20                 	db	32
   221  007C05  65                 	db	101	;'e'
   222  007C06  6A                 	db	106	;'j'
   223  007C07  3A                 	db	58	;':'
   224  007C08  20                 	db	32
   225  007C09  31                 	db	49	;'1'
   226  007C0A  35                 	db	53	;'5'
   227  007C0B  20                 	db	32
   228  007C0C  0D                 	db	13
   229  007C0D  0A                 	db	10
   230  007C0E  00                 	db	0
   231  007C0F                     STR_7:
   232  007C0F  0D                 	db	13
   233  007C10  0A                 	db	10
   234  007C11  20                 	db	32
   235  007C12  49                 	db	73	;'I'
   236  007C13  6E                 	db	110	;'n'
   237  007C14  67                 	db	103	;'g'
   238  007C15  72                 	db	114	;'r'
   239  007C16  65                 	db	101	;'e'
   240  007C17  73                 	db	115	;'s'
   241  007C18  65                 	db	101	;'e'
   242  007C19  20                 	db	32
   243  007C1A  31                 	db	49	;'1'
   244  007C1B  20                 	db	32
   245  007C1C  70                 	db	112	;'p'
   246  007C1D  61                 	db	97	;'a'
   247  007C1E  72                 	db	114	;'r'
   248  007C1F  61                 	db	97	;'a'
   249  007C20  20                 	db	32
   250  007C21  72                 	db	114	;'r'
   251  007C22  65                 	db	101	;'e'
   252  007C23  67                 	db	103	;'g'
   253  007C24  61                 	db	97	;'a'
   254  007C25  72                 	db	114	;'r'
   255  007C26  20                 	db	32
   256  007C27  7C                 	db	124
   257  007C28  7C                 	db	124
   258  007C29  20                 	db	32
   259  007C2A  69                 	db	105	;'i'
   260  007C2B  6E                 	db	110	;'n'
   261  007C2C  67                 	db	103	;'g'
   262  007C2D  72                 	db	114	;'r'
   263  007C2E  65                 	db	101	;'e'
   264  007C2F  73                 	db	115	;'s'
   265  007C30  65                 	db	101	;'e'
   266  007C31  20                 	db	32
   267  007C32  30                 	db	48	;'0'
   268  007C33  20                 	db	32
   269  007C34  70                 	db	112	;'p'
   270  007C35  61                 	db	97	;'a'
   271  007C36  72                 	db	114	;'r'
   272  007C37  61                 	db	97	;'a'
   273  007C38  20                 	db	32
   274  007C39  6E                 	db	110	;'n'
   275  007C3A  6F                 	db	111	;'o'
   276  007C3B  20                 	db	32
   277  007C3C  72                 	db	114	;'r'
   278  007C3D  65                 	db	101	;'e'
   279  007C3E  67                 	db	103	;'g'
   280  007C3F  61                 	db	97	;'a'
   281  007C40  72                 	db	114	;'r'
   282  007C41  3A                 	db	58	;':'
   283  007C42  20                 	db	32
   284  007C43  0D                 	db	13
   285  007C44  0A                 	db	10
   286  007C45  00                 	db	0
   287  007C46                     STR_6:
   288  007C46  0D                 	db	13
   289  007C47  0A                 	db	10
   290  007C48  20                 	db	32
   291  007C49  49                 	db	73	;'I'
   292  007C4A  6E                 	db	110	;'n'
   293  007C4B  67                 	db	103	;'g'
   294  007C4C  72                 	db	114	;'r'
   295  007C4D  65                 	db	101	;'e'
   296  007C4E  73                 	db	115	;'s'
   297  007C4F  65                 	db	101	;'e'
   298  007C50  20                 	db	32
   299  007C51  75                 	db	117	;'u'
   300  007C52  6E                 	db	110	;'n'
   301  007C53  61                 	db	97	;'a'
   302  007C54  20                 	db	32
   303  007C55  68                 	db	104	;'h'
   304  007C56  6F                 	db	111	;'o'
   305  007C57  72                 	db	114	;'r'
   306  007C58  61                 	db	97	;'a'
   307  007C59  20                 	db	32
   308  007C5A  65                 	db	101	;'e'
   309  007C5B  6E                 	db	110	;'n'
   310  007C5C  20                 	db	32
   311  007C5D  66                 	db	102	;'f'
   312  007C5E  6F                 	db	111	;'o'
   313  007C5F  72                 	db	114	;'r'
   314  007C60  6D                 	db	109	;'m'
   315  007C61  61                 	db	97	;'a'
   316  007C62  74                 	db	116	;'t'
   317  007C63  6F                 	db	111	;'o'
   318  007C64  20                 	db	32
   319  007C65  64                 	db	100	;'d'
   320  007C66  65                 	db	101	;'e'
   321  007C67  20                 	db	32
   322  007C68  32                 	db	50	;'2'
   323  007C69  34                 	db	52	;'4'
   324  007C6A  20                 	db	32
   325  007C6B  68                 	db	104	;'h'
   326  007C6C  72                 	db	114	;'r'
   327  007C6D  73                 	db	115	;'s'
   328  007C6E  20                 	db	32
   329  007C6F  65                 	db	101	;'e'
   330  007C70  6A                 	db	106	;'j'
   331  007C71  3A                 	db	58	;':'
   332  007C72  20                 	db	32
   333  007C73  31                 	db	49	;'1'
   334  007C74  35                 	db	53	;'5'
   335  007C75  20                 	db	32
   336  007C76  0D                 	db	13
   337  007C77  0A                 	db	10
   338  007C78  00                 	db	0
   339  007C79                     STR_25:
   340  007C79  0D                 	db	13
   341  007C7A  0A                 	db	10
   342  007C7B  0A                 	db	10
   343  007C7C  48                 	db	72	;'H'
   344  007C7D  6F                 	db	111	;'o'
   345  007C7E  72                 	db	114	;'r'
   346  007C7F  61                 	db	97	;'a'
   347  007C80  20                 	db	32
   348  007C81  7C                 	db	124
   349  007C82  20                 	db	32
   350  007C83  52                 	db	82	;'R'
   351  007C84  65                 	db	101	;'e'
   352  007C85  67                 	db	103	;'g'
   353  007C86  61                 	db	97	;'a'
   354  007C87  72                 	db	114	;'r'
   355  007C88  28                 	db	40
   356  007C89  31                 	db	49	;'1'
   357  007C8A  20                 	db	32
   358  007C8B  73                 	db	115	;'s'
   359  007C8C  69                 	db	105	;'i'
   360  007C8D  20                 	db	32
   361  007C8E  30                 	db	48	;'0'
   362  007C8F  20                 	db	32
   363  007C90  6E                 	db	110	;'n'
   364  007C91  6F                 	db	111	;'o'
   365  007C92  29                 	db	41
   366  007C93  20                 	db	32
   367  007C94  7C                 	db	124
   368  007C95  20                 	db	32
   369  007C96  4D                 	db	77	;'M'
   370  007C97  69                 	db	105	;'i'
   371  007C98  6E                 	db	110	;'n'
   372  007C99  75                 	db	117	;'u'
   373  007C9A  74                 	db	116	;'t'
   374  007C9B  6F                 	db	111	;'o'
   375  007C9C  73                 	db	115	;'s'
   376  007C9D  20                 	db	32
   377  007C9E  64                 	db	100	;'d'
   378  007C9F  65                 	db	101	;'e'
   379  007CA0  20                 	db	32
   380  007CA1  72                 	db	114	;'r'
   381  007CA2  69                 	db	105	;'i'
   382  007CA3  65                 	db	101	;'e'
   383  007CA4  67                 	db	103	;'g'
   384  007CA5  6F                 	db	111	;'o'
   385  007CA6  20                 	db	32
   386  007CA7  0D                 	db	13
   387  007CA8  0A                 	db	10
   388  007CA9  0A                 	db	10
   389  007CAA  00                 	db	0
   390  007CAB                     STR_19:
   391  007CAB  0D                 	db	13
   392  007CAC  0A                 	db	10
   393  007CAD  20                 	db	32
   394  007CAE  33                 	db	51	;'3'
   395  007CAF  2E                 	db	46
   396  007CB0  20                 	db	32
   397  007CB1  50                 	db	80	;'P'
   398  007CB2  72                 	db	114	;'r'
   399  007CB3  6F                 	db	111	;'o'
   400  007CB4  67                 	db	103	;'g'
   401  007CB5  72                 	db	114	;'r'
   402  007CB6  61                 	db	97	;'a'
   403  007CB7  6D                 	db	109	;'m'
   404  007CB8  61                 	db	97	;'a'
   405  007CB9  72                 	db	114	;'r'
   406  007CBA  20                 	db	32
   407  007CBB  74                 	db	116	;'t'
   408  007CBC  69                 	db	105	;'i'
   409  007CBD  65                 	db	101	;'e'
   410  007CBE  6D                 	db	109	;'m'
   411  007CBF  70                 	db	112	;'p'
   412  007CC0  6F                 	db	111	;'o'
   413  007CC1  20                 	db	32
   414  007CC2  64                 	db	100	;'d'
   415  007CC3  65                 	db	101	;'e'
   416  007CC4  20                 	db	32
   417  007CC5  72                 	db	114	;'r'
   418  007CC6  69                 	db	105	;'i'
   419  007CC7  65                 	db	101	;'e'
   420  007CC8  67                 	db	103	;'g'
   421  007CC9  6F                 	db	111	;'o'
   422  007CCA  20                 	db	32
   423  007CCB  65                 	db	101	;'e'
   424  007CCC  6E                 	db	110	;'n'
   425  007CCD  20                 	db	32
   426  007CCE  75                 	db	117	;'u'
   427  007CCF  6E                 	db	110	;'n'
   428  007CD0  20                 	db	32
   429  007CD1  68                 	db	104	;'h'
   430  007CD2  6F                 	db	111	;'o'
   431  007CD3  72                 	db	114	;'r'
   432  007CD4  61                 	db	97	;'a'
   433  007CD5  72                 	db	114	;'r'
   434  007CD6  69                 	db	105	;'i'
   435  007CD7  6F                 	db	111	;'o'
   436  007CD8  20                 	db	32
   437  007CD9  0D                 	db	13
   438  007CDA  0A                 	db	10
   439  007CDB  00                 	db	0
   440  007CDC                     STR_2:
   441  007CDC  0D                 	db	13
   442  007CDD  0A                 	db	10
   443  007CDE  20                 	db	32
   444  007CDF  45                 	db	69	;'E'
   445  007CE0  6E                 	db	110	;'n'
   446  007CE1  76                 	db	118	;'v'
   447  007CE2  69                 	db	105	;'i'
   448  007CE3  65                 	db	101	;'e'
   449  007CE4  20                 	db	32
   450  007CE5  6C                 	db	108	;'l'
   451  007CE6  61                 	db	97	;'a'
   452  007CE7  73                 	db	115	;'s'
   453  007CE8  20                 	db	32
   454  007CE9  48                 	db	72	;'H'
   455  007CEA  6F                 	db	111	;'o'
   456  007CEB  72                 	db	114	;'r'
   457  007CEC  61                 	db	97	;'a'
   458  007CED  73                 	db	115	;'s'
   459  007CEE  20                 	db	32
   460  007CEF  65                 	db	101	;'e'
   461  007CF0  6E                 	db	110	;'n'
   462  007CF1  20                 	db	32
   463  007CF2  66                 	db	102	;'f'
   464  007CF3  6F                 	db	111	;'o'
   465  007CF4  72                 	db	114	;'r'
   466  007CF5  6D                 	db	109	;'m'
   467  007CF6  61                 	db	97	;'a'
   468  007CF7  74                 	db	116	;'t'
   469  007CF8  6F                 	db	111	;'o'
   470  007CF9  20                 	db	32
   471  007CFA  32                 	db	50	;'2'
   472  007CFB  34                 	db	52	;'4'
   473  007CFC  20                 	db	32
   474  007CFD  45                 	db	69	;'E'
   475  007CFE  6A                 	db	106	;'j'
   476  007CFF  3A                 	db	58	;':'
   477  007D00  20                 	db	32
   478  007D01  31                 	db	49	;'1'
   479  007D02  35                 	db	53	;'5'
   480  007D03  20                 	db	32
   481  007D04  0D                 	db	13
   482  007D05  0A                 	db	10
   483  007D06  00                 	db	0
   484  007D07                     STR_24:
   485  007D07  0D                 	db	13
   486  007D08  0A                 	db	10
   487  007D09  20                 	db	32
   488  007D0A  53                 	db	83	;'S'
   489  007D0B  6F                 	db	111	;'o'
   490  007D0C  6C                 	db	108	;'l'
   491  007D0D  6F                 	db	111	;'o'
   492  007D0E  20                 	db	32
   493  007D0F  73                 	db	115	;'s'
   494  007D10  65                 	db	101	;'e'
   495  007D11  20                 	db	32
   496  007D12  70                 	db	112	;'p'
   497  007D13  65                 	db	101	;'e'
   498  007D14  72                 	db	114	;'r'
   499  007D15  6D                 	db	109	;'m'
   500  007D16  69                 	db	105	;'i'
   501  007D17  74                 	db	116	;'t'
   502  007D18  65                 	db	101	;'e'
   503  007D19  6E                 	db	110	;'n'
   504  007D1A  20                 	db	32
   505  007D1B  6E                 	db	110	;'n'
   506  007D1C  75                 	db	117	;'u'
   507  007D1D  6D                 	db	109	;'m'
   508  007D1E  65                 	db	101	;'e'
   509  007D1F  72                 	db	114	;'r'
   510  007D20  6F                 	db	111	;'o'
   511  007D21  73                 	db	115	;'s'
   512  007D22  20                 	db	32
   513  007D23  64                 	db	100	;'d'
   514  007D24  65                 	db	101	;'e'
   515  007D25  6C                 	db	108	;'l'
   516  007D26  20                 	db	32
   517  007D27  31                 	db	49	;'1'
   518  007D28  20                 	db	32
   519  007D29  61                 	db	97	;'a'
   520  007D2A  6C                 	db	108	;'l'
   521  007D2B  20                 	db	32
   522  007D2C  33                 	db	51	;'3'
   523  007D2D  20                 	db	32
   524  007D2E  0D                 	db	13
   525  007D2F  0A                 	db	10
   526  007D30  00                 	db	0
   527  007D31                     STR_31:
   528  007D31  0D                 	db	13
   529  007D32  0A                 	db	10
   530  007D33  0A                 	db	10
   531  007D34  50                 	db	80	;'P'
   532  007D35  6F                 	db	111	;'o'
   533  007D36  72                 	db	114	;'r'
   534  007D37  63                 	db	99	;'c'
   535  007D38  65                 	db	101	;'e'
   536  007D39  6E                 	db	110	;'n'
   537  007D3A  74                 	db	116	;'t'
   538  007D3B  61                 	db	97	;'a'
   539  007D3C  6A                 	db	106	;'j'
   540  007D3D  65                 	db	101	;'e'
   541  007D3E  20                 	db	32
   542  007D3F  48                 	db	72	;'H'
   543  007D40  75                 	db	117	;'u'
   544  007D41  6D                 	db	109	;'m'
   545  007D42  65                 	db	101	;'e'
   546  007D43  64                 	db	100	;'d'
   547  007D44  61                 	db	97	;'a'
   548  007D45  64                 	db	100	;'d'
   549  007D46  20                 	db	32
   550  007D47  64                 	db	100	;'d'
   551  007D48  65                 	db	101	;'e'
   552  007D49  6C                 	db	108	;'l'
   553  007D4A  20                 	db	32
   554  007D4B  73                 	db	115	;'s'
   555  007D4C  65                 	db	101	;'e'
   556  007D4D  6E                 	db	110	;'n'
   557  007D4E  73                 	db	115	;'s'
   558  007D4F  6F                 	db	111	;'o'
   559  007D50  72                 	db	114	;'r'
   560  007D51  20                 	db	32
   561  007D52  25                 	db	37
   562  007D53  64                 	db	100	;'d'
   563  007D54  3A                 	db	58	;':'
   564  007D55  20                 	db	32
   565  007D56  25                 	db	37
   566  007D57  64                 	db	100	;'d'
   567  007D58  0D                 	db	13
   568  007D59  0A                 	db	10
   569  007D5A  00                 	db	0
   570  007D5B                     STR_33:
   571  007D5B  0D                 	db	13
   572  007D5C  0A                 	db	10
   573  007D5D  0A                 	db	10
   574  007D5E  45                 	db	69	;'E'
   575  007D5F  6C                 	db	108	;'l'
   576  007D60  20                 	db	32
   577  007D61  73                 	db	115	;'s'
   578  007D62  65                 	db	101	;'e'
   579  007D63  6E                 	db	110	;'n'
   580  007D64  73                 	db	115	;'s'
   581  007D65  6F                 	db	111	;'o'
   582  007D66  72                 	db	114	;'r'
   583  007D67  20                 	db	32
   584  007D68  25                 	db	37
   585  007D69  64                 	db	100	;'d'
   586  007D6A  20                 	db	32
   587  007D6B  64                 	db	100	;'d'
   588  007D6C  65                 	db	101	;'e'
   589  007D6D  74                 	db	116	;'t'
   590  007D6E  65                 	db	101	;'e'
   591  007D6F  63                 	db	99	;'c'
   592  007D70  74                 	db	116	;'t'
   593  007D71  61                 	db	97	;'a'
   594  007D72  20                 	db	32
   595  007D73  74                 	db	116	;'t'
   596  007D74  69                 	db	105	;'i'
   597  007D75  65                 	db	101	;'e'
   598  007D76  72                 	db	114	;'r'
   599  007D77  72                 	db	114	;'r'
   600  007D78  61                 	db	97	;'a'
   601  007D79  20                 	db	32
   602  007D7A  68                 	db	104	;'h'
   603  007D7B  75                 	db	117	;'u'
   604  007D7C  6D                 	db	109	;'m'
   605  007D7D  65                 	db	101	;'e'
   606  007D7E  64                 	db	100	;'d'
   607  007D7F  61                 	db	97	;'a'
   608  007D80  0D                 	db	13
   609  007D81  0A                 	db	10
   610  007D82  00                 	db	0
   611  007D83                     STR_13:
   612  007D83  0D                 	db	13
   613  007D84  0A                 	db	10
   614  007D85  53                 	db	83	;'S'
   615  007D86  6F                 	db	111	;'o'
   616  007D87  6C                 	db	108	;'l'
   617  007D88  69                 	db	105	;'i'
   618  007D89  63                 	db	99	;'c'
   619  007D8A  69                 	db	105	;'i'
   620  007D8B  74                 	db	116	;'t'
   621  007D8C  61                 	db	97	;'a'
   622  007D8D  6E                 	db	110	;'n'
   623  007D8E  64                 	db	100	;'d'
   624  007D8F  6F                 	db	111	;'o'
   625  007D90  20                 	db	32
   626  007D91  4D                 	db	77	;'M'
   627  007D92  75                 	db	117	;'u'
   628  007D93  65                 	db	101	;'e'
   629  007D94  73                 	db	115	;'s'
   630  007D95  74                 	db	116	;'t'
   631  007D96  72                 	db	114	;'r'
   632  007D97  65                 	db	101	;'e'
   633  007D98  6F                 	db	111	;'o'
   634  007D99  20                 	db	32
   635  007D9A  64                 	db	100	;'d'
   636  007D9B  65                 	db	101	;'e'
   637  007D9C  20                 	db	32
   638  007D9D  73                 	db	115	;'s'
   639  007D9E  65                 	db	101	;'e'
   640  007D9F  6E                 	db	110	;'n'
   641  007DA0  73                 	db	115	;'s'
   642  007DA1  6F                 	db	111	;'o'
   643  007DA2  72                 	db	114	;'r'
   644  007DA3  65                 	db	101	;'e'
   645  007DA4  73                 	db	115	;'s'
   646  007DA5  0D                 	db	13
   647  007DA6  0A                 	db	10
   648  007DA7  0A                 	db	10
   649  007DA8  00                 	db	0
   650  007DA9                     STR_32:
   651  007DA9  0D                 	db	13
   652  007DAA  0A                 	db	10
   653  007DAB  0A                 	db	10
   654  007DAC  45                 	db	69	;'E'
   655  007DAD  6C                 	db	108	;'l'
   656  007DAE  20                 	db	32
   657  007DAF  73                 	db	115	;'s'
   658  007DB0  65                 	db	101	;'e'
   659  007DB1  6E                 	db	110	;'n'
   660  007DB2  73                 	db	115	;'s'
   661  007DB3  6F                 	db	111	;'o'
   662  007DB4  72                 	db	114	;'r'
   663  007DB5  20                 	db	32
   664  007DB6  25                 	db	37
   665  007DB7  64                 	db	100	;'d'
   666  007DB8  20                 	db	32
   667  007DB9  64                 	db	100	;'d'
   668  007DBA  65                 	db	101	;'e'
   669  007DBB  74                 	db	116	;'t'
   670  007DBC  65                 	db	101	;'e'
   671  007DBD  63                 	db	99	;'c'
   672  007DBE  74                 	db	116	;'t'
   673  007DBF  61                 	db	97	;'a'
   674  007DC0  20                 	db	32
   675  007DC1  74                 	db	116	;'t'
   676  007DC2  69                 	db	105	;'i'
   677  007DC3  65                 	db	101	;'e'
   678  007DC4  72                 	db	114	;'r'
   679  007DC5  72                 	db	114	;'r'
   680  007DC6  61                 	db	97	;'a'
   681  007DC7  20                 	db	32
   682  007DC8  73                 	db	115	;'s'
   683  007DC9  65                 	db	101	;'e'
   684  007DCA  63                 	db	99	;'c'
   685  007DCB  61                 	db	97	;'a'
   686  007DCC  0D                 	db	13
   687  007DCD  0A                 	db	10
   688  007DCE  00                 	db	0
   689  007DCF                     STR_12:
   690  007DCF  0D                 	db	13
   691  007DD0  0A                 	db	10
   692  007DD1  20                 	db	32
   693  007DD2  4D                 	db	77	;'M'
   694  007DD3  69                 	db	105	;'i'
   695  007DD4  6E                 	db	110	;'n'
   696  007DD5  75                 	db	117	;'u'
   697  007DD6  74                 	db	116	;'t'
   698  007DD7  6F                 	db	111	;'o'
   699  007DD8  73                 	db	115	;'s'
   700  007DD9  20                 	db	32
   701  007DDA  64                 	db	100	;'d'
   702  007DDB  65                 	db	101	;'e'
   703  007DDC  20                 	db	32
   704  007DDD  72                 	db	114	;'r'
   705  007DDE  69                 	db	105	;'i'
   706  007DDF  65                 	db	101	;'e'
   707  007DE0  67                 	db	103	;'g'
   708  007DE1  6F                 	db	111	;'o'
   709  007DE2  20                 	db	32
   710  007DE3  65                 	db	101	;'e'
   711  007DE4  73                 	db	115	;'s'
   712  007DE5  74                 	db	116	;'t'
   713  007DE6  61                 	db	97	;'a'
   714  007DE7  62                 	db	98	;'b'
   715  007DE8  6C                 	db	108	;'l'
   716  007DE9  65                 	db	101	;'e'
   717  007DEA  63                 	db	99	;'c'
   718  007DEB  69                 	db	105	;'i'
   719  007DEC  64                 	db	100	;'d'
   720  007DED  6F                 	db	111	;'o'
   721  007DEE  73                 	db	115	;'s'
   722  007DEF  21                 	db	33
   723  007DF0  20                 	db	32
   724  007DF1  0D                 	db	13
   725  007DF2  0A                 	db	10
   726  007DF3  00                 	db	0
   727  007DF4                     STR_16:
   728  007DF4  0D                 	db	13
   729  007DF5  0A                 	db	10
   730  007DF6  20                 	db	32
   731  007DF7  49                 	db	73	;'I'
   732  007DF8  6E                 	db	110	;'n'
   733  007DF9  67                 	db	103	;'g'
   734  007DFA  72                 	db	114	;'r'
   735  007DFB  65                 	db	101	;'e'
   736  007DFC  73                 	db	115	;'s'
   737  007DFD  61                 	db	97	;'a'
   738  007DFE  20                 	db	32
   739  007DFF  75                 	db	117	;'u'
   740  007E00  6E                 	db	110	;'n'
   741  007E01  61                 	db	97	;'a'
   742  007E02  20                 	db	32
   743  007E03  6F                 	db	111	;'o'
   744  007E04  70                 	db	112	;'p'
   745  007E05  63                 	db	99	;'c'
   746  007E06  69                 	db	105	;'i'
   747  007E07  6F                 	db	111	;'o'
   748  007E08  6E                 	db	110	;'n'
   749  007E09  20                 	db	32
   750  007E0A  61                 	db	97	;'a'
   751  007E0B  20                 	db	32
   752  007E0C  52                 	db	82	;'R'
   753  007E0D  65                 	db	101	;'e'
   754  007E0E  61                 	db	97	;'a'
   755  007E0F  6C                 	db	108	;'l'
   756  007E10  69                 	db	105	;'i'
   757  007E11  7A                 	db	122	;'z'
   758  007E12  61                 	db	97	;'a'
   759  007E13  72                 	db	114	;'r'
   760  007E14  3A                 	db	58	;':'
   761  007E15  20                 	db	32
   762  007E16  0D                 	db	13
   763  007E17  0A                 	db	10
   764  007E18  00                 	db	0
   765  007E19                     STR_4:
   766  007E19  0D                 	db	13
   767  007E1A  0A                 	db	10
   768  007E1B  20                 	db	32
   769  007E1C  48                 	db	72	;'H'
   770  007E1D  4F                 	db	79	;'O'
   771  007E1E  52                 	db	82	;'R'
   772  007E1F  41                 	db	65	;'A'
   773  007E20  20                 	db	32
   774  007E21  45                 	db	69	;'E'
   775  007E22  53                 	db	83	;'S'
   776  007E23  54                 	db	84	;'T'
   777  007E24  41                 	db	65	;'A'
   778  007E25  42                 	db	66	;'B'
   779  007E26  4C                 	db	76	;'L'
   780  007E27  45                 	db	69	;'E'
   781  007E28  43                 	db	67	;'C'
   782  007E29  49                 	db	73	;'I'
   783  007E2A  44                 	db	68	;'D'
   784  007E2B  41                 	db	65	;'A'
   785  007E2C  20                 	db	32
   786  007E2D  43                 	db	67	;'C'
   787  007E2E  4F                 	db	79	;'O'
   788  007E2F  52                 	db	82	;'R'
   789  007E30  52                 	db	82	;'R'
   790  007E31  45                 	db	69	;'E'
   791  007E32  43                 	db	67	;'C'
   792  007E33  54                 	db	84	;'T'
   793  007E34  41                 	db	65	;'A'
   794  007E35  4D                 	db	77	;'M'
   795  007E36  45                 	db	69	;'E'
   796  007E37  4E                 	db	78	;'N'
   797  007E38  54                 	db	84	;'T'
   798  007E39  45                 	db	69	;'E'
   799  007E3A  20                 	db	32
   800  007E3B  0D                 	db	13
   801  007E3C  0A                 	db	10
   802  007E3D  00                 	db	0
   803  007E3E                     STR_18:
   804  007E3E  0D                 	db	13
   805  007E3F  0A                 	db	10
   806  007E40  20                 	db	32
   807  007E41  32                 	db	50	;'2'
   808  007E42  2E                 	db	46
   809  007E43  20                 	db	32
   810  007E44  41                 	db	65	;'A'
   811  007E45  73                 	db	115	;'s'
   812  007E46  69                 	db	105	;'i'
   813  007E47  67                 	db	103	;'g'
   814  007E48  6E                 	db	110	;'n'
   815  007E49  61                 	db	97	;'a'
   816  007E4A  72                 	db	114	;'r'
   817  007E4B  20                 	db	32
   818  007E4C  48                 	db	72	;'H'
   819  007E4D  6F                 	db	111	;'o'
   820  007E4E  72                 	db	114	;'r'
   821  007E4F  61                 	db	97	;'a'
   822  007E50  72                 	db	114	;'r'
   823  007E51  69                 	db	105	;'i'
   824  007E52  6F                 	db	111	;'o'
   825  007E53  73                 	db	115	;'s'
   826  007E54  20                 	db	32
   827  007E55  70                 	db	112	;'p'
   828  007E56  61                 	db	97	;'a'
   829  007E57  72                 	db	114	;'r'
   830  007E58  61                 	db	97	;'a'
   831  007E59  20                 	db	32
   832  007E5A  72                 	db	114	;'r'
   833  007E5B  65                 	db	101	;'e'
   834  007E5C  67                 	db	103	;'g'
   835  007E5D  61                 	db	97	;'a'
   836  007E5E  72                 	db	114	;'r'
   837  007E5F  20                 	db	32
   838  007E60  0D                 	db	13
   839  007E61  0A                 	db	10
   840  007E62  00                 	db	0
   841  007E63                     STR_21:
   842  007E63  0D                 	db	13
   843  007E64  0A                 	db	10
   844  007E65  20                 	db	32
   845  007E66  35                 	db	53	;'5'
   846  007E67  2E                 	db	46
   847  007E68  20                 	db	32
   848  007E69  4D                 	db	77	;'M'
   849  007E6A  6F                 	db	111	;'o'
   850  007E6B  73                 	db	115	;'s'
   851  007E6C  74                 	db	116	;'t'
   852  007E6D  72                 	db	114	;'r'
   853  007E6E  61                 	db	97	;'a'
   854  007E6F  72                 	db	114	;'r'
   855  007E70  20                 	db	32
   856  007E71  76                 	db	118	;'v'
   857  007E72  61                 	db	97	;'a'
   858  007E73  6C                 	db	108	;'l'
   859  007E74  6F                 	db	111	;'o'
   860  007E75  72                 	db	114	;'r'
   861  007E76  65                 	db	101	;'e'
   862  007E77  73                 	db	115	;'s'
   863  007E78  20                 	db	32
   864  007E79  73                 	db	115	;'s'
   865  007E7A  65                 	db	101	;'e'
   866  007E7B  6E                 	db	110	;'n'
   867  007E7C  73                 	db	115	;'s'
   868  007E7D  6F                 	db	111	;'o'
   869  007E7E  72                 	db	114	;'r'
   870  007E7F  65                 	db	101	;'e'
   871  007E80  73                 	db	115	;'s'
   872  007E81  20                 	db	32
   873  007E82  0D                 	db	13
   874  007E83  0A                 	db	10
   875  007E84  00                 	db	0
   876  007E85                     STR_15:
   877  007E85  0D                 	db	13
   878  007E86  0A                 	db	10
   879  007E87  53                 	db	83	;'S'
   880  007E88  65                 	db	101	;'e'
   881  007E89  6E                 	db	110	;'n'
   882  007E8A  73                 	db	115	;'s'
   883  007E8B  6F                 	db	111	;'o'
   884  007E8C  72                 	db	114	;'r'
   885  007E8D  65                 	db	101	;'e'
   886  007E8E  73                 	db	115	;'s'
   887  007E8F  20                 	db	32
   888  007E90  4C                 	db	76	;'L'
   889  007E91  65                 	db	101	;'e'
   890  007E92  69                 	db	105	;'i'
   891  007E93  64                 	db	100	;'d'
   892  007E94  6F                 	db	111	;'o'
   893  007E95  73                 	db	115	;'s'
   894  007E96  20                 	db	32
   895  007E97  63                 	db	99	;'c'
   896  007E98  6F                 	db	111	;'o'
   897  007E99  6E                 	db	110	;'n'
   898  007E9A  20                 	db	32
   899  007E9B  45                 	db	69	;'E'
   900  007E9C  78                 	db	120	;'x'
   901  007E9D  69                 	db	105	;'i'
   902  007E9E  74                 	db	116	;'t'
   903  007E9F  6F                 	db	111	;'o'
   904  007EA0  21                 	db	33
   905  007EA1  0D                 	db	13
   906  007EA2  0A                 	db	10
   907  007EA3  0A                 	db	10
   908  007EA4  00                 	db	0
   909  007EA5                     STR_20:
   910  007EA5  0D                 	db	13
   911  007EA6  0A                 	db	10
   912  007EA7  20                 	db	32
   913  007EA8  34                 	db	52	;'4'
   914  007EA9  2E                 	db	46
   915  007EAA  20                 	db	32
   916  007EAB  44                 	db	68	;'D'
   917  007EAC  61                 	db	97	;'a'
   918  007EAD  6D                 	db	109	;'m'
   919  007EAE  65                 	db	101	;'e'
   920  007EAF  20                 	db	32
   921  007EB0  64                 	db	100	;'d'
   922  007EB1  61                 	db	97	;'a'
   923  007EB2  74                 	db	116	;'t'
   924  007EB3  6F                 	db	111	;'o'
   925  007EB4  73                 	db	115	;'s'
   926  007EB5  20                 	db	32
   927  007EB6  64                 	db	100	;'d'
   928  007EB7  65                 	db	101	;'e'
   929  007EB8  6C                 	db	108	;'l'
   930  007EB9  20                 	db	32
   931  007EBA  73                 	db	115	;'s'
   932  007EBB  69                 	db	105	;'i'
   933  007EBC  73                 	db	115	;'s'
   934  007EBD  74                 	db	116	;'t'
   935  007EBE  65                 	db	101	;'e'
   936  007EBF  6D                 	db	109	;'m'
   937  007EC0  61                 	db	97	;'a'
   938  007EC1  20                 	db	32
   939  007EC2  0D                 	db	13
   940  007EC3  0A                 	db	10
   941  007EC4  00                 	db	0
   942  007EC5                     STR_29:
   943  007EC5  0D                 	db	13
   944  007EC6  0A                 	db	10
   945  007EC7  0A                 	db	10
   946  007EC8  4C                 	db	76	;'L'
   947  007EC9  61                 	db	97	;'a'
   948  007ECA  20                 	db	32
   949  007ECB  48                 	db	72	;'H'
   950  007ECC  75                 	db	117	;'u'
   951  007ECD  6D                 	db	109	;'m'
   952  007ECE  65                 	db	101	;'e'
   953  007ECF  64                 	db	100	;'d'
   954  007ED0  61                 	db	97	;'a'
   955  007ED1  64                 	db	100	;'d'
   956  007ED2  20                 	db	32
   957  007ED3  41                 	db	65	;'A'
   958  007ED4  6D                 	db	109	;'m'
   959  007ED5  62                 	db	98	;'b'
   960  007ED6  69                 	db	105	;'i'
   961  007ED7  65                 	db	101	;'e'
   962  007ED8  6E                 	db	110	;'n'
   963  007ED9  74                 	db	116	;'t'
   964  007EDA  65                 	db	101	;'e'
   965  007EDB  20                 	db	32
   966  007EDC  65                 	db	101	;'e'
   967  007EDD  73                 	db	115	;'s'
   968  007EDE  3A                 	db	58	;':'
   969  007EDF  20                 	db	32
   970  007EE0  25                 	db	37
   971  007EE1  64                 	db	100	;'d'
   972  007EE2  0D                 	db	13
   973  007EE3  0A                 	db	10
   974  007EE4  00                 	db	0
   975  007EE5                     STR_3:
   976  007EE5  0D                 	db	13
   977  007EE6  0A                 	db	10
   978  007EE7  20                 	db	32
   979  007EE8  45                 	db	69	;'E'
   980  007EE9  6E                 	db	110	;'n'
   981  007EEA  76                 	db	118	;'v'
   982  007EEB  69                 	db	105	;'i'
   983  007EEC  65                 	db	101	;'e'
   984  007EED  20                 	db	32
   985  007EEE  6C                 	db	108	;'l'
   986  007EEF  6F                 	db	111	;'o'
   987  007EF0  73                 	db	115	;'s'
   988  007EF1  20                 	db	32
   989  007EF2  4D                 	db	77	;'M'
   990  007EF3  69                 	db	105	;'i'
   991  007EF4  6E                 	db	110	;'n'
   992  007EF5  75                 	db	117	;'u'
   993  007EF6  74                 	db	116	;'t'
   994  007EF7  6F                 	db	111	;'o'
   995  007EF8  73                 	db	115	;'s'
   996  007EF9  20                 	db	32
   997  007EFA  45                 	db	69	;'E'
   998  007EFB  6A                 	db	106	;'j'
   999  007EFC  3A                 	db	58	;':'
  1000  007EFD  20                 	db	32
  1001  007EFE  32                 	db	50	;'2'
  1002  007EFF  35                 	db	53	;'5'
  1003  007F00  20                 	db	32
  1004  007F01  0D                 	db	13
  1005  007F02  0A                 	db	10
  1006  007F03  00                 	db	0
  1007  007F04                     STR_30:
  1008  007F04  0D                 	db	13
  1009  007F05  0A                 	db	10
  1010  007F06  0A                 	db	10
  1011  007F07  4C                 	db	76	;'L'
  1012  007F08  61                 	db	97	;'a'
  1013  007F09  20                 	db	32
  1014  007F0A  54                 	db	84	;'T'
  1015  007F0B  65                 	db	101	;'e'
  1016  007F0C  6D                 	db	109	;'m'
  1017  007F0D  70                 	db	112	;'p'
  1018  007F0E  65                 	db	101	;'e'
  1019  007F0F  72                 	db	114	;'r'
  1020  007F10  61                 	db	97	;'a'
  1021  007F11  74                 	db	116	;'t'
  1022  007F12  75                 	db	117	;'u'
  1023  007F13  72                 	db	114	;'r'
  1024  007F14  61                 	db	97	;'a'
  1025  007F15  20                 	db	32
  1026  007F16  65                 	db	101	;'e'
  1027  007F17  73                 	db	115	;'s'
  1028  007F18  3A                 	db	58	;':'
  1029  007F19  20                 	db	32
  1030  007F1A  25                 	db	37
  1031  007F1B  64                 	db	100	;'d'
  1032  007F1C  20                 	db	32
  1033  007F1D  43                 	db	67	;'C'
  1034  007F1E  0D                 	db	13
  1035  007F1F  0A                 	db	10
  1036  007F20  00                 	db	0
  1037  007F21                     STR_14:
  1038  007F21  0D                 	db	13
  1039  007F22  0A                 	db	10
  1040  007F23  44                 	db	68	;'D'
  1041  007F24  61                 	db	97	;'a'
  1042  007F25  6D                 	db	109	;'m'
  1043  007F26  65                 	db	101	;'e'
  1044  007F27  20                 	db	32
  1045  007F28  44                 	db	68	;'D'
  1046  007F29  41                 	db	65	;'A'
  1047  007F2A  54                 	db	84	;'T'
  1048  007F2B  4F                 	db	79	;'O'
  1049  007F2C  53                 	db	83	;'S'
  1050  007F2D  20                 	db	32
  1051  007F2E  44                 	db	68	;'D'
  1052  007F2F  45                 	db	69	;'E'
  1053  007F30  4C                 	db	76	;'L'
  1054  007F31  20                 	db	32
  1055  007F32  53                 	db	83	;'S'
  1056  007F33  45                 	db	69	;'E'
  1057  007F34  4E                 	db	78	;'N'
  1058  007F35  53                 	db	83	;'S'
  1059  007F36  4F                 	db	79	;'O'
  1060  007F37  52                 	db	82	;'R'
  1061  007F38  20                 	db	32
  1062  007F39  3A                 	db	58	;':'
  1063  007F3A  0D                 	db	13
  1064  007F3B  0A                 	db	10
  1065  007F3C  00                 	db	0
  1066  007F3D                     STR_17:
  1067  007F3D  0D                 	db	13
  1068  007F3E  0A                 	db	10
  1069  007F3F  20                 	db	32
  1070  007F40  31                 	db	49	;'1'
  1071  007F41  2E                 	db	46
  1072  007F42  20                 	db	32
  1073  007F43  46                 	db	70	;'F'
  1074  007F44  69                 	db	105	;'i'
  1075  007F45  6A                 	db	106	;'j'
  1076  007F46  61                 	db	97	;'a'
  1077  007F47  72                 	db	114	;'r'
  1078  007F48  20                 	db	32
  1079  007F49  48                 	db	72	;'H'
  1080  007F4A  6F                 	db	111	;'o'
  1081  007F4B  72                 	db	114	;'r'
  1082  007F4C  61                 	db	97	;'a'
  1083  007F4D  20                 	db	32
  1084  007F4E  41                 	db	65	;'A'
  1085  007F4F  63                 	db	99	;'c'
  1086  007F50  74                 	db	116	;'t'
  1087  007F51  75                 	db	117	;'u'
  1088  007F52  61                 	db	97	;'a'
  1089  007F53  6C                 	db	108	;'l'
  1090  007F54  20                 	db	32
  1091  007F55  0D                 	db	13
  1092  007F56  0A                 	db	10
  1093  007F57  00                 	db	0
  1094  007F58                     STR_8:
  1095  007F58  0D                 	db	13
  1096  007F59  0A                 	db	10
  1097  007F5A  20                 	db	32
  1098  007F5B  48                 	db	72	;'H'
  1099  007F5C  6F                 	db	111	;'o'
  1100  007F5D  72                 	db	114	;'r'
  1101  007F5E  61                 	db	97	;'a'
  1102  007F5F  72                 	db	114	;'r'
  1103  007F60  69                 	db	105	;'i'
  1104  007F61  6F                 	db	111	;'o'
  1105  007F62  20                 	db	32
  1106  007F63  4D                 	db	77	;'M'
  1107  007F64  6F                 	db	111	;'o'
  1108  007F65  64                 	db	100	;'d'
  1109  007F66  69                 	db	105	;'i'
  1110  007F67  66                 	db	102	;'f'
  1111  007F68  69                 	db	105	;'i'
  1112  007F69  63                 	db	99	;'c'
  1113  007F6A  61                 	db	97	;'a'
  1114  007F6B  64                 	db	100	;'d'
  1115  007F6C  6F                 	db	111	;'o'
  1116  007F6D  21                 	db	33
  1117  007F6E  20                 	db	32
  1118  007F6F  0D                 	db	13
  1119  007F70  0A                 	db	10
  1120  007F71  00                 	db	0
  1121  007F72                     STR_5:
  1122  007F72  0D                 	db	13
  1123  007F73  0A                 	db	10
  1124  007F74  20                 	db	32
  1125  007F75  4F                 	db	79	;'O'
  1126  007F76  50                 	db	80	;'P'
  1127  007F77  43                 	db	67	;'C'
  1128  007F78  49                 	db	73	;'I'
  1129  007F79  4F                 	db	79	;'O'
  1130  007F7A  4E                 	db	78	;'N'
  1131  007F7B  45                 	db	69	;'E'
  1132  007F7C  53                 	db	83	;'S'
  1133  007F7D  20                 	db	32
  1134  007F7E  44                 	db	68	;'D'
  1135  007F7F  45                 	db	69	;'E'
  1136  007F80  20                 	db	32
  1137  007F81  52                 	db	82	;'R'
  1138  007F82  45                 	db	69	;'E'
  1139  007F83  47                 	db	71	;'G'
  1140  007F84  41                 	db	65	;'A'
  1141  007F85  44                 	db	68	;'D'
  1142  007F86  4F                 	db	79	;'O'
  1143  007F87  20                 	db	32
  1144  007F88  0D                 	db	13
  1145  007F89  0A                 	db	10
  1146  007F8A  00                 	db	0
  1147  007F8B                     STR_27:
  1148  007F8B  45                 	db	69	;'E'
  1149  007F8C  72                 	db	114	;'r'
  1150  007F8D  72                 	db	114	;'r'
  1151  007F8E  6F                 	db	111	;'o'
  1152  007F8F  72                 	db	114	;'r'
  1153  007F90  20                 	db	32
  1154  007F91  64                 	db	100	;'d'
  1155  007F92  65                 	db	101	;'e'
  1156  007F93  20                 	db	32
  1157  007F94  6C                 	db	108	;'l'
  1158  007F95  65                 	db	101	;'e'
  1159  007F96  63                 	db	99	;'c'
  1160  007F97  74                 	db	116	;'t'
  1161  007F98  75                 	db	117	;'u'
  1162  007F99  72                 	db	114	;'r'
  1163  007F9A  61                 	db	97	;'a'
  1164  007F9B  20                 	db	32
  1165  007F9C  44                 	db	68	;'D'
  1166  007F9D  48                 	db	72	;'H'
  1167  007F9E  54                 	db	84	;'T'
  1168  007F9F  31                 	db	49	;'1'
  1169  007FA0  31                 	db	49	;'1'
  1170  007FA1  0D                 	db	13
  1171  007FA2  0A                 	db	10
  1172  007FA3  00                 	db	0
  1173  007FA4                     STR_9:
  1174  007FA4  0D                 	db	13
  1175  007FA5  0A                 	db	10
  1176  007FA6  20                 	db	32
  1177  007FA7  54                 	db	84	;'T'
  1178  007FA8  49                 	db	73	;'I'
  1179  007FA9  45                 	db	69	;'E'
  1180  007FAA  4D                 	db	77	;'M'
  1181  007FAB  50                 	db	80	;'P'
  1182  007FAC  4F                 	db	79	;'O'
  1183  007FAD  20                 	db	32
  1184  007FAE  44                 	db	68	;'D'
  1185  007FAF  45                 	db	69	;'E'
  1186  007FB0  20                 	db	32
  1187  007FB1  52                 	db	82	;'R'
  1188  007FB2  45                 	db	69	;'E'
  1189  007FB3  47                 	db	71	;'G'
  1190  007FB4  41                 	db	65	;'A'
  1191  007FB5  44                 	db	68	;'D'
  1192  007FB6  4F                 	db	79	;'O'
  1193  007FB7  20                 	db	32
  1194  007FB8  0D                 	db	13
  1195  007FB9  0A                 	db	10
  1196  007FBA  00                 	db	0
  1197  007FBB                     STR_28:
  1198  007FBB  44                 	db	68	;'D'
  1199  007FBC  48                 	db	72	;'H'
  1200  007FBD  54                 	db	84	;'T'
  1201  007FBE  31                 	db	49	;'1'
  1202  007FBF  31                 	db	49	;'1'
  1203  007FC0  20                 	db	32
  1204  007FC1  4E                 	db	78	;'N'
  1205  007FC2  4F                 	db	79	;'O'
  1206  007FC3  20                 	db	32
  1207  007FC4  52                 	db	82	;'R'
  1208  007FC5  45                 	db	69	;'E'
  1209  007FC6  53                 	db	83	;'S'
  1210  007FC7  50                 	db	80	;'P'
  1211  007FC8  4F                 	db	79	;'O'
  1212  007FC9  4E                 	db	78	;'N'
  1213  007FCA  44                 	db	68	;'D'
  1214  007FCB  49                 	db	73	;'I'
  1215  007FCC  4F                 	db	79	;'O'
  1216  007FCD  0D                 	db	13
  1217  007FCE  0A                 	db	10
  1218  007FCF  00                 	db	0
  1219  007FD0                     STR_1:
  1220  007FD0  0D                 	db	13
  1221  007FD1  0A                 	db	10
  1222  007FD2  20                 	db	32
  1223  007FD3  46                 	db	70	;'F'
  1224  007FD4  49                 	db	73	;'I'
  1225  007FD5  4A                 	db	74	;'J'
  1226  007FD6  41                 	db	65	;'A'
  1227  007FD7  20                 	db	32
  1228  007FD8  48                 	db	72	;'H'
  1229  007FD9  4F                 	db	79	;'O'
  1230  007FDA  52                 	db	82	;'R'
  1231  007FDB  41                 	db	65	;'A'
  1232  007FDC  20                 	db	32
  1233  007FDD  0D                 	db	13
  1234  007FDE  0A                 	db	10
  1235  007FDF  00                 	db	0
  1236  007FE0                     STR_26:
  1237  007FE0  25                 	db	37
  1238  007FE1  64                 	db	100	;'d'
  1239  007FE2  20                 	db	32
  1240  007FE3  7C                 	db	124
  1241  007FE4  20                 	db	32
  1242  007FE5  25                 	db	37
  1243  007FE6  64                 	db	100	;'d'
  1244  007FE7  20                 	db	32
  1245  007FE8  7C                 	db	124
  1246  007FE9  20                 	db	32
  1247  007FEA  25                 	db	37
  1248  007FEB  64                 	db	100	;'d'
  1249  007FEC  20                 	db	32
  1250  007FED  0D                 	db	13
  1251  007FEE  0A                 	db	10
  1252  007FEF  00                 	db	0
  1253  007FF0                     STR_22:
  1254  007FF0  0D                 	db	13
  1255  007FF1  0A                 	db	10
  1256  007FF2  20                 	db	32
  1257  007FF3  4F                 	db	79	;'O'
  1258  007FF4  70                 	db	112	;'p'
  1259  007FF5  63                 	db	99	;'c'
  1260  007FF6  69                 	db	105	;'i'
  1261  007FF7  6F                 	db	111	;'o'
  1262  007FF8  6E                 	db	110	;'n'
  1263  007FF9  3A                 	db	58	;':'
  1264  007FFA  20                 	db	32
  1265  007FFB  20                 	db	32
  1266  007FFC  0D                 	db	13
  1267  007FFD  00                 	db	0
  1268  0000                     
  1269                           ; #config settings
  1270  007FFE  00                 	db	0	; dummy byte at the end
  1271  0000                     
  1272                           	psect	cinit
  1273  001F3C                     __pcinit:
  1274                           	opt callstack 0
  1275  001F3C                     start_initialization:
  1276                           	opt callstack 0
  1277  001F3C                     __initialization:
  1278                           	opt callstack 0
  1279                           
  1280                           ; Initialize objects allocated to BANK0 (4 bytes)
  1281                           ; load TBLPTR registers with __pidataBANK0
  1282  001F3C  0EDC               	movlw	low __pidataBANK0
  1283  001F3E  6EF6               	movwf	tblptrl,c
  1284  001F40  0E22               	movlw	high __pidataBANK0
  1285  001F42  6EF7               	movwf	tblptrh,c
  1286  001F44  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1287  001F46  6EF8               	movwf	tblptru,c
  1288  001F48  EE00  F0FA         	lfsr	0,__pdataBANK0
  1289  001F4C  EE10 F004          	lfsr	1,4
  1290  001F50                     copy_data0:
  1291  001F50  0009               	tblrd		*+
  1292  001F52  CFF5 FFEE          	movff	tablat,postinc0
  1293  001F56  50E5               	movf	postdec1,w,c
  1294  001F58  50E1               	movf	fsr1l,w,c
  1295  001F5A  E1FA               	bnz	copy_data0
  1296                           
  1297                           ; Clear objects allocated to BANK1 (72 bytes)
  1298  001F5C  EE01  F000         	lfsr	0,__pbssBANK1
  1299  001F60  0E48               	movlw	72
  1300  001F62                     clear_0:
  1301  001F62  6AEE               	clrf	postinc0,c
  1302  001F64  06E8               	decf	wreg,f,c
  1303  001F66  E1FD               	bnz	clear_0
  1304                           
  1305                           ; Clear objects allocated to BANK0 (78 bytes)
  1306  001F68  EE00  F060         	lfsr	0,__pbssBANK0
  1307  001F6C  0E4E               	movlw	78
  1308  001F6E                     clear_1:
  1309  001F6E  6AEE               	clrf	postinc0,c
  1310  001F70  06E8               	decf	wreg,f,c
  1311  001F72  E1FD               	bnz	clear_1
  1312                           
  1313                           ; Clear objects allocated to COMRAM (1 bytes)
  1314  001F74  6A5E               	clrf	__pbssCOMRAM& (0+255),c
  1315  001F76                     end_of_initialization:
  1316                           	opt callstack 0
  1317  001F76                     __end_of__initialization:
  1318                           	opt callstack 0
  1319  001F76  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1320  001F78  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1321  001F7A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1322  001F7C  6EF8               	movwf	tblptru,c
  1323  001F7E  0100               	movlb	0
  1324  001F80  EF85  F00C         	goto	_main	;jump to C main() function
  1325                           
  1326                           	psect	bssCOMRAM
  1327  00005E                     __pbssCOMRAM:
  1328                           	opt callstack 0
  1329  00005E                     _esperandoDatos:
  1330                           	opt callstack 0
  1331  00005E                     	ds	1
  1332                           
  1333                           	psect	bssBANK0
  1334  000060                     __pbssBANK0:
  1335                           	opt callstack 0
  1336  000060                     _sensores:
  1337                           	opt callstack 0
  1338  000060                     	ds	24
  1339  000078                     _nout:
  1340                           	opt callstack 0
  1341  000078                     	ds	2
  1342  00007A                     _width:
  1343                           	opt callstack 0
  1344  00007A                     	ds	2
  1345  00007C                     _prec:
  1346                           	opt callstack 0
  1347  00007C                     	ds	2
  1348  00007E                     _flags:
  1349                           	opt callstack 0
  1350  00007E                     	ds	2
  1351  000080                     _contInterrupciones:
  1352                           	opt callstack 0
  1353  000080                     	ds	2
  1354  000082                     _peticionLecturaSensores:
  1355                           	opt callstack 0
  1356  000082                     	ds	1
  1357  000083                     _regando:
  1358                           	opt callstack 0
  1359  000083                     	ds	1
  1360  000084                     _minutosTranscurridos:
  1361                           	opt callstack 0
  1362  000084                     	ds	1
  1363  000085                     _minutosRegar:
  1364                           	opt callstack 0
  1365  000085                     	ds	1
  1366  000086                     _overflowTimer:
  1367                           	opt callstack 0
  1368  000086                     	ds	1
  1369  000087                     _datoRecibido:
  1370                           	opt callstack 0
  1371  000087                     	ds	1
  1372  000088                     _segundos:
  1373                           	opt callstack 0
  1374  000088                     	ds	1
  1375  000089                     _minutos:
  1376                           	opt callstack 0
  1377  000089                     	ds	1
  1378  00008A                     _hora:
  1379                           	opt callstack 0
  1380  00008A                     	ds	1
  1381  00008B                     _esperaDatoConcluida:
  1382                           	opt callstack 0
  1383  00008B                     	ds	1
  1384  00008C                     _byteUart:
  1385                           	opt callstack 0
  1386  00008C                     	ds	1
  1387  00008D                     _tiempoInactividadTrans:
  1388                           	opt callstack 0
  1389  00008D                     	ds	1
  1390  00008E                     _dbuf:
  1391                           	opt callstack 0
  1392  00008E                     	ds	32
  1393                           
  1394                           	psect	dataBANK0
  1395  0000FA                     __pdataBANK0:
  1396                           	opt callstack 0
  1397  0000FA                     _VALOR_TIMER0:
  1398                           	opt callstack 0
  1399  0000FA                     	ds	2
  1400  0000FC                     _VALOR_TIMER0UART:
  1401                           	opt callstack 0
  1402  0000FC                     	ds	2
  1403                           
  1404                           	psect	bssBANK1
  1405  000100                     __pbssBANK1:
  1406                           	opt callstack 0
  1407  000100                     _horarios:
  1408                           	opt callstack 0
  1409  000100                     	ds	72
  1410                           
  1411                           	psect	cstackBANK0
  1412  0000AE                     __pcstackBANK0:
  1413                           	opt callstack 0
  1414  0000AE                     ?_sprintf:
  1415                           	opt callstack 0
  1416  0000AE                     sprintf@s:
  1417                           	opt callstack 0
  1418                           
  1419                           ; 2 bytes @ 0x0
  1420  0000AE                     	ds	2
  1421  0000B0                     sprintf@fmt:
  1422                           	opt callstack 0
  1423                           
  1424                           ; 2 bytes @ 0x2
  1425  0000B0                     	ds	10
  1426  0000BA                     sprintf@ap:
  1427                           	opt callstack 0
  1428                           
  1429                           ; 2 bytes @ 0xC
  1430  0000BA                     	ds	2
  1431  0000BC                     sprintf@f:
  1432                           	opt callstack 0
  1433                           
  1434                           ; 6 bytes @ 0xE
  1435  0000BC                     	ds	6
  1436  0000C2                     dameDatosSistema@buffer:
  1437                           	opt callstack 0
  1438  0000C2                     mostrarDatosSensores@buffer:
  1439                           	opt callstack 0
  1440  0000C2                     mostrarDatosSensoresWIFI@buffer:
  1441                           	opt callstack 0
  1442                           
  1443                           ; 50 bytes @ 0x14
  1444  0000C2                     	ds	50
  1445  0000F4                     mostrarDatosSensores@temperatura:
  1446                           	opt callstack 0
  1447  0000F4                     mostrarDatosSensoresWIFI@temperatura:
  1448                           	opt callstack 0
  1449  0000F4                     dameDatosSistema@i:
  1450                           	opt callstack 0
  1451                           
  1452                           ; 2 bytes @ 0x46
  1453  0000F4                     	ds	1
  1454  0000F5                     mostrarDatosSensores@humedad:
  1455                           	opt callstack 0
  1456  0000F5                     mostrarDatosSensoresWIFI@humedad:
  1457                           	opt callstack 0
  1458                           
  1459                           ; 1 bytes @ 0x47
  1460  0000F5                     	ds	1
  1461  0000F6                     mostrarDatosSensores@i:
  1462                           	opt callstack 0
  1463  0000F6                     mostrarDatosSensoresWIFI@i:
  1464                           	opt callstack 0
  1465                           
  1466                           ; 2 bytes @ 0x48
  1467  0000F6                     	ds	2
  1468  0000F8                     mostrarDatosSensores@porcentajeHumedad:
  1469                           	opt callstack 0
  1470                           
  1471                           ; 2 bytes @ 0x4A
  1472  0000F8                     	ds	2
  1473                           
  1474                           	psect	cstackCOMRAM
  1475  000001                     __pcstackCOMRAM:
  1476                           	opt callstack 0
  1477  000001                     ??_i2c_espera:
  1478  000001                     ??_convertirDato:
  1479  000001                     ??_DHT11_Start:
  1480  000001                     ?_strlen:
  1481                           	opt callstack 0
  1482  000001                     ?_horaRegar:
  1483                           	opt callstack 0
  1484  000001                     ?_dameHumedadSuelo:
  1485                           	opt callstack 0
  1486  000001                     ?___wmul:
  1487                           	opt callstack 0
  1488  000001                     ?___awdiv:
  1489                           	opt callstack 0
  1490  000001                     ?___aldiv:
  1491                           	opt callstack 0
  1492  000001                     ?___aodiv:
  1493                           	opt callstack 0
  1494  000001                     ?___aomod:
  1495                           	opt callstack 0
  1496  000001                     UART_write@dato:
  1497                           	opt callstack 0
  1498  000001                     DHT11_ReadData@i:
  1499                           	opt callstack 0
  1500  000001                     check_response@respuesta:
  1501                           	opt callstack 0
  1502  000001                     ___wmul@multiplier:
  1503                           	opt callstack 0
  1504  000001                     ___awdiv@dividend:
  1505                           	opt callstack 0
  1506  000001                     fputc@c:
  1507                           	opt callstack 0
  1508  000001                     strlen@s:
  1509                           	opt callstack 0
  1510  000001                     ___aldiv@dividend:
  1511                           	opt callstack 0
  1512  000001                     ___aodiv@dividend:
  1513                           	opt callstack 0
  1514  000001                     ___aomod@dividend:
  1515                           	opt callstack 0
  1516                           
  1517                           ; 8 bytes @ 0x0
  1518  000001                     	ds	1
  1519  000002                     i2c_envia_dato@dato:
  1520                           	opt callstack 0
  1521  000002                     i2c_recibe_dato@datoleido:
  1522                           	opt callstack 0
  1523  000002                     convertirDato@dato:
  1524                           	opt callstack 0
  1525  000002                     DHT11_ReadData@data:
  1526                           	opt callstack 0
  1527  000002                     UART_printf@cadena:
  1528                           	opt callstack 0
  1529                           
  1530                           ; 2 bytes @ 0x1
  1531  000002                     	ds	1
  1532  000003                     ??_dameHumedadSuelo:
  1533  000003                     escribe_rtc@dato:
  1534                           	opt callstack 0
  1535  000003                     leer_rtc@direccion:
  1536                           	opt callstack 0
  1537  000003                     convertirDato@datoR:
  1538                           	opt callstack 0
  1539  000003                     leer_eeprom@direccion:
  1540                           	opt callstack 0
  1541  000003                     ___wmul@multiplicand:
  1542                           	opt callstack 0
  1543  000003                     ___awdiv@divisor:
  1544                           	opt callstack 0
  1545  000003                     fputc@fp:
  1546                           	opt callstack 0
  1547  000003                     strlen@a:
  1548                           	opt callstack 0
  1549                           
  1550                           ; 2 bytes @ 0x2
  1551  000003                     	ds	1
  1552  000004                     escribe_rtc@direccion:
  1553                           	opt callstack 0
  1554  000004                     leer_rtc@dato:
  1555                           	opt callstack 0
  1556  000004                     dameTemperaturaHumedad@Humedad:
  1557                           	opt callstack 0
  1558                           
  1559                           ; 2 bytes @ 0x3
  1560  000004                     	ds	1
  1561  000005                     ??_fputc:
  1562  000005                     ??_setRtc:
  1563  000005                     ??_leer_eeprom:
  1564  000005                     dameHumedadSuelo@canalLeer:
  1565                           	opt callstack 0
  1566  000005                     ___awdiv@counter:
  1567                           	opt callstack 0
  1568  000005                     ___wmul@product:
  1569                           	opt callstack 0
  1570  000005                     ___aldiv@divisor:
  1571                           	opt callstack 0
  1572                           
  1573                           ; 4 bytes @ 0x4
  1574  000005                     	ds	1
  1575  000006                     setRtc@direccion:
  1576                           	opt callstack 0
  1577  000006                     leer_eeprom@dato:
  1578                           	opt callstack 0
  1579  000006                     ___awdiv@sign:
  1580                           	opt callstack 0
  1581  000006                     dameTemperaturaHumedad@Temperatura:
  1582                           	opt callstack 0
  1583                           
  1584                           ; 2 bytes @ 0x5
  1585  000006                     	ds	1
  1586  000007                     ??_lecturaAnalogaSensores:
  1587  000007                     setRtc@dato:
  1588                           	opt callstack 0
  1589  000007                     inicializarObjetos@i:
  1590                           	opt callstack 0
  1591  000007                     escribe_eeprom@direccion:
  1592                           	opt callstack 0
  1593  000007                     leeHorariosMemoria@contMemoria:
  1594                           	opt callstack 0
  1595  000007                     ___awdiv@quotient:
  1596                           	opt callstack 0
  1597  000007                     constructorSensor@s:
  1598                           	opt callstack 0
  1599                           
  1600                           ; 3 bytes @ 0x6
  1601  000007                     	ds	1
  1602  000008                     ??_dameTemperaturaHumedad:
  1603  000008                     setRtc@datoCapturado:
  1604                           	opt callstack 0
  1605  000008                     lecturaAnalogaSensores@i:
  1606                           	opt callstack 0
  1607                           
  1608                           ; 2 bytes @ 0x7
  1609  000008                     	ds	1
  1610  000009                     escribe_eeprom@dato:
  1611                           	opt callstack 0
  1612  000009                     ___aldiv@counter:
  1613                           	opt callstack 0
  1614  000009                     setRtc@i:
  1615                           	opt callstack 0
  1616  000009                     leeHorariosMemoria@i:
  1617                           	opt callstack 0
  1618  000009                     ___aodiv@divisor:
  1619                           	opt callstack 0
  1620  000009                     ___aomod@divisor:
  1621                           	opt callstack 0
  1622                           
  1623                           ; 8 bytes @ 0x8
  1624  000009                     	ds	1
  1625  00000A                     ??_escribe_eeprom:
  1626  00000A                     constructorSensor@humedad:
  1627                           	opt callstack 0
  1628  00000A                     ___aldiv@sign:
  1629                           	opt callstack 0
  1630  00000A                     dameTemperaturaHumedad@checkSum:
  1631                           	opt callstack 0
  1632  00000A                     fputs@s:
  1633                           	opt callstack 0
  1634                           
  1635                           ; 2 bytes @ 0x9
  1636  00000A                     	ds	1
  1637  00000B                     constructorSensor@pin:
  1638                           	opt callstack 0
  1639  00000B                     setRtc@Rx:
  1640                           	opt callstack 0
  1641  00000B                     escribeHorariosMemoria@contMemoria:
  1642                           	opt callstack 0
  1643  00000B                     ___aldiv@quotient:
  1644                           	opt callstack 0
  1645                           
  1646                           ; 4 bytes @ 0xA
  1647  00000B                     	ds	1
  1648  00000C                     dameTemperaturaHumedad@humedadDecimal:
  1649                           	opt callstack 0
  1650  00000C                     restablecerDatosSensor@i:
  1651                           	opt callstack 0
  1652  00000C                     fputs@fp:
  1653                           	opt callstack 0
  1654                           
  1655                           ; 2 bytes @ 0xB
  1656  00000C                     	ds	1
  1657  00000D                     dameTemperaturaHumedad@temperaturaDecimal:
  1658                           	opt callstack 0
  1659  00000D                     escribeHorariosMemoria@i:
  1660                           	opt callstack 0
  1661                           
  1662                           ; 2 bytes @ 0xC
  1663  00000D                     	ds	1
  1664  00000E                     lecturaWifi@Rx:
  1665                           	opt callstack 0
  1666  00000E                     dameTemperaturaHumedad@humedad:
  1667                           	opt callstack 0
  1668  00000E                     fputs@c:
  1669                           	opt callstack 0
  1670                           
  1671                           ; 1 bytes @ 0xD
  1672  00000E                     	ds	1
  1673  00000F                     asignarHorarios@hora:
  1674                           	opt callstack 0
  1675  00000F                     setTiempoRegar@tiempoRegar:
  1676                           	opt callstack 0
  1677  00000F                     dameTemperaturaHumedad@temperatura:
  1678                           	opt callstack 0
  1679  00000F                     lecturaWifi@i:
  1680                           	opt callstack 0
  1681  00000F                     fputs@i:
  1682                           	opt callstack 0
  1683  00000F                     UART_init@BAUD:
  1684                           	opt callstack 0
  1685                           
  1686                           ; 4 bytes @ 0xE
  1687  00000F                     	ds	1
  1688  000010                     ?_estaSeco:
  1689                           	opt callstack 0
  1690  000010                     asignarHorarios@datoCapturado:
  1691                           	opt callstack 0
  1692  000010                     setTiempoRegar@hora:
  1693                           	opt callstack 0
  1694  000010                     estaSeco@s:
  1695                           	opt callstack 0
  1696                           
  1697                           ; 3 bytes @ 0xF
  1698  000010                     	ds	1
  1699  000011                     ?_pad:
  1700                           	opt callstack 0
  1701  000011                     ___aodiv@counter:
  1702                           	opt callstack 0
  1703  000011                     ___aomod@counter:
  1704                           	opt callstack 0
  1705  000011                     asignarHorarios@i:
  1706                           	opt callstack 0
  1707  000011                     setTiempoRegar@i:
  1708                           	opt callstack 0
  1709  000011                     pad@fp:
  1710                           	opt callstack 0
  1711                           
  1712                           ; 2 bytes @ 0x10
  1713  000011                     	ds	1
  1714  000012                     ___aodiv@sign:
  1715                           	opt callstack 0
  1716  000012                     ___aomod@sign:
  1717                           	opt callstack 0
  1718                           
  1719                           ; 1 bytes @ 0x11
  1720  000012                     	ds	1
  1721  000013                     ?_abs:
  1722                           	opt callstack 0
  1723  000013                     _estaSeco$770:
  1724                           	opt callstack 0
  1725  000013                     asignarHorarios@Rx:
  1726                           	opt callstack 0
  1727  000013                     setTiempoRegar@i_834:
  1728                           	opt callstack 0
  1729  000013                     pad@buf:
  1730                           	opt callstack 0
  1731  000013                     abs@a:
  1732                           	opt callstack 0
  1733  000013                     ___aodiv@quotient:
  1734                           	opt callstack 0
  1735                           
  1736                           ; 8 bytes @ 0x12
  1737  000013                     	ds	1
  1738  000014                     estaSeco@temperatura:
  1739                           	opt callstack 0
  1740                           
  1741                           ; 1 bytes @ 0x13
  1742  000014                     	ds	1
  1743  000015                     ??_abs:
  1744  000015                     ??_encenderBombas:
  1745  000015                     setTiempoRegar@datoCapturado:
  1746                           	opt callstack 0
  1747  000015                     pad@p:
  1748                           	opt callstack 0
  1749                           
  1750                           ; 2 bytes @ 0x14
  1751  000015                     	ds	1
  1752  000016                     setTiempoRegar@Rx:
  1753                           	opt callstack 0
  1754                           
  1755                           ; 1 bytes @ 0x15
  1756  000016                     	ds	1
  1757  000017                     ??_pad:
  1758  000017                     encenderBombas@flagSeco:
  1759                           	opt callstack 0
  1760  000017                     _UART_init$1778:
  1761                           	opt callstack 0
  1762                           
  1763                           ; 4 bytes @ 0x16
  1764  000017                     	ds	1
  1765  000018                     encenderBombas@i:
  1766                           	opt callstack 0
  1767  000018                     pad@i:
  1768                           	opt callstack 0
  1769                           
  1770                           ; 2 bytes @ 0x17
  1771  000018                     	ds	2
  1772  00001A                     pad@w:
  1773                           	opt callstack 0
  1774                           
  1775                           ; 2 bytes @ 0x19
  1776  00001A                     	ds	2
  1777  00001C                     ?_dtoa:
  1778                           	opt callstack 0
  1779  00001C                     dtoa@fp:
  1780                           	opt callstack 0
  1781                           
  1782                           ; 2 bytes @ 0x1B
  1783  00001C                     	ds	2
  1784  00001E                     dtoa@d:
  1785                           	opt callstack 0
  1786                           
  1787                           ; 8 bytes @ 0x1D
  1788  00001E                     	ds	8
  1789  000026                     ??_dtoa:
  1790                           
  1791                           ; 1 bytes @ 0x25
  1792  000026                     	ds	8
  1793  00002E                     _dtoa$1005:
  1794                           	opt callstack 0
  1795                           
  1796                           ; 2 bytes @ 0x2D
  1797  00002E                     	ds	2
  1798  000030                     dtoa@p:
  1799                           	opt callstack 0
  1800                           
  1801                           ; 2 bytes @ 0x2F
  1802  000030                     	ds	2
  1803  000032                     dtoa@w:
  1804                           	opt callstack 0
  1805                           
  1806                           ; 2 bytes @ 0x31
  1807  000032                     	ds	2
  1808  000034                     dtoa@s:
  1809                           	opt callstack 0
  1810                           
  1811                           ; 2 bytes @ 0x33
  1812  000034                     	ds	2
  1813  000036                     dtoa@n:
  1814                           	opt callstack 0
  1815                           
  1816                           ; 8 bytes @ 0x35
  1817  000036                     	ds	8
  1818  00003E                     dtoa@i:
  1819                           	opt callstack 0
  1820                           
  1821                           ; 2 bytes @ 0x3D
  1822  00003E                     	ds	2
  1823  000040                     ?_vfpfcnvrt:
  1824                           	opt callstack 0
  1825  000040                     vfpfcnvrt@fp:
  1826                           	opt callstack 0
  1827                           
  1828                           ; 2 bytes @ 0x3F
  1829  000040                     	ds	2
  1830  000042                     vfpfcnvrt@fmt:
  1831                           	opt callstack 0
  1832                           
  1833                           ; 2 bytes @ 0x41
  1834  000042                     	ds	2
  1835  000044                     vfpfcnvrt@ap:
  1836                           	opt callstack 0
  1837                           
  1838                           ; 2 bytes @ 0x43
  1839  000044                     	ds	2
  1840  000046                     ??_vfpfcnvrt:
  1841                           
  1842                           ; 1 bytes @ 0x45
  1843  000046                     	ds	2
  1844  000048                     vfpfcnvrt@ll:
  1845                           	opt callstack 0
  1846                           
  1847                           ; 8 bytes @ 0x47
  1848  000048                     	ds	8
  1849  000050                     ?_vfprintf:
  1850                           	opt callstack 0
  1851  000050                     vfprintf@fp:
  1852                           	opt callstack 0
  1853                           
  1854                           ; 2 bytes @ 0x4F
  1855  000050                     	ds	2
  1856  000052                     vfprintf@fmt:
  1857                           	opt callstack 0
  1858                           
  1859                           ; 2 bytes @ 0x51
  1860  000052                     	ds	2
  1861  000054                     vfprintf@ap:
  1862                           	opt callstack 0
  1863                           
  1864                           ; 2 bytes @ 0x53
  1865  000054                     	ds	2
  1866  000056                     vfprintf@cfmt:
  1867                           	opt callstack 0
  1868                           
  1869                           ; 2 bytes @ 0x55
  1870  000056                     	ds	2
  1871  000058                     ??_dameDatosSistema:
  1872  000058                     
  1873                           ; 1 bytes @ 0x57
  1874  000058                     	ds	3
  1875  00005B                     ??_sistemaPrincipal:
  1876                           
  1877                           ; 1 bytes @ 0x5A
  1878  00005B                     	ds	2
  1879  00005D                     sistemaPrincipal@opcion:
  1880                           	opt callstack 0
  1881                           
  1882                           ; 1 bytes @ 0x5C
  1883  00005D                     	ds	1
  1884  00005E                     
  1885                           ; 1 bytes @ 0x5D
  1886 ;;
  1887 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1888 ;;
  1889 ;; *************** function _main *****************
  1890 ;; Defined at:
  1891 ;;		line 770 in file "main.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;		None
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;  temperatura     1    0        unsigned char 
  1896 ;;  humedad         1    0        unsigned char 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1906 ;;      Params:         0       0       0       0       0       0       0       0       0
  1907 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1908 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1909 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1910 ;;Total ram usage:        0 bytes
  1911 ;; Hardware stack levels required when called:   11
  1912 ;; This function calls:
  1913 ;;		_UART_init
  1914 ;;		_configurarAdc
  1915 ;;		_i2c_iniciar
  1916 ;;		_inicializarObjetos
  1917 ;;		_leeHorariosMemoria
  1918 ;;		_mostrarMenu
  1919 ;;		_restablecerDatosSensor
  1920 ;;		_sistemaPrincipal
  1921 ;;		_sistemaRegado
  1922 ;; This function is called by:
  1923 ;;		Startup code after reset
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text0
  1928  00190A                     __ptext0:
  1929                           	opt callstack 0
  1930  00190A                     _main:
  1931                           	opt callstack 20
  1932  00190A                     
  1933                           ;main.c: 772:     unsigned char humedad, temperatura;;main.c: 774:     INTCONbits.GIE = 
      +                          1;
  1934  00190A  8EF2               	bsf	242,7,c	;volatile
  1935                           
  1936                           ;main.c: 775:     INTCONbits.PEIE = 1;
  1937  00190C  8CF2               	bsf	242,6,c	;volatile
  1938                           
  1939                           ;main.c: 776:     INTCONbits.TMR0IE = 0;
  1940  00190E  9AF2               	bcf	242,5,c	;volatile
  1941                           
  1942                           ;main.c: 777:     INTCONbits.TMR0IF = 0;
  1943  001910  94F2               	bcf	242,2,c	;volatile
  1944                           
  1945                           ;main.c: 778:     PIE1bits.RCIE = 1;
  1946  001912  8A9D               	bsf	157,5,c	;volatile
  1947  001914                     
  1948                           ;main.c: 780:     T0CON = 0b00000111;
  1949  001914  0E07               	movlw	7
  1950  001916  6ED5               	movwf	213,c	;volatile
  1951  001918                     
  1952                           ;main.c: 782:     INTCONbits.TMR0IE = 1;
  1953  001918  8AF2               	bsf	242,5,c	;volatile
  1954  00191A                     
  1955                           ;main.c: 787:     restablecerDatosSensor();
  1956  00191A  EC64  F00E         	call	_restablecerDatosSensor	;wreg free
  1957  00191E                     
  1958                           ;main.c: 789:     UART_init(9600);
  1959  00191E  0E80               	movlw	128
  1960  001920  6E0F               	movwf	UART_init@BAUD^0,c
  1961  001922  0E25               	movlw	37
  1962  001924  6E10               	movwf	(UART_init@BAUD+1)^0,c
  1963  001926  0E00               	movlw	0
  1964  001928  6E11               	movwf	(UART_init@BAUD+2)^0,c
  1965  00192A  0E00               	movlw	0
  1966  00192C  6E12               	movwf	(UART_init@BAUD+3)^0,c
  1967  00192E  EC60  F00D         	call	_UART_init	;wreg free
  1968  001932                     
  1969                           ;main.c: 790:     i2c_iniciar();
  1970  001932  EC46  F011         	call	_i2c_iniciar	;wreg free
  1971  001936                     
  1972                           ;main.c: 791:     configurarAdc();
  1973  001936  EC5D  F011         	call	_configurarAdc	;wreg free
  1974  00193A                     
  1975                           ;main.c: 792:     inicializarObjetos();
  1976  00193A  ECD0  F00C         	call	_inicializarObjetos	;wreg free
  1977  00193E                     
  1978                           ;main.c: 794:     leeHorariosMemoria();
  1979  00193E  EC4E  F00A         	call	_leeHorariosMemoria	;wreg free
  1980  001942                     
  1981                           ;main.c: 797:     TRISD = 0;
  1982  001942  0E00               	movlw	0
  1983  001944  6E95               	movwf	149,c	;volatile
  1984  001946                     
  1985                           ;main.c: 798:     LATD = 0;
  1986  001946  0E00               	movlw	0
  1987  001948  6E8C               	movwf	140,c	;volatile
  1988  00194A                     
  1989                           ;main.c: 800:     TMR0 = VALOR_TIMER0;
  1990  00194A  C0FA  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  1991  00194E  C0FB  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  1992  001952                     
  1993                           ;main.c: 802:     INTCONbits.TMR0IF = 1;
  1994  001952  84F2               	bsf	242,2,c	;volatile
  1995  001954                     
  1996                           ;main.c: 804:     T0CONbits.TMR0ON = 1;
  1997  001954  8ED5               	bsf	213,7,c	;volatile
  1998  001956                     
  1999                           ;main.c: 806:     mostrarMenu();
  2000  001956  EC33  F00E         	call	_mostrarMenu	;wreg free
  2001  00195A                     l3633:
  2002                           
  2003                           ;main.c: 811:         if (datoRecibido) {
  2004  00195A  0100               	movlb	0	; () banked
  2005  00195C  5187               	movf	_datoRecibido& (0+255),w,b
  2006  00195E  B4D8               	btfsc	status,2,c
  2007  001960  EFB4  F00C         	goto	u2811
  2008  001964  EFB6  F00C         	goto	u2810
  2009  001968                     u2811:
  2010  001968  EFBD  F00C         	goto	l3641
  2011  00196C                     u2810:
  2012  00196C                     
  2013                           ; BSR set to: 0
  2014                           ;main.c: 813:             datoRecibido = 0;
  2015  00196C  0E00               	movlw	0
  2016  00196E  6F87               	movwf	_datoRecibido& (0+255),b
  2017  001970                     
  2018                           ; BSR set to: 0
  2019                           ;main.c: 814:             byteUart -= 48;
  2020  001970  0E30               	movlw	48
  2021  001972  5F8C               	subwf	_byteUart& (0+255),f,b
  2022  001974                     
  2023                           ; BSR set to: 0
  2024                           ;main.c: 815:             sistemaPrincipal(byteUart);
  2025  001974  518C               	movf	_byteUart& (0+255),w,b
  2026  001976  EC1B  F00D         	call	_sistemaPrincipal
  2027  00197A                     l3641:
  2028                           
  2029                           ;main.c: 819:         if (overflowTimer) {
  2030  00197A  0100               	movlb	0	; () banked
  2031  00197C  5186               	movf	_overflowTimer& (0+255),w,b
  2032  00197E  B4D8               	btfsc	status,2,c
  2033  001980  EFC4  F00C         	goto	u2821
  2034  001984  EFC6  F00C         	goto	u2820
  2035  001988                     u2821:
  2036  001988  EFAD  F00C         	goto	l3633
  2037  00198C                     u2820:
  2038  00198C                     
  2039                           ; BSR set to: 0
  2040                           ;main.c: 821:             esperandoDatos = 0;
  2041  00198C  0E00               	movlw	0
  2042  00198E  6E5E               	movwf	_esperandoDatos^0,c
  2043                           
  2044                           ;main.c: 822:             overflowTimer = 0;
  2045  001990  0E00               	movlw	0
  2046  001992  6F86               	movwf	_overflowTimer& (0+255),b
  2047  001994                     
  2048                           ; BSR set to: 0
  2049                           ;main.c: 823:             sistemaRegado();
  2050  001994  EC34  F00C         	call	_sistemaRegado	;wreg free
  2051  001998  EFAD  F00C         	goto	l3633
  2052  00199C  EF07  F000         	goto	start
  2053  0019A0                     __end_of_main:
  2054                           	opt callstack 0
  2055                           
  2056 ;; *************** function _sistemaRegado *****************
  2057 ;; Defined at:
  2058 ;;		line 592 in file "main.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;		None
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;		None
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  1    wreg      void 
  2065 ;; Registers used:
  2066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2072 ;;      Params:         0       0       0       0       0       0       0       0       0
  2073 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2074 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2075 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2076 ;;Total ram usage:        0 bytes
  2077 ;; Hardware stack levels used:    1
  2078 ;; Hardware stack levels required when called:    6
  2079 ;; This function calls:
  2080 ;;		_dameHoraActual
  2081 ;;		_encenderBombas
  2082 ;;		_horaRegar
  2083 ;;		_lecturaAnalogaSensores
  2084 ;;		_lecturaWifi
  2085 ;;		_mostrarMenu
  2086 ;; This function is called by:
  2087 ;;		_main
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text1
  2092  001868                     __ptext1:
  2093                           	opt callstack 0
  2094  001868                     _sistemaRegado:
  2095                           	opt callstack 24
  2096  001868                     
  2097                           ;main.c: 596:     if (regando) {
  2098  001868  0100               	movlb	0	; () banked
  2099  00186A  5183               	movf	_regando& (0+255),w,b
  2100  00186C  B4D8               	btfsc	status,2,c
  2101  00186E  EF3B  F00C         	goto	u2721
  2102  001872  EF3D  F00C         	goto	u2720
  2103  001876                     u2721:
  2104  001876  EF5F  F00C         	goto	l3549
  2105  00187A                     u2720:
  2106  00187A                     
  2107                           ; BSR set to: 0
  2108                           ;main.c: 597:         contInterrupciones++;
  2109  00187A  4B80               	infsnz	_contInterrupciones& (0+255),f,b
  2110  00187C  2B81               	incf	(_contInterrupciones+1)& (0+255),f,b
  2111  00187E                     
  2112                           ; BSR set to: 0
  2113                           ;main.c: 599:         if (contInterrupciones == 6) {
  2114  00187E  0E06               	movlw	6
  2115  001880  1980               	xorwf	_contInterrupciones& (0+255),w,b
  2116  001882  1181               	iorwf	(_contInterrupciones+1)& (0+255),w,b
  2117  001884  A4D8               	btfss	status,2,c
  2118  001886  EF47  F00C         	goto	u2731
  2119  00188A  EF49  F00C         	goto	u2730
  2120  00188E                     u2731:
  2121  00188E  EF84  F00C         	goto	l357
  2122  001892                     u2730:
  2123  001892                     
  2124                           ; BSR set to: 0
  2125                           ;main.c: 600:             contInterrupciones = 0;
  2126  001892  0E00               	movlw	0
  2127  001894  6F81               	movwf	(_contInterrupciones+1)& (0+255),b
  2128  001896  0E00               	movlw	0
  2129  001898  6F80               	movwf	_contInterrupciones& (0+255),b
  2130  00189A                     
  2131                           ; BSR set to: 0
  2132                           ;main.c: 601:             minutosTranscurridos++;
  2133  00189A  2B84               	incf	_minutosTranscurridos& (0+255),f,b
  2134  00189C                     
  2135                           ; BSR set to: 0
  2136                           ;main.c: 604:             if (minutosTranscurridos >= minutosRegar) {
  2137  00189C  5185               	movf	_minutosRegar& (0+255),w,b
  2138  00189E  5D84               	subwf	_minutosTranscurridos& (0+255),w,b
  2139  0018A0  A0D8               	btfss	status,0,c
  2140  0018A2  EF55  F00C         	goto	u2741
  2141  0018A6  EF57  F00C         	goto	u2740
  2142  0018AA                     u2741:
  2143  0018AA  EF84  F00C         	goto	l357
  2144  0018AE                     u2740:
  2145  0018AE                     
  2146                           ; BSR set to: 0
  2147                           ;main.c: 606:                 LATD = 0;
  2148  0018AE  0E00               	movlw	0
  2149  0018B0  6E8C               	movwf	140,c	;volatile
  2150                           
  2151                           ;main.c: 607:                 minutosTranscurridos = 0;
  2152  0018B2  0E00               	movlw	0
  2153  0018B4  6F84               	movwf	_minutosTranscurridos& (0+255),b
  2154                           
  2155                           ;main.c: 608:                 regando = 0;
  2156  0018B6  0E00               	movlw	0
  2157  0018B8  6F83               	movwf	_regando& (0+255),b
  2158  0018BA  EF84  F00C         	goto	l357
  2159  0018BE                     l3549:
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;main.c: 614:         dameHoraActual();
  2163  0018BE  ECAE  F010         	call	_dameHoraActual	;wreg free
  2164  0018C2                     
  2165                           ;main.c: 616:         if (horaRegar() && !minutos) {
  2166  0018C2  EC98  F010         	call	_horaRegar	;wreg free
  2167  0018C6  5001               	movf	?_horaRegar^0,w,c
  2168  0018C8  1002               	iorwf	(?_horaRegar+1)^0,w,c
  2169  0018CA  B4D8               	btfsc	status,2,c
  2170  0018CC  EF6A  F00C         	goto	u2751
  2171  0018D0  EF6C  F00C         	goto	u2750
  2172  0018D4                     u2751:
  2173  0018D4  EF84  F00C         	goto	l357
  2174  0018D8                     u2750:
  2175  0018D8  0100               	movlb	0	; () banked
  2176  0018DA  5189               	movf	_minutos& (0+255),w,b
  2177  0018DC  A4D8               	btfss	status,2,c
  2178  0018DE  EF73  F00C         	goto	u2761
  2179  0018E2  EF75  F00C         	goto	u2760
  2180  0018E6                     u2761:
  2181  0018E6  EF84  F00C         	goto	l357
  2182  0018EA                     u2760:
  2183  0018EA                     
  2184                           ; BSR set to: 0
  2185                           ;main.c: 628:                 lecturaAnalogaSensores();
  2186  0018EA  EC98  F00D         	call	_lecturaAnalogaSensores	;wreg free
  2187  0018EE                     
  2188                           ;main.c: 629:                 minutosRegar = horarios[hora].tiempoRegar;
  2189  0018EE  0100               	movlb	0	; () banked
  2190  0018F0  518A               	movf	_hora& (0+255),w,b
  2191  0018F2  0D03               	mullw	3
  2192  0018F4  0E02               	movlw	low (_horarios+2)
  2193  0018F6  24F3               	addwf	243,w,c
  2194  0018F8  6ED9               	movwf	fsr2l,c
  2195  0018FA  0E01               	movlw	high (_horarios+2)
  2196  0018FC  20F4               	addwfc	prodh,w,c
  2197  0018FE  6EDA               	movwf	fsr2h,c
  2198  001900  50DF               	movf	indf2,w,c
  2199  001902  6F85               	movwf	_minutosRegar& (0+255),b
  2200  001904                     
  2201                           ; BSR set to: 0
  2202                           ;main.c: 630:                 encenderBombas();
  2203  001904  EC09  F000         	call	_encenderBombas	;wreg free
  2204  001908                     l357:
  2205  001908  0012               	return		;funcret
  2206  00190A                     __end_of_sistemaRegado:
  2207                           	opt callstack 0
  2208                           
  2209 ;; *************** function _horaRegar *****************
  2210 ;; Defined at:
  2211 ;;		line 135 in file "main.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;		None
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  2    0[COMRAM] int 
  2218 ;; Registers used:
  2219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2225 ;;      Params:         2       0       0       0       0       0       0       0       0
  2226 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2227 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2228 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2229 ;;Total ram usage:        3 bytes
  2230 ;; Hardware stack levels used:    1
  2231 ;; Hardware stack levels required when called:    1
  2232 ;; This function calls:
  2233 ;;		Nothing
  2234 ;; This function is called by:
  2235 ;;		_sistemaRegado
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text2
  2240  002130                     __ptext2:
  2241                           	opt callstack 0
  2242  002130                     _horaRegar:
  2243                           	opt callstack 28
  2244  002130                     
  2245                           ;main.c: 137:     return horarios[hora].regar == 1;
  2246  002130  0100               	movlb	0	; () banked
  2247  002132  518A               	movf	_hora& (0+255),w,b
  2248  002134  0D03               	mullw	3
  2249  002136  0E01               	movlw	low (_horarios+1)
  2250  002138  24F3               	addwf	243,w,c
  2251  00213A  6ED9               	movwf	fsr2l,c
  2252  00213C  0E01               	movlw	high (_horarios+1)
  2253  00213E  20F4               	addwfc	prodh,w,c
  2254  002140  6EDA               	movwf	fsr2h,c
  2255  002142  04DE               	decf	postinc2,w,c
  2256  002144  B4D8               	btfsc	status,2,c
  2257  002146  EFA7  F010         	goto	u2241
  2258  00214A  EFAA  F010         	goto	u2240
  2259  00214E                     u2241:
  2260  00214E  0E01               	movlw	1
  2261  002150  EFAB  F010         	goto	u2250
  2262  002154                     u2240:
  2263  002154  0E00               	movlw	0
  2264  002156                     u2250:
  2265  002156  6E01               	movwf	?_horaRegar^0,c
  2266  002158  6A02               	clrf	(?_horaRegar+1)^0,c
  2267  00215A                     
  2268                           ; BSR set to: 0
  2269  00215A  0012               	return		;funcret
  2270  00215C                     __end_of_horaRegar:
  2271                           	opt callstack 0
  2272                           
  2273 ;; *************** function _encenderBombas *****************
  2274 ;; Defined at:
  2275 ;;		line 246 in file "main.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;		None
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  i               2   23[COMRAM] int 
  2280 ;;  flagSeco        1   22[COMRAM] unsigned char 
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2290 ;;      Params:         0       0       0       0       0       0       0       0       0
  2291 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2292 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2293 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2294 ;;Total ram usage:        5 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; Hardware stack levels required when called:    5
  2297 ;; This function calls:
  2298 ;;		___wmul
  2299 ;;		_estaSeco
  2300 ;; This function is called by:
  2301 ;;		_sistemaRegado
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text3
  2306  000012                     __ptext3:
  2307                           	opt callstack 0
  2308  000012                     _encenderBombas:
  2309                           	opt callstack 24
  2310  000012                     
  2311                           ;main.c: 248:     char flagSeco = 0;
  2312  000012  0E00               	movlw	0
  2313  000014  6E17               	movwf	encenderBombas@flagSeco^0,c
  2314                           
  2315                           ;main.c: 250:     for (int i = 0; i < 3; i++) {
  2316  000016  0E00               	movlw	0
  2317  000018  6E19               	movwf	(encenderBombas@i+1)^0,c
  2318  00001A  0E00               	movlw	0
  2319  00001C  6E18               	movwf	encenderBombas@i^0,c
  2320  00001E  EF33  F001         	goto	l3123
  2321  000022                     l3073:
  2322                           
  2323                           ;main.c: 255:                 if (estaSeco(sensores[i])) {
  2324  000022  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2325  000026  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2326  00002A  0E00               	movlw	0
  2327  00002C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2328  00002E  0E03               	movlw	3
  2329  000030  6E03               	movwf	___wmul@multiplicand^0,c
  2330  000032  ECEC  F010         	call	___wmul	;wreg free
  2331  000036  0E60               	movlw	low _sensores
  2332  000038  2401               	addwf	?___wmul^0,w,c
  2333  00003A  6ED9               	movwf	fsr2l,c
  2334  00003C  0E00               	movlw	high _sensores
  2335  00003E  2002               	addwfc	(?___wmul+1)^0,w,c
  2336  000040  6EDA               	movwf	fsr2h,c
  2337  000042  CFDE F010          	movff	postinc2,estaSeco@s
  2338  000046  CFDE F011          	movff	postinc2,estaSeco@s+1
  2339  00004A  CFDD F012          	movff	postdec2,estaSeco@s+2
  2340  00004E  EC76  F00F         	call	_estaSeco	;wreg free
  2341  000052  5010               	movf	?_estaSeco^0,w,c
  2342  000054  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2343  000056  B4D8               	btfsc	status,2,c
  2344  000058  EF30  F000         	goto	u2261
  2345  00005C  EF32  F000         	goto	u2260
  2346  000060                     u2261:
  2347  000060  EF61  F001         	goto	l3125
  2348  000064                     u2260:
  2349  000064                     
  2350                           ;main.c: 256:                     LATDbits.LATD0 = 1;
  2351  000064  808C               	bsf	140,0,c	;volatile
  2352  000066                     l3077:
  2353                           
  2354                           ;main.c: 257:                     flagSeco = 1;
  2355  000066  0E01               	movlw	1
  2356  000068  6E17               	movwf	encenderBombas@flagSeco^0,c
  2357  00006A  EF61  F001         	goto	l3125
  2358  00006E                     l3079:
  2359                           
  2360                           ;main.c: 262:                 if (estaSeco(sensores[i])) {
  2361  00006E  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2362  000072  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2363  000076  0E00               	movlw	0
  2364  000078  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2365  00007A  0E03               	movlw	3
  2366  00007C  6E03               	movwf	___wmul@multiplicand^0,c
  2367  00007E  ECEC  F010         	call	___wmul	;wreg free
  2368  000082  0E60               	movlw	low _sensores
  2369  000084  2401               	addwf	?___wmul^0,w,c
  2370  000086  6ED9               	movwf	fsr2l,c
  2371  000088  0E00               	movlw	high _sensores
  2372  00008A  2002               	addwfc	(?___wmul+1)^0,w,c
  2373  00008C  6EDA               	movwf	fsr2h,c
  2374  00008E  CFDE F010          	movff	postinc2,estaSeco@s
  2375  000092  CFDE F011          	movff	postinc2,estaSeco@s+1
  2376  000096  CFDD F012          	movff	postdec2,estaSeco@s+2
  2377  00009A  EC76  F00F         	call	_estaSeco	;wreg free
  2378  00009E  5010               	movf	?_estaSeco^0,w,c
  2379  0000A0  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2380  0000A2  B4D8               	btfsc	status,2,c
  2381  0000A4  EF56  F000         	goto	u2271
  2382  0000A8  EF58  F000         	goto	u2270
  2383  0000AC                     u2271:
  2384  0000AC  EF61  F001         	goto	l3125
  2385  0000B0                     u2270:
  2386  0000B0                     
  2387                           ;main.c: 263:                     LATDbits.LATD1 = 1;
  2388  0000B0  828C               	bsf	140,1,c	;volatile
  2389  0000B2  EF33  F000         	goto	l3077
  2390  0000B6                     l3085:
  2391                           
  2392                           ;main.c: 269:                 if (estaSeco(sensores[i])) {
  2393  0000B6  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2394  0000BA  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2395  0000BE  0E00               	movlw	0
  2396  0000C0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2397  0000C2  0E03               	movlw	3
  2398  0000C4  6E03               	movwf	___wmul@multiplicand^0,c
  2399  0000C6  ECEC  F010         	call	___wmul	;wreg free
  2400  0000CA  0E60               	movlw	low _sensores
  2401  0000CC  2401               	addwf	?___wmul^0,w,c
  2402  0000CE  6ED9               	movwf	fsr2l,c
  2403  0000D0  0E00               	movlw	high _sensores
  2404  0000D2  2002               	addwfc	(?___wmul+1)^0,w,c
  2405  0000D4  6EDA               	movwf	fsr2h,c
  2406  0000D6  CFDE F010          	movff	postinc2,estaSeco@s
  2407  0000DA  CFDE F011          	movff	postinc2,estaSeco@s+1
  2408  0000DE  CFDD F012          	movff	postdec2,estaSeco@s+2
  2409  0000E2  EC76  F00F         	call	_estaSeco	;wreg free
  2410  0000E6  5010               	movf	?_estaSeco^0,w,c
  2411  0000E8  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2412  0000EA  B4D8               	btfsc	status,2,c
  2413  0000EC  EF7A  F000         	goto	u2281
  2414  0000F0  EF7C  F000         	goto	u2280
  2415  0000F4                     u2281:
  2416  0000F4  EF61  F001         	goto	l3125
  2417  0000F8                     u2280:
  2418  0000F8                     
  2419                           ;main.c: 270:                     LATDbits.LATD2 = 1;
  2420  0000F8  848C               	bsf	140,2,c	;volatile
  2421  0000FA  EF33  F000         	goto	l3077
  2422  0000FE                     l3091:
  2423                           
  2424                           ;main.c: 276:                 if (estaSeco(sensores[i])) {
  2425  0000FE  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2426  000102  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2427  000106  0E00               	movlw	0
  2428  000108  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2429  00010A  0E03               	movlw	3
  2430  00010C  6E03               	movwf	___wmul@multiplicand^0,c
  2431  00010E  ECEC  F010         	call	___wmul	;wreg free
  2432  000112  0E60               	movlw	low _sensores
  2433  000114  2401               	addwf	?___wmul^0,w,c
  2434  000116  6ED9               	movwf	fsr2l,c
  2435  000118  0E00               	movlw	high _sensores
  2436  00011A  2002               	addwfc	(?___wmul+1)^0,w,c
  2437  00011C  6EDA               	movwf	fsr2h,c
  2438  00011E  CFDE F010          	movff	postinc2,estaSeco@s
  2439  000122  CFDE F011          	movff	postinc2,estaSeco@s+1
  2440  000126  CFDD F012          	movff	postdec2,estaSeco@s+2
  2441  00012A  EC76  F00F         	call	_estaSeco	;wreg free
  2442  00012E  5010               	movf	?_estaSeco^0,w,c
  2443  000130  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2444  000132  B4D8               	btfsc	status,2,c
  2445  000134  EF9E  F000         	goto	u2291
  2446  000138  EFA0  F000         	goto	u2290
  2447  00013C                     u2291:
  2448  00013C  EF61  F001         	goto	l3125
  2449  000140                     u2290:
  2450  000140                     
  2451                           ;main.c: 277:                     LATDbits.LATD3 = 1;
  2452  000140  868C               	bsf	140,3,c	;volatile
  2453  000142  EF33  F000         	goto	l3077
  2454  000146                     l3097:
  2455                           
  2456                           ;main.c: 283:                 if (estaSeco(sensores[i])) {
  2457  000146  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2458  00014A  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2459  00014E  0E00               	movlw	0
  2460  000150  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2461  000152  0E03               	movlw	3
  2462  000154  6E03               	movwf	___wmul@multiplicand^0,c
  2463  000156  ECEC  F010         	call	___wmul	;wreg free
  2464  00015A  0E60               	movlw	low _sensores
  2465  00015C  2401               	addwf	?___wmul^0,w,c
  2466  00015E  6ED9               	movwf	fsr2l,c
  2467  000160  0E00               	movlw	high _sensores
  2468  000162  2002               	addwfc	(?___wmul+1)^0,w,c
  2469  000164  6EDA               	movwf	fsr2h,c
  2470  000166  CFDE F010          	movff	postinc2,estaSeco@s
  2471  00016A  CFDE F011          	movff	postinc2,estaSeco@s+1
  2472  00016E  CFDD F012          	movff	postdec2,estaSeco@s+2
  2473  000172  EC76  F00F         	call	_estaSeco	;wreg free
  2474  000176  5010               	movf	?_estaSeco^0,w,c
  2475  000178  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2476  00017A  B4D8               	btfsc	status,2,c
  2477  00017C  EFC2  F000         	goto	u2301
  2478  000180  EFC4  F000         	goto	u2300
  2479  000184                     u2301:
  2480  000184  EF61  F001         	goto	l3125
  2481  000188                     u2300:
  2482  000188                     
  2483                           ;main.c: 284:                     LATDbits.LATD4 = 1;
  2484  000188  888C               	bsf	140,4,c	;volatile
  2485  00018A  EF33  F000         	goto	l3077
  2486  00018E                     l3103:
  2487                           
  2488                           ;main.c: 290:                 if (estaSeco(sensores[i])) {
  2489  00018E  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2490  000192  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2491  000196  0E00               	movlw	0
  2492  000198  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2493  00019A  0E03               	movlw	3
  2494  00019C  6E03               	movwf	___wmul@multiplicand^0,c
  2495  00019E  ECEC  F010         	call	___wmul	;wreg free
  2496  0001A2  0E60               	movlw	low _sensores
  2497  0001A4  2401               	addwf	?___wmul^0,w,c
  2498  0001A6  6ED9               	movwf	fsr2l,c
  2499  0001A8  0E00               	movlw	high _sensores
  2500  0001AA  2002               	addwfc	(?___wmul+1)^0,w,c
  2501  0001AC  6EDA               	movwf	fsr2h,c
  2502  0001AE  CFDE F010          	movff	postinc2,estaSeco@s
  2503  0001B2  CFDE F011          	movff	postinc2,estaSeco@s+1
  2504  0001B6  CFDD F012          	movff	postdec2,estaSeco@s+2
  2505  0001BA  EC76  F00F         	call	_estaSeco	;wreg free
  2506  0001BE  5010               	movf	?_estaSeco^0,w,c
  2507  0001C0  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2508  0001C2  B4D8               	btfsc	status,2,c
  2509  0001C4  EFE6  F000         	goto	u2311
  2510  0001C8  EFE8  F000         	goto	u2310
  2511  0001CC                     u2311:
  2512  0001CC  EF61  F001         	goto	l3125
  2513  0001D0                     u2310:
  2514  0001D0                     
  2515                           ;main.c: 291:                     LATDbits.LATD5 = 1;
  2516  0001D0  8A8C               	bsf	140,5,c	;volatile
  2517  0001D2  EF33  F000         	goto	l3077
  2518  0001D6                     l3109:
  2519                           
  2520                           ;main.c: 297:                 if (estaSeco(sensores[i])) {
  2521  0001D6  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2522  0001DA  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2523  0001DE  0E00               	movlw	0
  2524  0001E0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2525  0001E2  0E03               	movlw	3
  2526  0001E4  6E03               	movwf	___wmul@multiplicand^0,c
  2527  0001E6  ECEC  F010         	call	___wmul	;wreg free
  2528  0001EA  0E60               	movlw	low _sensores
  2529  0001EC  2401               	addwf	?___wmul^0,w,c
  2530  0001EE  6ED9               	movwf	fsr2l,c
  2531  0001F0  0E00               	movlw	high _sensores
  2532  0001F2  2002               	addwfc	(?___wmul+1)^0,w,c
  2533  0001F4  6EDA               	movwf	fsr2h,c
  2534  0001F6  CFDE F010          	movff	postinc2,estaSeco@s
  2535  0001FA  CFDE F011          	movff	postinc2,estaSeco@s+1
  2536  0001FE  CFDD F012          	movff	postdec2,estaSeco@s+2
  2537  000202  EC76  F00F         	call	_estaSeco	;wreg free
  2538  000206  5010               	movf	?_estaSeco^0,w,c
  2539  000208  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2540  00020A  B4D8               	btfsc	status,2,c
  2541  00020C  EF0A  F001         	goto	u2321
  2542  000210  EF0C  F001         	goto	u2320
  2543  000214                     u2321:
  2544  000214  EF61  F001         	goto	l3125
  2545  000218                     u2320:
  2546  000218                     
  2547                           ;main.c: 298:                     LATDbits.LATD6 = 1;
  2548  000218  8C8C               	bsf	140,6,c	;volatile
  2549  00021A  EF33  F000         	goto	l3077
  2550  00021E                     l3115:
  2551                           
  2552                           ;main.c: 304:                 if (estaSeco(sensores[i])) {
  2553  00021E  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2554  000222  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2555  000226  0E00               	movlw	0
  2556  000228  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2557  00022A  0E03               	movlw	3
  2558  00022C  6E03               	movwf	___wmul@multiplicand^0,c
  2559  00022E  ECEC  F010         	call	___wmul	;wreg free
  2560  000232  0E60               	movlw	low _sensores
  2561  000234  2401               	addwf	?___wmul^0,w,c
  2562  000236  6ED9               	movwf	fsr2l,c
  2563  000238  0E00               	movlw	high _sensores
  2564  00023A  2002               	addwfc	(?___wmul+1)^0,w,c
  2565  00023C  6EDA               	movwf	fsr2h,c
  2566  00023E  CFDE F010          	movff	postinc2,estaSeco@s
  2567  000242  CFDE F011          	movff	postinc2,estaSeco@s+1
  2568  000246  CFDD F012          	movff	postdec2,estaSeco@s+2
  2569  00024A  EC76  F00F         	call	_estaSeco	;wreg free
  2570  00024E  5010               	movf	?_estaSeco^0,w,c
  2571  000250  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2572  000252  B4D8               	btfsc	status,2,c
  2573  000254  EF2E  F001         	goto	u2331
  2574  000258  EF30  F001         	goto	u2330
  2575  00025C                     u2331:
  2576  00025C  EF61  F001         	goto	l3125
  2577  000260                     u2330:
  2578  000260                     
  2579                           ;main.c: 305:                     LATDbits.LATD7 = 1;
  2580  000260  8E8C               	bsf	140,7,c	;volatile
  2581  000262  EF33  F000         	goto	l3077
  2582  000266                     l3123:
  2583  000266  C018  F015         	movff	encenderBombas@i,??_encenderBombas
  2584  00026A  C019  F016         	movff	encenderBombas@i+1,??_encenderBombas+1
  2585                           
  2586                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2587                           ; Switch size 1, requested type "simple"
  2588                           ; Number of cases is 1, Range of values is 0 to 0
  2589                           ; switch strategies available:
  2590                           ; Name         Instructions Cycles
  2591                           ; simple_byte            4     3 (average)
  2592                           ;	Chosen strategy is simple_byte
  2593  00026E  5016               	movf	(??_encenderBombas+1)^0,w,c
  2594  000270  0A00               	xorlw	0	; case 0
  2595  000272  B4D8               	btfsc	status,2,c
  2596  000274  EF3E  F001         	goto	l3687
  2597  000278  EF61  F001         	goto	l3125
  2598  00027C                     l3687:
  2599                           
  2600                           ; Switch size 1, requested type "simple"
  2601                           ; Number of cases is 8, Range of values is 0 to 7
  2602                           ; switch strategies available:
  2603                           ; Name         Instructions Cycles
  2604                           ; simple_byte           25    13 (average)
  2605                           ;	Chosen strategy is simple_byte
  2606  00027C  5015               	movf	??_encenderBombas^0,w,c
  2607  00027E  0A00               	xorlw	0	; case 0
  2608  000280  B4D8               	btfsc	status,2,c
  2609  000282  EF11  F000         	goto	l3073
  2610  000286  0A01               	xorlw	1	; case 1
  2611  000288  B4D8               	btfsc	status,2,c
  2612  00028A  EF37  F000         	goto	l3079
  2613  00028E  0A03               	xorlw	3	; case 2
  2614  000290  B4D8               	btfsc	status,2,c
  2615  000292  EF5B  F000         	goto	l3085
  2616  000296  0A01               	xorlw	1	; case 3
  2617  000298  B4D8               	btfsc	status,2,c
  2618  00029A  EF7F  F000         	goto	l3091
  2619  00029E  0A07               	xorlw	7	; case 4
  2620  0002A0  B4D8               	btfsc	status,2,c
  2621  0002A2  EFA3  F000         	goto	l3097
  2622  0002A6  0A01               	xorlw	1	; case 5
  2623  0002A8  B4D8               	btfsc	status,2,c
  2624  0002AA  EFC7  F000         	goto	l3103
  2625  0002AE  0A03               	xorlw	3	; case 6
  2626  0002B0  B4D8               	btfsc	status,2,c
  2627  0002B2  EFEB  F000         	goto	l3109
  2628  0002B6  0A01               	xorlw	1	; case 7
  2629  0002B8  B4D8               	btfsc	status,2,c
  2630  0002BA  EF0F  F001         	goto	l3115
  2631  0002BE  EF61  F001         	goto	l3125
  2632  0002C2                     l3125:
  2633                           
  2634                           ;main.c: 311:     }
  2635  0002C2  4A18               	infsnz	encenderBombas@i^0,f,c
  2636  0002C4  2A19               	incf	(encenderBombas@i+1)^0,f,c
  2637  0002C6  BE19               	btfsc	(encenderBombas@i+1)^0,7,c
  2638  0002C8  EF6F  F001         	goto	u2341
  2639  0002CC  5019               	movf	(encenderBombas@i+1)^0,w,c
  2640  0002CE  E109               	bnz	u2340
  2641  0002D0  0E03               	movlw	3
  2642  0002D2  5C18               	subwf	encenderBombas@i^0,w,c
  2643  0002D4  A0D8               	btfss	status,0,c
  2644  0002D6  EF6F  F001         	goto	u2341
  2645  0002DA  EF71  F001         	goto	u2340
  2646  0002DE                     u2341:
  2647  0002DE  EF33  F001         	goto	l3123
  2648  0002E2                     u2340:
  2649  0002E2                     
  2650                           ;main.c: 313:     if (flagSeco)
  2651  0002E2  5017               	movf	encenderBombas@flagSeco^0,w,c
  2652  0002E4  B4D8               	btfsc	status,2,c
  2653  0002E6  EF77  F001         	goto	u2351
  2654  0002EA  EF79  F001         	goto	u2350
  2655  0002EE                     u2351:
  2656  0002EE  EF7C  F001         	goto	l270
  2657  0002F2                     u2350:
  2658  0002F2                     
  2659                           ;main.c: 314:         regando = 1;
  2660  0002F2  0E01               	movlw	1
  2661  0002F4  0100               	movlb	0	; () banked
  2662  0002F6  6F83               	movwf	_regando& (0+255),b
  2663  0002F8                     l270:
  2664  0002F8  0012               	return		;funcret
  2665  0002FA                     __end_of_encenderBombas:
  2666                           	opt callstack 0
  2667                           
  2668 ;; *************** function _estaSeco *****************
  2669 ;; Defined at:
  2670 ;;		line 126 in file "main.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;  s               3   15[COMRAM] struct .
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  temperatura     1   19[COMRAM] unsigned char 
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  2   15[COMRAM] int 
  2677 ;; Registers used:
  2678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2684 ;;      Params:         3       0       0       0       0       0       0       0       0
  2685 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2686 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2687 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2688 ;;Total ram usage:        5 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; Hardware stack levels required when called:    4
  2691 ;; This function calls:
  2692 ;;		_dameTemperaturaHumedad
  2693 ;; This function is called by:
  2694 ;;		_encenderBombas
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           	psect	text4
  2699  001EEC                     __ptext4:
  2700                           	opt callstack 0
  2701  001EEC                     _estaSeco:
  2702                           	opt callstack 24
  2703  001EEC                     
  2704                           ;main.c: 127:     unsigned char temperatura;;main.c: 129:     dameTemperaturaHumedad(((v
      +                          oid*)0), &temperatura);
  2705  001EEC  0E00               	movlw	0
  2706  001EEE  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  2707  001EF0  0E00               	movlw	0
  2708  001EF2  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  2709  001EF4  0E14               	movlw	low estaSeco@temperatura
  2710  001EF6  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  2711  001EF8  0E00               	movlw	high estaSeco@temperatura
  2712  001EFA  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  2713  001EFC  ECDA  F00B         	call	_dameTemperaturaHumedad	;wreg free
  2714  001F00                     
  2715                           ;main.c: 132:     return (s.humedadMedida >= 60) && (temperatura < 34);
  2716  001F00  0E00               	movlw	0
  2717  001F02  6E13               	movwf	_estaSeco$770^0,c
  2718  001F04  BE11               	btfsc	(estaSeco@s+1)^0,7,c
  2719  001F06  EF8E  F00F         	goto	u2051
  2720  001F0A  5011               	movf	(estaSeco@s+1)^0,w,c
  2721  001F0C  E109               	bnz	u2050
  2722  001F0E  0E3C               	movlw	60
  2723  001F10  5C10               	subwf	estaSeco@s^0,w,c
  2724  001F12  A0D8               	btfss	status,0,c
  2725  001F14  EF8E  F00F         	goto	u2051
  2726  001F18  EF90  F00F         	goto	u2050
  2727  001F1C                     u2051:
  2728  001F1C  EF9A  F00F         	goto	l2883
  2729  001F20                     u2050:
  2730  001F20  0E22               	movlw	34
  2731  001F22  6014               	cpfslt	estaSeco@temperatura^0,c
  2732  001F24  EF96  F00F         	goto	u2061
  2733  001F28  EF98  F00F         	goto	u2060
  2734  001F2C                     u2061:
  2735  001F2C  EF9A  F00F         	goto	l2883
  2736  001F30                     u2060:
  2737  001F30  0E01               	movlw	1
  2738  001F32  6E13               	movwf	_estaSeco$770^0,c
  2739  001F34                     l2883:
  2740  001F34  C013  F010         	movff	_estaSeco$770,?_estaSeco
  2741  001F38  6A11               	clrf	(?_estaSeco+1)^0,c
  2742  001F3A  0012               	return		;funcret
  2743  001F3C                     __end_of_estaSeco:
  2744                           	opt callstack 0
  2745                           
  2746 ;; *************** function _dameHoraActual *****************
  2747 ;; Defined at:
  2748 ;;		line 150 in file "main.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;		None
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;		None
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      void 
  2755 ;; Registers used:
  2756 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2762 ;;      Params:         0       0       0       0       0       0       0       0       0
  2763 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2764 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2765 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2766 ;;Total ram usage:        0 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    4
  2769 ;; This function calls:
  2770 ;;		_convertirDato
  2771 ;;		_leer_rtc
  2772 ;; This function is called by:
  2773 ;;		_sistemaRegado
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text5
  2778  00215C                     __ptext5:
  2779                           	opt callstack 0
  2780  00215C                     _dameHoraActual:
  2781                           	opt callstack 25
  2782  00215C                     
  2783                           ;main.c: 152:     segundos = convertirDato(leer_rtc(0x00));
  2784  00215C  0E00               	movlw	0
  2785  00215E  ECC4  F010         	call	_leer_rtc
  2786  002162  ECFF  F010         	call	_convertirDato
  2787  002166  0100               	movlb	0	; () banked
  2788  002168  6F88               	movwf	_segundos& (0+255),b
  2789                           
  2790                           ;main.c: 153:     minutos = convertirDato(leer_rtc(0x01));
  2791  00216A  0E01               	movlw	1
  2792  00216C  ECC4  F010         	call	_leer_rtc
  2793  002170  ECFF  F010         	call	_convertirDato
  2794  002174  0100               	movlb	0	; () banked
  2795  002176  6F89               	movwf	_minutos& (0+255),b
  2796                           
  2797                           ;main.c: 154:     hora = convertirDato(leer_rtc(0x02));
  2798  002178  0E02               	movlw	2
  2799  00217A  ECC4  F010         	call	_leer_rtc
  2800  00217E  ECFF  F010         	call	_convertirDato
  2801  002182  0100               	movlb	0	; () banked
  2802  002184  6F8A               	movwf	_hora& (0+255),b
  2803  002186                     
  2804                           ; BSR set to: 0
  2805  002186  0012               	return		;funcret
  2806  002188                     __end_of_dameHoraActual:
  2807                           	opt callstack 0
  2808                           
  2809 ;; *************** function _leer_rtc *****************
  2810 ;; Defined at:
  2811 ;;		line 13 in file "./RTC.h"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;  direccion       1    wreg     unsigned char 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;  direccion       1    2[COMRAM] unsigned char 
  2816 ;;  dato            1    3[COMRAM] unsigned char 
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  1    wreg      unsigned char 
  2819 ;; Registers used:
  2820 ;;		wreg, status,2, status,0, cstack
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2826 ;;      Params:         0       0       0       0       0       0       0       0       0
  2827 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2828 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2829 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2830 ;;Total ram usage:        2 bytes
  2831 ;; Hardware stack levels used:    1
  2832 ;; Hardware stack levels required when called:    3
  2833 ;; This function calls:
  2834 ;;		_i2c_detener
  2835 ;;		_i2c_envia_dato
  2836 ;;		_i2c_inicia_com
  2837 ;;		_i2c_recibe_dato
  2838 ;;		_i2c_reinicia_com
  2839 ;; This function is called by:
  2840 ;;		_dameHoraActual
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           	psect	text6
  2845  002188                     __ptext6:
  2846                           	opt callstack 0
  2847  002188                     _leer_rtc:
  2848                           	opt callstack 25
  2849                           
  2850                           ; BSR set to: 0
  2851                           ;incstack = 0
  2852                           ;leer_rtc@direccion stored from wreg
  2853  002188  6E03               	movwf	leer_rtc@direccion^0,c
  2854  00218A                     
  2855                           ;./RTC.h: 14:     unsigned char dato;;./RTC.h: 15:     i2c_inicia_com();
  2856  00218A  EC66  F011         	call	_i2c_inicia_com	;wreg free
  2857                           
  2858                           ;./RTC.h: 16:     i2c_envia_dato(0xD0);
  2859  00218E  0ED0               	movlw	208
  2860  002190  EC57  F011         	call	_i2c_envia_dato
  2861                           
  2862                           ;./RTC.h: 17:     i2c_envia_dato(direccion);
  2863  002194  5003               	movf	leer_rtc@direccion^0,w,c
  2864  002196  EC57  F011         	call	_i2c_envia_dato
  2865                           
  2866                           ;./RTC.h: 18:     i2c_reinicia_com();
  2867  00219A  EC62  F011         	call	_i2c_reinicia_com	;wreg free
  2868                           
  2869                           ;./RTC.h: 19:     i2c_envia_dato(0xD1);
  2870  00219E  0ED1               	movlw	209
  2871  0021A0  EC57  F011         	call	_i2c_envia_dato
  2872                           
  2873                           ;./RTC.h: 20:     dato = i2c_recibe_dato();
  2874  0021A4  EC2E  F011         	call	_i2c_recibe_dato	;wreg free
  2875  0021A8  6E04               	movwf	leer_rtc@dato^0,c
  2876                           
  2877                           ;./RTC.h: 21:     i2c_detener();
  2878  0021AA  EC6A  F011         	call	_i2c_detener	;wreg free
  2879  0021AE                     
  2880                           ;./RTC.h: 22:     return dato;
  2881  0021AE  5004               	movf	leer_rtc@dato^0,w,c
  2882  0021B0  0012               	return		;funcret
  2883  0021B2                     __end_of_leer_rtc:
  2884                           	opt callstack 0
  2885                           
  2886 ;; *************** function _convertirDato *****************
  2887 ;; Defined at:
  2888 ;;		line 28 in file "./RTC.h"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;  dato            1    wreg     unsigned char 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;  dato            1    1[COMRAM] unsigned char 
  2893 ;;  datoR           1    2[COMRAM] unsigned char 
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  1    wreg      unsigned char 
  2896 ;; Registers used:
  2897 ;;		wreg, status,2, status,0, prodl, prodh
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2903 ;;      Params:         0       0       0       0       0       0       0       0       0
  2904 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2905 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2906 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2907 ;;Total ram usage:        3 bytes
  2908 ;; Hardware stack levels used:    1
  2909 ;; Hardware stack levels required when called:    1
  2910 ;; This function calls:
  2911 ;;		Nothing
  2912 ;; This function is called by:
  2913 ;;		_dameHoraActual
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text7
  2918  0021FE                     __ptext7:
  2919                           	opt callstack 0
  2920  0021FE                     _convertirDato:
  2921                           	opt callstack 27
  2922                           
  2923                           ;incstack = 0
  2924                           ;convertirDato@dato stored from wreg
  2925  0021FE  6E02               	movwf	convertirDato@dato^0,c
  2926  002200                     
  2927                           ;./RTC.h: 30:     datoR = (dato & 0xF0) >> 4;
  2928  002200  3802               	swapf	convertirDato@dato^0,w,c
  2929  002202  0B0F               	andlw	15
  2930  002204  0B0F               	andlw	15
  2931  002206  6E03               	movwf	convertirDato@datoR^0,c
  2932  002208                     
  2933                           ;./RTC.h: 31:     datoR = (datoR * 10) + (dato & 0x0F);
  2934  002208  C002  F001         	movff	convertirDato@dato,??_convertirDato
  2935  00220C  0E0F               	movlw	15
  2936  00220E  1601               	andwf	??_convertirDato^0,f,c
  2937  002210  5003               	movf	convertirDato@datoR^0,w,c
  2938  002212  0D0A               	mullw	10
  2939  002214  50F3               	movf	243,w,c
  2940  002216  2401               	addwf	??_convertirDato^0,w,c
  2941  002218  6E03               	movwf	convertirDato@datoR^0,c
  2942  00221A                     
  2943                           ;./RTC.h: 32:     return datoR;
  2944  00221A  5003               	movf	convertirDato@datoR^0,w,c
  2945  00221C  0012               	return		;funcret
  2946  00221E                     __end_of_convertirDato:
  2947                           	opt callstack 0
  2948                           
  2949 ;; *************** function _sistemaPrincipal *****************
  2950 ;; Defined at:
  2951 ;;		line 552 in file "main.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  opcion          1    wreg     unsigned char 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  opcion          1   92[COMRAM] unsigned char 
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      void 
  2958 ;; Registers used:
  2959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2965 ;;      Params:         0       0       0       0       0       0       0       0       0
  2966 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2967 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2968 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2969 ;;Total ram usage:        3 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; Hardware stack levels required when called:   10
  2972 ;; This function calls:
  2973 ;;		_UART_printf
  2974 ;;		_asignarHorarios
  2975 ;;		_dameDatosSistema
  2976 ;;		_fijaHoraRtc
  2977 ;;		_mostrarDatosSensores
  2978 ;;		_mostrarDatosSensoresWIFI
  2979 ;;		_mostrarMenu
  2980 ;;		_setTiempoRegar
  2981 ;; This function is called by:
  2982 ;;		_main
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text8
  2987  001A36                     __ptext8:
  2988                           	opt callstack 0
  2989  001A36                     _sistemaPrincipal:
  2990                           	opt callstack 20
  2991                           
  2992                           ;incstack = 0
  2993                           ;sistemaPrincipal@opcion stored from wreg
  2994  001A36  6E5D               	movwf	sistemaPrincipal@opcion^0,c
  2995  001A38                     
  2996                           ;main.c: 554:     PIE1bits.RCIE = 0;
  2997  001A38  9A9D               	bcf	157,5,c	;volatile
  2998                           
  2999                           ;main.c: 556:     switch (opcion) {
  3000  001A3A  EF3B  F00D         	goto	l3525
  3001  001A3E                     l3509:
  3002                           
  3003                           ;main.c: 559:             fijaHoraRtc();
  3004  001A3E  ECCC  F00D         	call	_fijaHoraRtc	;wreg free
  3005                           
  3006                           ;main.c: 560:             break;
  3007  001A42  EF5C  F00D         	goto	l3527
  3008  001A46                     l3511:
  3009                           
  3010                           ;main.c: 563:             asignarHorarios();
  3011  001A46  ECC9  F006         	call	_asignarHorarios	;wreg free
  3012                           
  3013                           ;main.c: 564:             break;
  3014  001A4A  EF5C  F00D         	goto	l3527
  3015  001A4E                     l3513:
  3016                           
  3017                           ;main.c: 567:             setTiempoRegar();
  3018  001A4E  ECEE  F002         	call	_setTiempoRegar	;wreg free
  3019                           
  3020                           ;main.c: 568:             break;
  3021  001A52  EF5C  F00D         	goto	l3527
  3022  001A56                     l3515:
  3023                           
  3024                           ;main.c: 571:             dameDatosSistema();
  3025  001A56  EC0D  F009         	call	_dameDatosSistema	;wreg free
  3026                           
  3027                           ;main.c: 572:             break;
  3028  001A5A  EF5C  F00D         	goto	l3527
  3029  001A5E                     l3519:
  3030                           
  3031                           ;main.c: 578:                 mostrarDatosSensores();
  3032  001A5E  EC22  F006         	call	_mostrarDatosSensores	;wreg free
  3033  001A62  EF5C  F00D         	goto	l3527
  3034  001A66                     l3521:
  3035                           
  3036                           ;main.c: 583:             UART_printf("\r\n Solo se permiten numeros del 1 al 3 \r\n");
  3037  001A66  0E07               	movlw	low STR_24
  3038  001A68  6E02               	movwf	UART_printf@cadena^0,c
  3039  001A6A  0E7D               	movlw	high STR_24
  3040  001A6C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3041  001A6E  ECC6  F00E         	call	_UART_printf	;wreg free
  3042                           
  3043                           ;main.c: 584:             break;
  3044  001A72  EF5C  F00D         	goto	l3527
  3045  001A76                     l3525:
  3046  001A76  505D               	movf	sistemaPrincipal@opcion^0,w,c
  3047  001A78  6E5B               	movwf	??_sistemaPrincipal^0,c
  3048  001A7A  6A5C               	clrf	(??_sistemaPrincipal+1)^0,c
  3049                           
  3050                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3051                           ; Switch size 1, requested type "simple"
  3052                           ; Number of cases is 1, Range of values is 0 to 0
  3053                           ; switch strategies available:
  3054                           ; Name         Instructions Cycles
  3055                           ; simple_byte            4     3 (average)
  3056                           ;	Chosen strategy is simple_byte
  3057  001A7C  505C               	movf	(??_sistemaPrincipal+1)^0,w,c
  3058  001A7E  0A00               	xorlw	0	; case 0
  3059  001A80  B4D8               	btfsc	status,2,c
  3060  001A82  EF45  F00D         	goto	l3689
  3061  001A86  EF33  F00D         	goto	l3521
  3062  001A8A                     l3689:
  3063                           
  3064                           ; Switch size 1, requested type "simple"
  3065                           ; Number of cases is 5, Range of values is 1 to 5
  3066                           ; switch strategies available:
  3067                           ; Name         Instructions Cycles
  3068                           ; simple_byte           16     9 (average)
  3069                           ;	Chosen strategy is simple_byte
  3070  001A8A  505B               	movf	??_sistemaPrincipal^0,w,c
  3071  001A8C  0A01               	xorlw	1	; case 1
  3072  001A8E  B4D8               	btfsc	status,2,c
  3073  001A90  EF1F  F00D         	goto	l3509
  3074  001A94  0A03               	xorlw	3	; case 2
  3075  001A96  B4D8               	btfsc	status,2,c
  3076  001A98  EF23  F00D         	goto	l3511
  3077  001A9C  0A01               	xorlw	1	; case 3
  3078  001A9E  B4D8               	btfsc	status,2,c
  3079  001AA0  EF27  F00D         	goto	l3513
  3080  001AA4  0A07               	xorlw	7	; case 4
  3081  001AA6  B4D8               	btfsc	status,2,c
  3082  001AA8  EF2B  F00D         	goto	l3515
  3083  001AAC  0A01               	xorlw	1	; case 5
  3084  001AAE  B4D8               	btfsc	status,2,c
  3085  001AB0  EF2F  F00D         	goto	l3519
  3086  001AB4  EF33  F00D         	goto	l3521
  3087  001AB8                     l3527:
  3088                           
  3089                           ;main.c: 587:     mostrarMenu();
  3090  001AB8  EC33  F00E         	call	_mostrarMenu	;wreg free
  3091  001ABC                     
  3092                           ;main.c: 588:     PIE1bits.RCIE = 1;
  3093  001ABC  8A9D               	bsf	157,5,c	;volatile
  3094  001ABE  0012               	return		;funcret
  3095  001AC0                     __end_of_sistemaPrincipal:
  3096                           	opt callstack 0
  3097                           
  3098 ;; *************** function _setTiempoRegar *****************
  3099 ;; Defined at:
  3100 ;;		line 398 in file "main.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;		None
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;  i               2   18[COMRAM] int 
  3105 ;;  i               2   16[COMRAM] int 
  3106 ;;  Rx              1   21[COMRAM] unsigned char 
  3107 ;;  datoCapturad    1   20[COMRAM] unsigned char 
  3108 ;;  hora            1   15[COMRAM] unsigned char 
  3109 ;;  tiempoRegar     1   14[COMRAM] unsigned char 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  1    wreg      void 
  3112 ;; Registers used:
  3113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3119 ;;      Params:         0       0       0       0       0       0       0       0       0
  3120 ;;      Locals:         8       0       0       0       0       0       0       0       0
  3121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3122 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3123 ;;Total ram usage:        8 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; Hardware stack levels required when called:    5
  3126 ;; This function calls:
  3127 ;;		_UART_printf
  3128 ;;		_UART_read
  3129 ;;		_UART_write
  3130 ;;		_escribeHorariosMemoria
  3131 ;; This function is called by:
  3132 ;;		_sistemaPrincipal
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           	psect	text9
  3137  0005DC                     __ptext9:
  3138                           	opt callstack 0
  3139  0005DC                     _setTiempoRegar:
  3140                           	opt callstack 24
  3141  0005DC                     
  3142                           ;main.c: 400:     unsigned char hora;;main.c: 401:     unsigned char tiempoRegar;;main.c
      +                          : 402:     unsigned char Rx;;main.c: 403:     char datoCapturado = 0;
  3143  0005DC  0E00               	movlw	0
  3144  0005DE  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3145  0005E0                     
  3146                           ;main.c: 405:     UART_printf("\r\n TIEMPO DE REGADO \r\n");
  3147  0005E0  0EA4               	movlw	low STR_9
  3148  0005E2  6E02               	movwf	UART_printf@cadena^0,c
  3149  0005E4  0E7F               	movlw	high STR_9
  3150  0005E6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3151  0005E8  ECC6  F00E         	call	_UART_printf	;wreg free
  3152  0005EC                     
  3153                           ;main.c: 406:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  3154  0005EC  0E46               	movlw	low STR_6
  3155  0005EE  6E02               	movwf	UART_printf@cadena^0,c
  3156  0005F0  0E7C               	movlw	high STR_6
  3157  0005F2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3158  0005F4  ECC6  F00E         	call	_UART_printf	;wreg free
  3159                           
  3160                           ;main.c: 408:     for (int i = 0; i < 2; i++) {
  3161  0005F8  0E00               	movlw	0
  3162  0005FA  6E12               	movwf	(setTiempoRegar@i+1)^0,c
  3163  0005FC  0E00               	movlw	0
  3164  0005FE  6E11               	movwf	setTiempoRegar@i^0,c
  3165  000600                     l3225:
  3166                           
  3167                           ;main.c: 409:         Rx = UART_read();
  3168  000600  EC23  F00F         	call	_UART_read	;wreg free
  3169  000604  6E16               	movwf	setTiempoRegar@Rx^0,c
  3170  000606                     
  3171                           ;main.c: 410:         if (Rx >= 48 && Rx <= 57) {
  3172  000606  0E2F               	movlw	47
  3173  000608  6416               	cpfsgt	setTiempoRegar@Rx^0,c
  3174  00060A  EF09  F003         	goto	u2471
  3175  00060E  EF0B  F003         	goto	u2470
  3176  000612                     u2471:
  3177  000612  EF2E  F003         	goto	l3245
  3178  000616                     u2470:
  3179  000616  0E3A               	movlw	58
  3180  000618  6016               	cpfslt	setTiempoRegar@Rx^0,c
  3181  00061A  EF11  F003         	goto	u2481
  3182  00061E  EF13  F003         	goto	u2480
  3183  000622                     u2481:
  3184  000622  EF2E  F003         	goto	l3245
  3185  000626                     u2480:
  3186  000626                     
  3187                           ;main.c: 411:             if (!i) {
  3188  000626  5011               	movf	setTiempoRegar@i^0,w,c
  3189  000628  1012               	iorwf	(setTiempoRegar@i+1)^0,w,c
  3190  00062A  A4D8               	btfss	status,2,c
  3191  00062C  EF1A  F003         	goto	u2491
  3192  000630  EF1C  F003         	goto	u2490
  3193  000634                     u2491:
  3194  000634  EF26  F003         	goto	l3239
  3195  000638                     u2490:
  3196  000638                     
  3197                           ;main.c: 412:                 Rx -= 48;
  3198  000638  0E30               	movlw	48
  3199  00063A  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  3200  00063C                     
  3201                           ;main.c: 413:                 hora = Rx;
  3202  00063C  C016  F010         	movff	setTiempoRegar@Rx,setTiempoRegar@hora
  3203  000640                     
  3204                           ;main.c: 414:                 hora *= 10;
  3205  000640  0E0A               	movlw	10
  3206  000642  0210               	mulwf	setTiempoRegar@hora^0,c
  3207  000644  50F3               	movf	prodl,w,c
  3208  000646  6E10               	movwf	setTiempoRegar@hora^0,c
  3209                           
  3210                           ;main.c: 415:             } else {
  3211  000648  EF35  F003         	goto	l3249
  3212  00064C                     l3239:
  3213                           
  3214                           ;main.c: 416:                 datoCapturado = 1;
  3215  00064C  0E01               	movlw	1
  3216  00064E  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3217  000650                     
  3218                           ;main.c: 417:                 Rx -= 48;
  3219  000650  0E30               	movlw	48
  3220  000652  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  3221  000654                     
  3222                           ;main.c: 418:                 hora += Rx;
  3223  000654  5016               	movf	setTiempoRegar@Rx^0,w,c
  3224  000656  2610               	addwf	setTiempoRegar@hora^0,f,c
  3225  000658  EF35  F003         	goto	l3249
  3226  00065C                     l3245:
  3227                           
  3228                           ;main.c: 421:             datoCapturado = 0;
  3229  00065C  0E00               	movlw	0
  3230  00065E  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3231  000660                     
  3232                           ;main.c: 423:             UART_write('F');
  3233  000660  0E46               	movlw	70
  3234  000662  EC3B  F011         	call	_UART_write
  3235                           
  3236                           ;main.c: 424:             break;
  3237  000666  EF45  F003         	goto	l3253
  3238  00066A                     l3249:
  3239                           
  3240                           ;main.c: 426:     }
  3241  00066A  4A11               	infsnz	setTiempoRegar@i^0,f,c
  3242  00066C  2A12               	incf	(setTiempoRegar@i+1)^0,f,c
  3243  00066E  BE12               	btfsc	(setTiempoRegar@i+1)^0,7,c
  3244  000670  EF43  F003         	goto	u2501
  3245  000674  5012               	movf	(setTiempoRegar@i+1)^0,w,c
  3246  000676  E109               	bnz	u2500
  3247  000678  0E02               	movlw	2
  3248  00067A  5C11               	subwf	setTiempoRegar@i^0,w,c
  3249  00067C  A0D8               	btfss	status,0,c
  3250  00067E  EF43  F003         	goto	u2501
  3251  000682  EF45  F003         	goto	u2500
  3252  000686                     u2501:
  3253  000686  EF00  F003         	goto	l3225
  3254  00068A                     u2500:
  3255  00068A                     l3253:
  3256                           
  3257                           ;main.c: 428:     if (datoCapturado && !esperandoDatos) {
  3258  00068A  5015               	movf	setTiempoRegar@datoCapturado^0,w,c
  3259  00068C  B4D8               	btfsc	status,2,c
  3260  00068E  EF4B  F003         	goto	u2511
  3261  000692  EF4D  F003         	goto	u2510
  3262  000696                     u2511:
  3263  000696  EFD1  F003         	goto	l305
  3264  00069A                     u2510:
  3265  00069A  505E               	movf	_esperandoDatos^0,w,c
  3266  00069C  A4D8               	btfss	status,2,c
  3267  00069E  EF53  F003         	goto	u2521
  3268  0006A2  EF55  F003         	goto	u2520
  3269  0006A6                     u2521:
  3270  0006A6  EFD1  F003         	goto	l305
  3271  0006AA                     u2520:
  3272  0006AA                     
  3273                           ;main.c: 430:         UART_printf("\r\n Ingrese los minutos que desee que se riegue en e
      +                          se horario ej: 15 \r\n");
  3274  0006AA  0EC7               	movlw	low STR_11
  3275  0006AC  6E02               	movwf	UART_printf@cadena^0,c
  3276  0006AE  0E7B               	movlw	high STR_11
  3277  0006B0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3278  0006B2  ECC6  F00E         	call	_UART_printf	;wreg free
  3279  0006B6                     
  3280                           ;main.c: 432:         for (int i = 0; i < 2; i++) {
  3281  0006B6  0E00               	movlw	0
  3282  0006B8  6E14               	movwf	(setTiempoRegar@i_834+1)^0,c
  3283  0006BA  0E00               	movlw	0
  3284  0006BC  6E13               	movwf	setTiempoRegar@i_834^0,c
  3285  0006BE                     l3265:
  3286                           
  3287                           ;main.c: 433:             Rx = UART_read();
  3288  0006BE  EC23  F00F         	call	_UART_read	;wreg free
  3289  0006C2  6E16               	movwf	setTiempoRegar@Rx^0,c
  3290  0006C4                     
  3291                           ;main.c: 434:             if (Rx >= 48 && Rx <= 57) {
  3292  0006C4  0E2F               	movlw	47
  3293  0006C6  6416               	cpfsgt	setTiempoRegar@Rx^0,c
  3294  0006C8  EF68  F003         	goto	u2531
  3295  0006CC  EF6A  F003         	goto	u2530
  3296  0006D0                     u2531:
  3297  0006D0  EF8D  F003         	goto	l3285
  3298  0006D4                     u2530:
  3299  0006D4  0E3A               	movlw	58
  3300  0006D6  6016               	cpfslt	setTiempoRegar@Rx^0,c
  3301  0006D8  EF70  F003         	goto	u2541
  3302  0006DC  EF72  F003         	goto	u2540
  3303  0006E0                     u2541:
  3304  0006E0  EF8D  F003         	goto	l3285
  3305  0006E4                     u2540:
  3306  0006E4                     
  3307                           ;main.c: 435:                 if (!i) {
  3308  0006E4  5013               	movf	setTiempoRegar@i_834^0,w,c
  3309  0006E6  1014               	iorwf	(setTiempoRegar@i_834+1)^0,w,c
  3310  0006E8  A4D8               	btfss	status,2,c
  3311  0006EA  EF79  F003         	goto	u2551
  3312  0006EE  EF7B  F003         	goto	u2550
  3313  0006F2                     u2551:
  3314  0006F2  EF85  F003         	goto	l3279
  3315  0006F6                     u2550:
  3316  0006F6                     
  3317                           ;main.c: 436:                     Rx -= 48;
  3318  0006F6  0E30               	movlw	48
  3319  0006F8  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  3320  0006FA                     
  3321                           ;main.c: 437:                     tiempoRegar = Rx;
  3322  0006FA  C016  F00F         	movff	setTiempoRegar@Rx,setTiempoRegar@tiempoRegar
  3323  0006FE                     
  3324                           ;main.c: 438:                     tiempoRegar *= 10;
  3325  0006FE  0E0A               	movlw	10
  3326  000700  020F               	mulwf	setTiempoRegar@tiempoRegar^0,c
  3327  000702  50F3               	movf	prodl,w,c
  3328  000704  6E0F               	movwf	setTiempoRegar@tiempoRegar^0,c
  3329                           
  3330                           ;main.c: 439:                 } else {
  3331  000706  EF94  F003         	goto	l3289
  3332  00070A                     l3279:
  3333                           
  3334                           ;main.c: 440:                     datoCapturado = 1;
  3335  00070A  0E01               	movlw	1
  3336  00070C  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3337  00070E                     
  3338                           ;main.c: 441:                     Rx -= 48;
  3339  00070E  0E30               	movlw	48
  3340  000710  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  3341  000712                     
  3342                           ;main.c: 442:                     tiempoRegar += Rx;
  3343  000712  5016               	movf	setTiempoRegar@Rx^0,w,c
  3344  000714  260F               	addwf	setTiempoRegar@tiempoRegar^0,f,c
  3345  000716  EF94  F003         	goto	l3289
  3346  00071A                     l3285:
  3347                           
  3348                           ;main.c: 445:                 datoCapturado = 0;
  3349  00071A  0E00               	movlw	0
  3350  00071C  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3351  00071E                     
  3352                           ;main.c: 447:                 UART_write('F');
  3353  00071E  0E46               	movlw	70
  3354  000720  EC3B  F011         	call	_UART_write
  3355                           
  3356                           ;main.c: 448:                 break;
  3357  000724  EFA4  F003         	goto	l3293
  3358  000728                     l3289:
  3359                           
  3360                           ;main.c: 450:         }
  3361  000728  4A13               	infsnz	setTiempoRegar@i_834^0,f,c
  3362  00072A  2A14               	incf	(setTiempoRegar@i_834+1)^0,f,c
  3363  00072C  BE14               	btfsc	(setTiempoRegar@i_834+1)^0,7,c
  3364  00072E  EFA2  F003         	goto	u2561
  3365  000732  5014               	movf	(setTiempoRegar@i_834+1)^0,w,c
  3366  000734  E109               	bnz	u2560
  3367  000736  0E02               	movlw	2
  3368  000738  5C13               	subwf	setTiempoRegar@i_834^0,w,c
  3369  00073A  A0D8               	btfss	status,0,c
  3370  00073C  EFA2  F003         	goto	u2561
  3371  000740  EFA4  F003         	goto	u2560
  3372  000744                     u2561:
  3373  000744  EF5F  F003         	goto	l3265
  3374  000748                     u2560:
  3375  000748                     l3293:
  3376                           
  3377                           ;main.c: 452:         if (datoCapturado && !esperandoDatos) {
  3378  000748  5015               	movf	setTiempoRegar@datoCapturado^0,w,c
  3379  00074A  B4D8               	btfsc	status,2,c
  3380  00074C  EFAA  F003         	goto	u2571
  3381  000750  EFAC  F003         	goto	u2570
  3382  000754                     u2571:
  3383  000754  EFD1  F003         	goto	l305
  3384  000758                     u2570:
  3385  000758  505E               	movf	_esperandoDatos^0,w,c
  3386  00075A  A4D8               	btfss	status,2,c
  3387  00075C  EFB2  F003         	goto	u2581
  3388  000760  EFB4  F003         	goto	u2580
  3389  000764                     u2581:
  3390  000764  EFD1  F003         	goto	l305
  3391  000768                     u2580:
  3392  000768                     
  3393                           ;main.c: 454:             UART_printf("\r\n Minutos de riego establecidos! \r\n");
  3394  000768  0ECF               	movlw	low STR_12
  3395  00076A  6E02               	movwf	UART_printf@cadena^0,c
  3396  00076C  0E7D               	movlw	high STR_12
  3397  00076E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3398  000770  ECC6  F00E         	call	_UART_printf	;wreg free
  3399  000774                     
  3400                           ;main.c: 456:             horarios[hora].tiempoRegar = tiempoRegar;
  3401  000774  5010               	movf	setTiempoRegar@hora^0,w,c
  3402  000776  0D03               	mullw	3
  3403  000778  0E02               	movlw	low (_horarios+2)
  3404  00077A  24F3               	addwf	243,w,c
  3405  00077C  6ED9               	movwf	fsr2l,c
  3406  00077E  0E01               	movlw	high (_horarios+2)
  3407  000780  20F4               	addwfc	prodh,w,c
  3408  000782  6EDA               	movwf	fsr2h,c
  3409  000784  C00F  FFDF         	movff	setTiempoRegar@tiempoRegar,indf2
  3410  000788                     
  3411                           ;main.c: 457:             minutosRegar = horarios[hora].tiempoRegar;
  3412  000788  5010               	movf	setTiempoRegar@hora^0,w,c
  3413  00078A  0D03               	mullw	3
  3414  00078C  0E02               	movlw	low (_horarios+2)
  3415  00078E  24F3               	addwf	243,w,c
  3416  000790  6ED9               	movwf	fsr2l,c
  3417  000792  0E01               	movlw	high (_horarios+2)
  3418  000794  20F4               	addwfc	prodh,w,c
  3419  000796  6EDA               	movwf	fsr2h,c
  3420  000798  50DF               	movf	indf2,w,c
  3421  00079A  0100               	movlb	0	; () banked
  3422  00079C  6F85               	movwf	_minutosRegar& (0+255),b
  3423  00079E                     
  3424                           ; BSR set to: 0
  3425                           ;main.c: 459:             escribeHorariosMemoria();
  3426  00079E  EC82  F009         	call	_escribeHorariosMemoria	;wreg free
  3427  0007A2                     l305:
  3428  0007A2  0012               	return		;funcret
  3429  0007A4                     __end_of_setTiempoRegar:
  3430                           	opt callstack 0
  3431                           
  3432 ;; *************** function _mostrarMenu *****************
  3433 ;; Defined at:
  3434 ;;		line 540 in file "main.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;		None
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;		None
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  1    wreg      void 
  3441 ;; Registers used:
  3442 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3448 ;;      Params:         0       0       0       0       0       0       0       0       0
  3449 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3450 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3451 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3452 ;;Total ram usage:        0 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; Hardware stack levels required when called:    3
  3455 ;; This function calls:
  3456 ;;		_UART_printf
  3457 ;; This function is called by:
  3458 ;;		_sistemaPrincipal
  3459 ;;		_sistemaRegado
  3460 ;;		_main
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           	psect	text10
  3465  001C66                     __ptext10:
  3466                           	opt callstack 0
  3467  001C66                     _mostrarMenu:
  3468                           	opt callstack 26
  3469  001C66                     
  3470                           ;main.c: 542:     UART_printf("\r\n Ingresa una opcion a Realizar: \r\n");
  3471  001C66  0EF4               	movlw	low STR_16
  3472  001C68  6E02               	movwf	UART_printf@cadena^0,c
  3473  001C6A  0E7D               	movlw	high STR_16
  3474  001C6C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3475  001C6E  ECC6  F00E         	call	_UART_printf	;wreg free
  3476                           
  3477                           ;main.c: 543:     UART_printf("\r\n 1. Fijar Hora Actual \r\n");
  3478  001C72  0E3D               	movlw	low STR_17
  3479  001C74  6E02               	movwf	UART_printf@cadena^0,c
  3480  001C76  0E7F               	movlw	high STR_17
  3481  001C78  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3482  001C7A  ECC6  F00E         	call	_UART_printf	;wreg free
  3483                           
  3484                           ;main.c: 544:     UART_printf("\r\n 2. Asignar Horarios para regar \r\n");
  3485  001C7E  0E3E               	movlw	low STR_18
  3486  001C80  6E02               	movwf	UART_printf@cadena^0,c
  3487  001C82  0E7E               	movlw	high STR_18
  3488  001C84  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3489  001C86  ECC6  F00E         	call	_UART_printf	;wreg free
  3490                           
  3491                           ;main.c: 545:     UART_printf("\r\n 3. Programar tiempo de riego en un horario \r\n");
  3492  001C8A  0EAB               	movlw	low STR_19
  3493  001C8C  6E02               	movwf	UART_printf@cadena^0,c
  3494  001C8E  0E7C               	movlw	high STR_19
  3495  001C90  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3496  001C92  ECC6  F00E         	call	_UART_printf	;wreg free
  3497                           
  3498                           ;main.c: 546:     UART_printf("\r\n 4. Dame datos del sistema \r\n");
  3499  001C96  0EA5               	movlw	low STR_20
  3500  001C98  6E02               	movwf	UART_printf@cadena^0,c
  3501  001C9A  0E7E               	movlw	high STR_20
  3502  001C9C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3503  001C9E  ECC6  F00E         	call	_UART_printf	;wreg free
  3504                           
  3505                           ;main.c: 547:     UART_printf("\r\n 5. Mostrar valores sensores \r\n");
  3506  001CA2  0E63               	movlw	low STR_21
  3507  001CA4  6E02               	movwf	UART_printf@cadena^0,c
  3508  001CA6  0E7E               	movlw	high STR_21
  3509  001CA8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3510  001CAA  ECC6  F00E         	call	_UART_printf	;wreg free
  3511                           
  3512                           ;main.c: 548:     UART_printf("\r\n Opcion:  \r");
  3513  001CAE  0EF0               	movlw	low STR_22
  3514  001CB0  6E02               	movwf	UART_printf@cadena^0,c
  3515  001CB2  0E7F               	movlw	high STR_22
  3516  001CB4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3517  001CB6  ECC6  F00E         	call	_UART_printf	;wreg free
  3518                           
  3519                           ;main.c: 549:     UART_printf("\r\n");
  3520  001CBA  0E6F               	movlw	low (STR_8+23)
  3521  001CBC  6E02               	movwf	UART_printf@cadena^0,c
  3522  001CBE  0E7F               	movlw	high (STR_8+23)
  3523  001CC0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3524  001CC2  ECC6  F00E         	call	_UART_printf	;wreg free
  3525  001CC6  0012               	return		;funcret
  3526  001CC8                     __end_of_mostrarMenu:
  3527                           	opt callstack 0
  3528                           
  3529 ;; *************** function _mostrarDatosSensoresWIFI *****************
  3530 ;; Defined at:
  3531 ;;		line 730 in file "main.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;		None
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;  i               2   72[BANK0 ] int 
  3536 ;;  buffer         50   20[BANK0 ] unsigned char [50]
  3537 ;;  humedad         1   71[BANK0 ] unsigned char 
  3538 ;;  temperatura     1   70[BANK0 ] unsigned char 
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  1    wreg      void 
  3541 ;; Registers used:
  3542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3548 ;;      Params:         0       0       0       0       0       0       0       0       0
  3549 ;;      Locals:         0      54       0       0       0       0       0       0       0
  3550 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3551 ;;      Totals:         2      54       0       0       0       0       0       0       0
  3552 ;;Total ram usage:       56 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:    9
  3555 ;; This function calls:
  3556 ;;		_UART_printf
  3557 ;;		_UART_write
  3558 ;;		___wmul
  3559 ;;		_dameTemperaturaHumedad
  3560 ;;		_lecturaWifi
  3561 ;;		_sprintf
  3562 ;; This function is called by:
  3563 ;;		_sistemaPrincipal
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           	psect	text11
  3568  000EDA                     __ptext11:
  3569                           	opt callstack 0
  3570  000EDA                     _mostrarDatosSensoresWIFI:
  3571                           	opt callstack 20
  3572  000EDA                     
  3573                           ;main.c: 733:     char buffer[50];;main.c: 734:     unsigned char temperatura, humedad;;
      +                          main.c: 736:     lecturaWifi();
  3574  000EDA  EC94  F008         	call	_lecturaWifi	;wreg free
  3575  000EDE                     
  3576                           ;main.c: 738:     UART_write('I');
  3577  000EDE  0E49               	movlw	73
  3578  000EE0  EC3B  F011         	call	_UART_write
  3579  000EE4                     
  3580                           ;main.c: 741:     if (peticionLecturaSensores) {
  3581  000EE4  0100               	movlb	0	; () banked
  3582  000EE6  5182               	movf	_peticionLecturaSensores& (0+255),w,b
  3583  000EE8  B4D8               	btfsc	status,2,c
  3584  000EEA  EF79  F007         	goto	u2601
  3585  000EEE  EF7B  F007         	goto	u2600
  3586  000EF2                     u2601:
  3587  000EF2  EFD8  F007         	goto	l3353
  3588  000EF6                     u2600:
  3589  000EF6                     
  3590                           ; BSR set to: 0
  3591                           ;main.c: 743:         for (int i = 0; i < 3; i++) {
  3592  000EF6  0E00               	movlw	0
  3593  000EF8  6FF7               	movwf	(mostrarDatosSensoresWIFI@i+1)& (0+255),b
  3594  000EFA  0E00               	movlw	0
  3595  000EFC  6FF6               	movwf	mostrarDatosSensoresWIFI@i& (0+255),b
  3596  000EFE                     l3339:
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;main.c: 745:             if (sensores[i].humedadMedida >= 60) {
  3600  000EFE  C0F6  F001         	movff	mostrarDatosSensoresWIFI@i,___wmul@multiplier
  3601  000F02  C0F7  F002         	movff	mostrarDatosSensoresWIFI@i+1,___wmul@multiplier+1
  3602  000F06  0E00               	movlw	0
  3603  000F08  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3604  000F0A  0E03               	movlw	3
  3605  000F0C  6E03               	movwf	___wmul@multiplicand^0,c
  3606  000F0E  ECEC  F010         	call	___wmul	;wreg free
  3607  000F12  0E60               	movlw	low _sensores
  3608  000F14  2401               	addwf	?___wmul^0,w,c
  3609  000F16  6ED9               	movwf	fsr2l,c
  3610  000F18  0E00               	movlw	high _sensores
  3611  000F1A  2002               	addwfc	(?___wmul+1)^0,w,c
  3612  000F1C  6EDA               	movwf	fsr2h,c
  3613  000F1E  0E01               	movlw	1
  3614  000F20  BEDB               	btfsc	plusw2,7,c
  3615  000F22  EF9D  F007         	goto	u2611
  3616  000F26  0E01               	movlw	1
  3617  000F28  50DB               	movf	plusw2,w,c
  3618  000F2A  E109               	bnz	u2610
  3619  000F2C  0E3C               	movlw	60
  3620  000F2E  5CDE               	subwf	postinc2,w,c
  3621  000F30  A0D8               	btfss	status,0,c
  3622  000F32  EF9D  F007         	goto	u2611
  3623  000F36  EF9F  F007         	goto	u2610
  3624  000F3A                     u2611:
  3625  000F3A  EFB6  F007         	goto	l3345
  3626  000F3E                     u2610:
  3627  000F3E                     
  3628                           ;main.c: 746:                 sprintf(buffer, "\r\n\nEl sensor %d detecta tierra seca\r\
      +                          n", i);
  3629  000F3E  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3630  000F40  0100               	movlb	0	; () banked
  3631  000F42  6FAE               	movwf	sprintf@s& (0+255),b
  3632  000F44  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3633  000F46  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3634  000F48  0EA9               	movlw	low STR_32
  3635  000F4A  6FB0               	movwf	sprintf@fmt& (0+255),b
  3636  000F4C  0E7D               	movlw	high STR_32
  3637  000F4E  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3638  000F50  C0F6  F0B2         	movff	mostrarDatosSensoresWIFI@i,?_sprintf+4
  3639  000F54  C0F7  F0B3         	movff	mostrarDatosSensoresWIFI@i+1,?_sprintf+5
  3640  000F58  EC4D  F00F         	call	_sprintf	;wreg free
  3641  000F5C                     l3343:
  3642                           
  3643                           ;main.c: 747:                 UART_printf(buffer);
  3644  000F5C  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3645  000F5E  6E02               	movwf	UART_printf@cadena^0,c
  3646  000F60  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3647  000F62  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3648  000F64  ECC6  F00E         	call	_UART_printf	;wreg free
  3649                           
  3650                           ;main.c: 750:             } else {
  3651  000F68  EFC7  F007         	goto	l3349
  3652  000F6C                     l3345:
  3653                           
  3654                           ;main.c: 751:                 sprintf(buffer, "\r\n\nEl sensor %d detecta tierra humeda\
      +                          r\n", i);
  3655  000F6C  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3656  000F6E  0100               	movlb	0	; () banked
  3657  000F70  6FAE               	movwf	sprintf@s& (0+255),b
  3658  000F72  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3659  000F74  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3660  000F76  0E5B               	movlw	low STR_33
  3661  000F78  6FB0               	movwf	sprintf@fmt& (0+255),b
  3662  000F7A  0E7D               	movlw	high STR_33
  3663  000F7C  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3664  000F7E  C0F6  F0B2         	movff	mostrarDatosSensoresWIFI@i,?_sprintf+4
  3665  000F82  C0F7  F0B3         	movff	mostrarDatosSensoresWIFI@i+1,?_sprintf+5
  3666  000F86  EC4D  F00F         	call	_sprintf	;wreg free
  3667  000F8A  EFAE  F007         	goto	l3343
  3668  000F8E                     l3349:
  3669                           
  3670                           ;main.c: 755:         }
  3671  000F8E  0100               	movlb	0	; () banked
  3672  000F90  4BF6               	infsnz	mostrarDatosSensoresWIFI@i& (0+255),f,b
  3673  000F92  2BF7               	incf	(mostrarDatosSensoresWIFI@i+1)& (0+255),f,b
  3674  000F94                     
  3675                           ; BSR set to: 0
  3676  000F94  BFF7               	btfsc	(mostrarDatosSensoresWIFI@i+1)& (0+255),7,b
  3677  000F96  EFD6  F007         	goto	u2621
  3678  000F9A  51F7               	movf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  3679  000F9C  E109               	bnz	u2620
  3680  000F9E  0E03               	movlw	3
  3681  000FA0  5DF6               	subwf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  3682  000FA2  A0D8               	btfss	status,0,c
  3683  000FA4  EFD6  F007         	goto	u2621
  3684  000FA8  EFD8  F007         	goto	u2620
  3685  000FAC                     u2621:
  3686  000FAC  EF7F  F007         	goto	l3339
  3687  000FB0                     u2620:
  3688  000FB0                     l3353:
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;main.c: 759:     dameTemperaturaHumedad(&humedad, &temperatura);
  3692  000FB0  0EF5               	movlw	low mostrarDatosSensoresWIFI@humedad
  3693  000FB2  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  3694  000FB4  0E00               	movlw	high mostrarDatosSensoresWIFI@humedad
  3695  000FB6  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  3696  000FB8  0EF4               	movlw	low mostrarDatosSensoresWIFI@temperatura
  3697  000FBA  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  3698  000FBC  0E00               	movlw	high mostrarDatosSensoresWIFI@temperatura
  3699  000FBE  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  3700  000FC0  ECDA  F00B         	call	_dameTemperaturaHumedad	;wreg free
  3701                           
  3702                           ;main.c: 761:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", humedad);
  3703  000FC4  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3704  000FC6  0100               	movlb	0	; () banked
  3705  000FC8  6FAE               	movwf	sprintf@s& (0+255),b
  3706  000FCA  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3707  000FCC  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3708  000FCE  0EC5               	movlw	low STR_29
  3709  000FD0  6FB0               	movwf	sprintf@fmt& (0+255),b
  3710  000FD2  0E7E               	movlw	high STR_29
  3711  000FD4  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3712  000FD6  C0F5  F0B2         	movff	mostrarDatosSensoresWIFI@humedad,?_sprintf+4
  3713  000FDA  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  3714  000FDC  EC4D  F00F         	call	_sprintf	;wreg free
  3715  000FE0                     
  3716                           ;main.c: 762:     UART_printf(buffer);
  3717  000FE0  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3718  000FE2  6E02               	movwf	UART_printf@cadena^0,c
  3719  000FE4  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3720  000FE6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3721  000FE8  ECC6  F00E         	call	_UART_printf	;wreg free
  3722  000FEC                     
  3723                           ;main.c: 763:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", temperatura);
  3724  000FEC  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3725  000FEE  0100               	movlb	0	; () banked
  3726  000FF0  6FAE               	movwf	sprintf@s& (0+255),b
  3727  000FF2  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3728  000FF4  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3729  000FF6  0E04               	movlw	low STR_30
  3730  000FF8  6FB0               	movwf	sprintf@fmt& (0+255),b
  3731  000FFA  0E7F               	movlw	high STR_30
  3732  000FFC  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3733  000FFE  C0F4  F0B2         	movff	mostrarDatosSensoresWIFI@temperatura,?_sprintf+4
  3734  001002  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  3735  001004  EC4D  F00F         	call	_sprintf	;wreg free
  3736                           
  3737                           ;main.c: 764:     UART_printf(buffer);
  3738  001008  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3739  00100A  6E02               	movwf	UART_printf@cadena^0,c
  3740  00100C  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3741  00100E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3742  001010  ECC6  F00E         	call	_UART_printf	;wreg free
  3743  001014                     
  3744                           ;main.c: 766:     UART_write('I');
  3745  001014  0E49               	movlw	73
  3746  001016  EC3B  F011         	call	_UART_write
  3747  00101A  0012               	return		;funcret
  3748  00101C                     __end_of_mostrarDatosSensoresWIFI:
  3749                           	opt callstack 0
  3750                           
  3751 ;; *************** function _lecturaWifi *****************
  3752 ;; Defined at:
  3753 ;;		line 489 in file "main.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;		None
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;  i               2   14[COMRAM] int 
  3758 ;;  Rx              1   13[COMRAM] unsigned char 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  1    wreg      void 
  3761 ;; Registers used:
  3762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3768 ;;      Params:         0       0       0       0       0       0       0       0       0
  3769 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3770 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3771 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3772 ;;Total ram usage:        3 bytes
  3773 ;; Hardware stack levels used:    1
  3774 ;; Hardware stack levels required when called:    3
  3775 ;; This function calls:
  3776 ;;		_UART_printf
  3777 ;;		_UART_read
  3778 ;;		_UART_write
  3779 ;;		___wmul
  3780 ;;		_restablecerDatosSensor
  3781 ;; This function is called by:
  3782 ;;		_sistemaRegado
  3783 ;;		_mostrarDatosSensoresWIFI
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           	psect	text12
  3788  001128                     __ptext12:
  3789                           	opt callstack 0
  3790  001128                     _lecturaWifi:
  3791                           	opt callstack 26
  3792  001128                     
  3793                           ;main.c: 491:     PIE1bits.RCIE = 0;
  3794  001128  9A9D               	bcf	157,5,c	;volatile
  3795  00112A                     
  3796                           ;main.c: 495:     restablecerDatosSensor();
  3797  00112A  EC64  F00E         	call	_restablecerDatosSensor	;wreg free
  3798  00112E                     
  3799                           ;main.c: 497:     UART_write('R');
  3800  00112E  0E52               	movlw	82
  3801  001130  EC3B  F011         	call	_UART_write
  3802  001134                     
  3803                           ;main.c: 499:     UART_printf("\r\nSolicitando Muestreo de sensores\r\n\n");
  3804  001134  0E83               	movlw	low STR_13
  3805  001136  6E02               	movwf	UART_printf@cadena^0,c
  3806  001138  0E7D               	movlw	high STR_13
  3807  00113A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3808  00113C  ECC6  F00E         	call	_UART_printf	;wreg free
  3809  001140                     
  3810                           ;main.c: 501:     Rx = UART_read();
  3811  001140  EC23  F00F         	call	_UART_read	;wreg free
  3812  001144  6E0E               	movwf	lecturaWifi@Rx^0,c
  3813  001146                     
  3814                           ;main.c: 503:     if (Rx == 'O') {
  3815  001146  0E4F               	movlw	79
  3816  001148  180E               	xorwf	lecturaWifi@Rx^0,w,c
  3817  00114A  A4D8               	btfss	status,2,c
  3818  00114C  EFAA  F008         	goto	u2141
  3819  001150  EFAC  F008         	goto	u2140
  3820  001154                     u2141:
  3821  001154  EF08  F009         	goto	l2979
  3822  001158                     u2140:
  3823  001158                     
  3824                           ;main.c: 505:         peticionLecturaSensores = 1;
  3825  001158  0E01               	movlw	1
  3826  00115A  0100               	movlb	0	; () banked
  3827  00115C  6F82               	movwf	_peticionLecturaSensores& (0+255),b
  3828                           
  3829                           ;main.c: 507:         for (int i = 0; i < 3; i++) {
  3830  00115E  0E00               	movlw	0
  3831  001160  6E10               	movwf	(lecturaWifi@i+1)^0,c
  3832  001162  0E00               	movlw	0
  3833  001164  6E0F               	movwf	lecturaWifi@i^0,c
  3834  001166                     l2961:
  3835                           
  3836                           ;main.c: 509:             UART_printf("\r\nDame DATOS DEL SENSOR :\r\n");
  3837  001166  0E21               	movlw	low STR_14
  3838  001168  6E02               	movwf	UART_printf@cadena^0,c
  3839  00116A  0E7F               	movlw	high STR_14
  3840  00116C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3841  00116E  ECC6  F00E         	call	_UART_printf	;wreg free
  3842  001172                     
  3843                           ;main.c: 511:             Rx = UART_read();
  3844  001172  EC23  F00F         	call	_UART_read	;wreg free
  3845  001176  6E0E               	movwf	lecturaWifi@Rx^0,c
  3846  001178                     
  3847                           ;main.c: 512:             Rx -= 48;
  3848  001178  0E30               	movlw	48
  3849  00117A  5E0E               	subwf	lecturaWifi@Rx^0,f,c
  3850  00117C                     
  3851                           ;main.c: 514:             if (Rx == 1)
  3852  00117C  040E               	decf	lecturaWifi@Rx^0,w,c
  3853  00117E  A4D8               	btfss	status,2,c
  3854  001180  EFC4  F008         	goto	u2151
  3855  001184  EFC6  F008         	goto	u2150
  3856  001188                     u2151:
  3857  001188  EFDC  F008         	goto	l2971
  3858  00118C                     u2150:
  3859  00118C                     
  3860                           ;main.c: 515:                 sensores[i].humedadMedida = 60;
  3861  00118C  C00F  F001         	movff	lecturaWifi@i,___wmul@multiplier
  3862  001190  C010  F002         	movff	lecturaWifi@i+1,___wmul@multiplier+1
  3863  001194  0E00               	movlw	0
  3864  001196  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3865  001198  0E03               	movlw	3
  3866  00119A  6E03               	movwf	___wmul@multiplicand^0,c
  3867  00119C  ECEC  F010         	call	___wmul	;wreg free
  3868  0011A0  0E60               	movlw	low _sensores
  3869  0011A2  2401               	addwf	?___wmul^0,w,c
  3870  0011A4  6ED9               	movwf	fsr2l,c
  3871  0011A6  0E00               	movlw	high _sensores
  3872  0011A8  2002               	addwfc	(?___wmul+1)^0,w,c
  3873  0011AA  6EDA               	movwf	fsr2h,c
  3874  0011AC  0E3C               	movlw	60
  3875  0011AE  6EDE               	movwf	postinc2,c
  3876  0011B0  0E00               	movlw	0
  3877  0011B2  6EDD               	movwf	postdec2,c
  3878  0011B4  EFF0  F008         	goto	l2973
  3879  0011B8                     l2971:
  3880                           
  3881                           ;main.c: 517:                 sensores[i].humedadMedida = 0;
  3882  0011B8  C00F  F001         	movff	lecturaWifi@i,___wmul@multiplier
  3883  0011BC  C010  F002         	movff	lecturaWifi@i+1,___wmul@multiplier+1
  3884  0011C0  0E00               	movlw	0
  3885  0011C2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3886  0011C4  0E03               	movlw	3
  3887  0011C6  6E03               	movwf	___wmul@multiplicand^0,c
  3888  0011C8  ECEC  F010         	call	___wmul	;wreg free
  3889  0011CC  0E60               	movlw	low _sensores
  3890  0011CE  2401               	addwf	?___wmul^0,w,c
  3891  0011D0  6ED9               	movwf	fsr2l,c
  3892  0011D2  0E00               	movlw	high _sensores
  3893  0011D4  2002               	addwfc	(?___wmul+1)^0,w,c
  3894  0011D6  6EDA               	movwf	fsr2h,c
  3895  0011D8  0E00               	movlw	0
  3896  0011DA  6EDE               	movwf	postinc2,c
  3897  0011DC  0E00               	movlw	0
  3898  0011DE  6EDD               	movwf	postdec2,c
  3899  0011E0                     l2973:
  3900                           
  3901                           ;main.c: 519:         }
  3902  0011E0  4A0F               	infsnz	lecturaWifi@i^0,f,c
  3903  0011E2  2A10               	incf	(lecturaWifi@i+1)^0,f,c
  3904  0011E4  BE10               	btfsc	(lecturaWifi@i+1)^0,7,c
  3905  0011E6  EFFE  F008         	goto	u2161
  3906  0011EA  5010               	movf	(lecturaWifi@i+1)^0,w,c
  3907  0011EC  E109               	bnz	u2160
  3908  0011EE  0E03               	movlw	3
  3909  0011F0  5C0F               	subwf	lecturaWifi@i^0,w,c
  3910  0011F2  A0D8               	btfss	status,0,c
  3911  0011F4  EFFE  F008         	goto	u2161
  3912  0011F8  EF00  F009         	goto	u2160
  3913  0011FC                     u2161:
  3914  0011FC  EFB3  F008         	goto	l2961
  3915  001200                     u2160:
  3916  001200                     
  3917                           ;main.c: 521:         UART_printf("\r\nSensores Leidos con Exito!\r\n\n");
  3918  001200  0E85               	movlw	low STR_15
  3919  001202  6E02               	movwf	UART_printf@cadena^0,c
  3920  001204  0E7E               	movlw	high STR_15
  3921  001206  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3922  001208  ECC6  F00E         	call	_UART_printf	;wreg free
  3923                           
  3924                           ;main.c: 523:     } else {
  3925  00120C  EF0B  F009         	goto	l2981
  3926  001210                     l2979:
  3927                           
  3928                           ;main.c: 524:         peticionLecturaSensores = 0;
  3929  001210  0E00               	movlw	0
  3930  001212  0100               	movlb	0	; () banked
  3931  001214  6F82               	movwf	_peticionLecturaSensores& (0+255),b
  3932  001216                     l2981:
  3933                           
  3934                           ;main.c: 527:     PIE1bits.RCIE = 1;
  3935  001216  8A9D               	bsf	157,5,c	;volatile
  3936  001218  0012               	return		;funcret
  3937  00121A                     __end_of_lecturaWifi:
  3938                           	opt callstack 0
  3939                           
  3940 ;; *************** function _restablecerDatosSensor *****************
  3941 ;; Defined at:
  3942 ;;		line 484 in file "main.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;		None
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;  i               2   11[COMRAM] int 
  3947 ;; Return value:  Size  Location     Type
  3948 ;;                  1    wreg      void 
  3949 ;; Registers used:
  3950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3956 ;;      Params:         0       0       0       0       0       0       0       0       0
  3957 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3958 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3959 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3960 ;;Total ram usage:        2 bytes
  3961 ;; Hardware stack levels used:    1
  3962 ;; Hardware stack levels required when called:    2
  3963 ;; This function calls:
  3964 ;;		___wmul
  3965 ;;		_constructorSensor
  3966 ;; This function is called by:
  3967 ;;		_lecturaWifi
  3968 ;;		_main
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text13
  3973  001CC8                     __ptext13:
  3974                           	opt callstack 0
  3975  001CC8                     _restablecerDatosSensor:
  3976                           	opt callstack 26
  3977  001CC8                     
  3978                           ;main.c: 485:     for (int i = 0; i < 3; i++)
  3979  001CC8  0E00               	movlw	0
  3980  001CCA  6E0D               	movwf	(restablecerDatosSensor@i+1)^0,c
  3981  001CCC  0E00               	movlw	0
  3982  001CCE  6E0C               	movwf	restablecerDatosSensor@i^0,c
  3983  001CD0                     l2843:
  3984                           
  3985                           ;main.c: 486:         constructorSensor(sensores[i], 0, i);
  3986  001CD0  C00C  F001         	movff	restablecerDatosSensor@i,___wmul@multiplier
  3987  001CD4  C00D  F002         	movff	restablecerDatosSensor@i+1,___wmul@multiplier+1
  3988  001CD8  0E00               	movlw	0
  3989  001CDA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3990  001CDC  0E03               	movlw	3
  3991  001CDE  6E03               	movwf	___wmul@multiplicand^0,c
  3992  001CE0  ECEC  F010         	call	___wmul	;wreg free
  3993  001CE4  0E60               	movlw	low _sensores
  3994  001CE6  2401               	addwf	?___wmul^0,w,c
  3995  001CE8  6ED9               	movwf	fsr2l,c
  3996  001CEA  0E00               	movlw	high _sensores
  3997  001CEC  2002               	addwfc	(?___wmul+1)^0,w,c
  3998  001CEE  6EDA               	movwf	fsr2h,c
  3999  001CF0  CFDE F007          	movff	postinc2,constructorSensor@s
  4000  001CF4  CFDE F008          	movff	postinc2,constructorSensor@s+1
  4001  001CF8  CFDD F009          	movff	postdec2,constructorSensor@s+2
  4002  001CFC  0E00               	movlw	0
  4003  001CFE  6E0A               	movwf	constructorSensor@humedad^0,c
  4004  001D00  C00C  F00B         	movff	restablecerDatosSensor@i,constructorSensor@pin
  4005  001D04  EC51  F011         	call	_constructorSensor	;wreg free
  4006  001D08  4A0C               	infsnz	restablecerDatosSensor@i^0,f,c
  4007  001D0A  2A0D               	incf	(restablecerDatosSensor@i+1)^0,f,c
  4008  001D0C  BE0D               	btfsc	(restablecerDatosSensor@i+1)^0,7,c
  4009  001D0E  EF92  F00E         	goto	u2031
  4010  001D12  500D               	movf	(restablecerDatosSensor@i+1)^0,w,c
  4011  001D14  E109               	bnz	u2030
  4012  001D16  0E03               	movlw	3
  4013  001D18  5C0C               	subwf	restablecerDatosSensor@i^0,w,c
  4014  001D1A  A0D8               	btfss	status,0,c
  4015  001D1C  EF92  F00E         	goto	u2031
  4016  001D20  EF94  F00E         	goto	u2030
  4017  001D24                     u2031:
  4018  001D24  EF68  F00E         	goto	l2843
  4019  001D28                     u2030:
  4020  001D28  0012               	return		;funcret
  4021  001D2A                     __end_of_restablecerDatosSensor:
  4022                           	opt callstack 0
  4023                           
  4024 ;; *************** function _constructorSensor *****************
  4025 ;; Defined at:
  4026 ;;		line 115 in file "main.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;  s               3    6[COMRAM] struct .
  4029 ;;  humedad         1    9[COMRAM] unsigned char 
  4030 ;;  pin             1   10[COMRAM] unsigned char 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      void 
  4035 ;; Registers used:
  4036 ;;		None
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4042 ;;      Params:         5       0       0       0       0       0       0       0       0
  4043 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4045 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4046 ;;Total ram usage:        5 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:    1
  4049 ;; This function calls:
  4050 ;;		Nothing
  4051 ;; This function is called by:
  4052 ;;		_restablecerDatosSensor
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           	psect	text14
  4057  0022A2                     __ptext14:
  4058                           	opt callstack 0
  4059  0022A2                     _constructorSensor:
  4060                           	opt callstack 26
  4061  0022A2                     
  4062                           ;main.c: 117:     s.humedadMedida = humedad;
  4063  0022A2  C00A  F007         	movff	constructorSensor@humedad,constructorSensor@s
  4064  0022A6  6A08               	clrf	(constructorSensor@s+1)^0,c
  4065                           
  4066                           ;main.c: 118:     s.pinSensor = pin;
  4067  0022A8  C00B  F009         	movff	constructorSensor@pin,constructorSensor@s+2
  4068  0022AC  0012               	return		;funcret
  4069  0022AE                     __end_of_constructorSensor:
  4070                           	opt callstack 0
  4071                           
  4072 ;; *************** function _mostrarDatosSensores *****************
  4073 ;; Defined at:
  4074 ;;		line 693 in file "main.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;		None
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;  i               2   72[BANK0 ] int 
  4079 ;;  buffer         50   20[BANK0 ] unsigned char [50]
  4080 ;;  porcentajeHu    2   74[BANK0 ] int 
  4081 ;;  humedad         1   71[BANK0 ] unsigned char 
  4082 ;;  temperatura     1   70[BANK0 ] unsigned char 
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      void 
  4085 ;; Registers used:
  4086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4092 ;;      Params:         0       0       0       0       0       0       0       0       0
  4093 ;;      Locals:         0      56       0       0       0       0       0       0       0
  4094 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4095 ;;      Totals:         0      56       0       0       0       0       0       0       0
  4096 ;;Total ram usage:       56 bytes
  4097 ;; Hardware stack levels used:    1
  4098 ;; Hardware stack levels required when called:    9
  4099 ;; This function calls:
  4100 ;;		_UART_printf
  4101 ;;		_UART_write
  4102 ;;		___awdiv
  4103 ;;		___wmul
  4104 ;;		_dameTemperaturaHumedad
  4105 ;;		_lecturaAnalogaSensores
  4106 ;;		_sprintf
  4107 ;; This function is called by:
  4108 ;;		_sistemaPrincipal
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text15
  4113  000C44                     __ptext15:
  4114                           	opt callstack 0
  4115  000C44                     _mostrarDatosSensores:
  4116                           	opt callstack 20
  4117  000C44                     
  4118                           ;main.c: 697:     unsigned char temperatura, humedad;;main.c: 699:     dameTemperaturaHu
      +                          medad(&humedad, &temperatura);
  4119  000C44  0EF5               	movlw	low mostrarDatosSensores@humedad
  4120  000C46  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  4121  000C48  0E00               	movlw	high mostrarDatosSensores@humedad
  4122  000C4A  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  4123  000C4C  0EF4               	movlw	low mostrarDatosSensores@temperatura
  4124  000C4E  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  4125  000C50  0E00               	movlw	high mostrarDatosSensores@temperatura
  4126  000C52  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  4127  000C54  ECDA  F00B         	call	_dameTemperaturaHumedad	;wreg free
  4128  000C58                     
  4129                           ;main.c: 701:     UART_write('I');
  4130  000C58  0E49               	movlw	73
  4131  000C5A  EC3B  F011         	call	_UART_write
  4132  000C5E                     
  4133                           ;main.c: 704:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", humedad);
  4134  000C5E  0EC2               	movlw	low mostrarDatosSensores@buffer
  4135  000C60  0100               	movlb	0	; () banked
  4136  000C62  6FAE               	movwf	sprintf@s& (0+255),b
  4137  000C64  0E00               	movlw	high mostrarDatosSensores@buffer
  4138  000C66  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  4139  000C68  0EC5               	movlw	low STR_29
  4140  000C6A  6FB0               	movwf	sprintf@fmt& (0+255),b
  4141  000C6C  0E7E               	movlw	high STR_29
  4142  000C6E  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  4143  000C70  C0F5  F0B2         	movff	mostrarDatosSensores@humedad,?_sprintf+4
  4144  000C74  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  4145  000C76  EC4D  F00F         	call	_sprintf	;wreg free
  4146  000C7A                     
  4147                           ;main.c: 705:     UART_printf(buffer);
  4148  000C7A  0EC2               	movlw	low mostrarDatosSensores@buffer
  4149  000C7C  6E02               	movwf	UART_printf@cadena^0,c
  4150  000C7E  0E00               	movlw	high mostrarDatosSensores@buffer
  4151  000C80  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4152  000C82  ECC6  F00E         	call	_UART_printf	;wreg free
  4153  000C86                     
  4154                           ;main.c: 706:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", temperatura);
  4155  000C86  0EC2               	movlw	low mostrarDatosSensores@buffer
  4156  000C88  0100               	movlb	0	; () banked
  4157  000C8A  6FAE               	movwf	sprintf@s& (0+255),b
  4158  000C8C  0E00               	movlw	high mostrarDatosSensores@buffer
  4159  000C8E  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  4160  000C90  0E04               	movlw	low STR_30
  4161  000C92  6FB0               	movwf	sprintf@fmt& (0+255),b
  4162  000C94  0E7F               	movlw	high STR_30
  4163  000C96  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  4164  000C98  C0F4  F0B2         	movff	mostrarDatosSensores@temperatura,?_sprintf+4
  4165  000C9C  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  4166  000C9E  EC4D  F00F         	call	_sprintf	;wreg free
  4167  000CA2                     
  4168                           ;main.c: 707:     UART_printf(buffer);
  4169  000CA2  0EC2               	movlw	low mostrarDatosSensores@buffer
  4170  000CA4  6E02               	movwf	UART_printf@cadena^0,c
  4171  000CA6  0E00               	movlw	high mostrarDatosSensores@buffer
  4172  000CA8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4173  000CAA  ECC6  F00E         	call	_UART_printf	;wreg free
  4174  000CAE                     
  4175                           ;main.c: 709:     lecturaAnalogaSensores();
  4176  000CAE  EC98  F00D         	call	_lecturaAnalogaSensores	;wreg free
  4177  000CB2                     
  4178                           ;main.c: 712:     for (int i = 0; i < 3; i++) {
  4179  000CB2  0E00               	movlw	0
  4180  000CB4  0100               	movlb	0	; () banked
  4181  000CB6  6FF7               	movwf	(mostrarDatosSensores@i+1)& (0+255),b
  4182  000CB8  0E00               	movlw	0
  4183  000CBA  6FF6               	movwf	mostrarDatosSensores@i& (0+255),b
  4184  000CBC                     l3383:
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;main.c: 714:         porcentajeHumedad = (sensores[i].humedadMedida);
  4188  000CBC  C0F6  F001         	movff	mostrarDatosSensores@i,___wmul@multiplier
  4189  000CC0  C0F7  F002         	movff	mostrarDatosSensores@i+1,___wmul@multiplier+1
  4190  000CC4  0E00               	movlw	0
  4191  000CC6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4192  000CC8  0E03               	movlw	3
  4193  000CCA  6E03               	movwf	___wmul@multiplicand^0,c
  4194  000CCC  ECEC  F010         	call	___wmul	;wreg free
  4195  000CD0  0E60               	movlw	low _sensores
  4196  000CD2  2401               	addwf	?___wmul^0,w,c
  4197  000CD4  6ED9               	movwf	fsr2l,c
  4198  000CD6  0E00               	movlw	high _sensores
  4199  000CD8  2002               	addwfc	(?___wmul+1)^0,w,c
  4200  000CDA  6EDA               	movwf	fsr2h,c
  4201  000CDC  CFDE F0F8          	movff	postinc2,mostrarDatosSensores@porcentajeHumedad
  4202  000CE0  CFDD F0F9          	movff	postdec2,mostrarDatosSensores@porcentajeHumedad+1
  4203  000CE4                     
  4204                           ;main.c: 715:         porcentajeHumedad *= 10;
  4205  000CE4  C0F8  F001         	movff	mostrarDatosSensores@porcentajeHumedad,___wmul@multiplier
  4206  000CE8  C0F9  F002         	movff	mostrarDatosSensores@porcentajeHumedad+1,___wmul@multiplier+1
  4207  000CEC  0E00               	movlw	0
  4208  000CEE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4209  000CF0  0E0A               	movlw	10
  4210  000CF2  6E03               	movwf	___wmul@multiplicand^0,c
  4211  000CF4  ECEC  F010         	call	___wmul	;wreg free
  4212  000CF8  C001  F0F8         	movff	?___wmul,mostrarDatosSensores@porcentajeHumedad
  4213  000CFC  C002  F0F9         	movff	?___wmul+1,mostrarDatosSensores@porcentajeHumedad+1
  4214  000D00                     
  4215                           ;main.c: 716:         porcentajeHumedad /= 1023;
  4216  000D00  C0F8  F001         	movff	mostrarDatosSensores@porcentajeHumedad,___awdiv@dividend
  4217  000D04  C0F9  F002         	movff	mostrarDatosSensores@porcentajeHumedad+1,___awdiv@dividend+1
  4218  000D08  0E03               	movlw	3
  4219  000D0A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4220  000D0C  6803               	setf	___awdiv@divisor^0,c
  4221  000D0E  EC78  F00B         	call	___awdiv	;wreg free
  4222  000D12  C001  F0F8         	movff	?___awdiv,mostrarDatosSensores@porcentajeHumedad
  4223  000D16  C002  F0F9         	movff	?___awdiv+1,mostrarDatosSensores@porcentajeHumedad+1
  4224  000D1A                     
  4225                           ;main.c: 717:         porcentajeHumedad *= 10;
  4226  000D1A  C0F8  F001         	movff	mostrarDatosSensores@porcentajeHumedad,___wmul@multiplier
  4227  000D1E  C0F9  F002         	movff	mostrarDatosSensores@porcentajeHumedad+1,___wmul@multiplier+1
  4228  000D22  0E00               	movlw	0
  4229  000D24  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4230  000D26  0E0A               	movlw	10
  4231  000D28  6E03               	movwf	___wmul@multiplicand^0,c
  4232  000D2A  ECEC  F010         	call	___wmul	;wreg free
  4233  000D2E  C001  F0F8         	movff	?___wmul,mostrarDatosSensores@porcentajeHumedad
  4234  000D32  C002  F0F9         	movff	?___wmul+1,mostrarDatosSensores@porcentajeHumedad+1
  4235  000D36                     
  4236                           ;main.c: 719:         sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d\r\n"
  4237  000D36  0EC2               	movlw	low mostrarDatosSensores@buffer
  4238  000D38  0100               	movlb	0	; () banked
  4239  000D3A  6FAE               	movwf	sprintf@s& (0+255),b
  4240  000D3C  0E00               	movlw	high mostrarDatosSensores@buffer
  4241  000D3E  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  4242  000D40  0E31               	movlw	low STR_31
  4243  000D42  6FB0               	movwf	sprintf@fmt& (0+255),b
  4244  000D44  0E7D               	movlw	high STR_31
  4245  000D46  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  4246  000D48  C0F6  F0B2         	movff	mostrarDatosSensores@i,?_sprintf+4
  4247  000D4C  C0F7  F0B3         	movff	mostrarDatosSensores@i+1,?_sprintf+5
  4248  000D50  C0F8  F0B4         	movff	mostrarDatosSensores@porcentajeHumedad,?_sprintf+6
  4249  000D54  C0F9  F0B5         	movff	mostrarDatosSensores@porcentajeHumedad+1,?_sprintf+7
  4250  000D58  EC4D  F00F         	call	_sprintf	;wreg free
  4251  000D5C                     
  4252                           ;main.c: 721:         UART_printf(buffer);
  4253  000D5C  0EC2               	movlw	low mostrarDatosSensores@buffer
  4254  000D5E  6E02               	movwf	UART_printf@cadena^0,c
  4255  000D60  0E00               	movlw	high mostrarDatosSensores@buffer
  4256  000D62  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4257  000D64  ECC6  F00E         	call	_UART_printf	;wreg free
  4258  000D68                     
  4259                           ;main.c: 724:     }
  4260  000D68  0100               	movlb	0	; () banked
  4261  000D6A  4BF6               	infsnz	mostrarDatosSensores@i& (0+255),f,b
  4262  000D6C  2BF7               	incf	(mostrarDatosSensores@i+1)& (0+255),f,b
  4263  000D6E                     
  4264                           ; BSR set to: 0
  4265  000D6E  BFF7               	btfsc	(mostrarDatosSensores@i+1)& (0+255),7,b
  4266  000D70  EFC3  F006         	goto	u2631
  4267  000D74  51F7               	movf	(mostrarDatosSensores@i+1)& (0+255),w,b
  4268  000D76  E109               	bnz	u2630
  4269  000D78  0E03               	movlw	3
  4270  000D7A  5DF6               	subwf	mostrarDatosSensores@i& (0+255),w,b
  4271  000D7C  A0D8               	btfss	status,0,c
  4272  000D7E  EFC3  F006         	goto	u2631
  4273  000D82  EFC5  F006         	goto	u2630
  4274  000D86                     u2631:
  4275  000D86  EF5E  F006         	goto	l3383
  4276  000D8A                     u2630:
  4277  000D8A                     
  4278                           ; BSR set to: 0
  4279                           ;main.c: 726:     UART_write('I');
  4280  000D8A  0E49               	movlw	73
  4281  000D8C  EC3B  F011         	call	_UART_write
  4282  000D90  0012               	return		;funcret
  4283  000D92                     __end_of_mostrarDatosSensores:
  4284                           	opt callstack 0
  4285                           
  4286 ;; *************** function _lecturaAnalogaSensores *****************
  4287 ;; Defined at:
  4288 ;;		line 531 in file "main.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;		None
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;  i               2    7[COMRAM] int 
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      void 
  4295 ;; Registers used:
  4296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4302 ;;      Params:         0       0       0       0       0       0       0       0       0
  4303 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4304 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4305 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4306 ;;Total ram usage:        3 bytes
  4307 ;; Hardware stack levels used:    1
  4308 ;; Hardware stack levels required when called:    2
  4309 ;; This function calls:
  4310 ;;		___wmul
  4311 ;;		_dameHumedadSuelo
  4312 ;; This function is called by:
  4313 ;;		_sistemaRegado
  4314 ;;		_mostrarDatosSensores
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318                           	psect	text16
  4319  001B30                     __ptext16:
  4320                           	opt callstack 0
  4321  001B30                     _lecturaAnalogaSensores:
  4322                           	opt callstack 27
  4323  001B30                     
  4324                           ;main.c: 533:     for (int i = 0; i < 3; i++) {
  4325  001B30  0E00               	movlw	0
  4326  001B32  6E09               	movwf	(lecturaAnalogaSensores@i+1)^0,c
  4327  001B34  0E00               	movlw	0
  4328  001B36  6E08               	movwf	lecturaAnalogaSensores@i^0,c
  4329  001B38                     l2989:
  4330                           
  4331                           ;main.c: 534:         sensores[i].humedadMedida = dameHumedadSuelo(i);
  4332  001B38  C008  F001         	movff	lecturaAnalogaSensores@i,___wmul@multiplier
  4333  001B3C  C009  F002         	movff	lecturaAnalogaSensores@i+1,___wmul@multiplier+1
  4334  001B40  0E00               	movlw	0
  4335  001B42  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4336  001B44  0E03               	movlw	3
  4337  001B46  6E03               	movwf	___wmul@multiplicand^0,c
  4338  001B48  ECEC  F010         	call	___wmul	;wreg free
  4339  001B4C  0E60               	movlw	low _sensores
  4340  001B4E  2401               	addwf	?___wmul^0,w,c
  4341  001B50  6ED9               	movwf	fsr2l,c
  4342  001B52  0E00               	movlw	high _sensores
  4343  001B54  2002               	addwfc	(?___wmul+1)^0,w,c
  4344  001B56  6EDA               	movwf	fsr2h,c
  4345  001B58  5008               	movf	lecturaAnalogaSensores@i^0,w,c
  4346  001B5A  ECC2  F00F         	call	_dameHumedadSuelo
  4347  001B5E  C001  FFDE         	movff	?_dameHumedadSuelo,postinc2
  4348  001B62  C002  FFDD         	movff	?_dameHumedadSuelo+1,postdec2
  4349  001B66                     
  4350                           ;main.c: 535:         _delay((unsigned long)((5)*(4000000/4000.0)));
  4351  001B66  0E07               	movlw	7
  4352  001B68  6E07               	movwf	??_lecturaAnalogaSensores^0,c
  4353  001B6A  0E7D               	movlw	125
  4354  001B6C                     u2837:
  4355  001B6C  2EE8               	decfsz	wreg,f,c
  4356  001B6E  D7FE               	bra	u2837
  4357  001B70  2E07               	decfsz	??_lecturaAnalogaSensores^0,f,c
  4358  001B72  D7FC               	bra	u2837
  4359  001B74  F000               	nop	
  4360  001B76                     
  4361                           ;main.c: 536:     }
  4362  001B76  4A08               	infsnz	lecturaAnalogaSensores@i^0,f,c
  4363  001B78  2A09               	incf	(lecturaAnalogaSensores@i+1)^0,f,c
  4364  001B7A  BE09               	btfsc	(lecturaAnalogaSensores@i+1)^0,7,c
  4365  001B7C  EFC9  F00D         	goto	u2171
  4366  001B80  5009               	movf	(lecturaAnalogaSensores@i+1)^0,w,c
  4367  001B82  E109               	bnz	u2170
  4368  001B84  0E03               	movlw	3
  4369  001B86  5C08               	subwf	lecturaAnalogaSensores@i^0,w,c
  4370  001B88  A0D8               	btfss	status,0,c
  4371  001B8A  EFC9  F00D         	goto	u2171
  4372  001B8E  EFCB  F00D         	goto	u2170
  4373  001B92                     u2171:
  4374  001B92  EF9C  F00D         	goto	l2989
  4375  001B96                     u2170:
  4376  001B96  0012               	return		;funcret
  4377  001B98                     __end_of_lecturaAnalogaSensores:
  4378                           	opt callstack 0
  4379                           
  4380 ;; *************** function _dameHumedadSuelo *****************
  4381 ;; Defined at:
  4382 ;;		line 467 in file "main.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;  canalLeer       1    wreg     unsigned char 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;  canalLeer       1    4[COMRAM] unsigned char 
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  2    0[COMRAM] short 
  4389 ;; Registers used:
  4390 ;;		wreg, status,2, status,0
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4396 ;;      Params:         2       0       0       0       0       0       0       0       0
  4397 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4398 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4399 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4400 ;;Total ram usage:        5 bytes
  4401 ;; Hardware stack levels used:    1
  4402 ;; Hardware stack levels required when called:    1
  4403 ;; This function calls:
  4404 ;;		Nothing
  4405 ;; This function is called by:
  4406 ;;		_lecturaAnalogaSensores
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410                           	psect	text17
  4411  001F84                     __ptext17:
  4412                           	opt callstack 0
  4413  001F84                     _dameHumedadSuelo:
  4414                           	opt callstack 27
  4415                           
  4416                           ;incstack = 0
  4417                           ;dameHumedadSuelo@canalLeer stored from wreg
  4418  001F84  6E05               	movwf	dameHumedadSuelo@canalLeer^0,c
  4419  001F86                     
  4420                           ;main.c: 469:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  4421  001F86  0E06               	movlw	6
  4422  001F88                     u2847:
  4423  001F88  2EE8               	decfsz	wreg,f,c
  4424  001F8A  D7FE               	bra	u2847
  4425  001F8C  D000               	nop2	
  4426  001F8E                     
  4427                           ;main.c: 471:     ADCON0bits.ADON = 1;
  4428  001F8E  80C2               	bsf	194,0,c	;volatile
  4429  001F90                     
  4430                           ;main.c: 472:     ADCON0bits.CHS = canalLeer;
  4431  001F90  C005  F003         	movff	dameHumedadSuelo@canalLeer,??_dameHumedadSuelo
  4432  001F94  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  4433  001F96  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  4434  001F98  50C2               	movf	194,w,c	;volatile
  4435  001F9A  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  4436  001F9C  0BC3               	andlw	-61
  4437  001F9E  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  4438  001FA0  6EC2               	movwf	194,c	;volatile
  4439  001FA2                     
  4440                           ;main.c: 473:     ADCON0bits.GO = 1;
  4441  001FA2  82C2               	bsf	194,1,c	;volatile
  4442  001FA4                     
  4443                           ;main.c: 474:     ADCON0bits.GO_DONE = 1;
  4444  001FA4  82C2               	bsf	194,1,c	;volatile
  4445  001FA6                     l308:
  4446  001FA6  B2C2               	btfsc	194,1,c	;volatile
  4447  001FA8  EFD8  F00F         	goto	u2021
  4448  001FAC  EFDA  F00F         	goto	u2020
  4449  001FB0                     u2021:
  4450  001FB0  EFD3  F00F         	goto	l308
  4451  001FB4                     u2020:
  4452  001FB4                     
  4453                           ;main.c: 478:     ADCON0bits.ADON = 0;
  4454  001FB4  90C2               	bcf	194,0,c	;volatile
  4455  001FB6                     
  4456                           ;main.c: 480:     return (ADRESH << 8) +ADRESL;
  4457  001FB6  50C4               	movf	196,w,c	;volatile
  4458  001FB8  6E04               	movwf	(??_dameHumedadSuelo+1)^0,c
  4459  001FBA  6A03               	clrf	??_dameHumedadSuelo^0,c
  4460  001FBC  50C3               	movf	195,w,c	;volatile
  4461  001FBE  2403               	addwf	??_dameHumedadSuelo^0,w,c
  4462  001FC0  6E01               	movwf	?_dameHumedadSuelo^0,c
  4463  001FC2  0E00               	movlw	0
  4464  001FC4  2004               	addwfc	(??_dameHumedadSuelo+1)^0,w,c
  4465  001FC6  6E02               	movwf	(?_dameHumedadSuelo+1)^0,c
  4466  001FC8  0012               	return		;funcret
  4467  001FCA                     __end_of_dameHumedadSuelo:
  4468                           	opt callstack 0
  4469                           
  4470 ;; *************** function _dameTemperaturaHumedad *****************
  4471 ;; Defined at:
  4472 ;;		line 658 in file "main.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;  Humedad         2    3[COMRAM] PTR unsigned char 
  4475 ;;		 -> mostrarDatosSensoresWIFI@humedad(1), mostrarDatosSensores@humedad(1), NULL(0), 
  4476 ;;  Temperatura     2    5[COMRAM] PTR unsigned char 
  4477 ;;		 -> mostrarDatosSensoresWIFI@temperatura(1), mostrarDatosSensores@temperatura(1), estaSeco@temperatura(1), 
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;  checkSum        2    9[COMRAM] unsigned int 
  4480 ;;  temperatura     1   14[COMRAM] unsigned char 
  4481 ;;  humedad         1   13[COMRAM] unsigned char 
  4482 ;;  temperaturaD    1   12[COMRAM] unsigned char 
  4483 ;;  humedadDecim    1   11[COMRAM] unsigned char 
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  1    wreg      void 
  4486 ;; Registers used:
  4487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4493 ;;      Params:         4       0       0       0       0       0       0       0       0
  4494 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4495 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4496 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4497 ;;Total ram usage:       12 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; Hardware stack levels required when called:    3
  4500 ;; This function calls:
  4501 ;;		_DHT11_ReadData
  4502 ;;		_DHT11_Start
  4503 ;;		_UART_printf
  4504 ;;		_check_response
  4505 ;; This function is called by:
  4506 ;;		_estaSeco
  4507 ;;		_mostrarDatosSensores
  4508 ;;		_mostrarDatosSensoresWIFI
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512                           	psect	text18
  4513  0017B4                     __ptext18:
  4514                           	opt callstack 0
  4515  0017B4                     _dameTemperaturaHumedad:
  4516                           	opt callstack 24
  4517  0017B4                     
  4518                           ;main.c: 660:     PIE1bits.RCIE = 0;
  4519  0017B4  9A9D               	bcf	157,5,c	;volatile
  4520                           
  4521                           ;main.c: 661:     T0CONbits.TMR0ON = 0;
  4522  0017B6  9ED5               	bcf	213,7,c	;volatile
  4523  0017B8                     
  4524                           ;main.c: 667:     DHT11_Start();
  4525  0017B8  EC0F  F011         	call	_DHT11_Start	;wreg free
  4526  0017BC                     
  4527                           ;main.c: 669:     if (check_response()) {
  4528  0017BC  EC07  F010         	call	_check_response	;wreg free
  4529  0017C0  0900               	iorlw	0
  4530  0017C2  B4D8               	btfsc	status,2,c
  4531  0017C4  EFE6  F00B         	goto	u2001
  4532  0017C8  EFE8  F00B         	goto	u2000
  4533  0017CC                     u2001:
  4534  0017CC  EF2B  F00C         	goto	l2813
  4535  0017D0                     u2000:
  4536  0017D0                     
  4537                           ;main.c: 672:         humedad = DHT11_ReadData();
  4538  0017D0  ECF5  F00E         	call	_DHT11_ReadData	;wreg free
  4539  0017D4  6E0E               	movwf	dameTemperaturaHumedad@humedad^0,c
  4540                           
  4541                           ;main.c: 673:         humedadDecimal = DHT11_ReadData();
  4542  0017D6  ECF5  F00E         	call	_DHT11_ReadData	;wreg free
  4543  0017DA  6E0C               	movwf	dameTemperaturaHumedad@humedadDecimal^0,c
  4544                           
  4545                           ;main.c: 674:         temperatura = DHT11_ReadData();
  4546  0017DC  ECF5  F00E         	call	_DHT11_ReadData	;wreg free
  4547  0017E0  6E0F               	movwf	dameTemperaturaHumedad@temperatura^0,c
  4548                           
  4549                           ;main.c: 675:         temperaturaDecimal = DHT11_ReadData();
  4550  0017E2  ECF5  F00E         	call	_DHT11_ReadData	;wreg free
  4551  0017E6  6E0D               	movwf	dameTemperaturaHumedad@temperaturaDecimal^0,c
  4552                           
  4553                           ;main.c: 676:         checkSum = DHT11_ReadData();
  4554  0017E8  ECF5  F00E         	call	_DHT11_ReadData	;wreg free
  4555  0017EC  6E08               	movwf	??_dameTemperaturaHumedad^0,c
  4556  0017EE  5008               	movf	??_dameTemperaturaHumedad^0,w,c
  4557  0017F0  6E0A               	movwf	dameTemperaturaHumedad@checkSum^0,c
  4558  0017F2  6A0B               	clrf	(dameTemperaturaHumedad@checkSum+1)^0,c
  4559  0017F4                     
  4560                           ;main.c: 678:         if (checkSum != (humedad + humedadDecimal + temperatura + temperat
      +                          uraDecimal))
  4561  0017F4  500C               	movf	dameTemperaturaHumedad@humedadDecimal^0,w,c
  4562  0017F6  C00E  F008         	movff	dameTemperaturaHumedad@humedad,??_dameTemperaturaHumedad
  4563  0017FA  6A09               	clrf	(??_dameTemperaturaHumedad+1)^0,c
  4564  0017FC  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  4565  0017FE  0E00               	movlw	0
  4566  001800  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  4567  001802  500F               	movf	dameTemperaturaHumedad@temperatura^0,w,c
  4568  001804  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  4569  001806  0E00               	movlw	0
  4570  001808  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  4571  00180A  500D               	movf	dameTemperaturaHumedad@temperaturaDecimal^0,w,c
  4572  00180C  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  4573  00180E  0E00               	movlw	0
  4574  001810  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  4575  001812  500A               	movf	dameTemperaturaHumedad@checkSum^0,w,c
  4576  001814  1808               	xorwf	??_dameTemperaturaHumedad^0,w,c
  4577  001816  E109               	bnz	u2010
  4578  001818  500B               	movf	(dameTemperaturaHumedad@checkSum+1)^0,w,c
  4579  00181A  1809               	xorwf	(??_dameTemperaturaHumedad+1)^0,w,c
  4580  00181C  B4D8               	btfsc	status,2,c
  4581  00181E  EF13  F00C         	goto	u2011
  4582  001822  EF15  F00C         	goto	u2010
  4583  001826                     u2011:
  4584  001826  EF1D  F00C         	goto	l2811
  4585  00182A                     u2010:
  4586  00182A                     
  4587                           ;main.c: 679:             UART_printf("Error de lectura DHT11\r\n");
  4588  00182A  0E8B               	movlw	low STR_27
  4589  00182C  6E02               	movwf	UART_printf@cadena^0,c
  4590  00182E  0E7F               	movlw	high STR_27
  4591  001830  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4592  001832  ECC6  F00E         	call	_UART_printf	;wreg free
  4593  001836  EF31  F00C         	goto	l2815
  4594  00183A                     l2811:
  4595                           
  4596                           ;main.c: 681:             *Humedad = humedad;
  4597  00183A  C004  FFD9         	movff	dameTemperaturaHumedad@Humedad,fsr2l
  4598  00183E  C005  FFDA         	movff	dameTemperaturaHumedad@Humedad+1,fsr2h
  4599  001842  C00E  FFDF         	movff	dameTemperaturaHumedad@humedad,indf2
  4600                           
  4601                           ;main.c: 682:             *Temperatura = temperatura;
  4602  001846  C006  FFD9         	movff	dameTemperaturaHumedad@Temperatura,fsr2l
  4603  00184A  C007  FFDA         	movff	dameTemperaturaHumedad@Temperatura+1,fsr2h
  4604  00184E  C00F  FFDF         	movff	dameTemperaturaHumedad@temperatura,indf2
  4605  001852  EF31  F00C         	goto	l2815
  4606  001856                     l2813:
  4607                           
  4608                           ;main.c: 686:         UART_printf("DHT11 NO RESPONDIO\r\n");
  4609  001856  0EBB               	movlw	low STR_28
  4610  001858  6E02               	movwf	UART_printf@cadena^0,c
  4611  00185A  0E7F               	movlw	high STR_28
  4612  00185C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4613  00185E  ECC6  F00E         	call	_UART_printf	;wreg free
  4614  001862                     l2815:
  4615                           
  4616                           ;main.c: 689:     PIE1bits.RCIE = 1;
  4617  001862  8A9D               	bsf	157,5,c	;volatile
  4618  001864                     
  4619                           ;main.c: 690:     T0CONbits.TMR0ON = 1;
  4620  001864  8ED5               	bsf	213,7,c	;volatile
  4621  001866  0012               	return		;funcret
  4622  001868                     __end_of_dameTemperaturaHumedad:
  4623                           	opt callstack 0
  4624                           
  4625 ;; *************** function _check_response *****************
  4626 ;; Defined at:
  4627 ;;		line 38 in file "./DHT11.h"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;		None
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;  respuesta       1    0[COMRAM] unsigned char 
  4632 ;; Return value:  Size  Location     Type
  4633 ;;                  1    wreg      unsigned char 
  4634 ;; Registers used:
  4635 ;;		wreg, status,2
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4641 ;;      Params:         0       0       0       0       0       0       0       0       0
  4642 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4644 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4645 ;;Total ram usage:        1 bytes
  4646 ;; Hardware stack levels used:    1
  4647 ;; Hardware stack levels required when called:    1
  4648 ;; This function calls:
  4649 ;;		Nothing
  4650 ;; This function is called by:
  4651 ;;		_dameTemperaturaHumedad
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655                           	psect	text19
  4656  00200E                     __ptext19:
  4657                           	opt callstack 0
  4658  00200E                     _check_response:
  4659                           	opt callstack 25
  4660  00200E                     
  4661                           ;./DHT11.h: 40:     unsigned char respuesta = 0;
  4662  00200E  0E00               	movlw	0
  4663  002010  6E01               	movwf	check_response@respuesta^0,c
  4664  002012                     
  4665                           ;./DHT11.h: 41:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4666  002012  0E0D               	movlw	13
  4667  002014                     u2857:
  4668  002014  2EE8               	decfsz	wreg,f,c
  4669  002016  D7FE               	bra	u2857
  4670  002018  F000               	nop	
  4671  00201A                     
  4672                           ;./DHT11.h: 42:     if (!PORTDbits.RD7) {
  4673  00201A  BE83               	btfsc	131,7,c	;volatile
  4674  00201C  EF12  F010         	goto	u1911
  4675  002020  EF14  F010         	goto	u1910
  4676  002024                     u1911:
  4677  002024  EF25  F010         	goto	l2711
  4678  002028                     u1910:
  4679  002028                     
  4680                           ;./DHT11.h: 43:         _delay((unsigned long)((80)*(4000000/4000000.0)));
  4681  002028  0E1A               	movlw	26
  4682  00202A                     u2867:
  4683  00202A  2EE8               	decfsz	wreg,f,c
  4684  00202C  D7FE               	bra	u2867
  4685  00202E  D000               	nop2	
  4686  002030                     
  4687                           ;./DHT11.h: 44:         if (PORTDbits.RD7) {
  4688  002030  AE83               	btfss	131,7,c	;volatile
  4689  002032  EF1D  F010         	goto	u1921
  4690  002036  EF1F  F010         	goto	u1920
  4691  00203A                     u1921:
  4692  00203A  EF25  F010         	goto	l2711
  4693  00203E                     u1920:
  4694  00203E                     
  4695                           ;./DHT11.h: 45:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  4696  00203E  0E10               	movlw	16
  4697  002040                     u2877:
  4698  002040  2EE8               	decfsz	wreg,f,c
  4699  002042  D7FE               	bra	u2877
  4700  002044  D000               	nop2	
  4701  002046                     
  4702                           ;./DHT11.h: 46:             respuesta = 1;
  4703  002046  0E01               	movlw	1
  4704  002048  6E01               	movwf	check_response@respuesta^0,c
  4705  00204A                     l2711:
  4706                           
  4707                           ;./DHT11.h: 50:     return respuesta;
  4708  00204A  5001               	movf	check_response@respuesta^0,w,c
  4709  00204C  0012               	return		;funcret
  4710  00204E                     __end_of_check_response:
  4711                           	opt callstack 0
  4712                           
  4713 ;; *************** function _DHT11_Start *****************
  4714 ;; Defined at:
  4715 ;;		line 23 in file "./DHT11.h"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;		None
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;		None
  4720 ;; Return value:  Size  Location     Type
  4721 ;;                  1    wreg      void 
  4722 ;; Registers used:
  4723 ;;		wreg
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4729 ;;      Params:         0       0       0       0       0       0       0       0       0
  4730 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4731 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4732 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4733 ;;Total ram usage:        1 bytes
  4734 ;; Hardware stack levels used:    1
  4735 ;; Hardware stack levels required when called:    1
  4736 ;; This function calls:
  4737 ;;		Nothing
  4738 ;; This function is called by:
  4739 ;;		_dameTemperaturaHumedad
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           	psect	text20
  4744  00221E                     __ptext20:
  4745                           	opt callstack 0
  4746  00221E                     _DHT11_Start:
  4747                           	opt callstack 25
  4748  00221E                     
  4749                           ;./DHT11.h: 24:     TRISDbits.RD7 = 0;
  4750  00221E  9E95               	bcf	149,7,c	;volatile
  4751                           
  4752                           ;./DHT11.h: 26:     LATDbits.LATD7 = 0;
  4753  002220  9E8C               	bcf	140,7,c	;volatile
  4754  002222                     
  4755                           ;./DHT11.h: 28:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4756  002222  0E1A               	movlw	26
  4757  002224  6E01               	movwf	??_DHT11_Start^0,c
  4758  002226  0EF8               	movlw	248
  4759  002228                     u2887:
  4760  002228  2EE8               	decfsz	wreg,f,c
  4761  00222A  D7FE               	bra	u2887
  4762  00222C  2E01               	decfsz	??_DHT11_Start^0,f,c
  4763  00222E  D7FC               	bra	u2887
  4764  002230  D000               	nop2	
  4765  002232                     
  4766                           ;./DHT11.h: 30:     LATDbits.LATD7 = 1;
  4767  002232  8E8C               	bsf	140,7,c	;volatile
  4768                           
  4769                           ;./DHT11.h: 32:     _delay((unsigned long)((30)*(4000000/4000000.0)));
  4770  002234  0E0A               	movlw	10
  4771  002236                     u2897:
  4772  002236  2EE8               	decfsz	wreg,f,c
  4773  002238  D7FE               	bra	u2897
  4774  00223A                     
  4775                           ;./DHT11.h: 34:     TRISDbits.RD7 = 1;
  4776  00223A  8E95               	bsf	149,7,c	;volatile
  4777  00223C  0012               	return		;funcret
  4778  00223E                     __end_of_DHT11_Start:
  4779                           	opt callstack 0
  4780                           
  4781 ;; *************** function _DHT11_ReadData *****************
  4782 ;; Defined at:
  4783 ;;		line 9 in file "./DHT11.h"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;		None
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;  data            1    1[COMRAM] unsigned char 
  4788 ;;  i               1    0[COMRAM] unsigned char 
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  1    wreg      unsigned char 
  4791 ;; Registers used:
  4792 ;;		wreg, status,2, status,0
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4798 ;;      Params:         0       0       0       0       0       0       0       0       0
  4799 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4800 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4801 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4802 ;;Total ram usage:        2 bytes
  4803 ;; Hardware stack levels used:    1
  4804 ;; Hardware stack levels required when called:    1
  4805 ;; This function calls:
  4806 ;;		Nothing
  4807 ;; This function is called by:
  4808 ;;		_dameTemperaturaHumedad
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           	psect	text21
  4813  001DEA                     __ptext21:
  4814                           	opt callstack 0
  4815  001DEA                     _DHT11_ReadData:
  4816                           	opt callstack 25
  4817  001DEA                     
  4818                           ;./DHT11.h: 10:     char i, data = 0;
  4819  001DEA  0E00               	movlw	0
  4820  001DEC  6E02               	movwf	DHT11_ReadData@data^0,c
  4821                           
  4822                           ;./DHT11.h: 11:     for (i = 0; i < 8; i++) {
  4823  001DEE  0E00               	movlw	0
  4824  001DF0  6E01               	movwf	DHT11_ReadData@i^0,c
  4825  001DF2                     l144:
  4826  001DF2  AE83               	btfss	131,7,c	;volatile
  4827  001DF4  EFFE  F00E         	goto	u1871
  4828  001DF8  EF00  F00F         	goto	u1870
  4829  001DFC                     u1871:
  4830  001DFC  EFF9  F00E         	goto	l144
  4831  001E00                     u1870:
  4832  001E00                     
  4833                           ;./DHT11.h: 13:         _delay((unsigned long)((30)*(4000000/4000000.0)));
  4834  001E00  0E0A               	movlw	10
  4835  001E02                     u2907:
  4836  001E02  2EE8               	decfsz	wreg,f,c
  4837  001E04  D7FE               	bra	u2907
  4838  001E06                     
  4839                           ;./DHT11.h: 14:         if (PORTDbits.RD7 & 1)
  4840  001E06  AE83               	btfss	131,7,c	;volatile
  4841  001E08  EF08  F00F         	goto	u1881
  4842  001E0C  EF0A  F00F         	goto	u1880
  4843  001E10                     u1881:
  4844  001E10  EF0E  F00F         	goto	l2679
  4845  001E14                     u1880:
  4846  001E14                     
  4847                           ;./DHT11.h: 15:             data = ((data << 1) | 1);
  4848  001E14  80D8               	bsf	status,0,c
  4849  001E16  3602               	rlcf	DHT11_ReadData@data^0,f,c
  4850  001E18  EF11  F00F         	goto	l149
  4851  001E1C                     l2679:
  4852                           
  4853                           ;./DHT11.h: 17:             data = (data << 1);
  4854  001E1C  5002               	movf	DHT11_ReadData@data^0,w,c
  4855  001E1E  2402               	addwf	DHT11_ReadData@data^0,w,c
  4856  001E20  6E02               	movwf	DHT11_ReadData@data^0,c
  4857  001E22                     l149:
  4858  001E22  BE83               	btfsc	131,7,c	;volatile
  4859  001E24  EF16  F00F         	goto	u1891
  4860  001E28  EF18  F00F         	goto	u1890
  4861  001E2C                     u1891:
  4862  001E2C  EF11  F00F         	goto	l149
  4863  001E30                     u1890:
  4864  001E30                     
  4865                           ;./DHT11.h: 19:     }
  4866  001E30  2A01               	incf	DHT11_ReadData@i^0,f,c
  4867  001E32  0E07               	movlw	7
  4868  001E34  6401               	cpfsgt	DHT11_ReadData@i^0,c
  4869  001E36  EF1F  F00F         	goto	u1901
  4870  001E3A  EF21  F00F         	goto	u1900
  4871  001E3E                     u1901:
  4872  001E3E  EFF9  F00E         	goto	l144
  4873  001E42                     u1900:
  4874  001E42                     
  4875                           ;./DHT11.h: 20:     return data;
  4876  001E42  5002               	movf	DHT11_ReadData@data^0,w,c
  4877  001E44  0012               	return		;funcret
  4878  001E46                     __end_of_DHT11_ReadData:
  4879                           	opt callstack 0
  4880                           
  4881 ;; *************** function ___awdiv *****************
  4882 ;; Defined at:
  4883 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;  dividend        2    0[COMRAM] int 
  4886 ;;  divisor         2    2[COMRAM] int 
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;  quotient        2    6[COMRAM] int 
  4889 ;;  sign            1    5[COMRAM] unsigned char 
  4890 ;;  counter         1    4[COMRAM] unsigned char 
  4891 ;; Return value:  Size  Location     Type
  4892 ;;                  2    0[COMRAM] int 
  4893 ;; Registers used:
  4894 ;;		wreg, status,2, status,0
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4900 ;;      Params:         4       0       0       0       0       0       0       0       0
  4901 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4902 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4903 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4904 ;;Total ram usage:        8 bytes
  4905 ;; Hardware stack levels used:    1
  4906 ;; Hardware stack levels required when called:    1
  4907 ;; This function calls:
  4908 ;;		Nothing
  4909 ;; This function is called by:
  4910 ;;		_mostrarDatosSensores
  4911 ;; This function uses a non-reentrant model
  4912 ;;
  4913                           
  4914                           	psect	text22
  4915  0016F0                     __ptext22:
  4916                           	opt callstack 0
  4917  0016F0                     ___awdiv:
  4918                           	opt callstack 27
  4919  0016F0  0E00               	movlw	0
  4920  0016F2  6E06               	movwf	___awdiv@sign^0,c
  4921  0016F4  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4922  0016F6  EF81  F00B         	goto	u2180
  4923  0016FA  EF7F  F00B         	goto	u2181
  4924  0016FE                     u2181:
  4925  0016FE  EF87  F00B         	goto	l3017
  4926  001702                     u2180:
  4927  001702  6C03               	negf	___awdiv@divisor^0,c
  4928  001704  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4929  001706  B0D8               	btfsc	status,0,c
  4930  001708  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4931  00170A  0E01               	movlw	1
  4932  00170C  6E06               	movwf	___awdiv@sign^0,c
  4933  00170E                     l3017:
  4934  00170E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4935  001710  EF8E  F00B         	goto	u2190
  4936  001714  EF8C  F00B         	goto	u2191
  4937  001718                     u2191:
  4938  001718  EF94  F00B         	goto	l3023
  4939  00171C                     u2190:
  4940  00171C  6C01               	negf	___awdiv@dividend^0,c
  4941  00171E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4942  001720  B0D8               	btfsc	status,0,c
  4943  001722  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4944  001724  0E01               	movlw	1
  4945  001726  1A06               	xorwf	___awdiv@sign^0,f,c
  4946  001728                     l3023:
  4947  001728  0E00               	movlw	0
  4948  00172A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4949  00172C  0E00               	movlw	0
  4950  00172E  6E07               	movwf	___awdiv@quotient^0,c
  4951  001730  5003               	movf	___awdiv@divisor^0,w,c
  4952  001732  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4953  001734  B4D8               	btfsc	status,2,c
  4954  001736  EF9F  F00B         	goto	u2201
  4955  00173A  EFA1  F00B         	goto	u2200
  4956  00173E                     u2201:
  4957  00173E  EFC9  F00B         	goto	l3045
  4958  001742                     u2200:
  4959  001742  0E01               	movlw	1
  4960  001744  6E05               	movwf	___awdiv@counter^0,c
  4961  001746  EFA9  F00B         	goto	l3031
  4962  00174A                     l3029:
  4963  00174A  90D8               	bcf	status,0,c
  4964  00174C  3603               	rlcf	___awdiv@divisor^0,f,c
  4965  00174E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4966  001750  2A05               	incf	___awdiv@counter^0,f,c
  4967  001752                     l3031:
  4968  001752  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4969  001754  EFAE  F00B         	goto	u2211
  4970  001758  EFB0  F00B         	goto	u2210
  4971  00175C                     u2211:
  4972  00175C  EFA5  F00B         	goto	l3029
  4973  001760                     u2210:
  4974  001760                     l3033:
  4975  001760  90D8               	bcf	status,0,c
  4976  001762  3607               	rlcf	___awdiv@quotient^0,f,c
  4977  001764  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4978  001766  5003               	movf	___awdiv@divisor^0,w,c
  4979  001768  5C01               	subwf	___awdiv@dividend^0,w,c
  4980  00176A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4981  00176C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4982  00176E  A0D8               	btfss	status,0,c
  4983  001770  EFBC  F00B         	goto	u2221
  4984  001774  EFBE  F00B         	goto	u2220
  4985  001778                     u2221:
  4986  001778  EFC3  F00B         	goto	l3041
  4987  00177C                     u2220:
  4988  00177C  5003               	movf	___awdiv@divisor^0,w,c
  4989  00177E  5E01               	subwf	___awdiv@dividend^0,f,c
  4990  001780  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4991  001782  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4992  001784  8007               	bsf	___awdiv@quotient^0,0,c
  4993  001786                     l3041:
  4994  001786  90D8               	bcf	status,0,c
  4995  001788  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4996  00178A  3203               	rrcf	___awdiv@divisor^0,f,c
  4997  00178C  2E05               	decfsz	___awdiv@counter^0,f,c
  4998  00178E  EFB0  F00B         	goto	l3033
  4999  001792                     l3045:
  5000  001792  5006               	movf	___awdiv@sign^0,w,c
  5001  001794  B4D8               	btfsc	status,2,c
  5002  001796  EFCF  F00B         	goto	u2231
  5003  00179A  EFD1  F00B         	goto	u2230
  5004  00179E                     u2231:
  5005  00179E  EFD5  F00B         	goto	l3049
  5006  0017A2                     u2230:
  5007  0017A2  6C07               	negf	___awdiv@quotient^0,c
  5008  0017A4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5009  0017A6  B0D8               	btfsc	status,0,c
  5010  0017A8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5011  0017AA                     l3049:
  5012  0017AA  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5013  0017AE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5014  0017B2  0012               	return		;funcret
  5015  0017B4                     __end_of___awdiv:
  5016                           	opt callstack 0
  5017                           
  5018 ;; *************** function _fijaHoraRtc *****************
  5019 ;; Defined at:
  5020 ;;		line 318 in file "main.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;		None
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;		None
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  1    wreg      void 
  5027 ;; Registers used:
  5028 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5034 ;;      Params:         0       0       0       0       0       0       0       0       0
  5035 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5036 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5037 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5038 ;;Total ram usage:        0 bytes
  5039 ;; Hardware stack levels used:    1
  5040 ;; Hardware stack levels required when called:    5
  5041 ;; This function calls:
  5042 ;;		_UART_printf
  5043 ;;		_escribe_rtc
  5044 ;;		_setRtc
  5045 ;; This function is called by:
  5046 ;;		_sistemaPrincipal
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           	psect	text23
  5051  001B98                     __ptext23:
  5052                           	opt callstack 0
  5053  001B98                     _fijaHoraRtc:
  5054                           	opt callstack 24
  5055  001B98                     
  5056                           ;main.c: 320:     UART_printf("\r\n FIJA HORA \r\n");
  5057  001B98  0ED0               	movlw	low STR_1
  5058  001B9A  6E02               	movwf	UART_printf@cadena^0,c
  5059  001B9C  0E7F               	movlw	high STR_1
  5060  001B9E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5061  001BA0  ECC6  F00E         	call	_UART_printf	;wreg free
  5062                           
  5063                           ;main.c: 323:     UART_printf("\r\n Envie las Horas en formato 24 Ej: 15 \r\n");
  5064  001BA4  0EDC               	movlw	low STR_2
  5065  001BA6  6E02               	movwf	UART_printf@cadena^0,c
  5066  001BA8  0E7C               	movlw	high STR_2
  5067  001BAA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5068  001BAC  ECC6  F00E         	call	_UART_printf	;wreg free
  5069  001BB0                     
  5070                           ;main.c: 324:     setRtc(0x02);
  5071  001BB0  0E02               	movlw	2
  5072  001BB2  ECB2  F00A         	call	_setRtc
  5073  001BB6                     
  5074                           ;main.c: 327:     if (!esperandoDatos) {
  5075  001BB6  505E               	movf	_esperandoDatos^0,w,c
  5076  001BB8  A4D8               	btfss	status,2,c
  5077  001BBA  EFE1  F00D         	goto	u2361
  5078  001BBE  EFE3  F00D         	goto	u2360
  5079  001BC2                     u2361:
  5080  001BC2  EFEC  F00D         	goto	l3147
  5081  001BC6                     u2360:
  5082  001BC6                     
  5083                           ;main.c: 328:         UART_printf("\r\n Envie los Minutos Ej: 25 \r\n");
  5084  001BC6  0EE5               	movlw	low STR_3
  5085  001BC8  6E02               	movwf	UART_printf@cadena^0,c
  5086  001BCA  0E7E               	movlw	high STR_3
  5087  001BCC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5088  001BCE  ECC6  F00E         	call	_UART_printf	;wreg free
  5089  001BD2                     
  5090                           ;main.c: 329:         setRtc(0x01);
  5091  001BD2  0E01               	movlw	1
  5092  001BD4  ECB2  F00A         	call	_setRtc
  5093  001BD8                     l3147:
  5094                           
  5095                           ;main.c: 333:     if (!esperandoDatos) {
  5096  001BD8  505E               	movf	_esperandoDatos^0,w,c
  5097  001BDA  A4D8               	btfss	status,2,c
  5098  001BDC  EFF2  F00D         	goto	u2371
  5099  001BE0  EFF4  F00D         	goto	u2370
  5100  001BE4                     u2371:
  5101  001BE4  EFFF  F00D         	goto	l275
  5102  001BE8                     u2370:
  5103  001BE8                     
  5104                           ;main.c: 335:         UART_printf("\r\n HORA ESTABLECIDA CORRECTAMENTE \r\n");
  5105  001BE8  0E19               	movlw	low STR_4
  5106  001BEA  6E02               	movwf	UART_printf@cadena^0,c
  5107  001BEC  0E7E               	movlw	high STR_4
  5108  001BEE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5109  001BF0  ECC6  F00E         	call	_UART_printf	;wreg free
  5110  001BF4                     
  5111                           ;main.c: 336:         escribe_rtc(0x00, 0);
  5112  001BF4  0E00               	movlw	0
  5113  001BF6  6E03               	movwf	escribe_rtc@dato^0,c
  5114  001BF8  0E00               	movlw	0
  5115  001BFA  EC1F  F011         	call	_escribe_rtc
  5116  001BFE                     l275:
  5117  001BFE  0012               	return		;funcret
  5118  001C00                     __end_of_fijaHoraRtc:
  5119                           	opt callstack 0
  5120                           
  5121 ;; *************** function _setRtc *****************
  5122 ;; Defined at:
  5123 ;;		line 157 in file "main.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;  direccion       1    wreg     unsigned char 
  5126 ;; Auto vars:     Size  Location     Type
  5127 ;;  direccion       1    5[COMRAM] unsigned char 
  5128 ;;  Rx              1   10[COMRAM] unsigned char 
  5129 ;;  i               2    8[COMRAM] int 
  5130 ;;  datoCapturad    1    7[COMRAM] unsigned char 
  5131 ;;  dato            1    6[COMRAM] unsigned char 
  5132 ;; Return value:  Size  Location     Type
  5133 ;;                  1    wreg      void 
  5134 ;; Registers used:
  5135 ;;		wreg, status,2, status,0, cstack
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5141 ;;      Params:         0       0       0       0       0       0       0       0       0
  5142 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5143 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5144 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5145 ;;Total ram usage:        7 bytes
  5146 ;; Hardware stack levels used:    1
  5147 ;; Hardware stack levels required when called:    4
  5148 ;; This function calls:
  5149 ;;		_UART_read
  5150 ;;		_UART_write
  5151 ;;		_escribe_rtc
  5152 ;; This function is called by:
  5153 ;;		_fijaHoraRtc
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           	psect	text24
  5158  001564                     __ptext24:
  5159                           	opt callstack 0
  5160  001564                     _setRtc:
  5161                           	opt callstack 24
  5162                           
  5163                           ;incstack = 0
  5164                           ;setRtc@direccion stored from wreg
  5165  001564  6E06               	movwf	setRtc@direccion^0,c
  5166  001566                     
  5167                           ;main.c: 158:     unsigned char dato;;main.c: 159:     char datoCapturado = 0;
  5168  001566  0E00               	movlw	0
  5169  001568  6E08               	movwf	setRtc@datoCapturado^0,c
  5170                           
  5171                           ;main.c: 161:     for (int i = 0; i < 2; i++) {
  5172  00156A  0E00               	movlw	0
  5173  00156C  6E0A               	movwf	(setRtc@i+1)^0,c
  5174  00156E  0E00               	movlw	0
  5175  001570  6E09               	movwf	setRtc@i^0,c
  5176  001572                     l2893:
  5177                           
  5178                           ;main.c: 162:         char Rx = UART_read();
  5179  001572  EC23  F00F         	call	_UART_read	;wreg free
  5180  001576  6E0B               	movwf	setRtc@Rx^0,c
  5181  001578                     
  5182                           ;main.c: 163:         if (Rx >= 48 && Rx <= 57) {
  5183  001578  0E2F               	movlw	47
  5184  00157A  640B               	cpfsgt	setRtc@Rx^0,c
  5185  00157C  EFC2  F00A         	goto	u2071
  5186  001580  EFC4  F00A         	goto	u2070
  5187  001584                     u2071:
  5188  001584  EFE8  F00A         	goto	l2907
  5189  001588                     u2070:
  5190  001588  0E3A               	movlw	58
  5191  00158A  600B               	cpfslt	setRtc@Rx^0,c
  5192  00158C  EFCA  F00A         	goto	u2081
  5193  001590  EFCC  F00A         	goto	u2080
  5194  001594                     u2081:
  5195  001594  EFE8  F00A         	goto	l2907
  5196  001598                     u2080:
  5197  001598                     
  5198                           ;main.c: 164:             if (!i) {
  5199  001598  5009               	movf	setRtc@i^0,w,c
  5200  00159A  100A               	iorwf	(setRtc@i+1)^0,w,c
  5201  00159C  A4D8               	btfss	status,2,c
  5202  00159E  EFD3  F00A         	goto	u2091
  5203  0015A2  EFD5  F00A         	goto	u2090
  5204  0015A6                     u2091:
  5205  0015A6  EFE0  F00A         	goto	l2903
  5206  0015AA                     u2090:
  5207  0015AA                     
  5208                           ;main.c: 165:                 dato = ((Rx - 48) & 0x0F) << 4;
  5209  0015AA  C00B  F005         	movff	setRtc@Rx,??_setRtc
  5210  0015AE  0ED0               	movlw	208
  5211  0015B0  2605               	addwf	??_setRtc^0,f,c
  5212  0015B2  0E0F               	movlw	15
  5213  0015B4  1605               	andwf	??_setRtc^0,f,c
  5214  0015B6  3805               	swapf	??_setRtc^0,w,c
  5215  0015B8  0BF0               	andlw	240
  5216  0015BA  6E07               	movwf	setRtc@dato^0,c
  5217                           
  5218                           ;main.c: 166:             } else {
  5219  0015BC  EFEF  F00A         	goto	l2911
  5220  0015C0                     l2903:
  5221                           
  5222                           ;main.c: 167:                 dato |= (Rx - 48) & 0x0F;
  5223  0015C0  500B               	movf	setRtc@Rx^0,w,c
  5224  0015C2  0FD0               	addlw	208
  5225  0015C4  0B0F               	andlw	15
  5226  0015C6  1207               	iorwf	setRtc@dato^0,f,c
  5227  0015C8                     
  5228                           ;main.c: 168:                 datoCapturado = 1;
  5229  0015C8  0E01               	movlw	1
  5230  0015CA  6E08               	movwf	setRtc@datoCapturado^0,c
  5231  0015CC  EFEF  F00A         	goto	l2911
  5232  0015D0                     l2907:
  5233                           
  5234                           ;main.c: 171:             datoCapturado = 0;
  5235  0015D0  0E00               	movlw	0
  5236  0015D2  6E08               	movwf	setRtc@datoCapturado^0,c
  5237  0015D4                     
  5238                           ;main.c: 173:             UART_write('F');
  5239  0015D4  0E46               	movlw	70
  5240  0015D6  EC3B  F011         	call	_UART_write
  5241                           
  5242                           ;main.c: 174:             break;
  5243  0015DA  EFFF  F00A         	goto	l2915
  5244  0015DE                     l2911:
  5245                           
  5246                           ;main.c: 176:     }
  5247  0015DE  4A09               	infsnz	setRtc@i^0,f,c
  5248  0015E0  2A0A               	incf	(setRtc@i+1)^0,f,c
  5249  0015E2  BE0A               	btfsc	(setRtc@i+1)^0,7,c
  5250  0015E4  EFFD  F00A         	goto	u2101
  5251  0015E8  500A               	movf	(setRtc@i+1)^0,w,c
  5252  0015EA  E109               	bnz	u2100
  5253  0015EC  0E02               	movlw	2
  5254  0015EE  5C09               	subwf	setRtc@i^0,w,c
  5255  0015F0  A0D8               	btfss	status,0,c
  5256  0015F2  EFFD  F00A         	goto	u2101
  5257  0015F6  EFFF  F00A         	goto	u2100
  5258  0015FA                     u2101:
  5259  0015FA  EFB9  F00A         	goto	l2893
  5260  0015FE                     u2100:
  5261  0015FE                     l2915:
  5262                           
  5263                           ;main.c: 178:     if (datoCapturado && !esperandoDatos)
  5264  0015FE  5008               	movf	setRtc@datoCapturado^0,w,c
  5265  001600  B4D8               	btfsc	status,2,c
  5266  001602  EF05  F00B         	goto	u2111
  5267  001606  EF07  F00B         	goto	u2110
  5268  00160A                     u2111:
  5269  00160A  EF14  F00B         	goto	l227
  5270  00160E                     u2110:
  5271  00160E  505E               	movf	_esperandoDatos^0,w,c
  5272  001610  A4D8               	btfss	status,2,c
  5273  001612  EF0D  F00B         	goto	u2121
  5274  001616  EF0F  F00B         	goto	u2120
  5275  00161A                     u2121:
  5276  00161A  EF14  F00B         	goto	l227
  5277  00161E                     u2120:
  5278  00161E                     
  5279                           ;main.c: 179:         escribe_rtc(direccion, dato);
  5280  00161E  C007  F003         	movff	setRtc@dato,escribe_rtc@dato
  5281  001622  5006               	movf	setRtc@direccion^0,w,c
  5282  001624  EC1F  F011         	call	_escribe_rtc
  5283  001628                     l227:
  5284  001628  0012               	return		;funcret
  5285  00162A                     __end_of_setRtc:
  5286                           	opt callstack 0
  5287                           
  5288 ;; *************** function _escribe_rtc *****************
  5289 ;; Defined at:
  5290 ;;		line 2 in file "./RTC.h"
  5291 ;; Parameters:    Size  Location     Type
  5292 ;;  direccion       1    wreg     unsigned char 
  5293 ;;  dato            1    2[COMRAM] unsigned char 
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;  direccion       1    3[COMRAM] unsigned char 
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  1    wreg      void 
  5298 ;; Registers used:
  5299 ;;		wreg, status,2, status,0, cstack
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5305 ;;      Params:         1       0       0       0       0       0       0       0       0
  5306 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5307 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5308 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5309 ;;Total ram usage:        2 bytes
  5310 ;; Hardware stack levels used:    1
  5311 ;; Hardware stack levels required when called:    3
  5312 ;; This function calls:
  5313 ;;		_i2c_detener
  5314 ;;		_i2c_envia_dato
  5315 ;;		_i2c_inicia_com
  5316 ;; This function is called by:
  5317 ;;		_setRtc
  5318 ;;		_fijaHoraRtc
  5319 ;;		_setRtcDefault
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323                           	psect	text25
  5324  00223E                     __ptext25:
  5325                           	opt callstack 0
  5326  00223E                     _escribe_rtc:
  5327                           	opt callstack 24
  5328                           
  5329                           ;incstack = 0
  5330                           ;escribe_rtc@direccion stored from wreg
  5331  00223E  6E04               	movwf	escribe_rtc@direccion^0,c
  5332  002240                     
  5333                           ;./RTC.h: 3:     i2c_inicia_com();
  5334  002240  EC66  F011         	call	_i2c_inicia_com	;wreg free
  5335                           
  5336                           ;./RTC.h: 4:     i2c_envia_dato(0xD0);
  5337  002244  0ED0               	movlw	208
  5338  002246  EC57  F011         	call	_i2c_envia_dato
  5339                           
  5340                           ;./RTC.h: 5:     i2c_envia_dato(direccion);
  5341  00224A  5004               	movf	escribe_rtc@direccion^0,w,c
  5342  00224C  EC57  F011         	call	_i2c_envia_dato
  5343                           
  5344                           ;./RTC.h: 6:     i2c_envia_dato(dato);
  5345  002250  5003               	movf	escribe_rtc@dato^0,w,c
  5346  002252  EC57  F011         	call	_i2c_envia_dato
  5347                           
  5348                           ;./RTC.h: 7:     i2c_detener();
  5349  002256  EC6A  F011         	call	_i2c_detener	;wreg free
  5350  00225A  0012               	return		;funcret
  5351  00225C                     __end_of_escribe_rtc:
  5352                           	opt callstack 0
  5353                           
  5354 ;; *************** function _dameDatosSistema *****************
  5355 ;; Defined at:
  5356 ;;		line 637 in file "main.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;		None
  5359 ;; Auto vars:     Size  Location     Type
  5360 ;;  i               2   70[BANK0 ] int 
  5361 ;;  buffer         50   20[BANK0 ] unsigned char [50]
  5362 ;; Return value:  Size  Location     Type
  5363 ;;                  1    wreg      void 
  5364 ;; Registers used:
  5365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5371 ;;      Params:         0       0       0       0       0       0       0       0       0
  5372 ;;      Locals:         0      52       0       0       0       0       0       0       0
  5373 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5374 ;;      Totals:         3      52       0       0       0       0       0       0       0
  5375 ;;Total ram usage:       55 bytes
  5376 ;; Hardware stack levels used:    1
  5377 ;; Hardware stack levels required when called:    9
  5378 ;; This function calls:
  5379 ;;		_UART_printf
  5380 ;;		_UART_write
  5381 ;;		___wmul
  5382 ;;		_sprintf
  5383 ;; This function is called by:
  5384 ;;		_sistemaPrincipal
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           	psect	text26
  5389  00121A                     __ptext26:
  5390                           	opt callstack 0
  5391  00121A                     _dameDatosSistema:
  5392                           	opt callstack 20
  5393  00121A                     
  5394                           ;main.c: 639:     char buffer[50];;main.c: 641:     UART_write('I');
  5395  00121A  0E49               	movlw	73
  5396  00121C  EC3B  F011         	call	_UART_write
  5397  001220                     
  5398                           ;main.c: 643:     UART_printf("\r\n\nHora | Regar(1 si 0 no) | Minutos de riego \r\n\n")
      +                          ;
  5399  001220  0E79               	movlw	low STR_25
  5400  001222  6E02               	movwf	UART_printf@cadena^0,c
  5401  001224  0E7C               	movlw	high STR_25
  5402  001226  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5403  001228  ECC6  F00E         	call	_UART_printf	;wreg free
  5404  00122C                     
  5405                           ;main.c: 645:     for (int i = 0; i < 24; i++) {
  5406  00122C  0E00               	movlw	0
  5407  00122E  0100               	movlb	0	; () banked
  5408  001230  6FF5               	movwf	(dameDatosSistema@i+1)& (0+255),b
  5409  001232  0E00               	movlw	0
  5410  001234  6FF4               	movwf	dameDatosSistema@i& (0+255),b
  5411  001236                     l3317:
  5412                           
  5413                           ; BSR set to: 0
  5414                           ;main.c: 647:         sprintf(buffer, "%d | %d | %d \r\n", horarios[i].hora, horarios[i]
      +                          .regar,
  5415  001236  0EC2               	movlw	low dameDatosSistema@buffer
  5416  001238  6FAE               	movwf	sprintf@s& (0+255),b
  5417  00123A  0E00               	movlw	high dameDatosSistema@buffer
  5418  00123C  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  5419  00123E  0EE0               	movlw	low STR_26
  5420  001240  6FB0               	movwf	sprintf@fmt& (0+255),b
  5421  001242  0E7F               	movlw	high STR_26
  5422  001244  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  5423  001246  C0F4  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  5424  00124A  C0F5  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  5425  00124E  0E00               	movlw	0
  5426  001250  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5427  001252  0E03               	movlw	3
  5428  001254  6E03               	movwf	___wmul@multiplicand^0,c
  5429  001256  ECEC  F010         	call	___wmul	;wreg free
  5430  00125A  0E00               	movlw	low _horarios
  5431  00125C  2401               	addwf	?___wmul^0,w,c
  5432  00125E  6ED9               	movwf	fsr2l,c
  5433  001260  0E01               	movlw	high _horarios
  5434  001262  2002               	addwfc	(?___wmul+1)^0,w,c
  5435  001264  6EDA               	movwf	fsr2h,c
  5436  001266  50DF               	movf	indf2,w,c
  5437  001268  6E58               	movwf	??_dameDatosSistema^0,c
  5438  00126A  5058               	movf	??_dameDatosSistema^0,w,c
  5439  00126C  0100               	movlb	0	; () banked
  5440  00126E  6FB2               	movwf	(?_sprintf+4)& (0+255),b
  5441  001270  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  5442  001272  C0F4  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  5443  001276  C0F5  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  5444  00127A  0E00               	movlw	0
  5445  00127C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5446  00127E  0E03               	movlw	3
  5447  001280  6E03               	movwf	___wmul@multiplicand^0,c
  5448  001282  ECEC  F010         	call	___wmul	;wreg free
  5449  001286  0E01               	movlw	low (_horarios+1)
  5450  001288  2401               	addwf	?___wmul^0,w,c
  5451  00128A  6ED9               	movwf	fsr2l,c
  5452  00128C  0E01               	movlw	high (_horarios+1)
  5453  00128E  2002               	addwfc	(?___wmul+1)^0,w,c
  5454  001290  6EDA               	movwf	fsr2h,c
  5455  001292  50DF               	movf	indf2,w,c
  5456  001294  6E59               	movwf	(??_dameDatosSistema+1)^0,c
  5457  001296  5059               	movf	(??_dameDatosSistema+1)^0,w,c
  5458  001298  0100               	movlb	0	; () banked
  5459  00129A  6FB4               	movwf	(?_sprintf+6)& (0+255),b
  5460  00129C  6BB5               	clrf	(?_sprintf+7)& (0+255),b
  5461  00129E  C0F4  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  5462  0012A2  C0F5  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  5463  0012A6  0E00               	movlw	0
  5464  0012A8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5465  0012AA  0E03               	movlw	3
  5466  0012AC  6E03               	movwf	___wmul@multiplicand^0,c
  5467  0012AE  ECEC  F010         	call	___wmul	;wreg free
  5468  0012B2  0E02               	movlw	low (_horarios+2)
  5469  0012B4  2401               	addwf	?___wmul^0,w,c
  5470  0012B6  6ED9               	movwf	fsr2l,c
  5471  0012B8  0E01               	movlw	high (_horarios+2)
  5472  0012BA  2002               	addwfc	(?___wmul+1)^0,w,c
  5473  0012BC  6EDA               	movwf	fsr2h,c
  5474  0012BE  50DF               	movf	indf2,w,c
  5475  0012C0  6E5A               	movwf	(??_dameDatosSistema+2)^0,c
  5476  0012C2  505A               	movf	(??_dameDatosSistema+2)^0,w,c
  5477  0012C4  0100               	movlb	0	; () banked
  5478  0012C6  6FB6               	movwf	(?_sprintf+8)& (0+255),b
  5479  0012C8  6BB7               	clrf	(?_sprintf+9)& (0+255),b
  5480  0012CA  EC4D  F00F         	call	_sprintf	;wreg free
  5481  0012CE                     
  5482                           ;main.c: 650:         UART_printf(buffer);
  5483  0012CE  0EC2               	movlw	low dameDatosSistema@buffer
  5484  0012D0  6E02               	movwf	UART_printf@cadena^0,c
  5485  0012D2  0E00               	movlw	high dameDatosSistema@buffer
  5486  0012D4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5487  0012D6  ECC6  F00E         	call	_UART_printf	;wreg free
  5488  0012DA                     
  5489                           ;main.c: 652:     }
  5490  0012DA  0100               	movlb	0	; () banked
  5491  0012DC  4BF4               	infsnz	dameDatosSistema@i& (0+255),f,b
  5492  0012DE  2BF5               	incf	(dameDatosSistema@i+1)& (0+255),f,b
  5493  0012E0                     
  5494                           ; BSR set to: 0
  5495  0012E0  BFF5               	btfsc	(dameDatosSistema@i+1)& (0+255),7,b
  5496  0012E2  EF7C  F009         	goto	u2591
  5497  0012E6  51F5               	movf	(dameDatosSistema@i+1)& (0+255),w,b
  5498  0012E8  E109               	bnz	u2590
  5499  0012EA  0E18               	movlw	24
  5500  0012EC  5DF4               	subwf	dameDatosSistema@i& (0+255),w,b
  5501  0012EE  A0D8               	btfss	status,0,c
  5502  0012F0  EF7C  F009         	goto	u2591
  5503  0012F4  EF7E  F009         	goto	u2590
  5504  0012F8                     u2591:
  5505  0012F8  EF1B  F009         	goto	l3317
  5506  0012FC                     u2590:
  5507  0012FC                     
  5508                           ; BSR set to: 0
  5509                           ;main.c: 654:     UART_write('I');
  5510  0012FC  0E49               	movlw	73
  5511  0012FE  EC3B  F011         	call	_UART_write
  5512  001302  0012               	return		;funcret
  5513  001304                     __end_of_dameDatosSistema:
  5514                           	opt callstack 0
  5515                           
  5516 ;; *************** function _sprintf *****************
  5517 ;; Defined at:
  5518 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  5519 ;; Parameters:    Size  Location     Type
  5520 ;;  s               2    0[BANK0 ] PTR unsigned char 
  5521 ;;		 -> mostrarDatosSensoresWIFI@buffer(50), mostrarDatosSensores@buffer(50), dameDatosSistema@buffer(50), 
  5522 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  5523 ;;		 -> STR_35(29), STR_34(32), STR_33(40), STR_32(38), 
  5524 ;;		 -> STR_31(42), STR_30(29), STR_29(32), STR_26(16), 
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;  f               6   14[BANK0 ] struct _IO_FILE
  5527 ;;  ap              2   12[BANK0 ] PTR void [1]
  5528 ;;		 -> ?_sprintf(2), 
  5529 ;;  ret             2    0        int 
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  2    0[BANK0 ] int 
  5532 ;; Registers used:
  5533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5539 ;;      Params:         0      10       0       0       0       0       0       0       0
  5540 ;;      Locals:         0      10       0       0       0       0       0       0       0
  5541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5542 ;;      Totals:         0      20       0       0       0       0       0       0       0
  5543 ;;Total ram usage:       20 bytes
  5544 ;; Hardware stack levels used:    1
  5545 ;; Hardware stack levels required when called:    8
  5546 ;; This function calls:
  5547 ;;		_vfprintf
  5548 ;; This function is called by:
  5549 ;;		_dameDatosSistema
  5550 ;;		_mostrarDatosSensores
  5551 ;;		_mostrarDatosSensoresWIFI
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text27
  5556  001E9A                     __ptext27:
  5557                           	opt callstack 0
  5558  001E9A                     _sprintf:
  5559                           	opt callstack 20
  5560  001E9A  0EB2               	movlw	low (?_sprintf+4)
  5561  001E9C  0100               	movlb	0	; () banked
  5562  001E9E  6FBA               	movwf	sprintf@ap& (0+255),b
  5563  001EA0  0E00               	movlw	high (?_sprintf+4)
  5564  001EA2  6FBB               	movwf	(sprintf@ap+1)& (0+255),b
  5565  001EA4  C0AE  F0BC         	movff	sprintf@s,sprintf@f
  5566  001EA8  C0AF  F0BD         	movff	sprintf@s+1,sprintf@f+1
  5567  001EAC                     
  5568                           ; BSR set to: 0
  5569  001EAC  0E00               	movlw	0
  5570  001EAE  6FBF               	movwf	(sprintf@f+3)& (0+255),b
  5571  001EB0  0E00               	movlw	0
  5572  001EB2  6FBE               	movwf	(sprintf@f+2)& (0+255),b
  5573  001EB4                     
  5574                           ; BSR set to: 0
  5575  001EB4  0E00               	movlw	0
  5576  001EB6  6FC1               	movwf	(sprintf@f+5)& (0+255),b
  5577  001EB8  0E00               	movlw	0
  5578  001EBA  6FC0               	movwf	(sprintf@f+4)& (0+255),b
  5579  001EBC                     
  5580                           ; BSR set to: 0
  5581  001EBC  0EBC               	movlw	low sprintf@f
  5582  001EBE  6E50               	movwf	vfprintf@fp^0,c
  5583  001EC0  0E00               	movlw	high sprintf@f
  5584  001EC2  6E51               	movwf	(vfprintf@fp+1)^0,c
  5585  001EC4  C0B0  F052         	movff	sprintf@fmt,vfprintf@fmt
  5586  001EC8  C0B1  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5587  001ECC  0EBA               	movlw	low sprintf@ap
  5588  001ECE  6E54               	movwf	vfprintf@ap^0,c
  5589  001ED0  0E00               	movlw	high sprintf@ap
  5590  001ED2  6E55               	movwf	(vfprintf@ap+1)^0,c
  5591  001ED4  EC95  F00E         	call	_vfprintf	;wreg free
  5592  001ED8  0100               	movlb	0	; () banked
  5593  001EDA  51BE               	movf	(sprintf@f+2)& (0+255),w,b
  5594  001EDC  25AE               	addwf	sprintf@s& (0+255),w,b
  5595  001EDE  6ED9               	movwf	fsr2l,c
  5596  001EE0  51BF               	movf	(sprintf@f+3)& (0+255),w,b
  5597  001EE2  21AF               	addwfc	(sprintf@s+1)& (0+255),w,b
  5598  001EE4  6EDA               	movwf	fsr2h,c
  5599  001EE6  0E00               	movlw	0
  5600  001EE8  6EDF               	movwf	indf2,c
  5601  001EEA                     
  5602                           ; BSR set to: 0
  5603  001EEA  0012               	return		;funcret
  5604  001EEC                     __end_of_sprintf:
  5605                           	opt callstack 0
  5606                           
  5607 ;; *************** function _vfprintf *****************
  5608 ;; Defined at:
  5609 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  5612 ;;		 -> sprintf@f(6), 
  5613 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  5614 ;;		 -> STR_35(29), STR_34(32), STR_33(40), STR_32(38), 
  5615 ;;		 -> STR_31(42), STR_30(29), STR_29(32), STR_26(16), 
  5616 ;;  ap              2   83[COMRAM] PTR PTR void 
  5617 ;;		 -> sprintf@ap(2), 
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  5620 ;;		 -> STR_35(29), STR_34(32), STR_33(40), STR_32(38), 
  5621 ;;		 -> STR_31(42), STR_30(29), STR_29(32), STR_26(16), 
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  2   79[COMRAM] int 
  5624 ;; Registers used:
  5625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5631 ;;      Params:         6       0       0       0       0       0       0       0       0
  5632 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5633 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5634 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5635 ;;Total ram usage:        8 bytes
  5636 ;; Hardware stack levels used:    1
  5637 ;; Hardware stack levels required when called:    7
  5638 ;; This function calls:
  5639 ;;		_vfpfcnvrt
  5640 ;; This function is called by:
  5641 ;;		_sprintf
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           	psect	text28
  5646  001D2A                     __ptext28:
  5647                           	opt callstack 0
  5648  001D2A                     _vfprintf:
  5649                           	opt callstack 20
  5650  001D2A                     
  5651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5652  001D2A  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  5653  001D2E  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5654  001D32                     
  5655                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5656  001D32  0E00               	movlw	0
  5657  001D34  0100               	movlb	0	; () banked
  5658  001D36  6F79               	movwf	(_nout+1)& (0+255),b
  5659  001D38  0E00               	movlw	0
  5660  001D3A  6F78               	movwf	_nout& (0+255),b
  5661                           
  5662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5663  001D3C  EFB3  F00E         	goto	l2855
  5664  001D40                     l2853:
  5665                           
  5666                           ; BSR set to: 0
  5667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5668  001D40  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  5669  001D44  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5670  001D48  0E56               	movlw	low vfprintf@cfmt
  5671  001D4A  6E42               	movwf	vfpfcnvrt@fmt^0,c
  5672  001D4C  0E00               	movlw	high vfprintf@cfmt
  5673  001D4E  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5674  001D50  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  5675  001D54  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5676  001D58  ECD2  F003         	call	_vfpfcnvrt	;wreg free
  5677  001D5C  5040               	movf	?_vfpfcnvrt^0,w,c
  5678  001D5E  0100               	movlb	0	; () banked
  5679  001D60  2778               	addwf	_nout& (0+255),f,b
  5680  001D62  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  5681  001D64  2379               	addwfc	(_nout+1)& (0+255),f,b
  5682  001D66                     l2855:
  5683                           
  5684                           ; BSR set to: 0
  5685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5686  001D66  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  5687  001D6A  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5688  001D6E                     	if	0	;tblptru may be non-zero
  5689  001D6E                     	endif
  5690  001D6E                     	if	0	;tblptru may be non-zero
  5691  001D6E                     	endif
  5692  001D6E  0008               	tblrd		*
  5693  001D70  50F5               	movf	tablat,w,c
  5694  001D72  0900               	iorlw	0
  5695  001D74  A4D8               	btfss	status,2,c
  5696  001D76  EFBF  F00E         	goto	u2041
  5697  001D7A  EFC1  F00E         	goto	u2040
  5698  001D7E                     u2041:
  5699  001D7E  EFA0  F00E         	goto	l2853
  5700  001D82                     u2040:
  5701  001D82                     
  5702                           ; BSR set to: 0
  5703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5704  001D82  C078  F050         	movff	_nout,?_vfprintf
  5705  001D86  C079  F051         	movff	_nout+1,?_vfprintf+1
  5706  001D8A                     
  5707                           ; BSR set to: 0
  5708  001D8A  0012               	return		;funcret
  5709  001D8C                     __end_of_vfprintf:
  5710                           	opt callstack 0
  5711                           
  5712 ;; *************** function _vfpfcnvrt *****************
  5713 ;; Defined at:
  5714 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  5717 ;;		 -> sprintf@f(6), 
  5718 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  5719 ;;		 -> vfprintf@cfmt(2), 
  5720 ;;  ap              2   67[COMRAM] PTR PTR void 
  5721 ;;		 -> sprintf@ap(2), 
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;  ll              8   71[COMRAM] long long 
  5724 ;;  llu             8    0        unsigned long long 
  5725 ;;  f               4    0        unsigned long long 
  5726 ;;  vp              3    0        PTR void 
  5727 ;;  ct              3    0        unsigned char [3]
  5728 ;;  cp              3    0        PTR unsigned char 
  5729 ;;  i               2    0        int 
  5730 ;;  done            2    0        int 
  5731 ;;  c               1    0        unsigned char 
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  2   63[COMRAM] int 
  5734 ;; Registers used:
  5735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5741 ;;      Params:         6       0       0       0       0       0       0       0       0
  5742 ;;      Locals:         8       0       0       0       0       0       0       0       0
  5743 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5744 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5745 ;;Total ram usage:       16 bytes
  5746 ;; Hardware stack levels used:    1
  5747 ;; Hardware stack levels required when called:    6
  5748 ;; This function calls:
  5749 ;;		_dtoa
  5750 ;;		_fputc
  5751 ;; This function is called by:
  5752 ;;		_vfprintf
  5753 ;; This function uses a non-reentrant model
  5754 ;;
  5755                           
  5756                           	psect	text29
  5757  0007A4                     __ptext29:
  5758                           	opt callstack 0
  5759  0007A4                     _vfpfcnvrt:
  5760                           	opt callstack 20
  5761  0007A4                     
  5762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5763  0007A4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5764  0007A8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5765  0007AC  CFDE FFF6          	movff	postinc2,tblptrl
  5766  0007B0  CFDD FFF7          	movff	postdec2,tblptrh
  5767  0007B4                     	if	0	;tblptru may be non-zero
  5768  0007B4                     	endif
  5769  0007B4                     	if	0	;tblptru may be non-zero
  5770  0007B4                     	endif
  5771  0007B4  0008               	tblrd		*
  5772  0007B6  50F5               	movf	tablat,w,c
  5773  0007B8  0A25               	xorlw	37
  5774  0007BA  A4D8               	btfss	status,2,c
  5775  0007BC  EFE2  F003         	goto	u1931
  5776  0007C0  EFE4  F003         	goto	u1930
  5777  0007C4                     u1931:
  5778  0007C4  EF90  F004         	goto	l2751
  5779  0007C8                     u1930:
  5780  0007C8                     
  5781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5782  0007C8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5783  0007CC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5784  0007D0  2ADE               	incf	postinc2,f,c
  5785  0007D2  0E00               	movlw	0
  5786  0007D4  22DD               	addwfc	postdec2,f,c
  5787  0007D6                     
  5788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5789  0007D6  0E00               	movlw	0
  5790  0007D8  0100               	movlb	0	; () banked
  5791  0007DA  6F7B               	movwf	(_width+1)& (0+255),b
  5792  0007DC  0E00               	movlw	0
  5793  0007DE  6F7A               	movwf	_width& (0+255),b
  5794  0007E0  C07A  F07E         	movff	_width,_flags
  5795  0007E4  C07B  F07F         	movff	_width+1,_flags+1
  5796  0007E8                     
  5797                           ; BSR set to: 0
  5798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5799  0007E8  697C               	setf	_prec& (0+255),b
  5800  0007EA  697D               	setf	(_prec+1)& (0+255),b
  5801  0007EC                     
  5802                           ; BSR set to: 0
  5803                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5804  0007EC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5805  0007F0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5806  0007F4  CFDE FFF6          	movff	postinc2,tblptrl
  5807  0007F8  CFDD FFF7          	movff	postdec2,tblptrh
  5808  0007FC                     	if	0	;tblptru may be non-zero
  5809  0007FC                     	endif
  5810  0007FC                     	if	0	;tblptru may be non-zero
  5811  0007FC                     	endif
  5812  0007FC  0008               	tblrd		*
  5813  0007FE  50F5               	movf	tablat,w,c
  5814  000800  0A64               	xorlw	100
  5815  000802  B4D8               	btfsc	status,2,c
  5816  000804  EF06  F004         	goto	u1941
  5817  000808  EF08  F004         	goto	u1940
  5818  00080C                     u1941:
  5819  00080C  EF1A  F004         	goto	l2729
  5820  000810                     u1940:
  5821  000810                     
  5822                           ; BSR set to: 0
  5823  000810  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5824  000814  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5825  000818  CFDE FFF6          	movff	postinc2,tblptrl
  5826  00081C  CFDD FFF7          	movff	postdec2,tblptrh
  5827  000820                     	if	0	;tblptru may be non-zero
  5828  000820                     	endif
  5829  000820                     	if	0	;tblptru may be non-zero
  5830  000820                     	endif
  5831  000820  0008               	tblrd		*
  5832  000822  50F5               	movf	tablat,w,c
  5833  000824  0A69               	xorlw	105
  5834  000826  A4D8               	btfss	status,2,c
  5835  000828  EF18  F004         	goto	u1951
  5836  00082C  EF1A  F004         	goto	u1950
  5837  000830                     u1951:
  5838  000830  EF5A  F004         	goto	l2735
  5839  000834                     u1950:
  5840  000834                     l2729:
  5841                           
  5842                           ; BSR set to: 0
  5843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5844  000834  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5845  000838  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5846  00083C  2ADE               	incf	postinc2,f,c
  5847  00083E  0E00               	movlw	0
  5848  000840  22DD               	addwfc	postdec2,f,c
  5849                           
  5850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5851  000842  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5852  000846  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5853  00084A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  5854  00084E  0E02               	movlw	2
  5855  000850  26DE               	addwf	postinc2,f,c
  5856  000852  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  5857  000856  0E00               	movlw	0
  5858  000858  22DD               	addwfc	postdec2,f,c
  5859  00085A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5860  00085E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5861  000862  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  5862  000866  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  5863  00086A  0E00               	movlw	0
  5864  00086C  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  5865  00086E  0EFF               	movlw	-1
  5866  000870  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  5867  000872  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  5868  000874  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  5869  000876  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  5870  000878  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  5871  00087A  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  5872  00087C                     
  5873                           ; BSR set to: 0
  5874                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  5875  00087C  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5876  000880  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5877  000884  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  5878  000888  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5879  00088C  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5880  000890  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5881  000894  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5882  000898  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5883  00089C  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5884  0008A0  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5885  0008A4  EC7D  F001         	call	_dtoa	;wreg free
  5886  0008A8  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  5887  0008AC  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5888  0008B0  EFAB  F004         	goto	l457
  5889  0008B4                     l2735:
  5890                           
  5891                           ; BSR set to: 0
  5892                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5893  0008B4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5894  0008B8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5895  0008BC  CFDE FFF6          	movff	postinc2,tblptrl
  5896  0008C0  CFDD FFF7          	movff	postdec2,tblptrh
  5897  0008C4                     	if	0	;tblptru may be non-zero
  5898  0008C4                     	endif
  5899  0008C4                     	if	0	;tblptru may be non-zero
  5900  0008C4                     	endif
  5901  0008C4  0008               	tblrd		*
  5902  0008C6  50F5               	movf	tablat,w,c
  5903  0008C8  0A25               	xorlw	37
  5904  0008CA  A4D8               	btfss	status,2,c
  5905  0008CC  EF6A  F004         	goto	u1961
  5906  0008D0  EF6C  F004         	goto	u1960
  5907  0008D4                     u1961:
  5908  0008D4  EF83  F004         	goto	l2745
  5909  0008D8                     u1960:
  5910  0008D8                     
  5911                           ; BSR set to: 0
  5912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5913  0008D8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5914  0008DC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5915  0008E0  2ADE               	incf	postinc2,f,c
  5916  0008E2  0E00               	movlw	0
  5917  0008E4  22DD               	addwfc	postdec2,f,c
  5918  0008E6                     
  5919                           ; BSR set to: 0
  5920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5921  0008E6  0E00               	movlw	0
  5922  0008E8  6E02               	movwf	(fputc@c+1)^0,c
  5923  0008EA  0E25               	movlw	37
  5924  0008EC  6E01               	movwf	fputc@c^0,c
  5925  0008EE  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5926  0008F2  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5927  0008F6  ECE9  F009         	call	_fputc	;wreg free
  5928  0008FA                     l2741:
  5929                           
  5930                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5931  0008FA  0E00               	movlw	0
  5932  0008FC  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5933  0008FE  0E01               	movlw	1
  5934  000900  6E40               	movwf	?_vfpfcnvrt^0,c
  5935  000902  EFAB  F004         	goto	l457
  5936  000906                     l2745:
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5940  000906  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5941  00090A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5942  00090E  2ADE               	incf	postinc2,f,c
  5943  000910  0E00               	movlw	0
  5944  000912  22DD               	addwfc	postdec2,f,c
  5945  000914                     
  5946                           ; BSR set to: 0
  5947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  5948  000914  0E00               	movlw	0
  5949  000916  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5950  000918  0E00               	movlw	0
  5951  00091A  6E40               	movwf	?_vfpfcnvrt^0,c
  5952  00091C  EFAB  F004         	goto	l457
  5953  000920                     l2751:
  5954                           
  5955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5956  000920  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5957  000924  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5958  000928  CFDE FFF6          	movff	postinc2,tblptrl
  5959  00092C  CFDD FFF7          	movff	postdec2,tblptrh
  5960  000930                     	if	0	;tblptru may be non-zero
  5961  000930                     	endif
  5962  000930                     	if	0	;tblptru may be non-zero
  5963  000930                     	endif
  5964  000930  0008               	tblrd		*
  5965  000932  50F5               	movf	tablat,w,c
  5966  000934  6E01               	movwf	fputc@c^0,c
  5967  000936  6A02               	clrf	(fputc@c+1)^0,c
  5968  000938  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5969  00093C  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5970  000940  ECE9  F009         	call	_fputc	;wreg free
  5971  000944                     
  5972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5973  000944  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5974  000948  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5975  00094C  2ADE               	incf	postinc2,f,c
  5976  00094E  0E00               	movlw	0
  5977  000950  22DD               	addwfc	postdec2,f,c
  5978  000952  EF7D  F004         	goto	l2741
  5979  000956                     l457:
  5980  000956  0012               	return		;funcret
  5981  000958                     __end_of_vfpfcnvrt:
  5982                           	opt callstack 0
  5983                           
  5984 ;; *************** function _dtoa *****************
  5985 ;; Defined at:
  5986 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5989 ;;		 -> sprintf@f(6), 
  5990 ;;  d               8   29[COMRAM] long long 
  5991 ;; Auto vars:     Size  Location     Type
  5992 ;;  n               8   53[COMRAM] long long 
  5993 ;;  i               2   61[COMRAM] int 
  5994 ;;  s               2   51[COMRAM] int 
  5995 ;;  w               2   49[COMRAM] int 
  5996 ;;  p               2   47[COMRAM] int 
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  2   27[COMRAM] int 
  5999 ;; Registers used:
  6000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6006 ;;      Params:        10       0       0       0       0       0       0       0       0
  6007 ;;      Locals:        18       0       0       0       0       0       0       0       0
  6008 ;;      Temps:          8       0       0       0       0       0       0       0       0
  6009 ;;      Totals:        36       0       0       0       0       0       0       0       0
  6010 ;;Total ram usage:       36 bytes
  6011 ;; Hardware stack levels used:    1
  6012 ;; Hardware stack levels required when called:    5
  6013 ;; This function calls:
  6014 ;;		___aodiv
  6015 ;;		___aomod
  6016 ;;		_abs
  6017 ;;		_pad
  6018 ;; This function is called by:
  6019 ;;		_vfpfcnvrt
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           
  6023                           	psect	text30
  6024  0002FA                     __ptext30:
  6025                           	opt callstack 0
  6026  0002FA                     _dtoa:
  6027                           	opt callstack 20
  6028  0002FA                     
  6029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  6030  0002FA  C01E  F036         	movff	dtoa@d,dtoa@n
  6031  0002FE  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  6032  000302  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  6033  000306  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  6034  00030A  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  6035  00030E  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  6036  000312  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  6037  000316  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  6038  00031A                     
  6039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  6040  00031A  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  6041  00031C  EF92  F001         	goto	u1691
  6042  000320  EF95  F001         	goto	u1690
  6043  000324                     u1691:
  6044  000324  0E01               	movlw	1
  6045  000326  EF96  F001         	goto	u1700
  6046  00032A                     u1690:
  6047  00032A  0E00               	movlw	0
  6048  00032C                     u1700:
  6049  00032C  6E34               	movwf	dtoa@s^0,c
  6050  00032E  6A35               	clrf	(dtoa@s+1)^0,c
  6051                           
  6052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  6053  000330  5034               	movf	dtoa@s^0,w,c
  6054  000332  1035               	iorwf	(dtoa@s+1)^0,w,c
  6055  000334  B4D8               	btfsc	status,2,c
  6056  000336  EF9F  F001         	goto	u1711
  6057  00033A  EFA1  F001         	goto	u1710
  6058  00033E                     u1711:
  6059  00033E  EFB1  F001         	goto	l2587
  6060  000342                     u1710:
  6061  000342                     
  6062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  6063  000342  1E3D               	comf	(dtoa@n+7)^0,f,c
  6064  000344  1E3C               	comf	(dtoa@n+6)^0,f,c
  6065  000346  1E3B               	comf	(dtoa@n+5)^0,f,c
  6066  000348  1E3A               	comf	(dtoa@n+4)^0,f,c
  6067  00034A  1E39               	comf	(dtoa@n+3)^0,f,c
  6068  00034C  1E38               	comf	(dtoa@n+2)^0,f,c
  6069  00034E  1E37               	comf	(dtoa@n+1)^0,f,c
  6070  000350  6C36               	negf	dtoa@n^0,c
  6071  000352  0E00               	movlw	0
  6072  000354  2237               	addwfc	(dtoa@n+1)^0,f,c
  6073  000356  2238               	addwfc	(dtoa@n+2)^0,f,c
  6074  000358  2239               	addwfc	(dtoa@n+3)^0,f,c
  6075  00035A  223A               	addwfc	(dtoa@n+4)^0,f,c
  6076  00035C  223B               	addwfc	(dtoa@n+5)^0,f,c
  6077  00035E  223C               	addwfc	(dtoa@n+6)^0,f,c
  6078  000360  223D               	addwfc	(dtoa@n+7)^0,f,c
  6079  000362                     l2587:
  6080                           
  6081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  6082  000362  0100               	movlb	0	; () banked
  6083  000364  BF7D               	btfsc	(_prec+1)& (0+255),7,b
  6084  000366  EFB7  F001         	goto	u1721
  6085  00036A  EFB9  F001         	goto	u1720
  6086  00036E                     u1721:
  6087  00036E  EFBA  F001         	goto	l2591
  6088  000372                     u1720:
  6089  000372                     
  6090                           ; BSR set to: 0
  6091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  6092  000372  937E               	bcf	_flags& (0+255),1,b
  6093  000374                     l2591:
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  6097  000374  BF7D               	btfsc	(_prec+1)& (0+255),7,b
  6098  000376  EFC7  F001         	goto	u1730
  6099  00037A  517D               	movf	(_prec+1)& (0+255),w,b
  6100  00037C  E106               	bnz	u1731
  6101  00037E  057C               	decf	_prec& (0+255),w,b
  6102  000380  B0D8               	btfsc	status,0,c
  6103  000382  EFC5  F001         	goto	u1731
  6104  000386  EFC7  F001         	goto	u1730
  6105  00038A                     u1731:
  6106  00038A  EFCD  F001         	goto	l430
  6107  00038E                     u1730:
  6108  00038E                     
  6109                           ; BSR set to: 0
  6110  00038E  0E00               	movlw	0
  6111  000390  6E31               	movwf	(dtoa@p+1)^0,c
  6112  000392  0E01               	movlw	1
  6113  000394  6E30               	movwf	dtoa@p^0,c
  6114  000396  EFD1  F001         	goto	l432
  6115  00039A                     l430:
  6116                           
  6117                           ; BSR set to: 0
  6118  00039A  C07C  F030         	movff	_prec,dtoa@p
  6119  00039E  C07D  F031         	movff	_prec+1,dtoa@p+1
  6120  0003A2                     l432:
  6121                           
  6122                           ; BSR set to: 0
  6123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  6124  0003A2  C07A  F032         	movff	_width,dtoa@w
  6125  0003A6  C07B  F033         	movff	_width+1,dtoa@w+1
  6126  0003AA                     
  6127                           ; BSR set to: 0
  6128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  6129  0003AA  5034               	movf	dtoa@s^0,w,c
  6130  0003AC  1035               	iorwf	(dtoa@s+1)^0,w,c
  6131  0003AE  A4D8               	btfss	status,2,c
  6132  0003B0  EFDC  F001         	goto	u1741
  6133  0003B4  EFDE  F001         	goto	u1740
  6134  0003B8                     u1741:
  6135  0003B8  EFE5  F001         	goto	l2599
  6136  0003BC                     u1740:
  6137  0003BC                     
  6138                           ; BSR set to: 0
  6139  0003BC  A57E               	btfss	_flags& (0+255),2,b
  6140  0003BE  EFE3  F001         	goto	u1751
  6141  0003C2  EFE5  F001         	goto	u1750
  6142  0003C6                     u1751:
  6143  0003C6  EFE8  F001         	goto	l2601
  6144  0003CA                     u1750:
  6145  0003CA                     l2599:
  6146                           
  6147                           ; BSR set to: 0
  6148                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  6149  0003CA  0632               	decf	dtoa@w^0,f,c
  6150  0003CC  A0D8               	btfss	status,0,c
  6151  0003CE  0633               	decf	(dtoa@w+1)^0,f,c
  6152  0003D0                     l2601:
  6153                           
  6154                           ; BSR set to: 0
  6155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  6156  0003D0  0E00               	movlw	0
  6157  0003D2  6E3F               	movwf	(dtoa@i+1)^0,c
  6158  0003D4  0E1F               	movlw	31
  6159  0003D6  6E3E               	movwf	dtoa@i^0,c
  6160  0003D8                     
  6161                           ; BSR set to: 0
  6162                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  6163  0003D8  0E00               	movlw	0
  6164  0003DA  6FAD               	movwf	(_dbuf+31)& (0+255),b
  6165                           
  6166                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6167  0003DC  EF6C  F002         	goto	l2615
  6168  0003E0                     l2605:
  6169                           
  6170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  6171  0003E0  063E               	decf	dtoa@i^0,f,c
  6172  0003E2  A0D8               	btfss	status,0,c
  6173  0003E4  063F               	decf	(dtoa@i+1)^0,f,c
  6174  0003E6                     
  6175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  6176  0003E6  0E8E               	movlw	low _dbuf
  6177  0003E8  243E               	addwf	dtoa@i^0,w,c
  6178  0003EA  6ED9               	movwf	fsr2l,c
  6179  0003EC  0E00               	movlw	high _dbuf
  6180  0003EE  203F               	addwfc	(dtoa@i+1)^0,w,c
  6181  0003F0  6EDA               	movwf	fsr2h,c
  6182  0003F2  C036  F001         	movff	dtoa@n,___aomod@dividend
  6183  0003F6  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6184  0003FA  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6185  0003FE  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6186  000402  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6187  000406  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6188  00040A  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6189  00040E  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6190  000412  0E0A               	movlw	10
  6191  000414  6E09               	movwf	___aomod@divisor^0,c
  6192  000416  0E00               	movlw	0
  6193  000418  6E0A               	movwf	(___aomod@divisor+1)^0,c
  6194  00041A  0E00               	movlw	0
  6195  00041C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  6196  00041E  0E00               	movlw	0
  6197  000420  6E0C               	movwf	(___aomod@divisor+3)^0,c
  6198  000422  0E00               	movlw	0
  6199  000424  6E0D               	movwf	(___aomod@divisor+4)^0,c
  6200  000426  0E00               	movlw	0
  6201  000428  6E0E               	movwf	(___aomod@divisor+5)^0,c
  6202  00042A  0E00               	movlw	0
  6203  00042C  6E0F               	movwf	(___aomod@divisor+6)^0,c
  6204  00042E  0E00               	movlw	0
  6205  000430  6E10               	movwf	(___aomod@divisor+7)^0,c
  6206  000432  EC70  F005         	call	___aomod	;wreg free
  6207  000436  C001  F026         	movff	?___aomod,??_dtoa
  6208  00043A  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6209  00043E  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6210  000442  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6211  000446  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6212  00044A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6213  00044E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6214  000452  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6215  000456  C026  F013         	movff	??_dtoa,abs@a
  6216  00045A  C028  F014         	movff	??_dtoa+2,abs@a+1
  6217  00045E  EC27  F010         	call	_abs	;wreg free
  6218  000462  5013               	movf	?_abs^0,w,c
  6219  000464  0F30               	addlw	48
  6220  000466  6EDF               	movwf	indf2,c
  6221  000468                     
  6222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  6223  000468  0630               	decf	dtoa@p^0,f,c
  6224  00046A  A0D8               	btfss	status,0,c
  6225  00046C  0631               	decf	(dtoa@p+1)^0,f,c
  6226  00046E                     
  6227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  6228  00046E  0632               	decf	dtoa@w^0,f,c
  6229  000470  A0D8               	btfss	status,0,c
  6230  000472  0633               	decf	(dtoa@w+1)^0,f,c
  6231  000474                     
  6232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  6233  000474  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6234  000478  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6235  00047C  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6236  000480  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6237  000484  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6238  000488  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6239  00048C  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6240  000490  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6241  000494  0E0A               	movlw	10
  6242  000496  6E09               	movwf	___aodiv@divisor^0,c
  6243  000498  0E00               	movlw	0
  6244  00049A  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  6245  00049C  0E00               	movlw	0
  6246  00049E  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  6247  0004A0  0E00               	movlw	0
  6248  0004A2  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  6249  0004A4  0E00               	movlw	0
  6250  0004A6  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  6251  0004A8  0E00               	movlw	0
  6252  0004AA  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  6253  0004AC  0E00               	movlw	0
  6254  0004AE  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  6255  0004B0  0E00               	movlw	0
  6256  0004B2  6E10               	movwf	(___aodiv@divisor+7)^0,c
  6257  0004B4  ECAC  F004         	call	___aodiv	;wreg free
  6258  0004B8  C001  F036         	movff	?___aodiv,dtoa@n
  6259  0004BC  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6260  0004C0  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6261  0004C4  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6262  0004C8  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6263  0004CC  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6264  0004D0  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6265  0004D4  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6266  0004D8                     l2615:
  6267                           
  6268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6269  0004D8  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  6270  0004DA  EF77  F002         	goto	u1761
  6271  0004DE  503F               	movf	(dtoa@i+1)^0,w,c
  6272  0004E0  E108               	bnz	u1760
  6273  0004E2  043E               	decf	dtoa@i^0,w,c
  6274  0004E4  A0D8               	btfss	status,0,c
  6275  0004E6  EF77  F002         	goto	u1761
  6276  0004EA  EF79  F002         	goto	u1760
  6277  0004EE                     u1761:
  6278  0004EE  EFAA  F002         	goto	l2625
  6279  0004F2                     u1760:
  6280  0004F2  5036               	movf	dtoa@n^0,w,c
  6281  0004F4  1037               	iorwf	(dtoa@n+1)^0,w,c
  6282  0004F6  1038               	iorwf	(dtoa@n+2)^0,w,c
  6283  0004F8  1039               	iorwf	(dtoa@n+3)^0,w,c
  6284  0004FA  103A               	iorwf	(dtoa@n+4)^0,w,c
  6285  0004FC  103B               	iorwf	(dtoa@n+5)^0,w,c
  6286  0004FE  103C               	iorwf	(dtoa@n+6)^0,w,c
  6287  000500  103D               	iorwf	(dtoa@n+7)^0,w,c
  6288  000502  A4D8               	btfss	status,2,c
  6289  000504  EF86  F002         	goto	u1771
  6290  000508  EF88  F002         	goto	u1770
  6291  00050C                     u1771:
  6292  00050C  EFF0  F001         	goto	l2605
  6293  000510                     u1770:
  6294  000510  BE31               	btfsc	(dtoa@p+1)^0,7,c
  6295  000512  EF95  F002         	goto	u1780
  6296  000516  5031               	movf	(dtoa@p+1)^0,w,c
  6297  000518  E106               	bnz	u1781
  6298  00051A  0430               	decf	dtoa@p^0,w,c
  6299  00051C  B0D8               	btfsc	status,0,c
  6300  00051E  EF93  F002         	goto	u1781
  6301  000522  EF95  F002         	goto	u1780
  6302  000526                     u1781:
  6303  000526  EFF0  F001         	goto	l2605
  6304  00052A                     u1780:
  6305  00052A  BE33               	btfsc	(dtoa@w+1)^0,7,c
  6306  00052C  EFA0  F002         	goto	u1791
  6307  000530  5033               	movf	(dtoa@w+1)^0,w,c
  6308  000532  E108               	bnz	u1790
  6309  000534  0432               	decf	dtoa@w^0,w,c
  6310  000536  A0D8               	btfss	status,0,c
  6311  000538  EFA0  F002         	goto	u1791
  6312  00053C  EFA2  F002         	goto	u1790
  6313  000540                     u1791:
  6314  000540  EFAA  F002         	goto	l2625
  6315  000544                     u1790:
  6316  000544  0100               	movlb	0	; () banked
  6317  000546  B37E               	btfsc	_flags& (0+255),1,b
  6318  000548  EFA8  F002         	goto	u1801
  6319  00054C  EFAA  F002         	goto	u1800
  6320  000550                     u1801:
  6321  000550  EFF0  F001         	goto	l2605
  6322  000554                     u1800:
  6323  000554                     l2625:
  6324                           
  6325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6326  000554  5034               	movf	dtoa@s^0,w,c
  6327  000556  1035               	iorwf	(dtoa@s+1)^0,w,c
  6328  000558  A4D8               	btfss	status,2,c
  6329  00055A  EFB1  F002         	goto	u1811
  6330  00055E  EFB3  F002         	goto	u1810
  6331  000562                     u1811:
  6332  000562  EFBB  F002         	goto	l2629
  6333  000566                     u1810:
  6334  000566  0100               	movlb	0	; () banked
  6335  000568  A57E               	btfss	_flags& (0+255),2,b
  6336  00056A  EFB9  F002         	goto	u1821
  6337  00056E  EFBB  F002         	goto	u1820
  6338  000572                     u1821:
  6339  000572  EFD9  F002         	goto	l2639
  6340  000576                     u1820:
  6341  000576                     l2629:
  6342                           
  6343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6344  000576  063E               	decf	dtoa@i^0,f,c
  6345  000578  A0D8               	btfss	status,0,c
  6346  00057A  063F               	decf	(dtoa@i+1)^0,f,c
  6347  00057C                     
  6348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6349  00057C  5034               	movf	dtoa@s^0,w,c
  6350  00057E  1035               	iorwf	(dtoa@s+1)^0,w,c
  6351  000580  A4D8               	btfss	status,2,c
  6352  000582  EFC5  F002         	goto	u1831
  6353  000586  EFC7  F002         	goto	u1830
  6354  00058A                     u1831:
  6355  00058A  EFCD  F002         	goto	l2635
  6356  00058E                     u1830:
  6357  00058E  0E00               	movlw	0
  6358  000590  6E2F               	movwf	(_dtoa$1005+1)^0,c
  6359  000592  0E2B               	movlw	43
  6360  000594  6E2E               	movwf	_dtoa$1005^0,c
  6361  000596  EFD1  F002         	goto	l2637
  6362  00059A                     l2635:
  6363  00059A  0E00               	movlw	0
  6364  00059C  6E2F               	movwf	(_dtoa$1005+1)^0,c
  6365  00059E  0E2D               	movlw	45
  6366  0005A0  6E2E               	movwf	_dtoa$1005^0,c
  6367  0005A2                     l2637:
  6368  0005A2  0E8E               	movlw	low _dbuf
  6369  0005A4  243E               	addwf	dtoa@i^0,w,c
  6370  0005A6  6ED9               	movwf	fsr2l,c
  6371  0005A8  0E00               	movlw	high _dbuf
  6372  0005AA  203F               	addwfc	(dtoa@i+1)^0,w,c
  6373  0005AC  6EDA               	movwf	fsr2h,c
  6374  0005AE  C02E  FFDF         	movff	_dtoa$1005,indf2
  6375  0005B2                     l2639:
  6376                           
  6377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6378  0005B2  C01C  F011         	movff	dtoa@fp,pad@fp
  6379  0005B6  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6380  0005BA  0E8E               	movlw	low _dbuf
  6381  0005BC  243E               	addwf	dtoa@i^0,w,c
  6382  0005BE  6E13               	movwf	pad@buf^0,c
  6383  0005C0  0E00               	movlw	high _dbuf
  6384  0005C2  203F               	addwfc	(dtoa@i+1)^0,w,c
  6385  0005C4  6E14               	movwf	(pad@buf+1)^0,c
  6386  0005C6  C032  F015         	movff	dtoa@w,pad@p
  6387  0005CA  C033  F016         	movff	dtoa@w+1,pad@p+1
  6388  0005CE  EC15  F00B         	call	_pad	;wreg free
  6389  0005D2  C011  F01C         	movff	?_pad,?_dtoa
  6390  0005D6  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6391  0005DA  0012               	return		;funcret
  6392  0005DC                     __end_of_dtoa:
  6393                           	opt callstack 0
  6394                           
  6395 ;; *************** function _pad *****************
  6396 ;; Defined at:
  6397 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6398 ;; Parameters:    Size  Location     Type
  6399 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6400 ;;		 -> sprintf@f(6), 
  6401 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6402 ;;		 -> dbuf(32), 
  6403 ;;  p               2   20[COMRAM] int 
  6404 ;; Auto vars:     Size  Location     Type
  6405 ;;  w               2   25[COMRAM] int 
  6406 ;;  i               2   23[COMRAM] int 
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  2   16[COMRAM] int 
  6409 ;; Registers used:
  6410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/0
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6416 ;;      Params:         6       0       0       0       0       0       0       0       0
  6417 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6418 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6419 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6420 ;;Total ram usage:       11 bytes
  6421 ;; Hardware stack levels used:    1
  6422 ;; Hardware stack levels required when called:    4
  6423 ;; This function calls:
  6424 ;;		_fputc
  6425 ;;		_fputs
  6426 ;;		_strlen
  6427 ;; This function is called by:
  6428 ;;		_dtoa
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           	psect	text31
  6433  00162A                     __ptext31:
  6434                           	opt callstack 0
  6435  00162A                     _pad:
  6436                           	opt callstack 20
  6437  00162A                     
  6438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6439  00162A  0100               	movlb	0	; () banked
  6440  00162C  A17E               	btfss	_flags& (0+255),0,b
  6441  00162E  EF1B  F00B         	goto	u1481
  6442  001632  EF1D  F00B         	goto	u1480
  6443  001636                     u1481:
  6444  001636  EF27  F00B         	goto	l2471
  6445  00163A                     u1480:
  6446  00163A                     
  6447                           ; BSR set to: 0
  6448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6449  00163A  C013  F00A         	movff	pad@buf,fputs@s
  6450  00163E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6451  001642  C011  F00C         	movff	pad@fp,fputs@fp
  6452  001646  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6453  00164A  ECE5  F00F         	call	_fputs	;wreg free
  6454  00164E                     l2471:
  6455                           
  6456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6457  00164E  BE16               	btfsc	(pad@p+1)^0,7,c
  6458  001650  EF2C  F00B         	goto	u1491
  6459  001654  EF2E  F00B         	goto	u1490
  6460  001658                     u1491:
  6461  001658  EF34  F00B         	goto	l2475
  6462  00165C                     u1490:
  6463  00165C  C015  F01A         	movff	pad@p,pad@w
  6464  001660  C016  F01B         	movff	pad@p+1,pad@w+1
  6465  001664  EF38  F00B         	goto	l419
  6466  001668                     l2475:
  6467  001668  0E00               	movlw	0
  6468  00166A  6E1B               	movwf	(pad@w+1)^0,c
  6469  00166C  0E00               	movlw	0
  6470  00166E  6E1A               	movwf	pad@w^0,c
  6471  001670                     l419:
  6472                           
  6473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6474  001670  0E00               	movlw	0
  6475  001672  6E19               	movwf	(pad@i+1)^0,c
  6476  001674  0E00               	movlw	0
  6477  001676  6E18               	movwf	pad@i^0,c
  6478                           
  6479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6480  001678  EF4A  F00B         	goto	l2481
  6481  00167C                     l2477:
  6482                           
  6483                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6484  00167C  0E00               	movlw	0
  6485  00167E  6E02               	movwf	(fputc@c+1)^0,c
  6486  001680  0E20               	movlw	32
  6487  001682  6E01               	movwf	fputc@c^0,c
  6488  001684  C011  F003         	movff	pad@fp,fputc@fp
  6489  001688  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6490  00168C  ECE9  F009         	call	_fputc	;wreg free
  6491  001690                     
  6492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6493  001690  4A18               	infsnz	pad@i^0,f,c
  6494  001692  2A19               	incf	(pad@i+1)^0,f,c
  6495  001694                     l2481:
  6496                           
  6497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6498  001694  501A               	movf	pad@w^0,w,c
  6499  001696  5C18               	subwf	pad@i^0,w,c
  6500  001698  5019               	movf	(pad@i+1)^0,w,c
  6501  00169A  0A80               	xorlw	128
  6502  00169C  6E17               	movwf	??_pad^0,c
  6503  00169E  501B               	movf	(pad@w+1)^0,w,c
  6504  0016A0  0A80               	xorlw	128
  6505  0016A2  5817               	subwfb	??_pad^0,w,c
  6506  0016A4  A0D8               	btfss	status,0,c
  6507  0016A6  EF57  F00B         	goto	u1501
  6508  0016AA  EF59  F00B         	goto	u1500
  6509  0016AE                     u1501:
  6510  0016AE  EF3E  F00B         	goto	l2477
  6511  0016B2                     u1500:
  6512  0016B2                     
  6513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6514  0016B2  0100               	movlb	0	; () banked
  6515  0016B4  B17E               	btfsc	_flags& (0+255),0,b
  6516  0016B6  EF5F  F00B         	goto	u1511
  6517  0016BA  EF61  F00B         	goto	u1510
  6518  0016BE                     u1511:
  6519  0016BE  EF6B  F00B         	goto	l2485
  6520  0016C2                     u1510:
  6521  0016C2                     
  6522                           ; BSR set to: 0
  6523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6524  0016C2  C013  F00A         	movff	pad@buf,fputs@s
  6525  0016C6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6526  0016CA  C011  F00C         	movff	pad@fp,fputs@fp
  6527  0016CE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6528  0016D2  ECE5  F00F         	call	_fputs	;wreg free
  6529  0016D6                     l2485:
  6530                           
  6531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6532  0016D6  C013  F001         	movff	pad@buf,strlen@s
  6533  0016DA  C014  F002         	movff	pad@buf+1,strlen@s+1
  6534  0016DE  EC65  F010         	call	_strlen	;wreg free
  6535  0016E2  501A               	movf	pad@w^0,w,c
  6536  0016E4  2401               	addwf	?_strlen^0,w,c
  6537  0016E6  6E11               	movwf	?_pad^0,c
  6538  0016E8  501B               	movf	(pad@w+1)^0,w,c
  6539  0016EA  2002               	addwfc	(?_strlen+1)^0,w,c
  6540  0016EC  6E12               	movwf	(?_pad+1)^0,c
  6541  0016EE  0012               	return		;funcret
  6542  0016F0                     __end_of_pad:
  6543                           	opt callstack 0
  6544                           
  6545 ;; *************** function _strlen *****************
  6546 ;; Defined at:
  6547 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6550 ;;		 -> dbuf(32), 
  6551 ;; Auto vars:     Size  Location     Type
  6552 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6553 ;;		 -> dbuf(32), 
  6554 ;; Return value:  Size  Location     Type
  6555 ;;                  2    0[COMRAM] unsigned int 
  6556 ;; Registers used:
  6557 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6558 ;; Tracked objects:
  6559 ;;		On entry : 0/0
  6560 ;;		On exit  : 0/0
  6561 ;;		Unchanged: 0/0
  6562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6563 ;;      Params:         2       0       0       0       0       0       0       0       0
  6564 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6565 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6566 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6567 ;;Total ram usage:        4 bytes
  6568 ;; Hardware stack levels used:    1
  6569 ;; Hardware stack levels required when called:    1
  6570 ;; This function calls:
  6571 ;;		Nothing
  6572 ;; This function is called by:
  6573 ;;		_pad
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           	psect	text32
  6578  0020CA                     __ptext32:
  6579                           	opt callstack 0
  6580  0020CA                     _strlen:
  6581                           	opt callstack 22
  6582  0020CA  C001  F003         	movff	strlen@s,strlen@a
  6583  0020CE  C002  F004         	movff	strlen@s+1,strlen@a+1
  6584  0020D2  EF6D  F010         	goto	l2461
  6585  0020D6                     l2459:
  6586  0020D6  4A01               	infsnz	strlen@s^0,f,c
  6587  0020D8  2A02               	incf	(strlen@s+1)^0,f,c
  6588  0020DA                     l2461:
  6589  0020DA  C001  FFD9         	movff	strlen@s,fsr2l
  6590  0020DE  C002  FFDA         	movff	strlen@s+1,fsr2h
  6591  0020E2  50DF               	movf	indf2,w,c
  6592  0020E4  A4D8               	btfss	status,2,c
  6593  0020E6  EF77  F010         	goto	u1471
  6594  0020EA  EF79  F010         	goto	u1470
  6595  0020EE                     u1471:
  6596  0020EE  EF6B  F010         	goto	l2459
  6597  0020F2                     u1470:
  6598  0020F2  5003               	movf	strlen@a^0,w,c
  6599  0020F4  5C01               	subwf	strlen@s^0,w,c
  6600  0020F6  6E01               	movwf	?_strlen^0,c
  6601  0020F8  5004               	movf	(strlen@a+1)^0,w,c
  6602  0020FA  5802               	subwfb	(strlen@s+1)^0,w,c
  6603  0020FC  6E02               	movwf	(?_strlen+1)^0,c
  6604  0020FE  0012               	return		;funcret
  6605  002100                     __end_of_strlen:
  6606                           	opt callstack 0
  6607                           
  6608 ;; *************** function _fputs *****************
  6609 ;; Defined at:
  6610 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  6611 ;; Parameters:    Size  Location     Type
  6612 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6613 ;;		 -> dbuf(32), 
  6614 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6615 ;;		 -> sprintf@f(6), 
  6616 ;; Auto vars:     Size  Location     Type
  6617 ;;  i               2   14[COMRAM] int 
  6618 ;;  c               1   13[COMRAM] unsigned char 
  6619 ;; Return value:  Size  Location     Type
  6620 ;;                  2    9[COMRAM] int 
  6621 ;; Registers used:
  6622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6623 ;; Tracked objects:
  6624 ;;		On entry : 0/0
  6625 ;;		On exit  : 0/0
  6626 ;;		Unchanged: 0/0
  6627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6628 ;;      Params:         4       0       0       0       0       0       0       0       0
  6629 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6630 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6631 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6632 ;;Total ram usage:        7 bytes
  6633 ;; Hardware stack levels used:    1
  6634 ;; Hardware stack levels required when called:    3
  6635 ;; This function calls:
  6636 ;;		_fputc
  6637 ;; This function is called by:
  6638 ;;		_pad
  6639 ;; This function uses a non-reentrant model
  6640 ;;
  6641                           
  6642                           	psect	text33
  6643  001FCA                     __ptext33:
  6644                           	opt callstack 0
  6645  001FCA                     _fputs:
  6646                           	opt callstack 20
  6647  001FCA  0E00               	movlw	0
  6648  001FCC  6E10               	movwf	(fputs@i+1)^0,c
  6649  001FCE  0E00               	movlw	0
  6650  001FD0  6E0F               	movwf	fputs@i^0,c
  6651  001FD2  EFF6  F00F         	goto	l2455
  6652  001FD6                     l2451:
  6653  001FD6  C00E  F001         	movff	fputs@c,fputc@c
  6654  001FDA  6A02               	clrf	(fputc@c+1)^0,c
  6655  001FDC  C00C  F003         	movff	fputs@fp,fputc@fp
  6656  001FE0  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6657  001FE4  ECE9  F009         	call	_fputc	;wreg free
  6658  001FE8  4A0F               	infsnz	fputs@i^0,f,c
  6659  001FEA  2A10               	incf	(fputs@i+1)^0,f,c
  6660  001FEC                     l2455:
  6661  001FEC  500F               	movf	fputs@i^0,w,c
  6662  001FEE  240A               	addwf	fputs@s^0,w,c
  6663  001FF0  6ED9               	movwf	fsr2l,c
  6664  001FF2  5010               	movf	(fputs@i+1)^0,w,c
  6665  001FF4  200B               	addwfc	(fputs@s+1)^0,w,c
  6666  001FF6  6EDA               	movwf	fsr2h,c
  6667  001FF8  50DF               	movf	indf2,w,c
  6668  001FFA  6E0E               	movwf	fputs@c^0,c
  6669  001FFC  500E               	movf	fputs@c^0,w,c
  6670  001FFE  A4D8               	btfss	status,2,c
  6671  002000  EF04  F010         	goto	u1461
  6672  002004  EF06  F010         	goto	u1460
  6673  002008                     u1461:
  6674  002008  EFEB  F00F         	goto	l2451
  6675  00200C                     u1460:
  6676  00200C  0012               	return		;funcret
  6677  00200E                     __end_of_fputs:
  6678                           	opt callstack 0
  6679                           
  6680 ;; *************** function _fputc *****************
  6681 ;; Defined at:
  6682 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6683 ;; Parameters:    Size  Location     Type
  6684 ;;  c               2    0[COMRAM] int 
  6685 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6686 ;;		 -> sprintf@f(6), 
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;		None
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  2    0[COMRAM] int 
  6691 ;; Registers used:
  6692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6698 ;;      Params:         4       0       0       0       0       0       0       0       0
  6699 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6700 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6701 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6702 ;;Total ram usage:        9 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; Hardware stack levels required when called:    2
  6705 ;; This function calls:
  6706 ;;		_putch
  6707 ;; This function is called by:
  6708 ;;		_pad
  6709 ;;		_vfpfcnvrt
  6710 ;;		_fputs
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           	psect	text34
  6715  0013D2                     __ptext34:
  6716                           	opt callstack 0
  6717  0013D2                     _fputc:
  6718                           	opt callstack 23
  6719  0013D2  5003               	movf	fputc@fp^0,w,c
  6720  0013D4  1004               	iorwf	(fputc@fp+1)^0,w,c
  6721  0013D6  B4D8               	btfsc	status,2,c
  6722  0013D8  EFF0  F009         	goto	u1421
  6723  0013DC  EFF2  F009         	goto	u1420
  6724  0013E0                     u1421:
  6725  0013E0  EFFB  F009         	goto	l2439
  6726  0013E4                     u1420:
  6727  0013E4  5003               	movf	fputc@fp^0,w,c
  6728  0013E6  1004               	iorwf	(fputc@fp+1)^0,w,c
  6729  0013E8  A4D8               	btfss	status,2,c
  6730  0013EA  EFF9  F009         	goto	u1431
  6731  0013EE  EFFB  F009         	goto	u1430
  6732  0013F2                     u1431:
  6733  0013F2  EF00  F00A         	goto	l2441
  6734  0013F6                     u1430:
  6735  0013F6                     l2439:
  6736  0013F6  5001               	movf	fputc@c^0,w,c
  6737  0013F8  EC70  F011         	call	_putch
  6738  0013FC  EF4D  F00A         	goto	l1157
  6739  001400                     l2441:
  6740  001400  EE20 F004          	lfsr	2,4
  6741  001404  5003               	movf	fputc@fp^0,w,c
  6742  001406  26D9               	addwf	fsr2l,f,c
  6743  001408  5004               	movf	(fputc@fp+1)^0,w,c
  6744  00140A  22DA               	addwfc	fsr2h,f,c
  6745  00140C  50DE               	movf	postinc2,w,c
  6746  00140E  10DE               	iorwf	postinc2,w,c
  6747  001410  B4D8               	btfsc	status,2,c
  6748  001412  EF0D  F00A         	goto	u1441
  6749  001416  EF0F  F00A         	goto	u1440
  6750  00141A                     u1441:
  6751  00141A  EF2A  F00A         	goto	l2445
  6752  00141E                     u1440:
  6753  00141E  EE20 F004          	lfsr	2,4
  6754  001422  5003               	movf	fputc@fp^0,w,c
  6755  001424  26D9               	addwf	fsr2l,f,c
  6756  001426  5004               	movf	(fputc@fp+1)^0,w,c
  6757  001428  22DA               	addwfc	fsr2h,f,c
  6758  00142A  EE10 F002          	lfsr	1,2
  6759  00142E  5003               	movf	fputc@fp^0,w,c
  6760  001430  26E1               	addwf	fsr1l,f,c
  6761  001432  5004               	movf	(fputc@fp+1)^0,w,c
  6762  001434  22E2               	addwfc	fsr1h,f,c
  6763  001436  50DE               	movf	postinc2,w,c
  6764  001438  5CE6               	subwf	postinc1,w,c
  6765  00143A  50E6               	movf	postinc1,w,c
  6766  00143C  0A80               	xorlw	128
  6767  00143E  6E09               	movwf	(??_fputc+4)^0,c
  6768  001440  50DE               	movf	postinc2,w,c
  6769  001442  0A80               	xorlw	128
  6770  001444  5809               	subwfb	(??_fputc+4)^0,w,c
  6771  001446  B0D8               	btfsc	status,0,c
  6772  001448  EF28  F00A         	goto	u1451
  6773  00144C  EF2A  F00A         	goto	u1450
  6774  001450                     u1451:
  6775  001450  EF4D  F00A         	goto	l1157
  6776  001454                     u1450:
  6777  001454                     l2445:
  6778  001454  EE20 F002          	lfsr	2,2
  6779  001458  5003               	movf	fputc@fp^0,w,c
  6780  00145A  26D9               	addwf	fsr2l,f,c
  6781  00145C  5004               	movf	(fputc@fp+1)^0,w,c
  6782  00145E  22DA               	addwfc	fsr2h,f,c
  6783  001460  CFDE F005          	movff	postinc2,??_fputc
  6784  001464  CFDD F006          	movff	postdec2,??_fputc+1
  6785  001468  C003  FFD9         	movff	fputc@fp,fsr2l
  6786  00146C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6787  001470  CFDE F007          	movff	postinc2,??_fputc+2
  6788  001474  CFDD F008          	movff	postdec2,??_fputc+3
  6789  001478  5005               	movf	??_fputc^0,w,c
  6790  00147A  2407               	addwf	(??_fputc+2)^0,w,c
  6791  00147C  6ED9               	movwf	fsr2l,c
  6792  00147E  5006               	movf	(??_fputc+1)^0,w,c
  6793  001480  2008               	addwfc	(??_fputc+3)^0,w,c
  6794  001482  6EDA               	movwf	fsr2h,c
  6795  001484  C001  FFDF         	movff	fputc@c,indf2
  6796  001488  EE20 F002          	lfsr	2,2
  6797  00148C  5003               	movf	fputc@fp^0,w,c
  6798  00148E  26D9               	addwf	fsr2l,f,c
  6799  001490  5004               	movf	(fputc@fp+1)^0,w,c
  6800  001492  22DA               	addwfc	fsr2h,f,c
  6801  001494  2ADE               	incf	postinc2,f,c
  6802  001496  0E00               	movlw	0
  6803  001498  22DD               	addwfc	postdec2,f,c
  6804  00149A                     l1157:
  6805  00149A  0012               	return		;funcret
  6806  00149C                     __end_of_fputc:
  6807                           	opt callstack 0
  6808                           
  6809 ;; *************** function _putch *****************
  6810 ;; Defined at:
  6811 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  6812 ;; Parameters:    Size  Location     Type
  6813 ;;  c               1    wreg     unsigned char 
  6814 ;; Auto vars:     Size  Location     Type
  6815 ;;  c               1    0[COMRAM] unsigned char 
  6816 ;; Return value:  Size  Location     Type
  6817 ;;                  1    wreg      void 
  6818 ;; Registers used:
  6819 ;;		wreg
  6820 ;; Tracked objects:
  6821 ;;		On entry : 0/0
  6822 ;;		On exit  : 0/0
  6823 ;;		Unchanged: 0/0
  6824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6825 ;;      Params:         0       0       0       0       0       0       0       0       0
  6826 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6827 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6828 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6829 ;;Total ram usage:        0 bytes
  6830 ;; Hardware stack levels used:    1
  6831 ;; Hardware stack levels required when called:    1
  6832 ;; This function calls:
  6833 ;;		Nothing
  6834 ;; This function is called by:
  6835 ;;		_fputc
  6836 ;; This function uses a non-reentrant model
  6837 ;;
  6838                           
  6839                           	psect	text35
  6840  0022E0                     __ptext35:
  6841                           	opt callstack 0
  6842  0022E0                     _putch:
  6843                           	opt callstack 23
  6844  0022E0  0012               	return		;funcret
  6845  0022E2                     __end_of_putch:
  6846                           	opt callstack 0
  6847                           
  6848 ;; *************** function _abs *****************
  6849 ;; Defined at:
  6850 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  6851 ;; Parameters:    Size  Location     Type
  6852 ;;  a               2   18[COMRAM] int 
  6853 ;; Auto vars:     Size  Location     Type
  6854 ;;		None
  6855 ;; Return value:  Size  Location     Type
  6856 ;;                  2   18[COMRAM] int 
  6857 ;; Registers used:
  6858 ;;		wreg, status,2, status,0
  6859 ;; Tracked objects:
  6860 ;;		On entry : 0/0
  6861 ;;		On exit  : 0/0
  6862 ;;		Unchanged: 0/0
  6863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6864 ;;      Params:         2       0       0       0       0       0       0       0       0
  6865 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6866 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6867 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6868 ;;Total ram usage:        4 bytes
  6869 ;; Hardware stack levels used:    1
  6870 ;; Hardware stack levels required when called:    1
  6871 ;; This function calls:
  6872 ;;		Nothing
  6873 ;; This function is called by:
  6874 ;;		_dtoa
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878                           	psect	text36
  6879  00204E                     __ptext36:
  6880                           	opt callstack 0
  6881  00204E                     _abs:
  6882                           	opt callstack 23
  6883  00204E  BE14               	btfsc	(abs@a+1)^0,7,c
  6884  002050  EF34  F010         	goto	u1520
  6885  002054  5014               	movf	(abs@a+1)^0,w,c
  6886  002056  E106               	bnz	u1521
  6887  002058  0413               	decf	abs@a^0,w,c
  6888  00205A  B0D8               	btfsc	status,0,c
  6889  00205C  EF32  F010         	goto	u1521
  6890  002060  EF34  F010         	goto	u1520
  6891  002064                     u1521:
  6892  002064  EF42  F010         	goto	l1142
  6893  002068                     u1520:
  6894  002068  C013  F015         	movff	abs@a,??_abs
  6895  00206C  C014  F016         	movff	abs@a+1,??_abs+1
  6896  002070  1E15               	comf	??_abs^0,f,c
  6897  002072  1E16               	comf	(??_abs+1)^0,f,c
  6898  002074  4A15               	infsnz	??_abs^0,f,c
  6899  002076  2A16               	incf	(??_abs+1)^0,f,c
  6900  002078  C015  F013         	movff	??_abs,?_abs
  6901  00207C  C016  F014         	movff	??_abs+1,?_abs+1
  6902  002080  EF46  F010         	goto	l1145
  6903  002084                     l1142:
  6904  002084  C013  F013         	movff	abs@a,?_abs
  6905  002088  C014  F014         	movff	abs@a+1,?_abs+1
  6906  00208C                     l1145:
  6907  00208C  0012               	return		;funcret
  6908  00208E                     __end_of_abs:
  6909                           	opt callstack 0
  6910                           
  6911 ;; *************** function ___aomod *****************
  6912 ;; Defined at:
  6913 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  6914 ;; Parameters:    Size  Location     Type
  6915 ;;  dividend        8    0[COMRAM] long long 
  6916 ;;  divisor         8    8[COMRAM] long long 
  6917 ;; Auto vars:     Size  Location     Type
  6918 ;;  sign            1   17[COMRAM] unsigned char 
  6919 ;;  counter         1   16[COMRAM] unsigned char 
  6920 ;; Return value:  Size  Location     Type
  6921 ;;                  8    0[COMRAM] long long 
  6922 ;; Registers used:
  6923 ;;		wreg, status,2, status,0
  6924 ;; Tracked objects:
  6925 ;;		On entry : 0/0
  6926 ;;		On exit  : 0/0
  6927 ;;		Unchanged: 0/0
  6928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6929 ;;      Params:        16       0       0       0       0       0       0       0       0
  6930 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6931 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6932 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6933 ;;Total ram usage:       18 bytes
  6934 ;; Hardware stack levels used:    1
  6935 ;; Hardware stack levels required when called:    1
  6936 ;; This function calls:
  6937 ;;		Nothing
  6938 ;; This function is called by:
  6939 ;;		_dtoa
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           
  6943                           	psect	text37
  6944  000AE0                     __ptext37:
  6945                           	opt callstack 0
  6946  000AE0                     ___aomod:
  6947                           	opt callstack 23
  6948  000AE0  0E00               	movlw	0
  6949  000AE2  6E12               	movwf	___aomod@sign^0,c
  6950  000AE4  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6951  000AE6  EF79  F005         	goto	u1600
  6952  000AEA  EF77  F005         	goto	u1601
  6953  000AEE                     u1601:
  6954  000AEE  EF8B  F005         	goto	l2545
  6955  000AF2                     u1600:
  6956  000AF2  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6957  000AF4  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6958  000AF6  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6959  000AF8  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6960  000AFA  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6961  000AFC  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6962  000AFE  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6963  000B00  6C01               	negf	___aomod@dividend^0,c
  6964  000B02  0E00               	movlw	0
  6965  000B04  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6966  000B06  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6967  000B08  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6968  000B0A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6969  000B0C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6970  000B0E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6971  000B10  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6972  000B12  0E01               	movlw	1
  6973  000B14  6E12               	movwf	___aomod@sign^0,c
  6974  000B16                     l2545:
  6975  000B16  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6976  000B18  EF92  F005         	goto	u1610
  6977  000B1C  EF90  F005         	goto	u1611
  6978  000B20                     u1611:
  6979  000B20  EFA2  F005         	goto	l2549
  6980  000B24                     u1610:
  6981  000B24  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6982  000B26  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6983  000B28  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6984  000B2A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6985  000B2C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6986  000B2E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6987  000B30  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6988  000B32  6C09               	negf	___aomod@divisor^0,c
  6989  000B34  0E00               	movlw	0
  6990  000B36  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6991  000B38  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6992  000B3A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6993  000B3C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6994  000B3E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6995  000B40  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6996  000B42  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6997  000B44                     l2549:
  6998  000B44  5009               	movf	___aomod@divisor^0,w,c
  6999  000B46  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  7000  000B48  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  7001  000B4A  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  7002  000B4C  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  7003  000B4E  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  7004  000B50  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  7005  000B52  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  7006  000B54  B4D8               	btfsc	status,2,c
  7007  000B56  EFAF  F005         	goto	u1621
  7008  000B5A  EFB1  F005         	goto	u1620
  7009  000B5E                     u1621:
  7010  000B5E  EFF9  F005         	goto	l2565
  7011  000B62                     u1620:
  7012  000B62  0E01               	movlw	1
  7013  000B64  6E11               	movwf	___aomod@counter^0,c
  7014  000B66  EFBF  F005         	goto	l2555
  7015  000B6A                     l2553:
  7016  000B6A  90D8               	bcf	status,0,c
  7017  000B6C  3609               	rlcf	___aomod@divisor^0,f,c
  7018  000B6E  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  7019  000B70  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  7020  000B72  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  7021  000B74  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  7022  000B76  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  7023  000B78  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  7024  000B7A  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  7025  000B7C  2A11               	incf	___aomod@counter^0,f,c
  7026  000B7E                     l2555:
  7027  000B7E  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  7028  000B80  EFC4  F005         	goto	u1631
  7029  000B84  EFC6  F005         	goto	u1630
  7030  000B88                     u1631:
  7031  000B88  EFB5  F005         	goto	l2553
  7032  000B8C                     u1630:
  7033  000B8C                     l2557:
  7034  000B8C  5009               	movf	___aomod@divisor^0,w,c
  7035  000B8E  5C01               	subwf	___aomod@dividend^0,w,c
  7036  000B90  500A               	movf	(___aomod@divisor+1)^0,w,c
  7037  000B92  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  7038  000B94  500B               	movf	(___aomod@divisor+2)^0,w,c
  7039  000B96  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  7040  000B98  500C               	movf	(___aomod@divisor+3)^0,w,c
  7041  000B9A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  7042  000B9C  500D               	movf	(___aomod@divisor+4)^0,w,c
  7043  000B9E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  7044  000BA0  500E               	movf	(___aomod@divisor+5)^0,w,c
  7045  000BA2  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  7046  000BA4  500F               	movf	(___aomod@divisor+6)^0,w,c
  7047  000BA6  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  7048  000BA8  5010               	movf	(___aomod@divisor+7)^0,w,c
  7049  000BAA  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  7050  000BAC  A0D8               	btfss	status,0,c
  7051  000BAE  EFDB  F005         	goto	u1641
  7052  000BB2  EFDD  F005         	goto	u1640
  7053  000BB6                     u1641:
  7054  000BB6  EFED  F005         	goto	l2561
  7055  000BBA                     u1640:
  7056  000BBA  5009               	movf	___aomod@divisor^0,w,c
  7057  000BBC  5E01               	subwf	___aomod@dividend^0,f,c
  7058  000BBE  500A               	movf	(___aomod@divisor+1)^0,w,c
  7059  000BC0  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  7060  000BC2  500B               	movf	(___aomod@divisor+2)^0,w,c
  7061  000BC4  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  7062  000BC6  500C               	movf	(___aomod@divisor+3)^0,w,c
  7063  000BC8  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  7064  000BCA  500D               	movf	(___aomod@divisor+4)^0,w,c
  7065  000BCC  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  7066  000BCE  500E               	movf	(___aomod@divisor+5)^0,w,c
  7067  000BD0  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  7068  000BD2  500F               	movf	(___aomod@divisor+6)^0,w,c
  7069  000BD4  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  7070  000BD6  5010               	movf	(___aomod@divisor+7)^0,w,c
  7071  000BD8  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  7072  000BDA                     l2561:
  7073  000BDA  90D8               	bcf	status,0,c
  7074  000BDC  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  7075  000BDE  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  7076  000BE0  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  7077  000BE2  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  7078  000BE4  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  7079  000BE6  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  7080  000BE8  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  7081  000BEA  3209               	rrcf	___aomod@divisor^0,f,c
  7082  000BEC  2E11               	decfsz	___aomod@counter^0,f,c
  7083  000BEE  EFC6  F005         	goto	l2557
  7084  000BF2                     l2565:
  7085  000BF2  5012               	movf	___aomod@sign^0,w,c
  7086  000BF4  B4D8               	btfsc	status,2,c
  7087  000BF6  EFFF  F005         	goto	u1651
  7088  000BFA  EF01  F006         	goto	u1650
  7089  000BFE                     u1651:
  7090  000BFE  EF11  F006         	goto	l2569
  7091  000C02                     u1650:
  7092  000C02  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7093  000C04  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7094  000C06  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7095  000C08  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7096  000C0A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7097  000C0C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7098  000C0E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7099  000C10  6C01               	negf	___aomod@dividend^0,c
  7100  000C12  0E00               	movlw	0
  7101  000C14  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7102  000C16  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7103  000C18  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7104  000C1A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7105  000C1C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7106  000C1E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7107  000C20  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7108  000C22                     l2569:
  7109  000C22  C001  F001         	movff	___aomod@dividend,?___aomod
  7110  000C26  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  7111  000C2A  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  7112  000C2E  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  7113  000C32  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  7114  000C36  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  7115  000C3A  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  7116  000C3E  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  7117  000C42  0012               	return		;funcret
  7118  000C44                     __end_of___aomod:
  7119                           	opt callstack 0
  7120                           
  7121 ;; *************** function ___aodiv *****************
  7122 ;; Defined at:
  7123 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;  dividend        8    0[COMRAM] long long 
  7126 ;;  divisor         8    8[COMRAM] long long 
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;  quotient        8   18[COMRAM] long long 
  7129 ;;  sign            1   17[COMRAM] unsigned char 
  7130 ;;  counter         1   16[COMRAM] unsigned char 
  7131 ;; Return value:  Size  Location     Type
  7132 ;;                  8    0[COMRAM] long long 
  7133 ;; Registers used:
  7134 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7135 ;; Tracked objects:
  7136 ;;		On entry : 0/0
  7137 ;;		On exit  : 0/0
  7138 ;;		Unchanged: 0/0
  7139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7140 ;;      Params:        16       0       0       0       0       0       0       0       0
  7141 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7142 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7143 ;;      Totals:        26       0       0       0       0       0       0       0       0
  7144 ;;Total ram usage:       26 bytes
  7145 ;; Hardware stack levels used:    1
  7146 ;; Hardware stack levels required when called:    1
  7147 ;; This function calls:
  7148 ;;		Nothing
  7149 ;; This function is called by:
  7150 ;;		_dtoa
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           	psect	text38
  7155  000958                     __ptext38:
  7156                           	opt callstack 0
  7157  000958                     ___aodiv:
  7158                           	opt callstack 23
  7159  000958  0E00               	movlw	0
  7160  00095A  6E12               	movwf	___aodiv@sign^0,c
  7161  00095C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  7162  00095E  EFB5  F004         	goto	u1530
  7163  000962  EFB3  F004         	goto	u1531
  7164  000966                     u1531:
  7165  000966  EFC7  F004         	goto	l2501
  7166  00096A                     u1530:
  7167  00096A  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  7168  00096C  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  7169  00096E  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  7170  000970  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  7171  000972  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  7172  000974  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  7173  000976  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  7174  000978  6C09               	negf	___aodiv@divisor^0,c
  7175  00097A  0E00               	movlw	0
  7176  00097C  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  7177  00097E  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  7178  000980  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  7179  000982  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  7180  000984  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  7181  000986  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  7182  000988  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  7183  00098A  0E01               	movlw	1
  7184  00098C  6E12               	movwf	___aodiv@sign^0,c
  7185  00098E                     l2501:
  7186  00098E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  7187  000990  EFCE  F004         	goto	u1540
  7188  000994  EFCC  F004         	goto	u1541
  7189  000998                     u1541:
  7190  000998  EFE0  F004         	goto	l2507
  7191  00099C                     u1540:
  7192  00099C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  7193  00099E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  7194  0009A0  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  7195  0009A2  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  7196  0009A4  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  7197  0009A6  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  7198  0009A8  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  7199  0009AA  6C01               	negf	___aodiv@dividend^0,c
  7200  0009AC  0E00               	movlw	0
  7201  0009AE  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  7202  0009B0  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  7203  0009B2  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  7204  0009B4  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  7205  0009B6  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  7206  0009B8  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  7207  0009BA  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  7208  0009BC  0E01               	movlw	1
  7209  0009BE  1A12               	xorwf	___aodiv@sign^0,f,c
  7210  0009C0                     l2507:
  7211  0009C0  EE20  F013         	lfsr	2,___aodiv@quotient
  7212  0009C4  0E07               	movlw	7
  7213  0009C6                     u1551:
  7214  0009C6  6ADE               	clrf	postinc2,c
  7215  0009C8  06E8               	decf	wreg,f,c
  7216  0009CA  E2FD               	bc	u1551
  7217  0009CC  5009               	movf	___aodiv@divisor^0,w,c
  7218  0009CE  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  7219  0009D0  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  7220  0009D2  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  7221  0009D4  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  7222  0009D6  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  7223  0009D8  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  7224  0009DA  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  7225  0009DC  B4D8               	btfsc	status,2,c
  7226  0009DE  EFF3  F004         	goto	u1561
  7227  0009E2  EFF5  F004         	goto	u1560
  7228  0009E6                     u1561:
  7229  0009E6  EF47  F005         	goto	l2529
  7230  0009EA                     u1560:
  7231  0009EA  0E01               	movlw	1
  7232  0009EC  6E11               	movwf	___aodiv@counter^0,c
  7233  0009EE  EF03  F005         	goto	l2515
  7234  0009F2                     l2513:
  7235  0009F2  90D8               	bcf	status,0,c
  7236  0009F4  3609               	rlcf	___aodiv@divisor^0,f,c
  7237  0009F6  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  7238  0009F8  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  7239  0009FA  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  7240  0009FC  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  7241  0009FE  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  7242  000A00  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  7243  000A02  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  7244  000A04  2A11               	incf	___aodiv@counter^0,f,c
  7245  000A06                     l2515:
  7246  000A06  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  7247  000A08  EF08  F005         	goto	u1571
  7248  000A0C  EF0A  F005         	goto	u1570
  7249  000A10                     u1571:
  7250  000A10  EFF9  F004         	goto	l2513
  7251  000A14                     u1570:
  7252  000A14                     l2517:
  7253  000A14  90D8               	bcf	status,0,c
  7254  000A16  3613               	rlcf	___aodiv@quotient^0,f,c
  7255  000A18  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  7256  000A1A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  7257  000A1C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  7258  000A1E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  7259  000A20  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  7260  000A22  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  7261  000A24  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  7262  000A26  5009               	movf	___aodiv@divisor^0,w,c
  7263  000A28  5C01               	subwf	___aodiv@dividend^0,w,c
  7264  000A2A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7265  000A2C  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  7266  000A2E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7267  000A30  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  7268  000A32  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7269  000A34  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  7270  000A36  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7271  000A38  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  7272  000A3A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7273  000A3C  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  7274  000A3E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7275  000A40  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  7276  000A42  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7277  000A44  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  7278  000A46  A0D8               	btfss	status,0,c
  7279  000A48  EF28  F005         	goto	u1581
  7280  000A4C  EF2A  F005         	goto	u1580
  7281  000A50                     u1581:
  7282  000A50  EF3B  F005         	goto	l2525
  7283  000A54                     u1580:
  7284  000A54  5009               	movf	___aodiv@divisor^0,w,c
  7285  000A56  5E01               	subwf	___aodiv@dividend^0,f,c
  7286  000A58  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7287  000A5A  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  7288  000A5C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7289  000A5E  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  7290  000A60  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7291  000A62  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  7292  000A64  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7293  000A66  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  7294  000A68  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7295  000A6A  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  7296  000A6C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7297  000A6E  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  7298  000A70  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7299  000A72  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  7300  000A74  8013               	bsf	___aodiv@quotient^0,0,c
  7301  000A76                     l2525:
  7302  000A76  90D8               	bcf	status,0,c
  7303  000A78  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  7304  000A7A  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  7305  000A7C  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  7306  000A7E  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  7307  000A80  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  7308  000A82  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  7309  000A84  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  7310  000A86  3209               	rrcf	___aodiv@divisor^0,f,c
  7311  000A88  2E11               	decfsz	___aodiv@counter^0,f,c
  7312  000A8A  EF0A  F005         	goto	l2517
  7313  000A8E                     l2529:
  7314  000A8E  5012               	movf	___aodiv@sign^0,w,c
  7315  000A90  B4D8               	btfsc	status,2,c
  7316  000A92  EF4D  F005         	goto	u1591
  7317  000A96  EF4F  F005         	goto	u1590
  7318  000A9A                     u1591:
  7319  000A9A  EF5F  F005         	goto	l2533
  7320  000A9E                     u1590:
  7321  000A9E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  7322  000AA0  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  7323  000AA2  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  7324  000AA4  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  7325  000AA6  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  7326  000AA8  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  7327  000AAA  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  7328  000AAC  6C13               	negf	___aodiv@quotient^0,c
  7329  000AAE  0E00               	movlw	0
  7330  000AB0  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  7331  000AB2  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  7332  000AB4  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  7333  000AB6  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  7334  000AB8  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  7335  000ABA  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  7336  000ABC  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  7337  000ABE                     l2533:
  7338  000ABE  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7339  000AC2  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7340  000AC6  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7341  000ACA  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7342  000ACE  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7343  000AD2  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7344  000AD6  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7345  000ADA  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7346  000ADE  0012               	return		;funcret
  7347  000AE0                     __end_of___aodiv:
  7348                           	opt callstack 0
  7349                           
  7350 ;; *************** function _asignarHorarios *****************
  7351 ;; Defined at:
  7352 ;;		line 342 in file "main.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;		None
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;  i               2   16[COMRAM] int 
  7357 ;;  Rx              1   18[COMRAM] unsigned char 
  7358 ;;  datoCapturad    1   15[COMRAM] unsigned char 
  7359 ;;  hora            1   14[COMRAM] unsigned char 
  7360 ;; Return value:  Size  Location     Type
  7361 ;;                  1    wreg      void 
  7362 ;; Registers used:
  7363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7364 ;; Tracked objects:
  7365 ;;		On entry : 0/0
  7366 ;;		On exit  : 0/0
  7367 ;;		Unchanged: 0/0
  7368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7369 ;;      Params:         0       0       0       0       0       0       0       0       0
  7370 ;;      Locals:         5       0       0       0       0       0       0       0       0
  7371 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7372 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7373 ;;Total ram usage:        5 bytes
  7374 ;; Hardware stack levels used:    1
  7375 ;; Hardware stack levels required when called:    5
  7376 ;; This function calls:
  7377 ;;		_UART_printf
  7378 ;;		_UART_read
  7379 ;;		_UART_write
  7380 ;;		_escribeHorariosMemoria
  7381 ;; This function is called by:
  7382 ;;		_sistemaPrincipal
  7383 ;; This function uses a non-reentrant model
  7384 ;;
  7385                           
  7386                           	psect	text39
  7387  000D92                     __ptext39:
  7388                           	opt callstack 0
  7389  000D92                     _asignarHorarios:
  7390                           	opt callstack 24
  7391  000D92                     
  7392                           ;main.c: 344:     unsigned char hora;;main.c: 345:     unsigned char Rx;;main.c: 346:   
      +                            char datoCapturado = 0;
  7393  000D92  0E00               	movlw	0
  7394  000D94  6E10               	movwf	asignarHorarios@datoCapturado^0,c
  7395  000D96                     
  7396                           ;main.c: 348:     UART_printf("\r\n OPCIONES DE REGADO \r\n");
  7397  000D96  0E72               	movlw	low STR_5
  7398  000D98  6E02               	movwf	UART_printf@cadena^0,c
  7399  000D9A  0E7F               	movlw	high STR_5
  7400  000D9C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7401  000D9E  ECC6  F00E         	call	_UART_printf	;wreg free
  7402  000DA2                     
  7403                           ;main.c: 349:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  7404  000DA2  0E46               	movlw	low STR_6
  7405  000DA4  6E02               	movwf	UART_printf@cadena^0,c
  7406  000DA6  0E7C               	movlw	high STR_6
  7407  000DA8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7408  000DAA  ECC6  F00E         	call	_UART_printf	;wreg free
  7409                           
  7410                           ;main.c: 351:     for (int i = 0; i < 2; i++) {
  7411  000DAE  0E00               	movlw	0
  7412  000DB0  6E12               	movwf	(asignarHorarios@i+1)^0,c
  7413  000DB2  0E00               	movlw	0
  7414  000DB4  6E11               	movwf	asignarHorarios@i^0,c
  7415  000DB6                     l3163:
  7416                           
  7417                           ;main.c: 352:         Rx = UART_read();
  7418  000DB6  EC23  F00F         	call	_UART_read	;wreg free
  7419  000DBA  6E13               	movwf	asignarHorarios@Rx^0,c
  7420  000DBC                     
  7421                           ;main.c: 353:         if (Rx >= 48 && Rx <= 57) {
  7422  000DBC  0E2F               	movlw	47
  7423  000DBE  6413               	cpfsgt	asignarHorarios@Rx^0,c
  7424  000DC0  EFE4  F006         	goto	u2381
  7425  000DC4  EFE6  F006         	goto	u2380
  7426  000DC8                     u2381:
  7427  000DC8  EF09  F007         	goto	l3183
  7428  000DCC                     u2380:
  7429  000DCC  0E3A               	movlw	58
  7430  000DCE  6013               	cpfslt	asignarHorarios@Rx^0,c
  7431  000DD0  EFEC  F006         	goto	u2391
  7432  000DD4  EFEE  F006         	goto	u2390
  7433  000DD8                     u2391:
  7434  000DD8  EF09  F007         	goto	l3183
  7435  000DDC                     u2390:
  7436  000DDC                     
  7437                           ;main.c: 354:             if (!i) {
  7438  000DDC  5011               	movf	asignarHorarios@i^0,w,c
  7439  000DDE  1012               	iorwf	(asignarHorarios@i+1)^0,w,c
  7440  000DE0  A4D8               	btfss	status,2,c
  7441  000DE2  EFF5  F006         	goto	u2401
  7442  000DE6  EFF7  F006         	goto	u2400
  7443  000DEA                     u2401:
  7444  000DEA  EF01  F007         	goto	l3177
  7445  000DEE                     u2400:
  7446  000DEE                     
  7447                           ;main.c: 355:                 Rx -= 48;
  7448  000DEE  0E30               	movlw	48
  7449  000DF0  5E13               	subwf	asignarHorarios@Rx^0,f,c
  7450  000DF2                     
  7451                           ;main.c: 356:                 hora = Rx;
  7452  000DF2  C013  F00F         	movff	asignarHorarios@Rx,asignarHorarios@hora
  7453  000DF6                     
  7454                           ;main.c: 357:                 hora *= 10;
  7455  000DF6  0E0A               	movlw	10
  7456  000DF8  020F               	mulwf	asignarHorarios@hora^0,c
  7457  000DFA  50F3               	movf	prodl,w,c
  7458  000DFC  6E0F               	movwf	asignarHorarios@hora^0,c
  7459                           
  7460                           ;main.c: 358:             } else {
  7461  000DFE  EF10  F007         	goto	l3187
  7462  000E02                     l3177:
  7463                           
  7464                           ;main.c: 359:                 datoCapturado = 1;
  7465  000E02  0E01               	movlw	1
  7466  000E04  6E10               	movwf	asignarHorarios@datoCapturado^0,c
  7467  000E06                     
  7468                           ;main.c: 360:                 Rx -= 48;
  7469  000E06  0E30               	movlw	48
  7470  000E08  5E13               	subwf	asignarHorarios@Rx^0,f,c
  7471  000E0A                     
  7472                           ;main.c: 361:                 hora += Rx;
  7473  000E0A  5013               	movf	asignarHorarios@Rx^0,w,c
  7474  000E0C  260F               	addwf	asignarHorarios@hora^0,f,c
  7475  000E0E  EF10  F007         	goto	l3187
  7476  000E12                     l3183:
  7477                           
  7478                           ;main.c: 364:             datoCapturado = 0;
  7479  000E12  0E00               	movlw	0
  7480  000E14  6E10               	movwf	asignarHorarios@datoCapturado^0,c
  7481  000E16                     
  7482                           ;main.c: 366:             UART_write('F');
  7483  000E16  0E46               	movlw	70
  7484  000E18  EC3B  F011         	call	_UART_write
  7485                           
  7486                           ;main.c: 367:             break;
  7487  000E1C  EF20  F007         	goto	l3191
  7488  000E20                     l3187:
  7489                           
  7490                           ;main.c: 369:     }
  7491  000E20  4A11               	infsnz	asignarHorarios@i^0,f,c
  7492  000E22  2A12               	incf	(asignarHorarios@i+1)^0,f,c
  7493  000E24  BE12               	btfsc	(asignarHorarios@i+1)^0,7,c
  7494  000E26  EF1E  F007         	goto	u2411
  7495  000E2A  5012               	movf	(asignarHorarios@i+1)^0,w,c
  7496  000E2C  E109               	bnz	u2410
  7497  000E2E  0E02               	movlw	2
  7498  000E30  5C11               	subwf	asignarHorarios@i^0,w,c
  7499  000E32  A0D8               	btfss	status,0,c
  7500  000E34  EF1E  F007         	goto	u2411
  7501  000E38  EF20  F007         	goto	u2410
  7502  000E3C                     u2411:
  7503  000E3C  EFDB  F006         	goto	l3163
  7504  000E40                     u2410:
  7505  000E40                     l3191:
  7506                           
  7507                           ;main.c: 371:     if (datoCapturado && !esperandoDatos) {
  7508  000E40  5010               	movf	asignarHorarios@datoCapturado^0,w,c
  7509  000E42  B4D8               	btfsc	status,2,c
  7510  000E44  EF26  F007         	goto	u2421
  7511  000E48  EF28  F007         	goto	u2420
  7512  000E4C                     u2421:
  7513  000E4C  EF6C  F007         	goto	l288
  7514  000E50                     u2420:
  7515  000E50  505E               	movf	_esperandoDatos^0,w,c
  7516  000E52  A4D8               	btfss	status,2,c
  7517  000E54  EF2E  F007         	goto	u2431
  7518  000E58  EF30  F007         	goto	u2430
  7519  000E5C                     u2431:
  7520  000E5C  EF6C  F007         	goto	l288
  7521  000E60                     u2430:
  7522  000E60                     
  7523                           ;main.c: 373:         UART_printf("\r\n Ingrese 1 para regar || ingrese 0 para no regar:
      +                           \r\n");
  7524  000E60  0E0F               	movlw	low STR_7
  7525  000E62  6E02               	movwf	UART_printf@cadena^0,c
  7526  000E64  0E7C               	movlw	high STR_7
  7527  000E66  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7528  000E68  ECC6  F00E         	call	_UART_printf	;wreg free
  7529  000E6C                     
  7530                           ;main.c: 375:         Rx = UART_read();
  7531  000E6C  EC23  F00F         	call	_UART_read	;wreg free
  7532  000E70  6E13               	movwf	asignarHorarios@Rx^0,c
  7533  000E72                     
  7534                           ;main.c: 376:         Rx -= 48;
  7535  000E72  0E30               	movlw	48
  7536  000E74  5E13               	subwf	asignarHorarios@Rx^0,f,c
  7537  000E76                     
  7538                           ;main.c: 378:         if (Rx != 1 && Rx != 0)
  7539  000E76  0413               	decf	asignarHorarios@Rx^0,w,c
  7540  000E78  B4D8               	btfsc	status,2,c
  7541  000E7A  EF41  F007         	goto	u2441
  7542  000E7E  EF43  F007         	goto	u2440
  7543  000E82                     u2441:
  7544  000E82  EF4D  F007         	goto	l285
  7545  000E86                     u2440:
  7546  000E86  5013               	movf	asignarHorarios@Rx^0,w,c
  7547  000E88  B4D8               	btfsc	status,2,c
  7548  000E8A  EF49  F007         	goto	u2451
  7549  000E8E  EF4B  F007         	goto	u2450
  7550  000E92                     u2451:
  7551  000E92  EF4D  F007         	goto	l285
  7552  000E96                     u2450:
  7553  000E96                     
  7554                           ;main.c: 379:             Rx = 0;
  7555  000E96  0E00               	movlw	0
  7556  000E98  6E13               	movwf	asignarHorarios@Rx^0,c
  7557  000E9A                     l285:
  7558                           
  7559                           ;main.c: 381:         if (!esperandoDatos) {
  7560  000E9A  505E               	movf	_esperandoDatos^0,w,c
  7561  000E9C  A4D8               	btfss	status,2,c
  7562  000E9E  EF53  F007         	goto	u2461
  7563  000EA2  EF55  F007         	goto	u2460
  7564  000EA6                     u2461:
  7565  000EA6  EF69  F007         	goto	l3213
  7566  000EAA                     u2460:
  7567  000EAA                     
  7568                           ;main.c: 382:             UART_printf("\r\n Horario Modificado! \r\n");
  7569  000EAA  0E58               	movlw	low STR_8
  7570  000EAC  6E02               	movwf	UART_printf@cadena^0,c
  7571  000EAE  0E7F               	movlw	high STR_8
  7572  000EB0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7573  000EB2  ECC6  F00E         	call	_UART_printf	;wreg free
  7574  000EB6                     
  7575                           ;main.c: 384:             horarios[hora].regar = Rx;
  7576  000EB6  500F               	movf	asignarHorarios@hora^0,w,c
  7577  000EB8  0D03               	mullw	3
  7578  000EBA  0E01               	movlw	low (_horarios+1)
  7579  000EBC  24F3               	addwf	243,w,c
  7580  000EBE  6ED9               	movwf	fsr2l,c
  7581  000EC0  0E01               	movlw	high (_horarios+1)
  7582  000EC2  20F4               	addwfc	prodh,w,c
  7583  000EC4  6EDA               	movwf	fsr2h,c
  7584  000EC6  C013  FFDF         	movff	asignarHorarios@Rx,indf2
  7585  000ECA                     
  7586                           ;main.c: 386:             escribeHorariosMemoria();
  7587  000ECA  EC82  F009         	call	_escribeHorariosMemoria	;wreg free
  7588                           
  7589                           ;main.c: 389:         } else {
  7590  000ECE  EF6C  F007         	goto	l288
  7591  000ED2                     l3213:
  7592                           
  7593                           ;main.c: 391:             UART_write('F');
  7594  000ED2  0E46               	movlw	70
  7595  000ED4  EC3B  F011         	call	_UART_write
  7596  000ED8                     l288:
  7597  000ED8  0012               	return		;funcret
  7598  000EDA                     __end_of_asignarHorarios:
  7599                           	opt callstack 0
  7600                           
  7601 ;; *************** function _escribeHorariosMemoria *****************
  7602 ;; Defined at:
  7603 ;;		line 211 in file "main.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;		None
  7606 ;; Auto vars:     Size  Location     Type
  7607 ;;  i               2   12[COMRAM] int 
  7608 ;;  contMemoria     2   10[COMRAM] int 
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  1    wreg      void 
  7611 ;; Registers used:
  7612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7613 ;; Tracked objects:
  7614 ;;		On entry : 0/0
  7615 ;;		On exit  : 0/0
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7618 ;;      Params:         0       0       0       0       0       0       0       0       0
  7619 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7620 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7621 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7622 ;;Total ram usage:        4 bytes
  7623 ;; Hardware stack levels used:    1
  7624 ;; Hardware stack levels required when called:    4
  7625 ;; This function calls:
  7626 ;;		___wmul
  7627 ;;		_escribe_eeprom
  7628 ;; This function is called by:
  7629 ;;		_asignarHorarios
  7630 ;;		_setTiempoRegar
  7631 ;; This function uses a non-reentrant model
  7632 ;;
  7633                           
  7634                           	psect	text40
  7635  001304                     __ptext40:
  7636                           	opt callstack 0
  7637  001304                     _escribeHorariosMemoria:
  7638                           	opt callstack 24
  7639  001304                     
  7640                           ;main.c: 213:     int contMemoria = 0;
  7641  001304  0E00               	movlw	0
  7642  001306  6E0C               	movwf	(escribeHorariosMemoria@contMemoria+1)^0,c
  7643  001308  0E00               	movlw	0
  7644  00130A  6E0B               	movwf	escribeHorariosMemoria@contMemoria^0,c
  7645                           
  7646                           ;main.c: 214:     for (int i = 0; i < 24; i++) {
  7647  00130C  0E00               	movlw	0
  7648  00130E  6E0E               	movwf	(escribeHorariosMemoria@i+1)^0,c
  7649  001310  0E00               	movlw	0
  7650  001312  6E0D               	movwf	escribeHorariosMemoria@i^0,c
  7651  001314                     l2927:
  7652                           
  7653                           ;main.c: 215:         escribe_eeprom(contMemoria++, horarios[i].hora);
  7654  001314  C00B  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  7655  001318  C00C  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  7656  00131C  C00D  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  7657  001320  C00E  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  7658  001324  0E00               	movlw	0
  7659  001326  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7660  001328  0E03               	movlw	3
  7661  00132A  6E03               	movwf	___wmul@multiplicand^0,c
  7662  00132C  ECEC  F010         	call	___wmul	;wreg free
  7663  001330  0E00               	movlw	low _horarios
  7664  001332  2401               	addwf	?___wmul^0,w,c
  7665  001334  6ED9               	movwf	fsr2l,c
  7666  001336  0E01               	movlw	high _horarios
  7667  001338  2002               	addwfc	(?___wmul+1)^0,w,c
  7668  00133A  6EDA               	movwf	fsr2h,c
  7669  00133C  50DF               	movf	indf2,w,c
  7670  00133E  6E09               	movwf	escribe_eeprom@dato^0,c
  7671  001340  EC80  F010         	call	_escribe_eeprom	;wreg free
  7672  001344  4A0B               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  7673  001346  2A0C               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  7674  001348                     
  7675                           ;main.c: 216:         escribe_eeprom(contMemoria++, horarios[i].regar);
  7676  001348  C00B  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  7677  00134C  C00C  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  7678  001350  C00D  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  7679  001354  C00E  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  7680  001358  0E00               	movlw	0
  7681  00135A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7682  00135C  0E03               	movlw	3
  7683  00135E  6E03               	movwf	___wmul@multiplicand^0,c
  7684  001360  ECEC  F010         	call	___wmul	;wreg free
  7685  001364  0E01               	movlw	low (_horarios+1)
  7686  001366  2401               	addwf	?___wmul^0,w,c
  7687  001368  6ED9               	movwf	fsr2l,c
  7688  00136A  0E01               	movlw	high (_horarios+1)
  7689  00136C  2002               	addwfc	(?___wmul+1)^0,w,c
  7690  00136E  6EDA               	movwf	fsr2h,c
  7691  001370  50DF               	movf	indf2,w,c
  7692  001372  6E09               	movwf	escribe_eeprom@dato^0,c
  7693  001374  EC80  F010         	call	_escribe_eeprom	;wreg free
  7694  001378  4A0B               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  7695  00137A  2A0C               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  7696  00137C                     
  7697                           ;main.c: 217:         escribe_eeprom(contMemoria++, horarios[i].tiempoRegar);
  7698  00137C  C00B  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  7699  001380  C00C  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  7700  001384  C00D  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  7701  001388  C00E  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  7702  00138C  0E00               	movlw	0
  7703  00138E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7704  001390  0E03               	movlw	3
  7705  001392  6E03               	movwf	___wmul@multiplicand^0,c
  7706  001394  ECEC  F010         	call	___wmul	;wreg free
  7707  001398  0E02               	movlw	low (_horarios+2)
  7708  00139A  2401               	addwf	?___wmul^0,w,c
  7709  00139C  6ED9               	movwf	fsr2l,c
  7710  00139E  0E01               	movlw	high (_horarios+2)
  7711  0013A0  2002               	addwfc	(?___wmul+1)^0,w,c
  7712  0013A2  6EDA               	movwf	fsr2h,c
  7713  0013A4  50DF               	movf	indf2,w,c
  7714  0013A6  6E09               	movwf	escribe_eeprom@dato^0,c
  7715  0013A8  EC80  F010         	call	_escribe_eeprom	;wreg free
  7716  0013AC  4A0B               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  7717  0013AE  2A0C               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  7718  0013B0                     
  7719                           ;main.c: 218:     }
  7720  0013B0  4A0D               	infsnz	escribeHorariosMemoria@i^0,f,c
  7721  0013B2  2A0E               	incf	(escribeHorariosMemoria@i+1)^0,f,c
  7722  0013B4  BE0E               	btfsc	(escribeHorariosMemoria@i+1)^0,7,c
  7723  0013B6  EFE6  F009         	goto	u2131
  7724  0013BA  500E               	movf	(escribeHorariosMemoria@i+1)^0,w,c
  7725  0013BC  E109               	bnz	u2130
  7726  0013BE  0E18               	movlw	24
  7727  0013C0  5C0D               	subwf	escribeHorariosMemoria@i^0,w,c
  7728  0013C2  A0D8               	btfss	status,0,c
  7729  0013C4  EFE6  F009         	goto	u2131
  7730  0013C8  EFE8  F009         	goto	u2130
  7731  0013CC                     u2131:
  7732  0013CC  EF8A  F009         	goto	l2927
  7733  0013D0                     u2130:
  7734  0013D0  0012               	return		;funcret
  7735  0013D2                     __end_of_escribeHorariosMemoria:
  7736                           	opt callstack 0
  7737                           
  7738 ;; *************** function _escribe_eeprom *****************
  7739 ;; Defined at:
  7740 ;;		line 182 in file "main.c"
  7741 ;; Parameters:    Size  Location     Type
  7742 ;;  direccion       2    6[COMRAM] unsigned short 
  7743 ;;  dato            1    8[COMRAM] unsigned char 
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;		None
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  1    wreg      void 
  7748 ;; Registers used:
  7749 ;;		wreg, status,2, status,0, cstack
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7755 ;;      Params:         3       0       0       0       0       0       0       0       0
  7756 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7757 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7758 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7759 ;;Total ram usage:        4 bytes
  7760 ;; Hardware stack levels used:    1
  7761 ;; Hardware stack levels required when called:    3
  7762 ;; This function calls:
  7763 ;;		_i2c_detener
  7764 ;;		_i2c_envia_dato
  7765 ;;		_i2c_inicia_com
  7766 ;; This function is called by:
  7767 ;;		_escribeHorariosMemoria
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           	psect	text41
  7772  002100                     __ptext41:
  7773                           	opt callstack 0
  7774  002100                     _escribe_eeprom:
  7775                           	opt callstack 24
  7776  002100                     
  7777                           ;main.c: 183:     i2c_inicia_com();
  7778  002100  EC66  F011         	call	_i2c_inicia_com	;wreg free
  7779                           
  7780                           ;main.c: 184:     i2c_envia_dato(0xAE);
  7781  002104  0EAE               	movlw	174
  7782  002106  EC57  F011         	call	_i2c_envia_dato
  7783                           
  7784                           ;main.c: 185:     i2c_envia_dato(direccion >> 8);
  7785  00210A  5008               	movf	(escribe_eeprom@direccion+1)^0,w,c
  7786  00210C  EC57  F011         	call	_i2c_envia_dato
  7787                           
  7788                           ;main.c: 187:     i2c_envia_dato(direccion);
  7789  002110  5007               	movf	escribe_eeprom@direccion^0,w,c
  7790  002112  EC57  F011         	call	_i2c_envia_dato
  7791                           
  7792                           ;main.c: 189:     i2c_envia_dato(dato);
  7793  002116  5009               	movf	escribe_eeprom@dato^0,w,c
  7794  002118  EC57  F011         	call	_i2c_envia_dato
  7795                           
  7796                           ;main.c: 190:     i2c_detener();
  7797  00211C  EC6A  F011         	call	_i2c_detener	;wreg free
  7798  002120                     
  7799                           ;main.c: 191:     _delay((unsigned long)((10)*(4000000/4000.0)));
  7800  002120  0E0D               	movlw	13
  7801  002122  6E0A               	movwf	??_escribe_eeprom^0,c
  7802  002124  0EFC               	movlw	252
  7803  002126                     u2917:
  7804  002126  2EE8               	decfsz	wreg,f,c
  7805  002128  D7FE               	bra	u2917
  7806  00212A  2E0A               	decfsz	??_escribe_eeprom^0,f,c
  7807  00212C  D7FC               	bra	u2917
  7808  00212E  0012               	return		;funcret
  7809  002130                     __end_of_escribe_eeprom:
  7810                           	opt callstack 0
  7811                           
  7812 ;; *************** function _UART_read *****************
  7813 ;; Defined at:
  7814 ;;		line 34 in file "./UART.h"
  7815 ;; Parameters:    Size  Location     Type
  7816 ;;		None
  7817 ;; Auto vars:     Size  Location     Type
  7818 ;;		None
  7819 ;; Return value:  Size  Location     Type
  7820 ;;                  1    wreg      unsigned char 
  7821 ;; Registers used:
  7822 ;;		wreg, status,2
  7823 ;; Tracked objects:
  7824 ;;		On entry : 0/0
  7825 ;;		On exit  : 0/0
  7826 ;;		Unchanged: 0/0
  7827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7828 ;;      Params:         0       0       0       0       0       0       0       0       0
  7829 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7830 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7831 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7832 ;;Total ram usage:        0 bytes
  7833 ;; Hardware stack levels used:    1
  7834 ;; Hardware stack levels required when called:    1
  7835 ;; This function calls:
  7836 ;;		Nothing
  7837 ;; This function is called by:
  7838 ;;		_setRtc
  7839 ;;		_asignarHorarios
  7840 ;;		_setTiempoRegar
  7841 ;;		_lecturaWifi
  7842 ;; This function uses a non-reentrant model
  7843 ;;
  7844                           
  7845                           	psect	text42
  7846  001E46                     __ptext42:
  7847                           	opt callstack 0
  7848  001E46                     _UART_read:
  7849                           	opt callstack 27
  7850  001E46                     
  7851                           ;./UART.h: 36:     TMR0 = VALOR_TIMER0UART;
  7852  001E46  0E67               	movlw	103
  7853  001E48  6ED7               	movwf	215,c	;volatile
  7854  001E4A  0E69               	movlw	105
  7855  001E4C  6ED6               	movwf	214,c	;volatile
  7856                           
  7857                           ;./UART.h: 37:     esperaDatoConcluida = 0;
  7858  001E4E  0E00               	movlw	0
  7859  001E50  0100               	movlb	0	; () banked
  7860  001E52  6F8B               	movwf	_esperaDatoConcluida& (0+255),b
  7861                           
  7862                           ;./UART.h: 38:     esperandoDatos = 1;
  7863  001E54  0E01               	movlw	1
  7864  001E56  6E5E               	movwf	_esperandoDatos^0,c
  7865                           
  7866                           ;./UART.h: 39:     byteUart = 0;
  7867  001E58  0E00               	movlw	0
  7868  001E5A  6F8C               	movwf	_byteUart& (0+255),b
  7869                           
  7870                           ;./UART.h: 40:     tiempoInactividadTrans = 0;
  7871  001E5C  0E00               	movlw	0
  7872  001E5E  6F8D               	movwf	_tiempoInactividadTrans& (0+255),b
  7873  001E60                     l121:
  7874                           
  7875                           ; BSR set to: 0
  7876  001E60  BA9E               	btfsc	158,5,c	;volatile
  7877  001E62  EF35  F00F         	goto	u1971
  7878  001E66  EF37  F00F         	goto	u1970
  7879  001E6A                     u1971:
  7880  001E6A  EF3F  F00F         	goto	l2789
  7881  001E6E                     u1970:
  7882  001E6E                     
  7883                           ; BSR set to: 0
  7884  001E6E  518B               	movf	_esperaDatoConcluida& (0+255),w,b
  7885  001E70  B4D8               	btfsc	status,2,c
  7886  001E72  EF3D  F00F         	goto	u1981
  7887  001E76  EF3F  F00F         	goto	u1980
  7888  001E7A                     u1981:
  7889  001E7A  EF30  F00F         	goto	l121
  7890  001E7E                     u1980:
  7891  001E7E                     l2789:
  7892                           
  7893                           ; BSR set to: 0
  7894                           ;./UART.h: 44:     if (!esperaDatoConcluida) {
  7895  001E7E  518B               	movf	_esperaDatoConcluida& (0+255),w,b
  7896  001E80  A4D8               	btfss	status,2,c
  7897  001E82  EF45  F00F         	goto	u1991
  7898  001E86  EF47  F00F         	goto	u1990
  7899  001E8A                     u1991:
  7900  001E8A  EF4B  F00F         	goto	l126
  7901  001E8E                     u1990:
  7902  001E8E                     
  7903                           ; BSR set to: 0
  7904                           ;./UART.h: 45:         byteUart = RCREG;
  7905  001E8E  CFAE F08C          	movff	4014,_byteUart	;volatile
  7906  001E92                     
  7907                           ; BSR set to: 0
  7908                           ;./UART.h: 46:         esperandoDatos = 0;
  7909  001E92  0E00               	movlw	0
  7910  001E94  6E5E               	movwf	_esperandoDatos^0,c
  7911  001E96                     l126:
  7912                           
  7913                           ; BSR set to: 0
  7914                           ;./UART.h: 49:     return byteUart;
  7915  001E96  518C               	movf	_byteUart& (0+255),w,b
  7916  001E98                     
  7917                           ; BSR set to: 0
  7918  001E98  0012               	return		;funcret
  7919  001E9A                     __end_of_UART_read:
  7920                           	opt callstack 0
  7921                           
  7922 ;; *************** function _UART_printf *****************
  7923 ;; Defined at:
  7924 ;;		line 57 in file "./UART.h"
  7925 ;; Parameters:    Size  Location     Type
  7926 ;;  cadena          2    1[COMRAM] PTR unsigned char 
  7927 ;;		 -> mostrarDatosSensoresWIFI@buffer(50), mostrarDatosSensores@buffer(50), STR_28(21), STR_27(25), 
  7928 ;;		 -> dameDatosSistema@buffer(50), STR_25(50), STR_24(42), STR_23(3), 
  7929 ;;		 -> STR_22(14), STR_21(34), STR_20(32), STR_19(49), 
  7930 ;;		 -> STR_18(37), STR_17(27), STR_16(37), STR_15(32), 
  7931 ;;		 -> STR_14(28), STR_13(38), STR_12(37), STR_11(72), 
  7932 ;;		 -> STR_10(51), STR_9(23), STR_8(26), STR_7(55), 
  7933 ;;		 -> STR_6(51), STR_5(25), STR_4(37), STR_3(31), 
  7934 ;;		 -> STR_2(43), STR_1(16), 
  7935 ;; Auto vars:     Size  Location     Type
  7936 ;;		None
  7937 ;; Return value:  Size  Location     Type
  7938 ;;                  1    wreg      void 
  7939 ;; Registers used:
  7940 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7941 ;; Tracked objects:
  7942 ;;		On entry : 0/0
  7943 ;;		On exit  : 0/0
  7944 ;;		Unchanged: 0/0
  7945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7946 ;;      Params:         2       0       0       0       0       0       0       0       0
  7947 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7948 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7949 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7950 ;;Total ram usage:        2 bytes
  7951 ;; Hardware stack levels used:    1
  7952 ;; Hardware stack levels required when called:    2
  7953 ;; This function calls:
  7954 ;;		_UART_write
  7955 ;; This function is called by:
  7956 ;;		_fijaHoraRtc
  7957 ;;		_asignarHorarios
  7958 ;;		_setTiempoRegar
  7959 ;;		_lecturaWifi
  7960 ;;		_mostrarMenu
  7961 ;;		_sistemaPrincipal
  7962 ;;		_dameDatosSistema
  7963 ;;		_dameTemperaturaHumedad
  7964 ;;		_mostrarDatosSensores
  7965 ;;		_mostrarDatosSensoresWIFI
  7966 ;; This function uses a non-reentrant model
  7967 ;;
  7968                           
  7969                           	psect	text43
  7970  001D8C                     __ptext43:
  7971                           	opt callstack 0
  7972  001D8C                     _UART_printf:
  7973                           	opt callstack 26
  7974  001D8C                     
  7975                           ;./UART.h: 58:     while (*cadena) {
  7976  001D8C  EFDC  F00E         	goto	l2665
  7977  001D90                     l2661:
  7978                           
  7979                           ;./UART.h: 59:         UART_write(*cadena++);
  7980  001D90  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  7981  001D94  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  7982  001D98  6AF8               	clrf	tblptru,c
  7983  001D9A  0E07               	movlw	(high __ramtop+-1)
  7984  001D9C  64F7               	cpfsgt	tblptrh,c
  7985  001D9E  D003               	bra	u1847
  7986  001DA0  0008               	tblrd		*
  7987  001DA2  50F5               	movf	tablat,w,c
  7988  001DA4  D005               	bra	u1840
  7989  001DA6                     u1847:
  7990  001DA6  CFF6 FFE1          	movff	tblptrl,fsr1l
  7991  001DAA  CFF7 FFE2          	movff	tblptrh,fsr1h
  7992  001DAE  50E7               	movf	indf1,w,c
  7993  001DB0                     u1840:
  7994  001DB0  EC3B  F011         	call	_UART_write
  7995  001DB4  4A02               	infsnz	UART_printf@cadena^0,f,c
  7996  001DB6  2A03               	incf	(UART_printf@cadena+1)^0,f,c
  7997  001DB8                     l2665:
  7998                           
  7999                           ;./UART.h: 58:     while (*cadena) {
  8000  001DB8  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  8001  001DBC  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  8002  001DC0  6AF8               	clrf	tblptru,c
  8003  001DC2  0E07               	movlw	(high __ramtop+-1)
  8004  001DC4  64F7               	cpfsgt	tblptrh,c
  8005  001DC6  D003               	bra	u1857
  8006  001DC8  0008               	tblrd		*
  8007  001DCA  50F5               	movf	tablat,w,c
  8008  001DCC  D005               	bra	u1850
  8009  001DCE                     u1857:
  8010  001DCE  CFF6 FFE1          	movff	tblptrl,fsr1l
  8011  001DD2  CFF7 FFE2          	movff	tblptrh,fsr1h
  8012  001DD6  50E7               	movf	indf1,w,c
  8013  001DD8                     u1850:
  8014  001DD8  0900               	iorlw	0
  8015  001DDA  A4D8               	btfss	status,2,c
  8016  001DDC  EFF2  F00E         	goto	u1861
  8017  001DE0  EFF4  F00E         	goto	u1860
  8018  001DE4                     u1861:
  8019  001DE4  EFC8  F00E         	goto	l2661
  8020  001DE8                     u1860:
  8021  001DE8  0012               	return		;funcret
  8022  001DEA                     __end_of_UART_printf:
  8023                           	opt callstack 0
  8024                           
  8025 ;; *************** function _UART_write *****************
  8026 ;; Defined at:
  8027 ;;		line 52 in file "./UART.h"
  8028 ;; Parameters:    Size  Location     Type
  8029 ;;  dato            1    wreg     unsigned char 
  8030 ;; Auto vars:     Size  Location     Type
  8031 ;;  dato            1    0[COMRAM] unsigned char 
  8032 ;; Return value:  Size  Location     Type
  8033 ;;                  1    wreg      void 
  8034 ;; Registers used:
  8035 ;;		wreg
  8036 ;; Tracked objects:
  8037 ;;		On entry : 0/0
  8038 ;;		On exit  : 0/0
  8039 ;;		Unchanged: 0/0
  8040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8041 ;;      Params:         0       0       0       0       0       0       0       0       0
  8042 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8043 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8044 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8045 ;;Total ram usage:        1 bytes
  8046 ;; Hardware stack levels used:    1
  8047 ;; Hardware stack levels required when called:    1
  8048 ;; This function calls:
  8049 ;;		Nothing
  8050 ;; This function is called by:
  8051 ;;		_UART_printf
  8052 ;;		_setRtc
  8053 ;;		_asignarHorarios
  8054 ;;		_setTiempoRegar
  8055 ;;		_lecturaWifi
  8056 ;;		_dameDatosSistema
  8057 ;;		_mostrarDatosSensores
  8058 ;;		_mostrarDatosSensoresWIFI
  8059 ;; This function uses a non-reentrant model
  8060 ;;
  8061                           
  8062                           	psect	text44
  8063  002276                     __ptext44:
  8064                           	opt callstack 0
  8065  002276                     _UART_write:
  8066                           	opt callstack 26
  8067                           
  8068                           ;incstack = 0
  8069                           ;UART_write@dato stored from wreg
  8070  002276  6E01               	movwf	UART_write@dato^0,c
  8071  002278                     
  8072                           ;./UART.h: 53:     TXREG = dato;
  8073  002278  C001  FFAD         	movff	UART_write@dato,4013	;volatile
  8074  00227C                     l130:
  8075  00227C  A2AC               	btfss	172,1,c	;volatile
  8076  00227E  EF43  F011         	goto	u1681
  8077  002282  EF45  F011         	goto	u1680
  8078  002286                     u1681:
  8079  002286  EF3E  F011         	goto	l130
  8080  00228A                     u1680:
  8081  00228A  0012               	return		;funcret
  8082  00228C                     __end_of_UART_write:
  8083                           	opt callstack 0
  8084                           
  8085 ;; *************** function _leeHorariosMemoria *****************
  8086 ;; Defined at:
  8087 ;;		line 221 in file "main.c"
  8088 ;; Parameters:    Size  Location     Type
  8089 ;;		None
  8090 ;; Auto vars:     Size  Location     Type
  8091 ;;  i               2    8[COMRAM] int 
  8092 ;;  contMemoria     2    6[COMRAM] int 
  8093 ;; Return value:  Size  Location     Type
  8094 ;;                  1    wreg      void 
  8095 ;; Registers used:
  8096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8097 ;; Tracked objects:
  8098 ;;		On entry : 0/0
  8099 ;;		On exit  : 0/0
  8100 ;;		Unchanged: 0/0
  8101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8102 ;;      Params:         0       0       0       0       0       0       0       0       0
  8103 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8104 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8105 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8106 ;;Total ram usage:        4 bytes
  8107 ;; Hardware stack levels used:    1
  8108 ;; Hardware stack levels required when called:    4
  8109 ;; This function calls:
  8110 ;;		___wmul
  8111 ;;		_leer_eeprom
  8112 ;; This function is called by:
  8113 ;;		_main
  8114 ;; This function uses a non-reentrant model
  8115 ;;
  8116                           
  8117                           	psect	text45
  8118  00149C                     __ptext45:
  8119                           	opt callstack 0
  8120  00149C                     _leeHorariosMemoria:
  8121                           	opt callstack 26
  8122  00149C                     
  8123                           ;main.c: 223:     int contMemoria = 0;
  8124  00149C  0E00               	movlw	0
  8125  00149E  6E08               	movwf	(leeHorariosMemoria@contMemoria+1)^0,c
  8126  0014A0  0E00               	movlw	0
  8127  0014A2  6E07               	movwf	leeHorariosMemoria@contMemoria^0,c
  8128                           
  8129                           ;main.c: 225:     for (int i = 0; i < 24; i++) {
  8130  0014A4  0E00               	movlw	0
  8131  0014A6  6E0A               	movwf	(leeHorariosMemoria@i+1)^0,c
  8132  0014A8  0E00               	movlw	0
  8133  0014AA  6E09               	movwf	leeHorariosMemoria@i^0,c
  8134  0014AC                     l3493:
  8135                           
  8136                           ;main.c: 226:         horarios[i].hora = leer_eeprom(contMemoria++);
  8137  0014AC  C009  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  8138  0014B0  C00A  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  8139  0014B4  0E00               	movlw	0
  8140  0014B6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8141  0014B8  0E03               	movlw	3
  8142  0014BA  6E03               	movwf	___wmul@multiplicand^0,c
  8143  0014BC  ECEC  F010         	call	___wmul	;wreg free
  8144  0014C0  0E00               	movlw	low _horarios
  8145  0014C2  2401               	addwf	?___wmul^0,w,c
  8146  0014C4  6ED9               	movwf	fsr2l,c
  8147  0014C6  0E01               	movlw	high _horarios
  8148  0014C8  2002               	addwfc	(?___wmul+1)^0,w,c
  8149  0014CA  6EDA               	movwf	fsr2h,c
  8150  0014CC  C007  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  8151  0014D0  C008  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  8152  0014D4  EC47  F010         	call	_leer_eeprom	;wreg free
  8153  0014D8  6EDF               	movwf	indf2,c
  8154  0014DA  4A07               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  8155  0014DC  2A08               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  8156  0014DE                     
  8157                           ;main.c: 227:         horarios[i].regar = leer_eeprom(contMemoria++);
  8158  0014DE  C009  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  8159  0014E2  C00A  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  8160  0014E6  0E00               	movlw	0
  8161  0014E8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8162  0014EA  0E03               	movlw	3
  8163  0014EC  6E03               	movwf	___wmul@multiplicand^0,c
  8164  0014EE  ECEC  F010         	call	___wmul	;wreg free
  8165  0014F2  0E01               	movlw	low (_horarios+1)
  8166  0014F4  2401               	addwf	?___wmul^0,w,c
  8167  0014F6  6ED9               	movwf	fsr2l,c
  8168  0014F8  0E01               	movlw	high (_horarios+1)
  8169  0014FA  2002               	addwfc	(?___wmul+1)^0,w,c
  8170  0014FC  6EDA               	movwf	fsr2h,c
  8171  0014FE  C007  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  8172  001502  C008  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  8173  001506  EC47  F010         	call	_leer_eeprom	;wreg free
  8174  00150A  6EDF               	movwf	indf2,c
  8175  00150C  4A07               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  8176  00150E  2A08               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  8177  001510                     
  8178                           ;main.c: 228:         horarios[i].tiempoRegar = leer_eeprom(contMemoria++);
  8179  001510  C009  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  8180  001514  C00A  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  8181  001518  0E00               	movlw	0
  8182  00151A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8183  00151C  0E03               	movlw	3
  8184  00151E  6E03               	movwf	___wmul@multiplicand^0,c
  8185  001520  ECEC  F010         	call	___wmul	;wreg free
  8186  001524  0E02               	movlw	low (_horarios+2)
  8187  001526  2401               	addwf	?___wmul^0,w,c
  8188  001528  6ED9               	movwf	fsr2l,c
  8189  00152A  0E01               	movlw	high (_horarios+2)
  8190  00152C  2002               	addwfc	(?___wmul+1)^0,w,c
  8191  00152E  6EDA               	movwf	fsr2h,c
  8192  001530  C007  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  8193  001534  C008  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  8194  001538  EC47  F010         	call	_leer_eeprom	;wreg free
  8195  00153C  6EDF               	movwf	indf2,c
  8196  00153E  4A07               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  8197  001540  2A08               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  8198  001542                     
  8199                           ;main.c: 229:     }
  8200  001542  4A09               	infsnz	leeHorariosMemoria@i^0,f,c
  8201  001544  2A0A               	incf	(leeHorariosMemoria@i+1)^0,f,c
  8202  001546  BE0A               	btfsc	(leeHorariosMemoria@i+1)^0,7,c
  8203  001548  EFAF  F00A         	goto	u2711
  8204  00154C  500A               	movf	(leeHorariosMemoria@i+1)^0,w,c
  8205  00154E  E109               	bnz	u2710
  8206  001550  0E18               	movlw	24
  8207  001552  5C09               	subwf	leeHorariosMemoria@i^0,w,c
  8208  001554  A0D8               	btfss	status,0,c
  8209  001556  EFAF  F00A         	goto	u2711
  8210  00155A  EFB1  F00A         	goto	u2710
  8211  00155E                     u2711:
  8212  00155E  EF56  F00A         	goto	l3493
  8213  001562                     u2710:
  8214  001562  0012               	return		;funcret
  8215  001564                     __end_of_leeHorariosMemoria:
  8216                           	opt callstack 0
  8217                           
  8218 ;; *************** function _leer_eeprom *****************
  8219 ;; Defined at:
  8220 ;;		line 194 in file "main.c"
  8221 ;; Parameters:    Size  Location     Type
  8222 ;;  direccion       2    2[COMRAM] unsigned short 
  8223 ;; Auto vars:     Size  Location     Type
  8224 ;;  dato            1    5[COMRAM] unsigned char 
  8225 ;; Return value:  Size  Location     Type
  8226 ;;                  1    wreg      unsigned char 
  8227 ;; Registers used:
  8228 ;;		wreg, status,2, status,0, cstack
  8229 ;; Tracked objects:
  8230 ;;		On entry : 0/0
  8231 ;;		On exit  : 0/0
  8232 ;;		Unchanged: 0/0
  8233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8234 ;;      Params:         2       0       0       0       0       0       0       0       0
  8235 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8236 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8237 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8238 ;;Total ram usage:        4 bytes
  8239 ;; Hardware stack levels used:    1
  8240 ;; Hardware stack levels required when called:    3
  8241 ;; This function calls:
  8242 ;;		_i2c_detener
  8243 ;;		_i2c_envia_dato
  8244 ;;		_i2c_inicia_com
  8245 ;;		_i2c_recibe_dato
  8246 ;;		_i2c_reinicia_com
  8247 ;; This function is called by:
  8248 ;;		_leeHorariosMemoria
  8249 ;; This function uses a non-reentrant model
  8250 ;;
  8251                           
  8252                           	psect	text46
  8253  00208E                     __ptext46:
  8254                           	opt callstack 0
  8255  00208E                     _leer_eeprom:
  8256                           	opt callstack 26
  8257  00208E                     
  8258                           ;main.c: 196:     unsigned char dato;;main.c: 198:     i2c_inicia_com();
  8259  00208E  EC66  F011         	call	_i2c_inicia_com	;wreg free
  8260                           
  8261                           ;main.c: 199:     i2c_envia_dato(0xAE);
  8262  002092  0EAE               	movlw	174
  8263  002094  EC57  F011         	call	_i2c_envia_dato
  8264                           
  8265                           ;main.c: 200:     i2c_envia_dato(direccion >> 8);
  8266  002098  5004               	movf	(leer_eeprom@direccion+1)^0,w,c
  8267  00209A  EC57  F011         	call	_i2c_envia_dato
  8268                           
  8269                           ;main.c: 201:     i2c_envia_dato(direccion);
  8270  00209E  5003               	movf	leer_eeprom@direccion^0,w,c
  8271  0020A0  EC57  F011         	call	_i2c_envia_dato
  8272                           
  8273                           ;main.c: 202:     i2c_reinicia_com();
  8274  0020A4  EC62  F011         	call	_i2c_reinicia_com	;wreg free
  8275                           
  8276                           ;main.c: 203:     i2c_envia_dato(0xAF);
  8277  0020A8  0EAF               	movlw	175
  8278  0020AA  EC57  F011         	call	_i2c_envia_dato
  8279                           
  8280                           ;main.c: 204:     dato = i2c_recibe_dato();
  8281  0020AE  EC2E  F011         	call	_i2c_recibe_dato	;wreg free
  8282  0020B2  6E06               	movwf	leer_eeprom@dato^0,c
  8283                           
  8284                           ;main.c: 205:     i2c_detener();
  8285  0020B4  EC6A  F011         	call	_i2c_detener	;wreg free
  8286  0020B8                     
  8287                           ;main.c: 206:     _delay((unsigned long)((10)*(4000000/4000.0)));
  8288  0020B8  0E0D               	movlw	13
  8289  0020BA  6E05               	movwf	??_leer_eeprom^0,c
  8290  0020BC  0EFC               	movlw	252
  8291  0020BE                     u2927:
  8292  0020BE  2EE8               	decfsz	wreg,f,c
  8293  0020C0  D7FE               	bra	u2927
  8294  0020C2  2E05               	decfsz	??_leer_eeprom^0,f,c
  8295  0020C4  D7FC               	bra	u2927
  8296  0020C6                     
  8297                           ;main.c: 208:     return dato;
  8298  0020C6  5006               	movf	leer_eeprom@dato^0,w,c
  8299  0020C8  0012               	return		;funcret
  8300  0020CA                     __end_of_leer_eeprom:
  8301                           	opt callstack 0
  8302                           
  8303 ;; *************** function _i2c_reinicia_com *****************
  8304 ;; Defined at:
  8305 ;;		line 37 in file "./I2C.h"
  8306 ;; Parameters:    Size  Location     Type
  8307 ;;		None
  8308 ;; Auto vars:     Size  Location     Type
  8309 ;;		None
  8310 ;; Return value:  Size  Location     Type
  8311 ;;                  1    wreg      void 
  8312 ;; Registers used:
  8313 ;;		wreg, status,2, status,0, cstack
  8314 ;; Tracked objects:
  8315 ;;		On entry : 0/0
  8316 ;;		On exit  : 0/0
  8317 ;;		Unchanged: 0/0
  8318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8319 ;;      Params:         0       0       0       0       0       0       0       0       0
  8320 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8321 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8322 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8323 ;;Total ram usage:        0 bytes
  8324 ;; Hardware stack levels used:    1
  8325 ;; Hardware stack levels required when called:    2
  8326 ;; This function calls:
  8327 ;;		_i2c_espera
  8328 ;; This function is called by:
  8329 ;;		_leer_rtc
  8330 ;;		_leer_eeprom
  8331 ;; This function uses a non-reentrant model
  8332 ;;
  8333                           
  8334                           	psect	text47
  8335  0022C4                     __ptext47:
  8336                           	opt callstack 0
  8337  0022C4                     _i2c_reinicia_com:
  8338                           	opt callstack 25
  8339  0022C4                     
  8340                           ;./I2C.h: 38:     i2c_espera();
  8341  0022C4  ECD9  F010         	call	_i2c_espera	;wreg free
  8342  0022C8                     
  8343                           ;./I2C.h: 39:     SSPCON2bits.RSEN = 1;
  8344  0022C8  82C5               	bsf	197,1,c	;volatile
  8345  0022CA  0012               	return		;funcret
  8346  0022CC                     __end_of_i2c_reinicia_com:
  8347                           	opt callstack 0
  8348                           
  8349 ;; *************** function _i2c_recibe_dato *****************
  8350 ;; Defined at:
  8351 ;;		line 68 in file "./I2C.h"
  8352 ;; Parameters:    Size  Location     Type
  8353 ;;		None
  8354 ;; Auto vars:     Size  Location     Type
  8355 ;;  datoleido       1    1[COMRAM] unsigned char 
  8356 ;; Return value:  Size  Location     Type
  8357 ;;                  1    wreg      unsigned char 
  8358 ;; Registers used:
  8359 ;;		wreg, status,2, status,0, cstack
  8360 ;; Tracked objects:
  8361 ;;		On entry : 0/0
  8362 ;;		On exit  : 0/0
  8363 ;;		Unchanged: 0/0
  8364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8365 ;;      Params:         0       0       0       0       0       0       0       0       0
  8366 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8367 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8368 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8369 ;;Total ram usage:        1 bytes
  8370 ;; Hardware stack levels used:    1
  8371 ;; Hardware stack levels required when called:    2
  8372 ;; This function calls:
  8373 ;;		_i2c_espera
  8374 ;; This function is called by:
  8375 ;;		_leer_rtc
  8376 ;;		_leer_eeprom
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           	psect	text48
  8381  00225C                     __ptext48:
  8382                           	opt callstack 0
  8383  00225C                     _i2c_recibe_dato:
  8384                           	opt callstack 25
  8385  00225C                     
  8386                           ;./I2C.h: 70:     unsigned char datoleido;;./I2C.h: 73:     i2c_espera();
  8387  00225C  ECD9  F010         	call	_i2c_espera	;wreg free
  8388  002260                     
  8389                           ;./I2C.h: 74:     SSPCON2bits.RCEN = 1;
  8390  002260  86C5               	bsf	197,3,c	;volatile
  8391                           
  8392                           ;./I2C.h: 76:     i2c_espera();
  8393  002262  ECD9  F010         	call	_i2c_espera	;wreg free
  8394  002266                     
  8395                           ;./I2C.h: 77:     datoleido = SSPBUF;
  8396  002266  CFC9 F002          	movff	4041,i2c_recibe_dato@datoleido	;volatile
  8397                           
  8398                           ;./I2C.h: 80:     i2c_espera();
  8399  00226A  ECD9  F010         	call	_i2c_espera	;wreg free
  8400  00226E                     
  8401                           ;./I2C.h: 82:     SSPCON2bits.ACKDT = 1;
  8402  00226E  8AC5               	bsf	197,5,c	;volatile
  8403  002270                     
  8404                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
  8405  002270  88C5               	bsf	197,4,c	;volatile
  8406  002272                     
  8407                           ;./I2C.h: 91:     return datoleido;
  8408  002272  5002               	movf	i2c_recibe_dato@datoleido^0,w,c
  8409  002274  0012               	return		;funcret
  8410  002276                     __end_of_i2c_recibe_dato:
  8411                           	opt callstack 0
  8412                           
  8413 ;; *************** function _i2c_inicia_com *****************
  8414 ;; Defined at:
  8415 ;;		line 28 in file "./I2C.h"
  8416 ;; Parameters:    Size  Location     Type
  8417 ;;		None
  8418 ;; Auto vars:     Size  Location     Type
  8419 ;;		None
  8420 ;; Return value:  Size  Location     Type
  8421 ;;                  1    wreg      void 
  8422 ;; Registers used:
  8423 ;;		wreg, status,2, status,0, cstack
  8424 ;; Tracked objects:
  8425 ;;		On entry : 0/0
  8426 ;;		On exit  : 0/0
  8427 ;;		Unchanged: 0/0
  8428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8429 ;;      Params:         0       0       0       0       0       0       0       0       0
  8430 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8432 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8433 ;;Total ram usage:        0 bytes
  8434 ;; Hardware stack levels used:    1
  8435 ;; Hardware stack levels required when called:    2
  8436 ;; This function calls:
  8437 ;;		_i2c_espera
  8438 ;; This function is called by:
  8439 ;;		_escribe_rtc
  8440 ;;		_leer_rtc
  8441 ;;		_escribe_eeprom
  8442 ;;		_leer_eeprom
  8443 ;; This function uses a non-reentrant model
  8444 ;;
  8445                           
  8446                           	psect	text49
  8447  0022CC                     __ptext49:
  8448                           	opt callstack 0
  8449  0022CC                     _i2c_inicia_com:
  8450                           	opt callstack 25
  8451  0022CC                     
  8452                           ;./I2C.h: 29:     i2c_espera();
  8453  0022CC  ECD9  F010         	call	_i2c_espera	;wreg free
  8454  0022D0                     
  8455                           ;./I2C.h: 30:     SSPCON2bits.SEN = 1;
  8456  0022D0  80C5               	bsf	197,0,c	;volatile
  8457  0022D2  0012               	return		;funcret
  8458  0022D4                     __end_of_i2c_inicia_com:
  8459                           	opt callstack 0
  8460                           
  8461 ;; *************** function _i2c_envia_dato *****************
  8462 ;; Defined at:
  8463 ;;		line 57 in file "./I2C.h"
  8464 ;; Parameters:    Size  Location     Type
  8465 ;;  dato            1    wreg     unsigned char 
  8466 ;; Auto vars:     Size  Location     Type
  8467 ;;  dato            1    1[COMRAM] unsigned char 
  8468 ;; Return value:  Size  Location     Type
  8469 ;;                  1    wreg      unsigned char 
  8470 ;; Registers used:
  8471 ;;		wreg, status,2, status,0, cstack
  8472 ;; Tracked objects:
  8473 ;;		On entry : 0/0
  8474 ;;		On exit  : 0/0
  8475 ;;		Unchanged: 0/0
  8476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8477 ;;      Params:         0       0       0       0       0       0       0       0       0
  8478 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8479 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8480 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8481 ;;Total ram usage:        1 bytes
  8482 ;; Hardware stack levels used:    1
  8483 ;; Hardware stack levels required when called:    2
  8484 ;; This function calls:
  8485 ;;		_i2c_espera
  8486 ;; This function is called by:
  8487 ;;		_escribe_rtc
  8488 ;;		_leer_rtc
  8489 ;;		_escribe_eeprom
  8490 ;;		_leer_eeprom
  8491 ;; This function uses a non-reentrant model
  8492 ;;
  8493                           
  8494                           	psect	text50
  8495  0022AE                     __ptext50:
  8496                           	opt callstack 0
  8497  0022AE                     _i2c_envia_dato:
  8498                           	opt callstack 25
  8499                           
  8500                           ;incstack = 0
  8501                           ;i2c_envia_dato@dato stored from wreg
  8502  0022AE  6E02               	movwf	i2c_envia_dato@dato^0,c
  8503  0022B0                     
  8504                           ;./I2C.h: 58:     i2c_espera();
  8505  0022B0  ECD9  F010         	call	_i2c_espera	;wreg free
  8506  0022B4                     
  8507                           ;./I2C.h: 59:     SSPBUF = dato;
  8508  0022B4  C002  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
  8509  0022B8  0012               	return		;funcret
  8510  0022BA                     __end_of_i2c_envia_dato:
  8511                           	opt callstack 0
  8512                           
  8513 ;; *************** function _i2c_detener *****************
  8514 ;; Defined at:
  8515 ;;		line 46 in file "./I2C.h"
  8516 ;; Parameters:    Size  Location     Type
  8517 ;;		None
  8518 ;; Auto vars:     Size  Location     Type
  8519 ;;		None
  8520 ;; Return value:  Size  Location     Type
  8521 ;;                  1    wreg      void 
  8522 ;; Registers used:
  8523 ;;		wreg, status,2, status,0, cstack
  8524 ;; Tracked objects:
  8525 ;;		On entry : 0/0
  8526 ;;		On exit  : 0/0
  8527 ;;		Unchanged: 0/0
  8528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8529 ;;      Params:         0       0       0       0       0       0       0       0       0
  8530 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8531 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8532 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8533 ;;Total ram usage:        0 bytes
  8534 ;; Hardware stack levels used:    1
  8535 ;; Hardware stack levels required when called:    2
  8536 ;; This function calls:
  8537 ;;		_i2c_espera
  8538 ;; This function is called by:
  8539 ;;		_escribe_rtc
  8540 ;;		_leer_rtc
  8541 ;;		_escribe_eeprom
  8542 ;;		_leer_eeprom
  8543 ;; This function uses a non-reentrant model
  8544 ;;
  8545                           
  8546                           	psect	text51
  8547  0022D4                     __ptext51:
  8548                           	opt callstack 0
  8549  0022D4                     _i2c_detener:
  8550                           	opt callstack 25
  8551  0022D4                     
  8552                           ;./I2C.h: 47:     i2c_espera();
  8553  0022D4  ECD9  F010         	call	_i2c_espera	;wreg free
  8554  0022D8                     
  8555                           ;./I2C.h: 48:     SSPCON2bits.PEN = 1;
  8556  0022D8  84C5               	bsf	197,2,c	;volatile
  8557  0022DA  0012               	return		;funcret
  8558  0022DC                     __end_of_i2c_detener:
  8559                           	opt callstack 0
  8560                           
  8561 ;; *************** function _i2c_espera *****************
  8562 ;; Defined at:
  8563 ;;		line 20 in file "./I2C.h"
  8564 ;; Parameters:    Size  Location     Type
  8565 ;;		None
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;		None
  8568 ;; Return value:  Size  Location     Type
  8569 ;;                  1    wreg      void 
  8570 ;; Registers used:
  8571 ;;		wreg, status,2, status,0
  8572 ;; Tracked objects:
  8573 ;;		On entry : 0/0
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8577 ;;      Params:         0       0       0       0       0       0       0       0       0
  8578 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8579 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8580 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8581 ;;Total ram usage:        1 bytes
  8582 ;; Hardware stack levels used:    1
  8583 ;; Hardware stack levels required when called:    1
  8584 ;; This function calls:
  8585 ;;		Nothing
  8586 ;; This function is called by:
  8587 ;;		_i2c_inicia_com
  8588 ;;		_i2c_reinicia_com
  8589 ;;		_i2c_detener
  8590 ;;		_i2c_envia_dato
  8591 ;;		_i2c_recibe_dato
  8592 ;; This function uses a non-reentrant model
  8593 ;;
  8594                           
  8595                           	psect	text52
  8596  0021B2                     __ptext52:
  8597                           	opt callstack 0
  8598  0021B2                     _i2c_espera:
  8599                           	opt callstack 25
  8600  0021B2                     l2575:
  8601  0021B2  CFC5 F001          	movff	4037,??_i2c_espera	;volatile
  8602  0021B6  0E1F               	movlw	31
  8603  0021B8  1601               	andwf	??_i2c_espera^0,f,c
  8604  0021BA  A4D8               	btfss	status,2,c
  8605  0021BC  EFE2  F010         	goto	u1661
  8606  0021C0  EFE4  F010         	goto	u1660
  8607  0021C4                     u1661:
  8608  0021C4  EFD9  F010         	goto	l2575
  8609  0021C8                     u1660:
  8610  0021C8  B4C7               	btfsc	199,2,c	;volatile
  8611  0021CA  EFE9  F010         	goto	u1671
  8612  0021CE  EFEB  F010         	goto	u1670
  8613  0021D2                     u1671:
  8614  0021D2  EFD9  F010         	goto	l2575
  8615  0021D6                     u1670:
  8616  0021D6  0012               	return		;funcret
  8617  0021D8                     __end_of_i2c_espera:
  8618                           	opt callstack 0
  8619                           
  8620 ;; *************** function _inicializarObjetos *****************
  8621 ;; Defined at:
  8622 ;;		line 140 in file "main.c"
  8623 ;; Parameters:    Size  Location     Type
  8624 ;;		None
  8625 ;; Auto vars:     Size  Location     Type
  8626 ;;  i               2    6[COMRAM] int 
  8627 ;; Return value:  Size  Location     Type
  8628 ;;                  1    wreg      void 
  8629 ;; Registers used:
  8630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8631 ;; Tracked objects:
  8632 ;;		On entry : 0/0
  8633 ;;		On exit  : 0/0
  8634 ;;		Unchanged: 0/0
  8635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8636 ;;      Params:         0       0       0       0       0       0       0       0       0
  8637 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8638 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8639 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8640 ;;Total ram usage:        2 bytes
  8641 ;; Hardware stack levels used:    1
  8642 ;; Hardware stack levels required when called:    2
  8643 ;; This function calls:
  8644 ;;		___wmul
  8645 ;; This function is called by:
  8646 ;;		_main
  8647 ;; This function uses a non-reentrant model
  8648 ;;
  8649                           
  8650                           	psect	text53
  8651  0019A0                     __ptext53:
  8652                           	opt callstack 0
  8653  0019A0                     _inicializarObjetos:
  8654                           	opt callstack 28
  8655  0019A0                     
  8656                           ;main.c: 142:     for (int i = 0; i < 24; i++) {
  8657  0019A0  0E00               	movlw	0
  8658  0019A2  6E08               	movwf	(inicializarObjetos@i+1)^0,c
  8659  0019A4  0E00               	movlw	0
  8660  0019A6  6E07               	movwf	inicializarObjetos@i^0,c
  8661  0019A8                     l3481:
  8662                           
  8663                           ;main.c: 143:         horarios[i].hora = i;
  8664  0019A8  C007  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  8665  0019AC  C008  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  8666  0019B0  0E00               	movlw	0
  8667  0019B2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8668  0019B4  0E03               	movlw	3
  8669  0019B6  6E03               	movwf	___wmul@multiplicand^0,c
  8670  0019B8  ECEC  F010         	call	___wmul	;wreg free
  8671  0019BC  0E00               	movlw	low _horarios
  8672  0019BE  2401               	addwf	?___wmul^0,w,c
  8673  0019C0  6ED9               	movwf	fsr2l,c
  8674  0019C2  0E01               	movlw	high _horarios
  8675  0019C4  2002               	addwfc	(?___wmul+1)^0,w,c
  8676  0019C6  6EDA               	movwf	fsr2h,c
  8677  0019C8  C007  FFDF         	movff	inicializarObjetos@i,indf2
  8678                           
  8679                           ;main.c: 144:         horarios[i].regar = 0;
  8680  0019CC  C007  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  8681  0019D0  C008  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  8682  0019D4  0E00               	movlw	0
  8683  0019D6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8684  0019D8  0E03               	movlw	3
  8685  0019DA  6E03               	movwf	___wmul@multiplicand^0,c
  8686  0019DC  ECEC  F010         	call	___wmul	;wreg free
  8687  0019E0  0E01               	movlw	low (_horarios+1)
  8688  0019E2  2401               	addwf	?___wmul^0,w,c
  8689  0019E4  6ED9               	movwf	fsr2l,c
  8690  0019E6  0E01               	movlw	high (_horarios+1)
  8691  0019E8  2002               	addwfc	(?___wmul+1)^0,w,c
  8692  0019EA  6EDA               	movwf	fsr2h,c
  8693  0019EC  0E00               	movlw	0
  8694  0019EE  6EDF               	movwf	indf2,c
  8695                           
  8696                           ;main.c: 145:         horarios[i].tiempoRegar = 15;
  8697  0019F0  C007  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  8698  0019F4  C008  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  8699  0019F8  0E00               	movlw	0
  8700  0019FA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8701  0019FC  0E03               	movlw	3
  8702  0019FE  6E03               	movwf	___wmul@multiplicand^0,c
  8703  001A00  ECEC  F010         	call	___wmul	;wreg free
  8704  001A04  0E02               	movlw	low (_horarios+2)
  8705  001A06  2401               	addwf	?___wmul^0,w,c
  8706  001A08  6ED9               	movwf	fsr2l,c
  8707  001A0A  0E01               	movlw	high (_horarios+2)
  8708  001A0C  2002               	addwfc	(?___wmul+1)^0,w,c
  8709  001A0E  6EDA               	movwf	fsr2h,c
  8710  001A10  0E0F               	movlw	15
  8711  001A12  6EDF               	movwf	indf2,c
  8712  001A14                     
  8713                           ;main.c: 146:     }
  8714  001A14  4A07               	infsnz	inicializarObjetos@i^0,f,c
  8715  001A16  2A08               	incf	(inicializarObjetos@i+1)^0,f,c
  8716  001A18  BE08               	btfsc	(inicializarObjetos@i+1)^0,7,c
  8717  001A1A  EF18  F00D         	goto	u2701
  8718  001A1E  5008               	movf	(inicializarObjetos@i+1)^0,w,c
  8719  001A20  E109               	bnz	u2700
  8720  001A22  0E18               	movlw	24
  8721  001A24  5C07               	subwf	inicializarObjetos@i^0,w,c
  8722  001A26  A0D8               	btfss	status,0,c
  8723  001A28  EF18  F00D         	goto	u2701
  8724  001A2C  EF1A  F00D         	goto	u2700
  8725  001A30                     u2701:
  8726  001A30  EFD4  F00C         	goto	l3481
  8727  001A34                     u2700:
  8728  001A34  0012               	return		;funcret
  8729  001A36                     __end_of_inicializarObjetos:
  8730                           	opt callstack 0
  8731                           
  8732 ;; *************** function ___wmul *****************
  8733 ;; Defined at:
  8734 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  8735 ;; Parameters:    Size  Location     Type
  8736 ;;  multiplier      2    0[COMRAM] unsigned int 
  8737 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8738 ;; Auto vars:     Size  Location     Type
  8739 ;;  product         2    4[COMRAM] unsigned int 
  8740 ;; Return value:  Size  Location     Type
  8741 ;;                  2    0[COMRAM] unsigned int 
  8742 ;; Registers used:
  8743 ;;		wreg, status,2, status,0, prodl, prodh
  8744 ;; Tracked objects:
  8745 ;;		On entry : 0/0
  8746 ;;		On exit  : 0/0
  8747 ;;		Unchanged: 0/0
  8748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8749 ;;      Params:         4       0       0       0       0       0       0       0       0
  8750 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8751 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8752 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8753 ;;Total ram usage:        6 bytes
  8754 ;; Hardware stack levels used:    1
  8755 ;; Hardware stack levels required when called:    1
  8756 ;; This function calls:
  8757 ;;		Nothing
  8758 ;; This function is called by:
  8759 ;;		_inicializarObjetos
  8760 ;;		_escribeHorariosMemoria
  8761 ;;		_leeHorariosMemoria
  8762 ;;		_encenderBombas
  8763 ;;		_restablecerDatosSensor
  8764 ;;		_lecturaWifi
  8765 ;;		_lecturaAnalogaSensores
  8766 ;;		_dameDatosSistema
  8767 ;;		_mostrarDatosSensores
  8768 ;;		_mostrarDatosSensoresWIFI
  8769 ;; This function uses a non-reentrant model
  8770 ;;
  8771                           
  8772                           	psect	text54
  8773  0021D8                     __ptext54:
  8774                           	opt callstack 0
  8775  0021D8                     ___wmul:
  8776                           	opt callstack 26
  8777  0021D8  5001               	movf	___wmul@multiplier^0,w,c
  8778  0021DA  0203               	mulwf	___wmul@multiplicand^0,c
  8779  0021DC  CFF3 F005          	movff	prodl,___wmul@product
  8780  0021E0  CFF4 F006          	movff	prodh,___wmul@product+1
  8781  0021E4  5001               	movf	___wmul@multiplier^0,w,c
  8782  0021E6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8783  0021E8  50F3               	movf	243,w,c
  8784  0021EA  2606               	addwf	(___wmul@product+1)^0,f,c
  8785  0021EC  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8786  0021EE  0203               	mulwf	___wmul@multiplicand^0,c
  8787  0021F0  50F3               	movf	243,w,c
  8788  0021F2  2606               	addwf	(___wmul@product+1)^0,f,c
  8789  0021F4  C005  F001         	movff	___wmul@product,?___wmul
  8790  0021F8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8791  0021FC  0012               	return		;funcret
  8792  0021FE                     __end_of___wmul:
  8793                           	opt callstack 0
  8794                           
  8795 ;; *************** function _i2c_iniciar *****************
  8796 ;; Defined at:
  8797 ;;		line 4 in file "./I2C.h"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;		None
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;		None
  8802 ;; Return value:  Size  Location     Type
  8803 ;;                  1    wreg      void 
  8804 ;; Registers used:
  8805 ;;		wreg, status,2
  8806 ;; Tracked objects:
  8807 ;;		On entry : 0/0
  8808 ;;		On exit  : 0/0
  8809 ;;		Unchanged: 0/0
  8810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8811 ;;      Params:         0       0       0       0       0       0       0       0       0
  8812 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8813 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8814 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8815 ;;Total ram usage:        0 bytes
  8816 ;; Hardware stack levels used:    1
  8817 ;; Hardware stack levels required when called:    1
  8818 ;; This function calls:
  8819 ;;		Nothing
  8820 ;; This function is called by:
  8821 ;;		_main
  8822 ;; This function uses a non-reentrant model
  8823 ;;
  8824                           
  8825                           	psect	text55
  8826  00228C                     __ptext55:
  8827                           	opt callstack 0
  8828  00228C                     _i2c_iniciar:
  8829                           	opt callstack 29
  8830  00228C                     
  8831                           ;./I2C.h: 5:     TRISBbits.RB0 = 1;
  8832  00228C  8093               	bsf	147,0,c	;volatile
  8833                           
  8834                           ;./I2C.h: 6:     TRISBbits.RB1 = 1;
  8835  00228E  8293               	bsf	147,1,c	;volatile
  8836  002290                     
  8837                           ;./I2C.h: 7:     SSPSTAT = 0b10000000;
  8838  002290  0E80               	movlw	128
  8839  002292  6EC7               	movwf	199,c	;volatile
  8840                           
  8841                           ;./I2C.h: 8:     SSPCON1 = 0b00101000;
  8842  002294  0E28               	movlw	40
  8843  002296  6EC6               	movwf	198,c	;volatile
  8844                           
  8845                           ;./I2C.h: 9:     SSPCON2 = 0b00000000;
  8846  002298  0E00               	movlw	0
  8847  00229A  6EC5               	movwf	197,c	;volatile
  8848                           
  8849                           ;./I2C.h: 10:     SSPADD = 9;
  8850  00229C  0E09               	movlw	9
  8851  00229E  6EC8               	movwf	200,c	;volatile
  8852  0022A0  0012               	return		;funcret
  8853  0022A2                     __end_of_i2c_iniciar:
  8854                           	opt callstack 0
  8855                           
  8856 ;; *************** function _configurarAdc *****************
  8857 ;; Defined at:
  8858 ;;		line 121 in file "main.c"
  8859 ;; Parameters:    Size  Location     Type
  8860 ;;		None
  8861 ;; Auto vars:     Size  Location     Type
  8862 ;;		None
  8863 ;; Return value:  Size  Location     Type
  8864 ;;                  1    wreg      void 
  8865 ;; Registers used:
  8866 ;;		wreg, status,2
  8867 ;; Tracked objects:
  8868 ;;		On entry : 0/0
  8869 ;;		On exit  : 0/0
  8870 ;;		Unchanged: 0/0
  8871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8872 ;;      Params:         0       0       0       0       0       0       0       0       0
  8873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8874 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8875 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8876 ;;Total ram usage:        0 bytes
  8877 ;; Hardware stack levels used:    1
  8878 ;; Hardware stack levels required when called:    1
  8879 ;; This function calls:
  8880 ;;		Nothing
  8881 ;; This function is called by:
  8882 ;;		_main
  8883 ;; This function uses a non-reentrant model
  8884 ;;
  8885                           
  8886                           	psect	text56
  8887  0022BA                     __ptext56:
  8888                           	opt callstack 0
  8889  0022BA                     _configurarAdc:
  8890                           	opt callstack 29
  8891  0022BA                     
  8892                           ;main.c: 122:     ADCON1 = 0b00000000;
  8893  0022BA  0E00               	movlw	0
  8894  0022BC  6EC1               	movwf	193,c	;volatile
  8895                           
  8896                           ;main.c: 123:     ADCON2 = 0b10100101;
  8897  0022BE  0EA5               	movlw	165
  8898  0022C0  6EC0               	movwf	192,c	;volatile
  8899  0022C2  0012               	return		;funcret
  8900  0022C4                     __end_of_configurarAdc:
  8901                           	opt callstack 0
  8902                           
  8903 ;; *************** function _UART_init *****************
  8904 ;; Defined at:
  8905 ;;		line 12 in file "./UART.h"
  8906 ;; Parameters:    Size  Location     Type
  8907 ;;  BAUD            4   14[COMRAM] long 
  8908 ;; Auto vars:     Size  Location     Type
  8909 ;;  frecuenciaCr    4    0        long 
  8910 ;; Return value:  Size  Location     Type
  8911 ;;                  1    wreg      void 
  8912 ;; Registers used:
  8913 ;;		wreg, status,2, status,0, cstack
  8914 ;; Tracked objects:
  8915 ;;		On entry : 0/0
  8916 ;;		On exit  : 0/0
  8917 ;;		Unchanged: 0/0
  8918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8919 ;;      Params:         4       0       0       0       0       0       0       0       0
  8920 ;;      Locals:         8       0       0       0       0       0       0       0       0
  8921 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8922 ;;      Totals:        12       0       0       0       0       0       0       0       0
  8923 ;;Total ram usage:       12 bytes
  8924 ;; Hardware stack levels used:    1
  8925 ;; Hardware stack levels required when called:    2
  8926 ;; This function calls:
  8927 ;;		___aldiv
  8928 ;; This function is called by:
  8929 ;;		_main
  8930 ;; This function uses a non-reentrant model
  8931 ;;
  8932                           
  8933                           	psect	text57
  8934  001AC0                     __ptext57:
  8935                           	opt callstack 0
  8936  001AC0                     _UART_init:
  8937                           	opt callstack 28
  8938  001AC0                     
  8939                           ;./UART.h: 14:     TRISCbits.TRISC6 = 0;
  8940  001AC0  9C94               	bcf	148,6,c	;volatile
  8941  001AC2                     
  8942                           ;./UART.h: 15:     TRISCbits.TRISC7 = 1;
  8943  001AC2  8E94               	bsf	148,7,c	;volatile
  8944  001AC4                     
  8945                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  8946  001AC4  0E10               	movlw	16
  8947  001AC6  6E05               	movwf	___aldiv@divisor^0,c
  8948  001AC8  0E00               	movlw	0
  8949  001ACA  6E06               	movwf	(___aldiv@divisor+1)^0,c
  8950  001ACC  0E00               	movlw	0
  8951  001ACE  6E07               	movwf	(___aldiv@divisor+2)^0,c
  8952  001AD0  0E00               	movlw	0
  8953  001AD2  6E08               	movwf	(___aldiv@divisor+3)^0,c
  8954  001AD4  0E00               	movlw	0
  8955  001AD6  6E01               	movwf	___aldiv@dividend^0,c
  8956  001AD8  0E09               	movlw	9
  8957  001ADA  6E02               	movwf	(___aldiv@dividend+1)^0,c
  8958  001ADC  0E3D               	movlw	61
  8959  001ADE  6E03               	movwf	(___aldiv@dividend+2)^0,c
  8960  001AE0  0E00               	movlw	0
  8961  001AE2  6E04               	movwf	(___aldiv@dividend+3)^0,c
  8962  001AE4  EC0E  F008         	call	___aldiv	;wreg free
  8963  001AE8  C001  F017         	movff	?___aldiv,_UART_init$1778
  8964  001AEC  C002  F018         	movff	?___aldiv+1,_UART_init$1778+1
  8965  001AF0  C003  F019         	movff	?___aldiv+2,_UART_init$1778+2
  8966  001AF4  C004  F01A         	movff	?___aldiv+3,_UART_init$1778+3
  8967  001AF8                     
  8968                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  8969  001AF8  C017  F001         	movff	_UART_init$1778,___aldiv@dividend
  8970  001AFC  C018  F002         	movff	_UART_init$1778+1,___aldiv@dividend+1
  8971  001B00  C019  F003         	movff	_UART_init$1778+2,___aldiv@dividend+2
  8972  001B04  C01A  F004         	movff	_UART_init$1778+3,___aldiv@dividend+3
  8973  001B08  C00F  F005         	movff	UART_init@BAUD,___aldiv@divisor
  8974  001B0C  C010  F006         	movff	UART_init@BAUD+1,___aldiv@divisor+1
  8975  001B10  C011  F007         	movff	UART_init@BAUD+2,___aldiv@divisor+2
  8976  001B14  C012  F008         	movff	UART_init@BAUD+3,___aldiv@divisor+3
  8977  001B18  EC0E  F008         	call	___aldiv	;wreg free
  8978  001B1C  0401               	decf	?___aldiv^0,w,c
  8979  001B1E  6EAF               	movwf	175,c	;volatile
  8980  001B20                     
  8981                           ;./UART.h: 21:     TXSTAbits.BRGH = 1;
  8982  001B20  84AC               	bsf	172,2,c	;volatile
  8983  001B22                     
  8984                           ;./UART.h: 22:     TXSTAbits.SYNC = 0;
  8985  001B22  98AC               	bcf	172,4,c	;volatile
  8986  001B24                     
  8987                           ;./UART.h: 23:     RCSTAbits.SPEN = 1;
  8988  001B24  8EAB               	bsf	171,7,c	;volatile
  8989  001B26                     
  8990                           ;./UART.h: 26:     TXSTAbits.TX9 = 0;
  8991  001B26  9CAC               	bcf	172,6,c	;volatile
  8992  001B28                     
  8993                           ;./UART.h: 27:     TXSTAbits.TXEN = 1;
  8994  001B28  8AAC               	bsf	172,5,c	;volatile
  8995  001B2A                     
  8996                           ;./UART.h: 30:     RCSTAbits.RC9 = 0;
  8997  001B2A  9CAB               	bcf	171,6,c	;volatile
  8998  001B2C                     
  8999                           ;./UART.h: 31:     RCSTAbits.CREN = 1;
  9000  001B2C  88AB               	bsf	171,4,c	;volatile
  9001  001B2E  0012               	return		;funcret
  9002  001B30                     __end_of_UART_init:
  9003                           	opt callstack 0
  9004                           
  9005 ;; *************** function ___aldiv *****************
  9006 ;; Defined at:
  9007 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;  dividend        4    0[COMRAM] long 
  9010 ;;  divisor         4    4[COMRAM] long 
  9011 ;; Auto vars:     Size  Location     Type
  9012 ;;  quotient        4   10[COMRAM] long 
  9013 ;;  sign            1    9[COMRAM] unsigned char 
  9014 ;;  counter         1    8[COMRAM] unsigned char 
  9015 ;; Return value:  Size  Location     Type
  9016 ;;                  4    0[COMRAM] long 
  9017 ;; Registers used:
  9018 ;;		wreg, status,2, status,0
  9019 ;; Tracked objects:
  9020 ;;		On entry : 0/0
  9021 ;;		On exit  : 0/0
  9022 ;;		Unchanged: 0/0
  9023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9024 ;;      Params:         8       0       0       0       0       0       0       0       0
  9025 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9026 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9027 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9028 ;;Total ram usage:       14 bytes
  9029 ;; Hardware stack levels used:    1
  9030 ;; Hardware stack levels required when called:    1
  9031 ;; This function calls:
  9032 ;;		Nothing
  9033 ;; This function is called by:
  9034 ;;		_UART_init
  9035 ;; This function uses a non-reentrant model
  9036 ;;
  9037                           
  9038                           	psect	text58
  9039  00101C                     __ptext58:
  9040                           	opt callstack 0
  9041  00101C                     ___aldiv:
  9042                           	opt callstack 28
  9043  00101C  0E00               	movlw	0
  9044  00101E  6E0A               	movwf	___aldiv@sign^0,c
  9045  001020  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  9046  001022  EF17  F008         	goto	u2640
  9047  001026  EF15  F008         	goto	u2641
  9048  00102A                     u2641:
  9049  00102A  EF21  F008         	goto	l3409
  9050  00102E                     u2640:
  9051  00102E  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  9052  001030  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  9053  001032  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  9054  001034  6C05               	negf	___aldiv@divisor^0,c
  9055  001036  0E00               	movlw	0
  9056  001038  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  9057  00103A  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  9058  00103C  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  9059  00103E  0E01               	movlw	1
  9060  001040  6E0A               	movwf	___aldiv@sign^0,c
  9061  001042                     l3409:
  9062  001042  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  9063  001044  EF28  F008         	goto	u2650
  9064  001048  EF26  F008         	goto	u2651
  9065  00104C                     u2651:
  9066  00104C  EF32  F008         	goto	l3415
  9067  001050                     u2650:
  9068  001050  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  9069  001052  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  9070  001054  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  9071  001056  6C01               	negf	___aldiv@dividend^0,c
  9072  001058  0E00               	movlw	0
  9073  00105A  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  9074  00105C  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  9075  00105E  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  9076  001060  0E01               	movlw	1
  9077  001062  1A0A               	xorwf	___aldiv@sign^0,f,c
  9078  001064                     l3415:
  9079  001064  0E00               	movlw	0
  9080  001066  6E0B               	movwf	___aldiv@quotient^0,c
  9081  001068  0E00               	movlw	0
  9082  00106A  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  9083  00106C  0E00               	movlw	0
  9084  00106E  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  9085  001070  0E00               	movlw	0
  9086  001072  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  9087  001074  5005               	movf	___aldiv@divisor^0,w,c
  9088  001076  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  9089  001078  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  9090  00107A  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  9091  00107C  B4D8               	btfsc	status,2,c
  9092  00107E  EF43  F008         	goto	u2661
  9093  001082  EF45  F008         	goto	u2660
  9094  001086                     u2661:
  9095  001086  EF7B  F008         	goto	l3437
  9096  00108A                     u2660:
  9097  00108A  0E01               	movlw	1
  9098  00108C  6E09               	movwf	___aldiv@counter^0,c
  9099  00108E  EF4F  F008         	goto	l3423
  9100  001092                     l3421:
  9101  001092  90D8               	bcf	status,0,c
  9102  001094  3605               	rlcf	___aldiv@divisor^0,f,c
  9103  001096  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  9104  001098  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  9105  00109A  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  9106  00109C  2A09               	incf	___aldiv@counter^0,f,c
  9107  00109E                     l3423:
  9108  00109E  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  9109  0010A0  EF54  F008         	goto	u2671
  9110  0010A4  EF56  F008         	goto	u2670
  9111  0010A8                     u2671:
  9112  0010A8  EF49  F008         	goto	l3421
  9113  0010AC                     u2670:
  9114  0010AC                     l3425:
  9115  0010AC  90D8               	bcf	status,0,c
  9116  0010AE  360B               	rlcf	___aldiv@quotient^0,f,c
  9117  0010B0  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  9118  0010B2  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  9119  0010B4  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  9120  0010B6  5005               	movf	___aldiv@divisor^0,w,c
  9121  0010B8  5C01               	subwf	___aldiv@dividend^0,w,c
  9122  0010BA  5006               	movf	(___aldiv@divisor+1)^0,w,c
  9123  0010BC  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  9124  0010BE  5007               	movf	(___aldiv@divisor+2)^0,w,c
  9125  0010C0  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  9126  0010C2  5008               	movf	(___aldiv@divisor+3)^0,w,c
  9127  0010C4  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  9128  0010C6  A0D8               	btfss	status,0,c
  9129  0010C8  EF68  F008         	goto	u2681
  9130  0010CC  EF6A  F008         	goto	u2680
  9131  0010D0                     u2681:
  9132  0010D0  EF73  F008         	goto	l3433
  9133  0010D4                     u2680:
  9134  0010D4  5005               	movf	___aldiv@divisor^0,w,c
  9135  0010D6  5E01               	subwf	___aldiv@dividend^0,f,c
  9136  0010D8  5006               	movf	(___aldiv@divisor+1)^0,w,c
  9137  0010DA  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  9138  0010DC  5007               	movf	(___aldiv@divisor+2)^0,w,c
  9139  0010DE  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  9140  0010E0  5008               	movf	(___aldiv@divisor+3)^0,w,c
  9141  0010E2  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  9142  0010E4  800B               	bsf	___aldiv@quotient^0,0,c
  9143  0010E6                     l3433:
  9144  0010E6  90D8               	bcf	status,0,c
  9145  0010E8  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  9146  0010EA  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  9147  0010EC  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  9148  0010EE  3205               	rrcf	___aldiv@divisor^0,f,c
  9149  0010F0  2E09               	decfsz	___aldiv@counter^0,f,c
  9150  0010F2  EF56  F008         	goto	l3425
  9151  0010F6                     l3437:
  9152  0010F6  500A               	movf	___aldiv@sign^0,w,c
  9153  0010F8  B4D8               	btfsc	status,2,c
  9154  0010FA  EF81  F008         	goto	u2691
  9155  0010FE  EF83  F008         	goto	u2690
  9156  001102                     u2691:
  9157  001102  EF8B  F008         	goto	l3441
  9158  001106                     u2690:
  9159  001106  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  9160  001108  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  9161  00110A  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  9162  00110C  6C0B               	negf	___aldiv@quotient^0,c
  9163  00110E  0E00               	movlw	0
  9164  001110  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  9165  001112  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  9166  001114  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  9167  001116                     l3441:
  9168  001116  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  9169  00111A  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  9170  00111E  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  9171  001122  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  9172  001126  0012               	return		;funcret
  9173  001128                     __end_of___aldiv:
  9174                           	opt callstack 0
  9175                           
  9176 ;; *************** function _desbordamiento *****************
  9177 ;; Defined at:
  9178 ;;		line 86 in file "main.c"
  9179 ;; Parameters:    Size  Location     Type
  9180 ;;		None
  9181 ;; Auto vars:     Size  Location     Type
  9182 ;;		None
  9183 ;; Return value:  Size  Location     Type
  9184 ;;                  1    wreg      void 
  9185 ;; Registers used:
  9186 ;;		wreg, status,2, status,0
  9187 ;; Tracked objects:
  9188 ;;		On entry : 0/0
  9189 ;;		On exit  : 0/0
  9190 ;;		Unchanged: 0/0
  9191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9192 ;;      Params:         0       0       0       0       0       0       0       0       0
  9193 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9194 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9195 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9196 ;;Total ram usage:        0 bytes
  9197 ;; Hardware stack levels used:    1
  9198 ;; This function calls:
  9199 ;;		Nothing
  9200 ;; This function is called by:
  9201 ;;		Interrupt level 2
  9202 ;; This function uses a non-reentrant model
  9203 ;;
  9204                           
  9205                           	psect	intcode
  9206  000008                     __pintcode:
  9207                           	opt callstack 0
  9208  000008                     _desbordamiento:
  9209                           	opt callstack 20
  9210                           
  9211                           ;incstack = 0
  9212  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9213  00000A  ED00  F00E         	call	int_func,f	;refresh shadow registers
  9214                           
  9215                           	psect	intcode_body
  9216  001C00                     __pintcode_body:
  9217                           	opt callstack 20
  9218  001C00                     int_func:
  9219                           	opt callstack 20
  9220  001C00  0006               	pop		; remove dummy address from shadow register refresh
  9221  001C02                     
  9222                           ;main.c: 88:     if (INTCONbits.TMR0IF) {
  9223  001C02  A4F2               	btfss	242,2,c	;volatile
  9224  001C04  EF06  F00E         	goto	i2u277_41
  9225  001C08  EF08  F00E         	goto	i2u277_40
  9226  001C0C                     i2u277_41:
  9227  001C0C  EF25  F00E         	goto	i2l3587
  9228  001C10                     i2u277_40:
  9229  001C10                     
  9230                           ;main.c: 90:         if (esperandoDatos) {
  9231  001C10  505E               	movf	_esperandoDatos^0,w,c
  9232  001C12  B4D8               	btfsc	status,2,c
  9233  001C14  EF0E  F00E         	goto	i2u278_41
  9234  001C18  EF10  F00E         	goto	i2u278_40
  9235  001C1C                     i2u278_41:
  9236  001C1C  EF1D  F00E         	goto	i2l3583
  9237  001C20                     i2u278_40:
  9238  001C20                     
  9239                           ;main.c: 92:             tiempoInactividadTrans++;
  9240  001C20  0100               	movlb	0	; () banked
  9241  001C22  2B8D               	incf	_tiempoInactividadTrans& (0+255),f,b
  9242  001C24                     
  9243                           ; BSR set to: 0
  9244                           ;main.c: 94:             if (tiempoInactividadTrans == 2)
  9245  001C24  0E02               	movlw	2
  9246  001C26  198D               	xorwf	_tiempoInactividadTrans& (0+255),w,b
  9247  001C28  A4D8               	btfss	status,2,c
  9248  001C2A  EF19  F00E         	goto	i2u279_41
  9249  001C2E  EF1B  F00E         	goto	i2u279_40
  9250  001C32                     i2u279_41:
  9251  001C32  EF1D  F00E         	goto	i2l3583
  9252  001C36                     i2u279_40:
  9253  001C36                     
  9254                           ; BSR set to: 0
  9255                           ;main.c: 95:                 esperaDatoConcluida = 1;
  9256  001C36  0E01               	movlw	1
  9257  001C38  6F8B               	movwf	_esperaDatoConcluida& (0+255),b
  9258  001C3A                     i2l3583:
  9259                           
  9260                           ;main.c: 100:         INTCONbits.TMR0IF = 0;
  9261  001C3A  94F2               	bcf	242,2,c	;volatile
  9262  001C3C                     
  9263                           ;main.c: 101:         TMR0 = VALOR_TIMER0;
  9264  001C3C  C0FA  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  9265  001C40  C0FB  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  9266                           
  9267                           ;main.c: 102:         overflowTimer = 1;
  9268  001C44  0E01               	movlw	1
  9269  001C46  0100               	movlb	0	; () banked
  9270  001C48  6F86               	movwf	_overflowTimer& (0+255),b
  9271  001C4A                     i2l3587:
  9272                           
  9273                           ;main.c: 106:     if (PIR1bits.RCIF) {
  9274  001C4A  AA9E               	btfss	158,5,c	;volatile
  9275  001C4C  EF2A  F00E         	goto	i2u280_41
  9276  001C50  EF2C  F00E         	goto	i2u280_40
  9277  001C54                     i2u280_41:
  9278  001C54  EF31  F00E         	goto	i2l195
  9279  001C58                     i2u280_40:
  9280  001C58                     
  9281                           ;main.c: 108:         byteUart = RCREG;
  9282  001C58  CFAE F08C          	movff	4014,_byteUart	;volatile
  9283  001C5C                     
  9284                           ;main.c: 109:         datoRecibido = 1;
  9285  001C5C  0E01               	movlw	1
  9286  001C5E  0100               	movlb	0	; () banked
  9287  001C60  6F87               	movwf	_datoRecibido& (0+255),b
  9288  001C62                     i2l195:
  9289  001C62  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9290  001C64  0011               	retfie		f
  9291  001C66                     __end_of_desbordamiento:
  9292                           	opt callstack 0
  9293                           
  9294                           	psect	rparam
  9295  0000                     
  9296                           	psect	temp
  9297  00005F                     btemp:
  9298                           	opt callstack 0
  9299  00005F                     	ds	1
  9300  0000                     int$flags	set	btemp
  9301  0000                     wtemp8	set	btemp+1
  9302  0000                     ttemp5	set	btemp+1
  9303  0000                     ttemp6	set	btemp+4
  9304  0000                     ttemp7	set	btemp+8
  9305                           tosu	equ	0xFFF
  9306                           tosh	equ	0xFFE
  9307                           tosl	equ	0xFFD
  9308                           stkptr	equ	0xFFC
  9309                           pclatu	equ	0xFFB
  9310                           pclath	equ	0xFFA
  9311                           pcl	equ	0xFF9
  9312                           tblptru	equ	0xFF8
  9313                           tblptrh	equ	0xFF7
  9314                           tblptrl	equ	0xFF6
  9315                           tablat	equ	0xFF5
  9316                           prodh	equ	0xFF4
  9317                           prodl	equ	0xFF3
  9318                           indf0	equ	0xFEF
  9319                           postinc0	equ	0xFEE
  9320                           postdec0	equ	0xFED
  9321                           preinc0	equ	0xFEC
  9322                           plusw0	equ	0xFEB
  9323                           fsr0h	equ	0xFEA
  9324                           fsr0l	equ	0xFE9
  9325                           wreg	equ	0xFE8
  9326                           indf1	equ	0xFE7
  9327                           postinc1	equ	0xFE6
  9328                           postdec1	equ	0xFE5
  9329                           preinc1	equ	0xFE4
  9330                           plusw1	equ	0xFE3
  9331                           fsr1h	equ	0xFE2
  9332                           fsr1l	equ	0xFE1
  9333                           bsr	equ	0xFE0
  9334                           indf2	equ	0xFDF
  9335                           postinc2	equ	0xFDE
  9336                           postdec2	equ	0xFDD
  9337                           preinc2	equ	0xFDC
  9338                           plusw2	equ	0xFDB
  9339                           fsr2h	equ	0xFDA
  9340                           fsr2l	equ	0xFD9
  9341                           status	equ	0xFD8


Data Sizes:
    Strings     1079
    Constant    0
    Data        4
    BSS         151
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160     76     158
    BANK1           256      0      72
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_35(CODE[29]), STR_34(CODE[32]), STR_33(CODE[40]), STR_32(CODE[38]), 
		 -> STR_31(CODE[42]), STR_30(CODE[29]), STR_29(CODE[32]), STR_26(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1466_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_35(CODE[29]), STR_34(CODE[32]), STR_33(CODE[40]), STR_32(CODE[38]), 
		 -> STR_31(CODE[42]), STR_30(CODE[29]), STR_29(CODE[32]), STR_26(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 42
		 -> STR_35(CODE[29]), STR_34(CODE[32]), STR_33(CODE[40]), STR_32(CODE[38]), 
		 -> STR_31(CODE[42]), STR_30(CODE[29]), STR_29(CODE[32]), STR_26(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    dameTemperaturaHumedad@Temperatura	PTR unsigned char  size(2) Largest target is 1
		 -> mostrarDatosSensoresWIFI@temperatura(BANK0[1]), mostrarDatosSensores@temperatura(BANK0[1]), estaSeco@temperatura(COMRAM[1]), 

    dameTemperaturaHumedad@Humedad	PTR unsigned char  size(2) Largest target is 1
		 -> mostrarDatosSensoresWIFI@humedad(BANK0[1]), mostrarDatosSensores@humedad(BANK0[1]), NULL(NULL[0]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 72
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), STR_28(CODE[21]), STR_27(CODE[25]), 
		 -> dameDatosSistema@buffer(BANK0[50]), STR_25(CODE[50]), STR_24(CODE[42]), STR_23(CODE[3]), 
		 -> STR_22(CODE[14]), STR_21(CODE[34]), STR_20(CODE[32]), STR_19(CODE[49]), 
		 -> STR_18(CODE[37]), STR_17(CODE[27]), STR_16(CODE[37]), STR_15(CODE[32]), 
		 -> STR_14(CODE[28]), STR_13(CODE[38]), STR_12(CODE[37]), STR_11(CODE[72]), 
		 -> STR_10(CODE[51]), STR_9(CODE[23]), STR_8(CODE[26]), STR_7(CODE[55]), 
		 -> STR_6(CODE[51]), STR_5(CODE[25]), STR_4(CODE[37]), STR_3(CODE[31]), 
		 -> STR_2(CODE[43]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_sistemaPrincipal
    _sistemaRegado->_encenderBombas
    _encenderBombas->_estaSeco
    _estaSeco->_dameTemperaturaHumedad
    _dameHoraActual->_leer_rtc
    _leer_rtc->_i2c_envia_dato
    _leer_rtc->_i2c_recibe_dato
    _sistemaPrincipal->_dameDatosSistema
    _setTiempoRegar->_escribeHorariosMemoria
    _mostrarMenu->_UART_printf
    _lecturaWifi->_restablecerDatosSensor
    _restablecerDatosSensor->_constructorSensor
    _constructorSensor->___wmul
    _lecturaAnalogaSensores->___wmul
    _dameTemperaturaHumedad->_UART_printf
    _fijaHoraRtc->_setRtc
    _setRtc->_escribe_rtc
    _escribe_rtc->_i2c_envia_dato
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _asignarHorarios->_escribeHorariosMemoria
    _escribeHorariosMemoria->_escribe_eeprom
    _escribe_eeprom->___wmul
    _UART_printf->_UART_write
    _leeHorariosMemoria->___wmul
    _leeHorariosMemoria->_leer_eeprom
    _leer_eeprom->_i2c_envia_dato
    _leer_eeprom->_i2c_recibe_dato
    _i2c_reinicia_com->_i2c_espera
    _i2c_recibe_dato->_i2c_espera
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera
    _inicializarObjetos->___wmul
    _UART_init->___aldiv

Critical Paths under _desbordamiento in COMRAM

    None.

Critical Paths under _main in BANK0

    _sistemaPrincipal->_mostrarDatosSensores
    _mostrarDatosSensoresWIFI->_sprintf
    _mostrarDatosSensores->_sprintf
    _dameDatosSistema->_sprintf

Critical Paths under _desbordamiento in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _desbordamiento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _desbordamiento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _desbordamiento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _desbordamiento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _desbordamiento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _desbordamiento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _desbordamiento in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  142588
                          _UART_init
                      _configurarAdc
                        _i2c_iniciar
                 _inicializarObjetos
                 _leeHorariosMemoria
                        _mostrarMenu
             _restablecerDatosSensor
                   _sistemaPrincipal
                      _sistemaRegado
 ---------------------------------------------------------------------------------
 (1) _sistemaRegado                                        0     0      0   28823
                     _dameHoraActual
                     _encenderBombas
                          _horaRegar
             _lecturaAnalogaSensores
                        _lecturaWifi
                        _mostrarMenu
 ---------------------------------------------------------------------------------
 (2) _horaRegar                                            3     1      2       0
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _encenderBombas                                       5     5      0    9008
                                             20 COMRAM     5     5      0
                             ___wmul
                           _estaSeco
 ---------------------------------------------------------------------------------
 (3) _estaSeco                                             5     2      3    4226
                                             15 COMRAM     5     2      3
                             ___wmul (ARG)
             _dameTemperaturaHumedad
 ---------------------------------------------------------------------------------
 (2) _dameHoraActual                                       0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (3) _leer_rtc                                             2     2      0      90
                                              2 COMRAM     2     2      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (3) _convertirDato                                        3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _sistemaPrincipal                                     3     3      0   95726
                                             90 COMRAM     3     3      0
                        _UART_printf
                    _asignarHorarios
                   _dameDatosSistema
                        _fijaHoraRtc
               _mostrarDatosSensores
           _mostrarDatosSensoresWIFI
                        _mostrarMenu
                     _setTiempoRegar
 ---------------------------------------------------------------------------------
 (2) _setTiempoRegar                                       8     8      0    8421
                                             14 COMRAM     8     8      0
                        _UART_printf
                          _UART_read
                         _UART_write
             _escribeHorariosMemoria
 ---------------------------------------------------------------------------------
 (2) _mostrarMenu                                          0     0      0    2727
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensoresWIFI                            56    56      0   30976
                                             87 COMRAM     2     2      0
                                             20 BANK0     54    54      0
                        _UART_printf
                         _UART_write
                             ___wmul
             _dameTemperaturaHumedad
                        _lecturaWifi
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaWifi                                          3     3      0   12288
                                             13 COMRAM     3     3      0
                        _UART_printf
                          _UART_read
                         _UART_write
                             ___wmul
             _restablecerDatosSensor
 ---------------------------------------------------------------------------------
 (3) _restablecerDatosSensor                               2     2      0    4894
                                             11 COMRAM     2     2      0
                             ___wmul
                  _constructorSensor
 ---------------------------------------------------------------------------------
 (4) _constructorSensor                                    5     0      5     297
                                              6 COMRAM     5     0      5
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensores                                56    56      0   23786
                                             20 BANK0     56    56      0
                        _UART_printf
                         _UART_write
                            ___awdiv
                             ___wmul
             _dameTemperaturaHumedad
             _lecturaAnalogaSensores
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaAnalogaSensores                               3     3      0    4619
                                              6 COMRAM     3     3      0
                             ___wmul
                   _dameHumedadSuelo
 ---------------------------------------------------------------------------------
 (3) _dameHumedadSuelo                                     5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _dameTemperaturaHumedad                              12     8      4    3526
                                              3 COMRAM    12     8      4
                     _DHT11_ReadData
                        _DHT11_Start
                        _UART_printf
                     _check_response
 ---------------------------------------------------------------------------------
 (5) _check_response                                       1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _fijaHoraRtc                                          0     0      0    3869
                        _UART_printf
                        _escribe_rtc
                             _setRtc
 ---------------------------------------------------------------------------------
 (3) _setRtc                                               7     7      0     696
                                              4 COMRAM     7     7      0
                          _UART_read
                         _UART_write
                        _escribe_rtc
 ---------------------------------------------------------------------------------
 (4) _escribe_rtc                                          2     1      1     446
                                              2 COMRAM     2     1      1
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (2) _dameDatosSistema                                    55    55      0   14938
                                             87 COMRAM     3     3      0
                                             20 BANK0     52    52      0
                        _UART_printf
                         _UART_write
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             20    10     10    7520
                                              0 BANK0     20    10     10
                             ___wmul (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _asignarHorarios                                      5     5      0    8260
                                             14 COMRAM     5     5      0
                        _UART_printf
                          _UART_read
                         _UART_write
             _escribeHorariosMemoria
 ---------------------------------------------------------------------------------
 (3) _escribeHorariosMemoria                               4     4      0    5233
                                             10 COMRAM     4     4      0
                             ___wmul
                     _escribe_eeprom
 ---------------------------------------------------------------------------------
 (4) _escribe_eeprom                                       4     1      3     544
                                              6 COMRAM     4     1      3
                             ___wmul (ARG)
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (3) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2    2727
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _leeHorariosMemoria                                   4     4      0    5029
                                              6 COMRAM     4     4      0
                             ___wmul
                        _leer_eeprom
 ---------------------------------------------------------------------------------
 (2) _leer_eeprom                                          4     2      2     340
                                              2 COMRAM     4     2      2
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_recibe_dato                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializarObjetos                                   2     2      0    4641
                                              6 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    4507
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     748
                                             14 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _desbordamiento                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
   _configurarAdc
   _i2c_iniciar
   _inicializarObjetos
     ___wmul
   _leeHorariosMemoria
     ___wmul
     _leer_eeprom
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
       _i2c_recibe_dato
         _i2c_espera
       _i2c_reinicia_com
         _i2c_espera
   _mostrarMenu
     _UART_printf
       _UART_write
   _restablecerDatosSensor
     ___wmul
     _constructorSensor
       ___wmul (ARG)
   _sistemaPrincipal
     _UART_printf
       _UART_write
     _asignarHorarios
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
     _dameDatosSistema
       _UART_printf
         _UART_write
       _UART_write
       ___wmul
       _sprintf
         ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _fijaHoraRtc
       _UART_printf
         _UART_write
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
       _setRtc
         _UART_read
         _UART_write
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
     _mostrarDatosSensores
       _UART_printf
         _UART_write
       _UART_write
       ___awdiv
       ___wmul
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaAnalogaSensores
         ___wmul
         _dameHumedadSuelo
       _sprintf
         ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _mostrarDatosSensoresWIFI
       _UART_printf
         _UART_write
       _UART_write
       ___wmul
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaWifi
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
         ___wmul
         _restablecerDatosSensor
           ___wmul
           _constructorSensor
             ___wmul (ARG)
       _sprintf
         ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _mostrarMenu
       _UART_printf
         _UART_write
     _setTiempoRegar
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
   _sistemaRegado
     _dameHoraActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _encenderBombas
       ___wmul
       _estaSeco
         ___wmul (ARG)
         _dameTemperaturaHumedad (ARG)
           _DHT11_ReadData
           _DHT11_Start
           _UART_printf
             _UART_write
           _check_response
     _horaRegar
     _lecturaAnalogaSensores
       ___wmul
       _dameHumedadSuelo
     _lecturaWifi
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       ___wmul
       _restablecerDatosSensor
         ___wmul
         _constructorSensor
           ___wmul (ARG)
     _mostrarMenu
       _UART_printf
         _UART_write

 _desbordamiento (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      48       7       28.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4C      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     144      20        0.0%
DATA                 0      0     144       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Apr 29 12:43:58 2020

                 __size_of_escribe_eeprom 0030                                        l81 21D6  
                                      l90 22DA                                        l75 22A0  
                                      l84 22D2                                        l93 22B8  
                                      l87 22CA                                        l96 2274  
                                      l99 225A                              ___awdiv@sign 0006  
                          ?_configurarAdc 0001                       ___wmul@multiplicand 0003  
                             __CFG_BORV$3 000000            __end_of_dameTemperaturaHumedad 1868  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                                     l102 21B0                                       l201 22C2  
                                     l121 1E60                                       l105 221C  
                                     l130 227C                                       l133 228A  
                                     l118 1B2E                                       l214 1A34  
                                     l126 1E96                                       l230 212E  
                                     l310 1FB4                                       l206 1F3A  
                                     l127 1E98                                       l311 1FC8  
                                     l152 1E44                                       l144 1DF2  
                                     l160 204C                                       l233 20C8  
                                     l305 07A2                                       l217 2186  
                                     l209 215A                                       l330 1B96  
                                     l243 1562                                       l139 1DE8  
                                     l227 1628                                       l155 223C  
                                     l308 1FA6                                       l316 1D28  
                                     l149 1E22                                       l325 1218  
                                     l333 1CC6                                       l238 13D0  
                                     l422 16B2                                       l430 039A  
                                     l270 02F8                                       l424 16EE  
                                     l432 03A2                                       l450 05DA  
                                     l362 1302                                       l346 1ABE  
                                     l419 1670                                       l275 1BFE  
                                     l285 0E9A                                       l357 1908  
                                     l374 0D90                                       l198 22AC  
                                     l382 101A                                       l463 1D82  
                                     l288 0ED8                                       l464 1D8A  
                                     l457 0956                                       l369 1866  
                                     l546 1126                                       l467 21FC  
                                     l581 0ADE                                       l594 0C42  
                                     l698 17B2                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                              __CFG_BOR$OFF 000000  
                                     _abs 204E                                       _pad 162A  
                                     prod 000FF3                                       wreg 000FE8  
                __end_of_dameDatosSistema 1304                              __CFG_LVP$OFF 000000  
                       ?_i2c_reinicia_com 0001                              ?_escribe_rtc 0003  
                            __CFG_WDT$OFF 000000                                      ?_abs 0013  
                                    l1142 2084                                      l1145 208C  
                                    l3001 1EB4                                      l3003 1EBC  
                                    l3011 16F4                                      l1172 1EEA  
                                    l1157 149A                                      l1165 200C  
                                    l1181 20FE                                      l3005 1ED8  
                                    l3021 1724                                      l3013 1702  
                                    l1175 22E0                                      l3031 1752  
                                    l3023 1728                                      l3015 170A  
                                    l3111 0218                                      l3103 018E  
                                    l3201 0E76                                      l3041 1786  
                                    l3033 1760                                      l3025 1730  
                                    l3017 170E                                      l3009 16F0  
                                    l3105 01D0                                      l3211 0ECA  
                                    l3203 0E86                                      l3043 178C  
                                    l3035 1766                                      l3027 1742  
                                    l3019 171C                                      l3131 02F2  
                                    l3115 021E                                      l3123 0266  
                                    l3061 20B8                                      l3213 0ED2  
                                    l3205 0E96                                      l2501 098E  
                                    l3141 1BB6                                      l3037 177C  
                                    l3029 174A                                      l3045 1792  
                                    l3301 0788                                      l3117 0260  
                                    l3109 01D6                                      l3125 02C2  
                                    l3053 2130                                      l3063 20C6  
                                    l3207 0EAA                                      l2511 09EA  
                                    l2503 099C                                      l3311 122C  
                                    l3151 1BF4                                      l3143 1BC6  
                                    l3047 17A2                                      l3039 1784  
                                    l3303 079E                                      l3231 0626  
                                    l3215 05DC                                      l3127 02C6  
                                    l3401 101C                                      l3209 0EB6  
                                    l3153 0D92                                      l2521 0A54  
                                    l2513 09F2                                      l2505 09BC  
                                    l2441 1400                                      l2601 03D0  
                                    l3321 12DA                                      l3145 1BD2  
                                    l3137 1B98                                      l3049 17AA  
                                    l3305 1C66                                      l3241 0650  
                                    l3233 0638                                      l3225 0600  
                                    l3217 05E0                                      l3057 215C  
                                    l3129 02E2                                      l3081 00B0  
                                    l3073 0022                                      l3411 1050  
                                    l3403 1020                                      l3059 208E  
                                    l3171 0DEE                                      l3163 0DB6  
                                    l3155 0D96                                      l2531 0A9E  
                                    l2523 0A74                                      l2515 0A06  
                                    l2507 09C0                                      l2443 141E  
                                    l2435 13D2                                      l2451 1FD6  
                                    l2611 046E                                      l2603 03D8  
                                    l3323 12E0                                      l3307 121A  
                                    l3147 1BD8                                      l3139 1BB0  
                                    l3331 0EE4                                      l3251 066E  
                                    l3243 0654                                      l3235 063C  
                                    l3227 0606                                      l3219 05EC  
                                    l3091 00FE                                      l3075 0064  
                                    l3067 0012                                      l3421 1092  
                                    l3413 1060                                      l3405 102E  
                                    l3501 153E                                      l3181 0E0A  
                                    l3173 0DF2                                      l3165 0DBC  
                                    l3157 0DA2                                      l2533 0ABE  
                                    l2525 0A76                                      l2517 0A14  
                                    l2509 09CC                                      l2541 0AF2  
                                    l2445 1454                                      l2437 13E4  
                                    l2453 1FE8                                      l2461 20DA  
                                    l2621 052A                                      l2613 0474  
                                    l2605 03E0                                      l3325 12FC  
                                    l3317 1236                                      l3309 1220  
                                    l3149 1BE8                                      l2701 201A  
                                    l3341 0F3E                                      l3333 0EF6  
                                    l3253 068A                                      l3237 0640  
                                    l3229 0616                                      l3245 065C  
                                    l3093 0140                                      l3085 00B6  
                                    l3077 0066                                      l3431 10E4  
                                    l3423 109E                                      l3415 1064  
                                    l3407 103E                                      l3503 1542  
                                    l3191 0E40                                      l3175 0DF6  
                                    l3167 0DCC                                      l3183 0E12  
                                    l2527 0A88                                      l2519 0A26  
                                    l2551 0B62                                      l2543 0B12  
                                    l2439 13F6                                      l2455 1FEC  
                                    l2463 20F2                                      l2471 164E  
                                    l2631 057C                                      l2623 0544  
                                    l2607 03E6                                      l2615 04D8  
                                    l3319 12CE                                      l2703 2028  
                                    l2711 204A                                      l3351 0F94  
                                    l3343 0F5C                                      l3327 0EDA  
                                    l3271 06E4                                      l3255 069A  
                                    l3247 0660                                      l3239 064C  
                                    l3511 1A46                                      l3087 00F8  
                                    l3079 006E                                      l3441 1116  
                                    l3433 10E6                                      l3425 10AC  
                                    l3417 1074                                      l3409 1042  
                                    l3505 1546                                      l3193 0E50  
                                    l3185 0E16                                      l3177 0E02  
                                    l3169 0DDC                                      l2529 0A8E  
                                    l2561 0BDA                                      l2553 0B6A  
                                    l2545 0B16                                      l2537 0AE0  
                                    l2449 1FCA                                      l2457 20CA  
                                    l2481 1694                                      l2473 165C  
                                    l2633 058E                                      l2617 04F2  
                                    l2625 0554                                      l2609 0468  
                                    l2721 07D6                                      l2705 2030  
                                    l2801 17B8                                      l3361 0C44  
                                    l3345 0F6C                                      l3353 0FB0  
                                    l3329 0EDE                                      l3281 070E  
                                    l3273 06F6                                      l3265 06BE  
                                    l3257 06AA                                      l3249 066A  
                                    l3521 1A66                                      l3513 1A4E  
                                    l3097 0146                                      l3435 10F0  
                                    l3427 10B6                                      l3419 108A  
                                    l3451 1AC0                                      l2651 22B0  
                                    l2643 22CC                                      l3195 0E60  
                                    l3179 0E06                                      l3187 0E20  
                                    l2563 0BEC                                      l2555 0B7E  
                                    l2547 0B24                                      l2539 0AE4  
                                    l2491 2068                                      l2459 20D6  
                                    l2483 16C2                                      l2475 1668  
                                    l2467 162A                                      l2635 059A  
                                    l2627 0566                                      l2619 0510  
                                    l2731 087C                                      l2723 07E8  
                                    l2707 203E                                      l2811 183A  
                                    l2803 17BC                                      l3371 0C86  
                                    l3363 0C44                                      l2715 22A2  
                                    l3355 0FE0                                      l3339 0EFE  
                                    l3291 072C                                      l3283 0712  
                                    l3275 06FA                                      l3267 06C4  
                                    l3259 06B6                                      l3515 1A56  
                                    l3507 1A38                                      l3099 0188  
                                    l3611 191E                                      l3603 190A  
                                    l3429 10D4                                      l3437 10F6  
                                    l3461 1B22                                      l3453 1AC2  
                                    l3445 228C                                      l2573 21B2  
                                    l2653 22B4                                      l2645 22D0  
                                    l2661 1D90                                      l2821 2120  
                                    l3197 0E6C                                      l3189 0E24  
                                    l2493 0958                                      l2557 0B8C  
                                    l2565 0BF2                                      l2549 0B44  
                                    l2485 16D6                                      l2477 167C  
                                    l2469 163A                                      l2637 05A2  
                                    l2629 0576                                      l2581 02FA  
                                    l2741 08FA                                      l2725 07EC  
                                    l2717 07A4                                      l2901 15AA  
                                    l2709 2046                                      l2805 17D0  
                                    l2813 1856                                      l3373 0CA2  
                                    l3365 0C58                                      l3357 0FEC  
                                    l3349 0F8E                                      l3293 0748  
                                    l3277 06FE                                      l3269 06D4  
                                    l3285 071A                                      l3509 1A3E  
                                    l3525 1A76                                      l3541 1892  
                                    l3621 1942                                      l3613 1932  
                                    l3605 1914                                      l3439 1106  
                                    l3471 1B2C                                      l3463 1B24  
                                    l3455 1AC4                                      l3447 2290  
                                    l2575 21B2                                      l2647 22D4  
                                    l2655 22B8                                      l2663 1DB4  
                                    l3199 0E72                                      l2495 095C  
                                    l2567 0C02                                      l2559 0BBA  
                                    l2479 1690                                      l2639 05B2  
                                    l2591 0374                                      l2583 031A  
                                    l2735 08B4                                      l2727 0810  
                                    l2719 07C8                                      l2751 0920  
                                    l2911 15DE                                      l2903 15C0  
                                    l2815 1862                                      l2807 17F4  
                                    l2831 1FA4                                      l2823 1F86  
                                    l3391 0D36                                      l3383 0CBC  
                                    l3375 0CAE                                      l3367 0C5E  
                                    l3359 1014                                      l3295 0758  
                                    l3287 071E                                      l3279 070A  
                                    l3519 1A5E                                      l3527 1AB8  
                                    l3551 18C2                                      l3543 189A  
                                    l3535 1868                                      l3631 1956  
                                    l3623 1946                                      l3615 1936  
                                    l3607 1918                                      l3465 1B26  
                                    l3457 1AF8                                      l3449 1AC0  
                                    l3473 22BA                                      l2761 21F4  
                                    l3481 19A8                                      l2577 21C8  
                                    l2649 22D8                                      l2665 1DB8  
                                    l2921 1304                                      l2497 096A  
                                    l2569 0C22                                      l2489 204E  
                                    l2593 038E                                      l2585 0342  
                                    l2753 0944                                      l2737 08D8  
                                    l2745 0906                                      l2729 0834  
                                    l2913 15E2                                      l2905 15C8  
                                    l2681 1E30                                      l2673 1E00  
                                    l2817 1864                                      l2809 182A  
                                    l2833 1FB6                                      l2825 1F8E  
                                    l3393 0D5C                                      l3385 0CE4  
                                    l3377 0CB2                                      l3369 0C7A  
                                    l3297 0768                                      l3289 0728  
                                    l3529 1ABC                                      l3553 18D8  
                                    l3545 189C                                      l3537 187A  
                                    l3641 197A                                      l3633 195A  
                                    l3625 194A                                      l3617 193A  
                                    l3609 191A                                      l3467 1B28  
                                    l3459 1B20                                      l3483 1A14  
                                    l3475 19A0                                      l2771 2260  
                                    l2579 2278                                      l2659 1D8C  
                                    l2819 2100                                      l2931 1348  
                                    l2499 098A                                      l2595 03AA  
                                    l2587 0362                                      l2747 0914  
                                    l2739 08E6                                      l2851 1D32  
                                    l2915 15FE                                      l2907 15D0  
                                    l2683 1E32                                      l2675 1E06  
                                    l2667 1DEA                                      l2691 2222  
                                    l2827 1F90                                      l3395 0D68  
                                    l3387 0D00                                      l2843 1CD0  
                                    l3299 0774                                      l3571 1904  
                                    l3547 18AE                                      l3539 187E  
                                    l3643 198C                                      l3635 196C  
                                    l3627 1952                                      l3619 193E  
                                    l3469 1B2A                                      l3485 1A18  
                                    l2773 2266                                      l2765 22C4  
                                    l3493 14AC                                      l2933 137C  
                                    l2597 03BC                                      l2589 0372  
                                    l2853 1D40                                      l2917 160E  
                                    l2909 15D4                                      l2685 1E42  
                                    l2677 1E14                                      l2693 2232  
                                    l2829 1FA2                                      l3397 0D6E  
                                    l3389 0D1A                                      l2845 1D08  
                                    l2837 1CC8                                      l2941 1128  
                                    l3549 18BE                                      l3645 1994  
                                    l3637 1970                                      l3629 1954  
                                    ?_pad 0011                                      l2759 21D8  
                                    l2775 226E                                      l2767 22C8  
                                    l3495 14DA                                      l3487 149C  
                                    l2791 1E8E                                      l2935 13AC  
                                    l2927 1314                                      l2599 03CA  
                                    l2855 1D66                                      l2783 2240  
                                    l2919 161E                                      l2679 1E1C  
                                    l2695 223A                                      l3399 0D8A  
                                    l2847 1D0C                                      l2951 1140  
                                    l2943 112A                                      l2863 2200  
                                    l3567 18EA                                      l3639 1974  
                                    l2777 2270                                      l2769 225C  
                                    l3497 14DE                                      l2793 1E92  
                                    l2785 1E46                                      l2937 13B0  
                                    l2929 1344                                      l2849 1D2A  
                                    l2689 221E                                      l2697 200E  
                                    l2961 1166                                      l2953 1146  
                                    l2945 112A                                      l2865 2200  
                                    l2857 218A                                      l2881 1F30  
                                    l2873 1EEC                                      l3569 18EE  
                                    l2779 2272                                      l3499 1510  
                                    l2787 1E6E                                      l2939 13B4  
                                    l2699 2012                                      l2971 11B8  
                                    l2963 1172                                      l2955 1158  
                                    l2947 112E                                      l2867 2208  
                                    l2859 21AE                                      l2883 1F34  
                                    l2875 1F00                                      l2789 1E7E  
                                    l2893 1572                                      l2797 17B4  
                                    l2981 1216                                      l2973 11E0  
                                    l2965 1178                                      l2949 1134  
                                    l2869 221A                                      l2877 1F04  
                                    l2895 1578                                      l2887 1566  
                                    l2799 17B8                                      l2991 1B66  
                                    l2983 1B30                                      l2975 11E4  
                                    l2967 117C                                      l2879 1F20  
                                    l3687 027C                                      l2897 1588  
                                    l2993 1B76                                      l2977 1200  
                                    l2969 118C                                      l3689 1A8A  
                                    l2899 1598                                      l2995 1B7A  
                                    l2979 1210                                      l2997 1E9A  
                                    l2989 1B38                                      l2999 1EAC  
                            ?_leer_eeprom 0003                                      STR_1 7FD0  
                                    STR_2 7CDC                                      STR_3 7EE5  
                                    STR_4 7E19                                      STR_5 7F72  
                                    STR_6 7C46                                      STR_7 7C0F  
                                    STR_8 7F58                                      STR_9 7FA4  
                                    u2000 17D0                                      u2001 17CC  
                                    u2010 182A                                      u2011 1826  
                                    u2100 15FE                                      u2020 1FB4  
                                    u2101 15FA                                      u2021 1FB0  
                                    u2110 160E                                      u2030 1D28  
                                    u2111 160A                                      u2031 1D24  
                                    u2040 1D82                                      u2120 161E  
                                    u2200 1742                                      u2041 1D7E  
                                    u2121 161A                                      u2201 173E  
                                    u2130 13D0                                      u2210 1760  
                                    u2050 1F20                                      u2131 13CC  
                                    u2211 175C                                      u2051 1F1C  
                                    u1420 13E4                                      u1500 16B2  
                                    u2220 177C                                      u2140 1158  
                                    u2060 1F30                                      u2300 0188  
                                    u1421 13E0                                      u1501 16AE  
                                    u2221 1778                                      u2141 1154  
                                    u2061 1F2C                                      u2301 0184  
                                    u1430 13F6                                      u1510 16C2  
                                    u2070 1588                                      u2230 17A2  
                                    u2150 118C                                      u2310 01D0  
                                    u1431 13F2                                      u1511 16BE  
                                    u2071 1584                                      u2231 179E  
                                    u2151 1188                                      u2311 01CC  
                                    u2400 0DEE                                      u1600 0AF2  
                                    u1520 2068                                      u1440 141E  
                                    u2080 1598                                      u2160 1200  
                                    u2320 0218                                      u2240 2154  
                                    _LATD 000F8C                                      u2401 0DEA  
                                    u1601 0AEE                                      u1521 2064  
                                    u1441 141A                                      u2081 1594  
                                    u2161 11FC                                      u2321 0214  
                                    u2241 214E                                      u2410 0E40  
                                    u1530 096A                                      u1610 0B24  
                                    u1450 1454                                      u2090 15AA  
                                    u2170 1B96                                      u2330 0260  
                                    u2250 2156                                      u2411 0E3C  
                                    u1531 0966                                      u1611 0B20  
                                    u1451 1450                                      u2091 15A6  
                                    u2171 1B92                                      u2331 025C  
                                    u2420 0E50                                      u1540 099C  
                                    u1620 0B62                                      u1460 200C  
                                    u1700 032C                                      u2180 1702  
                                    u2500 068A                                      u2340 02E2  
                                    u2260 0064                                      u2421 0E4C  
                                    u1541 0998                                      u1621 0B5E  
                                    u1461 2008                                      u2181 16FE  
                                    u2501 0686                                      u2341 02DE  
                                    u2261 0060                                      u2430 0E60  
                                    u1630 0B8C                                      u1470 20F2  
                                    u1710 0342                                      u2190 171C  
                                    u2510 069A                                      u2350 02F2  
                                    u2270 00B0                                      u2431 0E5C  
                                    u1551 09C6                                      u1631 0B88  
                                    u1471 20EE                                      u1711 033E  
                                    u2191 1718                                      u2511 0696  
                                    u2351 02EE                                      u2271 00AC  
                                    u2440 0E86                                      u1560 09EA  
                                    u1640 0BBA                                      u1480 163A  
                                    u1800 0554                                      u1720 0372  
                                    u2360 1BC6                                      u2600 0EF6  
                                    u2520 06AA                                      u2280 00F8  
                                    u2441 0E82                                      u1561 09E6  
                                    u1641 0BB6                                      u1481 1636  
                                    u1801 0550                                      u1721 036E  
                                    u2361 1BC2                                      u2601 0EF2  
                                    u2521 06A6                                      u2281 00F4  
                                    u2450 0E96                                      u1570 0A14  
                                    u1650 0C02                                      u1490 165C  
                                    u1810 0566                                      u1730 038E  
                                    u2370 1BE8                                      u2610 0F3E  
                                    u2530 06D4                                      u2290 0140  
                                    u2451 0E92                                      u1571 0A10  
                                    u1651 0BFE                                      u1491 1658  
                                    u1811 0562                                      u1731 038A  
                                    u2371 1BE4                                      u2611 0F3A  
                                    u2531 06D0                                      u2291 013C  
                                    u2700 1A34                                      u1660 21C8  
                                    u2460 0EAA                                      u2380 0DCC  
                                    u1580 0A54                                      u1820 0576  
                                    u1740 03BC                                      u1900 1E42  
                                    u2620 0FB0                                      u2540 06E4  
                                    u2701 1A30                                      u1661 21C4  
                                    u2461 0EA6                                      u2381 0DC8  
                                    u1581 0A50                                      u1821 0572  
                                    u1741 03B8                                      u1901 1E3E  
                                    u2621 0FAC                                      u2541 06E0  
                                    u1670 21D6                                      u2710 1562  
                                    u2390 0DDC                                      u1590 0A9E  
                                    u1830 058E                                      u1750 03CA  
                                    u1910 2028                                      u2630 0D8A  
                                    u2550 06F6                                      u2470 0616  
                                    u1671 21D2                                      u2711 155E  
                                    u2391 0DD8                                      u1591 0A9A  
                                    u1831 058A                                      u1751 03C6  
                                    u1911 2024                                      u2631 0D86  
                                    u2551 06F2                                      u2471 0612  
                                    u2640 102E                                      u1680 228A  
                                    u1840 1DB0                                      u1760 04F2  
                                    u1920 203E                                      u2560 0748  
                                    u2480 0626                                      u2720 187A  
                                    u2641 102A                                      u1681 2286  
                                    u1761 04EE                                      u1921 203A  
                                    u2561 0744                                      u2481 0622  
                                    u2721 1876                                      u2650 1050  
                                    u1850 1DD8                                      u1770 0510  
                                    u1690 032A                                      u1930 07C8  
                                    u2570 0758                                      u2490 0638  
                                    u2730 1892                                      u2810 196C  
                                    u2651 104C                                      u1771 050C  
                                    u1691 0324                                      u1931 07C4  
                                    u2571 0754                                      u2491 0634  
                                    u2731 188E                                      u2811 1968  
                                    u2660 108A                                      u1860 1DE8  
                                    u1780 052A                                      u1940 0810  
                                    u2580 0768                                      u2740 18AE  
                                    u2820 198C                                      u2661 1086  
                                    u1861 1DE4                                      u1781 0526  
                                    u1941 080C                                      u2581 0764  
                                    u2741 18AA                                      u2821 1988  
                                    u2670 10AC                                      u1790 0544  
                                    u1950 0834                                      u2590 12FC  
                                    u1870 1E00                                      u2750 18D8  
                                    u2671 10A8                                      u1847 1DA6  
                                    u1791 0540                                      u1951 0830  
                                    u2591 12F8                                      u1871 1DFC  
                                    u2751 18D4                                      u2680 10D4  
                                    u1960 08D8                                      u1880 1E14  
                                    u2760 18EA                                      u2681 10D0  
                                    u1857 1DCE                                      u1961 08D4  
                                    u1881 1E10                                      u2761 18E6  
                                    u2690 1106                                      u1970 1E6E  
                                    u1890 1E30                                      u2691 1102  
                                    u1971 1E6A                                      u1891 1E2C  
                                    u2907 1E02                                      u1980 1E7E  
                                    u1981 1E7A                                      u2917 2126  
                                    u2837 1B6C                                      u1990 1E8E  
                                    u2927 20BE                                      u1991 1E8A  
                                    u2847 1F88                                      u2857 2014  
                                    u2867 202A                                      u2877 2040  
                                    u2887 2228                                      u2897 2236  
                                    _TMR0 000FD6                      _minutosTranscurridos 0084  
                      ??_i2c_reinicia_com 0002                            _check_response 200E  
                 escribeHorariosMemoria@i 000D                             ??_i2c_detener 0002  
                                    abs@a 0013                                      _dbuf 008E  
                                    _main 190A                                      _dtoa 02FA  
                                    _hora 008A                                      _prec 007C  
                                    _nout 0078                                      pad@i 0018  
                                    pad@p 0015                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    pad@w 001A                                      fsr2l 000FD9  
                                    btemp 005F                            ?_sistemaRegado 0001  
                __size_of_asignarHorarios 0148                             ??_i2c_iniciar 0001  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 000E                  ??_restablecerDatosSensor 000C  
                           __CFG_IESO$OFF 000000                          ??_DHT11_ReadData 0001  
                       _constructorSensor 22A2                      __size_of_DHT11_Start 0020  
                            ?_lecturaWifi 0001                   __size_of_setTiempoRegar 01C8  
                            ___param_bank 000000                        ?_constructorSensor 0007  
                      setTiempoRegar@hora 0010                        _leeHorariosMemoria 149C  
                        ??_encenderBombas 0015                                     ??_abs 0015  
                                   ??_pad 0017                            _i2c_envia_dato 22AE  
                           __CFG_PLLDIV$1 000000                            _i2c_inicia_com 22CC  
                         __end_of___aldiv 1128                           __end_of___aodiv 0AE0  
                                   ?_main 0001                                     ?_dtoa 001C  
                         __end_of___aomod 0C44                             _convertirDato 21FE  
                         __end_of___awdiv 17B4                                     STR_10 7C46  
                                   STR_11 7BC7                                     STR_20 7EA5  
                                   STR_12 7DCF                                     STR_21 7E63  
                                   STR_13 7D83                                     STR_22 7FF0  
                                   STR_14 7F21                                     STR_30 7F04  
                                   STR_23 7F6F                                     STR_15 7E85  
                                   STR_31 7D31                                     STR_16 7DF4  
                                   STR_32 7DA9                                     STR_24 7D07  
                                   STR_17 7F3D                                     STR_33 7D5B  
                                   STR_25 7C79                                     STR_34 7EC5  
                                   STR_26 7FE0                                     STR_18 7E3E  
                                   STR_35 7F04                                     STR_27 7F8B  
                                   STR_19 7CAB                                     STR_28 7FBB  
                                   STR_29 7EC5                       ??_constructorSensor 000C  
                       convertirDato@dato 0002                                     _T0CON 000FD5  
                         ___awdiv@divisor 0003                       ?_leeHorariosMemoria 0001  
                                   i2l195 1C62                           ___awdiv@counter 0005  
                                   _RCREG 000FAE                              vfpfcnvrt@fmt 0042  
                                   _SPBRG 000FAF                             __CFG_USBDIV$1 000000  
                                   _TRISD 000F95                                     _TXREG 000FAD  
                           __CFG_PWRT$OFF 000000                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                      __size_of_UART_init 0070                        __size_of_UART_read 0054  
                                   _flags 007E                                     _fputc 13D2  
                                   _fputs 1FCA                    __end_of_check_response 204E  
                             ?_UART_write 0001                                     pad@fp 0011  
                                   _width 007A                                     _putch 22E0  
                                   dtoa@d 001E                                     dtoa@i 003E  
                                   dtoa@n 0036                                     dtoa@p 0030  
                                   dtoa@s 0034                                     dtoa@w 0032  
                                   tablat 000FF5                                     plusw2 000FDB  
       __size_of_mostrarDatosSensoresWIFI 0142                                     ttemp5 0060  
                                   ttemp6 0063                                     ttemp7 0067  
                                   status 000FD8                 ?_mostrarDatosSensoresWIFI 0001  
                                   wtemp8 0060                           __end_of_sprintf 1EEC  
                      escribe_eeprom@dato 0009                 __end_of_constructorSensor 22AE  
                    ??_leeHorariosMemoria 0007                            __CFG_ICPRT$OFF 000000  
                              _i2c_espera 21B2                          ??_dameHoraActual 0005  
                          __CFG_MCLRE$OFF 000000                           __initialization 1F3C  
                         setTiempoRegar@i 0011                       __end_of_i2c_detener 22DC  
         __size_of_lecturaAnalogaSensores 0068                    __end_of_i2c_envia_dato 22BA  
                            __end_of_main 19A0                              __end_of_dtoa 05DC  
                ??_escribeHorariosMemoria 000B                           ??_configurarAdc 0001  
                     setTiempoRegar@i_834 0013                    __end_of_i2c_inicia_com 22D4  
                      _inicializarObjetos 19A0                       __end_of_i2c_iniciar 22A2  
                  sistemaPrincipal@opcion 005D                          _dameHumedadSuelo 1F84  
                          ?_convertirDato 0001                      __size_of_fijaHoraRtc 0068  
                                  ??_main 005E                                    ??_dtoa 0026  
               setTiempoRegar@tiempoRegar 000F                             __activetblptr 000002  
                     ?_inicializarObjetos 0001                        i2c_envia_dato@dato 0002  
                         __CFG_CCP2MX$OFF 000000                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    ?_fputc 0001  
                                  ?_fputs 000A                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                           ?_check_response 0001  
                        ___awdiv@dividend 0001                    encenderBombas@flagSeco 0017  
                                  ?_putch 0001                        convertirDato@datoR 0003  
                                  i2l3581 1C36                                    i2l3573 1C02  
                                  i2l3591 1C5C                                    i2l3583 1C3A  
                                  i2l3575 1C10                                    i2l3585 1C3C  
                                  i2l3577 1C20                                    i2l3579 1C24  
                                  i2l3587 1C4A                                    i2l3589 1C58  
                         ??_sistemaRegado 001A     mostrarDatosSensores@porcentajeHumedad 00F8  
                                  _SSPADD 000FC8                                    _SSPBUF 000FC9  
                    ??_inicializarObjetos 0007           __size_of_restablecerDatosSensor 0062  
                          __CFG_XINST$OFF 000000                              vfprintf@cfmt 0056  
                __end_of_sistemaPrincipal 1AC0                            _escribe_eeprom 2100  
                         ?_i2c_envia_dato 0001                                 ??___aldiv 0009  
                               ??___aodiv 0011                                 ??___aomod 0011  
                                  ___wmul 21D8                         __end_of_UART_init 1B30  
                       __end_of_UART_read 1E9A                                 ??___awdiv 0005  
                       ??_asignarHorarios 000F                          __end_of_leer_rtc 21B2  
                         ?_i2c_inicia_com 0001                          __end_of_estaSeco 1F3C  
                     __size_of_UART_write 0016                              ?_UART_printf 0002  
                                  clear_0 1F62                                    clear_1 1F6E  
                        ___awdiv@quotient 0007                                    _setRtc 1564  
                                  pad@buf 0013       mostrarDatosSensoresWIFI@temperatura 00F4  
                                  dtoa@fp 001C                                    _strlen 20CA  
                         _i2c_recibe_dato 225C                              ?_mostrarMenu 0001  
                                  fputc@c 0001                                    fputs@c 000E  
                                  fputs@i 000F                                    fputs@s 000A  
                    escribe_rtc@direccion 0004                              __mediumconst 7BC6  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                    _lecturaAnalogaSensores 1B30  
            __end_of_mostrarDatosSensores 0D92                                    putch@c 0001  
                        __end_of_vfprintf 1D8C                                 ??_sprintf 0058  
                              __accesstop 0060                   __end_of__initialization 1F76  
                    __size_of_escribe_rtc 001E                           __CFG_PBADEN$OFF 000000  
                    __size_of_leer_eeprom 003C                           __CFG_FOSC$XT_XT 000000  
                             _i2c_detener 22D4                __size_of_constructorSensor 000C  
                           ___rparam_used 000001                               _i2c_iniciar 228C  
                  __end_of_escribe_eeprom 2130                               ?_i2c_espera 0001  
                          _setTiempoRegar 05DC                          setTiempoRegar@Rx 0016  
                          __pcstackCOMRAM 0001                              leer_rtc@dato 0004  
                            __pidataBANK0 22DC                      __size_of_lecturaWifi 00F2  
         __size_of_escribeHorariosMemoria 00CE                           ??_convertirDato 0001  
                           __end_of_fputc 149C                             __end_of_fputs 200E  
                     estaSeco@temperatura 0014                             __end_of_putch 22E2  
                  _restablecerDatosSensor 1CC8                              _datoRecibido 0087  
                       ?_dameDatosSistema 0001                                   ??_fputc 0005  
                                 ??_fputs 000E                                   ??_putch 0001  
                              __pbssBANK0 0060                                __pbssBANK1 0100  
                      ??_dameDatosSistema 0058                   __size_of_desbordamiento 1C5E  
                      __size_of_horaRegar 002C                    __end_of_setTiempoRegar 07A4  
                            lecturaWifi@i 000F                           ?_escribe_eeprom 0007  
           dameTemperaturaHumedad@Humedad 0004                        _contInterrupciones 0080  
               __size_of_i2c_reinicia_com 0008                                   ?___wmul 0001  
              mostrarDatosSensores@buffer 00C2                   __end_of_i2c_recibe_dato 2276  
                                 _ACKSTAT 007E2E                                   ?_setRtc 0001  
                                 ?_strlen 0001           mostrarDatosSensores@temperatura 00F4  
           dameTemperaturaHumedad@humedad 000E                        __size_of_vfpfcnvrt 01B4  
                     __size_of_i2c_espera 0026                    _escribeHorariosMemoria 1304  
                                 _SSPCON1 000FC6                                   _SSPCON2 000FC5  
                            ??_UART_write 0001                                   _SSPSTAT 000FC7  
                __end_of_dameHumedadSuelo 1FCA                                 ?_leer_rtc 0001  
                               ?_estaSeco 0010                           __CFG_VREGEN$OFF 000000  
                           ??_DHT11_Start 0001                           ?_setTiempoRegar 0001  
                                 __Hparam 0000                                   __Lparam 0000  
       dameTemperaturaHumedad@Temperatura 0006                                   ___aldiv 101C  
                                 ___aodiv 0958                                   ___aomod 0AE0  
                                 ___awdiv 16F0                      _mostrarDatosSensores 0C44  
                         __size_of___wmul 0026                  constructorSensor@humedad 000A  
                               ?_vfprintf 0050                           __CFG_STVREN$OFF 000000  
                                 __pcinit 1F3C                                   __ramtop 0800  
                      __end_of_UART_write 228C                           __size_of_setRtc 00C6  
                                 __ptext0 190A                                   __ptext1 1868  
                                 __ptext2 2130                                   __ptext3 0012  
                                 __ptext4 1EEC                                   __ptext5 215C  
                                 __ptext6 2188                                   __ptext7 21FE  
                                 __ptext8 1A36                                   __ptext9 05DC  
                 check_response@respuesta 0001                         __end_of_horaRegar 215C  
                               _T0CONbits 000FD5                           __size_of_strlen 0036  
                    __size_of_UART_printf 005E                              __size_of_abs 0040  
                            __size_of_pad 00C6                          ??_check_response 0001  
                                 _regando 0083                          ___aldiv@dividend 0001  
                                 _minutos 0089                      __size_of_mostrarMenu 0062  
                                 _sprintf 1E9A                            __pintcode_body 1C00  
                    end_of_initialization 1F76            mostrarDatosSensoresWIFI@buffer 00C2  
                              ??_leer_rtc 0003                                ??_estaSeco 0013  
                                 fputc@fp 0003                           _asignarHorarios 0D92  
                           __Lmediumconst 7BC6                                   int_func 1C00  
                                 fputs@fp 000C                          ??_i2c_envia_dato 0002  
             __size_of_leeHorariosMemoria 00C8                                   setRtc@i 0009  
                        ??_i2c_inicia_com 0002                          _VALOR_TIMER0UART 00FC  
                       __end_of_vfpfcnvrt 0958                  ??_dameTemperaturaHumedad 0008  
                               _RCSTAbits 000FAB                          ___aldiv@quotient 000B  
                   ?_mostrarDatosSensores 0001                       __end_of_DHT11_Start 223E  
                                 postdec1 000FE5                                   postdec2 000FDD  
                       ?_sistemaPrincipal 0001                   _peticionLecturaSensores 0082  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                             ??_fijaHoraRtc 000C  
                        ?_i2c_recibe_dato 0001                                ??_vfprintf 0056  
                   __end_of_configurarAdc 22C4                        ??_sistemaPrincipal 005B  
                                 strlen@a 0003                                   strlen@s 0001  
                               _UART_init 1AC0                                 _UART_read 1E46  
                               _PORTDbits 000F83                   __size_of_DHT11_ReadData 005C  
                 ?_lecturaAnalogaSensores 0001                 dameHumedadSuelo@canalLeer 0005  
                 lecturaAnalogaSensores@i 0008                                 _TRISBbits 000F93  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                 __size_of_encenderBombas 02E8                  _mostrarDatosSensoresWIFI 0EDA  
                          _desbordamiento 0008                            _esperandoDatos 005E  
                          _UART_init$1778 0017                              ?_i2c_detener 0001  
                   __end_of_sistemaRegado 190A                                 _TXSTAbits 000FAC  
                       dameDatosSistema@i 00F4               __size_of_inicializarObjetos 0096  
                            ?_i2c_iniciar 0001                              ??_i2c_espera 0001  
                      DHT11_ReadData@data 0002                          _i2c_reinicia_com 22C4  
             setTiempoRegar@datoCapturado 0015                               vfpfcnvrt@ap 0044  
                             vfpfcnvrt@fp 0040                               vfpfcnvrt@ll 0048  
                          __end_of___wmul 21FE                   ?_restablecerDatosSensor 0001  
          __end_of_lecturaAnalogaSensores 1B98                                ?_UART_init 000F  
                              ?_UART_read 0001                       setRtc@datoCapturado 0008  
                 __size_of_dameHoraActual 002C                            __end_of_setRtc 162A  
                     __end_of_fijaHoraRtc 1C00                            __end_of_strlen 2100  
                     start_initialization 1F3C                              _estaSeco$770 0013  
                             __end_of_abs 208E                   __end_of_asignarHorarios 0EDA  
                             __end_of_pad 16F0         escribeHorariosMemoria@contMemoria 000B  
                  __end_of_desbordamiento 1C66                        __end_of_i2c_espera 21D8  
                           ??_escribe_rtc 0004                             ??_leer_eeprom 0005  
                        ??_escribe_eeprom 000A                       leeHorariosMemoria@i 0009  
                    constructorSensor@pin 000B                               _DHT11_Start 221E  
                           ??_lecturaWifi 000E                    ??_mostrarDatosSensores 0058  
                             vfprintf@fmt 0052                 __size_of_dameDatosSistema 00EA  
         __size_of_dameTemperaturaHumedad 00B4                                  ??___wmul 0005  
          __end_of_restablecerDatosSensor 1D2A                               __pdataBANK0 00FA  
                        __CFG_LPT1OSC$OFF 000000                         leer_rtc@direccion 0003  
                                ??_setRtc 0005                     __end_of_convertirDato 221E  
            asignarHorarios@datoCapturado 0010                                  ??_strlen 0003  
                 ?_escribeHorariosMemoria 0001                               __pbssCOMRAM 005E  
                           __pcstackBANK0 00AE                          ___aodiv@dividend 0001  
                         ?_desbordamiento 0001                          ??_setTiempoRegar 000F  
                       ?_dameHumedadSuelo 0001                         UART_printf@cadena 0002  
                           lecturaWifi@Rx 000E                        ??_dameHumedadSuelo 0003  
                       __size_of_leer_rtc 002A                         __size_of_estaSeco 0050  
                     __end_of_escribe_rtc 225C                       __end_of_leer_eeprom 20CA  
                               _dtoa$1005 002E                                 __pintcode 0008  
                           __pmediumconst 7BC6                                  ?___aldiv 0001  
                                ?___aodiv 0001                                  ?___aomod 0001  
                                ?___awdiv 0001                          ___aodiv@quotient 0013  
                             _fijaHoraRtc 1B98                       __end_of_lecturaWifi 121A  
                          _DHT11_ReadData 1DEA                                setRtc@dato 0007  
                             ??_UART_init 0013                               ??_UART_read 0001  
                       __size_of_vfprintf 0062               mostrarDatosSensores@humedad 00F5  
          __end_of_escribeHorariosMemoria 13D2                            _encenderBombas 0012  
                               _horaRegar 2130            dameTemperaturaHumedad@checkSum 000A  
                  _dameTemperaturaHumedad 17B4                          ?_asignarHorarios 0001  
                                ?_sprintf 00AE                            __size_of_fputc 00CA  
                          __size_of_fputs 0044                            __size_of_putch 0002  
                         ___aldiv@divisor 0005                           ___aldiv@counter 0009  
                          ___wmul@product 0005                                  _LATDbits 000F8C  
                                _PIE1bits 000F9D                      __size_of_i2c_detener 0008  
                                i2u280_40 1C58                                  i2u280_41 1C54  
                                _PIR1bits 000F9E                                  i2u277_40 1C10  
                                i2u277_41 1C0C                                  i2u278_40 1C20  
                                i2u278_41 1C1C                                  i2u279_40 1C36  
                                i2u279_41 1C32                   restablecerDatosSensor@i 000C  
                    __size_of_i2c_iniciar 0016                          __CFG_WDTPS$32768 000000  
                  _tiempoInactividadTrans 008D             leeHorariosMemoria@contMemoria 0007  
                     asignarHorarios@hora 000F                    __end_of_DHT11_ReadData 1E46  
                           ??_UART_printf 0004                    dameDatosSistema@buffer 00C2  
                               _vfpfcnvrt 07A4                                _ADCON0bits 000FC2  
                          _dameHoraActual 215C                         ___wmul@multiplier 0001  
              ??_mostrarDatosSensoresWIFI 0058                    __end_of_encenderBombas 02FA  
                           ??_mostrarMenu 0004                            UART_write@dato 0001  
                              ?_horaRegar 0001                     mostrarDatosSensores@i 00F6  
               __size_of_sistemaPrincipal 008A                  __end_of_i2c_reinicia_com 22CC  
                               copy_data0 1F50                               _escribe_rtc 223E  
                             _leer_eeprom 208E                              _VALOR_TIMER0 00FA  
              __end_of_leeHorariosMemoria 1564                                 estaSeco@s 0010  
                                __Hrparam 0000                              _minutosRegar 0085  
                             _lecturaWifi 1128                             UART_init@BAUD 000F  
                              vfprintf@ap 0054                                  __Lrparam 0000  
                              vfprintf@fp 0050                          _dameDatosSistema 121A  
dameTemperaturaHumedad@temperaturaDecimal 000D                       _esperaDatoConcluida 008B  
                        __size_of___aldiv 010C                           ?_DHT11_ReadData 0001  
                        __size_of___aodiv 0188                          __size_of___aomod 0164  
                        __size_of___awdiv 00C4                    __end_of_dameHoraActual 2188  
                              ?_vfpfcnvrt 0040                           DHT11_ReadData@i 0001  
                         ___aodiv@divisor 0009                           ___aodiv@counter 0011  
                         ?_encenderBombas 0001                                sprintf@fmt 00B0  
                __size_of_i2c_recibe_dato 001A                       __end_of_UART_printf 1DEA  
                                __ptext10 1C66                                  __ptext11 0EDA  
                                __ptext20 221E                                  __ptext12 1128  
                                __ptext21 1DEA                                  __ptext13 1CC8  
                                __ptext30 02FA                                  __ptext22 16F0  
                                __ptext14 22A2                                  __ptext31 162A  
                                __ptext23 1B98                                  __ptext15 0C44  
                                __ptext40 1304                                  __ptext32 20CA  
                                __ptext24 1564                                  __ptext16 1B30  
                                __ptext41 2100                                  __ptext33 1FCA  
                                __ptext25 223E                                  __ptext17 1F84  
                                __ptext50 22AE                                  __ptext42 1E46  
                                __ptext34 13D2                                  __ptext26 121A  
                                __ptext18 17B4                                  __ptext51 22D4  
                                __ptext43 1D8C                                  __ptext35 22E0  
                                __ptext27 1E9A                                  __ptext19 200E  
                                __ptext52 21B2                                  __ptext44 2276  
                                __ptext36 204E                                  __ptext28 1D2A  
                                __ptext53 19A0                                  __ptext45 149C  
                                __ptext37 0AE0                                  __ptext29 07A4  
                                __ptext54 21D8                                  __ptext46 208E  
                                __ptext38 0958                                  __ptext55 228C  
                                __ptext47 22C4                                  __ptext39 0D92  
                                __ptext56 22BA                                  __ptext48 225C  
                                __ptext57 1AC0                                  __ptext49 22CC  
                                __ptext58 101C                       __end_of_mostrarMenu 1CC8  
                        __size_of_sprintf 0052                                  _leer_rtc 2188  
                                _estaSeco 1EEC                __end_of_inicializarObjetos 1A36  
                                _byteUart 008C                    __size_of_configurarAdc 000A  
                 __size_of_check_response 0040                       inicializarObjetos@i 0007  
                           __size_of_main 0096                             __size_of_dtoa 02E2  
                                _horarios 0100                              ?_DHT11_Start 0001  
    dameTemperaturaHumedad@humedadDecimal 000C                                  _segundos 0088  
                         encenderBombas@i 0018                                  _sensores 0060  
               mostrarDatosSensoresWIFI@i 00F6                                  int$flags 005F  
                                _vfprintf 1D2A                           ?_dameHoraActual 0001  
                 __size_of_i2c_envia_dato 000C                   __size_of_i2c_inicia_com 0008  
                i2c_recibe_dato@datoleido 0002                          ___aomod@dividend 0001  
                   __CFG_CPUDIV$OSC1_PLL2 000000                          ??_desbordamiento 0001  
                  __size_of_sistemaRegado 00A2                                _INTCONbits 000FF2  
                      constructorSensor@s 0007                               ??_horaRegar 0003  
         mostrarDatosSensoresWIFI@humedad 00F5                   escribe_eeprom@direccion 0007  
                                intlevel2 0000                                 sprintf@ap 00BA  
                         escribe_rtc@dato 0003                                  setRtc@Rx 000B  
                         setRtc@direccion 0006                         asignarHorarios@Rx 0013  
           __size_of_mostrarDatosSensores 014E                             _overflowTimer 0086  
                            ?_fijaHoraRtc 0001         dameTemperaturaHumedad@temperatura 000F  
                         ___aomod@divisor 0009                 __size_of_dameHumedadSuelo 0046  
                             ??_vfpfcnvrt 0046                           ___aomod@counter 0011  
                             _UART_printf 1D8C                             _configurarAdc 22BA  
        __end_of_mostrarDatosSensoresWIFI 101C                                  sprintf@f 00BC  
                                sprintf@s 00AE                   ?_dameTemperaturaHumedad 0004  
                             _mostrarMenu 1C66                              ___aldiv@sign 000A  
                        asignarHorarios@i 0011                          _sistemaPrincipal 1A36  
                         leer_eeprom@dato 0006                               _SSPCON2bits 000FC5  
                              _UART_write 2276                              ___aodiv@sign 0012  
                       ??_i2c_recibe_dato 0002                    __size_of_convertirDato 0020  
                    leer_eeprom@direccion 0003                             _sistemaRegado 1868  
                            ___aomod@sign 0012                  ??_lecturaAnalogaSensores 0007  
